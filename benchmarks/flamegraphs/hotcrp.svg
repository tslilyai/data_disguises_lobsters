<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="726" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="709.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="709.00"> </text><svg id="frames" x="10" width="1180"><g><title>__GI___libc_malloc (22 samples, 0.21%)</title><rect x="1.4384%" y="629" width="0.2068%" height="15" fill="rgb(227,0,7)"/><text x="1.6884%" y="639.50"></text></g><g><title>_int_free (42 samples, 0.39%)</title><rect x="1.8144%" y="629" width="0.3948%" height="15" fill="rgb(217,0,24)"/><text x="2.0644%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.16%)</title><rect x="2.3033%" y="629" width="0.1598%" height="15" fill="rgb(221,193,54)"/><text x="2.5533%" y="639.50"></text></g><g><title>core::fmt::write (17 samples, 0.16%)</title><rect x="2.5289%" y="629" width="0.1598%" height="15" fill="rgb(248,212,6)"/><text x="2.7789%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.12%)</title><rect x="2.7357%" y="629" width="0.1222%" height="15" fill="rgb(208,68,35)"/><text x="2.9857%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (16 samples, 0.15%)</title><rect x="3.4126%" y="629" width="0.1504%" height="15" fill="rgb(232,128,0)"/><text x="3.6626%" y="639.50"></text></g><g><title>[[heap]] (308 samples, 2.90%)</title><rect x="0.7709%" y="645" width="2.8956%" height="15" fill="rgb(207,160,47)"/><text x="1.0209%" y="655.50">[[..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (46 samples, 0.43%)</title><rect x="3.6664%" y="629" width="0.4325%" height="15" fill="rgb(228,23,34)"/><text x="3.9164%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.33%)</title><rect x="4.8040%" y="629" width="0.3290%" height="15" fill="rgb(218,30,26)"/><text x="5.0540%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.10%)</title><rect x="5.2834%" y="629" width="0.1034%" height="15" fill="rgb(220,122,19)"/><text x="5.5334%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (79 samples, 0.74%)</title><rect x="5.8475%" y="629" width="0.7427%" height="15" fill="rgb(250,228,42)"/><text x="6.0975%" y="639.50"></text></g><g><title>[[stack]] (315 samples, 2.96%)</title><rect x="3.6664%" y="645" width="2.9614%" height="15" fill="rgb(240,193,28)"/><text x="3.9164%" y="655.50">[[s..</text></g><g><title>[anon] (12 samples, 0.11%)</title><rect x="6.6466%" y="645" width="0.1128%" height="15" fill="rgb(216,20,37)"/><text x="6.8966%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.13%)</title><rect x="6.7970%" y="629" width="0.1316%" height="15" fill="rgb(206,188,39)"/><text x="7.0470%" y="639.50"></text></g><g><title>[hotcrp] (72 samples, 0.68%)</title><rect x="6.7594%" y="645" width="0.6769%" height="15" fill="rgb(217,207,13)"/><text x="7.0094%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.12%)</title><rect x="7.3141%" y="629" width="0.1222%" height="15" fill="rgb(231,73,38)"/><text x="7.5641%" y="639.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.13%)</title><rect x="7.4363%" y="645" width="0.1316%" height="15" fill="rgb(225,20,46)"/><text x="7.6863%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (14 samples, 0.13%)</title><rect x="8.8089%" y="629" width="0.1316%" height="15" fill="rgb(210,31,41)"/><text x="9.0589%" y="639.50"></text></g><g><title>[hotcrp] (17 samples, 0.16%)</title><rect x="9.0533%" y="629" width="0.1598%" height="15" fill="rgb(221,200,47)"/><text x="9.3033%" y="639.50"></text></g><g><title>[unknown] (137 samples, 1.29%)</title><rect x="9.2131%" y="629" width="1.2880%" height="15" fill="rgb(226,26,5)"/><text x="9.4631%" y="639.50"></text></g><g><title>[unknown] (134 samples, 1.26%)</title><rect x="9.2413%" y="613" width="1.2598%" height="15" fill="rgb(249,33,26)"/><text x="9.4913%" y="623.50"></text></g><g><title>[unknown] (134 samples, 1.26%)</title><rect x="9.2413%" y="597" width="1.2598%" height="15" fill="rgb(235,183,28)"/><text x="9.4913%" y="607.50"></text></g><g><title>[unknown] (130 samples, 1.22%)</title><rect x="9.2789%" y="581" width="1.2221%" height="15" fill="rgb(221,5,38)"/><text x="9.5289%" y="591.50"></text></g><g><title>[unknown] (109 samples, 1.02%)</title><rect x="9.4764%" y="565" width="1.0247%" height="15" fill="rgb(247,18,42)"/><text x="9.7264%" y="575.50"></text></g><g><title>[unknown] (96 samples, 0.90%)</title><rect x="9.5986%" y="549" width="0.9025%" height="15" fill="rgb(241,131,45)"/><text x="9.8486%" y="559.50"></text></g><g><title>[unknown] (86 samples, 0.81%)</title><rect x="9.6926%" y="533" width="0.8085%" height="15" fill="rgb(249,31,29)"/><text x="9.9426%" y="543.50"></text></g><g><title>[unknown] (74 samples, 0.70%)</title><rect x="9.8054%" y="517" width="0.6957%" height="15" fill="rgb(225,111,53)"/><text x="10.0554%" y="527.50"></text></g><g><title>[unknown] (58 samples, 0.55%)</title><rect x="9.9558%" y="501" width="0.5453%" height="15" fill="rgb(238,160,17)"/><text x="10.2058%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="10.0968%" y="485" width="0.4042%" height="15" fill="rgb(214,148,48)"/><text x="10.3468%" y="495.50"></text></g><g><title>[unknown] (35 samples, 0.33%)</title><rect x="10.1720%" y="469" width="0.3290%" height="15" fill="rgb(232,36,49)"/><text x="10.4220%" y="479.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="10.2284%" y="453" width="0.2726%" height="15" fill="rgb(209,103,24)"/><text x="10.4784%" y="463.50"></text></g><g><title>[unknown] (25 samples, 0.24%)</title><rect x="10.2661%" y="437" width="0.2350%" height="15" fill="rgb(229,88,8)"/><text x="10.5161%" y="447.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="10.3413%" y="421" width="0.1598%" height="15" fill="rgb(213,181,19)"/><text x="10.5913%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="10.3789%" y="405" width="0.1222%" height="15" fill="rgb(254,191,54)"/><text x="10.6289%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="10.3883%" y="389" width="0.1128%" height="15" fill="rgb(241,83,37)"/><text x="10.6383%" y="399.50"></text></g><g><title>__GI___clone (1,689 samples, 15.88%)</title><rect x="10.5011%" y="629" width="15.8785%" height="15" fill="rgb(233,36,39)"/><text x="10.7511%" y="639.50">__GI___clone</text></g><g><title>[unknown] (1,688 samples, 15.87%)</title><rect x="10.5105%" y="613" width="15.8691%" height="15" fill="rgb(226,3,54)"/><text x="10.7605%" y="623.50">[unknown]</text></g><g><title>[unknown] (1,687 samples, 15.86%)</title><rect x="10.5199%" y="597" width="15.8597%" height="15" fill="rgb(245,192,40)"/><text x="10.7699%" y="607.50">[unknown]</text></g><g><title>[unknown] (1,663 samples, 15.63%)</title><rect x="10.7455%" y="581" width="15.6341%" height="15" fill="rgb(238,167,29)"/><text x="10.9955%" y="591.50">[unknown]</text></g><g><title>[unknown] (1,660 samples, 15.61%)</title><rect x="10.7737%" y="565" width="15.6059%" height="15" fill="rgb(232,182,51)"/><text x="11.0237%" y="575.50">[unknown]</text></g><g><title>[unknown] (1,651 samples, 15.52%)</title><rect x="10.8583%" y="549" width="15.5213%" height="15" fill="rgb(231,60,39)"/><text x="11.1083%" y="559.50">[unknown]</text></g><g><title>[unknown] (1,560 samples, 14.67%)</title><rect x="11.7138%" y="533" width="14.6658%" height="15" fill="rgb(208,69,12)"/><text x="11.9638%" y="543.50">[unknown]</text></g><g><title>[unknown] (1,359 samples, 12.78%)</title><rect x="13.6035%" y="517" width="12.7762%" height="15" fill="rgb(235,93,37)"/><text x="13.8535%" y="527.50">[unknown]</text></g><g><title>[unknown] (1,111 samples, 10.44%)</title><rect x="15.9349%" y="501" width="10.4447%" height="15" fill="rgb(213,116,39)"/><text x="16.1849%" y="511.50">[unknown]</text></g><g><title>[unknown] (797 samples, 7.49%)</title><rect x="18.8869%" y="485" width="7.4927%" height="15" fill="rgb(222,207,29)"/><text x="19.1369%" y="495.50">[unknown]</text></g><g><title>[unknown] (512 samples, 4.81%)</title><rect x="21.5662%" y="469" width="4.8134%" height="15" fill="rgb(206,96,30)"/><text x="21.8162%" y="479.50">[unkno..</text></g><g><title>[unknown] (358 samples, 3.37%)</title><rect x="23.0140%" y="453" width="3.3656%" height="15" fill="rgb(218,138,4)"/><text x="23.2640%" y="463.50">[un..</text></g><g><title>[unknown] (317 samples, 2.98%)</title><rect x="23.3995%" y="437" width="2.9802%" height="15" fill="rgb(250,191,14)"/><text x="23.6495%" y="447.50">[un..</text></g><g><title>[unknown] (257 samples, 2.42%)</title><rect x="23.9635%" y="421" width="2.4161%" height="15" fill="rgb(239,60,40)"/><text x="24.2135%" y="431.50">[u..</text></g><g><title>[unknown] (153 samples, 1.44%)</title><rect x="24.9412%" y="405" width="1.4384%" height="15" fill="rgb(206,27,48)"/><text x="25.1912%" y="415.50"></text></g><g><title>[unknown] (59 samples, 0.55%)</title><rect x="25.8250%" y="389" width="0.5547%" height="15" fill="rgb(225,35,8)"/><text x="26.0750%" y="399.50"></text></g><g><title>[unknown] (37 samples, 0.35%)</title><rect x="26.0318%" y="373" width="0.3478%" height="15" fill="rgb(250,213,24)"/><text x="26.2818%" y="383.50"></text></g><g><title>[unknown] (35 samples, 0.33%)</title><rect x="26.0506%" y="357" width="0.3290%" height="15" fill="rgb(247,123,22)"/><text x="26.3006%" y="367.50"></text></g><g><title>[unknown] (30 samples, 0.28%)</title><rect x="26.0976%" y="341" width="0.2820%" height="15" fill="rgb(231,138,38)"/><text x="26.3476%" y="351.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="26.1070%" y="325" width="0.2726%" height="15" fill="rgb(231,145,46)"/><text x="26.3570%" y="335.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="26.2480%" y="309" width="0.1316%" height="15" fill="rgb(251,118,11)"/><text x="26.4980%" y="319.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="26.2668%" y="293" width="0.1128%" height="15" fill="rgb(217,147,25)"/><text x="26.5168%" y="303.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.12%)</title><rect x="26.3796%" y="629" width="0.1222%" height="15" fill="rgb(247,81,37)"/><text x="26.6296%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.10%)</title><rect x="26.7275%" y="373" width="0.1034%" height="15" fill="rgb(209,12,38)"/><text x="26.9775%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.37%)</title><rect x="26.6052%" y="437" width="0.3666%" height="15" fill="rgb(227,1,9)"/><text x="26.8552%" y="447.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (39 samples, 0.37%)</title><rect x="26.6052%" y="421" width="0.3666%" height="15" fill="rgb(248,47,43)"/><text x="26.8552%" y="431.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (39 samples, 0.37%)</title><rect x="26.6052%" y="405" width="0.3666%" height="15" fill="rgb(221,10,30)"/><text x="26.8552%" y="415.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (39 samples, 0.37%)</title><rect x="26.6052%" y="389" width="0.3666%" height="15" fill="rgb(210,229,1)"/><text x="26.8552%" y="399.50"></text></g><g><title>core::str::pattern::StrSearcher::new (15 samples, 0.14%)</title><rect x="26.8309%" y="373" width="0.1410%" height="15" fill="rgb(222,148,37)"/><text x="27.0809%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (13 samples, 0.12%)</title><rect x="26.8497%" y="357" width="0.1222%" height="15" fill="rgb(234,67,33)"/><text x="27.0997%" y="367.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (40 samples, 0.38%)</title><rect x="26.6052%" y="453" width="0.3760%" height="15" fill="rgb(247,98,35)"/><text x="26.8552%" y="463.50"></text></g><g><title>decor::is_guise (35 samples, 0.33%)</title><rect x="26.9813%" y="453" width="0.3290%" height="15" fill="rgb(247,138,52)"/><text x="27.2313%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (28 samples, 0.26%)</title><rect x="27.0471%" y="437" width="0.2632%" height="15" fill="rgb(213,79,30)"/><text x="27.2971%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (26 samples, 0.24%)</title><rect x="27.0659%" y="421" width="0.2444%" height="15" fill="rgb(246,177,23)"/><text x="27.3159%" y="431.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.18%)</title><rect x="27.1317%" y="405" width="0.1786%" height="15" fill="rgb(230,62,27)"/><text x="27.3817%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (52 samples, 0.49%)</title><rect x="27.6112%" y="373" width="0.4889%" height="15" fill="rgb(216,154,8)"/><text x="27.8612%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85 samples, 0.80%)</title><rect x="27.3103%" y="437" width="0.7991%" height="15" fill="rgb(244,35,45)"/><text x="27.5603%" y="447.50"></text></g><g><title>decor::vault::vec_to_expr (72 samples, 0.68%)</title><rect x="27.4325%" y="421" width="0.6769%" height="15" fill="rgb(251,115,12)"/><text x="27.6825%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (69 samples, 0.65%)</title><rect x="27.4608%" y="405" width="0.6487%" height="15" fill="rgb(240,54,50)"/><text x="27.7108%" y="415.50"></text></g><g><title>decor::types::_::&lt;impl serde::ser::Serialize for decor::types::RowVal&gt;::serialize (67 samples, 0.63%)</title><rect x="27.4796%" y="389" width="0.6299%" height="15" fill="rgb(233,84,52)"/><text x="27.7296%" y="399.50"></text></g><g><title>__GI___libc_free (29 samples, 0.27%)</title><rect x="29.5290%" y="325" width="0.2726%" height="15" fill="rgb(207,117,47)"/><text x="29.7790%" y="335.50"></text></g><g><title>checked_request2size (13 samples, 0.12%)</title><rect x="30.2247%" y="309" width="0.1222%" height="15" fill="rgb(249,43,39)"/><text x="30.4747%" y="319.50"></text></g><g><title>__GI___libc_malloc (81 samples, 0.76%)</title><rect x="29.8016%" y="325" width="0.7615%" height="15" fill="rgb(209,38,44)"/><text x="30.0516%" y="335.50"></text></g><g><title>tcache_get (23 samples, 0.22%)</title><rect x="30.3469%" y="309" width="0.2162%" height="15" fill="rgb(236,212,23)"/><text x="30.5969%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (40 samples, 0.38%)</title><rect x="30.5819%" y="325" width="0.3760%" height="15" fill="rgb(242,79,21)"/><text x="30.8319%" y="335.50"></text></g><g><title>__rdl_dealloc (13 samples, 0.12%)</title><rect x="31.0050%" y="325" width="0.1222%" height="15" fill="rgb(211,96,35)"/><text x="31.2550%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13 samples, 0.12%)</title><rect x="31.0050%" y="309" width="0.1222%" height="15" fill="rgb(253,215,40)"/><text x="31.2550%" y="319.50"></text></g><g><title>_int_free (90 samples, 0.85%)</title><rect x="31.2870%" y="325" width="0.8461%" height="15" fill="rgb(211,81,21)"/><text x="31.5370%" y="335.50"></text></g><g><title>tcache_put (23 samples, 0.22%)</title><rect x="31.9169%" y="309" width="0.2162%" height="15" fill="rgb(208,190,38)"/><text x="32.1669%" y="319.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (447 samples, 4.20%)</title><rect x="28.1094%" y="357" width="4.2023%" height="15" fill="rgb(235,213,38)"/><text x="28.3594%" y="367.50">&lt;sql_..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (447 samples, 4.20%)</title><rect x="28.1094%" y="341" width="4.2023%" height="15" fill="rgb(237,122,38)"/><text x="28.3594%" y="351.50">sql_p..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.18%)</title><rect x="32.1331%" y="325" width="0.1786%" height="15" fill="rgb(244,218,35)"/><text x="32.3831%" y="335.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (451 samples, 4.24%)</title><rect x="28.1094%" y="373" width="4.2399%" height="15" fill="rgb(240,68,47)"/><text x="28.3594%" y="383.50">&lt;sql_..</text></g><g><title>decor::disguise::apply (634 samples, 5.96%)</title><rect x="26.6052%" y="469" width="5.9603%" height="15" fill="rgb(210,16,53)"/><text x="26.8552%" y="479.50">decor::d..</text></g><g><title>decor::vault::insert_vault_entries (559 samples, 5.26%)</title><rect x="27.3103%" y="453" width="5.2552%" height="15" fill="rgb(235,124,12)"/><text x="27.5603%" y="463.50">decor:..</text></g><g><title>core::fmt::write (474 samples, 4.46%)</title><rect x="28.1094%" y="437" width="4.4561%" height="15" fill="rgb(224,169,11)"/><text x="28.3594%" y="447.50">core:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (474 samples, 4.46%)</title><rect x="28.1094%" y="421" width="4.4561%" height="15" fill="rgb(250,166,2)"/><text x="28.3594%" y="431.50">&lt;sql_..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (474 samples, 4.46%)</title><rect x="28.1094%" y="405" width="4.4561%" height="15" fill="rgb(242,216,29)"/><text x="28.3594%" y="415.50">&lt;sql_..</text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (474 samples, 4.46%)</title><rect x="28.1094%" y="389" width="4.4561%" height="15" fill="rgb(230,116,27)"/><text x="28.3594%" y="399.50">&lt;sql_..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (23 samples, 0.22%)</title><rect x="32.3493%" y="373" width="0.2162%" height="15" fill="rgb(228,99,48)"/><text x="32.5993%" y="383.50"></text></g><g><title>core::fmt::write (12 samples, 0.11%)</title><rect x="32.4528%" y="357" width="0.1128%" height="15" fill="rgb(253,11,6)"/><text x="32.7028%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (97 samples, 0.91%)</title><rect x="32.6502%" y="357" width="0.9119%" height="15" fill="rgb(247,143,39)"/><text x="32.9002%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (96 samples, 0.90%)</title><rect x="32.6596%" y="341" width="0.9025%" height="15" fill="rgb(236,97,10)"/><text x="32.9096%" y="351.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.16%)</title><rect x="33.6185%" y="341" width="0.1598%" height="15" fill="rgb(233,208,19)"/><text x="33.8685%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="33.6091%" y="357" width="0.2068%" height="15" fill="rgb(216,164,2)"/><text x="33.8591%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (164 samples, 1.54%)</title><rect x="32.5656%" y="421" width="1.5418%" height="15" fill="rgb(220,129,5)"/><text x="32.8156%" y="431.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (164 samples, 1.54%)</title><rect x="32.5656%" y="405" width="1.5418%" height="15" fill="rgb(242,17,10)"/><text x="32.8156%" y="415.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (164 samples, 1.54%)</title><rect x="32.5656%" y="389" width="1.5418%" height="15" fill="rgb(242,107,0)"/><text x="32.8156%" y="399.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (164 samples, 1.54%)</title><rect x="32.5656%" y="373" width="1.5418%" height="15" fill="rgb(251,28,31)"/><text x="32.8156%" y="383.50"></text></g><g><title>core::str::pattern::StrSearcher::new (31 samples, 0.29%)</title><rect x="33.8159%" y="357" width="0.2914%" height="15" fill="rgb(233,223,10)"/><text x="34.0659%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (24 samples, 0.23%)</title><rect x="33.8817%" y="341" width="0.2256%" height="15" fill="rgb(215,21,27)"/><text x="34.1317%" y="351.50"></text></g><g><title>decor::vault::print_as_filters (165 samples, 1.55%)</title><rect x="32.5656%" y="469" width="1.5512%" height="15" fill="rgb(232,23,21)"/><text x="32.8156%" y="479.50"></text></g><g><title>decor::vault::get_vault_entries_with_constraint (165 samples, 1.55%)</title><rect x="32.5656%" y="453" width="1.5512%" height="15" fill="rgb(244,5,23)"/><text x="32.8156%" y="463.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (165 samples, 1.55%)</title><rect x="32.5656%" y="437" width="1.5512%" height="15" fill="rgb(226,81,46)"/><text x="32.8156%" y="447.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (12 samples, 0.11%)</title><rect x="34.1168%" y="437" width="0.1128%" height="15" fill="rgb(247,70,30)"/><text x="34.3668%" y="447.50"></text></g><g><title>hotcrp::datagen::papers::insert_papers (14 samples, 0.13%)</title><rect x="34.1168%" y="453" width="0.1316%" height="15" fill="rgb(212,68,19)"/><text x="34.3668%" y="463.50"></text></g><g><title>hotcrp::datagen::review_preferences::insert_review_preference (11 samples, 0.10%)</title><rect x="34.3424%" y="437" width="0.1034%" height="15" fill="rgb(240,187,13)"/><text x="34.5924%" y="447.50"></text></g><g><title>__libc_start_main (840 samples, 7.90%)</title><rect x="26.6052%" y="629" width="7.8970%" height="15" fill="rgb(223,113,26)"/><text x="26.8552%" y="639.50">__libc_star..</text></g><g><title>main (840 samples, 7.90%)</title><rect x="26.6052%" y="613" width="7.8970%" height="15" fill="rgb(206,192,2)"/><text x="26.8552%" y="623.50">main</text></g><g><title>std::rt::lang_start_internal (840 samples, 7.90%)</title><rect x="26.6052%" y="597" width="7.8970%" height="15" fill="rgb(241,108,4)"/><text x="26.8552%" y="607.50">std::rt::la..</text></g><g><title>std::panic::catch_unwind (840 samples, 7.90%)</title><rect x="26.6052%" y="581" width="7.8970%" height="15" fill="rgb(247,173,49)"/><text x="26.8552%" y="591.50">std::panic:..</text></g><g><title>std::panicking::try (840 samples, 7.90%)</title><rect x="26.6052%" y="565" width="7.8970%" height="15" fill="rgb(224,114,35)"/><text x="26.8552%" y="575.50">std::panick..</text></g><g><title>std::panicking::try::do_call (840 samples, 7.90%)</title><rect x="26.6052%" y="549" width="7.8970%" height="15" fill="rgb(245,159,27)"/><text x="26.8552%" y="559.50">std::panick..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (840 samples, 7.90%)</title><rect x="26.6052%" y="533" width="7.8970%" height="15" fill="rgb(245,172,44)"/><text x="26.8552%" y="543.50">core::ops::..</text></g><g><title>std::rt::lang_start::_{{closure}} (840 samples, 7.90%)</title><rect x="26.6052%" y="517" width="7.8970%" height="15" fill="rgb(236,23,11)"/><text x="26.8552%" y="527.50">std::rt::la..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (840 samples, 7.90%)</title><rect x="26.6052%" y="501" width="7.8970%" height="15" fill="rgb(205,117,38)"/><text x="26.8552%" y="511.50">std::sys_co..</text></g><g><title>hotcrp::main (840 samples, 7.90%)</title><rect x="26.6052%" y="485" width="7.8970%" height="15" fill="rgb(237,72,25)"/><text x="26.8552%" y="495.50">hotcrp::main</text></g><g><title>hotcrp::datagen::datagen::populate_database (41 samples, 0.39%)</title><rect x="34.1168%" y="469" width="0.3854%" height="15" fill="rgb(244,70,9)"/><text x="34.3668%" y="479.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (27 samples, 0.25%)</title><rect x="34.2484%" y="453" width="0.2538%" height="15" fill="rgb(217,125,39)"/><text x="34.4984%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (21 samples, 0.20%)</title><rect x="34.5116%" y="629" width="0.1974%" height="15" fill="rgb(235,36,10)"/><text x="34.7616%" y="639.50"></text></g><g><title>_int_free (22 samples, 0.21%)</title><rect x="34.7842%" y="629" width="0.2068%" height="15" fill="rgb(251,123,47)"/><text x="35.0342%" y="639.50"></text></g><g><title>_int_realloc (12 samples, 0.11%)</title><rect x="35.0099%" y="629" width="0.1128%" height="15" fill="rgb(221,13,13)"/><text x="35.2599%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.48%)</title><rect x="35.1321%" y="629" width="0.4795%" height="15" fill="rgb(238,131,9)"/><text x="35.3821%" y="639.50"></text></g><g><title>core::fmt::write (16 samples, 0.15%)</title><rect x="35.7808%" y="629" width="0.1504%" height="15" fill="rgb(211,50,8)"/><text x="36.0308%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.16%)</title><rect x="35.9312%" y="629" width="0.1598%" height="15" fill="rgb(245,182,24)"/><text x="36.1812%" y="639.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="36.4953%" y="533" width="0.2068%" height="15" fill="rgb(242,14,37)"/><text x="36.7453%" y="543.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="36.4953%" y="517" width="0.2068%" height="15" fill="rgb(246,228,12)"/><text x="36.7453%" y="527.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="36.5047%" y="501" width="0.1974%" height="15" fill="rgb(213,55,15)"/><text x="36.7547%" y="511.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="36.5047%" y="485" width="0.1974%" height="15" fill="rgb(209,9,3)"/><text x="36.7547%" y="495.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="36.5047%" y="469" width="0.1974%" height="15" fill="rgb(230,59,30)"/><text x="36.7547%" y="479.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="36.5705%" y="453" width="0.1316%" height="15" fill="rgb(209,121,21)"/><text x="36.8205%" y="463.50"></text></g><g><title>malloc_consolidate (24 samples, 0.23%)</title><rect x="36.7021%" y="533" width="0.2256%" height="15" fill="rgb(220,109,13)"/><text x="36.9521%" y="543.50"></text></g><g><title>__GI___libc_malloc (64 samples, 0.60%)</title><rect x="36.3542%" y="565" width="0.6017%" height="15" fill="rgb(232,18,1)"/><text x="36.6042%" y="575.50"></text></g><g><title>_int_malloc (63 samples, 0.59%)</title><rect x="36.3636%" y="549" width="0.5923%" height="15" fill="rgb(215,41,42)"/><text x="36.6136%" y="559.50"></text></g><g><title>core::fmt::write (14 samples, 0.13%)</title><rect x="37.1345%" y="565" width="0.1316%" height="15" fill="rgb(224,123,36)"/><text x="37.3845%" y="575.50"></text></g><g><title>alloc::fmt::format (17 samples, 0.16%)</title><rect x="37.3132%" y="549" width="0.1598%" height="15" fill="rgb(240,125,3)"/><text x="37.5632%" y="559.50"></text></g><g><title>core::ops::function::Fn::call (129 samples, 1.21%)</title><rect x="36.2696%" y="597" width="1.2127%" height="15" fill="rgb(205,98,50)"/><text x="36.5196%" y="607.50"></text></g><g><title>hotcrp::datagen::users::get_insert_guise_contact_info_vals (129 samples, 1.21%)</title><rect x="36.2696%" y="581" width="1.2127%" height="15" fill="rgb(205,185,37)"/><text x="36.5196%" y="591.50"></text></g><g><title>hotcrp::datagen::users::get_random_email (23 samples, 0.22%)</title><rect x="37.2661%" y="565" width="0.2162%" height="15" fill="rgb(238,207,15)"/><text x="37.5161%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (15 samples, 0.14%)</title><rect x="37.4824%" y="581" width="0.1410%" height="15" fill="rgb(213,199,42)"/><text x="37.7324%" y="591.50"></text></g><g><title>mysql::conn::Conn::_query (15 samples, 0.14%)</title><rect x="37.4824%" y="565" width="0.1410%" height="15" fill="rgb(235,201,11)"/><text x="37.7324%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (15 samples, 0.14%)</title><rect x="37.4824%" y="549" width="0.1410%" height="15" fill="rgb(207,46,11)"/><text x="37.7324%" y="559.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.14%)</title><rect x="37.4824%" y="533" width="0.1410%" height="15" fill="rgb(241,35,35)"/><text x="37.7324%" y="543.50"></text></g><g><title>_int_malloc (15 samples, 0.14%)</title><rect x="37.4824%" y="517" width="0.1410%" height="15" fill="rgb(243,32,47)"/><text x="37.7324%" y="527.50"></text></g><g><title>malloc_consolidate (15 samples, 0.14%)</title><rect x="37.4824%" y="501" width="0.1410%" height="15" fill="rgb(247,202,23)"/><text x="37.7324%" y="511.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (21 samples, 0.20%)</title><rect x="37.4824%" y="597" width="0.1974%" height="15" fill="rgb(219,102,11)"/><text x="37.7324%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.13%)</title><rect x="37.7644%" y="565" width="0.1316%" height="15" fill="rgb(243,110,44)"/><text x="38.0144%" y="575.50"></text></g><g><title>[unknown] (180 samples, 1.69%)</title><rect x="38.4225%" y="373" width="1.6922%" height="15" fill="rgb(222,74,54)"/><text x="38.6725%" y="383.50"></text></g><g><title>[unknown] (178 samples, 1.67%)</title><rect x="38.4413%" y="357" width="1.6734%" height="15" fill="rgb(216,99,12)"/><text x="38.6913%" y="367.50"></text></g><g><title>[unknown] (170 samples, 1.60%)</title><rect x="38.5165%" y="341" width="1.5982%" height="15" fill="rgb(226,22,26)"/><text x="38.7665%" y="351.50"></text></g><g><title>[unknown] (164 samples, 1.54%)</title><rect x="38.5729%" y="325" width="1.5418%" height="15" fill="rgb(217,163,10)"/><text x="38.8229%" y="335.50"></text></g><g><title>[unknown] (160 samples, 1.50%)</title><rect x="38.6105%" y="309" width="1.5042%" height="15" fill="rgb(213,25,53)"/><text x="38.8605%" y="319.50"></text></g><g><title>[unknown] (155 samples, 1.46%)</title><rect x="38.6575%" y="293" width="1.4572%" height="15" fill="rgb(252,105,26)"/><text x="38.9075%" y="303.50"></text></g><g><title>[unknown] (150 samples, 1.41%)</title><rect x="38.7045%" y="277" width="1.4102%" height="15" fill="rgb(220,39,43)"/><text x="38.9545%" y="287.50"></text></g><g><title>[unknown] (137 samples, 1.29%)</title><rect x="38.8267%" y="261" width="1.2880%" height="15" fill="rgb(229,68,48)"/><text x="39.0767%" y="271.50"></text></g><g><title>[unknown] (132 samples, 1.24%)</title><rect x="38.8737%" y="245" width="1.2410%" height="15" fill="rgb(252,8,32)"/><text x="39.1237%" y="255.50"></text></g><g><title>[unknown] (126 samples, 1.18%)</title><rect x="38.9301%" y="229" width="1.1845%" height="15" fill="rgb(223,20,43)"/><text x="39.1801%" y="239.50"></text></g><g><title>[unknown] (110 samples, 1.03%)</title><rect x="39.0806%" y="213" width="1.0341%" height="15" fill="rgb(229,81,49)"/><text x="39.3306%" y="223.50"></text></g><g><title>[unknown] (95 samples, 0.89%)</title><rect x="39.2216%" y="197" width="0.8931%" height="15" fill="rgb(236,28,36)"/><text x="39.4716%" y="207.50"></text></g><g><title>[unknown] (53 samples, 0.50%)</title><rect x="39.6164%" y="181" width="0.4983%" height="15" fill="rgb(249,185,26)"/><text x="39.8664%" y="191.50"></text></g><g><title>[unknown] (27 samples, 0.25%)</title><rect x="39.8609%" y="165" width="0.2538%" height="15" fill="rgb(249,174,33)"/><text x="40.1109%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="39.9925%" y="149" width="0.1222%" height="15" fill="rgb(233,201,37)"/><text x="40.2425%" y="159.50"></text></g><g><title>__libc_recv (190 samples, 1.79%)</title><rect x="38.3379%" y="405" width="1.7862%" height="15" fill="rgb(221,78,26)"/><text x="38.5879%" y="415.50">_..</text></g><g><title>__libc_recv (189 samples, 1.78%)</title><rect x="38.3473%" y="389" width="1.7768%" height="15" fill="rgb(250,127,30)"/><text x="38.5973%" y="399.50">_..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (192 samples, 1.81%)</title><rect x="38.3285%" y="485" width="1.8050%" height="15" fill="rgb(230,49,44)"/><text x="38.5785%" y="495.50">&lt;..</text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (191 samples, 1.80%)</title><rect x="38.3379%" y="469" width="1.7956%" height="15" fill="rgb(229,67,23)"/><text x="38.5879%" y="479.50">&lt;..</text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (191 samples, 1.80%)</title><rect x="38.3379%" y="453" width="1.7956%" height="15" fill="rgb(249,83,47)"/><text x="38.5879%" y="463.50">&lt;..</text></g><g><title>std::sys::unix::net::Socket::read (191 samples, 1.80%)</title><rect x="38.3379%" y="437" width="1.7956%" height="15" fill="rgb(215,43,3)"/><text x="38.5879%" y="447.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (191 samples, 1.80%)</title><rect x="38.3379%" y="421" width="1.7956%" height="15" fill="rgb(238,154,13)"/><text x="38.5879%" y="431.50">s..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.10%)</title><rect x="40.1429%" y="437" width="0.1034%" height="15" fill="rgb(219,56,2)"/><text x="40.3929%" y="447.50"></text></g><g><title>mysql::conn::Conn::read_packet (220 samples, 2.07%)</title><rect x="38.2345%" y="517" width="2.0683%" height="15" fill="rgb(233,0,4)"/><text x="38.4845%" y="527.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (217 samples, 2.04%)</title><rect x="38.2627%" y="501" width="2.0400%" height="15" fill="rgb(235,30,7)"/><text x="38.5127%" y="511.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (18 samples, 0.17%)</title><rect x="40.1335%" y="485" width="0.1692%" height="15" fill="rgb(250,79,13)"/><text x="40.3835%" y="495.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (17 samples, 0.16%)</title><rect x="40.1429%" y="469" width="0.1598%" height="15" fill="rgb(211,146,34)"/><text x="40.3929%" y="479.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (17 samples, 0.16%)</title><rect x="40.1429%" y="453" width="0.1598%" height="15" fill="rgb(228,22,38)"/><text x="40.3929%" y="463.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (246 samples, 2.31%)</title><rect x="38.1405%" y="533" width="2.3127%" height="15" fill="rgb(235,168,5)"/><text x="38.3905%" y="543.50">m..</text></g><g><title>mysql_common::packets::column_from_payload (16 samples, 0.15%)</title><rect x="40.3027%" y="517" width="0.1504%" height="15" fill="rgb(221,155,16)"/><text x="40.5527%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (408 samples, 3.84%)</title><rect x="37.9430%" y="565" width="3.8357%" height="15" fill="rgb(215,215,53)"/><text x="38.1930%" y="575.50">&lt;mys..</text></g><g><title>mysql::conn::Conn::_query (397 samples, 3.73%)</title><rect x="38.0464%" y="549" width="3.7323%" height="15" fill="rgb(223,4,10)"/><text x="38.2964%" y="559.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (141 samples, 1.33%)</title><rect x="40.4531%" y="533" width="1.3256%" height="15" fill="rgb(234,103,6)"/><text x="40.7031%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (130 samples, 1.22%)</title><rect x="40.5565%" y="517" width="1.2221%" height="15" fill="rgb(227,97,0)"/><text x="40.8065%" y="527.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (128 samples, 1.20%)</title><rect x="40.5754%" y="501" width="1.2033%" height="15" fill="rgb(234,150,53)"/><text x="40.8254%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (128 samples, 1.20%)</title><rect x="40.5754%" y="485" width="1.2033%" height="15" fill="rgb(228,201,54)"/><text x="40.8254%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (128 samples, 1.20%)</title><rect x="40.5754%" y="469" width="1.2033%" height="15" fill="rgb(222,22,37)"/><text x="40.8254%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (128 samples, 1.20%)</title><rect x="40.5754%" y="453" width="1.2033%" height="15" fill="rgb(237,53,32)"/><text x="40.8254%" y="463.50"></text></g><g><title>__libc_write (128 samples, 1.20%)</title><rect x="40.5754%" y="437" width="1.2033%" height="15" fill="rgb(233,25,53)"/><text x="40.8254%" y="447.50"></text></g><g><title>__libc_write (127 samples, 1.19%)</title><rect x="40.5848%" y="421" width="1.1939%" height="15" fill="rgb(210,40,34)"/><text x="40.8348%" y="431.50"></text></g><g><title>[unknown] (127 samples, 1.19%)</title><rect x="40.5848%" y="405" width="1.1939%" height="15" fill="rgb(241,220,44)"/><text x="40.8348%" y="415.50"></text></g><g><title>[unknown] (126 samples, 1.18%)</title><rect x="40.5942%" y="389" width="1.1845%" height="15" fill="rgb(235,28,35)"/><text x="40.8442%" y="399.50"></text></g><g><title>[unknown] (113 samples, 1.06%)</title><rect x="40.7164%" y="373" width="1.0623%" height="15" fill="rgb(210,56,17)"/><text x="40.9664%" y="383.50"></text></g><g><title>[unknown] (112 samples, 1.05%)</title><rect x="40.7258%" y="357" width="1.0529%" height="15" fill="rgb(224,130,29)"/><text x="40.9758%" y="367.50"></text></g><g><title>[unknown] (109 samples, 1.02%)</title><rect x="40.7540%" y="341" width="1.0247%" height="15" fill="rgb(235,212,8)"/><text x="41.0040%" y="351.50"></text></g><g><title>[unknown] (107 samples, 1.01%)</title><rect x="40.7728%" y="325" width="1.0059%" height="15" fill="rgb(223,33,50)"/><text x="41.0228%" y="335.50"></text></g><g><title>[unknown] (104 samples, 0.98%)</title><rect x="40.8010%" y="309" width="0.9777%" height="15" fill="rgb(219,149,13)"/><text x="41.0510%" y="319.50"></text></g><g><title>[unknown] (100 samples, 0.94%)</title><rect x="40.8386%" y="293" width="0.9401%" height="15" fill="rgb(250,156,29)"/><text x="41.0886%" y="303.50"></text></g><g><title>[unknown] (98 samples, 0.92%)</title><rect x="40.8574%" y="277" width="0.9213%" height="15" fill="rgb(216,193,19)"/><text x="41.1074%" y="287.50"></text></g><g><title>[unknown] (94 samples, 0.88%)</title><rect x="40.8950%" y="261" width="0.8837%" height="15" fill="rgb(216,135,14)"/><text x="41.1450%" y="271.50"></text></g><g><title>[unknown] (89 samples, 0.84%)</title><rect x="40.9420%" y="245" width="0.8367%" height="15" fill="rgb(241,47,5)"/><text x="41.1920%" y="255.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="40.9984%" y="229" width="0.7803%" height="15" fill="rgb(233,42,35)"/><text x="41.2484%" y="239.50"></text></g><g><title>[unknown] (78 samples, 0.73%)</title><rect x="41.0454%" y="213" width="0.7333%" height="15" fill="rgb(231,13,6)"/><text x="41.2954%" y="223.50"></text></g><g><title>[unknown] (73 samples, 0.69%)</title><rect x="41.0924%" y="197" width="0.6863%" height="15" fill="rgb(207,181,40)"/><text x="41.3424%" y="207.50"></text></g><g><title>[unknown] (67 samples, 0.63%)</title><rect x="41.1488%" y="181" width="0.6299%" height="15" fill="rgb(254,173,49)"/><text x="41.3988%" y="191.50"></text></g><g><title>[unknown] (54 samples, 0.51%)</title><rect x="41.2710%" y="165" width="0.5077%" height="15" fill="rgb(221,1,38)"/><text x="41.5210%" y="175.50"></text></g><g><title>[unknown] (52 samples, 0.49%)</title><rect x="41.2898%" y="149" width="0.4889%" height="15" fill="rgb(206,124,46)"/><text x="41.5398%" y="159.50"></text></g><g><title>[unknown] (48 samples, 0.45%)</title><rect x="41.3274%" y="133" width="0.4513%" height="15" fill="rgb(249,21,11)"/><text x="41.5774%" y="143.50"></text></g><g><title>[unknown] (39 samples, 0.37%)</title><rect x="41.4121%" y="117" width="0.3666%" height="15" fill="rgb(222,201,40)"/><text x="41.6621%" y="127.50"></text></g><g><title>[unknown] (36 samples, 0.34%)</title><rect x="41.4403%" y="101" width="0.3384%" height="15" fill="rgb(235,61,29)"/><text x="41.6903%" y="111.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="41.6001%" y="85" width="0.1786%" height="15" fill="rgb(219,207,3)"/><text x="41.8501%" y="95.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (11 samples, 0.10%)</title><rect x="41.8257%" y="549" width="0.1034%" height="15" fill="rgb(222,56,46)"/><text x="42.0757%" y="559.50"></text></g><g><title>mysql::conn::Conn::next_text (11 samples, 0.10%)</title><rect x="41.8257%" y="533" width="0.1034%" height="15" fill="rgb(239,76,54)"/><text x="42.0757%" y="543.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.19%)</title><rect x="41.7787%" y="565" width="0.1880%" height="15" fill="rgb(231,124,27)"/><text x="42.0287%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 0.14%)</title><rect x="42.3522%" y="453" width="0.1410%" height="15" fill="rgb(249,195,6)"/><text x="42.6022%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (35 samples, 0.33%)</title><rect x="42.3334%" y="469" width="0.3290%" height="15" fill="rgb(237,174,47)"/><text x="42.5834%" y="479.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (13 samples, 0.12%)</title><rect x="42.5402%" y="453" width="0.1222%" height="15" fill="rgb(206,201,31)"/><text x="42.7902%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (58 samples, 0.55%)</title><rect x="42.2864%" y="485" width="0.5453%" height="15" fill="rgb(231,57,52)"/><text x="42.5364%" y="495.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (18 samples, 0.17%)</title><rect x="42.6624%" y="469" width="0.1692%" height="15" fill="rgb(248,177,22)"/><text x="42.9124%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (25 samples, 0.24%)</title><rect x="42.8598%" y="469" width="0.2350%" height="15" fill="rgb(215,211,37)"/><text x="43.1098%" y="479.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (24 samples, 0.23%)</title><rect x="42.8692%" y="453" width="0.2256%" height="15" fill="rgb(241,128,51)"/><text x="43.1192%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.29%)</title><rect x="42.8316%" y="485" width="0.2914%" height="15" fill="rgb(227,165,31)"/><text x="43.0816%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (131 samples, 1.23%)</title><rect x="42.2206%" y="501" width="1.2316%" height="15" fill="rgb(228,167,24)"/><text x="42.4706%" y="511.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (32 samples, 0.30%)</title><rect x="43.1513%" y="485" width="0.3008%" height="15" fill="rgb(228,143,12)"/><text x="43.4013%" y="495.50"></text></g><g><title>core::fmt::write (16 samples, 0.15%)</title><rect x="43.3017%" y="469" width="0.1504%" height="15" fill="rgb(249,149,8)"/><text x="43.5517%" y="479.50"></text></g><g><title>core::fmt::write (144 samples, 1.35%)</title><rect x="42.1077%" y="565" width="1.3538%" height="15" fill="rgb(243,35,44)"/><text x="42.3577%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (140 samples, 1.32%)</title><rect x="42.1453%" y="549" width="1.3162%" height="15" fill="rgb(246,89,9)"/><text x="42.3953%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (136 samples, 1.28%)</title><rect x="42.1829%" y="533" width="1.2786%" height="15" fill="rgb(233,213,13)"/><text x="42.4329%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (135 samples, 1.27%)</title><rect x="42.1923%" y="517" width="1.2692%" height="15" fill="rgb(233,141,41)"/><text x="42.4423%" y="527.50"></text></g><g><title>core::str::pattern::StrSearcher::new (11 samples, 0.10%)</title><rect x="43.5461%" y="565" width="0.1034%" height="15" fill="rgb(239,167,4)"/><text x="43.7961%" y="575.50"></text></g><g><title>__libc_recv (216 samples, 2.03%)</title><rect x="43.9316%" y="405" width="2.0306%" height="15" fill="rgb(209,217,16)"/><text x="44.1816%" y="415.50">_..</text></g><g><title>__libc_recv (216 samples, 2.03%)</title><rect x="43.9316%" y="389" width="2.0306%" height="15" fill="rgb(219,88,35)"/><text x="44.1816%" y="399.50">_..</text></g><g><title>[unknown] (213 samples, 2.00%)</title><rect x="43.9598%" y="373" width="2.0024%" height="15" fill="rgb(220,193,23)"/><text x="44.2098%" y="383.50">[..</text></g><g><title>[unknown] (211 samples, 1.98%)</title><rect x="43.9786%" y="357" width="1.9836%" height="15" fill="rgb(230,90,52)"/><text x="44.2286%" y="367.50">[..</text></g><g><title>[unknown] (203 samples, 1.91%)</title><rect x="44.0538%" y="341" width="1.9084%" height="15" fill="rgb(252,106,19)"/><text x="44.3038%" y="351.50">[..</text></g><g><title>[unknown] (202 samples, 1.90%)</title><rect x="44.0632%" y="325" width="1.8990%" height="15" fill="rgb(206,74,20)"/><text x="44.3132%" y="335.50">[..</text></g><g><title>[unknown] (196 samples, 1.84%)</title><rect x="44.1196%" y="309" width="1.8426%" height="15" fill="rgb(230,138,44)"/><text x="44.3696%" y="319.50">[..</text></g><g><title>[unknown] (191 samples, 1.80%)</title><rect x="44.1666%" y="293" width="1.7956%" height="15" fill="rgb(235,182,43)"/><text x="44.4166%" y="303.50">[..</text></g><g><title>[unknown] (189 samples, 1.78%)</title><rect x="44.1854%" y="277" width="1.7768%" height="15" fill="rgb(242,16,51)"/><text x="44.4354%" y="287.50">[..</text></g><g><title>[unknown] (173 samples, 1.63%)</title><rect x="44.3358%" y="261" width="1.6264%" height="15" fill="rgb(248,9,4)"/><text x="44.5858%" y="271.50"></text></g><g><title>[unknown] (166 samples, 1.56%)</title><rect x="44.4016%" y="245" width="1.5606%" height="15" fill="rgb(210,31,22)"/><text x="44.6516%" y="255.50"></text></g><g><title>[unknown] (159 samples, 1.49%)</title><rect x="44.4674%" y="229" width="1.4948%" height="15" fill="rgb(239,54,39)"/><text x="44.7174%" y="239.50"></text></g><g><title>[unknown] (142 samples, 1.33%)</title><rect x="44.6272%" y="213" width="1.3350%" height="15" fill="rgb(230,99,41)"/><text x="44.8772%" y="223.50"></text></g><g><title>[unknown] (131 samples, 1.23%)</title><rect x="44.7307%" y="197" width="1.2316%" height="15" fill="rgb(253,106,12)"/><text x="44.9807%" y="207.50"></text></g><g><title>[unknown] (105 samples, 0.99%)</title><rect x="44.9751%" y="181" width="0.9871%" height="15" fill="rgb(213,46,41)"/><text x="45.2251%" y="191.50"></text></g><g><title>[unknown] (72 samples, 0.68%)</title><rect x="45.2853%" y="165" width="0.6769%" height="15" fill="rgb(215,133,35)"/><text x="45.5353%" y="175.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="45.5580%" y="149" width="0.4042%" height="15" fill="rgb(213,28,5)"/><text x="45.8080%" y="159.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="45.7648%" y="133" width="0.1974%" height="15" fill="rgb(215,77,49)"/><text x="46.0148%" y="143.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (220 samples, 2.07%)</title><rect x="43.9128%" y="485" width="2.0683%" height="15" fill="rgb(248,100,22)"/><text x="44.1628%" y="495.50">&lt;..</text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (219 samples, 2.06%)</title><rect x="43.9222%" y="469" width="2.0589%" height="15" fill="rgb(208,67,9)"/><text x="44.1722%" y="479.50">&lt;..</text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (219 samples, 2.06%)</title><rect x="43.9222%" y="453" width="2.0589%" height="15" fill="rgb(219,133,21)"/><text x="44.1722%" y="463.50">&lt;..</text></g><g><title>std::sys::unix::net::Socket::read (219 samples, 2.06%)</title><rect x="43.9222%" y="437" width="2.0589%" height="15" fill="rgb(246,46,29)"/><text x="44.1722%" y="447.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (219 samples, 2.06%)</title><rect x="43.9222%" y="421" width="2.0589%" height="15" fill="rgb(246,185,52)"/><text x="44.1722%" y="431.50">s..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (15 samples, 0.14%)</title><rect x="45.9810%" y="485" width="0.1410%" height="15" fill="rgb(252,136,11)"/><text x="46.2310%" y="495.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (15 samples, 0.14%)</title><rect x="45.9810%" y="469" width="0.1410%" height="15" fill="rgb(219,138,53)"/><text x="46.2310%" y="479.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (15 samples, 0.14%)</title><rect x="45.9810%" y="453" width="0.1410%" height="15" fill="rgb(211,51,23)"/><text x="46.2310%" y="463.50"></text></g><g><title>mysql::conn::Conn::read_packet (244 samples, 2.29%)</title><rect x="43.8469%" y="517" width="2.2939%" height="15" fill="rgb(247,221,28)"/><text x="44.0969%" y="527.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (241 samples, 2.27%)</title><rect x="43.8752%" y="501" width="2.2657%" height="15" fill="rgb(251,222,45)"/><text x="44.1252%" y="511.50">&lt;..</text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (13 samples, 0.12%)</title><rect x="46.1972%" y="485" width="0.1222%" height="15" fill="rgb(217,162,53)"/><text x="46.4472%" y="495.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (16 samples, 0.15%)</title><rect x="46.1878%" y="501" width="0.1504%" height="15" fill="rgb(229,93,14)"/><text x="46.4378%" y="511.50"></text></g><g><title>[unknown] (366 samples, 3.44%)</title><rect x="46.3853%" y="389" width="3.4408%" height="15" fill="rgb(209,67,49)"/><text x="46.6353%" y="399.50">[un..</text></g><g><title>[unknown] (364 samples, 3.42%)</title><rect x="46.4041%" y="373" width="3.4220%" height="15" fill="rgb(213,87,29)"/><text x="46.6541%" y="383.50">[un..</text></g><g><title>[unknown] (347 samples, 3.26%)</title><rect x="46.5639%" y="357" width="3.2622%" height="15" fill="rgb(205,151,52)"/><text x="46.8139%" y="367.50">[un..</text></g><g><title>[unknown] (345 samples, 3.24%)</title><rect x="46.5827%" y="341" width="3.2434%" height="15" fill="rgb(253,215,39)"/><text x="46.8327%" y="351.50">[un..</text></g><g><title>[unknown] (342 samples, 3.22%)</title><rect x="46.6109%" y="325" width="3.2152%" height="15" fill="rgb(221,220,41)"/><text x="46.8609%" y="335.50">[un..</text></g><g><title>[unknown] (336 samples, 3.16%)</title><rect x="46.6673%" y="309" width="3.1588%" height="15" fill="rgb(218,133,21)"/><text x="46.9173%" y="319.50">[un..</text></g><g><title>[unknown] (322 samples, 3.03%)</title><rect x="46.7989%" y="293" width="3.0272%" height="15" fill="rgb(221,193,43)"/><text x="47.0489%" y="303.50">[un..</text></g><g><title>[unknown] (300 samples, 2.82%)</title><rect x="47.0057%" y="277" width="2.8203%" height="15" fill="rgb(240,128,52)"/><text x="47.2557%" y="287.50">[u..</text></g><g><title>[unknown] (293 samples, 2.75%)</title><rect x="47.0715%" y="261" width="2.7545%" height="15" fill="rgb(253,114,12)"/><text x="47.3215%" y="271.50">[u..</text></g><g><title>[unknown] (284 samples, 2.67%)</title><rect x="47.1562%" y="245" width="2.6699%" height="15" fill="rgb(215,223,47)"/><text x="47.4062%" y="255.50">[u..</text></g><g><title>[unknown] (237 samples, 2.23%)</title><rect x="47.5980%" y="229" width="2.2281%" height="15" fill="rgb(248,225,23)"/><text x="47.8480%" y="239.50">[..</text></g><g><title>[unknown] (225 samples, 2.12%)</title><rect x="47.7108%" y="213" width="2.1153%" height="15" fill="rgb(250,108,0)"/><text x="47.9608%" y="223.50">[..</text></g><g><title>[unknown] (217 samples, 2.04%)</title><rect x="47.7860%" y="197" width="2.0400%" height="15" fill="rgb(228,208,7)"/><text x="48.0360%" y="207.50">[..</text></g><g><title>[unknown] (208 samples, 1.96%)</title><rect x="47.8706%" y="181" width="1.9554%" height="15" fill="rgb(244,45,10)"/><text x="48.1206%" y="191.50">[..</text></g><g><title>[unknown] (188 samples, 1.77%)</title><rect x="48.0587%" y="165" width="1.7674%" height="15" fill="rgb(207,125,25)"/><text x="48.3087%" y="175.50"></text></g><g><title>[unknown] (164 samples, 1.54%)</title><rect x="48.2843%" y="149" width="1.5418%" height="15" fill="rgb(210,195,18)"/><text x="48.5343%" y="159.50"></text></g><g><title>[unknown] (154 samples, 1.45%)</title><rect x="48.3783%" y="133" width="1.4478%" height="15" fill="rgb(249,80,12)"/><text x="48.6283%" y="143.50"></text></g><g><title>[unknown] (146 samples, 1.37%)</title><rect x="48.4535%" y="117" width="1.3726%" height="15" fill="rgb(221,65,9)"/><text x="48.7035%" y="127.50"></text></g><g><title>[unknown] (113 samples, 1.06%)</title><rect x="48.7637%" y="101" width="1.0623%" height="15" fill="rgb(235,49,36)"/><text x="49.0137%" y="111.50"></text></g><g><title>[unknown] (98 samples, 0.92%)</title><rect x="48.9048%" y="85" width="0.9213%" height="15" fill="rgb(225,32,20)"/><text x="49.1548%" y="95.50"></text></g><g><title>[unknown] (53 samples, 0.50%)</title><rect x="49.3278%" y="69" width="0.4983%" height="15" fill="rgb(215,141,46)"/><text x="49.5778%" y="79.50"></text></g><g><title>[unknown] (39 samples, 0.37%)</title><rect x="49.4594%" y="53" width="0.3666%" height="15" fill="rgb(250,160,47)"/><text x="49.7094%" y="63.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="49.6663%" y="37" width="0.1598%" height="15" fill="rgb(216,222,40)"/><text x="49.9163%" y="47.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (371 samples, 3.49%)</title><rect x="46.3571%" y="485" width="3.4878%" height="15" fill="rgb(234,217,39)"/><text x="46.6071%" y="495.50">&lt;st..</text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (371 samples, 3.49%)</title><rect x="46.3571%" y="469" width="3.4878%" height="15" fill="rgb(207,178,40)"/><text x="46.6071%" y="479.50">&lt;&amp;s..</text></g><g><title>std::sys::unix::pipe::AnonPipe::write (371 samples, 3.49%)</title><rect x="46.3571%" y="453" width="3.4878%" height="15" fill="rgb(221,136,13)"/><text x="46.6071%" y="463.50">std..</text></g><g><title>std::sys::unix::fd::FileDesc::write (371 samples, 3.49%)</title><rect x="46.3571%" y="437" width="3.4878%" height="15" fill="rgb(249,199,10)"/><text x="46.6071%" y="447.50">std..</text></g><g><title>__libc_write (371 samples, 3.49%)</title><rect x="46.3571%" y="421" width="3.4878%" height="15" fill="rgb(249,222,13)"/><text x="46.6071%" y="431.50">__l..</text></g><g><title>__libc_write (370 samples, 3.48%)</title><rect x="46.3665%" y="405" width="3.4784%" height="15" fill="rgb(244,185,38)"/><text x="46.6165%" y="415.50">__l..</text></g><g><title>mysql::conn::pool::Pool::get_conn (662 samples, 6.22%)</title><rect x="43.6495%" y="565" width="6.2236%" height="15" fill="rgb(236,202,9)"/><text x="43.8995%" y="575.50">mysql::c..</text></g><g><title>mysql::conn::pool::Pool::_get_conn (662 samples, 6.22%)</title><rect x="43.6495%" y="549" width="6.2236%" height="15" fill="rgb(250,229,37)"/><text x="43.8995%" y="559.50">mysql::c..</text></g><g><title>mysql::conn::Conn::ping (650 samples, 6.11%)</title><rect x="43.7623%" y="533" width="6.1107%" height="15" fill="rgb(206,174,23)"/><text x="44.0123%" y="543.50">mysql::c..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (397 samples, 3.73%)</title><rect x="46.1408%" y="517" width="3.7323%" height="15" fill="rgb(211,33,43)"/><text x="46.3908%" y="527.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (375 samples, 3.53%)</title><rect x="46.3477%" y="501" width="3.5254%" height="15" fill="rgb(245,58,50)"/><text x="46.5977%" y="511.50">std..</text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (1,300 samples, 12.22%)</title><rect x="37.6798%" y="581" width="12.2215%" height="15" fill="rgb(244,68,36)"/><text x="37.9298%" y="591.50">decor::helpers::my..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (20 samples, 0.19%)</title><rect x="50.0047%" y="533" width="0.1880%" height="15" fill="rgb(232,229,15)"/><text x="50.2547%" y="543.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.20%)</title><rect x="50.1927%" y="533" width="0.1974%" height="15" fill="rgb(254,30,23)"/><text x="50.4427%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (42 samples, 0.39%)</title><rect x="50.0047%" y="549" width="0.3948%" height="15" fill="rgb(235,160,14)"/><text x="50.2547%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (59 samples, 0.55%)</title><rect x="49.9107%" y="565" width="0.5547%" height="15" fill="rgb(212,155,44)"/><text x="50.1607%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (23 samples, 0.22%)</title><rect x="50.5970%" y="565" width="0.2162%" height="15" fill="rgb(226,2,50)"/><text x="50.8470%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.17%)</title><rect x="50.6440%" y="549" width="0.1692%" height="15" fill="rgb(234,177,6)"/><text x="50.8940%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.13%)</title><rect x="50.6816%" y="533" width="0.1316%" height="15" fill="rgb(217,24,9)"/><text x="50.9316%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.17%)</title><rect x="50.8696%" y="549" width="0.1692%" height="15" fill="rgb(220,13,46)"/><text x="51.1196%" y="559.50"></text></g><g><title>decor::helpers::parser_helpers::str_to_tablewithjoins (30 samples, 0.28%)</title><rect x="50.8132%" y="565" width="0.2820%" height="15" fill="rgb(239,221,27)"/><text x="51.0632%" y="575.50"></text></g><g><title>decor::disguise::apply (1,581 samples, 14.86%)</title><rect x="36.2696%" y="613" width="14.8632%" height="15" fill="rgb(222,198,25)"/><text x="36.5196%" y="623.50">decor::disguise::apply</text></g><g><title>decor::is_guise (1,431 samples, 13.45%)</title><rect x="37.6798%" y="597" width="13.4530%" height="15" fill="rgb(211,99,13)"/><text x="37.9298%" y="607.50">decor::is_guise</text></g><g><title>decor::helpers::parser_helpers::select_1_statement (131 samples, 1.23%)</title><rect x="49.9013%" y="581" width="1.2316%" height="15" fill="rgb(232,111,31)"/><text x="50.1513%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 0.10%)</title><rect x="51.1328%" y="485" width="0.1034%" height="15" fill="rgb(245,82,37)"/><text x="51.3828%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (11 samples, 0.10%)</title><rect x="51.1328%" y="469" width="0.1034%" height="15" fill="rgb(227,149,46)"/><text x="51.3828%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (11 samples, 0.10%)</title><rect x="51.1328%" y="453" width="0.1034%" height="15" fill="rgb(218,36,50)"/><text x="51.3828%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.10%)</title><rect x="51.1328%" y="437" width="0.1034%" height="15" fill="rgb(226,80,48)"/><text x="51.3828%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.10%)</title><rect x="51.1328%" y="421" width="0.1034%" height="15" fill="rgb(238,224,15)"/><text x="51.3828%" y="431.50"></text></g><g><title>__libc_recv (11 samples, 0.10%)</title><rect x="51.1328%" y="405" width="0.1034%" height="15" fill="rgb(241,136,10)"/><text x="51.3828%" y="415.50"></text></g><g><title>__libc_recv (11 samples, 0.10%)</title><rect x="51.1328%" y="389" width="0.1034%" height="15" fill="rgb(208,32,45)"/><text x="51.3828%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="51.1328%" y="373" width="0.1034%" height="15" fill="rgb(207,135,9)"/><text x="51.3828%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="51.1328%" y="357" width="0.1034%" height="15" fill="rgb(206,86,44)"/><text x="51.3828%" y="367.50"></text></g><g><title>mysql::conn::Conn::read_packet (20 samples, 0.19%)</title><rect x="51.1328%" y="517" width="0.1880%" height="15" fill="rgb(245,177,15)"/><text x="51.3828%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.19%)</title><rect x="51.1328%" y="501" width="0.1880%" height="15" fill="rgb(206,64,50)"/><text x="51.3828%" y="511.50"></text></g><g><title>decor::vault::print_as_filters (23 samples, 0.22%)</title><rect x="51.1328%" y="613" width="0.2162%" height="15" fill="rgb(234,36,40)"/><text x="51.3828%" y="623.50"></text></g><g><title>decor::vault::get_vault_entries_with_constraint (23 samples, 0.22%)</title><rect x="51.1328%" y="597" width="0.2162%" height="15" fill="rgb(213,64,8)"/><text x="51.3828%" y="607.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (23 samples, 0.22%)</title><rect x="51.1328%" y="581" width="0.2162%" height="15" fill="rgb(210,75,36)"/><text x="51.3828%" y="591.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.22%)</title><rect x="51.1328%" y="565" width="0.2162%" height="15" fill="rgb(229,88,21)"/><text x="51.3828%" y="575.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (23 samples, 0.22%)</title><rect x="51.1328%" y="549" width="0.2162%" height="15" fill="rgb(252,204,47)"/><text x="51.3828%" y="559.50"></text></g><g><title>mysql::conn::Conn::next_text (23 samples, 0.22%)</title><rect x="51.1328%" y="533" width="0.2162%" height="15" fill="rgb(208,77,27)"/><text x="51.3828%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (26 samples, 0.24%)</title><rect x="51.4149%" y="469" width="0.2444%" height="15" fill="rgb(221,76,26)"/><text x="51.6649%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (26 samples, 0.24%)</title><rect x="51.4149%" y="453" width="0.2444%" height="15" fill="rgb(225,139,18)"/><text x="51.6649%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (26 samples, 0.24%)</title><rect x="51.4149%" y="437" width="0.2444%" height="15" fill="rgb(230,137,11)"/><text x="51.6649%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (26 samples, 0.24%)</title><rect x="51.4149%" y="421" width="0.2444%" height="15" fill="rgb(212,28,1)"/><text x="51.6649%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (26 samples, 0.24%)</title><rect x="51.4149%" y="405" width="0.2444%" height="15" fill="rgb(248,164,17)"/><text x="51.6649%" y="415.50"></text></g><g><title>__libc_recv (25 samples, 0.24%)</title><rect x="51.4243%" y="389" width="0.2350%" height="15" fill="rgb(222,171,42)"/><text x="51.6743%" y="399.50"></text></g><g><title>[unknown] (25 samples, 0.24%)</title><rect x="51.4243%" y="373" width="0.2350%" height="15" fill="rgb(243,84,45)"/><text x="51.6743%" y="383.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="51.4337%" y="357" width="0.2256%" height="15" fill="rgb(252,49,23)"/><text x="51.6837%" y="367.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="51.4431%" y="341" width="0.2162%" height="15" fill="rgb(215,19,7)"/><text x="51.6931%" y="351.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="51.4525%" y="325" width="0.2068%" height="15" fill="rgb(238,81,41)"/><text x="51.7025%" y="335.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="51.4619%" y="309" width="0.1974%" height="15" fill="rgb(210,199,37)"/><text x="51.7119%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="51.4619%" y="293" width="0.1974%" height="15" fill="rgb(244,192,49)"/><text x="51.7119%" y="303.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="51.4713%" y="277" width="0.1880%" height="15" fill="rgb(226,211,11)"/><text x="51.7213%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="51.4807%" y="261" width="0.1786%" height="15" fill="rgb(236,162,54)"/><text x="51.7307%" y="271.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="51.4901%" y="245" width="0.1692%" height="15" fill="rgb(220,229,9)"/><text x="51.7401%" y="255.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="51.4901%" y="229" width="0.1692%" height="15" fill="rgb(250,87,22)"/><text x="51.7401%" y="239.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="51.5183%" y="213" width="0.1410%" height="15" fill="rgb(239,43,17)"/><text x="51.7683%" y="223.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="51.5371%" y="197" width="0.1222%" height="15" fill="rgb(231,177,25)"/><text x="51.7871%" y="207.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (32 samples, 0.30%)</title><rect x="51.3961%" y="517" width="0.3008%" height="15" fill="rgb(219,179,1)"/><text x="51.6461%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (30 samples, 0.28%)</title><rect x="51.4149%" y="501" width="0.2820%" height="15" fill="rgb(238,219,53)"/><text x="51.6649%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.28%)</title><rect x="51.4149%" y="485" width="0.2820%" height="15" fill="rgb(232,167,36)"/><text x="51.6649%" y="495.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (24 samples, 0.23%)</title><rect x="51.7345%" y="485" width="0.2256%" height="15" fill="rgb(244,19,51)"/><text x="51.9845%" y="495.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (24 samples, 0.23%)</title><rect x="51.7345%" y="469" width="0.2256%" height="15" fill="rgb(224,6,22)"/><text x="51.9845%" y="479.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (24 samples, 0.23%)</title><rect x="51.7345%" y="453" width="0.2256%" height="15" fill="rgb(224,145,5)"/><text x="51.9845%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (24 samples, 0.23%)</title><rect x="51.7345%" y="437" width="0.2256%" height="15" fill="rgb(234,130,49)"/><text x="51.9845%" y="447.50"></text></g><g><title>__libc_write (24 samples, 0.23%)</title><rect x="51.7345%" y="421" width="0.2256%" height="15" fill="rgb(254,6,2)"/><text x="51.9845%" y="431.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="51.7345%" y="405" width="0.2256%" height="15" fill="rgb(208,96,46)"/><text x="51.9845%" y="415.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="51.7345%" y="389" width="0.2256%" height="15" fill="rgb(239,3,39)"/><text x="51.9845%" y="399.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="51.7345%" y="373" width="0.2256%" height="15" fill="rgb(233,210,1)"/><text x="51.9845%" y="383.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="51.7439%" y="357" width="0.2162%" height="15" fill="rgb(244,137,37)"/><text x="51.9939%" y="367.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="51.7439%" y="341" width="0.2162%" height="15" fill="rgb(240,136,2)"/><text x="51.9939%" y="351.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="51.7627%" y="325" width="0.1974%" height="15" fill="rgb(239,18,37)"/><text x="52.0127%" y="335.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="51.7627%" y="309" width="0.1974%" height="15" fill="rgb(218,185,22)"/><text x="52.0127%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="51.7627%" y="293" width="0.1974%" height="15" fill="rgb(225,218,4)"/><text x="52.0127%" y="303.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="51.7627%" y="277" width="0.1974%" height="15" fill="rgb(230,182,32)"/><text x="52.0127%" y="287.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="51.7627%" y="261" width="0.1974%" height="15" fill="rgb(242,56,43)"/><text x="52.0127%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="51.7815%" y="245" width="0.1786%" height="15" fill="rgb(233,99,24)"/><text x="52.0315%" y="255.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="51.7815%" y="229" width="0.1786%" height="15" fill="rgb(234,209,42)"/><text x="52.0315%" y="239.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="51.8003%" y="213" width="0.1598%" height="15" fill="rgb(227,7,12)"/><text x="52.0503%" y="223.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="51.8097%" y="197" width="0.1504%" height="15" fill="rgb(245,203,43)"/><text x="52.0597%" y="207.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="51.8473%" y="181" width="0.1128%" height="15" fill="rgb(238,205,33)"/><text x="52.0973%" y="191.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (64 samples, 0.60%)</title><rect x="51.3679%" y="549" width="0.6017%" height="15" fill="rgb(231,56,7)"/><text x="51.6179%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (62 samples, 0.58%)</title><rect x="51.3867%" y="533" width="0.5829%" height="15" fill="rgb(244,186,29)"/><text x="51.6367%" y="543.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (28 samples, 0.26%)</title><rect x="51.7063%" y="517" width="0.2632%" height="15" fill="rgb(234,111,31)"/><text x="51.9563%" y="527.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (25 samples, 0.24%)</title><rect x="51.7345%" y="501" width="0.2350%" height="15" fill="rgb(241,149,10)"/><text x="51.9845%" y="511.50"></text></g><g><title>core::fmt::write (15 samples, 0.14%)</title><rect x="51.9789%" y="549" width="0.1410%" height="15" fill="rgb(249,206,44)"/><text x="52.2289%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (15 samples, 0.14%)</title><rect x="51.9789%" y="533" width="0.1410%" height="15" fill="rgb(251,153,30)"/><text x="52.2289%" y="543.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (83 samples, 0.78%)</title><rect x="51.3491%" y="565" width="0.7803%" height="15" fill="rgb(239,152,38)"/><text x="51.5991%" y="575.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (84 samples, 0.79%)</title><rect x="51.3491%" y="581" width="0.7897%" height="15" fill="rgb(249,139,47)"/><text x="51.5991%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (24 samples, 0.23%)</title><rect x="52.1576%" y="469" width="0.2256%" height="15" fill="rgb(244,64,35)"/><text x="52.4076%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (24 samples, 0.23%)</title><rect x="52.1576%" y="453" width="0.2256%" height="15" fill="rgb(216,46,15)"/><text x="52.4076%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (24 samples, 0.23%)</title><rect x="52.1576%" y="437" width="0.2256%" height="15" fill="rgb(250,74,19)"/><text x="52.4076%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (24 samples, 0.23%)</title><rect x="52.1576%" y="421" width="0.2256%" height="15" fill="rgb(249,42,33)"/><text x="52.4076%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (24 samples, 0.23%)</title><rect x="52.1576%" y="405" width="0.2256%" height="15" fill="rgb(242,149,17)"/><text x="52.4076%" y="415.50"></text></g><g><title>__libc_recv (24 samples, 0.23%)</title><rect x="52.1576%" y="389" width="0.2256%" height="15" fill="rgb(244,29,21)"/><text x="52.4076%" y="399.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="52.1576%" y="373" width="0.2256%" height="15" fill="rgb(220,130,37)"/><text x="52.4076%" y="383.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="52.1576%" y="357" width="0.2256%" height="15" fill="rgb(211,67,2)"/><text x="52.4076%" y="367.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="52.1576%" y="341" width="0.2256%" height="15" fill="rgb(235,68,52)"/><text x="52.4076%" y="351.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="52.1670%" y="325" width="0.2162%" height="15" fill="rgb(246,142,3)"/><text x="52.4170%" y="335.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="52.1670%" y="309" width="0.2162%" height="15" fill="rgb(241,25,7)"/><text x="52.4170%" y="319.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="52.1670%" y="293" width="0.2162%" height="15" fill="rgb(242,119,39)"/><text x="52.4170%" y="303.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="52.1670%" y="277" width="0.2162%" height="15" fill="rgb(241,98,45)"/><text x="52.4170%" y="287.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="52.1858%" y="261" width="0.1974%" height="15" fill="rgb(254,28,30)"/><text x="52.4358%" y="271.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="52.2140%" y="245" width="0.1692%" height="15" fill="rgb(241,142,54)"/><text x="52.4640%" y="255.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="52.2140%" y="229" width="0.1692%" height="15" fill="rgb(222,85,15)"/><text x="52.4640%" y="239.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="52.2328%" y="213" width="0.1504%" height="15" fill="rgb(210,85,47)"/><text x="52.4828%" y="223.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="52.2422%" y="197" width="0.1410%" height="15" fill="rgb(224,206,25)"/><text x="52.4922%" y="207.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (30 samples, 0.28%)</title><rect x="52.1482%" y="517" width="0.2820%" height="15" fill="rgb(243,201,19)"/><text x="52.3982%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (30 samples, 0.28%)</title><rect x="52.1482%" y="501" width="0.2820%" height="15" fill="rgb(236,59,4)"/><text x="52.3982%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.28%)</title><rect x="52.1482%" y="485" width="0.2820%" height="15" fill="rgb(254,179,45)"/><text x="52.3982%" y="495.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (43 samples, 0.40%)</title><rect x="52.1482%" y="549" width="0.4042%" height="15" fill="rgb(226,14,10)"/><text x="52.3982%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (43 samples, 0.40%)</title><rect x="52.1482%" y="533" width="0.4042%" height="15" fill="rgb(244,27,41)"/><text x="52.3982%" y="543.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (13 samples, 0.12%)</title><rect x="52.4302%" y="517" width="0.1222%" height="15" fill="rgb(235,35,32)"/><text x="52.6802%" y="527.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.12%)</title><rect x="52.4302%" y="501" width="0.1222%" height="15" fill="rgb(218,68,31)"/><text x="52.6802%" y="511.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (13 samples, 0.12%)</title><rect x="52.4302%" y="485" width="0.1222%" height="15" fill="rgb(207,120,37)"/><text x="52.6802%" y="495.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (13 samples, 0.12%)</title><rect x="52.4302%" y="469" width="0.1222%" height="15" fill="rgb(227,98,0)"/><text x="52.6802%" y="479.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (13 samples, 0.12%)</title><rect x="52.4302%" y="453" width="0.1222%" height="15" fill="rgb(207,7,3)"/><text x="52.6802%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (13 samples, 0.12%)</title><rect x="52.4302%" y="437" width="0.1222%" height="15" fill="rgb(206,98,19)"/><text x="52.6802%" y="447.50"></text></g><g><title>__libc_write (13 samples, 0.12%)</title><rect x="52.4302%" y="421" width="0.1222%" height="15" fill="rgb(217,5,26)"/><text x="52.6802%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="52.4302%" y="405" width="0.1222%" height="15" fill="rgb(235,190,38)"/><text x="52.6802%" y="415.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="52.4302%" y="389" width="0.1222%" height="15" fill="rgb(247,86,24)"/><text x="52.6802%" y="399.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="52.4302%" y="373" width="0.1222%" height="15" fill="rgb(205,101,16)"/><text x="52.6802%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="52.4302%" y="357" width="0.1222%" height="15" fill="rgb(246,168,33)"/><text x="52.6802%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="52.4302%" y="341" width="0.1222%" height="15" fill="rgb(231,114,1)"/><text x="52.6802%" y="351.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="52.4396%" y="325" width="0.1128%" height="15" fill="rgb(207,184,53)"/><text x="52.6896%" y="335.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="52.4396%" y="309" width="0.1128%" height="15" fill="rgb(224,95,51)"/><text x="52.6896%" y="319.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="52.4396%" y="293" width="0.1128%" height="15" fill="rgb(212,188,45)"/><text x="52.6896%" y="303.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="52.4396%" y="277" width="0.1128%" height="15" fill="rgb(223,154,38)"/><text x="52.6896%" y="287.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="52.4490%" y="261" width="0.1034%" height="15" fill="rgb(251,22,52)"/><text x="52.6990%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="52.4490%" y="245" width="0.1034%" height="15" fill="rgb(229,209,22)"/><text x="52.6990%" y="255.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="52.4490%" y="229" width="0.1034%" height="15" fill="rgb(234,138,34)"/><text x="52.6990%" y="239.50"></text></g><g><title>hotcrp::datagen::conflicts::insert_paper_conflict (55 samples, 0.52%)</title><rect x="52.1388%" y="581" width="0.5171%" height="15" fill="rgb(212,95,11)"/><text x="52.3888%" y="591.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (55 samples, 0.52%)</title><rect x="52.1388%" y="565" width="0.5171%" height="15" fill="rgb(240,179,47)"/><text x="52.3888%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (17 samples, 0.16%)</title><rect x="52.7122%" y="469" width="0.1598%" height="15" fill="rgb(240,163,11)"/><text x="52.9622%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (17 samples, 0.16%)</title><rect x="52.7122%" y="453" width="0.1598%" height="15" fill="rgb(236,37,12)"/><text x="52.9622%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (17 samples, 0.16%)</title><rect x="52.7122%" y="437" width="0.1598%" height="15" fill="rgb(232,164,16)"/><text x="52.9622%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (17 samples, 0.16%)</title><rect x="52.7122%" y="421" width="0.1598%" height="15" fill="rgb(244,205,15)"/><text x="52.9622%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (17 samples, 0.16%)</title><rect x="52.7122%" y="405" width="0.1598%" height="15" fill="rgb(223,117,47)"/><text x="52.9622%" y="415.50"></text></g><g><title>__libc_recv (17 samples, 0.16%)</title><rect x="52.7122%" y="389" width="0.1598%" height="15" fill="rgb(244,107,35)"/><text x="52.9622%" y="399.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="52.7122%" y="373" width="0.1598%" height="15" fill="rgb(205,140,8)"/><text x="52.9622%" y="383.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="52.7122%" y="357" width="0.1598%" height="15" fill="rgb(228,84,46)"/><text x="52.9622%" y="367.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="52.7216%" y="341" width="0.1504%" height="15" fill="rgb(254,188,9)"/><text x="52.9716%" y="351.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="52.7216%" y="325" width="0.1504%" height="15" fill="rgb(206,112,54)"/><text x="52.9716%" y="335.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="52.7310%" y="309" width="0.1410%" height="15" fill="rgb(216,84,49)"/><text x="52.9810%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="52.7310%" y="293" width="0.1410%" height="15" fill="rgb(214,194,35)"/><text x="52.9810%" y="303.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="52.7310%" y="277" width="0.1410%" height="15" fill="rgb(249,28,3)"/><text x="52.9810%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="52.7592%" y="261" width="0.1128%" height="15" fill="rgb(222,56,52)"/><text x="53.0092%" y="271.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="52.7592%" y="245" width="0.1128%" height="15" fill="rgb(245,217,50)"/><text x="53.0092%" y="255.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="52.7686%" y="229" width="0.1034%" height="15" fill="rgb(213,201,24)"/><text x="53.0186%" y="239.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="52.7686%" y="213" width="0.1034%" height="15" fill="rgb(248,116,28)"/><text x="53.0186%" y="223.50"></text></g><g><title>mysql::conn::Conn::read_packet (22 samples, 0.21%)</title><rect x="52.7028%" y="501" width="0.2068%" height="15" fill="rgb(219,72,43)"/><text x="52.9528%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.20%)</title><rect x="52.7122%" y="485" width="0.1974%" height="15" fill="rgb(209,138,14)"/><text x="52.9622%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (27 samples, 0.25%)</title><rect x="52.6652%" y="517" width="0.2538%" height="15" fill="rgb(222,18,33)"/><text x="52.9152%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (41 samples, 0.39%)</title><rect x="52.6558%" y="549" width="0.3854%" height="15" fill="rgb(213,199,7)"/><text x="52.9058%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (40 samples, 0.38%)</title><rect x="52.6652%" y="533" width="0.3760%" height="15" fill="rgb(250,110,10)"/><text x="52.9152%" y="543.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (13 samples, 0.12%)</title><rect x="52.9191%" y="517" width="0.1222%" height="15" fill="rgb(248,123,6)"/><text x="53.1691%" y="527.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (12 samples, 0.11%)</title><rect x="52.9285%" y="501" width="0.1128%" height="15" fill="rgb(206,91,31)"/><text x="53.1785%" y="511.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (12 samples, 0.11%)</title><rect x="52.9285%" y="485" width="0.1128%" height="15" fill="rgb(211,154,13)"/><text x="53.1785%" y="495.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (12 samples, 0.11%)</title><rect x="52.9285%" y="469" width="0.1128%" height="15" fill="rgb(225,148,7)"/><text x="53.1785%" y="479.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (12 samples, 0.11%)</title><rect x="52.9285%" y="453" width="0.1128%" height="15" fill="rgb(220,160,43)"/><text x="53.1785%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (12 samples, 0.11%)</title><rect x="52.9285%" y="437" width="0.1128%" height="15" fill="rgb(213,52,39)"/><text x="53.1785%" y="447.50"></text></g><g><title>__libc_write (12 samples, 0.11%)</title><rect x="52.9285%" y="421" width="0.1128%" height="15" fill="rgb(243,137,7)"/><text x="53.1785%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="52.9285%" y="405" width="0.1128%" height="15" fill="rgb(230,79,13)"/><text x="53.1785%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="52.9379%" y="389" width="0.1034%" height="15" fill="rgb(247,105,23)"/><text x="53.1879%" y="399.50"></text></g><g><title>hotcrp::datagen::papers::insert_papers (189 samples, 1.78%)</title><rect x="51.3491%" y="597" width="1.7768%" height="15" fill="rgb(223,179,41)"/><text x="51.5991%" y="607.50">h..</text></g><g><title>hotcrp::datagen::watches::insert_paper_watch (50 samples, 0.47%)</title><rect x="52.6558%" y="581" width="0.4701%" height="15" fill="rgb(218,9,34)"/><text x="52.9058%" y="591.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (50 samples, 0.47%)</title><rect x="52.6558%" y="565" width="0.4701%" height="15" fill="rgb(222,106,8)"/><text x="52.9058%" y="575.50"></text></g><g><title>__libc_recv (55 samples, 0.52%)</title><rect x="53.2387%" y="389" width="0.5171%" height="15" fill="rgb(211,220,0)"/><text x="53.4887%" y="399.50"></text></g><g><title>[unknown] (55 samples, 0.52%)</title><rect x="53.2387%" y="373" width="0.5171%" height="15" fill="rgb(229,52,16)"/><text x="53.4887%" y="383.50"></text></g><g><title>[unknown] (55 samples, 0.52%)</title><rect x="53.2387%" y="357" width="0.5171%" height="15" fill="rgb(212,155,18)"/><text x="53.4887%" y="367.50"></text></g><g><title>[unknown] (51 samples, 0.48%)</title><rect x="53.2763%" y="341" width="0.4795%" height="15" fill="rgb(242,21,14)"/><text x="53.5263%" y="351.50"></text></g><g><title>[unknown] (49 samples, 0.46%)</title><rect x="53.2951%" y="325" width="0.4607%" height="15" fill="rgb(222,19,48)"/><text x="53.5451%" y="335.50"></text></g><g><title>[unknown] (48 samples, 0.45%)</title><rect x="53.3045%" y="309" width="0.4513%" height="15" fill="rgb(232,45,27)"/><text x="53.5545%" y="319.50"></text></g><g><title>[unknown] (48 samples, 0.45%)</title><rect x="53.3045%" y="293" width="0.4513%" height="15" fill="rgb(249,103,42)"/><text x="53.5545%" y="303.50"></text></g><g><title>[unknown] (46 samples, 0.43%)</title><rect x="53.3233%" y="277" width="0.4325%" height="15" fill="rgb(246,81,33)"/><text x="53.5733%" y="287.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="53.3515%" y="261" width="0.4042%" height="15" fill="rgb(252,33,42)"/><text x="53.6015%" y="271.50"></text></g><g><title>[unknown] (42 samples, 0.39%)</title><rect x="53.3609%" y="245" width="0.3948%" height="15" fill="rgb(209,212,41)"/><text x="53.6109%" y="255.50"></text></g><g><title>[unknown] (40 samples, 0.38%)</title><rect x="53.3797%" y="229" width="0.3760%" height="15" fill="rgb(207,154,6)"/><text x="53.6297%" y="239.50"></text></g><g><title>[unknown] (35 samples, 0.33%)</title><rect x="53.4267%" y="213" width="0.3290%" height="15" fill="rgb(223,64,47)"/><text x="53.6767%" y="223.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="53.4831%" y="197" width="0.2726%" height="15" fill="rgb(211,161,38)"/><text x="53.7331%" y="207.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="53.5771%" y="181" width="0.1786%" height="15" fill="rgb(219,138,40)"/><text x="53.8271%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="53.6523%" y="165" width="0.1034%" height="15" fill="rgb(241,228,46)"/><text x="53.9023%" y="175.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (58 samples, 0.55%)</title><rect x="53.2293%" y="469" width="0.5453%" height="15" fill="rgb(223,209,38)"/><text x="53.4793%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (58 samples, 0.55%)</title><rect x="53.2293%" y="453" width="0.5453%" height="15" fill="rgb(236,164,45)"/><text x="53.4793%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (58 samples, 0.55%)</title><rect x="53.2293%" y="437" width="0.5453%" height="15" fill="rgb(231,15,5)"/><text x="53.4793%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (58 samples, 0.55%)</title><rect x="53.2293%" y="421" width="0.5453%" height="15" fill="rgb(252,35,15)"/><text x="53.4793%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (58 samples, 0.55%)</title><rect x="53.2293%" y="405" width="0.5453%" height="15" fill="rgb(248,181,18)"/><text x="53.4793%" y="415.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (68 samples, 0.64%)</title><rect x="53.1917%" y="517" width="0.6393%" height="15" fill="rgb(233,39,42)"/><text x="53.4417%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (67 samples, 0.63%)</title><rect x="53.2011%" y="501" width="0.6299%" height="15" fill="rgb(238,110,33)"/><text x="53.4511%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.63%)</title><rect x="53.2011%" y="485" width="0.6299%" height="15" fill="rgb(233,195,10)"/><text x="53.4511%" y="495.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (26 samples, 0.24%)</title><rect x="53.8592%" y="485" width="0.2444%" height="15" fill="rgb(254,105,3)"/><text x="54.1092%" y="495.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (26 samples, 0.24%)</title><rect x="53.8592%" y="469" width="0.2444%" height="15" fill="rgb(221,225,9)"/><text x="54.1092%" y="479.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (26 samples, 0.24%)</title><rect x="53.8592%" y="453" width="0.2444%" height="15" fill="rgb(224,227,45)"/><text x="54.1092%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (26 samples, 0.24%)</title><rect x="53.8592%" y="437" width="0.2444%" height="15" fill="rgb(229,198,43)"/><text x="54.1092%" y="447.50"></text></g><g><title>__libc_write (26 samples, 0.24%)</title><rect x="53.8592%" y="421" width="0.2444%" height="15" fill="rgb(206,209,35)"/><text x="54.1092%" y="431.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="53.8592%" y="405" width="0.2444%" height="15" fill="rgb(245,195,53)"/><text x="54.1092%" y="415.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="53.8592%" y="389" width="0.2444%" height="15" fill="rgb(240,92,26)"/><text x="54.1092%" y="399.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="53.8592%" y="373" width="0.2444%" height="15" fill="rgb(207,40,23)"/><text x="54.1092%" y="383.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="53.8592%" y="357" width="0.2444%" height="15" fill="rgb(223,111,35)"/><text x="54.1092%" y="367.50"></text></g><g><title>[unknown] (25 samples, 0.24%)</title><rect x="53.8686%" y="341" width="0.2350%" height="15" fill="rgb(229,147,28)"/><text x="54.1186%" y="351.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="53.8874%" y="325" width="0.2162%" height="15" fill="rgb(211,29,28)"/><text x="54.1374%" y="335.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="53.8874%" y="309" width="0.2162%" height="15" fill="rgb(228,72,33)"/><text x="54.1374%" y="319.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="53.8874%" y="293" width="0.2162%" height="15" fill="rgb(205,214,31)"/><text x="54.1374%" y="303.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="53.8968%" y="277" width="0.2068%" height="15" fill="rgb(224,111,15)"/><text x="54.1468%" y="287.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="53.8968%" y="261" width="0.2068%" height="15" fill="rgb(253,21,26)"/><text x="54.1468%" y="271.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="53.8968%" y="245" width="0.2068%" height="15" fill="rgb(245,139,43)"/><text x="54.1468%" y="255.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="53.9062%" y="229" width="0.1974%" height="15" fill="rgb(252,170,7)"/><text x="54.1562%" y="239.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="53.9062%" y="213" width="0.1974%" height="15" fill="rgb(231,118,14)"/><text x="54.1562%" y="223.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="53.9062%" y="197" width="0.1974%" height="15" fill="rgb(238,83,0)"/><text x="54.1562%" y="207.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="53.9438%" y="181" width="0.1598%" height="15" fill="rgb(221,39,39)"/><text x="54.1938%" y="191.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="53.9532%" y="165" width="0.1504%" height="15" fill="rgb(222,119,46)"/><text x="54.2032%" y="175.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="53.9720%" y="149" width="0.1316%" height="15" fill="rgb(222,165,49)"/><text x="54.2220%" y="159.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="53.9908%" y="133" width="0.1128%" height="15" fill="rgb(219,113,52)"/><text x="54.2408%" y="143.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (101 samples, 0.95%)</title><rect x="53.1635%" y="549" width="0.9495%" height="15" fill="rgb(214,7,15)"/><text x="53.4135%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (98 samples, 0.92%)</title><rect x="53.1917%" y="533" width="0.9213%" height="15" fill="rgb(235,32,4)"/><text x="53.4417%" y="543.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 0.28%)</title><rect x="53.8310%" y="517" width="0.2820%" height="15" fill="rgb(238,90,54)"/><text x="54.0810%" y="527.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (29 samples, 0.27%)</title><rect x="53.8404%" y="501" width="0.2726%" height="15" fill="rgb(213,208,19)"/><text x="54.0904%" y="511.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.10%)</title><rect x="54.2070%" y="469" width="0.1034%" height="15" fill="rgb(233,156,4)"/><text x="54.4570%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (23 samples, 0.22%)</title><rect x="54.1600%" y="501" width="0.2162%" height="15" fill="rgb(207,194,5)"/><text x="54.4100%" y="511.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (22 samples, 0.21%)</title><rect x="54.1694%" y="485" width="0.2068%" height="15" fill="rgb(206,111,30)"/><text x="54.4194%" y="495.50"></text></g><g><title>core::fmt::write (32 samples, 0.30%)</title><rect x="54.1130%" y="549" width="0.3008%" height="15" fill="rgb(243,70,54)"/><text x="54.3630%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (32 samples, 0.30%)</title><rect x="54.1130%" y="533" width="0.3008%" height="15" fill="rgb(242,28,8)"/><text x="54.3630%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (27 samples, 0.25%)</title><rect x="54.1600%" y="517" width="0.2538%" height="15" fill="rgb(219,106,18)"/><text x="54.4100%" y="527.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (135 samples, 1.27%)</title><rect x="53.1541%" y="565" width="1.2692%" height="15" fill="rgb(244,222,10)"/><text x="53.4041%" y="575.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (140 samples, 1.32%)</title><rect x="53.1259%" y="581" width="1.3162%" height="15" fill="rgb(236,179,52)"/><text x="53.3759%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 0.21%)</title><rect x="54.4984%" y="469" width="0.2068%" height="15" fill="rgb(213,23,39)"/><text x="54.7484%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (22 samples, 0.21%)</title><rect x="54.4984%" y="453" width="0.2068%" height="15" fill="rgb(238,48,10)"/><text x="54.7484%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (22 samples, 0.21%)</title><rect x="54.4984%" y="437" width="0.2068%" height="15" fill="rgb(251,196,23)"/><text x="54.7484%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 0.21%)</title><rect x="54.4984%" y="421" width="0.2068%" height="15" fill="rgb(250,152,24)"/><text x="54.7484%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 0.21%)</title><rect x="54.4984%" y="405" width="0.2068%" height="15" fill="rgb(209,150,17)"/><text x="54.7484%" y="415.50"></text></g><g><title>__libc_recv (22 samples, 0.21%)</title><rect x="54.4984%" y="389" width="0.2068%" height="15" fill="rgb(234,202,34)"/><text x="54.7484%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="54.4984%" y="373" width="0.2068%" height="15" fill="rgb(253,148,53)"/><text x="54.7484%" y="383.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="54.4984%" y="357" width="0.2068%" height="15" fill="rgb(218,129,16)"/><text x="54.7484%" y="367.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="54.5173%" y="341" width="0.1880%" height="15" fill="rgb(216,85,19)"/><text x="54.7673%" y="351.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="54.5173%" y="325" width="0.1880%" height="15" fill="rgb(235,228,7)"/><text x="54.7673%" y="335.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="54.5173%" y="309" width="0.1880%" height="15" fill="rgb(245,175,0)"/><text x="54.7673%" y="319.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="54.5173%" y="293" width="0.1880%" height="15" fill="rgb(208,168,36)"/><text x="54.7673%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="54.5267%" y="277" width="0.1786%" height="15" fill="rgb(246,171,24)"/><text x="54.7767%" y="287.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="54.5361%" y="261" width="0.1692%" height="15" fill="rgb(215,142,24)"/><text x="54.7861%" y="271.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="54.5361%" y="245" width="0.1692%" height="15" fill="rgb(250,187,7)"/><text x="54.7861%" y="255.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="54.5455%" y="229" width="0.1598%" height="15" fill="rgb(228,66,33)"/><text x="54.7955%" y="239.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="54.5643%" y="213" width="0.1410%" height="15" fill="rgb(234,215,21)"/><text x="54.8143%" y="223.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="54.5831%" y="197" width="0.1222%" height="15" fill="rgb(222,191,20)"/><text x="54.8331%" y="207.50"></text></g><g><title>mysql::conn::Conn::read_packet (24 samples, 0.23%)</title><rect x="54.4984%" y="501" width="0.2256%" height="15" fill="rgb(245,79,54)"/><text x="54.7484%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.23%)</title><rect x="54.4984%" y="485" width="0.2256%" height="15" fill="rgb(240,10,37)"/><text x="54.7484%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (26 samples, 0.24%)</title><rect x="54.4890%" y="517" width="0.2444%" height="15" fill="rgb(214,192,32)"/><text x="54.7390%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (42 samples, 0.39%)</title><rect x="54.4420%" y="549" width="0.3948%" height="15" fill="rgb(209,36,54)"/><text x="54.6920%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (40 samples, 0.38%)</title><rect x="54.4608%" y="533" width="0.3760%" height="15" fill="rgb(220,10,11)"/><text x="54.7108%" y="543.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (11 samples, 0.10%)</title><rect x="54.7335%" y="517" width="0.1034%" height="15" fill="rgb(221,106,17)"/><text x="54.9835%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (28 samples, 0.26%)</title><rect x="54.8651%" y="533" width="0.2632%" height="15" fill="rgb(251,142,44)"/><text x="55.1151%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (23 samples, 0.22%)</title><rect x="54.9121%" y="517" width="0.2162%" height="15" fill="rgb(238,13,15)"/><text x="55.1621%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.13%)</title><rect x="54.9967%" y="501" width="0.1316%" height="15" fill="rgb(208,107,27)"/><text x="55.2467%" y="511.50"></text></g><g><title>core::fmt::write (30 samples, 0.28%)</title><rect x="54.8557%" y="549" width="0.2820%" height="15" fill="rgb(205,136,37)"/><text x="55.1057%" y="559.50"></text></g><g><title>hotcrp::datagen::conflicts::insert_paper_conflict (75 samples, 0.71%)</title><rect x="54.4420%" y="581" width="0.7051%" height="15" fill="rgb(250,205,27)"/><text x="54.6920%" y="591.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (75 samples, 0.71%)</title><rect x="54.4420%" y="565" width="0.7051%" height="15" fill="rgb(210,80,43)"/><text x="54.6920%" y="575.50"></text></g><g><title>__libc_recv (49 samples, 0.46%)</title><rect x="55.2505%" y="389" width="0.4607%" height="15" fill="rgb(247,160,36)"/><text x="55.5005%" y="399.50"></text></g><g><title>[unknown] (47 samples, 0.44%)</title><rect x="55.2693%" y="373" width="0.4419%" height="15" fill="rgb(234,13,49)"/><text x="55.5193%" y="383.50"></text></g><g><title>[unknown] (47 samples, 0.44%)</title><rect x="55.2693%" y="357" width="0.4419%" height="15" fill="rgb(234,122,0)"/><text x="55.5193%" y="367.50"></text></g><g><title>[unknown] (45 samples, 0.42%)</title><rect x="55.2881%" y="341" width="0.4231%" height="15" fill="rgb(207,146,38)"/><text x="55.5381%" y="351.50"></text></g><g><title>[unknown] (45 samples, 0.42%)</title><rect x="55.2881%" y="325" width="0.4231%" height="15" fill="rgb(207,177,25)"/><text x="55.5381%" y="335.50"></text></g><g><title>[unknown] (44 samples, 0.41%)</title><rect x="55.2975%" y="309" width="0.4137%" height="15" fill="rgb(211,178,42)"/><text x="55.5475%" y="319.50"></text></g><g><title>[unknown] (44 samples, 0.41%)</title><rect x="55.2975%" y="293" width="0.4137%" height="15" fill="rgb(230,69,54)"/><text x="55.5475%" y="303.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="55.3069%" y="277" width="0.4042%" height="15" fill="rgb(214,135,41)"/><text x="55.5569%" y="287.50"></text></g><g><title>[unknown] (40 samples, 0.38%)</title><rect x="55.3352%" y="261" width="0.3760%" height="15" fill="rgb(237,67,25)"/><text x="55.5852%" y="271.50"></text></g><g><title>[unknown] (38 samples, 0.36%)</title><rect x="55.3540%" y="245" width="0.3572%" height="15" fill="rgb(222,189,50)"/><text x="55.6040%" y="255.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="55.4386%" y="229" width="0.2726%" height="15" fill="rgb(245,148,34)"/><text x="55.6886%" y="239.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="55.4856%" y="213" width="0.2256%" height="15" fill="rgb(222,29,6)"/><text x="55.7356%" y="223.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="55.5326%" y="197" width="0.1786%" height="15" fill="rgb(221,189,43)"/><text x="55.7826%" y="207.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (51 samples, 0.48%)</title><rect x="55.2411%" y="469" width="0.4795%" height="15" fill="rgb(207,36,27)"/><text x="55.4911%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (50 samples, 0.47%)</title><rect x="55.2505%" y="453" width="0.4701%" height="15" fill="rgb(217,90,24)"/><text x="55.5005%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (50 samples, 0.47%)</title><rect x="55.2505%" y="437" width="0.4701%" height="15" fill="rgb(224,66,35)"/><text x="55.5005%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (50 samples, 0.47%)</title><rect x="55.2505%" y="421" width="0.4701%" height="15" fill="rgb(221,13,50)"/><text x="55.5005%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (50 samples, 0.47%)</title><rect x="55.2505%" y="405" width="0.4701%" height="15" fill="rgb(236,68,49)"/><text x="55.5005%" y="415.50"></text></g><g><title>mysql::conn::Conn::read_packet (61 samples, 0.57%)</title><rect x="55.2223%" y="501" width="0.5735%" height="15" fill="rgb(229,146,28)"/><text x="55.4723%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.56%)</title><rect x="55.2317%" y="485" width="0.5641%" height="15" fill="rgb(225,31,38)"/><text x="55.4817%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (67 samples, 0.63%)</title><rect x="55.1847%" y="517" width="0.6299%" height="15" fill="rgb(250,208,3)"/><text x="55.4347%" y="527.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (28 samples, 0.26%)</title><rect x="55.8616%" y="485" width="0.2632%" height="15" fill="rgb(246,54,23)"/><text x="56.1116%" y="495.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (28 samples, 0.26%)</title><rect x="55.8616%" y="469" width="0.2632%" height="15" fill="rgb(243,76,11)"/><text x="56.1116%" y="479.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (28 samples, 0.26%)</title><rect x="55.8616%" y="453" width="0.2632%" height="15" fill="rgb(245,21,50)"/><text x="56.1116%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (28 samples, 0.26%)</title><rect x="55.8616%" y="437" width="0.2632%" height="15" fill="rgb(228,9,43)"/><text x="56.1116%" y="447.50"></text></g><g><title>__libc_write (28 samples, 0.26%)</title><rect x="55.8616%" y="421" width="0.2632%" height="15" fill="rgb(208,100,47)"/><text x="56.1116%" y="431.50"></text></g><g><title>[unknown] (28 samples, 0.26%)</title><rect x="55.8616%" y="405" width="0.2632%" height="15" fill="rgb(232,26,8)"/><text x="56.1116%" y="415.50"></text></g><g><title>[unknown] (28 samples, 0.26%)</title><rect x="55.8616%" y="389" width="0.2632%" height="15" fill="rgb(216,166,38)"/><text x="56.1116%" y="399.50"></text></g><g><title>[unknown] (28 samples, 0.26%)</title><rect x="55.8616%" y="373" width="0.2632%" height="15" fill="rgb(251,202,51)"/><text x="56.1116%" y="383.50"></text></g><g><title>[unknown] (28 samples, 0.26%)</title><rect x="55.8616%" y="357" width="0.2632%" height="15" fill="rgb(254,216,34)"/><text x="56.1116%" y="367.50"></text></g><g><title>[unknown] (28 samples, 0.26%)</title><rect x="55.8616%" y="341" width="0.2632%" height="15" fill="rgb(251,32,27)"/><text x="56.1116%" y="351.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="55.8992%" y="325" width="0.2256%" height="15" fill="rgb(208,127,28)"/><text x="56.1492%" y="335.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="55.8992%" y="309" width="0.2256%" height="15" fill="rgb(224,137,22)"/><text x="56.1492%" y="319.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="55.8992%" y="293" width="0.2256%" height="15" fill="rgb(254,70,32)"/><text x="56.1492%" y="303.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="55.9086%" y="277" width="0.2162%" height="15" fill="rgb(229,75,37)"/><text x="56.1586%" y="287.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="55.9274%" y="261" width="0.1974%" height="15" fill="rgb(252,64,23)"/><text x="56.1774%" y="271.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="55.9368%" y="245" width="0.1880%" height="15" fill="rgb(232,162,48)"/><text x="56.1868%" y="255.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="55.9462%" y="229" width="0.1786%" height="15" fill="rgb(246,160,12)"/><text x="56.1962%" y="239.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="55.9462%" y="213" width="0.1786%" height="15" fill="rgb(247,166,0)"/><text x="56.1962%" y="223.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="55.9650%" y="197" width="0.1598%" height="15" fill="rgb(249,219,21)"/><text x="56.2150%" y="207.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="55.9838%" y="181" width="0.1410%" height="15" fill="rgb(205,209,3)"/><text x="56.2338%" y="191.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="56.0120%" y="165" width="0.1128%" height="15" fill="rgb(243,44,1)"/><text x="56.2620%" y="175.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="56.0214%" y="149" width="0.1034%" height="15" fill="rgb(206,159,16)"/><text x="56.2714%" y="159.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (106 samples, 1.00%)</title><rect x="55.1471%" y="549" width="0.9965%" height="15" fill="rgb(244,77,30)"/><text x="55.3971%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (105 samples, 0.99%)</title><rect x="55.1565%" y="533" width="0.9871%" height="15" fill="rgb(218,69,12)"/><text x="55.4065%" y="543.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (34 samples, 0.32%)</title><rect x="55.8240%" y="517" width="0.3196%" height="15" fill="rgb(212,87,7)"/><text x="56.0740%" y="527.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (32 samples, 0.30%)</title><rect x="55.8428%" y="501" width="0.3008%" height="15" fill="rgb(245,114,25)"/><text x="56.0928%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.11%)</title><rect x="56.2753%" y="501" width="0.1128%" height="15" fill="rgb(210,61,42)"/><text x="56.5253%" y="511.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 0.11%)</title><rect x="56.2753%" y="485" width="0.1128%" height="15" fill="rgb(211,52,33)"/><text x="56.5253%" y="495.50"></text></g><g><title>core::fmt::write (39 samples, 0.37%)</title><rect x="56.1719%" y="549" width="0.3666%" height="15" fill="rgb(234,58,33)"/><text x="56.4219%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (35 samples, 0.33%)</title><rect x="56.2095%" y="533" width="0.3290%" height="15" fill="rgb(220,115,36)"/><text x="56.4595%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (28 samples, 0.26%)</title><rect x="56.2753%" y="517" width="0.2632%" height="15" fill="rgb(243,153,54)"/><text x="56.5253%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (16 samples, 0.15%)</title><rect x="56.3881%" y="501" width="0.1504%" height="15" fill="rgb(251,47,18)"/><text x="56.6381%" y="511.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (150 samples, 1.41%)</title><rect x="55.1471%" y="565" width="1.4102%" height="15" fill="rgb(242,102,42)"/><text x="55.3971%" y="575.50"></text></g><g><title>hotcrp::datagen::review_preferences::insert_review_preference (151 samples, 1.42%)</title><rect x="55.1471%" y="581" width="1.4196%" height="15" fill="rgb(234,31,38)"/><text x="55.3971%" y="591.50"></text></g><g><title>__libc_recv (48 samples, 0.45%)</title><rect x="56.6607%" y="389" width="0.4513%" height="15" fill="rgb(221,117,51)"/><text x="56.9107%" y="399.50"></text></g><g><title>[unknown] (48 samples, 0.45%)</title><rect x="56.6607%" y="373" width="0.4513%" height="15" fill="rgb(212,20,18)"/><text x="56.9107%" y="383.50"></text></g><g><title>[unknown] (48 samples, 0.45%)</title><rect x="56.6607%" y="357" width="0.4513%" height="15" fill="rgb(245,133,36)"/><text x="56.9107%" y="367.50"></text></g><g><title>[unknown] (46 samples, 0.43%)</title><rect x="56.6795%" y="341" width="0.4325%" height="15" fill="rgb(212,6,19)"/><text x="56.9295%" y="351.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="56.7077%" y="325" width="0.4042%" height="15" fill="rgb(218,1,36)"/><text x="56.9577%" y="335.50"></text></g><g><title>[unknown] (41 samples, 0.39%)</title><rect x="56.7265%" y="309" width="0.3854%" height="15" fill="rgb(246,84,54)"/><text x="56.9765%" y="319.50"></text></g><g><title>[unknown] (41 samples, 0.39%)</title><rect x="56.7265%" y="293" width="0.3854%" height="15" fill="rgb(242,110,6)"/><text x="56.9765%" y="303.50"></text></g><g><title>[unknown] (40 samples, 0.38%)</title><rect x="56.7359%" y="277" width="0.3760%" height="15" fill="rgb(214,47,5)"/><text x="56.9859%" y="287.50"></text></g><g><title>[unknown] (34 samples, 0.32%)</title><rect x="56.7923%" y="261" width="0.3196%" height="15" fill="rgb(218,159,25)"/><text x="57.0423%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.30%)</title><rect x="56.8111%" y="245" width="0.3008%" height="15" fill="rgb(215,211,28)"/><text x="57.0611%" y="255.50"></text></g><g><title>[unknown] (32 samples, 0.30%)</title><rect x="56.8111%" y="229" width="0.3008%" height="15" fill="rgb(238,59,32)"/><text x="57.0611%" y="239.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="56.8393%" y="213" width="0.2726%" height="15" fill="rgb(226,82,3)"/><text x="57.0893%" y="223.50"></text></g><g><title>[unknown] (28 samples, 0.26%)</title><rect x="56.8487%" y="197" width="0.2632%" height="15" fill="rgb(240,164,32)"/><text x="57.0987%" y="207.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="56.9333%" y="181" width="0.1786%" height="15" fill="rgb(232,46,7)"/><text x="57.1833%" y="191.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (50 samples, 0.47%)</title><rect x="56.6513%" y="469" width="0.4701%" height="15" fill="rgb(229,129,53)"/><text x="56.9013%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (49 samples, 0.46%)</title><rect x="56.6607%" y="453" width="0.4607%" height="15" fill="rgb(234,188,29)"/><text x="56.9107%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (49 samples, 0.46%)</title><rect x="56.6607%" y="437" width="0.4607%" height="15" fill="rgb(246,141,4)"/><text x="56.9107%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (49 samples, 0.46%)</title><rect x="56.6607%" y="421" width="0.4607%" height="15" fill="rgb(229,23,39)"/><text x="56.9107%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (49 samples, 0.46%)</title><rect x="56.6607%" y="405" width="0.4607%" height="15" fill="rgb(206,12,3)"/><text x="56.9107%" y="415.50"></text></g><g><title>mysql::conn::Conn::read_packet (60 samples, 0.56%)</title><rect x="56.6419%" y="501" width="0.5641%" height="15" fill="rgb(252,226,20)"/><text x="56.8919%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.56%)</title><rect x="56.6419%" y="485" width="0.5641%" height="15" fill="rgb(216,123,35)"/><text x="56.8919%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (67 samples, 0.63%)</title><rect x="56.6137%" y="517" width="0.6299%" height="15" fill="rgb(212,68,40)"/><text x="56.8637%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (98 samples, 0.92%)</title><rect x="56.5761%" y="549" width="0.9213%" height="15" fill="rgb(254,125,32)"/><text x="56.8261%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (96 samples, 0.90%)</title><rect x="56.5949%" y="533" width="0.9025%" height="15" fill="rgb(253,97,22)"/><text x="56.8449%" y="543.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (27 samples, 0.25%)</title><rect x="57.2436%" y="517" width="0.2538%" height="15" fill="rgb(241,101,14)"/><text x="57.4936%" y="527.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (26 samples, 0.24%)</title><rect x="57.2530%" y="501" width="0.2444%" height="15" fill="rgb(238,103,29)"/><text x="57.5030%" y="511.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (26 samples, 0.24%)</title><rect x="57.2530%" y="485" width="0.2444%" height="15" fill="rgb(233,195,47)"/><text x="57.5030%" y="495.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (26 samples, 0.24%)</title><rect x="57.2530%" y="469" width="0.2444%" height="15" fill="rgb(246,218,30)"/><text x="57.5030%" y="479.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (26 samples, 0.24%)</title><rect x="57.2530%" y="453" width="0.2444%" height="15" fill="rgb(219,145,47)"/><text x="57.5030%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (26 samples, 0.24%)</title><rect x="57.2530%" y="437" width="0.2444%" height="15" fill="rgb(243,12,26)"/><text x="57.5030%" y="447.50"></text></g><g><title>__libc_write (26 samples, 0.24%)</title><rect x="57.2530%" y="421" width="0.2444%" height="15" fill="rgb(214,87,16)"/><text x="57.5030%" y="431.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="57.2530%" y="405" width="0.2444%" height="15" fill="rgb(208,99,42)"/><text x="57.5030%" y="415.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="57.2530%" y="389" width="0.2444%" height="15" fill="rgb(253,99,2)"/><text x="57.5030%" y="399.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="57.2718%" y="373" width="0.2256%" height="15" fill="rgb(220,168,23)"/><text x="57.5218%" y="383.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="57.2718%" y="357" width="0.2256%" height="15" fill="rgb(242,38,24)"/><text x="57.5218%" y="367.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="57.2718%" y="341" width="0.2256%" height="15" fill="rgb(225,182,9)"/><text x="57.5218%" y="351.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="57.2812%" y="325" width="0.2162%" height="15" fill="rgb(243,178,37)"/><text x="57.5312%" y="335.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="57.3000%" y="309" width="0.1974%" height="15" fill="rgb(232,139,19)"/><text x="57.5500%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="57.3000%" y="293" width="0.1974%" height="15" fill="rgb(225,201,24)"/><text x="57.5500%" y="303.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="57.3000%" y="277" width="0.1974%" height="15" fill="rgb(221,47,46)"/><text x="57.5500%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="57.3188%" y="261" width="0.1786%" height="15" fill="rgb(249,23,13)"/><text x="57.5688%" y="271.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="57.3282%" y="245" width="0.1692%" height="15" fill="rgb(219,9,5)"/><text x="57.5782%" y="255.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="57.3282%" y="229" width="0.1692%" height="15" fill="rgb(254,171,16)"/><text x="57.5782%" y="239.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="57.3376%" y="213" width="0.1598%" height="15" fill="rgb(230,171,20)"/><text x="57.5876%" y="223.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="57.3470%" y="197" width="0.1504%" height="15" fill="rgb(210,71,41)"/><text x="57.5970%" y="207.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="57.3658%" y="181" width="0.1316%" height="15" fill="rgb(206,173,20)"/><text x="57.6158%" y="191.50"></text></g><g><title>core::fmt::write (33 samples, 0.31%)</title><rect x="57.5256%" y="549" width="0.3102%" height="15" fill="rgb(233,88,34)"/><text x="57.7756%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (29 samples, 0.27%)</title><rect x="57.5632%" y="533" width="0.2726%" height="15" fill="rgb(223,209,46)"/><text x="57.8132%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (22 samples, 0.21%)</title><rect x="57.6290%" y="517" width="0.2068%" height="15" fill="rgb(250,43,18)"/><text x="57.8790%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.14%)</title><rect x="57.6948%" y="501" width="0.1410%" height="15" fill="rgb(208,13,10)"/><text x="57.9448%" y="511.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (136 samples, 1.28%)</title><rect x="56.5667%" y="565" width="1.2786%" height="15" fill="rgb(212,200,36)"/><text x="56.8167%" y="575.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (503 samples, 4.73%)</title><rect x="53.1259%" y="597" width="4.7288%" height="15" fill="rgb(225,90,30)"/><text x="53.3759%" y="607.50">hotcrp..</text></g><g><title>hotcrp::datagen::watches::insert_paper_watch (137 samples, 1.29%)</title><rect x="56.5667%" y="581" width="1.2880%" height="15" fill="rgb(236,182,39)"/><text x="56.8167%" y="591.50"></text></g><g><title>hotcrp::datagen::datagen::populate_database (703 samples, 6.61%)</title><rect x="51.3491%" y="613" width="6.6090%" height="15" fill="rgb(212,144,35)"/><text x="51.5991%" y="623.50">hotcrp::d..</text></g><g><title>hotcrp::datagen::users::insert_users (11 samples, 0.10%)</title><rect x="57.8547%" y="597" width="0.1034%" height="15" fill="rgb(228,63,44)"/><text x="58.1047%" y="607.50"></text></g><g><title>hotcrp::main (2,322 samples, 21.83%)</title><rect x="36.2696%" y="629" width="21.8295%" height="15" fill="rgb(228,109,6)"/><text x="36.5196%" y="639.50">hotcrp::main</text></g><g><title>mysql::conn::Conn::handle_result_set (12 samples, 0.11%)</title><rect x="58.2965%" y="629" width="0.1128%" height="15" fill="rgb(238,117,24)"/><text x="58.5465%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.12%)</title><rect x="58.7008%" y="469" width="0.1222%" height="15" fill="rgb(242,26,26)"/><text x="58.9508%" y="479.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (13 samples, 0.12%)</title><rect x="58.7008%" y="453" width="0.1222%" height="15" fill="rgb(221,92,48)"/><text x="58.9508%" y="463.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (13 samples, 0.12%)</title><rect x="58.7008%" y="437" width="0.1222%" height="15" fill="rgb(209,209,32)"/><text x="58.9508%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (13 samples, 0.12%)</title><rect x="58.7008%" y="421" width="0.1222%" height="15" fill="rgb(221,70,22)"/><text x="58.9508%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.12%)</title><rect x="58.7008%" y="405" width="0.1222%" height="15" fill="rgb(248,145,5)"/><text x="58.9508%" y="415.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.12%)</title><rect x="58.7008%" y="389" width="0.1222%" height="15" fill="rgb(226,116,26)"/><text x="58.9508%" y="399.50"></text></g><g><title>_int_malloc (13 samples, 0.12%)</title><rect x="58.7008%" y="373" width="0.1222%" height="15" fill="rgb(244,5,17)"/><text x="58.9508%" y="383.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (30 samples, 0.28%)</title><rect x="58.7008%" y="485" width="0.2820%" height="15" fill="rgb(252,159,33)"/><text x="58.9508%" y="495.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.16%)</title><rect x="58.8230%" y="469" width="0.1598%" height="15" fill="rgb(206,71,0)"/><text x="59.0730%" y="479.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (17 samples, 0.16%)</title><rect x="58.8230%" y="453" width="0.1598%" height="15" fill="rgb(233,118,54)"/><text x="59.0730%" y="463.50"></text></g><g><title>mysql::conn::Conn::next_text (17 samples, 0.16%)</title><rect x="58.8230%" y="437" width="0.1598%" height="15" fill="rgb(234,83,48)"/><text x="59.0730%" y="447.50"></text></g><g><title>mysql_common::value::read_text_values (17 samples, 0.16%)</title><rect x="58.8230%" y="421" width="0.1598%" height="15" fill="rgb(228,3,54)"/><text x="59.0730%" y="431.50"></text></g><g><title>mysql_common::value::read_text_value (11 samples, 0.10%)</title><rect x="58.8794%" y="405" width="0.1034%" height="15" fill="rgb(226,155,13)"/><text x="59.1294%" y="415.50"></text></g><g><title>decor::is_guise (36 samples, 0.34%)</title><rect x="58.9828%" y="485" width="0.3384%" height="15" fill="rgb(241,28,37)"/><text x="59.2328%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (34 samples, 0.32%)</title><rect x="59.0016%" y="469" width="0.3196%" height="15" fill="rgb(233,93,10)"/><text x="59.2516%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (34 samples, 0.32%)</title><rect x="59.0016%" y="453" width="0.3196%" height="15" fill="rgb(225,113,19)"/><text x="59.2516%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (34 samples, 0.32%)</title><rect x="59.0016%" y="437" width="0.3196%" height="15" fill="rgb(241,2,18)"/><text x="59.2516%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (23 samples, 0.22%)</title><rect x="59.1050%" y="421" width="0.2162%" height="15" fill="rgb(228,207,21)"/><text x="59.3550%" y="431.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.18%)</title><rect x="59.1426%" y="405" width="0.1786%" height="15" fill="rgb(213,211,35)"/><text x="59.3926%" y="415.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="59.3400%" y="389" width="0.2162%" height="15" fill="rgb(209,83,10)"/><text x="59.5900%" y="399.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="59.3682%" y="373" width="0.1880%" height="15" fill="rgb(209,164,1)"/><text x="59.6182%" y="383.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="59.4246%" y="357" width="0.1316%" height="15" fill="rgb(213,184,43)"/><text x="59.6746%" y="367.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="59.4246%" y="341" width="0.1316%" height="15" fill="rgb(231,61,34)"/><text x="59.6746%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="59.4341%" y="325" width="0.1222%" height="15" fill="rgb(235,75,3)"/><text x="59.6841%" y="335.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="59.4341%" y="309" width="0.1222%" height="15" fill="rgb(220,106,47)"/><text x="59.6841%" y="319.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="59.4341%" y="293" width="0.1222%" height="15" fill="rgb(210,196,33)"/><text x="59.6841%" y="303.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="59.4435%" y="277" width="0.1128%" height="15" fill="rgb(229,154,42)"/><text x="59.6935%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="59.4435%" y="261" width="0.1128%" height="15" fill="rgb(228,114,26)"/><text x="59.6935%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.26%)</title><rect x="59.3212%" y="453" width="0.2632%" height="15" fill="rgb(208,144,1)"/><text x="59.5712%" y="463.50"></text></g><g><title>__GI___libc_realloc (28 samples, 0.26%)</title><rect x="59.3212%" y="437" width="0.2632%" height="15" fill="rgb(239,112,37)"/><text x="59.5712%" y="447.50"></text></g><g><title>_int_realloc (28 samples, 0.26%)</title><rect x="59.3212%" y="421" width="0.2632%" height="15" fill="rgb(210,96,50)"/><text x="59.5712%" y="431.50"></text></g><g><title>_int_malloc (28 samples, 0.26%)</title><rect x="59.3212%" y="405" width="0.2632%" height="15" fill="rgb(222,178,2)"/><text x="59.5712%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.37%)</title><rect x="59.3212%" y="469" width="0.3666%" height="15" fill="rgb(226,74,18)"/><text x="59.5712%" y="479.50"></text></g><g><title>decor::disguise::apply (111 samples, 1.04%)</title><rect x="58.7008%" y="501" width="1.0435%" height="15" fill="rgb(225,67,54)"/><text x="58.9508%" y="511.50"></text></g><g><title>decor::vault::insert_vault_entries (45 samples, 0.42%)</title><rect x="59.3212%" y="485" width="0.4231%" height="15" fill="rgb(251,92,32)"/><text x="59.5712%" y="495.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.13%)</title><rect x="59.7443%" y="373" width="0.1316%" height="15" fill="rgb(228,149,22)"/><text x="59.9943%" y="383.50"></text></g><g><title>_int_malloc (14 samples, 0.13%)</title><rect x="59.7443%" y="357" width="0.1316%" height="15" fill="rgb(243,54,13)"/><text x="59.9943%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.20%)</title><rect x="59.7443%" y="453" width="0.1974%" height="15" fill="rgb(243,180,28)"/><text x="59.9943%" y="463.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (21 samples, 0.20%)</title><rect x="59.7443%" y="437" width="0.1974%" height="15" fill="rgb(208,167,24)"/><text x="59.9943%" y="447.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (21 samples, 0.20%)</title><rect x="59.7443%" y="421" width="0.1974%" height="15" fill="rgb(245,73,45)"/><text x="59.9943%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (21 samples, 0.20%)</title><rect x="59.7443%" y="405" width="0.1974%" height="15" fill="rgb(237,203,48)"/><text x="59.9943%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.20%)</title><rect x="59.7443%" y="389" width="0.1974%" height="15" fill="rgb(211,197,16)"/><text x="59.9943%" y="399.50"></text></g><g><title>decor::vault::print_as_filters (27 samples, 0.25%)</title><rect x="59.7443%" y="501" width="0.2538%" height="15" fill="rgb(243,99,51)"/><text x="59.9943%" y="511.50"></text></g><g><title>decor::vault::get_vault_entries_with_constraint (27 samples, 0.25%)</title><rect x="59.7443%" y="485" width="0.2538%" height="15" fill="rgb(215,123,29)"/><text x="59.9943%" y="495.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (27 samples, 0.25%)</title><rect x="59.7443%" y="469" width="0.2538%" height="15" fill="rgb(239,186,37)"/><text x="59.9943%" y="479.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (12 samples, 0.11%)</title><rect x="60.0639%" y="469" width="0.1128%" height="15" fill="rgb(252,136,39)"/><text x="60.3139%" y="479.50"></text></g><g><title>hotcrp::datagen::datagen::populate_database (25 samples, 0.24%)</title><rect x="59.9981%" y="501" width="0.2350%" height="15" fill="rgb(223,213,32)"/><text x="60.2481%" y="511.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (18 samples, 0.17%)</title><rect x="60.0639%" y="485" width="0.1692%" height="15" fill="rgb(233,115,5)"/><text x="60.3139%" y="495.50"></text></g><g><title>std::rt::lang_start_internal (176 samples, 1.65%)</title><rect x="58.7008%" y="629" width="1.6546%" height="15" fill="rgb(207,226,44)"/><text x="58.9508%" y="639.50"></text></g><g><title>std::panic::catch_unwind (176 samples, 1.65%)</title><rect x="58.7008%" y="613" width="1.6546%" height="15" fill="rgb(208,126,0)"/><text x="58.9508%" y="623.50"></text></g><g><title>std::panicking::try (176 samples, 1.65%)</title><rect x="58.7008%" y="597" width="1.6546%" height="15" fill="rgb(244,66,21)"/><text x="58.9508%" y="607.50"></text></g><g><title>std::panicking::try::do_call (176 samples, 1.65%)</title><rect x="58.7008%" y="581" width="1.6546%" height="15" fill="rgb(222,97,12)"/><text x="58.9508%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (176 samples, 1.65%)</title><rect x="58.7008%" y="565" width="1.6546%" height="15" fill="rgb(219,213,19)"/><text x="58.9508%" y="575.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (176 samples, 1.65%)</title><rect x="58.7008%" y="549" width="1.6546%" height="15" fill="rgb(252,169,30)"/><text x="58.9508%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (176 samples, 1.65%)</title><rect x="58.7008%" y="533" width="1.6546%" height="15" fill="rgb(206,32,51)"/><text x="58.9508%" y="543.50"></text></g><g><title>hotcrp::main (176 samples, 1.65%)</title><rect x="58.7008%" y="517" width="1.6546%" height="15" fill="rgb(250,172,42)"/><text x="58.9508%" y="527.50"></text></g><g><title>[unknown] (5,629 samples, 52.92%)</title><rect x="7.5679%" y="645" width="52.9191%" height="15" fill="rgb(209,34,43)"/><text x="7.8179%" y="655.50">[unknown]</text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="60.5998%" y="613" width="0.1504%" height="15" fill="rgb(223,11,35)"/><text x="60.8498%" y="623.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="60.6092%" y="597" width="0.1410%" height="15" fill="rgb(251,219,26)"/><text x="60.8592%" y="607.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="60.6280%" y="581" width="0.1222%" height="15" fill="rgb(231,119,3)"/><text x="60.8780%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="60.6280%" y="565" width="0.1222%" height="15" fill="rgb(216,97,11)"/><text x="60.8780%" y="575.50"></text></g><g><title>advise_stack_range (28 samples, 0.26%)</title><rect x="60.9006%" y="613" width="0.2632%" height="15" fill="rgb(223,59,9)"/><text x="61.1506%" y="623.50"></text></g><g><title>__GI_madvise (27 samples, 0.25%)</title><rect x="60.9100%" y="597" width="0.2538%" height="15" fill="rgb(233,93,31)"/><text x="61.1600%" y="607.50"></text></g><g><title>[unknown] (27 samples, 0.25%)</title><rect x="60.9100%" y="581" width="0.2538%" height="15" fill="rgb(239,81,33)"/><text x="61.1600%" y="591.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="60.9194%" y="565" width="0.2444%" height="15" fill="rgb(213,120,34)"/><text x="61.1694%" y="575.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="60.9476%" y="549" width="0.2162%" height="15" fill="rgb(243,49,53)"/><text x="61.1976%" y="559.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="60.9570%" y="533" width="0.2068%" height="15" fill="rgb(247,216,33)"/><text x="61.2070%" y="543.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="60.9664%" y="517" width="0.1974%" height="15" fill="rgb(226,26,14)"/><text x="61.2164%" y="527.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="60.9946%" y="501" width="0.1692%" height="15" fill="rgb(215,49,53)"/><text x="61.2446%" y="511.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="61.0322%" y="485" width="0.1316%" height="15" fill="rgb(245,162,40)"/><text x="61.2822%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="61.0604%" y="469" width="0.1034%" height="15" fill="rgb(229,68,17)"/><text x="61.3104%" y="479.50"></text></g><g><title>std::sys::unix::thread::guard::current (28 samples, 0.26%)</title><rect x="61.1921%" y="549" width="0.2632%" height="15" fill="rgb(213,182,10)"/><text x="61.4421%" y="559.50"></text></g><g><title>pthread_getattr_np (26 samples, 0.24%)</title><rect x="61.2109%" y="533" width="0.2444%" height="15" fill="rgb(245,125,30)"/><text x="61.4609%" y="543.50"></text></g><g><title>__pthread_getaffinity_new (14 samples, 0.13%)</title><rect x="61.3237%" y="517" width="0.1316%" height="15" fill="rgb(232,202,2)"/><text x="61.5737%" y="527.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="61.3331%" y="501" width="0.1222%" height="15" fill="rgb(237,140,51)"/><text x="61.5831%" y="511.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="61.3331%" y="485" width="0.1222%" height="15" fill="rgb(236,157,25)"/><text x="61.5831%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (11 samples, 0.10%)</title><rect x="61.5775%" y="533" width="0.1034%" height="15" fill="rgb(219,209,0)"/><text x="61.8275%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (60 samples, 0.56%)</title><rect x="61.7373%" y="453" width="0.5641%" height="15" fill="rgb(240,116,54)"/><text x="61.9873%" y="463.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (60 samples, 0.56%)</title><rect x="61.7373%" y="437" width="0.5641%" height="15" fill="rgb(216,10,36)"/><text x="61.9873%" y="447.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (60 samples, 0.56%)</title><rect x="61.7373%" y="421" width="0.5641%" height="15" fill="rgb(222,72,44)"/><text x="61.9873%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::read (60 samples, 0.56%)</title><rect x="61.7373%" y="405" width="0.5641%" height="15" fill="rgb(232,159,9)"/><text x="61.9873%" y="415.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (60 samples, 0.56%)</title><rect x="61.7373%" y="389" width="0.5641%" height="15" fill="rgb(210,39,32)"/><text x="61.9873%" y="399.50"></text></g><g><title>__libc_recv (60 samples, 0.56%)</title><rect x="61.7373%" y="373" width="0.5641%" height="15" fill="rgb(216,194,45)"/><text x="61.9873%" y="383.50"></text></g><g><title>__libc_recv (60 samples, 0.56%)</title><rect x="61.7373%" y="357" width="0.5641%" height="15" fill="rgb(218,18,35)"/><text x="61.9873%" y="367.50"></text></g><g><title>[unknown] (60 samples, 0.56%)</title><rect x="61.7373%" y="341" width="0.5641%" height="15" fill="rgb(207,83,51)"/><text x="61.9873%" y="351.50"></text></g><g><title>[unknown] (59 samples, 0.55%)</title><rect x="61.7467%" y="325" width="0.5547%" height="15" fill="rgb(225,63,43)"/><text x="61.9967%" y="335.50"></text></g><g><title>[unknown] (54 samples, 0.51%)</title><rect x="61.7937%" y="309" width="0.5077%" height="15" fill="rgb(207,57,36)"/><text x="62.0437%" y="319.50"></text></g><g><title>[unknown] (54 samples, 0.51%)</title><rect x="61.7937%" y="293" width="0.5077%" height="15" fill="rgb(216,99,33)"/><text x="62.0437%" y="303.50"></text></g><g><title>[unknown] (54 samples, 0.51%)</title><rect x="61.7937%" y="277" width="0.5077%" height="15" fill="rgb(225,42,16)"/><text x="62.0437%" y="287.50"></text></g><g><title>[unknown] (54 samples, 0.51%)</title><rect x="61.7937%" y="261" width="0.5077%" height="15" fill="rgb(220,201,45)"/><text x="62.0437%" y="271.50"></text></g><g><title>[unknown] (53 samples, 0.50%)</title><rect x="61.8031%" y="245" width="0.4983%" height="15" fill="rgb(225,33,4)"/><text x="62.0531%" y="255.50"></text></g><g><title>[unknown] (45 samples, 0.42%)</title><rect x="61.8783%" y="229" width="0.4231%" height="15" fill="rgb(224,33,50)"/><text x="62.1283%" y="239.50"></text></g><g><title>[unknown] (44 samples, 0.41%)</title><rect x="61.8878%" y="213" width="0.4137%" height="15" fill="rgb(246,198,51)"/><text x="62.1378%" y="223.50"></text></g><g><title>[unknown] (42 samples, 0.39%)</title><rect x="61.9066%" y="197" width="0.3948%" height="15" fill="rgb(205,22,4)"/><text x="62.1566%" y="207.50"></text></g><g><title>[unknown] (34 samples, 0.32%)</title><rect x="61.9818%" y="181" width="0.3196%" height="15" fill="rgb(206,3,8)"/><text x="62.2318%" y="191.50"></text></g><g><title>[unknown] (30 samples, 0.28%)</title><rect x="62.0194%" y="165" width="0.2820%" height="15" fill="rgb(251,23,15)"/><text x="62.2694%" y="175.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="62.0946%" y="149" width="0.2068%" height="15" fill="rgb(252,88,28)"/><text x="62.3446%" y="159.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="62.1322%" y="133" width="0.1692%" height="15" fill="rgb(212,127,14)"/><text x="62.3822%" y="143.50"></text></g><g><title>mysql::conn::Conn::read_packet (67 samples, 0.63%)</title><rect x="61.7185%" y="485" width="0.6299%" height="15" fill="rgb(247,145,37)"/><text x="61.9685%" y="495.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.62%)</title><rect x="61.7279%" y="469" width="0.6205%" height="15" fill="rgb(209,117,53)"/><text x="61.9779%" y="479.50"></text></g><g><title>mysql::conn::pool::Pool::get_conn (131 samples, 1.23%)</title><rect x="61.6809%" y="533" width="1.2316%" height="15" fill="rgb(212,90,42)"/><text x="61.9309%" y="543.50"></text></g><g><title>mysql::conn::pool::Pool::_get_conn (131 samples, 1.23%)</title><rect x="61.6809%" y="517" width="1.2316%" height="15" fill="rgb(218,164,37)"/><text x="61.9309%" y="527.50"></text></g><g><title>mysql::conn::Conn::ping (129 samples, 1.21%)</title><rect x="61.6997%" y="501" width="1.2127%" height="15" fill="rgb(246,65,34)"/><text x="61.9497%" y="511.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (60 samples, 0.56%)</title><rect x="62.3484%" y="485" width="0.5641%" height="15" fill="rgb(231,100,33)"/><text x="62.5984%" y="495.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (56 samples, 0.53%)</title><rect x="62.3860%" y="469" width="0.5265%" height="15" fill="rgb(228,126,14)"/><text x="62.6360%" y="479.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (56 samples, 0.53%)</title><rect x="62.3860%" y="453" width="0.5265%" height="15" fill="rgb(215,173,21)"/><text x="62.6360%" y="463.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (56 samples, 0.53%)</title><rect x="62.3860%" y="437" width="0.5265%" height="15" fill="rgb(210,6,40)"/><text x="62.6360%" y="447.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (56 samples, 0.53%)</title><rect x="62.3860%" y="421" width="0.5265%" height="15" fill="rgb(212,48,18)"/><text x="62.6360%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (56 samples, 0.53%)</title><rect x="62.3860%" y="405" width="0.5265%" height="15" fill="rgb(230,214,11)"/><text x="62.6360%" y="415.50"></text></g><g><title>__libc_write (56 samples, 0.53%)</title><rect x="62.3860%" y="389" width="0.5265%" height="15" fill="rgb(254,105,39)"/><text x="62.6360%" y="399.50"></text></g><g><title>__libc_write (56 samples, 0.53%)</title><rect x="62.3860%" y="373" width="0.5265%" height="15" fill="rgb(245,158,5)"/><text x="62.6360%" y="383.50"></text></g><g><title>[unknown] (56 samples, 0.53%)</title><rect x="62.3860%" y="357" width="0.5265%" height="15" fill="rgb(249,208,11)"/><text x="62.6360%" y="367.50"></text></g><g><title>[unknown] (55 samples, 0.52%)</title><rect x="62.3954%" y="341" width="0.5171%" height="15" fill="rgb(210,39,28)"/><text x="62.6454%" y="351.50"></text></g><g><title>[unknown] (50 samples, 0.47%)</title><rect x="62.4424%" y="325" width="0.4701%" height="15" fill="rgb(211,56,53)"/><text x="62.6924%" y="335.50"></text></g><g><title>[unknown] (50 samples, 0.47%)</title><rect x="62.4424%" y="309" width="0.4701%" height="15" fill="rgb(226,201,30)"/><text x="62.6924%" y="319.50"></text></g><g><title>[unknown] (50 samples, 0.47%)</title><rect x="62.4424%" y="293" width="0.4701%" height="15" fill="rgb(239,101,34)"/><text x="62.6924%" y="303.50"></text></g><g><title>[unknown] (49 samples, 0.46%)</title><rect x="62.4518%" y="277" width="0.4607%" height="15" fill="rgb(226,209,5)"/><text x="62.7018%" y="287.50"></text></g><g><title>[unknown] (46 samples, 0.43%)</title><rect x="62.4800%" y="261" width="0.4325%" height="15" fill="rgb(250,105,47)"/><text x="62.7300%" y="271.50"></text></g><g><title>[unknown] (41 samples, 0.39%)</title><rect x="62.5270%" y="245" width="0.3854%" height="15" fill="rgb(230,72,3)"/><text x="62.7770%" y="255.50"></text></g><g><title>[unknown] (38 samples, 0.36%)</title><rect x="62.5552%" y="229" width="0.3572%" height="15" fill="rgb(232,218,39)"/><text x="62.8052%" y="239.50"></text></g><g><title>[unknown] (38 samples, 0.36%)</title><rect x="62.5552%" y="213" width="0.3572%" height="15" fill="rgb(248,166,6)"/><text x="62.8052%" y="223.50"></text></g><g><title>[unknown] (33 samples, 0.31%)</title><rect x="62.6022%" y="197" width="0.3102%" height="15" fill="rgb(247,89,20)"/><text x="62.8522%" y="207.50"></text></g><g><title>[unknown] (33 samples, 0.31%)</title><rect x="62.6022%" y="181" width="0.3102%" height="15" fill="rgb(248,130,54)"/><text x="62.8522%" y="191.50"></text></g><g><title>[unknown] (31 samples, 0.29%)</title><rect x="62.6210%" y="165" width="0.2914%" height="15" fill="rgb(234,196,4)"/><text x="62.8710%" y="175.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="62.6398%" y="149" width="0.2726%" height="15" fill="rgb(250,143,31)"/><text x="62.8898%" y="159.50"></text></g><g><title>[unknown] (25 samples, 0.24%)</title><rect x="62.6774%" y="133" width="0.2350%" height="15" fill="rgb(211,110,34)"/><text x="62.9274%" y="143.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="62.6962%" y="117" width="0.2162%" height="15" fill="rgb(215,124,48)"/><text x="62.9462%" y="127.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="62.7245%" y="101" width="0.1880%" height="15" fill="rgb(216,46,13)"/><text x="62.9745%" y="111.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="62.7245%" y="85" width="0.1880%" height="15" fill="rgb(205,184,25)"/><text x="62.9745%" y="95.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="62.7715%" y="69" width="0.1410%" height="15" fill="rgb(228,1,10)"/><text x="63.0215%" y="79.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="62.8091%" y="53" width="0.1034%" height="15" fill="rgb(213,116,27)"/><text x="63.0591%" y="63.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.17%)</title><rect x="63.0253%" y="485" width="0.1692%" height="15" fill="rgb(241,95,50)"/><text x="63.2753%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="63.0817%" y="469" width="0.1128%" height="15" fill="rgb(238,48,32)"/><text x="63.3317%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="63.0817%" y="453" width="0.1128%" height="15" fill="rgb(235,113,49)"/><text x="63.3317%" y="463.50"></text></g><g><title>__libc_recv (77 samples, 0.72%)</title><rect x="63.2885%" y="357" width="0.7239%" height="15" fill="rgb(205,127,43)"/><text x="63.5385%" y="367.50"></text></g><g><title>__libc_recv (76 samples, 0.71%)</title><rect x="63.2979%" y="341" width="0.7145%" height="15" fill="rgb(250,162,2)"/><text x="63.5479%" y="351.50"></text></g><g><title>[unknown] (74 samples, 0.70%)</title><rect x="63.3167%" y="325" width="0.6957%" height="15" fill="rgb(220,13,41)"/><text x="63.5667%" y="335.50"></text></g><g><title>[unknown] (73 samples, 0.69%)</title><rect x="63.3261%" y="309" width="0.6863%" height="15" fill="rgb(249,221,25)"/><text x="63.5761%" y="319.50"></text></g><g><title>[unknown] (70 samples, 0.66%)</title><rect x="63.3543%" y="293" width="0.6581%" height="15" fill="rgb(215,208,19)"/><text x="63.6043%" y="303.50"></text></g><g><title>[unknown] (67 samples, 0.63%)</title><rect x="63.3825%" y="277" width="0.6299%" height="15" fill="rgb(236,175,2)"/><text x="63.6325%" y="287.50"></text></g><g><title>[unknown] (67 samples, 0.63%)</title><rect x="63.3825%" y="261" width="0.6299%" height="15" fill="rgb(241,52,2)"/><text x="63.6325%" y="271.50"></text></g><g><title>[unknown] (63 samples, 0.59%)</title><rect x="63.4201%" y="245" width="0.5923%" height="15" fill="rgb(248,140,14)"/><text x="63.6701%" y="255.50"></text></g><g><title>[unknown] (63 samples, 0.59%)</title><rect x="63.4201%" y="229" width="0.5923%" height="15" fill="rgb(253,22,42)"/><text x="63.6701%" y="239.50"></text></g><g><title>[unknown] (56 samples, 0.53%)</title><rect x="63.4859%" y="213" width="0.5265%" height="15" fill="rgb(234,61,47)"/><text x="63.7359%" y="223.50"></text></g><g><title>[unknown] (54 samples, 0.51%)</title><rect x="63.5047%" y="197" width="0.5077%" height="15" fill="rgb(208,226,15)"/><text x="63.7547%" y="207.50"></text></g><g><title>[unknown] (47 samples, 0.44%)</title><rect x="63.5706%" y="181" width="0.4419%" height="15" fill="rgb(217,221,4)"/><text x="63.8206%" y="191.50"></text></g><g><title>[unknown] (46 samples, 0.43%)</title><rect x="63.5800%" y="165" width="0.4325%" height="15" fill="rgb(212,174,34)"/><text x="63.8300%" y="175.50"></text></g><g><title>[unknown] (41 samples, 0.39%)</title><rect x="63.6270%" y="149" width="0.3854%" height="15" fill="rgb(253,83,4)"/><text x="63.8770%" y="159.50"></text></g><g><title>[unknown] (27 samples, 0.25%)</title><rect x="63.7586%" y="133" width="0.2538%" height="15" fill="rgb(250,195,49)"/><text x="64.0086%" y="143.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="63.8150%" y="117" width="0.1974%" height="15" fill="rgb(241,192,25)"/><text x="64.0650%" y="127.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="63.8714%" y="101" width="0.1410%" height="15" fill="rgb(208,124,10)"/><text x="64.1214%" y="111.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (81 samples, 0.76%)</title><rect x="63.2697%" y="437" width="0.7615%" height="15" fill="rgb(222,33,0)"/><text x="63.5197%" y="447.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (79 samples, 0.74%)</title><rect x="63.2885%" y="421" width="0.7427%" height="15" fill="rgb(234,209,28)"/><text x="63.5385%" y="431.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (79 samples, 0.74%)</title><rect x="63.2885%" y="405" width="0.7427%" height="15" fill="rgb(224,11,23)"/><text x="63.5385%" y="415.50"></text></g><g><title>std::sys::unix::net::Socket::read (79 samples, 0.74%)</title><rect x="63.2885%" y="389" width="0.7427%" height="15" fill="rgb(232,99,1)"/><text x="63.5385%" y="399.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (79 samples, 0.74%)</title><rect x="63.2885%" y="373" width="0.7427%" height="15" fill="rgb(237,95,45)"/><text x="63.5385%" y="383.50"></text></g><g><title>_int_malloc (17 samples, 0.16%)</title><rect x="64.0688%" y="357" width="0.1598%" height="15" fill="rgb(208,109,11)"/><text x="64.3188%" y="367.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="64.0688%" y="341" width="0.1598%" height="15" fill="rgb(216,190,48)"/><text x="64.3188%" y="351.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="64.0876%" y="325" width="0.1410%" height="15" fill="rgb(251,171,36)"/><text x="64.3376%" y="335.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="64.0876%" y="309" width="0.1410%" height="15" fill="rgb(230,62,22)"/><text x="64.3376%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="64.0876%" y="293" width="0.1410%" height="15" fill="rgb(225,114,35)"/><text x="64.3376%" y="303.50"></text></g><g><title>[unknown] (15 samples, 0.14%)</title><rect x="64.0876%" y="277" width="0.1410%" height="15" fill="rgb(215,118,42)"/><text x="64.3376%" y="287.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.20%)</title><rect x="64.0406%" y="373" width="0.1974%" height="15" fill="rgb(243,119,21)"/><text x="64.2906%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.24%)</title><rect x="64.0406%" y="389" width="0.2350%" height="15" fill="rgb(252,177,53)"/><text x="64.2906%" y="399.50"></text></g><g><title>mysql::conn::Conn::read_packet (112 samples, 1.05%)</title><rect x="63.2415%" y="469" width="1.0529%" height="15" fill="rgb(237,209,29)"/><text x="63.4915%" y="479.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 1.04%)</title><rect x="63.2509%" y="453" width="1.0435%" height="15" fill="rgb(212,65,23)"/><text x="63.5009%" y="463.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (28 samples, 0.26%)</title><rect x="64.0312%" y="437" width="0.2632%" height="15" fill="rgb(230,222,46)"/><text x="64.2812%" y="447.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (28 samples, 0.26%)</title><rect x="64.0312%" y="421" width="0.2632%" height="15" fill="rgb(215,135,32)"/><text x="64.2812%" y="431.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (28 samples, 0.26%)</title><rect x="64.0312%" y="405" width="0.2632%" height="15" fill="rgb(246,101,22)"/><text x="64.2812%" y="415.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (123 samples, 1.16%)</title><rect x="63.1945%" y="485" width="1.1563%" height="15" fill="rgb(206,107,13)"/><text x="63.4445%" y="495.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (13 samples, 0.12%)</title><rect x="64.4543%" y="453" width="0.1222%" height="15" fill="rgb(250,100,44)"/><text x="64.7043%" y="463.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (13 samples, 0.12%)</title><rect x="64.4543%" y="437" width="0.1222%" height="15" fill="rgb(231,147,38)"/><text x="64.7043%" y="447.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (13 samples, 0.12%)</title><rect x="64.4543%" y="421" width="0.1222%" height="15" fill="rgb(229,8,40)"/><text x="64.7043%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (13 samples, 0.12%)</title><rect x="64.4543%" y="405" width="0.1222%" height="15" fill="rgb(221,135,30)"/><text x="64.7043%" y="415.50"></text></g><g><title>__libc_write (13 samples, 0.12%)</title><rect x="64.4543%" y="389" width="0.1222%" height="15" fill="rgb(249,193,18)"/><text x="64.7043%" y="399.50"></text></g><g><title>__libc_write (13 samples, 0.12%)</title><rect x="64.4543%" y="373" width="0.1222%" height="15" fill="rgb(209,133,39)"/><text x="64.7043%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="357" width="0.1222%" height="15" fill="rgb(232,100,14)"/><text x="64.7043%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="341" width="0.1222%" height="15" fill="rgb(224,185,1)"/><text x="64.7043%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="325" width="0.1222%" height="15" fill="rgb(223,139,8)"/><text x="64.7043%" y="335.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="309" width="0.1222%" height="15" fill="rgb(232,213,38)"/><text x="64.7043%" y="319.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="293" width="0.1222%" height="15" fill="rgb(207,94,22)"/><text x="64.7043%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="277" width="0.1222%" height="15" fill="rgb(219,183,54)"/><text x="64.7043%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="261" width="0.1222%" height="15" fill="rgb(216,185,54)"/><text x="64.7043%" y="271.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="245" width="0.1222%" height="15" fill="rgb(254,217,39)"/><text x="64.7043%" y="255.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="229" width="0.1222%" height="15" fill="rgb(240,178,23)"/><text x="64.7043%" y="239.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="213" width="0.1222%" height="15" fill="rgb(218,11,47)"/><text x="64.7043%" y="223.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="197" width="0.1222%" height="15" fill="rgb(218,51,51)"/><text x="64.7043%" y="207.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="181" width="0.1222%" height="15" fill="rgb(238,126,27)"/><text x="64.7043%" y="191.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="64.4543%" y="165" width="0.1222%" height="15" fill="rgb(249,202,22)"/><text x="64.7043%" y="175.50"></text></g><g><title>std::io::Write::write_all (16 samples, 0.15%)</title><rect x="64.4355%" y="469" width="0.1504%" height="15" fill="rgb(254,195,49)"/><text x="64.6855%" y="479.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (220 samples, 2.07%)</title><rect x="62.9219%" y="517" width="2.0683%" height="15" fill="rgb(208,123,14)"/><text x="63.1719%" y="527.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (210 samples, 1.97%)</title><rect x="63.0159%" y="501" width="1.9742%" height="15" fill="rgb(224,200,8)"/><text x="63.2659%" y="511.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (67 samples, 0.63%)</title><rect x="64.3603%" y="485" width="0.6299%" height="15" fill="rgb(217,61,36)"/><text x="64.6103%" y="495.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (43 samples, 0.40%)</title><rect x="64.5859%" y="469" width="0.4042%" height="15" fill="rgb(206,35,45)"/><text x="64.8359%" y="479.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (43 samples, 0.40%)</title><rect x="64.5859%" y="453" width="0.4042%" height="15" fill="rgb(217,65,33)"/><text x="64.8359%" y="463.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (43 samples, 0.40%)</title><rect x="64.5859%" y="437" width="0.4042%" height="15" fill="rgb(222,158,48)"/><text x="64.8359%" y="447.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (43 samples, 0.40%)</title><rect x="64.5859%" y="421" width="0.4042%" height="15" fill="rgb(254,2,54)"/><text x="64.8359%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (43 samples, 0.40%)</title><rect x="64.5859%" y="405" width="0.4042%" height="15" fill="rgb(250,143,38)"/><text x="64.8359%" y="415.50"></text></g><g><title>__libc_write (43 samples, 0.40%)</title><rect x="64.5859%" y="389" width="0.4042%" height="15" fill="rgb(248,25,0)"/><text x="64.8359%" y="399.50"></text></g><g><title>__libc_write (43 samples, 0.40%)</title><rect x="64.5859%" y="373" width="0.4042%" height="15" fill="rgb(206,152,27)"/><text x="64.8359%" y="383.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="64.5859%" y="357" width="0.4042%" height="15" fill="rgb(240,77,30)"/><text x="64.8359%" y="367.50"></text></g><g><title>[unknown] (42 samples, 0.39%)</title><rect x="64.5953%" y="341" width="0.3948%" height="15" fill="rgb(231,5,3)"/><text x="64.8453%" y="351.50"></text></g><g><title>[unknown] (38 samples, 0.36%)</title><rect x="64.6329%" y="325" width="0.3572%" height="15" fill="rgb(207,226,32)"/><text x="64.8829%" y="335.50"></text></g><g><title>[unknown] (37 samples, 0.35%)</title><rect x="64.6423%" y="309" width="0.3478%" height="15" fill="rgb(222,207,47)"/><text x="64.8923%" y="319.50"></text></g><g><title>[unknown] (36 samples, 0.34%)</title><rect x="64.6517%" y="293" width="0.3384%" height="15" fill="rgb(229,115,45)"/><text x="64.9017%" y="303.50"></text></g><g><title>[unknown] (36 samples, 0.34%)</title><rect x="64.6517%" y="277" width="0.3384%" height="15" fill="rgb(224,191,6)"/><text x="64.9017%" y="287.50"></text></g><g><title>[unknown] (36 samples, 0.34%)</title><rect x="64.6517%" y="261" width="0.3384%" height="15" fill="rgb(230,227,24)"/><text x="64.9017%" y="271.50"></text></g><g><title>[unknown] (36 samples, 0.34%)</title><rect x="64.6517%" y="245" width="0.3384%" height="15" fill="rgb(228,80,19)"/><text x="64.9017%" y="255.50"></text></g><g><title>[unknown] (36 samples, 0.34%)</title><rect x="64.6517%" y="229" width="0.3384%" height="15" fill="rgb(247,229,0)"/><text x="64.9017%" y="239.50"></text></g><g><title>[unknown] (34 samples, 0.32%)</title><rect x="64.6705%" y="213" width="0.3196%" height="15" fill="rgb(237,194,15)"/><text x="64.9205%" y="223.50"></text></g><g><title>[unknown] (34 samples, 0.32%)</title><rect x="64.6705%" y="197" width="0.3196%" height="15" fill="rgb(219,203,20)"/><text x="64.9205%" y="207.50"></text></g><g><title>[unknown] (34 samples, 0.32%)</title><rect x="64.6705%" y="181" width="0.3196%" height="15" fill="rgb(234,128,8)"/><text x="64.9205%" y="191.50"></text></g><g><title>[unknown] (32 samples, 0.30%)</title><rect x="64.6893%" y="165" width="0.3008%" height="15" fill="rgb(248,202,8)"/><text x="64.9393%" y="175.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="64.7175%" y="149" width="0.2726%" height="15" fill="rgb(206,104,37)"/><text x="64.9675%" y="159.50"></text></g><g><title>[unknown] (27 samples, 0.25%)</title><rect x="64.7363%" y="133" width="0.2538%" height="15" fill="rgb(223,8,27)"/><text x="64.9863%" y="143.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="64.7645%" y="117" width="0.2256%" height="15" fill="rgb(216,217,28)"/><text x="65.0145%" y="127.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="64.7739%" y="101" width="0.2162%" height="15" fill="rgb(249,199,1)"/><text x="65.0239%" y="111.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="64.8209%" y="85" width="0.1692%" height="15" fill="rgb(240,85,17)"/><text x="65.0709%" y="95.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="64.8585%" y="69" width="0.1316%" height="15" fill="rgb(206,108,45)"/><text x="65.1085%" y="79.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (378 samples, 3.55%)</title><rect x="61.4553%" y="549" width="3.5536%" height="15" fill="rgb(245,210,41)"/><text x="61.7053%" y="559.50">std:..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (223 samples, 2.10%)</title><rect x="62.9125%" y="533" width="2.0965%" height="15" fill="rgb(206,13,37)"/><text x="63.1625%" y="543.50">m..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (415 samples, 3.90%)</title><rect x="61.1639%" y="597" width="3.9015%" height="15" fill="rgb(250,61,18)"/><text x="61.4139%" y="607.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (415 samples, 3.90%)</title><rect x="61.1639%" y="581" width="3.9015%" height="15" fill="rgb(235,172,48)"/><text x="61.4139%" y="591.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (414 samples, 3.89%)</title><rect x="61.1733%" y="565" width="3.8921%" height="15" fill="rgb(249,201,17)"/><text x="61.4233%" y="575.50">core..</text></g><g><title>__GI_munmap (57 samples, 0.54%)</title><rect x="65.0653%" y="549" width="0.5359%" height="15" fill="rgb(219,208,6)"/><text x="65.3153%" y="559.50"></text></g><g><title>[unknown] (56 samples, 0.53%)</title><rect x="65.0747%" y="533" width="0.5265%" height="15" fill="rgb(248,31,23)"/><text x="65.3247%" y="543.50"></text></g><g><title>[unknown] (56 samples, 0.53%)</title><rect x="65.0747%" y="517" width="0.5265%" height="15" fill="rgb(245,15,42)"/><text x="65.3247%" y="527.50"></text></g><g><title>[unknown] (55 samples, 0.52%)</title><rect x="65.0841%" y="501" width="0.5171%" height="15" fill="rgb(222,217,39)"/><text x="65.3341%" y="511.50"></text></g><g><title>[unknown] (54 samples, 0.51%)</title><rect x="65.0935%" y="485" width="0.5077%" height="15" fill="rgb(210,219,27)"/><text x="65.3435%" y="495.50"></text></g><g><title>[unknown] (52 samples, 0.49%)</title><rect x="65.1123%" y="469" width="0.4889%" height="15" fill="rgb(252,166,36)"/><text x="65.3623%" y="479.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="65.1970%" y="453" width="0.4042%" height="15" fill="rgb(245,132,34)"/><text x="65.4470%" y="463.50"></text></g><g><title>[unknown] (32 samples, 0.30%)</title><rect x="65.3004%" y="437" width="0.3008%" height="15" fill="rgb(236,54,3)"/><text x="65.5504%" y="447.50"></text></g><g><title>[unknown] (31 samples, 0.29%)</title><rect x="65.3098%" y="421" width="0.2914%" height="15" fill="rgb(241,173,43)"/><text x="65.5598%" y="431.50"></text></g><g><title>[unknown] (26 samples, 0.24%)</title><rect x="65.3568%" y="405" width="0.2444%" height="15" fill="rgb(215,190,9)"/><text x="65.6068%" y="415.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="65.4508%" y="389" width="0.1504%" height="15" fill="rgb(242,101,16)"/><text x="65.7008%" y="399.50"></text></g><g><title>core::ptr::drop_in_place (60 samples, 0.56%)</title><rect x="65.0653%" y="597" width="0.5641%" height="15" fill="rgb(223,190,21)"/><text x="65.3153%" y="607.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (60 samples, 0.56%)</title><rect x="65.0653%" y="581" width="0.5641%" height="15" fill="rgb(215,228,25)"/><text x="65.3153%" y="591.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (60 samples, 0.56%)</title><rect x="65.0653%" y="565" width="0.5641%" height="15" fill="rgb(225,36,22)"/><text x="65.3153%" y="575.50"></text></g><g><title>__GI___mmap64 (37 samples, 0.35%)</title><rect x="65.7234%" y="533" width="0.3478%" height="15" fill="rgb(251,106,46)"/><text x="65.9734%" y="543.50"></text></g><g><title>__GI___mmap64 (37 samples, 0.35%)</title><rect x="65.7234%" y="517" width="0.3478%" height="15" fill="rgb(208,90,1)"/><text x="65.9734%" y="527.50"></text></g><g><title>[unknown] (37 samples, 0.35%)</title><rect x="65.7234%" y="501" width="0.3478%" height="15" fill="rgb(243,10,4)"/><text x="65.9734%" y="511.50"></text></g><g><title>[unknown] (37 samples, 0.35%)</title><rect x="65.7234%" y="485" width="0.3478%" height="15" fill="rgb(212,137,27)"/><text x="65.9734%" y="495.50"></text></g><g><title>[unknown] (33 samples, 0.31%)</title><rect x="65.7610%" y="469" width="0.3102%" height="15" fill="rgb(231,220,49)"/><text x="66.0110%" y="479.50"></text></g><g><title>[unknown] (33 samples, 0.31%)</title><rect x="65.7610%" y="453" width="0.3102%" height="15" fill="rgb(237,96,20)"/><text x="66.0110%" y="463.50"></text></g><g><title>[unknown] (33 samples, 0.31%)</title><rect x="65.7610%" y="437" width="0.3102%" height="15" fill="rgb(239,229,30)"/><text x="66.0110%" y="447.50"></text></g><g><title>[unknown] (32 samples, 0.30%)</title><rect x="65.7704%" y="421" width="0.3008%" height="15" fill="rgb(219,65,33)"/><text x="66.0204%" y="431.50"></text></g><g><title>[unknown] (29 samples, 0.27%)</title><rect x="65.7986%" y="405" width="0.2726%" height="15" fill="rgb(243,134,7)"/><text x="66.0486%" y="415.50"></text></g><g><title>[unknown] (25 samples, 0.24%)</title><rect x="65.8362%" y="389" width="0.2350%" height="15" fill="rgb(216,177,54)"/><text x="66.0862%" y="399.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="65.9114%" y="373" width="0.1598%" height="15" fill="rgb(211,160,20)"/><text x="66.1614%" y="383.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="65.9396%" y="357" width="0.1316%" height="15" fill="rgb(239,85,39)"/><text x="66.1896%" y="367.50"></text></g><g><title>__GI___clone (617 samples, 5.80%)</title><rect x="60.4870%" y="645" width="5.8005%" height="15" fill="rgb(232,125,22)"/><text x="60.7370%" y="655.50">__GI___..</text></g><g><title>start_thread (609 samples, 5.73%)</title><rect x="60.5622%" y="629" width="5.7253%" height="15" fill="rgb(244,57,34)"/><text x="60.8122%" y="639.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (545 samples, 5.12%)</title><rect x="61.1639%" y="613" width="5.1236%" height="15" fill="rgb(214,203,32)"/><text x="61.4139%" y="623.50">std::s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (70 samples, 0.66%)</title><rect x="65.6294%" y="597" width="0.6581%" height="15" fill="rgb(207,58,43)"/><text x="65.8794%" y="607.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (70 samples, 0.66%)</title><rect x="65.6294%" y="581" width="0.6581%" height="15" fill="rgb(215,193,15)"/><text x="65.8794%" y="591.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (60 samples, 0.56%)</title><rect x="65.7234%" y="565" width="0.5641%" height="15" fill="rgb(232,15,44)"/><text x="65.9734%" y="575.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (60 samples, 0.56%)</title><rect x="65.7234%" y="549" width="0.5641%" height="15" fill="rgb(212,3,48)"/><text x="65.9734%" y="559.50"></text></g><g><title>__GI___mprotect (23 samples, 0.22%)</title><rect x="66.0713%" y="533" width="0.2162%" height="15" fill="rgb(218,128,7)"/><text x="66.3213%" y="543.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="66.0713%" y="517" width="0.2162%" height="15" fill="rgb(226,216,39)"/><text x="66.3213%" y="527.50"></text></g><g><title>[unknown] (22 samples, 0.21%)</title><rect x="66.0807%" y="501" width="0.2068%" height="15" fill="rgb(243,47,51)"/><text x="66.3307%" y="511.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="66.1183%" y="485" width="0.1692%" height="15" fill="rgb(241,183,40)"/><text x="66.3683%" y="495.50"></text></g><g><title>[unknown] (18 samples, 0.17%)</title><rect x="66.1183%" y="469" width="0.1692%" height="15" fill="rgb(231,217,32)"/><text x="66.3683%" y="479.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="66.1277%" y="453" width="0.1598%" height="15" fill="rgb(229,61,38)"/><text x="66.3777%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="66.1747%" y="437" width="0.1128%" height="15" fill="rgb(225,210,5)"/><text x="66.4247%" y="447.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="66.1747%" y="421" width="0.1128%" height="15" fill="rgb(231,79,45)"/><text x="66.4247%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19 samples, 0.18%)</title><rect x="67.1618%" y="453" width="0.1786%" height="15" fill="rgb(224,100,7)"/><text x="67.4118%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.17%)</title><rect x="67.1712%" y="437" width="0.1692%" height="15" fill="rgb(241,198,18)"/><text x="67.4212%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.14%)</title><rect x="67.1994%" y="421" width="0.1410%" height="15" fill="rgb(252,97,53)"/><text x="67.4494%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.14%)</title><rect x="67.1994%" y="405" width="0.1410%" height="15" fill="rgb(220,88,7)"/><text x="67.4494%" y="415.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.10%)</title><rect x="67.4062%" y="437" width="0.1034%" height="15" fill="rgb(213,176,14)"/><text x="67.6562%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.24%)</title><rect x="67.3780%" y="453" width="0.2444%" height="15" fill="rgb(246,73,7)"/><text x="67.6280%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (19 samples, 0.18%)</title><rect x="67.6319%" y="437" width="0.1786%" height="15" fill="rgb(245,64,36)"/><text x="67.8819%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.12%)</title><rect x="67.6883%" y="421" width="0.1222%" height="15" fill="rgb(245,80,10)"/><text x="67.9383%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.12%)</title><rect x="67.6883%" y="405" width="0.1222%" height="15" fill="rgb(232,107,50)"/><text x="67.9383%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.11%)</title><rect x="67.6977%" y="389" width="0.1128%" height="15" fill="rgb(253,3,0)"/><text x="67.9477%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.11%)</title><rect x="67.6977%" y="373" width="0.1128%" height="15" fill="rgb(212,99,53)"/><text x="67.9477%" y="383.50"></text></g><g><title>[unknown] (41 samples, 0.39%)</title><rect x="67.9045%" y="405" width="0.3854%" height="15" fill="rgb(249,111,54)"/><text x="68.1545%" y="415.50"></text></g><g><title>[unknown] (40 samples, 0.38%)</title><rect x="67.9139%" y="389" width="0.3760%" height="15" fill="rgb(249,55,30)"/><text x="68.1639%" y="399.50"></text></g><g><title>[unknown] (35 samples, 0.33%)</title><rect x="67.9609%" y="373" width="0.3290%" height="15" fill="rgb(237,47,42)"/><text x="68.2109%" y="383.50"></text></g><g><title>[unknown] (35 samples, 0.33%)</title><rect x="67.9609%" y="357" width="0.3290%" height="15" fill="rgb(211,20,18)"/><text x="68.2109%" y="367.50"></text></g><g><title>[unknown] (35 samples, 0.33%)</title><rect x="67.9609%" y="341" width="0.3290%" height="15" fill="rgb(231,203,46)"/><text x="68.2109%" y="351.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="68.0737%" y="325" width="0.2162%" height="15" fill="rgb(237,142,3)"/><text x="68.3237%" y="335.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="68.1019%" y="309" width="0.1880%" height="15" fill="rgb(241,107,1)"/><text x="68.3519%" y="319.50"></text></g><g><title>[unknown] (20 samples, 0.19%)</title><rect x="68.1019%" y="293" width="0.1880%" height="15" fill="rgb(229,83,13)"/><text x="68.3519%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="68.1113%" y="277" width="0.1786%" height="15" fill="rgb(241,91,40)"/><text x="68.3613%" y="287.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="68.1301%" y="261" width="0.1598%" height="15" fill="rgb(225,3,45)"/><text x="68.3801%" y="271.50"></text></g><g><title>__GI___libc_malloc (55 samples, 0.52%)</title><rect x="67.8105%" y="437" width="0.5171%" height="15" fill="rgb(244,223,14)"/><text x="68.0605%" y="447.50"></text></g><g><title>_int_malloc (51 samples, 0.48%)</title><rect x="67.8481%" y="421" width="0.4795%" height="15" fill="rgb(224,124,37)"/><text x="68.0981%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (80 samples, 0.75%)</title><rect x="67.6224%" y="453" width="0.7521%" height="15" fill="rgb(251,171,30)"/><text x="67.8724%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (15 samples, 0.14%)</title><rect x="68.7600%" y="373" width="0.1410%" height="15" fill="rgb(236,46,54)"/><text x="69.0100%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.14%)</title><rect x="68.7600%" y="357" width="0.1410%" height="15" fill="rgb(245,213,5)"/><text x="69.0100%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (15 samples, 0.14%)</title><rect x="68.7600%" y="341" width="0.1410%" height="15" fill="rgb(230,144,27)"/><text x="69.0100%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.14%)</title><rect x="68.7600%" y="325" width="0.1410%" height="15" fill="rgb(220,86,6)"/><text x="69.0100%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.13%)</title><rect x="68.7694%" y="309" width="0.1316%" height="15" fill="rgb(240,20,13)"/><text x="69.0194%" y="319.50"></text></g><g><title>__GI___libc_malloc (67 samples, 0.63%)</title><rect x="68.9010%" y="261" width="0.6299%" height="15" fill="rgb(217,89,34)"/><text x="69.1510%" y="271.50"></text></g><g><title>_int_malloc (32 samples, 0.30%)</title><rect x="69.2300%" y="245" width="0.3008%" height="15" fill="rgb(229,13,5)"/><text x="69.4800%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (86 samples, 0.81%)</title><rect x="68.7318%" y="437" width="0.8085%" height="15" fill="rgb(244,67,35)"/><text x="68.9818%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (84 samples, 0.79%)</title><rect x="68.7506%" y="421" width="0.7897%" height="15" fill="rgb(221,40,2)"/><text x="69.0006%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (84 samples, 0.79%)</title><rect x="68.7506%" y="405" width="0.7897%" height="15" fill="rgb(237,157,21)"/><text x="69.0006%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (84 samples, 0.79%)</title><rect x="68.7506%" y="389" width="0.7897%" height="15" fill="rgb(222,94,11)"/><text x="69.0006%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (68 samples, 0.64%)</title><rect x="68.9010%" y="373" width="0.6393%" height="15" fill="rgb(249,113,6)"/><text x="69.1510%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (68 samples, 0.64%)</title><rect x="68.9010%" y="357" width="0.6393%" height="15" fill="rgb(238,137,36)"/><text x="69.1510%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (68 samples, 0.64%)</title><rect x="68.9010%" y="341" width="0.6393%" height="15" fill="rgb(210,102,26)"/><text x="69.1510%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (68 samples, 0.64%)</title><rect x="68.9010%" y="325" width="0.6393%" height="15" fill="rgb(218,30,30)"/><text x="69.1510%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (68 samples, 0.64%)</title><rect x="68.9010%" y="309" width="0.6393%" height="15" fill="rgb(214,67,26)"/><text x="69.1510%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.64%)</title><rect x="68.9010%" y="293" width="0.6393%" height="15" fill="rgb(251,9,53)"/><text x="69.1510%" y="303.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.64%)</title><rect x="68.9010%" y="277" width="0.6393%" height="15" fill="rgb(228,204,25)"/><text x="69.1510%" y="287.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.21%)</title><rect x="69.5967%" y="437" width="0.2068%" height="15" fill="rgb(207,153,8)"/><text x="69.8467%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (46 samples, 0.43%)</title><rect x="70.0950%" y="421" width="0.4325%" height="15" fill="rgb(242,9,16)"/><text x="70.3450%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.34%)</title><rect x="70.1890%" y="405" width="0.3384%" height="15" fill="rgb(217,211,10)"/><text x="70.4390%" y="415.50"></text></g><g><title>__GI___libc_malloc (35 samples, 0.33%)</title><rect x="70.1984%" y="389" width="0.3290%" height="15" fill="rgb(219,228,52)"/><text x="70.4484%" y="399.50"></text></g><g><title>_int_malloc (24 samples, 0.23%)</title><rect x="70.3018%" y="373" width="0.2256%" height="15" fill="rgb(231,92,29)"/><text x="70.5518%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.20%)</title><rect x="70.5838%" y="405" width="0.1974%" height="15" fill="rgb(232,8,23)"/><text x="70.8338%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.14%)</title><rect x="70.6402%" y="389" width="0.1410%" height="15" fill="rgb(216,211,34)"/><text x="70.8902%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.11%)</title><rect x="70.7812%" y="405" width="0.1128%" height="15" fill="rgb(236,151,0)"/><text x="71.0312%" y="415.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.10%)</title><rect x="71.2137%" y="357" width="0.1034%" height="15" fill="rgb(209,168,3)"/><text x="71.4637%" y="367.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (71 samples, 0.67%)</title><rect x="70.9787%" y="389" width="0.6675%" height="15" fill="rgb(208,129,28)"/><text x="71.2287%" y="399.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (64 samples, 0.60%)</title><rect x="71.0445%" y="373" width="0.6017%" height="15" fill="rgb(229,78,22)"/><text x="71.2945%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.15%)</title><rect x="71.4957%" y="357" width="0.1504%" height="15" fill="rgb(228,187,13)"/><text x="71.7457%" y="367.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.12%)</title><rect x="71.5239%" y="341" width="0.1222%" height="15" fill="rgb(240,119,24)"/><text x="71.7739%" y="351.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.11%)</title><rect x="71.6837%" y="373" width="0.1128%" height="15" fill="rgb(209,194,42)"/><text x="71.9337%" y="383.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.11%)</title><rect x="72.0034%" y="325" width="0.1128%" height="15" fill="rgb(247,200,46)"/><text x="72.2534%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.15%)</title><rect x="71.9752%" y="357" width="0.1504%" height="15" fill="rgb(218,76,16)"/><text x="72.2252%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.12%)</title><rect x="72.0034%" y="341" width="0.1222%" height="15" fill="rgb(225,21,48)"/><text x="72.2534%" y="351.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (134 samples, 1.26%)</title><rect x="70.8940%" y="405" width="1.2598%" height="15" fill="rgb(239,223,50)"/><text x="71.1440%" y="415.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (54 samples, 0.51%)</title><rect x="71.6461%" y="389" width="0.5077%" height="15" fill="rgb(244,45,21)"/><text x="71.8961%" y="399.50"></text></g><g><title>core::fmt::write (25 samples, 0.24%)</title><rect x="71.9188%" y="373" width="0.2350%" height="15" fill="rgb(232,33,43)"/><text x="72.1688%" y="383.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.18%)</title><rect x="72.3700%" y="389" width="0.1786%" height="15" fill="rgb(209,8,3)"/><text x="72.6200%" y="399.50"></text></g><g><title>_int_malloc (12 samples, 0.11%)</title><rect x="72.7273%" y="357" width="0.1128%" height="15" fill="rgb(214,25,53)"/><text x="72.9773%" y="367.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.15%)</title><rect x="72.6991%" y="373" width="0.1504%" height="15" fill="rgb(254,186,54)"/><text x="72.9491%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.18%)</title><rect x="72.6803%" y="389" width="0.1786%" height="15" fill="rgb(208,174,49)"/><text x="72.9303%" y="399.50"></text></g><g><title>_int_malloc (12 samples, 0.11%)</title><rect x="73.0751%" y="325" width="0.1128%" height="15" fill="rgb(233,191,51)"/><text x="73.3251%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (33 samples, 0.31%)</title><rect x="72.8871%" y="373" width="0.3102%" height="15" fill="rgb(222,134,10)"/><text x="73.1371%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.24%)</title><rect x="72.9529%" y="357" width="0.2444%" height="15" fill="rgb(230,226,20)"/><text x="73.2029%" y="367.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.24%)</title><rect x="72.9529%" y="341" width="0.2444%" height="15" fill="rgb(251,111,25)"/><text x="73.2029%" y="351.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (287 samples, 2.70%)</title><rect x="70.5462%" y="421" width="2.6981%" height="15" fill="rgb(224,40,46)"/><text x="70.7962%" y="431.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (101 samples, 0.95%)</title><rect x="72.2948%" y="405" width="0.9495%" height="15" fill="rgb(236,108,47)"/><text x="72.5448%" y="415.50"></text></g><g><title>core::fmt::write (41 samples, 0.39%)</title><rect x="72.8589%" y="389" width="0.3854%" height="15" fill="rgb(234,93,0)"/><text x="73.1089%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (528 samples, 4.96%)</title><rect x="68.3745%" y="453" width="4.9638%" height="15" fill="rgb(224,213,32)"/><text x="68.6245%" y="463.50">&lt;core:..</text></g><g><title>core::fmt::write (362 samples, 3.40%)</title><rect x="69.9351%" y="437" width="3.4032%" height="15" fill="rgb(251,11,48)"/><text x="70.1851%" y="447.50">cor..</text></g><g><title>__GI___libc_free (18 samples, 0.17%)</title><rect x="73.3948%" y="453" width="0.1692%" height="15" fill="rgb(236,173,5)"/><text x="73.6448%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="73.7238%" y="421" width="0.1128%" height="15" fill="rgb(230,95,12)"/><text x="73.9738%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="73.7332%" y="405" width="0.1034%" height="15" fill="rgb(232,209,1)"/><text x="73.9832%" y="415.50"></text></g><g><title>_int_malloc (26 samples, 0.24%)</title><rect x="73.6110%" y="437" width="0.2444%" height="15" fill="rgb(232,6,1)"/><text x="73.8610%" y="447.50"></text></g><g><title>__GI___libc_malloc (40 samples, 0.38%)</title><rect x="73.5640%" y="453" width="0.3760%" height="15" fill="rgb(210,224,50)"/><text x="73.8140%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 0.18%)</title><rect x="74.1939%" y="453" width="0.1786%" height="15" fill="rgb(228,127,35)"/><text x="74.4439%" y="463.50"></text></g><g><title>malloc_consolidate (27 samples, 0.25%)</title><rect x="74.6733%" y="437" width="0.2538%" height="15" fill="rgb(245,102,45)"/><text x="74.9233%" y="447.50"></text></g><g><title>_int_free (56 samples, 0.53%)</title><rect x="74.4383%" y="453" width="0.5265%" height="15" fill="rgb(214,1,49)"/><text x="74.6883%" y="463.50"></text></g><g><title>_int_malloc (12 samples, 0.11%)</title><rect x="75.0400%" y="421" width="0.1128%" height="15" fill="rgb(226,163,40)"/><text x="75.2900%" y="431.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.23%)</title><rect x="74.9835%" y="437" width="0.2256%" height="15" fill="rgb(239,212,28)"/><text x="75.2335%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.29%)</title><rect x="74.9647%" y="453" width="0.2914%" height="15" fill="rgb(220,20,13)"/><text x="75.2147%" y="463.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="76.0741%" y="229" width="0.1316%" height="15" fill="rgb(210,164,35)"/><text x="76.3241%" y="239.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="76.0741%" y="213" width="0.1316%" height="15" fill="rgb(248,109,41)"/><text x="76.3241%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="76.1023%" y="197" width="0.1034%" height="15" fill="rgb(238,23,50)"/><text x="76.3523%" y="207.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="76.1023%" y="181" width="0.1034%" height="15" fill="rgb(211,48,49)"/><text x="76.3523%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="76.1023%" y="165" width="0.1034%" height="15" fill="rgb(223,36,21)"/><text x="76.3523%" y="175.50"></text></g><g><title>_int_malloc (49 samples, 0.46%)</title><rect x="75.7638%" y="245" width="0.4607%" height="15" fill="rgb(207,123,46)"/><text x="76.0138%" y="255.50"></text></g><g><title>__GI___libc_malloc (85 samples, 0.80%)</title><rect x="75.4536%" y="261" width="0.7991%" height="15" fill="rgb(240,218,32)"/><text x="75.7036%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (108 samples, 1.02%)</title><rect x="75.2562%" y="453" width="1.0153%" height="15" fill="rgb(252,5,43)"/><text x="75.5062%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (98 samples, 0.92%)</title><rect x="75.3502%" y="437" width="0.9213%" height="15" fill="rgb(252,84,19)"/><text x="75.6002%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (96 samples, 0.90%)</title><rect x="75.3690%" y="421" width="0.9025%" height="15" fill="rgb(243,152,39)"/><text x="75.6190%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (96 samples, 0.90%)</title><rect x="75.3690%" y="405" width="0.9025%" height="15" fill="rgb(234,160,15)"/><text x="75.6190%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (96 samples, 0.90%)</title><rect x="75.3690%" y="389" width="0.9025%" height="15" fill="rgb(237,34,20)"/><text x="75.6190%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (87 samples, 0.82%)</title><rect x="75.4536%" y="373" width="0.8179%" height="15" fill="rgb(229,97,13)"/><text x="75.7036%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (87 samples, 0.82%)</title><rect x="75.4536%" y="357" width="0.8179%" height="15" fill="rgb(234,71,50)"/><text x="75.7036%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.82%)</title><rect x="75.4536%" y="341" width="0.8179%" height="15" fill="rgb(253,155,4)"/><text x="75.7036%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (87 samples, 0.82%)</title><rect x="75.4536%" y="325" width="0.8179%" height="15" fill="rgb(222,185,37)"/><text x="75.7036%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (87 samples, 0.82%)</title><rect x="75.4536%" y="309" width="0.8179%" height="15" fill="rgb(251,177,13)"/><text x="75.7036%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.82%)</title><rect x="75.4536%" y="293" width="0.8179%" height="15" fill="rgb(250,179,40)"/><text x="75.7036%" y="303.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.82%)</title><rect x="75.4536%" y="277" width="0.8179%" height="15" fill="rgb(242,44,2)"/><text x="75.7036%" y="287.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.29%)</title><rect x="76.4689%" y="389" width="0.2914%" height="15" fill="rgb(216,177,13)"/><text x="76.7189%" y="399.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (27 samples, 0.25%)</title><rect x="76.5065%" y="373" width="0.2538%" height="15" fill="rgb(216,106,43)"/><text x="76.7565%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (37 samples, 0.35%)</title><rect x="76.4595%" y="405" width="0.3478%" height="15" fill="rgb(216,183,2)"/><text x="76.7095%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (52 samples, 0.49%)</title><rect x="76.4407%" y="421" width="0.4889%" height="15" fill="rgb(249,75,3)"/><text x="76.6907%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (13 samples, 0.12%)</title><rect x="76.8074%" y="405" width="0.1222%" height="15" fill="rgb(219,67,39)"/><text x="77.0574%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (25 samples, 0.24%)</title><rect x="77.0048%" y="373" width="0.2350%" height="15" fill="rgb(253,228,2)"/><text x="77.2548%" y="383.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (25 samples, 0.24%)</title><rect x="77.0048%" y="357" width="0.2350%" height="15" fill="rgb(235,138,27)"/><text x="77.2548%" y="367.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (40 samples, 0.38%)</title><rect x="76.9766%" y="389" width="0.3760%" height="15" fill="rgb(236,97,51)"/><text x="77.2266%" y="399.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 0.11%)</title><rect x="77.2398%" y="373" width="0.1128%" height="15" fill="rgb(240,80,30)"/><text x="77.4898%" y="383.50"></text></g><g><title>__GI___libc_realloc (23 samples, 0.22%)</title><rect x="77.4560%" y="373" width="0.2162%" height="15" fill="rgb(230,178,19)"/><text x="77.7060%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.15%)</title><rect x="77.8321%" y="357" width="0.1504%" height="15" fill="rgb(210,190,27)"/><text x="78.0821%" y="367.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (114 samples, 1.07%)</title><rect x="76.9296%" y="421" width="1.0717%" height="15" fill="rgb(222,107,31)"/><text x="77.1796%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (113 samples, 1.06%)</title><rect x="76.9390%" y="405" width="1.0623%" height="15" fill="rgb(216,127,34)"/><text x="77.1890%" y="415.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (69 samples, 0.65%)</title><rect x="77.3526%" y="389" width="0.6487%" height="15" fill="rgb(234,116,52)"/><text x="77.6026%" y="399.50"></text></g><g><title>core::fmt::write (26 samples, 0.24%)</title><rect x="77.7569%" y="373" width="0.2444%" height="15" fill="rgb(222,124,15)"/><text x="78.0069%" y="383.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (22 samples, 0.21%)</title><rect x="78.3962%" y="309" width="0.2068%" height="15" fill="rgb(231,179,28)"/><text x="78.6462%" y="319.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (45 samples, 0.42%)</title><rect x="78.1893%" y="373" width="0.4231%" height="15" fill="rgb(226,93,45)"/><text x="78.4393%" y="383.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (38 samples, 0.36%)</title><rect x="78.2551%" y="357" width="0.3572%" height="15" fill="rgb(215,8,51)"/><text x="78.5051%" y="367.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (34 samples, 0.32%)</title><rect x="78.2928%" y="341" width="0.3196%" height="15" fill="rgb(223,106,5)"/><text x="78.5428%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (34 samples, 0.32%)</title><rect x="78.2928%" y="325" width="0.3196%" height="15" fill="rgb(250,191,5)"/><text x="78.5428%" y="335.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (71 samples, 0.67%)</title><rect x="78.0765%" y="389" width="0.6675%" height="15" fill="rgb(242,132,44)"/><text x="78.3265%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (14 samples, 0.13%)</title><rect x="78.6124%" y="373" width="0.1316%" height="15" fill="rgb(251,152,29)"/><text x="78.8624%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.11%)</title><rect x="78.6312%" y="357" width="0.1128%" height="15" fill="rgb(218,179,5)"/><text x="78.8812%" y="367.50"></text></g><g><title>_int_free (17 samples, 0.16%)</title><rect x="79.2047%" y="373" width="0.1598%" height="15" fill="rgb(227,67,19)"/><text x="79.4547%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (153 samples, 1.44%)</title><rect x="78.0201%" y="405" width="1.4384%" height="15" fill="rgb(233,119,31)"/><text x="78.2701%" y="415.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (76 samples, 0.71%)</title><rect x="78.7440%" y="389" width="0.7145%" height="15" fill="rgb(241,120,22)"/><text x="78.9940%" y="399.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.18%)</title><rect x="79.5619%" y="389" width="0.1786%" height="15" fill="rgb(224,102,30)"/><text x="79.8119%" y="399.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.15%)</title><rect x="80.1824%" y="341" width="0.1504%" height="15" fill="rgb(210,164,37)"/><text x="80.4324%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (33 samples, 0.31%)</title><rect x="80.0320%" y="373" width="0.3102%" height="15" fill="rgb(226,191,16)"/><text x="80.2820%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="80.1354%" y="357" width="0.2068%" height="15" fill="rgb(214,40,45)"/><text x="80.3854%" y="367.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (251 samples, 2.36%)</title><rect x="78.0013%" y="421" width="2.3597%" height="15" fill="rgb(244,29,26)"/><text x="78.2513%" y="431.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (96 samples, 0.90%)</title><rect x="79.4585%" y="405" width="0.9025%" height="15" fill="rgb(216,16,5)"/><text x="79.7085%" y="415.50"></text></g><g><title>core::fmt::write (44 samples, 0.41%)</title><rect x="79.9474%" y="389" width="0.4137%" height="15" fill="rgb(249,76,35)"/><text x="80.1974%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (33 samples, 0.31%)</title><rect x="80.4644%" y="405" width="0.3102%" height="15" fill="rgb(207,11,44)"/><text x="80.7144%" y="415.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (31 samples, 0.29%)</title><rect x="80.4832%" y="389" width="0.2914%" height="15" fill="rgb(228,190,49)"/><text x="80.7332%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (60 samples, 0.56%)</title><rect x="80.4550%" y="421" width="0.5641%" height="15" fill="rgb(214,173,12)"/><text x="80.7050%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (25 samples, 0.24%)</title><rect x="80.7841%" y="405" width="0.2350%" height="15" fill="rgb(218,26,35)"/><text x="81.0341%" y="415.50"></text></g><g><title>core::fmt::write (12 samples, 0.11%)</title><rect x="80.9063%" y="389" width="0.1128%" height="15" fill="rgb(220,200,19)"/><text x="81.1563%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (507 samples, 4.77%)</title><rect x="76.3561%" y="437" width="4.7664%" height="15" fill="rgb(239,95,49)"/><text x="76.6061%" y="447.50">&lt;sql_p..</text></g><g><title>core::fmt::write (533 samples, 5.01%)</title><rect x="76.2715%" y="453" width="5.0108%" height="15" fill="rgb(235,85,53)"/><text x="76.5215%" y="463.50">core::..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (12 samples, 0.11%)</title><rect x="81.1695%" y="437" width="0.1128%" height="15" fill="rgb(233,133,31)"/><text x="81.4195%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (12 samples, 0.11%)</title><rect x="81.1695%" y="421" width="0.1128%" height="15" fill="rgb(218,25,20)"/><text x="81.4195%" y="431.50"></text></g><g><title>__GI___libc_free (16 samples, 0.15%)</title><rect x="81.6020%" y="437" width="0.1504%" height="15" fill="rgb(252,210,38)"/><text x="81.8520%" y="447.50"></text></g><g><title>_int_free (44 samples, 0.41%)</title><rect x="81.7712%" y="437" width="0.4137%" height="15" fill="rgb(242,134,21)"/><text x="82.0212%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (110 samples, 1.03%)</title><rect x="81.3575%" y="453" width="1.0341%" height="15" fill="rgb(213,28,48)"/><text x="81.6075%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.21%)</title><rect x="82.1848%" y="437" width="0.2068%" height="15" fill="rgb(250,196,2)"/><text x="82.4348%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.21%)</title><rect x="82.4011%" y="437" width="0.2068%" height="15" fill="rgb(227,5,17)"/><text x="82.6511%" y="447.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (37 samples, 0.35%)</title><rect x="82.4011%" y="453" width="0.3478%" height="15" fill="rgb(221,226,24)"/><text x="82.6511%" y="463.50"></text></g><g><title>[unknown] (205 samples, 1.93%)</title><rect x="83.2472%" y="373" width="1.9272%" height="15" fill="rgb(211,5,48)"/><text x="83.4972%" y="383.50">[..</text></g><g><title>[unknown] (202 samples, 1.90%)</title><rect x="83.2754%" y="357" width="1.8990%" height="15" fill="rgb(219,150,6)"/><text x="83.5254%" y="367.50">[..</text></g><g><title>[unknown] (190 samples, 1.79%)</title><rect x="83.3882%" y="341" width="1.7862%" height="15" fill="rgb(251,46,16)"/><text x="83.6382%" y="351.50">[..</text></g><g><title>[unknown] (189 samples, 1.78%)</title><rect x="83.3976%" y="325" width="1.7768%" height="15" fill="rgb(220,204,40)"/><text x="83.6476%" y="335.50">[..</text></g><g><title>[unknown] (182 samples, 1.71%)</title><rect x="83.4634%" y="309" width="1.7110%" height="15" fill="rgb(211,85,2)"/><text x="83.7134%" y="319.50"></text></g><g><title>[unknown] (179 samples, 1.68%)</title><rect x="83.4916%" y="293" width="1.6828%" height="15" fill="rgb(229,17,7)"/><text x="83.7416%" y="303.50"></text></g><g><title>[unknown] (171 samples, 1.61%)</title><rect x="83.5668%" y="277" width="1.6076%" height="15" fill="rgb(239,72,28)"/><text x="83.8168%" y="287.50"></text></g><g><title>[unknown] (158 samples, 1.49%)</title><rect x="83.6890%" y="261" width="1.4854%" height="15" fill="rgb(230,47,54)"/><text x="83.9390%" y="271.50"></text></g><g><title>[unknown] (121 samples, 1.14%)</title><rect x="84.0369%" y="245" width="1.1375%" height="15" fill="rgb(214,50,8)"/><text x="84.2869%" y="255.50"></text></g><g><title>[unknown] (87 samples, 0.82%)</title><rect x="84.3565%" y="229" width="0.8179%" height="15" fill="rgb(216,198,43)"/><text x="84.6065%" y="239.50"></text></g><g><title>[unknown] (73 samples, 0.69%)</title><rect x="84.4881%" y="213" width="0.6863%" height="15" fill="rgb(234,20,35)"/><text x="84.7381%" y="223.50"></text></g><g><title>[unknown] (46 samples, 0.43%)</title><rect x="84.7419%" y="197" width="0.4325%" height="15" fill="rgb(254,45,19)"/><text x="84.9919%" y="207.50"></text></g><g><title>[unknown] (41 samples, 0.39%)</title><rect x="84.7889%" y="181" width="0.3854%" height="15" fill="rgb(219,14,44)"/><text x="85.0389%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="85.0710%" y="165" width="0.1034%" height="15" fill="rgb(217,220,26)"/><text x="85.3210%" y="175.50"></text></g><g><title>__GI___mmap64 (269 samples, 2.53%)</title><rect x="85.1744%" y="373" width="2.5289%" height="15" fill="rgb(213,158,28)"/><text x="85.4244%" y="383.50">__..</text></g><g><title>__GI___mmap64 (268 samples, 2.52%)</title><rect x="85.1838%" y="357" width="2.5195%" height="15" fill="rgb(252,51,52)"/><text x="85.4338%" y="367.50">__..</text></g><g><title>[unknown] (266 samples, 2.50%)</title><rect x="85.2026%" y="341" width="2.5007%" height="15" fill="rgb(246,89,16)"/><text x="85.4526%" y="351.50">[u..</text></g><g><title>[unknown] (265 samples, 2.49%)</title><rect x="85.2120%" y="325" width="2.4913%" height="15" fill="rgb(216,158,49)"/><text x="85.4620%" y="335.50">[u..</text></g><g><title>[unknown] (251 samples, 2.36%)</title><rect x="85.3436%" y="309" width="2.3597%" height="15" fill="rgb(236,107,19)"/><text x="85.5936%" y="319.50">[..</text></g><g><title>[unknown] (247 samples, 2.32%)</title><rect x="85.3812%" y="293" width="2.3221%" height="15" fill="rgb(228,185,30)"/><text x="85.6312%" y="303.50">[..</text></g><g><title>[unknown] (244 samples, 2.29%)</title><rect x="85.4094%" y="277" width="2.2939%" height="15" fill="rgb(246,134,8)"/><text x="85.6594%" y="287.50">[..</text></g><g><title>[unknown] (236 samples, 2.22%)</title><rect x="85.4846%" y="261" width="2.2187%" height="15" fill="rgb(214,143,50)"/><text x="85.7346%" y="271.50">[..</text></g><g><title>[unknown] (220 samples, 2.07%)</title><rect x="85.6350%" y="245" width="2.0683%" height="15" fill="rgb(228,75,8)"/><text x="85.8850%" y="255.50">[..</text></g><g><title>[unknown] (199 samples, 1.87%)</title><rect x="85.8325%" y="229" width="1.8708%" height="15" fill="rgb(207,175,4)"/><text x="86.0825%" y="239.50">[..</text></g><g><title>[unknown] (174 samples, 1.64%)</title><rect x="86.0675%" y="213" width="1.6358%" height="15" fill="rgb(205,108,24)"/><text x="86.3175%" y="223.50"></text></g><g><title>[unknown] (51 samples, 0.48%)</title><rect x="87.2238%" y="197" width="0.4795%" height="15" fill="rgb(244,120,49)"/><text x="87.4738%" y="207.50"></text></g><g><title>[unknown] (41 samples, 0.39%)</title><rect x="87.3179%" y="181" width="0.3854%" height="15" fill="rgb(223,47,38)"/><text x="87.5679%" y="191.50"></text></g><g><title>[unknown] (37 samples, 0.35%)</title><rect x="87.3555%" y="165" width="0.3478%" height="15" fill="rgb(229,179,11)"/><text x="87.6055%" y="175.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="87.4777%" y="149" width="0.2256%" height="15" fill="rgb(231,122,1)"/><text x="87.7277%" y="159.50"></text></g><g><title>[unknown] (21 samples, 0.20%)</title><rect x="87.5059%" y="133" width="0.1974%" height="15" fill="rgb(245,119,9)"/><text x="87.7559%" y="143.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="87.5247%" y="117" width="0.1786%" height="15" fill="rgb(241,163,25)"/><text x="87.7747%" y="127.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="87.5435%" y="101" width="0.1598%" height="15" fill="rgb(217,214,3)"/><text x="87.7935%" y="111.50"></text></g><g><title>[unknown] (17 samples, 0.16%)</title><rect x="87.5435%" y="85" width="0.1598%" height="15" fill="rgb(240,86,28)"/><text x="87.7935%" y="95.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="87.5529%" y="69" width="0.1504%" height="15" fill="rgb(215,47,9)"/><text x="87.8029%" y="79.50"></text></g><g><title>[unknown] (11 samples, 0.10%)</title><rect x="87.5999%" y="53" width="0.1034%" height="15" fill="rgb(252,25,45)"/><text x="87.8499%" y="63.50"></text></g><g><title>__GI__dl_allocate_tls (23 samples, 0.22%)</title><rect x="87.7033%" y="373" width="0.2162%" height="15" fill="rgb(251,164,9)"/><text x="87.9533%" y="383.50"></text></g><g><title>allocate_dtv (21 samples, 0.20%)</title><rect x="87.7221%" y="357" width="0.1974%" height="15" fill="rgb(233,194,0)"/><text x="87.9721%" y="367.50"></text></g><g><title>__libc_calloc (16 samples, 0.15%)</title><rect x="87.7691%" y="341" width="0.1504%" height="15" fill="rgb(249,111,24)"/><text x="88.0191%" y="351.50"></text></g><g><title>__GI__dl_allocate_tls_init (18 samples, 0.17%)</title><rect x="87.9195%" y="373" width="0.1692%" height="15" fill="rgb(250,223,3)"/><text x="88.1695%" y="383.50"></text></g><g><title>setup_stack_prot (190 samples, 1.79%)</title><rect x="88.1170%" y="373" width="1.7862%" height="15" fill="rgb(236,178,37)"/><text x="88.3670%" y="383.50">s..</text></g><g><title>__GI___mprotect (190 samples, 1.79%)</title><rect x="88.1170%" y="357" width="1.7862%" height="15" fill="rgb(241,158,50)"/><text x="88.3670%" y="367.50">_..</text></g><g><title>[unknown] (189 samples, 1.78%)</title><rect x="88.1264%" y="341" width="1.7768%" height="15" fill="rgb(213,121,41)"/><text x="88.3764%" y="351.50">[..</text></g><g><title>[unknown] (188 samples, 1.77%)</title><rect x="88.1358%" y="325" width="1.7674%" height="15" fill="rgb(240,92,3)"/><text x="88.3858%" y="335.50"></text></g><g><title>[unknown] (175 samples, 1.65%)</title><rect x="88.2580%" y="309" width="1.6452%" height="15" fill="rgb(205,123,3)"/><text x="88.5080%" y="319.50"></text></g><g><title>[unknown] (175 samples, 1.65%)</title><rect x="88.2580%" y="293" width="1.6452%" height="15" fill="rgb(205,97,47)"/><text x="88.5080%" y="303.50"></text></g><g><title>[unknown] (169 samples, 1.59%)</title><rect x="88.3144%" y="277" width="1.5888%" height="15" fill="rgb(247,152,14)"/><text x="88.5644%" y="287.50"></text></g><g><title>[unknown] (146 samples, 1.37%)</title><rect x="88.5306%" y="261" width="1.3726%" height="15" fill="rgb(248,195,53)"/><text x="88.7806%" y="271.50"></text></g><g><title>[unknown] (131 samples, 1.23%)</title><rect x="88.6716%" y="245" width="1.2316%" height="15" fill="rgb(226,201,16)"/><text x="88.9216%" y="255.50"></text></g><g><title>[unknown] (108 samples, 1.02%)</title><rect x="88.8878%" y="229" width="1.0153%" height="15" fill="rgb(205,98,0)"/><text x="89.1378%" y="239.50"></text></g><g><title>[unknown] (68 samples, 0.64%)</title><rect x="89.2639%" y="213" width="0.6393%" height="15" fill="rgb(214,191,48)"/><text x="89.5139%" y="223.50"></text></g><g><title>[unknown] (45 samples, 0.42%)</title><rect x="89.4801%" y="197" width="0.4231%" height="15" fill="rgb(237,112,39)"/><text x="89.7301%" y="207.50"></text></g><g><title>[unknown] (23 samples, 0.22%)</title><rect x="89.6869%" y="181" width="0.2162%" height="15" fill="rgb(247,203,27)"/><text x="89.9369%" y="191.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="89.7716%" y="165" width="0.1316%" height="15" fill="rgb(235,124,28)"/><text x="90.0216%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="89.7810%" y="149" width="0.1222%" height="15" fill="rgb(208,207,46)"/><text x="90.0310%" y="159.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="89.7904%" y="133" width="0.1128%" height="15" fill="rgb(234,176,4)"/><text x="90.0404%" y="143.50"></text></g><g><title>allocate_stack (727 samples, 6.83%)</title><rect x="83.0873%" y="389" width="6.8346%" height="15" fill="rgb(230,133,28)"/><text x="83.3373%" y="399.50">allocate_..</text></g><g><title>__pthread_create_2_1 (829 samples, 7.79%)</title><rect x="82.9933%" y="405" width="7.7936%" height="15" fill="rgb(211,137,40)"/><text x="83.2433%" y="415.50">__pthread_c..</text></g><g><title>create_thread (92 samples, 0.86%)</title><rect x="89.9220%" y="389" width="0.8649%" height="15" fill="rgb(254,35,13)"/><text x="90.1720%" y="399.50"></text></g><g><title>__GI___clone (89 samples, 0.84%)</title><rect x="89.9502%" y="373" width="0.8367%" height="15" fill="rgb(225,49,51)"/><text x="90.2002%" y="383.50"></text></g><g><title>[unknown] (77 samples, 0.72%)</title><rect x="90.0630%" y="357" width="0.7239%" height="15" fill="rgb(251,10,15)"/><text x="90.3130%" y="367.50"></text></g><g><title>[unknown] (76 samples, 0.71%)</title><rect x="90.0724%" y="341" width="0.7145%" height="15" fill="rgb(228,207,15)"/><text x="90.3224%" y="351.50"></text></g><g><title>[unknown] (63 samples, 0.59%)</title><rect x="90.1946%" y="325" width="0.5923%" height="15" fill="rgb(241,99,19)"/><text x="90.4446%" y="335.50"></text></g><g><title>[unknown] (62 samples, 0.58%)</title><rect x="90.2040%" y="309" width="0.5829%" height="15" fill="rgb(207,104,49)"/><text x="90.4540%" y="319.50"></text></g><g><title>[unknown] (60 samples, 0.56%)</title><rect x="90.2228%" y="293" width="0.5641%" height="15" fill="rgb(234,99,18)"/><text x="90.4728%" y="303.50"></text></g><g><title>[unknown] (58 samples, 0.55%)</title><rect x="90.2416%" y="277" width="0.5453%" height="15" fill="rgb(213,191,49)"/><text x="90.4916%" y="287.50"></text></g><g><title>[unknown] (48 samples, 0.45%)</title><rect x="90.3356%" y="261" width="0.4513%" height="15" fill="rgb(210,226,19)"/><text x="90.5856%" y="271.50"></text></g><g><title>[unknown] (46 samples, 0.43%)</title><rect x="90.3544%" y="245" width="0.4325%" height="15" fill="rgb(229,97,18)"/><text x="90.6044%" y="255.50"></text></g><g><title>[unknown] (37 samples, 0.35%)</title><rect x="90.4390%" y="229" width="0.3478%" height="15" fill="rgb(211,167,15)"/><text x="90.6890%" y="239.50"></text></g><g><title>[unknown] (34 samples, 0.32%)</title><rect x="90.4672%" y="213" width="0.3196%" height="15" fill="rgb(210,169,34)"/><text x="90.7172%" y="223.50"></text></g><g><title>[unknown] (27 samples, 0.25%)</title><rect x="90.5330%" y="197" width="0.2538%" height="15" fill="rgb(241,121,31)"/><text x="90.7830%" y="207.50"></text></g><g><title>std::sys::unix::thread::Thread::new (840 samples, 7.90%)</title><rect x="82.9463%" y="421" width="7.8970%" height="15" fill="rgb(232,40,11)"/><text x="83.1963%" y="431.50">std::sys::u..</text></g><g><title>decor::helpers::mysql_helpers::query_drop (872 samples, 8.20%)</title><rect x="82.7489%" y="453" width="8.1978%" height="15" fill="rgb(205,86,26)"/><text x="82.9989%" y="463.50">decor::help..</text></g><g><title>std::thread::spawn (863 samples, 8.11%)</title><rect x="82.8335%" y="437" width="8.1132%" height="15" fill="rgb(231,126,28)"/><text x="83.0835%" y="447.50">std::thread..</text></g><g><title>__GI___libc_malloc (16 samples, 0.15%)</title><rect x="91.0031%" y="437" width="0.1504%" height="15" fill="rgb(219,221,18)"/><text x="91.2531%" y="447.50"></text></g><g><title>tcache_get (12 samples, 0.11%)</title><rect x="91.0407%" y="421" width="0.1128%" height="15" fill="rgb(211,40,0)"/><text x="91.2907%" y="431.50"></text></g><g><title>decor::is_guise (33 samples, 0.31%)</title><rect x="90.9467%" y="453" width="0.3102%" height="15" fill="rgb(239,85,43)"/><text x="91.1967%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.16%)</title><rect x="91.2569%" y="437" width="0.1598%" height="15" fill="rgb(231,55,21)"/><text x="91.5069%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.11%)</title><rect x="91.4168%" y="405" width="0.1128%" height="15" fill="rgb(225,184,43)"/><text x="91.6668%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.11%)</title><rect x="91.4168%" y="389" width="0.1128%" height="15" fill="rgb(251,158,41)"/><text x="91.6668%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (23 samples, 0.22%)</title><rect x="91.5766%" y="373" width="0.2162%" height="15" fill="rgb(234,159,37)"/><text x="91.8266%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (23 samples, 0.22%)</title><rect x="91.5766%" y="357" width="0.2162%" height="15" fill="rgb(216,204,22)"/><text x="91.8266%" y="367.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.29%)</title><rect x="91.5296%" y="405" width="0.2914%" height="15" fill="rgb(214,17,3)"/><text x="91.7796%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.29%)</title><rect x="91.5296%" y="389" width="0.2914%" height="15" fill="rgb(212,111,17)"/><text x="91.7796%" y="399.50"></text></g><g><title>core::fmt::write (44 samples, 0.41%)</title><rect x="91.4168%" y="437" width="0.4137%" height="15" fill="rgb(221,157,24)"/><text x="91.6668%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (44 samples, 0.41%)</title><rect x="91.4168%" y="421" width="0.4137%" height="15" fill="rgb(252,16,13)"/><text x="91.6668%" y="431.50"></text></g><g><title>_int_free (11 samples, 0.10%)</title><rect x="91.8492%" y="373" width="0.1034%" height="15" fill="rgb(221,62,2)"/><text x="92.0992%" y="383.50"></text></g><g><title>decor::vault::insert_vault_entries (79 samples, 0.74%)</title><rect x="91.2569%" y="453" width="0.7427%" height="15" fill="rgb(247,87,22)"/><text x="91.5069%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.17%)</title><rect x="91.8304%" y="437" width="0.1692%" height="15" fill="rgb(215,73,9)"/><text x="92.0804%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.17%)</title><rect x="91.8304%" y="421" width="0.1692%" height="15" fill="rgb(207,175,33)"/><text x="92.0804%" y="431.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.16%)</title><rect x="91.8398%" y="405" width="0.1598%" height="15" fill="rgb(243,129,54)"/><text x="92.0898%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.16%)</title><rect x="91.8398%" y="389" width="0.1598%" height="15" fill="rgb(227,119,45)"/><text x="92.0898%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.16%)</title><rect x="92.1500%" y="453" width="0.1598%" height="15" fill="rgb(205,109,36)"/><text x="92.4000%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (15 samples, 0.14%)</title><rect x="92.1688%" y="437" width="0.1410%" height="15" fill="rgb(205,6,39)"/><text x="92.4188%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (15 samples, 0.14%)</title><rect x="92.1688%" y="421" width="0.1410%" height="15" fill="rgb(221,32,16)"/><text x="92.4188%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.12%)</title><rect x="92.1876%" y="405" width="0.1222%" height="15" fill="rgb(228,144,50)"/><text x="92.4376%" y="415.50"></text></g><g><title>__GI_munmap (92 samples, 0.86%)</title><rect x="92.4885%" y="341" width="0.8649%" height="15" fill="rgb(229,201,53)"/><text x="92.7385%" y="351.50"></text></g><g><title>[unknown] (90 samples, 0.85%)</title><rect x="92.5073%" y="325" width="0.8461%" height="15" fill="rgb(249,153,27)"/><text x="92.7573%" y="335.50"></text></g><g><title>[unknown] (90 samples, 0.85%)</title><rect x="92.5073%" y="309" width="0.8461%" height="15" fill="rgb(227,106,25)"/><text x="92.7573%" y="319.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="92.5731%" y="293" width="0.7803%" height="15" fill="rgb(230,65,29)"/><text x="92.8231%" y="303.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="92.5731%" y="277" width="0.7803%" height="15" fill="rgb(221,57,46)"/><text x="92.8231%" y="287.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="92.5731%" y="261" width="0.7803%" height="15" fill="rgb(229,161,17)"/><text x="92.8231%" y="271.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="92.5731%" y="245" width="0.7803%" height="15" fill="rgb(222,213,11)"/><text x="92.8231%" y="255.50"></text></g><g><title>[unknown] (79 samples, 0.74%)</title><rect x="92.6107%" y="229" width="0.7427%" height="15" fill="rgb(235,35,13)"/><text x="92.8607%" y="239.50"></text></g><g><title>[unknown] (75 samples, 0.71%)</title><rect x="92.6483%" y="213" width="0.7051%" height="15" fill="rgb(233,158,34)"/><text x="92.8983%" y="223.50"></text></g><g><title>[unknown] (68 samples, 0.64%)</title><rect x="92.7141%" y="197" width="0.6393%" height="15" fill="rgb(215,151,48)"/><text x="92.9641%" y="207.50"></text></g><g><title>[unknown] (63 samples, 0.59%)</title><rect x="92.7611%" y="181" width="0.5923%" height="15" fill="rgb(229,84,14)"/><text x="93.0111%" y="191.50"></text></g><g><title>[unknown] (27 samples, 0.25%)</title><rect x="93.0996%" y="165" width="0.2538%" height="15" fill="rgb(229,68,14)"/><text x="93.3496%" y="175.50"></text></g><g><title>[unknown] (19 samples, 0.18%)</title><rect x="93.1748%" y="149" width="0.1786%" height="15" fill="rgb(243,106,26)"/><text x="93.4248%" y="159.50"></text></g><g><title>[unknown] (14 samples, 0.13%)</title><rect x="93.2218%" y="133" width="0.1316%" height="15" fill="rgb(206,45,38)"/><text x="93.4718%" y="143.50"></text></g><g><title>free_stacks (99 samples, 0.93%)</title><rect x="92.4321%" y="357" width="0.9307%" height="15" fill="rgb(226,6,15)"/><text x="92.6821%" y="367.50"></text></g><g><title>queue_stack (100 samples, 0.94%)</title><rect x="92.4321%" y="373" width="0.9401%" height="15" fill="rgb(232,22,54)"/><text x="92.6821%" y="383.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (114 samples, 1.07%)</title><rect x="92.3099%" y="453" width="1.0717%" height="15" fill="rgb(229,222,32)"/><text x="92.5599%" y="463.50"></text></g><g><title>std::sys::unix::thread::Thread::join (108 samples, 1.02%)</title><rect x="92.3663%" y="437" width="1.0153%" height="15" fill="rgb(228,62,29)"/><text x="92.6163%" y="447.50"></text></g><g><title>__pthread_clockjoin_ex (107 samples, 1.01%)</title><rect x="92.3757%" y="421" width="1.0059%" height="15" fill="rgb(251,103,34)"/><text x="92.6257%" y="431.50"></text></g><g><title>__free_tcb (102 samples, 0.96%)</title><rect x="92.4227%" y="405" width="0.9589%" height="15" fill="rgb(233,12,30)"/><text x="92.6727%" y="415.50"></text></g><g><title>__deallocate_stack (101 samples, 0.95%)</title><rect x="92.4321%" y="389" width="0.9495%" height="15" fill="rgb(238,52,0)"/><text x="92.6821%" y="399.50"></text></g><g><title>decor::disguise::apply (2,881 samples, 27.08%)</title><rect x="66.4097%" y="469" width="27.0847%" height="15" fill="rgb(223,98,5)"/><text x="66.6597%" y="479.50">decor::disguise::apply</text></g><g><title>std::time::Instant::elapsed (12 samples, 0.11%)</title><rect x="93.3816%" y="453" width="0.1128%" height="15" fill="rgb(228,75,37)"/><text x="93.6316%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (102 samples, 0.96%)</title><rect x="93.5884%" y="453" width="0.9589%" height="15" fill="rgb(205,115,49)"/><text x="93.8384%" y="463.50"></text></g><g><title>std::sys::unix::fs::File::write (102 samples, 0.96%)</title><rect x="93.5884%" y="437" width="0.9589%" height="15" fill="rgb(250,154,43)"/><text x="93.8384%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (102 samples, 0.96%)</title><rect x="93.5884%" y="421" width="0.9589%" height="15" fill="rgb(226,43,29)"/><text x="93.8384%" y="431.50"></text></g><g><title>__libc_write (102 samples, 0.96%)</title><rect x="93.5884%" y="405" width="0.9589%" height="15" fill="rgb(249,228,39)"/><text x="93.8384%" y="415.50"></text></g><g><title>__libc_write (102 samples, 0.96%)</title><rect x="93.5884%" y="389" width="0.9589%" height="15" fill="rgb(216,79,43)"/><text x="93.8384%" y="399.50"></text></g><g><title>[unknown] (102 samples, 0.96%)</title><rect x="93.5884%" y="373" width="0.9589%" height="15" fill="rgb(228,95,12)"/><text x="93.8384%" y="383.50"></text></g><g><title>[unknown] (101 samples, 0.95%)</title><rect x="93.5978%" y="357" width="0.9495%" height="15" fill="rgb(249,221,15)"/><text x="93.8478%" y="367.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="93.7670%" y="341" width="0.7803%" height="15" fill="rgb(233,34,13)"/><text x="94.0170%" y="351.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="93.7670%" y="325" width="0.7803%" height="15" fill="rgb(214,103,39)"/><text x="94.0170%" y="335.50"></text></g><g><title>[unknown] (83 samples, 0.78%)</title><rect x="93.7670%" y="309" width="0.7803%" height="15" fill="rgb(251,126,39)"/><text x="94.0170%" y="319.50"></text></g><g><title>[unknown] (79 samples, 0.74%)</title><rect x="93.8046%" y="293" width="0.7427%" height="15" fill="rgb(214,216,36)"/><text x="94.0546%" y="303.50"></text></g><g><title>[unknown] (78 samples, 0.73%)</title><rect x="93.8140%" y="277" width="0.7333%" height="15" fill="rgb(220,221,8)"/><text x="94.0640%" y="287.50"></text></g><g><title>[unknown] (70 samples, 0.66%)</title><rect x="93.8893%" y="261" width="0.6581%" height="15" fill="rgb(240,216,3)"/><text x="94.1393%" y="271.50"></text></g><g><title>[unknown] (66 samples, 0.62%)</title><rect x="93.9269%" y="245" width="0.6205%" height="15" fill="rgb(232,218,17)"/><text x="94.1769%" y="255.50"></text></g><g><title>[unknown] (62 samples, 0.58%)</title><rect x="93.9645%" y="229" width="0.5829%" height="15" fill="rgb(229,163,45)"/><text x="94.2145%" y="239.50"></text></g><g><title>[unknown] (57 samples, 0.54%)</title><rect x="94.0115%" y="213" width="0.5359%" height="15" fill="rgb(231,110,42)"/><text x="94.2615%" y="223.50"></text></g><g><title>[unknown] (50 samples, 0.47%)</title><rect x="94.0773%" y="197" width="0.4701%" height="15" fill="rgb(208,170,48)"/><text x="94.3273%" y="207.50"></text></g><g><title>[unknown] (43 samples, 0.40%)</title><rect x="94.1431%" y="181" width="0.4042%" height="15" fill="rgb(239,116,25)"/><text x="94.3931%" y="191.50"></text></g><g><title>[unknown] (42 samples, 0.39%)</title><rect x="94.1525%" y="165" width="0.3948%" height="15" fill="rgb(219,200,50)"/><text x="94.4025%" y="175.50"></text></g><g><title>[unknown] (32 samples, 0.30%)</title><rect x="94.2465%" y="149" width="0.3008%" height="15" fill="rgb(245,200,0)"/><text x="94.4965%" y="159.50"></text></g><g><title>[unknown] (28 samples, 0.26%)</title><rect x="94.2841%" y="133" width="0.2632%" height="15" fill="rgb(245,119,33)"/><text x="94.5341%" y="143.50"></text></g><g><title>[unknown] (24 samples, 0.23%)</title><rect x="94.3217%" y="117" width="0.2256%" height="15" fill="rgb(231,125,12)"/><text x="94.5717%" y="127.50"></text></g><g><title>[unknown] (16 samples, 0.15%)</title><rect x="94.3969%" y="101" width="0.1504%" height="15" fill="rgb(216,96,41)"/><text x="94.6469%" y="111.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="94.4345%" y="85" width="0.1128%" height="15" fill="rgb(248,43,45)"/><text x="94.6845%" y="95.50"></text></g><g><title>malloc_consolidate (27 samples, 0.25%)</title><rect x="94.9704%" y="437" width="0.2538%" height="15" fill="rgb(217,222,7)"/><text x="95.2204%" y="447.50"></text></g><g><title>_int_free (54 samples, 0.51%)</title><rect x="94.7260%" y="453" width="0.5077%" height="15" fill="rgb(233,28,6)"/><text x="94.9760%" y="463.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.19%)</title><rect x="95.4686%" y="309" width="0.1880%" height="15" fill="rgb(231,218,15)"/><text x="95.7186%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.15%)</title><rect x="95.5063%" y="293" width="0.1504%" height="15" fill="rgb(226,171,48)"/><text x="95.7563%" y="303.50"></text></g><g><title>core::str::validations::next_code_point (16 samples, 0.15%)</title><rect x="95.5063%" y="277" width="0.1504%" height="15" fill="rgb(235,201,9)"/><text x="95.7563%" y="287.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (14 samples, 0.13%)</title><rect x="96.0139%" y="197" width="0.1316%" height="15" fill="rgb(217,80,15)"/><text x="96.2639%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (44 samples, 0.41%)</title><rect x="95.7789%" y="229" width="0.4137%" height="15" fill="rgb(219,152,8)"/><text x="96.0289%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (44 samples, 0.41%)</title><rect x="95.7789%" y="213" width="0.4137%" height="15" fill="rgb(243,107,38)"/><text x="96.0289%" y="223.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (57 samples, 0.54%)</title><rect x="95.6755%" y="277" width="0.5359%" height="15" fill="rgb(231,17,5)"/><text x="95.9255%" y="287.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (57 samples, 0.54%)</title><rect x="95.6755%" y="261" width="0.5359%" height="15" fill="rgb(209,25,54)"/><text x="95.9255%" y="271.50"></text></g><g><title>core::unicode::unicode_data::skip_search (56 samples, 0.53%)</title><rect x="95.6849%" y="245" width="0.5265%" height="15" fill="rgb(219,0,2)"/><text x="95.9349%" y="255.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug (80 samples, 0.75%)</title><rect x="95.6567%" y="309" width="0.7521%" height="15" fill="rgb(246,9,5)"/><text x="95.9067%" y="319.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (80 samples, 0.75%)</title><rect x="95.6567%" y="293" width="0.7521%" height="15" fill="rgb(226,159,4)"/><text x="95.9067%" y="303.50"></text></g><g><title>core::unicode::printable::is_printable (21 samples, 0.20%)</title><rect x="96.2113%" y="277" width="0.1974%" height="15" fill="rgb(219,175,34)"/><text x="96.4613%" y="287.50"></text></g><g><title>core::unicode::printable::check (21 samples, 0.20%)</title><rect x="96.2113%" y="261" width="0.1974%" height="15" fill="rgb(236,10,46)"/><text x="96.4613%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_str (11 samples, 0.10%)</title><rect x="96.4088%" y="309" width="0.1034%" height="15" fill="rgb(240,211,16)"/><text x="96.6588%" y="319.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (122 samples, 1.15%)</title><rect x="95.3746%" y="325" width="1.1469%" height="15" fill="rgb(205,3,43)"/><text x="95.6246%" y="335.50"></text></g><g><title>alloc::fmt::format (148 samples, 1.39%)</title><rect x="95.2336%" y="453" width="1.3914%" height="15" fill="rgb(245,7,22)"/><text x="95.4836%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (146 samples, 1.37%)</title><rect x="95.2524%" y="437" width="1.3726%" height="15" fill="rgb(239,132,32)"/><text x="95.5024%" y="447.50"></text></g><g><title>core::fmt::write (146 samples, 1.37%)</title><rect x="95.2524%" y="421" width="1.3726%" height="15" fill="rgb(228,202,34)"/><text x="95.5024%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::fmt::Debug&gt;::fmt (142 samples, 1.33%)</title><rect x="95.2900%" y="405" width="1.3350%" height="15" fill="rgb(254,200,22)"/><text x="95.5400%" y="415.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (139 samples, 1.31%)</title><rect x="95.3182%" y="389" width="1.3068%" height="15" fill="rgb(219,10,39)"/><text x="95.5682%" y="399.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (137 samples, 1.29%)</title><rect x="95.3370%" y="373" width="1.2880%" height="15" fill="rgb(226,210,39)"/><text x="95.5870%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (136 samples, 1.28%)</title><rect x="95.3464%" y="357" width="1.2786%" height="15" fill="rgb(208,219,16)"/><text x="95.5964%" y="367.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (136 samples, 1.28%)</title><rect x="95.3464%" y="341" width="1.2786%" height="15" fill="rgb(216,158,51)"/><text x="95.5964%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.13%)</title><rect x="96.6250%" y="453" width="0.1316%" height="15" fill="rgb(233,14,44)"/><text x="96.8750%" y="463.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.12%)</title><rect x="96.6344%" y="437" width="0.1222%" height="15" fill="rgb(237,97,39)"/><text x="96.8844%" y="447.50"></text></g><g><title>_int_realloc (12 samples, 0.11%)</title><rect x="96.6438%" y="421" width="0.1128%" height="15" fill="rgb(218,198,43)"/><text x="96.8938%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.19%)</title><rect x="96.9540%" y="421" width="0.1880%" height="15" fill="rgb(231,104,20)"/><text x="97.2040%" y="431.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (14 samples, 0.13%)</title><rect x="97.0104%" y="405" width="0.1316%" height="15" fill="rgb(254,36,13)"/><text x="97.2604%" y="415.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (33 samples, 0.31%)</title><rect x="96.9540%" y="437" width="0.3102%" height="15" fill="rgb(248,14,50)"/><text x="97.2040%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (15 samples, 0.14%)</title><rect x="97.8941%" y="341" width="0.1410%" height="15" fill="rgb(217,107,29)"/><text x="98.1441%" y="351.50"></text></g><g><title>_int_malloc (18 samples, 0.17%)</title><rect x="98.1762%" y="309" width="0.1692%" height="15" fill="rgb(251,169,33)"/><text x="98.4262%" y="319.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.32%)</title><rect x="98.0352%" y="325" width="0.3196%" height="15" fill="rgb(217,108,32)"/><text x="98.2852%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.33%)</title><rect x="98.0352%" y="341" width="0.3290%" height="15" fill="rgb(219,66,42)"/><text x="98.2852%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (66 samples, 0.62%)</title><rect x="97.7531%" y="357" width="0.6205%" height="15" fill="rgb(206,180,7)"/><text x="98.0031%" y="367.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (109 samples, 1.02%)</title><rect x="97.4335%" y="389" width="1.0247%" height="15" fill="rgb(208,226,31)"/><text x="97.6835%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (102 samples, 0.96%)</title><rect x="97.4993%" y="373" width="0.9589%" height="15" fill="rgb(218,26,49)"/><text x="97.7493%" y="383.50"></text></g><g><title>decor::vault::get_vault_entries_with_constraint (196 samples, 1.84%)</title><rect x="96.7566%" y="453" width="1.8426%" height="15" fill="rgb(233,197,48)"/><text x="97.0066%" y="463.50">d..</text></g><g><title>serde_json::de::from_str (142 samples, 1.33%)</title><rect x="97.2643%" y="437" width="1.3350%" height="15" fill="rgb(252,181,51)"/><text x="97.5143%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (140 samples, 1.32%)</title><rect x="97.2831%" y="421" width="1.3162%" height="15" fill="rgb(253,90,19)"/><text x="97.5331%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (136 samples, 1.28%)</title><rect x="97.3207%" y="405" width="1.2786%" height="15" fill="rgb(215,171,30)"/><text x="97.5707%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.14%)</title><rect x="98.4582%" y="389" width="0.1410%" height="15" fill="rgb(214,222,9)"/><text x="98.7082%" y="399.50"></text></g><g><title>decor::vault::print_as_filters (545 samples, 5.12%)</title><rect x="93.4944%" y="469" width="5.1236%" height="15" fill="rgb(223,3,22)"/><text x="93.7444%" y="479.50">decor:..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (13 samples, 0.12%)</title><rect x="98.6180%" y="437" width="0.1222%" height="15" fill="rgb(225,196,46)"/><text x="98.8680%" y="447.50"></text></g><g><title>mysql::conn::Conn::_query (13 samples, 0.12%)</title><rect x="98.6180%" y="421" width="0.1222%" height="15" fill="rgb(209,110,37)"/><text x="98.8680%" y="431.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (13 samples, 0.12%)</title><rect x="98.6180%" y="405" width="0.1222%" height="15" fill="rgb(249,89,12)"/><text x="98.8680%" y="415.50"></text></g><g><title>mysql::conn::Conn::read_packet (13 samples, 0.12%)</title><rect x="98.6180%" y="389" width="0.1222%" height="15" fill="rgb(226,27,33)"/><text x="98.8680%" y="399.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.12%)</title><rect x="98.6180%" y="373" width="0.1222%" height="15" fill="rgb(213,82,22)"/><text x="98.8680%" y="383.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (13 samples, 0.12%)</title><rect x="98.6180%" y="357" width="0.1222%" height="15" fill="rgb(248,140,0)"/><text x="98.8680%" y="367.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (13 samples, 0.12%)</title><rect x="98.6180%" y="341" width="0.1222%" height="15" fill="rgb(228,106,3)"/><text x="98.8680%" y="351.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (13 samples, 0.12%)</title><rect x="98.6180%" y="325" width="0.1222%" height="15" fill="rgb(209,23,37)"/><text x="98.8680%" y="335.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 0.12%)</title><rect x="98.6180%" y="309" width="0.1222%" height="15" fill="rgb(241,93,50)"/><text x="98.8680%" y="319.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 0.12%)</title><rect x="98.6180%" y="293" width="0.1222%" height="15" fill="rgb(253,46,43)"/><text x="98.8680%" y="303.50"></text></g><g><title>__libc_recv (13 samples, 0.12%)</title><rect x="98.6180%" y="277" width="0.1222%" height="15" fill="rgb(226,206,43)"/><text x="98.8680%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="261" width="0.1222%" height="15" fill="rgb(217,54,7)"/><text x="98.8680%" y="271.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="245" width="0.1222%" height="15" fill="rgb(223,5,52)"/><text x="98.8680%" y="255.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="229" width="0.1222%" height="15" fill="rgb(206,52,46)"/><text x="98.8680%" y="239.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="213" width="0.1222%" height="15" fill="rgb(253,136,11)"/><text x="98.8680%" y="223.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="197" width="0.1222%" height="15" fill="rgb(208,106,33)"/><text x="98.8680%" y="207.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="181" width="0.1222%" height="15" fill="rgb(206,54,4)"/><text x="98.8680%" y="191.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="165" width="0.1222%" height="15" fill="rgb(213,3,15)"/><text x="98.8680%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="149" width="0.1222%" height="15" fill="rgb(252,211,39)"/><text x="98.8680%" y="159.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="133" width="0.1222%" height="15" fill="rgb(223,6,36)"/><text x="98.8680%" y="143.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="117" width="0.1222%" height="15" fill="rgb(252,169,45)"/><text x="98.8680%" y="127.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="101" width="0.1222%" height="15" fill="rgb(212,48,26)"/><text x="98.8680%" y="111.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="98.6180%" y="85" width="0.1222%" height="15" fill="rgb(251,102,48)"/><text x="98.8680%" y="95.50"></text></g><g><title>[unknown] (12 samples, 0.11%)</title><rect x="98.6274%" y="69" width="0.1128%" height="15" fill="rgb(243,208,16)"/><text x="98.8774%" y="79.50"></text></g><g><title>decor::create_schema (14 samples, 0.13%)</title><rect x="98.6180%" y="453" width="0.1316%" height="15" fill="rgb(219,96,24)"/><text x="98.8680%" y="463.50"></text></g><g><title>hotcrp::datagen::papers::insert_papers (23 samples, 0.22%)</title><rect x="98.7496%" y="453" width="0.2162%" height="15" fill="rgb(219,33,29)"/><text x="98.9996%" y="463.50"></text></g><g><title>hotcrp::datagen::datagen::populate_database (69 samples, 0.65%)</title><rect x="98.6180%" y="469" width="0.6487%" height="15" fill="rgb(223,176,5)"/><text x="98.8680%" y="479.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (32 samples, 0.30%)</title><rect x="98.9659%" y="453" width="0.3008%" height="15" fill="rgb(228,140,14)"/><text x="99.2159%" y="463.50"></text></g><g><title>__libc_start_main (3,509 samples, 32.99%)</title><rect x="66.4097%" y="629" width="32.9886%" height="15" fill="rgb(217,179,31)"/><text x="66.6597%" y="639.50">__libc_start_main</text></g><g><title>main (3,509 samples, 32.99%)</title><rect x="66.4097%" y="613" width="32.9886%" height="15" fill="rgb(230,9,30)"/><text x="66.6597%" y="623.50">main</text></g><g><title>std::rt::lang_start_internal (3,509 samples, 32.99%)</title><rect x="66.4097%" y="597" width="32.9886%" height="15" fill="rgb(230,136,20)"/><text x="66.6597%" y="607.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (3,509 samples, 32.99%)</title><rect x="66.4097%" y="581" width="32.9886%" height="15" fill="rgb(215,210,22)"/><text x="66.6597%" y="591.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,509 samples, 32.99%)</title><rect x="66.4097%" y="565" width="32.9886%" height="15" fill="rgb(218,43,5)"/><text x="66.6597%" y="575.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,509 samples, 32.99%)</title><rect x="66.4097%" y="549" width="32.9886%" height="15" fill="rgb(216,11,5)"/><text x="66.6597%" y="559.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,509 samples, 32.99%)</title><rect x="66.4097%" y="533" width="32.9886%" height="15" fill="rgb(209,82,29)"/><text x="66.6597%" y="543.50">core::ops::function::impls::&lt;impl core::ops::function..</text></g><g><title>std::rt::lang_start::_{{closure}} (3,509 samples, 32.99%)</title><rect x="66.4097%" y="517" width="32.9886%" height="15" fill="rgb(244,115,12)"/><text x="66.6597%" y="527.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,509 samples, 32.99%)</title><rect x="66.4097%" y="501" width="32.9886%" height="15" fill="rgb(222,82,18)"/><text x="66.6597%" y="511.50">std::sys_common::backtrace::__rust_begin_short_backtr..</text></g><g><title>hotcrp::main (3,509 samples, 32.99%)</title><rect x="66.4097%" y="485" width="32.9886%" height="15" fill="rgb(249,227,8)"/><text x="66.6597%" y="495.50">hotcrp::main</text></g><g><title>_start (3,511 samples, 33.01%)</title><rect x="66.4003%" y="645" width="33.0074%" height="15" fill="rgb(253,141,45)"/><text x="66.6503%" y="655.50">_start</text></g><g><title>hotcrp (10,632 samples, 99.95%)</title><rect x="0.0000%" y="661" width="99.9530%" height="15" fill="rgb(234,184,4)"/><text x="0.2500%" y="671.50">hotcrp</text></g><g><title>all (10,637 samples, 100%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(218,194,23)"/><text x="0.2500%" y="687.50"></text></g></svg></svg>