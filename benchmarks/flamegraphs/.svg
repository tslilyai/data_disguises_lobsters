<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="725.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="725.00"> </text><svg id="frames" x="10" width="1180"><g><title>__GI___libc_malloc (17 samples, 0.19%)</title><rect x="1.5409%" y="645" width="0.1926%" height="15" fill="rgb(227,0,7)"/><text x="1.7909%" y="655.50"></text></g><g><title>_int_free (37 samples, 0.42%)</title><rect x="1.9148%" y="645" width="0.4192%" height="15" fill="rgb(217,0,24)"/><text x="2.1648%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.17%)</title><rect x="2.3793%" y="645" width="0.1700%" height="15" fill="rgb(221,193,54)"/><text x="2.6293%" y="655.50"></text></g><g><title>core::fmt::write (17 samples, 0.19%)</title><rect x="2.5719%" y="645" width="0.1926%" height="15" fill="rgb(248,212,6)"/><text x="2.8219%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.15%)</title><rect x="2.7872%" y="645" width="0.1473%" height="15" fill="rgb(208,68,35)"/><text x="3.0372%" y="655.50"></text></g><g><title>decor::disguise::apply (11 samples, 0.12%)</title><rect x="3.0591%" y="645" width="0.1246%" height="15" fill="rgb(232,128,0)"/><text x="3.3091%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (18 samples, 0.20%)</title><rect x="3.6257%" y="645" width="0.2039%" height="15" fill="rgb(207,160,47)"/><text x="3.8757%" y="655.50"></text></g><g><title>[[heap]] (265 samples, 3.00%)</title><rect x="0.8838%" y="661" width="3.0025%" height="15" fill="rgb(228,23,34)"/><text x="1.1338%" y="671.50">[[h..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.24%)</title><rect x="3.8862%" y="645" width="0.2379%" height="15" fill="rgb(218,30,26)"/><text x="4.1362%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.32%)</title><rect x="4.8833%" y="645" width="0.3172%" height="15" fill="rgb(220,122,19)"/><text x="5.1333%" y="655.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (11 samples, 0.12%)</title><rect x="5.7784%" y="645" width="0.1246%" height="15" fill="rgb(250,228,42)"/><text x="6.0284%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (89 samples, 1.01%)</title><rect x="6.0616%" y="645" width="1.0084%" height="15" fill="rgb(240,193,28)"/><text x="6.3116%" y="655.50"></text></g><g><title>[[stack]] (284 samples, 3.22%)</title><rect x="3.8862%" y="661" width="3.2178%" height="15" fill="rgb(216,20,37)"/><text x="4.1362%" y="671.50">[[s..</text></g><g><title>[anon] (10 samples, 0.11%)</title><rect x="7.1040%" y="661" width="0.1133%" height="15" fill="rgb(206,188,39)"/><text x="7.3540%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 0.20%)</title><rect x="7.2626%" y="645" width="0.2039%" height="15" fill="rgb(217,207,13)"/><text x="7.5126%" y="655.50"></text></g><g><title>[hotcrp] (61 samples, 0.69%)</title><rect x="7.2173%" y="661" width="0.6911%" height="15" fill="rgb(231,73,38)"/><text x="7.4673%" y="671.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="7.9085%" y="661" width="0.1133%" height="15" fill="rgb(225,20,46)"/><text x="8.1585%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (10 samples, 0.11%)</title><rect x="8.8489%" y="645" width="0.1133%" height="15" fill="rgb(210,31,41)"/><text x="9.0989%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="9.2454%" y="645" width="0.1020%" height="15" fill="rgb(221,200,47)"/><text x="9.4954%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.10%)</title><rect x="9.4494%" y="645" width="0.1020%" height="15" fill="rgb(226,26,5)"/><text x="9.6994%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (9 samples, 0.10%)</title><rect x="9.6080%" y="645" width="0.1020%" height="15" fill="rgb(249,33,26)"/><text x="9.8580%" y="655.50"></text></g><g><title>[hotcrp] (14 samples, 0.16%)</title><rect x="9.9252%" y="645" width="0.1586%" height="15" fill="rgb(235,183,28)"/><text x="10.1752%" y="655.50"></text></g><g><title>[unknown] (100 samples, 1.13%)</title><rect x="10.0838%" y="645" width="1.1330%" height="15" fill="rgb(221,5,38)"/><text x="10.3338%" y="655.50"></text></g><g><title>[unknown] (98 samples, 1.11%)</title><rect x="10.1065%" y="629" width="1.1104%" height="15" fill="rgb(247,18,42)"/><text x="10.3565%" y="639.50"></text></g><g><title>[unknown] (98 samples, 1.11%)</title><rect x="10.1065%" y="613" width="1.1104%" height="15" fill="rgb(241,131,45)"/><text x="10.3565%" y="623.50"></text></g><g><title>[unknown] (97 samples, 1.10%)</title><rect x="10.1178%" y="597" width="1.0990%" height="15" fill="rgb(249,31,29)"/><text x="10.3678%" y="607.50"></text></g><g><title>[unknown] (84 samples, 0.95%)</title><rect x="10.2651%" y="581" width="0.9517%" height="15" fill="rgb(225,111,53)"/><text x="10.5151%" y="591.50"></text></g><g><title>[unknown] (78 samples, 0.88%)</title><rect x="10.3331%" y="565" width="0.8838%" height="15" fill="rgb(238,160,17)"/><text x="10.5831%" y="575.50"></text></g><g><title>[unknown] (76 samples, 0.86%)</title><rect x="10.3558%" y="549" width="0.8611%" height="15" fill="rgb(214,148,48)"/><text x="10.6058%" y="559.50"></text></g><g><title>[unknown] (68 samples, 0.77%)</title><rect x="10.4464%" y="533" width="0.7705%" height="15" fill="rgb(232,36,49)"/><text x="10.6964%" y="543.50"></text></g><g><title>[unknown] (63 samples, 0.71%)</title><rect x="10.5031%" y="517" width="0.7138%" height="15" fill="rgb(209,103,24)"/><text x="10.7531%" y="527.50"></text></g><g><title>[unknown] (52 samples, 0.59%)</title><rect x="10.6277%" y="501" width="0.5892%" height="15" fill="rgb(229,88,8)"/><text x="10.8777%" y="511.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="10.7750%" y="485" width="0.4419%" height="15" fill="rgb(213,181,19)"/><text x="11.0250%" y="495.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="10.8316%" y="469" width="0.3852%" height="15" fill="rgb(254,191,54)"/><text x="11.0816%" y="479.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="10.8770%" y="453" width="0.3399%" height="15" fill="rgb(241,83,37)"/><text x="11.1270%" y="463.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="10.9223%" y="437" width="0.2946%" height="15" fill="rgb(233,36,39)"/><text x="11.1723%" y="447.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="10.9903%" y="421" width="0.2266%" height="15" fill="rgb(226,3,54)"/><text x="11.2403%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="11.0696%" y="405" width="0.1473%" height="15" fill="rgb(245,192,40)"/><text x="11.3196%" y="415.50"></text></g><g><title>__GI___clone (1,123 samples, 12.72%)</title><rect x="11.2169%" y="645" width="12.7238%" height="15" fill="rgb(238,167,29)"/><text x="11.4669%" y="655.50">__GI___clone</text></g><g><title>[unknown] (1,120 samples, 12.69%)</title><rect x="11.2508%" y="629" width="12.6898%" height="15" fill="rgb(232,182,51)"/><text x="11.5008%" y="639.50">[unknown]</text></g><g><title>[unknown] (1,115 samples, 12.63%)</title><rect x="11.3075%" y="613" width="12.6331%" height="15" fill="rgb(231,60,39)"/><text x="11.5575%" y="623.50">[unknown]</text></g><g><title>[unknown] (1,100 samples, 12.46%)</title><rect x="11.4775%" y="597" width="12.4632%" height="15" fill="rgb(208,69,12)"/><text x="11.7275%" y="607.50">[unknown]</text></g><g><title>[unknown] (1,096 samples, 12.42%)</title><rect x="11.5228%" y="581" width="12.4179%" height="15" fill="rgb(235,93,37)"/><text x="11.7728%" y="591.50">[unknown]</text></g><g><title>[unknown] (1,092 samples, 12.37%)</title><rect x="11.5681%" y="565" width="12.3725%" height="15" fill="rgb(213,116,39)"/><text x="11.8181%" y="575.50">[unknown]</text></g><g><title>[unknown] (1,053 samples, 11.93%)</title><rect x="12.0100%" y="549" width="11.9307%" height="15" fill="rgb(222,207,29)"/><text x="12.2600%" y="559.50">[unknown]</text></g><g><title>[unknown] (898 samples, 10.17%)</title><rect x="13.7661%" y="533" width="10.1745%" height="15" fill="rgb(206,96,30)"/><text x="14.0161%" y="543.50">[unknown]</text></g><g><title>[unknown] (733 samples, 8.31%)</title><rect x="15.6356%" y="517" width="8.3050%" height="15" fill="rgb(218,138,4)"/><text x="15.8856%" y="527.50">[unknown]</text></g><g><title>[unknown] (530 samples, 6.00%)</title><rect x="17.9356%" y="501" width="6.0050%" height="15" fill="rgb(250,191,14)"/><text x="18.1856%" y="511.50">[unknown]</text></g><g><title>[unknown] (354 samples, 4.01%)</title><rect x="19.9298%" y="485" width="4.0109%" height="15" fill="rgb(239,60,40)"/><text x="20.1798%" y="495.50">[unk..</text></g><g><title>[unknown] (260 samples, 2.95%)</title><rect x="20.9948%" y="469" width="2.9458%" height="15" fill="rgb(206,27,48)"/><text x="21.2448%" y="479.50">[u..</text></g><g><title>[unknown] (226 samples, 2.56%)</title><rect x="21.3800%" y="453" width="2.5606%" height="15" fill="rgb(225,35,8)"/><text x="21.6300%" y="463.50">[u..</text></g><g><title>[unknown] (173 samples, 1.96%)</title><rect x="21.9805%" y="437" width="1.9601%" height="15" fill="rgb(250,213,24)"/><text x="22.2305%" y="447.50">[..</text></g><g><title>[unknown] (105 samples, 1.19%)</title><rect x="22.7510%" y="421" width="1.1897%" height="15" fill="rgb(247,123,22)"/><text x="23.0010%" y="431.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="23.5781%" y="405" width="0.3626%" height="15" fill="rgb(231,138,38)"/><text x="23.8281%" y="415.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="23.6914%" y="389" width="0.2493%" height="15" fill="rgb(231,145,46)"/><text x="23.9414%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="23.6914%" y="373" width="0.2493%" height="15" fill="rgb(251,118,11)"/><text x="23.9414%" y="383.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="23.7027%" y="357" width="0.2379%" height="15" fill="rgb(217,147,25)"/><text x="23.9527%" y="367.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="23.7254%" y="341" width="0.2153%" height="15" fill="rgb(247,81,37)"/><text x="23.9754%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="23.8387%" y="325" width="0.1020%" height="15" fill="rgb(209,12,38)"/><text x="24.0887%" y="335.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.22%)</title><rect x="23.9860%" y="645" width="0.2153%" height="15" fill="rgb(227,1,9)"/><text x="24.2360%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.14%)</title><rect x="24.4278%" y="389" width="0.1360%" height="15" fill="rgb(248,47,43)"/><text x="24.6778%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.51%)</title><rect x="24.3259%" y="453" width="0.5099%" height="15" fill="rgb(221,10,30)"/><text x="24.5759%" y="463.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (45 samples, 0.51%)</title><rect x="24.3259%" y="437" width="0.5099%" height="15" fill="rgb(210,229,1)"/><text x="24.5759%" y="447.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (45 samples, 0.51%)</title><rect x="24.3259%" y="421" width="0.5099%" height="15" fill="rgb(222,148,37)"/><text x="24.5759%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (45 samples, 0.51%)</title><rect x="24.3259%" y="405" width="0.5099%" height="15" fill="rgb(234,67,33)"/><text x="24.5759%" y="415.50"></text></g><g><title>core::str::pattern::StrSearcher::new (24 samples, 0.27%)</title><rect x="24.5638%" y="389" width="0.2719%" height="15" fill="rgb(247,98,35)"/><text x="24.8138%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (15 samples, 0.17%)</title><rect x="24.6658%" y="373" width="0.1700%" height="15" fill="rgb(247,138,52)"/><text x="24.9158%" y="383.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (47 samples, 0.53%)</title><rect x="24.3259%" y="469" width="0.5325%" height="15" fill="rgb(213,79,30)"/><text x="24.5759%" y="479.50"></text></g><g><title>decor::is_guise (22 samples, 0.25%)</title><rect x="24.8584%" y="469" width="0.2493%" height="15" fill="rgb(246,177,23)"/><text x="25.1084%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.20%)</title><rect x="24.9037%" y="453" width="0.2039%" height="15" fill="rgb(230,62,27)"/><text x="25.1537%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.17%)</title><rect x="24.9377%" y="437" width="0.1700%" height="15" fill="rgb(216,154,8)"/><text x="25.1877%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.15%)</title><rect x="24.9603%" y="421" width="0.1473%" height="15" fill="rgb(244,35,45)"/><text x="25.2103%" y="431.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.11%)</title><rect x="25.2209%" y="421" width="0.1133%" height="15" fill="rgb(251,115,12)"/><text x="25.4709%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (65 samples, 0.74%)</title><rect x="25.6515%" y="389" width="0.7365%" height="15" fill="rgb(240,54,50)"/><text x="25.9015%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.10%)</title><rect x="26.2860%" y="373" width="0.1020%" height="15" fill="rgb(233,84,52)"/><text x="26.5360%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (115 samples, 1.30%)</title><rect x="25.1076%" y="453" width="1.3030%" height="15" fill="rgb(207,117,47)"/><text x="25.3576%" y="463.50"></text></g><g><title>decor::vault::vec_to_expr (105 samples, 1.19%)</title><rect x="25.2209%" y="437" width="1.1897%" height="15" fill="rgb(249,43,39)"/><text x="25.4709%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (95 samples, 1.08%)</title><rect x="25.3342%" y="421" width="1.0764%" height="15" fill="rgb(209,38,44)"/><text x="25.5842%" y="431.50"></text></g><g><title>decor::types::_::&lt;impl serde::ser::Serialize for decor::types::RowVal&gt;::serialize (86 samples, 0.97%)</title><rect x="25.4362%" y="405" width="0.9744%" height="15" fill="rgb(236,212,23)"/><text x="25.6862%" y="415.50"></text></g><g><title>__GI___libc_free (67 samples, 0.76%)</title><rect x="28.3141%" y="341" width="0.7591%" height="15" fill="rgb(242,79,21)"/><text x="28.5641%" y="351.50"></text></g><g><title>checked_request2size (13 samples, 0.15%)</title><rect x="29.7303%" y="325" width="0.1473%" height="15" fill="rgb(211,96,35)"/><text x="29.9803%" y="335.50"></text></g><g><title>__GI___libc_malloc (107 samples, 1.21%)</title><rect x="29.0732%" y="341" width="1.2123%" height="15" fill="rgb(253,215,40)"/><text x="29.3232%" y="351.50"></text></g><g><title>tcache_get (36 samples, 0.41%)</title><rect x="29.8776%" y="325" width="0.4079%" height="15" fill="rgb(211,81,21)"/><text x="30.1276%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (76 samples, 0.86%)</title><rect x="30.2969%" y="341" width="0.8611%" height="15" fill="rgb(208,190,38)"/><text x="30.5469%" y="351.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="31.0220%" y="325" width="0.1360%" height="15" fill="rgb(235,213,38)"/><text x="31.2720%" y="335.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="31.0333%" y="309" width="0.1246%" height="15" fill="rgb(237,122,38)"/><text x="31.2833%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="31.0560%" y="293" width="0.1020%" height="15" fill="rgb(244,218,35)"/><text x="31.3060%" y="303.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="31.0560%" y="277" width="0.1020%" height="15" fill="rgb(240,68,47)"/><text x="31.3060%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="31.0560%" y="261" width="0.1020%" height="15" fill="rgb(210,16,53)"/><text x="31.3060%" y="271.50"></text></g><g><title>__rdl_dealloc (10 samples, 0.11%)</title><rect x="31.2259%" y="341" width="0.1133%" height="15" fill="rgb(235,124,12)"/><text x="31.4759%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (10 samples, 0.11%)</title><rect x="31.2259%" y="325" width="0.1133%" height="15" fill="rgb(224,169,11)"/><text x="31.4759%" y="335.50"></text></g><g><title>__rust_dealloc (14 samples, 0.16%)</title><rect x="31.4185%" y="341" width="0.1586%" height="15" fill="rgb(250,166,2)"/><text x="31.6685%" y="351.50"></text></g><g><title>_int_free (132 samples, 1.50%)</title><rect x="31.5772%" y="341" width="1.4956%" height="15" fill="rgb(242,216,29)"/><text x="31.8272%" y="351.50"></text></g><g><title>tcache_put (29 samples, 0.33%)</title><rect x="32.7442%" y="325" width="0.3286%" height="15" fill="rgb(230,116,27)"/><text x="32.9942%" y="335.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (606 samples, 6.87%)</title><rect x="26.4106%" y="373" width="6.8661%" height="15" fill="rgb(228,99,48)"/><text x="26.6606%" y="383.50">&lt;sql_pars..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (606 samples, 6.87%)</title><rect x="26.4106%" y="357" width="6.8661%" height="15" fill="rgb(253,11,6)"/><text x="26.6606%" y="367.50">sql_parse..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.20%)</title><rect x="33.0727%" y="341" width="0.2039%" height="15" fill="rgb(247,143,39)"/><text x="33.3227%" y="351.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (615 samples, 6.97%)</title><rect x="26.4106%" y="389" width="6.9680%" height="15" fill="rgb(236,97,10)"/><text x="26.6606%" y="399.50">&lt;sql_pars..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.10%)</title><rect x="33.2767%" y="373" width="0.1020%" height="15" fill="rgb(233,208,19)"/><text x="33.5267%" y="383.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.23%)</title><rect x="33.4013%" y="373" width="0.2266%" height="15" fill="rgb(216,164,2)"/><text x="33.6513%" y="383.50"></text></g><g><title>core::fmt::write (649 samples, 7.35%)</title><rect x="26.4106%" y="453" width="7.3533%" height="15" fill="rgb(220,129,5)"/><text x="26.6606%" y="463.50">core::fmt:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (649 samples, 7.35%)</title><rect x="26.4106%" y="437" width="7.3533%" height="15" fill="rgb(242,17,10)"/><text x="26.6606%" y="447.50">&lt;sql_parse..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (649 samples, 7.35%)</title><rect x="26.4106%" y="421" width="7.3533%" height="15" fill="rgb(242,107,0)"/><text x="26.6606%" y="431.50">&lt;sql_parse..</text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (649 samples, 7.35%)</title><rect x="26.4106%" y="405" width="7.3533%" height="15" fill="rgb(251,28,31)"/><text x="26.6606%" y="415.50">&lt;sql_parse..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (34 samples, 0.39%)</title><rect x="33.3787%" y="389" width="0.3852%" height="15" fill="rgb(233,223,10)"/><text x="33.6287%" y="399.50"></text></g><g><title>core::fmt::write (10 samples, 0.11%)</title><rect x="33.6506%" y="373" width="0.1133%" height="15" fill="rgb(215,21,27)"/><text x="33.9006%" y="383.50"></text></g><g><title>decor::disguise::apply (834 samples, 9.45%)</title><rect x="24.3259%" y="485" width="9.4494%" height="15" fill="rgb(232,23,21)"/><text x="24.5759%" y="495.50">decor::disguis..</text></g><g><title>decor::vault::insert_vault_entries (765 samples, 8.67%)</title><rect x="25.1076%" y="469" width="8.6676%" height="15" fill="rgb(244,5,23)"/><text x="25.3576%" y="479.50">decor::vault..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (92 samples, 1.04%)</title><rect x="33.8885%" y="373" width="1.0424%" height="15" fill="rgb(226,81,46)"/><text x="34.1385%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (90 samples, 1.02%)</title><rect x="33.9112%" y="357" width="1.0197%" height="15" fill="rgb(247,70,30)"/><text x="34.1612%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.14%)</title><rect x="34.9989%" y="373" width="0.1360%" height="15" fill="rgb(212,68,19)"/><text x="35.2489%" y="383.50"></text></g><g><title>decor::vault::print_as_filters (140 samples, 1.59%)</title><rect x="33.7752%" y="485" width="1.5862%" height="15" fill="rgb(240,187,13)"/><text x="34.0252%" y="495.50"></text></g><g><title>decor::vault::get_vault_entries_with_constraint (140 samples, 1.59%)</title><rect x="33.7752%" y="469" width="1.5862%" height="15" fill="rgb(223,113,26)"/><text x="34.0252%" y="479.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (140 samples, 1.59%)</title><rect x="33.7752%" y="453" width="1.5862%" height="15" fill="rgb(206,192,2)"/><text x="34.0252%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (140 samples, 1.59%)</title><rect x="33.7752%" y="437" width="1.5862%" height="15" fill="rgb(241,108,4)"/><text x="34.0252%" y="447.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (140 samples, 1.59%)</title><rect x="33.7752%" y="421" width="1.5862%" height="15" fill="rgb(247,173,49)"/><text x="34.0252%" y="431.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (140 samples, 1.59%)</title><rect x="33.7752%" y="405" width="1.5862%" height="15" fill="rgb(224,114,35)"/><text x="34.0252%" y="415.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (140 samples, 1.59%)</title><rect x="33.7752%" y="389" width="1.5862%" height="15" fill="rgb(245,159,27)"/><text x="34.0252%" y="399.50"></text></g><g><title>core::str::pattern::StrSearcher::new (20 samples, 0.23%)</title><rect x="35.1348%" y="373" width="0.2266%" height="15" fill="rgb(245,172,44)"/><text x="35.3848%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (17 samples, 0.19%)</title><rect x="35.1688%" y="357" width="0.1926%" height="15" fill="rgb(236,23,11)"/><text x="35.4188%" y="367.50"></text></g><g><title>hotcrp::datagen::papers::insert_papers (11 samples, 0.12%)</title><rect x="35.3614%" y="469" width="0.1246%" height="15" fill="rgb(205,117,38)"/><text x="35.6114%" y="479.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (11 samples, 0.12%)</title><rect x="35.4861%" y="453" width="0.1246%" height="15" fill="rgb(237,72,25)"/><text x="35.7361%" y="463.50"></text></g><g><title>hotcrp::datagen::review_preferences::insert_review_preference (9 samples, 0.10%)</title><rect x="35.6673%" y="453" width="0.1020%" height="15" fill="rgb(244,70,9)"/><text x="35.9173%" y="463.50"></text></g><g><title>hotcrp::datagen::datagen::populate_database (41 samples, 0.46%)</title><rect x="35.3614%" y="485" width="0.4645%" height="15" fill="rgb(217,125,39)"/><text x="35.6114%" y="495.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (30 samples, 0.34%)</title><rect x="35.4861%" y="469" width="0.3399%" height="15" fill="rgb(235,36,10)"/><text x="35.7361%" y="479.50"></text></g><g><title>__libc_start_main (1,016 samples, 11.51%)</title><rect x="24.3259%" y="645" width="11.5114%" height="15" fill="rgb(251,123,47)"/><text x="24.5759%" y="655.50">__libc_start_main</text></g><g><title>main (1,016 samples, 11.51%)</title><rect x="24.3259%" y="629" width="11.5114%" height="15" fill="rgb(221,13,13)"/><text x="24.5759%" y="639.50">main</text></g><g><title>std::rt::lang_start_internal (1,016 samples, 11.51%)</title><rect x="24.3259%" y="613" width="11.5114%" height="15" fill="rgb(238,131,9)"/><text x="24.5759%" y="623.50">std::rt::lang_sta..</text></g><g><title>std::panic::catch_unwind (1,016 samples, 11.51%)</title><rect x="24.3259%" y="597" width="11.5114%" height="15" fill="rgb(211,50,8)"/><text x="24.5759%" y="607.50">std::panic::catch..</text></g><g><title>std::panicking::try (1,016 samples, 11.51%)</title><rect x="24.3259%" y="581" width="11.5114%" height="15" fill="rgb(245,182,24)"/><text x="24.5759%" y="591.50">std::panicking::t..</text></g><g><title>std::panicking::try::do_call (1,016 samples, 11.51%)</title><rect x="24.3259%" y="565" width="11.5114%" height="15" fill="rgb(242,14,37)"/><text x="24.5759%" y="575.50">std::panicking::t..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,016 samples, 11.51%)</title><rect x="24.3259%" y="549" width="11.5114%" height="15" fill="rgb(246,228,12)"/><text x="24.5759%" y="559.50">core::ops::functi..</text></g><g><title>std::rt::lang_start::_{{closure}} (1,016 samples, 11.51%)</title><rect x="24.3259%" y="533" width="11.5114%" height="15" fill="rgb(213,55,15)"/><text x="24.5759%" y="543.50">std::rt::lang_sta..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,016 samples, 11.51%)</title><rect x="24.3259%" y="517" width="11.5114%" height="15" fill="rgb(209,9,3)"/><text x="24.5759%" y="527.50">std::sys_common::..</text></g><g><title>hotcrp::main (1,016 samples, 11.51%)</title><rect x="24.3259%" y="501" width="11.5114%" height="15" fill="rgb(230,59,30)"/><text x="24.5759%" y="511.50">hotcrp::main</text></g><g><title>__memmove_avx_unaligned_erms (28 samples, 0.32%)</title><rect x="35.8373%" y="645" width="0.3172%" height="15" fill="rgb(209,121,21)"/><text x="36.0873%" y="655.50"></text></g><g><title>__rdl_alloc (11 samples, 0.12%)</title><rect x="36.1545%" y="645" width="0.1246%" height="15" fill="rgb(220,109,13)"/><text x="36.4045%" y="655.50"></text></g><g><title>_int_free (29 samples, 0.33%)</title><rect x="36.2792%" y="645" width="0.3286%" height="15" fill="rgb(232,18,1)"/><text x="36.5292%" y="655.50"></text></g><g><title>_int_realloc (13 samples, 0.15%)</title><rect x="36.6531%" y="645" width="0.1473%" height="15" fill="rgb(215,41,42)"/><text x="36.9031%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (44 samples, 0.50%)</title><rect x="36.8004%" y="645" width="0.4985%" height="15" fill="rgb(224,123,36)"/><text x="37.0504%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad (9 samples, 0.10%)</title><rect x="37.3895%" y="645" width="0.1020%" height="15" fill="rgb(240,125,3)"/><text x="37.6395%" y="655.50"></text></g><g><title>core::fmt::write (11 samples, 0.12%)</title><rect x="37.5028%" y="645" width="0.1246%" height="15" fill="rgb(205,98,50)"/><text x="37.7528%" y="655.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="37.8881%" y="549" width="0.2379%" height="15" fill="rgb(205,185,37)"/><text x="38.1381%" y="559.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="37.8994%" y="533" width="0.2266%" height="15" fill="rgb(238,207,15)"/><text x="38.1494%" y="543.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="37.8994%" y="517" width="0.2266%" height="15" fill="rgb(213,199,42)"/><text x="38.1494%" y="527.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="37.8994%" y="501" width="0.2266%" height="15" fill="rgb(235,201,11)"/><text x="38.1494%" y="511.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="37.8994%" y="485" width="0.2266%" height="15" fill="rgb(207,46,11)"/><text x="38.1494%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="37.9900%" y="469" width="0.1360%" height="15" fill="rgb(241,35,35)"/><text x="38.2400%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="38.0127%" y="453" width="0.1133%" height="15" fill="rgb(243,32,47)"/><text x="38.2627%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="38.0240%" y="437" width="0.1020%" height="15" fill="rgb(247,202,23)"/><text x="38.2740%" y="447.50"></text></g><g><title>malloc_consolidate (24 samples, 0.27%)</title><rect x="38.1260%" y="549" width="0.2719%" height="15" fill="rgb(219,102,11)"/><text x="38.3760%" y="559.50"></text></g><g><title>__GI___libc_malloc (54 samples, 0.61%)</title><rect x="37.8314%" y="581" width="0.6118%" height="15" fill="rgb(243,110,44)"/><text x="38.0814%" y="591.50"></text></g><g><title>_int_malloc (53 samples, 0.60%)</title><rect x="37.8427%" y="565" width="0.6005%" height="15" fill="rgb(222,74,54)"/><text x="38.0927%" y="575.50"></text></g><g><title>core::fmt::write (13 samples, 0.15%)</title><rect x="38.5679%" y="581" width="0.1473%" height="15" fill="rgb(216,99,12)"/><text x="38.8179%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (10 samples, 0.11%)</title><rect x="38.6019%" y="565" width="0.1133%" height="15" fill="rgb(226,22,26)"/><text x="38.8519%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (10 samples, 0.11%)</title><rect x="38.6019%" y="549" width="0.1133%" height="15" fill="rgb(217,163,10)"/><text x="38.8519%" y="559.50"></text></g><g><title>core::ops::function::Fn::call (92 samples, 1.04%)</title><rect x="37.8087%" y="613" width="1.0424%" height="15" fill="rgb(213,25,53)"/><text x="38.0587%" y="623.50"></text></g><g><title>hotcrp::datagen::users::get_insert_guise_contact_info_vals (92 samples, 1.04%)</title><rect x="37.8087%" y="597" width="1.0424%" height="15" fill="rgb(252,105,26)"/><text x="38.0587%" y="607.50"></text></g><g><title>hotcrp::datagen::users::get_random_email (12 samples, 0.14%)</title><rect x="38.7152%" y="581" width="0.1360%" height="15" fill="rgb(220,39,43)"/><text x="38.9652%" y="591.50"></text></g><g><title>alloc::fmt::format (11 samples, 0.12%)</title><rect x="38.7265%" y="565" width="0.1246%" height="15" fill="rgb(229,68,48)"/><text x="38.9765%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (14 samples, 0.16%)</title><rect x="38.8511%" y="597" width="0.1586%" height="15" fill="rgb(252,8,32)"/><text x="39.1011%" y="607.50"></text></g><g><title>mysql::conn::Conn::_query (14 samples, 0.16%)</title><rect x="38.8511%" y="581" width="0.1586%" height="15" fill="rgb(223,20,43)"/><text x="39.1011%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (14 samples, 0.16%)</title><rect x="38.8511%" y="565" width="0.1586%" height="15" fill="rgb(229,81,49)"/><text x="39.1011%" y="575.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.16%)</title><rect x="38.8511%" y="549" width="0.1586%" height="15" fill="rgb(236,28,36)"/><text x="39.1011%" y="559.50"></text></g><g><title>_int_malloc (14 samples, 0.16%)</title><rect x="38.8511%" y="533" width="0.1586%" height="15" fill="rgb(249,185,26)"/><text x="39.1011%" y="543.50"></text></g><g><title>malloc_consolidate (14 samples, 0.16%)</title><rect x="38.8511%" y="517" width="0.1586%" height="15" fill="rgb(249,174,33)"/><text x="39.1011%" y="527.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (23 samples, 0.26%)</title><rect x="38.8511%" y="613" width="0.2606%" height="15" fill="rgb(233,201,37)"/><text x="39.1011%" y="623.50"></text></g><g><title>[unknown] (115 samples, 1.30%)</title><rect x="39.4516%" y="389" width="1.3030%" height="15" fill="rgb(221,78,26)"/><text x="39.7016%" y="399.50"></text></g><g><title>[unknown] (114 samples, 1.29%)</title><rect x="39.4630%" y="373" width="1.2916%" height="15" fill="rgb(250,127,30)"/><text x="39.7130%" y="383.50"></text></g><g><title>[unknown] (111 samples, 1.26%)</title><rect x="39.4969%" y="357" width="1.2576%" height="15" fill="rgb(230,49,44)"/><text x="39.7469%" y="367.50"></text></g><g><title>[unknown] (105 samples, 1.19%)</title><rect x="39.5649%" y="341" width="1.1897%" height="15" fill="rgb(229,67,23)"/><text x="39.8149%" y="351.50"></text></g><g><title>[unknown] (100 samples, 1.13%)</title><rect x="39.6216%" y="325" width="1.1330%" height="15" fill="rgb(249,83,47)"/><text x="39.8716%" y="335.50"></text></g><g><title>[unknown] (97 samples, 1.10%)</title><rect x="39.6556%" y="309" width="1.0990%" height="15" fill="rgb(215,43,3)"/><text x="39.9056%" y="319.50"></text></g><g><title>[unknown] (94 samples, 1.07%)</title><rect x="39.6896%" y="293" width="1.0650%" height="15" fill="rgb(238,154,13)"/><text x="39.9396%" y="303.50"></text></g><g><title>[unknown] (86 samples, 0.97%)</title><rect x="39.7802%" y="277" width="0.9744%" height="15" fill="rgb(219,56,2)"/><text x="40.0302%" y="287.50"></text></g><g><title>[unknown] (82 samples, 0.93%)</title><rect x="39.8255%" y="261" width="0.9291%" height="15" fill="rgb(233,0,4)"/><text x="40.0755%" y="271.50"></text></g><g><title>[unknown] (74 samples, 0.84%)</title><rect x="39.9162%" y="245" width="0.8384%" height="15" fill="rgb(235,30,7)"/><text x="40.1662%" y="255.50"></text></g><g><title>[unknown] (70 samples, 0.79%)</title><rect x="39.9615%" y="229" width="0.7931%" height="15" fill="rgb(250,79,13)"/><text x="40.2115%" y="239.50"></text></g><g><title>[unknown] (57 samples, 0.65%)</title><rect x="40.1088%" y="213" width="0.6458%" height="15" fill="rgb(211,146,34)"/><text x="40.3588%" y="223.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="40.2901%" y="197" width="0.4645%" height="15" fill="rgb(228,22,38)"/><text x="40.5401%" y="207.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="40.4600%" y="181" width="0.2946%" height="15" fill="rgb(235,168,5)"/><text x="40.7100%" y="191.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="40.5620%" y="165" width="0.1926%" height="15" fill="rgb(221,155,16)"/><text x="40.8120%" y="175.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="40.6413%" y="149" width="0.1133%" height="15" fill="rgb(215,215,53)"/><text x="40.8913%" y="159.50"></text></g><g><title>__libc_recv (120 samples, 1.36%)</title><rect x="39.4176%" y="421" width="1.3596%" height="15" fill="rgb(223,4,10)"/><text x="39.6676%" y="431.50"></text></g><g><title>__libc_recv (119 samples, 1.35%)</title><rect x="39.4290%" y="405" width="1.3483%" height="15" fill="rgb(234,103,6)"/><text x="39.6790%" y="415.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (122 samples, 1.38%)</title><rect x="39.4063%" y="501" width="1.3823%" height="15" fill="rgb(227,97,0)"/><text x="39.6563%" y="511.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (121 samples, 1.37%)</title><rect x="39.4176%" y="485" width="1.3709%" height="15" fill="rgb(234,150,53)"/><text x="39.6676%" y="495.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (121 samples, 1.37%)</title><rect x="39.4176%" y="469" width="1.3709%" height="15" fill="rgb(228,201,54)"/><text x="39.6676%" y="479.50"></text></g><g><title>std::sys::unix::net::Socket::read (121 samples, 1.37%)</title><rect x="39.4176%" y="453" width="1.3709%" height="15" fill="rgb(222,22,37)"/><text x="39.6676%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (121 samples, 1.37%)</title><rect x="39.4176%" y="437" width="1.3709%" height="15" fill="rgb(237,53,32)"/><text x="39.6676%" y="447.50"></text></g><g><title>mysql::conn::Conn::read_packet (139 samples, 1.57%)</title><rect x="39.3610%" y="533" width="1.5749%" height="15" fill="rgb(233,25,53)"/><text x="39.6110%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (138 samples, 1.56%)</title><rect x="39.3723%" y="517" width="1.5636%" height="15" fill="rgb(210,40,34)"/><text x="39.6223%" y="527.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (13 samples, 0.15%)</title><rect x="40.7886%" y="501" width="0.1473%" height="15" fill="rgb(241,220,44)"/><text x="41.0386%" y="511.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (12 samples, 0.14%)</title><rect x="40.7999%" y="485" width="0.1360%" height="15" fill="rgb(235,28,35)"/><text x="41.0499%" y="495.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (12 samples, 0.14%)</title><rect x="40.7999%" y="469" width="0.1360%" height="15" fill="rgb(210,56,17)"/><text x="41.0499%" y="479.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (152 samples, 1.72%)</title><rect x="39.3157%" y="549" width="1.7222%" height="15" fill="rgb(224,130,29)"/><text x="39.5657%" y="559.50"></text></g><g><title>mysql_common::packets::column_from_payload (9 samples, 0.10%)</title><rect x="40.9359%" y="533" width="0.1020%" height="15" fill="rgb(235,212,8)"/><text x="41.1859%" y="543.50"></text></g><g><title>[unknown] (91 samples, 1.03%)</title><rect x="41.0945%" y="421" width="1.0310%" height="15" fill="rgb(223,33,50)"/><text x="41.3445%" y="431.50"></text></g><g><title>[unknown] (89 samples, 1.01%)</title><rect x="41.1172%" y="405" width="1.0084%" height="15" fill="rgb(219,149,13)"/><text x="41.3672%" y="415.50"></text></g><g><title>[unknown] (84 samples, 0.95%)</title><rect x="41.1738%" y="389" width="0.9517%" height="15" fill="rgb(250,156,29)"/><text x="41.4238%" y="399.50"></text></g><g><title>[unknown] (84 samples, 0.95%)</title><rect x="41.1738%" y="373" width="0.9517%" height="15" fill="rgb(216,193,19)"/><text x="41.4238%" y="383.50"></text></g><g><title>[unknown] (84 samples, 0.95%)</title><rect x="41.1738%" y="357" width="0.9517%" height="15" fill="rgb(216,135,14)"/><text x="41.4238%" y="367.50"></text></g><g><title>[unknown] (79 samples, 0.90%)</title><rect x="41.2305%" y="341" width="0.8951%" height="15" fill="rgb(241,47,5)"/><text x="41.4805%" y="351.50"></text></g><g><title>[unknown] (78 samples, 0.88%)</title><rect x="41.2418%" y="325" width="0.8838%" height="15" fill="rgb(233,42,35)"/><text x="41.4918%" y="335.50"></text></g><g><title>[unknown] (76 samples, 0.86%)</title><rect x="41.2644%" y="309" width="0.8611%" height="15" fill="rgb(231,13,6)"/><text x="41.5144%" y="319.50"></text></g><g><title>[unknown] (73 samples, 0.83%)</title><rect x="41.2984%" y="293" width="0.8271%" height="15" fill="rgb(207,181,40)"/><text x="41.5484%" y="303.50"></text></g><g><title>[unknown] (70 samples, 0.79%)</title><rect x="41.3324%" y="277" width="0.7931%" height="15" fill="rgb(254,173,49)"/><text x="41.5824%" y="287.50"></text></g><g><title>[unknown] (65 samples, 0.74%)</title><rect x="41.3891%" y="261" width="0.7365%" height="15" fill="rgb(221,1,38)"/><text x="41.6391%" y="271.50"></text></g><g><title>[unknown] (63 samples, 0.71%)</title><rect x="41.4117%" y="245" width="0.7138%" height="15" fill="rgb(206,124,46)"/><text x="41.6617%" y="255.50"></text></g><g><title>[unknown] (54 samples, 0.61%)</title><rect x="41.5137%" y="229" width="0.6118%" height="15" fill="rgb(249,21,11)"/><text x="41.7637%" y="239.50"></text></g><g><title>[unknown] (50 samples, 0.57%)</title><rect x="41.5590%" y="213" width="0.5665%" height="15" fill="rgb(222,201,40)"/><text x="41.8090%" y="223.50"></text></g><g><title>[unknown] (47 samples, 0.53%)</title><rect x="41.5930%" y="197" width="0.5325%" height="15" fill="rgb(235,61,29)"/><text x="41.8430%" y="207.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="41.7063%" y="181" width="0.4192%" height="15" fill="rgb(219,207,3)"/><text x="41.9563%" y="191.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="41.7177%" y="165" width="0.4079%" height="15" fill="rgb(222,56,46)"/><text x="41.9677%" y="175.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="41.7290%" y="149" width="0.3966%" height="15" fill="rgb(239,76,54)"/><text x="41.9790%" y="159.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="41.7970%" y="133" width="0.3286%" height="15" fill="rgb(231,124,27)"/><text x="42.0470%" y="143.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="41.8083%" y="117" width="0.3172%" height="15" fill="rgb(249,195,6)"/><text x="42.0583%" y="127.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="41.9896%" y="101" width="0.1360%" height="15" fill="rgb(237,174,47)"/><text x="42.2396%" y="111.50"></text></g><g><title>__libc_write (92 samples, 1.04%)</title><rect x="41.0945%" y="453" width="1.0424%" height="15" fill="rgb(206,201,31)"/><text x="41.3445%" y="463.50"></text></g><g><title>__libc_write (92 samples, 1.04%)</title><rect x="41.0945%" y="437" width="1.0424%" height="15" fill="rgb(231,57,52)"/><text x="41.3445%" y="447.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (262 samples, 2.97%)</title><rect x="39.1797%" y="581" width="2.9685%" height="15" fill="rgb(248,177,22)"/><text x="39.4297%" y="591.50">&lt;my..</text></g><g><title>mysql::conn::Conn::_query (255 samples, 2.89%)</title><rect x="39.2590%" y="565" width="2.8892%" height="15" fill="rgb(215,211,37)"/><text x="39.5090%" y="575.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (98 samples, 1.11%)</title><rect x="41.0378%" y="549" width="1.1104%" height="15" fill="rgb(241,128,51)"/><text x="41.2878%" y="559.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (93 samples, 1.05%)</title><rect x="41.0945%" y="533" width="1.0537%" height="15" fill="rgb(227,165,31)"/><text x="41.3445%" y="543.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (93 samples, 1.05%)</title><rect x="41.0945%" y="517" width="1.0537%" height="15" fill="rgb(228,167,24)"/><text x="41.3445%" y="527.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (93 samples, 1.05%)</title><rect x="41.0945%" y="501" width="1.0537%" height="15" fill="rgb(228,143,12)"/><text x="41.3445%" y="511.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (93 samples, 1.05%)</title><rect x="41.0945%" y="485" width="1.0537%" height="15" fill="rgb(249,149,8)"/><text x="41.3445%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (93 samples, 1.05%)</title><rect x="41.0945%" y="469" width="1.0537%" height="15" fill="rgb(243,35,44)"/><text x="41.3445%" y="479.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (10 samples, 0.11%)</title><rect x="42.1709%" y="565" width="0.1133%" height="15" fill="rgb(246,89,9)"/><text x="42.4209%" y="575.50"></text></g><g><title>mysql::conn::Conn::next_text (10 samples, 0.11%)</title><rect x="42.1709%" y="549" width="0.1133%" height="15" fill="rgb(233,213,13)"/><text x="42.4209%" y="559.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.16%)</title><rect x="42.1482%" y="581" width="0.1586%" height="15" fill="rgb(233,141,41)"/><text x="42.3982%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.11%)</title><rect x="42.4654%" y="453" width="0.1133%" height="15" fill="rgb(239,167,4)"/><text x="42.7154%" y="463.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.11%)</title><rect x="42.4654%" y="437" width="0.1133%" height="15" fill="rgb(209,217,16)"/><text x="42.7154%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.16%)</title><rect x="42.4541%" y="469" width="0.1586%" height="15" fill="rgb(219,88,35)"/><text x="42.7041%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (25 samples, 0.28%)</title><rect x="42.4541%" y="485" width="0.2833%" height="15" fill="rgb(220,193,23)"/><text x="42.7041%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (37 samples, 0.42%)</title><rect x="42.4428%" y="501" width="0.4192%" height="15" fill="rgb(230,90,52)"/><text x="42.6928%" y="511.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.12%)</title><rect x="42.7374%" y="485" width="0.1246%" height="15" fill="rgb(252,106,19)"/><text x="42.9874%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 0.19%)</title><rect x="42.8620%" y="485" width="0.1926%" height="15" fill="rgb(206,74,20)"/><text x="43.1120%" y="495.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (16 samples, 0.18%)</title><rect x="42.8733%" y="469" width="0.1813%" height="15" fill="rgb(230,138,44)"/><text x="43.1233%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (21 samples, 0.24%)</title><rect x="42.8620%" y="501" width="0.2379%" height="15" fill="rgb(235,182,43)"/><text x="43.1120%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (77 samples, 0.87%)</title><rect x="42.4088%" y="549" width="0.8724%" height="15" fill="rgb(242,16,51)"/><text x="42.6588%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (76 samples, 0.86%)</title><rect x="42.4201%" y="533" width="0.8611%" height="15" fill="rgb(248,9,4)"/><text x="42.6701%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (74 samples, 0.84%)</title><rect x="42.4428%" y="517" width="0.8384%" height="15" fill="rgb(210,31,22)"/><text x="42.6928%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (16 samples, 0.18%)</title><rect x="43.0999%" y="501" width="0.1813%" height="15" fill="rgb(239,54,39)"/><text x="43.3499%" y="511.50"></text></g><g><title>core::fmt::write (81 samples, 0.92%)</title><rect x="42.3748%" y="581" width="0.9177%" height="15" fill="rgb(230,99,41)"/><text x="42.6248%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (79 samples, 0.90%)</title><rect x="42.3975%" y="565" width="0.8951%" height="15" fill="rgb(253,106,12)"/><text x="42.6475%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.11%)</title><rect x="43.2925%" y="581" width="0.1133%" height="15" fill="rgb(213,46,41)"/><text x="43.5425%" y="591.50"></text></g><g><title>core::str::pattern::StrSearcher::new (12 samples, 0.14%)</title><rect x="43.4058%" y="581" width="0.1360%" height="15" fill="rgb(215,133,35)"/><text x="43.6558%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (12 samples, 0.14%)</title><rect x="43.4058%" y="565" width="0.1360%" height="15" fill="rgb(213,28,5)"/><text x="43.6558%" y="575.50"></text></g><g><title>[unknown] (140 samples, 1.59%)</title><rect x="43.7344%" y="389" width="1.5862%" height="15" fill="rgb(215,77,49)"/><text x="43.9844%" y="399.50"></text></g><g><title>[unknown] (136 samples, 1.54%)</title><rect x="43.7797%" y="373" width="1.5409%" height="15" fill="rgb(248,100,22)"/><text x="44.0297%" y="383.50"></text></g><g><title>[unknown] (127 samples, 1.44%)</title><rect x="43.8817%" y="357" width="1.4389%" height="15" fill="rgb(208,67,9)"/><text x="44.1317%" y="367.50"></text></g><g><title>[unknown] (124 samples, 1.40%)</title><rect x="43.9157%" y="341" width="1.4049%" height="15" fill="rgb(219,133,21)"/><text x="44.1657%" y="351.50"></text></g><g><title>[unknown] (120 samples, 1.36%)</title><rect x="43.9610%" y="325" width="1.3596%" height="15" fill="rgb(246,46,29)"/><text x="44.2110%" y="335.50"></text></g><g><title>[unknown] (118 samples, 1.34%)</title><rect x="43.9837%" y="309" width="1.3370%" height="15" fill="rgb(246,185,52)"/><text x="44.2337%" y="319.50"></text></g><g><title>[unknown] (112 samples, 1.27%)</title><rect x="44.0517%" y="293" width="1.2690%" height="15" fill="rgb(252,136,11)"/><text x="44.3017%" y="303.50"></text></g><g><title>[unknown] (102 samples, 1.16%)</title><rect x="44.1650%" y="277" width="1.1557%" height="15" fill="rgb(219,138,53)"/><text x="44.4150%" y="287.50"></text></g><g><title>[unknown] (100 samples, 1.13%)</title><rect x="44.1876%" y="261" width="1.1330%" height="15" fill="rgb(211,51,23)"/><text x="44.4376%" y="271.50"></text></g><g><title>[unknown] (96 samples, 1.09%)</title><rect x="44.2329%" y="245" width="1.0877%" height="15" fill="rgb(247,221,28)"/><text x="44.4829%" y="255.50"></text></g><g><title>[unknown] (83 samples, 0.94%)</title><rect x="44.3802%" y="229" width="0.9404%" height="15" fill="rgb(251,222,45)"/><text x="44.6302%" y="239.50"></text></g><g><title>[unknown] (72 samples, 0.82%)</title><rect x="44.5049%" y="213" width="0.8158%" height="15" fill="rgb(217,162,53)"/><text x="44.7549%" y="223.50"></text></g><g><title>[unknown] (52 samples, 0.59%)</title><rect x="44.7315%" y="197" width="0.5892%" height="15" fill="rgb(229,93,14)"/><text x="44.9815%" y="207.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="44.9807%" y="181" width="0.3399%" height="15" fill="rgb(209,67,49)"/><text x="45.2307%" y="191.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="45.1167%" y="165" width="0.2039%" height="15" fill="rgb(213,87,29)"/><text x="45.3667%" y="175.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (142 samples, 1.61%)</title><rect x="43.7231%" y="501" width="1.6089%" height="15" fill="rgb(205,151,52)"/><text x="43.9731%" y="511.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (142 samples, 1.61%)</title><rect x="43.7231%" y="485" width="1.6089%" height="15" fill="rgb(253,215,39)"/><text x="43.9731%" y="495.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (142 samples, 1.61%)</title><rect x="43.7231%" y="469" width="1.6089%" height="15" fill="rgb(221,220,41)"/><text x="43.9731%" y="479.50"></text></g><g><title>std::sys::unix::net::Socket::read (142 samples, 1.61%)</title><rect x="43.7231%" y="453" width="1.6089%" height="15" fill="rgb(218,133,21)"/><text x="43.9731%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (142 samples, 1.61%)</title><rect x="43.7231%" y="437" width="1.6089%" height="15" fill="rgb(221,193,43)"/><text x="43.9731%" y="447.50"></text></g><g><title>__libc_recv (142 samples, 1.61%)</title><rect x="43.7231%" y="421" width="1.6089%" height="15" fill="rgb(240,128,52)"/><text x="43.9731%" y="431.50"></text></g><g><title>__libc_recv (142 samples, 1.61%)</title><rect x="43.7231%" y="405" width="1.6089%" height="15" fill="rgb(253,114,12)"/><text x="43.9731%" y="415.50"></text></g><g><title>mysql::conn::Conn::read_packet (153 samples, 1.73%)</title><rect x="43.7004%" y="533" width="1.7335%" height="15" fill="rgb(215,223,47)"/><text x="43.9504%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 1.73%)</title><rect x="43.7004%" y="517" width="1.7335%" height="15" fill="rgb(248,225,23)"/><text x="43.9504%" y="527.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (9 samples, 0.10%)</title><rect x="45.3320%" y="501" width="0.1020%" height="15" fill="rgb(250,108,0)"/><text x="45.5820%" y="511.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (9 samples, 0.10%)</title><rect x="45.4453%" y="517" width="0.1020%" height="15" fill="rgb(228,208,7)"/><text x="45.6953%" y="527.50"></text></g><g><title>[unknown] (149 samples, 1.69%)</title><rect x="45.5812%" y="405" width="1.6882%" height="15" fill="rgb(244,45,10)"/><text x="45.8312%" y="415.50"></text></g><g><title>[unknown] (146 samples, 1.65%)</title><rect x="45.6152%" y="389" width="1.6542%" height="15" fill="rgb(207,125,25)"/><text x="45.8652%" y="399.50"></text></g><g><title>[unknown] (137 samples, 1.55%)</title><rect x="45.7172%" y="373" width="1.5522%" height="15" fill="rgb(210,195,18)"/><text x="45.9672%" y="383.50"></text></g><g><title>[unknown] (137 samples, 1.55%)</title><rect x="45.7172%" y="357" width="1.5522%" height="15" fill="rgb(249,80,12)"/><text x="45.9672%" y="367.50"></text></g><g><title>[unknown] (137 samples, 1.55%)</title><rect x="45.7172%" y="341" width="1.5522%" height="15" fill="rgb(221,65,9)"/><text x="45.9672%" y="351.50"></text></g><g><title>[unknown] (132 samples, 1.50%)</title><rect x="45.7738%" y="325" width="1.4956%" height="15" fill="rgb(235,49,36)"/><text x="46.0238%" y="335.50"></text></g><g><title>[unknown] (124 samples, 1.40%)</title><rect x="45.8645%" y="309" width="1.4049%" height="15" fill="rgb(225,32,20)"/><text x="46.1145%" y="319.50"></text></g><g><title>[unknown] (118 samples, 1.34%)</title><rect x="45.9325%" y="293" width="1.3370%" height="15" fill="rgb(215,141,46)"/><text x="46.1825%" y="303.50"></text></g><g><title>[unknown] (117 samples, 1.33%)</title><rect x="45.9438%" y="277" width="1.3256%" height="15" fill="rgb(250,160,47)"/><text x="46.1938%" y="287.50"></text></g><g><title>[unknown] (115 samples, 1.30%)</title><rect x="45.9665%" y="261" width="1.3030%" height="15" fill="rgb(216,222,40)"/><text x="46.2165%" y="271.50"></text></g><g><title>[unknown] (103 samples, 1.17%)</title><rect x="46.1024%" y="245" width="1.1670%" height="15" fill="rgb(234,217,39)"/><text x="46.3524%" y="255.50"></text></g><g><title>[unknown] (95 samples, 1.08%)</title><rect x="46.1931%" y="229" width="1.0764%" height="15" fill="rgb(207,178,40)"/><text x="46.4431%" y="239.50"></text></g><g><title>[unknown] (92 samples, 1.04%)</title><rect x="46.2271%" y="213" width="1.0424%" height="15" fill="rgb(221,136,13)"/><text x="46.4771%" y="223.50"></text></g><g><title>[unknown] (89 samples, 1.01%)</title><rect x="46.2610%" y="197" width="1.0084%" height="15" fill="rgb(249,199,10)"/><text x="46.5110%" y="207.50"></text></g><g><title>[unknown] (82 samples, 0.93%)</title><rect x="46.3404%" y="181" width="0.9291%" height="15" fill="rgb(249,222,13)"/><text x="46.5904%" y="191.50"></text></g><g><title>[unknown] (70 samples, 0.79%)</title><rect x="46.4763%" y="165" width="0.7931%" height="15" fill="rgb(244,185,38)"/><text x="46.7263%" y="175.50"></text></g><g><title>[unknown] (65 samples, 0.74%)</title><rect x="46.5330%" y="149" width="0.7365%" height="15" fill="rgb(236,202,9)"/><text x="46.7830%" y="159.50"></text></g><g><title>[unknown] (60 samples, 0.68%)</title><rect x="46.5896%" y="133" width="0.6798%" height="15" fill="rgb(250,229,37)"/><text x="46.8396%" y="143.50"></text></g><g><title>[unknown] (50 samples, 0.57%)</title><rect x="46.7029%" y="117" width="0.5665%" height="15" fill="rgb(206,174,23)"/><text x="46.9529%" y="127.50"></text></g><g><title>[unknown] (44 samples, 0.50%)</title><rect x="46.7709%" y="101" width="0.4985%" height="15" fill="rgb(211,33,43)"/><text x="47.0209%" y="111.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="47.0315%" y="85" width="0.2379%" height="15" fill="rgb(245,58,50)"/><text x="47.2815%" y="95.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (152 samples, 1.72%)</title><rect x="45.5699%" y="501" width="1.7222%" height="15" fill="rgb(244,68,36)"/><text x="45.8199%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (152 samples, 1.72%)</title><rect x="45.5699%" y="485" width="1.7222%" height="15" fill="rgb(232,229,15)"/><text x="45.8199%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (152 samples, 1.72%)</title><rect x="45.5699%" y="469" width="1.7222%" height="15" fill="rgb(254,30,23)"/><text x="45.8199%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (152 samples, 1.72%)</title><rect x="45.5699%" y="453" width="1.7222%" height="15" fill="rgb(235,160,14)"/><text x="45.8199%" y="463.50"></text></g><g><title>__libc_write (152 samples, 1.72%)</title><rect x="45.5699%" y="437" width="1.7222%" height="15" fill="rgb(212,155,44)"/><text x="45.8199%" y="447.50"></text></g><g><title>__libc_write (151 samples, 1.71%)</title><rect x="45.5812%" y="421" width="1.7109%" height="15" fill="rgb(226,2,50)"/><text x="45.8312%" y="431.50"></text></g><g><title>mysql::conn::pool::Pool::get_conn (334 samples, 3.78%)</title><rect x="43.5418%" y="581" width="3.7843%" height="15" fill="rgb(234,177,6)"/><text x="43.7918%" y="591.50">mysq..</text></g><g><title>mysql::conn::pool::Pool::_get_conn (334 samples, 3.78%)</title><rect x="43.5418%" y="565" width="3.7843%" height="15" fill="rgb(217,24,9)"/><text x="43.7918%" y="575.50">mysq..</text></g><g><title>mysql::conn::Conn::ping (328 samples, 3.72%)</title><rect x="43.6098%" y="549" width="3.7163%" height="15" fill="rgb(220,13,46)"/><text x="43.8598%" y="559.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (167 samples, 1.89%)</title><rect x="45.4339%" y="533" width="1.8921%" height="15" fill="rgb(239,221,27)"/><text x="45.6839%" y="543.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (155 samples, 1.76%)</title><rect x="45.5699%" y="517" width="1.7562%" height="15" fill="rgb(222,198,25)"/><text x="45.8199%" y="527.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (726 samples, 8.23%)</title><rect x="39.1117%" y="597" width="8.2257%" height="15" fill="rgb(211,99,13)"/><text x="39.3617%" y="607.50">decor::help..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="47.3601%" y="549" width="0.1360%" height="15" fill="rgb(232,111,31)"/><text x="47.6101%" y="559.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="47.4960%" y="549" width="0.1020%" height="15" fill="rgb(245,82,37)"/><text x="47.7460%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (22 samples, 0.25%)</title><rect x="47.3601%" y="565" width="0.2493%" height="15" fill="rgb(227,149,46)"/><text x="47.6101%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (26 samples, 0.29%)</title><rect x="47.3487%" y="581" width="0.2946%" height="15" fill="rgb(218,36,50)"/><text x="47.5987%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.11%)</title><rect x="47.8019%" y="565" width="0.1133%" height="15" fill="rgb(226,80,48)"/><text x="48.0519%" y="575.50"></text></g><g><title>decor::helpers::parser_helpers::str_to_tablewithjoins (12 samples, 0.14%)</title><rect x="47.8019%" y="581" width="0.1360%" height="15" fill="rgb(238,224,15)"/><text x="48.0519%" y="591.50"></text></g><g><title>decor::is_guise (783 samples, 8.87%)</title><rect x="39.1117%" y="613" width="8.8715%" height="15" fill="rgb(241,136,10)"/><text x="39.3617%" y="623.50">decor::is_gui..</text></g><g><title>decor::helpers::parser_helpers::select_1_statement (57 samples, 0.65%)</title><rect x="47.3374%" y="597" width="0.6458%" height="15" fill="rgb(208,32,45)"/><text x="47.5874%" y="607.50"></text></g><g><title>decor::disguise::apply (899 samples, 10.19%)</title><rect x="37.8087%" y="629" width="10.1858%" height="15" fill="rgb(207,135,9)"/><text x="38.0587%" y="639.50">decor::disguise..</text></g><g><title>mysql::conn::Conn::read_packet (13 samples, 0.15%)</title><rect x="47.9946%" y="533" width="0.1473%" height="15" fill="rgb(206,86,44)"/><text x="48.2446%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.15%)</title><rect x="47.9946%" y="517" width="0.1473%" height="15" fill="rgb(245,177,15)"/><text x="48.2446%" y="527.50"></text></g><g><title>decor::vault::print_as_filters (17 samples, 0.19%)</title><rect x="47.9946%" y="629" width="0.1926%" height="15" fill="rgb(206,64,50)"/><text x="48.2446%" y="639.50"></text></g><g><title>decor::vault::get_vault_entries_with_constraint (17 samples, 0.19%)</title><rect x="47.9946%" y="613" width="0.1926%" height="15" fill="rgb(234,36,40)"/><text x="48.2446%" y="623.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (17 samples, 0.19%)</title><rect x="47.9946%" y="597" width="0.1926%" height="15" fill="rgb(213,64,8)"/><text x="48.2446%" y="607.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.19%)</title><rect x="47.9946%" y="581" width="0.1926%" height="15" fill="rgb(210,75,36)"/><text x="48.2446%" y="591.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (17 samples, 0.19%)</title><rect x="47.9946%" y="565" width="0.1926%" height="15" fill="rgb(229,88,21)"/><text x="48.2446%" y="575.50"></text></g><g><title>mysql::conn::Conn::next_text (17 samples, 0.19%)</title><rect x="47.9946%" y="549" width="0.1926%" height="15" fill="rgb(252,204,47)"/><text x="48.2446%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (29 samples, 0.33%)</title><rect x="48.3005%" y="485" width="0.3286%" height="15" fill="rgb(208,77,27)"/><text x="48.5505%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (28 samples, 0.32%)</title><rect x="48.3118%" y="469" width="0.3172%" height="15" fill="rgb(221,76,26)"/><text x="48.5618%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (28 samples, 0.32%)</title><rect x="48.3118%" y="453" width="0.3172%" height="15" fill="rgb(225,139,18)"/><text x="48.5618%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 0.32%)</title><rect x="48.3118%" y="437" width="0.3172%" height="15" fill="rgb(230,137,11)"/><text x="48.5618%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 0.32%)</title><rect x="48.3118%" y="421" width="0.3172%" height="15" fill="rgb(212,28,1)"/><text x="48.5618%" y="431.50"></text></g><g><title>__libc_recv (28 samples, 0.32%)</title><rect x="48.3118%" y="405" width="0.3172%" height="15" fill="rgb(248,164,17)"/><text x="48.5618%" y="415.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="48.3118%" y="389" width="0.3172%" height="15" fill="rgb(222,171,42)"/><text x="48.5618%" y="399.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="48.3118%" y="373" width="0.3172%" height="15" fill="rgb(243,84,45)"/><text x="48.5618%" y="383.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="48.3345%" y="357" width="0.2946%" height="15" fill="rgb(252,49,23)"/><text x="48.5845%" y="367.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="48.3458%" y="341" width="0.2833%" height="15" fill="rgb(215,19,7)"/><text x="48.5958%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="48.3458%" y="325" width="0.2833%" height="15" fill="rgb(238,81,41)"/><text x="48.5958%" y="335.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="48.3458%" y="309" width="0.2833%" height="15" fill="rgb(210,199,37)"/><text x="48.5958%" y="319.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="48.3571%" y="293" width="0.2719%" height="15" fill="rgb(244,192,49)"/><text x="48.6071%" y="303.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="48.3685%" y="277" width="0.2606%" height="15" fill="rgb(226,211,11)"/><text x="48.6185%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="48.4138%" y="261" width="0.2153%" height="15" fill="rgb(236,162,54)"/><text x="48.6638%" y="271.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="48.4364%" y="245" width="0.1926%" height="15" fill="rgb(220,229,9)"/><text x="48.6864%" y="255.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="48.4591%" y="229" width="0.1700%" height="15" fill="rgb(250,87,22)"/><text x="48.7091%" y="239.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="48.4591%" y="213" width="0.1700%" height="15" fill="rgb(239,43,17)"/><text x="48.7091%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="48.5271%" y="197" width="0.1020%" height="15" fill="rgb(231,177,25)"/><text x="48.7771%" y="207.50"></text></g><g><title>mysql::conn::Conn::read_packet (37 samples, 0.42%)</title><rect x="48.3005%" y="517" width="0.4192%" height="15" fill="rgb(219,179,1)"/><text x="48.5505%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.42%)</title><rect x="48.3005%" y="501" width="0.4192%" height="15" fill="rgb(238,219,53)"/><text x="48.5505%" y="511.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (40 samples, 0.45%)</title><rect x="48.2778%" y="533" width="0.4532%" height="15" fill="rgb(232,167,36)"/><text x="48.5278%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (74 samples, 0.84%)</title><rect x="48.2098%" y="565" width="0.8384%" height="15" fill="rgb(244,19,51)"/><text x="48.4598%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (71 samples, 0.80%)</title><rect x="48.2438%" y="549" width="0.8044%" height="15" fill="rgb(224,6,22)"/><text x="48.4938%" y="559.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (28 samples, 0.32%)</title><rect x="48.7310%" y="533" width="0.3172%" height="15" fill="rgb(224,145,5)"/><text x="48.9810%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (26 samples, 0.29%)</title><rect x="48.7537%" y="517" width="0.2946%" height="15" fill="rgb(234,130,49)"/><text x="49.0037%" y="527.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (26 samples, 0.29%)</title><rect x="48.7537%" y="501" width="0.2946%" height="15" fill="rgb(254,6,2)"/><text x="49.0037%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (26 samples, 0.29%)</title><rect x="48.7537%" y="485" width="0.2946%" height="15" fill="rgb(208,96,46)"/><text x="49.0037%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (26 samples, 0.29%)</title><rect x="48.7537%" y="469" width="0.2946%" height="15" fill="rgb(239,3,39)"/><text x="49.0037%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (26 samples, 0.29%)</title><rect x="48.7537%" y="453" width="0.2946%" height="15" fill="rgb(233,210,1)"/><text x="49.0037%" y="463.50"></text></g><g><title>__libc_write (26 samples, 0.29%)</title><rect x="48.7537%" y="437" width="0.2946%" height="15" fill="rgb(244,137,37)"/><text x="49.0037%" y="447.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="48.7537%" y="421" width="0.2946%" height="15" fill="rgb(240,136,2)"/><text x="49.0037%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="48.7650%" y="405" width="0.2833%" height="15" fill="rgb(239,18,37)"/><text x="49.0150%" y="415.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="48.7650%" y="389" width="0.2833%" height="15" fill="rgb(218,185,22)"/><text x="49.0150%" y="399.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="48.7650%" y="373" width="0.2833%" height="15" fill="rgb(225,218,4)"/><text x="49.0150%" y="383.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="48.7650%" y="357" width="0.2833%" height="15" fill="rgb(230,182,32)"/><text x="49.0150%" y="367.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="48.7763%" y="341" width="0.2719%" height="15" fill="rgb(242,56,43)"/><text x="49.0263%" y="351.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="48.8103%" y="325" width="0.2379%" height="15" fill="rgb(233,99,24)"/><text x="49.0603%" y="335.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="48.8103%" y="309" width="0.2379%" height="15" fill="rgb(234,209,42)"/><text x="49.0603%" y="319.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="48.8217%" y="293" width="0.2266%" height="15" fill="rgb(227,7,12)"/><text x="49.0717%" y="303.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="48.8557%" y="277" width="0.1926%" height="15" fill="rgb(245,203,43)"/><text x="49.1057%" y="287.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="48.8670%" y="261" width="0.1813%" height="15" fill="rgb(238,205,33)"/><text x="49.1170%" y="271.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="48.8783%" y="245" width="0.1700%" height="15" fill="rgb(231,56,7)"/><text x="49.1283%" y="255.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="48.9010%" y="229" width="0.1473%" height="15" fill="rgb(244,186,29)"/><text x="49.1510%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="48.9350%" y="213" width="0.1133%" height="15" fill="rgb(234,111,31)"/><text x="49.1850%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="48.9463%" y="197" width="0.1020%" height="15" fill="rgb(241,149,10)"/><text x="49.1963%" y="207.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.14%)</title><rect x="49.1389%" y="517" width="0.1360%" height="15" fill="rgb(249,206,44)"/><text x="49.3889%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.11%)</title><rect x="49.1616%" y="501" width="0.1133%" height="15" fill="rgb(251,153,30)"/><text x="49.4116%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 0.19%)</title><rect x="49.1389%" y="533" width="0.1926%" height="15" fill="rgb(239,152,38)"/><text x="49.3889%" y="543.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (101 samples, 1.14%)</title><rect x="48.1985%" y="581" width="1.1443%" height="15" fill="rgb(249,139,47)"/><text x="48.4485%" y="591.50"></text></g><g><title>core::fmt::write (24 samples, 0.27%)</title><rect x="49.0709%" y="565" width="0.2719%" height="15" fill="rgb(244,64,35)"/><text x="49.3209%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (24 samples, 0.27%)</title><rect x="49.0709%" y="549" width="0.2719%" height="15" fill="rgb(216,46,15)"/><text x="49.3209%" y="559.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (105 samples, 1.19%)</title><rect x="48.1872%" y="597" width="1.1897%" height="15" fill="rgb(250,74,19)"/><text x="48.4372%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 0.25%)</title><rect x="49.4448%" y="485" width="0.2493%" height="15" fill="rgb(249,42,33)"/><text x="49.6948%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (22 samples, 0.25%)</title><rect x="49.4448%" y="469" width="0.2493%" height="15" fill="rgb(242,149,17)"/><text x="49.6948%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (22 samples, 0.25%)</title><rect x="49.4448%" y="453" width="0.2493%" height="15" fill="rgb(244,29,21)"/><text x="49.6948%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 0.25%)</title><rect x="49.4448%" y="437" width="0.2493%" height="15" fill="rgb(220,130,37)"/><text x="49.6948%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 0.25%)</title><rect x="49.4448%" y="421" width="0.2493%" height="15" fill="rgb(211,67,2)"/><text x="49.6948%" y="431.50"></text></g><g><title>__libc_recv (22 samples, 0.25%)</title><rect x="49.4448%" y="405" width="0.2493%" height="15" fill="rgb(235,68,52)"/><text x="49.6948%" y="415.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="49.4448%" y="389" width="0.2493%" height="15" fill="rgb(246,142,3)"/><text x="49.6948%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="49.4448%" y="373" width="0.2493%" height="15" fill="rgb(241,25,7)"/><text x="49.6948%" y="383.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="49.4448%" y="357" width="0.2493%" height="15" fill="rgb(242,119,39)"/><text x="49.6948%" y="367.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="49.4562%" y="341" width="0.2379%" height="15" fill="rgb(241,98,45)"/><text x="49.7062%" y="351.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="49.4562%" y="325" width="0.2379%" height="15" fill="rgb(254,28,30)"/><text x="49.7062%" y="335.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="49.4562%" y="309" width="0.2379%" height="15" fill="rgb(241,142,54)"/><text x="49.7062%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="49.4562%" y="293" width="0.2379%" height="15" fill="rgb(222,85,15)"/><text x="49.7062%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="49.4788%" y="277" width="0.2153%" height="15" fill="rgb(210,85,47)"/><text x="49.7288%" y="287.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="49.4901%" y="261" width="0.2039%" height="15" fill="rgb(224,206,25)"/><text x="49.7401%" y="271.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="49.5128%" y="245" width="0.1813%" height="15" fill="rgb(243,201,19)"/><text x="49.7628%" y="255.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.5695%" y="229" width="0.1246%" height="15" fill="rgb(236,59,4)"/><text x="49.8195%" y="239.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (26 samples, 0.29%)</title><rect x="49.4108%" y="533" width="0.2946%" height="15" fill="rgb(254,179,45)"/><text x="49.6608%" y="543.50"></text></g><g><title>mysql::conn::Conn::read_packet (23 samples, 0.26%)</title><rect x="49.4448%" y="517" width="0.2606%" height="15" fill="rgb(226,14,10)"/><text x="49.6948%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.26%)</title><rect x="49.4448%" y="501" width="0.2606%" height="15" fill="rgb(244,27,41)"/><text x="49.6948%" y="511.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (45 samples, 0.51%)</title><rect x="49.3882%" y="565" width="0.5099%" height="15" fill="rgb(235,35,32)"/><text x="49.6382%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (43 samples, 0.49%)</title><rect x="49.4108%" y="549" width="0.4872%" height="15" fill="rgb(218,68,31)"/><text x="49.6608%" y="559.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (17 samples, 0.19%)</title><rect x="49.7054%" y="533" width="0.1926%" height="15" fill="rgb(207,120,37)"/><text x="49.9554%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (15 samples, 0.17%)</title><rect x="49.7281%" y="517" width="0.1700%" height="15" fill="rgb(227,98,0)"/><text x="49.9781%" y="527.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (15 samples, 0.17%)</title><rect x="49.7281%" y="501" width="0.1700%" height="15" fill="rgb(207,7,3)"/><text x="49.9781%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (15 samples, 0.17%)</title><rect x="49.7281%" y="485" width="0.1700%" height="15" fill="rgb(206,98,19)"/><text x="49.9781%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (15 samples, 0.17%)</title><rect x="49.7281%" y="469" width="0.1700%" height="15" fill="rgb(217,5,26)"/><text x="49.9781%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (15 samples, 0.17%)</title><rect x="49.7281%" y="453" width="0.1700%" height="15" fill="rgb(235,190,38)"/><text x="49.9781%" y="463.50"></text></g><g><title>__libc_write (15 samples, 0.17%)</title><rect x="49.7281%" y="437" width="0.1700%" height="15" fill="rgb(247,86,24)"/><text x="49.9781%" y="447.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="49.7281%" y="421" width="0.1700%" height="15" fill="rgb(205,101,16)"/><text x="49.9781%" y="431.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="49.7281%" y="405" width="0.1700%" height="15" fill="rgb(246,168,33)"/><text x="49.9781%" y="415.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="49.7281%" y="389" width="0.1700%" height="15" fill="rgb(231,114,1)"/><text x="49.9781%" y="399.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="49.7281%" y="373" width="0.1700%" height="15" fill="rgb(207,184,53)"/><text x="49.9781%" y="383.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="49.7281%" y="357" width="0.1700%" height="15" fill="rgb(224,95,51)"/><text x="49.9781%" y="367.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="49.7394%" y="341" width="0.1586%" height="15" fill="rgb(212,188,45)"/><text x="49.9894%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="49.7507%" y="325" width="0.1473%" height="15" fill="rgb(223,154,38)"/><text x="50.0007%" y="335.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="49.7621%" y="309" width="0.1360%" height="15" fill="rgb(251,22,52)"/><text x="50.0121%" y="319.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="49.7734%" y="293" width="0.1246%" height="15" fill="rgb(229,209,22)"/><text x="50.0234%" y="303.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="49.7847%" y="277" width="0.1133%" height="15" fill="rgb(234,138,34)"/><text x="50.0347%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="49.7961%" y="261" width="0.1020%" height="15" fill="rgb(212,95,11)"/><text x="50.0461%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="49.7961%" y="245" width="0.1020%" height="15" fill="rgb(240,179,47)"/><text x="50.0461%" y="255.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.11%)</title><rect x="49.9094%" y="517" width="0.1133%" height="15" fill="rgb(240,163,11)"/><text x="50.1594%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.10%)</title><rect x="49.9207%" y="501" width="0.1020%" height="15" fill="rgb(236,37,12)"/><text x="50.1707%" y="511.50"></text></g><g><title>hotcrp::datagen::conflicts::insert_paper_conflict (58 samples, 0.66%)</title><rect x="49.3768%" y="597" width="0.6571%" height="15" fill="rgb(232,164,16)"/><text x="49.6268%" y="607.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (58 samples, 0.66%)</title><rect x="49.3768%" y="581" width="0.6571%" height="15" fill="rgb(244,205,15)"/><text x="49.6268%" y="591.50"></text></g><g><title>core::fmt::write (12 samples, 0.14%)</title><rect x="49.8980%" y="565" width="0.1360%" height="15" fill="rgb(223,117,47)"/><text x="50.1480%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (12 samples, 0.14%)</title><rect x="49.8980%" y="549" width="0.1360%" height="15" fill="rgb(244,107,35)"/><text x="50.1480%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.12%)</title><rect x="49.9094%" y="533" width="0.1246%" height="15" fill="rgb(205,140,8)"/><text x="50.1594%" y="543.50"></text></g><g><title>__libc_recv (29 samples, 0.33%)</title><rect x="50.1360%" y="405" width="0.3286%" height="15" fill="rgb(228,84,46)"/><text x="50.3860%" y="415.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="50.1360%" y="389" width="0.3286%" height="15" fill="rgb(254,188,9)"/><text x="50.3860%" y="399.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="50.1360%" y="373" width="0.3286%" height="15" fill="rgb(206,112,54)"/><text x="50.3860%" y="383.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="50.1700%" y="357" width="0.2946%" height="15" fill="rgb(216,84,49)"/><text x="50.4200%" y="367.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="50.1813%" y="341" width="0.2833%" height="15" fill="rgb(214,194,35)"/><text x="50.4313%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="50.1813%" y="325" width="0.2833%" height="15" fill="rgb(249,28,3)"/><text x="50.4313%" y="335.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="50.1926%" y="309" width="0.2719%" height="15" fill="rgb(222,56,52)"/><text x="50.4426%" y="319.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="50.2039%" y="293" width="0.2606%" height="15" fill="rgb(245,217,50)"/><text x="50.4539%" y="303.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="50.2266%" y="277" width="0.2379%" height="15" fill="rgb(213,201,24)"/><text x="50.4766%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="50.2493%" y="261" width="0.2153%" height="15" fill="rgb(248,116,28)"/><text x="50.4993%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="50.2493%" y="245" width="0.2153%" height="15" fill="rgb(219,72,43)"/><text x="50.4993%" y="255.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="50.2606%" y="229" width="0.2039%" height="15" fill="rgb(209,138,14)"/><text x="50.5106%" y="239.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="50.2719%" y="213" width="0.1926%" height="15" fill="rgb(222,18,33)"/><text x="50.5219%" y="223.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="50.3512%" y="197" width="0.1133%" height="15" fill="rgb(213,199,7)"/><text x="50.6012%" y="207.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 0.34%)</title><rect x="50.1360%" y="485" width="0.3399%" height="15" fill="rgb(250,110,10)"/><text x="50.3860%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (30 samples, 0.34%)</title><rect x="50.1360%" y="469" width="0.3399%" height="15" fill="rgb(248,123,6)"/><text x="50.3860%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (30 samples, 0.34%)</title><rect x="50.1360%" y="453" width="0.3399%" height="15" fill="rgb(206,91,31)"/><text x="50.3860%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 0.34%)</title><rect x="50.1360%" y="437" width="0.3399%" height="15" fill="rgb(211,154,13)"/><text x="50.3860%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 0.34%)</title><rect x="50.1360%" y="421" width="0.3399%" height="15" fill="rgb(225,148,7)"/><text x="50.3860%" y="431.50"></text></g><g><title>mysql::conn::Conn::read_packet (34 samples, 0.39%)</title><rect x="50.1246%" y="517" width="0.3852%" height="15" fill="rgb(220,160,43)"/><text x="50.3746%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.39%)</title><rect x="50.1246%" y="501" width="0.3852%" height="15" fill="rgb(213,52,39)"/><text x="50.3746%" y="511.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (37 samples, 0.42%)</title><rect x="50.1020%" y="533" width="0.4192%" height="15" fill="rgb(243,137,7)"/><text x="50.3520%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (55 samples, 0.62%)</title><rect x="50.0567%" y="565" width="0.6232%" height="15" fill="rgb(230,79,13)"/><text x="50.3067%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (52 samples, 0.59%)</title><rect x="50.0906%" y="549" width="0.5892%" height="15" fill="rgb(247,105,23)"/><text x="50.3406%" y="559.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (14 samples, 0.16%)</title><rect x="50.5212%" y="533" width="0.1586%" height="15" fill="rgb(223,179,41)"/><text x="50.7712%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.15%)</title><rect x="50.5325%" y="517" width="0.1473%" height="15" fill="rgb(218,9,34)"/><text x="50.7825%" y="527.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (13 samples, 0.15%)</title><rect x="50.5325%" y="501" width="0.1473%" height="15" fill="rgb(222,106,8)"/><text x="50.7825%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (13 samples, 0.15%)</title><rect x="50.5325%" y="485" width="0.1473%" height="15" fill="rgb(211,220,0)"/><text x="50.7825%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (13 samples, 0.15%)</title><rect x="50.5325%" y="469" width="0.1473%" height="15" fill="rgb(229,52,16)"/><text x="50.7825%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (13 samples, 0.15%)</title><rect x="50.5325%" y="453" width="0.1473%" height="15" fill="rgb(212,155,18)"/><text x="50.7825%" y="463.50"></text></g><g><title>__libc_write (13 samples, 0.15%)</title><rect x="50.5325%" y="437" width="0.1473%" height="15" fill="rgb(242,21,14)"/><text x="50.7825%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="50.5325%" y="421" width="0.1473%" height="15" fill="rgb(222,19,48)"/><text x="50.7825%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="50.5325%" y="405" width="0.1473%" height="15" fill="rgb(232,45,27)"/><text x="50.7825%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="50.5438%" y="389" width="0.1360%" height="15" fill="rgb(249,103,42)"/><text x="50.7938%" y="399.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="50.5438%" y="373" width="0.1360%" height="15" fill="rgb(246,81,33)"/><text x="50.7938%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="50.5438%" y="357" width="0.1360%" height="15" fill="rgb(252,33,42)"/><text x="50.7938%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="50.5778%" y="341" width="0.1020%" height="15" fill="rgb(209,212,41)"/><text x="50.8278%" y="351.50"></text></g><g><title>hotcrp::datagen::papers::insert_papers (232 samples, 2.63%)</title><rect x="48.1872%" y="613" width="2.6286%" height="15" fill="rgb(207,154,6)"/><text x="48.4372%" y="623.50">ho..</text></g><g><title>hotcrp::datagen::watches::insert_paper_watch (69 samples, 0.78%)</title><rect x="50.0340%" y="597" width="0.7818%" height="15" fill="rgb(223,64,47)"/><text x="50.2840%" y="607.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (69 samples, 0.78%)</title><rect x="50.0340%" y="581" width="0.7818%" height="15" fill="rgb(211,161,38)"/><text x="50.2840%" y="591.50"></text></g><g><title>core::fmt::write (10 samples, 0.11%)</title><rect x="50.7025%" y="565" width="0.1133%" height="15" fill="rgb(219,138,40)"/><text x="50.9525%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (10 samples, 0.11%)</title><rect x="50.7025%" y="549" width="0.1133%" height="15" fill="rgb(241,228,46)"/><text x="50.9525%" y="559.50"></text></g><g><title>__libc_recv (39 samples, 0.44%)</title><rect x="50.9291%" y="405" width="0.4419%" height="15" fill="rgb(223,209,38)"/><text x="51.1791%" y="415.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="50.9517%" y="389" width="0.4192%" height="15" fill="rgb(236,164,45)"/><text x="51.2017%" y="399.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="50.9517%" y="373" width="0.4192%" height="15" fill="rgb(231,15,5)"/><text x="51.2017%" y="383.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="50.9631%" y="357" width="0.4079%" height="15" fill="rgb(252,35,15)"/><text x="51.2131%" y="367.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="50.9631%" y="341" width="0.4079%" height="15" fill="rgb(248,181,18)"/><text x="51.2131%" y="351.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="50.9631%" y="325" width="0.4079%" height="15" fill="rgb(233,39,42)"/><text x="51.2131%" y="335.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="50.9631%" y="309" width="0.4079%" height="15" fill="rgb(238,110,33)"/><text x="51.2131%" y="319.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="50.9631%" y="293" width="0.4079%" height="15" fill="rgb(233,195,10)"/><text x="51.2131%" y="303.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="51.0084%" y="277" width="0.3626%" height="15" fill="rgb(254,105,3)"/><text x="51.2584%" y="287.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="51.0084%" y="261" width="0.3626%" height="15" fill="rgb(221,225,9)"/><text x="51.2584%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="51.0084%" y="245" width="0.3626%" height="15" fill="rgb(224,227,45)"/><text x="51.2584%" y="255.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="51.0650%" y="229" width="0.3059%" height="15" fill="rgb(229,198,43)"/><text x="51.3150%" y="239.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="51.0990%" y="213" width="0.2719%" height="15" fill="rgb(206,209,35)"/><text x="51.3490%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="51.2463%" y="197" width="0.1246%" height="15" fill="rgb(245,195,53)"/><text x="51.4963%" y="207.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="51.2690%" y="181" width="0.1020%" height="15" fill="rgb(240,92,26)"/><text x="51.5190%" y="191.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (41 samples, 0.46%)</title><rect x="50.9177%" y="485" width="0.4645%" height="15" fill="rgb(207,40,23)"/><text x="51.1677%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (40 samples, 0.45%)</title><rect x="50.9291%" y="469" width="0.4532%" height="15" fill="rgb(223,111,35)"/><text x="51.1791%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (40 samples, 0.45%)</title><rect x="50.9291%" y="453" width="0.4532%" height="15" fill="rgb(229,147,28)"/><text x="51.1791%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (40 samples, 0.45%)</title><rect x="50.9291%" y="437" width="0.4532%" height="15" fill="rgb(211,29,28)"/><text x="51.1791%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 0.45%)</title><rect x="50.9291%" y="421" width="0.4532%" height="15" fill="rgb(228,72,33)"/><text x="51.1791%" y="431.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="51.3823%" y="421" width="0.1020%" height="15" fill="rgb(205,214,31)"/><text x="51.6323%" y="431.50"></text></g><g><title>mysql::conn::Conn::read_packet (53 samples, 0.60%)</title><rect x="50.8951%" y="517" width="0.6005%" height="15" fill="rgb(224,111,15)"/><text x="51.1451%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.60%)</title><rect x="50.8951%" y="501" width="0.6005%" height="15" fill="rgb(253,21,26)"/><text x="51.1451%" y="511.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (10 samples, 0.11%)</title><rect x="51.3823%" y="485" width="0.1133%" height="15" fill="rgb(245,139,43)"/><text x="51.6323%" y="495.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (10 samples, 0.11%)</title><rect x="51.3823%" y="469" width="0.1133%" height="15" fill="rgb(252,170,7)"/><text x="51.6323%" y="479.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (10 samples, 0.11%)</title><rect x="51.3823%" y="453" width="0.1133%" height="15" fill="rgb(231,118,14)"/><text x="51.6323%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.11%)</title><rect x="51.3823%" y="437" width="0.1133%" height="15" fill="rgb(238,83,0)"/><text x="51.6323%" y="447.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (55 samples, 0.62%)</title><rect x="50.8838%" y="533" width="0.6232%" height="15" fill="rgb(221,39,39)"/><text x="51.1338%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (95 samples, 1.08%)</title><rect x="50.8611%" y="565" width="1.0764%" height="15" fill="rgb(222,119,46)"/><text x="51.1111%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (94 samples, 1.07%)</title><rect x="50.8724%" y="549" width="1.0650%" height="15" fill="rgb(222,165,49)"/><text x="51.1224%" y="559.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (36 samples, 0.41%)</title><rect x="51.5296%" y="533" width="0.4079%" height="15" fill="rgb(219,113,52)"/><text x="51.7796%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (36 samples, 0.41%)</title><rect x="51.5296%" y="517" width="0.4079%" height="15" fill="rgb(214,7,15)"/><text x="51.7796%" y="527.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (35 samples, 0.40%)</title><rect x="51.5409%" y="501" width="0.3966%" height="15" fill="rgb(235,32,4)"/><text x="51.7909%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (35 samples, 0.40%)</title><rect x="51.5409%" y="485" width="0.3966%" height="15" fill="rgb(238,90,54)"/><text x="51.7909%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (35 samples, 0.40%)</title><rect x="51.5409%" y="469" width="0.3966%" height="15" fill="rgb(213,208,19)"/><text x="51.7909%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (35 samples, 0.40%)</title><rect x="51.5409%" y="453" width="0.3966%" height="15" fill="rgb(233,156,4)"/><text x="51.7909%" y="463.50"></text></g><g><title>__libc_write (35 samples, 0.40%)</title><rect x="51.5409%" y="437" width="0.3966%" height="15" fill="rgb(207,194,5)"/><text x="51.7909%" y="447.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="51.5409%" y="421" width="0.3966%" height="15" fill="rgb(206,111,30)"/><text x="51.7909%" y="431.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="51.5409%" y="405" width="0.3966%" height="15" fill="rgb(243,70,54)"/><text x="51.7909%" y="415.50"></text></g><g><title>[unknown] (33 samples, 0.37%)</title><rect x="51.5636%" y="389" width="0.3739%" height="15" fill="rgb(242,28,8)"/><text x="51.8136%" y="399.50"></text></g><g><title>[unknown] (33 samples, 0.37%)</title><rect x="51.5636%" y="373" width="0.3739%" height="15" fill="rgb(219,106,18)"/><text x="51.8136%" y="383.50"></text></g><g><title>[unknown] (33 samples, 0.37%)</title><rect x="51.5636%" y="357" width="0.3739%" height="15" fill="rgb(244,222,10)"/><text x="51.8136%" y="367.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="51.6089%" y="341" width="0.3286%" height="15" fill="rgb(236,179,52)"/><text x="51.8589%" y="351.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="51.6429%" y="325" width="0.2946%" height="15" fill="rgb(213,23,39)"/><text x="51.8929%" y="335.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="51.6655%" y="309" width="0.2719%" height="15" fill="rgb(238,48,10)"/><text x="51.9155%" y="319.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="51.6655%" y="293" width="0.2719%" height="15" fill="rgb(251,196,23)"/><text x="51.9155%" y="303.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="51.6769%" y="277" width="0.2606%" height="15" fill="rgb(250,152,24)"/><text x="51.9269%" y="287.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="51.6995%" y="261" width="0.2379%" height="15" fill="rgb(209,150,17)"/><text x="51.9495%" y="271.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="51.7109%" y="245" width="0.2266%" height="15" fill="rgb(234,202,34)"/><text x="51.9609%" y="255.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="51.7109%" y="229" width="0.2266%" height="15" fill="rgb(253,148,53)"/><text x="51.9609%" y="239.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="51.7222%" y="213" width="0.2153%" height="15" fill="rgb(218,129,16)"/><text x="51.9722%" y="223.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="51.7335%" y="197" width="0.2039%" height="15" fill="rgb(216,85,19)"/><text x="51.9835%" y="207.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="51.7902%" y="181" width="0.1473%" height="15" fill="rgb(235,228,7)"/><text x="52.0402%" y="191.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="51.7902%" y="165" width="0.1473%" height="15" fill="rgb(245,175,0)"/><text x="52.0402%" y="175.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="51.8128%" y="149" width="0.1246%" height="15" fill="rgb(208,168,36)"/><text x="52.0628%" y="159.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="51.8355%" y="133" width="0.1020%" height="15" fill="rgb(246,171,24)"/><text x="52.0855%" y="143.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.14%)</title><rect x="51.9941%" y="533" width="0.1360%" height="15" fill="rgb(215,142,24)"/><text x="52.2441%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.14%)</title><rect x="51.9941%" y="517" width="0.1360%" height="15" fill="rgb(250,187,7)"/><text x="52.2441%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 0.14%)</title><rect x="51.9941%" y="501" width="0.1360%" height="15" fill="rgb(228,66,33)"/><text x="52.2441%" y="511.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.12%)</title><rect x="52.1414%" y="485" width="0.1246%" height="15" fill="rgb(234,215,21)"/><text x="52.3914%" y="495.50"></text></g><g><title>_int_malloc (9 samples, 0.10%)</title><rect x="52.1641%" y="469" width="0.1020%" height="15" fill="rgb(222,191,20)"/><text x="52.4141%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (21 samples, 0.24%)</title><rect x="52.1301%" y="517" width="0.2379%" height="15" fill="rgb(245,79,54)"/><text x="52.3801%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (21 samples, 0.24%)</title><rect x="52.1301%" y="501" width="0.2379%" height="15" fill="rgb(240,10,37)"/><text x="52.3801%" y="511.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (146 samples, 1.65%)</title><rect x="50.8498%" y="581" width="1.6542%" height="15" fill="rgb(214,192,32)"/><text x="51.0998%" y="591.50"></text></g><g><title>core::fmt::write (47 samples, 0.53%)</title><rect x="51.9714%" y="565" width="0.5325%" height="15" fill="rgb(209,36,54)"/><text x="52.2214%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (45 samples, 0.51%)</title><rect x="51.9941%" y="549" width="0.5099%" height="15" fill="rgb(220,10,11)"/><text x="52.2441%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (33 samples, 0.37%)</title><rect x="52.1301%" y="533" width="0.3739%" height="15" fill="rgb(221,106,17)"/><text x="52.3801%" y="543.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 0.14%)</title><rect x="52.3680%" y="517" width="0.1360%" height="15" fill="rgb(251,142,44)"/><text x="52.6180%" y="527.50"></text></g><g><title>core::fmt::write (11 samples, 0.12%)</title><rect x="52.3793%" y="501" width="0.1246%" height="15" fill="rgb(238,13,15)"/><text x="52.6293%" y="511.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (151 samples, 1.71%)</title><rect x="50.8158%" y="597" width="1.7109%" height="15" fill="rgb(208,107,27)"/><text x="51.0658%" y="607.50"></text></g><g><title>__libc_recv (34 samples, 0.39%)</title><rect x="52.5946%" y="405" width="0.3852%" height="15" fill="rgb(205,136,37)"/><text x="52.8446%" y="415.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="52.5946%" y="389" width="0.3852%" height="15" fill="rgb(250,205,27)"/><text x="52.8446%" y="399.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="52.5946%" y="373" width="0.3852%" height="15" fill="rgb(210,80,43)"/><text x="52.8446%" y="383.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="52.6173%" y="357" width="0.3626%" height="15" fill="rgb(247,160,36)"/><text x="52.8673%" y="367.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="52.6173%" y="341" width="0.3626%" height="15" fill="rgb(234,13,49)"/><text x="52.8673%" y="351.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="52.6173%" y="325" width="0.3626%" height="15" fill="rgb(234,122,0)"/><text x="52.8673%" y="335.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="52.6173%" y="309" width="0.3626%" height="15" fill="rgb(207,146,38)"/><text x="52.8673%" y="319.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="52.6286%" y="293" width="0.3512%" height="15" fill="rgb(207,177,25)"/><text x="52.8786%" y="303.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="52.6626%" y="277" width="0.3172%" height="15" fill="rgb(211,178,42)"/><text x="52.9126%" y="287.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="52.6852%" y="261" width="0.2946%" height="15" fill="rgb(230,69,54)"/><text x="52.9352%" y="271.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="52.7079%" y="245" width="0.2719%" height="15" fill="rgb(214,135,41)"/><text x="52.9579%" y="255.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="52.7192%" y="229" width="0.2606%" height="15" fill="rgb(237,67,25)"/><text x="52.9692%" y="239.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="52.7419%" y="213" width="0.2379%" height="15" fill="rgb(222,189,50)"/><text x="52.9919%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="52.8779%" y="197" width="0.1020%" height="15" fill="rgb(245,148,34)"/><text x="53.1279%" y="207.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (36 samples, 0.41%)</title><rect x="52.5833%" y="485" width="0.4079%" height="15" fill="rgb(222,29,6)"/><text x="52.8333%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (35 samples, 0.40%)</title><rect x="52.5946%" y="469" width="0.3966%" height="15" fill="rgb(221,189,43)"/><text x="52.8446%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (35 samples, 0.40%)</title><rect x="52.5946%" y="453" width="0.3966%" height="15" fill="rgb(207,36,27)"/><text x="52.8446%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (35 samples, 0.40%)</title><rect x="52.5946%" y="437" width="0.3966%" height="15" fill="rgb(217,90,24)"/><text x="52.8446%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (35 samples, 0.40%)</title><rect x="52.5946%" y="421" width="0.3966%" height="15" fill="rgb(224,66,35)"/><text x="52.8446%" y="431.50"></text></g><g><title>mysql::conn::Conn::read_packet (41 samples, 0.46%)</title><rect x="52.5493%" y="517" width="0.4645%" height="15" fill="rgb(221,13,50)"/><text x="52.7993%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.45%)</title><rect x="52.5606%" y="501" width="0.4532%" height="15" fill="rgb(236,68,49)"/><text x="52.8106%" y="511.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (43 samples, 0.49%)</title><rect x="52.5493%" y="533" width="0.4872%" height="15" fill="rgb(229,146,28)"/><text x="52.7993%" y="543.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (11 samples, 0.12%)</title><rect x="53.0705%" y="501" width="0.1246%" height="15" fill="rgb(225,31,38)"/><text x="53.3205%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (11 samples, 0.12%)</title><rect x="53.0705%" y="485" width="0.1246%" height="15" fill="rgb(250,208,3)"/><text x="53.3205%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (11 samples, 0.12%)</title><rect x="53.0705%" y="469" width="0.1246%" height="15" fill="rgb(246,54,23)"/><text x="53.3205%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (11 samples, 0.12%)</title><rect x="53.0705%" y="453" width="0.1246%" height="15" fill="rgb(243,76,11)"/><text x="53.3205%" y="463.50"></text></g><g><title>__libc_write (11 samples, 0.12%)</title><rect x="53.0705%" y="437" width="0.1246%" height="15" fill="rgb(245,21,50)"/><text x="53.3205%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="53.0818%" y="421" width="0.1133%" height="15" fill="rgb(228,9,43)"/><text x="53.3318%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="53.0818%" y="405" width="0.1133%" height="15" fill="rgb(208,100,47)"/><text x="53.3318%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="53.0818%" y="389" width="0.1133%" height="15" fill="rgb(232,26,8)"/><text x="53.3318%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="53.0818%" y="373" width="0.1133%" height="15" fill="rgb(216,166,38)"/><text x="53.3318%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="53.0818%" y="357" width="0.1133%" height="15" fill="rgb(251,202,51)"/><text x="53.3318%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="53.0818%" y="341" width="0.1133%" height="15" fill="rgb(254,216,34)"/><text x="53.3318%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="53.0818%" y="325" width="0.1133%" height="15" fill="rgb(251,32,27)"/><text x="53.3318%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="53.0931%" y="309" width="0.1020%" height="15" fill="rgb(208,127,28)"/><text x="53.3431%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="53.0931%" y="293" width="0.1020%" height="15" fill="rgb(224,137,22)"/><text x="53.3431%" y="303.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (59 samples, 0.67%)</title><rect x="52.5380%" y="565" width="0.6685%" height="15" fill="rgb(254,70,32)"/><text x="52.7880%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (58 samples, 0.66%)</title><rect x="52.5493%" y="549" width="0.6571%" height="15" fill="rgb(229,75,37)"/><text x="52.7993%" y="559.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (14 samples, 0.16%)</title><rect x="53.0478%" y="533" width="0.1586%" height="15" fill="rgb(252,64,23)"/><text x="53.2978%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.15%)</title><rect x="53.0591%" y="517" width="0.1473%" height="15" fill="rgb(232,162,48)"/><text x="53.3091%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 0.18%)</title><rect x="53.2744%" y="517" width="0.1813%" height="15" fill="rgb(246,160,12)"/><text x="53.5244%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.17%)</title><rect x="53.2857%" y="501" width="0.1700%" height="15" fill="rgb(247,166,0)"/><text x="53.5357%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="53.3537%" y="485" width="0.1020%" height="15" fill="rgb(249,219,21)"/><text x="53.6037%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="53.4557%" y="501" width="0.1020%" height="15" fill="rgb(205,209,3)"/><text x="53.7057%" y="511.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="53.4557%" y="485" width="0.1020%" height="15" fill="rgb(243,44,1)"/><text x="53.7057%" y="495.50"></text></g><g><title>_int_malloc (9 samples, 0.10%)</title><rect x="53.4557%" y="469" width="0.1020%" height="15" fill="rgb(206,159,16)"/><text x="53.7057%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (27 samples, 0.31%)</title><rect x="53.2744%" y="533" width="0.3059%" height="15" fill="rgb(244,77,30)"/><text x="53.5244%" y="543.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.12%)</title><rect x="53.4557%" y="517" width="0.1246%" height="15" fill="rgb(218,69,12)"/><text x="53.7057%" y="527.50"></text></g><g><title>core::fmt::write (32 samples, 0.36%)</title><rect x="53.2291%" y="565" width="0.3626%" height="15" fill="rgb(212,87,7)"/><text x="53.4791%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (31 samples, 0.35%)</title><rect x="53.2404%" y="549" width="0.3512%" height="15" fill="rgb(245,114,25)"/><text x="53.4904%" y="559.50"></text></g><g><title>hotcrp::datagen::conflicts::insert_paper_conflict (95 samples, 1.08%)</title><rect x="52.5266%" y="597" width="1.0764%" height="15" fill="rgb(210,61,42)"/><text x="52.7766%" y="607.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (95 samples, 1.08%)</title><rect x="52.5266%" y="581" width="1.0764%" height="15" fill="rgb(211,52,33)"/><text x="52.7766%" y="591.50"></text></g><g><title>__libc_recv (53 samples, 0.60%)</title><rect x="53.7729%" y="405" width="0.6005%" height="15" fill="rgb(234,58,33)"/><text x="54.0229%" y="415.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="53.7729%" y="389" width="0.6005%" height="15" fill="rgb(220,115,36)"/><text x="54.0229%" y="399.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="53.7729%" y="373" width="0.6005%" height="15" fill="rgb(243,153,54)"/><text x="54.0229%" y="383.50"></text></g><g><title>[unknown] (49 samples, 0.56%)</title><rect x="53.8183%" y="357" width="0.5552%" height="15" fill="rgb(251,47,18)"/><text x="54.0683%" y="367.50"></text></g><g><title>[unknown] (48 samples, 0.54%)</title><rect x="53.8296%" y="341" width="0.5438%" height="15" fill="rgb(242,102,42)"/><text x="54.0796%" y="351.50"></text></g><g><title>[unknown] (48 samples, 0.54%)</title><rect x="53.8296%" y="325" width="0.5438%" height="15" fill="rgb(234,31,38)"/><text x="54.0796%" y="335.50"></text></g><g><title>[unknown] (47 samples, 0.53%)</title><rect x="53.8409%" y="309" width="0.5325%" height="15" fill="rgb(221,117,51)"/><text x="54.0909%" y="319.50"></text></g><g><title>[unknown] (47 samples, 0.53%)</title><rect x="53.8409%" y="293" width="0.5325%" height="15" fill="rgb(212,20,18)"/><text x="54.0909%" y="303.50"></text></g><g><title>[unknown] (44 samples, 0.50%)</title><rect x="53.8749%" y="277" width="0.4985%" height="15" fill="rgb(245,133,36)"/><text x="54.1249%" y="287.50"></text></g><g><title>[unknown] (43 samples, 0.49%)</title><rect x="53.8862%" y="261" width="0.4872%" height="15" fill="rgb(212,6,19)"/><text x="54.1362%" y="271.50"></text></g><g><title>[unknown] (42 samples, 0.48%)</title><rect x="53.8976%" y="245" width="0.4759%" height="15" fill="rgb(218,1,36)"/><text x="54.1476%" y="255.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="53.9542%" y="229" width="0.4192%" height="15" fill="rgb(246,84,54)"/><text x="54.2042%" y="239.50"></text></g><g><title>[unknown] (33 samples, 0.37%)</title><rect x="53.9995%" y="213" width="0.3739%" height="15" fill="rgb(242,110,6)"/><text x="54.2495%" y="223.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="54.1808%" y="197" width="0.1926%" height="15" fill="rgb(214,47,5)"/><text x="54.4308%" y="207.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="54.2601%" y="181" width="0.1133%" height="15" fill="rgb(218,159,25)"/><text x="54.5101%" y="191.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (60 samples, 0.68%)</title><rect x="53.7503%" y="485" width="0.6798%" height="15" fill="rgb(215,211,28)"/><text x="54.0003%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (58 samples, 0.66%)</title><rect x="53.7729%" y="469" width="0.6571%" height="15" fill="rgb(238,59,32)"/><text x="54.0229%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (58 samples, 0.66%)</title><rect x="53.7729%" y="453" width="0.6571%" height="15" fill="rgb(226,82,3)"/><text x="54.0229%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (58 samples, 0.66%)</title><rect x="53.7729%" y="437" width="0.6571%" height="15" fill="rgb(240,164,32)"/><text x="54.0229%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (58 samples, 0.66%)</title><rect x="53.7729%" y="421" width="0.6571%" height="15" fill="rgb(232,46,7)"/><text x="54.0229%" y="431.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (75 samples, 0.85%)</title><rect x="53.6370%" y="533" width="0.8498%" height="15" fill="rgb(229,129,53)"/><text x="53.8870%" y="543.50"></text></g><g><title>mysql::conn::Conn::read_packet (66 samples, 0.75%)</title><rect x="53.7390%" y="517" width="0.7478%" height="15" fill="rgb(234,188,29)"/><text x="53.9890%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.75%)</title><rect x="53.7390%" y="501" width="0.7478%" height="15" fill="rgb(246,141,4)"/><text x="53.9890%" y="511.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (116 samples, 1.31%)</title><rect x="53.6257%" y="565" width="1.3143%" height="15" fill="rgb(229,23,39)"/><text x="53.8757%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (115 samples, 1.30%)</title><rect x="53.6370%" y="549" width="1.3030%" height="15" fill="rgb(206,12,3)"/><text x="53.8870%" y="559.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (39 samples, 0.44%)</title><rect x="54.4981%" y="533" width="0.4419%" height="15" fill="rgb(252,226,20)"/><text x="54.7481%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (37 samples, 0.42%)</title><rect x="54.5207%" y="517" width="0.4192%" height="15" fill="rgb(216,123,35)"/><text x="54.7707%" y="527.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (37 samples, 0.42%)</title><rect x="54.5207%" y="501" width="0.4192%" height="15" fill="rgb(212,68,40)"/><text x="54.7707%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (37 samples, 0.42%)</title><rect x="54.5207%" y="485" width="0.4192%" height="15" fill="rgb(254,125,32)"/><text x="54.7707%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (37 samples, 0.42%)</title><rect x="54.5207%" y="469" width="0.4192%" height="15" fill="rgb(253,97,22)"/><text x="54.7707%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (37 samples, 0.42%)</title><rect x="54.5207%" y="453" width="0.4192%" height="15" fill="rgb(241,101,14)"/><text x="54.7707%" y="463.50"></text></g><g><title>__libc_write (37 samples, 0.42%)</title><rect x="54.5207%" y="437" width="0.4192%" height="15" fill="rgb(238,103,29)"/><text x="54.7707%" y="447.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="54.5207%" y="421" width="0.4192%" height="15" fill="rgb(233,195,47)"/><text x="54.7707%" y="431.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="54.5207%" y="405" width="0.4192%" height="15" fill="rgb(246,218,30)"/><text x="54.7707%" y="415.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="54.5321%" y="389" width="0.4079%" height="15" fill="rgb(219,145,47)"/><text x="54.7821%" y="399.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="54.5321%" y="373" width="0.4079%" height="15" fill="rgb(243,12,26)"/><text x="54.7821%" y="383.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="54.5434%" y="357" width="0.3966%" height="15" fill="rgb(214,87,16)"/><text x="54.7934%" y="367.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="54.5774%" y="341" width="0.3626%" height="15" fill="rgb(208,99,42)"/><text x="54.8274%" y="351.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="54.5887%" y="325" width="0.3512%" height="15" fill="rgb(253,99,2)"/><text x="54.8387%" y="335.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="54.5887%" y="309" width="0.3512%" height="15" fill="rgb(220,168,23)"/><text x="54.8387%" y="319.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="54.5887%" y="293" width="0.3512%" height="15" fill="rgb(242,38,24)"/><text x="54.8387%" y="303.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="54.6680%" y="277" width="0.2719%" height="15" fill="rgb(225,182,9)"/><text x="54.9180%" y="287.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="54.6794%" y="261" width="0.2606%" height="15" fill="rgb(243,178,37)"/><text x="54.9294%" y="271.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="54.7020%" y="245" width="0.2379%" height="15" fill="rgb(232,139,19)"/><text x="54.9520%" y="255.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="54.7020%" y="229" width="0.2379%" height="15" fill="rgb(225,201,24)"/><text x="54.9520%" y="239.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="54.7020%" y="213" width="0.2379%" height="15" fill="rgb(221,47,46)"/><text x="54.9520%" y="223.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="54.7133%" y="197" width="0.2266%" height="15" fill="rgb(249,23,13)"/><text x="54.9633%" y="207.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="54.7927%" y="181" width="0.1473%" height="15" fill="rgb(219,9,5)"/><text x="55.0427%" y="191.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="54.7927%" y="165" width="0.1473%" height="15" fill="rgb(254,171,16)"/><text x="55.0427%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="54.7927%" y="149" width="0.1473%" height="15" fill="rgb(230,171,20)"/><text x="55.0427%" y="159.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="54.8266%" y="133" width="0.1133%" height="15" fill="rgb(210,71,41)"/><text x="55.0766%" y="143.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="54.8266%" y="117" width="0.1133%" height="15" fill="rgb(206,173,20)"/><text x="55.0766%" y="127.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="55.1099%" y="485" width="0.1020%" height="15" fill="rgb(233,88,34)"/><text x="55.3599%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.22%)</title><rect x="55.0533%" y="517" width="0.2153%" height="15" fill="rgb(223,209,46)"/><text x="55.3033%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (16 samples, 0.18%)</title><rect x="55.0872%" y="501" width="0.1813%" height="15" fill="rgb(250,43,18)"/><text x="55.3372%" y="511.50"></text></g><g><title>hotcrp::datagen::review_preferences::insert_review_preference (156 samples, 1.77%)</title><rect x="53.6030%" y="597" width="1.7675%" height="15" fill="rgb(208,13,10)"/><text x="53.8530%" y="607.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (156 samples, 1.77%)</title><rect x="53.6030%" y="581" width="1.7675%" height="15" fill="rgb(212,200,36)"/><text x="53.8530%" y="591.50"></text></g><g><title>core::fmt::write (36 samples, 0.41%)</title><rect x="54.9626%" y="565" width="0.4079%" height="15" fill="rgb(225,90,30)"/><text x="55.2126%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (36 samples, 0.41%)</title><rect x="54.9626%" y="549" width="0.4079%" height="15" fill="rgb(236,182,39)"/><text x="55.2126%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (28 samples, 0.32%)</title><rect x="55.0533%" y="533" width="0.3172%" height="15" fill="rgb(212,144,35)"/><text x="55.3033%" y="543.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.10%)</title><rect x="55.2685%" y="517" width="0.1020%" height="15" fill="rgb(228,63,44)"/><text x="55.5185%" y="527.50"></text></g><g><title>__libc_recv (38 samples, 0.43%)</title><rect x="55.4271%" y="405" width="0.4305%" height="15" fill="rgb(228,109,6)"/><text x="55.6771%" y="415.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="55.4385%" y="389" width="0.4192%" height="15" fill="rgb(238,117,24)"/><text x="55.6885%" y="399.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="55.4385%" y="373" width="0.4192%" height="15" fill="rgb(242,26,26)"/><text x="55.6885%" y="383.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="55.4611%" y="357" width="0.3966%" height="15" fill="rgb(221,92,48)"/><text x="55.7111%" y="367.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="55.4611%" y="341" width="0.3966%" height="15" fill="rgb(209,209,32)"/><text x="55.7111%" y="351.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="55.4611%" y="325" width="0.3966%" height="15" fill="rgb(221,70,22)"/><text x="55.7111%" y="335.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="55.4725%" y="309" width="0.3852%" height="15" fill="rgb(248,145,5)"/><text x="55.7225%" y="319.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="55.4725%" y="293" width="0.3852%" height="15" fill="rgb(226,116,26)"/><text x="55.7225%" y="303.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="55.5404%" y="277" width="0.3172%" height="15" fill="rgb(244,5,17)"/><text x="55.7904%" y="287.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="55.5404%" y="261" width="0.3172%" height="15" fill="rgb(252,159,33)"/><text x="55.7904%" y="271.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="55.5744%" y="245" width="0.2833%" height="15" fill="rgb(206,71,0)"/><text x="55.8244%" y="255.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="55.5858%" y="229" width="0.2719%" height="15" fill="rgb(233,118,54)"/><text x="55.8358%" y="239.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="55.5971%" y="213" width="0.2606%" height="15" fill="rgb(234,83,48)"/><text x="55.8471%" y="223.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="55.6764%" y="197" width="0.1813%" height="15" fill="rgb(228,3,54)"/><text x="55.9264%" y="207.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="55.7331%" y="181" width="0.1246%" height="15" fill="rgb(226,155,13)"/><text x="55.9831%" y="191.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="55.7557%" y="165" width="0.1020%" height="15" fill="rgb(241,28,37)"/><text x="56.0057%" y="175.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 0.44%)</title><rect x="55.4271%" y="485" width="0.4419%" height="15" fill="rgb(233,93,10)"/><text x="55.6771%" y="495.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (39 samples, 0.44%)</title><rect x="55.4271%" y="469" width="0.4419%" height="15" fill="rgb(225,113,19)"/><text x="55.6771%" y="479.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (39 samples, 0.44%)</title><rect x="55.4271%" y="453" width="0.4419%" height="15" fill="rgb(241,2,18)"/><text x="55.6771%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (39 samples, 0.44%)</title><rect x="55.4271%" y="437" width="0.4419%" height="15" fill="rgb(228,207,21)"/><text x="55.6771%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (39 samples, 0.44%)</title><rect x="55.4271%" y="421" width="0.4419%" height="15" fill="rgb(213,211,35)"/><text x="55.6771%" y="431.50"></text></g><g><title>mysql::conn::Conn::read_packet (46 samples, 0.52%)</title><rect x="55.4271%" y="517" width="0.5212%" height="15" fill="rgb(209,83,10)"/><text x="55.6771%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.52%)</title><rect x="55.4271%" y="501" width="0.5212%" height="15" fill="rgb(209,164,1)"/><text x="55.6771%" y="511.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (48 samples, 0.54%)</title><rect x="55.4158%" y="533" width="0.5438%" height="15" fill="rgb(213,184,43)"/><text x="55.6658%" y="543.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (34 samples, 0.39%)</title><rect x="56.0276%" y="501" width="0.3852%" height="15" fill="rgb(231,61,34)"/><text x="56.2776%" y="511.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (34 samples, 0.39%)</title><rect x="56.0276%" y="485" width="0.3852%" height="15" fill="rgb(235,75,3)"/><text x="56.2776%" y="495.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (34 samples, 0.39%)</title><rect x="56.0276%" y="469" width="0.3852%" height="15" fill="rgb(220,106,47)"/><text x="56.2776%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (34 samples, 0.39%)</title><rect x="56.0276%" y="453" width="0.3852%" height="15" fill="rgb(210,196,33)"/><text x="56.2776%" y="463.50"></text></g><g><title>__libc_write (34 samples, 0.39%)</title><rect x="56.0276%" y="437" width="0.3852%" height="15" fill="rgb(229,154,42)"/><text x="56.2776%" y="447.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="56.0276%" y="421" width="0.3852%" height="15" fill="rgb(228,114,26)"/><text x="56.2776%" y="431.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="56.0276%" y="405" width="0.3852%" height="15" fill="rgb(208,144,1)"/><text x="56.2776%" y="415.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="56.0503%" y="389" width="0.3626%" height="15" fill="rgb(239,112,37)"/><text x="56.3003%" y="399.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="56.0503%" y="373" width="0.3626%" height="15" fill="rgb(210,96,50)"/><text x="56.3003%" y="383.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="56.0503%" y="357" width="0.3626%" height="15" fill="rgb(222,178,2)"/><text x="56.3003%" y="367.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="56.0730%" y="341" width="0.3399%" height="15" fill="rgb(226,74,18)"/><text x="56.3230%" y="351.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="56.1070%" y="325" width="0.3059%" height="15" fill="rgb(225,67,54)"/><text x="56.3570%" y="335.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="56.1070%" y="309" width="0.3059%" height="15" fill="rgb(251,92,32)"/><text x="56.3570%" y="319.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="56.1070%" y="293" width="0.3059%" height="15" fill="rgb(228,149,22)"/><text x="56.3570%" y="303.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="56.1183%" y="277" width="0.2946%" height="15" fill="rgb(243,54,13)"/><text x="56.3683%" y="287.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="56.1409%" y="261" width="0.2719%" height="15" fill="rgb(243,180,28)"/><text x="56.3909%" y="271.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="56.1409%" y="245" width="0.2719%" height="15" fill="rgb(208,167,24)"/><text x="56.3909%" y="255.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="56.1409%" y="229" width="0.2719%" height="15" fill="rgb(245,73,45)"/><text x="56.3909%" y="239.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="56.1409%" y="213" width="0.2719%" height="15" fill="rgb(237,203,48)"/><text x="56.3909%" y="223.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="56.1636%" y="197" width="0.2493%" height="15" fill="rgb(211,197,16)"/><text x="56.4136%" y="207.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="56.2316%" y="181" width="0.1813%" height="15" fill="rgb(243,99,51)"/><text x="56.4816%" y="191.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="56.2429%" y="165" width="0.1700%" height="15" fill="rgb(215,123,29)"/><text x="56.4929%" y="175.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="56.2429%" y="149" width="0.1700%" height="15" fill="rgb(239,186,37)"/><text x="56.4929%" y="159.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="56.2656%" y="133" width="0.1473%" height="15" fill="rgb(252,136,39)"/><text x="56.5156%" y="143.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="56.2769%" y="117" width="0.1360%" height="15" fill="rgb(223,213,32)"/><text x="56.5269%" y="127.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (91 samples, 1.03%)</title><rect x="55.3932%" y="565" width="1.0310%" height="15" fill="rgb(233,115,5)"/><text x="55.6432%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (89 samples, 1.01%)</title><rect x="55.4158%" y="549" width="1.0084%" height="15" fill="rgb(207,226,44)"/><text x="55.6658%" y="559.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (39 samples, 0.44%)</title><rect x="55.9823%" y="533" width="0.4419%" height="15" fill="rgb(208,126,0)"/><text x="56.2323%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (35 samples, 0.40%)</title><rect x="56.0276%" y="517" width="0.3966%" height="15" fill="rgb(244,66,21)"/><text x="56.2776%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.10%)</title><rect x="56.4695%" y="517" width="0.1020%" height="15" fill="rgb(222,97,12)"/><text x="56.7195%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.10%)</title><rect x="56.4695%" y="501" width="0.1020%" height="15" fill="rgb(219,213,19)"/><text x="56.7195%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.20%)</title><rect x="56.5715%" y="501" width="0.2039%" height="15" fill="rgb(252,169,30)"/><text x="56.8215%" y="511.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.19%)</title><rect x="56.5828%" y="485" width="0.1926%" height="15" fill="rgb(206,32,51)"/><text x="56.8328%" y="495.50"></text></g><g><title>_int_realloc (17 samples, 0.19%)</title><rect x="56.5828%" y="469" width="0.1926%" height="15" fill="rgb(250,172,42)"/><text x="56.8328%" y="479.50"></text></g><g><title>_int_free (14 samples, 0.16%)</title><rect x="56.6168%" y="453" width="0.1586%" height="15" fill="rgb(209,34,43)"/><text x="56.8668%" y="463.50"></text></g><g><title>malloc_consolidate (12 samples, 0.14%)</title><rect x="56.6395%" y="437" width="0.1360%" height="15" fill="rgb(223,11,35)"/><text x="56.8895%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (30 samples, 0.34%)</title><rect x="56.4695%" y="533" width="0.3399%" height="15" fill="rgb(251,219,26)"/><text x="56.7195%" y="543.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (21 samples, 0.24%)</title><rect x="56.5715%" y="517" width="0.2379%" height="15" fill="rgb(231,119,3)"/><text x="56.8215%" y="527.50"></text></g><g><title>core::fmt::write (34 samples, 0.39%)</title><rect x="56.4355%" y="565" width="0.3852%" height="15" fill="rgb(216,97,11)"/><text x="56.6855%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (34 samples, 0.39%)</title><rect x="56.4355%" y="549" width="0.3852%" height="15" fill="rgb(223,59,9)"/><text x="56.6855%" y="559.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows_db (129 samples, 1.46%)</title><rect x="55.3705%" y="581" width="1.4616%" height="15" fill="rgb(233,93,31)"/><text x="55.6205%" y="591.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (533 samples, 6.04%)</title><rect x="50.8158%" y="613" width="6.0390%" height="15" fill="rgb(239,81,33)"/><text x="51.0658%" y="623.50">hotcrp::..</text></g><g><title>hotcrp::datagen::watches::insert_paper_watch (131 samples, 1.48%)</title><rect x="55.3705%" y="597" width="1.4843%" height="15" fill="rgb(213,120,34)"/><text x="55.6205%" y="607.50"></text></g><g><title>hotcrp::datagen::datagen::populate_database (775 samples, 8.78%)</title><rect x="48.1872%" y="629" width="8.7809%" height="15" fill="rgb(243,49,53)"/><text x="48.4372%" y="639.50">hotcrp::data..</text></g><g><title>hotcrp::datagen::users::insert_users (10 samples, 0.11%)</title><rect x="56.8547%" y="613" width="0.1133%" height="15" fill="rgb(247,216,33)"/><text x="57.1047%" y="623.50"></text></g><g><title>hotcrp::main (1,699 samples, 19.25%)</title><rect x="37.8087%" y="645" width="19.2499%" height="15" fill="rgb(226,26,14)"/><text x="38.0587%" y="655.50">hotcrp::main</text></g><g><title>main (12 samples, 0.14%)</title><rect x="57.0587%" y="645" width="0.1360%" height="15" fill="rgb(215,49,53)"/><text x="57.3087%" y="655.50"></text></g><g><title>std::rt::lang_start_internal (12 samples, 0.14%)</title><rect x="57.0587%" y="629" width="0.1360%" height="15" fill="rgb(245,162,40)"/><text x="57.3087%" y="639.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.14%)</title><rect x="57.0587%" y="613" width="0.1360%" height="15" fill="rgb(229,68,17)"/><text x="57.3087%" y="623.50"></text></g><g><title>std::panicking::try (12 samples, 0.14%)</title><rect x="57.0587%" y="597" width="0.1360%" height="15" fill="rgb(213,182,10)"/><text x="57.3087%" y="607.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.14%)</title><rect x="57.0587%" y="581" width="0.1360%" height="15" fill="rgb(245,125,30)"/><text x="57.3087%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (12 samples, 0.14%)</title><rect x="57.0587%" y="565" width="0.1360%" height="15" fill="rgb(232,202,2)"/><text x="57.3087%" y="575.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (12 samples, 0.14%)</title><rect x="57.0587%" y="549" width="0.1360%" height="15" fill="rgb(237,140,51)"/><text x="57.3087%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.14%)</title><rect x="57.0587%" y="533" width="0.1360%" height="15" fill="rgb(236,157,25)"/><text x="57.3087%" y="543.50"></text></g><g><title>hotcrp::main (12 samples, 0.14%)</title><rect x="57.0587%" y="517" width="0.1360%" height="15" fill="rgb(219,209,0)"/><text x="57.3087%" y="527.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (11 samples, 0.12%)</title><rect x="57.4779%" y="645" width="0.1246%" height="15" fill="rgb(240,116,54)"/><text x="57.7279%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.15%)</title><rect x="57.7838%" y="485" width="0.1473%" height="15" fill="rgb(216,10,36)"/><text x="58.0338%" y="495.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (13 samples, 0.15%)</title><rect x="57.7838%" y="469" width="0.1473%" height="15" fill="rgb(222,72,44)"/><text x="58.0338%" y="479.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (13 samples, 0.15%)</title><rect x="57.7838%" y="453" width="0.1473%" height="15" fill="rgb(232,159,9)"/><text x="58.0338%" y="463.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (13 samples, 0.15%)</title><rect x="57.7838%" y="437" width="0.1473%" height="15" fill="rgb(210,39,32)"/><text x="58.0338%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.15%)</title><rect x="57.7838%" y="421" width="0.1473%" height="15" fill="rgb(216,194,45)"/><text x="58.0338%" y="431.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="57.7838%" y="405" width="0.1473%" height="15" fill="rgb(218,18,35)"/><text x="58.0338%" y="415.50"></text></g><g><title>_int_malloc (13 samples, 0.15%)</title><rect x="57.7838%" y="389" width="0.1473%" height="15" fill="rgb(207,83,51)"/><text x="58.0338%" y="399.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (22 samples, 0.25%)</title><rect x="57.7838%" y="501" width="0.2493%" height="15" fill="rgb(225,63,43)"/><text x="58.0338%" y="511.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.10%)</title><rect x="57.9311%" y="485" width="0.1020%" height="15" fill="rgb(207,57,36)"/><text x="58.1811%" y="495.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (9 samples, 0.10%)</title><rect x="57.9311%" y="469" width="0.1020%" height="15" fill="rgb(216,99,33)"/><text x="58.1811%" y="479.50"></text></g><g><title>mysql::conn::Conn::next_text (9 samples, 0.10%)</title><rect x="57.9311%" y="453" width="0.1020%" height="15" fill="rgb(225,42,16)"/><text x="58.1811%" y="463.50"></text></g><g><title>mysql_common::value::read_text_values (9 samples, 0.10%)</title><rect x="57.9311%" y="437" width="0.1020%" height="15" fill="rgb(220,201,45)"/><text x="58.1811%" y="447.50"></text></g><g><title>decor::is_guise (22 samples, 0.25%)</title><rect x="58.0331%" y="501" width="0.2493%" height="15" fill="rgb(225,33,4)"/><text x="58.2831%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.25%)</title><rect x="58.0331%" y="485" width="0.2493%" height="15" fill="rgb(224,33,50)"/><text x="58.2831%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.25%)</title><rect x="58.0331%" y="469" width="0.2493%" height="15" fill="rgb(246,198,51)"/><text x="58.2831%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.25%)</title><rect x="58.0331%" y="453" width="0.2493%" height="15" fill="rgb(205,22,4)"/><text x="58.2831%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.19%)</title><rect x="58.0897%" y="437" width="0.1926%" height="15" fill="rgb(206,3,8)"/><text x="58.3397%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.11%)</title><rect x="58.1690%" y="421" width="0.1133%" height="15" fill="rgb(251,23,15)"/><text x="58.4190%" y="431.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="58.3163%" y="405" width="0.2946%" height="15" fill="rgb(252,88,28)"/><text x="58.5663%" y="415.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="58.3617%" y="389" width="0.2493%" height="15" fill="rgb(212,127,14)"/><text x="58.6117%" y="399.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="58.3956%" y="373" width="0.2153%" height="15" fill="rgb(247,145,37)"/><text x="58.6456%" y="383.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="58.3956%" y="357" width="0.2153%" height="15" fill="rgb(209,117,53)"/><text x="58.6456%" y="367.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="58.3956%" y="341" width="0.2153%" height="15" fill="rgb(212,90,42)"/><text x="58.6456%" y="351.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="58.4523%" y="325" width="0.1586%" height="15" fill="rgb(218,164,37)"/><text x="58.7023%" y="335.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="58.4523%" y="309" width="0.1586%" height="15" fill="rgb(246,65,34)"/><text x="58.7023%" y="319.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="58.4523%" y="293" width="0.1586%" height="15" fill="rgb(231,100,33)"/><text x="58.7023%" y="303.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="58.4523%" y="277" width="0.1586%" height="15" fill="rgb(228,126,14)"/><text x="58.7023%" y="287.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="58.4863%" y="261" width="0.1246%" height="15" fill="rgb(215,173,21)"/><text x="58.7363%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="58.5090%" y="245" width="0.1020%" height="15" fill="rgb(210,6,40)"/><text x="58.7590%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.36%)</title><rect x="58.2823%" y="469" width="0.3626%" height="15" fill="rgb(212,48,18)"/><text x="58.5323%" y="479.50"></text></g><g><title>__GI___libc_realloc (32 samples, 0.36%)</title><rect x="58.2823%" y="453" width="0.3626%" height="15" fill="rgb(230,214,11)"/><text x="58.5323%" y="463.50"></text></g><g><title>_int_realloc (32 samples, 0.36%)</title><rect x="58.2823%" y="437" width="0.3626%" height="15" fill="rgb(254,105,39)"/><text x="58.5323%" y="447.50"></text></g><g><title>_int_malloc (32 samples, 0.36%)</title><rect x="58.2823%" y="421" width="0.3626%" height="15" fill="rgb(245,158,5)"/><text x="58.5323%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (9 samples, 0.10%)</title><rect x="58.6789%" y="421" width="0.1020%" height="15" fill="rgb(249,208,11)"/><text x="58.9289%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="58.6789%" y="405" width="0.1020%" height="15" fill="rgb(210,39,28)"/><text x="58.9289%" y="415.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.10%)</title><rect x="58.6789%" y="389" width="0.1020%" height="15" fill="rgb(211,56,53)"/><text x="58.9289%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.51%)</title><rect x="58.2823%" y="485" width="0.5099%" height="15" fill="rgb(226,201,30)"/><text x="58.5323%" y="495.50"></text></g><g><title>decor::vault::vec_to_expr (10 samples, 0.11%)</title><rect x="58.6789%" y="469" width="0.1133%" height="15" fill="rgb(239,101,34)"/><text x="58.9289%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (10 samples, 0.11%)</title><rect x="58.6789%" y="453" width="0.1133%" height="15" fill="rgb(226,209,5)"/><text x="58.9289%" y="463.50"></text></g><g><title>decor::types::_::&lt;impl serde::ser::Serialize for decor::types::RowVal&gt;::serialize (10 samples, 0.11%)</title><rect x="58.6789%" y="437" width="0.1133%" height="15" fill="rgb(250,105,47)"/><text x="58.9289%" y="447.50"></text></g><g><title>decor::disguise::apply (93 samples, 1.05%)</title><rect x="57.7838%" y="517" width="1.0537%" height="15" fill="rgb(230,72,3)"/><text x="58.0338%" y="527.50"></text></g><g><title>decor::vault::insert_vault_entries (49 samples, 0.56%)</title><rect x="58.2823%" y="501" width="0.5552%" height="15" fill="rgb(232,218,39)"/><text x="58.5323%" y="511.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.12%)</title><rect x="58.8375%" y="389" width="0.1246%" height="15" fill="rgb(248,166,6)"/><text x="59.0875%" y="399.50"></text></g><g><title>_int_malloc (11 samples, 0.12%)</title><rect x="58.8375%" y="373" width="0.1246%" height="15" fill="rgb(247,89,20)"/><text x="59.0875%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.24%)</title><rect x="58.8375%" y="469" width="0.2379%" height="15" fill="rgb(248,130,54)"/><text x="59.0875%" y="479.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (21 samples, 0.24%)</title><rect x="58.8375%" y="453" width="0.2379%" height="15" fill="rgb(234,196,4)"/><text x="59.0875%" y="463.50"></text></g><g><title>decor::helpers::mysql_helpers::remove_escaped_chars (21 samples, 0.24%)</title><rect x="58.8375%" y="437" width="0.2379%" height="15" fill="rgb(250,143,31)"/><text x="59.0875%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (21 samples, 0.24%)</title><rect x="58.8375%" y="421" width="0.2379%" height="15" fill="rgb(211,110,34)"/><text x="59.0875%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.24%)</title><rect x="58.8375%" y="405" width="0.2379%" height="15" fill="rgb(215,124,48)"/><text x="59.0875%" y="415.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.11%)</title><rect x="58.9622%" y="389" width="0.1133%" height="15" fill="rgb(216,46,13)"/><text x="59.2122%" y="399.50"></text></g><g><title>_int_realloc (10 samples, 0.11%)</title><rect x="58.9622%" y="373" width="0.1133%" height="15" fill="rgb(205,184,25)"/><text x="59.2122%" y="383.50"></text></g><g><title>decor::vault::print_as_filters (34 samples, 0.39%)</title><rect x="58.8375%" y="517" width="0.3852%" height="15" fill="rgb(228,1,10)"/><text x="59.0875%" y="527.50"></text></g><g><title>decor::vault::get_vault_entries_with_constraint (34 samples, 0.39%)</title><rect x="58.8375%" y="501" width="0.3852%" height="15" fill="rgb(213,116,27)"/><text x="59.0875%" y="511.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (34 samples, 0.39%)</title><rect x="58.8375%" y="485" width="0.3852%" height="15" fill="rgb(241,95,50)"/><text x="59.0875%" y="495.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.15%)</title><rect x="59.0755%" y="469" width="0.1473%" height="15" fill="rgb(238,48,32)"/><text x="59.3255%" y="479.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (13 samples, 0.15%)</title><rect x="59.0755%" y="453" width="0.1473%" height="15" fill="rgb(235,113,49)"/><text x="59.3255%" y="463.50"></text></g><g><title>mysql::conn::Conn::next_text (13 samples, 0.15%)</title><rect x="59.0755%" y="437" width="0.1473%" height="15" fill="rgb(205,127,43)"/><text x="59.3255%" y="447.50"></text></g><g><title>mysql_common::value::read_text_values (13 samples, 0.15%)</title><rect x="59.0755%" y="421" width="0.1473%" height="15" fill="rgb(250,162,2)"/><text x="59.3255%" y="431.50"></text></g><g><title>mysql_common::value::read_text_value (9 samples, 0.10%)</title><rect x="59.1208%" y="405" width="0.1020%" height="15" fill="rgb(220,13,41)"/><text x="59.3708%" y="415.50"></text></g><g><title>hotcrp::datagen::comments::insert_paper_comment (10 samples, 0.11%)</title><rect x="59.3134%" y="485" width="0.1133%" height="15" fill="rgb(249,221,25)"/><text x="59.5634%" y="495.50"></text></g><g><title>hotcrp::datagen::datagen::populate_database (29 samples, 0.33%)</title><rect x="59.2228%" y="517" width="0.3286%" height="15" fill="rgb(215,208,19)"/><text x="59.4728%" y="527.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (21 samples, 0.24%)</title><rect x="59.3134%" y="501" width="0.2379%" height="15" fill="rgb(236,175,2)"/><text x="59.5634%" y="511.50"></text></g><g><title>std::rt::lang_start_internal (159 samples, 1.80%)</title><rect x="57.7838%" y="645" width="1.8015%" height="15" fill="rgb(241,52,2)"/><text x="58.0338%" y="655.50">s..</text></g><g><title>std::panic::catch_unwind (159 samples, 1.80%)</title><rect x="57.7838%" y="629" width="1.8015%" height="15" fill="rgb(248,140,14)"/><text x="58.0338%" y="639.50">s..</text></g><g><title>std::panicking::try (159 samples, 1.80%)</title><rect x="57.7838%" y="613" width="1.8015%" height="15" fill="rgb(253,22,42)"/><text x="58.0338%" y="623.50">s..</text></g><g><title>std::panicking::try::do_call (159 samples, 1.80%)</title><rect x="57.7838%" y="597" width="1.8015%" height="15" fill="rgb(234,61,47)"/><text x="58.0338%" y="607.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (159 samples, 1.80%)</title><rect x="57.7838%" y="581" width="1.8015%" height="15" fill="rgb(208,226,15)"/><text x="58.0338%" y="591.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (159 samples, 1.80%)</title><rect x="57.7838%" y="565" width="1.8015%" height="15" fill="rgb(217,221,4)"/><text x="58.0338%" y="575.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (159 samples, 1.80%)</title><rect x="57.7838%" y="549" width="1.8015%" height="15" fill="rgb(212,174,34)"/><text x="58.0338%" y="559.50">s..</text></g><g><title>hotcrp::main (159 samples, 1.80%)</title><rect x="57.7838%" y="533" width="1.8015%" height="15" fill="rgb(253,83,4)"/><text x="58.0338%" y="543.50">h..</text></g><g><title>[unknown] (4,548 samples, 51.53%)</title><rect x="8.1124%" y="661" width="51.5296%" height="15" fill="rgb(250,195,49)"/><text x="8.3624%" y="671.50">[unknown]</text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="59.6986%" y="629" width="0.1246%" height="15" fill="rgb(241,192,25)"/><text x="59.9486%" y="639.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="59.6986%" y="613" width="0.1246%" height="15" fill="rgb(208,124,10)"/><text x="59.9486%" y="623.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="59.7213%" y="597" width="0.1020%" height="15" fill="rgb(222,33,0)"/><text x="59.9713%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="59.7213%" y="581" width="0.1020%" height="15" fill="rgb(234,209,28)"/><text x="59.9713%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="59.7213%" y="565" width="0.1020%" height="15" fill="rgb(224,11,23)"/><text x="59.9713%" y="575.50"></text></g><g><title>advise_stack_range (18 samples, 0.20%)</title><rect x="59.9366%" y="629" width="0.2039%" height="15" fill="rgb(232,99,1)"/><text x="60.1866%" y="639.50"></text></g><g><title>__GI_madvise (16 samples, 0.18%)</title><rect x="59.9592%" y="613" width="0.1813%" height="15" fill="rgb(237,95,45)"/><text x="60.2092%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="59.9592%" y="597" width="0.1813%" height="15" fill="rgb(208,109,11)"/><text x="60.2092%" y="607.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="59.9592%" y="581" width="0.1813%" height="15" fill="rgb(216,190,48)"/><text x="60.2092%" y="591.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="59.9705%" y="565" width="0.1700%" height="15" fill="rgb(251,171,36)"/><text x="60.2205%" y="575.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="59.9819%" y="549" width="0.1586%" height="15" fill="rgb(230,62,22)"/><text x="60.2319%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="60.0045%" y="533" width="0.1360%" height="15" fill="rgb(225,114,35)"/><text x="60.2545%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="60.0159%" y="517" width="0.1246%" height="15" fill="rgb(215,118,42)"/><text x="60.2659%" y="527.50"></text></g><g><title>std::sys::unix::thread::guard::current (15 samples, 0.17%)</title><rect x="60.1745%" y="565" width="0.1700%" height="15" fill="rgb(243,119,21)"/><text x="60.4245%" y="575.50"></text></g><g><title>pthread_getattr_np (14 samples, 0.16%)</title><rect x="60.1858%" y="549" width="0.1586%" height="15" fill="rgb(252,177,53)"/><text x="60.4358%" y="559.50"></text></g><g><title>__pthread_getaffinity_new (10 samples, 0.11%)</title><rect x="60.2311%" y="533" width="0.1133%" height="15" fill="rgb(237,209,29)"/><text x="60.4811%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="60.2425%" y="517" width="0.1020%" height="15" fill="rgb(212,65,23)"/><text x="60.4925%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="60.2425%" y="501" width="0.1020%" height="15" fill="rgb(230,222,46)"/><text x="60.4925%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (29 samples, 0.33%)</title><rect x="60.4464%" y="469" width="0.3286%" height="15" fill="rgb(215,135,32)"/><text x="60.6964%" y="479.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (29 samples, 0.33%)</title><rect x="60.4464%" y="453" width="0.3286%" height="15" fill="rgb(246,101,22)"/><text x="60.6964%" y="463.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (29 samples, 0.33%)</title><rect x="60.4464%" y="437" width="0.3286%" height="15" fill="rgb(206,107,13)"/><text x="60.6964%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::read (29 samples, 0.33%)</title><rect x="60.4464%" y="421" width="0.3286%" height="15" fill="rgb(250,100,44)"/><text x="60.6964%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (29 samples, 0.33%)</title><rect x="60.4464%" y="405" width="0.3286%" height="15" fill="rgb(231,147,38)"/><text x="60.6964%" y="415.50"></text></g><g><title>__libc_recv (29 samples, 0.33%)</title><rect x="60.4464%" y="389" width="0.3286%" height="15" fill="rgb(229,8,40)"/><text x="60.6964%" y="399.50"></text></g><g><title>__libc_recv (29 samples, 0.33%)</title><rect x="60.4464%" y="373" width="0.3286%" height="15" fill="rgb(221,135,30)"/><text x="60.6964%" y="383.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="60.4577%" y="357" width="0.3172%" height="15" fill="rgb(249,193,18)"/><text x="60.7077%" y="367.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="60.4577%" y="341" width="0.3172%" height="15" fill="rgb(209,133,39)"/><text x="60.7077%" y="351.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="60.4691%" y="325" width="0.3059%" height="15" fill="rgb(232,100,14)"/><text x="60.7191%" y="335.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="60.4691%" y="309" width="0.3059%" height="15" fill="rgb(224,185,1)"/><text x="60.7191%" y="319.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="60.4804%" y="293" width="0.2946%" height="15" fill="rgb(223,139,8)"/><text x="60.7304%" y="303.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="60.4804%" y="277" width="0.2946%" height="15" fill="rgb(232,213,38)"/><text x="60.7304%" y="287.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="60.4917%" y="261" width="0.2833%" height="15" fill="rgb(207,94,22)"/><text x="60.7417%" y="271.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="60.5031%" y="245" width="0.2719%" height="15" fill="rgb(219,183,54)"/><text x="60.7531%" y="255.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="60.5144%" y="229" width="0.2606%" height="15" fill="rgb(216,185,54)"/><text x="60.7644%" y="239.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="60.5257%" y="213" width="0.2493%" height="15" fill="rgb(254,217,39)"/><text x="60.7757%" y="223.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="60.5710%" y="197" width="0.2039%" height="15" fill="rgb(240,178,23)"/><text x="60.8210%" y="207.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="60.6164%" y="181" width="0.1586%" height="15" fill="rgb(218,11,47)"/><text x="60.8664%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="60.6504%" y="165" width="0.1246%" height="15" fill="rgb(218,51,51)"/><text x="60.9004%" y="175.50"></text></g><g><title>mysql::conn::Conn::read_packet (30 samples, 0.34%)</title><rect x="60.4464%" y="501" width="0.3399%" height="15" fill="rgb(238,126,27)"/><text x="60.6964%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.34%)</title><rect x="60.4464%" y="485" width="0.3399%" height="15" fill="rgb(249,202,22)"/><text x="60.6964%" y="495.50"></text></g><g><title>mysql::conn::Conn::ping (75 samples, 0.85%)</title><rect x="60.4124%" y="517" width="0.8498%" height="15" fill="rgb(254,195,49)"/><text x="60.6624%" y="527.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (42 samples, 0.48%)</title><rect x="60.7863%" y="501" width="0.4759%" height="15" fill="rgb(208,123,14)"/><text x="61.0363%" y="511.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (40 samples, 0.45%)</title><rect x="60.8090%" y="485" width="0.4532%" height="15" fill="rgb(224,200,8)"/><text x="61.0590%" y="495.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (40 samples, 0.45%)</title><rect x="60.8090%" y="469" width="0.4532%" height="15" fill="rgb(217,61,36)"/><text x="61.0590%" y="479.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (40 samples, 0.45%)</title><rect x="60.8090%" y="453" width="0.4532%" height="15" fill="rgb(206,35,45)"/><text x="61.0590%" y="463.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (40 samples, 0.45%)</title><rect x="60.8090%" y="437" width="0.4532%" height="15" fill="rgb(217,65,33)"/><text x="61.0590%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (40 samples, 0.45%)</title><rect x="60.8090%" y="421" width="0.4532%" height="15" fill="rgb(222,158,48)"/><text x="61.0590%" y="431.50"></text></g><g><title>__libc_write (40 samples, 0.45%)</title><rect x="60.8090%" y="405" width="0.4532%" height="15" fill="rgb(254,2,54)"/><text x="61.0590%" y="415.50"></text></g><g><title>__libc_write (39 samples, 0.44%)</title><rect x="60.8203%" y="389" width="0.4419%" height="15" fill="rgb(250,143,38)"/><text x="61.0703%" y="399.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="60.8203%" y="373" width="0.4419%" height="15" fill="rgb(248,25,0)"/><text x="61.0703%" y="383.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="60.8203%" y="357" width="0.4419%" height="15" fill="rgb(206,152,27)"/><text x="61.0703%" y="367.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="60.8543%" y="341" width="0.4079%" height="15" fill="rgb(240,77,30)"/><text x="61.1043%" y="351.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="60.8543%" y="325" width="0.4079%" height="15" fill="rgb(231,5,3)"/><text x="61.1043%" y="335.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="60.8543%" y="309" width="0.4079%" height="15" fill="rgb(207,226,32)"/><text x="61.1043%" y="319.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="60.8543%" y="293" width="0.4079%" height="15" fill="rgb(222,207,47)"/><text x="61.1043%" y="303.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="60.8770%" y="277" width="0.3852%" height="15" fill="rgb(229,115,45)"/><text x="61.1270%" y="287.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="60.8996%" y="261" width="0.3626%" height="15" fill="rgb(224,191,6)"/><text x="61.1496%" y="271.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="60.9109%" y="245" width="0.3512%" height="15" fill="rgb(230,227,24)"/><text x="61.1609%" y="255.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="60.9109%" y="229" width="0.3512%" height="15" fill="rgb(228,80,19)"/><text x="61.1609%" y="239.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="60.9676%" y="213" width="0.2946%" height="15" fill="rgb(247,229,0)"/><text x="61.2176%" y="223.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="60.9676%" y="197" width="0.2946%" height="15" fill="rgb(237,194,15)"/><text x="61.2176%" y="207.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="60.9676%" y="181" width="0.2946%" height="15" fill="rgb(219,203,20)"/><text x="61.2176%" y="191.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="60.9789%" y="165" width="0.2833%" height="15" fill="rgb(234,128,8)"/><text x="61.2289%" y="175.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="60.9903%" y="149" width="0.2719%" height="15" fill="rgb(248,202,8)"/><text x="61.2403%" y="159.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="61.0242%" y="133" width="0.2379%" height="15" fill="rgb(206,104,37)"/><text x="61.2742%" y="143.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="61.0242%" y="117" width="0.2379%" height="15" fill="rgb(223,8,27)"/><text x="61.2742%" y="127.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="61.0242%" y="101" width="0.2379%" height="15" fill="rgb(216,217,28)"/><text x="61.2742%" y="111.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="61.0696%" y="85" width="0.1926%" height="15" fill="rgb(249,199,1)"/><text x="61.3196%" y="95.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="61.0922%" y="69" width="0.1700%" height="15" fill="rgb(240,85,17)"/><text x="61.3422%" y="79.50"></text></g><g><title>mysql::conn::pool::Pool::get_conn (83 samples, 0.94%)</title><rect x="60.4011%" y="549" width="0.9404%" height="15" fill="rgb(206,108,45)"/><text x="60.6511%" y="559.50"></text></g><g><title>mysql::conn::pool::Pool::_get_conn (83 samples, 0.94%)</title><rect x="60.4011%" y="533" width="0.9404%" height="15" fill="rgb(245,210,41)"/><text x="60.6511%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.27%)</title><rect x="61.4661%" y="501" width="0.2719%" height="15" fill="rgb(206,13,37)"/><text x="61.7161%" y="511.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="61.5681%" y="485" width="0.1700%" height="15" fill="rgb(250,61,18)"/><text x="61.8181%" y="495.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="61.5681%" y="469" width="0.1700%" height="15" fill="rgb(235,172,48)"/><text x="61.8181%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="61.6021%" y="453" width="0.1360%" height="15" fill="rgb(249,201,17)"/><text x="61.8521%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="61.6021%" y="437" width="0.1360%" height="15" fill="rgb(219,208,6)"/><text x="61.8521%" y="447.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="61.6021%" y="421" width="0.1360%" height="15" fill="rgb(248,31,23)"/><text x="61.8521%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="61.6134%" y="405" width="0.1246%" height="15" fill="rgb(245,15,42)"/><text x="61.8634%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.6247%" y="389" width="0.1133%" height="15" fill="rgb(222,217,39)"/><text x="61.8747%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.6247%" y="373" width="0.1133%" height="15" fill="rgb(210,219,27)"/><text x="61.8747%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.6247%" y="357" width="0.1133%" height="15" fill="rgb(252,166,36)"/><text x="61.8747%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="61.6361%" y="341" width="0.1020%" height="15" fill="rgb(245,132,34)"/><text x="61.8861%" y="351.50"></text></g><g><title>__libc_recv (34 samples, 0.39%)</title><rect x="61.7947%" y="373" width="0.3852%" height="15" fill="rgb(236,54,3)"/><text x="62.0447%" y="383.50"></text></g><g><title>__libc_recv (34 samples, 0.39%)</title><rect x="61.7947%" y="357" width="0.3852%" height="15" fill="rgb(241,173,43)"/><text x="62.0447%" y="367.50"></text></g><g><title>[unknown] (33 samples, 0.37%)</title><rect x="61.8060%" y="341" width="0.3739%" height="15" fill="rgb(215,190,9)"/><text x="62.0560%" y="351.50"></text></g><g><title>[unknown] (33 samples, 0.37%)</title><rect x="61.8060%" y="325" width="0.3739%" height="15" fill="rgb(242,101,16)"/><text x="62.0560%" y="335.50"></text></g><g><title>[unknown] (31 samples, 0.35%)</title><rect x="61.8287%" y="309" width="0.3512%" height="15" fill="rgb(223,190,21)"/><text x="62.0787%" y="319.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="61.8400%" y="293" width="0.3399%" height="15" fill="rgb(215,228,25)"/><text x="62.0900%" y="303.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="61.8400%" y="277" width="0.3399%" height="15" fill="rgb(225,36,22)"/><text x="62.0900%" y="287.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="61.8513%" y="261" width="0.3286%" height="15" fill="rgb(251,106,46)"/><text x="62.1013%" y="271.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="61.8513%" y="245" width="0.3286%" height="15" fill="rgb(208,90,1)"/><text x="62.1013%" y="255.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="61.8967%" y="229" width="0.2833%" height="15" fill="rgb(243,10,4)"/><text x="62.1467%" y="239.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="61.9080%" y="213" width="0.2719%" height="15" fill="rgb(212,137,27)"/><text x="62.1580%" y="223.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="61.9307%" y="197" width="0.2493%" height="15" fill="rgb(231,220,49)"/><text x="62.1807%" y="207.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="61.9420%" y="181" width="0.2379%" height="15" fill="rgb(237,96,20)"/><text x="62.1920%" y="191.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="61.9873%" y="165" width="0.1926%" height="15" fill="rgb(239,229,30)"/><text x="62.2373%" y="175.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="62.0213%" y="149" width="0.1586%" height="15" fill="rgb(219,65,33)"/><text x="62.2713%" y="159.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 0.40%)</title><rect x="61.7947%" y="453" width="0.3966%" height="15" fill="rgb(243,134,7)"/><text x="62.0447%" y="463.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (35 samples, 0.40%)</title><rect x="61.7947%" y="437" width="0.3966%" height="15" fill="rgb(216,177,54)"/><text x="62.0447%" y="447.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (35 samples, 0.40%)</title><rect x="61.7947%" y="421" width="0.3966%" height="15" fill="rgb(211,160,20)"/><text x="62.0447%" y="431.50"></text></g><g><title>std::sys::unix::net::Socket::read (35 samples, 0.40%)</title><rect x="61.7947%" y="405" width="0.3966%" height="15" fill="rgb(239,85,39)"/><text x="62.0447%" y="415.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (35 samples, 0.40%)</title><rect x="61.7947%" y="389" width="0.3966%" height="15" fill="rgb(232,125,22)"/><text x="62.0447%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.14%)</title><rect x="62.2026%" y="405" width="0.1360%" height="15" fill="rgb(244,57,34)"/><text x="62.4526%" y="415.50"></text></g><g><title>mysql::conn::Conn::read_packet (51 samples, 0.58%)</title><rect x="61.7720%" y="485" width="0.5778%" height="15" fill="rgb(214,203,32)"/><text x="62.0220%" y="495.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.58%)</title><rect x="61.7720%" y="469" width="0.5778%" height="15" fill="rgb(207,58,43)"/><text x="62.0220%" y="479.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (14 samples, 0.16%)</title><rect x="62.1913%" y="453" width="0.1586%" height="15" fill="rgb(215,193,15)"/><text x="62.4413%" y="463.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (13 samples, 0.15%)</title><rect x="62.2026%" y="437" width="0.1473%" height="15" fill="rgb(232,15,44)"/><text x="62.4526%" y="447.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (13 samples, 0.15%)</title><rect x="62.2026%" y="421" width="0.1473%" height="15" fill="rgb(212,3,48)"/><text x="62.4526%" y="431.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (55 samples, 0.62%)</title><rect x="61.7380%" y="501" width="0.6232%" height="15" fill="rgb(218,128,7)"/><text x="61.9880%" y="511.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (17 samples, 0.19%)</title><rect x="62.3612%" y="469" width="0.1926%" height="15" fill="rgb(226,216,39)"/><text x="62.6112%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.19%)</title><rect x="62.3612%" y="453" width="0.1926%" height="15" fill="rgb(243,47,51)"/><text x="62.6112%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="62.4518%" y="437" width="0.1020%" height="15" fill="rgb(241,183,40)"/><text x="62.7018%" y="447.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (21 samples, 0.24%)</title><rect x="62.3612%" y="485" width="0.2379%" height="15" fill="rgb(231,217,32)"/><text x="62.6112%" y="495.50"></text></g><g><title>std::io::Write::write_all (22 samples, 0.25%)</title><rect x="62.5991%" y="485" width="0.2493%" height="15" fill="rgb(229,61,38)"/><text x="62.8491%" y="495.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (22 samples, 0.25%)</title><rect x="62.5991%" y="469" width="0.2493%" height="15" fill="rgb(225,210,5)"/><text x="62.8491%" y="479.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (22 samples, 0.25%)</title><rect x="62.5991%" y="453" width="0.2493%" height="15" fill="rgb(231,79,45)"/><text x="62.8491%" y="463.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (22 samples, 0.25%)</title><rect x="62.5991%" y="437" width="0.2493%" height="15" fill="rgb(224,100,7)"/><text x="62.8491%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (22 samples, 0.25%)</title><rect x="62.5991%" y="421" width="0.2493%" height="15" fill="rgb(241,198,18)"/><text x="62.8491%" y="431.50"></text></g><g><title>__libc_write (22 samples, 0.25%)</title><rect x="62.5991%" y="405" width="0.2493%" height="15" fill="rgb(252,97,53)"/><text x="62.8491%" y="415.50"></text></g><g><title>__libc_write (22 samples, 0.25%)</title><rect x="62.5991%" y="389" width="0.2493%" height="15" fill="rgb(220,88,7)"/><text x="62.8491%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="373" width="0.2493%" height="15" fill="rgb(213,176,14)"/><text x="62.8491%" y="383.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="357" width="0.2493%" height="15" fill="rgb(246,73,7)"/><text x="62.8491%" y="367.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="341" width="0.2493%" height="15" fill="rgb(245,64,36)"/><text x="62.8491%" y="351.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="325" width="0.2493%" height="15" fill="rgb(245,80,10)"/><text x="62.8491%" y="335.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="309" width="0.2493%" height="15" fill="rgb(232,107,50)"/><text x="62.8491%" y="319.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="293" width="0.2493%" height="15" fill="rgb(253,3,0)"/><text x="62.8491%" y="303.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="277" width="0.2493%" height="15" fill="rgb(212,99,53)"/><text x="62.8491%" y="287.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="261" width="0.2493%" height="15" fill="rgb(249,111,54)"/><text x="62.8491%" y="271.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="245" width="0.2493%" height="15" fill="rgb(249,55,30)"/><text x="62.8491%" y="255.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="229" width="0.2493%" height="15" fill="rgb(237,47,42)"/><text x="62.8491%" y="239.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="213" width="0.2493%" height="15" fill="rgb(211,20,18)"/><text x="62.8491%" y="223.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="197" width="0.2493%" height="15" fill="rgb(231,203,46)"/><text x="62.8491%" y="207.50"></text></g><g><title>[unknown] (22 samples, 0.25%)</title><rect x="62.5991%" y="181" width="0.2493%" height="15" fill="rgb(237,142,3)"/><text x="62.8491%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="62.7238%" y="165" width="0.1246%" height="15" fill="rgb(241,107,1)"/><text x="62.9738%" y="175.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="62.7238%" y="149" width="0.1246%" height="15" fill="rgb(229,83,13)"/><text x="62.9738%" y="159.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="62.7238%" y="133" width="0.1246%" height="15" fill="rgb(241,91,40)"/><text x="62.9738%" y="143.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (163 samples, 1.85%)</title><rect x="61.3415%" y="533" width="1.8468%" height="15" fill="rgb(225,3,45)"/><text x="61.5915%" y="543.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (157 samples, 1.78%)</title><rect x="61.4095%" y="517" width="1.7788%" height="15" fill="rgb(244,223,14)"/><text x="61.6595%" y="527.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (73 samples, 0.83%)</title><rect x="62.3612%" y="501" width="0.8271%" height="15" fill="rgb(224,124,37)"/><text x="62.6112%" y="511.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (30 samples, 0.34%)</title><rect x="62.8484%" y="485" width="0.3399%" height="15" fill="rgb(251,171,30)"/><text x="63.0984%" y="495.50"></text></g><g><title>&lt;std::process::ChildStdin as std::io::Write&gt;::write (30 samples, 0.34%)</title><rect x="62.8484%" y="469" width="0.3399%" height="15" fill="rgb(236,46,54)"/><text x="63.0984%" y="479.50"></text></g><g><title>&lt;&amp;std::process::ChildStdin as std::io::Write&gt;::write (30 samples, 0.34%)</title><rect x="62.8484%" y="453" width="0.3399%" height="15" fill="rgb(245,213,5)"/><text x="63.0984%" y="463.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::write (30 samples, 0.34%)</title><rect x="62.8484%" y="437" width="0.3399%" height="15" fill="rgb(230,144,27)"/><text x="63.0984%" y="447.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (30 samples, 0.34%)</title><rect x="62.8484%" y="421" width="0.3399%" height="15" fill="rgb(220,86,6)"/><text x="63.0984%" y="431.50"></text></g><g><title>__libc_write (30 samples, 0.34%)</title><rect x="62.8484%" y="405" width="0.3399%" height="15" fill="rgb(240,20,13)"/><text x="63.0984%" y="415.50"></text></g><g><title>__libc_write (30 samples, 0.34%)</title><rect x="62.8484%" y="389" width="0.3399%" height="15" fill="rgb(217,89,34)"/><text x="63.0984%" y="399.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="62.8484%" y="373" width="0.3399%" height="15" fill="rgb(229,13,5)"/><text x="63.0984%" y="383.50"></text></g><g><title>[unknown] (28 samples, 0.32%)</title><rect x="62.8711%" y="357" width="0.3172%" height="15" fill="rgb(244,67,35)"/><text x="63.1211%" y="367.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="62.9051%" y="341" width="0.2833%" height="15" fill="rgb(221,40,2)"/><text x="63.1551%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="62.9051%" y="325" width="0.2833%" height="15" fill="rgb(237,157,21)"/><text x="63.1551%" y="335.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="62.9051%" y="309" width="0.2833%" height="15" fill="rgb(222,94,11)"/><text x="63.1551%" y="319.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="62.9164%" y="293" width="0.2719%" height="15" fill="rgb(249,113,6)"/><text x="63.1664%" y="303.50"></text></g><g><title>[unknown] (23 samples, 0.26%)</title><rect x="62.9277%" y="277" width="0.2606%" height="15" fill="rgb(238,137,36)"/><text x="63.1777%" y="287.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="62.9504%" y="261" width="0.2379%" height="15" fill="rgb(210,102,26)"/><text x="63.2004%" y="271.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="62.9504%" y="245" width="0.2379%" height="15" fill="rgb(218,30,30)"/><text x="63.2004%" y="255.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="62.9730%" y="229" width="0.2153%" height="15" fill="rgb(214,67,26)"/><text x="63.2230%" y="239.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="62.9730%" y="213" width="0.2153%" height="15" fill="rgb(251,9,53)"/><text x="63.2230%" y="223.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="63.0070%" y="197" width="0.1813%" height="15" fill="rgb(228,204,25)"/><text x="63.2570%" y="207.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="63.0070%" y="181" width="0.1813%" height="15" fill="rgb(207,153,8)"/><text x="63.2570%" y="191.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="63.0410%" y="165" width="0.1473%" height="15" fill="rgb(242,9,16)"/><text x="63.2910%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="63.0410%" y="149" width="0.1473%" height="15" fill="rgb(217,211,10)"/><text x="63.2910%" y="159.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="63.0410%" y="133" width="0.1473%" height="15" fill="rgb(219,228,52)"/><text x="63.2910%" y="143.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="63.0523%" y="117" width="0.1360%" height="15" fill="rgb(231,92,29)"/><text x="63.3023%" y="127.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="63.0863%" y="101" width="0.1020%" height="15" fill="rgb(232,8,23)"/><text x="63.3363%" y="111.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (252 samples, 2.86%)</title><rect x="60.3444%" y="565" width="2.8552%" height="15" fill="rgb(216,211,34)"/><text x="60.5944%" y="575.50">st..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (164 samples, 1.86%)</title><rect x="61.3415%" y="549" width="1.8581%" height="15" fill="rgb(236,151,0)"/><text x="61.5915%" y="559.50">m..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (278 samples, 3.15%)</title><rect x="60.1405%" y="613" width="3.1498%" height="15" fill="rgb(209,168,3)"/><text x="60.3905%" y="623.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (278 samples, 3.15%)</title><rect x="60.1405%" y="597" width="3.1498%" height="15" fill="rgb(208,129,28)"/><text x="60.3905%" y="607.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (275 samples, 3.12%)</title><rect x="60.1745%" y="581" width="3.1158%" height="15" fill="rgb(229,78,22)"/><text x="60.4245%" y="591.50">cor..</text></g><g><title>__GI_munmap (48 samples, 0.54%)</title><rect x="63.2903%" y="565" width="0.5438%" height="15" fill="rgb(228,187,13)"/><text x="63.5403%" y="575.50"></text></g><g><title>[unknown] (48 samples, 0.54%)</title><rect x="63.2903%" y="549" width="0.5438%" height="15" fill="rgb(240,119,24)"/><text x="63.5403%" y="559.50"></text></g><g><title>[unknown] (48 samples, 0.54%)</title><rect x="63.2903%" y="533" width="0.5438%" height="15" fill="rgb(209,194,42)"/><text x="63.5403%" y="543.50"></text></g><g><title>[unknown] (46 samples, 0.52%)</title><rect x="63.3129%" y="517" width="0.5212%" height="15" fill="rgb(247,200,46)"/><text x="63.5629%" y="527.50"></text></g><g><title>[unknown] (46 samples, 0.52%)</title><rect x="63.3129%" y="501" width="0.5212%" height="15" fill="rgb(218,76,16)"/><text x="63.5629%" y="511.50"></text></g><g><title>[unknown] (46 samples, 0.52%)</title><rect x="63.3129%" y="485" width="0.5212%" height="15" fill="rgb(225,21,48)"/><text x="63.5629%" y="495.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="63.3696%" y="469" width="0.4645%" height="15" fill="rgb(239,223,50)"/><text x="63.6196%" y="479.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="63.5056%" y="453" width="0.3286%" height="15" fill="rgb(244,45,21)"/><text x="63.7556%" y="463.50"></text></g><g><title>[unknown] (26 samples, 0.29%)</title><rect x="63.5395%" y="437" width="0.2946%" height="15" fill="rgb(232,33,43)"/><text x="63.7895%" y="447.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="63.5962%" y="421" width="0.2379%" height="15" fill="rgb(209,8,3)"/><text x="63.8462%" y="431.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="63.6755%" y="405" width="0.1586%" height="15" fill="rgb(214,25,53)"/><text x="63.9255%" y="415.50"></text></g><g><title>core::ptr::drop_in_place (54 samples, 0.61%)</title><rect x="63.2903%" y="613" width="0.6118%" height="15" fill="rgb(254,186,54)"/><text x="63.5403%" y="623.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (54 samples, 0.61%)</title><rect x="63.2903%" y="597" width="0.6118%" height="15" fill="rgb(208,174,49)"/><text x="63.5403%" y="607.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (54 samples, 0.61%)</title><rect x="63.2903%" y="581" width="0.6118%" height="15" fill="rgb(233,191,51)"/><text x="63.5403%" y="591.50"></text></g><g><title>__GI___mmap64 (12 samples, 0.14%)</title><rect x="63.9248%" y="549" width="0.1360%" height="15" fill="rgb(222,134,10)"/><text x="64.1748%" y="559.50"></text></g><g><title>__GI___mmap64 (12 samples, 0.14%)</title><rect x="63.9248%" y="533" width="0.1360%" height="15" fill="rgb(230,226,20)"/><text x="64.1748%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="63.9248%" y="517" width="0.1360%" height="15" fill="rgb(251,111,25)"/><text x="64.1748%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="63.9248%" y="501" width="0.1360%" height="15" fill="rgb(224,40,46)"/><text x="64.1748%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="63.9361%" y="485" width="0.1246%" height="15" fill="rgb(236,108,47)"/><text x="64.1861%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="63.9361%" y="469" width="0.1246%" height="15" fill="rgb(234,93,0)"/><text x="64.1861%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="63.9361%" y="453" width="0.1246%" height="15" fill="rgb(224,213,32)"/><text x="64.1861%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="63.9361%" y="437" width="0.1246%" height="15" fill="rgb(251,11,48)"/><text x="64.1861%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="63.9474%" y="421" width="0.1133%" height="15" fill="rgb(236,173,5)"/><text x="64.1974%" y="431.50"></text></g><g><title>__GI___mprotect (11 samples, 0.12%)</title><rect x="64.0607%" y="549" width="0.1246%" height="15" fill="rgb(230,95,12)"/><text x="64.3107%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="64.0607%" y="533" width="0.1246%" height="15" fill="rgb(232,209,1)"/><text x="64.3107%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="64.0607%" y="517" width="0.1246%" height="15" fill="rgb(232,6,1)"/><text x="64.3107%" y="527.50"></text></g><g><title>__GI___clone (402 samples, 4.55%)</title><rect x="59.6420%" y="661" width="4.5547%" height="15" fill="rgb(210,224,50)"/><text x="59.8920%" y="671.50">__GI_..</text></g><g><title>start_thread (399 samples, 4.52%)</title><rect x="59.6760%" y="645" width="4.5207%" height="15" fill="rgb(228,127,35)"/><text x="59.9260%" y="655.50">start..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (358 samples, 4.06%)</title><rect x="60.1405%" y="629" width="4.0562%" height="15" fill="rgb(245,102,45)"/><text x="60.3905%" y="639.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (26 samples, 0.29%)</title><rect x="63.9021%" y="613" width="0.2946%" height="15" fill="rgb(214,1,49)"/><text x="64.1521%" y="623.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (26 samples, 0.29%)</title><rect x="63.9021%" y="597" width="0.2946%" height="15" fill="rgb(226,163,40)"/><text x="64.1521%" y="607.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (24 samples, 0.27%)</title><rect x="63.9248%" y="581" width="0.2719%" height="15" fill="rgb(239,212,28)"/><text x="64.1748%" y="591.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (24 samples, 0.27%)</title><rect x="63.9248%" y="565" width="0.2719%" height="15" fill="rgb(220,20,13)"/><text x="64.1748%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="64.9332%" y="469" width="0.1360%" height="15" fill="rgb(210,164,35)"/><text x="65.1832%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="64.9332%" y="453" width="0.1360%" height="15" fill="rgb(248,109,41)"/><text x="65.1832%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.11%)</title><rect x="64.9558%" y="437" width="0.1133%" height="15" fill="rgb(238,23,50)"/><text x="65.2058%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.11%)</title><rect x="64.9558%" y="421" width="0.1133%" height="15" fill="rgb(211,48,49)"/><text x="65.2058%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.16%)</title><rect x="65.1144%" y="469" width="0.1586%" height="15" fill="rgb(223,36,21)"/><text x="65.3644%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.16%)</title><rect x="65.3864%" y="437" width="0.1586%" height="15" fill="rgb(207,123,46)"/><text x="65.6364%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.16%)</title><rect x="65.3864%" y="421" width="0.1586%" height="15" fill="rgb(240,218,32)"/><text x="65.6364%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.16%)</title><rect x="65.3864%" y="405" width="0.1586%" height="15" fill="rgb(252,5,43)"/><text x="65.6364%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.16%)</title><rect x="65.3864%" y="389" width="0.1586%" height="15" fill="rgb(252,84,19)"/><text x="65.6364%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.10%)</title><rect x="65.4430%" y="373" width="0.1020%" height="15" fill="rgb(243,152,39)"/><text x="65.6930%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.10%)</title><rect x="65.4430%" y="357" width="0.1020%" height="15" fill="rgb(234,160,15)"/><text x="65.6930%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.10%)</title><rect x="65.4430%" y="341" width="0.1020%" height="15" fill="rgb(237,34,20)"/><text x="65.6930%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.10%)</title><rect x="65.4430%" y="325" width="0.1020%" height="15" fill="rgb(229,97,13)"/><text x="65.6930%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.10%)</title><rect x="65.4430%" y="309" width="0.1020%" height="15" fill="rgb(234,71,50)"/><text x="65.6930%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.10%)</title><rect x="65.4430%" y="293" width="0.1020%" height="15" fill="rgb(253,155,4)"/><text x="65.6930%" y="303.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.10%)</title><rect x="65.4430%" y="277" width="0.1020%" height="15" fill="rgb(222,185,37)"/><text x="65.6930%" y="287.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (21 samples, 0.24%)</title><rect x="65.3184%" y="453" width="0.2379%" height="15" fill="rgb(251,177,13)"/><text x="65.5684%" y="463.50"></text></g><g><title>[unknown] (39 samples, 0.44%)</title><rect x="65.6243%" y="421" width="0.4419%" height="15" fill="rgb(250,179,40)"/><text x="65.8743%" y="431.50"></text></g><g><title>[unknown] (36 samples, 0.41%)</title><rect x="65.6583%" y="405" width="0.4079%" height="15" fill="rgb(242,44,2)"/><text x="65.9083%" y="415.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="65.6696%" y="389" width="0.3966%" height="15" fill="rgb(216,177,13)"/><text x="65.9196%" y="399.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="65.6696%" y="373" width="0.3966%" height="15" fill="rgb(216,106,43)"/><text x="65.9196%" y="383.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="65.6809%" y="357" width="0.3852%" height="15" fill="rgb(216,183,2)"/><text x="65.9309%" y="367.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="65.7829%" y="341" width="0.2833%" height="15" fill="rgb(249,75,3)"/><text x="66.0329%" y="351.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="65.8396%" y="325" width="0.2266%" height="15" fill="rgb(219,67,39)"/><text x="66.0896%" y="335.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="65.8396%" y="309" width="0.2266%" height="15" fill="rgb(253,228,2)"/><text x="66.0896%" y="319.50"></text></g><g><title>[unknown] (19 samples, 0.22%)</title><rect x="65.8509%" y="293" width="0.2153%" height="15" fill="rgb(235,138,27)"/><text x="66.1009%" y="303.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="65.9075%" y="277" width="0.1586%" height="15" fill="rgb(236,97,51)"/><text x="66.1575%" y="287.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.57%)</title><rect x="65.5563%" y="453" width="0.5665%" height="15" fill="rgb(240,80,30)"/><text x="65.8063%" y="463.50"></text></g><g><title>_int_malloc (47 samples, 0.53%)</title><rect x="65.5903%" y="437" width="0.5325%" height="15" fill="rgb(230,178,19)"/><text x="65.8403%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (76 samples, 0.86%)</title><rect x="65.2731%" y="469" width="0.8611%" height="15" fill="rgb(210,190,27)"/><text x="65.5231%" y="479.50"></text></g><g><title>__GI___libc_malloc (41 samples, 0.46%)</title><rect x="66.4401%" y="277" width="0.4645%" height="15" fill="rgb(222,107,31)"/><text x="66.6901%" y="287.50"></text></g><g><title>_int_malloc (20 samples, 0.23%)</title><rect x="66.6780%" y="261" width="0.2266%" height="15" fill="rgb(216,127,34)"/><text x="66.9280%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (49 samples, 0.56%)</title><rect x="66.3721%" y="453" width="0.5552%" height="15" fill="rgb(234,116,52)"/><text x="66.6221%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.54%)</title><rect x="66.3834%" y="437" width="0.5438%" height="15" fill="rgb(222,124,15)"/><text x="66.6334%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (48 samples, 0.54%)</title><rect x="66.3834%" y="421" width="0.5438%" height="15" fill="rgb(231,179,28)"/><text x="66.6334%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (48 samples, 0.54%)</title><rect x="66.3834%" y="405" width="0.5438%" height="15" fill="rgb(226,93,45)"/><text x="66.6334%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (43 samples, 0.49%)</title><rect x="66.4401%" y="389" width="0.4872%" height="15" fill="rgb(215,8,51)"/><text x="66.6901%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (43 samples, 0.49%)</title><rect x="66.4401%" y="373" width="0.4872%" height="15" fill="rgb(223,106,5)"/><text x="66.6901%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.49%)</title><rect x="66.4401%" y="357" width="0.4872%" height="15" fill="rgb(250,191,5)"/><text x="66.6901%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.49%)</title><rect x="66.4401%" y="341" width="0.4872%" height="15" fill="rgb(242,132,44)"/><text x="66.6901%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (43 samples, 0.49%)</title><rect x="66.4401%" y="325" width="0.4872%" height="15" fill="rgb(251,152,29)"/><text x="66.6901%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.49%)</title><rect x="66.4401%" y="309" width="0.4872%" height="15" fill="rgb(218,179,5)"/><text x="66.6901%" y="319.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.49%)</title><rect x="66.4401%" y="293" width="0.4872%" height="15" fill="rgb(227,67,19)"/><text x="66.6901%" y="303.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.15%)</title><rect x="66.9499%" y="453" width="0.1473%" height="15" fill="rgb(233,119,31)"/><text x="67.1999%" y="463.50"></text></g><g><title>_int_malloc (10 samples, 0.11%)</title><rect x="67.5051%" y="389" width="0.1133%" height="15" fill="rgb(241,120,22)"/><text x="67.7551%" y="399.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.24%)</title><rect x="67.3918%" y="405" width="0.2379%" height="15" fill="rgb(224,102,30)"/><text x="67.6418%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (28 samples, 0.32%)</title><rect x="67.3238%" y="437" width="0.3172%" height="15" fill="rgb(210,164,37)"/><text x="67.5738%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.26%)</title><rect x="67.3805%" y="421" width="0.2606%" height="15" fill="rgb(226,191,16)"/><text x="67.6305%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (29 samples, 0.33%)</title><rect x="67.7317%" y="405" width="0.3286%" height="15" fill="rgb(214,40,45)"/><text x="67.9817%" y="415.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (27 samples, 0.31%)</title><rect x="67.7544%" y="389" width="0.3059%" height="15" fill="rgb(244,29,26)"/><text x="68.0044%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (50 samples, 0.57%)</title><rect x="67.7204%" y="421" width="0.5665%" height="15" fill="rgb(216,16,5)"/><text x="67.9704%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (20 samples, 0.23%)</title><rect x="68.0603%" y="405" width="0.2266%" height="15" fill="rgb(249,76,35)"/><text x="68.3103%" y="415.50"></text></g><g><title>core::fmt::write (10 samples, 0.11%)</title><rect x="68.1736%" y="389" width="0.1133%" height="15" fill="rgb(207,11,44)"/><text x="68.4236%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.12%)</title><rect x="68.5475%" y="405" width="0.1246%" height="15" fill="rgb(228,190,49)"/><text x="68.7975%" y="415.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.12%)</title><rect x="68.5475%" y="389" width="0.1246%" height="15" fill="rgb(214,173,12)"/><text x="68.7975%" y="399.50"></text></g><g><title>_int_malloc (9 samples, 0.10%)</title><rect x="68.5701%" y="373" width="0.1020%" height="15" fill="rgb(218,26,35)"/><text x="68.8201%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (28 samples, 0.32%)</title><rect x="68.7514%" y="389" width="0.3172%" height="15" fill="rgb(220,200,19)"/><text x="69.0014%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.24%)</title><rect x="68.8307%" y="373" width="0.2379%" height="15" fill="rgb(239,95,49)"/><text x="69.0807%" y="383.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.24%)</title><rect x="68.8307%" y="357" width="0.2379%" height="15" fill="rgb(235,85,53)"/><text x="69.0807%" y="367.50"></text></g><g><title>_int_malloc (18 samples, 0.20%)</title><rect x="68.8647%" y="341" width="0.2039%" height="15" fill="rgb(233,133,31)"/><text x="69.1147%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (261 samples, 2.96%)</title><rect x="66.1341%" y="469" width="2.9572%" height="15" fill="rgb(218,25,20)"/><text x="66.3841%" y="479.50">&lt;co..</text></g><g><title>core::fmt::write (167 samples, 1.89%)</title><rect x="67.1992%" y="453" width="1.8921%" height="15" fill="rgb(252,210,38)"/><text x="67.4492%" y="463.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (128 samples, 1.45%)</title><rect x="67.6411%" y="437" width="1.4503%" height="15" fill="rgb(242,134,21)"/><text x="67.8911%" y="447.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (65 samples, 0.74%)</title><rect x="68.3549%" y="421" width="0.7365%" height="15" fill="rgb(213,28,48)"/><text x="68.6049%" y="431.50"></text></g><g><title>core::fmt::write (37 samples, 0.42%)</title><rect x="68.6721%" y="405" width="0.4192%" height="15" fill="rgb(250,196,2)"/><text x="68.9221%" y="415.50"></text></g><g><title>__GI___libc_free (11 samples, 0.12%)</title><rect x="69.0913%" y="469" width="0.1246%" height="15" fill="rgb(227,5,17)"/><text x="69.3413%" y="479.50"></text></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="69.2499%" y="453" width="0.1360%" height="15" fill="rgb(221,226,24)"/><text x="69.4999%" y="463.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.22%)</title><rect x="69.2160%" y="469" width="0.2153%" height="15" fill="rgb(211,5,48)"/><text x="69.4660%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.16%)</title><rect x="69.5332%" y="469" width="0.1586%" height="15" fill="rgb(219,150,6)"/><text x="69.7832%" y="479.50"></text></g><g><title>malloc_consolidate (24 samples, 0.27%)</title><rect x="69.8504%" y="453" width="0.2719%" height="15" fill="rgb(251,46,16)"/><text x="70.1004%" y="463.50"></text></g><g><title>_int_free (38 samples, 0.43%)</title><rect x="69.7258%" y="469" width="0.4305%" height="15" fill="rgb(220,204,40)"/><text x="69.9758%" y="479.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.12%)</title><rect x="70.1677%" y="453" width="0.1246%" height="15" fill="rgb(211,85,2)"/><text x="70.4177%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.23%)</title><rect x="70.1564%" y="469" width="0.2266%" height="15" fill="rgb(229,17,7)"/><text x="70.4064%" y="479.50"></text></g><g><title>_int_malloc (19 samples, 0.22%)</title><rect x="70.7115%" y="261" width="0.2153%" height="15" fill="rgb(239,72,28)"/><text x="70.9615%" y="271.50"></text></g><g><title>__GI___libc_malloc (35 samples, 0.40%)</title><rect x="70.5416%" y="277" width="0.3966%" height="15" fill="rgb(230,47,54)"/><text x="70.7916%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (50 samples, 0.57%)</title><rect x="70.3830%" y="469" width="0.5665%" height="15" fill="rgb(214,50,8)"/><text x="70.6330%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (44 samples, 0.50%)</title><rect x="70.4509%" y="453" width="0.4985%" height="15" fill="rgb(216,198,43)"/><text x="70.7009%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (44 samples, 0.50%)</title><rect x="70.4509%" y="437" width="0.4985%" height="15" fill="rgb(234,20,35)"/><text x="70.7009%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (44 samples, 0.50%)</title><rect x="70.4509%" y="421" width="0.4985%" height="15" fill="rgb(254,45,19)"/><text x="70.7009%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (44 samples, 0.50%)</title><rect x="70.4509%" y="405" width="0.4985%" height="15" fill="rgb(219,14,44)"/><text x="70.7009%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (37 samples, 0.42%)</title><rect x="70.5303%" y="389" width="0.4192%" height="15" fill="rgb(217,220,26)"/><text x="70.7803%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (37 samples, 0.42%)</title><rect x="70.5303%" y="373" width="0.4192%" height="15" fill="rgb(213,158,28)"/><text x="70.7803%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.42%)</title><rect x="70.5303%" y="357" width="0.4192%" height="15" fill="rgb(252,51,52)"/><text x="70.7803%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.42%)</title><rect x="70.5303%" y="341" width="0.4192%" height="15" fill="rgb(246,89,16)"/><text x="70.7803%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (36 samples, 0.41%)</title><rect x="70.5416%" y="325" width="0.4079%" height="15" fill="rgb(216,158,49)"/><text x="70.7916%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.41%)</title><rect x="70.5416%" y="309" width="0.4079%" height="15" fill="rgb(236,107,19)"/><text x="70.7916%" y="319.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.41%)</title><rect x="70.5416%" y="293" width="0.4079%" height="15" fill="rgb(228,185,30)"/><text x="70.7916%" y="303.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (24 samples, 0.27%)</title><rect x="71.0288%" y="405" width="0.2719%" height="15" fill="rgb(246,134,8)"/><text x="71.2788%" y="415.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (21 samples, 0.24%)</title><rect x="71.0628%" y="389" width="0.2379%" height="15" fill="rgb(214,143,50)"/><text x="71.3128%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.35%)</title><rect x="71.0288%" y="421" width="0.3512%" height="15" fill="rgb(228,75,8)"/><text x="71.2788%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (40 samples, 0.45%)</title><rect x="71.0288%" y="437" width="0.4532%" height="15" fill="rgb(207,175,4)"/><text x="71.2788%" y="447.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.10%)</title><rect x="71.3800%" y="421" width="0.1020%" height="15" fill="rgb(205,108,24)"/><text x="71.6300%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.35%)</title><rect x="71.5726%" y="389" width="0.3512%" height="15" fill="rgb(244,120,49)"/><text x="71.8226%" y="399.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (31 samples, 0.35%)</title><rect x="71.5726%" y="373" width="0.3512%" height="15" fill="rgb(223,47,38)"/><text x="71.8226%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (42 samples, 0.48%)</title><rect x="71.5160%" y="405" width="0.4759%" height="15" fill="rgb(229,179,11)"/><text x="71.7660%" y="415.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.12%)</title><rect x="72.0825%" y="389" width="0.1246%" height="15" fill="rgb(231,122,1)"/><text x="72.3325%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.18%)</title><rect x="72.4224%" y="373" width="0.1813%" height="15" fill="rgb(245,119,9)"/><text x="72.6724%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (102 samples, 1.16%)</title><rect x="71.4820%" y="437" width="1.1557%" height="15" fill="rgb(241,163,25)"/><text x="71.7320%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (102 samples, 1.16%)</title><rect x="71.4820%" y="421" width="1.1557%" height="15" fill="rgb(217,214,3)"/><text x="71.7320%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (57 samples, 0.65%)</title><rect x="71.9918%" y="405" width="0.6458%" height="15" fill="rgb(240,86,28)"/><text x="72.2418%" y="415.50"></text></g><g><title>core::fmt::write (25 samples, 0.28%)</title><rect x="72.3544%" y="389" width="0.2833%" height="15" fill="rgb(215,47,9)"/><text x="72.6044%" y="399.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (36 samples, 0.41%)</title><rect x="72.8416%" y="389" width="0.4079%" height="15" fill="rgb(252,25,45)"/><text x="73.0916%" y="399.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (34 samples, 0.39%)</title><rect x="72.8643%" y="373" width="0.3852%" height="15" fill="rgb(251,164,9)"/><text x="73.1143%" y="383.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (34 samples, 0.39%)</title><rect x="72.8643%" y="357" width="0.3852%" height="15" fill="rgb(233,194,0)"/><text x="73.1143%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (34 samples, 0.39%)</title><rect x="72.8643%" y="341" width="0.3852%" height="15" fill="rgb(249,111,24)"/><text x="73.1143%" y="351.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (24 samples, 0.27%)</title><rect x="72.9776%" y="325" width="0.2719%" height="15" fill="rgb(250,223,3)"/><text x="73.2276%" y="335.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (64 samples, 0.73%)</title><rect x="72.6943%" y="405" width="0.7251%" height="15" fill="rgb(236,178,37)"/><text x="72.9443%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (15 samples, 0.17%)</title><rect x="73.2495%" y="389" width="0.1700%" height="15" fill="rgb(241,158,50)"/><text x="73.4995%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.14%)</title><rect x="73.2835%" y="373" width="0.1360%" height="15" fill="rgb(213,121,41)"/><text x="73.5335%" y="383.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="73.6460%" y="389" width="0.1020%" height="15" fill="rgb(240,92,3)"/><text x="73.8960%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.10%)</title><rect x="73.7593%" y="389" width="0.1020%" height="15" fill="rgb(205,123,3)"/><text x="74.0093%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (131 samples, 1.48%)</title><rect x="72.6490%" y="421" width="1.4843%" height="15" fill="rgb(205,97,47)"/><text x="72.8990%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (63 samples, 0.71%)</title><rect x="73.4194%" y="405" width="0.7138%" height="15" fill="rgb(247,152,14)"/><text x="73.6694%" y="415.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.14%)</title><rect x="74.2126%" y="405" width="0.1360%" height="15" fill="rgb(248,195,53)"/><text x="74.4626%" y="415.50"></text></g><g><title>_int_free (9 samples, 0.10%)</title><rect x="74.4731%" y="405" width="0.1020%" height="15" fill="rgb(226,201,16)"/><text x="74.7231%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.18%)</title><rect x="74.7224%" y="389" width="0.1813%" height="15" fill="rgb(205,98,0)"/><text x="74.9724%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (204 samples, 2.31%)</title><rect x="72.6377%" y="437" width="2.3114%" height="15" fill="rgb(214,191,48)"/><text x="72.8877%" y="447.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (71 samples, 0.80%)</title><rect x="74.1446%" y="421" width="0.8044%" height="15" fill="rgb(237,112,39)"/><text x="74.3946%" y="431.50"></text></g><g><title>core::fmt::write (27 samples, 0.31%)</title><rect x="74.6431%" y="405" width="0.3059%" height="15" fill="rgb(247,203,27)"/><text x="74.8931%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (28 samples, 0.32%)</title><rect x="75.0283%" y="421" width="0.3172%" height="15" fill="rgb(235,124,28)"/><text x="75.2783%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (24 samples, 0.27%)</title><rect x="75.0736%" y="405" width="0.2719%" height="15" fill="rgb(208,207,46)"/><text x="75.3236%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.15%)</title><rect x="75.5269%" y="389" width="0.1473%" height="15" fill="rgb(234,176,4)"/><text x="75.7769%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (62 samples, 0.70%)</title><rect x="75.0057%" y="437" width="0.7025%" height="15" fill="rgb(230,133,28)"/><text x="75.2557%" y="447.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (32 samples, 0.36%)</title><rect x="75.3456%" y="421" width="0.3626%" height="15" fill="rgb(211,137,40)"/><text x="75.5956%" y="431.50"></text></g><g><title>core::fmt::write (18 samples, 0.20%)</title><rect x="75.5042%" y="405" width="0.2039%" height="15" fill="rgb(254,35,13)"/><text x="75.7542%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (423 samples, 4.79%)</title><rect x="70.9721%" y="453" width="4.7927%" height="15" fill="rgb(225,49,51)"/><text x="71.2221%" y="463.50">&lt;sql_p..</text></g><g><title>core::fmt::write (431 samples, 4.88%)</title><rect x="70.9495%" y="469" width="4.8833%" height="15" fill="rgb(251,10,15)"/><text x="71.1995%" y="479.50">core::..</text></g><g><title>__GI___libc_free (17 samples, 0.19%)</title><rect x="76.0820%" y="453" width="0.1926%" height="15" fill="rgb(228,207,15)"/><text x="76.3320%" y="463.50"></text></g><g><title>_int_free (46 samples, 0.52%)</title><rect x="76.3086%" y="453" width="0.5212%" height="15" fill="rgb(241,99,19)"/><text x="76.5586%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (106 samples, 1.20%)</title><rect x="75.8781%" y="469" width="1.2010%" height="15" fill="rgb(207,104,49)"/><text x="76.1281%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.25%)</title><rect x="76.8298%" y="453" width="0.2493%" height="15" fill="rgb(234,99,18)"/><text x="77.0798%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.14%)</title><rect x="76.9431%" y="437" width="0.1360%" height="15" fill="rgb(213,191,49)"/><text x="77.1931%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.14%)</title><rect x="76.9431%" y="421" width="0.1360%" height="15" fill="rgb(210,226,19)"/><text x="77.1931%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.23%)</title><rect x="77.1584%" y="453" width="0.2266%" height="15" fill="rgb(229,97,18)"/><text x="77.4084%" y="463.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (12 samples, 0.14%)</title><rect x="77.2490%" y="437" width="0.1360%" height="15" fill="rgb(211,167,15)"/><text x="77.4990%" y="447.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (34 samples, 0.39%)</title><rect x="77.1584%" y="469" width="0.3852%" height="15" fill="rgb(210,169,34)"/><text x="77.4084%" y="479.50"></text></g><g><title>[unknown] (147 samples, 1.67%)</title><rect x="78.1215%" y="389" width="1.6655%" height="15" fill="rgb(241,121,31)"/><text x="78.3715%" y="399.50"></text></g><g><title>[unknown] (138 samples, 1.56%)</title><rect x="78.2234%" y="373" width="1.5636%" height="15" fill="rgb(232,40,11)"/><text x="78.4734%" y="383.50"></text></g><g><title>[unknown] (131 samples, 1.48%)</title><rect x="78.3027%" y="357" width="1.4843%" height="15" fill="rgb(205,86,26)"/><text x="78.5527%" y="367.50"></text></g><g><title>[unknown] (130 samples, 1.47%)</title><rect x="78.3141%" y="341" width="1.4729%" height="15" fill="rgb(231,126,28)"/><text x="78.5641%" y="351.50"></text></g><g><title>[unknown] (127 samples, 1.44%)</title><rect x="78.3481%" y="325" width="1.4389%" height="15" fill="rgb(219,221,18)"/><text x="78.5981%" y="335.50"></text></g><g><title>[unknown] (125 samples, 1.42%)</title><rect x="78.3707%" y="309" width="1.4163%" height="15" fill="rgb(211,40,0)"/><text x="78.6207%" y="319.50"></text></g><g><title>[unknown] (120 samples, 1.36%)</title><rect x="78.4274%" y="293" width="1.3596%" height="15" fill="rgb(239,85,43)"/><text x="78.6774%" y="303.50"></text></g><g><title>[unknown] (116 samples, 1.31%)</title><rect x="78.4727%" y="277" width="1.3143%" height="15" fill="rgb(231,55,21)"/><text x="78.7227%" y="287.50"></text></g><g><title>[unknown] (91 samples, 1.03%)</title><rect x="78.7559%" y="261" width="1.0310%" height="15" fill="rgb(225,184,43)"/><text x="79.0059%" y="271.50"></text></g><g><title>[unknown] (63 samples, 0.71%)</title><rect x="79.0732%" y="245" width="0.7138%" height="15" fill="rgb(251,158,41)"/><text x="79.3232%" y="255.50"></text></g><g><title>[unknown] (55 samples, 0.62%)</title><rect x="79.1638%" y="229" width="0.6232%" height="15" fill="rgb(234,159,37)"/><text x="79.4138%" y="239.50"></text></g><g><title>[unknown] (38 samples, 0.43%)</title><rect x="79.3564%" y="213" width="0.4305%" height="15" fill="rgb(216,204,22)"/><text x="79.6064%" y="223.50"></text></g><g><title>[unknown] (34 samples, 0.39%)</title><rect x="79.4018%" y="197" width="0.3852%" height="15" fill="rgb(214,17,3)"/><text x="79.6518%" y="207.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="79.6170%" y="181" width="0.1700%" height="15" fill="rgb(212,111,17)"/><text x="79.8670%" y="191.50"></text></g><g><title>__GI___mmap64 (203 samples, 2.30%)</title><rect x="79.7870%" y="389" width="2.3000%" height="15" fill="rgb(221,157,24)"/><text x="80.0370%" y="399.50">_..</text></g><g><title>__GI___mmap64 (201 samples, 2.28%)</title><rect x="79.8097%" y="373" width="2.2774%" height="15" fill="rgb(252,16,13)"/><text x="80.0597%" y="383.50">_..</text></g><g><title>[unknown] (200 samples, 2.27%)</title><rect x="79.8210%" y="357" width="2.2660%" height="15" fill="rgb(221,62,2)"/><text x="80.0710%" y="367.50">[..</text></g><g><title>[unknown] (199 samples, 2.25%)</title><rect x="79.8323%" y="341" width="2.2547%" height="15" fill="rgb(247,87,22)"/><text x="80.0823%" y="351.50">[..</text></g><g><title>[unknown] (182 samples, 2.06%)</title><rect x="80.0249%" y="325" width="2.0621%" height="15" fill="rgb(215,73,9)"/><text x="80.2749%" y="335.50">[..</text></g><g><title>[unknown] (182 samples, 2.06%)</title><rect x="80.0249%" y="309" width="2.0621%" height="15" fill="rgb(207,175,33)"/><text x="80.2749%" y="319.50">[..</text></g><g><title>[unknown] (181 samples, 2.05%)</title><rect x="80.0363%" y="293" width="2.0508%" height="15" fill="rgb(243,129,54)"/><text x="80.2863%" y="303.50">[..</text></g><g><title>[unknown] (178 samples, 2.02%)</title><rect x="80.0702%" y="277" width="2.0168%" height="15" fill="rgb(227,119,45)"/><text x="80.3202%" y="287.50">[..</text></g><g><title>[unknown] (166 samples, 1.88%)</title><rect x="80.2062%" y="261" width="1.8808%" height="15" fill="rgb(205,109,36)"/><text x="80.4562%" y="271.50">[..</text></g><g><title>[unknown] (146 samples, 1.65%)</title><rect x="80.4328%" y="245" width="1.6542%" height="15" fill="rgb(205,6,39)"/><text x="80.6828%" y="255.50"></text></g><g><title>[unknown] (118 samples, 1.34%)</title><rect x="80.7501%" y="229" width="1.3370%" height="15" fill="rgb(221,32,16)"/><text x="81.0001%" y="239.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="81.7471%" y="213" width="0.3399%" height="15" fill="rgb(228,144,50)"/><text x="81.9971%" y="223.50"></text></g><g><title>[unknown] (24 samples, 0.27%)</title><rect x="81.8151%" y="197" width="0.2719%" height="15" fill="rgb(229,201,53)"/><text x="82.0651%" y="207.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="81.8491%" y="181" width="0.2379%" height="15" fill="rgb(249,153,27)"/><text x="82.0991%" y="191.50"></text></g><g><title>__GI__dl_allocate_tls (16 samples, 0.18%)</title><rect x="82.0870%" y="389" width="0.1813%" height="15" fill="rgb(227,106,25)"/><text x="82.3370%" y="399.50"></text></g><g><title>allocate_dtv (15 samples, 0.17%)</title><rect x="82.0983%" y="373" width="0.1700%" height="15" fill="rgb(230,65,29)"/><text x="82.3483%" y="383.50"></text></g><g><title>__libc_calloc (14 samples, 0.16%)</title><rect x="82.1097%" y="357" width="0.1586%" height="15" fill="rgb(221,57,46)"/><text x="82.3597%" y="367.50"></text></g><g><title>__GI__dl_allocate_tls_init (13 samples, 0.15%)</title><rect x="82.2683%" y="389" width="0.1473%" height="15" fill="rgb(229,161,17)"/><text x="82.5183%" y="399.50"></text></g><g><title>allocate_stack (553 samples, 6.27%)</title><rect x="77.9402%" y="405" width="6.2656%" height="15" fill="rgb(222,213,11)"/><text x="78.1902%" y="415.50">allocate..</text></g><g><title>setup_stack_prot (158 samples, 1.79%)</title><rect x="82.4156%" y="389" width="1.7902%" height="15" fill="rgb(235,35,13)"/><text x="82.6656%" y="399.50">s..</text></g><g><title>__GI___mprotect (155 samples, 1.76%)</title><rect x="82.4496%" y="373" width="1.7562%" height="15" fill="rgb(233,158,34)"/><text x="82.6996%" y="383.50"></text></g><g><title>[unknown] (155 samples, 1.76%)</title><rect x="82.4496%" y="357" width="1.7562%" height="15" fill="rgb(215,151,48)"/><text x="82.6996%" y="367.50"></text></g><g><title>[unknown] (152 samples, 1.72%)</title><rect x="82.4836%" y="341" width="1.7222%" height="15" fill="rgb(229,84,14)"/><text x="82.7336%" y="351.50"></text></g><g><title>[unknown] (146 samples, 1.65%)</title><rect x="82.5516%" y="325" width="1.6542%" height="15" fill="rgb(229,68,14)"/><text x="82.8016%" y="335.50"></text></g><g><title>[unknown] (145 samples, 1.64%)</title><rect x="82.5629%" y="309" width="1.6429%" height="15" fill="rgb(243,106,26)"/><text x="82.8129%" y="319.50"></text></g><g><title>[unknown] (139 samples, 1.57%)</title><rect x="82.6309%" y="293" width="1.5749%" height="15" fill="rgb(206,45,38)"/><text x="82.8809%" y="303.50"></text></g><g><title>[unknown] (124 samples, 1.40%)</title><rect x="82.8008%" y="277" width="1.4049%" height="15" fill="rgb(226,6,15)"/><text x="83.0508%" y="287.50"></text></g><g><title>[unknown] (111 samples, 1.26%)</title><rect x="82.9481%" y="261" width="1.2576%" height="15" fill="rgb(232,22,54)"/><text x="83.1981%" y="271.50"></text></g><g><title>[unknown] (92 samples, 1.04%)</title><rect x="83.1634%" y="245" width="1.0424%" height="15" fill="rgb(229,222,32)"/><text x="83.4134%" y="255.50"></text></g><g><title>[unknown] (52 samples, 0.59%)</title><rect x="83.6166%" y="229" width="0.5892%" height="15" fill="rgb(228,62,29)"/><text x="83.8666%" y="239.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="83.8432%" y="213" width="0.3626%" height="15" fill="rgb(251,103,34)"/><text x="84.0932%" y="223.50"></text></g><g><title>[unknown] (14 samples, 0.16%)</title><rect x="84.0471%" y="197" width="0.1586%" height="15" fill="rgb(233,12,30)"/><text x="84.2971%" y="207.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="84.0811%" y="181" width="0.1246%" height="15" fill="rgb(238,52,0)"/><text x="84.3311%" y="191.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="84.0925%" y="165" width="0.1133%" height="15" fill="rgb(223,98,5)"/><text x="84.3425%" y="175.50"></text></g><g><title>__pthread_create_2_1 (633 samples, 7.17%)</title><rect x="77.8269%" y="421" width="7.1720%" height="15" fill="rgb(228,75,37)"/><text x="78.0769%" y="431.50">__pthread_..</text></g><g><title>create_thread (70 samples, 0.79%)</title><rect x="84.2058%" y="405" width="0.7931%" height="15" fill="rgb(205,115,49)"/><text x="84.4558%" y="415.50"></text></g><g><title>__GI___clone (68 samples, 0.77%)</title><rect x="84.2284%" y="389" width="0.7705%" height="15" fill="rgb(250,154,43)"/><text x="84.4784%" y="399.50"></text></g><g><title>[unknown] (60 samples, 0.68%)</title><rect x="84.3191%" y="373" width="0.6798%" height="15" fill="rgb(226,43,29)"/><text x="84.5691%" y="383.50"></text></g><g><title>[unknown] (53 samples, 0.60%)</title><rect x="84.3984%" y="357" width="0.6005%" height="15" fill="rgb(249,228,39)"/><text x="84.6484%" y="367.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="84.5343%" y="341" width="0.4645%" height="15" fill="rgb(216,79,43)"/><text x="84.7843%" y="351.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="84.5343%" y="325" width="0.4645%" height="15" fill="rgb(228,95,12)"/><text x="84.7843%" y="335.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="84.5343%" y="309" width="0.4645%" height="15" fill="rgb(249,221,15)"/><text x="84.7843%" y="319.50"></text></g><g><title>[unknown] (40 samples, 0.45%)</title><rect x="84.5457%" y="293" width="0.4532%" height="15" fill="rgb(233,34,13)"/><text x="84.7957%" y="303.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="84.6023%" y="277" width="0.3966%" height="15" fill="rgb(214,103,39)"/><text x="84.8523%" y="287.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="84.6703%" y="261" width="0.3286%" height="15" fill="rgb(251,126,39)"/><text x="84.9203%" y="271.50"></text></g><g><title>[unknown] (21 samples, 0.24%)</title><rect x="84.7609%" y="245" width="0.2379%" height="15" fill="rgb(214,216,36)"/><text x="85.0109%" y="255.50"></text></g><g><title>[unknown] (17 samples, 0.19%)</title><rect x="84.8063%" y="229" width="0.1926%" height="15" fill="rgb(220,221,8)"/><text x="85.0563%" y="239.50"></text></g><g><title>[unknown] (16 samples, 0.18%)</title><rect x="84.8176%" y="213" width="0.1813%" height="15" fill="rgb(240,216,3)"/><text x="85.0676%" y="223.50"></text></g><g><title>std::sys::unix::thread::Thread::new (641 samples, 7.26%)</title><rect x="77.7816%" y="437" width="7.2626%" height="15" fill="rgb(232,218,17)"/><text x="78.0316%" y="447.50">std::sys::..</text></g><g><title>decor::helpers::mysql_helpers::query_drop (670 samples, 7.59%)</title><rect x="77.5436%" y="469" width="7.5912%" height="15" fill="rgb(229,163,45)"/><text x="77.7936%" y="479.50">decor::hel..</text></g><g><title>std::thread::spawn (657 samples, 7.44%)</title><rect x="77.6909%" y="453" width="7.4439%" height="15" fill="rgb(231,110,42)"/><text x="77.9409%" y="463.50">std::threa..</text></g><g><title>__GI___libc_malloc (9 samples, 0.10%)</title><rect x="85.1801%" y="453" width="0.1020%" height="15" fill="rgb(208,170,48)"/><text x="85.4301%" y="463.50"></text></g><g><title>decor::is_guise (16 samples, 0.18%)</title><rect x="85.1348%" y="469" width="0.1813%" height="15" fill="rgb(239,116,25)"/><text x="85.3848%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.16%)</title><rect x="85.3161%" y="453" width="0.1586%" height="15" fill="rgb(219,200,50)"/><text x="85.5661%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.19%)</title><rect x="85.4747%" y="421" width="0.1926%" height="15" fill="rgb(245,200,0)"/><text x="85.7247%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.19%)</title><rect x="85.4747%" y="405" width="0.1926%" height="15" fill="rgb(245,119,33)"/><text x="85.7247%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="85.5540%" y="389" width="0.1133%" height="15" fill="rgb(231,125,12)"/><text x="85.8040%" y="399.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="85.5654%" y="373" width="0.1020%" height="15" fill="rgb(216,96,41)"/><text x="85.8154%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (38 samples, 0.43%)</title><rect x="85.7693%" y="389" width="0.4305%" height="15" fill="rgb(248,43,45)"/><text x="86.0193%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (37 samples, 0.42%)</title><rect x="85.7806%" y="373" width="0.4192%" height="15" fill="rgb(217,222,7)"/><text x="86.0306%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (57 samples, 0.65%)</title><rect x="85.6673%" y="421" width="0.6458%" height="15" fill="rgb(233,28,6)"/><text x="85.9173%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (57 samples, 0.65%)</title><rect x="85.6673%" y="405" width="0.6458%" height="15" fill="rgb(231,218,15)"/><text x="85.9173%" y="415.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.11%)</title><rect x="86.1999%" y="389" width="0.1133%" height="15" fill="rgb(226,171,48)"/><text x="86.4499%" y="399.50"></text></g><g><title>core::fmt::write (75 samples, 0.85%)</title><rect x="85.4747%" y="453" width="0.8498%" height="15" fill="rgb(235,201,9)"/><text x="85.7247%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (75 samples, 0.85%)</title><rect x="85.4747%" y="437" width="0.8498%" height="15" fill="rgb(217,80,15)"/><text x="85.7247%" y="447.50"></text></g><g><title>_int_free (10 samples, 0.11%)</title><rect x="86.3245%" y="421" width="0.1133%" height="15" fill="rgb(219,152,8)"/><text x="86.5745%" y="431.50"></text></g><g><title>malloc_consolidate (10 samples, 0.11%)</title><rect x="86.3245%" y="405" width="0.1133%" height="15" fill="rgb(243,107,38)"/><text x="86.5745%" y="415.50"></text></g><g><title>_int_free (13 samples, 0.15%)</title><rect x="86.4944%" y="389" width="0.1473%" height="15" fill="rgb(231,17,5)"/><text x="86.7444%" y="399.50"></text></g><g><title>decor::vault::insert_vault_entries (125 samples, 1.42%)</title><rect x="85.3161%" y="469" width="1.4163%" height="15" fill="rgb(209,25,54)"/><text x="85.5661%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (36 samples, 0.41%)</title><rect x="86.3245%" y="453" width="0.4079%" height="15" fill="rgb(219,0,2)"/><text x="86.5745%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (36 samples, 0.41%)</title><rect x="86.3245%" y="437" width="0.4079%" height="15" fill="rgb(246,9,5)"/><text x="86.5745%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (26 samples, 0.29%)</title><rect x="86.4378%" y="421" width="0.2946%" height="15" fill="rgb(226,159,4)"/><text x="86.6878%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.29%)</title><rect x="86.4378%" y="405" width="0.2946%" height="15" fill="rgb(219,175,34)"/><text x="86.6878%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.10%)</title><rect x="86.7324%" y="469" width="0.1020%" height="15" fill="rgb(236,10,46)"/><text x="86.9824%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.10%)</title><rect x="86.7324%" y="453" width="0.1020%" height="15" fill="rgb(240,211,16)"/><text x="86.9824%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.15%)</title><rect x="86.9250%" y="469" width="0.1473%" height="15" fill="rgb(205,3,43)"/><text x="87.1750%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (13 samples, 0.15%)</title><rect x="86.9250%" y="453" width="0.1473%" height="15" fill="rgb(245,7,22)"/><text x="87.1750%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (13 samples, 0.15%)</title><rect x="86.9250%" y="437" width="0.1473%" height="15" fill="rgb(239,132,32)"/><text x="87.1750%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.12%)</title><rect x="86.9477%" y="421" width="0.1246%" height="15" fill="rgb(228,202,34)"/><text x="87.1977%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.10%)</title><rect x="86.9703%" y="405" width="0.1020%" height="15" fill="rgb(254,200,22)"/><text x="87.2203%" y="415.50"></text></g><g><title>__GI_munmap (122 samples, 1.38%)</title><rect x="87.3555%" y="357" width="1.3823%" height="15" fill="rgb(219,10,39)"/><text x="87.6055%" y="367.50"></text></g><g><title>[unknown] (122 samples, 1.38%)</title><rect x="87.3555%" y="341" width="1.3823%" height="15" fill="rgb(226,210,39)"/><text x="87.6055%" y="351.50"></text></g><g><title>[unknown] (121 samples, 1.37%)</title><rect x="87.3669%" y="325" width="1.3709%" height="15" fill="rgb(208,219,16)"/><text x="87.6169%" y="335.50"></text></g><g><title>[unknown] (116 samples, 1.31%)</title><rect x="87.4235%" y="309" width="1.3143%" height="15" fill="rgb(216,158,51)"/><text x="87.6735%" y="319.50"></text></g><g><title>[unknown] (116 samples, 1.31%)</title><rect x="87.4235%" y="293" width="1.3143%" height="15" fill="rgb(233,14,44)"/><text x="87.6735%" y="303.50"></text></g><g><title>[unknown] (116 samples, 1.31%)</title><rect x="87.4235%" y="277" width="1.3143%" height="15" fill="rgb(237,97,39)"/><text x="87.6735%" y="287.50"></text></g><g><title>[unknown] (113 samples, 1.28%)</title><rect x="87.4575%" y="261" width="1.2803%" height="15" fill="rgb(218,198,43)"/><text x="87.7075%" y="271.50"></text></g><g><title>[unknown] (99 samples, 1.12%)</title><rect x="87.6161%" y="245" width="1.1217%" height="15" fill="rgb(231,104,20)"/><text x="87.8661%" y="255.50"></text></g><g><title>[unknown] (97 samples, 1.10%)</title><rect x="87.6388%" y="229" width="1.0990%" height="15" fill="rgb(254,36,13)"/><text x="87.8888%" y="239.50"></text></g><g><title>[unknown] (92 samples, 1.04%)</title><rect x="87.6954%" y="213" width="1.0424%" height="15" fill="rgb(248,14,50)"/><text x="87.9454%" y="223.50"></text></g><g><title>[unknown] (86 samples, 0.97%)</title><rect x="87.7634%" y="197" width="0.9744%" height="15" fill="rgb(217,107,29)"/><text x="88.0134%" y="207.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="88.3753%" y="181" width="0.3626%" height="15" fill="rgb(251,169,33)"/><text x="88.6253%" y="191.50"></text></g><g><title>[unknown] (20 samples, 0.23%)</title><rect x="88.5112%" y="165" width="0.2266%" height="15" fill="rgb(217,108,32)"/><text x="88.7612%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.15%)</title><rect x="88.5905%" y="149" width="0.1473%" height="15" fill="rgb(219,66,42)"/><text x="88.8405%" y="159.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (149 samples, 1.69%)</title><rect x="87.0723%" y="469" width="1.6882%" height="15" fill="rgb(206,180,7)"/><text x="87.3223%" y="479.50"></text></g><g><title>std::sys::unix::thread::Thread::join (139 samples, 1.57%)</title><rect x="87.1856%" y="453" width="1.5749%" height="15" fill="rgb(208,226,31)"/><text x="87.4356%" y="463.50"></text></g><g><title>__pthread_clockjoin_ex (139 samples, 1.57%)</title><rect x="87.1856%" y="437" width="1.5749%" height="15" fill="rgb(218,26,49)"/><text x="87.4356%" y="447.50"></text></g><g><title>__free_tcb (135 samples, 1.53%)</title><rect x="87.2309%" y="421" width="1.5296%" height="15" fill="rgb(233,197,48)"/><text x="87.4809%" y="431.50"></text></g><g><title>__deallocate_stack (135 samples, 1.53%)</title><rect x="87.2309%" y="405" width="1.5296%" height="15" fill="rgb(252,181,51)"/><text x="87.4809%" y="415.50"></text></g><g><title>queue_stack (132 samples, 1.50%)</title><rect x="87.2649%" y="389" width="1.4956%" height="15" fill="rgb(253,90,19)"/><text x="87.5149%" y="399.50"></text></g><g><title>free_stacks (132 samples, 1.50%)</title><rect x="87.2649%" y="373" width="1.4956%" height="15" fill="rgb(215,171,30)"/><text x="87.5149%" y="383.50"></text></g><g><title>decor::disguise::apply (2,149 samples, 24.35%)</title><rect x="64.4460%" y="485" width="24.3485%" height="15" fill="rgb(214,222,9)"/><text x="64.6960%" y="495.50">decor::disguise::apply</text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (173 samples, 1.96%)</title><rect x="89.0211%" y="469" width="1.9601%" height="15" fill="rgb(223,3,22)"/><text x="89.2711%" y="479.50">&lt;..</text></g><g><title>std::sys::unix::fs::File::write (173 samples, 1.96%)</title><rect x="89.0211%" y="453" width="1.9601%" height="15" fill="rgb(225,196,46)"/><text x="89.2711%" y="463.50">s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (173 samples, 1.96%)</title><rect x="89.0211%" y="437" width="1.9601%" height="15" fill="rgb(209,110,37)"/><text x="89.2711%" y="447.50">s..</text></g><g><title>__libc_write (173 samples, 1.96%)</title><rect x="89.0211%" y="421" width="1.9601%" height="15" fill="rgb(249,89,12)"/><text x="89.2711%" y="431.50">_..</text></g><g><title>__libc_write (173 samples, 1.96%)</title><rect x="89.0211%" y="405" width="1.9601%" height="15" fill="rgb(226,27,33)"/><text x="89.2711%" y="415.50">_..</text></g><g><title>[unknown] (171 samples, 1.94%)</title><rect x="89.0437%" y="389" width="1.9375%" height="15" fill="rgb(213,82,22)"/><text x="89.2937%" y="399.50">[..</text></g><g><title>[unknown] (170 samples, 1.93%)</title><rect x="89.0551%" y="373" width="1.9261%" height="15" fill="rgb(248,140,0)"/><text x="89.3051%" y="383.50">[..</text></g><g><title>[unknown] (144 samples, 1.63%)</title><rect x="89.3496%" y="357" width="1.6315%" height="15" fill="rgb(228,106,3)"/><text x="89.5996%" y="367.50"></text></g><g><title>[unknown] (143 samples, 1.62%)</title><rect x="89.3610%" y="341" width="1.6202%" height="15" fill="rgb(209,23,37)"/><text x="89.6110%" y="351.50"></text></g><g><title>[unknown] (141 samples, 1.60%)</title><rect x="89.3836%" y="325" width="1.5976%" height="15" fill="rgb(241,93,50)"/><text x="89.6336%" y="335.50"></text></g><g><title>[unknown] (132 samples, 1.50%)</title><rect x="89.4856%" y="309" width="1.4956%" height="15" fill="rgb(253,46,43)"/><text x="89.7356%" y="319.50"></text></g><g><title>[unknown] (127 samples, 1.44%)</title><rect x="89.5423%" y="293" width="1.4389%" height="15" fill="rgb(226,206,43)"/><text x="89.7923%" y="303.50"></text></g><g><title>[unknown] (121 samples, 1.37%)</title><rect x="89.6102%" y="277" width="1.3709%" height="15" fill="rgb(217,54,7)"/><text x="89.8602%" y="287.50"></text></g><g><title>[unknown] (108 samples, 1.22%)</title><rect x="89.7575%" y="261" width="1.2237%" height="15" fill="rgb(223,5,52)"/><text x="90.0075%" y="271.50"></text></g><g><title>[unknown] (99 samples, 1.12%)</title><rect x="89.8595%" y="245" width="1.1217%" height="15" fill="rgb(206,52,46)"/><text x="90.1095%" y="255.50"></text></g><g><title>[unknown] (87 samples, 0.99%)</title><rect x="89.9955%" y="229" width="0.9857%" height="15" fill="rgb(253,136,11)"/><text x="90.2455%" y="239.50"></text></g><g><title>[unknown] (78 samples, 0.88%)</title><rect x="90.0974%" y="213" width="0.8838%" height="15" fill="rgb(208,106,33)"/><text x="90.3474%" y="223.50"></text></g><g><title>[unknown] (69 samples, 0.78%)</title><rect x="90.1994%" y="197" width="0.7818%" height="15" fill="rgb(206,54,4)"/><text x="90.4494%" y="207.50"></text></g><g><title>[unknown] (57 samples, 0.65%)</title><rect x="90.3354%" y="181" width="0.6458%" height="15" fill="rgb(213,3,15)"/><text x="90.5854%" y="191.50"></text></g><g><title>[unknown] (42 samples, 0.48%)</title><rect x="90.5053%" y="165" width="0.4759%" height="15" fill="rgb(252,211,39)"/><text x="90.7553%" y="175.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="90.6526%" y="149" width="0.3286%" height="15" fill="rgb(223,6,36)"/><text x="90.9026%" y="159.50"></text></g><g><title>[unknown] (25 samples, 0.28%)</title><rect x="90.6979%" y="133" width="0.2833%" height="15" fill="rgb(252,169,45)"/><text x="90.9479%" y="143.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="90.7772%" y="117" width="0.2039%" height="15" fill="rgb(212,48,26)"/><text x="91.0272%" y="127.50"></text></g><g><title>[unknown] (15 samples, 0.17%)</title><rect x="90.8112%" y="101" width="0.1700%" height="15" fill="rgb(251,102,48)"/><text x="91.0612%" y="111.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="90.8566%" y="85" width="0.1246%" height="15" fill="rgb(243,208,16)"/><text x="91.1066%" y="95.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="90.8792%" y="69" width="0.1020%" height="15" fill="rgb(219,96,24)"/><text x="91.1292%" y="79.50"></text></g><g><title>__GI___libc_free (15 samples, 0.17%)</title><rect x="90.9812%" y="469" width="0.1700%" height="15" fill="rgb(219,33,29)"/><text x="91.2312%" y="479.50"></text></g><g><title>malloc_consolidate (54 samples, 0.61%)</title><rect x="91.7403%" y="453" width="0.6118%" height="15" fill="rgb(223,176,5)"/><text x="91.9903%" y="463.50"></text></g><g><title>unlink_chunk (17 samples, 0.19%)</title><rect x="92.1595%" y="437" width="0.1926%" height="15" fill="rgb(228,140,14)"/><text x="92.4095%" y="447.50"></text></g><g><title>_int_free (103 samples, 1.17%)</title><rect x="91.1965%" y="469" width="1.1670%" height="15" fill="rgb(217,179,31)"/><text x="91.4465%" y="479.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.17%)</title><rect x="92.7374%" y="325" width="0.1700%" height="15" fill="rgb(230,9,30)"/><text x="92.9874%" y="335.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.17%)</title><rect x="92.7374%" y="309" width="0.1700%" height="15" fill="rgb(230,136,20)"/><text x="92.9874%" y="319.50"></text></g><g><title>core::str::validations::next_code_point (15 samples, 0.17%)</title><rect x="92.7374%" y="293" width="0.1700%" height="15" fill="rgb(215,210,22)"/><text x="92.9874%" y="303.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (14 samples, 0.16%)</title><rect x="93.4738%" y="213" width="0.1586%" height="15" fill="rgb(218,43,5)"/><text x="93.7238%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (66 samples, 0.75%)</title><rect x="93.0773%" y="245" width="0.7478%" height="15" fill="rgb(216,11,5)"/><text x="93.3273%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (66 samples, 0.75%)</title><rect x="93.0773%" y="229" width="0.7478%" height="15" fill="rgb(209,82,29)"/><text x="93.3273%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (17 samples, 0.19%)</title><rect x="93.6324%" y="213" width="0.1926%" height="15" fill="rgb(244,115,12)"/><text x="93.8824%" y="223.50"></text></g><g><title>core::unicode::unicode_data::skip_search::{{closure}} (10 samples, 0.11%)</title><rect x="93.7118%" y="197" width="0.1133%" height="15" fill="rgb(222,82,18)"/><text x="93.9618%" y="207.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (10 samples, 0.11%)</title><rect x="93.7118%" y="181" width="0.1133%" height="15" fill="rgb(249,227,8)"/><text x="93.9618%" y="191.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (10 samples, 0.11%)</title><rect x="93.7118%" y="165" width="0.1133%" height="15" fill="rgb(253,141,45)"/><text x="93.9618%" y="175.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (79 samples, 0.90%)</title><rect x="92.9526%" y="293" width="0.8951%" height="15" fill="rgb(234,184,4)"/><text x="93.2026%" y="303.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (79 samples, 0.90%)</title><rect x="92.9526%" y="277" width="0.8951%" height="15" fill="rgb(218,194,23)"/><text x="93.2026%" y="287.50"></text></g><g><title>core::unicode::unicode_data::skip_search (79 samples, 0.90%)</title><rect x="92.9526%" y="261" width="0.8951%" height="15" fill="rgb(235,66,41)"/><text x="93.2026%" y="271.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug (109 samples, 1.23%)</title><rect x="92.9073%" y="325" width="1.2350%" height="15" fill="rgb(245,217,1)"/><text x="93.1573%" y="335.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (109 samples, 1.23%)</title><rect x="92.9073%" y="309" width="1.2350%" height="15" fill="rgb(229,91,1)"/><text x="93.1573%" y="319.50"></text></g><g><title>core::unicode::printable::is_printable (26 samples, 0.29%)</title><rect x="93.8477%" y="293" width="0.2946%" height="15" fill="rgb(207,101,30)"/><text x="94.0977%" y="303.50"></text></g><g><title>core::unicode::printable::check (26 samples, 0.29%)</title><rect x="93.8477%" y="277" width="0.2946%" height="15" fill="rgb(223,82,49)"/><text x="94.0977%" y="287.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (141 samples, 1.60%)</title><rect x="92.6014%" y="341" width="1.5976%" height="15" fill="rgb(218,167,17)"/><text x="92.8514%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::fmt::Debug&gt;::fmt (164 samples, 1.86%)</title><rect x="92.4541%" y="421" width="1.8581%" height="15" fill="rgb(208,103,14)"/><text x="92.7041%" y="431.50">&lt;..</text></g><g><title>core::fmt::builders::DebugSet::entry (160 samples, 1.81%)</title><rect x="92.4994%" y="405" width="1.8128%" height="15" fill="rgb(238,20,8)"/><text x="92.7494%" y="415.50">c..</text></g><g><title>core::fmt::builders::DebugInner::entry (160 samples, 1.81%)</title><rect x="92.4994%" y="389" width="1.8128%" height="15" fill="rgb(218,80,54)"/><text x="92.7494%" y="399.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (158 samples, 1.79%)</title><rect x="92.5221%" y="373" width="1.7902%" height="15" fill="rgb(240,144,17)"/><text x="92.7721%" y="383.50">c..</text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (158 samples, 1.79%)</title><rect x="92.5221%" y="357" width="1.7902%" height="15" fill="rgb(245,27,50)"/><text x="92.7721%" y="367.50">c..</text></g><g><title>alloc::fmt::format (173 samples, 1.96%)</title><rect x="92.3635%" y="469" width="1.9601%" height="15" fill="rgb(251,51,7)"/><text x="92.6135%" y="479.50">a..</text></g><g><title>core::fmt::Write::write_fmt (171 samples, 1.94%)</title><rect x="92.3861%" y="453" width="1.9375%" height="15" fill="rgb(245,217,29)"/><text x="92.6361%" y="463.50">c..</text></g><g><title>core::fmt::write (171 samples, 1.94%)</title><rect x="92.3861%" y="437" width="1.9375%" height="15" fill="rgb(221,176,29)"/><text x="92.6361%" y="447.50">c..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.17%)</title><rect x="94.3236%" y="469" width="0.1700%" height="15" fill="rgb(212,180,24)"/><text x="94.5736%" y="479.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.17%)</title><rect x="94.3236%" y="453" width="0.1700%" height="15" fill="rgb(254,24,2)"/><text x="94.5736%" y="463.50"></text></g><g><title>_int_realloc (14 samples, 0.16%)</title><rect x="94.3349%" y="437" width="0.1586%" height="15" fill="rgb(230,100,2)"/><text x="94.5849%" y="447.50"></text></g><g><title>_int_malloc (13 samples, 0.15%)</title><rect x="94.3462%" y="421" width="0.1473%" height="15" fill="rgb(219,142,25)"/><text x="94.5962%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="94.7995%" y="421" width="0.1020%" height="15" fill="rgb(240,73,43)"/><text x="95.0495%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="94.7995%" y="405" width="0.1020%" height="15" fill="rgb(214,114,15)"/><text x="95.0495%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.10%)</title><rect x="94.7995%" y="389" width="0.1020%" height="15" fill="rgb(207,130,4)"/><text x="95.0495%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.10%)</title><rect x="94.7995%" y="373" width="0.1020%" height="15" fill="rgb(221,25,40)"/><text x="95.0495%" y="383.50"></text></g><g><title>decor::helpers::mysql_helpers::mysql_val_to_string (15 samples, 0.17%)</title><rect x="94.9014%" y="421" width="0.1700%" height="15" fill="rgb(241,184,7)"/><text x="95.1514%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.29%)</title><rect x="94.7881%" y="437" width="0.2946%" height="15" fill="rgb(235,159,4)"/><text x="95.0381%" y="447.50"></text></g><g><title>decor::helpers::mysql_helpers::get_query_rows (40 samples, 0.45%)</title><rect x="94.7881%" y="453" width="0.4532%" height="15" fill="rgb(214,87,48)"/><text x="95.0381%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (34 samples, 0.39%)</title><rect x="96.1024%" y="357" width="0.3852%" height="15" fill="rgb(246,198,24)"/><text x="96.3524%" y="367.50"></text></g><g><title>_int_malloc (33 samples, 0.37%)</title><rect x="96.9295%" y="325" width="0.3739%" height="15" fill="rgb(209,66,40)"/><text x="97.1795%" y="335.50"></text></g><g><title>__GI___libc_malloc (71 samples, 0.80%)</title><rect x="96.5556%" y="341" width="0.8044%" height="15" fill="rgb(233,147,39)"/><text x="96.8056%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (132 samples, 1.50%)</title><rect x="95.8758%" y="373" width="1.4956%" height="15" fill="rgb(231,145,52)"/><text x="96.1258%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (73 samples, 0.83%)</title><rect x="96.5443%" y="357" width="0.8271%" height="15" fill="rgb(206,20,26)"/><text x="96.7943%" y="367.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (186 samples, 2.11%)</title><rect x="95.4226%" y="405" width="2.1074%" height="15" fill="rgb(238,220,4)"/><text x="95.6726%" y="415.50">&lt;..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (178 samples, 2.02%)</title><rect x="95.5133%" y="389" width="2.0168%" height="15" fill="rgb(252,195,42)"/><text x="95.7633%" y="399.50">&lt;..</text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (14 samples, 0.16%)</title><rect x="97.3714%" y="373" width="0.1586%" height="15" fill="rgb(209,10,6)"/><text x="97.6214%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (215 samples, 2.44%)</title><rect x="95.2867%" y="421" width="2.4360%" height="15" fill="rgb(229,3,52)"/><text x="95.5367%" y="431.50">&lt;s..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.19%)</title><rect x="97.5300%" y="405" width="0.1926%" height="15" fill="rgb(253,49,37)"/><text x="97.7800%" y="415.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.16%)</title><rect x="97.5640%" y="389" width="0.1586%" height="15" fill="rgb(240,103,49)"/><text x="97.8140%" y="399.50"></text></g><g><title>decor::vault::print_as_filters (790 samples, 8.95%)</title><rect x="88.7945%" y="485" width="8.9508%" height="15" fill="rgb(250,182,30)"/><text x="89.0445%" y="495.50">decor::vault:..</text></g><g><title>decor::vault::get_vault_entries_with_constraint (287 samples, 3.25%)</title><rect x="94.4935%" y="469" width="3.2518%" height="15" fill="rgb(248,8,30)"/><text x="94.7435%" y="479.50">dec..</text></g><g><title>serde_json::de::from_str (221 samples, 2.50%)</title><rect x="95.2413%" y="453" width="2.5040%" height="15" fill="rgb(237,120,30)"/><text x="95.4913%" y="463.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (219 samples, 2.48%)</title><rect x="95.2640%" y="437" width="2.4813%" height="15" fill="rgb(221,146,34)"/><text x="95.5140%" y="447.50">&lt;&amp;..</text></g><g><title>__libc_recv (37 samples, 0.42%)</title><rect x="97.7566%" y="293" width="0.4192%" height="15" fill="rgb(242,55,13)"/><text x="98.0066%" y="303.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="277" width="0.4192%" height="15" fill="rgb(242,112,31)"/><text x="98.0066%" y="287.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="261" width="0.4192%" height="15" fill="rgb(249,192,27)"/><text x="98.0066%" y="271.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="245" width="0.4192%" height="15" fill="rgb(208,204,44)"/><text x="98.0066%" y="255.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="229" width="0.4192%" height="15" fill="rgb(208,93,54)"/><text x="98.0066%" y="239.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="213" width="0.4192%" height="15" fill="rgb(242,1,31)"/><text x="98.0066%" y="223.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="197" width="0.4192%" height="15" fill="rgb(241,83,25)"/><text x="98.0066%" y="207.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="181" width="0.4192%" height="15" fill="rgb(205,169,50)"/><text x="98.0066%" y="191.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="165" width="0.4192%" height="15" fill="rgb(239,186,37)"/><text x="98.0066%" y="175.50"></text></g><g><title>[unknown] (37 samples, 0.42%)</title><rect x="97.7566%" y="149" width="0.4192%" height="15" fill="rgb(205,221,10)"/><text x="98.0066%" y="159.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="97.7793%" y="133" width="0.3966%" height="15" fill="rgb(218,196,15)"/><text x="98.0293%" y="143.50"></text></g><g><title>[unknown] (35 samples, 0.40%)</title><rect x="97.7793%" y="117" width="0.3966%" height="15" fill="rgb(218,196,35)"/><text x="98.0293%" y="127.50"></text></g><g><title>[unknown] (32 samples, 0.36%)</title><rect x="97.8133%" y="101" width="0.3626%" height="15" fill="rgb(233,63,24)"/><text x="98.0633%" y="111.50"></text></g><g><title>[unknown] (30 samples, 0.34%)</title><rect x="97.8359%" y="85" width="0.3399%" height="15" fill="rgb(225,8,4)"/><text x="98.0859%" y="95.50"></text></g><g><title>[unknown] (29 samples, 0.33%)</title><rect x="97.8473%" y="69" width="0.3286%" height="15" fill="rgb(234,105,35)"/><text x="98.0973%" y="79.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="97.8699%" y="53" width="0.3059%" height="15" fill="rgb(236,21,32)"/><text x="98.1199%" y="63.50"></text></g><g><title>[unknown] (27 samples, 0.31%)</title><rect x="97.8699%" y="37" width="0.3059%" height="15" fill="rgb(228,109,6)"/><text x="98.1199%" y="47.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (38 samples, 0.43%)</title><rect x="97.7566%" y="421" width="0.4305%" height="15" fill="rgb(229,215,31)"/><text x="98.0066%" y="431.50"></text></g><g><title>mysql::conn::Conn::read_packet (38 samples, 0.43%)</title><rect x="97.7566%" y="405" width="0.4305%" height="15" fill="rgb(221,52,54)"/><text x="98.0066%" y="415.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.43%)</title><rect x="97.7566%" y="389" width="0.4305%" height="15" fill="rgb(252,129,43)"/><text x="98.0066%" y="399.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (38 samples, 0.43%)</title><rect x="97.7566%" y="373" width="0.4305%" height="15" fill="rgb(248,183,27)"/><text x="98.0066%" y="383.50"></text></g><g><title>&lt;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (38 samples, 0.43%)</title><rect x="97.7566%" y="357" width="0.4305%" height="15" fill="rgb(250,0,22)"/><text x="98.0066%" y="367.50"></text></g><g><title>&lt;&amp;std::sys::unix::ext::net::UnixStream as std::io::Read&gt;::read (38 samples, 0.43%)</title><rect x="97.7566%" y="341" width="0.4305%" height="15" fill="rgb(213,166,10)"/><text x="98.0066%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::read (38 samples, 0.43%)</title><rect x="97.7566%" y="325" width="0.4305%" height="15" fill="rgb(207,163,36)"/><text x="98.0066%" y="335.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (38 samples, 0.43%)</title><rect x="97.7566%" y="309" width="0.4305%" height="15" fill="rgb(208,122,22)"/><text x="98.0066%" y="319.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (40 samples, 0.45%)</title><rect x="97.7453%" y="453" width="0.4532%" height="15" fill="rgb(207,104,49)"/><text x="97.9953%" y="463.50"></text></g><g><title>mysql::conn::Conn::_query (39 samples, 0.44%)</title><rect x="97.7566%" y="437" width="0.4419%" height="15" fill="rgb(248,211,50)"/><text x="98.0066%" y="447.50"></text></g><g><title>decor::create_schema (41 samples, 0.46%)</title><rect x="97.7453%" y="469" width="0.4645%" height="15" fill="rgb(217,13,45)"/><text x="97.9953%" y="479.50"></text></g><g><title>hotcrp::datagen::papers::insert_papers (36 samples, 0.41%)</title><rect x="98.2098%" y="469" width="0.4079%" height="15" fill="rgb(211,216,49)"/><text x="98.4598%" y="479.50"></text></g><g><title>hotcrp::datagen::watches::insert_paper_watch (13 samples, 0.15%)</title><rect x="98.4704%" y="453" width="0.1473%" height="15" fill="rgb(221,58,53)"/><text x="98.7204%" y="463.50"></text></g><g><title>hotcrp::datagen::review_preferences::insert_review_preference (13 samples, 0.15%)</title><rect x="98.8103%" y="453" width="0.1473%" height="15" fill="rgb(220,112,41)"/><text x="99.0603%" y="463.50"></text></g><g><title>hotcrp::datagen::watches::insert_paper_watch (10 samples, 0.11%)</title><rect x="98.9576%" y="453" width="0.1133%" height="15" fill="rgb(236,38,28)"/><text x="99.2076%" y="463.50"></text></g><g><title>hotcrp::datagen::datagen::populate_database (118 samples, 1.34%)</title><rect x="97.7453%" y="485" width="1.3370%" height="15" fill="rgb(227,195,22)"/><text x="97.9953%" y="495.50"></text></g><g><title>hotcrp::datagen::reviews::insert_reviews (41 samples, 0.46%)</title><rect x="98.6177%" y="469" width="0.4645%" height="15" fill="rgb(214,55,33)"/><text x="98.8677%" y="479.50"></text></g><g><title>__libc_start_main (3,066 samples, 34.74%)</title><rect x="64.3780%" y="645" width="34.7383%" height="15" fill="rgb(248,80,13)"/><text x="64.6280%" y="655.50">__libc_start_main</text></g><g><title>main (3,066 samples, 34.74%)</title><rect x="64.3780%" y="629" width="34.7383%" height="15" fill="rgb(238,52,6)"/><text x="64.6280%" y="639.50">main</text></g><g><title>std::rt::lang_start_internal (3,066 samples, 34.74%)</title><rect x="64.3780%" y="613" width="34.7383%" height="15" fill="rgb(224,198,47)"/><text x="64.6280%" y="623.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (3,066 samples, 34.74%)</title><rect x="64.3780%" y="597" width="34.7383%" height="15" fill="rgb(233,171,20)"/><text x="64.6280%" y="607.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,066 samples, 34.74%)</title><rect x="64.3780%" y="581" width="34.7383%" height="15" fill="rgb(241,30,25)"/><text x="64.6280%" y="591.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,066 samples, 34.74%)</title><rect x="64.3780%" y="565" width="34.7383%" height="15" fill="rgb(207,171,38)"/><text x="64.6280%" y="575.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3,066 samples, 34.74%)</title><rect x="64.3780%" y="549" width="34.7383%" height="15" fill="rgb(234,70,1)"/><text x="64.6280%" y="559.50">core::ops::function::impls::&lt;impl core::ops::function::F..</text></g><g><title>std::rt::lang_start::_{{closure}} (3,066 samples, 34.74%)</title><rect x="64.3780%" y="533" width="34.7383%" height="15" fill="rgb(232,178,18)"/><text x="64.6280%" y="543.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,066 samples, 34.74%)</title><rect x="64.3780%" y="517" width="34.7383%" height="15" fill="rgb(241,78,40)"/><text x="64.6280%" y="527.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hotcrp::main (3,066 samples, 34.74%)</title><rect x="64.3780%" y="501" width="34.7383%" height="15" fill="rgb(222,35,25)"/><text x="64.6280%" y="511.50">hotcrp::main</text></g><g><title>_start (3,067 samples, 34.75%)</title><rect x="64.3780%" y="661" width="34.7496%" height="15" fill="rgb(207,92,16)"/><text x="64.6280%" y="671.50">_start</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.15%)</title><rect x="99.1276%" y="661" width="0.1473%" height="15" fill="rgb(216,59,51)"/><text x="99.3776%" y="671.50"></text></g><g><title>anon.9f80581cbd4891d461b714b0dd000855.3.llvm.9880703328634387284 (15 samples, 0.17%)</title><rect x="99.3202%" y="661" width="0.1700%" height="15" fill="rgb(213,80,28)"/><text x="99.5702%" y="671.50"></text></g><g><title>anon.d0324334b398a1ee1c168c2b0cdc8015.59.llvm.11327236328616719561 (9 samples, 0.10%)</title><rect x="99.4901%" y="661" width="0.1020%" height="15" fill="rgb(220,93,7)"/><text x="99.7401%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.10%)</title><rect x="99.4901%" y="645" width="0.1020%" height="15" fill="rgb(225,24,44)"/><text x="99.7401%" y="655.50"></text></g><g><title>hotcrp (8,820 samples, 99.93%)</title><rect x="0.0000%" y="677" width="99.9320%" height="15" fill="rgb(243,74,40)"/><text x="0.2500%" y="687.50">hotcrp</text></g><g><title>all (8,826 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(228,39,7)"/><text x="0.2500%" y="703.50"></text></g></svg></svg>