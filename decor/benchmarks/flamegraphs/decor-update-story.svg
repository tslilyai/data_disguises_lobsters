<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="0.0000%" y="757" width="0.1148%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="0.1148%" y="757" width="0.1148%" height="15" fill="rgb(217,0,24)"/><text x="0.3648%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 1.03%)</title><rect x="0.2296%" y="741" width="1.0333%" height="15" fill="rgb(221,193,54)"/><text x="0.4796%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="1.2629%" y="741" width="0.1148%" height="15" fill="rgb(248,212,6)"/><text x="1.5129%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="1.3777%" y="741" width="0.1148%" height="15" fill="rgb(208,68,35)"/><text x="1.6277%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="1.4925%" y="741" width="0.2296%" height="15" fill="rgb(232,128,0)"/><text x="1.7425%" y="751.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="1.7222%" y="741" width="0.1148%" height="15" fill="rgb(207,160,47)"/><text x="1.9722%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="1.7222%" y="725" width="0.1148%" height="15" fill="rgb(228,23,34)"/><text x="1.9722%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="1.8370%" y="741" width="0.1148%" height="15" fill="rgb(218,30,26)"/><text x="2.0870%" y="751.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.57%)</title><rect x="1.9518%" y="741" width="0.5741%" height="15" fill="rgb(220,122,19)"/><text x="2.2018%" y="751.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.34%)</title><rect x="2.5258%" y="741" width="0.3444%" height="15" fill="rgb(250,228,42)"/><text x="2.7758%" y="751.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="2.8703%" y="741" width="0.1148%" height="15" fill="rgb(240,193,28)"/><text x="3.1203%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="2.9851%" y="741" width="0.1148%" height="15" fill="rgb(216,20,37)"/><text x="3.2351%" y="751.50"></text></g><g><title>__rdl_realloc (4 samples, 0.46%)</title><rect x="3.0999%" y="741" width="0.4592%" height="15" fill="rgb(206,188,39)"/><text x="3.3499%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.46%)</title><rect x="3.0999%" y="725" width="0.4592%" height="15" fill="rgb(217,207,13)"/><text x="3.3499%" y="735.50"></text></g><g><title>_int_free (5 samples, 0.57%)</title><rect x="3.5591%" y="741" width="0.5741%" height="15" fill="rgb(231,73,38)"/><text x="3.8091%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.23%)</title><rect x="4.1332%" y="741" width="0.2296%" height="15" fill="rgb(225,20,46)"/><text x="4.3832%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.80%)</title><rect x="4.3628%" y="741" width="0.8037%" height="15" fill="rgb(210,31,41)"/><text x="4.6128%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.23%)</title><rect x="5.1665%" y="741" width="0.2296%" height="15" fill="rgb(221,200,47)"/><text x="5.4165%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.34%)</title><rect x="5.3961%" y="741" width="0.3444%" height="15" fill="rgb(226,26,5)"/><text x="5.6461%" y="751.50"></text></g><g><title>decor_mem::helpers::expr_is_ucol (1 samples, 0.11%)</title><rect x="5.7405%" y="741" width="0.1148%" height="15" fill="rgb(249,33,26)"/><text x="5.9905%" y="751.50"></text></g><g><title>decor_mem::helpers::plus_parser_vals (1 samples, 0.11%)</title><rect x="5.8553%" y="741" width="0.1148%" height="15" fill="rgb(235,183,28)"/><text x="6.1053%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (1 samples, 0.11%)</title><rect x="5.9701%" y="741" width="0.1148%" height="15" fill="rgb(221,5,38)"/><text x="6.2201%" y="751.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (2 samples, 0.23%)</title><rect x="6.0850%" y="741" width="0.2296%" height="15" fill="rgb(247,18,42)"/><text x="6.3350%" y="751.50"></text></g><g><title>decor_mem::views::View::update_index (1 samples, 0.11%)</title><rect x="6.3146%" y="741" width="0.1148%" height="15" fill="rgb(241,131,45)"/><text x="6.5646%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="6.4294%" y="741" width="0.1148%" height="15" fill="rgb(249,31,29)"/><text x="6.6794%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.34%)</title><rect x="6.5442%" y="741" width="0.3444%" height="15" fill="rgb(225,111,53)"/><text x="6.7942%" y="751.50"></text></g><g><title>[anon] (59 samples, 6.77%)</title><rect x="0.2296%" y="757" width="6.7738%" height="15" fill="rgb(238,160,17)"/><text x="0.4796%" y="767.50">[anon]</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="6.8886%" y="741" width="0.1148%" height="15" fill="rgb(214,148,48)"/><text x="7.1386%" y="751.50"></text></g><g><title>_int_realloc (2 samples, 0.23%)</title><rect x="7.0034%" y="741" width="0.2296%" height="15" fill="rgb(232,36,49)"/><text x="7.2534%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="7.2331%" y="741" width="0.2296%" height="15" fill="rgb(209,103,24)"/><text x="7.4831%" y="751.50"></text></g><g><title>[lobsters-microbenchmarks] (5 samples, 0.57%)</title><rect x="7.0034%" y="757" width="0.5741%" height="15" fill="rgb(229,88,8)"/><text x="7.2534%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="7.4627%" y="741" width="0.1148%" height="15" fill="rgb(213,181,19)"/><text x="7.7127%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="7.5775%" y="741" width="0.2296%" height="15" fill="rgb(254,191,54)"/><text x="7.8275%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="7.8071%" y="693" width="0.2296%" height="15" fill="rgb(241,83,37)"/><text x="8.0571%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="7.8071%" y="677" width="0.2296%" height="15" fill="rgb(233,36,39)"/><text x="8.0571%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="7.8071%" y="661" width="0.2296%" height="15" fill="rgb(226,3,54)"/><text x="8.0571%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="7.8071%" y="645" width="0.2296%" height="15" fill="rgb(245,192,40)"/><text x="8.0571%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="7.8071%" y="629" width="0.2296%" height="15" fill="rgb(238,167,29)"/><text x="8.0571%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="7.8071%" y="613" width="0.2296%" height="15" fill="rgb(232,182,51)"/><text x="8.0571%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="7.8071%" y="597" width="0.2296%" height="15" fill="rgb(231,60,39)"/><text x="8.0571%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.23%)</title><rect x="7.8071%" y="581" width="0.2296%" height="15" fill="rgb(208,69,12)"/><text x="8.0571%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.23%)</title><rect x="7.8071%" y="565" width="0.2296%" height="15" fill="rgb(235,93,37)"/><text x="8.0571%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="7.8071%" y="549" width="0.2296%" height="15" fill="rgb(213,116,39)"/><text x="8.0571%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="7.8071%" y="533" width="0.2296%" height="15" fill="rgb(222,207,29)"/><text x="8.0571%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="7.8071%" y="517" width="0.2296%" height="15" fill="rgb(206,96,30)"/><text x="8.0571%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="7.8071%" y="501" width="0.2296%" height="15" fill="rgb(218,138,4)"/><text x="8.0571%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.23%)</title><rect x="7.8071%" y="485" width="0.2296%" height="15" fill="rgb(250,191,14)"/><text x="8.0571%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="7.8071%" y="469" width="0.2296%" height="15" fill="rgb(239,60,40)"/><text x="8.0571%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="7.8071%" y="453" width="0.2296%" height="15" fill="rgb(206,27,48)"/><text x="8.0571%" y="463.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="7.8071%" y="437" width="0.2296%" height="15" fill="rgb(225,35,8)"/><text x="8.0571%" y="447.50"></text></g><g><title>_int_malloc (2 samples, 0.23%)</title><rect x="7.8071%" y="421" width="0.2296%" height="15" fill="rgb(250,213,24)"/><text x="8.0571%" y="431.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="7.9219%" y="405" width="0.1148%" height="15" fill="rgb(247,123,22)"/><text x="8.1719%" y="415.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="7.9219%" y="389" width="0.1148%" height="15" fill="rgb(231,138,38)"/><text x="8.1719%" y="399.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="7.9219%" y="373" width="0.1148%" height="15" fill="rgb(231,145,46)"/><text x="8.1719%" y="383.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="7.9219%" y="357" width="0.1148%" height="15" fill="rgb(251,118,11)"/><text x="8.1719%" y="367.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="7.9219%" y="341" width="0.1148%" height="15" fill="rgb(217,147,25)"/><text x="8.1719%" y="351.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="7.9219%" y="325" width="0.1148%" height="15" fill="rgb(247,81,37)"/><text x="8.1719%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="7.9219%" y="309" width="0.1148%" height="15" fill="rgb(209,12,38)"/><text x="8.1719%" y="319.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="7.9219%" y="293" width="0.1148%" height="15" fill="rgb(227,1,9)"/><text x="8.1719%" y="303.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="7.9219%" y="277" width="0.1148%" height="15" fill="rgb(248,47,43)"/><text x="8.1719%" y="287.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="7.9219%" y="261" width="0.1148%" height="15" fill="rgb(221,10,30)"/><text x="8.1719%" y="271.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="7.9219%" y="245" width="0.1148%" height="15" fill="rgb(210,229,1)"/><text x="8.1719%" y="255.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="8.0367%" y="613" width="0.1148%" height="15" fill="rgb(222,148,37)"/><text x="8.2867%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="8.0367%" y="597" width="0.1148%" height="15" fill="rgb(234,67,33)"/><text x="8.2867%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="8.0367%" y="581" width="0.1148%" height="15" fill="rgb(247,98,35)"/><text x="8.2867%" y="591.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="8.0367%" y="565" width="0.1148%" height="15" fill="rgb(247,138,52)"/><text x="8.2867%" y="575.50"></text></g><g><title>__GI___mprotect (1 samples, 0.11%)</title><rect x="8.0367%" y="549" width="0.1148%" height="15" fill="rgb(213,79,30)"/><text x="8.2867%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="8.0367%" y="533" width="0.1148%" height="15" fill="rgb(246,177,23)"/><text x="8.2867%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="8.0367%" y="517" width="0.1148%" height="15" fill="rgb(230,62,27)"/><text x="8.2867%" y="527.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.11%)</title><rect x="8.0367%" y="501" width="0.1148%" height="15" fill="rgb(216,154,8)"/><text x="8.2867%" y="511.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.11%)</title><rect x="8.0367%" y="485" width="0.1148%" height="15" fill="rgb(244,35,45)"/><text x="8.2867%" y="495.50"></text></g><g><title>mprotect_fixup (1 samples, 0.11%)</title><rect x="8.0367%" y="469" width="0.1148%" height="15" fill="rgb(251,115,12)"/><text x="8.2867%" y="479.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="8.0367%" y="453" width="0.1148%" height="15" fill="rgb(240,54,50)"/><text x="8.2867%" y="463.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="8.0367%" y="437" width="0.1148%" height="15" fill="rgb(233,84,52)"/><text x="8.2867%" y="447.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="8.0367%" y="421" width="0.1148%" height="15" fill="rgb(207,117,47)"/><text x="8.2867%" y="431.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="8.1515%" y="501" width="0.1148%" height="15" fill="rgb(249,43,39)"/><text x="8.4015%" y="511.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="8.6108%" y="405" width="0.1148%" height="15" fill="rgb(209,38,44)"/><text x="8.8608%" y="415.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="8.6108%" y="389" width="0.1148%" height="15" fill="rgb(236,212,23)"/><text x="8.8608%" y="399.50"></text></g><g><title>sock_rfree (1 samples, 0.11%)</title><rect x="8.6108%" y="373" width="0.1148%" height="15" fill="rgb(242,79,21)"/><text x="8.8608%" y="383.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="8.8404%" y="325" width="0.1148%" height="15" fill="rgb(211,96,35)"/><text x="9.0904%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="8.8404%" y="309" width="0.1148%" height="15" fill="rgb(253,215,40)"/><text x="9.0904%" y="319.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="8.8404%" y="293" width="0.1148%" height="15" fill="rgb(211,81,21)"/><text x="9.0904%" y="303.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="8.8404%" y="277" width="0.1148%" height="15" fill="rgb(208,190,38)"/><text x="9.0904%" y="287.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.92%)</title><rect x="8.1515%" y="597" width="0.9185%" height="15" fill="rgb(235,213,38)"/><text x="8.4015%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.92%)</title><rect x="8.1515%" y="581" width="0.9185%" height="15" fill="rgb(237,122,38)"/><text x="8.4015%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 0.92%)</title><rect x="8.1515%" y="565" width="0.9185%" height="15" fill="rgb(244,218,35)"/><text x="8.4015%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 0.92%)</title><rect x="8.1515%" y="549" width="0.9185%" height="15" fill="rgb(240,68,47)"/><text x="8.4015%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 0.92%)</title><rect x="8.1515%" y="533" width="0.9185%" height="15" fill="rgb(210,16,53)"/><text x="8.4015%" y="543.50"></text></g><g><title>__libc_recv (8 samples, 0.92%)</title><rect x="8.1515%" y="517" width="0.9185%" height="15" fill="rgb(235,124,12)"/><text x="8.4015%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.80%)</title><rect x="8.2664%" y="501" width="0.8037%" height="15" fill="rgb(224,169,11)"/><text x="8.5164%" y="511.50"></text></g><g><title>do_syscall_64 (6 samples, 0.69%)</title><rect x="8.3812%" y="485" width="0.6889%" height="15" fill="rgb(250,166,2)"/><text x="8.6312%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.69%)</title><rect x="8.3812%" y="469" width="0.6889%" height="15" fill="rgb(242,216,29)"/><text x="8.6312%" y="479.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.69%)</title><rect x="8.3812%" y="453" width="0.6889%" height="15" fill="rgb(230,116,27)"/><text x="8.6312%" y="463.50"></text></g><g><title>inet_recvmsg (6 samples, 0.69%)</title><rect x="8.3812%" y="437" width="0.6889%" height="15" fill="rgb(228,99,48)"/><text x="8.6312%" y="447.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.69%)</title><rect x="8.3812%" y="421" width="0.6889%" height="15" fill="rgb(253,11,6)"/><text x="8.6312%" y="431.50"></text></g><g><title>sk_wait_data (3 samples, 0.34%)</title><rect x="8.7256%" y="405" width="0.3444%" height="15" fill="rgb(247,143,39)"/><text x="8.9756%" y="415.50"></text></g><g><title>wait_woken (3 samples, 0.34%)</title><rect x="8.7256%" y="389" width="0.3444%" height="15" fill="rgb(236,97,10)"/><text x="8.9756%" y="399.50"></text></g><g><title>schedule_timeout (2 samples, 0.23%)</title><rect x="8.8404%" y="373" width="0.2296%" height="15" fill="rgb(233,208,19)"/><text x="9.0904%" y="383.50"></text></g><g><title>schedule (2 samples, 0.23%)</title><rect x="8.8404%" y="357" width="0.2296%" height="15" fill="rgb(216,164,2)"/><text x="9.0904%" y="367.50"></text></g><g><title>__schedule (2 samples, 0.23%)</title><rect x="8.8404%" y="341" width="0.2296%" height="15" fill="rgb(220,129,5)"/><text x="9.0904%" y="351.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="8.9552%" y="325" width="0.1148%" height="15" fill="rgb(242,17,10)"/><text x="9.2052%" y="335.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="8.9552%" y="309" width="0.1148%" height="15" fill="rgb(242,107,0)"/><text x="9.2052%" y="319.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (11 samples, 1.26%)</title><rect x="8.0367%" y="693" width="1.2629%" height="15" fill="rgb(251,28,31)"/><text x="8.2867%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (11 samples, 1.26%)</title><rect x="8.0367%" y="677" width="1.2629%" height="15" fill="rgb(233,223,10)"/><text x="8.2867%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (11 samples, 1.26%)</title><rect x="8.0367%" y="661" width="1.2629%" height="15" fill="rgb(215,21,27)"/><text x="8.2867%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (11 samples, 1.26%)</title><rect x="8.0367%" y="645" width="1.2629%" height="15" fill="rgb(232,23,21)"/><text x="8.2867%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 1.26%)</title><rect x="8.0367%" y="629" width="1.2629%" height="15" fill="rgb(244,5,23)"/><text x="8.2867%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.15%)</title><rect x="8.1515%" y="613" width="1.1481%" height="15" fill="rgb(226,81,46)"/><text x="8.4015%" y="623.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.23%)</title><rect x="9.0700%" y="597" width="0.2296%" height="15" fill="rgb(247,70,30)"/><text x="9.3200%" y="607.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.23%)</title><rect x="9.0700%" y="581" width="0.2296%" height="15" fill="rgb(212,68,19)"/><text x="9.3200%" y="591.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.23%)</title><rect x="9.0700%" y="565" width="0.2296%" height="15" fill="rgb(240,187,13)"/><text x="9.3200%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="9.0700%" y="549" width="0.2296%" height="15" fill="rgb(223,113,26)"/><text x="9.3200%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="9.0700%" y="533" width="0.2296%" height="15" fill="rgb(206,192,2)"/><text x="9.3200%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.23%)</title><rect x="9.0700%" y="517" width="0.2296%" height="15" fill="rgb(241,108,4)"/><text x="9.3200%" y="527.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (2 samples, 0.23%)</title><rect x="9.2997%" y="693" width="0.2296%" height="15" fill="rgb(247,173,49)"/><text x="9.5497%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="9.4145%" y="677" width="0.1148%" height="15" fill="rgb(224,114,35)"/><text x="9.6645%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="9.4145%" y="661" width="0.1148%" height="15" fill="rgb(245,159,27)"/><text x="9.6645%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (16 samples, 1.84%)</title><rect x="7.8071%" y="725" width="1.8370%" height="15" fill="rgb(245,172,44)"/><text x="8.0571%" y="735.50">d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (16 samples, 1.84%)</title><rect x="7.8071%" y="709" width="1.8370%" height="15" fill="rgb(236,23,11)"/><text x="8.0571%" y="719.50">d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::selection_to_datatable_selection (1 samples, 0.11%)</title><rect x="9.5293%" y="693" width="0.1148%" height="15" fill="rgb(205,117,38)"/><text x="9.7793%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="9.6441%" y="709" width="0.2296%" height="15" fill="rgb(237,72,25)"/><text x="9.8941%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="9.6441%" y="693" width="0.2296%" height="15" fill="rgb(244,70,9)"/><text x="9.8941%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="9.6441%" y="677" width="0.2296%" height="15" fill="rgb(217,125,39)"/><text x="9.8941%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="9.6441%" y="661" width="0.2296%" height="15" fill="rgb(235,36,10)"/><text x="9.8941%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="9.6441%" y="645" width="0.2296%" height="15" fill="rgb(251,123,47)"/><text x="9.8941%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="9.6441%" y="629" width="0.2296%" height="15" fill="rgb(221,13,13)"/><text x="9.8941%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="9.7589%" y="613" width="0.1148%" height="15" fill="rgb(238,131,9)"/><text x="10.0089%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="9.7589%" y="597" width="0.1148%" height="15" fill="rgb(211,50,8)"/><text x="10.0089%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="9.7589%" y="581" width="0.1148%" height="15" fill="rgb(245,182,24)"/><text x="10.0089%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="9.7589%" y="565" width="0.1148%" height="15" fill="rgb(242,14,37)"/><text x="10.0089%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="9.7589%" y="549" width="0.1148%" height="15" fill="rgb(246,228,12)"/><text x="10.0089%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="9.7589%" y="533" width="0.1148%" height="15" fill="rgb(213,55,15)"/><text x="10.0089%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="9.7589%" y="517" width="0.1148%" height="15" fill="rgb(209,9,3)"/><text x="10.0089%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="9.7589%" y="501" width="0.1148%" height="15" fill="rgb(230,59,30)"/><text x="10.0089%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="9.7589%" y="485" width="0.1148%" height="15" fill="rgb(209,121,21)"/><text x="10.0089%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="9.7589%" y="469" width="0.1148%" height="15" fill="rgb(220,109,13)"/><text x="10.0089%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="9.7589%" y="453" width="0.1148%" height="15" fill="rgb(232,18,1)"/><text x="10.0089%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="9.7589%" y="437" width="0.1148%" height="15" fill="rgb(215,41,42)"/><text x="10.0089%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="9.7589%" y="421" width="0.1148%" height="15" fill="rgb(224,123,36)"/><text x="10.0089%" y="431.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="9.7589%" y="405" width="0.1148%" height="15" fill="rgb(240,125,3)"/><text x="10.0089%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.23%)</title><rect x="10.9070%" y="645" width="0.2296%" height="15" fill="rgb(205,98,50)"/><text x="11.1570%" y="655.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (15 samples, 1.72%)</title><rect x="9.6441%" y="725" width="1.7222%" height="15" fill="rgb(205,185,37)"/><text x="9.8941%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (13 samples, 1.49%)</title><rect x="9.8737%" y="709" width="1.4925%" height="15" fill="rgb(238,207,15)"/><text x="10.1237%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (13 samples, 1.49%)</title><rect x="9.8737%" y="693" width="1.4925%" height="15" fill="rgb(213,199,42)"/><text x="10.1237%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (13 samples, 1.49%)</title><rect x="9.8737%" y="677" width="1.4925%" height="15" fill="rgb(235,201,11)"/><text x="10.1237%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (13 samples, 1.49%)</title><rect x="9.8737%" y="661" width="1.4925%" height="15" fill="rgb(207,46,11)"/><text x="10.1237%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.23%)</title><rect x="11.1366%" y="645" width="0.2296%" height="15" fill="rgb(241,35,35)"/><text x="11.3866%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="11.2514%" y="629" width="0.1148%" height="15" fill="rgb(243,32,47)"/><text x="11.5014%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="11.2514%" y="613" width="0.1148%" height="15" fill="rgb(247,202,23)"/><text x="11.5014%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="11.2514%" y="597" width="0.1148%" height="15" fill="rgb(219,102,11)"/><text x="11.5014%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="11.2514%" y="581" width="0.1148%" height="15" fill="rgb(243,110,44)"/><text x="11.5014%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="11.3662%" y="677" width="0.1148%" height="15" fill="rgb(222,74,54)"/><text x="11.6162%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="11.4811%" y="677" width="0.1148%" height="15" fill="rgb(216,99,12)"/><text x="11.7311%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="11.4811%" y="661" width="0.1148%" height="15" fill="rgb(226,22,26)"/><text x="11.7311%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.11%)</title><rect x="11.5959%" y="677" width="0.1148%" height="15" fill="rgb(217,163,10)"/><text x="11.8459%" y="687.50"></text></g><g><title>stacker::remaining_stack (1 samples, 0.11%)</title><rect x="11.5959%" y="661" width="0.1148%" height="15" fill="rgb(213,25,53)"/><text x="11.8459%" y="671.50"></text></g><g><title>psm::stack_pointer (1 samples, 0.11%)</title><rect x="11.5959%" y="645" width="0.1148%" height="15" fill="rgb(252,105,26)"/><text x="11.8459%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="11.7107%" y="661" width="0.1148%" height="15" fill="rgb(220,39,43)"/><text x="11.9607%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="11.7107%" y="645" width="0.1148%" height="15" fill="rgb(229,68,48)"/><text x="11.9607%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="11.7107%" y="629" width="0.1148%" height="15" fill="rgb(252,8,32)"/><text x="11.9607%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="11.7107%" y="613" width="0.1148%" height="15" fill="rgb(223,20,43)"/><text x="11.9607%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="11.7107%" y="597" width="0.1148%" height="15" fill="rgb(229,81,49)"/><text x="11.9607%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="11.7107%" y="581" width="0.1148%" height="15" fill="rgb(236,28,36)"/><text x="11.9607%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="11.7107%" y="565" width="0.1148%" height="15" fill="rgb(249,185,26)"/><text x="11.9607%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="11.7107%" y="549" width="0.1148%" height="15" fill="rgb(249,174,33)"/><text x="11.9607%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="11.7107%" y="533" width="0.1148%" height="15" fill="rgb(233,201,37)"/><text x="11.9607%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="11.7107%" y="517" width="0.1148%" height="15" fill="rgb(221,78,26)"/><text x="11.9607%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="11.7107%" y="501" width="0.1148%" height="15" fill="rgb(250,127,30)"/><text x="11.9607%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="11.7107%" y="485" width="0.1148%" height="15" fill="rgb(230,49,44)"/><text x="11.9607%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="11.7107%" y="469" width="0.1148%" height="15" fill="rgb(229,67,23)"/><text x="11.9607%" y="479.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.23%)</title><rect x="11.7107%" y="677" width="0.2296%" height="15" fill="rgb(249,83,47)"/><text x="11.9607%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.11%)</title><rect x="11.8255%" y="661" width="0.1148%" height="15" fill="rgb(215,43,3)"/><text x="12.0755%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.11%)</title><rect x="11.8255%" y="645" width="0.1148%" height="15" fill="rgb(238,154,13)"/><text x="12.0755%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="11.8255%" y="629" width="0.1148%" height="15" fill="rgb(219,56,2)"/><text x="12.0755%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="11.8255%" y="613" width="0.1148%" height="15" fill="rgb(233,0,4)"/><text x="12.0755%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="11.9403%" y="677" width="0.1148%" height="15" fill="rgb(235,30,7)"/><text x="12.1903%" y="687.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.0551%" y="629" width="0.1148%" height="15" fill="rgb(250,79,13)"/><text x="12.3051%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.0551%" y="613" width="0.1148%" height="15" fill="rgb(211,146,34)"/><text x="12.3051%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="12.0551%" y="597" width="0.1148%" height="15" fill="rgb(228,22,38)"/><text x="12.3051%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.0551%" y="581" width="0.1148%" height="15" fill="rgb(235,168,5)"/><text x="12.3051%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.11%)</title><rect x="12.0551%" y="565" width="0.1148%" height="15" fill="rgb(221,155,16)"/><text x="12.3051%" y="575.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (39 samples, 4.48%)</title><rect x="7.8071%" y="741" width="4.4776%" height="15" fill="rgb(215,215,53)"/><text x="8.0571%" y="751.50">&lt;deco..</text></g><g><title>decor_mem::stats::get_qtype (8 samples, 0.92%)</title><rect x="11.3662%" y="725" width="0.9185%" height="15" fill="rgb(223,4,10)"/><text x="11.6162%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (8 samples, 0.92%)</title><rect x="11.3662%" y="709" width="0.9185%" height="15" fill="rgb(234,103,6)"/><text x="11.6162%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (8 samples, 0.92%)</title><rect x="11.3662%" y="693" width="0.9185%" height="15" fill="rgb(227,97,0)"/><text x="11.6162%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (2 samples, 0.23%)</title><rect x="12.0551%" y="677" width="0.2296%" height="15" fill="rgb(234,150,53)"/><text x="12.3051%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.23%)</title><rect x="12.0551%" y="661" width="0.2296%" height="15" fill="rgb(228,201,54)"/><text x="12.3051%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.23%)</title><rect x="12.0551%" y="645" width="0.2296%" height="15" fill="rgb(222,22,37)"/><text x="12.3051%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.11%)</title><rect x="12.1699%" y="629" width="0.1148%" height="15" fill="rgb(237,53,32)"/><text x="12.4199%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="12.1699%" y="613" width="0.1148%" height="15" fill="rgb(233,25,53)"/><text x="12.4199%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="12.1699%" y="597" width="0.1148%" height="15" fill="rgb(210,40,34)"/><text x="12.4199%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="12.1699%" y="581" width="0.1148%" height="15" fill="rgb(241,220,44)"/><text x="12.4199%" y="591.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="12.2847%" y="741" width="0.1148%" height="15" fill="rgb(235,28,35)"/><text x="12.5347%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="12.3995%" y="741" width="0.1148%" height="15" fill="rgb(210,56,17)"/><text x="12.6495%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="12.5144%" y="741" width="0.1148%" height="15" fill="rgb(224,130,29)"/><text x="12.7644%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="12.6292%" y="741" width="0.1148%" height="15" fill="rgb(235,212,8)"/><text x="12.8792%" y="751.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="12.7440%" y="741" width="0.1148%" height="15" fill="rgb(223,33,50)"/><text x="12.9940%" y="751.50"></text></g><g><title>__GI___libc_free (4 samples, 0.46%)</title><rect x="12.8588%" y="741" width="0.4592%" height="15" fill="rgb(219,149,13)"/><text x="13.1088%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.34%)</title><rect x="13.4328%" y="485" width="0.3444%" height="15" fill="rgb(250,156,29)"/><text x="13.6828%" y="495.50"></text></g><g><title>hwloc::Topology::new (5 samples, 0.57%)</title><rect x="13.3180%" y="581" width="0.5741%" height="15" fill="rgb(216,193,19)"/><text x="13.5680%" y="591.50"></text></g><g><title>hwloc_topology_load (5 samples, 0.57%)</title><rect x="13.3180%" y="565" width="0.5741%" height="15" fill="rgb(216,135,14)"/><text x="13.5680%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.57%)</title><rect x="13.3180%" y="549" width="0.5741%" height="15" fill="rgb(241,47,5)"/><text x="13.5680%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.57%)</title><rect x="13.3180%" y="533" width="0.5741%" height="15" fill="rgb(233,42,35)"/><text x="13.5680%" y="543.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.57%)</title><rect x="13.3180%" y="517" width="0.5741%" height="15" fill="rgb(231,13,6)"/><text x="13.5680%" y="527.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.57%)</title><rect x="13.3180%" y="501" width="0.5741%" height="15" fill="rgb(207,181,40)"/><text x="13.5680%" y="511.50"></text></g><g><title>__GI___strdup (1 samples, 0.11%)</title><rect x="13.7773%" y="485" width="0.1148%" height="15" fill="rgb(254,173,49)"/><text x="14.0273%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="13.7773%" y="469" width="0.1148%" height="15" fill="rgb(221,1,38)"/><text x="14.0273%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="13.7773%" y="453" width="0.1148%" height="15" fill="rgb(206,124,46)"/><text x="14.0273%" y="463.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="13.7773%" y="437" width="0.1148%" height="15" fill="rgb(249,21,11)"/><text x="14.0273%" y="447.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="13.7773%" y="421" width="0.1148%" height="15" fill="rgb(222,201,40)"/><text x="14.0273%" y="431.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="13.7773%" y="405" width="0.1148%" height="15" fill="rgb(235,61,29)"/><text x="14.0273%" y="415.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="13.7773%" y="389" width="0.1148%" height="15" fill="rgb(219,207,3)"/><text x="14.0273%" y="399.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="13.7773%" y="373" width="0.1148%" height="15" fill="rgb(222,56,46)"/><text x="14.0273%" y="383.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="13.7773%" y="357" width="0.1148%" height="15" fill="rgb(239,76,54)"/><text x="14.0273%" y="367.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="13.7773%" y="341" width="0.1148%" height="15" fill="rgb(231,124,27)"/><text x="14.0273%" y="351.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="13.7773%" y="325" width="0.1148%" height="15" fill="rgb(249,195,6)"/><text x="14.0273%" y="335.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="13.7773%" y="309" width="0.1148%" height="15" fill="rgb(237,174,47)"/><text x="14.0273%" y="319.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="13.7773%" y="293" width="0.1148%" height="15" fill="rgb(206,201,31)"/><text x="14.0273%" y="303.50"></text></g><g><title>__libc_start_main (6 samples, 0.69%)</title><rect x="13.3180%" y="741" width="0.6889%" height="15" fill="rgb(231,57,52)"/><text x="13.5680%" y="751.50"></text></g><g><title>main (6 samples, 0.69%)</title><rect x="13.3180%" y="725" width="0.6889%" height="15" fill="rgb(248,177,22)"/><text x="13.5680%" y="735.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.69%)</title><rect x="13.3180%" y="709" width="0.6889%" height="15" fill="rgb(215,211,37)"/><text x="13.5680%" y="719.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.69%)</title><rect x="13.3180%" y="693" width="0.6889%" height="15" fill="rgb(241,128,51)"/><text x="13.5680%" y="703.50"></text></g><g><title>std::panicking::try (6 samples, 0.69%)</title><rect x="13.3180%" y="677" width="0.6889%" height="15" fill="rgb(227,165,31)"/><text x="13.5680%" y="687.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.69%)</title><rect x="13.3180%" y="661" width="0.6889%" height="15" fill="rgb(228,167,24)"/><text x="13.5680%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.69%)</title><rect x="13.3180%" y="645" width="0.6889%" height="15" fill="rgb(228,143,12)"/><text x="13.5680%" y="655.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.69%)</title><rect x="13.3180%" y="629" width="0.6889%" height="15" fill="rgb(249,149,8)"/><text x="13.5680%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.69%)</title><rect x="13.3180%" y="613" width="0.6889%" height="15" fill="rgb(243,35,44)"/><text x="13.5680%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::main (6 samples, 0.69%)</title><rect x="13.3180%" y="597" width="0.6889%" height="15" fill="rgb(246,89,9)"/><text x="13.5680%" y="607.50"></text></g><g><title>lobsters_microbenchmarks::queriers::expensive_queries::post_comment (1 samples, 0.11%)</title><rect x="13.8921%" y="581" width="0.1148%" height="15" fill="rgb(233,213,13)"/><text x="14.1421%" y="591.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.11%)</title><rect x="13.8921%" y="565" width="0.1148%" height="15" fill="rgb(233,141,41)"/><text x="14.1421%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.11%)</title><rect x="13.8921%" y="549" width="0.1148%" height="15" fill="rgb(239,167,4)"/><text x="14.1421%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="13.8921%" y="533" width="0.1148%" height="15" fill="rgb(209,217,16)"/><text x="14.1421%" y="543.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.11%)</title><rect x="13.8921%" y="517" width="0.1148%" height="15" fill="rgb(219,88,35)"/><text x="14.1421%" y="527.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (1 samples, 0.11%)</title><rect x="13.8921%" y="501" width="0.1148%" height="15" fill="rgb(220,193,23)"/><text x="14.1421%" y="511.50"></text></g><g><title>__rdl_alloc (2 samples, 0.23%)</title><rect x="14.0069%" y="741" width="0.2296%" height="15" fill="rgb(230,90,52)"/><text x="14.2569%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="14.1217%" y="725" width="0.1148%" height="15" fill="rgb(252,106,19)"/><text x="14.3717%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="14.2365%" y="741" width="0.1148%" height="15" fill="rgb(206,74,20)"/><text x="14.4865%" y="751.50"></text></g><g><title>_int_realloc (4 samples, 0.46%)</title><rect x="14.3513%" y="741" width="0.4592%" height="15" fill="rgb(230,138,44)"/><text x="14.6013%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="14.8106%" y="741" width="0.1148%" height="15" fill="rgb(235,182,43)"/><text x="15.0606%" y="751.50"></text></g><g><title>core::fmt::write (7 samples, 0.80%)</title><rect x="14.9254%" y="741" width="0.8037%" height="15" fill="rgb(242,16,51)"/><text x="15.1754%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.7290%" y="741" width="0.1148%" height="15" fill="rgb(248,9,4)"/><text x="15.9790%" y="751.50"></text></g><g><title>decor_mem::Shim::create_schema (1 samples, 0.11%)</title><rect x="15.8439%" y="741" width="0.1148%" height="15" fill="rgb(210,31,22)"/><text x="16.0939%" y="751.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="15.8439%" y="725" width="0.1148%" height="15" fill="rgb(239,54,39)"/><text x="16.0939%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="15.8439%" y="709" width="0.1148%" height="15" fill="rgb(230,99,41)"/><text x="16.0939%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.11%)</title><rect x="15.8439%" y="693" width="0.1148%" height="15" fill="rgb(253,106,12)"/><text x="16.0939%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="15.8439%" y="677" width="0.1148%" height="15" fill="rgb(213,46,41)"/><text x="16.0939%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="15.8439%" y="661" width="0.1148%" height="15" fill="rgb(215,133,35)"/><text x="16.0939%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="15.8439%" y="645" width="0.1148%" height="15" fill="rgb(213,28,5)"/><text x="16.0939%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="15.8439%" y="629" width="0.1148%" height="15" fill="rgb(215,77,49)"/><text x="16.0939%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="15.8439%" y="613" width="0.1148%" height="15" fill="rgb(248,100,22)"/><text x="16.0939%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="15.8439%" y="597" width="0.1148%" height="15" fill="rgb(208,67,9)"/><text x="16.0939%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="15.8439%" y="581" width="0.1148%" height="15" fill="rgb(219,133,21)"/><text x="16.0939%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="16.0735%" y="677" width="0.1148%" height="15" fill="rgb(246,46,29)"/><text x="16.3235%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="16.0735%" y="661" width="0.1148%" height="15" fill="rgb(246,185,52)"/><text x="16.3235%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="16.0735%" y="645" width="0.1148%" height="15" fill="rgb(252,136,11)"/><text x="16.3235%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="16.0735%" y="629" width="0.1148%" height="15" fill="rgb(219,138,53)"/><text x="16.3235%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="16.0735%" y="613" width="0.1148%" height="15" fill="rgb(211,51,23)"/><text x="16.3235%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="16.0735%" y="597" width="0.1148%" height="15" fill="rgb(247,221,28)"/><text x="16.3235%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="16.0735%" y="581" width="0.1148%" height="15" fill="rgb(251,222,45)"/><text x="16.3235%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="16.0735%" y="565" width="0.1148%" height="15" fill="rgb(217,162,53)"/><text x="16.3235%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="16.0735%" y="549" width="0.1148%" height="15" fill="rgb(229,93,14)"/><text x="16.3235%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="16.0735%" y="533" width="0.1148%" height="15" fill="rgb(209,67,49)"/><text x="16.3235%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="16.0735%" y="517" width="0.1148%" height="15" fill="rgb(213,87,29)"/><text x="16.3235%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="16.0735%" y="501" width="0.1148%" height="15" fill="rgb(205,151,52)"/><text x="16.3235%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="16.0735%" y="485" width="0.1148%" height="15" fill="rgb(253,215,39)"/><text x="16.3235%" y="495.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.34%)</title><rect x="15.9587%" y="693" width="0.3444%" height="15" fill="rgb(221,220,41)"/><text x="16.2087%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="16.1883%" y="677" width="0.1148%" height="15" fill="rgb(218,133,21)"/><text x="16.4383%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="16.4179%" y="645" width="0.1148%" height="15" fill="rgb(221,193,43)"/><text x="16.6679%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="16.4179%" y="629" width="0.1148%" height="15" fill="rgb(240,128,52)"/><text x="16.6679%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="16.4179%" y="613" width="0.1148%" height="15" fill="rgb(253,114,12)"/><text x="16.6679%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="16.4179%" y="597" width="0.1148%" height="15" fill="rgb(215,223,47)"/><text x="16.6679%" y="607.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (4 samples, 0.46%)</title><rect x="16.5327%" y="645" width="0.4592%" height="15" fill="rgb(248,225,23)"/><text x="16.7827%" y="655.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.23%)</title><rect x="16.7623%" y="629" width="0.2296%" height="15" fill="rgb(250,108,0)"/><text x="17.0123%" y="639.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (10 samples, 1.15%)</title><rect x="15.9587%" y="741" width="1.1481%" height="15" fill="rgb(228,208,7)"/><text x="16.2087%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (10 samples, 1.15%)</title><rect x="15.9587%" y="725" width="1.1481%" height="15" fill="rgb(244,45,10)"/><text x="16.2087%" y="735.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (10 samples, 1.15%)</title><rect x="15.9587%" y="709" width="1.1481%" height="15" fill="rgb(207,125,25)"/><text x="16.2087%" y="719.50"></text></g><g><title>decor_mem::stats::get_qtype (7 samples, 0.80%)</title><rect x="16.3031%" y="693" width="0.8037%" height="15" fill="rgb(210,195,18)"/><text x="16.5531%" y="703.50"></text></g><g><title>sql_parser::parser::parse_statements (7 samples, 0.80%)</title><rect x="16.3031%" y="677" width="0.8037%" height="15" fill="rgb(249,80,12)"/><text x="16.5531%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (7 samples, 0.80%)</title><rect x="16.3031%" y="661" width="0.8037%" height="15" fill="rgb(221,65,9)"/><text x="16.5531%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.11%)</title><rect x="16.9920%" y="645" width="0.1148%" height="15" fill="rgb(235,49,36)"/><text x="17.2420%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.11%)</title><rect x="17.2216%" y="693" width="0.1148%" height="15" fill="rgb(225,32,20)"/><text x="17.4716%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="17.2216%" y="677" width="0.1148%" height="15" fill="rgb(215,141,46)"/><text x="17.4716%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="17.2216%" y="661" width="0.1148%" height="15" fill="rgb(250,160,47)"/><text x="17.4716%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="17.2216%" y="645" width="0.1148%" height="15" fill="rgb(216,222,40)"/><text x="17.4716%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="17.2216%" y="629" width="0.1148%" height="15" fill="rgb(234,217,39)"/><text x="17.4716%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="17.2216%" y="613" width="0.1148%" height="15" fill="rgb(207,178,40)"/><text x="17.4716%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="17.2216%" y="597" width="0.1148%" height="15" fill="rgb(221,136,13)"/><text x="17.4716%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="17.2216%" y="581" width="0.1148%" height="15" fill="rgb(249,199,10)"/><text x="17.4716%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="17.2216%" y="565" width="0.1148%" height="15" fill="rgb(249,222,13)"/><text x="17.4716%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="17.2216%" y="549" width="0.1148%" height="15" fill="rgb(244,185,38)"/><text x="17.4716%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="17.2216%" y="533" width="0.1148%" height="15" fill="rgb(236,202,9)"/><text x="17.4716%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="17.2216%" y="517" width="0.1148%" height="15" fill="rgb(250,229,37)"/><text x="17.4716%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="17.2216%" y="501" width="0.1148%" height="15" fill="rgb(206,174,23)"/><text x="17.4716%" y="511.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.46%)</title><rect x="17.1068%" y="741" width="0.4592%" height="15" fill="rgb(211,33,43)"/><text x="17.3568%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.46%)</title><rect x="17.1068%" y="725" width="0.4592%" height="15" fill="rgb(245,58,50)"/><text x="17.3568%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.46%)</title><rect x="17.1068%" y="709" width="0.4592%" height="15" fill="rgb(244,68,36)"/><text x="17.3568%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.23%)</title><rect x="17.3364%" y="693" width="0.2296%" height="15" fill="rgb(232,229,15)"/><text x="17.5864%" y="703.50"></text></g><g><title>decor_mem::stats::get_qtype (1 samples, 0.11%)</title><rect x="17.5660%" y="741" width="0.1148%" height="15" fill="rgb(254,30,23)"/><text x="17.8160%" y="751.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="17.6808%" y="725" width="0.1148%" height="15" fill="rgb(235,160,14)"/><text x="17.9308%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="17.6808%" y="709" width="0.1148%" height="15" fill="rgb(212,155,44)"/><text x="17.9308%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="17.6808%" y="693" width="0.1148%" height="15" fill="rgb(226,2,50)"/><text x="17.9308%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="17.6808%" y="677" width="0.1148%" height="15" fill="rgb(234,177,6)"/><text x="17.9308%" y="687.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="17.6808%" y="661" width="0.1148%" height="15" fill="rgb(217,24,9)"/><text x="17.9308%" y="671.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="17.6808%" y="645" width="0.1148%" height="15" fill="rgb(220,13,46)"/><text x="17.9308%" y="655.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="17.6808%" y="629" width="0.1148%" height="15" fill="rgb(239,221,27)"/><text x="17.9308%" y="639.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="17.6808%" y="613" width="0.1148%" height="15" fill="rgb(222,198,25)"/><text x="17.9308%" y="623.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="17.6808%" y="597" width="0.1148%" height="15" fill="rgb(211,99,13)"/><text x="17.9308%" y="607.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="17.6808%" y="581" width="0.1148%" height="15" fill="rgb(232,111,31)"/><text x="17.9308%" y="591.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="17.6808%" y="565" width="0.1148%" height="15" fill="rgb(245,82,37)"/><text x="17.9308%" y="575.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="17.6808%" y="549" width="0.1148%" height="15" fill="rgb(227,149,46)"/><text x="17.9308%" y="559.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="17.6808%" y="533" width="0.1148%" height="15" fill="rgb(218,36,50)"/><text x="17.9308%" y="543.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.11%)</title><rect x="17.6808%" y="517" width="0.1148%" height="15" fill="rgb(226,80,48)"/><text x="17.9308%" y="527.50"></text></g><g><title>do_lookup_x (1 samples, 0.11%)</title><rect x="17.6808%" y="501" width="0.1148%" height="15" fill="rgb(238,224,15)"/><text x="17.9308%" y="511.50"></text></g><g><title>lobsters_microbenchmarks::init_database (1 samples, 0.11%)</title><rect x="17.7956%" y="725" width="0.1148%" height="15" fill="rgb(241,136,10)"/><text x="18.0456%" y="735.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="17.7956%" y="709" width="0.1148%" height="15" fill="rgb(208,32,45)"/><text x="18.0456%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="17.7956%" y="693" width="0.1148%" height="15" fill="rgb(207,135,9)"/><text x="18.0456%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="17.7956%" y="677" width="0.1148%" height="15" fill="rgb(206,86,44)"/><text x="18.0456%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="17.7956%" y="661" width="0.1148%" height="15" fill="rgb(245,177,15)"/><text x="18.0456%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="17.7956%" y="645" width="0.1148%" height="15" fill="rgb(206,64,50)"/><text x="18.0456%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="17.7956%" y="629" width="0.1148%" height="15" fill="rgb(234,36,40)"/><text x="18.0456%" y="639.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="17.7956%" y="613" width="0.1148%" height="15" fill="rgb(213,64,8)"/><text x="18.0456%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="17.7956%" y="597" width="0.1148%" height="15" fill="rgb(210,75,36)"/><text x="18.0456%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="17.7956%" y="581" width="0.1148%" height="15" fill="rgb(229,88,21)"/><text x="18.0456%" y="591.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="17.7956%" y="565" width="0.1148%" height="15" fill="rgb(252,204,47)"/><text x="18.0456%" y="575.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="17.7956%" y="549" width="0.1148%" height="15" fill="rgb(208,77,27)"/><text x="18.0456%" y="559.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="17.7956%" y="533" width="0.1148%" height="15" fill="rgb(221,76,26)"/><text x="18.0456%" y="543.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="17.7956%" y="517" width="0.1148%" height="15" fill="rgb(225,139,18)"/><text x="18.0456%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="17.7956%" y="501" width="0.1148%" height="15" fill="rgb(230,137,11)"/><text x="18.0456%" y="511.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="17.7956%" y="485" width="0.1148%" height="15" fill="rgb(212,28,1)"/><text x="18.0456%" y="495.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="17.7956%" y="469" width="0.1148%" height="15" fill="rgb(248,164,17)"/><text x="18.0456%" y="479.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="17.7956%" y="453" width="0.1148%" height="15" fill="rgb(222,171,42)"/><text x="18.0456%" y="463.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="17.7956%" y="437" width="0.1148%" height="15" fill="rgb(243,84,45)"/><text x="18.0456%" y="447.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="17.7956%" y="421" width="0.1148%" height="15" fill="rgb(252,49,23)"/><text x="18.0456%" y="431.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="17.7956%" y="405" width="0.1148%" height="15" fill="rgb(215,19,7)"/><text x="18.0456%" y="415.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="17.7956%" y="389" width="0.1148%" height="15" fill="rgb(238,81,41)"/><text x="18.0456%" y="399.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="17.7956%" y="373" width="0.1148%" height="15" fill="rgb(210,199,37)"/><text x="18.0456%" y="383.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="17.7956%" y="357" width="0.1148%" height="15" fill="rgb(244,192,49)"/><text x="18.0456%" y="367.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="17.7956%" y="341" width="0.1148%" height="15" fill="rgb(226,211,11)"/><text x="18.0456%" y="351.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="17.7956%" y="325" width="0.1148%" height="15" fill="rgb(236,162,54)"/><text x="18.0456%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="17.7956%" y="309" width="0.1148%" height="15" fill="rgb(220,229,9)"/><text x="18.0456%" y="319.50"></text></g><g><title>ip_rcv (1 samples, 0.11%)</title><rect x="17.7956%" y="293" width="0.1148%" height="15" fill="rgb(250,87,22)"/><text x="18.0456%" y="303.50"></text></g><g><title>ip_local_deliver (1 samples, 0.11%)</title><rect x="17.7956%" y="277" width="0.1148%" height="15" fill="rgb(239,43,17)"/><text x="18.0456%" y="287.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="17.7956%" y="261" width="0.1148%" height="15" fill="rgb(231,177,25)"/><text x="18.0456%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="17.7956%" y="245" width="0.1148%" height="15" fill="rgb(219,179,1)"/><text x="18.0456%" y="255.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="17.7956%" y="229" width="0.1148%" height="15" fill="rgb(238,219,53)"/><text x="18.0456%" y="239.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.11%)</title><rect x="17.9104%" y="661" width="0.1148%" height="15" fill="rgb(232,167,36)"/><text x="18.1604%" y="671.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="18.0253%" y="469" width="0.1148%" height="15" fill="rgb(244,19,51)"/><text x="18.2753%" y="479.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.11%)</title><rect x="18.2549%" y="357" width="0.1148%" height="15" fill="rgb(224,6,22)"/><text x="18.5049%" y="367.50"></text></g><g><title>dequeue_entity (1 samples, 0.11%)</title><rect x="18.2549%" y="341" width="0.1148%" height="15" fill="rgb(224,145,5)"/><text x="18.5049%" y="351.50"></text></g><g><title>update_curr (1 samples, 0.11%)</title><rect x="18.2549%" y="325" width="0.1148%" height="15" fill="rgb(234,130,49)"/><text x="18.5049%" y="335.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.11%)</title><rect x="18.3697%" y="357" width="0.1148%" height="15" fill="rgb(254,6,2)"/><text x="18.6197%" y="367.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="18.4845%" y="357" width="0.1148%" height="15" fill="rgb(208,96,46)"/><text x="18.7345%" y="367.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="18.4845%" y="341" width="0.1148%" height="15" fill="rgb(239,3,39)"/><text x="18.7345%" y="351.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (7 samples, 0.80%)</title><rect x="18.0253%" y="629" width="0.8037%" height="15" fill="rgb(233,210,1)"/><text x="18.2753%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (7 samples, 0.80%)</title><rect x="18.0253%" y="613" width="0.8037%" height="15" fill="rgb(244,137,37)"/><text x="18.2753%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (7 samples, 0.80%)</title><rect x="18.0253%" y="597" width="0.8037%" height="15" fill="rgb(240,136,2)"/><text x="18.2753%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (7 samples, 0.80%)</title><rect x="18.0253%" y="581" width="0.8037%" height="15" fill="rgb(239,18,37)"/><text x="18.2753%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (7 samples, 0.80%)</title><rect x="18.0253%" y="565" width="0.8037%" height="15" fill="rgb(218,185,22)"/><text x="18.2753%" y="575.50"></text></g><g><title>__libc_recv (7 samples, 0.80%)</title><rect x="18.0253%" y="549" width="0.8037%" height="15" fill="rgb(225,218,4)"/><text x="18.2753%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.80%)</title><rect x="18.0253%" y="533" width="0.8037%" height="15" fill="rgb(230,182,32)"/><text x="18.2753%" y="543.50"></text></g><g><title>do_syscall_64 (7 samples, 0.80%)</title><rect x="18.0253%" y="517" width="0.8037%" height="15" fill="rgb(242,56,43)"/><text x="18.2753%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.80%)</title><rect x="18.0253%" y="501" width="0.8037%" height="15" fill="rgb(233,99,24)"/><text x="18.2753%" y="511.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.80%)</title><rect x="18.0253%" y="485" width="0.8037%" height="15" fill="rgb(234,209,42)"/><text x="18.2753%" y="495.50"></text></g><g><title>inet_recvmsg (6 samples, 0.69%)</title><rect x="18.1401%" y="469" width="0.6889%" height="15" fill="rgb(227,7,12)"/><text x="18.3901%" y="479.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.69%)</title><rect x="18.1401%" y="453" width="0.6889%" height="15" fill="rgb(245,203,43)"/><text x="18.3901%" y="463.50"></text></g><g><title>sk_wait_data (5 samples, 0.57%)</title><rect x="18.2549%" y="437" width="0.5741%" height="15" fill="rgb(238,205,33)"/><text x="18.5049%" y="447.50"></text></g><g><title>wait_woken (5 samples, 0.57%)</title><rect x="18.2549%" y="421" width="0.5741%" height="15" fill="rgb(231,56,7)"/><text x="18.5049%" y="431.50"></text></g><g><title>schedule_timeout (5 samples, 0.57%)</title><rect x="18.2549%" y="405" width="0.5741%" height="15" fill="rgb(244,186,29)"/><text x="18.5049%" y="415.50"></text></g><g><title>schedule (5 samples, 0.57%)</title><rect x="18.2549%" y="389" width="0.5741%" height="15" fill="rgb(234,111,31)"/><text x="18.5049%" y="399.50"></text></g><g><title>__schedule (5 samples, 0.57%)</title><rect x="18.2549%" y="373" width="0.5741%" height="15" fill="rgb(241,149,10)"/><text x="18.5049%" y="383.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.23%)</title><rect x="18.5993%" y="357" width="0.2296%" height="15" fill="rgb(249,206,44)"/><text x="18.8493%" y="367.50"></text></g><g><title>mysql::conn::Conn::read_packet (8 samples, 0.92%)</title><rect x="18.0253%" y="661" width="0.9185%" height="15" fill="rgb(251,153,30)"/><text x="18.2753%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.92%)</title><rect x="18.0253%" y="645" width="0.9185%" height="15" fill="rgb(239,152,38)"/><text x="18.2753%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="18.8289%" y="629" width="0.1148%" height="15" fill="rgb(249,139,47)"/><text x="19.0789%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="18.8289%" y="613" width="0.1148%" height="15" fill="rgb(244,64,35)"/><text x="19.0789%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="18.8289%" y="597" width="0.1148%" height="15" fill="rgb(216,46,15)"/><text x="19.0789%" y="607.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="18.8289%" y="581" width="0.1148%" height="15" fill="rgb(250,74,19)"/><text x="19.0789%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (10 samples, 1.15%)</title><rect x="17.9104%" y="677" width="1.1481%" height="15" fill="rgb(249,42,33)"/><text x="18.1604%" y="687.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.11%)</title><rect x="18.9437%" y="661" width="0.1148%" height="15" fill="rgb(242,149,17)"/><text x="19.1937%" y="671.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="19.0586%" y="389" width="0.1148%" height="15" fill="rgb(244,29,21)"/><text x="19.3086%" y="399.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="19.1734%" y="197" width="0.1148%" height="15" fill="rgb(220,130,37)"/><text x="19.4234%" y="207.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="19.2882%" y="165" width="0.1148%" height="15" fill="rgb(211,67,2)"/><text x="19.5382%" y="175.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="19.2882%" y="149" width="0.1148%" height="15" fill="rgb(235,68,52)"/><text x="19.5382%" y="159.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="19.2882%" y="133" width="0.1148%" height="15" fill="rgb(246,142,3)"/><text x="19.5382%" y="143.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="19.2882%" y="117" width="0.1148%" height="15" fill="rgb(241,25,7)"/><text x="19.5382%" y="127.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="19.2882%" y="101" width="0.1148%" height="15" fill="rgb(242,119,39)"/><text x="19.5382%" y="111.50"></text></g><g><title>enqueue_entity (1 samples, 0.11%)</title><rect x="19.2882%" y="85" width="0.1148%" height="15" fill="rgb(241,98,45)"/><text x="19.5382%" y="95.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="19.4030%" y="149" width="0.1148%" height="15" fill="rgb(254,28,30)"/><text x="19.6530%" y="159.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="19.4030%" y="133" width="0.1148%" height="15" fill="rgb(241,142,54)"/><text x="19.6530%" y="143.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.46%)</title><rect x="19.1734%" y="293" width="0.4592%" height="15" fill="rgb(222,85,15)"/><text x="19.4234%" y="303.50"></text></g><g><title>ip_rcv (4 samples, 0.46%)</title><rect x="19.1734%" y="277" width="0.4592%" height="15" fill="rgb(210,85,47)"/><text x="19.4234%" y="287.50"></text></g><g><title>ip_local_deliver (4 samples, 0.46%)</title><rect x="19.1734%" y="261" width="0.4592%" height="15" fill="rgb(224,206,25)"/><text x="19.4234%" y="271.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.46%)</title><rect x="19.1734%" y="245" width="0.4592%" height="15" fill="rgb(243,201,19)"/><text x="19.4234%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.46%)</title><rect x="19.1734%" y="229" width="0.4592%" height="15" fill="rgb(236,59,4)"/><text x="19.4234%" y="239.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.46%)</title><rect x="19.1734%" y="213" width="0.4592%" height="15" fill="rgb(254,179,45)"/><text x="19.4234%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.34%)</title><rect x="19.2882%" y="197" width="0.3444%" height="15" fill="rgb(226,14,10)"/><text x="19.5382%" y="207.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.34%)</title><rect x="19.2882%" y="181" width="0.3444%" height="15" fill="rgb(244,27,41)"/><text x="19.5382%" y="191.50"></text></g><g><title>tcp_ack (2 samples, 0.23%)</title><rect x="19.4030%" y="165" width="0.2296%" height="15" fill="rgb(235,35,32)"/><text x="19.6530%" y="175.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.11%)</title><rect x="19.5178%" y="149" width="0.1148%" height="15" fill="rgb(218,68,31)"/><text x="19.7678%" y="159.50"></text></g><g><title>lobsters_microbenchmarks::main (18 samples, 2.07%)</title><rect x="17.6808%" y="741" width="2.0666%" height="15" fill="rgb(207,120,37)"/><text x="17.9308%" y="751.50">l..</text></g><g><title>lobsters_microbenchmarks::queriers::expensive_queries::post_comment (16 samples, 1.84%)</title><rect x="17.9104%" y="725" width="1.8370%" height="15" fill="rgb(227,98,0)"/><text x="18.1604%" y="735.50">l..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (16 samples, 1.84%)</title><rect x="17.9104%" y="709" width="1.8370%" height="15" fill="rgb(207,7,3)"/><text x="18.1604%" y="719.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.84%)</title><rect x="17.9104%" y="693" width="1.8370%" height="15" fill="rgb(206,98,19)"/><text x="18.1604%" y="703.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (6 samples, 0.69%)</title><rect x="19.0586%" y="677" width="0.6889%" height="15" fill="rgb(217,5,26)"/><text x="19.3086%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (6 samples, 0.69%)</title><rect x="19.0586%" y="661" width="0.6889%" height="15" fill="rgb(235,190,38)"/><text x="19.3086%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (6 samples, 0.69%)</title><rect x="19.0586%" y="645" width="0.6889%" height="15" fill="rgb(247,86,24)"/><text x="19.3086%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (6 samples, 0.69%)</title><rect x="19.0586%" y="629" width="0.6889%" height="15" fill="rgb(205,101,16)"/><text x="19.3086%" y="639.50"></text></g><g><title>__libc_send (6 samples, 0.69%)</title><rect x="19.0586%" y="613" width="0.6889%" height="15" fill="rgb(246,168,33)"/><text x="19.3086%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.69%)</title><rect x="19.0586%" y="597" width="0.6889%" height="15" fill="rgb(231,114,1)"/><text x="19.3086%" y="607.50"></text></g><g><title>do_syscall_64 (6 samples, 0.69%)</title><rect x="19.0586%" y="581" width="0.6889%" height="15" fill="rgb(207,184,53)"/><text x="19.3086%" y="591.50"></text></g><g><title>__x64_sys_sendto (6 samples, 0.69%)</title><rect x="19.0586%" y="565" width="0.6889%" height="15" fill="rgb(224,95,51)"/><text x="19.3086%" y="575.50"></text></g><g><title>__sys_sendto (6 samples, 0.69%)</title><rect x="19.0586%" y="549" width="0.6889%" height="15" fill="rgb(212,188,45)"/><text x="19.3086%" y="559.50"></text></g><g><title>sock_sendmsg (6 samples, 0.69%)</title><rect x="19.0586%" y="533" width="0.6889%" height="15" fill="rgb(223,154,38)"/><text x="19.3086%" y="543.50"></text></g><g><title>tcp_sendmsg (6 samples, 0.69%)</title><rect x="19.0586%" y="517" width="0.6889%" height="15" fill="rgb(251,22,52)"/><text x="19.3086%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (6 samples, 0.69%)</title><rect x="19.0586%" y="501" width="0.6889%" height="15" fill="rgb(229,209,22)"/><text x="19.3086%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (6 samples, 0.69%)</title><rect x="19.0586%" y="485" width="0.6889%" height="15" fill="rgb(234,138,34)"/><text x="19.3086%" y="495.50"></text></g><g><title>tcp_write_xmit (6 samples, 0.69%)</title><rect x="19.0586%" y="469" width="0.6889%" height="15" fill="rgb(212,95,11)"/><text x="19.3086%" y="479.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.69%)</title><rect x="19.0586%" y="453" width="0.6889%" height="15" fill="rgb(240,179,47)"/><text x="19.3086%" y="463.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.69%)</title><rect x="19.0586%" y="437" width="0.6889%" height="15" fill="rgb(240,163,11)"/><text x="19.3086%" y="447.50"></text></g><g><title>ip_output (6 samples, 0.69%)</title><rect x="19.0586%" y="421" width="0.6889%" height="15" fill="rgb(236,37,12)"/><text x="19.3086%" y="431.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.69%)</title><rect x="19.0586%" y="405" width="0.6889%" height="15" fill="rgb(232,164,16)"/><text x="19.3086%" y="415.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.57%)</title><rect x="19.1734%" y="389" width="0.5741%" height="15" fill="rgb(244,205,15)"/><text x="19.4234%" y="399.50"></text></g><g><title>do_softirq (5 samples, 0.57%)</title><rect x="19.1734%" y="373" width="0.5741%" height="15" fill="rgb(223,117,47)"/><text x="19.4234%" y="383.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.57%)</title><rect x="19.1734%" y="357" width="0.5741%" height="15" fill="rgb(244,107,35)"/><text x="19.4234%" y="367.50"></text></g><g><title>__do_softirq (5 samples, 0.57%)</title><rect x="19.1734%" y="341" width="0.5741%" height="15" fill="rgb(205,140,8)"/><text x="19.4234%" y="351.50"></text></g><g><title>net_rx_action (5 samples, 0.57%)</title><rect x="19.1734%" y="325" width="0.5741%" height="15" fill="rgb(228,84,46)"/><text x="19.4234%" y="335.50"></text></g><g><title>process_backlog (5 samples, 0.57%)</title><rect x="19.1734%" y="309" width="0.5741%" height="15" fill="rgb(254,188,9)"/><text x="19.4234%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="19.6326%" y="293" width="0.1148%" height="15" fill="rgb(206,112,54)"/><text x="19.8826%" y="303.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="19.6326%" y="277" width="0.1148%" height="15" fill="rgb(216,84,49)"/><text x="19.8826%" y="287.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="19.7474%" y="677" width="0.1148%" height="15" fill="rgb(214,194,35)"/><text x="19.9974%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="19.7474%" y="661" width="0.1148%" height="15" fill="rgb(249,28,3)"/><text x="19.9974%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="19.7474%" y="645" width="0.1148%" height="15" fill="rgb(222,56,52)"/><text x="19.9974%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="19.7474%" y="629" width="0.1148%" height="15" fill="rgb(245,217,50)"/><text x="19.9974%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="19.7474%" y="613" width="0.1148%" height="15" fill="rgb(213,201,24)"/><text x="19.9974%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="19.7474%" y="597" width="0.1148%" height="15" fill="rgb(248,116,28)"/><text x="19.9974%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="19.7474%" y="581" width="0.1148%" height="15" fill="rgb(219,72,43)"/><text x="19.9974%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.11%)</title><rect x="19.7474%" y="565" width="0.1148%" height="15" fill="rgb(209,138,14)"/><text x="19.9974%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.11%)</title><rect x="19.7474%" y="549" width="0.1148%" height="15" fill="rgb(222,18,33)"/><text x="19.9974%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.11%)</title><rect x="19.7474%" y="533" width="0.1148%" height="15" fill="rgb(213,199,7)"/><text x="19.9974%" y="543.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="19.7474%" y="517" width="0.1148%" height="15" fill="rgb(250,110,10)"/><text x="19.9974%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="19.7474%" y="501" width="0.1148%" height="15" fill="rgb(248,123,6)"/><text x="19.9974%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="19.7474%" y="485" width="0.1148%" height="15" fill="rgb(206,91,31)"/><text x="19.9974%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.11%)</title><rect x="19.7474%" y="469" width="0.1148%" height="15" fill="rgb(211,154,13)"/><text x="19.9974%" y="479.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.11%)</title><rect x="19.7474%" y="453" width="0.1148%" height="15" fill="rgb(225,148,7)"/><text x="19.9974%" y="463.50"></text></g><g><title>inet_recvmsg (1 samples, 0.11%)</title><rect x="19.7474%" y="437" width="0.1148%" height="15" fill="rgb(220,160,43)"/><text x="19.9974%" y="447.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.11%)</title><rect x="19.7474%" y="421" width="0.1148%" height="15" fill="rgb(213,52,39)"/><text x="19.9974%" y="431.50"></text></g><g><title>sk_wait_data (1 samples, 0.11%)</title><rect x="19.7474%" y="405" width="0.1148%" height="15" fill="rgb(243,137,7)"/><text x="19.9974%" y="415.50"></text></g><g><title>wait_woken (1 samples, 0.11%)</title><rect x="19.7474%" y="389" width="0.1148%" height="15" fill="rgb(230,79,13)"/><text x="19.9974%" y="399.50"></text></g><g><title>schedule_timeout (1 samples, 0.11%)</title><rect x="19.7474%" y="373" width="0.1148%" height="15" fill="rgb(247,105,23)"/><text x="19.9974%" y="383.50"></text></g><g><title>schedule (1 samples, 0.11%)</title><rect x="19.7474%" y="357" width="0.1148%" height="15" fill="rgb(223,179,41)"/><text x="19.9974%" y="367.50"></text></g><g><title>__schedule (1 samples, 0.11%)</title><rect x="19.7474%" y="341" width="0.1148%" height="15" fill="rgb(218,9,34)"/><text x="19.9974%" y="351.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="19.7474%" y="325" width="0.1148%" height="15" fill="rgb(222,106,8)"/><text x="19.9974%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="19.8622%" y="677" width="0.1148%" height="15" fill="rgb(211,220,0)"/><text x="20.1122%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="19.8622%" y="661" width="0.1148%" height="15" fill="rgb(229,52,16)"/><text x="20.1122%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="19.8622%" y="645" width="0.1148%" height="15" fill="rgb(212,155,18)"/><text x="20.1122%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::IndexDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="19.8622%" y="629" width="0.1148%" height="15" fill="rgb(242,21,14)"/><text x="20.1122%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="19.8622%" y="613" width="0.1148%" height="15" fill="rgb(222,19,48)"/><text x="20.1122%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="19.8622%" y="597" width="0.1148%" height="15" fill="rgb(232,45,27)"/><text x="20.1122%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="19.8622%" y="581" width="0.1148%" height="15" fill="rgb(249,103,42)"/><text x="20.1122%" y="591.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (3 samples, 0.34%)</title><rect x="19.7474%" y="693" width="0.3444%" height="15" fill="rgb(246,81,33)"/><text x="19.9974%" y="703.50"></text></g><g><title>decor_mem::views::Views::add_view (1 samples, 0.11%)</title><rect x="19.9770%" y="677" width="0.1148%" height="15" fill="rgb(252,33,42)"/><text x="20.2270%" y="687.50"></text></g><g><title>decor_mem::views::View::new (1 samples, 0.11%)</title><rect x="19.9770%" y="661" width="0.1148%" height="15" fill="rgb(209,212,41)"/><text x="20.2270%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="19.9770%" y="645" width="0.1148%" height="15" fill="rgb(207,154,6)"/><text x="20.2270%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="19.9770%" y="629" width="0.1148%" height="15" fill="rgb(223,64,47)"/><text x="20.2270%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="19.9770%" y="613" width="0.1148%" height="15" fill="rgb(211,161,38)"/><text x="20.2270%" y="623.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.46%)</title><rect x="19.7474%" y="725" width="0.4592%" height="15" fill="rgb(219,138,40)"/><text x="19.9974%" y="735.50"></text></g><g><title>decor_mem::Shim::create_schema (4 samples, 0.46%)</title><rect x="19.7474%" y="709" width="0.4592%" height="15" fill="rgb(241,228,46)"/><text x="19.9974%" y="719.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="20.0918%" y="693" width="0.1148%" height="15" fill="rgb(223,209,38)"/><text x="20.3418%" y="703.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="20.0918%" y="677" width="0.1148%" height="15" fill="rgb(236,164,45)"/><text x="20.3418%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="20.0918%" y="661" width="0.1148%" height="15" fill="rgb(231,15,5)"/><text x="20.3418%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="20.0918%" y="645" width="0.1148%" height="15" fill="rgb(252,35,15)"/><text x="20.3418%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="20.0918%" y="629" width="0.1148%" height="15" fill="rgb(248,181,18)"/><text x="20.3418%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="20.0918%" y="613" width="0.1148%" height="15" fill="rgb(233,39,42)"/><text x="20.3418%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="20.0918%" y="597" width="0.1148%" height="15" fill="rgb(238,110,33)"/><text x="20.3418%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="20.0918%" y="581" width="0.1148%" height="15" fill="rgb(233,195,10)"/><text x="20.3418%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="20.0918%" y="565" width="0.1148%" height="15" fill="rgb(254,105,3)"/><text x="20.3418%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="20.0918%" y="549" width="0.1148%" height="15" fill="rgb(221,225,9)"/><text x="20.3418%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="20.0918%" y="533" width="0.1148%" height="15" fill="rgb(224,227,45)"/><text x="20.3418%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="20.0918%" y="517" width="0.1148%" height="15" fill="rgb(229,198,43)"/><text x="20.3418%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="20.0918%" y="501" width="0.1148%" height="15" fill="rgb(206,209,35)"/><text x="20.3418%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="20.0918%" y="485" width="0.1148%" height="15" fill="rgb(245,195,53)"/><text x="20.3418%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="20.0918%" y="469" width="0.1148%" height="15" fill="rgb(240,92,26)"/><text x="20.3418%" y="479.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="20.3215%" y="405" width="0.1148%" height="15" fill="rgb(207,40,23)"/><text x="20.5715%" y="415.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="20.3215%" y="389" width="0.1148%" height="15" fill="rgb(223,111,35)"/><text x="20.5715%" y="399.50"></text></g><g><title>dst_release (1 samples, 0.11%)</title><rect x="20.3215%" y="373" width="0.1148%" height="15" fill="rgb(229,147,28)"/><text x="20.5715%" y="383.50"></text></g><g><title>__x64_sys_recvfrom (2 samples, 0.23%)</title><rect x="20.3215%" y="469" width="0.2296%" height="15" fill="rgb(211,29,28)"/><text x="20.5715%" y="479.50"></text></g><g><title>__sys_recvfrom (2 samples, 0.23%)</title><rect x="20.3215%" y="453" width="0.2296%" height="15" fill="rgb(228,72,33)"/><text x="20.5715%" y="463.50"></text></g><g><title>inet_recvmsg (2 samples, 0.23%)</title><rect x="20.3215%" y="437" width="0.2296%" height="15" fill="rgb(205,214,31)"/><text x="20.5715%" y="447.50"></text></g><g><title>tcp_recvmsg (2 samples, 0.23%)</title><rect x="20.3215%" y="421" width="0.2296%" height="15" fill="rgb(224,111,15)"/><text x="20.5715%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.11%)</title><rect x="20.4363%" y="405" width="0.1148%" height="15" fill="rgb(253,21,26)"/><text x="20.6863%" y="415.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.11%)</title><rect x="20.4363%" y="389" width="0.1148%" height="15" fill="rgb(245,139,43)"/><text x="20.6863%" y="399.50"></text></g><g><title>_copy_to_iter (1 samples, 0.11%)</title><rect x="20.4363%" y="373" width="0.1148%" height="15" fill="rgb(252,170,7)"/><text x="20.6863%" y="383.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="20.4363%" y="357" width="0.1148%" height="15" fill="rgb(231,118,14)"/><text x="20.6863%" y="367.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.34%)</title><rect x="20.3215%" y="645" width="0.3444%" height="15" fill="rgb(238,83,0)"/><text x="20.5715%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.34%)</title><rect x="20.3215%" y="629" width="0.3444%" height="15" fill="rgb(221,39,39)"/><text x="20.5715%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="20.3215%" y="613" width="0.3444%" height="15" fill="rgb(222,119,46)"/><text x="20.5715%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.34%)</title><rect x="20.3215%" y="597" width="0.3444%" height="15" fill="rgb(222,165,49)"/><text x="20.5715%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.34%)</title><rect x="20.3215%" y="581" width="0.3444%" height="15" fill="rgb(219,113,52)"/><text x="20.5715%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.34%)</title><rect x="20.3215%" y="565" width="0.3444%" height="15" fill="rgb(214,7,15)"/><text x="20.5715%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (3 samples, 0.34%)</title><rect x="20.3215%" y="549" width="0.3444%" height="15" fill="rgb(235,32,4)"/><text x="20.5715%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.34%)</title><rect x="20.3215%" y="533" width="0.3444%" height="15" fill="rgb(238,90,54)"/><text x="20.5715%" y="543.50"></text></g><g><title>__libc_recv (3 samples, 0.34%)</title><rect x="20.3215%" y="517" width="0.3444%" height="15" fill="rgb(213,208,19)"/><text x="20.5715%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.34%)</title><rect x="20.3215%" y="501" width="0.3444%" height="15" fill="rgb(233,156,4)"/><text x="20.5715%" y="511.50"></text></g><g><title>do_syscall_64 (3 samples, 0.34%)</title><rect x="20.3215%" y="485" width="0.3444%" height="15" fill="rgb(207,194,5)"/><text x="20.5715%" y="495.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="20.5511%" y="469" width="0.1148%" height="15" fill="rgb(206,111,30)"/><text x="20.8011%" y="479.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="20.5511%" y="453" width="0.1148%" height="15" fill="rgb(243,70,54)"/><text x="20.8011%" y="463.50"></text></g><g><title>inet_sendmsg (1 samples, 0.11%)</title><rect x="20.6659%" y="485" width="0.1148%" height="15" fill="rgb(242,28,8)"/><text x="20.9159%" y="495.50"></text></g><g><title>inet_send_prepare (1 samples, 0.11%)</title><rect x="20.6659%" y="469" width="0.1148%" height="15" fill="rgb(219,106,18)"/><text x="20.9159%" y="479.50"></text></g><g><title>netdev_core_pick_tx (2 samples, 0.23%)</title><rect x="20.7807%" y="341" width="0.2296%" height="15" fill="rgb(244,222,10)"/><text x="21.0307%" y="351.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.34%)</title><rect x="20.7807%" y="357" width="0.3444%" height="15" fill="rgb(236,179,52)"/><text x="21.0307%" y="367.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.11%)</title><rect x="21.0103%" y="341" width="0.1148%" height="15" fill="rgb(213,23,39)"/><text x="21.2603%" y="351.50"></text></g><g><title>netif_skb_features (1 samples, 0.11%)</title><rect x="21.0103%" y="325" width="0.1148%" height="15" fill="rgb(238,48,10)"/><text x="21.2603%" y="335.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="21.2400%" y="293" width="0.1148%" height="15" fill="rgb(251,196,23)"/><text x="21.4900%" y="303.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="21.2400%" y="277" width="0.1148%" height="15" fill="rgb(250,152,24)"/><text x="21.4900%" y="287.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.23%)</title><rect x="21.4696%" y="165" width="0.2296%" height="15" fill="rgb(209,150,17)"/><text x="21.7196%" y="175.50"></text></g><g><title>inet_ehashfn (1 samples, 0.11%)</title><rect x="21.5844%" y="149" width="0.1148%" height="15" fill="rgb(234,202,34)"/><text x="21.8344%" y="159.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="21.6992%" y="133" width="0.1148%" height="15" fill="rgb(253,148,53)"/><text x="21.9492%" y="143.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="21.6992%" y="117" width="0.1148%" height="15" fill="rgb(218,129,16)"/><text x="21.9492%" y="127.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="21.6992%" y="101" width="0.1148%" height="15" fill="rgb(216,85,19)"/><text x="21.9492%" y="111.50"></text></g><g><title>pollwake (1 samples, 0.11%)</title><rect x="21.6992%" y="85" width="0.1148%" height="15" fill="rgb(235,228,7)"/><text x="21.9492%" y="95.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="21.6992%" y="69" width="0.1148%" height="15" fill="rgb(245,175,0)"/><text x="21.9492%" y="79.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="21.6992%" y="53" width="0.1148%" height="15" fill="rgb(208,168,36)"/><text x="21.9492%" y="63.50"></text></g><g><title>enqueue_entity (1 samples, 0.11%)</title><rect x="21.6992%" y="37" width="0.1148%" height="15" fill="rgb(246,171,24)"/><text x="21.9492%" y="47.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 1.15%)</title><rect x="20.7807%" y="421" width="1.1481%" height="15" fill="rgb(215,142,24)"/><text x="21.0307%" y="431.50"></text></g><g><title>__ip_queue_xmit (10 samples, 1.15%)</title><rect x="20.7807%" y="405" width="1.1481%" height="15" fill="rgb(250,187,7)"/><text x="21.0307%" y="415.50"></text></g><g><title>ip_output (10 samples, 1.15%)</title><rect x="20.7807%" y="389" width="1.1481%" height="15" fill="rgb(228,66,33)"/><text x="21.0307%" y="399.50"></text></g><g><title>ip_finish_output2 (10 samples, 1.15%)</title><rect x="20.7807%" y="373" width="1.1481%" height="15" fill="rgb(234,215,21)"/><text x="21.0307%" y="383.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.80%)</title><rect x="21.1251%" y="357" width="0.8037%" height="15" fill="rgb(222,191,20)"/><text x="21.3751%" y="367.50"></text></g><g><title>do_softirq (7 samples, 0.80%)</title><rect x="21.1251%" y="341" width="0.8037%" height="15" fill="rgb(245,79,54)"/><text x="21.3751%" y="351.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.80%)</title><rect x="21.1251%" y="325" width="0.8037%" height="15" fill="rgb(240,10,37)"/><text x="21.3751%" y="335.50"></text></g><g><title>__do_softirq (7 samples, 0.80%)</title><rect x="21.1251%" y="309" width="0.8037%" height="15" fill="rgb(214,192,32)"/><text x="21.3751%" y="319.50"></text></g><g><title>net_rx_action (5 samples, 0.57%)</title><rect x="21.3548%" y="293" width="0.5741%" height="15" fill="rgb(209,36,54)"/><text x="21.6048%" y="303.50"></text></g><g><title>process_backlog (5 samples, 0.57%)</title><rect x="21.3548%" y="277" width="0.5741%" height="15" fill="rgb(220,10,11)"/><text x="21.6048%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.57%)</title><rect x="21.3548%" y="261" width="0.5741%" height="15" fill="rgb(221,106,17)"/><text x="21.6048%" y="271.50"></text></g><g><title>ip_rcv (5 samples, 0.57%)</title><rect x="21.3548%" y="245" width="0.5741%" height="15" fill="rgb(251,142,44)"/><text x="21.6048%" y="255.50"></text></g><g><title>ip_local_deliver (5 samples, 0.57%)</title><rect x="21.3548%" y="229" width="0.5741%" height="15" fill="rgb(238,13,15)"/><text x="21.6048%" y="239.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.46%)</title><rect x="21.4696%" y="213" width="0.4592%" height="15" fill="rgb(208,107,27)"/><text x="21.7196%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.46%)</title><rect x="21.4696%" y="197" width="0.4592%" height="15" fill="rgb(205,136,37)"/><text x="21.7196%" y="207.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.46%)</title><rect x="21.4696%" y="181" width="0.4592%" height="15" fill="rgb(250,205,27)"/><text x="21.7196%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.23%)</title><rect x="21.6992%" y="165" width="0.2296%" height="15" fill="rgb(210,80,43)"/><text x="21.9492%" y="175.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.23%)</title><rect x="21.6992%" y="149" width="0.2296%" height="15" fill="rgb(247,160,36)"/><text x="21.9492%" y="159.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="21.8140%" y="133" width="0.1148%" height="15" fill="rgb(234,13,49)"/><text x="22.0640%" y="143.50"></text></g><g><title>__tcp_push_pending_frames (11 samples, 1.26%)</title><rect x="20.7807%" y="453" width="1.2629%" height="15" fill="rgb(234,122,0)"/><text x="21.0307%" y="463.50"></text></g><g><title>tcp_write_xmit (11 samples, 1.26%)</title><rect x="20.7807%" y="437" width="1.2629%" height="15" fill="rgb(207,146,38)"/><text x="21.0307%" y="447.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="21.9288%" y="421" width="0.1148%" height="15" fill="rgb(207,177,25)"/><text x="22.1788%" y="431.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="22.0436%" y="453" width="0.1148%" height="15" fill="rgb(211,178,42)"/><text x="22.2936%" y="463.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="22.0436%" y="437" width="0.1148%" height="15" fill="rgb(230,69,54)"/><text x="22.2936%" y="447.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="22.0436%" y="421" width="0.1148%" height="15" fill="rgb(214,135,41)"/><text x="22.2936%" y="431.50"></text></g><g><title>do_syscall_64 (14 samples, 1.61%)</title><rect x="20.6659%" y="549" width="1.6073%" height="15" fill="rgb(237,67,25)"/><text x="20.9159%" y="559.50"></text></g><g><title>__x64_sys_sendto (14 samples, 1.61%)</title><rect x="20.6659%" y="533" width="1.6073%" height="15" fill="rgb(222,189,50)"/><text x="20.9159%" y="543.50"></text></g><g><title>__sys_sendto (14 samples, 1.61%)</title><rect x="20.6659%" y="517" width="1.6073%" height="15" fill="rgb(245,148,34)"/><text x="20.9159%" y="527.50"></text></g><g><title>sock_sendmsg (14 samples, 1.61%)</title><rect x="20.6659%" y="501" width="1.6073%" height="15" fill="rgb(222,29,6)"/><text x="20.9159%" y="511.50"></text></g><g><title>tcp_sendmsg (13 samples, 1.49%)</title><rect x="20.7807%" y="485" width="1.4925%" height="15" fill="rgb(221,189,43)"/><text x="21.0307%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (13 samples, 1.49%)</title><rect x="20.7807%" y="469" width="1.4925%" height="15" fill="rgb(207,36,27)"/><text x="21.0307%" y="479.50"></text></g><g><title>tcp_send_mss (1 samples, 0.11%)</title><rect x="22.1584%" y="453" width="0.1148%" height="15" fill="rgb(217,90,24)"/><text x="22.4084%" y="463.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="22.1584%" y="437" width="0.1148%" height="15" fill="rgb(224,66,35)"/><text x="22.4084%" y="447.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="22.1584%" y="421" width="0.1148%" height="15" fill="rgb(221,13,50)"/><text x="22.4084%" y="431.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (18 samples, 2.07%)</title><rect x="20.3215%" y="677" width="2.0666%" height="15" fill="rgb(236,68,49)"/><text x="20.5715%" y="687.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (18 samples, 2.07%)</title><rect x="20.3215%" y="661" width="2.0666%" height="15" fill="rgb(229,146,28)"/><text x="20.5715%" y="671.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (15 samples, 1.72%)</title><rect x="20.6659%" y="645" width="1.7222%" height="15" fill="rgb(225,31,38)"/><text x="20.9159%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (15 samples, 1.72%)</title><rect x="20.6659%" y="629" width="1.7222%" height="15" fill="rgb(250,208,3)"/><text x="20.9159%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (15 samples, 1.72%)</title><rect x="20.6659%" y="613" width="1.7222%" height="15" fill="rgb(246,54,23)"/><text x="20.9159%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (15 samples, 1.72%)</title><rect x="20.6659%" y="597" width="1.7222%" height="15" fill="rgb(243,76,11)"/><text x="20.9159%" y="607.50"></text></g><g><title>__libc_send (15 samples, 1.72%)</title><rect x="20.6659%" y="581" width="1.7222%" height="15" fill="rgb(245,21,50)"/><text x="20.9159%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 1.72%)</title><rect x="20.6659%" y="565" width="1.7222%" height="15" fill="rgb(228,9,43)"/><text x="20.9159%" y="575.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="22.2732%" y="549" width="0.1148%" height="15" fill="rgb(208,100,47)"/><text x="22.5232%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="22.3881%" y="677" width="0.1148%" height="15" fill="rgb(232,26,8)"/><text x="22.6381%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="22.3881%" y="661" width="0.1148%" height="15" fill="rgb(216,166,38)"/><text x="22.6381%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="22.3881%" y="645" width="0.1148%" height="15" fill="rgb(251,202,51)"/><text x="22.6381%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="22.5029%" y="533" width="0.1148%" height="15" fill="rgb(254,216,34)"/><text x="22.7529%" y="543.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.11%)</title><rect x="22.5029%" y="517" width="0.1148%" height="15" fill="rgb(251,32,27)"/><text x="22.7529%" y="527.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.11%)</title><rect x="22.5029%" y="501" width="0.1148%" height="15" fill="rgb(208,127,28)"/><text x="22.7529%" y="511.50"></text></g><g><title>mprotect_fixup (1 samples, 0.11%)</title><rect x="22.5029%" y="485" width="0.1148%" height="15" fill="rgb(224,137,22)"/><text x="22.7529%" y="495.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="22.5029%" y="469" width="0.1148%" height="15" fill="rgb(254,70,32)"/><text x="22.7529%" y="479.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="22.5029%" y="453" width="0.1148%" height="15" fill="rgb(229,75,37)"/><text x="22.7529%" y="463.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="22.5029%" y="437" width="0.1148%" height="15" fill="rgb(252,64,23)"/><text x="22.7529%" y="447.50"></text></g><g><title>__GI___mprotect (2 samples, 0.23%)</title><rect x="22.5029%" y="565" width="0.2296%" height="15" fill="rgb(232,162,48)"/><text x="22.7529%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="22.5029%" y="549" width="0.2296%" height="15" fill="rgb(246,160,12)"/><text x="22.7529%" y="559.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="22.6177%" y="533" width="0.1148%" height="15" fill="rgb(247,166,0)"/><text x="22.8677%" y="543.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="22.7325%" y="501" width="0.1148%" height="15" fill="rgb(249,219,21)"/><text x="22.9825%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="22.7325%" y="485" width="0.1148%" height="15" fill="rgb(205,209,3)"/><text x="22.9825%" y="495.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="22.7325%" y="469" width="0.1148%" height="15" fill="rgb(243,44,1)"/><text x="22.9825%" y="479.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="22.7325%" y="453" width="0.1148%" height="15" fill="rgb(206,159,16)"/><text x="22.9825%" y="463.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="22.7325%" y="437" width="0.1148%" height="15" fill="rgb(244,77,30)"/><text x="22.9825%" y="447.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="22.7325%" y="421" width="0.1148%" height="15" fill="rgb(218,69,12)"/><text x="22.9825%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (4 samples, 0.46%)</title><rect x="22.5029%" y="677" width="0.4592%" height="15" fill="rgb(212,87,7)"/><text x="22.7529%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (4 samples, 0.46%)</title><rect x="22.5029%" y="661" width="0.4592%" height="15" fill="rgb(245,114,25)"/><text x="22.7529%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.46%)</title><rect x="22.5029%" y="645" width="0.4592%" height="15" fill="rgb(210,61,42)"/><text x="22.7529%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.46%)</title><rect x="22.5029%" y="629" width="0.4592%" height="15" fill="rgb(211,52,33)"/><text x="22.7529%" y="639.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.46%)</title><rect x="22.5029%" y="613" width="0.4592%" height="15" fill="rgb(234,58,33)"/><text x="22.7529%" y="623.50"></text></g><g><title>_int_malloc (4 samples, 0.46%)</title><rect x="22.5029%" y="597" width="0.4592%" height="15" fill="rgb(220,115,36)"/><text x="22.7529%" y="607.50"></text></g><g><title>sysmalloc (4 samples, 0.46%)</title><rect x="22.5029%" y="581" width="0.4592%" height="15" fill="rgb(243,153,54)"/><text x="22.7529%" y="591.50"></text></g><g><title>page_fault (2 samples, 0.23%)</title><rect x="22.7325%" y="565" width="0.2296%" height="15" fill="rgb(251,47,18)"/><text x="22.9825%" y="575.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.23%)</title><rect x="22.7325%" y="549" width="0.2296%" height="15" fill="rgb(242,102,42)"/><text x="22.9825%" y="559.50"></text></g><g><title>handle_mm_fault (2 samples, 0.23%)</title><rect x="22.7325%" y="533" width="0.2296%" height="15" fill="rgb(234,31,38)"/><text x="22.9825%" y="543.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.23%)</title><rect x="22.7325%" y="517" width="0.2296%" height="15" fill="rgb(221,117,51)"/><text x="22.9825%" y="527.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.11%)</title><rect x="22.8473%" y="501" width="0.1148%" height="15" fill="rgb(212,20,18)"/><text x="23.0973%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="22.9621%" y="677" width="0.1148%" height="15" fill="rgb(245,133,36)"/><text x="23.2121%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="22.9621%" y="661" width="0.1148%" height="15" fill="rgb(212,6,19)"/><text x="23.2121%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="22.9621%" y="645" width="0.1148%" height="15" fill="rgb(218,1,36)"/><text x="23.2121%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="22.9621%" y="629" width="0.1148%" height="15" fill="rgb(246,84,54)"/><text x="23.2121%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="23.0769%" y="645" width="0.1148%" height="15" fill="rgb(242,110,6)"/><text x="23.3269%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="23.0769%" y="629" width="0.1148%" height="15" fill="rgb(214,47,5)"/><text x="23.3269%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="23.0769%" y="613" width="0.1148%" height="15" fill="rgb(218,159,25)"/><text x="23.3269%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="23.0769%" y="597" width="0.1148%" height="15" fill="rgb(215,211,28)"/><text x="23.3269%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="23.0769%" y="581" width="0.1148%" height="15" fill="rgb(238,59,32)"/><text x="23.3269%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="23.0769%" y="565" width="0.1148%" height="15" fill="rgb(226,82,3)"/><text x="23.3269%" y="575.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="23.0769%" y="549" width="0.1148%" height="15" fill="rgb(240,164,32)"/><text x="23.3269%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (3 samples, 0.34%)</title><rect x="23.0769%" y="661" width="0.3444%" height="15" fill="rgb(232,46,7)"/><text x="23.3269%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.23%)</title><rect x="23.1917%" y="645" width="0.2296%" height="15" fill="rgb(229,129,53)"/><text x="23.4417%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="23.1917%" y="629" width="0.2296%" height="15" fill="rgb(234,188,29)"/><text x="23.4417%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="23.1917%" y="613" width="0.2296%" height="15" fill="rgb(246,141,4)"/><text x="23.4417%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="23.1917%" y="597" width="0.2296%" height="15" fill="rgb(229,23,39)"/><text x="23.4417%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="23.3065%" y="581" width="0.1148%" height="15" fill="rgb(206,12,3)"/><text x="23.5565%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="23.4214%" y="645" width="0.1148%" height="15" fill="rgb(252,226,20)"/><text x="23.6714%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="23.4214%" y="629" width="0.1148%" height="15" fill="rgb(216,123,35)"/><text x="23.6714%" y="639.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="23.4214%" y="613" width="0.1148%" height="15" fill="rgb(212,68,40)"/><text x="23.6714%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="23.5362%" y="613" width="0.1148%" height="15" fill="rgb(254,125,32)"/><text x="23.7862%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="23.5362%" y="597" width="0.1148%" height="15" fill="rgb(253,97,22)"/><text x="23.7862%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="23.5362%" y="581" width="0.1148%" height="15" fill="rgb(241,101,14)"/><text x="23.7862%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="23.5362%" y="565" width="0.1148%" height="15" fill="rgb(238,103,29)"/><text x="23.7862%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="23.5362%" y="549" width="0.1148%" height="15" fill="rgb(233,195,47)"/><text x="23.7862%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="23.5362%" y="533" width="0.1148%" height="15" fill="rgb(246,218,30)"/><text x="23.7862%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="23.5362%" y="517" width="0.1148%" height="15" fill="rgb(219,145,47)"/><text x="23.7862%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="23.5362%" y="645" width="0.2296%" height="15" fill="rgb(243,12,26)"/><text x="23.7862%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="23.5362%" y="629" width="0.2296%" height="15" fill="rgb(214,87,16)"/><text x="23.7862%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="23.6510%" y="613" width="0.1148%" height="15" fill="rgb(208,99,42)"/><text x="23.9010%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="23.6510%" y="597" width="0.1148%" height="15" fill="rgb(253,99,2)"/><text x="23.9010%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="23.7658%" y="565" width="0.1148%" height="15" fill="rgb(220,168,23)"/><text x="24.0158%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="23.7658%" y="613" width="0.2296%" height="15" fill="rgb(242,38,24)"/><text x="24.0158%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="23.7658%" y="597" width="0.2296%" height="15" fill="rgb(225,182,9)"/><text x="24.0158%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.23%)</title><rect x="23.7658%" y="581" width="0.2296%" height="15" fill="rgb(243,178,37)"/><text x="24.0158%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="23.8806%" y="565" width="0.1148%" height="15" fill="rgb(232,139,19)"/><text x="24.1306%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.34%)</title><rect x="23.7658%" y="645" width="0.3444%" height="15" fill="rgb(225,201,24)"/><text x="24.0158%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.34%)</title><rect x="23.7658%" y="629" width="0.3444%" height="15" fill="rgb(221,47,46)"/><text x="24.0158%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="23.9954%" y="613" width="0.1148%" height="15" fill="rgb(249,23,13)"/><text x="24.2454%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="23.9954%" y="597" width="0.1148%" height="15" fill="rgb(219,9,5)"/><text x="24.2454%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="23.9954%" y="581" width="0.1148%" height="15" fill="rgb(254,171,16)"/><text x="24.2454%" y="591.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="23.9954%" y="565" width="0.1148%" height="15" fill="rgb(230,171,20)"/><text x="24.2454%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="23.9954%" y="549" width="0.1148%" height="15" fill="rgb(210,71,41)"/><text x="24.2454%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="23.9954%" y="533" width="0.1148%" height="15" fill="rgb(206,173,20)"/><text x="24.2454%" y="543.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="23.9954%" y="517" width="0.1148%" height="15" fill="rgb(233,88,34)"/><text x="24.2454%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="24.1102%" y="597" width="0.1148%" height="15" fill="rgb(223,209,46)"/><text x="24.3602%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="24.1102%" y="581" width="0.1148%" height="15" fill="rgb(250,43,18)"/><text x="24.3602%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="24.1102%" y="629" width="0.2296%" height="15" fill="rgb(208,13,10)"/><text x="24.3602%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="24.1102%" y="613" width="0.2296%" height="15" fill="rgb(212,200,36)"/><text x="24.3602%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="24.2250%" y="597" width="0.1148%" height="15" fill="rgb(225,90,30)"/><text x="24.4750%" y="607.50"></text></g><g><title>core::fmt::write (12 samples, 1.38%)</title><rect x="23.0769%" y="677" width="1.3777%" height="15" fill="rgb(236,182,39)"/><text x="23.3269%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (9 samples, 1.03%)</title><rect x="23.4214%" y="661" width="1.0333%" height="15" fill="rgb(212,144,35)"/><text x="23.6714%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.34%)</title><rect x="24.1102%" y="645" width="0.3444%" height="15" fill="rgb(228,63,44)"/><text x="24.3602%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="24.3398%" y="629" width="0.1148%" height="15" fill="rgb(228,109,6)"/><text x="24.5898%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="24.3398%" y="613" width="0.1148%" height="15" fill="rgb(238,117,24)"/><text x="24.5898%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="24.3398%" y="597" width="0.1148%" height="15" fill="rgb(242,26,26)"/><text x="24.5898%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="24.3398%" y="581" width="0.1148%" height="15" fill="rgb(221,92,48)"/><text x="24.5898%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="24.3398%" y="565" width="0.1148%" height="15" fill="rgb(209,209,32)"/><text x="24.5898%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="24.3398%" y="549" width="0.1148%" height="15" fill="rgb(221,70,22)"/><text x="24.5898%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="24.3398%" y="533" width="0.1148%" height="15" fill="rgb(248,145,5)"/><text x="24.5898%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="24.5695%" y="661" width="0.1148%" height="15" fill="rgb(226,116,26)"/><text x="24.8195%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="24.5695%" y="645" width="0.1148%" height="15" fill="rgb(244,5,17)"/><text x="24.8195%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="24.5695%" y="629" width="0.1148%" height="15" fill="rgb(252,159,33)"/><text x="24.8195%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="24.5695%" y="613" width="0.1148%" height="15" fill="rgb(206,71,0)"/><text x="24.8195%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="24.5695%" y="597" width="0.1148%" height="15" fill="rgb(233,118,54)"/><text x="24.8195%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="24.5695%" y="581" width="0.1148%" height="15" fill="rgb(234,83,48)"/><text x="24.8195%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="24.5695%" y="565" width="0.1148%" height="15" fill="rgb(228,3,54)"/><text x="24.8195%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="24.5695%" y="549" width="0.1148%" height="15" fill="rgb(226,155,13)"/><text x="24.8195%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="24.5695%" y="533" width="0.1148%" height="15" fill="rgb(241,28,37)"/><text x="24.8195%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="24.5695%" y="517" width="0.1148%" height="15" fill="rgb(233,93,10)"/><text x="24.8195%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="24.5695%" y="501" width="0.1148%" height="15" fill="rgb(225,113,19)"/><text x="24.8195%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="24.5695%" y="485" width="0.1148%" height="15" fill="rgb(241,2,18)"/><text x="24.8195%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="24.5695%" y="469" width="0.1148%" height="15" fill="rgb(228,207,21)"/><text x="24.8195%" y="479.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="24.6843%" y="629" width="0.1148%" height="15" fill="rgb(213,211,35)"/><text x="24.9343%" y="639.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="25.0287%" y="325" width="0.1148%" height="15" fill="rgb(209,83,10)"/><text x="25.2787%" y="335.50"></text></g><g><title>loopback_xmit (1 samples, 0.11%)</title><rect x="25.0287%" y="309" width="0.1148%" height="15" fill="rgb(209,164,1)"/><text x="25.2787%" y="319.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.11%)</title><rect x="25.0287%" y="293" width="0.1148%" height="15" fill="rgb(213,184,43)"/><text x="25.2787%" y="303.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.34%)</title><rect x="25.0287%" y="341" width="0.3444%" height="15" fill="rgb(231,61,34)"/><text x="25.2787%" y="351.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.23%)</title><rect x="25.1435%" y="325" width="0.2296%" height="15" fill="rgb(235,75,3)"/><text x="25.3935%" y="335.50"></text></g><g><title>netif_skb_features (1 samples, 0.11%)</title><rect x="25.2583%" y="309" width="0.1148%" height="15" fill="rgb(220,106,47)"/><text x="25.5083%" y="319.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="26.0620%" y="37" width="0.1148%" height="15" fill="rgb(210,196,33)"/><text x="26.3120%" y="47.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="26.1768%" y="37" width="0.1148%" height="15" fill="rgb(229,154,42)"/><text x="26.4268%" y="47.50"></text></g><g><title>sock_def_readable (4 samples, 0.46%)</title><rect x="25.9472%" y="117" width="0.4592%" height="15" fill="rgb(228,114,26)"/><text x="26.1972%" y="127.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.46%)</title><rect x="25.9472%" y="101" width="0.4592%" height="15" fill="rgb(208,144,1)"/><text x="26.1972%" y="111.50"></text></g><g><title>__wake_up_common (4 samples, 0.46%)</title><rect x="25.9472%" y="85" width="0.4592%" height="15" fill="rgb(239,112,37)"/><text x="26.1972%" y="95.50"></text></g><g><title>pollwake (4 samples, 0.46%)</title><rect x="25.9472%" y="69" width="0.4592%" height="15" fill="rgb(210,96,50)"/><text x="26.1972%" y="79.50"></text></g><g><title>try_to_wake_up (4 samples, 0.46%)</title><rect x="25.9472%" y="53" width="0.4592%" height="15" fill="rgb(222,178,2)"/><text x="26.1972%" y="63.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.11%)</title><rect x="26.2916%" y="37" width="0.1148%" height="15" fill="rgb(226,74,18)"/><text x="26.5416%" y="47.50"></text></g><g><title>__tcp_transmit_skb (15 samples, 1.72%)</title><rect x="24.7991%" y="405" width="1.7222%" height="15" fill="rgb(225,67,54)"/><text x="25.0491%" y="415.50"></text></g><g><title>__ip_queue_xmit (14 samples, 1.61%)</title><rect x="24.9139%" y="389" width="1.6073%" height="15" fill="rgb(251,92,32)"/><text x="25.1639%" y="399.50"></text></g><g><title>ip_output (14 samples, 1.61%)</title><rect x="24.9139%" y="373" width="1.6073%" height="15" fill="rgb(228,149,22)"/><text x="25.1639%" y="383.50"></text></g><g><title>ip_finish_output2 (14 samples, 1.61%)</title><rect x="24.9139%" y="357" width="1.6073%" height="15" fill="rgb(243,54,13)"/><text x="25.1639%" y="367.50"></text></g><g><title>__local_bh_enable_ip (10 samples, 1.15%)</title><rect x="25.3731%" y="341" width="1.1481%" height="15" fill="rgb(243,180,28)"/><text x="25.6231%" y="351.50"></text></g><g><title>do_softirq (9 samples, 1.03%)</title><rect x="25.4879%" y="325" width="1.0333%" height="15" fill="rgb(208,167,24)"/><text x="25.7379%" y="335.50"></text></g><g><title>do_softirq_own_stack (8 samples, 0.92%)</title><rect x="25.6028%" y="309" width="0.9185%" height="15" fill="rgb(245,73,45)"/><text x="25.8528%" y="319.50"></text></g><g><title>__do_softirq (8 samples, 0.92%)</title><rect x="25.6028%" y="293" width="0.9185%" height="15" fill="rgb(237,203,48)"/><text x="25.8528%" y="303.50"></text></g><g><title>net_rx_action (8 samples, 0.92%)</title><rect x="25.6028%" y="277" width="0.9185%" height="15" fill="rgb(211,197,16)"/><text x="25.8528%" y="287.50"></text></g><g><title>process_backlog (8 samples, 0.92%)</title><rect x="25.6028%" y="261" width="0.9185%" height="15" fill="rgb(243,99,51)"/><text x="25.8528%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.80%)</title><rect x="25.7176%" y="245" width="0.8037%" height="15" fill="rgb(215,123,29)"/><text x="25.9676%" y="255.50"></text></g><g><title>ip_rcv (7 samples, 0.80%)</title><rect x="25.7176%" y="229" width="0.8037%" height="15" fill="rgb(239,186,37)"/><text x="25.9676%" y="239.50"></text></g><g><title>ip_local_deliver (7 samples, 0.80%)</title><rect x="25.7176%" y="213" width="0.8037%" height="15" fill="rgb(252,136,39)"/><text x="25.9676%" y="223.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.80%)</title><rect x="25.7176%" y="197" width="0.8037%" height="15" fill="rgb(223,213,32)"/><text x="25.9676%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.80%)</title><rect x="25.7176%" y="181" width="0.8037%" height="15" fill="rgb(233,115,5)"/><text x="25.9676%" y="191.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.80%)</title><rect x="25.7176%" y="165" width="0.8037%" height="15" fill="rgb(207,226,44)"/><text x="25.9676%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.80%)</title><rect x="25.7176%" y="149" width="0.8037%" height="15" fill="rgb(208,126,0)"/><text x="25.9676%" y="159.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.80%)</title><rect x="25.7176%" y="133" width="0.8037%" height="15" fill="rgb(244,66,21)"/><text x="25.9676%" y="143.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="26.4064%" y="117" width="0.1148%" height="15" fill="rgb(222,97,12)"/><text x="26.6564%" y="127.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="26.4064%" y="101" width="0.1148%" height="15" fill="rgb(219,213,19)"/><text x="26.6564%" y="111.50"></text></g><g><title>__tcp_push_pending_frames (17 samples, 1.95%)</title><rect x="24.7991%" y="437" width="1.9518%" height="15" fill="rgb(252,169,30)"/><text x="25.0491%" y="447.50">_..</text></g><g><title>tcp_write_xmit (17 samples, 1.95%)</title><rect x="24.7991%" y="421" width="1.9518%" height="15" fill="rgb(206,32,51)"/><text x="25.0491%" y="431.50">t..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.23%)</title><rect x="26.5212%" y="405" width="0.2296%" height="15" fill="rgb(250,172,42)"/><text x="26.7712%" y="415.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="26.6361%" y="389" width="0.1148%" height="15" fill="rgb(209,34,43)"/><text x="26.8861%" y="399.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="26.7509%" y="437" width="0.1148%" height="15" fill="rgb(223,11,35)"/><text x="27.0009%" y="447.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.11%)</title><rect x="26.7509%" y="421" width="0.1148%" height="15" fill="rgb(251,219,26)"/><text x="27.0009%" y="431.50"></text></g><g><title>__x64_sys_sendto (19 samples, 2.18%)</title><rect x="24.7991%" y="517" width="2.1814%" height="15" fill="rgb(231,119,3)"/><text x="25.0491%" y="527.50">_..</text></g><g><title>__sys_sendto (19 samples, 2.18%)</title><rect x="24.7991%" y="501" width="2.1814%" height="15" fill="rgb(216,97,11)"/><text x="25.0491%" y="511.50">_..</text></g><g><title>sock_sendmsg (19 samples, 2.18%)</title><rect x="24.7991%" y="485" width="2.1814%" height="15" fill="rgb(223,59,9)"/><text x="25.0491%" y="495.50">s..</text></g><g><title>tcp_sendmsg (19 samples, 2.18%)</title><rect x="24.7991%" y="469" width="2.1814%" height="15" fill="rgb(233,93,31)"/><text x="25.0491%" y="479.50">t..</text></g><g><title>tcp_sendmsg_locked (19 samples, 2.18%)</title><rect x="24.7991%" y="453" width="2.1814%" height="15" fill="rgb(239,81,33)"/><text x="25.0491%" y="463.50">t..</text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="26.8657%" y="437" width="0.1148%" height="15" fill="rgb(213,120,34)"/><text x="27.1157%" y="447.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="26.8657%" y="421" width="0.1148%" height="15" fill="rgb(243,49,53)"/><text x="27.1157%" y="431.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="26.8657%" y="405" width="0.1148%" height="15" fill="rgb(247,216,33)"/><text x="27.1157%" y="415.50"></text></g><g><title>do_syscall_64 (20 samples, 2.30%)</title><rect x="24.7991%" y="533" width="2.2962%" height="15" fill="rgb(226,26,14)"/><text x="25.0491%" y="543.50">d..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="26.9805%" y="517" width="0.1148%" height="15" fill="rgb(215,49,53)"/><text x="27.2305%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 2.41%)</title><rect x="24.7991%" y="549" width="2.4110%" height="15" fill="rgb(245,162,40)"/><text x="25.0491%" y="559.50">en..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="27.0953%" y="533" width="0.1148%" height="15" fill="rgb(229,68,17)"/><text x="27.3453%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (23 samples, 2.64%)</title><rect x="24.6843%" y="661" width="2.6406%" height="15" fill="rgb(213,182,10)"/><text x="24.9343%" y="671.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (23 samples, 2.64%)</title><rect x="24.6843%" y="645" width="2.6406%" height="15" fill="rgb(245,125,30)"/><text x="24.9343%" y="655.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (22 samples, 2.53%)</title><rect x="24.7991%" y="629" width="2.5258%" height="15" fill="rgb(232,202,2)"/><text x="25.0491%" y="639.50">my..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (22 samples, 2.53%)</title><rect x="24.7991%" y="613" width="2.5258%" height="15" fill="rgb(237,140,51)"/><text x="25.0491%" y="623.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (22 samples, 2.53%)</title><rect x="24.7991%" y="597" width="2.5258%" height="15" fill="rgb(236,157,25)"/><text x="25.0491%" y="607.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (22 samples, 2.53%)</title><rect x="24.7991%" y="581" width="2.5258%" height="15" fill="rgb(219,209,0)"/><text x="25.0491%" y="591.50">st..</text></g><g><title>__libc_send (22 samples, 2.53%)</title><rect x="24.7991%" y="565" width="2.5258%" height="15" fill="rgb(240,116,54)"/><text x="25.0491%" y="575.50">__..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="27.2101%" y="549" width="0.1148%" height="15" fill="rgb(216,10,36)"/><text x="27.4601%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="27.3249%" y="645" width="0.1148%" height="15" fill="rgb(222,72,44)"/><text x="27.5749%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="27.3249%" y="629" width="0.1148%" height="15" fill="rgb(232,159,9)"/><text x="27.5749%" y="639.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="27.3249%" y="613" width="0.1148%" height="15" fill="rgb(210,39,32)"/><text x="27.5749%" y="623.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="27.3249%" y="597" width="0.1148%" height="15" fill="rgb(216,194,45)"/><text x="27.5749%" y="607.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="27.3249%" y="581" width="0.1148%" height="15" fill="rgb(218,18,35)"/><text x="27.5749%" y="591.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="27.3249%" y="565" width="0.1148%" height="15" fill="rgb(207,83,51)"/><text x="27.5749%" y="575.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="27.3249%" y="549" width="0.1148%" height="15" fill="rgb(225,63,43)"/><text x="27.5749%" y="559.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="27.3249%" y="533" width="0.1148%" height="15" fill="rgb(207,57,36)"/><text x="27.5749%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="27.3249%" y="517" width="0.1148%" height="15" fill="rgb(216,99,33)"/><text x="27.5749%" y="527.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="27.3249%" y="501" width="0.1148%" height="15" fill="rgb(225,42,16)"/><text x="27.5749%" y="511.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="27.3249%" y="485" width="0.1148%" height="15" fill="rgb(220,201,45)"/><text x="27.5749%" y="495.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="27.3249%" y="469" width="0.1148%" height="15" fill="rgb(225,33,4)"/><text x="27.5749%" y="479.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="27.3249%" y="453" width="0.1148%" height="15" fill="rgb(224,33,50)"/><text x="27.5749%" y="463.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="27.5545%" y="453" width="0.1148%" height="15" fill="rgb(246,198,51)"/><text x="27.8045%" y="463.50"></text></g><g><title>__GI___mprotect (3 samples, 0.34%)</title><rect x="27.4397%" y="581" width="0.3444%" height="15" fill="rgb(205,22,4)"/><text x="27.6897%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.34%)</title><rect x="27.4397%" y="565" width="0.3444%" height="15" fill="rgb(206,3,8)"/><text x="27.6897%" y="575.50"></text></g><g><title>do_syscall_64 (3 samples, 0.34%)</title><rect x="27.4397%" y="549" width="0.3444%" height="15" fill="rgb(251,23,15)"/><text x="27.6897%" y="559.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.34%)</title><rect x="27.4397%" y="533" width="0.3444%" height="15" fill="rgb(252,88,28)"/><text x="27.6897%" y="543.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.34%)</title><rect x="27.4397%" y="517" width="0.3444%" height="15" fill="rgb(212,127,14)"/><text x="27.6897%" y="527.50"></text></g><g><title>mprotect_fixup (3 samples, 0.34%)</title><rect x="27.4397%" y="501" width="0.3444%" height="15" fill="rgb(247,145,37)"/><text x="27.6897%" y="511.50"></text></g><g><title>perf_event_mmap (3 samples, 0.34%)</title><rect x="27.4397%" y="485" width="0.3444%" height="15" fill="rgb(209,117,53)"/><text x="27.6897%" y="495.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.23%)</title><rect x="27.5545%" y="469" width="0.2296%" height="15" fill="rgb(212,90,42)"/><text x="27.8045%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="27.6693%" y="453" width="0.1148%" height="15" fill="rgb(218,164,37)"/><text x="27.9193%" y="463.50"></text></g><g><title>page_fault (2 samples, 0.23%)</title><rect x="27.7842%" y="581" width="0.2296%" height="15" fill="rgb(246,65,34)"/><text x="28.0342%" y="591.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.23%)</title><rect x="27.7842%" y="565" width="0.2296%" height="15" fill="rgb(231,100,33)"/><text x="28.0342%" y="575.50"></text></g><g><title>handle_mm_fault (2 samples, 0.23%)</title><rect x="27.7842%" y="549" width="0.2296%" height="15" fill="rgb(228,126,14)"/><text x="28.0342%" y="559.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.23%)</title><rect x="27.7842%" y="533" width="0.2296%" height="15" fill="rgb(215,173,21)"/><text x="28.0342%" y="543.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.11%)</title><rect x="27.8990%" y="517" width="0.1148%" height="15" fill="rgb(210,6,40)"/><text x="28.1490%" y="527.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (32 samples, 3.67%)</title><rect x="24.4546%" y="677" width="3.6739%" height="15" fill="rgb(212,48,18)"/><text x="24.7046%" y="687.50">deco..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.80%)</title><rect x="27.3249%" y="661" width="0.8037%" height="15" fill="rgb(230,214,11)"/><text x="27.5749%" y="671.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.69%)</title><rect x="27.4397%" y="645" width="0.6889%" height="15" fill="rgb(254,105,39)"/><text x="27.6897%" y="655.50"></text></g><g><title>_int_realloc (6 samples, 0.69%)</title><rect x="27.4397%" y="629" width="0.6889%" height="15" fill="rgb(245,158,5)"/><text x="27.6897%" y="639.50"></text></g><g><title>_int_malloc (6 samples, 0.69%)</title><rect x="27.4397%" y="613" width="0.6889%" height="15" fill="rgb(249,208,11)"/><text x="27.6897%" y="623.50"></text></g><g><title>sysmalloc (6 samples, 0.69%)</title><rect x="27.4397%" y="597" width="0.6889%" height="15" fill="rgb(210,39,28)"/><text x="27.6897%" y="607.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="28.0138%" y="581" width="0.1148%" height="15" fill="rgb(211,56,53)"/><text x="28.2638%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="28.0138%" y="565" width="0.1148%" height="15" fill="rgb(226,201,30)"/><text x="28.2638%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="28.2434%" y="661" width="0.1148%" height="15" fill="rgb(239,101,34)"/><text x="28.4934%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="28.3582%" y="597" width="0.1148%" height="15" fill="rgb(226,209,5)"/><text x="28.6082%" y="607.50"></text></g><g><title>decor_mem::helpers::get_user_cols_of_datatable (4 samples, 0.46%)</title><rect x="28.1286%" y="677" width="0.4592%" height="15" fill="rgb(250,105,47)"/><text x="28.3786%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="28.3582%" y="661" width="0.2296%" height="15" fill="rgb(230,72,3)"/><text x="28.6082%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (2 samples, 0.23%)</title><rect x="28.3582%" y="645" width="0.2296%" height="15" fill="rgb(232,218,39)"/><text x="28.6082%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="28.3582%" y="629" width="0.2296%" height="15" fill="rgb(248,166,6)"/><text x="28.6082%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.23%)</title><rect x="28.3582%" y="613" width="0.2296%" height="15" fill="rgb(247,89,20)"/><text x="28.6082%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="28.4730%" y="597" width="0.1148%" height="15" fill="rgb(248,130,54)"/><text x="28.7230%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="28.4730%" y="581" width="0.1148%" height="15" fill="rgb(234,196,4)"/><text x="28.7230%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="28.4730%" y="565" width="0.1148%" height="15" fill="rgb(250,143,31)"/><text x="28.7230%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="28.4730%" y="549" width="0.1148%" height="15" fill="rgb(211,110,34)"/><text x="28.7230%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="28.4730%" y="533" width="0.1148%" height="15" fill="rgb(215,124,48)"/><text x="28.7230%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="28.4730%" y="517" width="0.1148%" height="15" fill="rgb(216,46,13)"/><text x="28.7230%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="28.4730%" y="501" width="0.1148%" height="15" fill="rgb(205,184,25)"/><text x="28.7230%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="28.4730%" y="485" width="0.1148%" height="15" fill="rgb(228,1,10)"/><text x="28.7230%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="28.4730%" y="469" width="0.1148%" height="15" fill="rgb(213,116,27)"/><text x="28.7230%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="28.4730%" y="453" width="0.1148%" height="15" fill="rgb(241,95,50)"/><text x="28.7230%" y="463.50"></text></g><g><title>decor_mem::helpers::is_datatable (2 samples, 0.23%)</title><rect x="28.5878%" y="677" width="0.2296%" height="15" fill="rgb(238,48,32)"/><text x="28.8378%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="28.7026%" y="661" width="0.1148%" height="15" fill="rgb(235,113,49)"/><text x="28.9526%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="28.7026%" y="645" width="0.1148%" height="15" fill="rgb(205,127,43)"/><text x="28.9526%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="28.7026%" y="629" width="0.1148%" height="15" fill="rgb(250,162,2)"/><text x="28.9526%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="28.7026%" y="613" width="0.1148%" height="15" fill="rgb(220,13,41)"/><text x="28.9526%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="28.7026%" y="597" width="0.1148%" height="15" fill="rgb(249,221,25)"/><text x="28.9526%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="28.7026%" y="581" width="0.1148%" height="15" fill="rgb(215,208,19)"/><text x="28.9526%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="28.7026%" y="565" width="0.1148%" height="15" fill="rgb(236,175,2)"/><text x="28.9526%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="28.7026%" y="549" width="0.1148%" height="15" fill="rgb(241,52,2)"/><text x="28.9526%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="28.7026%" y="533" width="0.1148%" height="15" fill="rgb(248,140,14)"/><text x="28.9526%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.0471%" y="661" width="0.1148%" height="15" fill="rgb(253,22,42)"/><text x="29.2971%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="29.0471%" y="645" width="0.1148%" height="15" fill="rgb(234,61,47)"/><text x="29.2971%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="29.0471%" y="629" width="0.1148%" height="15" fill="rgb(208,226,15)"/><text x="29.2971%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="29.0471%" y="613" width="0.1148%" height="15" fill="rgb(217,221,4)"/><text x="29.2971%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="29.0471%" y="597" width="0.1148%" height="15" fill="rgb(212,174,34)"/><text x="29.2971%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="29.0471%" y="581" width="0.1148%" height="15" fill="rgb(253,83,4)"/><text x="29.2971%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="29.0471%" y="565" width="0.1148%" height="15" fill="rgb(250,195,49)"/><text x="29.2971%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="29.0471%" y="549" width="0.1148%" height="15" fill="rgb(241,192,25)"/><text x="29.2971%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="29.0471%" y="533" width="0.1148%" height="15" fill="rgb(208,124,10)"/><text x="29.2971%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="29.0471%" y="517" width="0.1148%" height="15" fill="rgb(222,33,0)"/><text x="29.2971%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="29.0471%" y="501" width="0.1148%" height="15" fill="rgb(234,209,28)"/><text x="29.2971%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="29.0471%" y="485" width="0.1148%" height="15" fill="rgb(224,11,23)"/><text x="29.2971%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="29.1619%" y="661" width="0.1148%" height="15" fill="rgb(232,99,1)"/><text x="29.4119%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="29.1619%" y="645" width="0.1148%" height="15" fill="rgb(237,95,45)"/><text x="29.4119%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="29.1619%" y="629" width="0.1148%" height="15" fill="rgb(208,109,11)"/><text x="29.4119%" y="639.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="29.1619%" y="613" width="0.1148%" height="15" fill="rgb(216,190,48)"/><text x="29.4119%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="29.1619%" y="597" width="0.1148%" height="15" fill="rgb(251,171,36)"/><text x="29.4119%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="29.2767%" y="645" width="0.1148%" height="15" fill="rgb(230,62,22)"/><text x="29.5267%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="29.6211%" y="565" width="0.1148%" height="15" fill="rgb(225,114,35)"/><text x="29.8711%" y="575.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="29.6211%" y="549" width="0.1148%" height="15" fill="rgb(215,118,42)"/><text x="29.8711%" y="559.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.46%)</title><rect x="29.7359%" y="565" width="0.4592%" height="15" fill="rgb(243,119,21)"/><text x="29.9859%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (4 samples, 0.46%)</title><rect x="29.7359%" y="549" width="0.4592%" height="15" fill="rgb(252,177,53)"/><text x="29.9859%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="30.0804%" y="533" width="0.1148%" height="15" fill="rgb(237,209,29)"/><text x="30.3304%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 1.26%)</title><rect x="29.3915%" y="581" width="1.2629%" height="15" fill="rgb(212,65,23)"/><text x="29.6415%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.46%)</title><rect x="30.1952%" y="565" width="0.4592%" height="15" fill="rgb(230,222,46)"/><text x="30.4452%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.34%)</title><rect x="30.3100%" y="549" width="0.3444%" height="15" fill="rgb(215,135,32)"/><text x="30.5600%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.34%)</title><rect x="30.3100%" y="533" width="0.3444%" height="15" fill="rgb(246,101,22)"/><text x="30.5600%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="30.5396%" y="517" width="0.1148%" height="15" fill="rgb(206,107,13)"/><text x="30.7896%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 1.38%)</title><rect x="29.3915%" y="613" width="1.3777%" height="15" fill="rgb(250,100,44)"/><text x="29.6415%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 1.38%)</title><rect x="29.3915%" y="597" width="1.3777%" height="15" fill="rgb(231,147,38)"/><text x="29.6415%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.11%)</title><rect x="30.6544%" y="581" width="0.1148%" height="15" fill="rgb(229,8,40)"/><text x="30.9044%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="30.6544%" y="565" width="0.1148%" height="15" fill="rgb(221,135,30)"/><text x="30.9044%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (15 samples, 1.72%)</title><rect x="29.3915%" y="629" width="1.7222%" height="15" fill="rgb(249,193,18)"/><text x="29.6415%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.34%)</title><rect x="30.7692%" y="613" width="0.3444%" height="15" fill="rgb(209,133,39)"/><text x="31.0192%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="30.8840%" y="597" width="0.2296%" height="15" fill="rgb(232,100,14)"/><text x="31.1340%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="30.8840%" y="581" width="0.2296%" height="15" fill="rgb(224,185,1)"/><text x="31.1340%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="30.8840%" y="565" width="0.2296%" height="15" fill="rgb(223,139,8)"/><text x="31.1340%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="31.1137%" y="613" width="0.1148%" height="15" fill="rgb(232,213,38)"/><text x="31.3637%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="31.1137%" y="597" width="0.1148%" height="15" fill="rgb(207,94,22)"/><text x="31.3637%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="31.1137%" y="581" width="0.1148%" height="15" fill="rgb(219,183,54)"/><text x="31.3637%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="31.2285%" y="597" width="0.1148%" height="15" fill="rgb(216,185,54)"/><text x="31.4785%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="31.2285%" y="581" width="0.1148%" height="15" fill="rgb(254,217,39)"/><text x="31.4785%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="31.2285%" y="565" width="0.1148%" height="15" fill="rgb(240,178,23)"/><text x="31.4785%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="31.3433%" y="565" width="0.1148%" height="15" fill="rgb(218,11,47)"/><text x="31.5933%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.34%)</title><rect x="31.2285%" y="613" width="0.3444%" height="15" fill="rgb(218,51,51)"/><text x="31.4785%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.23%)</title><rect x="31.3433%" y="597" width="0.2296%" height="15" fill="rgb(238,126,27)"/><text x="31.5933%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="31.3433%" y="581" width="0.2296%" height="15" fill="rgb(249,202,22)"/><text x="31.5933%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="31.4581%" y="565" width="0.1148%" height="15" fill="rgb(254,195,49)"/><text x="31.7081%" y="575.50"></text></g><g><title>core::fmt::write (21 samples, 2.41%)</title><rect x="29.3915%" y="645" width="2.4110%" height="15" fill="rgb(208,123,14)"/><text x="29.6415%" y="655.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.69%)</title><rect x="31.1137%" y="629" width="0.6889%" height="15" fill="rgb(224,200,8)"/><text x="31.3637%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.23%)</title><rect x="31.5729%" y="613" width="0.2296%" height="15" fill="rgb(217,61,36)"/><text x="31.8229%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="31.6877%" y="597" width="0.1148%" height="15" fill="rgb(206,35,45)"/><text x="31.9377%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="31.6877%" y="581" width="0.1148%" height="15" fill="rgb(217,65,33)"/><text x="31.9377%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="31.6877%" y="565" width="0.1148%" height="15" fill="rgb(222,158,48)"/><text x="31.9377%" y="575.50"></text></g><g><title>decor_mem::views::View::insert_into_index (23 samples, 2.64%)</title><rect x="29.2767%" y="661" width="2.6406%" height="15" fill="rgb(254,2,54)"/><text x="29.5267%" y="671.50">de..</text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="31.8025%" y="645" width="0.1148%" height="15" fill="rgb(250,143,38)"/><text x="32.0525%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="31.8025%" y="629" width="0.1148%" height="15" fill="rgb(248,25,0)"/><text x="32.0525%" y="639.50"></text></g><g><title>decor_mem::views::Views::insert (28 samples, 3.21%)</title><rect x="28.8175%" y="677" width="3.2147%" height="15" fill="rgb(206,152,27)"/><text x="29.0675%" y="687.50">dec..</text></g><g><title>decor_mem::views::View::insert_row (1 samples, 0.11%)</title><rect x="31.9173%" y="661" width="0.1148%" height="15" fill="rgb(240,77,30)"/><text x="32.1673%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="31.9173%" y="645" width="0.1148%" height="15" fill="rgb(231,5,3)"/><text x="32.1673%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="31.9173%" y="629" width="0.1148%" height="15" fill="rgb(207,226,32)"/><text x="32.1673%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="31.9173%" y="613" width="0.1148%" height="15" fill="rgb(222,207,47)"/><text x="32.1673%" y="623.50"></text></g><g><title>__rdl_realloc (1 samples, 0.11%)</title><rect x="31.9173%" y="597" width="0.1148%" height="15" fill="rgb(229,115,45)"/><text x="32.1673%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.11%)</title><rect x="31.9173%" y="581" width="0.1148%" height="15" fill="rgb(224,191,6)"/><text x="32.1673%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="32.1470%" y="661" width="0.1148%" height="15" fill="rgb(230,227,24)"/><text x="32.3970%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="32.2618%" y="629" width="0.1148%" height="15" fill="rgb(228,80,19)"/><text x="32.5118%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="32.2618%" y="613" width="0.1148%" height="15" fill="rgb(247,229,0)"/><text x="32.5118%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="32.2618%" y="661" width="0.2296%" height="15" fill="rgb(237,194,15)"/><text x="32.5118%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (2 samples, 0.23%)</title><rect x="32.2618%" y="645" width="0.2296%" height="15" fill="rgb(219,203,20)"/><text x="32.5118%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="32.3766%" y="629" width="0.1148%" height="15" fill="rgb(234,128,8)"/><text x="32.6266%" y="639.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="32.3766%" y="613" width="0.1148%" height="15" fill="rgb(248,202,8)"/><text x="32.6266%" y="623.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="32.3766%" y="597" width="0.1148%" height="15" fill="rgb(206,104,37)"/><text x="32.6266%" y="607.50"></text></g><g><title>__GI___libc_free (6 samples, 0.69%)</title><rect x="34.6728%" y="629" width="0.6889%" height="15" fill="rgb(223,8,27)"/><text x="34.9228%" y="639.50"></text></g><g><title>__GI___libc_realloc (17 samples, 1.95%)</title><rect x="35.3617%" y="629" width="1.9518%" height="15" fill="rgb(216,217,28)"/><text x="35.6117%" y="639.50">_..</text></g><g><title>_int_realloc (3 samples, 0.34%)</title><rect x="36.9690%" y="613" width="0.3444%" height="15" fill="rgb(249,199,1)"/><text x="37.2190%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="37.3134%" y="629" width="0.1148%" height="15" fill="rgb(240,85,17)"/><text x="37.5634%" y="639.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="37.4282%" y="629" width="0.1148%" height="15" fill="rgb(206,108,45)"/><text x="37.6782%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="37.4282%" y="613" width="0.1148%" height="15" fill="rgb(245,210,41)"/><text x="37.6782%" y="623.50"></text></g><g><title>__rdl_realloc (1 samples, 0.11%)</title><rect x="37.5431%" y="629" width="0.1148%" height="15" fill="rgb(206,13,37)"/><text x="37.7931%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.11%)</title><rect x="37.5431%" y="613" width="0.1148%" height="15" fill="rgb(250,61,18)"/><text x="37.7931%" y="623.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="37.5431%" y="597" width="0.1148%" height="15" fill="rgb(235,172,48)"/><text x="37.7931%" y="607.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="37.5431%" y="581" width="0.1148%" height="15" fill="rgb(249,201,17)"/><text x="37.7931%" y="591.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="37.5431%" y="565" width="0.1148%" height="15" fill="rgb(219,208,6)"/><text x="37.7931%" y="575.50"></text></g><g><title>clockevents_program_event (1 samples, 0.11%)</title><rect x="37.5431%" y="549" width="0.1148%" height="15" fill="rgb(248,31,23)"/><text x="37.7931%" y="559.50"></text></g><g><title>lapic_next_deadline (1 samples, 0.11%)</title><rect x="37.5431%" y="533" width="0.1148%" height="15" fill="rgb(245,15,42)"/><text x="37.7931%" y="543.50"></text></g><g><title>native_write_msr (1 samples, 0.11%)</title><rect x="37.5431%" y="517" width="0.1148%" height="15" fill="rgb(222,217,39)"/><text x="37.7931%" y="527.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="37.6579%" y="629" width="0.1148%" height="15" fill="rgb(210,219,27)"/><text x="37.9079%" y="639.50"></text></g><g><title>__rust_realloc (1 samples, 0.11%)</title><rect x="37.7727%" y="629" width="0.1148%" height="15" fill="rgb(252,166,36)"/><text x="38.0227%" y="639.50"></text></g><g><title>_int_free (4 samples, 0.46%)</title><rect x="37.8875%" y="629" width="0.4592%" height="15" fill="rgb(245,132,34)"/><text x="38.1375%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="39.8393%" y="597" width="0.1148%" height="15" fill="rgb(236,54,3)"/><text x="40.0893%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.69%)</title><rect x="39.4948%" y="613" width="0.6889%" height="15" fill="rgb(241,173,43)"/><text x="39.7448%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="39.9541%" y="597" width="0.2296%" height="15" fill="rgb(215,190,9)"/><text x="40.2041%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="40.1837%" y="613" width="0.1148%" height="15" fill="rgb(242,101,16)"/><text x="40.4337%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.11%)</title><rect x="40.1837%" y="597" width="0.1148%" height="15" fill="rgb(223,190,21)"/><text x="40.4337%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="40.4133%" y="581" width="0.2296%" height="15" fill="rgb(215,228,25)"/><text x="40.6633%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.92%)</title><rect x="40.2985%" y="597" width="0.9185%" height="15" fill="rgb(225,36,22)"/><text x="40.5485%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.57%)</title><rect x="40.6429%" y="581" width="0.5741%" height="15" fill="rgb(251,106,46)"/><text x="40.8929%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="40.9874%" y="565" width="0.2296%" height="15" fill="rgb(208,90,1)"/><text x="41.2374%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.23%)</title><rect x="41.2170%" y="597" width="0.2296%" height="15" fill="rgb(243,10,4)"/><text x="41.4670%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.23%)</title><rect x="41.4466%" y="597" width="0.2296%" height="15" fill="rgb(212,137,27)"/><text x="41.6966%" y="607.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.23%)</title><rect x="41.6762%" y="597" width="0.2296%" height="15" fill="rgb(231,220,49)"/><text x="41.9262%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.23%)</title><rect x="41.6762%" y="581" width="0.2296%" height="15" fill="rgb(237,96,20)"/><text x="41.9262%" y="591.50"></text></g><g><title>_int_free (4 samples, 0.46%)</title><rect x="41.9059%" y="597" width="0.4592%" height="15" fill="rgb(239,229,30)"/><text x="42.1559%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.11%)</title><rect x="42.3651%" y="597" width="0.1148%" height="15" fill="rgb(219,65,33)"/><text x="42.6151%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.23%)</title><rect x="43.5132%" y="581" width="0.2296%" height="15" fill="rgb(243,134,7)"/><text x="43.7632%" y="591.50"></text></g><g><title>__GI___libc_realloc (28 samples, 3.21%)</title><rect x="43.7428%" y="581" width="3.2147%" height="15" fill="rgb(216,177,54)"/><text x="43.9928%" y="591.50">__G..</text></g><g><title>_int_realloc (5 samples, 0.57%)</title><rect x="46.3835%" y="565" width="0.5741%" height="15" fill="rgb(211,160,20)"/><text x="46.6335%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="46.9575%" y="581" width="0.2296%" height="15" fill="rgb(239,85,39)"/><text x="47.2075%" y="591.50"></text></g><g><title>__rdl_realloc (2 samples, 0.23%)</title><rect x="47.1871%" y="581" width="0.2296%" height="15" fill="rgb(232,125,22)"/><text x="47.4371%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.11%)</title><rect x="47.3020%" y="565" width="0.1148%" height="15" fill="rgb(244,57,34)"/><text x="47.5520%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="47.4168%" y="581" width="0.1148%" height="15" fill="rgb(214,203,32)"/><text x="47.6668%" y="591.50"></text></g><g><title>__rust_realloc (1 samples, 0.11%)</title><rect x="47.5316%" y="581" width="0.1148%" height="15" fill="rgb(207,58,43)"/><text x="47.7816%" y="591.50"></text></g><g><title>_int_free (4 samples, 0.46%)</title><rect x="47.6464%" y="581" width="0.4592%" height="15" fill="rgb(215,193,15)"/><text x="47.8964%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.69%)</title><rect x="48.1056%" y="581" width="0.6889%" height="15" fill="rgb(232,15,44)"/><text x="48.3556%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="48.5649%" y="565" width="0.2296%" height="15" fill="rgb(212,3,48)"/><text x="48.8149%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.34%)</title><rect x="49.3685%" y="565" width="0.3444%" height="15" fill="rgb(218,128,7)"/><text x="49.6185%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="50.1722%" y="549" width="0.2296%" height="15" fill="rgb(226,216,39)"/><text x="50.4222%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.34%)</title><rect x="50.5166%" y="533" width="0.3444%" height="15" fill="rgb(243,47,51)"/><text x="50.7666%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 1.38%)</title><rect x="49.7130%" y="565" width="1.3777%" height="15" fill="rgb(241,183,40)"/><text x="49.9630%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.69%)</title><rect x="50.4018%" y="549" width="0.6889%" height="15" fill="rgb(231,217,32)"/><text x="50.6518%" y="559.50"></text></g><g><title>__rdl_alloc (2 samples, 0.23%)</title><rect x="50.8611%" y="533" width="0.2296%" height="15" fill="rgb(229,61,38)"/><text x="51.1111%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.23%)</title><rect x="50.8611%" y="517" width="0.2296%" height="15" fill="rgb(225,210,5)"/><text x="51.1111%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="51.0907%" y="565" width="0.2296%" height="15" fill="rgb(231,79,45)"/><text x="51.3407%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.23%)</title><rect x="51.0907%" y="549" width="0.2296%" height="15" fill="rgb(224,100,7)"/><text x="51.3407%" y="559.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="51.3203%" y="565" width="0.1148%" height="15" fill="rgb(241,198,18)"/><text x="51.5703%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.46%)</title><rect x="51.4351%" y="565" width="0.4592%" height="15" fill="rgb(252,97,53)"/><text x="51.6851%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (104 samples, 11.94%)</title><rect x="40.2985%" y="613" width="11.9403%" height="15" fill="rgb(220,88,7)"/><text x="40.5485%" y="623.50">&lt;sql_parser::ast::..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (85 samples, 9.76%)</title><rect x="42.4799%" y="597" width="9.7589%" height="15" fill="rgb(213,176,14)"/><text x="42.7299%" y="607.50">sql_parser::as..</text></g><g><title>core::fmt::write (30 samples, 3.44%)</title><rect x="48.7945%" y="581" width="3.4443%" height="15" fill="rgb(246,73,7)"/><text x="49.0445%" y="591.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::zip (3 samples, 0.34%)</title><rect x="51.8944%" y="565" width="0.3444%" height="15" fill="rgb(245,64,36)"/><text x="52.1444%" y="575.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3 samples, 0.34%)</title><rect x="51.8944%" y="549" width="0.3444%" height="15" fill="rgb(245,80,10)"/><text x="52.1444%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3 samples, 0.34%)</title><rect x="51.8944%" y="533" width="0.3444%" height="15" fill="rgb(232,107,50)"/><text x="52.1444%" y="543.50"></text></g><g><title>core::cmp::min (3 samples, 0.34%)</title><rect x="51.8944%" y="517" width="0.3444%" height="15" fill="rgb(253,3,0)"/><text x="52.1444%" y="527.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.34%)</title><rect x="51.8944%" y="501" width="0.3444%" height="15" fill="rgb(212,99,53)"/><text x="52.1444%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.34%)</title><rect x="51.8944%" y="485" width="0.3444%" height="15" fill="rgb(249,111,54)"/><text x="52.1444%" y="495.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (173 samples, 19.86%)</title><rect x="32.4914%" y="661" width="19.8622%" height="15" fill="rgb(249,55,30)"/><text x="32.7414%" y="671.50">decor_mem::select::get_rptrs_ma..</text></g><g><title>decor_mem::views::View::get_rptrs_of_col (173 samples, 19.86%)</title><rect x="32.4914%" y="645" width="19.8622%" height="15" fill="rgb(237,47,42)"/><text x="32.7414%" y="655.50">decor_mem::views::View::get_rpt..</text></g><g><title>core::fmt::write (122 samples, 14.01%)</title><rect x="38.3467%" y="629" width="14.0069%" height="15" fill="rgb(211,20,18)"/><text x="38.5967%" y="639.50">core::fmt::write</text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.11%)</title><rect x="52.2388%" y="613" width="0.1148%" height="15" fill="rgb(231,203,46)"/><text x="52.4888%" y="623.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.11%)</title><rect x="52.2388%" y="597" width="0.1148%" height="15" fill="rgb(237,142,3)"/><text x="52.4888%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.11%)</title><rect x="52.2388%" y="581" width="0.1148%" height="15" fill="rgb(241,107,1)"/><text x="52.4888%" y="591.50"></text></g><g><title>core::cmp::min (1 samples, 0.11%)</title><rect x="52.2388%" y="565" width="0.1148%" height="15" fill="rgb(229,83,13)"/><text x="52.4888%" y="575.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.11%)</title><rect x="52.2388%" y="549" width="0.1148%" height="15" fill="rgb(241,91,40)"/><text x="52.4888%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="52.2388%" y="533" width="0.1148%" height="15" fill="rgb(225,3,45)"/><text x="52.4888%" y="543.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure::{{closure}} (1 samples, 0.11%)</title><rect x="52.3536%" y="661" width="0.1148%" height="15" fill="rgb(244,223,14)"/><text x="52.6036%" y="671.50"></text></g><g><title>decor_mem::helpers::plus_parser_vals (1 samples, 0.11%)</title><rect x="52.3536%" y="645" width="0.1148%" height="15" fill="rgb(224,124,37)"/><text x="52.6036%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="52.3536%" y="629" width="0.1148%" height="15" fill="rgb(251,171,30)"/><text x="52.6036%" y="639.50"></text></g><g><title>core::fmt::float::&lt;impl core::fmt::Display for f64&gt;::fmt (1 samples, 0.11%)</title><rect x="52.3536%" y="613" width="0.1148%" height="15" fill="rgb(236,46,54)"/><text x="52.6036%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="52.4684%" y="565" width="0.1148%" height="15" fill="rgb(245,213,5)"/><text x="52.7184%" y="575.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="52.6980%" y="549" width="0.1148%" height="15" fill="rgb(230,144,27)"/><text x="52.9480%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="52.6980%" y="533" width="0.1148%" height="15" fill="rgb(220,86,6)"/><text x="52.9480%" y="543.50"></text></g><g><title>decor_mem::select::expr_to_col (4 samples, 0.46%)</title><rect x="52.4684%" y="645" width="0.4592%" height="15" fill="rgb(240,20,13)"/><text x="52.7184%" y="655.50"></text></g><g><title>core::fmt::write (4 samples, 0.46%)</title><rect x="52.4684%" y="629" width="0.4592%" height="15" fill="rgb(217,89,34)"/><text x="52.7184%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.46%)</title><rect x="52.4684%" y="613" width="0.4592%" height="15" fill="rgb(229,13,5)"/><text x="52.7184%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.46%)</title><rect x="52.4684%" y="597" width="0.4592%" height="15" fill="rgb(244,67,35)"/><text x="52.7184%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.46%)</title><rect x="52.4684%" y="581" width="0.4592%" height="15" fill="rgb(221,40,2)"/><text x="52.7184%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.34%)</title><rect x="52.5832%" y="565" width="0.3444%" height="15" fill="rgb(237,157,21)"/><text x="52.8332%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="52.8129%" y="549" width="0.1148%" height="15" fill="rgb(222,94,11)"/><text x="53.0629%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.46%)</title><rect x="53.0425%" y="597" width="0.4592%" height="15" fill="rgb(249,113,6)"/><text x="53.2925%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.46%)</title><rect x="53.0425%" y="581" width="0.4592%" height="15" fill="rgb(238,137,36)"/><text x="53.2925%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.34%)</title><rect x="53.1573%" y="565" width="0.3444%" height="15" fill="rgb(210,102,26)"/><text x="53.4073%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.34%)</title><rect x="53.1573%" y="549" width="0.3444%" height="15" fill="rgb(218,30,30)"/><text x="53.4073%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.34%)</title><rect x="53.1573%" y="533" width="0.3444%" height="15" fill="rgb(214,67,26)"/><text x="53.4073%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.34%)</title><rect x="53.1573%" y="517" width="0.3444%" height="15" fill="rgb(251,9,53)"/><text x="53.4073%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="53.3869%" y="501" width="0.1148%" height="15" fill="rgb(228,204,25)"/><text x="53.6369%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="53.5017%" y="597" width="0.1148%" height="15" fill="rgb(207,153,8)"/><text x="53.7517%" y="607.50"></text></g><g><title>core::fmt::write (6 samples, 0.69%)</title><rect x="53.0425%" y="629" width="0.6889%" height="15" fill="rgb(242,9,16)"/><text x="53.2925%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.69%)</title><rect x="53.0425%" y="613" width="0.6889%" height="15" fill="rgb(217,211,10)"/><text x="53.2925%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="53.6165%" y="597" width="0.1148%" height="15" fill="rgb(219,228,52)"/><text x="53.8665%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="53.6165%" y="581" width="0.1148%" height="15" fill="rgb(231,92,29)"/><text x="53.8665%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="53.7313%" y="501" width="0.1148%" height="15" fill="rgb(232,8,23)"/><text x="53.9813%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="53.7313%" y="485" width="0.1148%" height="15" fill="rgb(216,211,34)"/><text x="53.9813%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="53.7313%" y="469" width="0.1148%" height="15" fill="rgb(236,151,0)"/><text x="53.9813%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="53.7313%" y="453" width="0.1148%" height="15" fill="rgb(209,168,3)"/><text x="53.9813%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="53.7313%" y="437" width="0.1148%" height="15" fill="rgb(208,129,28)"/><text x="53.9813%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="53.7313%" y="421" width="0.1148%" height="15" fill="rgb(229,78,22)"/><text x="53.9813%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="53.7313%" y="405" width="0.1148%" height="15" fill="rgb(228,187,13)"/><text x="53.9813%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="53.7313%" y="389" width="0.1148%" height="15" fill="rgb(240,119,24)"/><text x="53.9813%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="53.7313%" y="373" width="0.1148%" height="15" fill="rgb(209,194,42)"/><text x="53.9813%" y="383.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.34%)</title><rect x="53.7313%" y="549" width="0.3444%" height="15" fill="rgb(247,200,46)"/><text x="53.9813%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.34%)</title><rect x="53.7313%" y="533" width="0.3444%" height="15" fill="rgb(218,76,16)"/><text x="53.9813%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.34%)</title><rect x="53.7313%" y="517" width="0.3444%" height="15" fill="rgb(225,21,48)"/><text x="53.9813%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.23%)</title><rect x="53.8462%" y="501" width="0.2296%" height="15" fill="rgb(239,223,50)"/><text x="54.0962%" y="511.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.23%)</title><rect x="53.8462%" y="485" width="0.2296%" height="15" fill="rgb(244,45,21)"/><text x="54.0962%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.23%)</title><rect x="53.8462%" y="469" width="0.2296%" height="15" fill="rgb(232,33,43)"/><text x="54.0962%" y="479.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="53.9610%" y="453" width="0.1148%" height="15" fill="rgb(209,8,3)"/><text x="54.2110%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="54.0758%" y="549" width="0.1148%" height="15" fill="rgb(214,25,53)"/><text x="54.3258%" y="559.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure (16 samples, 1.84%)</title><rect x="52.4684%" y="661" width="1.8370%" height="15" fill="rgb(254,186,54)"/><text x="52.7184%" y="671.50">d..</text></g><g><title>decor_mem::select::tablecolumn_matches_col (12 samples, 1.38%)</title><rect x="52.9277%" y="645" width="1.3777%" height="15" fill="rgb(208,174,49)"/><text x="53.1777%" y="655.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (5 samples, 0.57%)</title><rect x="53.7313%" y="629" width="0.5741%" height="15" fill="rgb(233,191,51)"/><text x="53.9813%" y="639.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.57%)</title><rect x="53.7313%" y="613" width="0.5741%" height="15" fill="rgb(222,134,10)"/><text x="53.9813%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.57%)</title><rect x="53.7313%" y="597" width="0.5741%" height="15" fill="rgb(230,226,20)"/><text x="53.9813%" y="607.50"></text></g><g><title>core::fmt::write (5 samples, 0.57%)</title><rect x="53.7313%" y="581" width="0.5741%" height="15" fill="rgb(251,111,25)"/><text x="53.9813%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.57%)</title><rect x="53.7313%" y="565" width="0.5741%" height="15" fill="rgb(224,40,46)"/><text x="53.9813%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="54.1906%" y="549" width="0.1148%" height="15" fill="rgb(236,108,47)"/><text x="54.4406%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="54.1906%" y="533" width="0.1148%" height="15" fill="rgb(234,93,0)"/><text x="54.4406%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::retain (9 samples, 1.03%)</title><rect x="54.3054%" y="645" width="1.0333%" height="15" fill="rgb(224,213,32)"/><text x="54.5554%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.23%)</title><rect x="55.1091%" y="629" width="0.2296%" height="15" fill="rgb(251,11,48)"/><text x="55.3591%" y="639.50"></text></g><g><title>decor_mem::views::View::update_index (10 samples, 1.15%)</title><rect x="54.3054%" y="661" width="1.1481%" height="15" fill="rgb(236,173,5)"/><text x="54.5554%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="55.3387%" y="645" width="0.1148%" height="15" fill="rgb(230,95,12)"/><text x="55.5887%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="55.3387%" y="629" width="0.1148%" height="15" fill="rgb(232,209,1)"/><text x="55.5887%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="55.3387%" y="613" width="0.1148%" height="15" fill="rgb(232,6,1)"/><text x="55.5887%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="55.3387%" y="597" width="0.1148%" height="15" fill="rgb(210,224,50)"/><text x="55.5887%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (308 samples, 35.36%)</title><rect x="20.2067%" y="709" width="35.3617%" height="15" fill="rgb(228,127,35)"/><text x="20.4567%" y="719.50">decor_mem::query_transformer::QueryTransformer::query</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (308 samples, 35.36%)</title><rect x="20.2067%" y="693" width="35.3617%" height="15" fill="rgb(245,102,45)"/><text x="20.4567%" y="703.50">decor_mem::query_transformer::QueryTransformer::issue_sta..</text></g><g><title>decor_mem::views::Views::update (205 samples, 23.54%)</title><rect x="32.0321%" y="677" width="23.5362%" height="15" fill="rgb(214,1,49)"/><text x="32.2821%" y="687.50">decor_mem::views::Views::update</text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="55.4535%" y="661" width="0.1148%" height="15" fill="rgb(226,163,40)"/><text x="55.7035%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="55.4535%" y="645" width="0.1148%" height="15" fill="rgb(239,212,28)"/><text x="55.7035%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="55.5683%" y="645" width="0.1148%" height="15" fill="rgb(220,20,13)"/><text x="55.8183%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="55.5683%" y="629" width="0.1148%" height="15" fill="rgb(210,164,35)"/><text x="55.8183%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="55.5683%" y="613" width="0.1148%" height="15" fill="rgb(248,109,41)"/><text x="55.8183%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="55.5683%" y="597" width="0.1148%" height="15" fill="rgb(238,23,50)"/><text x="55.8183%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="55.5683%" y="581" width="0.1148%" height="15" fill="rgb(211,48,49)"/><text x="55.8183%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="55.5683%" y="565" width="0.1148%" height="15" fill="rgb(223,36,21)"/><text x="55.8183%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="55.5683%" y="549" width="0.1148%" height="15" fill="rgb(207,123,46)"/><text x="55.8183%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="55.5683%" y="533" width="0.1148%" height="15" fill="rgb(240,218,32)"/><text x="55.8183%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="55.5683%" y="517" width="0.1148%" height="15" fill="rgb(252,5,43)"/><text x="55.8183%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="55.5683%" y="661" width="0.2296%" height="15" fill="rgb(252,84,19)"/><text x="55.8183%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="55.6831%" y="645" width="0.1148%" height="15" fill="rgb(243,152,39)"/><text x="55.9331%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="55.5683%" y="693" width="0.3444%" height="15" fill="rgb(234,160,15)"/><text x="55.8183%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="55.5683%" y="677" width="0.3444%" height="15" fill="rgb(237,34,20)"/><text x="55.8183%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="55.7979%" y="661" width="0.1148%" height="15" fill="rgb(229,97,13)"/><text x="56.0479%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="55.9127%" y="677" width="0.1148%" height="15" fill="rgb(234,71,50)"/><text x="56.1627%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="55.9127%" y="661" width="0.1148%" height="15" fill="rgb(253,155,4)"/><text x="56.1627%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="55.9127%" y="645" width="0.1148%" height="15" fill="rgb(222,185,37)"/><text x="56.1627%" y="655.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (6 samples, 0.69%)</title><rect x="55.5683%" y="709" width="0.6889%" height="15" fill="rgb(251,177,13)"/><text x="55.8183%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.34%)</title><rect x="55.9127%" y="693" width="0.3444%" height="15" fill="rgb(250,179,40)"/><text x="56.1627%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.23%)</title><rect x="56.0276%" y="677" width="0.2296%" height="15" fill="rgb(242,44,2)"/><text x="56.2776%" y="687.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="56.1424%" y="661" width="0.1148%" height="15" fill="rgb(216,177,13)"/><text x="56.3924%" y="671.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="56.1424%" y="645" width="0.1148%" height="15" fill="rgb(216,106,43)"/><text x="56.3924%" y="655.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="56.1424%" y="629" width="0.1148%" height="15" fill="rgb(216,183,2)"/><text x="56.3924%" y="639.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="56.1424%" y="613" width="0.1148%" height="15" fill="rgb(249,75,3)"/><text x="56.3924%" y="623.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="56.1424%" y="597" width="0.1148%" height="15" fill="rgb(219,67,39)"/><text x="56.3924%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="56.1424%" y="581" width="0.1148%" height="15" fill="rgb(253,228,2)"/><text x="56.3924%" y="591.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="56.1424%" y="565" width="0.1148%" height="15" fill="rgb(235,138,27)"/><text x="56.3924%" y="575.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="56.1424%" y="549" width="0.1148%" height="15" fill="rgb(236,97,51)"/><text x="56.3924%" y="559.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="56.1424%" y="533" width="0.1148%" height="15" fill="rgb(240,80,30)"/><text x="56.3924%" y="543.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="56.1424%" y="517" width="0.1148%" height="15" fill="rgb(230,178,19)"/><text x="56.3924%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="56.2572%" y="661" width="0.1148%" height="15" fill="rgb(210,190,27)"/><text x="56.5072%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="56.2572%" y="645" width="0.1148%" height="15" fill="rgb(222,107,31)"/><text x="56.5072%" y="655.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="56.2572%" y="629" width="0.1148%" height="15" fill="rgb(216,127,34)"/><text x="56.5072%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="56.2572%" y="613" width="0.1148%" height="15" fill="rgb(234,116,52)"/><text x="56.5072%" y="623.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="56.2572%" y="597" width="0.1148%" height="15" fill="rgb(222,124,15)"/><text x="56.5072%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="57.5201%" y="613" width="0.1148%" height="15" fill="rgb(231,179,28)"/><text x="57.7701%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="57.5201%" y="597" width="0.1148%" height="15" fill="rgb(226,93,45)"/><text x="57.7701%" y="607.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (15 samples, 1.72%)</title><rect x="56.3720%" y="645" width="1.7222%" height="15" fill="rgb(215,8,51)"/><text x="56.6220%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.57%)</title><rect x="57.5201%" y="629" width="0.5741%" height="15" fill="rgb(223,106,5)"/><text x="57.7701%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.46%)</title><rect x="57.6349%" y="613" width="0.4592%" height="15" fill="rgb(250,191,5)"/><text x="57.8849%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.46%)</title><rect x="57.6349%" y="597" width="0.4592%" height="15" fill="rgb(242,132,44)"/><text x="57.8849%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.46%)</title><rect x="57.6349%" y="581" width="0.4592%" height="15" fill="rgb(251,152,29)"/><text x="57.8849%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.34%)</title><rect x="57.7497%" y="565" width="0.3444%" height="15" fill="rgb(218,179,5)"/><text x="57.9997%" y="575.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (335 samples, 38.46%)</title><rect x="19.7474%" y="741" width="38.4615%" height="15" fill="rgb(227,67,19)"/><text x="19.9974%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (331 samples, 38.00%)</title><rect x="20.2067%" y="725" width="38.0023%" height="15" fill="rgb(233,119,31)"/><text x="20.4567%" y="735.50">&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query</text></g><g><title>decor_mem::stats::get_qtype (17 samples, 1.95%)</title><rect x="56.2572%" y="709" width="1.9518%" height="15" fill="rgb(241,120,22)"/><text x="56.5072%" y="719.50">d..</text></g><g><title>sql_parser::parser::parse_statements (17 samples, 1.95%)</title><rect x="56.2572%" y="693" width="1.9518%" height="15" fill="rgb(224,102,30)"/><text x="56.5072%" y="703.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (17 samples, 1.95%)</title><rect x="56.2572%" y="677" width="1.9518%" height="15" fill="rgb(210,164,37)"/><text x="56.5072%" y="687.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (16 samples, 1.84%)</title><rect x="56.3720%" y="661" width="1.8370%" height="15" fill="rgb(226,191,16)"/><text x="56.6220%" y="671.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (1 samples, 0.11%)</title><rect x="58.0941%" y="645" width="0.1148%" height="15" fill="rgb(214,40,45)"/><text x="58.3441%" y="655.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="58.2090%" y="741" width="0.1148%" height="15" fill="rgb(244,29,26)"/><text x="58.4590%" y="751.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="58.2090%" y="725" width="0.1148%" height="15" fill="rgb(216,16,5)"/><text x="58.4590%" y="735.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.11%)</title><rect x="58.2090%" y="709" width="0.1148%" height="15" fill="rgb(249,76,35)"/><text x="58.4590%" y="719.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.11%)</title><rect x="58.2090%" y="693" width="0.1148%" height="15" fill="rgb(207,11,44)"/><text x="58.4590%" y="703.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.11%)</title><rect x="58.2090%" y="677" width="0.1148%" height="15" fill="rgb(228,190,49)"/><text x="58.4590%" y="687.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.11%)</title><rect x="58.2090%" y="661" width="0.1148%" height="15" fill="rgb(214,173,12)"/><text x="58.4590%" y="671.50"></text></g><g><title>regex::compile::SuffixCache::get (1 samples, 0.11%)</title><rect x="58.2090%" y="645" width="0.1148%" height="15" fill="rgb(218,26,35)"/><text x="58.4590%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (32 samples, 3.67%)</title><rect x="58.4386%" y="661" width="3.6739%" height="15" fill="rgb(220,200,19)"/><text x="58.6886%" y="671.50">sql_..</text></g><g><title>sql_parser::parser::Parser::expected (31 samples, 3.56%)</title><rect x="58.5534%" y="645" width="3.5591%" height="15" fill="rgb(239,95,49)"/><text x="58.8034%" y="655.50">sql_..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (31 samples, 3.56%)</title><rect x="58.5534%" y="629" width="3.5591%" height="15" fill="rgb(235,85,53)"/><text x="58.8034%" y="639.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 3.56%)</title><rect x="58.5534%" y="613" width="3.5591%" height="15" fill="rgb(233,133,31)"/><text x="58.8034%" y="623.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 3.56%)</title><rect x="58.5534%" y="597" width="3.5591%" height="15" fill="rgb(218,25,20)"/><text x="58.8034%" y="607.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (31 samples, 3.56%)</title><rect x="58.5534%" y="581" width="3.5591%" height="15" fill="rgb(252,210,38)"/><text x="58.8034%" y="591.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (31 samples, 3.56%)</title><rect x="58.5534%" y="565" width="3.5591%" height="15" fill="rgb(242,134,21)"/><text x="58.8034%" y="575.50">allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 3.56%)</title><rect x="58.5534%" y="549" width="3.5591%" height="15" fill="rgb(213,28,48)"/><text x="58.8034%" y="559.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (31 samples, 3.56%)</title><rect x="58.5534%" y="533" width="3.5591%" height="15" fill="rgb(250,196,2)"/><text x="58.8034%" y="543.50">allo..</text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 3.56%)</title><rect x="58.5534%" y="517" width="3.5591%" height="15" fill="rgb(227,5,17)"/><text x="58.8034%" y="527.50">core..</text></g><g><title>__memmove_avx_unaligned_erms (31 samples, 3.56%)</title><rect x="58.5534%" y="501" width="3.5591%" height="15" fill="rgb(221,226,24)"/><text x="58.8034%" y="511.50">__me..</text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="62.1125%" y="645" width="0.1148%" height="15" fill="rgb(211,5,48)"/><text x="62.3625%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="62.1125%" y="629" width="0.1148%" height="15" fill="rgb(219,150,6)"/><text x="62.3625%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="62.1125%" y="613" width="0.1148%" height="15" fill="rgb(251,46,16)"/><text x="62.3625%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="62.1125%" y="597" width="0.1148%" height="15" fill="rgb(220,204,40)"/><text x="62.3625%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="62.1125%" y="581" width="0.1148%" height="15" fill="rgb(211,85,2)"/><text x="62.3625%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="62.1125%" y="565" width="0.1148%" height="15" fill="rgb(229,17,7)"/><text x="62.3625%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="62.1125%" y="549" width="0.1148%" height="15" fill="rgb(239,72,28)"/><text x="62.3625%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="62.1125%" y="533" width="0.1148%" height="15" fill="rgb(230,47,54)"/><text x="62.3625%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="62.1125%" y="517" width="0.1148%" height="15" fill="rgb(214,50,8)"/><text x="62.3625%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="62.1125%" y="501" width="0.1148%" height="15" fill="rgb(216,198,43)"/><text x="62.3625%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="62.1125%" y="485" width="0.1148%" height="15" fill="rgb(234,20,35)"/><text x="62.3625%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="62.1125%" y="469" width="0.1148%" height="15" fill="rgb(254,45,19)"/><text x="62.3625%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="62.1125%" y="453" width="0.1148%" height="15" fill="rgb(219,14,44)"/><text x="62.3625%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (35 samples, 4.02%)</title><rect x="58.3238%" y="741" width="4.0184%" height="15" fill="rgb(217,220,26)"/><text x="58.5738%" y="751.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (35 samples, 4.02%)</title><rect x="58.3238%" y="725" width="4.0184%" height="15" fill="rgb(213,158,28)"/><text x="58.5738%" y="735.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (35 samples, 4.02%)</title><rect x="58.3238%" y="709" width="4.0184%" height="15" fill="rgb(252,51,52)"/><text x="58.5738%" y="719.50">sql_..</text></g><g><title>sql_parser::parser::Parser::check_descent (35 samples, 4.02%)</title><rect x="58.3238%" y="693" width="4.0184%" height="15" fill="rgb(246,89,16)"/><text x="58.5738%" y="703.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (35 samples, 4.02%)</title><rect x="58.3238%" y="677" width="4.0184%" height="15" fill="rgb(216,158,49)"/><text x="58.5738%" y="687.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_value (2 samples, 0.23%)</title><rect x="62.1125%" y="661" width="0.2296%" height="15" fill="rgb(236,107,19)"/><text x="62.3625%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="62.2273%" y="645" width="0.1148%" height="15" fill="rgb(228,185,30)"/><text x="62.4773%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="62.3421%" y="645" width="0.3444%" height="15" fill="rgb(246,134,8)"/><text x="62.5921%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="62.3421%" y="629" width="0.3444%" height="15" fill="rgb(214,143,50)"/><text x="62.5921%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.34%)</title><rect x="62.3421%" y="613" width="0.3444%" height="15" fill="rgb(228,75,8)"/><text x="62.5921%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.34%)</title><rect x="62.3421%" y="597" width="0.3444%" height="15" fill="rgb(207,175,4)"/><text x="62.5921%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.34%)</title><rect x="62.3421%" y="581" width="0.3444%" height="15" fill="rgb(205,108,24)"/><text x="62.5921%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.34%)</title><rect x="62.3421%" y="565" width="0.3444%" height="15" fill="rgb(244,120,49)"/><text x="62.5921%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.34%)</title><rect x="62.3421%" y="549" width="0.3444%" height="15" fill="rgb(223,47,38)"/><text x="62.5921%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.34%)</title><rect x="62.3421%" y="533" width="0.3444%" height="15" fill="rgb(229,179,11)"/><text x="62.5921%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.34%)</title><rect x="62.3421%" y="517" width="0.3444%" height="15" fill="rgb(231,122,1)"/><text x="62.5921%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.34%)</title><rect x="62.3421%" y="501" width="0.3444%" height="15" fill="rgb(245,119,9)"/><text x="62.5921%" y="511.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.34%)</title><rect x="62.3421%" y="485" width="0.3444%" height="15" fill="rgb(241,163,25)"/><text x="62.5921%" y="495.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.34%)</title><rect x="62.3421%" y="469" width="0.3444%" height="15" fill="rgb(217,214,3)"/><text x="62.5921%" y="479.50"></text></g><g><title>_int_malloc (3 samples, 0.34%)</title><rect x="62.3421%" y="453" width="0.3444%" height="15" fill="rgb(240,86,28)"/><text x="62.5921%" y="463.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="62.5718%" y="437" width="0.1148%" height="15" fill="rgb(215,47,9)"/><text x="62.8218%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="62.6866%" y="597" width="0.1148%" height="15" fill="rgb(252,25,45)"/><text x="62.9366%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="62.6866%" y="581" width="0.1148%" height="15" fill="rgb(251,164,9)"/><text x="62.9366%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="62.6866%" y="565" width="0.1148%" height="15" fill="rgb(233,194,0)"/><text x="62.9366%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="62.6866%" y="549" width="0.1148%" height="15" fill="rgb(249,111,24)"/><text x="62.9366%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="62.6866%" y="533" width="0.1148%" height="15" fill="rgb(250,223,3)"/><text x="62.9366%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="62.6866%" y="517" width="0.1148%" height="15" fill="rgb(236,178,37)"/><text x="62.9366%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.11%)</title><rect x="62.6866%" y="501" width="0.1148%" height="15" fill="rgb(241,158,50)"/><text x="62.9366%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="62.6866%" y="485" width="0.1148%" height="15" fill="rgb(213,121,41)"/><text x="62.9366%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.11%)</title><rect x="62.6866%" y="469" width="0.1148%" height="15" fill="rgb(240,92,3)"/><text x="62.9366%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="62.6866%" y="453" width="0.1148%" height="15" fill="rgb(205,123,3)"/><text x="62.9366%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="62.6866%" y="437" width="0.1148%" height="15" fill="rgb(205,97,47)"/><text x="62.9366%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.11%)</title><rect x="62.6866%" y="421" width="0.1148%" height="15" fill="rgb(247,152,14)"/><text x="62.9366%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="62.6866%" y="405" width="0.1148%" height="15" fill="rgb(248,195,53)"/><text x="62.9366%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="62.6866%" y="389" width="0.1148%" height="15" fill="rgb(226,201,16)"/><text x="62.9366%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="62.6866%" y="373" width="0.1148%" height="15" fill="rgb(205,98,0)"/><text x="62.9366%" y="383.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="62.6866%" y="357" width="0.1148%" height="15" fill="rgb(214,191,48)"/><text x="62.9366%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="62.6866%" y="341" width="0.1148%" height="15" fill="rgb(237,112,39)"/><text x="62.9366%" y="351.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="62.6866%" y="325" width="0.1148%" height="15" fill="rgb(247,203,27)"/><text x="62.9366%" y="335.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (5 samples, 0.57%)</title><rect x="62.3421%" y="741" width="0.5741%" height="15" fill="rgb(235,124,28)"/><text x="62.5921%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.57%)</title><rect x="62.3421%" y="725" width="0.5741%" height="15" fill="rgb(208,207,46)"/><text x="62.5921%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.57%)</title><rect x="62.3421%" y="709" width="0.5741%" height="15" fill="rgb(234,176,4)"/><text x="62.5921%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (5 samples, 0.57%)</title><rect x="62.3421%" y="693" width="0.5741%" height="15" fill="rgb(230,133,28)"/><text x="62.5921%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.57%)</title><rect x="62.3421%" y="677" width="0.5741%" height="15" fill="rgb(211,137,40)"/><text x="62.5921%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (5 samples, 0.57%)</title><rect x="62.3421%" y="661" width="0.5741%" height="15" fill="rgb(254,35,13)"/><text x="62.5921%" y="671.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.23%)</title><rect x="62.6866%" y="645" width="0.2296%" height="15" fill="rgb(225,49,51)"/><text x="62.9366%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.23%)</title><rect x="62.6866%" y="629" width="0.2296%" height="15" fill="rgb(251,10,15)"/><text x="62.9366%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="62.6866%" y="613" width="0.2296%" height="15" fill="rgb(228,207,15)"/><text x="62.9366%" y="623.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="62.8014%" y="597" width="0.1148%" height="15" fill="rgb(241,99,19)"/><text x="63.0514%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.11%)</title><rect x="62.8014%" y="581" width="0.1148%" height="15" fill="rgb(207,104,49)"/><text x="63.0514%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="62.8014%" y="565" width="0.1148%" height="15" fill="rgb(234,99,18)"/><text x="63.0514%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="62.8014%" y="549" width="0.1148%" height="15" fill="rgb(213,191,49)"/><text x="63.0514%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="62.8014%" y="533" width="0.1148%" height="15" fill="rgb(210,226,19)"/><text x="63.0514%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="62.8014%" y="517" width="0.1148%" height="15" fill="rgb(229,97,18)"/><text x="63.0514%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="62.8014%" y="501" width="0.1148%" height="15" fill="rgb(211,167,15)"/><text x="63.0514%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="62.8014%" y="485" width="0.1148%" height="15" fill="rgb(210,169,34)"/><text x="63.0514%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="62.8014%" y="469" width="0.1148%" height="15" fill="rgb(241,121,31)"/><text x="63.0514%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.11%)</title><rect x="62.8014%" y="453" width="0.1148%" height="15" fill="rgb(232,40,11)"/><text x="63.0514%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="62.8014%" y="437" width="0.1148%" height="15" fill="rgb(205,86,26)"/><text x="63.0514%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.11%)</title><rect x="62.8014%" y="421" width="0.1148%" height="15" fill="rgb(231,126,28)"/><text x="63.0514%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="62.8014%" y="405" width="0.1148%" height="15" fill="rgb(219,221,18)"/><text x="63.0514%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="62.8014%" y="389" width="0.1148%" height="15" fill="rgb(211,40,0)"/><text x="63.0514%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.11%)</title><rect x="62.8014%" y="373" width="0.1148%" height="15" fill="rgb(239,85,43)"/><text x="63.0514%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="62.8014%" y="357" width="0.1148%" height="15" fill="rgb(231,55,21)"/><text x="63.0514%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="62.8014%" y="341" width="0.1148%" height="15" fill="rgb(225,184,43)"/><text x="63.0514%" y="351.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="62.8014%" y="325" width="0.1148%" height="15" fill="rgb(251,158,41)"/><text x="63.0514%" y="335.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="62.8014%" y="309" width="0.1148%" height="15" fill="rgb(234,159,37)"/><text x="63.0514%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="62.8014%" y="293" width="0.1148%" height="15" fill="rgb(216,204,22)"/><text x="63.0514%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="63.2606%" y="661" width="0.1148%" height="15" fill="rgb(214,17,3)"/><text x="63.5106%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (4 samples, 0.46%)</title><rect x="63.0310%" y="709" width="0.4592%" height="15" fill="rgb(212,111,17)"/><text x="63.2810%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.46%)</title><rect x="63.0310%" y="693" width="0.4592%" height="15" fill="rgb(221,157,24)"/><text x="63.2810%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.23%)</title><rect x="63.2606%" y="677" width="0.2296%" height="15" fill="rgb(252,16,13)"/><text x="63.5106%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="63.3754%" y="661" width="0.1148%" height="15" fill="rgb(221,62,2)"/><text x="63.6254%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="63.4902%" y="693" width="0.1148%" height="15" fill="rgb(247,87,22)"/><text x="63.7402%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="63.4902%" y="677" width="0.1148%" height="15" fill="rgb(215,73,9)"/><text x="63.7402%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="63.4902%" y="661" width="0.1148%" height="15" fill="rgb(207,175,33)"/><text x="63.7402%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="63.4902%" y="645" width="0.1148%" height="15" fill="rgb(243,129,54)"/><text x="63.7402%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="63.4902%" y="629" width="0.1148%" height="15" fill="rgb(227,119,45)"/><text x="63.7402%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="63.4902%" y="613" width="0.1148%" height="15" fill="rgb(205,109,36)"/><text x="63.7402%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="63.4902%" y="597" width="0.1148%" height="15" fill="rgb(205,6,39)"/><text x="63.7402%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="63.4902%" y="581" width="0.1148%" height="15" fill="rgb(221,32,16)"/><text x="63.7402%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="63.4902%" y="565" width="0.1148%" height="15" fill="rgb(228,144,50)"/><text x="63.7402%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="63.4902%" y="549" width="0.1148%" height="15" fill="rgb(229,201,53)"/><text x="63.7402%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="63.4902%" y="533" width="0.1148%" height="15" fill="rgb(249,153,27)"/><text x="63.7402%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="63.4902%" y="517" width="0.1148%" height="15" fill="rgb(227,106,25)"/><text x="63.7402%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="63.4902%" y="501" width="0.1148%" height="15" fill="rgb(230,65,29)"/><text x="63.7402%" y="511.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="63.6051%" y="693" width="0.1148%" height="15" fill="rgb(221,57,46)"/><text x="63.8551%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="63.7199%" y="693" width="0.1148%" height="15" fill="rgb(229,161,17)"/><text x="63.9699%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.11%)</title><rect x="63.8347%" y="693" width="0.1148%" height="15" fill="rgb(222,213,11)"/><text x="64.0847%" y="703.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="63.8347%" y="677" width="0.1148%" height="15" fill="rgb(235,35,13)"/><text x="64.0847%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="63.8347%" y="661" width="0.1148%" height="15" fill="rgb(233,158,34)"/><text x="64.0847%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="63.8347%" y="645" width="0.1148%" height="15" fill="rgb(215,151,48)"/><text x="64.0847%" y="655.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="63.9495%" y="677" width="0.1148%" height="15" fill="rgb(229,84,14)"/><text x="64.1995%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="63.9495%" y="661" width="0.1148%" height="15" fill="rgb(229,68,14)"/><text x="64.1995%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="63.9495%" y="645" width="0.1148%" height="15" fill="rgb(243,106,26)"/><text x="64.1995%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="63.9495%" y="629" width="0.1148%" height="15" fill="rgb(206,45,38)"/><text x="64.1995%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="63.9495%" y="613" width="0.1148%" height="15" fill="rgb(226,6,15)"/><text x="64.1995%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="63.9495%" y="597" width="0.1148%" height="15" fill="rgb(232,22,54)"/><text x="64.1995%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="63.9495%" y="581" width="0.1148%" height="15" fill="rgb(229,222,32)"/><text x="64.1995%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="63.9495%" y="565" width="0.1148%" height="15" fill="rgb(228,62,29)"/><text x="64.1995%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="63.9495%" y="549" width="0.1148%" height="15" fill="rgb(251,103,34)"/><text x="64.1995%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="63.9495%" y="533" width="0.1148%" height="15" fill="rgb(233,12,30)"/><text x="64.1995%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="63.9495%" y="517" width="0.1148%" height="15" fill="rgb(238,52,0)"/><text x="64.1995%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="63.9495%" y="501" width="0.1148%" height="15" fill="rgb(223,98,5)"/><text x="64.1995%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="63.9495%" y="485" width="0.1148%" height="15" fill="rgb(228,75,37)"/><text x="64.1995%" y="495.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="64.0643%" y="645" width="0.1148%" height="15" fill="rgb(205,115,49)"/><text x="64.3143%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="64.0643%" y="629" width="0.1148%" height="15" fill="rgb(250,154,43)"/><text x="64.3143%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="64.0643%" y="613" width="0.1148%" height="15" fill="rgb(226,43,29)"/><text x="64.3143%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="64.0643%" y="597" width="0.1148%" height="15" fill="rgb(249,228,39)"/><text x="64.3143%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="64.0643%" y="581" width="0.1148%" height="15" fill="rgb(216,79,43)"/><text x="64.3143%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="64.0643%" y="565" width="0.1148%" height="15" fill="rgb(228,95,12)"/><text x="64.3143%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="64.0643%" y="549" width="0.1148%" height="15" fill="rgb(249,221,15)"/><text x="64.3143%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="64.0643%" y="533" width="0.1148%" height="15" fill="rgb(233,34,13)"/><text x="64.3143%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="64.0643%" y="517" width="0.1148%" height="15" fill="rgb(214,103,39)"/><text x="64.3143%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="64.1791%" y="517" width="0.1148%" height="15" fill="rgb(251,126,39)"/><text x="64.4291%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="64.1791%" y="501" width="0.1148%" height="15" fill="rgb(214,216,36)"/><text x="64.4291%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 0.92%)</title><rect x="63.4902%" y="709" width="0.9185%" height="15" fill="rgb(220,221,8)"/><text x="63.7402%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.46%)</title><rect x="63.9495%" y="693" width="0.4592%" height="15" fill="rgb(240,216,3)"/><text x="64.1995%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (3 samples, 0.34%)</title><rect x="64.0643%" y="677" width="0.3444%" height="15" fill="rgb(232,218,17)"/><text x="64.3143%" y="687.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.34%)</title><rect x="64.0643%" y="661" width="0.3444%" height="15" fill="rgb(229,163,45)"/><text x="64.3143%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.23%)</title><rect x="64.1791%" y="645" width="0.2296%" height="15" fill="rgb(231,110,42)"/><text x="64.4291%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.23%)</title><rect x="64.1791%" y="629" width="0.2296%" height="15" fill="rgb(208,170,48)"/><text x="64.4291%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="64.1791%" y="613" width="0.2296%" height="15" fill="rgb(239,116,25)"/><text x="64.4291%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.23%)</title><rect x="64.1791%" y="597" width="0.2296%" height="15" fill="rgb(219,200,50)"/><text x="64.4291%" y="607.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.23%)</title><rect x="64.1791%" y="581" width="0.2296%" height="15" fill="rgb(245,200,0)"/><text x="64.4291%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.23%)</title><rect x="64.1791%" y="565" width="0.2296%" height="15" fill="rgb(245,119,33)"/><text x="64.4291%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.23%)</title><rect x="64.1791%" y="549" width="0.2296%" height="15" fill="rgb(231,125,12)"/><text x="64.4291%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.23%)</title><rect x="64.1791%" y="533" width="0.2296%" height="15" fill="rgb(216,96,41)"/><text x="64.4291%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.11%)</title><rect x="64.2939%" y="517" width="0.1148%" height="15" fill="rgb(248,43,45)"/><text x="64.5439%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="64.2939%" y="501" width="0.1148%" height="15" fill="rgb(217,222,7)"/><text x="64.5439%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (15 samples, 1.72%)</title><rect x="62.9162%" y="741" width="1.7222%" height="15" fill="rgb(233,28,6)"/><text x="63.1662%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (14 samples, 1.61%)</title><rect x="63.0310%" y="725" width="1.6073%" height="15" fill="rgb(231,218,15)"/><text x="63.2810%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.23%)</title><rect x="64.4087%" y="709" width="0.2296%" height="15" fill="rgb(226,171,48)"/><text x="64.6587%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.23%)</title><rect x="64.4087%" y="693" width="0.2296%" height="15" fill="rgb(235,201,9)"/><text x="64.6587%" y="703.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="64.6383%" y="741" width="0.1148%" height="15" fill="rgb(217,80,15)"/><text x="64.8883%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.11%)</title><rect x="64.6383%" y="725" width="0.1148%" height="15" fill="rgb(219,152,8)"/><text x="64.8883%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.11%)</title><rect x="64.6383%" y="709" width="0.1148%" height="15" fill="rgb(243,107,38)"/><text x="64.8883%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (1 samples, 0.11%)</title><rect x="64.6383%" y="693" width="0.1148%" height="15" fill="rgb(231,17,5)"/><text x="64.8883%" y="703.50"></text></g><g><title>__alloc_fd (1 samples, 0.11%)</title><rect x="64.7532%" y="453" width="0.1148%" height="15" fill="rgb(209,25,54)"/><text x="65.0032%" y="463.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.11%)</title><rect x="64.8680%" y="405" width="0.1148%" height="15" fill="rgb(219,0,2)"/><text x="65.1180%" y="415.50"></text></g><g><title>generic_permission (1 samples, 0.11%)</title><rect x="64.8680%" y="389" width="0.1148%" height="15" fill="rgb(246,9,5)"/><text x="65.1180%" y="399.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.34%)</title><rect x="64.7532%" y="741" width="0.3444%" height="15" fill="rgb(226,159,4)"/><text x="65.0032%" y="751.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.34%)</title><rect x="64.7532%" y="725" width="0.3444%" height="15" fill="rgb(219,175,34)"/><text x="65.0032%" y="735.50"></text></g><g><title>std::panicking::try (3 samples, 0.34%)</title><rect x="64.7532%" y="709" width="0.3444%" height="15" fill="rgb(236,10,46)"/><text x="65.0032%" y="719.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.34%)</title><rect x="64.7532%" y="693" width="0.3444%" height="15" fill="rgb(240,211,16)"/><text x="65.0032%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.34%)</title><rect x="64.7532%" y="677" width="0.3444%" height="15" fill="rgb(205,3,43)"/><text x="65.0032%" y="687.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.34%)</title><rect x="64.7532%" y="661" width="0.3444%" height="15" fill="rgb(245,7,22)"/><text x="65.0032%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.34%)</title><rect x="64.7532%" y="645" width="0.3444%" height="15" fill="rgb(239,132,32)"/><text x="65.0032%" y="655.50"></text></g><g><title>lobsters_microbenchmarks::main (3 samples, 0.34%)</title><rect x="64.7532%" y="629" width="0.3444%" height="15" fill="rgb(228,202,34)"/><text x="65.0032%" y="639.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.34%)</title><rect x="64.7532%" y="613" width="0.3444%" height="15" fill="rgb(254,200,22)"/><text x="65.0032%" y="623.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.34%)</title><rect x="64.7532%" y="597" width="0.3444%" height="15" fill="rgb(219,10,39)"/><text x="65.0032%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.34%)</title><rect x="64.7532%" y="581" width="0.3444%" height="15" fill="rgb(226,210,39)"/><text x="65.0032%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.34%)</title><rect x="64.7532%" y="565" width="0.3444%" height="15" fill="rgb(208,219,16)"/><text x="65.0032%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.34%)</title><rect x="64.7532%" y="549" width="0.3444%" height="15" fill="rgb(216,158,51)"/><text x="65.0032%" y="559.50"></text></g><g><title>__GI___openat (3 samples, 0.34%)</title><rect x="64.7532%" y="533" width="0.3444%" height="15" fill="rgb(233,14,44)"/><text x="65.0032%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.34%)</title><rect x="64.7532%" y="517" width="0.3444%" height="15" fill="rgb(237,97,39)"/><text x="65.0032%" y="527.50"></text></g><g><title>do_syscall_64 (3 samples, 0.34%)</title><rect x="64.7532%" y="501" width="0.3444%" height="15" fill="rgb(218,198,43)"/><text x="65.0032%" y="511.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.34%)</title><rect x="64.7532%" y="485" width="0.3444%" height="15" fill="rgb(231,104,20)"/><text x="65.0032%" y="495.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.34%)</title><rect x="64.7532%" y="469" width="0.3444%" height="15" fill="rgb(254,36,13)"/><text x="65.0032%" y="479.50"></text></g><g><title>do_filp_open (2 samples, 0.23%)</title><rect x="64.8680%" y="453" width="0.2296%" height="15" fill="rgb(248,14,50)"/><text x="65.1180%" y="463.50"></text></g><g><title>path_openat (2 samples, 0.23%)</title><rect x="64.8680%" y="437" width="0.2296%" height="15" fill="rgb(217,107,29)"/><text x="65.1180%" y="447.50"></text></g><g><title>link_path_walk (2 samples, 0.23%)</title><rect x="64.8680%" y="421" width="0.2296%" height="15" fill="rgb(251,169,33)"/><text x="65.1180%" y="431.50"></text></g><g><title>walk_component (1 samples, 0.11%)</title><rect x="64.9828%" y="405" width="0.1148%" height="15" fill="rgb(217,108,32)"/><text x="65.2328%" y="415.50"></text></g><g><title>step_into (1 samples, 0.11%)</title><rect x="64.9828%" y="389" width="0.1148%" height="15" fill="rgb(219,66,42)"/><text x="65.2328%" y="399.50"></text></g><g><title>[unknown] (502 samples, 57.63%)</title><rect x="7.5775%" y="757" width="57.6349%" height="15" fill="rgb(206,180,7)"/><text x="7.8275%" y="767.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.11%)</title><rect x="65.0976%" y="741" width="0.1148%" height="15" fill="rgb(208,226,31)"/><text x="65.3476%" y="751.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (1 samples, 0.11%)</title><rect x="65.0976%" y="725" width="0.1148%" height="15" fill="rgb(218,26,49)"/><text x="65.3476%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.11%)</title><rect x="65.0976%" y="709" width="0.1148%" height="15" fill="rgb(233,197,48)"/><text x="65.3476%" y="719.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="65.0976%" y="693" width="0.1148%" height="15" fill="rgb(252,181,51)"/><text x="65.3476%" y="703.50"></text></g><g><title>decor_mem::Shim::create_schema (1 samples, 0.11%)</title><rect x="65.0976%" y="677" width="0.1148%" height="15" fill="rgb(253,90,19)"/><text x="65.3476%" y="687.50"></text></g><g><title>decor_mem::ghosts_map::create_ghosts_table (1 samples, 0.11%)</title><rect x="65.0976%" y="661" width="0.1148%" height="15" fill="rgb(215,171,30)"/><text x="65.3476%" y="671.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="65.0976%" y="645" width="0.1148%" height="15" fill="rgb(214,222,9)"/><text x="65.3476%" y="655.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="65.0976%" y="629" width="0.1148%" height="15" fill="rgb(223,3,22)"/><text x="65.3476%" y="639.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="65.0976%" y="613" width="0.1148%" height="15" fill="rgb(225,196,46)"/><text x="65.3476%" y="623.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="65.0976%" y="597" width="0.1148%" height="15" fill="rgb(209,110,37)"/><text x="65.3476%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="65.0976%" y="581" width="0.1148%" height="15" fill="rgb(249,89,12)"/><text x="65.3476%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="65.0976%" y="565" width="0.1148%" height="15" fill="rgb(226,27,33)"/><text x="65.3476%" y="575.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="65.0976%" y="549" width="0.1148%" height="15" fill="rgb(213,82,22)"/><text x="65.3476%" y="559.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="65.0976%" y="533" width="0.1148%" height="15" fill="rgb(248,140,0)"/><text x="65.3476%" y="543.50"></text></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.11%)</title><rect x="65.2124%" y="725" width="0.1148%" height="15" fill="rgb(228,106,3)"/><text x="65.4624%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="65.2124%" y="709" width="0.1148%" height="15" fill="rgb(209,23,37)"/><text x="65.4624%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.23%)</title><rect x="65.3272%" y="597" width="0.2296%" height="15" fill="rgb(241,93,50)"/><text x="65.5772%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="65.3272%" y="581" width="0.2296%" height="15" fill="rgb(253,46,43)"/><text x="65.5772%" y="591.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (1 samples, 0.11%)</title><rect x="65.5568%" y="597" width="0.1148%" height="15" fill="rgb(226,206,43)"/><text x="65.8068%" y="607.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (1 samples, 0.11%)</title><rect x="65.5568%" y="581" width="0.1148%" height="15" fill="rgb(217,54,7)"/><text x="65.8068%" y="591.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.11%)</title><rect x="65.5568%" y="565" width="0.1148%" height="15" fill="rgb(223,5,52)"/><text x="65.8068%" y="575.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.11%)</title><rect x="65.5568%" y="549" width="0.1148%" height="15" fill="rgb(206,52,46)"/><text x="65.8068%" y="559.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="65.5568%" y="533" width="0.1148%" height="15" fill="rgb(253,136,11)"/><text x="65.8068%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="65.5568%" y="517" width="0.1148%" height="15" fill="rgb(208,106,33)"/><text x="65.8068%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="65.6716%" y="581" width="0.1148%" height="15" fill="rgb(206,54,4)"/><text x="65.9216%" y="591.50"></text></g><g><title>decor_mem::stats::get_qtype (2 samples, 0.23%)</title><rect x="65.6716%" y="597" width="0.2296%" height="15" fill="rgb(213,3,15)"/><text x="65.9216%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="65.7865%" y="581" width="0.1148%" height="15" fill="rgb(252,211,39)"/><text x="66.0365%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="65.7865%" y="565" width="0.1148%" height="15" fill="rgb(223,6,36)"/><text x="66.0365%" y="575.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (6 samples, 0.69%)</title><rect x="65.3272%" y="613" width="0.6889%" height="15" fill="rgb(252,169,45)"/><text x="65.5772%" y="623.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.11%)</title><rect x="65.9013%" y="597" width="0.1148%" height="15" fill="rgb(212,48,26)"/><text x="66.1513%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.11%)</title><rect x="65.9013%" y="581" width="0.1148%" height="15" fill="rgb(251,102,48)"/><text x="66.1513%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.11%)</title><rect x="65.9013%" y="565" width="0.1148%" height="15" fill="rgb(243,208,16)"/><text x="66.1513%" y="575.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.11%)</title><rect x="65.9013%" y="549" width="0.1148%" height="15" fill="rgb(219,96,24)"/><text x="66.1513%" y="559.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.11%)</title><rect x="65.9013%" y="533" width="0.1148%" height="15" fill="rgb(219,33,29)"/><text x="66.1513%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="66.0161%" y="581" width="0.1148%" height="15" fill="rgb(223,176,5)"/><text x="66.2661%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="66.0161%" y="565" width="0.1148%" height="15" fill="rgb(228,140,14)"/><text x="66.2661%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="66.0161%" y="549" width="0.1148%" height="15" fill="rgb(217,179,31)"/><text x="66.2661%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="66.1309%" y="517" width="0.1148%" height="15" fill="rgb(230,9,30)"/><text x="66.3809%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="66.1309%" y="501" width="0.1148%" height="15" fill="rgb(230,136,20)"/><text x="66.3809%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="66.1309%" y="485" width="0.1148%" height="15" fill="rgb(215,210,22)"/><text x="66.3809%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.23%)</title><rect x="66.1309%" y="581" width="0.2296%" height="15" fill="rgb(218,43,5)"/><text x="66.3809%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="66.1309%" y="565" width="0.2296%" height="15" fill="rgb(216,11,5)"/><text x="66.3809%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="66.1309%" y="549" width="0.2296%" height="15" fill="rgb(209,82,29)"/><text x="66.3809%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="66.1309%" y="533" width="0.2296%" height="15" fill="rgb(244,115,12)"/><text x="66.3809%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="66.2457%" y="517" width="0.1148%" height="15" fill="rgb(222,82,18)"/><text x="66.4957%" y="527.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="66.2457%" y="501" width="0.1148%" height="15" fill="rgb(249,227,8)"/><text x="66.4957%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.57%)</title><rect x="66.0161%" y="613" width="0.5741%" height="15" fill="rgb(253,141,45)"/><text x="66.2661%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.57%)</title><rect x="66.0161%" y="597" width="0.5741%" height="15" fill="rgb(234,184,4)"/><text x="66.2661%" y="607.50"></text></g><g><title>decor_mem::stats::print_stats (2 samples, 0.23%)</title><rect x="66.3605%" y="581" width="0.2296%" height="15" fill="rgb(218,194,23)"/><text x="66.6105%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.23%)</title><rect x="66.3605%" y="565" width="0.2296%" height="15" fill="rgb(235,66,41)"/><text x="66.6105%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.23%)</title><rect x="66.3605%" y="549" width="0.2296%" height="15" fill="rgb(245,217,1)"/><text x="66.6105%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.23%)</title><rect x="66.3605%" y="533" width="0.2296%" height="15" fill="rgb(229,91,1)"/><text x="66.6105%" y="543.50"></text></g><g><title>__libc_write (2 samples, 0.23%)</title><rect x="66.3605%" y="517" width="0.2296%" height="15" fill="rgb(207,101,30)"/><text x="66.6105%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="66.3605%" y="501" width="0.2296%" height="15" fill="rgb(223,82,49)"/><text x="66.6105%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="66.4753%" y="485" width="0.1148%" height="15" fill="rgb(218,167,17)"/><text x="66.7253%" y="495.50"></text></g><g><title>ksys_write (1 samples, 0.11%)</title><rect x="66.4753%" y="469" width="0.1148%" height="15" fill="rgb(208,103,14)"/><text x="66.7253%" y="479.50"></text></g><g><title>vfs_write (1 samples, 0.11%)</title><rect x="66.4753%" y="453" width="0.1148%" height="15" fill="rgb(238,20,8)"/><text x="66.7253%" y="463.50"></text></g><g><title>new_sync_write (1 samples, 0.11%)</title><rect x="66.4753%" y="437" width="0.1148%" height="15" fill="rgb(218,80,54)"/><text x="66.7253%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="66.4753%" y="421" width="0.1148%" height="15" fill="rgb(240,144,17)"/><text x="66.7253%" y="431.50"></text></g><g><title>generic_perform_write (1 samples, 0.11%)</title><rect x="66.4753%" y="405" width="0.1148%" height="15" fill="rgb(245,27,50)"/><text x="66.7253%" y="415.50"></text></g><g><title>[[ext4]] (1 samples, 0.11%)</title><rect x="66.4753%" y="389" width="0.1148%" height="15" fill="rgb(251,51,7)"/><text x="66.7253%" y="399.50"></text></g><g><title>grab_cache_page_write_begin (1 samples, 0.11%)</title><rect x="66.4753%" y="373" width="0.1148%" height="15" fill="rgb(245,217,29)"/><text x="66.7253%" y="383.50"></text></g><g><title>pagecache_get_page (1 samples, 0.11%)</title><rect x="66.4753%" y="357" width="0.1148%" height="15" fill="rgb(221,176,29)"/><text x="66.7253%" y="367.50"></text></g><g><title>__sk_dst_check (1 samples, 0.11%)</title><rect x="66.5901%" y="373" width="0.1148%" height="15" fill="rgb(212,180,24)"/><text x="66.8401%" y="383.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.34%)</title><rect x="66.5901%" y="405" width="0.3444%" height="15" fill="rgb(254,24,2)"/><text x="66.8401%" y="415.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.34%)</title><rect x="66.5901%" y="389" width="0.3444%" height="15" fill="rgb(230,100,2)"/><text x="66.8401%" y="399.50"></text></g><g><title>ip_output (2 samples, 0.23%)</title><rect x="66.7049%" y="373" width="0.2296%" height="15" fill="rgb(219,142,25)"/><text x="66.9549%" y="383.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.23%)</title><rect x="66.7049%" y="357" width="0.2296%" height="15" fill="rgb(240,73,43)"/><text x="66.9549%" y="367.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="66.8197%" y="341" width="0.1148%" height="15" fill="rgb(214,114,15)"/><text x="67.0697%" y="351.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="66.8197%" y="325" width="0.1148%" height="15" fill="rgb(207,130,4)"/><text x="67.0697%" y="335.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="66.8197%" y="309" width="0.1148%" height="15" fill="rgb(221,25,40)"/><text x="67.0697%" y="319.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="66.8197%" y="293" width="0.1148%" height="15" fill="rgb(241,184,7)"/><text x="67.0697%" y="303.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="66.8197%" y="277" width="0.1148%" height="15" fill="rgb(235,159,4)"/><text x="67.0697%" y="287.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="66.8197%" y="261" width="0.1148%" height="15" fill="rgb(214,87,48)"/><text x="67.0697%" y="271.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.11%)</title><rect x="67.0494%" y="325" width="0.1148%" height="15" fill="rgb(246,198,24)"/><text x="67.2994%" y="335.50"></text></g><g><title>ctx_sched_out (1 samples, 0.11%)</title><rect x="67.0494%" y="309" width="0.1148%" height="15" fill="rgb(209,66,40)"/><text x="67.2994%" y="319.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="67.0494%" y="293" width="0.1148%" height="15" fill="rgb(233,147,39)"/><text x="67.2994%" y="303.50"></text></g><g><title>inet_recvmsg (6 samples, 0.69%)</title><rect x="66.5901%" y="437" width="0.6889%" height="15" fill="rgb(231,145,52)"/><text x="66.8401%" y="447.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.69%)</title><rect x="66.5901%" y="421" width="0.6889%" height="15" fill="rgb(206,20,26)"/><text x="66.8401%" y="431.50"></text></g><g><title>sk_wait_data (3 samples, 0.34%)</title><rect x="66.9346%" y="405" width="0.3444%" height="15" fill="rgb(238,220,4)"/><text x="67.1846%" y="415.50"></text></g><g><title>wait_woken (3 samples, 0.34%)</title><rect x="66.9346%" y="389" width="0.3444%" height="15" fill="rgb(252,195,42)"/><text x="67.1846%" y="399.50"></text></g><g><title>schedule_timeout (3 samples, 0.34%)</title><rect x="66.9346%" y="373" width="0.3444%" height="15" fill="rgb(209,10,6)"/><text x="67.1846%" y="383.50"></text></g><g><title>schedule (3 samples, 0.34%)</title><rect x="66.9346%" y="357" width="0.3444%" height="15" fill="rgb(229,3,52)"/><text x="67.1846%" y="367.50"></text></g><g><title>__schedule (3 samples, 0.34%)</title><rect x="66.9346%" y="341" width="0.3444%" height="15" fill="rgb(253,49,37)"/><text x="67.1846%" y="351.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.11%)</title><rect x="67.1642%" y="325" width="0.1148%" height="15" fill="rgb(240,103,49)"/><text x="67.4142%" y="335.50"></text></g><g><title>dequeue_entity (1 samples, 0.11%)</title><rect x="67.1642%" y="309" width="0.1148%" height="15" fill="rgb(250,182,30)"/><text x="67.4142%" y="319.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="67.1642%" y="293" width="0.1148%" height="15" fill="rgb(248,8,30)"/><text x="67.4142%" y="303.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.80%)</title><rect x="66.5901%" y="469" width="0.8037%" height="15" fill="rgb(237,120,30)"/><text x="66.8401%" y="479.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.80%)</title><rect x="66.5901%" y="453" width="0.8037%" height="15" fill="rgb(221,146,34)"/><text x="66.8401%" y="463.50"></text></g><g><title>sock_recvmsg (1 samples, 0.11%)</title><rect x="67.2790%" y="437" width="0.1148%" height="15" fill="rgb(242,55,13)"/><text x="67.5290%" y="447.50"></text></g><g><title>do_syscall_64 (8 samples, 0.92%)</title><rect x="66.5901%" y="485" width="0.9185%" height="15" fill="rgb(242,112,31)"/><text x="66.8401%" y="495.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="67.3938%" y="469" width="0.1148%" height="15" fill="rgb(249,192,27)"/><text x="67.6438%" y="479.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="67.3938%" y="453" width="0.1148%" height="15" fill="rgb(208,204,44)"/><text x="67.6438%" y="463.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (9 samples, 1.03%)</title><rect x="66.5901%" y="613" width="1.0333%" height="15" fill="rgb(208,93,54)"/><text x="66.8401%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 1.03%)</title><rect x="66.5901%" y="597" width="1.0333%" height="15" fill="rgb(242,1,31)"/><text x="66.8401%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 1.03%)</title><rect x="66.5901%" y="581" width="1.0333%" height="15" fill="rgb(241,83,25)"/><text x="66.8401%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 1.03%)</title><rect x="66.5901%" y="565" width="1.0333%" height="15" fill="rgb(205,169,50)"/><text x="66.8401%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 1.03%)</title><rect x="66.5901%" y="549" width="1.0333%" height="15" fill="rgb(239,186,37)"/><text x="66.8401%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 1.03%)</title><rect x="66.5901%" y="533" width="1.0333%" height="15" fill="rgb(205,221,10)"/><text x="66.8401%" y="543.50"></text></g><g><title>__libc_recv (9 samples, 1.03%)</title><rect x="66.5901%" y="517" width="1.0333%" height="15" fill="rgb(218,196,15)"/><text x="66.8401%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 1.03%)</title><rect x="66.5901%" y="501" width="1.0333%" height="15" fill="rgb(218,196,35)"/><text x="66.8401%" y="511.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="67.5086%" y="485" width="0.1148%" height="15" fill="rgb(233,63,24)"/><text x="67.7586%" y="495.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="67.6234%" y="453" width="0.1148%" height="15" fill="rgb(225,8,4)"/><text x="67.8734%" y="463.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="67.6234%" y="437" width="0.1148%" height="15" fill="rgb(234,105,35)"/><text x="67.8734%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="67.6234%" y="421" width="0.1148%" height="15" fill="rgb(236,21,32)"/><text x="67.8734%" y="431.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="68.0827%" y="341" width="0.1148%" height="15" fill="rgb(228,109,6)"/><text x="68.3327%" y="351.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="68.0827%" y="325" width="0.1148%" height="15" fill="rgb(229,215,31)"/><text x="68.3327%" y="335.50"></text></g><g><title>loopback_xmit (1 samples, 0.11%)</title><rect x="68.0827%" y="309" width="0.1148%" height="15" fill="rgb(221,52,54)"/><text x="68.3327%" y="319.50"></text></g><g><title>netif_rx (1 samples, 0.11%)</title><rect x="68.0827%" y="293" width="0.1148%" height="15" fill="rgb(252,129,43)"/><text x="68.3327%" y="303.50"></text></g><g><title>netif_rx_internal (1 samples, 0.11%)</title><rect x="68.0827%" y="277" width="0.1148%" height="15" fill="rgb(248,183,27)"/><text x="68.3327%" y="287.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="68.0827%" y="261" width="0.1148%" height="15" fill="rgb(250,0,22)"/><text x="68.3327%" y="271.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="68.0827%" y="245" width="0.1148%" height="15" fill="rgb(213,166,10)"/><text x="68.3327%" y="255.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="68.0827%" y="229" width="0.1148%" height="15" fill="rgb(207,163,36)"/><text x="68.3327%" y="239.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="68.1975%" y="229" width="0.1148%" height="15" fill="rgb(208,122,22)"/><text x="68.4475%" y="239.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="68.3123%" y="85" width="0.1148%" height="15" fill="rgb(207,104,49)"/><text x="68.5623%" y="95.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="68.3123%" y="69" width="0.1148%" height="15" fill="rgb(248,211,50)"/><text x="68.5623%" y="79.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="68.3123%" y="53" width="0.1148%" height="15" fill="rgb(217,13,45)"/><text x="68.5623%" y="63.50"></text></g><g><title>sock_def_readable (2 samples, 0.23%)</title><rect x="68.3123%" y="117" width="0.2296%" height="15" fill="rgb(211,216,49)"/><text x="68.5623%" y="127.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.23%)</title><rect x="68.3123%" y="101" width="0.2296%" height="15" fill="rgb(221,58,53)"/><text x="68.5623%" y="111.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="68.4271%" y="85" width="0.1148%" height="15" fill="rgb(220,112,41)"/><text x="68.6771%" y="95.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="68.5419%" y="117" width="0.1148%" height="15" fill="rgb(236,38,28)"/><text x="68.7919%" y="127.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.11%)</title><rect x="68.5419%" y="101" width="0.1148%" height="15" fill="rgb(227,195,22)"/><text x="68.7919%" y="111.50"></text></g><g><title>jiffies_to_usecs (1 samples, 0.11%)</title><rect x="68.5419%" y="85" width="0.1148%" height="15" fill="rgb(214,55,33)"/><text x="68.7919%" y="95.50"></text></g><g><title>__tcp_push_pending_frames (7 samples, 0.80%)</title><rect x="67.9679%" y="437" width="0.8037%" height="15" fill="rgb(248,80,13)"/><text x="68.2179%" y="447.50"></text></g><g><title>tcp_write_xmit (7 samples, 0.80%)</title><rect x="67.9679%" y="421" width="0.8037%" height="15" fill="rgb(238,52,6)"/><text x="68.2179%" y="431.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.69%)</title><rect x="68.0827%" y="405" width="0.6889%" height="15" fill="rgb(224,198,47)"/><text x="68.3327%" y="415.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.69%)</title><rect x="68.0827%" y="389" width="0.6889%" height="15" fill="rgb(233,171,20)"/><text x="68.3327%" y="399.50"></text></g><g><title>ip_output (6 samples, 0.69%)</title><rect x="68.0827%" y="373" width="0.6889%" height="15" fill="rgb(241,30,25)"/><text x="68.3327%" y="383.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.69%)</title><rect x="68.0827%" y="357" width="0.6889%" height="15" fill="rgb(207,171,38)"/><text x="68.3327%" y="367.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.57%)</title><rect x="68.1975%" y="341" width="0.5741%" height="15" fill="rgb(234,70,1)"/><text x="68.4475%" y="351.50"></text></g><g><title>do_softirq (5 samples, 0.57%)</title><rect x="68.1975%" y="325" width="0.5741%" height="15" fill="rgb(232,178,18)"/><text x="68.4475%" y="335.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.57%)</title><rect x="68.1975%" y="309" width="0.5741%" height="15" fill="rgb(241,78,40)"/><text x="68.4475%" y="319.50"></text></g><g><title>__do_softirq (5 samples, 0.57%)</title><rect x="68.1975%" y="293" width="0.5741%" height="15" fill="rgb(222,35,25)"/><text x="68.4475%" y="303.50"></text></g><g><title>net_rx_action (5 samples, 0.57%)</title><rect x="68.1975%" y="277" width="0.5741%" height="15" fill="rgb(207,92,16)"/><text x="68.4475%" y="287.50"></text></g><g><title>process_backlog (5 samples, 0.57%)</title><rect x="68.1975%" y="261" width="0.5741%" height="15" fill="rgb(216,59,51)"/><text x="68.4475%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.57%)</title><rect x="68.1975%" y="245" width="0.5741%" height="15" fill="rgb(213,80,28)"/><text x="68.4475%" y="255.50"></text></g><g><title>ip_rcv (4 samples, 0.46%)</title><rect x="68.3123%" y="229" width="0.4592%" height="15" fill="rgb(220,93,7)"/><text x="68.5623%" y="239.50"></text></g><g><title>ip_local_deliver (4 samples, 0.46%)</title><rect x="68.3123%" y="213" width="0.4592%" height="15" fill="rgb(225,24,44)"/><text x="68.5623%" y="223.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.46%)</title><rect x="68.3123%" y="197" width="0.4592%" height="15" fill="rgb(243,74,40)"/><text x="68.5623%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.46%)</title><rect x="68.3123%" y="181" width="0.4592%" height="15" fill="rgb(228,39,7)"/><text x="68.5623%" y="191.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.46%)</title><rect x="68.3123%" y="165" width="0.4592%" height="15" fill="rgb(227,79,8)"/><text x="68.5623%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.46%)</title><rect x="68.3123%" y="149" width="0.4592%" height="15" fill="rgb(236,58,11)"/><text x="68.5623%" y="159.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.46%)</title><rect x="68.3123%" y="133" width="0.4592%" height="15" fill="rgb(249,63,35)"/><text x="68.5623%" y="143.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.11%)</title><rect x="68.6567%" y="117" width="0.1148%" height="15" fill="rgb(252,114,16)"/><text x="68.9067%" y="127.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="68.7715%" y="437" width="0.1148%" height="15" fill="rgb(254,151,24)"/><text x="69.0215%" y="447.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="68.7715%" y="421" width="0.1148%" height="15" fill="rgb(253,54,39)"/><text x="69.0215%" y="431.50"></text></g><g><title>__ksize (1 samples, 0.11%)</title><rect x="68.7715%" y="405" width="0.1148%" height="15" fill="rgb(243,25,45)"/><text x="69.0215%" y="415.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (33 samples, 3.79%)</title><rect x="65.3272%" y="629" width="3.7887%" height="15" fill="rgb(234,134,9)"/><text x="65.5772%" y="639.50">msql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 1.49%)</title><rect x="67.6234%" y="613" width="1.4925%" height="15" fill="rgb(227,166,31)"/><text x="67.8734%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (13 samples, 1.49%)</title><rect x="67.6234%" y="597" width="1.4925%" height="15" fill="rgb(245,143,41)"/><text x="67.8734%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (13 samples, 1.49%)</title><rect x="67.6234%" y="581" width="1.4925%" height="15" fill="rgb(238,181,32)"/><text x="67.8734%" y="591.50"></text></g><g><title>__libc_send (13 samples, 1.49%)</title><rect x="67.6234%" y="565" width="1.4925%" height="15" fill="rgb(224,113,18)"/><text x="67.8734%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.49%)</title><rect x="67.6234%" y="549" width="1.4925%" height="15" fill="rgb(240,229,28)"/><text x="67.8734%" y="559.50"></text></g><g><title>do_syscall_64 (13 samples, 1.49%)</title><rect x="67.6234%" y="533" width="1.4925%" height="15" fill="rgb(250,185,3)"/><text x="67.8734%" y="543.50"></text></g><g><title>__x64_sys_sendto (13 samples, 1.49%)</title><rect x="67.6234%" y="517" width="1.4925%" height="15" fill="rgb(212,59,25)"/><text x="67.8734%" y="527.50"></text></g><g><title>__sys_sendto (13 samples, 1.49%)</title><rect x="67.6234%" y="501" width="1.4925%" height="15" fill="rgb(221,87,20)"/><text x="67.8734%" y="511.50"></text></g><g><title>sock_sendmsg (13 samples, 1.49%)</title><rect x="67.6234%" y="485" width="1.4925%" height="15" fill="rgb(213,74,28)"/><text x="67.8734%" y="495.50"></text></g><g><title>tcp_sendmsg (13 samples, 1.49%)</title><rect x="67.6234%" y="469" width="1.4925%" height="15" fill="rgb(224,132,34)"/><text x="67.8734%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 1.38%)</title><rect x="67.7382%" y="453" width="1.3777%" height="15" fill="rgb(222,101,24)"/><text x="67.9882%" y="463.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.23%)</title><rect x="68.8863%" y="437" width="0.2296%" height="15" fill="rgb(254,142,4)"/><text x="69.1363%" y="447.50"></text></g><g><title>__check_object_size (2 samples, 0.23%)</title><rect x="68.8863%" y="421" width="0.2296%" height="15" fill="rgb(230,229,49)"/><text x="69.1363%" y="431.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.23%)</title><rect x="68.8863%" y="405" width="0.2296%" height="15" fill="rgb(238,70,47)"/><text x="69.1363%" y="415.50"></text></g><g><title>__GI___clone (35 samples, 4.02%)</title><rect x="65.2124%" y="757" width="4.0184%" height="15" fill="rgb(231,160,17)"/><text x="65.4624%" y="767.50">__GI..</text></g><g><title>start_thread (35 samples, 4.02%)</title><rect x="65.2124%" y="741" width="4.0184%" height="15" fill="rgb(218,68,53)"/><text x="65.4624%" y="751.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (34 samples, 3.90%)</title><rect x="65.3272%" y="725" width="3.9036%" height="15" fill="rgb(236,111,10)"/><text x="65.5772%" y="735.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (34 samples, 3.90%)</title><rect x="65.3272%" y="709" width="3.9036%" height="15" fill="rgb(224,34,41)"/><text x="65.5772%" y="719.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (34 samples, 3.90%)</title><rect x="65.3272%" y="693" width="3.9036%" height="15" fill="rgb(241,118,19)"/><text x="65.5772%" y="703.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (34 samples, 3.90%)</title><rect x="65.3272%" y="677" width="3.9036%" height="15" fill="rgb(238,129,25)"/><text x="65.5772%" y="687.50">core..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 3.90%)</title><rect x="65.3272%" y="661" width="3.9036%" height="15" fill="rgb(238,22,31)"/><text x="65.5772%" y="671.50">std:..</text></g><g><title>decor_mem::Shim::run_on_tcp (34 samples, 3.90%)</title><rect x="65.3272%" y="645" width="3.9036%" height="15" fill="rgb(222,174,48)"/><text x="65.5772%" y="655.50">deco..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.11%)</title><rect x="69.1160%" y="629" width="0.1148%" height="15" fill="rgb(206,152,40)"/><text x="69.3660%" y="639.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.11%)</title><rect x="69.1160%" y="613" width="0.1148%" height="15" fill="rgb(218,99,54)"/><text x="69.3660%" y="623.50"></text></g><g><title>url::ParseOptions::parse (1 samples, 0.11%)</title><rect x="69.1160%" y="597" width="0.1148%" height="15" fill="rgb(220,174,26)"/><text x="69.3660%" y="607.50"></text></g><g><title>url::parser::Parser::parse_url (1 samples, 0.11%)</title><rect x="69.1160%" y="581" width="0.1148%" height="15" fill="rgb(245,116,9)"/><text x="69.3660%" y="591.50"></text></g><g><title>url::parser::Parser::after_double_slash (1 samples, 0.11%)</title><rect x="69.1160%" y="565" width="0.1148%" height="15" fill="rgb(209,72,35)"/><text x="69.3660%" y="575.50"></text></g><g><title>url::parser::Parser::parse_host (1 samples, 0.11%)</title><rect x="69.1160%" y="549" width="0.1148%" height="15" fill="rgb(226,126,21)"/><text x="69.3660%" y="559.50"></text></g><g><title>_edata (1 samples, 0.11%)</title><rect x="69.2308%" y="757" width="0.1148%" height="15" fill="rgb(227,192,1)"/><text x="69.4808%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="69.2308%" y="741" width="0.1148%" height="15" fill="rgb(237,180,29)"/><text x="69.4808%" y="751.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="69.3456%" y="757" width="0.2296%" height="15" fill="rgb(230,197,35)"/><text x="69.5956%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="69.5752%" y="501" width="0.1148%" height="15" fill="rgb(246,193,31)"/><text x="69.8252%" y="511.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="69.5752%" y="485" width="0.1148%" height="15" fill="rgb(241,36,4)"/><text x="69.8252%" y="495.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="69.5752%" y="469" width="0.1148%" height="15" fill="rgb(241,130,17)"/><text x="69.8252%" y="479.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="69.5752%" y="453" width="0.1148%" height="15" fill="rgb(206,137,32)"/><text x="69.8252%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="69.5752%" y="437" width="0.1148%" height="15" fill="rgb(237,228,51)"/><text x="69.8252%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="69.5752%" y="421" width="0.1148%" height="15" fill="rgb(243,6,42)"/><text x="69.8252%" y="431.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="69.6900%" y="485" width="0.1148%" height="15" fill="rgb(251,74,28)"/><text x="69.9400%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="69.8048%" y="485" width="0.1148%" height="15" fill="rgb(218,20,49)"/><text x="70.0548%" y="495.50"></text></g><g><title>get_user_cpu_mask (1 samples, 0.11%)</title><rect x="70.1493%" y="421" width="0.1148%" height="15" fill="rgb(238,28,14)"/><text x="70.3993%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 26.52%)</title><rect x="70.3789%" y="277" width="26.5212%" height="15" fill="rgb(229,40,46)"/><text x="70.6289%" y="287.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 26.41%)</title><rect x="70.4937%" y="261" width="26.4064%" height="15" fill="rgb(244,195,20)"/><text x="70.7437%" y="271.50">native_write_msr</text></g><g><title>__perf_event_task_sched_in (233 samples, 26.75%)</title><rect x="70.3789%" y="293" width="26.7509%" height="15" fill="rgb(253,56,35)"/><text x="70.6289%" y="303.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (2 samples, 0.23%)</title><rect x="96.9001%" y="277" width="0.2296%" height="15" fill="rgb(210,149,44)"/><text x="97.1501%" y="287.50"></text></g><g><title>do_syscall_64 (237 samples, 27.21%)</title><rect x="70.0344%" y="453" width="27.2101%" height="15" fill="rgb(240,135,12)"/><text x="70.2844%" y="463.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (237 samples, 27.21%)</title><rect x="70.0344%" y="437" width="27.2101%" height="15" fill="rgb(251,24,50)"/><text x="70.2844%" y="447.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 26.98%)</title><rect x="70.2641%" y="421" width="26.9805%" height="15" fill="rgb(243,200,47)"/><text x="70.5141%" y="431.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 26.98%)</title><rect x="70.2641%" y="405" width="26.9805%" height="15" fill="rgb(224,166,26)"/><text x="70.5141%" y="415.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 26.98%)</title><rect x="70.2641%" y="389" width="26.9805%" height="15" fill="rgb(233,0,47)"/><text x="70.5141%" y="399.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 26.98%)</title><rect x="70.2641%" y="373" width="26.9805%" height="15" fill="rgb(253,80,5)"/><text x="70.5141%" y="383.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 26.98%)</title><rect x="70.2641%" y="357" width="26.9805%" height="15" fill="rgb(214,133,25)"/><text x="70.5141%" y="367.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 26.98%)</title><rect x="70.2641%" y="341" width="26.9805%" height="15" fill="rgb(209,27,14)"/><text x="70.5141%" y="351.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 26.98%)</title><rect x="70.2641%" y="325" width="26.9805%" height="15" fill="rgb(219,102,51)"/><text x="70.5141%" y="335.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 26.98%)</title><rect x="70.2641%" y="309" width="26.9805%" height="15" fill="rgb(237,18,16)"/><text x="70.5141%" y="319.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.11%)</title><rect x="97.1297%" y="293" width="0.1148%" height="15" fill="rgb(241,85,17)"/><text x="97.3797%" y="303.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="97.1297%" y="277" width="0.1148%" height="15" fill="rgb(236,90,42)"/><text x="97.3797%" y="287.50"></text></g><g><title>entry_SYSCALL_64 (240 samples, 27.55%)</title><rect x="70.0344%" y="469" width="27.5545%" height="15" fill="rgb(249,57,21)"/><text x="70.2844%" y="479.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.34%)</title><rect x="97.2445%" y="453" width="0.3444%" height="15" fill="rgb(243,12,36)"/><text x="97.4945%" y="463.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="97.4742%" y="437" width="0.1148%" height="15" fill="rgb(253,128,47)"/><text x="97.7242%" y="447.50"></text></g><g><title>hwloc::Topology::new (246 samples, 28.24%)</title><rect x="69.5752%" y="581" width="28.2434%" height="15" fill="rgb(207,33,20)"/><text x="69.8252%" y="591.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (246 samples, 28.24%)</title><rect x="69.5752%" y="565" width="28.2434%" height="15" fill="rgb(233,215,35)"/><text x="69.8252%" y="575.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 28.24%)</title><rect x="69.5752%" y="549" width="28.2434%" height="15" fill="rgb(249,188,52)"/><text x="69.8252%" y="559.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 28.24%)</title><rect x="69.5752%" y="533" width="28.2434%" height="15" fill="rgb(225,12,32)"/><text x="69.8252%" y="543.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 28.24%)</title><rect x="69.5752%" y="517" width="28.2434%" height="15" fill="rgb(247,98,14)"/><text x="69.8252%" y="527.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (245 samples, 28.13%)</title><rect x="69.6900%" y="501" width="28.1286%" height="15" fill="rgb(247,219,48)"/><text x="69.9400%" y="511.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (243 samples, 27.90%)</title><rect x="69.9196%" y="485" width="27.8990%" height="15" fill="rgb(253,60,48)"/><text x="70.1696%" y="495.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (2 samples, 0.23%)</title><rect x="97.5890%" y="469" width="0.2296%" height="15" fill="rgb(245,15,52)"/><text x="97.8390%" y="479.50"></text></g><g><title>__libc_start_main (247 samples, 28.36%)</title><rect x="69.5752%" y="741" width="28.3582%" height="15" fill="rgb(220,133,28)"/><text x="69.8252%" y="751.50">__libc_start_main</text></g><g><title>main (247 samples, 28.36%)</title><rect x="69.5752%" y="725" width="28.3582%" height="15" fill="rgb(217,180,4)"/><text x="69.8252%" y="735.50">main</text></g><g><title>std::rt::lang_start_internal (247 samples, 28.36%)</title><rect x="69.5752%" y="709" width="28.3582%" height="15" fill="rgb(251,24,1)"/><text x="69.8252%" y="719.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (247 samples, 28.36%)</title><rect x="69.5752%" y="693" width="28.3582%" height="15" fill="rgb(212,185,49)"/><text x="69.8252%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (247 samples, 28.36%)</title><rect x="69.5752%" y="677" width="28.3582%" height="15" fill="rgb(215,175,22)"/><text x="69.8252%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (247 samples, 28.36%)</title><rect x="69.5752%" y="661" width="28.3582%" height="15" fill="rgb(250,205,14)"/><text x="69.8252%" y="671.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (247 samples, 28.36%)</title><rect x="69.5752%" y="645" width="28.3582%" height="15" fill="rgb(225,211,22)"/><text x="69.8252%" y="655.50">core::ops::function::impls::&lt;impl core::ops::f..</text></g><g><title>std::rt::lang_start::_{{closure}} (247 samples, 28.36%)</title><rect x="69.5752%" y="629" width="28.3582%" height="15" fill="rgb(251,179,42)"/><text x="69.8252%" y="639.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (247 samples, 28.36%)</title><rect x="69.5752%" y="613" width="28.3582%" height="15" fill="rgb(208,216,51)"/><text x="69.8252%" y="623.50">std::sys_common::backtrace::__rust_begin_short..</text></g><g><title>lobsters_microbenchmarks::main (247 samples, 28.36%)</title><rect x="69.5752%" y="597" width="28.3582%" height="15" fill="rgb(235,36,11)"/><text x="69.8252%" y="607.50">lobsters_microbenchmarks::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="97.8186%" y="581" width="0.1148%" height="15" fill="rgb(213,189,28)"/><text x="98.0686%" y="591.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="97.8186%" y="565" width="0.1148%" height="15" fill="rgb(227,203,42)"/><text x="98.0686%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.11%)</title><rect x="97.8186%" y="549" width="0.1148%" height="15" fill="rgb(244,72,36)"/><text x="98.0686%" y="559.50"></text></g><g><title>__GI___socket (1 samples, 0.11%)</title><rect x="97.8186%" y="533" width="0.1148%" height="15" fill="rgb(213,53,17)"/><text x="98.0686%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="97.8186%" y="517" width="0.1148%" height="15" fill="rgb(207,167,3)"/><text x="98.0686%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="97.8186%" y="501" width="0.1148%" height="15" fill="rgb(216,98,30)"/><text x="98.0686%" y="511.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.11%)</title><rect x="97.8186%" y="485" width="0.1148%" height="15" fill="rgb(236,123,15)"/><text x="98.0686%" y="495.50"></text></g><g><title>__sys_socket (1 samples, 0.11%)</title><rect x="97.8186%" y="469" width="0.1148%" height="15" fill="rgb(248,81,50)"/><text x="98.0686%" y="479.50"></text></g><g><title>__sock_create (1 samples, 0.11%)</title><rect x="97.8186%" y="453" width="0.1148%" height="15" fill="rgb(214,120,4)"/><text x="98.0686%" y="463.50"></text></g><g><title>inet_create (1 samples, 0.11%)</title><rect x="97.8186%" y="437" width="0.1148%" height="15" fill="rgb(208,179,34)"/><text x="98.0686%" y="447.50"></text></g><g><title>sk_alloc (1 samples, 0.11%)</title><rect x="97.8186%" y="421" width="0.1148%" height="15" fill="rgb(227,140,7)"/><text x="98.0686%" y="431.50"></text></g><g><title>sk_prot_alloc (1 samples, 0.11%)</title><rect x="97.8186%" y="405" width="0.1148%" height="15" fill="rgb(214,22,6)"/><text x="98.0686%" y="415.50"></text></g><g><title>_start (248 samples, 28.47%)</title><rect x="69.5752%" y="757" width="28.4730%" height="15" fill="rgb(207,137,27)"/><text x="69.8252%" y="767.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="97.9334%" y="741" width="0.1148%" height="15" fill="rgb(210,8,46)"/><text x="98.1834%" y="751.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="97.9334%" y="725" width="0.1148%" height="15" fill="rgb(240,16,54)"/><text x="98.1834%" y="735.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="97.9334%" y="709" width="0.1148%" height="15" fill="rgb(211,209,29)"/><text x="98.1834%" y="719.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="97.9334%" y="693" width="0.1148%" height="15" fill="rgb(226,228,24)"/><text x="98.1834%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="97.9334%" y="677" width="0.1148%" height="15" fill="rgb(222,84,9)"/><text x="98.1834%" y="687.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="97.9334%" y="661" width="0.1148%" height="15" fill="rgb(234,203,30)"/><text x="98.1834%" y="671.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="97.9334%" y="645" width="0.1148%" height="15" fill="rgb(238,109,14)"/><text x="98.1834%" y="655.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="97.9334%" y="629" width="0.1148%" height="15" fill="rgb(233,206,34)"/><text x="98.1834%" y="639.50"></text></g><g><title>_dl_setup_hash (1 samples, 0.11%)</title><rect x="97.9334%" y="613" width="0.1148%" height="15" fill="rgb(220,167,47)"/><text x="98.1834%" y="623.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="97.9334%" y="597" width="0.1148%" height="15" fill="rgb(238,105,10)"/><text x="98.1834%" y="607.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="97.9334%" y="581" width="0.1148%" height="15" fill="rgb(213,227,17)"/><text x="98.1834%" y="591.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="97.9334%" y="565" width="0.1148%" height="15" fill="rgb(217,132,38)"/><text x="98.1834%" y="575.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="97.9334%" y="549" width="0.1148%" height="15" fill="rgb(242,146,4)"/><text x="98.1834%" y="559.50"></text></g><g><title>filemap_map_pages (1 samples, 0.11%)</title><rect x="97.9334%" y="533" width="0.1148%" height="15" fill="rgb(212,61,9)"/><text x="98.1834%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="98.0482%" y="757" width="0.1148%" height="15" fill="rgb(247,126,22)"/><text x="98.2982%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::retain (1 samples, 0.11%)</title><rect x="98.1630%" y="757" width="0.1148%" height="15" fill="rgb(220,196,2)"/><text x="98.4130%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="98.2778%" y="741" width="0.1148%" height="15" fill="rgb(208,46,4)"/><text x="98.5278%" y="751.50"></text></g><g><title>anon.469fabf28242cb0c5a1a440e75a08170.14.llvm.11085671845897388137 (2 samples, 0.23%)</title><rect x="98.2778%" y="757" width="0.2296%" height="15" fill="rgb(252,104,46)"/><text x="98.5278%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="98.3927%" y="741" width="0.1148%" height="15" fill="rgb(237,152,48)"/><text x="98.6427%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.34%)</title><rect x="98.5075%" y="757" width="0.3444%" height="15" fill="rgb(221,59,37)"/><text x="98.7575%" y="767.50"></text></g><g><title>[vmlinux] (1 samples, 0.11%)</title><rect x="98.9667%" y="725" width="0.1148%" height="15" fill="rgb(209,202,51)"/><text x="99.2167%" y="735.50"></text></g><g><title>do_group_exit (1 samples, 0.11%)</title><rect x="98.9667%" y="709" width="0.1148%" height="15" fill="rgb(228,81,30)"/><text x="99.2167%" y="719.50"></text></g><g><title>do_exit (1 samples, 0.11%)</title><rect x="98.9667%" y="693" width="0.1148%" height="15" fill="rgb(227,42,39)"/><text x="99.2167%" y="703.50"></text></g><g><title>mmput (1 samples, 0.11%)</title><rect x="98.9667%" y="677" width="0.1148%" height="15" fill="rgb(221,26,2)"/><text x="99.2167%" y="687.50"></text></g><g><title>exit_mmap (1 samples, 0.11%)</title><rect x="98.9667%" y="661" width="0.1148%" height="15" fill="rgb(254,61,31)"/><text x="99.2167%" y="671.50"></text></g><g><title>unmap_vmas (1 samples, 0.11%)</title><rect x="98.9667%" y="645" width="0.1148%" height="15" fill="rgb(222,173,38)"/><text x="99.2167%" y="655.50"></text></g><g><title>unmap_page_range (1 samples, 0.11%)</title><rect x="98.9667%" y="629" width="0.1148%" height="15" fill="rgb(218,50,12)"/><text x="99.2167%" y="639.50"></text></g><g><title>mark_page_accessed (1 samples, 0.11%)</title><rect x="98.9667%" y="613" width="0.1148%" height="15" fill="rgb(223,88,40)"/><text x="99.2167%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.34%)</title><rect x="98.8519%" y="757" width="0.3444%" height="15" fill="rgb(237,54,19)"/><text x="99.1019%" y="767.50"></text></g><g><title>do_syscall_64 (2 samples, 0.23%)</title><rect x="98.9667%" y="741" width="0.2296%" height="15" fill="rgb(251,129,25)"/><text x="99.2167%" y="751.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="99.0815%" y="725" width="0.1148%" height="15" fill="rgb(238,97,19)"/><text x="99.3315%" y="735.50"></text></g><g><title>do_execve (1 samples, 0.11%)</title><rect x="99.0815%" y="709" width="0.1148%" height="15" fill="rgb(240,169,18)"/><text x="99.3315%" y="719.50"></text></g><g><title>__do_execve_file (1 samples, 0.11%)</title><rect x="99.0815%" y="693" width="0.1148%" height="15" fill="rgb(230,187,49)"/><text x="99.3315%" y="703.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.11%)</title><rect x="99.0815%" y="677" width="0.1148%" height="15" fill="rgb(209,44,26)"/><text x="99.3315%" y="687.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="99.0815%" y="661" width="0.1148%" height="15" fill="rgb(244,0,6)"/><text x="99.3315%" y="671.50"></text></g><g><title>__clear_user (1 samples, 0.11%)</title><rect x="99.0815%" y="645" width="0.1148%" height="15" fill="rgb(248,18,21)"/><text x="99.3315%" y="655.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="99.0815%" y="629" width="0.1148%" height="15" fill="rgb(245,180,19)"/><text x="99.3315%" y="639.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="99.0815%" y="613" width="0.1148%" height="15" fill="rgb(252,118,36)"/><text x="99.3315%" y="623.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="99.0815%" y="597" width="0.1148%" height="15" fill="rgb(210,224,19)"/><text x="99.3315%" y="607.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="99.0815%" y="581" width="0.1148%" height="15" fill="rgb(218,30,24)"/><text x="99.3315%" y="591.50"></text></g><g><title>__pmd_alloc (1 samples, 0.11%)</title><rect x="99.0815%" y="565" width="0.1148%" height="15" fill="rgb(219,75,50)"/><text x="99.3315%" y="575.50"></text></g><g><title>lobsters-microb (865 samples, 99.31%)</title><rect x="0.0000%" y="773" width="99.3111%" height="15" fill="rgb(234,72,50)"/><text x="0.2500%" y="783.50">lobsters-microb</text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="99.1963%" y="757" width="0.1148%" height="15" fill="rgb(219,100,48)"/><text x="99.4463%" y="767.50"></text></g><g><title>all (871 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(253,5,41)"/><text x="0.2500%" y="799.50"></text></g><g><title>perf (6 samples, 0.69%)</title><rect x="99.3111%" y="773" width="0.6889%" height="15" fill="rgb(247,181,11)"/><text x="99.5611%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.69%)</title><rect x="99.3111%" y="757" width="0.6889%" height="15" fill="rgb(222,223,25)"/><text x="99.5611%" y="767.50"></text></g><g><title>do_syscall_64 (6 samples, 0.69%)</title><rect x="99.3111%" y="741" width="0.6889%" height="15" fill="rgb(214,198,28)"/><text x="99.5611%" y="751.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.69%)</title><rect x="99.3111%" y="725" width="0.6889%" height="15" fill="rgb(230,46,43)"/><text x="99.5611%" y="735.50"></text></g><g><title>do_execve (6 samples, 0.69%)</title><rect x="99.3111%" y="709" width="0.6889%" height="15" fill="rgb(233,65,53)"/><text x="99.5611%" y="719.50"></text></g><g><title>__do_execve_file (6 samples, 0.69%)</title><rect x="99.3111%" y="693" width="0.6889%" height="15" fill="rgb(221,121,27)"/><text x="99.5611%" y="703.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.69%)</title><rect x="99.3111%" y="677" width="0.6889%" height="15" fill="rgb(247,70,47)"/><text x="99.5611%" y="687.50"></text></g><g><title>load_elf_binary (6 samples, 0.69%)</title><rect x="99.3111%" y="661" width="0.6889%" height="15" fill="rgb(228,85,35)"/><text x="99.5611%" y="671.50"></text></g><g><title>setup_new_exec (6 samples, 0.69%)</title><rect x="99.3111%" y="645" width="0.6889%" height="15" fill="rgb(209,50,18)"/><text x="99.5611%" y="655.50"></text></g><g><title>perf_event_exec (6 samples, 0.69%)</title><rect x="99.3111%" y="629" width="0.6889%" height="15" fill="rgb(250,19,35)"/><text x="99.5611%" y="639.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.57%)</title><rect x="99.4259%" y="613" width="0.5741%" height="15" fill="rgb(253,107,29)"/><text x="99.6759%" y="623.50"></text></g><g><title>native_write_msr (5 samples, 0.57%)</title><rect x="99.4259%" y="597" width="0.5741%" height="15" fill="rgb(252,179,29)"/><text x="99.6759%" y="607.50"></text></g></svg></svg>