<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="853.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (23 samples, 0.35%)</title><rect x="0.2124%" y="773" width="0.3489%" height="15" fill="rgb(227,0,7)"/><text x="0.4624%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (24 samples, 0.36%)</title><rect x="0.5765%" y="773" width="0.3641%" height="15" fill="rgb(217,0,24)"/><text x="0.8265%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.14%)</title><rect x="1.4260%" y="773" width="0.1365%" height="15" fill="rgb(221,193,54)"/><text x="1.6760%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (8 samples, 0.12%)</title><rect x="1.6080%" y="773" width="0.1214%" height="15" fill="rgb(248,212,6)"/><text x="1.8580%" y="783.50"></text></g><g><title>__GI___libc_free (7 samples, 0.11%)</title><rect x="1.8507%" y="773" width="0.1062%" height="15" fill="rgb(208,68,35)"/><text x="2.1007%" y="783.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.18%)</title><rect x="1.9569%" y="773" width="0.1820%" height="15" fill="rgb(232,128,0)"/><text x="2.2069%" y="783.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.26%)</title><rect x="2.1390%" y="773" width="0.2579%" height="15" fill="rgb(207,160,47)"/><text x="2.3890%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.15%)</title><rect x="2.4575%" y="773" width="0.1517%" height="15" fill="rgb(228,23,34)"/><text x="2.7075%" y="783.50"></text></g><g><title>__rdl_realloc (7 samples, 0.11%)</title><rect x="2.6092%" y="773" width="0.1062%" height="15" fill="rgb(218,30,26)"/><text x="2.8592%" y="783.50"></text></g><g><title>_int_free (55 samples, 0.83%)</title><rect x="2.7154%" y="773" width="0.8343%" height="15" fill="rgb(220,122,19)"/><text x="2.9654%" y="783.50"></text></g><g><title>_int_malloc (11 samples, 0.17%)</title><rect x="3.5498%" y="773" width="0.1669%" height="15" fill="rgb(250,228,42)"/><text x="3.7998%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.50%)</title><rect x="3.7925%" y="773" width="0.5006%" height="15" fill="rgb(240,193,28)"/><text x="4.0425%" y="783.50"></text></g><g><title>core::fmt::write (15 samples, 0.23%)</title><rect x="4.3993%" y="773" width="0.2275%" height="15" fill="rgb(216,20,37)"/><text x="4.6493%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.15%)</title><rect x="4.6420%" y="773" width="0.1517%" height="15" fill="rgb(206,188,39)"/><text x="4.8920%" y="783.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (11 samples, 0.17%)</title><rect x="4.9909%" y="773" width="0.1669%" height="15" fill="rgb(217,207,13)"/><text x="5.2409%" y="783.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (11 samples, 0.17%)</title><rect x="5.1729%" y="773" width="0.1669%" height="15" fill="rgb(231,73,38)"/><text x="5.4229%" y="783.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (10 samples, 0.15%)</title><rect x="5.3550%" y="773" width="0.1517%" height="15" fill="rgb(225,20,46)"/><text x="5.6050%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (24 samples, 0.36%)</title><rect x="6.2348%" y="773" width="0.3641%" height="15" fill="rgb(210,31,41)"/><text x="6.4848%" y="783.50"></text></g><g><title>[anon] (430 samples, 6.52%)</title><rect x="0.2124%" y="789" width="6.5231%" height="15" fill="rgb(221,200,47)"/><text x="0.4624%" y="799.50">[anon]</text></g><g><title>_int_realloc (8 samples, 0.12%)</title><rect x="7.0995%" y="773" width="0.1214%" height="15" fill="rgb(226,26,5)"/><text x="7.3495%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.15%)</title><rect x="7.2209%" y="773" width="0.1517%" height="15" fill="rgb(249,33,26)"/><text x="7.4709%" y="783.50"></text></g><g><title>[lobsters-microbenchmarks] (43 samples, 0.65%)</title><rect x="6.7809%" y="789" width="0.6523%" height="15" fill="rgb(235,183,28)"/><text x="7.0309%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.26%)</title><rect x="7.4788%" y="773" width="0.2579%" height="15" fill="rgb(221,5,38)"/><text x="7.7288%" y="783.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (7 samples, 0.11%)</title><rect x="7.8883%" y="725" width="0.1062%" height="15" fill="rgb(247,18,42)"/><text x="8.1383%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (7 samples, 0.11%)</title><rect x="7.8883%" y="709" width="0.1062%" height="15" fill="rgb(241,131,45)"/><text x="8.1383%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (7 samples, 0.11%)</title><rect x="7.8883%" y="693" width="0.1062%" height="15" fill="rgb(249,31,29)"/><text x="8.1383%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (7 samples, 0.11%)</title><rect x="7.8883%" y="677" width="0.1062%" height="15" fill="rgb(225,111,53)"/><text x="8.1383%" y="687.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (10 samples, 0.15%)</title><rect x="7.8580%" y="773" width="0.1517%" height="15" fill="rgb(238,160,17)"/><text x="8.1080%" y="783.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (10 samples, 0.15%)</title><rect x="7.8580%" y="757" width="0.1517%" height="15" fill="rgb(214,148,48)"/><text x="8.1080%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (10 samples, 0.15%)</title><rect x="7.8580%" y="741" width="0.1517%" height="15" fill="rgb(232,36,49)"/><text x="8.1080%" y="751.50"></text></g><g><title>__GI___libc_free (8 samples, 0.12%)</title><rect x="8.4496%" y="773" width="0.1214%" height="15" fill="rgb(209,103,24)"/><text x="8.6996%" y="783.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.32%)</title><rect x="8.5710%" y="773" width="0.3186%" height="15" fill="rgb(229,88,8)"/><text x="8.8210%" y="783.50"></text></g><g><title>alloc::fmt::format (15 samples, 0.23%)</title><rect x="9.0109%" y="597" width="0.2275%" height="15" fill="rgb(213,181,19)"/><text x="9.2609%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (13 samples, 0.20%)</title><rect x="9.0413%" y="581" width="0.1972%" height="15" fill="rgb(254,191,54)"/><text x="9.2913%" y="591.50"></text></g><g><title>core::fmt::write (13 samples, 0.20%)</title><rect x="9.0413%" y="565" width="0.1972%" height="15" fill="rgb(241,83,37)"/><text x="9.2913%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (10 samples, 0.15%)</title><rect x="9.0868%" y="549" width="0.1517%" height="15" fill="rgb(233,36,39)"/><text x="9.3368%" y="559.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (8 samples, 0.12%)</title><rect x="9.1171%" y="533" width="0.1214%" height="15" fill="rgb(226,3,54)"/><text x="9.3671%" y="543.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (17 samples, 0.26%)</title><rect x="9.0109%" y="613" width="0.2579%" height="15" fill="rgb(245,192,40)"/><text x="9.2609%" y="623.50"></text></g><g><title>__libc_start_main (25 samples, 0.38%)</title><rect x="8.9502%" y="773" width="0.3792%" height="15" fill="rgb(238,167,29)"/><text x="9.2002%" y="783.50"></text></g><g><title>main (25 samples, 0.38%)</title><rect x="8.9502%" y="757" width="0.3792%" height="15" fill="rgb(232,182,51)"/><text x="9.2002%" y="767.50"></text></g><g><title>std::rt::lang_start_internal (25 samples, 0.38%)</title><rect x="8.9502%" y="741" width="0.3792%" height="15" fill="rgb(231,60,39)"/><text x="9.2002%" y="751.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.38%)</title><rect x="8.9502%" y="725" width="0.3792%" height="15" fill="rgb(208,69,12)"/><text x="9.2002%" y="735.50"></text></g><g><title>std::panicking::try (25 samples, 0.38%)</title><rect x="8.9502%" y="709" width="0.3792%" height="15" fill="rgb(235,93,37)"/><text x="9.2002%" y="719.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.38%)</title><rect x="8.9502%" y="693" width="0.3792%" height="15" fill="rgb(213,116,39)"/><text x="9.2002%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (25 samples, 0.38%)</title><rect x="8.9502%" y="677" width="0.3792%" height="15" fill="rgb(222,207,29)"/><text x="9.2002%" y="687.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (25 samples, 0.38%)</title><rect x="8.9502%" y="661" width="0.3792%" height="15" fill="rgb(206,96,30)"/><text x="9.2002%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 0.38%)</title><rect x="8.9502%" y="645" width="0.3792%" height="15" fill="rgb(218,138,4)"/><text x="9.2002%" y="655.50"></text></g><g><title>lobsters_microbenchmarks::main (25 samples, 0.38%)</title><rect x="8.9502%" y="629" width="0.3792%" height="15" fill="rgb(250,191,14)"/><text x="9.2002%" y="639.50"></text></g><g><title>_int_free (17 samples, 0.26%)</title><rect x="9.4812%" y="773" width="0.2579%" height="15" fill="rgb(239,60,40)"/><text x="9.7312%" y="783.50"></text></g><g><title>_int_malloc (10 samples, 0.15%)</title><rect x="9.7391%" y="773" width="0.1517%" height="15" fill="rgb(206,27,48)"/><text x="9.9891%" y="783.50"></text></g><g><title>_int_realloc (8 samples, 0.12%)</title><rect x="9.8908%" y="773" width="0.1214%" height="15" fill="rgb(225,35,8)"/><text x="10.1408%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.17%)</title><rect x="10.0273%" y="773" width="0.1669%" height="15" fill="rgb(250,213,24)"/><text x="10.2773%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad (8 samples, 0.12%)</title><rect x="10.3004%" y="773" width="0.1214%" height="15" fill="rgb(247,123,22)"/><text x="10.5504%" y="783.50"></text></g><g><title>core::fmt::write (13 samples, 0.20%)</title><rect x="10.5734%" y="645" width="0.1972%" height="15" fill="rgb(231,138,38)"/><text x="10.8234%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (13 samples, 0.20%)</title><rect x="10.5734%" y="629" width="0.1972%" height="15" fill="rgb(231,145,46)"/><text x="10.8234%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (13 samples, 0.20%)</title><rect x="10.5734%" y="613" width="0.1972%" height="15" fill="rgb(251,118,11)"/><text x="10.8234%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.14%)</title><rect x="10.6341%" y="597" width="0.1365%" height="15" fill="rgb(217,147,25)"/><text x="10.8841%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (18 samples, 0.27%)</title><rect x="10.5734%" y="773" width="0.2731%" height="15" fill="rgb(247,81,37)"/><text x="10.8234%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.27%)</title><rect x="10.5734%" y="757" width="0.2731%" height="15" fill="rgb(209,12,38)"/><text x="10.8234%" y="767.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (18 samples, 0.27%)</title><rect x="10.5734%" y="741" width="0.2731%" height="15" fill="rgb(227,1,9)"/><text x="10.8234%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (18 samples, 0.27%)</title><rect x="10.5734%" y="725" width="0.2731%" height="15" fill="rgb(248,47,43)"/><text x="10.8234%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (18 samples, 0.27%)</title><rect x="10.5734%" y="709" width="0.2731%" height="15" fill="rgb(221,10,30)"/><text x="10.8234%" y="719.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (18 samples, 0.27%)</title><rect x="10.5734%" y="693" width="0.2731%" height="15" fill="rgb(210,229,1)"/><text x="10.8234%" y="703.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (18 samples, 0.27%)</title><rect x="10.5734%" y="677" width="0.2731%" height="15" fill="rgb(222,148,37)"/><text x="10.8234%" y="687.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (18 samples, 0.27%)</title><rect x="10.5734%" y="661" width="0.2731%" height="15" fill="rgb(234,67,33)"/><text x="10.8234%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.15%)</title><rect x="10.8465%" y="773" width="0.1517%" height="15" fill="rgb(247,98,35)"/><text x="11.0965%" y="783.50"></text></g><g><title>enqueue_task (7 samples, 0.11%)</title><rect x="11.3471%" y="53" width="0.1062%" height="15" fill="rgb(247,138,52)"/><text x="11.5971%" y="63.50"></text></g><g><title>sock_def_readable (11 samples, 0.17%)</title><rect x="11.3471%" y="133" width="0.1669%" height="15" fill="rgb(213,79,30)"/><text x="11.5971%" y="143.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.17%)</title><rect x="11.3471%" y="117" width="0.1669%" height="15" fill="rgb(246,177,23)"/><text x="11.5971%" y="127.50"></text></g><g><title>__wake_up_common (11 samples, 0.17%)</title><rect x="11.3471%" y="101" width="0.1669%" height="15" fill="rgb(230,62,27)"/><text x="11.5971%" y="111.50"></text></g><g><title>pollwake (11 samples, 0.17%)</title><rect x="11.3471%" y="85" width="0.1669%" height="15" fill="rgb(216,154,8)"/><text x="11.5971%" y="95.50"></text></g><g><title>try_to_wake_up (11 samples, 0.17%)</title><rect x="11.3471%" y="69" width="0.1669%" height="15" fill="rgb(244,35,45)"/><text x="11.5971%" y="79.50"></text></g><g><title>tcp_ack (9 samples, 0.14%)</title><rect x="11.5140%" y="133" width="0.1365%" height="15" fill="rgb(251,115,12)"/><text x="11.7640%" y="143.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 0.32%)</title><rect x="11.3471%" y="165" width="0.3186%" height="15" fill="rgb(240,54,50)"/><text x="11.5971%" y="175.50"></text></g><g><title>tcp_rcv_established (21 samples, 0.32%)</title><rect x="11.3471%" y="149" width="0.3186%" height="15" fill="rgb(233,84,52)"/><text x="11.5971%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (25 samples, 0.38%)</title><rect x="11.3016%" y="261" width="0.3792%" height="15" fill="rgb(207,117,47)"/><text x="11.5516%" y="271.50"></text></g><g><title>ip_rcv (23 samples, 0.35%)</title><rect x="11.3319%" y="245" width="0.3489%" height="15" fill="rgb(249,43,39)"/><text x="11.5819%" y="255.50"></text></g><g><title>ip_local_deliver (23 samples, 0.35%)</title><rect x="11.3319%" y="229" width="0.3489%" height="15" fill="rgb(209,38,44)"/><text x="11.5819%" y="239.50"></text></g><g><title>ip_local_deliver_finish (23 samples, 0.35%)</title><rect x="11.3319%" y="213" width="0.3489%" height="15" fill="rgb(236,212,23)"/><text x="11.5819%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (23 samples, 0.35%)</title><rect x="11.3319%" y="197" width="0.3489%" height="15" fill="rgb(242,79,21)"/><text x="11.5819%" y="207.50"></text></g><g><title>tcp_v4_rcv (23 samples, 0.35%)</title><rect x="11.3319%" y="181" width="0.3489%" height="15" fill="rgb(211,96,35)"/><text x="11.5819%" y="191.50"></text></g><g><title>__ip_queue_xmit (34 samples, 0.52%)</title><rect x="11.1802%" y="405" width="0.5158%" height="15" fill="rgb(253,215,40)"/><text x="11.4302%" y="415.50"></text></g><g><title>ip_output (33 samples, 0.50%)</title><rect x="11.1954%" y="389" width="0.5006%" height="15" fill="rgb(211,81,21)"/><text x="11.4454%" y="399.50"></text></g><g><title>ip_finish_output2 (32 samples, 0.49%)</title><rect x="11.2106%" y="373" width="0.4854%" height="15" fill="rgb(208,190,38)"/><text x="11.4606%" y="383.50"></text></g><g><title>__local_bh_enable_ip (29 samples, 0.44%)</title><rect x="11.2561%" y="357" width="0.4399%" height="15" fill="rgb(235,213,38)"/><text x="11.5061%" y="367.50"></text></g><g><title>do_softirq (29 samples, 0.44%)</title><rect x="11.2561%" y="341" width="0.4399%" height="15" fill="rgb(237,122,38)"/><text x="11.5061%" y="351.50"></text></g><g><title>do_softirq_own_stack (29 samples, 0.44%)</title><rect x="11.2561%" y="325" width="0.4399%" height="15" fill="rgb(244,218,35)"/><text x="11.5061%" y="335.50"></text></g><g><title>__do_softirq (29 samples, 0.44%)</title><rect x="11.2561%" y="309" width="0.4399%" height="15" fill="rgb(240,68,47)"/><text x="11.5061%" y="319.50"></text></g><g><title>net_rx_action (29 samples, 0.44%)</title><rect x="11.2561%" y="293" width="0.4399%" height="15" fill="rgb(210,16,53)"/><text x="11.5061%" y="303.50"></text></g><g><title>process_backlog (26 samples, 0.39%)</title><rect x="11.3016%" y="277" width="0.3944%" height="15" fill="rgb(235,124,12)"/><text x="11.5516%" y="287.50"></text></g><g><title>__tcp_transmit_skb (36 samples, 0.55%)</title><rect x="11.1802%" y="421" width="0.5461%" height="15" fill="rgb(224,169,11)"/><text x="11.4302%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (38 samples, 0.58%)</title><rect x="11.1802%" y="453" width="0.5765%" height="15" fill="rgb(250,166,2)"/><text x="11.4302%" y="463.50"></text></g><g><title>tcp_write_xmit (38 samples, 0.58%)</title><rect x="11.1802%" y="437" width="0.5765%" height="15" fill="rgb(242,216,29)"/><text x="11.4302%" y="447.50"></text></g><g><title>sock_sendmsg (49 samples, 0.74%)</title><rect x="11.1499%" y="501" width="0.7433%" height="15" fill="rgb(230,116,27)"/><text x="11.3999%" y="511.50"></text></g><g><title>tcp_sendmsg (49 samples, 0.74%)</title><rect x="11.1499%" y="485" width="0.7433%" height="15" fill="rgb(228,99,48)"/><text x="11.3999%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (48 samples, 0.73%)</title><rect x="11.1650%" y="469" width="0.7282%" height="15" fill="rgb(253,11,6)"/><text x="11.4150%" y="479.50"></text></g><g><title>__x64_sys_sendto (51 samples, 0.77%)</title><rect x="11.1499%" y="533" width="0.7737%" height="15" fill="rgb(247,143,39)"/><text x="11.3999%" y="543.50"></text></g><g><title>__sys_sendto (51 samples, 0.77%)</title><rect x="11.1499%" y="517" width="0.7737%" height="15" fill="rgb(236,97,10)"/><text x="11.3999%" y="527.50"></text></g><g><title>do_syscall_64 (53 samples, 0.80%)</title><rect x="11.1499%" y="549" width="0.8040%" height="15" fill="rgb(233,208,19)"/><text x="11.3999%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (61 samples, 0.93%)</title><rect x="11.1347%" y="565" width="0.9254%" height="15" fill="rgb(216,164,2)"/><text x="11.3847%" y="575.50"></text></g><g><title>prepare_exit_to_usermode (7 samples, 0.11%)</title><rect x="11.9539%" y="549" width="0.1062%" height="15" fill="rgb(220,129,5)"/><text x="12.2039%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (70 samples, 1.06%)</title><rect x="11.0285%" y="677" width="1.0619%" height="15" fill="rgb(242,17,10)"/><text x="11.2785%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (70 samples, 1.06%)</title><rect x="11.0285%" y="661" width="1.0619%" height="15" fill="rgb(242,107,0)"/><text x="11.2785%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (67 samples, 1.02%)</title><rect x="11.0740%" y="645" width="1.0164%" height="15" fill="rgb(251,28,31)"/><text x="11.3240%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (65 samples, 0.99%)</title><rect x="11.1044%" y="629" width="0.9860%" height="15" fill="rgb(233,223,10)"/><text x="11.3544%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (64 samples, 0.97%)</title><rect x="11.1195%" y="613" width="0.9709%" height="15" fill="rgb(215,21,27)"/><text x="11.3695%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (64 samples, 0.97%)</title><rect x="11.1195%" y="597" width="0.9709%" height="15" fill="rgb(232,23,21)"/><text x="11.3695%" y="607.50"></text></g><g><title>__libc_send (63 samples, 0.96%)</title><rect x="11.1347%" y="581" width="0.9557%" height="15" fill="rgb(244,5,23)"/><text x="11.3847%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.18%)</title><rect x="12.0904%" y="645" width="0.1820%" height="15" fill="rgb(226,81,46)"/><text x="12.3404%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.18%)</title><rect x="12.0904%" y="629" width="0.1820%" height="15" fill="rgb(247,70,30)"/><text x="12.3404%" y="639.50"></text></g><g><title>core::fmt::write (27 samples, 0.41%)</title><rect x="12.0904%" y="677" width="0.4096%" height="15" fill="rgb(212,68,19)"/><text x="12.3404%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (27 samples, 0.41%)</title><rect x="12.0904%" y="661" width="0.4096%" height="15" fill="rgb(240,187,13)"/><text x="12.3404%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 0.23%)</title><rect x="12.2725%" y="645" width="0.2275%" height="15" fill="rgb(223,113,26)"/><text x="12.5225%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.14%)</title><rect x="12.3635%" y="629" width="0.1365%" height="15" fill="rgb(206,192,2)"/><text x="12.6135%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (9 samples, 0.14%)</title><rect x="12.5758%" y="661" width="0.1365%" height="15" fill="rgb(241,108,4)"/><text x="12.8258%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (114 samples, 1.73%)</title><rect x="11.0285%" y="693" width="1.7294%" height="15" fill="rgb(247,173,49)"/><text x="11.2785%" y="703.50"></text></g><g><title>decor_mem::views::Views::insert (17 samples, 0.26%)</title><rect x="12.5000%" y="677" width="0.2579%" height="15" fill="rgb(224,114,35)"/><text x="12.7500%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.18%)</title><rect x="12.7579%" y="677" width="0.1820%" height="15" fill="rgb(245,159,27)"/><text x="13.0079%" y="687.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.18%)</title><rect x="13.2888%" y="469" width="0.1820%" height="15" fill="rgb(245,172,44)"/><text x="13.5388%" y="479.50"></text></g><g><title>_int_malloc (7 samples, 0.11%)</title><rect x="13.3647%" y="453" width="0.1062%" height="15" fill="rgb(236,23,11)"/><text x="13.6147%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (32 samples, 0.49%)</title><rect x="13.0309%" y="661" width="0.4854%" height="15" fill="rgb(205,117,38)"/><text x="13.2809%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (21 samples, 0.32%)</title><rect x="13.1978%" y="645" width="0.3186%" height="15" fill="rgb(237,72,25)"/><text x="13.4478%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.32%)</title><rect x="13.1978%" y="629" width="0.3186%" height="15" fill="rgb(244,70,9)"/><text x="13.4478%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (21 samples, 0.32%)</title><rect x="13.1978%" y="613" width="0.3186%" height="15" fill="rgb(217,125,39)"/><text x="13.4478%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.30%)</title><rect x="13.2130%" y="597" width="0.3034%" height="15" fill="rgb(235,36,10)"/><text x="13.4630%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.23%)</title><rect x="13.2888%" y="581" width="0.2275%" height="15" fill="rgb(251,123,47)"/><text x="13.5388%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (15 samples, 0.23%)</title><rect x="13.2888%" y="565" width="0.2275%" height="15" fill="rgb(221,13,13)"/><text x="13.5388%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.23%)</title><rect x="13.2888%" y="549" width="0.2275%" height="15" fill="rgb(238,131,9)"/><text x="13.5388%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.23%)</title><rect x="13.2888%" y="533" width="0.2275%" height="15" fill="rgb(211,50,8)"/><text x="13.5388%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (15 samples, 0.23%)</title><rect x="13.2888%" y="517" width="0.2275%" height="15" fill="rgb(245,182,24)"/><text x="13.5388%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.23%)</title><rect x="13.2888%" y="501" width="0.2275%" height="15" fill="rgb(242,14,37)"/><text x="13.5388%" y="511.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.23%)</title><rect x="13.2888%" y="485" width="0.2275%" height="15" fill="rgb(246,228,12)"/><text x="13.5388%" y="495.50"></text></g><g><title>malloc_consolidate (20 samples, 0.30%)</title><rect x="13.7894%" y="629" width="0.3034%" height="15" fill="rgb(213,55,15)"/><text x="14.0394%" y="639.50"></text></g><g><title>perf_event_mmap (19 samples, 0.29%)</title><rect x="14.1990%" y="517" width="0.2882%" height="15" fill="rgb(209,9,3)"/><text x="14.4490%" y="527.50"></text></g><g><title>perf_iterate_sb (19 samples, 0.29%)</title><rect x="14.1990%" y="501" width="0.2882%" height="15" fill="rgb(230,59,30)"/><text x="14.4490%" y="511.50"></text></g><g><title>perf_iterate_ctx (18 samples, 0.27%)</title><rect x="14.2142%" y="485" width="0.2731%" height="15" fill="rgb(209,121,21)"/><text x="14.4642%" y="495.50"></text></g><g><title>__x64_sys_mprotect (31 samples, 0.47%)</title><rect x="14.1080%" y="565" width="0.4703%" height="15" fill="rgb(220,109,13)"/><text x="14.3580%" y="575.50"></text></g><g><title>do_mprotect_pkey (31 samples, 0.47%)</title><rect x="14.1080%" y="549" width="0.4703%" height="15" fill="rgb(232,18,1)"/><text x="14.3580%" y="559.50"></text></g><g><title>mprotect_fixup (30 samples, 0.46%)</title><rect x="14.1232%" y="533" width="0.4551%" height="15" fill="rgb(215,41,42)"/><text x="14.3732%" y="543.50"></text></g><g><title>do_syscall_64 (32 samples, 0.49%)</title><rect x="14.1080%" y="581" width="0.4854%" height="15" fill="rgb(224,123,36)"/><text x="14.3580%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (33 samples, 0.50%)</title><rect x="14.1080%" y="597" width="0.5006%" height="15" fill="rgb(240,125,3)"/><text x="14.3580%" y="607.50"></text></g><g><title>__GI___mprotect (36 samples, 0.55%)</title><rect x="14.0928%" y="613" width="0.5461%" height="15" fill="rgb(205,98,50)"/><text x="14.3428%" y="623.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.14%)</title><rect x="14.6996%" y="549" width="0.1365%" height="15" fill="rgb(205,185,37)"/><text x="14.9496%" y="559.50"></text></g><g><title>page_fault (14 samples, 0.21%)</title><rect x="14.6541%" y="613" width="0.2124%" height="15" fill="rgb(238,207,15)"/><text x="14.9041%" y="623.50"></text></g><g><title>do_user_addr_fault (14 samples, 0.21%)</title><rect x="14.6541%" y="597" width="0.2124%" height="15" fill="rgb(213,199,42)"/><text x="14.9041%" y="607.50"></text></g><g><title>handle_mm_fault (14 samples, 0.21%)</title><rect x="14.6541%" y="581" width="0.2124%" height="15" fill="rgb(235,201,11)"/><text x="14.9041%" y="591.50"></text></g><g><title>__handle_mm_fault (13 samples, 0.20%)</title><rect x="14.6693%" y="565" width="0.1972%" height="15" fill="rgb(207,46,11)"/><text x="14.9193%" y="575.50"></text></g><g><title>__GI___libc_malloc (94 samples, 1.43%)</title><rect x="13.5164%" y="661" width="1.4260%" height="15" fill="rgb(241,35,35)"/><text x="13.7664%" y="671.50"></text></g><g><title>_int_malloc (93 samples, 1.41%)</title><rect x="13.5316%" y="645" width="1.4108%" height="15" fill="rgb(243,32,47)"/><text x="13.7816%" y="655.50"></text></g><g><title>sysmalloc (56 samples, 0.85%)</title><rect x="14.0928%" y="629" width="0.8495%" height="15" fill="rgb(247,202,23)"/><text x="14.3428%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (140 samples, 2.12%)</title><rect x="12.9399%" y="677" width="2.1238%" height="15" fill="rgb(219,102,11)"/><text x="13.1899%" y="687.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.12%)</title><rect x="14.9424%" y="661" width="0.1214%" height="15" fill="rgb(243,110,44)"/><text x="15.1924%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.27%)</title><rect x="15.0637%" y="677" width="0.2731%" height="15" fill="rgb(222,74,54)"/><text x="15.3137%" y="687.50"></text></g><g><title>core::fmt::write (10 samples, 0.15%)</title><rect x="15.1851%" y="661" width="0.1517%" height="15" fill="rgb(216,99,12)"/><text x="15.4351%" y="671.50"></text></g><g><title>sock_def_readable (11 samples, 0.17%)</title><rect x="15.9284%" y="133" width="0.1669%" height="15" fill="rgb(226,22,26)"/><text x="16.1784%" y="143.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.17%)</title><rect x="15.9284%" y="117" width="0.1669%" height="15" fill="rgb(217,163,10)"/><text x="16.1784%" y="127.50"></text></g><g><title>__wake_up_common (11 samples, 0.17%)</title><rect x="15.9284%" y="101" width="0.1669%" height="15" fill="rgb(213,25,53)"/><text x="16.1784%" y="111.50"></text></g><g><title>pollwake (10 samples, 0.15%)</title><rect x="15.9436%" y="85" width="0.1517%" height="15" fill="rgb(252,105,26)"/><text x="16.1936%" y="95.50"></text></g><g><title>try_to_wake_up (9 samples, 0.14%)</title><rect x="15.9587%" y="69" width="0.1365%" height="15" fill="rgb(220,39,43)"/><text x="16.2087%" y="79.50"></text></g><g><title>ip_local_deliver (26 samples, 0.39%)</title><rect x="15.8525%" y="229" width="0.3944%" height="15" fill="rgb(229,68,48)"/><text x="16.1025%" y="239.50"></text></g><g><title>ip_local_deliver_finish (24 samples, 0.36%)</title><rect x="15.8829%" y="213" width="0.3641%" height="15" fill="rgb(252,8,32)"/><text x="16.1329%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (24 samples, 0.36%)</title><rect x="15.8829%" y="197" width="0.3641%" height="15" fill="rgb(223,20,43)"/><text x="16.1329%" y="207.50"></text></g><g><title>tcp_v4_rcv (24 samples, 0.36%)</title><rect x="15.8829%" y="181" width="0.3641%" height="15" fill="rgb(229,81,49)"/><text x="16.1329%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 0.35%)</title><rect x="15.8981%" y="165" width="0.3489%" height="15" fill="rgb(236,28,36)"/><text x="16.1481%" y="175.50"></text></g><g><title>tcp_rcv_established (23 samples, 0.35%)</title><rect x="15.8981%" y="149" width="0.3489%" height="15" fill="rgb(249,185,26)"/><text x="16.1481%" y="159.50"></text></g><g><title>ip_finish_output2 (37 samples, 0.56%)</title><rect x="15.7160%" y="373" width="0.5613%" height="15" fill="rgb(249,174,33)"/><text x="15.9660%" y="383.50"></text></g><g><title>__local_bh_enable_ip (30 samples, 0.46%)</title><rect x="15.8222%" y="357" width="0.4551%" height="15" fill="rgb(233,201,37)"/><text x="16.0722%" y="367.50"></text></g><g><title>do_softirq (30 samples, 0.46%)</title><rect x="15.8222%" y="341" width="0.4551%" height="15" fill="rgb(221,78,26)"/><text x="16.0722%" y="351.50"></text></g><g><title>do_softirq_own_stack (30 samples, 0.46%)</title><rect x="15.8222%" y="325" width="0.4551%" height="15" fill="rgb(250,127,30)"/><text x="16.0722%" y="335.50"></text></g><g><title>__do_softirq (30 samples, 0.46%)</title><rect x="15.8222%" y="309" width="0.4551%" height="15" fill="rgb(230,49,44)"/><text x="16.0722%" y="319.50"></text></g><g><title>net_rx_action (30 samples, 0.46%)</title><rect x="15.8222%" y="293" width="0.4551%" height="15" fill="rgb(229,67,23)"/><text x="16.0722%" y="303.50"></text></g><g><title>process_backlog (29 samples, 0.44%)</title><rect x="15.8374%" y="277" width="0.4399%" height="15" fill="rgb(249,83,47)"/><text x="16.0874%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 0.42%)</title><rect x="15.8525%" y="261" width="0.4248%" height="15" fill="rgb(215,43,3)"/><text x="16.1025%" y="271.50"></text></g><g><title>ip_rcv (28 samples, 0.42%)</title><rect x="15.8525%" y="245" width="0.4248%" height="15" fill="rgb(238,154,13)"/><text x="16.1025%" y="255.50"></text></g><g><title>__ip_queue_xmit (44 samples, 0.67%)</title><rect x="15.6250%" y="405" width="0.6675%" height="15" fill="rgb(219,56,2)"/><text x="15.8750%" y="415.50"></text></g><g><title>ip_output (39 samples, 0.59%)</title><rect x="15.7008%" y="389" width="0.5916%" height="15" fill="rgb(233,0,4)"/><text x="15.9508%" y="399.50"></text></g><g><title>__tcp_transmit_skb (47 samples, 0.71%)</title><rect x="15.6250%" y="421" width="0.7130%" height="15" fill="rgb(235,30,7)"/><text x="15.8750%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (51 samples, 0.77%)</title><rect x="15.5947%" y="453" width="0.7737%" height="15" fill="rgb(250,79,13)"/><text x="15.8447%" y="463.50"></text></g><g><title>tcp_write_xmit (51 samples, 0.77%)</title><rect x="15.5947%" y="437" width="0.7737%" height="15" fill="rgb(211,146,34)"/><text x="15.8447%" y="447.50"></text></g><g><title>sock_sendmsg (64 samples, 0.97%)</title><rect x="15.5188%" y="501" width="0.9709%" height="15" fill="rgb(228,22,38)"/><text x="15.7688%" y="511.50"></text></g><g><title>tcp_sendmsg (64 samples, 0.97%)</title><rect x="15.5188%" y="485" width="0.9709%" height="15" fill="rgb(235,168,5)"/><text x="15.7688%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (63 samples, 0.96%)</title><rect x="15.5340%" y="469" width="0.9557%" height="15" fill="rgb(221,155,16)"/><text x="15.7840%" y="479.50"></text></g><g><title>__x64_sys_sendto (66 samples, 1.00%)</title><rect x="15.5036%" y="533" width="1.0012%" height="15" fill="rgb(215,215,53)"/><text x="15.7536%" y="543.50"></text></g><g><title>__sys_sendto (66 samples, 1.00%)</title><rect x="15.5036%" y="517" width="1.0012%" height="15" fill="rgb(223,4,10)"/><text x="15.7536%" y="527.50"></text></g><g><title>do_syscall_64 (69 samples, 1.05%)</title><rect x="15.4733%" y="549" width="1.0467%" height="15" fill="rgb(234,103,6)"/><text x="15.7233%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (79 samples, 1.20%)</title><rect x="15.3368%" y="677" width="1.1984%" height="15" fill="rgb(227,97,0)"/><text x="15.5868%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (79 samples, 1.20%)</title><rect x="15.3368%" y="661" width="1.1984%" height="15" fill="rgb(234,150,53)"/><text x="15.5868%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (74 samples, 1.12%)</title><rect x="15.4126%" y="645" width="1.1226%" height="15" fill="rgb(228,201,54)"/><text x="15.6626%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (72 samples, 1.09%)</title><rect x="15.4430%" y="629" width="1.0922%" height="15" fill="rgb(222,22,37)"/><text x="15.6930%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (71 samples, 1.08%)</title><rect x="15.4581%" y="613" width="1.0771%" height="15" fill="rgb(237,53,32)"/><text x="15.7081%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (71 samples, 1.08%)</title><rect x="15.4581%" y="597" width="1.0771%" height="15" fill="rgb(233,25,53)"/><text x="15.7081%" y="607.50"></text></g><g><title>__libc_send (71 samples, 1.08%)</title><rect x="15.4581%" y="581" width="1.0771%" height="15" fill="rgb(210,40,34)"/><text x="15.7081%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (70 samples, 1.06%)</title><rect x="15.4733%" y="565" width="1.0619%" height="15" fill="rgb(241,220,44)"/><text x="15.7233%" y="575.50"></text></g><g><title>perf_event_mmap (9 samples, 0.14%)</title><rect x="16.8841%" y="501" width="0.1365%" height="15" fill="rgb(235,28,35)"/><text x="17.1341%" y="511.50"></text></g><g><title>perf_iterate_sb (7 samples, 0.11%)</title><rect x="16.9144%" y="485" width="0.1062%" height="15" fill="rgb(210,56,17)"/><text x="17.1644%" y="495.50"></text></g><g><title>perf_iterate_ctx (7 samples, 0.11%)</title><rect x="16.9144%" y="469" width="0.1062%" height="15" fill="rgb(224,130,29)"/><text x="17.1644%" y="479.50"></text></g><g><title>do_syscall_64 (13 samples, 0.20%)</title><rect x="16.8538%" y="565" width="0.1972%" height="15" fill="rgb(235,212,8)"/><text x="17.1038%" y="575.50"></text></g><g><title>__x64_sys_mprotect (13 samples, 0.20%)</title><rect x="16.8538%" y="549" width="0.1972%" height="15" fill="rgb(223,33,50)"/><text x="17.1038%" y="559.50"></text></g><g><title>do_mprotect_pkey (13 samples, 0.20%)</title><rect x="16.8538%" y="533" width="0.1972%" height="15" fill="rgb(219,149,13)"/><text x="17.1038%" y="543.50"></text></g><g><title>mprotect_fixup (13 samples, 0.20%)</title><rect x="16.8538%" y="517" width="0.1972%" height="15" fill="rgb(250,156,29)"/><text x="17.1038%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.21%)</title><rect x="16.8538%" y="581" width="0.2124%" height="15" fill="rgb(216,193,19)"/><text x="17.1038%" y="591.50"></text></g><g><title>__GI___mprotect (16 samples, 0.24%)</title><rect x="16.8538%" y="597" width="0.2427%" height="15" fill="rgb(216,135,14)"/><text x="17.1038%" y="607.50"></text></g><g><title>page_fault (7 samples, 0.11%)</title><rect x="17.0965%" y="597" width="0.1062%" height="15" fill="rgb(241,47,5)"/><text x="17.3465%" y="607.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.11%)</title><rect x="17.0965%" y="581" width="0.1062%" height="15" fill="rgb(233,42,35)"/><text x="17.3465%" y="591.50"></text></g><g><title>handle_mm_fault (7 samples, 0.11%)</title><rect x="17.0965%" y="565" width="0.1062%" height="15" fill="rgb(231,13,6)"/><text x="17.3465%" y="575.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.11%)</title><rect x="17.0965%" y="549" width="0.1062%" height="15" fill="rgb(207,181,40)"/><text x="17.3465%" y="559.50"></text></g><g><title>__GI___libc_malloc (37 samples, 0.56%)</title><rect x="16.6566%" y="645" width="0.5613%" height="15" fill="rgb(254,173,49)"/><text x="16.9066%" y="655.50"></text></g><g><title>_int_malloc (37 samples, 0.56%)</title><rect x="16.6566%" y="629" width="0.5613%" height="15" fill="rgb(221,1,38)"/><text x="16.9066%" y="639.50"></text></g><g><title>sysmalloc (25 samples, 0.38%)</title><rect x="16.8386%" y="613" width="0.3792%" height="15" fill="rgb(206,124,46)"/><text x="17.0886%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (45 samples, 0.68%)</title><rect x="16.5504%" y="677" width="0.6826%" height="15" fill="rgb(249,21,11)"/><text x="16.8004%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (44 samples, 0.67%)</title><rect x="16.5655%" y="661" width="0.6675%" height="15" fill="rgb(222,201,40)"/><text x="16.8155%" y="671.50"></text></g><g><title>malloc_consolidate (48 samples, 0.73%)</title><rect x="17.3999%" y="629" width="0.7282%" height="15" fill="rgb(235,61,29)"/><text x="17.6499%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (60 samples, 0.91%)</title><rect x="17.2330%" y="677" width="0.9102%" height="15" fill="rgb(219,207,3)"/><text x="17.4830%" y="687.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.91%)</title><rect x="17.2330%" y="661" width="0.9102%" height="15" fill="rgb(222,56,46)"/><text x="17.4830%" y="671.50"></text></g><g><title>_int_malloc (60 samples, 0.91%)</title><rect x="17.2330%" y="645" width="0.9102%" height="15" fill="rgb(239,76,54)"/><text x="17.4830%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 0.24%)</title><rect x="18.1432%" y="645" width="0.2427%" height="15" fill="rgb(231,124,27)"/><text x="18.3932%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.21%)</title><rect x="18.1735%" y="629" width="0.2124%" height="15" fill="rgb(249,195,6)"/><text x="18.4235%" y="639.50"></text></g><g><title>core::fmt::write (7 samples, 0.11%)</title><rect x="18.2797%" y="613" width="0.1062%" height="15" fill="rgb(237,174,47)"/><text x="18.5297%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (22 samples, 0.33%)</title><rect x="18.1432%" y="661" width="0.3337%" height="15" fill="rgb(206,201,31)"/><text x="18.3932%" y="671.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.11%)</title><rect x="18.7652%" y="629" width="0.1062%" height="15" fill="rgb(231,57,52)"/><text x="19.0152%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (40 samples, 0.61%)</title><rect x="18.4769%" y="661" width="0.6068%" height="15" fill="rgb(248,177,22)"/><text x="18.7269%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (28 samples, 0.42%)</title><rect x="18.6590%" y="645" width="0.4248%" height="15" fill="rgb(215,211,37)"/><text x="18.9090%" y="655.50"></text></g><g><title>core::fmt::write (10 samples, 0.15%)</title><rect x="18.9320%" y="629" width="0.1517%" height="15" fill="rgb(241,128,51)"/><text x="19.1820%" y="639.50"></text></g><g><title>core::fmt::write (66 samples, 1.00%)</title><rect x="18.1432%" y="677" width="1.0012%" height="15" fill="rgb(227,165,31)"/><text x="18.3932%" y="687.50"></text></g><g><title>_int_free (11 samples, 0.17%)</title><rect x="19.1444%" y="645" width="0.1669%" height="15" fill="rgb(228,167,24)"/><text x="19.3944%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (24 samples, 0.36%)</title><rect x="19.1444%" y="677" width="0.3641%" height="15" fill="rgb(228,143,12)"/><text x="19.3944%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (24 samples, 0.36%)</title><rect x="19.1444%" y="661" width="0.3641%" height="15" fill="rgb(249,149,8)"/><text x="19.3944%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.20%)</title><rect x="19.3113%" y="645" width="0.1972%" height="15" fill="rgb(243,35,44)"/><text x="19.5613%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.12%)</title><rect x="19.6450%" y="613" width="0.1214%" height="15" fill="rgb(246,89,9)"/><text x="19.8950%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.12%)</title><rect x="19.6450%" y="597" width="0.1214%" height="15" fill="rgb(233,213,13)"/><text x="19.8950%" y="607.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.12%)</title><rect x="19.6450%" y="581" width="0.1214%" height="15" fill="rgb(233,141,41)"/><text x="19.8950%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.12%)</title><rect x="19.6450%" y="565" width="0.1214%" height="15" fill="rgb(239,167,4)"/><text x="19.8950%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.12%)</title><rect x="19.6450%" y="549" width="0.1214%" height="15" fill="rgb(209,217,16)"/><text x="19.8950%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (8 samples, 0.12%)</title><rect x="19.6450%" y="533" width="0.1214%" height="15" fill="rgb(219,88,35)"/><text x="19.8950%" y="543.50"></text></g><g><title>alloc::fmt::format (12 samples, 0.18%)</title><rect x="19.5995%" y="661" width="0.1820%" height="15" fill="rgb(220,193,23)"/><text x="19.8495%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.15%)</title><rect x="19.6299%" y="645" width="0.1517%" height="15" fill="rgb(230,90,52)"/><text x="19.8799%" y="655.50"></text></g><g><title>core::fmt::write (9 samples, 0.14%)</title><rect x="19.6450%" y="629" width="0.1365%" height="15" fill="rgb(252,106,19)"/><text x="19.8950%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.15%)</title><rect x="19.8271%" y="661" width="0.1517%" height="15" fill="rgb(206,74,20)"/><text x="20.0771%" y="671.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (32 samples, 0.49%)</title><rect x="19.5085%" y="677" width="0.4854%" height="15" fill="rgb(230,138,44)"/><text x="19.7585%" y="687.50"></text></g><g><title>__GI___libc_free (9 samples, 0.14%)</title><rect x="20.0546%" y="629" width="0.1365%" height="15" fill="rgb(235,182,43)"/><text x="20.3046%" y="639.50"></text></g><g><title>_int_free (9 samples, 0.14%)</title><rect x="20.2063%" y="629" width="0.1365%" height="15" fill="rgb(242,16,51)"/><text x="20.4563%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.38%)</title><rect x="19.9939%" y="661" width="0.3792%" height="15" fill="rgb(248,9,4)"/><text x="20.2439%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (21 samples, 0.32%)</title><rect x="20.0546%" y="645" width="0.3186%" height="15" fill="rgb(210,31,22)"/><text x="20.3046%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.18%)</title><rect x="20.4794%" y="613" width="0.1820%" height="15" fill="rgb(239,54,39)"/><text x="20.7294%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (25 samples, 0.38%)</title><rect x="20.4490%" y="629" width="0.3792%" height="15" fill="rgb(230,99,41)"/><text x="20.6990%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (34 samples, 0.52%)</title><rect x="20.3732%" y="645" width="0.5158%" height="15" fill="rgb(253,106,12)"/><text x="20.6232%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (35 samples, 0.53%)</title><rect x="20.3732%" y="661" width="0.5309%" height="15" fill="rgb(213,46,41)"/><text x="20.6232%" y="671.50"></text></g><g><title>__GI___libc_free (8 samples, 0.12%)</title><rect x="21.1317%" y="629" width="0.1214%" height="15" fill="rgb(215,133,35)"/><text x="21.3817%" y="639.50"></text></g><g><title>_int_free (10 samples, 0.15%)</title><rect x="21.2834%" y="629" width="0.1517%" height="15" fill="rgb(213,28,5)"/><text x="21.5334%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (23 samples, 0.35%)</title><rect x="21.1317%" y="645" width="0.3489%" height="15" fill="rgb(215,77,49)"/><text x="21.3817%" y="655.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.33%)</title><rect x="21.7840%" y="421" width="0.3337%" height="15" fill="rgb(248,100,22)"/><text x="22.0340%" y="431.50"></text></g><g><title>_int_malloc (12 samples, 0.18%)</title><rect x="21.9357%" y="405" width="0.1820%" height="15" fill="rgb(208,67,9)"/><text x="22.1857%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.65%)</title><rect x="21.5109%" y="629" width="0.6523%" height="15" fill="rgb(219,133,21)"/><text x="21.7609%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.64%)</title><rect x="21.5261%" y="613" width="0.6371%" height="15" fill="rgb(246,46,29)"/><text x="21.7761%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.41%)</title><rect x="21.7536%" y="597" width="0.4096%" height="15" fill="rgb(246,185,52)"/><text x="22.0036%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.41%)</title><rect x="21.7536%" y="581" width="0.4096%" height="15" fill="rgb(252,136,11)"/><text x="22.0036%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.41%)</title><rect x="21.7536%" y="565" width="0.4096%" height="15" fill="rgb(219,138,53)"/><text x="22.0036%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.41%)</title><rect x="21.7536%" y="549" width="0.4096%" height="15" fill="rgb(211,51,23)"/><text x="22.0036%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 0.38%)</title><rect x="21.7840%" y="533" width="0.3792%" height="15" fill="rgb(247,221,28)"/><text x="22.0340%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (25 samples, 0.38%)</title><rect x="21.7840%" y="517" width="0.3792%" height="15" fill="rgb(251,222,45)"/><text x="22.0340%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.38%)</title><rect x="21.7840%" y="501" width="0.3792%" height="15" fill="rgb(217,162,53)"/><text x="22.0340%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.38%)</title><rect x="21.7840%" y="485" width="0.3792%" height="15" fill="rgb(229,93,14)"/><text x="22.0340%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (25 samples, 0.38%)</title><rect x="21.7840%" y="469" width="0.3792%" height="15" fill="rgb(209,67,49)"/><text x="22.0340%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.38%)</title><rect x="21.7840%" y="453" width="0.3792%" height="15" fill="rgb(213,87,29)"/><text x="22.0340%" y="463.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.38%)</title><rect x="21.7840%" y="437" width="0.3792%" height="15" fill="rgb(205,151,52)"/><text x="22.0340%" y="447.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (49 samples, 0.74%)</title><rect x="21.4806%" y="645" width="0.7433%" height="15" fill="rgb(253,215,39)"/><text x="21.7306%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (125 samples, 1.90%)</title><rect x="22.6183%" y="629" width="1.8962%" height="15" fill="rgb(221,220,41)"/><text x="22.8683%" y="639.50">d..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (158 samples, 2.40%)</title><rect x="22.2239%" y="645" width="2.3968%" height="15" fill="rgb(218,133,21)"/><text x="22.4739%" y="655.50">de..</text></g><g><title>decor_mem::views::View::is_indexed_col (7 samples, 0.11%)</title><rect x="24.5146%" y="629" width="0.1062%" height="15" fill="rgb(221,193,43)"/><text x="24.7646%" y="639.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (309 samples, 4.69%)</title><rect x="19.9939%" y="677" width="4.6875%" height="15" fill="rgb(240,128,52)"/><text x="20.2439%" y="687.50">decor..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (249 samples, 3.78%)</title><rect x="20.9041%" y="661" width="3.7773%" height="15" fill="rgb(253,114,12)"/><text x="21.1541%" y="671.50">deco..</text></g><g><title>core::fmt::write (27 samples, 0.41%)</title><rect x="25.0910%" y="661" width="0.4096%" height="15" fill="rgb(215,223,47)"/><text x="25.3410%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (23 samples, 0.35%)</title><rect x="25.1517%" y="645" width="0.3489%" height="15" fill="rgb(248,225,23)"/><text x="25.4017%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (19 samples, 0.29%)</title><rect x="25.2124%" y="629" width="0.2882%" height="15" fill="rgb(250,108,0)"/><text x="25.4624%" y="639.50"></text></g><g><title>core::fmt::write (11 samples, 0.17%)</title><rect x="25.3337%" y="613" width="0.1669%" height="15" fill="rgb(228,208,7)"/><text x="25.5837%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.11%)</title><rect x="25.3944%" y="597" width="0.1062%" height="15" fill="rgb(244,45,10)"/><text x="25.6444%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.20%)</title><rect x="25.5006%" y="661" width="0.1972%" height="15" fill="rgb(207,125,25)"/><text x="25.7506%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.23%)</title><rect x="25.6978%" y="661" width="0.2275%" height="15" fill="rgb(210,195,18)"/><text x="25.9478%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.15%)</title><rect x="25.7737%" y="645" width="0.1517%" height="15" fill="rgb(249,80,12)"/><text x="26.0237%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::remove (11 samples, 0.17%)</title><rect x="25.9254%" y="661" width="0.1669%" height="15" fill="rgb(221,65,9)"/><text x="26.1754%" y="671.50"></text></g><g><title>std::time::Instant::elapsed (12 samples, 0.18%)</title><rect x="26.0922%" y="661" width="0.1820%" height="15" fill="rgb(235,49,36)"/><text x="26.3422%" y="671.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.12%)</title><rect x="26.1529%" y="645" width="0.1214%" height="15" fill="rgb(225,32,20)"/><text x="26.4029%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (8 samples, 0.12%)</title><rect x="26.1529%" y="629" width="0.1214%" height="15" fill="rgb(215,141,46)"/><text x="26.4029%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (8 samples, 0.12%)</title><rect x="26.1529%" y="613" width="0.1214%" height="15" fill="rgb(250,160,47)"/><text x="26.4029%" y="623.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (114 samples, 1.73%)</title><rect x="24.6814%" y="677" width="1.7294%" height="15" fill="rgb(216,222,40)"/><text x="24.9314%" y="687.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.14%)</title><rect x="26.2743%" y="661" width="0.1365%" height="15" fill="rgb(234,217,39)"/><text x="26.5243%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (9 samples, 0.14%)</title><rect x="26.2743%" y="645" width="0.1365%" height="15" fill="rgb(207,178,40)"/><text x="26.5243%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::now (9 samples, 0.14%)</title><rect x="26.2743%" y="629" width="0.1365%" height="15" fill="rgb(221,136,13)"/><text x="26.5243%" y="639.50"></text></g><g><title>__clock_gettime_2 (9 samples, 0.14%)</title><rect x="26.2743%" y="613" width="0.1365%" height="15" fill="rgb(249,199,10)"/><text x="26.5243%" y="623.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.11%)</title><rect x="26.3046%" y="597" width="0.1062%" height="15" fill="rgb(249,222,13)"/><text x="26.5546%" y="607.50"></text></g><g><title>_int_free (7 samples, 0.11%)</title><rect x="26.4867%" y="645" width="0.1062%" height="15" fill="rgb(244,185,38)"/><text x="26.7367%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.17%)</title><rect x="26.4411%" y="661" width="0.1669%" height="15" fill="rgb(236,202,9)"/><text x="26.6911%" y="671.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (11 samples, 0.17%)</title><rect x="26.6839%" y="661" width="0.1669%" height="15" fill="rgb(250,229,37)"/><text x="26.9339%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (7 samples, 0.11%)</title><rect x="26.7445%" y="645" width="0.1062%" height="15" fill="rgb(206,174,23)"/><text x="26.9945%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (24 samples, 0.36%)</title><rect x="27.7154%" y="597" width="0.3641%" height="15" fill="rgb(211,33,43)"/><text x="27.9654%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (22 samples, 0.33%)</title><rect x="27.7458%" y="581" width="0.3337%" height="15" fill="rgb(245,58,50)"/><text x="27.9958%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (34 samples, 0.52%)</title><rect x="27.6547%" y="613" width="0.5158%" height="15" fill="rgb(244,68,36)"/><text x="27.9047%" y="623.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.12%)</title><rect x="28.4739%" y="597" width="0.1214%" height="15" fill="rgb(232,229,15)"/><text x="28.7239%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.11%)</title><rect x="28.8987%" y="581" width="0.1062%" height="15" fill="rgb(254,30,23)"/><text x="29.1487%" y="591.50"></text></g><g><title>core::fmt::write (103 samples, 1.56%)</title><rect x="27.4575%" y="645" width="1.5625%" height="15" fill="rgb(235,160,14)"/><text x="27.7075%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (94 samples, 1.43%)</title><rect x="27.5941%" y="629" width="1.4260%" height="15" fill="rgb(212,155,44)"/><text x="27.8441%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (46 samples, 0.70%)</title><rect x="28.3222%" y="613" width="0.6978%" height="15" fill="rgb(226,2,50)"/><text x="28.5722%" y="623.50"></text></g><g><title>core::fmt::write (13 samples, 0.20%)</title><rect x="28.8228%" y="597" width="0.1972%" height="15" fill="rgb(234,177,6)"/><text x="29.0728%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.14%)</title><rect x="29.1869%" y="629" width="0.1365%" height="15" fill="rgb(217,24,9)"/><text x="29.4369%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (25 samples, 0.38%)</title><rect x="29.0200%" y="645" width="0.3792%" height="15" fill="rgb(220,13,46)"/><text x="29.2700%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.15%)</title><rect x="29.3993%" y="645" width="0.1517%" height="15" fill="rgb(239,221,27)"/><text x="29.6493%" y="655.50"></text></g><g><title>&lt;decor_mem::views::HashedRowPtr as core::cmp::PartialEq&gt;::eq (7 samples, 0.11%)</title><rect x="29.7785%" y="629" width="0.1062%" height="15" fill="rgb(222,198,25)"/><text x="30.0285%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::remove (26 samples, 0.39%)</title><rect x="29.5510%" y="645" width="0.3944%" height="15" fill="rgb(211,99,13)"/><text x="29.8010%" y="655.50"></text></g><g><title>std::time::Instant::elapsed (12 samples, 0.18%)</title><rect x="29.9454%" y="645" width="0.1820%" height="15" fill="rgb(232,111,31)"/><text x="30.1954%" y="655.50"></text></g><g><title>decor_mem::views::Views::delete (252 samples, 3.82%)</title><rect x="26.4108%" y="677" width="3.8228%" height="15" fill="rgb(245,82,37)"/><text x="26.6608%" y="687.50">deco..</text></g><g><title>decor_mem::views::View::update_index_and_row (223 samples, 3.38%)</title><rect x="26.8507%" y="661" width="3.3829%" height="15" fill="rgb(227,149,46)"/><text x="27.1007%" y="671.50">dec..</text></g><g><title>std::time::Instant::now (7 samples, 0.11%)</title><rect x="30.1274%" y="645" width="0.1062%" height="15" fill="rgb(218,36,50)"/><text x="30.3774%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.11%)</title><rect x="30.1274%" y="629" width="0.1062%" height="15" fill="rgb(226,80,48)"/><text x="30.3774%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (7 samples, 0.11%)</title><rect x="30.1274%" y="613" width="0.1062%" height="15" fill="rgb(238,224,15)"/><text x="30.3774%" y="623.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (1,267 samples, 19.22%)</title><rect x="11.0285%" y="725" width="19.2203%" height="15" fill="rgb(241,136,10)"/><text x="11.2785%" y="735.50">&lt;decor_mem::Shim as msql_srv::..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (1,267 samples, 19.22%)</title><rect x="11.0285%" y="709" width="19.2203%" height="15" fill="rgb(208,32,45)"/><text x="11.2785%" y="719.50">decor_mem::query_transformer::..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (1,153 samples, 17.49%)</title><rect x="12.7579%" y="693" width="17.4909%" height="15" fill="rgb(207,135,9)"/><text x="13.0079%" y="703.50">decor_mem::query_transforme..</text></g><g><title>__dev_queue_xmit (7 samples, 0.11%)</title><rect x="30.5067%" y="357" width="0.1062%" height="15" fill="rgb(206,86,44)"/><text x="30.7567%" y="367.50"></text></g><g><title>sock_def_readable (14 samples, 0.21%)</title><rect x="30.7646%" y="133" width="0.2124%" height="15" fill="rgb(245,177,15)"/><text x="31.0146%" y="143.50"></text></g><g><title>__wake_up_common_lock (13 samples, 0.20%)</title><rect x="30.7797%" y="117" width="0.1972%" height="15" fill="rgb(206,64,50)"/><text x="31.0297%" y="127.50"></text></g><g><title>__wake_up_common (13 samples, 0.20%)</title><rect x="30.7797%" y="101" width="0.1972%" height="15" fill="rgb(234,36,40)"/><text x="31.0297%" y="111.50"></text></g><g><title>pollwake (13 samples, 0.20%)</title><rect x="30.7797%" y="85" width="0.1972%" height="15" fill="rgb(213,64,8)"/><text x="31.0297%" y="95.50"></text></g><g><title>try_to_wake_up (13 samples, 0.20%)</title><rect x="30.7797%" y="69" width="0.1972%" height="15" fill="rgb(210,75,36)"/><text x="31.0297%" y="79.50"></text></g><g><title>tcp_ack (7 samples, 0.11%)</title><rect x="30.9769%" y="133" width="0.1062%" height="15" fill="rgb(229,88,21)"/><text x="31.2269%" y="143.50"></text></g><g><title>ip_local_deliver (28 samples, 0.42%)</title><rect x="30.6735%" y="229" width="0.4248%" height="15" fill="rgb(252,204,47)"/><text x="30.9235%" y="239.50"></text></g><g><title>ip_local_deliver_finish (27 samples, 0.41%)</title><rect x="30.6887%" y="213" width="0.4096%" height="15" fill="rgb(208,77,27)"/><text x="30.9387%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (27 samples, 0.41%)</title><rect x="30.6887%" y="197" width="0.4096%" height="15" fill="rgb(221,76,26)"/><text x="30.9387%" y="207.50"></text></g><g><title>tcp_v4_rcv (26 samples, 0.39%)</title><rect x="30.7039%" y="181" width="0.3944%" height="15" fill="rgb(225,139,18)"/><text x="30.9539%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (24 samples, 0.36%)</title><rect x="30.7342%" y="165" width="0.3641%" height="15" fill="rgb(230,137,11)"/><text x="30.9842%" y="175.50"></text></g><g><title>tcp_rcv_established (24 samples, 0.36%)</title><rect x="30.7342%" y="149" width="0.3641%" height="15" fill="rgb(212,28,1)"/><text x="30.9842%" y="159.50"></text></g><g><title>do_softirq (32 samples, 0.49%)</title><rect x="30.6280%" y="341" width="0.4854%" height="15" fill="rgb(248,164,17)"/><text x="30.8780%" y="351.50"></text></g><g><title>do_softirq_own_stack (32 samples, 0.49%)</title><rect x="30.6280%" y="325" width="0.4854%" height="15" fill="rgb(222,171,42)"/><text x="30.8780%" y="335.50"></text></g><g><title>__do_softirq (32 samples, 0.49%)</title><rect x="30.6280%" y="309" width="0.4854%" height="15" fill="rgb(243,84,45)"/><text x="30.8780%" y="319.50"></text></g><g><title>net_rx_action (30 samples, 0.46%)</title><rect x="30.6584%" y="293" width="0.4551%" height="15" fill="rgb(252,49,23)"/><text x="30.9084%" y="303.50"></text></g><g><title>process_backlog (29 samples, 0.44%)</title><rect x="30.6735%" y="277" width="0.4399%" height="15" fill="rgb(215,19,7)"/><text x="30.9235%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (29 samples, 0.44%)</title><rect x="30.6735%" y="261" width="0.4399%" height="15" fill="rgb(238,81,41)"/><text x="30.9235%" y="271.50"></text></g><g><title>ip_rcv (29 samples, 0.44%)</title><rect x="30.6735%" y="245" width="0.4399%" height="15" fill="rgb(210,199,37)"/><text x="30.9235%" y="255.50"></text></g><g><title>__ip_queue_xmit (42 samples, 0.64%)</title><rect x="30.4915%" y="405" width="0.6371%" height="15" fill="rgb(244,192,49)"/><text x="30.7415%" y="415.50"></text></g><g><title>ip_output (42 samples, 0.64%)</title><rect x="30.4915%" y="389" width="0.6371%" height="15" fill="rgb(226,211,11)"/><text x="30.7415%" y="399.50"></text></g><g><title>ip_finish_output2 (42 samples, 0.64%)</title><rect x="30.4915%" y="373" width="0.6371%" height="15" fill="rgb(236,162,54)"/><text x="30.7415%" y="383.50"></text></g><g><title>__local_bh_enable_ip (34 samples, 0.52%)</title><rect x="30.6129%" y="357" width="0.5158%" height="15" fill="rgb(220,229,9)"/><text x="30.8629%" y="367.50"></text></g><g><title>__tcp_transmit_skb (46 samples, 0.70%)</title><rect x="30.4612%" y="421" width="0.6978%" height="15" fill="rgb(250,87,22)"/><text x="30.7112%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (49 samples, 0.74%)</title><rect x="30.4460%" y="453" width="0.7433%" height="15" fill="rgb(239,43,17)"/><text x="30.6960%" y="463.50"></text></g><g><title>tcp_write_xmit (49 samples, 0.74%)</title><rect x="30.4460%" y="437" width="0.7433%" height="15" fill="rgb(231,177,25)"/><text x="30.6960%" y="447.50"></text></g><g><title>sock_sendmsg (58 samples, 0.88%)</title><rect x="30.4157%" y="501" width="0.8799%" height="15" fill="rgb(219,179,1)"/><text x="30.6657%" y="511.50"></text></g><g><title>tcp_sendmsg (58 samples, 0.88%)</title><rect x="30.4157%" y="485" width="0.8799%" height="15" fill="rgb(238,219,53)"/><text x="30.6657%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (56 samples, 0.85%)</title><rect x="30.4460%" y="469" width="0.8495%" height="15" fill="rgb(232,167,36)"/><text x="30.6960%" y="479.50"></text></g><g><title>__x64_sys_sendto (61 samples, 0.93%)</title><rect x="30.4157%" y="533" width="0.9254%" height="15" fill="rgb(244,19,51)"/><text x="30.6657%" y="543.50"></text></g><g><title>__sys_sendto (61 samples, 0.93%)</title><rect x="30.4157%" y="517" width="0.9254%" height="15" fill="rgb(224,6,22)"/><text x="30.6657%" y="527.50"></text></g><g><title>do_syscall_64 (62 samples, 0.94%)</title><rect x="30.4157%" y="549" width="0.9405%" height="15" fill="rgb(224,145,5)"/><text x="30.6657%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (64 samples, 0.97%)</title><rect x="30.4157%" y="565" width="0.9709%" height="15" fill="rgb(234,130,49)"/><text x="30.6657%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (70 samples, 1.06%)</title><rect x="30.3398%" y="677" width="1.0619%" height="15" fill="rgb(254,6,2)"/><text x="30.5898%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (68 samples, 1.03%)</title><rect x="30.3701%" y="661" width="1.0316%" height="15" fill="rgb(208,96,46)"/><text x="30.6201%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (68 samples, 1.03%)</title><rect x="30.3701%" y="645" width="1.0316%" height="15" fill="rgb(239,3,39)"/><text x="30.6201%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (66 samples, 1.00%)</title><rect x="30.4005%" y="629" width="1.0012%" height="15" fill="rgb(233,210,1)"/><text x="30.6505%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (66 samples, 1.00%)</title><rect x="30.4005%" y="613" width="1.0012%" height="15" fill="rgb(244,137,37)"/><text x="30.6505%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (66 samples, 1.00%)</title><rect x="30.4005%" y="597" width="1.0012%" height="15" fill="rgb(240,136,2)"/><text x="30.6505%" y="607.50"></text></g><g><title>__libc_send (66 samples, 1.00%)</title><rect x="30.4005%" y="581" width="1.0012%" height="15" fill="rgb(239,18,37)"/><text x="30.6505%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.11%)</title><rect x="31.4472%" y="597" width="0.1062%" height="15" fill="rgb(218,185,22)"/><text x="31.6972%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.11%)</title><rect x="31.4472%" y="581" width="0.1062%" height="15" fill="rgb(225,218,4)"/><text x="31.6972%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.11%)</title><rect x="31.4472%" y="565" width="0.1062%" height="15" fill="rgb(230,182,32)"/><text x="31.6972%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (22 samples, 0.33%)</title><rect x="31.4472%" y="613" width="0.3337%" height="15" fill="rgb(242,56,43)"/><text x="31.6972%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.23%)</title><rect x="31.5534%" y="597" width="0.2275%" height="15" fill="rgb(233,99,24)"/><text x="31.8034%" y="607.50"></text></g><g><title>alloc::fmt::format (30 samples, 0.46%)</title><rect x="31.4320%" y="677" width="0.4551%" height="15" fill="rgb(234,209,42)"/><text x="31.6820%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (30 samples, 0.46%)</title><rect x="31.4320%" y="661" width="0.4551%" height="15" fill="rgb(227,7,12)"/><text x="31.6820%" y="671.50"></text></g><g><title>core::fmt::write (30 samples, 0.46%)</title><rect x="31.4320%" y="645" width="0.4551%" height="15" fill="rgb(245,203,43)"/><text x="31.6820%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (30 samples, 0.46%)</title><rect x="31.4320%" y="629" width="0.4551%" height="15" fill="rgb(238,205,33)"/><text x="31.6820%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.11%)</title><rect x="31.7809%" y="613" width="0.1062%" height="15" fill="rgb(231,56,7)"/><text x="32.0309%" y="623.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (144 samples, 2.18%)</title><rect x="30.2488%" y="693" width="2.1845%" height="15" fill="rgb(244,186,29)"/><text x="30.4988%" y="703.50">d..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.55%)</title><rect x="31.8871%" y="677" width="0.5461%" height="15" fill="rgb(234,111,31)"/><text x="32.1371%" y="687.50"></text></g><g><title>__GI___libc_malloc (36 samples, 0.55%)</title><rect x="31.8871%" y="661" width="0.5461%" height="15" fill="rgb(241,149,10)"/><text x="32.1371%" y="671.50"></text></g><g><title>_int_malloc (36 samples, 0.55%)</title><rect x="31.8871%" y="645" width="0.5461%" height="15" fill="rgb(249,206,44)"/><text x="32.1371%" y="655.50"></text></g><g><title>malloc_consolidate (28 samples, 0.42%)</title><rect x="32.0085%" y="629" width="0.4248%" height="15" fill="rgb(251,153,30)"/><text x="32.2585%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.14%)</title><rect x="32.4333%" y="677" width="0.1365%" height="15" fill="rgb(239,152,38)"/><text x="32.6833%" y="687.50"></text></g><g><title>core::fmt::write (7 samples, 0.11%)</title><rect x="32.9187%" y="661" width="0.1062%" height="15" fill="rgb(249,139,47)"/><text x="33.1687%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (7 samples, 0.11%)</title><rect x="32.9187%" y="645" width="0.1062%" height="15" fill="rgb(244,64,35)"/><text x="33.1687%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.36%)</title><rect x="32.6760%" y="677" width="0.3641%" height="15" fill="rgb(216,46,15)"/><text x="32.9260%" y="687.50"></text></g><g><title>__wake_up_common (10 samples, 0.15%)</title><rect x="33.5558%" y="101" width="0.1517%" height="15" fill="rgb(250,74,19)"/><text x="33.8058%" y="111.50"></text></g><g><title>pollwake (10 samples, 0.15%)</title><rect x="33.5558%" y="85" width="0.1517%" height="15" fill="rgb(249,42,33)"/><text x="33.8058%" y="95.50"></text></g><g><title>try_to_wake_up (10 samples, 0.15%)</title><rect x="33.5558%" y="69" width="0.1517%" height="15" fill="rgb(242,149,17)"/><text x="33.8058%" y="79.50"></text></g><g><title>sock_def_readable (11 samples, 0.17%)</title><rect x="33.5558%" y="133" width="0.1669%" height="15" fill="rgb(244,29,21)"/><text x="33.8058%" y="143.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.17%)</title><rect x="33.5558%" y="117" width="0.1669%" height="15" fill="rgb(220,130,37)"/><text x="33.8058%" y="127.50"></text></g><g><title>tcp_ack (11 samples, 0.17%)</title><rect x="33.7227%" y="133" width="0.1669%" height="15" fill="rgb(211,67,2)"/><text x="33.9727%" y="143.50"></text></g><g><title>ip_local_deliver (29 samples, 0.44%)</title><rect x="33.4648%" y="229" width="0.4399%" height="15" fill="rgb(235,68,52)"/><text x="33.7148%" y="239.50"></text></g><g><title>ip_local_deliver_finish (28 samples, 0.42%)</title><rect x="33.4800%" y="213" width="0.4248%" height="15" fill="rgb(246,142,3)"/><text x="33.7300%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (28 samples, 0.42%)</title><rect x="33.4800%" y="197" width="0.4248%" height="15" fill="rgb(241,25,7)"/><text x="33.7300%" y="207.50"></text></g><g><title>tcp_v4_rcv (27 samples, 0.41%)</title><rect x="33.4951%" y="181" width="0.4096%" height="15" fill="rgb(242,119,39)"/><text x="33.7451%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (24 samples, 0.36%)</title><rect x="33.5407%" y="165" width="0.3641%" height="15" fill="rgb(241,98,45)"/><text x="33.7907%" y="175.50"></text></g><g><title>tcp_rcv_established (24 samples, 0.36%)</title><rect x="33.5407%" y="149" width="0.3641%" height="15" fill="rgb(254,28,30)"/><text x="33.7907%" y="159.50"></text></g><g><title>ip_finish_output2 (46 samples, 0.70%)</title><rect x="33.2524%" y="373" width="0.6978%" height="15" fill="rgb(241,142,54)"/><text x="33.5024%" y="383.50"></text></g><g><title>__local_bh_enable_ip (38 samples, 0.58%)</title><rect x="33.3738%" y="357" width="0.5765%" height="15" fill="rgb(222,85,15)"/><text x="33.6238%" y="367.50"></text></g><g><title>do_softirq (38 samples, 0.58%)</title><rect x="33.3738%" y="341" width="0.5765%" height="15" fill="rgb(210,85,47)"/><text x="33.6238%" y="351.50"></text></g><g><title>do_softirq_own_stack (36 samples, 0.55%)</title><rect x="33.4041%" y="325" width="0.5461%" height="15" fill="rgb(224,206,25)"/><text x="33.6541%" y="335.50"></text></g><g><title>__do_softirq (36 samples, 0.55%)</title><rect x="33.4041%" y="309" width="0.5461%" height="15" fill="rgb(243,201,19)"/><text x="33.6541%" y="319.50"></text></g><g><title>net_rx_action (36 samples, 0.55%)</title><rect x="33.4041%" y="293" width="0.5461%" height="15" fill="rgb(236,59,4)"/><text x="33.6541%" y="303.50"></text></g><g><title>process_backlog (34 samples, 0.52%)</title><rect x="33.4345%" y="277" width="0.5158%" height="15" fill="rgb(254,179,45)"/><text x="33.6845%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (33 samples, 0.50%)</title><rect x="33.4496%" y="261" width="0.5006%" height="15" fill="rgb(226,14,10)"/><text x="33.6996%" y="271.50"></text></g><g><title>ip_rcv (32 samples, 0.49%)</title><rect x="33.4648%" y="245" width="0.4854%" height="15" fill="rgb(244,27,41)"/><text x="33.7148%" y="255.50"></text></g><g><title>__ip_queue_xmit (48 samples, 0.73%)</title><rect x="33.2524%" y="405" width="0.7282%" height="15" fill="rgb(235,35,32)"/><text x="33.5024%" y="415.50"></text></g><g><title>ip_output (48 samples, 0.73%)</title><rect x="33.2524%" y="389" width="0.7282%" height="15" fill="rgb(218,68,31)"/><text x="33.5024%" y="399.50"></text></g><g><title>__tcp_transmit_skb (51 samples, 0.77%)</title><rect x="33.2373%" y="421" width="0.7737%" height="15" fill="rgb(207,120,37)"/><text x="33.4873%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (57 samples, 0.86%)</title><rect x="33.1766%" y="453" width="0.8647%" height="15" fill="rgb(227,98,0)"/><text x="33.4266%" y="463.50"></text></g><g><title>tcp_write_xmit (56 samples, 0.85%)</title><rect x="33.1917%" y="437" width="0.8495%" height="15" fill="rgb(207,7,3)"/><text x="33.4417%" y="447.50"></text></g><g><title>__x64_sys_sendto (68 samples, 1.03%)</title><rect x="33.0856%" y="533" width="1.0316%" height="15" fill="rgb(206,98,19)"/><text x="33.3356%" y="543.50"></text></g><g><title>__sys_sendto (67 samples, 1.02%)</title><rect x="33.1007%" y="517" width="1.0164%" height="15" fill="rgb(217,5,26)"/><text x="33.3507%" y="527.50"></text></g><g><title>sock_sendmsg (64 samples, 0.97%)</title><rect x="33.1462%" y="501" width="0.9709%" height="15" fill="rgb(235,190,38)"/><text x="33.3962%" y="511.50"></text></g><g><title>tcp_sendmsg (63 samples, 0.96%)</title><rect x="33.1614%" y="485" width="0.9557%" height="15" fill="rgb(247,86,24)"/><text x="33.4114%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (62 samples, 0.94%)</title><rect x="33.1766%" y="469" width="0.9405%" height="15" fill="rgb(205,101,16)"/><text x="33.4266%" y="479.50"></text></g><g><title>do_syscall_64 (69 samples, 1.05%)</title><rect x="33.0856%" y="549" width="1.0467%" height="15" fill="rgb(246,168,33)"/><text x="33.3356%" y="559.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (72 samples, 1.09%)</title><rect x="33.0552%" y="613" width="1.0922%" height="15" fill="rgb(231,114,1)"/><text x="33.3052%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (72 samples, 1.09%)</title><rect x="33.0552%" y="597" width="1.0922%" height="15" fill="rgb(207,184,53)"/><text x="33.3052%" y="607.50"></text></g><g><title>__libc_send (72 samples, 1.09%)</title><rect x="33.0552%" y="581" width="1.0922%" height="15" fill="rgb(224,95,51)"/><text x="33.3052%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (70 samples, 1.06%)</title><rect x="33.0856%" y="565" width="1.0619%" height="15" fill="rgb(212,188,45)"/><text x="33.3356%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (74 samples, 1.12%)</title><rect x="33.0400%" y="677" width="1.1226%" height="15" fill="rgb(223,154,38)"/><text x="33.2900%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (74 samples, 1.12%)</title><rect x="33.0400%" y="661" width="1.1226%" height="15" fill="rgb(251,22,52)"/><text x="33.2900%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (74 samples, 1.12%)</title><rect x="33.0400%" y="645" width="1.1226%" height="15" fill="rgb(229,209,22)"/><text x="33.2900%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (73 samples, 1.11%)</title><rect x="33.0552%" y="629" width="1.1074%" height="15" fill="rgb(234,138,34)"/><text x="33.3052%" y="639.50"></text></g><g><title>perf_event_mmap (10 samples, 0.15%)</title><rect x="34.6025%" y="517" width="0.1517%" height="15" fill="rgb(212,95,11)"/><text x="34.8525%" y="527.50"></text></g><g><title>perf_iterate_sb (10 samples, 0.15%)</title><rect x="34.6025%" y="501" width="0.1517%" height="15" fill="rgb(240,179,47)"/><text x="34.8525%" y="511.50"></text></g><g><title>perf_iterate_ctx (9 samples, 0.14%)</title><rect x="34.6177%" y="485" width="0.1365%" height="15" fill="rgb(240,163,11)"/><text x="34.8677%" y="495.50"></text></g><g><title>__x64_sys_mprotect (15 samples, 0.23%)</title><rect x="34.5570%" y="565" width="0.2275%" height="15" fill="rgb(236,37,12)"/><text x="34.8070%" y="575.50"></text></g><g><title>do_mprotect_pkey (15 samples, 0.23%)</title><rect x="34.5570%" y="549" width="0.2275%" height="15" fill="rgb(232,164,16)"/><text x="34.8070%" y="559.50"></text></g><g><title>mprotect_fixup (13 samples, 0.20%)</title><rect x="34.5874%" y="533" width="0.1972%" height="15" fill="rgb(244,205,15)"/><text x="34.8374%" y="543.50"></text></g><g><title>do_syscall_64 (16 samples, 0.24%)</title><rect x="34.5570%" y="581" width="0.2427%" height="15" fill="rgb(223,117,47)"/><text x="34.8070%" y="591.50"></text></g><g><title>__GI___mprotect (17 samples, 0.26%)</title><rect x="34.5570%" y="613" width="0.2579%" height="15" fill="rgb(244,107,35)"/><text x="34.8070%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.26%)</title><rect x="34.5570%" y="597" width="0.2579%" height="15" fill="rgb(205,140,8)"/><text x="34.8070%" y="607.50"></text></g><g><title>page_fault (13 samples, 0.20%)</title><rect x="34.8301%" y="613" width="0.1972%" height="15" fill="rgb(228,84,46)"/><text x="35.0801%" y="623.50"></text></g><g><title>do_user_addr_fault (13 samples, 0.20%)</title><rect x="34.8301%" y="597" width="0.1972%" height="15" fill="rgb(254,188,9)"/><text x="35.0801%" y="607.50"></text></g><g><title>handle_mm_fault (13 samples, 0.20%)</title><rect x="34.8301%" y="581" width="0.1972%" height="15" fill="rgb(206,112,54)"/><text x="35.0801%" y="591.50"></text></g><g><title>__handle_mm_fault (13 samples, 0.20%)</title><rect x="34.8301%" y="565" width="0.1972%" height="15" fill="rgb(216,84,49)"/><text x="35.0801%" y="575.50"></text></g><g><title>__GI___libc_malloc (46 samples, 0.70%)</title><rect x="34.3447%" y="661" width="0.6978%" height="15" fill="rgb(214,194,35)"/><text x="34.5947%" y="671.50"></text></g><g><title>_int_malloc (44 samples, 0.67%)</title><rect x="34.3750%" y="645" width="0.6675%" height="15" fill="rgb(249,28,3)"/><text x="34.6250%" y="655.50"></text></g><g><title>sysmalloc (34 samples, 0.52%)</title><rect x="34.5267%" y="629" width="0.5158%" height="15" fill="rgb(222,56,52)"/><text x="34.7767%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.73%)</title><rect x="34.3295%" y="677" width="0.7282%" height="15" fill="rgb(245,217,50)"/><text x="34.5795%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (7 samples, 0.11%)</title><rect x="35.0576%" y="661" width="0.1062%" height="15" fill="rgb(213,201,24)"/><text x="35.3076%" y="671.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.12%)</title><rect x="35.3004%" y="565" width="0.1214%" height="15" fill="rgb(248,116,28)"/><text x="35.5504%" y="575.50"></text></g><g><title>_int_malloc (7 samples, 0.11%)</title><rect x="35.3155%" y="549" width="0.1062%" height="15" fill="rgb(219,72,43)"/><text x="35.5655%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (26 samples, 0.39%)</title><rect x="35.2093%" y="597" width="0.3944%" height="15" fill="rgb(209,138,14)"/><text x="35.4593%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (25 samples, 0.38%)</title><rect x="35.2245%" y="581" width="0.3792%" height="15" fill="rgb(222,18,33)"/><text x="35.4745%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (32 samples, 0.49%)</title><rect x="35.2093%" y="613" width="0.4854%" height="15" fill="rgb(213,199,7)"/><text x="35.4593%" y="623.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.12%)</title><rect x="35.8010%" y="597" width="0.1214%" height="15" fill="rgb(250,110,10)"/><text x="36.0510%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.17%)</title><rect x="36.1347%" y="597" width="0.1669%" height="15" fill="rgb(248,123,6)"/><text x="36.3847%" y="607.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.12%)</title><rect x="36.1802%" y="581" width="0.1214%" height="15" fill="rgb(206,91,31)"/><text x="36.4302%" y="591.50"></text></g><g><title>_int_realloc (8 samples, 0.12%)</title><rect x="36.1802%" y="565" width="0.1214%" height="15" fill="rgb(211,154,13)"/><text x="36.4302%" y="575.50"></text></g><g><title>_int_malloc (7 samples, 0.11%)</title><rect x="36.1954%" y="549" width="0.1062%" height="15" fill="rgb(225,148,7)"/><text x="36.4454%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.15%)</title><rect x="36.3774%" y="581" width="0.1517%" height="15" fill="rgb(220,160,43)"/><text x="36.6274%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (94 samples, 1.43%)</title><rect x="35.1638%" y="645" width="1.4260%" height="15" fill="rgb(213,52,39)"/><text x="35.4138%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (94 samples, 1.43%)</title><rect x="35.1638%" y="629" width="1.4260%" height="15" fill="rgb(243,137,7)"/><text x="35.4138%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (59 samples, 0.90%)</title><rect x="35.6948%" y="613" width="0.8950%" height="15" fill="rgb(230,79,13)"/><text x="35.9448%" y="623.50"></text></g><g><title>core::fmt::write (19 samples, 0.29%)</title><rect x="36.3016%" y="597" width="0.2882%" height="15" fill="rgb(247,105,23)"/><text x="36.5516%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.15%)</title><rect x="36.6050%" y="597" width="0.1517%" height="15" fill="rgb(223,179,41)"/><text x="36.8550%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.18%)</title><rect x="36.5898%" y="629" width="0.1820%" height="15" fill="rgb(218,9,34)"/><text x="36.8398%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 0.18%)</title><rect x="36.5898%" y="613" width="0.1820%" height="15" fill="rgb(222,106,8)"/><text x="36.8398%" y="623.50"></text></g><g><title>core::fmt::write (120 samples, 1.82%)</title><rect x="35.0576%" y="677" width="1.8204%" height="15" fill="rgb(211,220,0)"/><text x="35.3076%" y="687.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (113 samples, 1.71%)</title><rect x="35.1638%" y="661" width="1.7142%" height="15" fill="rgb(229,52,16)"/><text x="35.4138%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.29%)</title><rect x="36.5898%" y="645" width="0.2882%" height="15" fill="rgb(212,155,18)"/><text x="36.8398%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.11%)</title><rect x="36.7718%" y="629" width="0.1062%" height="15" fill="rgb(242,21,14)"/><text x="37.0218%" y="639.50"></text></g><g><title>_int_free (10 samples, 0.15%)</title><rect x="36.9842%" y="613" width="0.1517%" height="15" fill="rgb(222,19,48)"/><text x="37.2342%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.33%)</title><rect x="36.8780%" y="677" width="0.3337%" height="15" fill="rgb(232,45,27)"/><text x="37.1280%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.29%)</title><rect x="36.9235%" y="661" width="0.2882%" height="15" fill="rgb(249,103,42)"/><text x="37.1735%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.29%)</title><rect x="36.9235%" y="645" width="0.2882%" height="15" fill="rgb(246,81,33)"/><text x="37.1735%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.29%)</title><rect x="36.9235%" y="629" width="0.2882%" height="15" fill="rgb(252,33,42)"/><text x="37.1735%" y="639.50"></text></g><g><title>decor_mem::helpers::get_default_parser_val_with (7 samples, 0.11%)</title><rect x="37.2421%" y="677" width="0.1062%" height="15" fill="rgb(209,212,41)"/><text x="37.4921%" y="687.50"></text></g><g><title>core::fmt::write (9 samples, 0.14%)</title><rect x="37.3786%" y="661" width="0.1365%" height="15" fill="rgb(207,154,6)"/><text x="37.6286%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (7 samples, 0.11%)</title><rect x="37.4090%" y="645" width="0.1062%" height="15" fill="rgb(223,64,47)"/><text x="37.6590%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (7 samples, 0.11%)</title><rect x="37.4090%" y="629" width="0.1062%" height="15" fill="rgb(211,161,38)"/><text x="37.6590%" y="639.50"></text></g><g><title>decor_mem::helpers::get_random_parser_val_from (12 samples, 0.18%)</title><rect x="37.3483%" y="677" width="0.1820%" height="15" fill="rgb(219,138,40)"/><text x="37.5983%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.20%)</title><rect x="37.7579%" y="661" width="0.1972%" height="15" fill="rgb(241,228,46)"/><text x="38.0079%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.20%)</title><rect x="37.7579%" y="645" width="0.1972%" height="15" fill="rgb(223,209,38)"/><text x="38.0079%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.20%)</title><rect x="37.7579%" y="629" width="0.1972%" height="15" fill="rgb(236,164,45)"/><text x="38.0079%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.20%)</title><rect x="37.7579%" y="613" width="0.1972%" height="15" fill="rgb(231,15,5)"/><text x="38.0079%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.17%)</title><rect x="37.7882%" y="597" width="0.1669%" height="15" fill="rgb(252,35,15)"/><text x="38.0382%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (11 samples, 0.17%)</title><rect x="37.7882%" y="581" width="0.1669%" height="15" fill="rgb(248,181,18)"/><text x="38.0382%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.17%)</title><rect x="37.7882%" y="565" width="0.1669%" height="15" fill="rgb(233,39,42)"/><text x="38.0382%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.17%)</title><rect x="37.7882%" y="549" width="0.1669%" height="15" fill="rgb(238,110,33)"/><text x="38.0382%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (11 samples, 0.17%)</title><rect x="37.7882%" y="533" width="0.1669%" height="15" fill="rgb(233,195,10)"/><text x="38.0382%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.17%)</title><rect x="37.7882%" y="517" width="0.1669%" height="15" fill="rgb(254,105,3)"/><text x="38.0382%" y="527.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.17%)</title><rect x="37.7882%" y="501" width="0.1669%" height="15" fill="rgb(221,225,9)"/><text x="38.0382%" y="511.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.17%)</title><rect x="37.7882%" y="485" width="0.1669%" height="15" fill="rgb(224,227,45)"/><text x="38.0382%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.11%)</title><rect x="38.0613%" y="661" width="0.1062%" height="15" fill="rgb(229,198,43)"/><text x="38.3113%" y="671.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.11%)</title><rect x="38.0613%" y="645" width="0.1062%" height="15" fill="rgb(206,209,35)"/><text x="38.3113%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.17%)</title><rect x="38.6833%" y="597" width="0.1669%" height="15" fill="rgb(245,195,53)"/><text x="38.9333%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.14%)</title><rect x="38.7136%" y="581" width="0.1365%" height="15" fill="rgb(240,92,26)"/><text x="38.9636%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.18%)</title><rect x="38.6833%" y="613" width="0.1820%" height="15" fill="rgb(207,40,23)"/><text x="38.9333%" y="623.50"></text></g><g><title>core::fmt::write (15 samples, 0.23%)</title><rect x="38.6529%" y="645" width="0.2275%" height="15" fill="rgb(223,111,35)"/><text x="38.9029%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (14 samples, 0.21%)</title><rect x="38.6681%" y="629" width="0.2124%" height="15" fill="rgb(229,147,28)"/><text x="38.9181%" y="639.50"></text></g><g><title>__lru_cache_add (8 samples, 0.12%)</title><rect x="39.6996%" y="549" width="0.1214%" height="15" fill="rgb(211,29,28)"/><text x="39.9496%" y="559.50"></text></g><g><title>clear_page_erms (32 samples, 0.49%)</title><rect x="40.1396%" y="469" width="0.4854%" height="15" fill="rgb(228,72,33)"/><text x="40.3896%" y="479.50"></text></g><g><title>alloc_pages_vma (51 samples, 0.77%)</title><rect x="39.8665%" y="549" width="0.7737%" height="15" fill="rgb(205,214,31)"/><text x="40.1165%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (50 samples, 0.76%)</title><rect x="39.8817%" y="533" width="0.7585%" height="15" fill="rgb(224,111,15)"/><text x="40.1317%" y="543.50"></text></g><g><title>get_page_from_freelist (47 samples, 0.71%)</title><rect x="39.9272%" y="517" width="0.7130%" height="15" fill="rgb(253,21,26)"/><text x="40.1772%" y="527.50"></text></g><g><title>prep_new_page (38 samples, 0.58%)</title><rect x="40.0637%" y="501" width="0.5765%" height="15" fill="rgb(245,139,43)"/><text x="40.3137%" y="511.50"></text></g><g><title>kernel_init_free_pages (36 samples, 0.55%)</title><rect x="40.0941%" y="485" width="0.5461%" height="15" fill="rgb(252,170,7)"/><text x="40.3441%" y="495.50"></text></g><g><title>mem_cgroup_commit_charge (7 samples, 0.11%)</title><rect x="40.6402%" y="549" width="0.1062%" height="15" fill="rgb(231,118,14)"/><text x="40.8902%" y="559.50"></text></g><g><title>get_mem_cgroup_from_mm (8 samples, 0.12%)</title><rect x="40.9132%" y="517" width="0.1214%" height="15" fill="rgb(238,83,0)"/><text x="41.1632%" y="527.50"></text></g><g><title>mem_cgroup_try_charge_delay (28 samples, 0.42%)</title><rect x="40.7464%" y="549" width="0.4248%" height="15" fill="rgb(221,39,39)"/><text x="40.9964%" y="559.50"></text></g><g><title>mem_cgroup_try_charge (22 samples, 0.33%)</title><rect x="40.8374%" y="533" width="0.3337%" height="15" fill="rgb(222,119,46)"/><text x="41.0874%" y="543.50"></text></g><g><title>try_charge (9 samples, 0.14%)</title><rect x="41.0346%" y="517" width="0.1365%" height="15" fill="rgb(222,165,49)"/><text x="41.2846%" y="527.50"></text></g><g><title>__handle_mm_fault (111 samples, 1.68%)</title><rect x="39.5479%" y="565" width="1.6839%" height="15" fill="rgb(219,113,52)"/><text x="39.7979%" y="575.50"></text></g><g><title>page_fault (127 samples, 1.93%)</title><rect x="39.3507%" y="613" width="1.9266%" height="15" fill="rgb(214,7,15)"/><text x="39.6007%" y="623.50">p..</text></g><g><title>do_user_addr_fault (125 samples, 1.90%)</title><rect x="39.3811%" y="597" width="1.8962%" height="15" fill="rgb(235,32,4)"/><text x="39.6311%" y="607.50">d..</text></g><g><title>handle_mm_fault (117 samples, 1.77%)</title><rect x="39.5024%" y="581" width="1.7749%" height="15" fill="rgb(238,90,54)"/><text x="39.7524%" y="591.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (181 samples, 2.75%)</title><rect x="38.8805%" y="645" width="2.7458%" height="15" fill="rgb(213,208,19)"/><text x="39.1305%" y="655.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (168 samples, 2.55%)</title><rect x="39.0777%" y="629" width="2.5485%" height="15" fill="rgb(233,156,4)"/><text x="39.3277%" y="639.50">ha..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (23 samples, 0.35%)</title><rect x="41.2773%" y="613" width="0.3489%" height="15" fill="rgb(207,194,5)"/><text x="41.5273%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (18 samples, 0.27%)</title><rect x="41.3532%" y="597" width="0.2731%" height="15" fill="rgb(206,111,30)"/><text x="41.6032%" y="607.50"></text></g><g><title>change_protection (11 samples, 0.17%)</title><rect x="42.1875%" y="485" width="0.1669%" height="15" fill="rgb(243,70,54)"/><text x="42.4375%" y="495.50"></text></g><g><title>debug_smp_processor_id (9 samples, 0.14%)</title><rect x="43.0825%" y="437" width="0.1365%" height="15" fill="rgb(242,28,8)"/><text x="43.3325%" y="447.50"></text></g><g><title>__task_pid_nr_ns (8 samples, 0.12%)</title><rect x="43.4314%" y="405" width="0.1214%" height="15" fill="rgb(219,106,18)"/><text x="43.6814%" y="415.50"></text></g><g><title>__perf_event_header__init_id (11 samples, 0.17%)</title><rect x="43.4163%" y="421" width="0.1669%" height="15" fill="rgb(244,222,10)"/><text x="43.6663%" y="431.50"></text></g><g><title>perf_output_copy (8 samples, 0.12%)</title><rect x="43.6742%" y="421" width="0.1214%" height="15" fill="rgb(236,179,52)"/><text x="43.9242%" y="431.50"></text></g><g><title>perf_iterate_sb (95 samples, 1.44%)</title><rect x="42.3847%" y="469" width="1.4411%" height="15" fill="rgb(213,23,39)"/><text x="42.6347%" y="479.50"></text></g><g><title>perf_iterate_ctx (88 samples, 1.33%)</title><rect x="42.4909%" y="453" width="1.3350%" height="15" fill="rgb(238,48,10)"/><text x="42.7409%" y="463.50"></text></g><g><title>perf_event_mmap_output (40 samples, 0.61%)</title><rect x="43.2191%" y="437" width="0.6068%" height="15" fill="rgb(251,196,23)"/><text x="43.4691%" y="447.50"></text></g><g><title>perf_event_mmap (98 samples, 1.49%)</title><rect x="42.3544%" y="485" width="1.4867%" height="15" fill="rgb(250,152,24)"/><text x="42.6044%" y="495.50"></text></g><g><title>__vma_adjust (8 samples, 0.12%)</title><rect x="43.8562%" y="469" width="0.1214%" height="15" fill="rgb(209,150,17)"/><text x="44.1062%" y="479.50"></text></g><g><title>vma_merge (10 samples, 0.15%)</title><rect x="43.8410%" y="485" width="0.1517%" height="15" fill="rgb(234,202,34)"/><text x="44.0910%" y="495.50"></text></g><g><title>__x64_sys_mprotect (126 samples, 1.91%)</title><rect x="42.1117%" y="533" width="1.9114%" height="15" fill="rgb(253,148,53)"/><text x="42.3617%" y="543.50">_..</text></g><g><title>do_mprotect_pkey (126 samples, 1.91%)</title><rect x="42.1117%" y="517" width="1.9114%" height="15" fill="rgb(218,129,16)"/><text x="42.3617%" y="527.50">d..</text></g><g><title>mprotect_fixup (122 samples, 1.85%)</title><rect x="42.1723%" y="501" width="1.8507%" height="15" fill="rgb(216,85,19)"/><text x="42.4223%" y="511.50">m..</text></g><g><title>do_syscall_64 (133 samples, 2.02%)</title><rect x="42.0965%" y="549" width="2.0176%" height="15" fill="rgb(235,228,7)"/><text x="42.3465%" y="559.50">d..</text></g><g><title>entry_SYSCALL_64 (159 samples, 2.41%)</title><rect x="42.0965%" y="565" width="2.4120%" height="15" fill="rgb(245,175,0)"/><text x="42.3465%" y="575.50">en..</text></g><g><title>prepare_exit_to_usermode (26 samples, 0.39%)</title><rect x="44.1141%" y="549" width="0.3944%" height="15" fill="rgb(208,168,36)"/><text x="44.3641%" y="559.50"></text></g><g><title>error_entry (9 samples, 0.14%)</title><rect x="44.5085%" y="565" width="0.1365%" height="15" fill="rgb(246,171,24)"/><text x="44.7585%" y="575.50"></text></g><g><title>__GI___mprotect (183 samples, 2.78%)</title><rect x="42.0510%" y="581" width="2.7761%" height="15" fill="rgb(215,142,24)"/><text x="42.3010%" y="591.50">__..</text></g><g><title>syscall_return_via_sysret (11 samples, 0.17%)</title><rect x="44.6602%" y="565" width="0.1669%" height="15" fill="rgb(250,187,7)"/><text x="44.9102%" y="575.50"></text></g><g><title>error_entry (8 samples, 0.12%)</title><rect x="44.8574%" y="581" width="0.1214%" height="15" fill="rgb(228,66,33)"/><text x="45.1074%" y="591.50"></text></g><g><title>__pagevec_lru_add_fn (11 samples, 0.17%)</title><rect x="45.5097%" y="485" width="0.1669%" height="15" fill="rgb(234,215,21)"/><text x="45.7597%" y="495.50"></text></g><g><title>pagevec_lru_move_fn (16 samples, 0.24%)</title><rect x="45.4642%" y="501" width="0.2427%" height="15" fill="rgb(222,191,20)"/><text x="45.7142%" y="511.50"></text></g><g><title>__lru_cache_add (19 samples, 0.29%)</title><rect x="45.4490%" y="517" width="0.2882%" height="15" fill="rgb(245,79,54)"/><text x="45.6990%" y="527.50"></text></g><g><title>clear_page_erms (43 samples, 0.65%)</title><rect x="46.1620%" y="437" width="0.6523%" height="15" fill="rgb(240,10,37)"/><text x="46.4120%" y="447.50"></text></g><g><title>alloc_pages_vma (68 samples, 1.03%)</title><rect x="45.8131%" y="517" width="1.0316%" height="15" fill="rgb(214,192,32)"/><text x="46.0631%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (67 samples, 1.02%)</title><rect x="45.8283%" y="501" width="1.0164%" height="15" fill="rgb(209,36,54)"/><text x="46.0783%" y="511.50"></text></g><g><title>get_page_from_freelist (65 samples, 0.99%)</title><rect x="45.8586%" y="485" width="0.9860%" height="15" fill="rgb(220,10,11)"/><text x="46.1086%" y="495.50"></text></g><g><title>prep_new_page (49 samples, 0.74%)</title><rect x="46.1013%" y="469" width="0.7433%" height="15" fill="rgb(221,106,17)"/><text x="46.3513%" y="479.50"></text></g><g><title>kernel_init_free_pages (48 samples, 0.73%)</title><rect x="46.1165%" y="453" width="0.7282%" height="15" fill="rgb(251,142,44)"/><text x="46.3665%" y="463.50"></text></g><g><title>mem_cgroup_try_charge_delay (29 samples, 0.44%)</title><rect x="46.9053%" y="517" width="0.4399%" height="15" fill="rgb(238,13,15)"/><text x="47.1553%" y="527.50"></text></g><g><title>mem_cgroup_try_charge (26 samples, 0.39%)</title><rect x="46.9508%" y="501" width="0.3944%" height="15" fill="rgb(208,107,27)"/><text x="47.2008%" y="511.50"></text></g><g><title>try_charge (15 samples, 0.23%)</title><rect x="47.1177%" y="485" width="0.2275%" height="15" fill="rgb(205,136,37)"/><text x="47.3677%" y="495.50"></text></g><g><title>handle_mm_fault (152 samples, 2.31%)</title><rect x="45.0698%" y="549" width="2.3058%" height="15" fill="rgb(250,205,27)"/><text x="45.3198%" y="559.50">h..</text></g><g><title>__handle_mm_fault (142 samples, 2.15%)</title><rect x="45.2215%" y="533" width="2.1541%" height="15" fill="rgb(210,80,43)"/><text x="45.4715%" y="543.50">_..</text></g><g><title>page_fault (157 samples, 2.38%)</title><rect x="45.0091%" y="581" width="2.3817%" height="15" fill="rgb(247,160,36)"/><text x="45.2591%" y="591.50">pa..</text></g><g><title>do_user_addr_fault (155 samples, 2.35%)</title><rect x="45.0394%" y="565" width="2.3513%" height="15" fill="rgb(234,13,49)"/><text x="45.2894%" y="575.50">d..</text></g><g><title>__GI___libc_malloc (400 samples, 6.07%)</title><rect x="41.7324%" y="629" width="6.0680%" height="15" fill="rgb(234,122,0)"/><text x="41.9824%" y="639.50">__GI___l..</text></g><g><title>_int_malloc (400 samples, 6.07%)</title><rect x="41.7324%" y="613" width="6.0680%" height="15" fill="rgb(207,146,38)"/><text x="41.9824%" y="623.50">_int_mal..</text></g><g><title>sysmalloc (387 samples, 5.87%)</title><rect x="41.9296%" y="597" width="5.8708%" height="15" fill="rgb(207,177,25)"/><text x="42.1796%" y="607.50">sysmall..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (27 samples, 0.41%)</title><rect x="47.3908%" y="581" width="0.4096%" height="15" fill="rgb(211,178,42)"/><text x="47.6408%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (20 samples, 0.30%)</title><rect x="47.4970%" y="565" width="0.3034%" height="15" fill="rgb(230,69,54)"/><text x="47.7470%" y="575.50"></text></g><g><title>error_entry (7 samples, 0.11%)</title><rect x="47.9066%" y="613" width="0.1062%" height="15" fill="rgb(214,135,41)"/><text x="48.1566%" y="623.50"></text></g><g><title>__lru_cache_add (7 samples, 0.11%)</title><rect x="48.2100%" y="549" width="0.1062%" height="15" fill="rgb(237,67,25)"/><text x="48.4600%" y="559.50"></text></g><g><title>clear_page_erms (23 samples, 0.35%)</title><rect x="48.4678%" y="469" width="0.3489%" height="15" fill="rgb(222,189,50)"/><text x="48.7178%" y="479.50"></text></g><g><title>alloc_pages_vma (33 samples, 0.50%)</title><rect x="48.3313%" y="549" width="0.5006%" height="15" fill="rgb(245,148,34)"/><text x="48.5813%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (31 samples, 0.47%)</title><rect x="48.3617%" y="533" width="0.4703%" height="15" fill="rgb(222,29,6)"/><text x="48.6117%" y="543.50"></text></g><g><title>get_page_from_freelist (30 samples, 0.46%)</title><rect x="48.3768%" y="517" width="0.4551%" height="15" fill="rgb(221,189,43)"/><text x="48.6268%" y="527.50"></text></g><g><title>prep_new_page (25 samples, 0.38%)</title><rect x="48.4527%" y="501" width="0.3792%" height="15" fill="rgb(207,36,27)"/><text x="48.7027%" y="511.50"></text></g><g><title>kernel_init_free_pages (24 samples, 0.36%)</title><rect x="48.4678%" y="485" width="0.3641%" height="15" fill="rgb(217,90,24)"/><text x="48.7178%" y="495.50"></text></g><g><title>get_mem_cgroup_from_mm (8 samples, 0.12%)</title><rect x="48.9078%" y="517" width="0.1214%" height="15" fill="rgb(224,66,35)"/><text x="49.1578%" y="527.50"></text></g><g><title>mem_cgroup_try_charge_delay (20 samples, 0.30%)</title><rect x="48.8774%" y="549" width="0.3034%" height="15" fill="rgb(221,13,50)"/><text x="49.1274%" y="559.50"></text></g><g><title>mem_cgroup_try_charge (20 samples, 0.30%)</title><rect x="48.8774%" y="533" width="0.3034%" height="15" fill="rgb(236,68,49)"/><text x="49.1274%" y="543.50"></text></g><g><title>try_charge (10 samples, 0.15%)</title><rect x="49.0291%" y="517" width="0.1517%" height="15" fill="rgb(229,146,28)"/><text x="49.2791%" y="527.50"></text></g><g><title>page_fault (77 samples, 1.17%)</title><rect x="48.0279%" y="613" width="1.1681%" height="15" fill="rgb(225,31,38)"/><text x="48.2779%" y="623.50"></text></g><g><title>do_user_addr_fault (76 samples, 1.15%)</title><rect x="48.0431%" y="597" width="1.1529%" height="15" fill="rgb(250,208,3)"/><text x="48.2931%" y="607.50"></text></g><g><title>handle_mm_fault (72 samples, 1.09%)</title><rect x="48.1038%" y="581" width="1.0922%" height="15" fill="rgb(246,54,23)"/><text x="48.3538%" y="591.50"></text></g><g><title>__handle_mm_fault (69 samples, 1.05%)</title><rect x="48.1493%" y="565" width="1.0467%" height="15" fill="rgb(243,76,11)"/><text x="48.3993%" y="575.50"></text></g><g><title>__memset_avx2_erms (106 samples, 1.61%)</title><rect x="47.8004%" y="629" width="1.6080%" height="15" fill="rgb(245,21,50)"/><text x="48.0504%" y="639.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (14 samples, 0.21%)</title><rect x="49.1960%" y="613" width="0.2124%" height="15" fill="rgb(228,9,43)"/><text x="49.4460%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (12 samples, 0.18%)</title><rect x="49.2263%" y="597" width="0.1820%" height="15" fill="rgb(208,100,47)"/><text x="49.4763%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (510 samples, 7.74%)</title><rect x="41.7172%" y="645" width="7.7367%" height="15" fill="rgb(232,26,8)"/><text x="41.9672%" y="655.50">hashbrown::..</text></g><g><title>std::time::Instant::elapsed (17 samples, 0.26%)</title><rect x="49.4539%" y="645" width="0.2579%" height="15" fill="rgb(216,166,38)"/><text x="49.7039%" y="655.50"></text></g><g><title>std::time::Instant::now (13 samples, 0.20%)</title><rect x="49.5146%" y="629" width="0.1972%" height="15" fill="rgb(251,202,51)"/><text x="49.7646%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (13 samples, 0.20%)</title><rect x="49.5146%" y="613" width="0.1972%" height="15" fill="rgb(254,216,34)"/><text x="49.7646%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (13 samples, 0.20%)</title><rect x="49.5146%" y="597" width="0.1972%" height="15" fill="rgb(251,32,27)"/><text x="49.7646%" y="607.50"></text></g><g><title>__clock_gettime_2 (7 samples, 0.11%)</title><rect x="49.6056%" y="581" width="0.1062%" height="15" fill="rgb(208,127,28)"/><text x="49.8556%" y="591.50"></text></g><g><title>decor_mem::views::View::insert_into_index (757 samples, 11.48%)</title><rect x="38.2737%" y="661" width="11.4836%" height="15" fill="rgb(224,137,22)"/><text x="38.5237%" y="671.50">decor_mem::views:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.11%)</title><rect x="50.0455%" y="597" width="0.1062%" height="15" fill="rgb(254,70,32)"/><text x="50.2955%" y="607.50"></text></g><g><title>core::fmt::write (25 samples, 0.38%)</title><rect x="49.8180%" y="645" width="0.3792%" height="15" fill="rgb(229,75,37)"/><text x="50.0680%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (25 samples, 0.38%)</title><rect x="49.8180%" y="629" width="0.3792%" height="15" fill="rgb(252,64,23)"/><text x="50.0680%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.23%)</title><rect x="49.9697%" y="613" width="0.2275%" height="15" fill="rgb(232,162,48)"/><text x="50.2197%" y="623.50"></text></g><g><title>decor_mem::views::View::insert_row (35 samples, 0.53%)</title><rect x="49.7573%" y="661" width="0.5309%" height="15" fill="rgb(246,160,12)"/><text x="50.0073%" y="671.50"></text></g><g><title>decor_mem::views::Views::insert (842 samples, 12.77%)</title><rect x="37.5303%" y="677" width="12.7731%" height="15" fill="rgb(247,166,0)"/><text x="37.7803%" y="687.50">decor_mem::views::V..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::generate_new_entities_from (1,179 samples, 17.89%)</title><rect x="32.4333%" y="693" width="17.8853%" height="15" fill="rgb(249,219,21)"/><text x="32.6833%" y="703.50">decor_mem::query_transformer..</text></g><g><title>sock_def_readable (10 samples, 0.15%)</title><rect x="50.9102%" y="133" width="0.1517%" height="15" fill="rgb(205,209,3)"/><text x="51.1602%" y="143.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.14%)</title><rect x="50.9254%" y="117" width="0.1365%" height="15" fill="rgb(243,44,1)"/><text x="51.1754%" y="127.50"></text></g><g><title>__wake_up_common (9 samples, 0.14%)</title><rect x="50.9254%" y="101" width="0.1365%" height="15" fill="rgb(206,159,16)"/><text x="51.1754%" y="111.50"></text></g><g><title>pollwake (8 samples, 0.12%)</title><rect x="50.9405%" y="85" width="0.1214%" height="15" fill="rgb(244,77,30)"/><text x="51.1905%" y="95.50"></text></g><g><title>try_to_wake_up (7 samples, 0.11%)</title><rect x="50.9557%" y="69" width="0.1062%" height="15" fill="rgb(218,69,12)"/><text x="51.2057%" y="79.50"></text></g><g><title>tcp_ack (10 samples, 0.15%)</title><rect x="51.0619%" y="133" width="0.1517%" height="15" fill="rgb(212,87,7)"/><text x="51.3119%" y="143.50"></text></g><g><title>ip_local_deliver (29 samples, 0.44%)</title><rect x="50.7888%" y="229" width="0.4399%" height="15" fill="rgb(245,114,25)"/><text x="51.0388%" y="239.50"></text></g><g><title>ip_local_deliver_finish (28 samples, 0.42%)</title><rect x="50.8040%" y="213" width="0.4248%" height="15" fill="rgb(210,61,42)"/><text x="51.0540%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (28 samples, 0.42%)</title><rect x="50.8040%" y="197" width="0.4248%" height="15" fill="rgb(211,52,33)"/><text x="51.0540%" y="207.50"></text></g><g><title>tcp_v4_rcv (26 samples, 0.39%)</title><rect x="50.8343%" y="181" width="0.3944%" height="15" fill="rgb(234,58,33)"/><text x="51.0843%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 0.35%)</title><rect x="50.8799%" y="165" width="0.3489%" height="15" fill="rgb(220,115,36)"/><text x="51.1299%" y="175.50"></text></g><g><title>tcp_rcv_established (23 samples, 0.35%)</title><rect x="50.8799%" y="149" width="0.3489%" height="15" fill="rgb(243,153,54)"/><text x="51.1299%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (33 samples, 0.50%)</title><rect x="50.7433%" y="261" width="0.5006%" height="15" fill="rgb(251,47,18)"/><text x="50.9933%" y="271.50"></text></g><g><title>ip_rcv (30 samples, 0.46%)</title><rect x="50.7888%" y="245" width="0.4551%" height="15" fill="rgb(242,102,42)"/><text x="51.0388%" y="255.50"></text></g><g><title>ip_finish_output2 (42 samples, 0.64%)</title><rect x="50.6220%" y="373" width="0.6371%" height="15" fill="rgb(234,31,38)"/><text x="50.8720%" y="383.50"></text></g><g><title>__local_bh_enable_ip (41 samples, 0.62%)</title><rect x="50.6371%" y="357" width="0.6220%" height="15" fill="rgb(221,117,51)"/><text x="50.8871%" y="367.50"></text></g><g><title>do_softirq (41 samples, 0.62%)</title><rect x="50.6371%" y="341" width="0.6220%" height="15" fill="rgb(212,20,18)"/><text x="50.8871%" y="351.50"></text></g><g><title>do_softirq_own_stack (39 samples, 0.59%)</title><rect x="50.6675%" y="325" width="0.5916%" height="15" fill="rgb(245,133,36)"/><text x="50.9175%" y="335.50"></text></g><g><title>__do_softirq (39 samples, 0.59%)</title><rect x="50.6675%" y="309" width="0.5916%" height="15" fill="rgb(212,6,19)"/><text x="50.9175%" y="319.50"></text></g><g><title>net_rx_action (38 samples, 0.58%)</title><rect x="50.6826%" y="293" width="0.5765%" height="15" fill="rgb(218,1,36)"/><text x="50.9326%" y="303.50"></text></g><g><title>process_backlog (36 samples, 0.55%)</title><rect x="50.7130%" y="277" width="0.5461%" height="15" fill="rgb(246,84,54)"/><text x="50.9630%" y="287.50"></text></g><g><title>__ip_queue_xmit (47 samples, 0.71%)</title><rect x="50.5765%" y="405" width="0.7130%" height="15" fill="rgb(242,110,6)"/><text x="50.8265%" y="415.50"></text></g><g><title>ip_output (45 samples, 0.68%)</title><rect x="50.6068%" y="389" width="0.6826%" height="15" fill="rgb(214,47,5)"/><text x="50.8568%" y="399.50"></text></g><g><title>__tcp_transmit_skb (50 samples, 0.76%)</title><rect x="50.5613%" y="421" width="0.7585%" height="15" fill="rgb(218,159,25)"/><text x="50.8113%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (52 samples, 0.79%)</title><rect x="50.5461%" y="453" width="0.7888%" height="15" fill="rgb(215,211,28)"/><text x="50.7961%" y="463.50"></text></g><g><title>tcp_write_xmit (52 samples, 0.79%)</title><rect x="50.5461%" y="437" width="0.7888%" height="15" fill="rgb(238,59,32)"/><text x="50.7961%" y="447.50"></text></g><g><title>sock_sendmsg (61 samples, 0.93%)</title><rect x="50.4854%" y="501" width="0.9254%" height="15" fill="rgb(226,82,3)"/><text x="50.7354%" y="511.50"></text></g><g><title>tcp_sendmsg (60 samples, 0.91%)</title><rect x="50.5006%" y="485" width="0.9102%" height="15" fill="rgb(240,164,32)"/><text x="50.7506%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (59 samples, 0.90%)</title><rect x="50.5158%" y="469" width="0.8950%" height="15" fill="rgb(232,46,7)"/><text x="50.7658%" y="479.50"></text></g><g><title>__x64_sys_sendto (63 samples, 0.96%)</title><rect x="50.4703%" y="533" width="0.9557%" height="15" fill="rgb(229,129,53)"/><text x="50.7203%" y="543.50"></text></g><g><title>__sys_sendto (63 samples, 0.96%)</title><rect x="50.4703%" y="517" width="0.9557%" height="15" fill="rgb(234,188,29)"/><text x="50.7203%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (64 samples, 0.97%)</title><rect x="50.4703%" y="565" width="0.9709%" height="15" fill="rgb(246,141,4)"/><text x="50.7203%" y="575.50"></text></g><g><title>do_syscall_64 (64 samples, 0.97%)</title><rect x="50.4703%" y="549" width="0.9709%" height="15" fill="rgb(229,23,39)"/><text x="50.7203%" y="559.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (66 samples, 1.00%)</title><rect x="50.4551%" y="613" width="1.0012%" height="15" fill="rgb(206,12,3)"/><text x="50.7051%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (66 samples, 1.00%)</title><rect x="50.4551%" y="597" width="1.0012%" height="15" fill="rgb(252,226,20)"/><text x="50.7051%" y="607.50"></text></g><g><title>__libc_send (66 samples, 1.00%)</title><rect x="50.4551%" y="581" width="1.0012%" height="15" fill="rgb(216,123,35)"/><text x="50.7051%" y="591.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (71 samples, 1.08%)</title><rect x="50.4248%" y="677" width="1.0771%" height="15" fill="rgb(212,68,40)"/><text x="50.6748%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (70 samples, 1.06%)</title><rect x="50.4399%" y="661" width="1.0619%" height="15" fill="rgb(254,125,32)"/><text x="50.6899%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (69 samples, 1.05%)</title><rect x="50.4551%" y="645" width="1.0467%" height="15" fill="rgb(253,97,22)"/><text x="50.7051%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (69 samples, 1.05%)</title><rect x="50.4551%" y="629" width="1.0467%" height="15" fill="rgb(241,101,14)"/><text x="50.7051%" y="639.50"></text></g><g><title>core::fmt::write (12 samples, 0.18%)</title><rect x="51.5777%" y="677" width="0.1820%" height="15" fill="rgb(238,103,29)"/><text x="51.8277%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (11 samples, 0.17%)</title><rect x="51.5928%" y="661" width="0.1669%" height="15" fill="rgb(233,195,47)"/><text x="51.8428%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (116 samples, 1.76%)</title><rect x="50.3186%" y="693" width="1.7597%" height="15" fill="rgb(246,218,30)"/><text x="50.5686%" y="703.50"></text></g><g><title>decor_mem::views::Views::delete (14 samples, 0.21%)</title><rect x="51.8659%" y="677" width="0.2124%" height="15" fill="rgb(219,145,47)"/><text x="52.1159%" y="687.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (11 samples, 0.17%)</title><rect x="51.9114%" y="661" width="0.1669%" height="15" fill="rgb(243,12,26)"/><text x="52.1614%" y="671.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (2,720 samples, 41.26%)</title><rect x="11.0285%" y="773" width="41.2621%" height="15" fill="rgb(214,87,16)"/><text x="11.2785%" y="783.50">decor_mem::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2,720 samples, 41.26%)</title><rect x="11.0285%" y="757" width="41.2621%" height="15" fill="rgb(208,99,42)"/><text x="11.2785%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (2,720 samples, 41.26%)</title><rect x="11.0285%" y="741" width="41.2621%" height="15" fill="rgb(253,99,2)"/><text x="11.2785%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (1,453 samples, 22.04%)</title><rect x="30.2488%" y="725" width="22.0419%" height="15" fill="rgb(220,168,23)"/><text x="30.4988%" y="735.50">&lt;decor_mem::Shim as msql_srv::Mysql..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (1,453 samples, 22.04%)</title><rect x="30.2488%" y="709" width="22.0419%" height="15" fill="rgb(242,38,24)"/><text x="30.4988%" y="719.50">decor_mem::query_transformer::Query..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (9 samples, 0.14%)</title><rect x="52.1541%" y="693" width="0.1365%" height="15" fill="rgb(225,182,9)"/><text x="52.4041%" y="703.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (18 samples, 0.27%)</title><rect x="52.4879%" y="773" width="0.2731%" height="15" fill="rgb(243,178,37)"/><text x="52.7379%" y="783.50"></text></g><g><title>sk_wait_data (16 samples, 0.24%)</title><rect x="53.2615%" y="469" width="0.2427%" height="15" fill="rgb(232,139,19)"/><text x="53.5115%" y="479.50"></text></g><g><title>wait_woken (12 samples, 0.18%)</title><rect x="53.3222%" y="453" width="0.1820%" height="15" fill="rgb(225,201,24)"/><text x="53.5722%" y="463.50"></text></g><g><title>schedule_timeout (12 samples, 0.18%)</title><rect x="53.3222%" y="437" width="0.1820%" height="15" fill="rgb(221,47,46)"/><text x="53.5722%" y="447.50"></text></g><g><title>schedule (11 samples, 0.17%)</title><rect x="53.3374%" y="421" width="0.1669%" height="15" fill="rgb(249,23,13)"/><text x="53.5874%" y="431.50"></text></g><g><title>__schedule (11 samples, 0.17%)</title><rect x="53.3374%" y="405" width="0.1669%" height="15" fill="rgb(219,9,5)"/><text x="53.5874%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 0.35%)</title><rect x="53.1705%" y="533" width="0.3489%" height="15" fill="rgb(254,171,16)"/><text x="53.4205%" y="543.50"></text></g><g><title>__sys_recvfrom (23 samples, 0.35%)</title><rect x="53.1705%" y="517" width="0.3489%" height="15" fill="rgb(230,171,20)"/><text x="53.4205%" y="527.50"></text></g><g><title>inet_recvmsg (23 samples, 0.35%)</title><rect x="53.1705%" y="501" width="0.3489%" height="15" fill="rgb(210,71,41)"/><text x="53.4205%" y="511.50"></text></g><g><title>tcp_recvmsg (23 samples, 0.35%)</title><rect x="53.1705%" y="485" width="0.3489%" height="15" fill="rgb(206,173,20)"/><text x="53.4205%" y="495.50"></text></g><g><title>do_syscall_64 (25 samples, 0.38%)</title><rect x="53.1705%" y="549" width="0.3792%" height="15" fill="rgb(233,88,34)"/><text x="53.4205%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 0.46%)</title><rect x="53.1553%" y="661" width="0.4551%" height="15" fill="rgb(223,209,46)"/><text x="53.4053%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 0.46%)</title><rect x="53.1553%" y="645" width="0.4551%" height="15" fill="rgb(250,43,18)"/><text x="53.4053%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 0.46%)</title><rect x="53.1553%" y="629" width="0.4551%" height="15" fill="rgb(208,13,10)"/><text x="53.4053%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 0.46%)</title><rect x="53.1553%" y="613" width="0.4551%" height="15" fill="rgb(212,200,36)"/><text x="53.4053%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 0.46%)</title><rect x="53.1553%" y="597" width="0.4551%" height="15" fill="rgb(225,90,30)"/><text x="53.4053%" y="607.50"></text></g><g><title>__libc_recv (30 samples, 0.46%)</title><rect x="53.1553%" y="581" width="0.4551%" height="15" fill="rgb(236,182,39)"/><text x="53.4053%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (29 samples, 0.44%)</title><rect x="53.1705%" y="565" width="0.4399%" height="15" fill="rgb(212,144,35)"/><text x="53.4205%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (33 samples, 0.50%)</title><rect x="53.1250%" y="709" width="0.5006%" height="15" fill="rgb(228,63,44)"/><text x="53.3750%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 0.47%)</title><rect x="53.1553%" y="693" width="0.4703%" height="15" fill="rgb(228,109,6)"/><text x="53.4053%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.47%)</title><rect x="53.1553%" y="677" width="0.4703%" height="15" fill="rgb(238,117,24)"/><text x="53.4053%" y="687.50"></text></g><g><title>tcp_ack (8 samples, 0.12%)</title><rect x="54.0807%" y="197" width="0.1214%" height="15" fill="rgb(242,26,26)"/><text x="54.3307%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 0.32%)</title><rect x="53.9593%" y="229" width="0.3186%" height="15" fill="rgb(221,92,48)"/><text x="54.2093%" y="239.50"></text></g><g><title>tcp_rcv_established (21 samples, 0.32%)</title><rect x="53.9593%" y="213" width="0.3186%" height="15" fill="rgb(209,209,32)"/><text x="54.2093%" y="223.50"></text></g><g><title>ip_finish_output2 (35 samples, 0.53%)</title><rect x="53.7621%" y="437" width="0.5309%" height="15" fill="rgb(221,70,22)"/><text x="54.0121%" y="447.50"></text></g><g><title>__local_bh_enable_ip (31 samples, 0.47%)</title><rect x="53.8228%" y="421" width="0.4703%" height="15" fill="rgb(248,145,5)"/><text x="54.0728%" y="431.50"></text></g><g><title>do_softirq (31 samples, 0.47%)</title><rect x="53.8228%" y="405" width="0.4703%" height="15" fill="rgb(226,116,26)"/><text x="54.0728%" y="415.50"></text></g><g><title>do_softirq_own_stack (31 samples, 0.47%)</title><rect x="53.8228%" y="389" width="0.4703%" height="15" fill="rgb(244,5,17)"/><text x="54.0728%" y="399.50"></text></g><g><title>__do_softirq (30 samples, 0.46%)</title><rect x="53.8380%" y="373" width="0.4551%" height="15" fill="rgb(252,159,33)"/><text x="54.0880%" y="383.50"></text></g><g><title>net_rx_action (29 samples, 0.44%)</title><rect x="53.8532%" y="357" width="0.4399%" height="15" fill="rgb(206,71,0)"/><text x="54.1032%" y="367.50"></text></g><g><title>process_backlog (28 samples, 0.42%)</title><rect x="53.8683%" y="341" width="0.4248%" height="15" fill="rgb(233,118,54)"/><text x="54.1183%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 0.42%)</title><rect x="53.8683%" y="325" width="0.4248%" height="15" fill="rgb(234,83,48)"/><text x="54.1183%" y="335.50"></text></g><g><title>ip_rcv (26 samples, 0.39%)</title><rect x="53.8987%" y="309" width="0.3944%" height="15" fill="rgb(228,3,54)"/><text x="54.1487%" y="319.50"></text></g><g><title>ip_local_deliver (26 samples, 0.39%)</title><rect x="53.8987%" y="293" width="0.3944%" height="15" fill="rgb(226,155,13)"/><text x="54.1487%" y="303.50"></text></g><g><title>ip_local_deliver_finish (26 samples, 0.39%)</title><rect x="53.8987%" y="277" width="0.3944%" height="15" fill="rgb(241,28,37)"/><text x="54.1487%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (26 samples, 0.39%)</title><rect x="53.8987%" y="261" width="0.3944%" height="15" fill="rgb(233,93,10)"/><text x="54.1487%" y="271.50"></text></g><g><title>tcp_v4_rcv (26 samples, 0.39%)</title><rect x="53.8987%" y="245" width="0.3944%" height="15" fill="rgb(225,113,19)"/><text x="54.1487%" y="255.50"></text></g><g><title>__tcp_transmit_skb (40 samples, 0.61%)</title><rect x="53.7015%" y="485" width="0.6068%" height="15" fill="rgb(241,2,18)"/><text x="53.9515%" y="495.50"></text></g><g><title>__ip_queue_xmit (39 samples, 0.59%)</title><rect x="53.7166%" y="469" width="0.5916%" height="15" fill="rgb(228,207,21)"/><text x="53.9666%" y="479.50"></text></g><g><title>ip_output (37 samples, 0.56%)</title><rect x="53.7470%" y="453" width="0.5613%" height="15" fill="rgb(213,211,35)"/><text x="53.9970%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (43 samples, 0.65%)</title><rect x="53.6711%" y="517" width="0.6523%" height="15" fill="rgb(209,83,10)"/><text x="53.9211%" y="527.50"></text></g><g><title>tcp_write_xmit (43 samples, 0.65%)</title><rect x="53.6711%" y="501" width="0.6523%" height="15" fill="rgb(209,164,1)"/><text x="53.9211%" y="511.50"></text></g><g><title>__x64_sys_sendto (52 samples, 0.79%)</title><rect x="53.6408%" y="597" width="0.7888%" height="15" fill="rgb(213,184,43)"/><text x="53.8908%" y="607.50"></text></g><g><title>__sys_sendto (52 samples, 0.79%)</title><rect x="53.6408%" y="581" width="0.7888%" height="15" fill="rgb(231,61,34)"/><text x="53.8908%" y="591.50"></text></g><g><title>sock_sendmsg (52 samples, 0.79%)</title><rect x="53.6408%" y="565" width="0.7888%" height="15" fill="rgb(235,75,3)"/><text x="53.8908%" y="575.50"></text></g><g><title>tcp_sendmsg (52 samples, 0.79%)</title><rect x="53.6408%" y="549" width="0.7888%" height="15" fill="rgb(220,106,47)"/><text x="53.8908%" y="559.50"></text></g><g><title>tcp_sendmsg_locked (50 samples, 0.76%)</title><rect x="53.6711%" y="533" width="0.7585%" height="15" fill="rgb(210,196,33)"/><text x="53.9211%" y="543.50"></text></g><g><title>do_syscall_64 (53 samples, 0.80%)</title><rect x="53.6408%" y="613" width="0.8040%" height="15" fill="rgb(229,154,42)"/><text x="53.8908%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (89 samples, 1.35%)</title><rect x="53.1250%" y="757" width="1.3501%" height="15" fill="rgb(228,114,26)"/><text x="53.3750%" y="767.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (89 samples, 1.35%)</title><rect x="53.1250%" y="741" width="1.3501%" height="15" fill="rgb(208,144,1)"/><text x="53.3750%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (89 samples, 1.35%)</title><rect x="53.1250%" y="725" width="1.3501%" height="15" fill="rgb(239,112,37)"/><text x="53.3750%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (56 samples, 0.85%)</title><rect x="53.6256%" y="709" width="0.8495%" height="15" fill="rgb(210,96,50)"/><text x="53.8756%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (56 samples, 0.85%)</title><rect x="53.6256%" y="693" width="0.8495%" height="15" fill="rgb(222,178,2)"/><text x="53.8756%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (56 samples, 0.85%)</title><rect x="53.6256%" y="677" width="0.8495%" height="15" fill="rgb(226,74,18)"/><text x="53.8756%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (56 samples, 0.85%)</title><rect x="53.6256%" y="661" width="0.8495%" height="15" fill="rgb(225,67,54)"/><text x="53.8756%" y="671.50"></text></g><g><title>__libc_send (56 samples, 0.85%)</title><rect x="53.6256%" y="645" width="0.8495%" height="15" fill="rgb(251,92,32)"/><text x="53.8756%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (56 samples, 0.85%)</title><rect x="53.6256%" y="629" width="0.8495%" height="15" fill="rgb(228,149,22)"/><text x="53.8756%" y="639.50"></text></g><g><title>sk_wait_data (14 samples, 0.21%)</title><rect x="54.5813%" y="469" width="0.2124%" height="15" fill="rgb(243,54,13)"/><text x="54.8313%" y="479.50"></text></g><g><title>wait_woken (12 samples, 0.18%)</title><rect x="54.6117%" y="453" width="0.1820%" height="15" fill="rgb(243,180,28)"/><text x="54.8617%" y="463.50"></text></g><g><title>schedule_timeout (12 samples, 0.18%)</title><rect x="54.6117%" y="437" width="0.1820%" height="15" fill="rgb(208,167,24)"/><text x="54.8617%" y="447.50"></text></g><g><title>schedule (12 samples, 0.18%)</title><rect x="54.6117%" y="421" width="0.1820%" height="15" fill="rgb(245,73,45)"/><text x="54.8617%" y="431.50"></text></g><g><title>__schedule (12 samples, 0.18%)</title><rect x="54.6117%" y="405" width="0.1820%" height="15" fill="rgb(237,203,48)"/><text x="54.8617%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (24 samples, 0.36%)</title><rect x="54.5206%" y="533" width="0.3641%" height="15" fill="rgb(211,197,16)"/><text x="54.7706%" y="543.50"></text></g><g><title>__sys_recvfrom (23 samples, 0.35%)</title><rect x="54.5358%" y="517" width="0.3489%" height="15" fill="rgb(243,99,51)"/><text x="54.7858%" y="527.50"></text></g><g><title>inet_recvmsg (23 samples, 0.35%)</title><rect x="54.5358%" y="501" width="0.3489%" height="15" fill="rgb(215,123,29)"/><text x="54.7858%" y="511.50"></text></g><g><title>tcp_recvmsg (23 samples, 0.35%)</title><rect x="54.5358%" y="485" width="0.3489%" height="15" fill="rgb(239,186,37)"/><text x="54.7858%" y="495.50"></text></g><g><title>do_syscall_64 (27 samples, 0.41%)</title><rect x="54.5055%" y="549" width="0.4096%" height="15" fill="rgb(252,136,39)"/><text x="54.7555%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 0.42%)</title><rect x="54.5055%" y="565" width="0.4248%" height="15" fill="rgb(223,213,32)"/><text x="54.7555%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 0.46%)</title><rect x="54.4903%" y="661" width="0.4551%" height="15" fill="rgb(233,115,5)"/><text x="54.7403%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 0.46%)</title><rect x="54.4903%" y="645" width="0.4551%" height="15" fill="rgb(207,226,44)"/><text x="54.7403%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 0.46%)</title><rect x="54.4903%" y="629" width="0.4551%" height="15" fill="rgb(208,126,0)"/><text x="54.7403%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 0.46%)</title><rect x="54.4903%" y="613" width="0.4551%" height="15" fill="rgb(244,66,21)"/><text x="54.7403%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 0.46%)</title><rect x="54.4903%" y="597" width="0.4551%" height="15" fill="rgb(222,97,12)"/><text x="54.7403%" y="607.50"></text></g><g><title>__libc_recv (30 samples, 0.46%)</title><rect x="54.4903%" y="581" width="0.4551%" height="15" fill="rgb(219,213,19)"/><text x="54.7403%" y="591.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.49%)</title><rect x="54.4903%" y="677" width="0.4854%" height="15" fill="rgb(252,169,30)"/><text x="54.7403%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (34 samples, 0.52%)</title><rect x="54.4903%" y="693" width="0.5158%" height="15" fill="rgb(206,32,51)"/><text x="54.7403%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (35 samples, 0.53%)</title><rect x="54.4903%" y="709" width="0.5309%" height="15" fill="rgb(250,172,42)"/><text x="54.7403%" y="719.50"></text></g><g><title>__wake_up_common (13 samples, 0.20%)</title><rect x="55.4157%" y="165" width="0.1972%" height="15" fill="rgb(209,34,43)"/><text x="55.6657%" y="175.50"></text></g><g><title>try_to_wake_up (13 samples, 0.20%)</title><rect x="55.4157%" y="149" width="0.1972%" height="15" fill="rgb(223,11,35)"/><text x="55.6657%" y="159.50"></text></g><g><title>sock_def_readable (17 samples, 0.26%)</title><rect x="55.3701%" y="197" width="0.2579%" height="15" fill="rgb(251,219,26)"/><text x="55.6201%" y="207.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.21%)</title><rect x="55.4157%" y="181" width="0.2124%" height="15" fill="rgb(231,119,3)"/><text x="55.6657%" y="191.50"></text></g><g><title>__netif_receive_skb_one_core (31 samples, 0.47%)</title><rect x="55.2640%" y="325" width="0.4703%" height="15" fill="rgb(216,97,11)"/><text x="55.5140%" y="335.50"></text></g><g><title>ip_rcv (31 samples, 0.47%)</title><rect x="55.2640%" y="309" width="0.4703%" height="15" fill="rgb(223,59,9)"/><text x="55.5140%" y="319.50"></text></g><g><title>ip_local_deliver (31 samples, 0.47%)</title><rect x="55.2640%" y="293" width="0.4703%" height="15" fill="rgb(233,93,31)"/><text x="55.5140%" y="303.50"></text></g><g><title>ip_local_deliver_finish (31 samples, 0.47%)</title><rect x="55.2640%" y="277" width="0.4703%" height="15" fill="rgb(239,81,33)"/><text x="55.5140%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (31 samples, 0.47%)</title><rect x="55.2640%" y="261" width="0.4703%" height="15" fill="rgb(213,120,34)"/><text x="55.5140%" y="271.50"></text></g><g><title>tcp_v4_rcv (29 samples, 0.44%)</title><rect x="55.2943%" y="245" width="0.4399%" height="15" fill="rgb(243,49,53)"/><text x="55.5443%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (27 samples, 0.41%)</title><rect x="55.3246%" y="229" width="0.4096%" height="15" fill="rgb(247,216,33)"/><text x="55.5746%" y="239.50"></text></g><g><title>tcp_rcv_established (27 samples, 0.41%)</title><rect x="55.3246%" y="213" width="0.4096%" height="15" fill="rgb(226,26,14)"/><text x="55.5746%" y="223.50"></text></g><g><title>__tcp_push_pending_frames (41 samples, 0.62%)</title><rect x="55.1274%" y="517" width="0.6220%" height="15" fill="rgb(215,49,53)"/><text x="55.3774%" y="527.50"></text></g><g><title>tcp_write_xmit (41 samples, 0.62%)</title><rect x="55.1274%" y="501" width="0.6220%" height="15" fill="rgb(245,162,40)"/><text x="55.3774%" y="511.50"></text></g><g><title>__tcp_transmit_skb (40 samples, 0.61%)</title><rect x="55.1426%" y="485" width="0.6068%" height="15" fill="rgb(229,68,17)"/><text x="55.3926%" y="495.50"></text></g><g><title>__ip_queue_xmit (40 samples, 0.61%)</title><rect x="55.1426%" y="469" width="0.6068%" height="15" fill="rgb(213,182,10)"/><text x="55.3926%" y="479.50"></text></g><g><title>ip_output (38 samples, 0.58%)</title><rect x="55.1729%" y="453" width="0.5765%" height="15" fill="rgb(245,125,30)"/><text x="55.4229%" y="463.50"></text></g><g><title>ip_finish_output2 (36 samples, 0.55%)</title><rect x="55.2033%" y="437" width="0.5461%" height="15" fill="rgb(232,202,2)"/><text x="55.4533%" y="447.50"></text></g><g><title>__local_bh_enable_ip (33 samples, 0.50%)</title><rect x="55.2488%" y="421" width="0.5006%" height="15" fill="rgb(237,140,51)"/><text x="55.4988%" y="431.50"></text></g><g><title>do_softirq (33 samples, 0.50%)</title><rect x="55.2488%" y="405" width="0.5006%" height="15" fill="rgb(236,157,25)"/><text x="55.4988%" y="415.50"></text></g><g><title>do_softirq_own_stack (33 samples, 0.50%)</title><rect x="55.2488%" y="389" width="0.5006%" height="15" fill="rgb(219,209,0)"/><text x="55.4988%" y="399.50"></text></g><g><title>__do_softirq (33 samples, 0.50%)</title><rect x="55.2488%" y="373" width="0.5006%" height="15" fill="rgb(240,116,54)"/><text x="55.4988%" y="383.50"></text></g><g><title>net_rx_action (32 samples, 0.49%)</title><rect x="55.2640%" y="357" width="0.4854%" height="15" fill="rgb(216,10,36)"/><text x="55.5140%" y="367.50"></text></g><g><title>process_backlog (32 samples, 0.49%)</title><rect x="55.2640%" y="341" width="0.4854%" height="15" fill="rgb(222,72,44)"/><text x="55.5140%" y="351.50"></text></g><g><title>sock_sendmsg (46 samples, 0.70%)</title><rect x="55.0819%" y="565" width="0.6978%" height="15" fill="rgb(232,159,9)"/><text x="55.3319%" y="575.50"></text></g><g><title>tcp_sendmsg (46 samples, 0.70%)</title><rect x="55.0819%" y="549" width="0.6978%" height="15" fill="rgb(210,39,32)"/><text x="55.3319%" y="559.50"></text></g><g><title>tcp_sendmsg_locked (45 samples, 0.68%)</title><rect x="55.0971%" y="533" width="0.6826%" height="15" fill="rgb(216,194,45)"/><text x="55.3471%" y="543.50"></text></g><g><title>do_syscall_64 (48 samples, 0.73%)</title><rect x="55.0667%" y="613" width="0.7282%" height="15" fill="rgb(218,18,35)"/><text x="55.3167%" y="623.50"></text></g><g><title>__x64_sys_sendto (47 samples, 0.71%)</title><rect x="55.0819%" y="597" width="0.7130%" height="15" fill="rgb(207,83,51)"/><text x="55.3319%" y="607.50"></text></g><g><title>__sys_sendto (47 samples, 0.71%)</title><rect x="55.0819%" y="581" width="0.7130%" height="15" fill="rgb(225,63,43)"/><text x="55.3319%" y="591.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (89 samples, 1.35%)</title><rect x="54.4751%" y="741" width="1.3501%" height="15" fill="rgb(207,57,36)"/><text x="54.7251%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (89 samples, 1.35%)</title><rect x="54.4751%" y="725" width="1.3501%" height="15" fill="rgb(216,99,33)"/><text x="54.7251%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (53 samples, 0.80%)</title><rect x="55.0212%" y="709" width="0.8040%" height="15" fill="rgb(225,42,16)"/><text x="55.2712%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 0.79%)</title><rect x="55.0364%" y="693" width="0.7888%" height="15" fill="rgb(220,201,45)"/><text x="55.2864%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (52 samples, 0.79%)</title><rect x="55.0364%" y="677" width="0.7888%" height="15" fill="rgb(225,33,4)"/><text x="55.2864%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (52 samples, 0.79%)</title><rect x="55.0364%" y="661" width="0.7888%" height="15" fill="rgb(224,33,50)"/><text x="55.2864%" y="671.50"></text></g><g><title>__libc_send (52 samples, 0.79%)</title><rect x="55.0364%" y="645" width="0.7888%" height="15" fill="rgb(246,198,51)"/><text x="55.2864%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (51 samples, 0.77%)</title><rect x="55.0516%" y="629" width="0.7737%" height="15" fill="rgb(205,22,4)"/><text x="55.3016%" y="639.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (8 samples, 0.12%)</title><rect x="56.0680%" y="677" width="0.1214%" height="15" fill="rgb(206,3,8)"/><text x="56.3180%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (7 samples, 0.11%)</title><rect x="56.0831%" y="661" width="0.1062%" height="15" fill="rgb(251,23,15)"/><text x="56.3331%" y="671.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.30%)</title><rect x="55.9466%" y="693" width="0.3034%" height="15" fill="rgb(252,88,28)"/><text x="56.1966%" y="703.50"></text></g><g><title>lobsters_microbenchmarks::main (211 samples, 3.20%)</title><rect x="53.0947%" y="773" width="3.2008%" height="15" fill="rgb(212,127,14)"/><text x="53.3447%" y="783.50">lob..</text></g><g><title>lobsters_microbenchmarks::queriers::user::unsubscribe_user (120 samples, 1.82%)</title><rect x="54.4751%" y="757" width="1.8204%" height="15" fill="rgb(247,145,37)"/><text x="54.7251%" y="767.50">l..</text></g><g><title>serde_json::de::from_str (23 samples, 0.35%)</title><rect x="55.9466%" y="741" width="0.3489%" height="15" fill="rgb(209,117,53)"/><text x="56.1966%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (23 samples, 0.35%)</title><rect x="55.9466%" y="725" width="0.3489%" height="15" fill="rgb(212,90,42)"/><text x="56.1966%" y="735.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (23 samples, 0.35%)</title><rect x="55.9466%" y="709" width="0.3489%" height="15" fill="rgb(218,164,37)"/><text x="56.1966%" y="719.50"></text></g><g><title>ip_finish_output2 (15 samples, 0.23%)</title><rect x="56.4320%" y="389" width="0.2275%" height="15" fill="rgb(246,65,34)"/><text x="56.6820%" y="399.50"></text></g><g><title>__local_bh_enable_ip (11 samples, 0.17%)</title><rect x="56.4927%" y="373" width="0.1669%" height="15" fill="rgb(231,100,33)"/><text x="56.7427%" y="383.50"></text></g><g><title>do_softirq (11 samples, 0.17%)</title><rect x="56.4927%" y="357" width="0.1669%" height="15" fill="rgb(228,126,14)"/><text x="56.7427%" y="367.50"></text></g><g><title>do_softirq_own_stack (11 samples, 0.17%)</title><rect x="56.4927%" y="341" width="0.1669%" height="15" fill="rgb(215,173,21)"/><text x="56.7427%" y="351.50"></text></g><g><title>__do_softirq (11 samples, 0.17%)</title><rect x="56.4927%" y="325" width="0.1669%" height="15" fill="rgb(210,6,40)"/><text x="56.7427%" y="335.50"></text></g><g><title>net_rx_action (10 samples, 0.15%)</title><rect x="56.5079%" y="309" width="0.1517%" height="15" fill="rgb(212,48,18)"/><text x="56.7579%" y="319.50"></text></g><g><title>process_backlog (9 samples, 0.14%)</title><rect x="56.5231%" y="293" width="0.1365%" height="15" fill="rgb(230,214,11)"/><text x="56.7731%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (8 samples, 0.12%)</title><rect x="56.5382%" y="277" width="0.1214%" height="15" fill="rgb(254,105,39)"/><text x="56.7882%" y="287.50"></text></g><g><title>ip_rcv (8 samples, 0.12%)</title><rect x="56.5382%" y="261" width="0.1214%" height="15" fill="rgb(245,158,5)"/><text x="56.7882%" y="271.50"></text></g><g><title>ip_local_deliver (7 samples, 0.11%)</title><rect x="56.5534%" y="245" width="0.1062%" height="15" fill="rgb(249,208,11)"/><text x="56.8034%" y="255.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.11%)</title><rect x="56.5534%" y="229" width="0.1062%" height="15" fill="rgb(210,39,28)"/><text x="56.8034%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.11%)</title><rect x="56.5534%" y="213" width="0.1062%" height="15" fill="rgb(211,56,53)"/><text x="56.8034%" y="223.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.11%)</title><rect x="56.5534%" y="197" width="0.1062%" height="15" fill="rgb(226,201,30)"/><text x="56.8034%" y="207.50"></text></g><g><title>__tcp_transmit_skb (17 samples, 0.26%)</title><rect x="56.4169%" y="437" width="0.2579%" height="15" fill="rgb(239,101,34)"/><text x="56.6669%" y="447.50"></text></g><g><title>__ip_queue_xmit (17 samples, 0.26%)</title><rect x="56.4169%" y="421" width="0.2579%" height="15" fill="rgb(226,209,5)"/><text x="56.6669%" y="431.50"></text></g><g><title>ip_output (16 samples, 0.24%)</title><rect x="56.4320%" y="405" width="0.2427%" height="15" fill="rgb(250,105,47)"/><text x="56.6820%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (18 samples, 0.27%)</title><rect x="56.4169%" y="469" width="0.2731%" height="15" fill="rgb(230,72,3)"/><text x="56.6669%" y="479.50"></text></g><g><title>tcp_write_xmit (18 samples, 0.27%)</title><rect x="56.4169%" y="453" width="0.2731%" height="15" fill="rgb(232,218,39)"/><text x="56.6669%" y="463.50"></text></g><g><title>do_syscall_64 (22 samples, 0.33%)</title><rect x="56.4017%" y="565" width="0.3337%" height="15" fill="rgb(248,166,6)"/><text x="56.6517%" y="575.50"></text></g><g><title>__x64_sys_sendto (22 samples, 0.33%)</title><rect x="56.4017%" y="549" width="0.3337%" height="15" fill="rgb(247,89,20)"/><text x="56.6517%" y="559.50"></text></g><g><title>__sys_sendto (22 samples, 0.33%)</title><rect x="56.4017%" y="533" width="0.3337%" height="15" fill="rgb(248,130,54)"/><text x="56.6517%" y="543.50"></text></g><g><title>sock_sendmsg (22 samples, 0.33%)</title><rect x="56.4017%" y="517" width="0.3337%" height="15" fill="rgb(234,196,4)"/><text x="56.6517%" y="527.50"></text></g><g><title>tcp_sendmsg (22 samples, 0.33%)</title><rect x="56.4017%" y="501" width="0.3337%" height="15" fill="rgb(250,143,31)"/><text x="56.6517%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (21 samples, 0.32%)</title><rect x="56.4169%" y="485" width="0.3186%" height="15" fill="rgb(211,110,34)"/><text x="56.6669%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 0.35%)</title><rect x="56.4017%" y="581" width="0.3489%" height="15" fill="rgb(215,124,48)"/><text x="56.6517%" y="591.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (26 samples, 0.39%)</title><rect x="56.3714%" y="693" width="0.3944%" height="15" fill="rgb(216,46,13)"/><text x="56.6214%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (25 samples, 0.38%)</title><rect x="56.3865%" y="677" width="0.3792%" height="15" fill="rgb(205,184,25)"/><text x="56.6365%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (25 samples, 0.38%)</title><rect x="56.3865%" y="661" width="0.3792%" height="15" fill="rgb(228,1,10)"/><text x="56.6365%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (24 samples, 0.36%)</title><rect x="56.4017%" y="645" width="0.3641%" height="15" fill="rgb(213,116,27)"/><text x="56.6517%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (24 samples, 0.36%)</title><rect x="56.4017%" y="629" width="0.3641%" height="15" fill="rgb(241,95,50)"/><text x="56.6517%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (24 samples, 0.36%)</title><rect x="56.4017%" y="613" width="0.3641%" height="15" fill="rgb(238,48,32)"/><text x="56.6517%" y="623.50"></text></g><g><title>__libc_send (24 samples, 0.36%)</title><rect x="56.4017%" y="597" width="0.3641%" height="15" fill="rgb(235,113,49)"/><text x="56.6517%" y="607.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (27 samples, 0.41%)</title><rect x="56.3714%" y="709" width="0.4096%" height="15" fill="rgb(205,127,43)"/><text x="56.6214%" y="719.50"></text></g><g><title>page_fault (8 samples, 0.12%)</title><rect x="56.8720%" y="645" width="0.1214%" height="15" fill="rgb(250,162,2)"/><text x="57.1220%" y="655.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.12%)</title><rect x="56.8720%" y="629" width="0.1214%" height="15" fill="rgb(220,13,41)"/><text x="57.1220%" y="639.50"></text></g><g><title>handle_mm_fault (8 samples, 0.12%)</title><rect x="56.8720%" y="613" width="0.1214%" height="15" fill="rgb(249,221,25)"/><text x="57.1220%" y="623.50"></text></g><g><title>__handle_mm_fault (8 samples, 0.12%)</title><rect x="56.8720%" y="597" width="0.1214%" height="15" fill="rgb(215,208,19)"/><text x="57.1220%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.23%)</title><rect x="56.7961%" y="677" width="0.2275%" height="15" fill="rgb(236,175,2)"/><text x="57.0461%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (14 samples, 0.21%)</title><rect x="56.8113%" y="661" width="0.2124%" height="15" fill="rgb(241,52,2)"/><text x="57.0613%" y="671.50"></text></g><g><title>__GI___mprotect (7 samples, 0.11%)</title><rect x="57.0237%" y="613" width="0.1062%" height="15" fill="rgb(248,140,14)"/><text x="57.2737%" y="623.50"></text></g><g><title>decor_mem::views::View::insert_into_index (27 samples, 0.41%)</title><rect x="56.7961%" y="693" width="0.4096%" height="15" fill="rgb(253,22,42)"/><text x="57.0461%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (12 samples, 0.18%)</title><rect x="57.0237%" y="677" width="0.1820%" height="15" fill="rgb(234,61,47)"/><text x="57.2737%" y="687.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.18%)</title><rect x="57.0237%" y="661" width="0.1820%" height="15" fill="rgb(208,226,15)"/><text x="57.2737%" y="671.50"></text></g><g><title>_int_malloc (12 samples, 0.18%)</title><rect x="57.0237%" y="645" width="0.1820%" height="15" fill="rgb(217,221,4)"/><text x="57.2737%" y="655.50"></text></g><g><title>sysmalloc (12 samples, 0.18%)</title><rect x="57.0237%" y="629" width="0.1820%" height="15" fill="rgb(212,174,34)"/><text x="57.2737%" y="639.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (60 samples, 0.91%)</title><rect x="56.3107%" y="773" width="0.9102%" height="15" fill="rgb(253,83,4)"/><text x="56.5607%" y="783.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (56 samples, 0.85%)</title><rect x="56.3714%" y="757" width="0.8495%" height="15" fill="rgb(250,195,49)"/><text x="56.6214%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (56 samples, 0.85%)</title><rect x="56.3714%" y="741" width="0.8495%" height="15" fill="rgb(241,192,25)"/><text x="56.6214%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (56 samples, 0.85%)</title><rect x="56.3714%" y="725" width="0.8495%" height="15" fill="rgb(208,124,10)"/><text x="56.6214%" y="735.50"></text></g><g><title>decor_mem::views::Views::insert (29 samples, 0.44%)</title><rect x="56.7809%" y="709" width="0.4399%" height="15" fill="rgb(222,33,0)"/><text x="57.0309%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (9 samples, 0.14%)</title><rect x="57.4788%" y="661" width="0.1365%" height="15" fill="rgb(234,209,28)"/><text x="57.7288%" y="671.50"></text></g><g><title>__memset_avx2_erms (9 samples, 0.14%)</title><rect x="57.4788%" y="645" width="0.1365%" height="15" fill="rgb(224,11,23)"/><text x="57.7288%" y="655.50"></text></g><g><title>decor_mem::views::Views::insert (13 samples, 0.20%)</title><rect x="57.4484%" y="693" width="0.1972%" height="15" fill="rgb(232,99,1)"/><text x="57.6984%" y="703.50"></text></g><g><title>decor_mem::views::View::insert_into_index (12 samples, 0.18%)</title><rect x="57.4636%" y="677" width="0.1820%" height="15" fill="rgb(237,95,45)"/><text x="57.7136%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (28 samples, 0.42%)</title><rect x="57.2360%" y="725" width="0.4248%" height="15" fill="rgb(208,109,11)"/><text x="57.4860%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (28 samples, 0.42%)</title><rect x="57.2360%" y="709" width="0.4248%" height="15" fill="rgb(216,190,48)"/><text x="57.4860%" y="719.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (32 samples, 0.49%)</title><rect x="57.2360%" y="741" width="0.4854%" height="15" fill="rgb(251,171,36)"/><text x="57.4860%" y="751.50"></text></g><g><title>sk_wait_data (14 samples, 0.21%)</title><rect x="57.8125%" y="421" width="0.2124%" height="15" fill="rgb(230,62,22)"/><text x="58.0625%" y="431.50"></text></g><g><title>wait_woken (13 samples, 0.20%)</title><rect x="57.8277%" y="405" width="0.1972%" height="15" fill="rgb(225,114,35)"/><text x="58.0777%" y="415.50"></text></g><g><title>schedule_timeout (12 samples, 0.18%)</title><rect x="57.8428%" y="389" width="0.1820%" height="15" fill="rgb(215,118,42)"/><text x="58.0928%" y="399.50"></text></g><g><title>schedule (11 samples, 0.17%)</title><rect x="57.8580%" y="373" width="0.1669%" height="15" fill="rgb(243,119,21)"/><text x="58.1080%" y="383.50"></text></g><g><title>__schedule (11 samples, 0.17%)</title><rect x="57.8580%" y="357" width="0.1669%" height="15" fill="rgb(252,177,53)"/><text x="58.1080%" y="367.50"></text></g><g><title>inet_recvmsg (18 samples, 0.27%)</title><rect x="57.7822%" y="453" width="0.2731%" height="15" fill="rgb(237,209,29)"/><text x="58.0322%" y="463.50"></text></g><g><title>tcp_recvmsg (18 samples, 0.27%)</title><rect x="57.7822%" y="437" width="0.2731%" height="15" fill="rgb(212,65,23)"/><text x="58.0322%" y="447.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 0.30%)</title><rect x="57.7670%" y="485" width="0.3034%" height="15" fill="rgb(230,222,46)"/><text x="58.0170%" y="495.50"></text></g><g><title>__sys_recvfrom (20 samples, 0.30%)</title><rect x="57.7670%" y="469" width="0.3034%" height="15" fill="rgb(215,135,32)"/><text x="58.0170%" y="479.50"></text></g><g><title>do_syscall_64 (21 samples, 0.32%)</title><rect x="57.7670%" y="501" width="0.3186%" height="15" fill="rgb(246,101,22)"/><text x="58.0170%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (27 samples, 0.41%)</title><rect x="57.7215%" y="613" width="0.4096%" height="15" fill="rgb(206,107,13)"/><text x="57.9715%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 0.41%)</title><rect x="57.7215%" y="597" width="0.4096%" height="15" fill="rgb(250,100,44)"/><text x="57.9715%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (27 samples, 0.41%)</title><rect x="57.7215%" y="581" width="0.4096%" height="15" fill="rgb(231,147,38)"/><text x="57.9715%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (27 samples, 0.41%)</title><rect x="57.7215%" y="565" width="0.4096%" height="15" fill="rgb(229,8,40)"/><text x="57.9715%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 0.41%)</title><rect x="57.7215%" y="549" width="0.4096%" height="15" fill="rgb(221,135,30)"/><text x="57.9715%" y="559.50"></text></g><g><title>__libc_recv (27 samples, 0.41%)</title><rect x="57.7215%" y="533" width="0.4096%" height="15" fill="rgb(249,193,18)"/><text x="57.9715%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.36%)</title><rect x="57.7670%" y="517" width="0.3641%" height="15" fill="rgb(209,133,39)"/><text x="58.0170%" y="527.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (28 samples, 0.42%)</title><rect x="57.7215%" y="709" width="0.4248%" height="15" fill="rgb(232,100,14)"/><text x="57.9715%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (28 samples, 0.42%)</title><rect x="57.7215%" y="693" width="0.4248%" height="15" fill="rgb(224,185,1)"/><text x="57.9715%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (28 samples, 0.42%)</title><rect x="57.7215%" y="677" width="0.4248%" height="15" fill="rgb(223,139,8)"/><text x="57.9715%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (28 samples, 0.42%)</title><rect x="57.7215%" y="661" width="0.4248%" height="15" fill="rgb(232,213,38)"/><text x="57.9715%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (28 samples, 0.42%)</title><rect x="57.7215%" y="645" width="0.4248%" height="15" fill="rgb(207,94,22)"/><text x="57.9715%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.42%)</title><rect x="57.7215%" y="629" width="0.4248%" height="15" fill="rgb(219,183,54)"/><text x="57.9715%" y="639.50"></text></g><g><title>sk_wait_data (20 samples, 0.30%)</title><rect x="58.3131%" y="421" width="0.3034%" height="15" fill="rgb(216,185,54)"/><text x="58.5631%" y="431.50"></text></g><g><title>wait_woken (17 samples, 0.26%)</title><rect x="58.3586%" y="405" width="0.2579%" height="15" fill="rgb(254,217,39)"/><text x="58.6086%" y="415.50"></text></g><g><title>schedule_timeout (16 samples, 0.24%)</title><rect x="58.3738%" y="389" width="0.2427%" height="15" fill="rgb(240,178,23)"/><text x="58.6238%" y="399.50"></text></g><g><title>schedule (15 samples, 0.23%)</title><rect x="58.3890%" y="373" width="0.2275%" height="15" fill="rgb(218,11,47)"/><text x="58.6390%" y="383.50"></text></g><g><title>__schedule (15 samples, 0.23%)</title><rect x="58.3890%" y="357" width="0.2275%" height="15" fill="rgb(218,51,51)"/><text x="58.6390%" y="367.50"></text></g><g><title>inet_recvmsg (28 samples, 0.42%)</title><rect x="58.2069%" y="453" width="0.4248%" height="15" fill="rgb(238,126,27)"/><text x="58.4569%" y="463.50"></text></g><g><title>tcp_recvmsg (27 samples, 0.41%)</title><rect x="58.2221%" y="437" width="0.4096%" height="15" fill="rgb(249,202,22)"/><text x="58.4721%" y="447.50"></text></g><g><title>__x64_sys_recvfrom (29 samples, 0.44%)</title><rect x="58.2069%" y="485" width="0.4399%" height="15" fill="rgb(254,195,49)"/><text x="58.4569%" y="495.50"></text></g><g><title>__sys_recvfrom (29 samples, 0.44%)</title><rect x="58.2069%" y="469" width="0.4399%" height="15" fill="rgb(208,123,14)"/><text x="58.4569%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (30 samples, 0.46%)</title><rect x="58.2069%" y="517" width="0.4551%" height="15" fill="rgb(224,200,8)"/><text x="58.4569%" y="527.50"></text></g><g><title>do_syscall_64 (30 samples, 0.46%)</title><rect x="58.2069%" y="501" width="0.4551%" height="15" fill="rgb(217,61,36)"/><text x="58.4569%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 0.47%)</title><rect x="58.2069%" y="613" width="0.4703%" height="15" fill="rgb(206,35,45)"/><text x="58.4569%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (31 samples, 0.47%)</title><rect x="58.2069%" y="597" width="0.4703%" height="15" fill="rgb(217,65,33)"/><text x="58.4569%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (31 samples, 0.47%)</title><rect x="58.2069%" y="581" width="0.4703%" height="15" fill="rgb(222,158,48)"/><text x="58.4569%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (31 samples, 0.47%)</title><rect x="58.2069%" y="565" width="0.4703%" height="15" fill="rgb(254,2,54)"/><text x="58.4569%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (31 samples, 0.47%)</title><rect x="58.2069%" y="549" width="0.4703%" height="15" fill="rgb(250,143,38)"/><text x="58.4569%" y="559.50"></text></g><g><title>__libc_recv (31 samples, 0.47%)</title><rect x="58.2069%" y="533" width="0.4703%" height="15" fill="rgb(248,25,0)"/><text x="58.4569%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.55%)</title><rect x="58.1917%" y="629" width="0.5461%" height="15" fill="rgb(206,152,27)"/><text x="58.4417%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (40 samples, 0.61%)</title><rect x="58.1462%" y="693" width="0.6068%" height="15" fill="rgb(240,77,30)"/><text x="58.3962%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (40 samples, 0.61%)</title><rect x="58.1462%" y="677" width="0.6068%" height="15" fill="rgb(231,5,3)"/><text x="58.3962%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (40 samples, 0.61%)</title><rect x="58.1462%" y="661" width="0.6068%" height="15" fill="rgb(207,226,32)"/><text x="58.3962%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (39 samples, 0.59%)</title><rect x="58.1614%" y="645" width="0.5916%" height="15" fill="rgb(222,207,47)"/><text x="58.4114%" y="655.50"></text></g><g><title>sk_wait_data (15 samples, 0.23%)</title><rect x="58.9199%" y="405" width="0.2275%" height="15" fill="rgb(229,115,45)"/><text x="59.1699%" y="415.50"></text></g><g><title>wait_woken (12 samples, 0.18%)</title><rect x="58.9654%" y="389" width="0.1820%" height="15" fill="rgb(224,191,6)"/><text x="59.2154%" y="399.50"></text></g><g><title>schedule_timeout (10 samples, 0.15%)</title><rect x="58.9958%" y="373" width="0.1517%" height="15" fill="rgb(230,227,24)"/><text x="59.2458%" y="383.50"></text></g><g><title>schedule (10 samples, 0.15%)</title><rect x="58.9958%" y="357" width="0.1517%" height="15" fill="rgb(228,80,19)"/><text x="59.2458%" y="367.50"></text></g><g><title>__schedule (10 samples, 0.15%)</title><rect x="58.9958%" y="341" width="0.1517%" height="15" fill="rgb(247,229,0)"/><text x="59.2458%" y="351.50"></text></g><g><title>inet_recvmsg (23 samples, 0.35%)</title><rect x="58.8592%" y="437" width="0.3489%" height="15" fill="rgb(237,194,15)"/><text x="59.1092%" y="447.50"></text></g><g><title>tcp_recvmsg (23 samples, 0.35%)</title><rect x="58.8592%" y="421" width="0.3489%" height="15" fill="rgb(219,203,20)"/><text x="59.1092%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.38%)</title><rect x="58.8441%" y="501" width="0.3792%" height="15" fill="rgb(234,128,8)"/><text x="59.0941%" y="511.50"></text></g><g><title>do_syscall_64 (25 samples, 0.38%)</title><rect x="58.8441%" y="485" width="0.3792%" height="15" fill="rgb(248,202,8)"/><text x="59.0941%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (24 samples, 0.36%)</title><rect x="58.8592%" y="469" width="0.3641%" height="15" fill="rgb(206,104,37)"/><text x="59.1092%" y="479.50"></text></g><g><title>__sys_recvfrom (24 samples, 0.36%)</title><rect x="58.8592%" y="453" width="0.3641%" height="15" fill="rgb(223,8,27)"/><text x="59.1092%" y="463.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.44%)</title><rect x="58.8289%" y="613" width="0.4399%" height="15" fill="rgb(216,217,28)"/><text x="59.0789%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.42%)</title><rect x="58.8441%" y="597" width="0.4248%" height="15" fill="rgb(249,199,1)"/><text x="59.0941%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.42%)</title><rect x="58.8441%" y="581" width="0.4248%" height="15" fill="rgb(240,85,17)"/><text x="59.0941%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.42%)</title><rect x="58.8441%" y="565" width="0.4248%" height="15" fill="rgb(206,108,45)"/><text x="59.0941%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 0.42%)</title><rect x="58.8441%" y="549" width="0.4248%" height="15" fill="rgb(245,210,41)"/><text x="59.0941%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 0.42%)</title><rect x="58.8441%" y="533" width="0.4248%" height="15" fill="rgb(206,13,37)"/><text x="59.0941%" y="543.50"></text></g><g><title>__libc_recv (28 samples, 0.42%)</title><rect x="58.8441%" y="517" width="0.4248%" height="15" fill="rgb(250,61,18)"/><text x="59.0941%" y="527.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (35 samples, 0.53%)</title><rect x="58.7530%" y="645" width="0.5309%" height="15" fill="rgb(235,172,48)"/><text x="59.0030%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 0.47%)</title><rect x="58.8137%" y="629" width="0.4703%" height="15" fill="rgb(249,201,17)"/><text x="59.0637%" y="639.50"></text></g><g><title>__wake_up_common (9 samples, 0.14%)</title><rect x="59.5722%" y="101" width="0.1365%" height="15" fill="rgb(219,208,6)"/><text x="59.8222%" y="111.50"></text></g><g><title>pollwake (8 samples, 0.12%)</title><rect x="59.5874%" y="85" width="0.1214%" height="15" fill="rgb(248,31,23)"/><text x="59.8374%" y="95.50"></text></g><g><title>try_to_wake_up (8 samples, 0.12%)</title><rect x="59.5874%" y="69" width="0.1214%" height="15" fill="rgb(245,15,42)"/><text x="59.8374%" y="79.50"></text></g><g><title>sock_def_readable (10 samples, 0.15%)</title><rect x="59.5722%" y="133" width="0.1517%" height="15" fill="rgb(222,217,39)"/><text x="59.8222%" y="143.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.15%)</title><rect x="59.5722%" y="117" width="0.1517%" height="15" fill="rgb(210,219,27)"/><text x="59.8222%" y="127.50"></text></g><g><title>__netif_receive_skb_one_core (24 samples, 0.36%)</title><rect x="59.4964%" y="261" width="0.3641%" height="15" fill="rgb(252,166,36)"/><text x="59.7464%" y="271.50"></text></g><g><title>ip_rcv (23 samples, 0.35%)</title><rect x="59.5115%" y="245" width="0.3489%" height="15" fill="rgb(245,132,34)"/><text x="59.7615%" y="255.50"></text></g><g><title>ip_local_deliver (23 samples, 0.35%)</title><rect x="59.5115%" y="229" width="0.3489%" height="15" fill="rgb(236,54,3)"/><text x="59.7615%" y="239.50"></text></g><g><title>ip_local_deliver_finish (23 samples, 0.35%)</title><rect x="59.5115%" y="213" width="0.3489%" height="15" fill="rgb(241,173,43)"/><text x="59.7615%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (22 samples, 0.33%)</title><rect x="59.5267%" y="197" width="0.3337%" height="15" fill="rgb(215,190,9)"/><text x="59.7767%" y="207.50"></text></g><g><title>tcp_v4_rcv (22 samples, 0.33%)</title><rect x="59.5267%" y="181" width="0.3337%" height="15" fill="rgb(242,101,16)"/><text x="59.7767%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 0.29%)</title><rect x="59.5722%" y="165" width="0.2882%" height="15" fill="rgb(223,190,21)"/><text x="59.8222%" y="175.50"></text></g><g><title>tcp_rcv_established (19 samples, 0.29%)</title><rect x="59.5722%" y="149" width="0.2882%" height="15" fill="rgb(215,228,25)"/><text x="59.8222%" y="159.50"></text></g><g><title>__ip_queue_xmit (34 samples, 0.52%)</title><rect x="59.3598%" y="405" width="0.5158%" height="15" fill="rgb(225,36,22)"/><text x="59.6098%" y="415.50"></text></g><g><title>ip_output (31 samples, 0.47%)</title><rect x="59.4053%" y="389" width="0.4703%" height="15" fill="rgb(251,106,46)"/><text x="59.6553%" y="399.50"></text></g><g><title>ip_finish_output2 (31 samples, 0.47%)</title><rect x="59.4053%" y="373" width="0.4703%" height="15" fill="rgb(208,90,1)"/><text x="59.6553%" y="383.50"></text></g><g><title>__local_bh_enable_ip (28 samples, 0.42%)</title><rect x="59.4508%" y="357" width="0.4248%" height="15" fill="rgb(243,10,4)"/><text x="59.7008%" y="367.50"></text></g><g><title>do_softirq (28 samples, 0.42%)</title><rect x="59.4508%" y="341" width="0.4248%" height="15" fill="rgb(212,137,27)"/><text x="59.7008%" y="351.50"></text></g><g><title>do_softirq_own_stack (28 samples, 0.42%)</title><rect x="59.4508%" y="325" width="0.4248%" height="15" fill="rgb(231,220,49)"/><text x="59.7008%" y="335.50"></text></g><g><title>__do_softirq (28 samples, 0.42%)</title><rect x="59.4508%" y="309" width="0.4248%" height="15" fill="rgb(237,96,20)"/><text x="59.7008%" y="319.50"></text></g><g><title>net_rx_action (27 samples, 0.41%)</title><rect x="59.4660%" y="293" width="0.4096%" height="15" fill="rgb(239,229,30)"/><text x="59.7160%" y="303.50"></text></g><g><title>process_backlog (26 samples, 0.39%)</title><rect x="59.4812%" y="277" width="0.3944%" height="15" fill="rgb(219,65,33)"/><text x="59.7312%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (39 samples, 0.59%)</title><rect x="59.3295%" y="453" width="0.5916%" height="15" fill="rgb(243,134,7)"/><text x="59.5795%" y="463.50"></text></g><g><title>tcp_write_xmit (39 samples, 0.59%)</title><rect x="59.3295%" y="437" width="0.5916%" height="15" fill="rgb(216,177,54)"/><text x="59.5795%" y="447.50"></text></g><g><title>__tcp_transmit_skb (37 samples, 0.56%)</title><rect x="59.3598%" y="421" width="0.5613%" height="15" fill="rgb(211,160,20)"/><text x="59.6098%" y="431.50"></text></g><g><title>__x64_sys_sendto (50 samples, 0.76%)</title><rect x="59.2992%" y="533" width="0.7585%" height="15" fill="rgb(239,85,39)"/><text x="59.5492%" y="543.50"></text></g><g><title>__sys_sendto (50 samples, 0.76%)</title><rect x="59.2992%" y="517" width="0.7585%" height="15" fill="rgb(232,125,22)"/><text x="59.5492%" y="527.50"></text></g><g><title>sock_sendmsg (50 samples, 0.76%)</title><rect x="59.2992%" y="501" width="0.7585%" height="15" fill="rgb(244,57,34)"/><text x="59.5492%" y="511.50"></text></g><g><title>tcp_sendmsg (50 samples, 0.76%)</title><rect x="59.2992%" y="485" width="0.7585%" height="15" fill="rgb(214,203,32)"/><text x="59.5492%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (50 samples, 0.76%)</title><rect x="59.2992%" y="469" width="0.7585%" height="15" fill="rgb(207,58,43)"/><text x="59.5492%" y="479.50"></text></g><g><title>do_syscall_64 (51 samples, 0.77%)</title><rect x="59.2992%" y="549" width="0.7737%" height="15" fill="rgb(215,193,15)"/><text x="59.5492%" y="559.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (89 samples, 1.35%)</title><rect x="58.7530%" y="693" width="1.3501%" height="15" fill="rgb(232,15,44)"/><text x="59.0030%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (89 samples, 1.35%)</title><rect x="58.7530%" y="677" width="1.3501%" height="15" fill="rgb(212,3,48)"/><text x="59.0030%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (89 samples, 1.35%)</title><rect x="58.7530%" y="661" width="1.3501%" height="15" fill="rgb(218,128,7)"/><text x="59.0030%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (54 samples, 0.82%)</title><rect x="59.2840%" y="645" width="0.8192%" height="15" fill="rgb(226,216,39)"/><text x="59.5340%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (53 samples, 0.80%)</title><rect x="59.2992%" y="629" width="0.8040%" height="15" fill="rgb(243,47,51)"/><text x="59.5492%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (53 samples, 0.80%)</title><rect x="59.2992%" y="613" width="0.8040%" height="15" fill="rgb(241,183,40)"/><text x="59.5492%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (53 samples, 0.80%)</title><rect x="59.2992%" y="597" width="0.8040%" height="15" fill="rgb(231,217,32)"/><text x="59.5492%" y="607.50"></text></g><g><title>__libc_send (53 samples, 0.80%)</title><rect x="59.2992%" y="581" width="0.8040%" height="15" fill="rgb(229,61,38)"/><text x="59.5492%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (53 samples, 0.80%)</title><rect x="59.2992%" y="565" width="0.8040%" height="15" fill="rgb(225,210,5)"/><text x="59.5492%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.18%)</title><rect x="60.1032%" y="613" width="0.1820%" height="15" fill="rgb(231,79,45)"/><text x="60.3532%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="60.1638%" y="597" width="0.1214%" height="15" fill="rgb(224,100,7)"/><text x="60.4138%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="60.1638%" y="581" width="0.1214%" height="15" fill="rgb(241,198,18)"/><text x="60.4138%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.11%)</title><rect x="60.1790%" y="565" width="0.1062%" height="15" fill="rgb(252,97,53)"/><text x="60.4290%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.11%)</title><rect x="60.1790%" y="549" width="0.1062%" height="15" fill="rgb(220,88,7)"/><text x="60.4290%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.11%)</title><rect x="60.1790%" y="533" width="0.1062%" height="15" fill="rgb(213,176,14)"/><text x="60.4290%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.11%)</title><rect x="60.1790%" y="517" width="0.1062%" height="15" fill="rgb(246,73,7)"/><text x="60.4290%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.11%)</title><rect x="60.1790%" y="501" width="0.1062%" height="15" fill="rgb(245,64,36)"/><text x="60.4290%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.11%)</title><rect x="60.1790%" y="485" width="0.1062%" height="15" fill="rgb(245,80,10)"/><text x="60.4290%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.11%)</title><rect x="60.1790%" y="469" width="0.1062%" height="15" fill="rgb(232,107,50)"/><text x="60.4290%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.11%)</title><rect x="60.1790%" y="453" width="0.1062%" height="15" fill="rgb(253,3,0)"/><text x="60.4290%" y="463.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.11%)</title><rect x="60.1790%" y="437" width="0.1062%" height="15" fill="rgb(212,99,53)"/><text x="60.4290%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.12%)</title><rect x="60.3004%" y="533" width="0.1214%" height="15" fill="rgb(249,111,54)"/><text x="60.5504%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.17%)</title><rect x="60.2852%" y="565" width="0.1669%" height="15" fill="rgb(249,55,30)"/><text x="60.5352%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (11 samples, 0.17%)</title><rect x="60.2852%" y="549" width="0.1669%" height="15" fill="rgb(237,47,42)"/><text x="60.5352%" y="559.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (26 samples, 0.39%)</title><rect x="60.1032%" y="645" width="0.3944%" height="15" fill="rgb(211,20,18)"/><text x="60.3532%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (26 samples, 0.39%)</title><rect x="60.1032%" y="629" width="0.3944%" height="15" fill="rgb(231,203,46)"/><text x="60.3532%" y="639.50"></text></g><g><title>decor_mem::helpers::expr_to_col (14 samples, 0.21%)</title><rect x="60.2852%" y="613" width="0.2124%" height="15" fill="rgb(237,142,3)"/><text x="60.5352%" y="623.50"></text></g><g><title>core::fmt::write (14 samples, 0.21%)</title><rect x="60.2852%" y="597" width="0.2124%" height="15" fill="rgb(241,107,1)"/><text x="60.5352%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (14 samples, 0.21%)</title><rect x="60.2852%" y="581" width="0.2124%" height="15" fill="rgb(229,83,13)"/><text x="60.5352%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.12%)</title><rect x="60.4976%" y="629" width="0.1214%" height="15" fill="rgb(241,91,40)"/><text x="60.7476%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="60.4976%" y="613" width="0.1214%" height="15" fill="rgb(225,3,45)"/><text x="60.7476%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="60.4976%" y="597" width="0.1214%" height="15" fill="rgb(244,223,14)"/><text x="60.7476%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.12%)</title><rect x="60.4976%" y="581" width="0.1214%" height="15" fill="rgb(224,124,37)"/><text x="60.7476%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.12%)</title><rect x="60.4976%" y="565" width="0.1214%" height="15" fill="rgb(251,171,30)"/><text x="60.7476%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.12%)</title><rect x="60.4976%" y="549" width="0.1214%" height="15" fill="rgb(236,46,54)"/><text x="60.7476%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.12%)</title><rect x="60.4976%" y="533" width="0.1214%" height="15" fill="rgb(245,213,5)"/><text x="60.7476%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.12%)</title><rect x="60.4976%" y="517" width="0.1214%" height="15" fill="rgb(230,144,27)"/><text x="60.7476%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.12%)</title><rect x="60.4976%" y="501" width="0.1214%" height="15" fill="rgb(220,86,6)"/><text x="60.7476%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (8 samples, 0.12%)</title><rect x="60.4976%" y="485" width="0.1214%" height="15" fill="rgb(240,20,13)"/><text x="60.7476%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.12%)</title><rect x="60.4976%" y="469" width="0.1214%" height="15" fill="rgb(217,89,34)"/><text x="60.7476%" y="479.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.12%)</title><rect x="60.4976%" y="453" width="0.1214%" height="15" fill="rgb(229,13,5)"/><text x="60.7476%" y="463.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.12%)</title><rect x="60.4976%" y="437" width="0.1214%" height="15" fill="rgb(244,67,35)"/><text x="60.7476%" y="447.50"></text></g><g><title>_int_malloc (8 samples, 0.12%)</title><rect x="60.4976%" y="421" width="0.1214%" height="15" fill="rgb(221,40,2)"/><text x="60.7476%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (15 samples, 0.23%)</title><rect x="60.7251%" y="549" width="0.2275%" height="15" fill="rgb(237,157,21)"/><text x="60.9751%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (11 samples, 0.17%)</title><rect x="60.7858%" y="533" width="0.1669%" height="15" fill="rgb(222,94,11)"/><text x="61.0358%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (9 samples, 0.14%)</title><rect x="60.8161%" y="517" width="0.1365%" height="15" fill="rgb(249,113,6)"/><text x="61.0661%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 0.14%)</title><rect x="60.8161%" y="501" width="0.1365%" height="15" fill="rgb(238,137,36)"/><text x="61.0661%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.29%)</title><rect x="60.6796%" y="581" width="0.2882%" height="15" fill="rgb(210,102,26)"/><text x="60.9296%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (19 samples, 0.29%)</title><rect x="60.6796%" y="565" width="0.2882%" height="15" fill="rgb(218,30,30)"/><text x="60.9296%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (61 samples, 0.93%)</title><rect x="60.1032%" y="677" width="0.9254%" height="15" fill="rgb(214,67,26)"/><text x="60.3532%" y="687.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (61 samples, 0.93%)</title><rect x="60.1032%" y="661" width="0.9254%" height="15" fill="rgb(251,9,53)"/><text x="60.3532%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (35 samples, 0.53%)</title><rect x="60.4976%" y="645" width="0.5309%" height="15" fill="rgb(228,204,25)"/><text x="60.7476%" y="655.50"></text></g><g><title>decor_mem::helpers::expr_to_col (27 samples, 0.41%)</title><rect x="60.6189%" y="629" width="0.4096%" height="15" fill="rgb(207,153,8)"/><text x="60.8689%" y="639.50"></text></g><g><title>core::fmt::write (27 samples, 0.41%)</title><rect x="60.6189%" y="613" width="0.4096%" height="15" fill="rgb(242,9,16)"/><text x="60.8689%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (27 samples, 0.41%)</title><rect x="60.6189%" y="597" width="0.4096%" height="15" fill="rgb(217,211,10)"/><text x="60.8689%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (11 samples, 0.17%)</title><rect x="61.3471%" y="597" width="0.1669%" height="15" fill="rgb(219,228,52)"/><text x="61.5971%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 0.55%)</title><rect x="61.0285%" y="629" width="0.5461%" height="15" fill="rgb(231,92,29)"/><text x="61.2785%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (19 samples, 0.29%)</title><rect x="61.2864%" y="613" width="0.2882%" height="15" fill="rgb(232,8,23)"/><text x="61.5364%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (41 samples, 0.62%)</title><rect x="61.0285%" y="645" width="0.6220%" height="15" fill="rgb(216,211,34)"/><text x="61.2785%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.12%)</title><rect x="61.9235%" y="581" width="0.1214%" height="15" fill="rgb(236,151,0)"/><text x="62.1735%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.11%)</title><rect x="61.9387%" y="565" width="0.1062%" height="15" fill="rgb(209,168,3)"/><text x="62.1887%" y="575.50"></text></g><g><title>core::fmt::write (28 samples, 0.42%)</title><rect x="61.6505%" y="645" width="0.4248%" height="15" fill="rgb(208,129,28)"/><text x="61.9005%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (28 samples, 0.42%)</title><rect x="61.6505%" y="629" width="0.4248%" height="15" fill="rgb(229,78,22)"/><text x="61.9005%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (25 samples, 0.38%)</title><rect x="61.6960%" y="613" width="0.3792%" height="15" fill="rgb(228,187,13)"/><text x="61.9460%" y="623.50"></text></g><g><title>core::fmt::write (12 samples, 0.18%)</title><rect x="61.8932%" y="597" width="0.1820%" height="15" fill="rgb(240,119,24)"/><text x="62.1432%" y="607.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (25 samples, 0.38%)</title><rect x="62.0752%" y="645" width="0.3792%" height="15" fill="rgb(209,194,42)"/><text x="62.3252%" y="655.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (25 samples, 0.38%)</title><rect x="62.0752%" y="629" width="0.3792%" height="15" fill="rgb(247,200,46)"/><text x="62.3252%" y="639.50"></text></g><g><title>__x64_sys_mprotect (15 samples, 0.23%)</title><rect x="63.0309%" y="517" width="0.2275%" height="15" fill="rgb(218,76,16)"/><text x="63.2809%" y="527.50"></text></g><g><title>do_mprotect_pkey (15 samples, 0.23%)</title><rect x="63.0309%" y="501" width="0.2275%" height="15" fill="rgb(225,21,48)"/><text x="63.2809%" y="511.50"></text></g><g><title>mprotect_fixup (15 samples, 0.23%)</title><rect x="63.0309%" y="485" width="0.2275%" height="15" fill="rgb(239,223,50)"/><text x="63.2809%" y="495.50"></text></g><g><title>perf_event_mmap (11 samples, 0.17%)</title><rect x="63.0916%" y="469" width="0.1669%" height="15" fill="rgb(244,45,21)"/><text x="63.3416%" y="479.50"></text></g><g><title>perf_iterate_sb (9 samples, 0.14%)</title><rect x="63.1220%" y="453" width="0.1365%" height="15" fill="rgb(232,33,43)"/><text x="63.3720%" y="463.50"></text></g><g><title>perf_iterate_ctx (8 samples, 0.12%)</title><rect x="63.1371%" y="437" width="0.1214%" height="15" fill="rgb(209,8,3)"/><text x="63.3871%" y="447.50"></text></g><g><title>do_syscall_64 (17 samples, 0.26%)</title><rect x="63.0309%" y="533" width="0.2579%" height="15" fill="rgb(214,25,53)"/><text x="63.2809%" y="543.50"></text></g><g><title>__GI___mprotect (18 samples, 0.27%)</title><rect x="63.0309%" y="565" width="0.2731%" height="15" fill="rgb(254,186,54)"/><text x="63.2809%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.27%)</title><rect x="63.0309%" y="549" width="0.2731%" height="15" fill="rgb(208,174,49)"/><text x="63.2809%" y="559.50"></text></g><g><title>page_fault (11 samples, 0.17%)</title><rect x="63.3040%" y="565" width="0.1669%" height="15" fill="rgb(233,191,51)"/><text x="63.5540%" y="575.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.15%)</title><rect x="63.3192%" y="549" width="0.1517%" height="15" fill="rgb(222,134,10)"/><text x="63.5692%" y="559.50"></text></g><g><title>handle_mm_fault (10 samples, 0.15%)</title><rect x="63.3192%" y="533" width="0.1517%" height="15" fill="rgb(230,226,20)"/><text x="63.5692%" y="543.50"></text></g><g><title>__handle_mm_fault (9 samples, 0.14%)</title><rect x="63.3343%" y="517" width="0.1365%" height="15" fill="rgb(251,111,25)"/><text x="63.5843%" y="527.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.52%)</title><rect x="63.0006%" y="613" width="0.5158%" height="15" fill="rgb(224,40,46)"/><text x="63.2506%" y="623.50"></text></g><g><title>_int_malloc (33 samples, 0.50%)</title><rect x="63.0158%" y="597" width="0.5006%" height="15" fill="rgb(236,108,47)"/><text x="63.2658%" y="607.50"></text></g><g><title>sysmalloc (33 samples, 0.50%)</title><rect x="63.0158%" y="581" width="0.5006%" height="15" fill="rgb(234,93,0)"/><text x="63.2658%" y="591.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.11%)</title><rect x="63.8350%" y="549" width="0.1062%" height="15" fill="rgb(224,213,32)"/><text x="64.0850%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (29 samples, 0.44%)</title><rect x="63.5164%" y="613" width="0.4399%" height="15" fill="rgb(251,11,48)"/><text x="63.7664%" y="623.50"></text></g><g><title>page_fault (9 samples, 0.14%)</title><rect x="63.8198%" y="597" width="0.1365%" height="15" fill="rgb(236,173,5)"/><text x="64.0698%" y="607.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.14%)</title><rect x="63.8198%" y="581" width="0.1365%" height="15" fill="rgb(230,95,12)"/><text x="64.0698%" y="591.50"></text></g><g><title>handle_mm_fault (9 samples, 0.14%)</title><rect x="63.8198%" y="565" width="0.1365%" height="15" fill="rgb(232,209,1)"/><text x="64.0698%" y="575.50"></text></g><g><title>alloc_pages_vma (25 samples, 0.38%)</title><rect x="64.2900%" y="549" width="0.3792%" height="15" fill="rgb(232,6,1)"/><text x="64.5400%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (25 samples, 0.38%)</title><rect x="64.2900%" y="533" width="0.3792%" height="15" fill="rgb(210,224,50)"/><text x="64.5400%" y="543.50"></text></g><g><title>get_page_from_freelist (24 samples, 0.36%)</title><rect x="64.3052%" y="517" width="0.3641%" height="15" fill="rgb(228,127,35)"/><text x="64.5552%" y="527.50"></text></g><g><title>prep_new_page (16 samples, 0.24%)</title><rect x="64.4266%" y="501" width="0.2427%" height="15" fill="rgb(245,102,45)"/><text x="64.6766%" y="511.50"></text></g><g><title>kernel_init_free_pages (16 samples, 0.24%)</title><rect x="64.4266%" y="485" width="0.2427%" height="15" fill="rgb(214,1,49)"/><text x="64.6766%" y="495.50"></text></g><g><title>clear_page_erms (16 samples, 0.24%)</title><rect x="64.4266%" y="469" width="0.2427%" height="15" fill="rgb(226,163,40)"/><text x="64.6766%" y="479.50"></text></g><g><title>__handle_mm_fault (41 samples, 0.62%)</title><rect x="64.1535%" y="565" width="0.6220%" height="15" fill="rgb(239,212,28)"/><text x="64.4035%" y="575.50"></text></g><g><title>do_user_addr_fault (49 samples, 0.74%)</title><rect x="64.0473%" y="597" width="0.7433%" height="15" fill="rgb(220,20,13)"/><text x="64.2973%" y="607.50"></text></g><g><title>handle_mm_fault (47 samples, 0.71%)</title><rect x="64.0777%" y="581" width="0.7130%" height="15" fill="rgb(210,164,35)"/><text x="64.3277%" y="591.50"></text></g><g><title>page_fault (51 samples, 0.77%)</title><rect x="64.0322%" y="613" width="0.7737%" height="15" fill="rgb(248,109,41)"/><text x="64.2822%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (149 samples, 2.26%)</title><rect x="62.6669%" y="629" width="2.2603%" height="15" fill="rgb(238,23,50)"/><text x="62.9169%" y="639.50">&lt;..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.12%)</title><rect x="64.8058%" y="613" width="0.1214%" height="15" fill="rgb(211,48,49)"/><text x="65.0558%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.11%)</title><rect x="64.9727%" y="629" width="0.1062%" height="15" fill="rgb(223,36,21)"/><text x="65.2227%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.23%)</title><rect x="65.1851%" y="629" width="0.2275%" height="15" fill="rgb(207,123,46)"/><text x="65.4351%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.14%)</title><rect x="65.2761%" y="613" width="0.1365%" height="15" fill="rgb(240,218,32)"/><text x="65.5261%" y="623.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (201 samples, 3.05%)</title><rect x="62.4545%" y="645" width="3.0492%" height="15" fill="rgb(252,5,43)"/><text x="62.7045%" y="655.50">dec..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (357 samples, 5.42%)</title><rect x="60.1032%" y="693" width="5.4157%" height="15" fill="rgb(252,84,19)"/><text x="60.3532%" y="703.50">decor_m..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (296 samples, 4.49%)</title><rect x="61.0285%" y="677" width="4.4903%" height="15" fill="rgb(243,152,39)"/><text x="61.2785%" y="687.50">decor..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (296 samples, 4.49%)</title><rect x="61.0285%" y="661" width="4.4903%" height="15" fill="rgb(234,160,15)"/><text x="61.2785%" y="671.50">decor..</text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (11 samples, 0.17%)</title><rect x="65.5188%" y="661" width="0.1669%" height="15" fill="rgb(237,34,20)"/><text x="65.7688%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (11 samples, 0.17%)</title><rect x="65.5188%" y="645" width="0.1669%" height="15" fill="rgb(229,97,13)"/><text x="65.7688%" y="655.50"></text></g><g><title>decor_mem::helpers::expr_to_col (8 samples, 0.12%)</title><rect x="65.5643%" y="629" width="0.1214%" height="15" fill="rgb(234,71,50)"/><text x="65.8143%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.11%)</title><rect x="65.8981%" y="613" width="0.1062%" height="15" fill="rgb(253,155,4)"/><text x="66.1481%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (16 samples, 0.24%)</title><rect x="65.8677%" y="629" width="0.2427%" height="15" fill="rgb(222,185,37)"/><text x="66.1177%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (7 samples, 0.11%)</title><rect x="66.0042%" y="613" width="0.1062%" height="15" fill="rgb(251,177,13)"/><text x="66.2542%" y="623.50"></text></g><g><title>core::fmt::write (8 samples, 0.12%)</title><rect x="66.1711%" y="629" width="0.1214%" height="15" fill="rgb(250,179,40)"/><text x="66.4211%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.18%)</title><rect x="66.4745%" y="613" width="0.1820%" height="15" fill="rgb(242,44,2)"/><text x="66.7245%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (11 samples, 0.17%)</title><rect x="66.4897%" y="597" width="0.1669%" height="15" fill="rgb(216,177,13)"/><text x="66.7397%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.11%)</title><rect x="66.5504%" y="581" width="0.1062%" height="15" fill="rgb(216,106,43)"/><text x="66.8004%" y="591.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (591 samples, 8.97%)</title><rect x="57.7215%" y="741" width="8.9654%" height="15" fill="rgb(216,183,2)"/><text x="57.9715%" y="751.50">&lt;decor_mem::S..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (591 samples, 8.97%)</title><rect x="57.7215%" y="725" width="8.9654%" height="15" fill="rgb(249,75,3)"/><text x="57.9715%" y="735.50">decor_mem::qu..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (563 samples, 8.54%)</title><rect x="58.1462%" y="709" width="8.5407%" height="15" fill="rgb(219,67,39)"/><text x="58.3962%" y="719.50">decor_mem::q..</text></g><g><title>decor_mem::views::Views::delete (77 samples, 1.17%)</title><rect x="65.5188%" y="693" width="1.1681%" height="15" fill="rgb(253,228,2)"/><text x="65.7688%" y="703.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (77 samples, 1.17%)</title><rect x="65.5188%" y="677" width="1.1681%" height="15" fill="rgb(235,138,27)"/><text x="65.7688%" y="687.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (66 samples, 1.00%)</title><rect x="65.6857%" y="661" width="1.0012%" height="15" fill="rgb(236,97,51)"/><text x="65.9357%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (58 samples, 0.88%)</title><rect x="65.8070%" y="645" width="0.8799%" height="15" fill="rgb(240,80,30)"/><text x="66.0570%" y="655.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (25 samples, 0.38%)</title><rect x="66.3076%" y="629" width="0.3792%" height="15" fill="rgb(230,178,19)"/><text x="66.5576%" y="639.50"></text></g><g><title>sk_wait_data (17 samples, 0.26%)</title><rect x="66.8234%" y="421" width="0.2579%" height="15" fill="rgb(210,190,27)"/><text x="67.0734%" y="431.50"></text></g><g><title>wait_woken (16 samples, 0.24%)</title><rect x="66.8386%" y="405" width="0.2427%" height="15" fill="rgb(222,107,31)"/><text x="67.0886%" y="415.50"></text></g><g><title>schedule_timeout (13 samples, 0.20%)</title><rect x="66.8841%" y="389" width="0.1972%" height="15" fill="rgb(216,127,34)"/><text x="67.1341%" y="399.50"></text></g><g><title>schedule (13 samples, 0.20%)</title><rect x="66.8841%" y="373" width="0.1972%" height="15" fill="rgb(234,116,52)"/><text x="67.1341%" y="383.50"></text></g><g><title>__schedule (13 samples, 0.20%)</title><rect x="66.8841%" y="357" width="0.1972%" height="15" fill="rgb(222,124,15)"/><text x="67.1341%" y="367.50"></text></g><g><title>__x64_sys_recvfrom (25 samples, 0.38%)</title><rect x="66.7627%" y="485" width="0.3792%" height="15" fill="rgb(231,179,28)"/><text x="67.0127%" y="495.50"></text></g><g><title>__sys_recvfrom (25 samples, 0.38%)</title><rect x="66.7627%" y="469" width="0.3792%" height="15" fill="rgb(226,93,45)"/><text x="67.0127%" y="479.50"></text></g><g><title>inet_recvmsg (25 samples, 0.38%)</title><rect x="66.7627%" y="453" width="0.3792%" height="15" fill="rgb(215,8,51)"/><text x="67.0127%" y="463.50"></text></g><g><title>tcp_recvmsg (25 samples, 0.38%)</title><rect x="66.7627%" y="437" width="0.3792%" height="15" fill="rgb(223,106,5)"/><text x="67.0127%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 0.41%)</title><rect x="66.7476%" y="517" width="0.4096%" height="15" fill="rgb(250,191,5)"/><text x="66.9976%" y="527.50"></text></g><g><title>do_syscall_64 (26 samples, 0.39%)</title><rect x="66.7627%" y="501" width="0.3944%" height="15" fill="rgb(242,132,44)"/><text x="67.0127%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (32 samples, 0.49%)</title><rect x="66.6869%" y="613" width="0.4854%" height="15" fill="rgb(251,152,29)"/><text x="66.9369%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (31 samples, 0.47%)</title><rect x="66.7021%" y="597" width="0.4703%" height="15" fill="rgb(218,179,5)"/><text x="66.9521%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (31 samples, 0.47%)</title><rect x="66.7021%" y="581" width="0.4703%" height="15" fill="rgb(227,67,19)"/><text x="66.9521%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (31 samples, 0.47%)</title><rect x="66.7021%" y="565" width="0.4703%" height="15" fill="rgb(233,119,31)"/><text x="66.9521%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (31 samples, 0.47%)</title><rect x="66.7021%" y="549" width="0.4703%" height="15" fill="rgb(241,120,22)"/><text x="66.9521%" y="559.50"></text></g><g><title>__libc_recv (31 samples, 0.47%)</title><rect x="66.7021%" y="533" width="0.4703%" height="15" fill="rgb(224,102,30)"/><text x="66.9521%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.56%)</title><rect x="66.6869%" y="629" width="0.5613%" height="15" fill="rgb(210,164,37)"/><text x="66.9369%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (38 samples, 0.58%)</title><rect x="66.6869%" y="645" width="0.5765%" height="15" fill="rgb(226,191,16)"/><text x="66.9369%" y="655.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (39 samples, 0.59%)</title><rect x="66.6869%" y="709" width="0.5916%" height="15" fill="rgb(214,40,45)"/><text x="66.9369%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (39 samples, 0.59%)</title><rect x="66.6869%" y="693" width="0.5916%" height="15" fill="rgb(244,29,26)"/><text x="66.9369%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (39 samples, 0.59%)</title><rect x="66.6869%" y="677" width="0.5916%" height="15" fill="rgb(216,16,5)"/><text x="66.9369%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (39 samples, 0.59%)</title><rect x="66.6869%" y="661" width="0.5916%" height="15" fill="rgb(249,76,35)"/><text x="66.9369%" y="671.50"></text></g><g><title>sk_wait_data (24 samples, 0.36%)</title><rect x="67.5061%" y="421" width="0.3641%" height="15" fill="rgb(207,11,44)"/><text x="67.7561%" y="431.50"></text></g><g><title>wait_woken (20 samples, 0.30%)</title><rect x="67.5667%" y="405" width="0.3034%" height="15" fill="rgb(228,190,49)"/><text x="67.8167%" y="415.50"></text></g><g><title>schedule_timeout (19 samples, 0.29%)</title><rect x="67.5819%" y="389" width="0.2882%" height="15" fill="rgb(214,173,12)"/><text x="67.8319%" y="399.50"></text></g><g><title>schedule (18 samples, 0.27%)</title><rect x="67.5971%" y="373" width="0.2731%" height="15" fill="rgb(218,26,35)"/><text x="67.8471%" y="383.50"></text></g><g><title>__schedule (17 samples, 0.26%)</title><rect x="67.6123%" y="357" width="0.2579%" height="15" fill="rgb(220,200,19)"/><text x="67.8623%" y="367.50"></text></g><g><title>inet_recvmsg (31 samples, 0.47%)</title><rect x="67.4606%" y="453" width="0.4703%" height="15" fill="rgb(239,95,49)"/><text x="67.7106%" y="463.50"></text></g><g><title>tcp_recvmsg (31 samples, 0.47%)</title><rect x="67.4606%" y="437" width="0.4703%" height="15" fill="rgb(235,85,53)"/><text x="67.7106%" y="447.50"></text></g><g><title>do_syscall_64 (33 samples, 0.50%)</title><rect x="67.4454%" y="501" width="0.5006%" height="15" fill="rgb(233,133,31)"/><text x="67.6954%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (33 samples, 0.50%)</title><rect x="67.4454%" y="485" width="0.5006%" height="15" fill="rgb(218,25,20)"/><text x="67.6954%" y="495.50"></text></g><g><title>__sys_recvfrom (33 samples, 0.50%)</title><rect x="67.4454%" y="469" width="0.5006%" height="15" fill="rgb(252,210,38)"/><text x="67.6954%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (35 samples, 0.53%)</title><rect x="67.4302%" y="517" width="0.5309%" height="15" fill="rgb(242,134,21)"/><text x="67.6802%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (40 samples, 0.61%)</title><rect x="67.3695%" y="613" width="0.6068%" height="15" fill="rgb(213,28,48)"/><text x="67.6195%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (40 samples, 0.61%)</title><rect x="67.3695%" y="597" width="0.6068%" height="15" fill="rgb(250,196,2)"/><text x="67.6195%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (40 samples, 0.61%)</title><rect x="67.3695%" y="581" width="0.6068%" height="15" fill="rgb(227,5,17)"/><text x="67.6195%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (40 samples, 0.61%)</title><rect x="67.3695%" y="565" width="0.6068%" height="15" fill="rgb(221,226,24)"/><text x="67.6195%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 0.61%)</title><rect x="67.3695%" y="549" width="0.6068%" height="15" fill="rgb(211,5,48)"/><text x="67.6195%" y="559.50"></text></g><g><title>__libc_recv (40 samples, 0.61%)</title><rect x="67.3695%" y="533" width="0.6068%" height="15" fill="rgb(219,150,6)"/><text x="67.6195%" y="543.50"></text></g><g><title>mysql::conn::Conn::read_packet (47 samples, 0.71%)</title><rect x="67.3240%" y="645" width="0.7130%" height="15" fill="rgb(251,46,16)"/><text x="67.5740%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.70%)</title><rect x="67.3392%" y="629" width="0.6978%" height="15" fill="rgb(220,204,40)"/><text x="67.5892%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (53 samples, 0.80%)</title><rect x="67.2785%" y="693" width="0.8040%" height="15" fill="rgb(211,85,2)"/><text x="67.5285%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (53 samples, 0.80%)</title><rect x="67.2785%" y="677" width="0.8040%" height="15" fill="rgb(229,17,7)"/><text x="67.5285%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (53 samples, 0.80%)</title><rect x="67.2785%" y="661" width="0.8040%" height="15" fill="rgb(239,72,28)"/><text x="67.5285%" y="671.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.15%)</title><rect x="68.1584%" y="581" width="0.1517%" height="15" fill="rgb(230,47,54)"/><text x="68.4084%" y="591.50"></text></g><g><title>_int_malloc (7 samples, 0.11%)</title><rect x="68.2039%" y="565" width="0.1062%" height="15" fill="rgb(214,50,8)"/><text x="68.4539%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (21 samples, 0.32%)</title><rect x="68.0825%" y="613" width="0.3186%" height="15" fill="rgb(216,198,43)"/><text x="68.3325%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (21 samples, 0.32%)</title><rect x="68.0825%" y="597" width="0.3186%" height="15" fill="rgb(234,20,35)"/><text x="68.3325%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.47%)</title><rect x="68.0825%" y="629" width="0.4703%" height="15" fill="rgb(254,45,19)"/><text x="68.3325%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.15%)</title><rect x="68.4011%" y="613" width="0.1517%" height="15" fill="rgb(219,14,44)"/><text x="68.6511%" y="623.50"></text></g><g><title>core::fmt::write (37 samples, 0.56%)</title><rect x="68.0825%" y="661" width="0.5613%" height="15" fill="rgb(217,220,26)"/><text x="68.3325%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (37 samples, 0.56%)</title><rect x="68.0825%" y="645" width="0.5613%" height="15" fill="rgb(213,158,28)"/><text x="68.3325%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.21%)</title><rect x="68.7045%" y="613" width="0.2124%" height="15" fill="rgb(252,51,52)"/><text x="68.9545%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.11%)</title><rect x="68.8107%" y="597" width="0.1062%" height="15" fill="rgb(246,89,16)"/><text x="69.0607%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::generate_new_entities_from (112 samples, 1.70%)</title><rect x="67.2785%" y="709" width="1.6990%" height="15" fill="rgb(216,158,49)"/><text x="67.5285%" y="719.50"></text></g><g><title>decor_mem::views::Views::insert (59 samples, 0.90%)</title><rect x="68.0825%" y="693" width="0.8950%" height="15" fill="rgb(236,107,19)"/><text x="68.3325%" y="703.50"></text></g><g><title>decor_mem::views::View::insert_into_index (59 samples, 0.90%)</title><rect x="68.0825%" y="677" width="0.8950%" height="15" fill="rgb(228,185,30)"/><text x="68.3325%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (22 samples, 0.33%)</title><rect x="68.6438%" y="661" width="0.3337%" height="15" fill="rgb(246,134,8)"/><text x="68.8938%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (22 samples, 0.33%)</title><rect x="68.6438%" y="645" width="0.3337%" height="15" fill="rgb(214,143,50)"/><text x="68.8938%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (22 samples, 0.33%)</title><rect x="68.6438%" y="629" width="0.3337%" height="15" fill="rgb(228,75,8)"/><text x="68.8938%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (26 samples, 0.39%)</title><rect x="69.0534%" y="485" width="0.3944%" height="15" fill="rgb(207,175,4)"/><text x="69.3034%" y="495.50"></text></g><g><title>__sys_recvfrom (26 samples, 0.39%)</title><rect x="69.0534%" y="469" width="0.3944%" height="15" fill="rgb(205,108,24)"/><text x="69.3034%" y="479.50"></text></g><g><title>inet_recvmsg (26 samples, 0.39%)</title><rect x="69.0534%" y="453" width="0.3944%" height="15" fill="rgb(244,120,49)"/><text x="69.3034%" y="463.50"></text></g><g><title>tcp_recvmsg (26 samples, 0.39%)</title><rect x="69.0534%" y="437" width="0.3944%" height="15" fill="rgb(223,47,38)"/><text x="69.3034%" y="447.50"></text></g><g><title>sk_wait_data (19 samples, 0.29%)</title><rect x="69.1596%" y="421" width="0.2882%" height="15" fill="rgb(229,179,11)"/><text x="69.4096%" y="431.50"></text></g><g><title>wait_woken (17 samples, 0.26%)</title><rect x="69.1899%" y="405" width="0.2579%" height="15" fill="rgb(231,122,1)"/><text x="69.4399%" y="415.50"></text></g><g><title>schedule_timeout (16 samples, 0.24%)</title><rect x="69.2051%" y="389" width="0.2427%" height="15" fill="rgb(245,119,9)"/><text x="69.4551%" y="399.50"></text></g><g><title>schedule (15 samples, 0.23%)</title><rect x="69.2203%" y="373" width="0.2275%" height="15" fill="rgb(241,163,25)"/><text x="69.4703%" y="383.50"></text></g><g><title>__schedule (15 samples, 0.23%)</title><rect x="69.2203%" y="357" width="0.2275%" height="15" fill="rgb(217,214,3)"/><text x="69.4703%" y="367.50"></text></g><g><title>do_syscall_64 (28 samples, 0.42%)</title><rect x="69.0534%" y="501" width="0.4248%" height="15" fill="rgb(240,86,28)"/><text x="69.3034%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 0.49%)</title><rect x="69.0534%" y="517" width="0.4854%" height="15" fill="rgb(215,47,9)"/><text x="69.3034%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 0.53%)</title><rect x="69.0382%" y="613" width="0.5309%" height="15" fill="rgb(252,25,45)"/><text x="69.2882%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (35 samples, 0.53%)</title><rect x="69.0382%" y="597" width="0.5309%" height="15" fill="rgb(251,164,9)"/><text x="69.2882%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (35 samples, 0.53%)</title><rect x="69.0382%" y="581" width="0.5309%" height="15" fill="rgb(233,194,0)"/><text x="69.2882%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (35 samples, 0.53%)</title><rect x="69.0382%" y="565" width="0.5309%" height="15" fill="rgb(249,111,24)"/><text x="69.2882%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (35 samples, 0.53%)</title><rect x="69.0382%" y="549" width="0.5309%" height="15" fill="rgb(250,223,3)"/><text x="69.2882%" y="559.50"></text></g><g><title>__libc_recv (35 samples, 0.53%)</title><rect x="69.0382%" y="533" width="0.5309%" height="15" fill="rgb(236,178,37)"/><text x="69.2882%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.59%)</title><rect x="69.0382%" y="629" width="0.5916%" height="15" fill="rgb(241,158,50)"/><text x="69.2882%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (44 samples, 0.67%)</title><rect x="68.9775%" y="693" width="0.6675%" height="15" fill="rgb(213,121,41)"/><text x="69.2275%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (44 samples, 0.67%)</title><rect x="68.9775%" y="677" width="0.6675%" height="15" fill="rgb(240,92,3)"/><text x="69.2275%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (44 samples, 0.67%)</title><rect x="68.9775%" y="661" width="0.6675%" height="15" fill="rgb(205,123,3)"/><text x="69.2275%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (41 samples, 0.62%)</title><rect x="69.0231%" y="645" width="0.6220%" height="15" fill="rgb(205,97,47)"/><text x="69.2731%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (8 samples, 0.12%)</title><rect x="69.6450%" y="661" width="0.1214%" height="15" fill="rgb(247,152,14)"/><text x="69.8950%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (8 samples, 0.12%)</title><rect x="69.6450%" y="645" width="0.1214%" height="15" fill="rgb(248,195,53)"/><text x="69.8950%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (12 samples, 0.18%)</title><rect x="69.7816%" y="645" width="0.1820%" height="15" fill="rgb(226,201,16)"/><text x="70.0316%" y="655.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (22 samples, 0.33%)</title><rect x="69.6450%" y="677" width="0.3337%" height="15" fill="rgb(205,98,0)"/><text x="69.8950%" y="687.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (14 samples, 0.21%)</title><rect x="69.7664%" y="661" width="0.2124%" height="15" fill="rgb(214,191,48)"/><text x="70.0164%" y="671.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (850 samples, 12.89%)</title><rect x="57.2209%" y="773" width="12.8944%" height="15" fill="rgb(237,112,39)"/><text x="57.4709%" y="783.50">msql_srv::MysqlInte..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (850 samples, 12.89%)</title><rect x="57.2209%" y="757" width="12.8944%" height="15" fill="rgb(247,203,27)"/><text x="57.4709%" y="767.50">msql_srv::MysqlInte..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (226 samples, 3.43%)</title><rect x="66.6869%" y="741" width="3.4284%" height="15" fill="rgb(235,124,28)"/><text x="66.9369%" y="751.50">&lt;de..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (226 samples, 3.43%)</title><rect x="66.6869%" y="725" width="3.4284%" height="15" fill="rgb(208,207,46)"/><text x="66.9369%" y="735.50">dec..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (75 samples, 1.14%)</title><rect x="68.9775%" y="709" width="1.1377%" height="15" fill="rgb(234,176,4)"/><text x="69.2275%" y="719.50"></text></g><g><title>decor_mem::views::Views::delete (31 samples, 0.47%)</title><rect x="69.6450%" y="693" width="0.4703%" height="15" fill="rgb(230,133,28)"/><text x="69.8950%" y="703.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (9 samples, 0.14%)</title><rect x="69.9788%" y="677" width="0.1365%" height="15" fill="rgb(211,137,40)"/><text x="70.2288%" y="687.50"></text></g><g><title>core::fmt::write (9 samples, 0.14%)</title><rect x="69.9788%" y="661" width="0.1365%" height="15" fill="rgb(254,35,13)"/><text x="70.2288%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.14%)</title><rect x="69.9788%" y="645" width="0.1365%" height="15" fill="rgb(225,49,51)"/><text x="70.2288%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.11%)</title><rect x="70.0091%" y="629" width="0.1062%" height="15" fill="rgb(251,10,15)"/><text x="70.2591%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (27 samples, 0.41%)</title><rect x="70.3732%" y="693" width="0.4096%" height="15" fill="rgb(228,207,15)"/><text x="70.6232%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (27 samples, 0.41%)</title><rect x="70.3732%" y="677" width="0.4096%" height="15" fill="rgb(241,99,19)"/><text x="70.6232%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.41%)</title><rect x="70.3732%" y="661" width="0.4096%" height="15" fill="rgb(207,104,49)"/><text x="70.6232%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.41%)</title><rect x="70.3732%" y="645" width="0.4096%" height="15" fill="rgb(234,99,18)"/><text x="70.6232%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.41%)</title><rect x="70.3732%" y="629" width="0.4096%" height="15" fill="rgb(213,191,49)"/><text x="70.6232%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.41%)</title><rect x="70.3732%" y="613" width="0.4096%" height="15" fill="rgb(210,226,19)"/><text x="70.6232%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (27 samples, 0.41%)</title><rect x="70.3732%" y="597" width="0.4096%" height="15" fill="rgb(229,97,18)"/><text x="70.6232%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.41%)</title><rect x="70.3732%" y="581" width="0.4096%" height="15" fill="rgb(211,167,15)"/><text x="70.6232%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (27 samples, 0.41%)</title><rect x="70.3732%" y="565" width="0.4096%" height="15" fill="rgb(210,169,34)"/><text x="70.6232%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.41%)</title><rect x="70.3732%" y="549" width="0.4096%" height="15" fill="rgb(241,121,31)"/><text x="70.6232%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.41%)</title><rect x="70.3732%" y="533" width="0.4096%" height="15" fill="rgb(232,40,11)"/><text x="70.6232%" y="543.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 0.50%)</title><rect x="70.3125%" y="773" width="0.5006%" height="15" fill="rgb(205,86,26)"/><text x="70.5625%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (32 samples, 0.49%)</title><rect x="70.3277%" y="757" width="0.4854%" height="15" fill="rgb(231,126,28)"/><text x="70.5777%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (32 samples, 0.49%)</title><rect x="70.3277%" y="741" width="0.4854%" height="15" fill="rgb(219,221,18)"/><text x="70.5777%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (32 samples, 0.49%)</title><rect x="70.3277%" y="725" width="0.4854%" height="15" fill="rgb(211,40,0)"/><text x="70.5777%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (32 samples, 0.49%)</title><rect x="70.3277%" y="709" width="0.4854%" height="15" fill="rgb(239,85,43)"/><text x="70.5777%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (7 samples, 0.11%)</title><rect x="70.8131%" y="773" width="0.1062%" height="15" fill="rgb(231,55,21)"/><text x="71.0631%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (7 samples, 0.11%)</title><rect x="70.8131%" y="757" width="0.1062%" height="15" fill="rgb(225,184,43)"/><text x="71.0631%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (7 samples, 0.11%)</title><rect x="70.8131%" y="741" width="0.1062%" height="15" fill="rgb(251,158,41)"/><text x="71.0631%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (7 samples, 0.11%)</title><rect x="70.8131%" y="725" width="0.1062%" height="15" fill="rgb(234,159,37)"/><text x="71.0631%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (7 samples, 0.11%)</title><rect x="70.8131%" y="709" width="0.1062%" height="15" fill="rgb(216,204,22)"/><text x="71.0631%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (7 samples, 0.11%)</title><rect x="70.8131%" y="693" width="0.1062%" height="15" fill="rgb(214,17,3)"/><text x="71.0631%" y="703.50"></text></g><g><title>crypto::digest::Digest::result_str (24 samples, 0.36%)</title><rect x="71.0255%" y="597" width="0.3641%" height="15" fill="rgb(212,111,17)"/><text x="71.2755%" y="607.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (24 samples, 0.36%)</title><rect x="71.0255%" y="581" width="0.3641%" height="15" fill="rgb(221,157,24)"/><text x="71.2755%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (24 samples, 0.36%)</title><rect x="71.0255%" y="565" width="0.3641%" height="15" fill="rgb(252,16,13)"/><text x="71.2755%" y="575.50"></text></g><g><title>crypto::sha3::keccak_f (24 samples, 0.36%)</title><rect x="71.0255%" y="549" width="0.3641%" height="15" fill="rgb(221,62,2)"/><text x="71.2755%" y="559.50"></text></g><g><title>decor_mem::ghosts_map::answer_rows (7 samples, 0.11%)</title><rect x="71.3896%" y="597" width="0.1062%" height="15" fill="rgb(247,87,22)"/><text x="71.6396%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.17%)</title><rect x="71.7081%" y="581" width="0.1669%" height="15" fill="rgb(215,73,9)"/><text x="71.9581%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::remove (8 samples, 0.12%)</title><rect x="71.8750%" y="581" width="0.1214%" height="15" fill="rgb(207,175,33)"/><text x="72.1250%" y="591.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (42 samples, 0.64%)</title><rect x="71.4958%" y="597" width="0.6371%" height="15" fill="rgb(243,129,54)"/><text x="71.7458%" y="607.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.11%)</title><rect x="72.0267%" y="581" width="0.1062%" height="15" fill="rgb(227,119,45)"/><text x="72.2767%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.11%)</title><rect x="72.0267%" y="565" width="0.1062%" height="15" fill="rgb(205,109,36)"/><text x="72.2767%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (7 samples, 0.11%)</title><rect x="72.0267%" y="549" width="0.1062%" height="15" fill="rgb(205,6,39)"/><text x="72.2767%" y="559.50"></text></g><g><title>__clock_gettime_2 (7 samples, 0.11%)</title><rect x="72.0267%" y="533" width="0.1062%" height="15" fill="rgb(221,32,16)"/><text x="72.2767%" y="543.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.11%)</title><rect x="72.0267%" y="517" width="0.1062%" height="15" fill="rgb(228,144,50)"/><text x="72.2767%" y="527.50"></text></g><g><title>start_thread (79 samples, 1.20%)</title><rect x="70.9496%" y="773" width="1.1984%" height="15" fill="rgb(229,201,53)"/><text x="71.1996%" y="783.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (79 samples, 1.20%)</title><rect x="70.9496%" y="757" width="1.1984%" height="15" fill="rgb(249,153,27)"/><text x="71.1996%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (79 samples, 1.20%)</title><rect x="70.9496%" y="741" width="1.1984%" height="15" fill="rgb(227,106,25)"/><text x="71.1996%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (79 samples, 1.20%)</title><rect x="70.9496%" y="725" width="1.1984%" height="15" fill="rgb(230,65,29)"/><text x="71.1996%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (79 samples, 1.20%)</title><rect x="70.9496%" y="709" width="1.1984%" height="15" fill="rgb(221,57,46)"/><text x="71.1996%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (79 samples, 1.20%)</title><rect x="70.9496%" y="693" width="1.1984%" height="15" fill="rgb(229,161,17)"/><text x="71.1996%" y="703.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (79 samples, 1.20%)</title><rect x="70.9496%" y="677" width="1.1984%" height="15" fill="rgb(222,213,11)"/><text x="71.1996%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (79 samples, 1.20%)</title><rect x="70.9496%" y="661" width="1.1984%" height="15" fill="rgb(235,35,13)"/><text x="71.1996%" y="671.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (79 samples, 1.20%)</title><rect x="70.9496%" y="645" width="1.1984%" height="15" fill="rgb(233,158,34)"/><text x="71.1996%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (79 samples, 1.20%)</title><rect x="70.9496%" y="629" width="1.1984%" height="15" fill="rgb(215,151,48)"/><text x="71.1996%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (79 samples, 1.20%)</title><rect x="70.9496%" y="613" width="1.1984%" height="15" fill="rgb(229,84,14)"/><text x="71.1996%" y="623.50"></text></g><g><title>std::rt::lang_start_internal (11 samples, 0.17%)</title><rect x="72.2239%" y="773" width="0.1669%" height="15" fill="rgb(229,68,14)"/><text x="72.4739%" y="783.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.17%)</title><rect x="72.2239%" y="757" width="0.1669%" height="15" fill="rgb(243,106,26)"/><text x="72.4739%" y="767.50"></text></g><g><title>std::panicking::try (11 samples, 0.17%)</title><rect x="72.2239%" y="741" width="0.1669%" height="15" fill="rgb(206,45,38)"/><text x="72.4739%" y="751.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.17%)</title><rect x="72.2239%" y="725" width="0.1669%" height="15" fill="rgb(226,6,15)"/><text x="72.4739%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (11 samples, 0.17%)</title><rect x="72.2239%" y="709" width="0.1669%" height="15" fill="rgb(232,22,54)"/><text x="72.4739%" y="719.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (11 samples, 0.17%)</title><rect x="72.2239%" y="693" width="0.1669%" height="15" fill="rgb(229,222,32)"/><text x="72.4739%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.17%)</title><rect x="72.2239%" y="677" width="0.1669%" height="15" fill="rgb(228,62,29)"/><text x="72.4739%" y="687.50"></text></g><g><title>lobsters_microbenchmarks::main (11 samples, 0.17%)</title><rect x="72.2239%" y="661" width="0.1669%" height="15" fill="rgb(251,103,34)"/><text x="72.4739%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.11%)</title><rect x="72.5121%" y="597" width="0.1062%" height="15" fill="rgb(233,12,30)"/><text x="72.7621%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.11%)</title><rect x="72.5121%" y="581" width="0.1062%" height="15" fill="rgb(238,52,0)"/><text x="72.7621%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.27%)</title><rect x="72.3908%" y="773" width="0.2731%" height="15" fill="rgb(223,98,5)"/><text x="72.6408%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (18 samples, 0.27%)</title><rect x="72.3908%" y="757" width="0.2731%" height="15" fill="rgb(228,75,37)"/><text x="72.6408%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (18 samples, 0.27%)</title><rect x="72.3908%" y="741" width="0.2731%" height="15" fill="rgb(205,115,49)"/><text x="72.6408%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (18 samples, 0.27%)</title><rect x="72.3908%" y="725" width="0.2731%" height="15" fill="rgb(250,154,43)"/><text x="72.6408%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.27%)</title><rect x="72.3908%" y="709" width="0.2731%" height="15" fill="rgb(226,43,29)"/><text x="72.6408%" y="719.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (18 samples, 0.27%)</title><rect x="72.3908%" y="693" width="0.2731%" height="15" fill="rgb(249,228,39)"/><text x="72.6408%" y="703.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (18 samples, 0.27%)</title><rect x="72.3908%" y="677" width="0.2731%" height="15" fill="rgb(216,79,43)"/><text x="72.6408%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (18 samples, 0.27%)</title><rect x="72.3908%" y="661" width="0.2731%" height="15" fill="rgb(228,95,12)"/><text x="72.6408%" y="671.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (18 samples, 0.27%)</title><rect x="72.3908%" y="645" width="0.2731%" height="15" fill="rgb(249,221,15)"/><text x="72.6408%" y="655.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (18 samples, 0.27%)</title><rect x="72.3908%" y="629" width="0.2731%" height="15" fill="rgb(233,34,13)"/><text x="72.6408%" y="639.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (12 samples, 0.18%)</title><rect x="72.4818%" y="613" width="0.1820%" height="15" fill="rgb(214,103,39)"/><text x="72.7318%" y="623.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (19 samples, 0.29%)</title><rect x="72.7397%" y="677" width="0.2882%" height="15" fill="rgb(251,126,39)"/><text x="72.9897%" y="687.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.17%)</title><rect x="73.4830%" y="661" width="0.1669%" height="15" fill="rgb(214,216,36)"/><text x="73.7330%" y="671.50"></text></g><g><title>_int_free (9 samples, 0.14%)</title><rect x="73.7409%" y="661" width="0.1365%" height="15" fill="rgb(220,221,8)"/><text x="73.9909%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (8 samples, 0.12%)</title><rect x="73.9836%" y="645" width="0.1214%" height="15" fill="rgb(240,216,3)"/><text x="74.2336%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (8 samples, 0.12%)</title><rect x="73.9836%" y="629" width="0.1214%" height="15" fill="rgb(232,218,17)"/><text x="74.2336%" y="639.50"></text></g><g><title>core::fmt::write (14 samples, 0.21%)</title><rect x="73.9078%" y="661" width="0.2124%" height="15" fill="rgb(229,163,45)"/><text x="74.1578%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.29%)</title><rect x="74.1201%" y="661" width="0.2882%" height="15" fill="rgb(231,110,42)"/><text x="74.3701%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.14%)</title><rect x="74.2718%" y="645" width="0.1365%" height="15" fill="rgb(208,170,48)"/><text x="74.5218%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (122 samples, 1.85%)</title><rect x="72.7397%" y="709" width="1.8507%" height="15" fill="rgb(239,116,25)"/><text x="72.9897%" y="719.50">&lt;..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (122 samples, 1.85%)</title><rect x="72.7397%" y="693" width="1.8507%" height="15" fill="rgb(219,200,50)"/><text x="72.9897%" y="703.50">d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (103 samples, 1.56%)</title><rect x="73.0279%" y="677" width="1.5625%" height="15" fill="rgb(245,200,0)"/><text x="73.2779%" y="687.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (18 samples, 0.27%)</title><rect x="74.6056%" y="677" width="0.2731%" height="15" fill="rgb(245,119,33)"/><text x="74.8556%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::generate_new_entities_from (8 samples, 0.12%)</title><rect x="74.8786%" y="677" width="0.1214%" height="15" fill="rgb(231,125,12)"/><text x="75.1286%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe_child_parent_edges (13 samples, 0.20%)</title><rect x="75.0000%" y="677" width="0.1972%" height="15" fill="rgb(216,96,41)"/><text x="75.2500%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.12%)</title><rect x="75.4399%" y="597" width="0.1214%" height="15" fill="rgb(248,43,45)"/><text x="75.6899%" y="607.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (191 samples, 2.90%)</title><rect x="72.7245%" y="757" width="2.8975%" height="15" fill="rgb(217,222,7)"/><text x="72.9745%" y="767.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (191 samples, 2.90%)</title><rect x="72.7245%" y="741" width="2.8975%" height="15" fill="rgb(233,28,6)"/><text x="72.9745%" y="751.50">ms..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (191 samples, 2.90%)</title><rect x="72.7245%" y="725" width="2.8975%" height="15" fill="rgb(231,218,15)"/><text x="72.9745%" y="735.50">ms..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (68 samples, 1.03%)</title><rect x="74.5904%" y="709" width="1.0316%" height="15" fill="rgb(226,171,48)"/><text x="74.8404%" y="719.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (68 samples, 1.03%)</title><rect x="74.5904%" y="693" width="1.0316%" height="15" fill="rgb(235,201,9)"/><text x="74.8404%" y="703.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (22 samples, 0.33%)</title><rect x="75.2882%" y="677" width="0.3337%" height="15" fill="rgb(217,80,15)"/><text x="75.5382%" y="687.50"></text></g><g><title>core::fmt::write (22 samples, 0.33%)</title><rect x="75.2882%" y="661" width="0.3337%" height="15" fill="rgb(219,152,8)"/><text x="75.5382%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (22 samples, 0.33%)</title><rect x="75.2882%" y="645" width="0.3337%" height="15" fill="rgb(243,107,38)"/><text x="75.5382%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (21 samples, 0.32%)</title><rect x="75.3034%" y="629" width="0.3186%" height="15" fill="rgb(231,17,5)"/><text x="75.5534%" y="639.50"></text></g><g><title>core::fmt::write (12 samples, 0.18%)</title><rect x="75.4399%" y="613" width="0.1820%" height="15" fill="rgb(209,25,54)"/><text x="75.6899%" y="623.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (195 samples, 2.96%)</title><rect x="72.7245%" y="773" width="2.9581%" height="15" fill="rgb(219,0,2)"/><text x="72.9745%" y="783.50">std..</text></g><g><title>[unknown] (4,507 samples, 68.37%)</title><rect x="7.4333%" y="789" width="68.3708%" height="15" fill="rgb(246,9,5)"/><text x="7.6833%" y="799.50">[unknown]</text></g><g><title>free_pcppages_bulk (12 samples, 0.18%)</title><rect x="76.1226%" y="565" width="0.1820%" height="15" fill="rgb(226,159,4)"/><text x="76.3726%" y="575.50"></text></g><g><title>__free_one_page (11 samples, 0.17%)</title><rect x="76.1377%" y="549" width="0.1669%" height="15" fill="rgb(219,175,34)"/><text x="76.3877%" y="559.50"></text></g><g><title>free_unref_page_list (16 samples, 0.24%)</title><rect x="76.0922%" y="581" width="0.2427%" height="15" fill="rgb(236,10,46)"/><text x="76.3422%" y="591.50"></text></g><g><title>tlb_finish_mmu (34 samples, 0.52%)</title><rect x="75.8799%" y="613" width="0.5158%" height="15" fill="rgb(240,211,16)"/><text x="76.1299%" y="623.50"></text></g><g><title>release_pages (33 samples, 0.50%)</title><rect x="75.8950%" y="597" width="0.5006%" height="15" fill="rgb(205,3,43)"/><text x="76.1450%" y="607.50"></text></g><g><title>page_remove_rmap.part.0 (7 samples, 0.11%)</title><rect x="76.5625%" y="581" width="0.1062%" height="15" fill="rgb(245,7,22)"/><text x="76.8125%" y="591.50"></text></g><g><title>__malloc_arena_thread_freeres (58 samples, 0.88%)</title><rect x="75.8040%" y="757" width="0.8799%" height="15" fill="rgb(239,132,32)"/><text x="76.0540%" y="767.50"></text></g><g><title>_int_free (58 samples, 0.88%)</title><rect x="75.8040%" y="741" width="0.8799%" height="15" fill="rgb(228,202,34)"/><text x="76.0540%" y="751.50"></text></g><g><title>__GI_munmap (53 samples, 0.80%)</title><rect x="75.8799%" y="725" width="0.8040%" height="15" fill="rgb(254,200,22)"/><text x="76.1299%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (53 samples, 0.80%)</title><rect x="75.8799%" y="709" width="0.8040%" height="15" fill="rgb(219,10,39)"/><text x="76.1299%" y="719.50"></text></g><g><title>do_syscall_64 (53 samples, 0.80%)</title><rect x="75.8799%" y="693" width="0.8040%" height="15" fill="rgb(226,210,39)"/><text x="76.1299%" y="703.50"></text></g><g><title>__x64_sys_munmap (53 samples, 0.80%)</title><rect x="75.8799%" y="677" width="0.8040%" height="15" fill="rgb(208,219,16)"/><text x="76.1299%" y="687.50"></text></g><g><title>__vm_munmap (53 samples, 0.80%)</title><rect x="75.8799%" y="661" width="0.8040%" height="15" fill="rgb(216,158,51)"/><text x="76.1299%" y="671.50"></text></g><g><title>__do_munmap (53 samples, 0.80%)</title><rect x="75.8799%" y="645" width="0.8040%" height="15" fill="rgb(233,14,44)"/><text x="76.1299%" y="655.50"></text></g><g><title>unmap_region (53 samples, 0.80%)</title><rect x="75.8799%" y="629" width="0.8040%" height="15" fill="rgb(237,97,39)"/><text x="76.1299%" y="639.50"></text></g><g><title>unmap_vmas (19 samples, 0.29%)</title><rect x="76.3956%" y="613" width="0.2882%" height="15" fill="rgb(218,198,43)"/><text x="76.6456%" y="623.50"></text></g><g><title>unmap_page_range (19 samples, 0.29%)</title><rect x="76.3956%" y="597" width="0.2882%" height="15" fill="rgb(231,104,20)"/><text x="76.6456%" y="607.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.18%)</title><rect x="76.8659%" y="613" width="0.1820%" height="15" fill="rgb(254,36,13)"/><text x="77.1159%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.36%)</title><rect x="77.1390%" y="613" width="0.3641%" height="15" fill="rgb(248,14,50)"/><text x="77.3890%" y="623.50"></text></g><g><title>__GI___libc_realloc (23 samples, 0.35%)</title><rect x="77.1541%" y="597" width="0.3489%" height="15" fill="rgb(217,107,29)"/><text x="77.4041%" y="607.50"></text></g><g><title>_int_realloc (13 samples, 0.20%)</title><rect x="77.3058%" y="581" width="0.1972%" height="15" fill="rgb(251,169,33)"/><text x="77.5558%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 0.70%)</title><rect x="76.8356%" y="629" width="0.6978%" height="15" fill="rgb(217,108,32)"/><text x="77.0856%" y="639.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (29 samples, 0.44%)</title><rect x="77.8064%" y="597" width="0.4399%" height="15" fill="rgb(219,66,42)"/><text x="78.0564%" y="607.50"></text></g><g><title>crypto::sha3::keccak_f (26 samples, 0.39%)</title><rect x="77.8519%" y="581" width="0.3944%" height="15" fill="rgb(206,180,7)"/><text x="78.1019%" y="591.50"></text></g><g><title>crypto::digest::Digest::result_str (33 samples, 0.50%)</title><rect x="78.4436%" y="597" width="0.5006%" height="15" fill="rgb(208,226,31)"/><text x="78.6936%" y="607.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (33 samples, 0.50%)</title><rect x="78.4436%" y="581" width="0.5006%" height="15" fill="rgb(218,26,49)"/><text x="78.6936%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (33 samples, 0.50%)</title><rect x="78.4436%" y="565" width="0.5006%" height="15" fill="rgb(233,197,48)"/><text x="78.6936%" y="575.50"></text></g><g><title>crypto::sha3::keccak_f (30 samples, 0.46%)</title><rect x="78.4891%" y="549" width="0.4551%" height="15" fill="rgb(252,181,51)"/><text x="78.7391%" y="559.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (87 samples, 1.32%)</title><rect x="77.7002%" y="613" width="1.3198%" height="15" fill="rgb(253,90,19)"/><text x="77.9502%" y="623.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (101 samples, 1.53%)</title><rect x="77.5334%" y="629" width="1.5322%" height="15" fill="rgb(215,171,30)"/><text x="77.7834%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.12%)</title><rect x="79.8089%" y="533" width="0.1214%" height="15" fill="rgb(214,222,9)"/><text x="80.0589%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.12%)</title><rect x="79.8089%" y="517" width="0.1214%" height="15" fill="rgb(223,3,22)"/><text x="80.0589%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (8 samples, 0.12%)</title><rect x="79.8089%" y="501" width="0.1214%" height="15" fill="rgb(225,196,46)"/><text x="80.0589%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.12%)</title><rect x="79.8089%" y="485" width="0.1214%" height="15" fill="rgb(209,110,37)"/><text x="80.0589%" y="495.50"></text></g><g><title>__GI___libc_malloc (115 samples, 1.74%)</title><rect x="79.9606%" y="421" width="1.7445%" height="15" fill="rgb(249,89,12)"/><text x="80.2106%" y="431.50"></text></g><g><title>_int_malloc (60 samples, 0.91%)</title><rect x="80.7949%" y="405" width="0.9102%" height="15" fill="rgb(226,27,33)"/><text x="81.0449%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (142 samples, 2.15%)</title><rect x="79.6875%" y="597" width="2.1541%" height="15" fill="rgb(213,82,22)"/><text x="79.9375%" y="607.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (135 samples, 2.05%)</title><rect x="79.7937%" y="581" width="2.0479%" height="15" fill="rgb(248,140,0)"/><text x="80.0437%" y="591.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (135 samples, 2.05%)</title><rect x="79.7937%" y="565" width="2.0479%" height="15" fill="rgb(228,106,3)"/><text x="80.0437%" y="575.50">a..</text></g><g><title>alloc::slice::hack::to_vec (134 samples, 2.03%)</title><rect x="79.8089%" y="549" width="2.0328%" height="15" fill="rgb(209,23,37)"/><text x="80.0589%" y="559.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (126 samples, 1.91%)</title><rect x="79.9302%" y="533" width="1.9114%" height="15" fill="rgb(241,93,50)"/><text x="80.1802%" y="543.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (126 samples, 1.91%)</title><rect x="79.9302%" y="517" width="1.9114%" height="15" fill="rgb(253,46,43)"/><text x="80.1802%" y="527.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (126 samples, 1.91%)</title><rect x="79.9302%" y="501" width="1.9114%" height="15" fill="rgb(226,206,43)"/><text x="80.1802%" y="511.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (126 samples, 1.91%)</title><rect x="79.9302%" y="485" width="1.9114%" height="15" fill="rgb(217,54,7)"/><text x="80.1802%" y="495.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (126 samples, 1.91%)</title><rect x="79.9302%" y="469" width="1.9114%" height="15" fill="rgb(223,5,52)"/><text x="80.1802%" y="479.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 1.91%)</title><rect x="79.9302%" y="453" width="1.9114%" height="15" fill="rgb(206,52,46)"/><text x="80.1802%" y="463.50">a..</text></g><g><title>alloc::alloc::alloc (124 samples, 1.88%)</title><rect x="79.9606%" y="437" width="1.8811%" height="15" fill="rgb(253,136,11)"/><text x="80.2106%" y="447.50">a..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.24%)</title><rect x="81.8416%" y="597" width="0.2427%" height="15" fill="rgb(208,106,33)"/><text x="82.0916%" y="607.50"></text></g><g><title>core::fmt::write (7 samples, 0.11%)</title><rect x="81.9782%" y="581" width="0.1062%" height="15" fill="rgb(206,54,4)"/><text x="82.2282%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (31 samples, 0.47%)</title><rect x="82.0843%" y="597" width="0.4703%" height="15" fill="rgb(213,3,15)"/><text x="82.3343%" y="607.50"></text></g><g><title>crypto::sha3::keccak_f (28 samples, 0.42%)</title><rect x="82.1299%" y="581" width="0.4248%" height="15" fill="rgb(252,211,39)"/><text x="82.3799%" y="591.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.21%)</title><rect x="82.7063%" y="389" width="0.2124%" height="15" fill="rgb(223,6,36)"/><text x="82.9563%" y="399.50"></text></g><g><title>_int_malloc (12 samples, 0.18%)</title><rect x="82.7367%" y="373" width="0.1820%" height="15" fill="rgb(252,169,45)"/><text x="82.9867%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (23 samples, 0.35%)</title><rect x="82.6305%" y="565" width="0.3489%" height="15" fill="rgb(212,48,26)"/><text x="82.8805%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.35%)</title><rect x="82.6305%" y="549" width="0.3489%" height="15" fill="rgb(251,102,48)"/><text x="82.8805%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.33%)</title><rect x="82.6456%" y="533" width="0.3337%" height="15" fill="rgb(243,208,16)"/><text x="82.8956%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.33%)</title><rect x="82.6456%" y="517" width="0.3337%" height="15" fill="rgb(219,96,24)"/><text x="82.8956%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18 samples, 0.27%)</title><rect x="82.7063%" y="501" width="0.2731%" height="15" fill="rgb(219,33,29)"/><text x="82.9563%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (18 samples, 0.27%)</title><rect x="82.7063%" y="485" width="0.2731%" height="15" fill="rgb(223,176,5)"/><text x="82.9563%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.27%)</title><rect x="82.7063%" y="469" width="0.2731%" height="15" fill="rgb(228,140,14)"/><text x="82.9563%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.27%)</title><rect x="82.7063%" y="453" width="0.2731%" height="15" fill="rgb(217,179,31)"/><text x="82.9563%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (18 samples, 0.27%)</title><rect x="82.7063%" y="437" width="0.2731%" height="15" fill="rgb(230,9,30)"/><text x="82.9563%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.27%)</title><rect x="82.7063%" y="421" width="0.2731%" height="15" fill="rgb(230,136,20)"/><text x="82.9563%" y="431.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.27%)</title><rect x="82.7063%" y="405" width="0.2731%" height="15" fill="rgb(215,210,22)"/><text x="82.9563%" y="415.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (29 samples, 0.44%)</title><rect x="82.5546%" y="597" width="0.4399%" height="15" fill="rgb(218,43,5)"/><text x="82.8046%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.42%)</title><rect x="82.5698%" y="581" width="0.4248%" height="15" fill="rgb(216,11,5)"/><text x="82.8198%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.11%)</title><rect x="82.9945%" y="597" width="0.1062%" height="15" fill="rgb(209,82,29)"/><text x="83.2445%" y="607.50"></text></g><g><title>_int_free (9 samples, 0.14%)</title><rect x="83.2069%" y="597" width="0.1365%" height="15" fill="rgb(244,115,12)"/><text x="83.4569%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.39%)</title><rect x="83.3434%" y="597" width="0.3944%" height="15" fill="rgb(222,82,18)"/><text x="83.5934%" y="607.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.33%)</title><rect x="83.4041%" y="581" width="0.3337%" height="15" fill="rgb(249,227,8)"/><text x="83.6541%" y="591.50"></text></g><g><title>_int_realloc (22 samples, 0.33%)</title><rect x="83.4041%" y="565" width="0.3337%" height="15" fill="rgb(253,141,45)"/><text x="83.6541%" y="575.50"></text></g><g><title>_int_malloc (21 samples, 0.32%)</title><rect x="83.4193%" y="549" width="0.3186%" height="15" fill="rgb(234,184,4)"/><text x="83.6693%" y="559.50"></text></g><g><title>malloc_consolidate (13 samples, 0.20%)</title><rect x="83.5407%" y="533" width="0.1972%" height="15" fill="rgb(218,194,23)"/><text x="83.7907%" y="543.50"></text></g><g><title>__GI___libc_free (13 samples, 0.20%)</title><rect x="83.8896%" y="581" width="0.1972%" height="15" fill="rgb(235,66,41)"/><text x="84.1396%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (73 samples, 1.11%)</title><rect x="83.7682%" y="597" width="1.1074%" height="15" fill="rgb(245,217,1)"/><text x="84.0182%" y="607.50"></text></g><g><title>_int_free (48 samples, 0.73%)</title><rect x="84.1475%" y="581" width="0.7282%" height="15" fill="rgb(229,91,1)"/><text x="84.3975%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (12 samples, 0.18%)</title><rect x="84.9515%" y="581" width="0.1820%" height="15" fill="rgb(207,101,30)"/><text x="85.2015%" y="591.50"></text></g><g><title>crypto::digest::Digest::result_str (18 samples, 0.27%)</title><rect x="84.8756%" y="597" width="0.2731%" height="15" fill="rgb(223,82,49)"/><text x="85.1256%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="85.2852%" y="565" width="0.1820%" height="15" fill="rgb(218,167,17)"/><text x="85.5352%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.27%)</title><rect x="85.2397%" y="581" width="0.2731%" height="15" fill="rgb(208,103,14)"/><text x="85.4897%" y="591.50"></text></g><g><title>decor_mem::graph::EntityGraph::get_children_of_parent (27 samples, 0.41%)</title><rect x="85.1942%" y="597" width="0.4096%" height="15" fill="rgb(238,20,8)"/><text x="85.4442%" y="607.50"></text></g><g><title>decor_mem::helpers::get_sensitive_col_indices_of (21 samples, 0.32%)</title><rect x="85.6796%" y="597" width="0.3186%" height="15" fill="rgb(218,80,54)"/><text x="85.9296%" y="607.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (28 samples, 0.42%)</title><rect x="86.0589%" y="597" width="0.4248%" height="15" fill="rgb(240,144,17)"/><text x="86.3089%" y="607.50"></text></g><g><title>decor_mem::views::Views::get_view (7 samples, 0.11%)</title><rect x="86.4836%" y="597" width="0.1062%" height="15" fill="rgb(245,27,50)"/><text x="86.7336%" y="607.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (24 samples, 0.36%)</title><rect x="86.5898%" y="581" width="0.3641%" height="15" fill="rgb(251,51,7)"/><text x="86.8398%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.30%)</title><rect x="86.6505%" y="565" width="0.3034%" height="15" fill="rgb(245,217,29)"/><text x="86.9005%" y="575.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (8 samples, 0.12%)</title><rect x="86.9842%" y="549" width="0.1214%" height="15" fill="rgb(221,176,29)"/><text x="87.2342%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.12%)</title><rect x="86.9842%" y="533" width="0.1214%" height="15" fill="rgb(212,180,24)"/><text x="87.2342%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (38 samples, 0.58%)</title><rect x="86.5898%" y="597" width="0.5765%" height="15" fill="rgb(254,24,2)"/><text x="86.8398%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (14 samples, 0.21%)</title><rect x="86.9539%" y="581" width="0.2124%" height="15" fill="rgb(230,100,2)"/><text x="87.2039%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (13 samples, 0.20%)</title><rect x="86.9691%" y="565" width="0.1972%" height="15" fill="rgb(219,142,25)"/><text x="87.2191%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.11%)</title><rect x="87.1663%" y="597" width="0.1062%" height="15" fill="rgb(240,73,43)"/><text x="87.4163%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::contains (16 samples, 0.24%)</title><rect x="87.2725%" y="597" width="0.2427%" height="15" fill="rgb(214,114,15)"/><text x="87.5225%" y="607.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (15 samples, 0.23%)</title><rect x="87.2876%" y="581" width="0.2275%" height="15" fill="rgb(207,130,4)"/><text x="87.5376%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.15%)</title><rect x="87.3635%" y="565" width="0.1517%" height="15" fill="rgb(221,25,40)"/><text x="87.6135%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::insert (31 samples, 0.47%)</title><rect x="87.5152%" y="597" width="0.4703%" height="15" fill="rgb(241,184,7)"/><text x="87.7652%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (20 samples, 0.30%)</title><rect x="87.6820%" y="581" width="0.3034%" height="15" fill="rgb(235,159,4)"/><text x="87.9320%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (19 samples, 0.29%)</title><rect x="87.6972%" y="565" width="0.2882%" height="15" fill="rgb(214,87,48)"/><text x="87.9472%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.14%)</title><rect x="87.8489%" y="549" width="0.1365%" height="15" fill="rgb(246,198,24)"/><text x="88.0989%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (12 samples, 0.18%)</title><rect x="87.9854%" y="597" width="0.1820%" height="15" fill="rgb(209,66,40)"/><text x="88.2354%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (602 samples, 9.13%)</title><rect x="79.0959%" y="613" width="9.1323%" height="15" fill="rgb(233,147,39)"/><text x="79.3459%" y="623.50">decor_mem::qu..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (608 samples, 9.22%)</title><rect x="79.0655%" y="629" width="9.2233%" height="15" fill="rgb(231,145,52)"/><text x="79.3155%" y="639.50">&lt;decor_mem::S..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.11%)</title><rect x="88.3343%" y="629" width="0.1062%" height="15" fill="rgb(206,20,26)"/><text x="88.5843%" y="639.50"></text></g><g><title>__GI___libc_free (16 samples, 0.24%)</title><rect x="88.6529%" y="517" width="0.2427%" height="15" fill="rgb(238,220,4)"/><text x="88.9029%" y="527.50"></text></g><g><title>page_fault (8 samples, 0.12%)</title><rect x="89.2294%" y="501" width="0.1214%" height="15" fill="rgb(252,195,42)"/><text x="89.4794%" y="511.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.12%)</title><rect x="89.2294%" y="485" width="0.1214%" height="15" fill="rgb(209,10,6)"/><text x="89.4794%" y="495.50"></text></g><g><title>handle_mm_fault (7 samples, 0.11%)</title><rect x="89.2445%" y="469" width="0.1062%" height="15" fill="rgb(229,3,52)"/><text x="89.4945%" y="479.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.11%)</title><rect x="89.2445%" y="453" width="0.1062%" height="15" fill="rgb(253,49,37)"/><text x="89.4945%" y="463.50"></text></g><g><title>_int_free (40 samples, 0.61%)</title><rect x="88.8956%" y="517" width="0.6068%" height="15" fill="rgb(240,103,49)"/><text x="89.1456%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 1.02%)</title><rect x="88.5316%" y="533" width="1.0164%" height="15" fill="rgb(250,182,30)"/><text x="88.7816%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 1.03%)</title><rect x="88.5316%" y="565" width="1.0316%" height="15" fill="rgb(248,8,30)"/><text x="88.7816%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 1.03%)</title><rect x="88.5316%" y="549" width="1.0316%" height="15" fill="rgb(237,120,30)"/><text x="88.7816%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (70 samples, 1.06%)</title><rect x="88.5316%" y="597" width="1.0619%" height="15" fill="rgb(221,146,34)"/><text x="88.7816%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 1.06%)</title><rect x="88.5316%" y="581" width="1.0619%" height="15" fill="rgb(242,55,13)"/><text x="88.7816%" y="591.50"></text></g><g><title>new_sync_write (9 samples, 0.14%)</title><rect x="89.6390%" y="453" width="0.1365%" height="15" fill="rgb(242,112,31)"/><text x="89.8890%" y="463.50"></text></g><g><title>ext4_buffered_write_iter (8 samples, 0.12%)</title><rect x="89.6541%" y="437" width="0.1214%" height="15" fill="rgb(249,192,27)"/><text x="89.9041%" y="447.50"></text></g><g><title>generic_perform_write (8 samples, 0.12%)</title><rect x="89.6541%" y="421" width="0.1214%" height="15" fill="rgb(208,204,44)"/><text x="89.9041%" y="431.50"></text></g><g><title>ksys_write (13 samples, 0.20%)</title><rect x="89.5934%" y="485" width="0.1972%" height="15" fill="rgb(208,93,54)"/><text x="89.8434%" y="495.50"></text></g><g><title>vfs_write (11 samples, 0.17%)</title><rect x="89.6238%" y="469" width="0.1669%" height="15" fill="rgb(242,1,31)"/><text x="89.8738%" y="479.50"></text></g><g><title>do_syscall_64 (14 samples, 0.21%)</title><rect x="89.5934%" y="501" width="0.2124%" height="15" fill="rgb(241,83,25)"/><text x="89.8434%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 0.23%)</title><rect x="89.5934%" y="517" width="0.2275%" height="15" fill="rgb(205,169,50)"/><text x="89.8434%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (16 samples, 0.24%)</title><rect x="89.5934%" y="581" width="0.2427%" height="15" fill="rgb(239,186,37)"/><text x="89.8434%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (16 samples, 0.24%)</title><rect x="89.5934%" y="565" width="0.2427%" height="15" fill="rgb(205,221,10)"/><text x="89.8434%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (16 samples, 0.24%)</title><rect x="89.5934%" y="549" width="0.2427%" height="15" fill="rgb(218,196,15)"/><text x="89.8434%" y="559.50"></text></g><g><title>__libc_write (16 samples, 0.24%)</title><rect x="89.5934%" y="533" width="0.2427%" height="15" fill="rgb(218,196,35)"/><text x="89.8434%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (87 samples, 1.32%)</title><rect x="88.5316%" y="629" width="1.3198%" height="15" fill="rgb(233,63,24)"/><text x="88.7816%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (87 samples, 1.32%)</title><rect x="88.5316%" y="613" width="1.3198%" height="15" fill="rgb(225,8,4)"/><text x="88.7816%" y="623.50"></text></g><g><title>decor_mem::stats::print_stats (17 samples, 0.26%)</title><rect x="89.5934%" y="597" width="0.2579%" height="15" fill="rgb(234,105,35)"/><text x="89.8434%" y="607.50"></text></g><g><title>dequeue_task_fair (11 samples, 0.17%)</title><rect x="90.4126%" y="341" width="0.1669%" height="15" fill="rgb(236,21,32)"/><text x="90.6626%" y="351.50"></text></g><g><title>dequeue_entity (8 samples, 0.12%)</title><rect x="90.4581%" y="325" width="0.1214%" height="15" fill="rgb(228,109,6)"/><text x="90.7081%" y="335.50"></text></g><g><title>__schedule (28 samples, 0.42%)</title><rect x="90.3216%" y="357" width="0.4248%" height="15" fill="rgb(229,215,31)"/><text x="90.5716%" y="367.50"></text></g><g><title>sk_wait_data (34 samples, 0.52%)</title><rect x="90.2458%" y="421" width="0.5158%" height="15" fill="rgb(221,52,54)"/><text x="90.4958%" y="431.50"></text></g><g><title>wait_woken (30 samples, 0.46%)</title><rect x="90.3064%" y="405" width="0.4551%" height="15" fill="rgb(252,129,43)"/><text x="90.5564%" y="415.50"></text></g><g><title>schedule_timeout (29 samples, 0.44%)</title><rect x="90.3216%" y="389" width="0.4399%" height="15" fill="rgb(248,183,27)"/><text x="90.5716%" y="399.50"></text></g><g><title>schedule (29 samples, 0.44%)</title><rect x="90.3216%" y="373" width="0.4399%" height="15" fill="rgb(250,0,22)"/><text x="90.5716%" y="383.50"></text></g><g><title>inet_recvmsg (45 samples, 0.68%)</title><rect x="90.0941%" y="453" width="0.6826%" height="15" fill="rgb(213,166,10)"/><text x="90.3441%" y="463.50"></text></g><g><title>tcp_recvmsg (45 samples, 0.68%)</title><rect x="90.0941%" y="437" width="0.6826%" height="15" fill="rgb(207,163,36)"/><text x="90.3441%" y="447.50"></text></g><g><title>__x64_sys_recvfrom (47 samples, 0.71%)</title><rect x="90.0789%" y="485" width="0.7130%" height="15" fill="rgb(208,122,22)"/><text x="90.3289%" y="495.50"></text></g><g><title>__sys_recvfrom (47 samples, 0.71%)</title><rect x="90.0789%" y="469" width="0.7130%" height="15" fill="rgb(207,104,49)"/><text x="90.3289%" y="479.50"></text></g><g><title>do_syscall_64 (50 samples, 0.76%)</title><rect x="90.0789%" y="501" width="0.7585%" height="15" fill="rgb(248,211,50)"/><text x="90.3289%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (67 samples, 1.02%)</title><rect x="89.9575%" y="613" width="1.0164%" height="15" fill="rgb(217,13,45)"/><text x="90.2075%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (65 samples, 0.99%)</title><rect x="89.9879%" y="597" width="0.9860%" height="15" fill="rgb(211,216,49)"/><text x="90.2379%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (65 samples, 0.99%)</title><rect x="89.9879%" y="581" width="0.9860%" height="15" fill="rgb(221,58,53)"/><text x="90.2379%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (65 samples, 0.99%)</title><rect x="89.9879%" y="565" width="0.9860%" height="15" fill="rgb(220,112,41)"/><text x="90.2379%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (65 samples, 0.99%)</title><rect x="89.9879%" y="549" width="0.9860%" height="15" fill="rgb(236,38,28)"/><text x="90.2379%" y="559.50"></text></g><g><title>__libc_recv (65 samples, 0.99%)</title><rect x="89.9879%" y="533" width="0.9860%" height="15" fill="rgb(227,195,22)"/><text x="90.2379%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (60 samples, 0.91%)</title><rect x="90.0637%" y="517" width="0.9102%" height="15" fill="rgb(214,55,33)"/><text x="90.3137%" y="527.50"></text></g><g><title>prepare_exit_to_usermode (9 samples, 0.14%)</title><rect x="90.8374%" y="501" width="0.1365%" height="15" fill="rgb(248,80,13)"/><text x="91.0874%" y="511.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (73 samples, 1.11%)</title><rect x="89.9575%" y="629" width="1.1074%" height="15" fill="rgb(238,52,6)"/><text x="90.2075%" y="639.50"></text></g><g><title>__dev_queue_xmit (11 samples, 0.17%)</title><rect x="91.5655%" y="357" width="0.1669%" height="15" fill="rgb(224,198,47)"/><text x="91.8155%" y="367.50"></text></g><g><title>psi_task_change (8 samples, 0.12%)</title><rect x="92.2027%" y="53" width="0.1214%" height="15" fill="rgb(233,171,20)"/><text x="92.4527%" y="63.50"></text></g><g><title>psi_group_change (7 samples, 0.11%)</title><rect x="92.2178%" y="37" width="0.1062%" height="15" fill="rgb(241,30,25)"/><text x="92.4678%" y="47.50"></text></g><g><title>enqueue_task (9 samples, 0.14%)</title><rect x="92.2027%" y="69" width="0.1365%" height="15" fill="rgb(207,171,38)"/><text x="92.4527%" y="79.50"></text></g><g><title>enqueue_task_fair (11 samples, 0.17%)</title><rect x="92.3392%" y="69" width="0.1669%" height="15" fill="rgb(234,70,1)"/><text x="92.5892%" y="79.50"></text></g><g><title>enqueue_entity (10 samples, 0.15%)</title><rect x="92.3544%" y="53" width="0.1517%" height="15" fill="rgb(232,178,18)"/><text x="92.6044%" y="63.50"></text></g><g><title>__wake_up_common (27 samples, 0.41%)</title><rect x="92.1572%" y="101" width="0.4096%" height="15" fill="rgb(241,78,40)"/><text x="92.4072%" y="111.50"></text></g><g><title>try_to_wake_up (26 samples, 0.39%)</title><rect x="92.1723%" y="85" width="0.3944%" height="15" fill="rgb(222,35,25)"/><text x="92.4223%" y="95.50"></text></g><g><title>sock_def_readable (28 samples, 0.42%)</title><rect x="92.1572%" y="133" width="0.4248%" height="15" fill="rgb(207,92,16)"/><text x="92.4072%" y="143.50"></text></g><g><title>__wake_up_common_lock (28 samples, 0.42%)</title><rect x="92.1572%" y="117" width="0.4248%" height="15" fill="rgb(216,59,51)"/><text x="92.4072%" y="127.50"></text></g><g><title>tcp_ack (9 samples, 0.14%)</title><rect x="92.5819%" y="133" width="0.1365%" height="15" fill="rgb(213,80,28)"/><text x="92.8319%" y="143.50"></text></g><g><title>tcp_v4_do_rcv (48 samples, 0.73%)</title><rect x="92.0358%" y="165" width="0.7282%" height="15" fill="rgb(220,93,7)"/><text x="92.2858%" y="175.50"></text></g><g><title>tcp_rcv_established (48 samples, 0.73%)</title><rect x="92.0358%" y="149" width="0.7282%" height="15" fill="rgb(225,24,44)"/><text x="92.2858%" y="159.50"></text></g><g><title>ip_local_deliver (62 samples, 0.94%)</title><rect x="91.8538%" y="229" width="0.9405%" height="15" fill="rgb(243,74,40)"/><text x="92.1038%" y="239.50"></text></g><g><title>ip_local_deliver_finish (58 samples, 0.88%)</title><rect x="91.9144%" y="213" width="0.8799%" height="15" fill="rgb(228,39,7)"/><text x="92.1644%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (58 samples, 0.88%)</title><rect x="91.9144%" y="197" width="0.8799%" height="15" fill="rgb(227,79,8)"/><text x="92.1644%" y="207.50"></text></g><g><title>tcp_v4_rcv (57 samples, 0.86%)</title><rect x="91.9296%" y="181" width="0.8647%" height="15" fill="rgb(236,58,11)"/><text x="92.1796%" y="191.50"></text></g><g><title>ip_finish_output2 (86 samples, 1.30%)</title><rect x="91.5352%" y="373" width="1.3046%" height="15" fill="rgb(249,63,35)"/><text x="91.7852%" y="383.50"></text></g><g><title>__local_bh_enable_ip (73 samples, 1.11%)</title><rect x="91.7324%" y="357" width="1.1074%" height="15" fill="rgb(252,114,16)"/><text x="91.9824%" y="367.50"></text></g><g><title>do_softirq (72 samples, 1.09%)</title><rect x="91.7476%" y="341" width="1.0922%" height="15" fill="rgb(254,151,24)"/><text x="91.9976%" y="351.50"></text></g><g><title>do_softirq_own_stack (72 samples, 1.09%)</title><rect x="91.7476%" y="325" width="1.0922%" height="15" fill="rgb(253,54,39)"/><text x="91.9976%" y="335.50"></text></g><g><title>__do_softirq (72 samples, 1.09%)</title><rect x="91.7476%" y="309" width="1.0922%" height="15" fill="rgb(243,25,45)"/><text x="91.9976%" y="319.50"></text></g><g><title>net_rx_action (70 samples, 1.06%)</title><rect x="91.7779%" y="293" width="1.0619%" height="15" fill="rgb(234,134,9)"/><text x="92.0279%" y="303.50"></text></g><g><title>process_backlog (68 samples, 1.03%)</title><rect x="91.8083%" y="277" width="1.0316%" height="15" fill="rgb(227,166,31)"/><text x="92.0583%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (66 samples, 1.00%)</title><rect x="91.8386%" y="261" width="1.0012%" height="15" fill="rgb(245,143,41)"/><text x="92.0886%" y="271.50"></text></g><g><title>ip_rcv (66 samples, 1.00%)</title><rect x="91.8386%" y="245" width="1.0012%" height="15" fill="rgb(238,181,32)"/><text x="92.0886%" y="255.50"></text></g><g><title>__ip_queue_xmit (94 samples, 1.43%)</title><rect x="91.4290%" y="405" width="1.4260%" height="15" fill="rgb(224,113,18)"/><text x="91.6790%" y="415.50"></text></g><g><title>ip_output (90 samples, 1.37%)</title><rect x="91.4897%" y="389" width="1.3653%" height="15" fill="rgb(240,229,28)"/><text x="91.7397%" y="399.50"></text></g><g><title>__tcp_transmit_skb (102 samples, 1.55%)</title><rect x="91.3683%" y="421" width="1.5473%" height="15" fill="rgb(250,185,3)"/><text x="91.6183%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (110 samples, 1.67%)</title><rect x="91.3532%" y="453" width="1.6687%" height="15" fill="rgb(212,59,25)"/><text x="91.6032%" y="463.50"></text></g><g><title>tcp_write_xmit (110 samples, 1.67%)</title><rect x="91.3532%" y="437" width="1.6687%" height="15" fill="rgb(221,87,20)"/><text x="91.6032%" y="447.50"></text></g><g><title>sock_sendmsg (130 samples, 1.97%)</title><rect x="91.2166%" y="501" width="1.9721%" height="15" fill="rgb(213,74,28)"/><text x="91.4666%" y="511.50">s..</text></g><g><title>tcp_sendmsg (128 samples, 1.94%)</title><rect x="91.2470%" y="485" width="1.9417%" height="15" fill="rgb(224,132,34)"/><text x="91.4970%" y="495.50">t..</text></g><g><title>tcp_sendmsg_locked (126 samples, 1.91%)</title><rect x="91.2773%" y="469" width="1.9114%" height="15" fill="rgb(222,101,24)"/><text x="91.5273%" y="479.50">t..</text></g><g><title>__x64_sys_sendto (135 samples, 2.05%)</title><rect x="91.1711%" y="533" width="2.0479%" height="15" fill="rgb(254,142,4)"/><text x="91.4211%" y="543.50">_..</text></g><g><title>__sys_sendto (135 samples, 2.05%)</title><rect x="91.1711%" y="517" width="2.0479%" height="15" fill="rgb(230,229,49)"/><text x="91.4211%" y="527.50">_..</text></g><g><title>do_syscall_64 (141 samples, 2.14%)</title><rect x="91.1408%" y="549" width="2.1390%" height="15" fill="rgb(238,70,47)"/><text x="91.3908%" y="559.50">d..</text></g><g><title>entry_SYSCALL_64 (145 samples, 2.20%)</title><rect x="91.1256%" y="565" width="2.1996%" height="15" fill="rgb(231,160,17)"/><text x="91.3756%" y="575.50">e..</text></g><g><title>__libc_send (150 samples, 2.28%)</title><rect x="91.0801%" y="581" width="2.2755%" height="15" fill="rgb(218,68,53)"/><text x="91.3301%" y="591.50">_..</text></g><g><title>decor_mem::Shim::run_on_tcp (1,100 samples, 16.69%)</title><rect x="76.6839%" y="677" width="16.6869%" height="15" fill="rgb(236,111,10)"/><text x="76.9339%" y="687.50">decor_mem::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,100 samples, 16.69%)</title><rect x="76.6839%" y="661" width="16.6869%" height="15" fill="rgb(224,34,41)"/><text x="76.9339%" y="671.50">msql_srv::MysqlIntermediar..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (1,100 samples, 16.69%)</title><rect x="76.6839%" y="645" width="16.6869%" height="15" fill="rgb(241,118,19)"/><text x="76.9339%" y="655.50">msql_srv::MysqlIntermediar..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (152 samples, 2.31%)</title><rect x="91.0649%" y="629" width="2.3058%" height="15" fill="rgb(238,129,25)"/><text x="91.3149%" y="639.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (151 samples, 2.29%)</title><rect x="91.0801%" y="613" width="2.2907%" height="15" fill="rgb(238,22,31)"/><text x="91.3301%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (151 samples, 2.29%)</title><rect x="91.0801%" y="597" width="2.2907%" height="15" fill="rgb(222,174,48)"/><text x="91.3301%" y="607.50">s..</text></g><g><title>__GI___clone (1,159 samples, 17.58%)</title><rect x="75.8040%" y="789" width="17.5819%" height="15" fill="rgb(206,152,40)"/><text x="76.0540%" y="799.50">__GI___clone</text></g><g><title>start_thread (1,159 samples, 17.58%)</title><rect x="75.8040%" y="773" width="17.5819%" height="15" fill="rgb(218,99,54)"/><text x="76.0540%" y="783.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,101 samples, 16.70%)</title><rect x="76.6839%" y="757" width="16.7021%" height="15" fill="rgb(220,174,26)"/><text x="76.9339%" y="767.50">std::sys::unix::thread::Th..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,101 samples, 16.70%)</title><rect x="76.6839%" y="741" width="16.7021%" height="15" fill="rgb(245,116,9)"/><text x="76.9339%" y="751.50">&lt;alloc::boxed::Box&lt;F&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,101 samples, 16.70%)</title><rect x="76.6839%" y="725" width="16.7021%" height="15" fill="rgb(209,72,35)"/><text x="76.9339%" y="735.50">&lt;alloc::boxed::Box&lt;F&gt; as c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,101 samples, 16.70%)</title><rect x="76.6839%" y="709" width="16.7021%" height="15" fill="rgb(226,126,21)"/><text x="76.9339%" y="719.50">core::ops::function::FnOnc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,101 samples, 16.70%)</title><rect x="76.6839%" y="693" width="16.7021%" height="15" fill="rgb(227,192,1)"/><text x="76.9339%" y="703.50">std::sys_common::backtrace..</text></g><g><title>__vdso_clock_gettime (7 samples, 0.11%)</title><rect x="93.5528%" y="789" width="0.1062%" height="15" fill="rgb(237,180,29)"/><text x="93.8028%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (229 samples, 3.47%)</title><rect x="93.8107%" y="309" width="3.4739%" height="15" fill="rgb(230,197,35)"/><text x="94.0607%" y="319.50">__i..</text></g><g><title>native_write_msr (229 samples, 3.47%)</title><rect x="93.8107%" y="293" width="3.4739%" height="15" fill="rgb(246,193,31)"/><text x="94.0607%" y="303.50">nat..</text></g><g><title>cpu_stop_queue_work (234 samples, 3.55%)</title><rect x="93.7500%" y="405" width="3.5498%" height="15" fill="rgb(241,36,4)"/><text x="94.0000%" y="415.50">cpu_..</text></g><g><title>preempt_schedule_thunk (234 samples, 3.55%)</title><rect x="93.7500%" y="389" width="3.5498%" height="15" fill="rgb(241,130,17)"/><text x="94.0000%" y="399.50">pree..</text></g><g><title>preempt_schedule_common (234 samples, 3.55%)</title><rect x="93.7500%" y="373" width="3.5498%" height="15" fill="rgb(206,137,32)"/><text x="94.0000%" y="383.50">pree..</text></g><g><title>__schedule (234 samples, 3.55%)</title><rect x="93.7500%" y="357" width="3.5498%" height="15" fill="rgb(237,228,51)"/><text x="94.0000%" y="367.50">__sc..</text></g><g><title>finish_task_switch (234 samples, 3.55%)</title><rect x="93.7500%" y="341" width="3.5498%" height="15" fill="rgb(243,6,42)"/><text x="94.0000%" y="351.50">fini..</text></g><g><title>__perf_event_task_sched_in (230 samples, 3.49%)</title><rect x="93.8107%" y="325" width="3.4891%" height="15" fill="rgb(251,74,28)"/><text x="94.0607%" y="335.50">__p..</text></g><g><title>do_syscall_64 (235 samples, 3.56%)</title><rect x="93.7500%" y="485" width="3.5649%" height="15" fill="rgb(218,20,49)"/><text x="94.0000%" y="495.50">do_s..</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 3.56%)</title><rect x="93.7500%" y="469" width="3.5649%" height="15" fill="rgb(238,28,14)"/><text x="94.0000%" y="479.50">__x6..</text></g><g><title>sched_setaffinity (235 samples, 3.56%)</title><rect x="93.7500%" y="453" width="3.5649%" height="15" fill="rgb(229,40,46)"/><text x="94.0000%" y="463.50">sche..</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 3.56%)</title><rect x="93.7500%" y="437" width="3.5649%" height="15" fill="rgb(244,195,20)"/><text x="94.0000%" y="447.50">__se..</text></g><g><title>stop_one_cpu (235 samples, 3.56%)</title><rect x="93.7500%" y="421" width="3.5649%" height="15" fill="rgb(253,56,35)"/><text x="94.0000%" y="431.50">stop..</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 3.60%)</title><rect x="93.7500%" y="517" width="3.5953%" height="15" fill="rgb(210,149,44)"/><text x="94.0000%" y="527.50">__GI..</text></g><g><title>entry_SYSCALL_64 (237 samples, 3.60%)</title><rect x="93.7500%" y="501" width="3.5953%" height="15" fill="rgb(240,135,12)"/><text x="94.0000%" y="511.50">entr..</text></g><g><title>hwloc::Topology::new (240 samples, 3.64%)</title><rect x="93.7348%" y="613" width="3.6408%" height="15" fill="rgb(251,24,50)"/><text x="93.9848%" y="623.50">hwlo..</text></g><g><title>hwloc_topology_load (240 samples, 3.64%)</title><rect x="93.7348%" y="597" width="3.6408%" height="15" fill="rgb(243,200,47)"/><text x="93.9848%" y="607.50">hwlo..</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 3.64%)</title><rect x="93.7348%" y="581" width="3.6408%" height="15" fill="rgb(224,166,26)"/><text x="93.9848%" y="591.50">[lib..</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 3.64%)</title><rect x="93.7348%" y="565" width="3.6408%" height="15" fill="rgb(233,0,47)"/><text x="93.9848%" y="575.50">[lib..</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 3.64%)</title><rect x="93.7348%" y="549" width="3.6408%" height="15" fill="rgb(253,80,5)"/><text x="93.9848%" y="559.50">[lib..</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 3.64%)</title><rect x="93.7348%" y="533" width="3.6408%" height="15" fill="rgb(214,133,25)"/><text x="93.9848%" y="543.50">hwlo..</text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (13 samples, 0.20%)</title><rect x="97.3756%" y="613" width="0.1972%" height="15" fill="rgb(209,27,14)"/><text x="97.6256%" y="623.50"></text></g><g><title>__libc_start_main (257 samples, 3.90%)</title><rect x="93.7045%" y="773" width="3.8987%" height="15" fill="rgb(219,102,51)"/><text x="93.9545%" y="783.50">__li..</text></g><g><title>main (257 samples, 3.90%)</title><rect x="93.7045%" y="757" width="3.8987%" height="15" fill="rgb(237,18,16)"/><text x="93.9545%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (257 samples, 3.90%)</title><rect x="93.7045%" y="741" width="3.8987%" height="15" fill="rgb(241,85,17)"/><text x="93.9545%" y="751.50">std:..</text></g><g><title>std::panic::catch_unwind (257 samples, 3.90%)</title><rect x="93.7045%" y="725" width="3.8987%" height="15" fill="rgb(236,90,42)"/><text x="93.9545%" y="735.50">std:..</text></g><g><title>std::panicking::try (257 samples, 3.90%)</title><rect x="93.7045%" y="709" width="3.8987%" height="15" fill="rgb(249,57,21)"/><text x="93.9545%" y="719.50">std:..</text></g><g><title>std::panicking::try::do_call (257 samples, 3.90%)</title><rect x="93.7045%" y="693" width="3.8987%" height="15" fill="rgb(243,12,36)"/><text x="93.9545%" y="703.50">std:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (257 samples, 3.90%)</title><rect x="93.7045%" y="677" width="3.8987%" height="15" fill="rgb(253,128,47)"/><text x="93.9545%" y="687.50">core..</text></g><g><title>std::rt::lang_start::_{{closure}} (257 samples, 3.90%)</title><rect x="93.7045%" y="661" width="3.8987%" height="15" fill="rgb(207,33,20)"/><text x="93.9545%" y="671.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (257 samples, 3.90%)</title><rect x="93.7045%" y="645" width="3.8987%" height="15" fill="rgb(233,215,35)"/><text x="93.9545%" y="655.50">std:..</text></g><g><title>lobsters_microbenchmarks::main (257 samples, 3.90%)</title><rect x="93.7045%" y="629" width="3.8987%" height="15" fill="rgb(249,188,52)"/><text x="93.9545%" y="639.50">lobs..</text></g><g><title>_start (258 samples, 3.91%)</title><rect x="93.7045%" y="789" width="3.9138%" height="15" fill="rgb(225,12,32)"/><text x="93.9545%" y="799.50">_sta..</text></g><g><title>entry_SYSCALL_64 (11 samples, 0.17%)</title><rect x="97.9217%" y="789" width="0.1669%" height="15" fill="rgb(247,98,14)"/><text x="98.1717%" y="799.50"></text></g><g><title>page_fault (115 samples, 1.74%)</title><rect x="98.1341%" y="789" width="1.7445%" height="15" fill="rgb(247,219,48)"/><text x="98.3841%" y="799.50"></text></g><g><title>lobsters-microb (6,586 samples, 99.91%)</title><rect x="0.0000%" y="805" width="99.9090%" height="15" fill="rgb(253,60,48)"/><text x="0.2500%" y="815.50">lobsters-microb</text></g><g><title>all (6,592 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(245,15,52)"/><text x="0.2500%" y="831.50"></text></g></svg></svg>