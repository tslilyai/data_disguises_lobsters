<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (16 samples, 0.41%)</title><rect x="0.0769%" y="773" width="0.4103%" height="15" fill="rgb(227,0,7)"/><text x="0.3269%" y="783.50"></text></g><g><title>[[stack]] (17 samples, 0.44%)</title><rect x="0.4872%" y="773" width="0.4359%" height="15" fill="rgb(217,0,24)"/><text x="0.7372%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.31%)</title><rect x="0.9231%" y="757" width="0.3077%" height="15" fill="rgb(221,193,54)"/><text x="1.1731%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (21 samples, 0.54%)</title><rect x="1.2308%" y="757" width="0.5385%" height="15" fill="rgb(248,212,6)"/><text x="1.4808%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="1.7692%" y="757" width="0.1026%" height="15" fill="rgb(208,68,35)"/><text x="2.0192%" y="767.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.21%)</title><rect x="2.3077%" y="757" width="0.2051%" height="15" fill="rgb(232,128,0)"/><text x="2.5577%" y="767.50"></text></g><g><title>__rdl_realloc (4 samples, 0.10%)</title><rect x="2.6154%" y="757" width="0.1026%" height="15" fill="rgb(207,160,47)"/><text x="2.8654%" y="767.50"></text></g><g><title>_int_free (24 samples, 0.62%)</title><rect x="2.7179%" y="757" width="0.6154%" height="15" fill="rgb(228,23,34)"/><text x="2.9679%" y="767.50"></text></g><g><title>_int_malloc (13 samples, 0.33%)</title><rect x="3.3333%" y="757" width="0.3333%" height="15" fill="rgb(218,30,26)"/><text x="3.5833%" y="767.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.10%)</title><rect x="3.7179%" y="757" width="0.1026%" height="15" fill="rgb(220,122,19)"/><text x="3.9679%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.33%)</title><rect x="3.8205%" y="757" width="0.3333%" height="15" fill="rgb(250,228,42)"/><text x="4.0705%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (23 samples, 0.59%)</title><rect x="4.1538%" y="757" width="0.5897%" height="15" fill="rgb(240,193,28)"/><text x="4.4038%" y="767.50"></text></g><g><title>alloc::string::String::push (9 samples, 0.23%)</title><rect x="4.7436%" y="757" width="0.2308%" height="15" fill="rgb(216,20,37)"/><text x="4.9936%" y="767.50"></text></g><g><title>core::fmt::write (9 samples, 0.23%)</title><rect x="5.0256%" y="757" width="0.2308%" height="15" fill="rgb(206,188,39)"/><text x="5.2756%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (6 samples, 0.15%)</title><rect x="5.7179%" y="757" width="0.1538%" height="15" fill="rgb(217,207,13)"/><text x="5.9679%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.10%)</title><rect x="5.9487%" y="757" width="0.1026%" height="15" fill="rgb(231,73,38)"/><text x="6.1987%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.13%)</title><rect x="6.0513%" y="757" width="0.1282%" height="15" fill="rgb(225,20,46)"/><text x="6.3013%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (11 samples, 0.28%)</title><rect x="6.1795%" y="757" width="0.2821%" height="15" fill="rgb(210,31,41)"/><text x="6.4295%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (5 samples, 0.13%)</title><rect x="6.4615%" y="757" width="0.1282%" height="15" fill="rgb(221,200,47)"/><text x="6.7115%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (5 samples, 0.13%)</title><rect x="6.5897%" y="757" width="0.1282%" height="15" fill="rgb(226,26,5)"/><text x="6.8397%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (17 samples, 0.44%)</title><rect x="6.9231%" y="757" width="0.4359%" height="15" fill="rgb(249,33,26)"/><text x="7.1731%" y="767.50"></text></g><g><title>[anon] (264 samples, 6.77%)</title><rect x="0.9231%" y="773" width="6.7692%" height="15" fill="rgb(235,183,28)"/><text x="1.1731%" y="783.50">[anon]</text></g><g><title>unlink_chunk.constprop.0 (8 samples, 0.21%)</title><rect x="7.4872%" y="757" width="0.2051%" height="15" fill="rgb(221,5,38)"/><text x="7.7372%" y="767.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="7.9744%" y="757" width="0.1026%" height="15" fill="rgb(247,18,42)"/><text x="8.2244%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="8.0769%" y="757" width="0.1026%" height="15" fill="rgb(241,131,45)"/><text x="8.3269%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (22 samples, 0.56%)</title><rect x="7.7179%" y="773" width="0.5641%" height="15" fill="rgb(249,31,29)"/><text x="7.9679%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.10%)</title><rect x="8.2821%" y="757" width="0.1026%" height="15" fill="rgb(225,111,53)"/><text x="8.5321%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="8.4103%" y="757" width="0.1026%" height="15" fill="rgb(238,160,17)"/><text x="8.6603%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="8.5897%" y="725" width="0.1282%" height="15" fill="rgb(214,148,48)"/><text x="8.8397%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="8.5897%" y="709" width="0.1282%" height="15" fill="rgb(232,36,49)"/><text x="8.8397%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="8.5897%" y="693" width="0.1282%" height="15" fill="rgb(209,103,24)"/><text x="8.8397%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="8.5897%" y="677" width="0.1282%" height="15" fill="rgb(229,88,8)"/><text x="8.8397%" y="687.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.10%)</title><rect x="8.6154%" y="661" width="0.1026%" height="15" fill="rgb(213,181,19)"/><text x="8.8654%" y="671.50"></text></g><g><title>decor_mem::ghosts_cache::GhostsCache::insert_uid2gids_for_values (8 samples, 0.21%)</title><rect x="8.7179%" y="725" width="0.2051%" height="15" fill="rgb(254,191,54)"/><text x="8.9679%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (8 samples, 0.21%)</title><rect x="8.7179%" y="709" width="0.2051%" height="15" fill="rgb(241,83,37)"/><text x="8.9679%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (8 samples, 0.21%)</title><rect x="8.7179%" y="693" width="0.2051%" height="15" fill="rgb(233,36,39)"/><text x="8.9679%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (8 samples, 0.21%)</title><rect x="8.7179%" y="677" width="0.2051%" height="15" fill="rgb(226,3,54)"/><text x="8.9679%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (7 samples, 0.18%)</title><rect x="8.7436%" y="661" width="0.1795%" height="15" fill="rgb(245,192,40)"/><text x="8.9936%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.15%)</title><rect x="8.7692%" y="645" width="0.1538%" height="15" fill="rgb(238,167,29)"/><text x="9.0192%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.13%)</title><rect x="8.7949%" y="629" width="0.1282%" height="15" fill="rgb(232,182,51)"/><text x="9.0449%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.13%)</title><rect x="8.7949%" y="613" width="0.1282%" height="15" fill="rgb(231,60,39)"/><text x="9.0449%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (5 samples, 0.13%)</title><rect x="8.7949%" y="597" width="0.1282%" height="15" fill="rgb(208,69,12)"/><text x="9.0449%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (5 samples, 0.13%)</title><rect x="8.7949%" y="581" width="0.1282%" height="15" fill="rgb(235,93,37)"/><text x="9.0449%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (5 samples, 0.13%)</title><rect x="8.7949%" y="565" width="0.1282%" height="15" fill="rgb(213,116,39)"/><text x="9.0449%" y="575.50"></text></g><g><title>__libc_recv (5 samples, 0.13%)</title><rect x="8.7949%" y="549" width="0.1282%" height="15" fill="rgb(222,207,29)"/><text x="9.0449%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.13%)</title><rect x="8.7949%" y="533" width="0.1282%" height="15" fill="rgb(206,96,30)"/><text x="9.0449%" y="543.50"></text></g><g><title>do_syscall_64 (5 samples, 0.13%)</title><rect x="8.7949%" y="517" width="0.1282%" height="15" fill="rgb(218,138,4)"/><text x="9.0449%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (5 samples, 0.13%)</title><rect x="8.7949%" y="501" width="0.1282%" height="15" fill="rgb(250,191,14)"/><text x="9.0449%" y="511.50"></text></g><g><title>__sys_recvfrom (5 samples, 0.13%)</title><rect x="8.7949%" y="485" width="0.1282%" height="15" fill="rgb(239,60,40)"/><text x="9.0449%" y="495.50"></text></g><g><title>inet_recvmsg (5 samples, 0.13%)</title><rect x="8.7949%" y="469" width="0.1282%" height="15" fill="rgb(206,27,48)"/><text x="9.0449%" y="479.50"></text></g><g><title>tcp_recvmsg (5 samples, 0.13%)</title><rect x="8.7949%" y="453" width="0.1282%" height="15" fill="rgb(225,35,8)"/><text x="9.0449%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.33%)</title><rect x="8.9231%" y="693" width="0.3333%" height="15" fill="rgb(250,213,24)"/><text x="9.1731%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.33%)</title><rect x="8.9231%" y="677" width="0.3333%" height="15" fill="rgb(247,123,22)"/><text x="9.1731%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.33%)</title><rect x="8.9231%" y="661" width="0.3333%" height="15" fill="rgb(231,138,38)"/><text x="9.1731%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.33%)</title><rect x="8.9231%" y="645" width="0.3333%" height="15" fill="rgb(231,145,46)"/><text x="9.1731%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.33%)</title><rect x="8.9231%" y="629" width="0.3333%" height="15" fill="rgb(251,118,11)"/><text x="9.1731%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.33%)</title><rect x="8.9231%" y="613" width="0.3333%" height="15" fill="rgb(217,147,25)"/><text x="9.1731%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.33%)</title><rect x="8.9231%" y="597" width="0.3333%" height="15" fill="rgb(247,81,37)"/><text x="9.1731%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.33%)</title><rect x="8.9231%" y="581" width="0.3333%" height="15" fill="rgb(209,12,38)"/><text x="9.1731%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (13 samples, 0.33%)</title><rect x="8.9231%" y="565" width="0.3333%" height="15" fill="rgb(227,1,9)"/><text x="9.1731%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.33%)</title><rect x="8.9231%" y="549" width="0.3333%" height="15" fill="rgb(248,47,43)"/><text x="9.1731%" y="559.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.33%)</title><rect x="8.9231%" y="533" width="0.3333%" height="15" fill="rgb(221,10,30)"/><text x="9.1731%" y="543.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.33%)</title><rect x="8.9231%" y="517" width="0.3333%" height="15" fill="rgb(210,229,1)"/><text x="9.1731%" y="527.50"></text></g><g><title>_int_malloc (13 samples, 0.33%)</title><rect x="8.9231%" y="501" width="0.3333%" height="15" fill="rgb(222,148,37)"/><text x="9.1731%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.13%)</title><rect x="9.4103%" y="597" width="0.1282%" height="15" fill="rgb(234,67,33)"/><text x="9.6603%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.13%)</title><rect x="9.4103%" y="581" width="0.1282%" height="15" fill="rgb(247,98,35)"/><text x="9.6603%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.13%)</title><rect x="9.4103%" y="565" width="0.1282%" height="15" fill="rgb(247,138,52)"/><text x="9.6603%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.13%)</title><rect x="9.4103%" y="549" width="0.1282%" height="15" fill="rgb(213,79,30)"/><text x="9.6603%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.10%)</title><rect x="9.4359%" y="533" width="0.1026%" height="15" fill="rgb(246,177,23)"/><text x="9.6859%" y="543.50"></text></g><g><title>page_fault (5 samples, 0.13%)</title><rect x="10.5385%" y="453" width="0.1282%" height="15" fill="rgb(230,62,27)"/><text x="10.7885%" y="463.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.13%)</title><rect x="10.5385%" y="437" width="0.1282%" height="15" fill="rgb(216,154,8)"/><text x="10.7885%" y="447.50"></text></g><g><title>handle_mm_fault (5 samples, 0.13%)</title><rect x="10.5385%" y="421" width="0.1282%" height="15" fill="rgb(244,35,45)"/><text x="10.7885%" y="431.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.13%)</title><rect x="10.5385%" y="405" width="0.1282%" height="15" fill="rgb(251,115,12)"/><text x="10.7885%" y="415.50"></text></g><g><title>mem_cgroup_try_charge_delay (4 samples, 0.10%)</title><rect x="10.5641%" y="389" width="0.1026%" height="15" fill="rgb(240,54,50)"/><text x="10.8141%" y="399.50"></text></g><g><title>mem_cgroup_try_charge (4 samples, 0.10%)</title><rect x="10.5641%" y="373" width="0.1026%" height="15" fill="rgb(233,84,52)"/><text x="10.8141%" y="383.50"></text></g><g><title>do_syscall_64 (4 samples, 0.10%)</title><rect x="10.6667%" y="405" width="0.1026%" height="15" fill="rgb(207,117,47)"/><text x="10.9167%" y="415.50"></text></g><g><title>__x64_sys_mprotect (4 samples, 0.10%)</title><rect x="10.6667%" y="389" width="0.1026%" height="15" fill="rgb(249,43,39)"/><text x="10.9167%" y="399.50"></text></g><g><title>do_mprotect_pkey (4 samples, 0.10%)</title><rect x="10.6667%" y="373" width="0.1026%" height="15" fill="rgb(209,38,44)"/><text x="10.9167%" y="383.50"></text></g><g><title>__GI___mprotect (7 samples, 0.18%)</title><rect x="10.6667%" y="437" width="0.1795%" height="15" fill="rgb(236,212,23)"/><text x="10.9167%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.18%)</title><rect x="10.6667%" y="421" width="0.1795%" height="15" fill="rgb(242,79,21)"/><text x="10.9167%" y="431.50"></text></g><g><title>sysmalloc (10 samples, 0.26%)</title><rect x="10.6667%" y="453" width="0.2564%" height="15" fill="rgb(211,96,35)"/><text x="10.9167%" y="463.50"></text></g><g><title>__GI___libc_malloc (54 samples, 1.38%)</title><rect x="9.5641%" y="485" width="1.3846%" height="15" fill="rgb(253,215,40)"/><text x="9.8141%" y="495.50"></text></g><g><title>_int_malloc (38 samples, 0.97%)</title><rect x="9.9744%" y="469" width="0.9744%" height="15" fill="rgb(211,81,21)"/><text x="10.2244%" y="479.50"></text></g><g><title>__rdl_alloc (6 samples, 0.15%)</title><rect x="10.9487%" y="485" width="0.1538%" height="15" fill="rgb(208,190,38)"/><text x="11.1987%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.15%)</title><rect x="10.9487%" y="469" width="0.1538%" height="15" fill="rgb(235,213,38)"/><text x="11.1987%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (69 samples, 1.77%)</title><rect x="9.3846%" y="661" width="1.7692%" height="15" fill="rgb(237,122,38)"/><text x="9.6346%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (68 samples, 1.74%)</title><rect x="9.4103%" y="645" width="1.7436%" height="15" fill="rgb(244,218,35)"/><text x="9.6603%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (68 samples, 1.74%)</title><rect x="9.4103%" y="629" width="1.7436%" height="15" fill="rgb(240,68,47)"/><text x="9.6603%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (68 samples, 1.74%)</title><rect x="9.4103%" y="613" width="1.7436%" height="15" fill="rgb(210,16,53)"/><text x="9.6603%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (63 samples, 1.62%)</title><rect x="9.5385%" y="597" width="1.6154%" height="15" fill="rgb(235,124,12)"/><text x="9.7885%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (63 samples, 1.62%)</title><rect x="9.5385%" y="581" width="1.6154%" height="15" fill="rgb(224,169,11)"/><text x="9.7885%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (63 samples, 1.62%)</title><rect x="9.5385%" y="565" width="1.6154%" height="15" fill="rgb(250,166,2)"/><text x="9.7885%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (63 samples, 1.62%)</title><rect x="9.5385%" y="549" width="1.6154%" height="15" fill="rgb(242,216,29)"/><text x="9.7885%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (63 samples, 1.62%)</title><rect x="9.5385%" y="533" width="1.6154%" height="15" fill="rgb(230,116,27)"/><text x="9.7885%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 1.62%)</title><rect x="9.5385%" y="517" width="1.6154%" height="15" fill="rgb(228,99,48)"/><text x="9.7885%" y="527.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 1.62%)</title><rect x="9.5385%" y="501" width="1.6154%" height="15" fill="rgb(253,11,6)"/><text x="9.7885%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 1.85%)</title><rect x="9.3333%" y="677" width="1.8462%" height="15" fill="rgb(247,143,39)"/><text x="9.5833%" y="687.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as core::clone::Clone&gt;::clone (8 samples, 0.21%)</title><rect x="11.1795%" y="677" width="0.2051%" height="15" fill="rgb(236,97,10)"/><text x="11.4295%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="11.2564%" y="661" width="0.1282%" height="15" fill="rgb(233,208,19)"/><text x="11.5064%" y="671.50"></text></g><g><title>perf_event_mmap (14 samples, 0.36%)</title><rect x="11.7179%" y="533" width="0.3590%" height="15" fill="rgb(216,164,2)"/><text x="11.9679%" y="543.50"></text></g><g><title>perf_iterate_sb (12 samples, 0.31%)</title><rect x="11.7692%" y="517" width="0.3077%" height="15" fill="rgb(220,129,5)"/><text x="12.0192%" y="527.50"></text></g><g><title>perf_iterate_ctx (12 samples, 0.31%)</title><rect x="11.7692%" y="501" width="0.3077%" height="15" fill="rgb(242,17,10)"/><text x="12.0192%" y="511.50"></text></g><g><title>perf_event_mmap_output (7 samples, 0.18%)</title><rect x="11.8974%" y="485" width="0.1795%" height="15" fill="rgb(242,107,0)"/><text x="12.1474%" y="495.50"></text></g><g><title>mprotect_fixup (18 samples, 0.46%)</title><rect x="11.6923%" y="549" width="0.4615%" height="15" fill="rgb(251,28,31)"/><text x="11.9423%" y="559.50"></text></g><g><title>do_syscall_64 (19 samples, 0.49%)</title><rect x="11.6923%" y="597" width="0.4872%" height="15" fill="rgb(233,223,10)"/><text x="11.9423%" y="607.50"></text></g><g><title>__x64_sys_mprotect (19 samples, 0.49%)</title><rect x="11.6923%" y="581" width="0.4872%" height="15" fill="rgb(215,21,27)"/><text x="11.9423%" y="591.50"></text></g><g><title>do_mprotect_pkey (19 samples, 0.49%)</title><rect x="11.6923%" y="565" width="0.4872%" height="15" fill="rgb(232,23,21)"/><text x="11.9423%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 0.54%)</title><rect x="11.6923%" y="613" width="0.5385%" height="15" fill="rgb(244,5,23)"/><text x="11.9423%" y="623.50"></text></g><g><title>__GI___mprotect (23 samples, 0.59%)</title><rect x="11.6923%" y="629" width="0.5897%" height="15" fill="rgb(226,81,46)"/><text x="11.9423%" y="639.50"></text></g><g><title>clear_page_erms (9 samples, 0.23%)</title><rect x="12.5128%" y="485" width="0.2308%" height="15" fill="rgb(247,70,30)"/><text x="12.7628%" y="495.50"></text></g><g><title>alloc_pages_vma (15 samples, 0.38%)</title><rect x="12.4103%" y="565" width="0.3846%" height="15" fill="rgb(212,68,19)"/><text x="12.6603%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (15 samples, 0.38%)</title><rect x="12.4103%" y="549" width="0.3846%" height="15" fill="rgb(240,187,13)"/><text x="12.6603%" y="559.50"></text></g><g><title>get_page_from_freelist (15 samples, 0.38%)</title><rect x="12.4103%" y="533" width="0.3846%" height="15" fill="rgb(223,113,26)"/><text x="12.6603%" y="543.50"></text></g><g><title>prep_new_page (12 samples, 0.31%)</title><rect x="12.4872%" y="517" width="0.3077%" height="15" fill="rgb(206,192,2)"/><text x="12.7372%" y="527.50"></text></g><g><title>kernel_init_free_pages (12 samples, 0.31%)</title><rect x="12.4872%" y="501" width="0.3077%" height="15" fill="rgb(241,108,4)"/><text x="12.7372%" y="511.50"></text></g><g><title>mem_cgroup_try_charge_delay (5 samples, 0.13%)</title><rect x="12.8462%" y="565" width="0.1282%" height="15" fill="rgb(247,173,49)"/><text x="13.0962%" y="575.50"></text></g><g><title>mem_cgroup_try_charge (5 samples, 0.13%)</title><rect x="12.8462%" y="549" width="0.1282%" height="15" fill="rgb(224,114,35)"/><text x="13.0962%" y="559.50"></text></g><g><title>page_fault (26 samples, 0.67%)</title><rect x="12.3333%" y="629" width="0.6667%" height="15" fill="rgb(245,159,27)"/><text x="12.5833%" y="639.50"></text></g><g><title>do_user_addr_fault (26 samples, 0.67%)</title><rect x="12.3333%" y="613" width="0.6667%" height="15" fill="rgb(245,172,44)"/><text x="12.5833%" y="623.50"></text></g><g><title>handle_mm_fault (26 samples, 0.67%)</title><rect x="12.3333%" y="597" width="0.6667%" height="15" fill="rgb(236,23,11)"/><text x="12.5833%" y="607.50"></text></g><g><title>__handle_mm_fault (25 samples, 0.64%)</title><rect x="12.3590%" y="581" width="0.6410%" height="15" fill="rgb(205,117,38)"/><text x="12.6090%" y="591.50"></text></g><g><title>__GI___libc_malloc (69 samples, 1.77%)</title><rect x="11.3846%" y="677" width="1.7692%" height="15" fill="rgb(237,72,25)"/><text x="11.6346%" y="687.50"></text></g><g><title>_int_malloc (67 samples, 1.72%)</title><rect x="11.4359%" y="661" width="1.7179%" height="15" fill="rgb(244,70,9)"/><text x="11.6859%" y="671.50"></text></g><g><title>sysmalloc (59 samples, 1.51%)</title><rect x="11.6410%" y="645" width="1.5128%" height="15" fill="rgb(217,125,39)"/><text x="11.8910%" y="655.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.15%)</title><rect x="13.0000%" y="629" width="0.1538%" height="15" fill="rgb(235,36,10)"/><text x="13.2500%" y="639.50"></text></g><g><title>prepare_exit_to_usermode (5 samples, 0.13%)</title><rect x="13.0256%" y="613" width="0.1282%" height="15" fill="rgb(251,123,47)"/><text x="13.2756%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (153 samples, 3.92%)</title><rect x="9.2564%" y="693" width="3.9231%" height="15" fill="rgb(221,13,13)"/><text x="9.5064%" y="703.50">&lt;all..</text></g><g><title>__x64_sys_mprotect (6 samples, 0.15%)</title><rect x="13.3077%" y="581" width="0.1538%" height="15" fill="rgb(238,131,9)"/><text x="13.5577%" y="591.50"></text></g><g><title>do_mprotect_pkey (6 samples, 0.15%)</title><rect x="13.3077%" y="565" width="0.1538%" height="15" fill="rgb(211,50,8)"/><text x="13.5577%" y="575.50"></text></g><g><title>mprotect_fixup (6 samples, 0.15%)</title><rect x="13.3077%" y="549" width="0.1538%" height="15" fill="rgb(245,182,24)"/><text x="13.5577%" y="559.50"></text></g><g><title>__GI___mprotect (7 samples, 0.18%)</title><rect x="13.3077%" y="629" width="0.1795%" height="15" fill="rgb(242,14,37)"/><text x="13.5577%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.18%)</title><rect x="13.3077%" y="613" width="0.1795%" height="15" fill="rgb(246,228,12)"/><text x="13.5577%" y="623.50"></text></g><g><title>do_syscall_64 (7 samples, 0.18%)</title><rect x="13.3077%" y="597" width="0.1795%" height="15" fill="rgb(213,55,15)"/><text x="13.5577%" y="607.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.41%)</title><rect x="13.2564%" y="677" width="0.4103%" height="15" fill="rgb(209,9,3)"/><text x="13.5064%" y="687.50"></text></g><g><title>_int_malloc (16 samples, 0.41%)</title><rect x="13.2564%" y="661" width="0.4103%" height="15" fill="rgb(230,59,30)"/><text x="13.5064%" y="671.50"></text></g><g><title>sysmalloc (14 samples, 0.36%)</title><rect x="13.3077%" y="645" width="0.3590%" height="15" fill="rgb(209,121,21)"/><text x="13.5577%" y="655.50"></text></g><g><title>page_fault (7 samples, 0.18%)</title><rect x="13.4872%" y="629" width="0.1795%" height="15" fill="rgb(220,109,13)"/><text x="13.7372%" y="639.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.15%)</title><rect x="13.5128%" y="613" width="0.1538%" height="15" fill="rgb(232,18,1)"/><text x="13.7628%" y="623.50"></text></g><g><title>handle_mm_fault (6 samples, 0.15%)</title><rect x="13.5128%" y="597" width="0.1538%" height="15" fill="rgb(215,41,42)"/><text x="13.7628%" y="607.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.15%)</title><rect x="13.5128%" y="581" width="0.1538%" height="15" fill="rgb(224,123,36)"/><text x="13.7628%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.51%)</title><rect x="13.2564%" y="693" width="0.5128%" height="15" fill="rgb(240,125,3)"/><text x="13.5064%" y="703.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.10%)</title><rect x="13.6667%" y="677" width="0.1026%" height="15" fill="rgb(205,98,50)"/><text x="13.9167%" y="687.50"></text></g><g><title>_int_realloc (4 samples, 0.10%)</title><rect x="13.6667%" y="661" width="0.1026%" height="15" fill="rgb(205,185,37)"/><text x="13.9167%" y="671.50"></text></g><g><title>alloc::slice::merge_sort (4 samples, 0.10%)</title><rect x="13.7692%" y="693" width="0.1026%" height="15" fill="rgb(238,207,15)"/><text x="14.0192%" y="703.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="13.8718%" y="693" width="0.1026%" height="15" fill="rgb(213,199,42)"/><text x="14.1218%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.10%)</title><rect x="13.8718%" y="677" width="0.1026%" height="15" fill="rgb(235,201,11)"/><text x="14.1218%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.10%)</title><rect x="14.0256%" y="645" width="0.1026%" height="15" fill="rgb(207,46,11)"/><text x="14.2756%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.10%)</title><rect x="14.0256%" y="629" width="0.1026%" height="15" fill="rgb(241,35,35)"/><text x="14.2756%" y="639.50"></text></g><g><title>decor_mem::select::expr_to_col (7 samples, 0.18%)</title><rect x="13.9744%" y="693" width="0.1795%" height="15" fill="rgb(243,32,47)"/><text x="14.2244%" y="703.50"></text></g><g><title>core::fmt::write (6 samples, 0.15%)</title><rect x="14.0000%" y="677" width="0.1538%" height="15" fill="rgb(247,202,23)"/><text x="14.2500%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.15%)</title><rect x="14.0000%" y="661" width="0.1538%" height="15" fill="rgb(219,102,11)"/><text x="14.2500%" y="671.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.13%)</title><rect x="14.3846%" y="485" width="0.1282%" height="15" fill="rgb(243,110,44)"/><text x="14.6346%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.23%)</title><rect x="14.3077%" y="677" width="0.2308%" height="15" fill="rgb(222,74,54)"/><text x="14.5577%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.15%)</title><rect x="14.3846%" y="661" width="0.1538%" height="15" fill="rgb(216,99,12)"/><text x="14.6346%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.15%)</title><rect x="14.3846%" y="645" width="0.1538%" height="15" fill="rgb(226,22,26)"/><text x="14.6346%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.15%)</title><rect x="14.3846%" y="629" width="0.1538%" height="15" fill="rgb(217,163,10)"/><text x="14.6346%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.15%)</title><rect x="14.3846%" y="613" width="0.1538%" height="15" fill="rgb(213,25,53)"/><text x="14.6346%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.15%)</title><rect x="14.3846%" y="597" width="0.1538%" height="15" fill="rgb(252,105,26)"/><text x="14.6346%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.15%)</title><rect x="14.3846%" y="581" width="0.1538%" height="15" fill="rgb(220,39,43)"/><text x="14.6346%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.15%)</title><rect x="14.3846%" y="565" width="0.1538%" height="15" fill="rgb(229,68,48)"/><text x="14.6346%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.15%)</title><rect x="14.3846%" y="549" width="0.1538%" height="15" fill="rgb(252,8,32)"/><text x="14.6346%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.15%)</title><rect x="14.3846%" y="533" width="0.1538%" height="15" fill="rgb(223,20,43)"/><text x="14.6346%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.15%)</title><rect x="14.3846%" y="517" width="0.1538%" height="15" fill="rgb(229,81,49)"/><text x="14.6346%" y="527.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.15%)</title><rect x="14.3846%" y="501" width="0.1538%" height="15" fill="rgb(236,28,36)"/><text x="14.6346%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.10%)</title><rect x="14.5385%" y="677" width="0.1026%" height="15" fill="rgb(249,185,26)"/><text x="14.7885%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.18%)</title><rect x="14.7436%" y="677" width="0.1795%" height="15" fill="rgb(249,174,33)"/><text x="14.9936%" y="687.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.18%)</title><rect x="14.7436%" y="661" width="0.1795%" height="15" fill="rgb(233,201,37)"/><text x="14.9936%" y="671.50"></text></g><g><title>_int_malloc (7 samples, 0.18%)</title><rect x="14.7436%" y="645" width="0.1795%" height="15" fill="rgb(221,78,26)"/><text x="14.9936%" y="655.50"></text></g><g><title>malloc_consolidate (4 samples, 0.10%)</title><rect x="14.8205%" y="629" width="0.1026%" height="15" fill="rgb(250,127,30)"/><text x="15.0705%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.13%)</title><rect x="14.9744%" y="629" width="0.1282%" height="15" fill="rgb(230,49,44)"/><text x="15.2244%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.13%)</title><rect x="14.9744%" y="613" width="0.1282%" height="15" fill="rgb(229,67,23)"/><text x="15.2244%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.13%)</title><rect x="14.9744%" y="597" width="0.1282%" height="15" fill="rgb(249,83,47)"/><text x="15.2244%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.13%)</title><rect x="14.9744%" y="581" width="0.1282%" height="15" fill="rgb(215,43,3)"/><text x="15.2244%" y="591.50"></text></g><g><title>decor_mem::select::expr_to_col (8 samples, 0.21%)</title><rect x="14.9744%" y="677" width="0.2051%" height="15" fill="rgb(238,154,13)"/><text x="15.2244%" y="687.50"></text></g><g><title>core::fmt::write (8 samples, 0.21%)</title><rect x="14.9744%" y="661" width="0.2051%" height="15" fill="rgb(219,56,2)"/><text x="15.2244%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.21%)</title><rect x="14.9744%" y="645" width="0.2051%" height="15" fill="rgb(233,0,4)"/><text x="15.2244%" y="655.50"></text></g><g><title>_int_free (8 samples, 0.21%)</title><rect x="15.4359%" y="661" width="0.2051%" height="15" fill="rgb(235,30,7)"/><text x="15.6859%" y="671.50"></text></g><g><title>decor_mem::select::expr_to_col (4 samples, 0.10%)</title><rect x="15.7436%" y="661" width="0.1026%" height="15" fill="rgb(250,79,13)"/><text x="15.9936%" y="671.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="15.7436%" y="645" width="0.1026%" height="15" fill="rgb(211,146,34)"/><text x="15.9936%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.10%)</title><rect x="15.7436%" y="629" width="0.1026%" height="15" fill="rgb(228,22,38)"/><text x="15.9936%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.10%)</title><rect x="15.7436%" y="613" width="0.1026%" height="15" fill="rgb(235,168,5)"/><text x="15.9936%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.10%)</title><rect x="15.7436%" y="597" width="0.1026%" height="15" fill="rgb(221,155,16)"/><text x="15.9936%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="15.8718%" y="645" width="0.1026%" height="15" fill="rgb(215,215,53)"/><text x="16.1218%" y="655.50"></text></g><g><title>core::fmt::write (7 samples, 0.18%)</title><rect x="16.2308%" y="629" width="0.1795%" height="15" fill="rgb(223,4,10)"/><text x="16.4808%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (7 samples, 0.18%)</title><rect x="16.2308%" y="613" width="0.1795%" height="15" fill="rgb(234,103,6)"/><text x="16.4808%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.18%)</title><rect x="16.2308%" y="597" width="0.1795%" height="15" fill="rgb(227,97,0)"/><text x="16.4808%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.18%)</title><rect x="16.2308%" y="581" width="0.1795%" height="15" fill="rgb(234,150,53)"/><text x="16.4808%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.18%)</title><rect x="16.2308%" y="565" width="0.1795%" height="15" fill="rgb(228,201,54)"/><text x="16.4808%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.13%)</title><rect x="16.2821%" y="549" width="0.1282%" height="15" fill="rgb(222,22,37)"/><text x="16.5321%" y="559.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (9 samples, 0.23%)</title><rect x="16.2051%" y="645" width="0.2308%" height="15" fill="rgb(237,53,32)"/><text x="16.4551%" y="655.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="16.4872%" y="629" width="0.1026%" height="15" fill="rgb(233,25,53)"/><text x="16.7372%" y="639.50"></text></g><g><title>decor_mem::views::View::get_row_indices_of_col (8 samples, 0.21%)</title><rect x="16.4359%" y="645" width="0.2051%" height="15" fill="rgb(210,40,34)"/><text x="16.6859%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.15%)</title><rect x="16.7949%" y="597" width="0.1538%" height="15" fill="rgb(241,220,44)"/><text x="17.0449%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.13%)</title><rect x="16.8205%" y="581" width="0.1282%" height="15" fill="rgb(235,28,35)"/><text x="17.0705%" y="591.50"></text></g><g><title>decor_mem::select::get_rows_matching_constraint (45 samples, 1.15%)</title><rect x="15.8462%" y="661" width="1.1538%" height="15" fill="rgb(210,56,17)"/><text x="16.0962%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.36%)</title><rect x="16.6410%" y="645" width="0.3590%" height="15" fill="rgb(224,130,29)"/><text x="16.8910%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (13 samples, 0.33%)</title><rect x="16.6667%" y="629" width="0.3333%" height="15" fill="rgb(235,212,8)"/><text x="16.9167%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (10 samples, 0.26%)</title><rect x="16.7436%" y="613" width="0.2564%" height="15" fill="rgb(223,33,50)"/><text x="16.9936%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.36%)</title><rect x="17.0769%" y="645" width="0.3590%" height="15" fill="rgb(219,149,13)"/><text x="17.3269%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.36%)</title><rect x="17.0769%" y="629" width="0.3590%" height="15" fill="rgb(250,156,29)"/><text x="17.3269%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.36%)</title><rect x="17.0769%" y="613" width="0.3590%" height="15" fill="rgb(216,193,19)"/><text x="17.3269%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.36%)</title><rect x="17.0769%" y="597" width="0.3590%" height="15" fill="rgb(216,135,14)"/><text x="17.3269%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.36%)</title><rect x="17.0769%" y="581" width="0.3590%" height="15" fill="rgb(241,47,5)"/><text x="17.3269%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.36%)</title><rect x="17.0769%" y="565" width="0.3590%" height="15" fill="rgb(233,42,35)"/><text x="17.3269%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.36%)</title><rect x="17.0769%" y="549" width="0.3590%" height="15" fill="rgb(231,13,6)"/><text x="17.3269%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.36%)</title><rect x="17.0769%" y="533" width="0.3590%" height="15" fill="rgb(207,181,40)"/><text x="17.3269%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (14 samples, 0.36%)</title><rect x="17.0769%" y="517" width="0.3590%" height="15" fill="rgb(254,173,49)"/><text x="17.3269%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.36%)</title><rect x="17.0769%" y="501" width="0.3590%" height="15" fill="rgb(221,1,38)"/><text x="17.3269%" y="511.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.36%)</title><rect x="17.0769%" y="485" width="0.3590%" height="15" fill="rgb(206,124,46)"/><text x="17.3269%" y="495.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.36%)</title><rect x="17.0769%" y="469" width="0.3590%" height="15" fill="rgb(249,21,11)"/><text x="17.3269%" y="479.50"></text></g><g><title>_int_malloc (8 samples, 0.21%)</title><rect x="17.2308%" y="453" width="0.2051%" height="15" fill="rgb(222,201,40)"/><text x="17.4808%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="17.5128%" y="645" width="0.1026%" height="15" fill="rgb(235,61,29)"/><text x="17.7628%" y="655.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.10%)</title><rect x="17.5128%" y="629" width="0.1026%" height="15" fill="rgb(219,207,3)"/><text x="17.7628%" y="639.50"></text></g><g><title>_int_realloc (4 samples, 0.10%)</title><rect x="17.5128%" y="613" width="0.1026%" height="15" fill="rgb(222,56,46)"/><text x="17.7628%" y="623.50"></text></g><g><title>decor_mem::helpers::minus_parser_vals (7 samples, 0.18%)</title><rect x="17.6154%" y="645" width="0.1795%" height="15" fill="rgb(239,76,54)"/><text x="17.8654%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.15%)</title><rect x="17.8462%" y="565" width="0.1538%" height="15" fill="rgb(231,124,27)"/><text x="18.0962%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.21%)</title><rect x="17.8205%" y="597" width="0.2051%" height="15" fill="rgb(249,195,6)"/><text x="18.0705%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.21%)</title><rect x="17.8205%" y="581" width="0.2051%" height="15" fill="rgb(237,174,47)"/><text x="18.0705%" y="591.50"></text></g><g><title>core::fmt::write (10 samples, 0.26%)</title><rect x="17.7949%" y="629" width="0.2564%" height="15" fill="rgb(206,201,31)"/><text x="18.0449%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.23%)</title><rect x="17.8205%" y="613" width="0.2308%" height="15" fill="rgb(231,57,52)"/><text x="18.0705%" y="623.50"></text></g><g><title>decor_mem::select::get_value_for_rows (43 samples, 1.10%)</title><rect x="17.0000%" y="661" width="1.1026%" height="15" fill="rgb(248,177,22)"/><text x="17.2500%" y="671.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (12 samples, 0.31%)</title><rect x="17.7949%" y="645" width="0.3077%" height="15" fill="rgb(215,211,37)"/><text x="18.0449%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.18%)</title><rect x="18.1282%" y="613" width="0.1795%" height="15" fill="rgb(241,128,51)"/><text x="18.3782%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.18%)</title><rect x="18.1282%" y="597" width="0.1795%" height="15" fill="rgb(227,165,31)"/><text x="18.3782%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.18%)</title><rect x="18.1282%" y="581" width="0.1795%" height="15" fill="rgb(228,167,24)"/><text x="18.3782%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.13%)</title><rect x="18.1795%" y="565" width="0.1282%" height="15" fill="rgb(228,143,12)"/><text x="18.4295%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.21%)</title><rect x="18.1282%" y="629" width="0.2051%" height="15" fill="rgb(249,149,8)"/><text x="18.3782%" y="639.50"></text></g><g><title>core::fmt::write (9 samples, 0.23%)</title><rect x="18.1282%" y="645" width="0.2308%" height="15" fill="rgb(243,35,44)"/><text x="18.3782%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.10%)</title><rect x="18.4103%" y="565" width="0.1026%" height="15" fill="rgb(246,89,9)"/><text x="18.6603%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.10%)</title><rect x="18.4103%" y="549" width="0.1026%" height="15" fill="rgb(233,213,13)"/><text x="18.6603%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.10%)</title><rect x="18.4103%" y="533" width="0.1026%" height="15" fill="rgb(233,141,41)"/><text x="18.6603%" y="543.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (18 samples, 0.46%)</title><rect x="18.1026%" y="661" width="0.4615%" height="15" fill="rgb(239,167,4)"/><text x="18.3526%" y="671.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (8 samples, 0.21%)</title><rect x="18.3590%" y="645" width="0.2051%" height="15" fill="rgb(209,217,16)"/><text x="18.6090%" y="655.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.21%)</title><rect x="18.3590%" y="629" width="0.2051%" height="15" fill="rgb(219,88,35)"/><text x="18.6090%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.21%)</title><rect x="18.3590%" y="613" width="0.2051%" height="15" fill="rgb(220,193,23)"/><text x="18.6090%" y="623.50"></text></g><g><title>core::fmt::write (8 samples, 0.21%)</title><rect x="18.3590%" y="597" width="0.2051%" height="15" fill="rgb(230,90,52)"/><text x="18.6090%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.15%)</title><rect x="18.4103%" y="581" width="0.1538%" height="15" fill="rgb(252,106,19)"/><text x="18.6603%" y="591.50"></text></g><g><title>alloc::string::String::push (5 samples, 0.13%)</title><rect x="18.8205%" y="565" width="0.1282%" height="15" fill="rgb(206,74,20)"/><text x="19.0705%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (30 samples, 0.77%)</title><rect x="18.7179%" y="581" width="0.7692%" height="15" fill="rgb(230,138,44)"/><text x="18.9679%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (21 samples, 0.54%)</title><rect x="18.9487%" y="565" width="0.5385%" height="15" fill="rgb(235,182,43)"/><text x="19.1987%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (18 samples, 0.46%)</title><rect x="19.0256%" y="549" width="0.4615%" height="15" fill="rgb(242,16,51)"/><text x="19.2756%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (18 samples, 0.46%)</title><rect x="19.0256%" y="533" width="0.4615%" height="15" fill="rgb(248,9,4)"/><text x="19.2756%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (9 samples, 0.23%)</title><rect x="19.2564%" y="517" width="0.2308%" height="15" fill="rgb(210,31,22)"/><text x="19.5064%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (36 samples, 0.92%)</title><rect x="18.6923%" y="613" width="0.9231%" height="15" fill="rgb(239,54,39)"/><text x="18.9423%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (36 samples, 0.92%)</title><rect x="18.6923%" y="597" width="0.9231%" height="15" fill="rgb(230,99,41)"/><text x="18.9423%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.13%)</title><rect x="19.4872%" y="581" width="0.1282%" height="15" fill="rgb(253,106,12)"/><text x="19.7372%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.13%)</title><rect x="19.4872%" y="565" width="0.1282%" height="15" fill="rgb(213,46,41)"/><text x="19.7372%" y="575.50"></text></g><g><title>core::fmt::write (45 samples, 1.15%)</title><rect x="18.6410%" y="645" width="1.1538%" height="15" fill="rgb(215,133,35)"/><text x="18.8910%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (44 samples, 1.13%)</title><rect x="18.6667%" y="629" width="1.1282%" height="15" fill="rgb(213,28,5)"/><text x="18.9167%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.15%)</title><rect x="19.6410%" y="613" width="0.1538%" height="15" fill="rgb(215,77,49)"/><text x="19.8910%" y="623.50"></text></g><g><title>core::fmt::write (5 samples, 0.13%)</title><rect x="19.6667%" y="597" width="0.1282%" height="15" fill="rgb(248,100,22)"/><text x="19.9167%" y="607.50"></text></g><g><title>decor_mem::views::View::get_row_indices_of_col (54 samples, 1.38%)</title><rect x="18.5641%" y="661" width="1.3846%" height="15" fill="rgb(208,67,9)"/><text x="18.8141%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.15%)</title><rect x="19.7949%" y="645" width="0.1538%" height="15" fill="rgb(219,133,21)"/><text x="20.0449%" y="655.50"></text></g><g><title>decor_mem::select::get_rows_matching_constraint (205 samples, 5.26%)</title><rect x="15.1795%" y="677" width="5.2564%" height="15" fill="rgb(246,46,29)"/><text x="15.4295%" y="687.50">decor_..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.44%)</title><rect x="20.0000%" y="661" width="0.4359%" height="15" fill="rgb(246,185,52)"/><text x="20.2500%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (11 samples, 0.28%)</title><rect x="20.1538%" y="645" width="0.2821%" height="15" fill="rgb(252,136,11)"/><text x="20.4038%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (8 samples, 0.21%)</title><rect x="20.2308%" y="629" width="0.2051%" height="15" fill="rgb(219,138,53)"/><text x="20.4808%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.21%)</title><rect x="20.2308%" y="613" width="0.2051%" height="15" fill="rgb(211,51,23)"/><text x="20.4808%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.23%)</title><rect x="20.5128%" y="597" width="0.2308%" height="15" fill="rgb(247,221,28)"/><text x="20.7628%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.15%)</title><rect x="20.5897%" y="581" width="0.1538%" height="15" fill="rgb(251,222,45)"/><text x="20.8397%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.15%)</title><rect x="20.5897%" y="565" width="0.1538%" height="15" fill="rgb(217,162,53)"/><text x="20.8397%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.15%)</title><rect x="20.5897%" y="549" width="0.1538%" height="15" fill="rgb(229,93,14)"/><text x="20.8397%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.10%)</title><rect x="20.6410%" y="533" width="0.1026%" height="15" fill="rgb(209,67,49)"/><text x="20.8910%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.28%)</title><rect x="20.5128%" y="629" width="0.2821%" height="15" fill="rgb(213,87,29)"/><text x="20.7628%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (11 samples, 0.28%)</title><rect x="20.5128%" y="613" width="0.2821%" height="15" fill="rgb(205,151,52)"/><text x="20.7628%" y="623.50"></text></g><g><title>core::fmt::write (14 samples, 0.36%)</title><rect x="20.4872%" y="661" width="0.3590%" height="15" fill="rgb(253,215,39)"/><text x="20.7372%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (14 samples, 0.36%)</title><rect x="20.4872%" y="645" width="0.3590%" height="15" fill="rgb(221,220,41)"/><text x="20.7372%" y="655.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (18 samples, 0.46%)</title><rect x="20.4359%" y="677" width="0.4615%" height="15" fill="rgb(218,133,21)"/><text x="20.6859%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.18%)</title><rect x="21.4615%" y="581" width="0.1795%" height="15" fill="rgb(221,193,43)"/><text x="21.7115%" y="591.50"></text></g><g><title>core::str::validations::next_code_point (4 samples, 0.10%)</title><rect x="21.5385%" y="565" width="0.1026%" height="15" fill="rgb(240,128,52)"/><text x="21.7885%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (6 samples, 0.15%)</title><rect x="21.6410%" y="565" width="0.1538%" height="15" fill="rgb(253,114,12)"/><text x="21.8910%" y="575.50"></text></g><g><title>alloc::string::String::push (7 samples, 0.18%)</title><rect x="21.6410%" y="581" width="0.1795%" height="15" fill="rgb(215,223,47)"/><text x="21.8910%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (61 samples, 1.56%)</title><rect x="21.2564%" y="597" width="1.5641%" height="15" fill="rgb(248,225,23)"/><text x="21.5064%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (39 samples, 1.00%)</title><rect x="21.8205%" y="581" width="1.0000%" height="15" fill="rgb(250,108,0)"/><text x="22.0705%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (30 samples, 0.77%)</title><rect x="22.0513%" y="565" width="0.7692%" height="15" fill="rgb(228,208,7)"/><text x="22.3013%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (30 samples, 0.77%)</title><rect x="22.0513%" y="549" width="0.7692%" height="15" fill="rgb(244,45,10)"/><text x="22.3013%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (13 samples, 0.33%)</title><rect x="22.4872%" y="533" width="0.3333%" height="15" fill="rgb(207,125,25)"/><text x="22.7372%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (73 samples, 1.87%)</title><rect x="21.0769%" y="629" width="1.8718%" height="15" fill="rgb(210,195,18)"/><text x="21.3269%" y="639.50">&lt;..</text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (73 samples, 1.87%)</title><rect x="21.0769%" y="613" width="1.8718%" height="15" fill="rgb(249,80,12)"/><text x="21.3269%" y="623.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.10%)</title><rect x="22.8462%" y="597" width="0.1026%" height="15" fill="rgb(221,65,9)"/><text x="23.0962%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.10%)</title><rect x="22.8462%" y="581" width="0.1026%" height="15" fill="rgb(235,49,36)"/><text x="23.0962%" y="591.50"></text></g><g><title>core::fmt::write (85 samples, 2.18%)</title><rect x="21.0256%" y="661" width="2.1795%" height="15" fill="rgb(225,32,20)"/><text x="21.2756%" y="671.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (85 samples, 2.18%)</title><rect x="21.0256%" y="645" width="2.1795%" height="15" fill="rgb(215,141,46)"/><text x="21.2756%" y="655.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.23%)</title><rect x="22.9744%" y="629" width="0.2308%" height="15" fill="rgb(250,160,47)"/><text x="23.2244%" y="639.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="23.1026%" y="613" width="0.1026%" height="15" fill="rgb(216,222,40)"/><text x="23.3526%" y="623.50"></text></g><g><title>decor_mem::views::View::get_row_indices_of_col (98 samples, 2.51%)</title><rect x="20.8974%" y="677" width="2.5128%" height="15" fill="rgb(234,217,39)"/><text x="21.1474%" y="687.50">de..</text></g><g><title>hashbrown::map::make_hash (8 samples, 0.21%)</title><rect x="23.2051%" y="661" width="0.2051%" height="15" fill="rgb(207,178,40)"/><text x="23.4551%" y="671.50"></text></g><g><title>decor_mem::select::get_rows_matching_constraint (377 samples, 9.67%)</title><rect x="14.1538%" y="693" width="9.6667%" height="15" fill="rgb(221,136,13)"/><text x="14.4038%" y="703.50">decor_mem::sel..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.33%)</title><rect x="23.4872%" y="677" width="0.3333%" height="15" fill="rgb(249,199,10)"/><text x="23.7372%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (6 samples, 0.15%)</title><rect x="23.6667%" y="661" width="0.1538%" height="15" fill="rgb(249,222,13)"/><text x="23.9167%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="23.7179%" y="645" width="0.1026%" height="15" fill="rgb(244,185,38)"/><text x="23.9679%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.18%)</title><rect x="23.8718%" y="613" width="0.1795%" height="15" fill="rgb(236,202,9)"/><text x="24.1218%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.10%)</title><rect x="23.9487%" y="597" width="0.1026%" height="15" fill="rgb(250,229,37)"/><text x="24.1987%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.10%)</title><rect x="23.9487%" y="581" width="0.1026%" height="15" fill="rgb(206,174,23)"/><text x="24.1987%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.10%)</title><rect x="23.9487%" y="565" width="0.1026%" height="15" fill="rgb(211,33,43)"/><text x="24.1987%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.21%)</title><rect x="23.8718%" y="645" width="0.2051%" height="15" fill="rgb(245,58,50)"/><text x="24.1218%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.21%)</title><rect x="23.8718%" y="629" width="0.2051%" height="15" fill="rgb(244,68,36)"/><text x="24.1218%" y="639.50"></text></g><g><title>core::fmt::write (11 samples, 0.28%)</title><rect x="23.8205%" y="677" width="0.2821%" height="15" fill="rgb(232,229,15)"/><text x="24.0705%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (10 samples, 0.26%)</title><rect x="23.8462%" y="661" width="0.2564%" height="15" fill="rgb(254,30,23)"/><text x="24.0962%" y="671.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (16 samples, 0.41%)</title><rect x="23.8205%" y="693" width="0.4103%" height="15" fill="rgb(235,160,14)"/><text x="24.0705%" y="703.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (5 samples, 0.13%)</title><rect x="24.1026%" y="677" width="0.1282%" height="15" fill="rgb(212,155,44)"/><text x="24.3526%" y="687.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.13%)</title><rect x="24.1026%" y="661" width="0.1282%" height="15" fill="rgb(226,2,50)"/><text x="24.3526%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.13%)</title><rect x="24.1026%" y="645" width="0.1282%" height="15" fill="rgb(234,177,6)"/><text x="24.3526%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.13%)</title><rect x="24.1026%" y="629" width="0.1282%" height="15" fill="rgb(217,24,9)"/><text x="24.3526%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.13%)</title><rect x="24.1026%" y="613" width="0.1282%" height="15" fill="rgb(220,13,46)"/><text x="24.3526%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.15%)</title><rect x="24.3333%" y="645" width="0.1538%" height="15" fill="rgb(239,221,27)"/><text x="24.5833%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.15%)</title><rect x="24.3333%" y="629" width="0.1538%" height="15" fill="rgb(222,198,25)"/><text x="24.5833%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (621 samples, 15.92%)</title><rect x="8.5897%" y="741" width="15.9231%" height="15" fill="rgb(211,99,13)"/><text x="8.8397%" y="751.50">decor_mem::query_transfo..</text></g><g><title>decor_mem::select::get_query_results (608 samples, 15.59%)</title><rect x="8.9231%" y="725" width="15.5897%" height="15" fill="rgb(232,111,31)"/><text x="9.1731%" y="735.50">decor_mem::select::get_q..</text></g><g><title>decor_mem::select::get_setexpr_results (608 samples, 15.59%)</title><rect x="8.9231%" y="709" width="15.5897%" height="15" fill="rgb(245,82,37)"/><text x="9.1731%" y="719.50">decor_mem::select::get_s..</text></g><g><title>decor_mem::select::tablefactor_to_view (11 samples, 0.28%)</title><rect x="24.2308%" y="693" width="0.2821%" height="15" fill="rgb(227,149,46)"/><text x="24.4808%" y="703.50"></text></g><g><title>core::fmt::write (9 samples, 0.23%)</title><rect x="24.2821%" y="677" width="0.2308%" height="15" fill="rgb(218,36,50)"/><text x="24.5321%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (8 samples, 0.21%)</title><rect x="24.3077%" y="661" width="0.2051%" height="15" fill="rgb(226,80,48)"/><text x="24.5577%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.15%)</title><rect x="24.5128%" y="677" width="0.1538%" height="15" fill="rgb(238,224,15)"/><text x="24.7628%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (34 samples, 0.87%)</title><rect x="24.7436%" y="645" width="0.8718%" height="15" fill="rgb(241,136,10)"/><text x="24.9936%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (30 samples, 0.77%)</title><rect x="24.8462%" y="629" width="0.7692%" height="15" fill="rgb(208,32,45)"/><text x="25.0962%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.77%)</title><rect x="24.8462%" y="613" width="0.7692%" height="15" fill="rgb(207,135,9)"/><text x="25.0962%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.77%)</title><rect x="24.8462%" y="597" width="0.7692%" height="15" fill="rgb(206,86,44)"/><text x="25.0962%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.77%)</title><rect x="24.8462%" y="581" width="0.7692%" height="15" fill="rgb(245,177,15)"/><text x="25.0962%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.74%)</title><rect x="24.8718%" y="565" width="0.7436%" height="15" fill="rgb(206,64,50)"/><text x="25.1218%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (29 samples, 0.74%)</title><rect x="24.8718%" y="549" width="0.7436%" height="15" fill="rgb(234,36,40)"/><text x="25.1218%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.74%)</title><rect x="24.8718%" y="533" width="0.7436%" height="15" fill="rgb(213,64,8)"/><text x="25.1218%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.74%)</title><rect x="24.8718%" y="517" width="0.7436%" height="15" fill="rgb(210,75,36)"/><text x="25.1218%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (29 samples, 0.74%)</title><rect x="24.8718%" y="501" width="0.7436%" height="15" fill="rgb(229,88,21)"/><text x="25.1218%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.74%)</title><rect x="24.8718%" y="485" width="0.7436%" height="15" fill="rgb(252,204,47)"/><text x="25.1218%" y="495.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.74%)</title><rect x="24.8718%" y="469" width="0.7436%" height="15" fill="rgb(208,77,27)"/><text x="25.1218%" y="479.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.74%)</title><rect x="24.8718%" y="453" width="0.7436%" height="15" fill="rgb(221,76,26)"/><text x="25.1218%" y="463.50"></text></g><g><title>_int_malloc (22 samples, 0.56%)</title><rect x="25.0513%" y="437" width="0.5641%" height="15" fill="rgb(225,139,18)"/><text x="25.3013%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (45 samples, 1.15%)</title><rect x="24.6667%" y="661" width="1.1538%" height="15" fill="rgb(230,137,11)"/><text x="24.9167%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.13%)</title><rect x="25.6923%" y="645" width="0.1282%" height="15" fill="rgb(212,28,1)"/><text x="25.9423%" y="655.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.13%)</title><rect x="25.9487%" y="437" width="0.1282%" height="15" fill="rgb(248,164,17)"/><text x="26.1987%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (12 samples, 0.31%)</title><rect x="25.8462%" y="629" width="0.3077%" height="15" fill="rgb(222,171,42)"/><text x="26.0962%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.23%)</title><rect x="25.9231%" y="613" width="0.2308%" height="15" fill="rgb(243,84,45)"/><text x="26.1731%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.23%)</title><rect x="25.9231%" y="597" width="0.2308%" height="15" fill="rgb(252,49,23)"/><text x="26.1731%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.21%)</title><rect x="25.9487%" y="581" width="0.2051%" height="15" fill="rgb(215,19,7)"/><text x="26.1987%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.21%)</title><rect x="25.9487%" y="565" width="0.2051%" height="15" fill="rgb(238,81,41)"/><text x="26.1987%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.21%)</title><rect x="25.9487%" y="549" width="0.2051%" height="15" fill="rgb(210,199,37)"/><text x="26.1987%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.21%)</title><rect x="25.9487%" y="533" width="0.2051%" height="15" fill="rgb(244,192,49)"/><text x="26.1987%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.21%)</title><rect x="25.9487%" y="517" width="0.2051%" height="15" fill="rgb(226,211,11)"/><text x="26.1987%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.21%)</title><rect x="25.9487%" y="501" width="0.2051%" height="15" fill="rgb(236,162,54)"/><text x="26.1987%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (8 samples, 0.21%)</title><rect x="25.9487%" y="485" width="0.2051%" height="15" fill="rgb(220,229,9)"/><text x="26.1987%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.21%)</title><rect x="25.9487%" y="469" width="0.2051%" height="15" fill="rgb(250,87,22)"/><text x="26.1987%" y="479.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.21%)</title><rect x="25.9487%" y="453" width="0.2051%" height="15" fill="rgb(239,43,17)"/><text x="26.1987%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.44%)</title><rect x="25.8205%" y="645" width="0.4359%" height="15" fill="rgb(231,177,25)"/><text x="26.0705%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.10%)</title><rect x="26.1538%" y="629" width="0.1026%" height="15" fill="rgb(219,179,1)"/><text x="26.4038%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.15%)</title><rect x="26.2821%" y="629" width="0.1538%" height="15" fill="rgb(238,219,53)"/><text x="26.5321%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (10 samples, 0.26%)</title><rect x="26.2564%" y="645" width="0.2564%" height="15" fill="rgb(232,167,36)"/><text x="26.5064%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (31 samples, 0.79%)</title><rect x="25.8205%" y="661" width="0.7949%" height="15" fill="rgb(244,19,51)"/><text x="26.0705%" y="671.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (83 samples, 2.13%)</title><rect x="24.5128%" y="741" width="2.1282%" height="15" fill="rgb(224,6,22)"/><text x="24.7628%" y="751.50">d..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (83 samples, 2.13%)</title><rect x="24.5128%" y="725" width="2.1282%" height="15" fill="rgb(224,145,5)"/><text x="24.7628%" y="735.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (83 samples, 2.13%)</title><rect x="24.5128%" y="709" width="2.1282%" height="15" fill="rgb(234,130,49)"/><text x="24.7628%" y="719.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (83 samples, 2.13%)</title><rect x="24.5128%" y="693" width="2.1282%" height="15" fill="rgb(254,6,2)"/><text x="24.7628%" y="703.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (77 samples, 1.97%)</title><rect x="24.6667%" y="677" width="1.9744%" height="15" fill="rgb(208,96,46)"/><text x="24.9167%" y="687.50">&lt;..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (708 samples, 18.15%)</title><rect x="8.5897%" y="757" width="18.1538%" height="15" fill="rgb(239,3,39)"/><text x="8.8397%" y="767.50">&lt;decor_mem::Shim as msql_srv..</text></g><g><title>decor_mem::stats::get_qtype (4 samples, 0.10%)</title><rect x="26.6410%" y="741" width="0.1026%" height="15" fill="rgb(233,210,1)"/><text x="26.8910%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.10%)</title><rect x="26.6410%" y="725" width="0.1026%" height="15" fill="rgb(244,137,37)"/><text x="26.8910%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.10%)</title><rect x="26.6410%" y="709" width="0.1026%" height="15" fill="rgb(240,136,2)"/><text x="26.8910%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.10%)</title><rect x="26.6410%" y="693" width="0.1026%" height="15" fill="rgb(239,18,37)"/><text x="26.8910%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="26.7949%" y="757" width="0.1282%" height="15" fill="rgb(218,185,22)"/><text x="27.0449%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.13%)</title><rect x="26.9487%" y="757" width="0.1282%" height="15" fill="rgb(225,218,4)"/><text x="27.1987%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (14 samples, 0.36%)</title><rect x="27.1026%" y="757" width="0.3590%" height="15" fill="rgb(230,182,32)"/><text x="27.3526%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (4 samples, 0.10%)</title><rect x="27.5897%" y="757" width="0.1026%" height="15" fill="rgb(242,56,43)"/><text x="27.8397%" y="767.50"></text></g><g><title>__GI___libc_free (4 samples, 0.10%)</title><rect x="27.6923%" y="757" width="0.1026%" height="15" fill="rgb(233,99,24)"/><text x="27.9423%" y="767.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.15%)</title><rect x="27.7949%" y="757" width="0.1538%" height="15" fill="rgb(234,209,42)"/><text x="28.0449%" y="767.50"></text></g><g><title>_int_free (5 samples, 0.13%)</title><rect x="28.1538%" y="581" width="0.1282%" height="15" fill="rgb(227,7,12)"/><text x="28.4038%" y="591.50"></text></g><g><title>__libc_start_main (17 samples, 0.44%)</title><rect x="28.0256%" y="757" width="0.4359%" height="15" fill="rgb(245,203,43)"/><text x="28.2756%" y="767.50"></text></g><g><title>main (17 samples, 0.44%)</title><rect x="28.0256%" y="741" width="0.4359%" height="15" fill="rgb(238,205,33)"/><text x="28.2756%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (17 samples, 0.44%)</title><rect x="28.0256%" y="725" width="0.4359%" height="15" fill="rgb(231,56,7)"/><text x="28.2756%" y="735.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.44%)</title><rect x="28.0256%" y="709" width="0.4359%" height="15" fill="rgb(244,186,29)"/><text x="28.2756%" y="719.50"></text></g><g><title>std::panicking::try (17 samples, 0.44%)</title><rect x="28.0256%" y="693" width="0.4359%" height="15" fill="rgb(234,111,31)"/><text x="28.2756%" y="703.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.44%)</title><rect x="28.0256%" y="677" width="0.4359%" height="15" fill="rgb(241,149,10)"/><text x="28.2756%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 0.44%)</title><rect x="28.0256%" y="661" width="0.4359%" height="15" fill="rgb(249,206,44)"/><text x="28.2756%" y="671.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (17 samples, 0.44%)</title><rect x="28.0256%" y="645" width="0.4359%" height="15" fill="rgb(251,153,30)"/><text x="28.2756%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.44%)</title><rect x="28.0256%" y="629" width="0.4359%" height="15" fill="rgb(239,152,38)"/><text x="28.2756%" y="639.50"></text></g><g><title>lobsters_microbenchmarks::main (17 samples, 0.44%)</title><rect x="28.0256%" y="613" width="0.4359%" height="15" fill="rgb(249,139,47)"/><text x="28.2756%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (14 samples, 0.36%)</title><rect x="28.1026%" y="597" width="0.3590%" height="15" fill="rgb(244,64,35)"/><text x="28.3526%" y="607.50"></text></g><g><title>alloc::str::join_generic_copy (5 samples, 0.13%)</title><rect x="28.3333%" y="581" width="0.1282%" height="15" fill="rgb(216,46,15)"/><text x="28.5833%" y="591.50"></text></g><g><title>_int_free (19 samples, 0.49%)</title><rect x="28.4872%" y="757" width="0.4872%" height="15" fill="rgb(250,74,19)"/><text x="28.7372%" y="767.50"></text></g><g><title>alloc::string::String::push (8 samples, 0.21%)</title><rect x="29.3333%" y="757" width="0.2051%" height="15" fill="rgb(249,42,33)"/><text x="29.5833%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad (11 samples, 0.28%)</title><rect x="29.5641%" y="757" width="0.2821%" height="15" fill="rgb(242,149,17)"/><text x="29.8141%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.33%)</title><rect x="29.8718%" y="757" width="0.3333%" height="15" fill="rgb(244,29,21)"/><text x="30.1218%" y="767.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (10 samples, 0.26%)</title><rect x="30.2308%" y="709" width="0.2564%" height="15" fill="rgb(220,130,37)"/><text x="30.4808%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.26%)</title><rect x="30.2308%" y="693" width="0.2564%" height="15" fill="rgb(211,67,2)"/><text x="30.4808%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.26%)</title><rect x="30.2308%" y="677" width="0.2564%" height="15" fill="rgb(235,68,52)"/><text x="30.4808%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.26%)</title><rect x="30.2308%" y="661" width="0.2564%" height="15" fill="rgb(246,142,3)"/><text x="30.4808%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.21%)</title><rect x="30.2821%" y="645" width="0.2051%" height="15" fill="rgb(241,25,7)"/><text x="30.5321%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.18%)</title><rect x="30.3077%" y="629" width="0.1795%" height="15" fill="rgb(242,119,39)"/><text x="30.5577%" y="639.50"></text></g><g><title>_int_free (5 samples, 0.13%)</title><rect x="30.7949%" y="677" width="0.1282%" height="15" fill="rgb(241,98,45)"/><text x="31.0449%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.10%)</title><rect x="31.0000%" y="677" width="0.1026%" height="15" fill="rgb(254,28,30)"/><text x="31.2500%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (40 samples, 1.03%)</title><rect x="31.5641%" y="661" width="1.0256%" height="15" fill="rgb(241,142,54)"/><text x="31.8141%" y="671.50"></text></g><g><title>__GI___libc_realloc (40 samples, 1.03%)</title><rect x="31.5641%" y="645" width="1.0256%" height="15" fill="rgb(222,85,15)"/><text x="31.8141%" y="655.50"></text></g><g><title>_int_realloc (38 samples, 0.97%)</title><rect x="31.6154%" y="629" width="0.9744%" height="15" fill="rgb(210,85,47)"/><text x="31.8654%" y="639.50"></text></g><g><title>_int_malloc (36 samples, 0.92%)</title><rect x="31.6667%" y="613" width="0.9231%" height="15" fill="rgb(224,206,25)"/><text x="31.9167%" y="623.50"></text></g><g><title>malloc_consolidate (23 samples, 0.59%)</title><rect x="32.0000%" y="597" width="0.5897%" height="15" fill="rgb(243,201,19)"/><text x="32.2500%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (5 samples, 0.13%)</title><rect x="32.4615%" y="581" width="0.1282%" height="15" fill="rgb(236,59,4)"/><text x="32.7115%" y="591.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (9 samples, 0.23%)</title><rect x="33.3077%" y="645" width="0.2308%" height="15" fill="rgb(254,179,45)"/><text x="33.5577%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (14 samples, 0.36%)</title><rect x="34.0769%" y="629" width="0.3590%" height="15" fill="rgb(226,14,10)"/><text x="34.3269%" y="639.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (71 samples, 1.82%)</title><rect x="33.5385%" y="645" width="1.8205%" height="15" fill="rgb(244,27,41)"/><text x="33.7885%" y="655.50">s..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (36 samples, 0.92%)</title><rect x="34.4359%" y="629" width="0.9231%" height="15" fill="rgb(235,35,32)"/><text x="34.6859%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (33 samples, 0.85%)</title><rect x="34.5128%" y="613" width="0.8462%" height="15" fill="rgb(218,68,31)"/><text x="34.7628%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (27 samples, 0.69%)</title><rect x="34.6667%" y="597" width="0.6923%" height="15" fill="rgb(207,120,37)"/><text x="34.9167%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (27 samples, 0.69%)</title><rect x="34.6667%" y="581" width="0.6923%" height="15" fill="rgb(227,98,0)"/><text x="34.9167%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (10 samples, 0.26%)</title><rect x="35.1026%" y="565" width="0.2564%" height="15" fill="rgb(207,7,3)"/><text x="35.3526%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.21%)</title><rect x="35.4872%" y="629" width="0.2051%" height="15" fill="rgb(206,98,19)"/><text x="35.7372%" y="639.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.15%)</title><rect x="35.5385%" y="613" width="0.1538%" height="15" fill="rgb(217,5,26)"/><text x="35.7885%" y="623.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (14 samples, 0.36%)</title><rect x="35.3590%" y="645" width="0.3590%" height="15" fill="rgb(235,190,38)"/><text x="35.6090%" y="655.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (123 samples, 3.15%)</title><rect x="32.5897%" y="661" width="3.1538%" height="15" fill="rgb(247,86,24)"/><text x="32.8397%" y="671.50">sql..</text></g><g><title>_int_free (5 samples, 0.13%)</title><rect x="36.0256%" y="645" width="0.1282%" height="15" fill="rgb(205,101,16)"/><text x="36.2756%" y="655.50"></text></g><g><title>_int_malloc (13 samples, 0.33%)</title><rect x="36.2051%" y="613" width="0.3333%" height="15" fill="rgb(246,168,33)"/><text x="36.4551%" y="623.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.38%)</title><rect x="36.1795%" y="629" width="0.3846%" height="15" fill="rgb(231,114,1)"/><text x="36.4295%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.46%)</title><rect x="36.1538%" y="645" width="0.4615%" height="15" fill="rgb(207,184,53)"/><text x="36.4038%" y="655.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (252 samples, 6.46%)</title><rect x="30.2051%" y="757" width="6.4615%" height="15" fill="rgb(224,95,51)"/><text x="30.4551%" y="767.50">decor_me..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (252 samples, 6.46%)</title><rect x="30.2051%" y="741" width="6.4615%" height="15" fill="rgb(212,188,45)"/><text x="30.4551%" y="751.50">msql_srv..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (251 samples, 6.44%)</title><rect x="30.2308%" y="725" width="6.4359%" height="15" fill="rgb(223,154,38)"/><text x="30.4808%" y="735.50">&lt;decor_m..</text></g><g><title>decor_mem::stats::get_qtype (241 samples, 6.18%)</title><rect x="30.4872%" y="709" width="6.1795%" height="15" fill="rgb(251,22,52)"/><text x="30.7372%" y="719.50">decor_me..</text></g><g><title>sql_parser::parser::parse_statements (241 samples, 6.18%)</title><rect x="30.4872%" y="693" width="6.1795%" height="15" fill="rgb(229,209,22)"/><text x="30.7372%" y="703.50">sql_pars..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (217 samples, 5.56%)</title><rect x="31.1026%" y="677" width="5.5641%" height="15" fill="rgb(234,138,34)"/><text x="31.3526%" y="687.50">sql_par..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (36 samples, 0.92%)</title><rect x="35.7436%" y="661" width="0.9231%" height="15" fill="rgb(212,95,11)"/><text x="35.9936%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.33%)</title><rect x="36.7436%" y="565" width="0.3333%" height="15" fill="rgb(240,179,47)"/><text x="36.9936%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 0.33%)</title><rect x="36.7436%" y="549" width="0.3333%" height="15" fill="rgb(240,163,11)"/><text x="36.9936%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.28%)</title><rect x="36.7949%" y="533" width="0.2821%" height="15" fill="rgb(236,37,12)"/><text x="37.0449%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.10%)</title><rect x="36.9744%" y="517" width="0.1026%" height="15" fill="rgb(232,164,16)"/><text x="37.2244%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.10%)</title><rect x="36.9744%" y="501" width="0.1026%" height="15" fill="rgb(244,205,15)"/><text x="37.2244%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.10%)</title><rect x="36.9744%" y="485" width="0.1026%" height="15" fill="rgb(223,117,47)"/><text x="37.2244%" y="495.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (15 samples, 0.38%)</title><rect x="36.7179%" y="661" width="0.3846%" height="15" fill="rgb(244,107,35)"/><text x="36.9679%" y="671.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (14 samples, 0.36%)</title><rect x="36.7436%" y="645" width="0.3590%" height="15" fill="rgb(205,140,8)"/><text x="36.9936%" y="655.50"></text></g><g><title>alloc::fmt::format (14 samples, 0.36%)</title><rect x="36.7436%" y="629" width="0.3590%" height="15" fill="rgb(228,84,46)"/><text x="36.9936%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.36%)</title><rect x="36.7436%" y="613" width="0.3590%" height="15" fill="rgb(254,188,9)"/><text x="36.9936%" y="623.50"></text></g><g><title>core::fmt::write (14 samples, 0.36%)</title><rect x="36.7436%" y="597" width="0.3590%" height="15" fill="rgb(206,112,54)"/><text x="36.9936%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (14 samples, 0.36%)</title><rect x="36.7436%" y="581" width="0.3590%" height="15" fill="rgb(216,84,49)"/><text x="36.9936%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.28%)</title><rect x="37.1026%" y="581" width="0.2821%" height="15" fill="rgb(214,194,35)"/><text x="37.3526%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.15%)</title><rect x="37.2308%" y="565" width="0.1538%" height="15" fill="rgb(249,28,3)"/><text x="37.4808%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.13%)</title><rect x="37.2564%" y="549" width="0.1282%" height="15" fill="rgb(222,56,52)"/><text x="37.5064%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.13%)</title><rect x="37.2564%" y="533" width="0.1282%" height="15" fill="rgb(245,217,50)"/><text x="37.5064%" y="543.50"></text></g><g><title>decor_mem::select::get_rows_matching_constraint (27 samples, 0.69%)</title><rect x="36.7179%" y="677" width="0.6923%" height="15" fill="rgb(213,201,24)"/><text x="36.9679%" y="687.50"></text></g><g><title>decor_mem::views::View::get_row_indices_of_col (12 samples, 0.31%)</title><rect x="37.1026%" y="661" width="0.3077%" height="15" fill="rgb(248,116,28)"/><text x="37.3526%" y="671.50"></text></g><g><title>core::fmt::write (12 samples, 0.31%)</title><rect x="37.1026%" y="645" width="0.3077%" height="15" fill="rgb(219,72,43)"/><text x="37.3526%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (12 samples, 0.31%)</title><rect x="37.1026%" y="629" width="0.3077%" height="15" fill="rgb(209,138,14)"/><text x="37.3526%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.31%)</title><rect x="37.1026%" y="613" width="0.3077%" height="15" fill="rgb(222,18,33)"/><text x="37.3526%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 0.31%)</title><rect x="37.1026%" y="597" width="0.3077%" height="15" fill="rgb(213,199,7)"/><text x="37.3526%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (34 samples, 0.87%)</title><rect x="36.7179%" y="757" width="0.8718%" height="15" fill="rgb(250,110,10)"/><text x="36.9679%" y="767.50"></text></g><g><title>decor_mem::select::get_query_results (34 samples, 0.87%)</title><rect x="36.7179%" y="741" width="0.8718%" height="15" fill="rgb(248,123,6)"/><text x="36.9679%" y="751.50"></text></g><g><title>decor_mem::select::get_setexpr_results (34 samples, 0.87%)</title><rect x="36.7179%" y="725" width="0.8718%" height="15" fill="rgb(206,91,31)"/><text x="36.9679%" y="735.50"></text></g><g><title>decor_mem::select::get_rows_matching_constraint (34 samples, 0.87%)</title><rect x="36.7179%" y="709" width="0.8718%" height="15" fill="rgb(211,154,13)"/><text x="36.9679%" y="719.50"></text></g><g><title>decor_mem::select::get_rows_matching_constraint (34 samples, 0.87%)</title><rect x="36.7179%" y="693" width="0.8718%" height="15" fill="rgb(225,148,7)"/><text x="36.9679%" y="703.50"></text></g><g><title>decor_mem::select::get_value_for_rows (7 samples, 0.18%)</title><rect x="37.4103%" y="677" width="0.1795%" height="15" fill="rgb(220,160,43)"/><text x="37.6603%" y="687.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (5 samples, 0.13%)</title><rect x="37.4615%" y="661" width="0.1282%" height="15" fill="rgb(213,52,39)"/><text x="37.7115%" y="671.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (4 samples, 0.10%)</title><rect x="37.4872%" y="645" width="0.1026%" height="15" fill="rgb(243,137,7)"/><text x="37.7372%" y="655.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.10%)</title><rect x="37.4872%" y="629" width="0.1026%" height="15" fill="rgb(230,79,13)"/><text x="37.7372%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.10%)</title><rect x="37.4872%" y="613" width="0.1026%" height="15" fill="rgb(247,105,23)"/><text x="37.7372%" y="623.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="37.4872%" y="597" width="0.1026%" height="15" fill="rgb(223,179,41)"/><text x="37.7372%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.10%)</title><rect x="37.4872%" y="581" width="0.1026%" height="15" fill="rgb(218,9,34)"/><text x="37.7372%" y="591.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.10%)</title><rect x="37.6667%" y="757" width="0.1026%" height="15" fill="rgb(222,106,8)"/><text x="37.9167%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.10%)</title><rect x="37.6667%" y="741" width="0.1026%" height="15" fill="rgb(211,220,0)"/><text x="37.9167%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.10%)</title><rect x="37.6667%" y="725" width="0.1026%" height="15" fill="rgb(229,52,16)"/><text x="37.9167%" y="735.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.10%)</title><rect x="37.8974%" y="709" width="0.1026%" height="15" fill="rgb(212,155,18)"/><text x="38.1474%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.10%)</title><rect x="37.8974%" y="693" width="0.1026%" height="15" fill="rgb(242,21,14)"/><text x="38.1474%" y="703.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="37.8974%" y="677" width="0.1026%" height="15" fill="rgb(222,19,48)"/><text x="38.1474%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (4 samples, 0.10%)</title><rect x="37.8974%" y="661" width="0.1026%" height="15" fill="rgb(232,45,27)"/><text x="38.1474%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (4 samples, 0.10%)</title><rect x="37.8974%" y="645" width="0.1026%" height="15" fill="rgb(249,103,42)"/><text x="38.1474%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.38%)</title><rect x="37.8974%" y="725" width="0.3846%" height="15" fill="rgb(246,81,33)"/><text x="38.1474%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.28%)</title><rect x="38.0000%" y="709" width="0.2821%" height="15" fill="rgb(252,33,42)"/><text x="38.2500%" y="719.50"></text></g><g><title>core::fmt::write (11 samples, 0.28%)</title><rect x="38.0000%" y="693" width="0.2821%" height="15" fill="rgb(209,212,41)"/><text x="38.2500%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (11 samples, 0.28%)</title><rect x="38.0000%" y="677" width="0.2821%" height="15" fill="rgb(207,154,6)"/><text x="38.2500%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (11 samples, 0.28%)</title><rect x="38.0000%" y="661" width="0.2821%" height="15" fill="rgb(223,64,47)"/><text x="38.2500%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.28%)</title><rect x="38.0000%" y="645" width="0.2821%" height="15" fill="rgb(211,161,38)"/><text x="38.2500%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.28%)</title><rect x="38.0000%" y="629" width="0.2821%" height="15" fill="rgb(219,138,40)"/><text x="38.2500%" y="639.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.21%)</title><rect x="38.0769%" y="613" width="0.2051%" height="15" fill="rgb(241,228,46)"/><text x="38.3269%" y="623.50"></text></g><g><title>_int_malloc (6 samples, 0.15%)</title><rect x="38.1282%" y="597" width="0.1538%" height="15" fill="rgb(223,209,38)"/><text x="38.3782%" y="607.50"></text></g><g><title>dst_release (4 samples, 0.10%)</title><rect x="38.8462%" y="421" width="0.1026%" height="15" fill="rgb(236,164,45)"/><text x="39.0962%" y="431.50"></text></g><g><title>__kfree_skb (5 samples, 0.13%)</title><rect x="38.8462%" y="453" width="0.1282%" height="15" fill="rgb(231,15,5)"/><text x="39.0962%" y="463.50"></text></g><g><title>skb_release_head_state (5 samples, 0.13%)</title><rect x="38.8462%" y="437" width="0.1282%" height="15" fill="rgb(252,35,15)"/><text x="39.0962%" y="447.50"></text></g><g><title>__perf_event_task_sched_out (5 samples, 0.13%)</title><rect x="39.4615%" y="373" width="0.1282%" height="15" fill="rgb(248,181,18)"/><text x="39.7115%" y="383.50"></text></g><g><title>ctx_sched_out (4 samples, 0.10%)</title><rect x="39.4872%" y="357" width="0.1026%" height="15" fill="rgb(233,39,42)"/><text x="39.7372%" y="367.50"></text></g><g><title>dequeue_task_fair (9 samples, 0.23%)</title><rect x="39.5897%" y="373" width="0.2308%" height="15" fill="rgb(238,110,33)"/><text x="39.8397%" y="383.50"></text></g><g><title>dequeue_entity (8 samples, 0.21%)</title><rect x="39.6154%" y="357" width="0.2051%" height="15" fill="rgb(233,195,10)"/><text x="39.8654%" y="367.50"></text></g><g><title>update_load_avg (4 samples, 0.10%)</title><rect x="39.7179%" y="341" width="0.1026%" height="15" fill="rgb(254,105,3)"/><text x="39.9679%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (4 samples, 0.10%)</title><rect x="39.8462%" y="341" width="0.1026%" height="15" fill="rgb(221,225,9)"/><text x="40.0962%" y="351.50"></text></g><g><title>native_write_msr (4 samples, 0.10%)</title><rect x="39.8462%" y="325" width="0.1026%" height="15" fill="rgb(224,227,45)"/><text x="40.0962%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.15%)</title><rect x="39.8205%" y="357" width="0.1538%" height="15" fill="rgb(229,198,43)"/><text x="40.0705%" y="367.50"></text></g><g><title>finish_task_switch (7 samples, 0.18%)</title><rect x="39.8205%" y="373" width="0.1795%" height="15" fill="rgb(206,209,35)"/><text x="40.0705%" y="383.50"></text></g><g><title>psi_task_change (8 samples, 0.21%)</title><rect x="40.1026%" y="373" width="0.2051%" height="15" fill="rgb(245,195,53)"/><text x="40.3526%" y="383.50"></text></g><g><title>psi_group_change (8 samples, 0.21%)</title><rect x="40.1026%" y="357" width="0.2051%" height="15" fill="rgb(240,92,26)"/><text x="40.3526%" y="367.50"></text></g><g><title>record_times (5 samples, 0.13%)</title><rect x="40.1795%" y="341" width="0.1282%" height="15" fill="rgb(207,40,23)"/><text x="40.4295%" y="351.50"></text></g><g><title>sk_wait_data (56 samples, 1.44%)</title><rect x="39.0513%" y="453" width="1.4359%" height="15" fill="rgb(223,111,35)"/><text x="39.3013%" y="463.50"></text></g><g><title>wait_woken (50 samples, 1.28%)</title><rect x="39.2051%" y="437" width="1.2821%" height="15" fill="rgb(229,147,28)"/><text x="39.4551%" y="447.50"></text></g><g><title>schedule_timeout (47 samples, 1.21%)</title><rect x="39.2821%" y="421" width="1.2051%" height="15" fill="rgb(211,29,28)"/><text x="39.5321%" y="431.50"></text></g><g><title>schedule (47 samples, 1.21%)</title><rect x="39.2821%" y="405" width="1.2051%" height="15" fill="rgb(228,72,33)"/><text x="39.5321%" y="415.50"></text></g><g><title>__schedule (47 samples, 1.21%)</title><rect x="39.2821%" y="389" width="1.2051%" height="15" fill="rgb(205,214,31)"/><text x="39.5321%" y="399.50"></text></g><g><title>skb_copy_datagram_iter (7 samples, 0.18%)</title><rect x="40.4872%" y="453" width="0.1795%" height="15" fill="rgb(224,111,15)"/><text x="40.7372%" y="463.50"></text></g><g><title>__skb_datagram_iter (7 samples, 0.18%)</title><rect x="40.4872%" y="437" width="0.1795%" height="15" fill="rgb(253,21,26)"/><text x="40.7372%" y="447.50"></text></g><g><title>_copy_to_iter (6 samples, 0.15%)</title><rect x="40.5128%" y="421" width="0.1538%" height="15" fill="rgb(245,139,43)"/><text x="40.7628%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (6 samples, 0.15%)</title><rect x="40.5128%" y="405" width="0.1538%" height="15" fill="rgb(252,170,7)"/><text x="40.7628%" y="415.50"></text></g><g><title>page_fault (5 samples, 0.13%)</title><rect x="40.5385%" y="389" width="0.1282%" height="15" fill="rgb(231,118,14)"/><text x="40.7885%" y="399.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.13%)</title><rect x="40.5385%" y="373" width="0.1282%" height="15" fill="rgb(238,83,0)"/><text x="40.7885%" y="383.50"></text></g><g><title>handle_mm_fault (5 samples, 0.13%)</title><rect x="40.5385%" y="357" width="0.1282%" height="15" fill="rgb(221,39,39)"/><text x="40.7885%" y="367.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.13%)</title><rect x="40.5385%" y="341" width="0.1282%" height="15" fill="rgb(222,119,46)"/><text x="40.7885%" y="351.50"></text></g><g><title>__x64_sys_recvfrom (83 samples, 2.13%)</title><rect x="38.6410%" y="517" width="2.1282%" height="15" fill="rgb(222,165,49)"/><text x="38.8910%" y="527.50">_..</text></g><g><title>__sys_recvfrom (83 samples, 2.13%)</title><rect x="38.6410%" y="501" width="2.1282%" height="15" fill="rgb(219,113,52)"/><text x="38.8910%" y="511.50">_..</text></g><g><title>inet_recvmsg (83 samples, 2.13%)</title><rect x="38.6410%" y="485" width="2.1282%" height="15" fill="rgb(214,7,15)"/><text x="38.8910%" y="495.50">i..</text></g><g><title>tcp_recvmsg (80 samples, 2.05%)</title><rect x="38.7179%" y="469" width="2.0513%" height="15" fill="rgb(235,32,4)"/><text x="38.9679%" y="479.50">t..</text></g><g><title>do_syscall_64 (87 samples, 2.23%)</title><rect x="38.6410%" y="533" width="2.2308%" height="15" fill="rgb(238,90,54)"/><text x="38.8910%" y="543.50">d..</text></g><g><title>entry_SYSCALL_64 (97 samples, 2.49%)</title><rect x="38.6154%" y="549" width="2.4872%" height="15" fill="rgb(213,208,19)"/><text x="38.8654%" y="559.50">en..</text></g><g><title>prepare_exit_to_usermode (9 samples, 0.23%)</title><rect x="40.8718%" y="533" width="0.2308%" height="15" fill="rgb(233,156,4)"/><text x="41.1218%" y="543.50"></text></g><g><title>__libc_recv (102 samples, 2.62%)</title><rect x="38.5128%" y="565" width="2.6154%" height="15" fill="rgb(207,194,5)"/><text x="38.7628%" y="575.50">__..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (103 samples, 2.64%)</title><rect x="38.5128%" y="645" width="2.6410%" height="15" fill="rgb(206,111,30)"/><text x="38.7628%" y="655.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (103 samples, 2.64%)</title><rect x="38.5128%" y="629" width="2.6410%" height="15" fill="rgb(243,70,54)"/><text x="38.7628%" y="639.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (103 samples, 2.64%)</title><rect x="38.5128%" y="613" width="2.6410%" height="15" fill="rgb(242,28,8)"/><text x="38.7628%" y="623.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (103 samples, 2.64%)</title><rect x="38.5128%" y="597" width="2.6410%" height="15" fill="rgb(219,106,18)"/><text x="38.7628%" y="607.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (103 samples, 2.64%)</title><rect x="38.5128%" y="581" width="2.6410%" height="15" fill="rgb(244,222,10)"/><text x="38.7628%" y="591.50">st..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 2.87%)</title><rect x="38.4872%" y="661" width="2.8718%" height="15" fill="rgb(236,179,52)"/><text x="38.7372%" y="671.50">&lt;m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (8 samples, 0.21%)</title><rect x="41.1538%" y="645" width="0.2051%" height="15" fill="rgb(213,23,39)"/><text x="41.4038%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (7 samples, 0.18%)</title><rect x="41.1795%" y="629" width="0.1795%" height="15" fill="rgb(238,48,10)"/><text x="41.4295%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.13%)</title><rect x="41.2308%" y="613" width="0.1282%" height="15" fill="rgb(251,196,23)"/><text x="41.4808%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.13%)</title><rect x="41.2308%" y="597" width="0.1282%" height="15" fill="rgb(250,152,24)"/><text x="41.4808%" y="607.50"></text></g><g><title>mysql::conn::Conn::read_packet (122 samples, 3.13%)</title><rect x="38.3590%" y="677" width="3.1282%" height="15" fill="rgb(209,150,17)"/><text x="38.6090%" y="687.50">mys..</text></g><g><title>mysql::conn::Conn::handle_result_set (132 samples, 3.38%)</title><rect x="38.3077%" y="693" width="3.3846%" height="15" fill="rgb(234,202,34)"/><text x="38.5577%" y="703.50">mys..</text></g><g><title>mysql_common::packets::column_from_payload (8 samples, 0.21%)</title><rect x="41.4872%" y="677" width="0.2051%" height="15" fill="rgb(253,148,53)"/><text x="41.7372%" y="687.50"></text></g><g><title>release_sock (6 samples, 0.15%)</title><rect x="42.1026%" y="517" width="0.1538%" height="15" fill="rgb(218,129,16)"/><text x="42.3526%" y="527.50"></text></g><g><title>dev_hard_start_xmit (8 samples, 0.21%)</title><rect x="42.9231%" y="389" width="0.2051%" height="15" fill="rgb(216,85,19)"/><text x="43.1731%" y="399.50"></text></g><g><title>loopback_xmit (7 samples, 0.18%)</title><rect x="42.9487%" y="373" width="0.1795%" height="15" fill="rgb(235,228,7)"/><text x="43.1987%" y="383.50"></text></g><g><title>validate_xmit_skb (4 samples, 0.10%)</title><rect x="43.1282%" y="389" width="0.1026%" height="15" fill="rgb(245,175,0)"/><text x="43.3782%" y="399.50"></text></g><g><title>__dev_queue_xmit (20 samples, 0.51%)</title><rect x="42.7436%" y="405" width="0.5128%" height="15" fill="rgb(208,168,36)"/><text x="42.9936%" y="415.50"></text></g><g><title>__netif_receive_skb_core (5 samples, 0.13%)</title><rect x="43.6154%" y="293" width="0.1282%" height="15" fill="rgb(246,171,24)"/><text x="43.8654%" y="303.50"></text></g><g><title>sk_reset_timer (4 samples, 0.10%)</title><rect x="44.1282%" y="181" width="0.1026%" height="15" fill="rgb(215,142,24)"/><text x="44.3782%" y="191.50"></text></g><g><title>enqueue_task (10 samples, 0.26%)</title><rect x="44.3077%" y="117" width="0.2564%" height="15" fill="rgb(250,187,7)"/><text x="44.5577%" y="127.50"></text></g><g><title>psi_task_change (9 samples, 0.23%)</title><rect x="44.3333%" y="101" width="0.2308%" height="15" fill="rgb(228,66,33)"/><text x="44.5833%" y="111.50"></text></g><g><title>psi_group_change (8 samples, 0.21%)</title><rect x="44.3590%" y="85" width="0.2051%" height="15" fill="rgb(234,215,21)"/><text x="44.6090%" y="95.50"></text></g><g><title>enqueue_task_fair (10 samples, 0.26%)</title><rect x="44.5641%" y="117" width="0.2564%" height="15" fill="rgb(222,191,20)"/><text x="44.8141%" y="127.50"></text></g><g><title>enqueue_entity (10 samples, 0.26%)</title><rect x="44.5641%" y="101" width="0.2564%" height="15" fill="rgb(245,79,54)"/><text x="44.8141%" y="111.50"></text></g><g><title>update_load_avg (4 samples, 0.10%)</title><rect x="44.7179%" y="85" width="0.1026%" height="15" fill="rgb(240,10,37)"/><text x="44.9679%" y="95.50"></text></g><g><title>__wake_up_common (26 samples, 0.67%)</title><rect x="44.2308%" y="149" width="0.6667%" height="15" fill="rgb(214,192,32)"/><text x="44.4808%" y="159.50"></text></g><g><title>try_to_wake_up (25 samples, 0.64%)</title><rect x="44.2564%" y="133" width="0.6410%" height="15" fill="rgb(209,36,54)"/><text x="44.5064%" y="143.50"></text></g><g><title>sock_def_readable (28 samples, 0.72%)</title><rect x="44.2308%" y="181" width="0.7179%" height="15" fill="rgb(220,10,11)"/><text x="44.4808%" y="191.50"></text></g><g><title>__wake_up_common_lock (28 samples, 0.72%)</title><rect x="44.2308%" y="165" width="0.7179%" height="15" fill="rgb(221,106,17)"/><text x="44.4808%" y="175.50"></text></g><g><title>__kfree_skb (7 samples, 0.18%)</title><rect x="45.1026%" y="165" width="0.1795%" height="15" fill="rgb(251,142,44)"/><text x="45.3526%" y="175.50"></text></g><g><title>skb_release_data (5 samples, 0.13%)</title><rect x="45.1538%" y="149" width="0.1282%" height="15" fill="rgb(238,13,15)"/><text x="45.4038%" y="159.50"></text></g><g><title>tcp_ack (23 samples, 0.59%)</title><rect x="44.9487%" y="181" width="0.5897%" height="15" fill="rgb(208,107,27)"/><text x="45.1987%" y="191.50"></text></g><g><title>sock_def_readable (7 samples, 0.18%)</title><rect x="45.5385%" y="165" width="0.1795%" height="15" fill="rgb(205,136,37)"/><text x="45.7885%" y="175.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.18%)</title><rect x="45.5385%" y="149" width="0.1795%" height="15" fill="rgb(250,205,27)"/><text x="45.7885%" y="159.50"></text></g><g><title>__wake_up_common (7 samples, 0.18%)</title><rect x="45.5385%" y="133" width="0.1795%" height="15" fill="rgb(210,80,43)"/><text x="45.7885%" y="143.50"></text></g><g><title>try_to_wake_up (7 samples, 0.18%)</title><rect x="45.5385%" y="117" width="0.1795%" height="15" fill="rgb(247,160,36)"/><text x="45.7885%" y="127.50"></text></g><g><title>tcp_data_queue (9 samples, 0.23%)</title><rect x="45.5385%" y="181" width="0.2308%" height="15" fill="rgb(234,13,49)"/><text x="45.7885%" y="191.50"></text></g><g><title>ip_local_deliver (81 samples, 2.08%)</title><rect x="43.7692%" y="277" width="2.0769%" height="15" fill="rgb(234,122,0)"/><text x="44.0192%" y="287.50">i..</text></g><g><title>ip_local_deliver_finish (79 samples, 2.03%)</title><rect x="43.8205%" y="261" width="2.0256%" height="15" fill="rgb(207,146,38)"/><text x="44.0705%" y="271.50">i..</text></g><g><title>ip_protocol_deliver_rcu (77 samples, 1.97%)</title><rect x="43.8718%" y="245" width="1.9744%" height="15" fill="rgb(207,177,25)"/><text x="44.1218%" y="255.50">i..</text></g><g><title>tcp_v4_rcv (74 samples, 1.90%)</title><rect x="43.9487%" y="229" width="1.8974%" height="15" fill="rgb(211,178,42)"/><text x="44.1987%" y="239.50">t..</text></g><g><title>tcp_v4_do_rcv (70 samples, 1.79%)</title><rect x="44.0513%" y="213" width="1.7949%" height="15" fill="rgb(230,69,54)"/><text x="44.3013%" y="223.50">t..</text></g><g><title>tcp_rcv_established (70 samples, 1.79%)</title><rect x="44.0513%" y="197" width="1.7949%" height="15" fill="rgb(214,135,41)"/><text x="44.3013%" y="207.50">t..</text></g><g><title>__netif_receive_skb_one_core (91 samples, 2.33%)</title><rect x="43.5897%" y="309" width="2.3333%" height="15" fill="rgb(237,67,25)"/><text x="43.8397%" y="319.50">_..</text></g><g><title>ip_rcv (85 samples, 2.18%)</title><rect x="43.7436%" y="293" width="2.1795%" height="15" fill="rgb(222,189,50)"/><text x="43.9936%" y="303.50">i..</text></g><g><title>ip_finish_output2 (128 samples, 3.28%)</title><rect x="42.7179%" y="421" width="3.2821%" height="15" fill="rgb(245,148,34)"/><text x="42.9679%" y="431.50">ip_..</text></g><g><title>__local_bh_enable_ip (107 samples, 2.74%)</title><rect x="43.2564%" y="405" width="2.7436%" height="15" fill="rgb(222,29,6)"/><text x="43.5064%" y="415.50">__..</text></g><g><title>do_softirq (106 samples, 2.72%)</title><rect x="43.2821%" y="389" width="2.7179%" height="15" fill="rgb(221,189,43)"/><text x="43.5321%" y="399.50">do..</text></g><g><title>do_softirq_own_stack (104 samples, 2.67%)</title><rect x="43.3333%" y="373" width="2.6667%" height="15" fill="rgb(207,36,27)"/><text x="43.5833%" y="383.50">do..</text></g><g><title>__do_softirq (102 samples, 2.62%)</title><rect x="43.3846%" y="357" width="2.6154%" height="15" fill="rgb(217,90,24)"/><text x="43.6346%" y="367.50">__..</text></g><g><title>net_rx_action (99 samples, 2.54%)</title><rect x="43.4615%" y="341" width="2.5385%" height="15" fill="rgb(224,66,35)"/><text x="43.7115%" y="351.50">ne..</text></g><g><title>process_backlog (95 samples, 2.44%)</title><rect x="43.5641%" y="325" width="2.4359%" height="15" fill="rgb(221,13,50)"/><text x="43.8141%" y="335.50">pr..</text></g><g><title>__ip_queue_xmit (136 samples, 3.49%)</title><rect x="42.5385%" y="453" width="3.4872%" height="15" fill="rgb(236,68,49)"/><text x="42.7885%" y="463.50">__i..</text></g><g><title>ip_output (131 samples, 3.36%)</title><rect x="42.6667%" y="437" width="3.3590%" height="15" fill="rgb(229,146,28)"/><text x="42.9167%" y="447.50">ip_..</text></g><g><title>__tcp_transmit_skb (142 samples, 3.64%)</title><rect x="42.4615%" y="469" width="3.6410%" height="15" fill="rgb(225,31,38)"/><text x="42.7115%" y="479.50">__tc..</text></g><g><title>sk_reset_timer (4 samples, 0.10%)</title><rect x="46.1795%" y="453" width="0.1026%" height="15" fill="rgb(250,208,3)"/><text x="46.4295%" y="463.50"></text></g><g><title>__mod_timer (4 samples, 0.10%)</title><rect x="46.1795%" y="437" width="0.1026%" height="15" fill="rgb(246,54,23)"/><text x="46.4295%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (155 samples, 3.97%)</title><rect x="42.3846%" y="501" width="3.9744%" height="15" fill="rgb(243,76,11)"/><text x="42.6346%" y="511.50">__tc..</text></g><g><title>tcp_write_xmit (155 samples, 3.97%)</title><rect x="42.3846%" y="485" width="3.9744%" height="15" fill="rgb(245,21,50)"/><text x="42.6346%" y="495.50">tcp_..</text></g><g><title>tcp_event_new_data_sent (8 samples, 0.21%)</title><rect x="46.1538%" y="469" width="0.2051%" height="15" fill="rgb(228,9,43)"/><text x="46.4038%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (4 samples, 0.10%)</title><rect x="46.4615%" y="469" width="0.1026%" height="15" fill="rgb(208,100,47)"/><text x="46.7115%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (13 samples, 0.33%)</title><rect x="46.3846%" y="501" width="0.3333%" height="15" fill="rgb(232,26,8)"/><text x="46.6346%" y="511.50"></text></g><g><title>__alloc_skb (12 samples, 0.31%)</title><rect x="46.4103%" y="485" width="0.3077%" height="15" fill="rgb(216,166,38)"/><text x="46.6603%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.10%)</title><rect x="46.6154%" y="469" width="0.1026%" height="15" fill="rgb(251,202,51)"/><text x="46.8654%" y="479.50"></text></g><g><title>sock_sendmsg (193 samples, 4.95%)</title><rect x="42.0513%" y="549" width="4.9487%" height="15" fill="rgb(254,216,34)"/><text x="42.3013%" y="559.50">sock_s..</text></g><g><title>tcp_sendmsg (193 samples, 4.95%)</title><rect x="42.0513%" y="533" width="4.9487%" height="15" fill="rgb(251,32,27)"/><text x="42.3013%" y="543.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (185 samples, 4.74%)</title><rect x="42.2564%" y="517" width="4.7436%" height="15" fill="rgb(208,127,28)"/><text x="42.5064%" y="527.50">tcp_se..</text></g><g><title>__x64_sys_sendto (197 samples, 5.05%)</title><rect x="42.0000%" y="581" width="5.0513%" height="15" fill="rgb(224,137,22)"/><text x="42.2500%" y="591.50">__x64_..</text></g><g><title>__sys_sendto (197 samples, 5.05%)</title><rect x="42.0000%" y="565" width="5.0513%" height="15" fill="rgb(254,70,32)"/><text x="42.2500%" y="575.50">__sys_..</text></g><g><title>do_syscall_64 (202 samples, 5.18%)</title><rect x="41.9231%" y="597" width="5.1795%" height="15" fill="rgb(229,75,37)"/><text x="42.1731%" y="607.50">do_sys..</text></g><g><title>entry_SYSCALL_64 (210 samples, 5.38%)</title><rect x="41.8462%" y="613" width="5.3846%" height="15" fill="rgb(252,64,23)"/><text x="42.0962%" y="623.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.13%)</title><rect x="47.1026%" y="597" width="0.1282%" height="15" fill="rgb(232,162,48)"/><text x="47.3526%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (350 samples, 8.97%)</title><rect x="38.2821%" y="725" width="8.9744%" height="15" fill="rgb(246,160,12)"/><text x="38.5321%" y="735.50">&lt;mysql::conn:..</text></g><g><title>mysql::conn::Conn::_query (350 samples, 8.97%)</title><rect x="38.2821%" y="709" width="8.9744%" height="15" fill="rgb(247,166,0)"/><text x="38.5321%" y="719.50">mysql::conn::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (217 samples, 5.56%)</title><rect x="41.6923%" y="693" width="5.5641%" height="15" fill="rgb(249,219,21)"/><text x="41.9423%" y="703.50">mysql_c..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (214 samples, 5.49%)</title><rect x="41.7692%" y="677" width="5.4872%" height="15" fill="rgb(205,209,3)"/><text x="42.0192%" y="687.50">std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (214 samples, 5.49%)</title><rect x="41.7692%" y="661" width="5.4872%" height="15" fill="rgb(243,44,1)"/><text x="42.0192%" y="671.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::write (214 samples, 5.49%)</title><rect x="41.7692%" y="645" width="5.4872%" height="15" fill="rgb(206,159,16)"/><text x="42.0192%" y="655.50">std::sy..</text></g><g><title>__libc_send (214 samples, 5.49%)</title><rect x="41.7692%" y="629" width="5.4872%" height="15" fill="rgb(244,77,30)"/><text x="42.0192%" y="639.50">__libc_..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.15%)</title><rect x="47.3077%" y="645" width="0.1538%" height="15" fill="rgb(218,69,12)"/><text x="47.5577%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.13%)</title><rect x="47.3333%" y="629" width="0.1282%" height="15" fill="rgb(212,87,7)"/><text x="47.5833%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.10%)</title><rect x="47.3590%" y="613" width="0.1026%" height="15" fill="rgb(245,114,25)"/><text x="47.6090%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (9 samples, 0.23%)</title><rect x="47.2564%" y="661" width="0.2308%" height="15" fill="rgb(210,61,42)"/><text x="47.5064%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (11 samples, 0.28%)</title><rect x="47.2564%" y="693" width="0.2821%" height="15" fill="rgb(211,52,33)"/><text x="47.5064%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (11 samples, 0.28%)</title><rect x="47.2564%" y="677" width="0.2821%" height="15" fill="rgb(234,58,33)"/><text x="47.5064%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.41%)</title><rect x="47.2564%" y="725" width="0.4103%" height="15" fill="rgb(220,115,36)"/><text x="47.5064%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.41%)</title><rect x="47.2564%" y="709" width="0.4103%" height="15" fill="rgb(243,153,54)"/><text x="47.5064%" y="719.50"></text></g><g><title>&lt;mysql_common::value::convert::ParseIr&lt;i64&gt; as mysql_common::value::convert::ConvIr&lt;i64&gt;&gt;::commit (5 samples, 0.13%)</title><rect x="48.0000%" y="677" width="0.1282%" height="15" fill="rgb(251,47,18)"/><text x="48.2500%" y="687.50"></text></g><g><title>&lt;mysql_common::value::convert::ParseIr&lt;u64&gt; as mysql_common::value::convert::ConvIr&lt;u64&gt;&gt;::new (8 samples, 0.21%)</title><rect x="48.1282%" y="677" width="0.2051%" height="15" fill="rgb(242,102,42)"/><text x="48.3782%" y="687.50"></text></g><g><title>&lt;(T1,T2) as mysql_common::row::convert::FromRow&gt;::from_row_opt (24 samples, 0.62%)</title><rect x="47.8205%" y="693" width="0.6154%" height="15" fill="rgb(234,31,38)"/><text x="48.0705%" y="703.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="48.3333%" y="677" width="0.1026%" height="15" fill="rgb(221,117,51)"/><text x="48.5833%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.10%)</title><rect x="48.7179%" y="629" width="0.1026%" height="15" fill="rgb(212,20,18)"/><text x="48.9679%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.23%)</title><rect x="48.8205%" y="629" width="0.2308%" height="15" fill="rgb(245,133,36)"/><text x="49.0705%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (8 samples, 0.21%)</title><rect x="48.8462%" y="613" width="0.2051%" height="15" fill="rgb(212,6,19)"/><text x="49.0962%" y="623.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (8 samples, 0.21%)</title><rect x="48.8462%" y="597" width="0.2051%" height="15" fill="rgb(218,1,36)"/><text x="49.0962%" y="607.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (6 samples, 0.15%)</title><rect x="48.8974%" y="581" width="0.1538%" height="15" fill="rgb(246,84,54)"/><text x="49.1474%" y="591.50"></text></g><g><title>mysql::conn::Conn::read_packet (16 samples, 0.41%)</title><rect x="48.7179%" y="645" width="0.4103%" height="15" fill="rgb(242,110,6)"/><text x="48.9679%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="49.2821%" y="629" width="0.1026%" height="15" fill="rgb(214,47,5)"/><text x="49.5321%" y="639.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (39 samples, 1.00%)</title><rect x="48.5641%" y="677" width="1.0000%" height="15" fill="rgb(218,159,25)"/><text x="48.8141%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (39 samples, 1.00%)</title><rect x="48.5641%" y="661" width="1.0000%" height="15" fill="rgb(215,211,28)"/><text x="48.8141%" y="671.50"></text></g><g><title>mysql_common::value::read_text_values (16 samples, 0.41%)</title><rect x="49.1538%" y="645" width="0.4103%" height="15" fill="rgb(238,59,32)"/><text x="49.4038%" y="655.50"></text></g><g><title>mysql_common::value::read_text_value (6 samples, 0.15%)</title><rect x="49.4103%" y="629" width="0.1538%" height="15" fill="rgb(226,82,3)"/><text x="49.6603%" y="639.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 1.21%)</title><rect x="48.4359%" y="693" width="1.2051%" height="15" fill="rgb(240,164,32)"/><text x="48.6859%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (90 samples, 2.31%)</title><rect x="47.7436%" y="709" width="2.3077%" height="15" fill="rgb(232,46,7)"/><text x="47.9936%" y="719.50">&lt;..</text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::insert (16 samples, 0.41%)</title><rect x="49.6410%" y="693" width="0.4103%" height="15" fill="rgb(229,129,53)"/><text x="49.8910%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (8 samples, 0.21%)</title><rect x="49.8462%" y="677" width="0.2051%" height="15" fill="rgb(234,188,29)"/><text x="50.0962%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (6 samples, 0.15%)</title><rect x="49.8974%" y="661" width="0.1538%" height="15" fill="rgb(246,141,4)"/><text x="50.1474%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.10%)</title><rect x="49.9487%" y="645" width="0.1026%" height="15" fill="rgb(229,23,39)"/><text x="50.1987%" y="655.50"></text></g><g><title>sk_wait_data (11 samples, 0.28%)</title><rect x="50.1795%" y="453" width="0.2821%" height="15" fill="rgb(206,12,3)"/><text x="50.4295%" y="463.50"></text></g><g><title>wait_woken (8 samples, 0.21%)</title><rect x="50.2564%" y="437" width="0.2051%" height="15" fill="rgb(252,226,20)"/><text x="50.5064%" y="447.50"></text></g><g><title>schedule_timeout (8 samples, 0.21%)</title><rect x="50.2564%" y="421" width="0.2051%" height="15" fill="rgb(216,123,35)"/><text x="50.5064%" y="431.50"></text></g><g><title>schedule (7 samples, 0.18%)</title><rect x="50.2821%" y="405" width="0.1795%" height="15" fill="rgb(212,68,40)"/><text x="50.5321%" y="415.50"></text></g><g><title>__schedule (7 samples, 0.18%)</title><rect x="50.2821%" y="389" width="0.1795%" height="15" fill="rgb(254,125,32)"/><text x="50.5321%" y="399.50"></text></g><g><title>do_syscall_64 (19 samples, 0.49%)</title><rect x="50.1538%" y="533" width="0.4872%" height="15" fill="rgb(253,97,22)"/><text x="50.4038%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 0.49%)</title><rect x="50.1538%" y="517" width="0.4872%" height="15" fill="rgb(241,101,14)"/><text x="50.4038%" y="527.50"></text></g><g><title>__sys_recvfrom (19 samples, 0.49%)</title><rect x="50.1538%" y="501" width="0.4872%" height="15" fill="rgb(238,103,29)"/><text x="50.4038%" y="511.50"></text></g><g><title>inet_recvmsg (19 samples, 0.49%)</title><rect x="50.1538%" y="485" width="0.4872%" height="15" fill="rgb(233,195,47)"/><text x="50.4038%" y="495.50"></text></g><g><title>tcp_recvmsg (18 samples, 0.46%)</title><rect x="50.1795%" y="469" width="0.4615%" height="15" fill="rgb(246,218,30)"/><text x="50.4295%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (7 samples, 0.18%)</title><rect x="50.4615%" y="453" width="0.1795%" height="15" fill="rgb(219,145,47)"/><text x="50.7115%" y="463.50"></text></g><g><title>__skb_datagram_iter (7 samples, 0.18%)</title><rect x="50.4615%" y="437" width="0.1795%" height="15" fill="rgb(243,12,26)"/><text x="50.7115%" y="447.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 0.56%)</title><rect x="50.1282%" y="645" width="0.5641%" height="15" fill="rgb(214,87,16)"/><text x="50.3782%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 0.56%)</title><rect x="50.1282%" y="629" width="0.5641%" height="15" fill="rgb(208,99,42)"/><text x="50.3782%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 0.56%)</title><rect x="50.1282%" y="613" width="0.5641%" height="15" fill="rgb(253,99,2)"/><text x="50.3782%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 0.56%)</title><rect x="50.1282%" y="597" width="0.5641%" height="15" fill="rgb(220,168,23)"/><text x="50.3782%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 0.56%)</title><rect x="50.1282%" y="581" width="0.5641%" height="15" fill="rgb(242,38,24)"/><text x="50.3782%" y="591.50"></text></g><g><title>__libc_recv (22 samples, 0.56%)</title><rect x="50.1282%" y="565" width="0.5641%" height="15" fill="rgb(225,182,9)"/><text x="50.3782%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 0.54%)</title><rect x="50.1538%" y="549" width="0.5385%" height="15" fill="rgb(243,178,37)"/><text x="50.4038%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.67%)</title><rect x="50.1282%" y="661" width="0.6667%" height="15" fill="rgb(232,139,19)"/><text x="50.3782%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.10%)</title><rect x="50.6923%" y="645" width="0.1026%" height="15" fill="rgb(225,201,24)"/><text x="50.9423%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.10%)</title><rect x="50.6923%" y="629" width="0.1026%" height="15" fill="rgb(221,47,46)"/><text x="50.9423%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.10%)</title><rect x="50.6923%" y="613" width="0.1026%" height="15" fill="rgb(249,23,13)"/><text x="50.9423%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (28 samples, 0.72%)</title><rect x="50.1026%" y="677" width="0.7179%" height="15" fill="rgb(219,9,5)"/><text x="50.3526%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (31 samples, 0.79%)</title><rect x="50.0769%" y="693" width="0.7949%" height="15" fill="rgb(254,171,16)"/><text x="50.3269%" y="703.50"></text></g><g><title>sock_def_readable (6 samples, 0.15%)</title><rect x="51.3333%" y="181" width="0.1538%" height="15" fill="rgb(230,171,20)"/><text x="51.5833%" y="191.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.13%)</title><rect x="51.3590%" y="165" width="0.1282%" height="15" fill="rgb(210,71,41)"/><text x="51.6090%" y="175.50"></text></g><g><title>__wake_up_common (5 samples, 0.13%)</title><rect x="51.3590%" y="149" width="0.1282%" height="15" fill="rgb(206,173,20)"/><text x="51.6090%" y="159.50"></text></g><g><title>try_to_wake_up (5 samples, 0.13%)</title><rect x="51.3590%" y="133" width="0.1282%" height="15" fill="rgb(233,88,34)"/><text x="51.6090%" y="143.50"></text></g><g><title>tcp_ack (6 samples, 0.15%)</title><rect x="51.4872%" y="181" width="0.1538%" height="15" fill="rgb(223,209,46)"/><text x="51.7372%" y="191.50"></text></g><g><title>tcp_data_queue (5 samples, 0.13%)</title><rect x="51.6410%" y="181" width="0.1282%" height="15" fill="rgb(250,43,18)"/><text x="51.8910%" y="191.50"></text></g><g><title>sock_def_readable (5 samples, 0.13%)</title><rect x="51.6410%" y="165" width="0.1282%" height="15" fill="rgb(208,13,10)"/><text x="51.8910%" y="175.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.13%)</title><rect x="51.6410%" y="149" width="0.1282%" height="15" fill="rgb(212,200,36)"/><text x="51.8910%" y="159.50"></text></g><g><title>__wake_up_common (5 samples, 0.13%)</title><rect x="51.6410%" y="133" width="0.1282%" height="15" fill="rgb(225,90,30)"/><text x="51.8910%" y="143.50"></text></g><g><title>try_to_wake_up (5 samples, 0.13%)</title><rect x="51.6410%" y="117" width="0.1282%" height="15" fill="rgb(236,182,39)"/><text x="51.8910%" y="127.50"></text></g><g><title>__tcp_transmit_skb (29 samples, 0.74%)</title><rect x="51.0769%" y="469" width="0.7436%" height="15" fill="rgb(212,144,35)"/><text x="51.3269%" y="479.50"></text></g><g><title>__ip_queue_xmit (28 samples, 0.72%)</title><rect x="51.1026%" y="453" width="0.7179%" height="15" fill="rgb(228,63,44)"/><text x="51.3526%" y="463.50"></text></g><g><title>ip_output (27 samples, 0.69%)</title><rect x="51.1282%" y="437" width="0.6923%" height="15" fill="rgb(228,109,6)"/><text x="51.3782%" y="447.50"></text></g><g><title>ip_finish_output2 (27 samples, 0.69%)</title><rect x="51.1282%" y="421" width="0.6923%" height="15" fill="rgb(238,117,24)"/><text x="51.3782%" y="431.50"></text></g><g><title>__local_bh_enable_ip (24 samples, 0.62%)</title><rect x="51.2051%" y="405" width="0.6154%" height="15" fill="rgb(242,26,26)"/><text x="51.4551%" y="415.50"></text></g><g><title>do_softirq (24 samples, 0.62%)</title><rect x="51.2051%" y="389" width="0.6154%" height="15" fill="rgb(221,92,48)"/><text x="51.4551%" y="399.50"></text></g><g><title>do_softirq_own_stack (24 samples, 0.62%)</title><rect x="51.2051%" y="373" width="0.6154%" height="15" fill="rgb(209,209,32)"/><text x="51.4551%" y="383.50"></text></g><g><title>__do_softirq (24 samples, 0.62%)</title><rect x="51.2051%" y="357" width="0.6154%" height="15" fill="rgb(221,70,22)"/><text x="51.4551%" y="367.50"></text></g><g><title>net_rx_action (22 samples, 0.56%)</title><rect x="51.2564%" y="341" width="0.5641%" height="15" fill="rgb(248,145,5)"/><text x="51.5064%" y="351.50"></text></g><g><title>process_backlog (22 samples, 0.56%)</title><rect x="51.2564%" y="325" width="0.5641%" height="15" fill="rgb(226,116,26)"/><text x="51.5064%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (22 samples, 0.56%)</title><rect x="51.2564%" y="309" width="0.5641%" height="15" fill="rgb(244,5,17)"/><text x="51.5064%" y="319.50"></text></g><g><title>ip_rcv (21 samples, 0.54%)</title><rect x="51.2821%" y="293" width="0.5385%" height="15" fill="rgb(252,159,33)"/><text x="51.5321%" y="303.50"></text></g><g><title>ip_local_deliver (21 samples, 0.54%)</title><rect x="51.2821%" y="277" width="0.5385%" height="15" fill="rgb(206,71,0)"/><text x="51.5321%" y="287.50"></text></g><g><title>ip_local_deliver_finish (21 samples, 0.54%)</title><rect x="51.2821%" y="261" width="0.5385%" height="15" fill="rgb(233,118,54)"/><text x="51.5321%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (21 samples, 0.54%)</title><rect x="51.2821%" y="245" width="0.5385%" height="15" fill="rgb(234,83,48)"/><text x="51.5321%" y="255.50"></text></g><g><title>tcp_v4_rcv (21 samples, 0.54%)</title><rect x="51.2821%" y="229" width="0.5385%" height="15" fill="rgb(228,3,54)"/><text x="51.5321%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 0.54%)</title><rect x="51.2821%" y="213" width="0.5385%" height="15" fill="rgb(226,155,13)"/><text x="51.5321%" y="223.50"></text></g><g><title>tcp_rcv_established (21 samples, 0.54%)</title><rect x="51.2821%" y="197" width="0.5385%" height="15" fill="rgb(241,28,37)"/><text x="51.5321%" y="207.50"></text></g><g><title>__tcp_push_pending_frames (32 samples, 0.82%)</title><rect x="51.0513%" y="501" width="0.8205%" height="15" fill="rgb(233,93,10)"/><text x="51.3013%" y="511.50"></text></g><g><title>tcp_write_xmit (32 samples, 0.82%)</title><rect x="51.0513%" y="485" width="0.8205%" height="15" fill="rgb(225,113,19)"/><text x="51.3013%" y="495.50"></text></g><g><title>do_syscall_64 (38 samples, 0.97%)</title><rect x="50.9744%" y="597" width="0.9744%" height="15" fill="rgb(241,2,18)"/><text x="51.2244%" y="607.50"></text></g><g><title>__x64_sys_sendto (38 samples, 0.97%)</title><rect x="50.9744%" y="581" width="0.9744%" height="15" fill="rgb(228,207,21)"/><text x="51.2244%" y="591.50"></text></g><g><title>__sys_sendto (38 samples, 0.97%)</title><rect x="50.9744%" y="565" width="0.9744%" height="15" fill="rgb(213,211,35)"/><text x="51.2244%" y="575.50"></text></g><g><title>sock_sendmsg (37 samples, 0.95%)</title><rect x="51.0000%" y="549" width="0.9487%" height="15" fill="rgb(209,83,10)"/><text x="51.2500%" y="559.50"></text></g><g><title>tcp_sendmsg (37 samples, 0.95%)</title><rect x="51.0000%" y="533" width="0.9487%" height="15" fill="rgb(209,164,1)"/><text x="51.2500%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (35 samples, 0.90%)</title><rect x="51.0513%" y="517" width="0.8974%" height="15" fill="rgb(213,184,43)"/><text x="51.3013%" y="527.50"></text></g><g><title>lobsters_microbenchmarks::main (550 samples, 14.10%)</title><rect x="37.8718%" y="757" width="14.1026%" height="15" fill="rgb(231,61,34)"/><text x="38.1218%" y="767.50">lobsters_microbenchma..</text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (549 samples, 14.08%)</title><rect x="37.8974%" y="741" width="14.0769%" height="15" fill="rgb(235,75,3)"/><text x="38.1474%" y="751.50">lobsters_microbenchma..</text></g><g><title>mysql::conn::queryable::Queryable::query_map (165 samples, 4.23%)</title><rect x="47.7436%" y="725" width="4.2308%" height="15" fill="rgb(220,106,47)"/><text x="47.9936%" y="735.50">mysql..</text></g><g><title>mysql::conn::Conn::_query (75 samples, 1.92%)</title><rect x="50.0513%" y="709" width="1.9231%" height="15" fill="rgb(210,196,33)"/><text x="50.3013%" y="719.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (43 samples, 1.10%)</title><rect x="50.8718%" y="693" width="1.1026%" height="15" fill="rgb(229,154,42)"/><text x="51.1218%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (41 samples, 1.05%)</title><rect x="50.9231%" y="677" width="1.0513%" height="15" fill="rgb(228,114,26)"/><text x="51.1731%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (40 samples, 1.03%)</title><rect x="50.9487%" y="661" width="1.0256%" height="15" fill="rgb(208,144,1)"/><text x="51.1987%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (40 samples, 1.03%)</title><rect x="50.9487%" y="645" width="1.0256%" height="15" fill="rgb(239,112,37)"/><text x="51.1987%" y="655.50"></text></g><g><title>__libc_send (40 samples, 1.03%)</title><rect x="50.9487%" y="629" width="1.0256%" height="15" fill="rgb(210,96,50)"/><text x="51.1987%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (40 samples, 1.03%)</title><rect x="50.9487%" y="613" width="1.0256%" height="15" fill="rgb(222,178,2)"/><text x="51.1987%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.10%)</title><rect x="52.2564%" y="709" width="0.1026%" height="15" fill="rgb(226,74,18)"/><text x="52.5064%" y="719.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.18%)</title><rect x="52.5128%" y="389" width="0.1795%" height="15" fill="rgb(225,67,54)"/><text x="52.7628%" y="399.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.15%)</title><rect x="52.5385%" y="373" width="0.1538%" height="15" fill="rgb(251,92,32)"/><text x="52.7885%" y="383.50"></text></g><g><title>do_softirq (6 samples, 0.15%)</title><rect x="52.5385%" y="357" width="0.1538%" height="15" fill="rgb(228,149,22)"/><text x="52.7885%" y="367.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.15%)</title><rect x="52.5385%" y="341" width="0.1538%" height="15" fill="rgb(243,54,13)"/><text x="52.7885%" y="351.50"></text></g><g><title>__do_softirq (6 samples, 0.15%)</title><rect x="52.5385%" y="325" width="0.1538%" height="15" fill="rgb(243,180,28)"/><text x="52.7885%" y="335.50"></text></g><g><title>net_rx_action (6 samples, 0.15%)</title><rect x="52.5385%" y="309" width="0.1538%" height="15" fill="rgb(208,167,24)"/><text x="52.7885%" y="319.50"></text></g><g><title>process_backlog (6 samples, 0.15%)</title><rect x="52.5385%" y="293" width="0.1538%" height="15" fill="rgb(245,73,45)"/><text x="52.7885%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (6 samples, 0.15%)</title><rect x="52.5385%" y="277" width="0.1538%" height="15" fill="rgb(237,203,48)"/><text x="52.7885%" y="287.50"></text></g><g><title>ip_rcv (6 samples, 0.15%)</title><rect x="52.5385%" y="261" width="0.1538%" height="15" fill="rgb(211,197,16)"/><text x="52.7885%" y="271.50"></text></g><g><title>ip_local_deliver (6 samples, 0.15%)</title><rect x="52.5385%" y="245" width="0.1538%" height="15" fill="rgb(243,99,51)"/><text x="52.7885%" y="255.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.15%)</title><rect x="52.5385%" y="229" width="0.1538%" height="15" fill="rgb(215,123,29)"/><text x="52.7885%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.15%)</title><rect x="52.5385%" y="213" width="0.1538%" height="15" fill="rgb(239,186,37)"/><text x="52.7885%" y="223.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.15%)</title><rect x="52.5385%" y="197" width="0.1538%" height="15" fill="rgb(252,136,39)"/><text x="52.7885%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.10%)</title><rect x="52.5897%" y="181" width="0.1026%" height="15" fill="rgb(223,213,32)"/><text x="52.8397%" y="191.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.10%)</title><rect x="52.5897%" y="165" width="0.1026%" height="15" fill="rgb(233,115,5)"/><text x="52.8397%" y="175.50"></text></g><g><title>do_syscall_64 (8 samples, 0.21%)</title><rect x="52.5128%" y="565" width="0.2051%" height="15" fill="rgb(207,226,44)"/><text x="52.7628%" y="575.50"></text></g><g><title>__x64_sys_sendto (8 samples, 0.21%)</title><rect x="52.5128%" y="549" width="0.2051%" height="15" fill="rgb(208,126,0)"/><text x="52.7628%" y="559.50"></text></g><g><title>__sys_sendto (8 samples, 0.21%)</title><rect x="52.5128%" y="533" width="0.2051%" height="15" fill="rgb(244,66,21)"/><text x="52.7628%" y="543.50"></text></g><g><title>sock_sendmsg (8 samples, 0.21%)</title><rect x="52.5128%" y="517" width="0.2051%" height="15" fill="rgb(222,97,12)"/><text x="52.7628%" y="527.50"></text></g><g><title>tcp_sendmsg (8 samples, 0.21%)</title><rect x="52.5128%" y="501" width="0.2051%" height="15" fill="rgb(219,213,19)"/><text x="52.7628%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (8 samples, 0.21%)</title><rect x="52.5128%" y="485" width="0.2051%" height="15" fill="rgb(252,169,30)"/><text x="52.7628%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (8 samples, 0.21%)</title><rect x="52.5128%" y="469" width="0.2051%" height="15" fill="rgb(206,32,51)"/><text x="52.7628%" y="479.50"></text></g><g><title>tcp_write_xmit (8 samples, 0.21%)</title><rect x="52.5128%" y="453" width="0.2051%" height="15" fill="rgb(250,172,42)"/><text x="52.7628%" y="463.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 0.21%)</title><rect x="52.5128%" y="437" width="0.2051%" height="15" fill="rgb(209,34,43)"/><text x="52.7628%" y="447.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.21%)</title><rect x="52.5128%" y="421" width="0.2051%" height="15" fill="rgb(223,11,35)"/><text x="52.7628%" y="431.50"></text></g><g><title>ip_output (8 samples, 0.21%)</title><rect x="52.5128%" y="405" width="0.2051%" height="15" fill="rgb(251,219,26)"/><text x="52.7628%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.23%)</title><rect x="52.5128%" y="581" width="0.2308%" height="15" fill="rgb(231,119,3)"/><text x="52.7628%" y="591.50"></text></g><g><title>decor_mem::ghosts_cache::GhostsCache::insert_uid2gids_for_values (11 samples, 0.28%)</title><rect x="52.4872%" y="709" width="0.2821%" height="15" fill="rgb(216,97,11)"/><text x="52.7372%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (10 samples, 0.26%)</title><rect x="52.5128%" y="693" width="0.2564%" height="15" fill="rgb(223,59,9)"/><text x="52.7628%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (10 samples, 0.26%)</title><rect x="52.5128%" y="677" width="0.2564%" height="15" fill="rgb(233,93,31)"/><text x="52.7628%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (10 samples, 0.26%)</title><rect x="52.5128%" y="661" width="0.2564%" height="15" fill="rgb(239,81,33)"/><text x="52.7628%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (10 samples, 0.26%)</title><rect x="52.5128%" y="645" width="0.2564%" height="15" fill="rgb(213,120,34)"/><text x="52.7628%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (10 samples, 0.26%)</title><rect x="52.5128%" y="629" width="0.2564%" height="15" fill="rgb(243,49,53)"/><text x="52.7628%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (10 samples, 0.26%)</title><rect x="52.5128%" y="613" width="0.2564%" height="15" fill="rgb(247,216,33)"/><text x="52.7628%" y="623.50"></text></g><g><title>__libc_send (10 samples, 0.26%)</title><rect x="52.5128%" y="597" width="0.2564%" height="15" fill="rgb(226,26,14)"/><text x="52.7628%" y="607.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.13%)</title><rect x="53.2564%" y="501" width="0.1282%" height="15" fill="rgb(215,49,53)"/><text x="53.5064%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.28%)</title><rect x="53.1282%" y="677" width="0.2821%" height="15" fill="rgb(245,162,40)"/><text x="53.3782%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.23%)</title><rect x="53.1795%" y="661" width="0.2308%" height="15" fill="rgb(229,68,17)"/><text x="53.4295%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.18%)</title><rect x="53.2308%" y="645" width="0.1795%" height="15" fill="rgb(213,182,10)"/><text x="53.4808%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.18%)</title><rect x="53.2308%" y="629" width="0.1795%" height="15" fill="rgb(245,125,30)"/><text x="53.4808%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.15%)</title><rect x="53.2564%" y="613" width="0.1538%" height="15" fill="rgb(232,202,2)"/><text x="53.5064%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.15%)</title><rect x="53.2564%" y="597" width="0.1538%" height="15" fill="rgb(237,140,51)"/><text x="53.5064%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.15%)</title><rect x="53.2564%" y="581" width="0.1538%" height="15" fill="rgb(236,157,25)"/><text x="53.5064%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.15%)</title><rect x="53.2564%" y="565" width="0.1538%" height="15" fill="rgb(219,209,0)"/><text x="53.5064%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.15%)</title><rect x="53.2564%" y="549" width="0.1538%" height="15" fill="rgb(240,116,54)"/><text x="53.5064%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.15%)</title><rect x="53.2564%" y="533" width="0.1538%" height="15" fill="rgb(216,10,36)"/><text x="53.5064%" y="543.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.15%)</title><rect x="53.2564%" y="517" width="0.1538%" height="15" fill="rgb(222,72,44)"/><text x="53.5064%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.26%)</title><rect x="53.4872%" y="661" width="0.2564%" height="15" fill="rgb(232,159,9)"/><text x="53.7372%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.36%)</title><rect x="53.4103%" y="677" width="0.3590%" height="15" fill="rgb(210,39,32)"/><text x="53.6603%" y="687.50"></text></g><g><title>__GI___libc_free (5 samples, 0.13%)</title><rect x="54.1282%" y="661" width="0.1282%" height="15" fill="rgb(216,194,45)"/><text x="54.3782%" y="671.50"></text></g><g><title>_int_free (20 samples, 0.51%)</title><rect x="54.2821%" y="661" width="0.5128%" height="15" fill="rgb(218,18,35)"/><text x="54.5321%" y="671.50"></text></g><g><title>decor_mem::select::get_query_results (82 samples, 2.10%)</title><rect x="52.7692%" y="709" width="2.1026%" height="15" fill="rgb(207,83,51)"/><text x="53.0192%" y="719.50">d..</text></g><g><title>decor_mem::select::get_setexpr_results (79 samples, 2.03%)</title><rect x="52.8462%" y="693" width="2.0256%" height="15" fill="rgb(225,63,43)"/><text x="53.0962%" y="703.50">d..</text></g><g><title>core::ptr::drop_in_place (30 samples, 0.77%)</title><rect x="54.1026%" y="677" width="0.7692%" height="15" fill="rgb(207,57,36)"/><text x="54.3526%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.13%)</title><rect x="54.9744%" y="613" width="0.1282%" height="15" fill="rgb(216,99,33)"/><text x="55.2244%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.21%)</title><rect x="54.9487%" y="645" width="0.2051%" height="15" fill="rgb(225,42,16)"/><text x="55.1987%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.21%)</title><rect x="54.9487%" y="629" width="0.2051%" height="15" fill="rgb(220,201,45)"/><text x="55.1987%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.23%)</title><rect x="54.9487%" y="661" width="0.2308%" height="15" fill="rgb(225,33,4)"/><text x="55.1987%" y="671.50"></text></g><g><title>core::fmt::write (11 samples, 0.28%)</title><rect x="54.9487%" y="677" width="0.2821%" height="15" fill="rgb(224,33,50)"/><text x="55.1987%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (122 samples, 3.13%)</title><rect x="52.1538%" y="725" width="3.1282%" height="15" fill="rgb(246,198,51)"/><text x="52.4038%" y="735.50">dec..</text></g><g><title>decor_mem::views::Views::insert (16 samples, 0.41%)</title><rect x="54.8718%" y="709" width="0.4103%" height="15" fill="rgb(205,22,4)"/><text x="55.1218%" y="719.50"></text></g><g><title>decor_mem::views::View::insert_into_index (13 samples, 0.33%)</title><rect x="54.9487%" y="693" width="0.3333%" height="15" fill="rgb(206,3,8)"/><text x="55.1987%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (6 samples, 0.15%)</title><rect x="55.2821%" y="693" width="0.1538%" height="15" fill="rgb(251,23,15)"/><text x="55.5321%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="55.3077%" y="677" width="0.1282%" height="15" fill="rgb(252,88,28)"/><text x="55.5577%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (8 samples, 0.21%)</title><rect x="55.2821%" y="709" width="0.2051%" height="15" fill="rgb(212,127,14)"/><text x="55.5321%" y="719.50"></text></g><g><title>page_fault (4 samples, 0.10%)</title><rect x="55.6410%" y="645" width="0.1026%" height="15" fill="rgb(247,145,37)"/><text x="55.8910%" y="655.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.10%)</title><rect x="55.6410%" y="629" width="0.1026%" height="15" fill="rgb(209,117,53)"/><text x="55.8910%" y="639.50"></text></g><g><title>handle_mm_fault (4 samples, 0.10%)</title><rect x="55.6410%" y="613" width="0.1026%" height="15" fill="rgb(212,90,42)"/><text x="55.8910%" y="623.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.10%)</title><rect x="55.6410%" y="597" width="0.1026%" height="15" fill="rgb(218,164,37)"/><text x="55.8910%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.33%)</title><rect x="55.5385%" y="661" width="0.3333%" height="15" fill="rgb(246,65,34)"/><text x="55.7885%" y="671.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.13%)</title><rect x="55.7436%" y="645" width="0.1282%" height="15" fill="rgb(231,100,33)"/><text x="55.9936%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (19 samples, 0.49%)</title><rect x="55.4872%" y="709" width="0.4872%" height="15" fill="rgb(228,126,14)"/><text x="55.7372%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (18 samples, 0.46%)</title><rect x="55.5128%" y="693" width="0.4615%" height="15" fill="rgb(215,173,21)"/><text x="55.7628%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (17 samples, 0.44%)</title><rect x="55.5385%" y="677" width="0.4359%" height="15" fill="rgb(210,6,40)"/><text x="55.7885%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.10%)</title><rect x="55.8718%" y="661" width="0.1026%" height="15" fill="rgb(212,48,18)"/><text x="56.1218%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.13%)</title><rect x="56.2308%" y="693" width="0.1282%" height="15" fill="rgb(230,214,11)"/><text x="56.4808%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.31%)</title><rect x="56.6923%" y="677" width="0.3077%" height="15" fill="rgb(254,105,39)"/><text x="56.9423%" y="687.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.28%)</title><rect x="56.7179%" y="661" width="0.2821%" height="15" fill="rgb(245,158,5)"/><text x="56.9679%" y="671.50"></text></g><g><title>_int_realloc (11 samples, 0.28%)</title><rect x="56.7179%" y="645" width="0.2821%" height="15" fill="rgb(249,208,11)"/><text x="56.9679%" y="655.50"></text></g><g><title>_int_malloc (10 samples, 0.26%)</title><rect x="56.7436%" y="629" width="0.2564%" height="15" fill="rgb(210,39,28)"/><text x="56.9936%" y="639.50"></text></g><g><title>malloc_consolidate (5 samples, 0.13%)</title><rect x="56.8718%" y="613" width="0.1282%" height="15" fill="rgb(211,56,53)"/><text x="57.1218%" y="623.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (4 samples, 0.10%)</title><rect x="57.6410%" y="661" width="0.1026%" height="15" fill="rgb(226,201,30)"/><text x="57.8910%" y="671.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.10%)</title><rect x="58.0769%" y="645" width="0.1026%" height="15" fill="rgb(239,101,34)"/><text x="58.3269%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.10%)</title><rect x="58.1795%" y="645" width="0.1026%" height="15" fill="rgb(226,209,5)"/><text x="58.4295%" y="655.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (46 samples, 1.18%)</title><rect x="57.7436%" y="661" width="1.1795%" height="15" fill="rgb(250,105,47)"/><text x="57.9936%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (23 samples, 0.59%)</title><rect x="58.3333%" y="645" width="0.5897%" height="15" fill="rgb(230,72,3)"/><text x="58.5833%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (17 samples, 0.44%)</title><rect x="58.4872%" y="629" width="0.4359%" height="15" fill="rgb(232,218,39)"/><text x="58.7372%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (13 samples, 0.33%)</title><rect x="58.5897%" y="613" width="0.3333%" height="15" fill="rgb(248,166,6)"/><text x="58.8397%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (13 samples, 0.33%)</title><rect x="58.5897%" y="597" width="0.3333%" height="15" fill="rgb(247,89,20)"/><text x="58.8397%" y="607.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (80 samples, 2.05%)</title><rect x="57.0256%" y="677" width="2.0513%" height="15" fill="rgb(248,130,54)"/><text x="57.2756%" y="687.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (6 samples, 0.15%)</title><rect x="58.9231%" y="661" width="0.1538%" height="15" fill="rgb(234,196,4)"/><text x="59.1731%" y="671.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.56%)</title><rect x="59.4103%" y="645" width="0.5641%" height="15" fill="rgb(250,143,31)"/><text x="59.6603%" y="655.50"></text></g><g><title>_int_malloc (16 samples, 0.41%)</title><rect x="59.5641%" y="629" width="0.4103%" height="15" fill="rgb(211,110,34)"/><text x="59.8141%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.72%)</title><rect x="59.2821%" y="661" width="0.7179%" height="15" fill="rgb(215,124,48)"/><text x="59.5321%" y="671.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (185 samples, 4.74%)</title><rect x="55.2821%" y="725" width="4.7436%" height="15" fill="rgb(216,46,13)"/><text x="55.5321%" y="735.50">decor_..</text></g><g><title>sql_parser::parser::parse_statements (158 samples, 4.05%)</title><rect x="55.9744%" y="709" width="4.0513%" height="15" fill="rgb(205,184,25)"/><text x="56.2244%" y="719.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (143 samples, 3.67%)</title><rect x="56.3590%" y="693" width="3.6667%" height="15" fill="rgb(228,1,10)"/><text x="56.6090%" y="703.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (37 samples, 0.95%)</title><rect x="59.0769%" y="677" width="0.9487%" height="15" fill="rgb(213,116,27)"/><text x="59.3269%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (7 samples, 0.18%)</title><rect x="60.0256%" y="661" width="0.1795%" height="15" fill="rgb(241,95,50)"/><text x="60.2756%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.13%)</title><rect x="60.0769%" y="645" width="0.1282%" height="15" fill="rgb(238,48,32)"/><text x="60.3269%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (317 samples, 8.13%)</title><rect x="52.1026%" y="757" width="8.1282%" height="15" fill="rgb(235,113,49)"/><text x="52.3526%" y="767.50">msql_srv::M..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (315 samples, 8.08%)</title><rect x="52.1538%" y="741" width="8.0769%" height="15" fill="rgb(205,127,43)"/><text x="52.4038%" y="751.50">&lt;decor_mem:..</text></g><g><title>decor_mem::stats::get_qtype (8 samples, 0.21%)</title><rect x="60.0256%" y="725" width="0.2051%" height="15" fill="rgb(250,162,2)"/><text x="60.2756%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (8 samples, 0.21%)</title><rect x="60.0256%" y="709" width="0.2051%" height="15" fill="rgb(220,13,41)"/><text x="60.2756%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (8 samples, 0.21%)</title><rect x="60.0256%" y="693" width="0.2051%" height="15" fill="rgb(249,221,25)"/><text x="60.2756%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (8 samples, 0.21%)</title><rect x="60.0256%" y="677" width="0.2051%" height="15" fill="rgb(215,208,19)"/><text x="60.2756%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (6 samples, 0.15%)</title><rect x="60.3590%" y="757" width="0.1538%" height="15" fill="rgb(236,175,2)"/><text x="60.6090%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (8 samples, 0.21%)</title><rect x="60.6667%" y="709" width="0.2051%" height="15" fill="rgb(241,52,2)"/><text x="60.9167%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (8 samples, 0.21%)</title><rect x="60.6667%" y="693" width="0.2051%" height="15" fill="rgb(248,140,14)"/><text x="60.9167%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 0.21%)</title><rect x="60.6667%" y="677" width="0.2051%" height="15" fill="rgb(253,22,42)"/><text x="60.9167%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.13%)</title><rect x="60.8718%" y="693" width="0.1282%" height="15" fill="rgb(234,61,47)"/><text x="61.1218%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (5 samples, 0.13%)</title><rect x="60.8718%" y="677" width="0.1282%" height="15" fill="rgb(208,226,15)"/><text x="61.1218%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (14 samples, 0.36%)</title><rect x="60.6667%" y="725" width="0.3590%" height="15" fill="rgb(217,221,4)"/><text x="60.9167%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (6 samples, 0.15%)</title><rect x="60.8718%" y="709" width="0.1538%" height="15" fill="rgb(212,174,34)"/><text x="61.1218%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="61.6923%" y="677" width="0.1282%" height="15" fill="rgb(253,83,4)"/><text x="61.9423%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="61.6923%" y="661" width="0.1282%" height="15" fill="rgb(250,195,49)"/><text x="61.9423%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="61.7179%" y="645" width="0.1026%" height="15" fill="rgb(241,192,25)"/><text x="61.9679%" y="655.50"></text></g><g><title>__GI___libc_free (7 samples, 0.18%)</title><rect x="61.8205%" y="677" width="0.1795%" height="15" fill="rgb(208,124,10)"/><text x="62.0705%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.46%)</title><rect x="62.0000%" y="677" width="0.4615%" height="15" fill="rgb(222,33,0)"/><text x="62.2500%" y="687.50"></text></g><g><title>_int_free (11 samples, 0.28%)</title><rect x="62.5128%" y="677" width="0.2821%" height="15" fill="rgb(234,209,28)"/><text x="62.7628%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="63.2564%" y="661" width="0.1282%" height="15" fill="rgb(224,11,23)"/><text x="63.5064%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="63.2821%" y="645" width="0.1026%" height="15" fill="rgb(232,99,1)"/><text x="63.5321%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="63.2821%" y="629" width="0.1026%" height="15" fill="rgb(237,95,45)"/><text x="63.5321%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.10%)</title><rect x="63.2821%" y="613" width="0.1026%" height="15" fill="rgb(208,109,11)"/><text x="63.5321%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.10%)</title><rect x="63.2821%" y="597" width="0.1026%" height="15" fill="rgb(216,190,48)"/><text x="63.5321%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.21%)</title><rect x="63.9231%" y="581" width="0.2051%" height="15" fill="rgb(251,171,36)"/><text x="64.1731%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.21%)</title><rect x="63.9231%" y="565" width="0.2051%" height="15" fill="rgb(230,62,22)"/><text x="64.1731%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (8 samples, 0.21%)</title><rect x="63.9231%" y="549" width="0.2051%" height="15" fill="rgb(225,114,35)"/><text x="64.1731%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.21%)</title><rect x="63.9231%" y="533" width="0.2051%" height="15" fill="rgb(215,118,42)"/><text x="64.1731%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.13%)</title><rect x="64.0000%" y="517" width="0.1282%" height="15" fill="rgb(243,119,21)"/><text x="64.2500%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.26%)</title><rect x="63.9231%" y="645" width="0.2564%" height="15" fill="rgb(252,177,53)"/><text x="64.1731%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.26%)</title><rect x="63.9231%" y="629" width="0.2564%" height="15" fill="rgb(237,209,29)"/><text x="64.1731%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.26%)</title><rect x="63.9231%" y="613" width="0.2564%" height="15" fill="rgb(212,65,23)"/><text x="64.1731%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.26%)</title><rect x="63.9231%" y="597" width="0.2564%" height="15" fill="rgb(230,222,46)"/><text x="64.1731%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (4 samples, 0.10%)</title><rect x="64.2564%" y="629" width="0.1026%" height="15" fill="rgb(215,135,32)"/><text x="64.5064%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.23%)</title><rect x="64.4872%" y="549" width="0.2308%" height="15" fill="rgb(246,101,22)"/><text x="64.7372%" y="559.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (15 samples, 0.38%)</title><rect x="64.3590%" y="629" width="0.3846%" height="15" fill="rgb(206,107,13)"/><text x="64.6090%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10 samples, 0.26%)</title><rect x="64.4872%" y="613" width="0.2564%" height="15" fill="rgb(250,100,44)"/><text x="64.7372%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10 samples, 0.26%)</title><rect x="64.4872%" y="597" width="0.2564%" height="15" fill="rgb(231,147,38)"/><text x="64.7372%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.26%)</title><rect x="64.4872%" y="581" width="0.2564%" height="15" fill="rgb(229,8,40)"/><text x="64.7372%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.26%)</title><rect x="64.4872%" y="565" width="0.2564%" height="15" fill="rgb(221,135,30)"/><text x="64.7372%" y="575.50"></text></g><g><title>alloc::fmt::format (23 samples, 0.59%)</title><rect x="64.2564%" y="645" width="0.5897%" height="15" fill="rgb(249,193,18)"/><text x="64.5064%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (81 samples, 2.08%)</title><rect x="62.8205%" y="677" width="2.0769%" height="15" fill="rgb(209,133,39)"/><text x="63.0705%" y="687.50">s..</text></g><g><title>sql_parser::parser::Parser::expected (59 samples, 1.51%)</title><rect x="63.3846%" y="661" width="1.5128%" height="15" fill="rgb(232,100,14)"/><text x="63.6346%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (12 samples, 0.31%)</title><rect x="65.4615%" y="661" width="0.3077%" height="15" fill="rgb(224,185,1)"/><text x="65.7115%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (35 samples, 0.90%)</title><rect x="64.8974%" y="677" width="0.8974%" height="15" fill="rgb(223,139,8)"/><text x="65.1474%" y="687.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.87%)</title><rect x="66.3077%" y="485" width="0.8718%" height="15" fill="rgb(232,213,38)"/><text x="66.5577%" y="495.50"></text></g><g><title>_int_malloc (24 samples, 0.62%)</title><rect x="66.5641%" y="469" width="0.6154%" height="15" fill="rgb(207,94,22)"/><text x="66.8141%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (42 samples, 1.08%)</title><rect x="66.2051%" y="661" width="1.0769%" height="15" fill="rgb(219,183,54)"/><text x="66.4551%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 1.05%)</title><rect x="66.2308%" y="645" width="1.0513%" height="15" fill="rgb(216,185,54)"/><text x="66.4808%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (39 samples, 1.00%)</title><rect x="66.2821%" y="629" width="1.0000%" height="15" fill="rgb(254,217,39)"/><text x="66.5321%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 1.00%)</title><rect x="66.2821%" y="613" width="1.0000%" height="15" fill="rgb(240,178,23)"/><text x="66.5321%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (39 samples, 1.00%)</title><rect x="66.2821%" y="597" width="1.0000%" height="15" fill="rgb(218,11,47)"/><text x="66.5321%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (39 samples, 1.00%)</title><rect x="66.2821%" y="581" width="1.0000%" height="15" fill="rgb(218,51,51)"/><text x="66.5321%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (39 samples, 1.00%)</title><rect x="66.2821%" y="565" width="1.0000%" height="15" fill="rgb(238,126,27)"/><text x="66.5321%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (39 samples, 1.00%)</title><rect x="66.2821%" y="549" width="1.0000%" height="15" fill="rgb(249,202,22)"/><text x="66.5321%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (39 samples, 1.00%)</title><rect x="66.2821%" y="533" width="1.0000%" height="15" fill="rgb(254,195,49)"/><text x="66.5321%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 1.00%)</title><rect x="66.2821%" y="517" width="1.0000%" height="15" fill="rgb(208,123,14)"/><text x="66.5321%" y="527.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.97%)</title><rect x="66.3077%" y="501" width="0.9744%" height="15" fill="rgb(224,200,8)"/><text x="66.5577%" y="511.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (6 samples, 0.15%)</title><rect x="67.2821%" y="661" width="0.1538%" height="15" fill="rgb(217,61,36)"/><text x="67.5321%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="67.3333%" y="645" width="0.1026%" height="15" fill="rgb(206,35,45)"/><text x="67.5833%" y="655.50"></text></g><g><title>__GI___libc_free (8 samples, 0.21%)</title><rect x="67.4359%" y="661" width="0.2051%" height="15" fill="rgb(217,65,33)"/><text x="67.6859%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (279 samples, 7.15%)</title><rect x="60.6667%" y="741" width="7.1538%" height="15" fill="rgb(222,158,48)"/><text x="60.9167%" y="751.50">sql_parser..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (265 samples, 6.79%)</title><rect x="61.0256%" y="725" width="6.7949%" height="15" fill="rgb(254,2,54)"/><text x="61.2756%" y="735.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::check_descent (265 samples, 6.79%)</title><rect x="61.0256%" y="709" width="6.7949%" height="15" fill="rgb(250,143,38)"/><text x="61.2756%" y="719.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (265 samples, 6.79%)</title><rect x="61.0256%" y="693" width="6.7949%" height="15" fill="rgb(248,25,0)"/><text x="61.2756%" y="703.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::parse_value (79 samples, 2.03%)</title><rect x="65.7949%" y="677" width="2.0256%" height="15" fill="rgb(206,152,27)"/><text x="66.0449%" y="687.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_data_type (29 samples, 0.74%)</title><rect x="67.8974%" y="677" width="0.7436%" height="15" fill="rgb(240,77,30)"/><text x="68.1474%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (29 samples, 0.74%)</title><rect x="67.8974%" y="661" width="0.7436%" height="15" fill="rgb(231,5,3)"/><text x="68.1474%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 0.72%)</title><rect x="67.9231%" y="645" width="0.7179%" height="15" fill="rgb(207,226,32)"/><text x="68.1731%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.72%)</title><rect x="67.9231%" y="629" width="0.7179%" height="15" fill="rgb(222,207,47)"/><text x="68.1731%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.72%)</title><rect x="67.9231%" y="613" width="0.7179%" height="15" fill="rgb(229,115,45)"/><text x="68.1731%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.72%)</title><rect x="67.9231%" y="597" width="0.7179%" height="15" fill="rgb(224,191,6)"/><text x="68.1731%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (28 samples, 0.72%)</title><rect x="67.9231%" y="581" width="0.7179%" height="15" fill="rgb(230,227,24)"/><text x="68.1731%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28 samples, 0.72%)</title><rect x="67.9231%" y="565" width="0.7179%" height="15" fill="rgb(228,80,19)"/><text x="68.1731%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (28 samples, 0.72%)</title><rect x="67.9231%" y="549" width="0.7179%" height="15" fill="rgb(247,229,0)"/><text x="68.1731%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.72%)</title><rect x="67.9231%" y="533" width="0.7179%" height="15" fill="rgb(237,194,15)"/><text x="68.1731%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (28 samples, 0.72%)</title><rect x="67.9231%" y="517" width="0.7179%" height="15" fill="rgb(219,203,20)"/><text x="68.1731%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (33 samples, 0.85%)</title><rect x="67.8205%" y="725" width="0.8462%" height="15" fill="rgb(234,128,8)"/><text x="68.0705%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 0.85%)</title><rect x="67.8205%" y="709" width="0.8462%" height="15" fill="rgb(248,202,8)"/><text x="68.0705%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (33 samples, 0.85%)</title><rect x="67.8205%" y="693" width="0.8462%" height="15" fill="rgb(206,104,37)"/><text x="68.0705%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.18%)</title><rect x="69.0513%" y="661" width="0.1795%" height="15" fill="rgb(223,8,27)"/><text x="69.3013%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.23%)</title><rect x="69.2308%" y="661" width="0.2308%" height="15" fill="rgb(216,217,28)"/><text x="69.4808%" y="671.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.21%)</title><rect x="69.2564%" y="645" width="0.2051%" height="15" fill="rgb(249,199,1)"/><text x="69.5064%" y="655.50"></text></g><g><title>_int_realloc (8 samples, 0.21%)</title><rect x="69.2564%" y="629" width="0.2051%" height="15" fill="rgb(240,85,17)"/><text x="69.5064%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (30 samples, 0.77%)</title><rect x="68.7692%" y="677" width="0.7692%" height="15" fill="rgb(206,108,45)"/><text x="69.0192%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (11 samples, 0.28%)</title><rect x="69.5385%" y="677" width="0.2821%" height="15" fill="rgb(245,210,41)"/><text x="69.7885%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="69.7179%" y="661" width="0.1026%" height="15" fill="rgb(206,13,37)"/><text x="69.9679%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="69.7179%" y="645" width="0.1026%" height="15" fill="rgb(250,61,18)"/><text x="69.9679%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="69.7179%" y="629" width="0.1026%" height="15" fill="rgb(235,172,48)"/><text x="69.9679%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.10%)</title><rect x="69.7179%" y="613" width="0.1026%" height="15" fill="rgb(249,201,17)"/><text x="69.9679%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (14 samples, 0.36%)</title><rect x="70.3333%" y="661" width="0.3590%" height="15" fill="rgb(219,208,6)"/><text x="70.5833%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (80 samples, 2.05%)</title><rect x="68.6667%" y="693" width="2.0513%" height="15" fill="rgb(248,31,23)"/><text x="68.9167%" y="703.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (35 samples, 0.90%)</title><rect x="69.8205%" y="677" width="0.8974%" height="15" fill="rgb(245,15,42)"/><text x="70.0705%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (5 samples, 0.13%)</title><rect x="70.8718%" y="677" width="0.1282%" height="15" fill="rgb(222,217,39)"/><text x="71.1218%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (102 samples, 2.62%)</title><rect x="68.6667%" y="709" width="2.6154%" height="15" fill="rgb(210,219,27)"/><text x="68.9167%" y="719.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (22 samples, 0.56%)</title><rect x="70.7179%" y="693" width="0.5641%" height="15" fill="rgb(252,166,36)"/><text x="70.9679%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (5 samples, 0.13%)</title><rect x="71.4359%" y="677" width="0.1282%" height="15" fill="rgb(245,132,34)"/><text x="71.6859%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (429 samples, 11.00%)</title><rect x="60.5897%" y="757" width="11.0000%" height="15" fill="rgb(236,54,3)"/><text x="60.8397%" y="767.50">sql_parser::pars..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (147 samples, 3.77%)</title><rect x="67.8205%" y="741" width="3.7692%" height="15" fill="rgb(241,173,43)"/><text x="68.0705%" y="751.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_select (114 samples, 2.92%)</title><rect x="68.6667%" y="725" width="2.9231%" height="15" fill="rgb(215,190,9)"/><text x="68.9167%" y="735.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (12 samples, 0.31%)</title><rect x="71.2821%" y="709" width="0.3077%" height="15" fill="rgb(242,101,16)"/><text x="71.5321%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_factor (12 samples, 0.31%)</title><rect x="71.2821%" y="693" width="0.3077%" height="15" fill="rgb(223,190,21)"/><text x="71.5321%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (7 samples, 0.18%)</title><rect x="71.5897%" y="757" width="0.1795%" height="15" fill="rgb(215,228,25)"/><text x="71.8397%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.10%)</title><rect x="71.7692%" y="757" width="0.1026%" height="15" fill="rgb(225,36,22)"/><text x="72.0192%" y="767.50"></text></g><g><title>_int_free (11 samples, 0.28%)</title><rect x="71.9487%" y="661" width="0.2821%" height="15" fill="rgb(251,106,46)"/><text x="72.1987%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.13%)</title><rect x="72.8205%" y="453" width="0.1282%" height="15" fill="rgb(208,90,1)"/><text x="73.0705%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.13%)</title><rect x="72.8205%" y="437" width="0.1282%" height="15" fill="rgb(243,10,4)"/><text x="73.0705%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.13%)</title><rect x="72.8205%" y="421" width="0.1282%" height="15" fill="rgb(212,137,27)"/><text x="73.0705%" y="431.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.13%)</title><rect x="72.8205%" y="405" width="0.1282%" height="15" fill="rgb(231,220,49)"/><text x="73.0705%" y="415.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.13%)</title><rect x="72.8205%" y="389" width="0.1282%" height="15" fill="rgb(237,96,20)"/><text x="73.0705%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (9 samples, 0.23%)</title><rect x="72.7949%" y="517" width="0.2308%" height="15" fill="rgb(239,229,30)"/><text x="73.0449%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.21%)</title><rect x="72.8205%" y="501" width="0.2051%" height="15" fill="rgb(219,65,33)"/><text x="73.0705%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (8 samples, 0.21%)</title><rect x="72.8205%" y="485" width="0.2051%" height="15" fill="rgb(243,134,7)"/><text x="73.0705%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.21%)</title><rect x="72.8205%" y="469" width="0.2051%" height="15" fill="rgb(216,177,54)"/><text x="73.0705%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (29 samples, 0.74%)</title><rect x="72.5128%" y="613" width="0.7436%" height="15" fill="rgb(211,160,20)"/><text x="72.7628%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.51%)</title><rect x="72.7436%" y="597" width="0.5128%" height="15" fill="rgb(239,85,39)"/><text x="72.9936%" y="607.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.51%)</title><rect x="72.7436%" y="581" width="0.5128%" height="15" fill="rgb(232,125,22)"/><text x="72.9936%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (20 samples, 0.51%)</title><rect x="72.7436%" y="565" width="0.5128%" height="15" fill="rgb(244,57,34)"/><text x="72.9936%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.51%)</title><rect x="72.7436%" y="549" width="0.5128%" height="15" fill="rgb(214,203,32)"/><text x="72.9936%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (20 samples, 0.51%)</title><rect x="72.7436%" y="533" width="0.5128%" height="15" fill="rgb(207,58,43)"/><text x="72.9936%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.23%)</title><rect x="73.0256%" y="517" width="0.2308%" height="15" fill="rgb(215,193,15)"/><text x="73.2756%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.15%)</title><rect x="73.1026%" y="501" width="0.1538%" height="15" fill="rgb(232,15,44)"/><text x="73.3526%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.13%)</title><rect x="73.3590%" y="613" width="0.1282%" height="15" fill="rgb(212,3,48)"/><text x="73.6090%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (64 samples, 1.64%)</title><rect x="71.8718%" y="757" width="1.6410%" height="15" fill="rgb(218,128,7)"/><text x="72.1218%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (61 samples, 1.56%)</title><rect x="71.9487%" y="741" width="1.5641%" height="15" fill="rgb(226,216,39)"/><text x="72.1987%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (61 samples, 1.56%)</title><rect x="71.9487%" y="725" width="1.5641%" height="15" fill="rgb(243,47,51)"/><text x="72.1987%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (61 samples, 1.56%)</title><rect x="71.9487%" y="709" width="1.5641%" height="15" fill="rgb(241,183,40)"/><text x="72.1987%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (61 samples, 1.56%)</title><rect x="71.9487%" y="693" width="1.5641%" height="15" fill="rgb(231,217,32)"/><text x="72.1987%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (61 samples, 1.56%)</title><rect x="71.9487%" y="677" width="1.5641%" height="15" fill="rgb(229,61,38)"/><text x="72.1987%" y="687.50"></text></g><g><title>alloc::fmt::format (50 samples, 1.28%)</title><rect x="72.2308%" y="661" width="1.2821%" height="15" fill="rgb(225,210,5)"/><text x="72.4808%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (48 samples, 1.23%)</title><rect x="72.2821%" y="645" width="1.2308%" height="15" fill="rgb(231,79,45)"/><text x="72.5321%" y="655.50"></text></g><g><title>core::fmt::write (48 samples, 1.23%)</title><rect x="72.2821%" y="629" width="1.2308%" height="15" fill="rgb(224,100,7)"/><text x="72.5321%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (6 samples, 0.15%)</title><rect x="73.5128%" y="757" width="0.1538%" height="15" fill="rgb(241,198,18)"/><text x="73.7628%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.10%)</title><rect x="73.7179%" y="693" width="0.1026%" height="15" fill="rgb(252,97,53)"/><text x="73.9679%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.13%)</title><rect x="73.8205%" y="677" width="0.1282%" height="15" fill="rgb(220,88,7)"/><text x="74.0705%" y="687.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.13%)</title><rect x="73.8205%" y="661" width="0.1282%" height="15" fill="rgb(213,176,14)"/><text x="74.0705%" y="671.50"></text></g><g><title>_int_realloc (5 samples, 0.13%)</title><rect x="73.8205%" y="645" width="0.1282%" height="15" fill="rgb(246,73,7)"/><text x="74.0705%" y="655.50"></text></g><g><title>_int_malloc (5 samples, 0.13%)</title><rect x="73.8205%" y="629" width="0.1282%" height="15" fill="rgb(245,64,36)"/><text x="74.0705%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.28%)</title><rect x="74.1026%" y="661" width="0.2821%" height="15" fill="rgb(245,80,10)"/><text x="74.3526%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (8 samples, 0.21%)</title><rect x="74.3846%" y="661" width="0.2051%" height="15" fill="rgb(232,107,50)"/><text x="74.6346%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (36 samples, 0.92%)</title><rect x="73.7179%" y="709" width="0.9231%" height="15" fill="rgb(253,3,0)"/><text x="73.9679%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (32 samples, 0.82%)</title><rect x="73.8205%" y="693" width="0.8205%" height="15" fill="rgb(212,99,53)"/><text x="74.0705%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (27 samples, 0.69%)</title><rect x="73.9487%" y="677" width="0.6923%" height="15" fill="rgb(249,111,54)"/><text x="74.1987%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="74.7436%" y="677" width="0.1026%" height="15" fill="rgb(249,55,30)"/><text x="74.9936%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.10%)</title><rect x="75.0256%" y="517" width="0.1026%" height="15" fill="rgb(237,47,42)"/><text x="75.2756%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="75.0256%" y="501" width="0.1026%" height="15" fill="rgb(211,20,18)"/><text x="75.2756%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.10%)</title><rect x="75.0256%" y="485" width="0.1026%" height="15" fill="rgb(231,203,46)"/><text x="75.2756%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.10%)</title><rect x="75.0256%" y="469" width="0.1026%" height="15" fill="rgb(237,142,3)"/><text x="75.2756%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.10%)</title><rect x="75.0256%" y="453" width="0.1026%" height="15" fill="rgb(241,107,1)"/><text x="75.2756%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (4 samples, 0.10%)</title><rect x="75.0256%" y="437" width="0.1026%" height="15" fill="rgb(229,83,13)"/><text x="75.2756%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.10%)</title><rect x="75.0256%" y="421" width="0.1026%" height="15" fill="rgb(241,91,40)"/><text x="75.2756%" y="431.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.10%)</title><rect x="75.0256%" y="405" width="0.1026%" height="15" fill="rgb(225,3,45)"/><text x="75.2756%" y="415.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.10%)</title><rect x="75.0256%" y="389" width="0.1026%" height="15" fill="rgb(244,223,14)"/><text x="75.2756%" y="399.50"></text></g><g><title>_int_realloc (4 samples, 0.10%)</title><rect x="75.0256%" y="373" width="0.1026%" height="15" fill="rgb(224,124,37)"/><text x="75.2756%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.15%)</title><rect x="75.0000%" y="613" width="0.1538%" height="15" fill="rgb(251,171,30)"/><text x="75.2500%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.15%)</title><rect x="75.0000%" y="597" width="0.1538%" height="15" fill="rgb(236,46,54)"/><text x="75.2500%" y="607.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.15%)</title><rect x="75.0000%" y="581" width="0.1538%" height="15" fill="rgb(245,213,5)"/><text x="75.2500%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.15%)</title><rect x="75.0000%" y="565" width="0.1538%" height="15" fill="rgb(230,144,27)"/><text x="75.2500%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.15%)</title><rect x="75.0000%" y="549" width="0.1538%" height="15" fill="rgb(220,86,6)"/><text x="75.2500%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (6 samples, 0.15%)</title><rect x="75.0000%" y="533" width="0.1538%" height="15" fill="rgb(240,20,13)"/><text x="75.2500%" y="543.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (7 samples, 0.18%)</title><rect x="75.1538%" y="613" width="0.1795%" height="15" fill="rgb(217,89,34)"/><text x="75.4038%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.15%)</title><rect x="75.1795%" y="597" width="0.1538%" height="15" fill="rgb(229,13,5)"/><text x="75.4295%" y="607.50"></text></g><g><title>core::fmt::write (6 samples, 0.15%)</title><rect x="75.1795%" y="581" width="0.1538%" height="15" fill="rgb(244,67,35)"/><text x="75.4295%" y="591.50"></text></g><g><title>&lt;sql_parser::tokenizer::Word as core::fmt::Display&gt;::fmt (4 samples, 0.10%)</title><rect x="75.2308%" y="565" width="0.1026%" height="15" fill="rgb(221,40,2)"/><text x="75.4808%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.10%)</title><rect x="75.2308%" y="549" width="0.1026%" height="15" fill="rgb(237,157,21)"/><text x="75.4808%" y="559.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="75.2308%" y="533" width="0.1026%" height="15" fill="rgb(222,94,11)"/><text x="75.4808%" y="543.50"></text></g><g><title>alloc::fmt::format (17 samples, 0.44%)</title><rect x="74.9231%" y="661" width="0.4359%" height="15" fill="rgb(249,113,6)"/><text x="75.1731%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (16 samples, 0.41%)</title><rect x="74.9487%" y="645" width="0.4103%" height="15" fill="rgb(238,137,36)"/><text x="75.1987%" y="655.50"></text></g><g><title>core::fmt::write (16 samples, 0.41%)</title><rect x="74.9487%" y="629" width="0.4103%" height="15" fill="rgb(210,102,26)"/><text x="75.1987%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (27 samples, 0.69%)</title><rect x="74.6923%" y="693" width="0.6923%" height="15" fill="rgb(218,30,30)"/><text x="74.9423%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (21 samples, 0.54%)</title><rect x="74.8462%" y="677" width="0.5385%" height="15" fill="rgb(214,67,26)"/><text x="75.0962%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (68 samples, 1.74%)</title><rect x="73.6667%" y="757" width="1.7436%" height="15" fill="rgb(251,9,53)"/><text x="73.9167%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (66 samples, 1.69%)</title><rect x="73.7179%" y="741" width="1.6923%" height="15" fill="rgb(228,204,25)"/><text x="73.9679%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (66 samples, 1.69%)</title><rect x="73.7179%" y="725" width="1.6923%" height="15" fill="rgb(207,153,8)"/><text x="73.9679%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (30 samples, 0.77%)</title><rect x="74.6410%" y="709" width="0.7692%" height="15" fill="rgb(242,9,16)"/><text x="74.8910%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.18%)</title><rect x="75.6410%" y="661" width="0.1795%" height="15" fill="rgb(217,211,10)"/><text x="75.8910%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (23 samples, 0.59%)</title><rect x="75.4359%" y="677" width="0.5897%" height="15" fill="rgb(219,228,52)"/><text x="75.6859%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.21%)</title><rect x="75.8205%" y="661" width="0.2051%" height="15" fill="rgb(231,92,29)"/><text x="76.0705%" y="671.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.21%)</title><rect x="75.8205%" y="645" width="0.2051%" height="15" fill="rgb(232,8,23)"/><text x="76.0705%" y="655.50"></text></g><g><title>_int_realloc (8 samples, 0.21%)</title><rect x="75.8205%" y="629" width="0.2051%" height="15" fill="rgb(216,211,34)"/><text x="76.0705%" y="639.50"></text></g><g><title>_int_malloc (6 samples, 0.15%)</title><rect x="75.8718%" y="613" width="0.1538%" height="15" fill="rgb(236,151,0)"/><text x="76.1218%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (8 samples, 0.21%)</title><rect x="76.0256%" y="677" width="0.2051%" height="15" fill="rgb(209,168,3)"/><text x="76.2756%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (42 samples, 1.08%)</title><rect x="75.4103%" y="693" width="1.0769%" height="15" fill="rgb(208,129,28)"/><text x="75.6603%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (10 samples, 0.26%)</title><rect x="76.2308%" y="677" width="0.2564%" height="15" fill="rgb(229,78,22)"/><text x="76.4808%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.13%)</title><rect x="76.3590%" y="661" width="0.1282%" height="15" fill="rgb(228,187,13)"/><text x="76.6090%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (48 samples, 1.23%)</title><rect x="75.4103%" y="757" width="1.2308%" height="15" fill="rgb(240,119,24)"/><text x="75.6603%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (48 samples, 1.23%)</title><rect x="75.4103%" y="741" width="1.2308%" height="15" fill="rgb(209,194,42)"/><text x="75.6603%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (48 samples, 1.23%)</title><rect x="75.4103%" y="725" width="1.2308%" height="15" fill="rgb(247,200,46)"/><text x="75.6603%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (48 samples, 1.23%)</title><rect x="75.4103%" y="709" width="1.2308%" height="15" fill="rgb(218,76,16)"/><text x="75.6603%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (6 samples, 0.15%)</title><rect x="76.4872%" y="693" width="0.1538%" height="15" fill="rgb(225,21,48)"/><text x="76.7372%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="77.0256%" y="693" width="0.1026%" height="15" fill="rgb(239,223,50)"/><text x="77.2756%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="77.0256%" y="677" width="0.1026%" height="15" fill="rgb(244,45,21)"/><text x="77.2756%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="77.0256%" y="661" width="0.1026%" height="15" fill="rgb(232,33,43)"/><text x="77.2756%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.10%)</title><rect x="77.0256%" y="645" width="0.1026%" height="15" fill="rgb(209,8,3)"/><text x="77.2756%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.10%)</title><rect x="77.0256%" y="629" width="0.1026%" height="15" fill="rgb(214,25,53)"/><text x="77.2756%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (18 samples, 0.46%)</title><rect x="76.7692%" y="709" width="0.4615%" height="15" fill="rgb(254,186,54)"/><text x="77.0192%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (5 samples, 0.13%)</title><rect x="77.4615%" y="677" width="0.1282%" height="15" fill="rgb(208,174,49)"/><text x="77.7115%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (9 samples, 0.23%)</title><rect x="77.3846%" y="693" width="0.2308%" height="15" fill="rgb(233,191,51)"/><text x="77.6346%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (4 samples, 0.10%)</title><rect x="78.2564%" y="677" width="0.1026%" height="15" fill="rgb(222,134,10)"/><text x="78.5064%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.28%)</title><rect x="78.3590%" y="677" width="0.2821%" height="15" fill="rgb(230,226,20)"/><text x="78.6090%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (44 samples, 1.13%)</title><rect x="77.6154%" y="693" width="1.1282%" height="15" fill="rgb(251,111,25)"/><text x="77.8654%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.10%)</title><rect x="78.6410%" y="677" width="0.1026%" height="15" fill="rgb(224,40,46)"/><text x="78.8910%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_optional_alias (4 samples, 0.10%)</title><rect x="78.7436%" y="693" width="0.1026%" height="15" fill="rgb(236,108,47)"/><text x="78.9936%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (96 samples, 2.46%)</title><rect x="76.6410%" y="757" width="2.4615%" height="15" fill="rgb(234,93,0)"/><text x="76.8910%" y="767.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (96 samples, 2.46%)</title><rect x="76.6410%" y="741" width="2.4615%" height="15" fill="rgb(224,213,32)"/><text x="76.8910%" y="751.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (94 samples, 2.41%)</title><rect x="76.6923%" y="725" width="2.4103%" height="15" fill="rgb(251,11,48)"/><text x="76.9423%" y="735.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_select (73 samples, 1.87%)</title><rect x="77.2308%" y="709" width="1.8718%" height="15" fill="rgb(236,173,5)"/><text x="77.4808%" y="719.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (10 samples, 0.26%)</title><rect x="78.8462%" y="693" width="0.2564%" height="15" fill="rgb(230,95,12)"/><text x="79.0962%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (9 samples, 0.23%)</title><rect x="78.8718%" y="677" width="0.2308%" height="15" fill="rgb(232,209,1)"/><text x="79.1218%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (15 samples, 0.38%)</title><rect x="80.2308%" y="693" width="0.3846%" height="15" fill="rgb(232,6,1)"/><text x="80.4808%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (53 samples, 1.36%)</title><rect x="79.3077%" y="709" width="1.3590%" height="15" fill="rgb(210,224,50)"/><text x="79.5577%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (60 samples, 1.54%)</title><rect x="79.1538%" y="725" width="1.5385%" height="15" fill="rgb(228,127,35)"/><text x="79.4038%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (63 samples, 1.62%)</title><rect x="79.1026%" y="757" width="1.6154%" height="15" fill="rgb(245,102,45)"/><text x="79.3526%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (61 samples, 1.56%)</title><rect x="79.1538%" y="741" width="1.5641%" height="15" fill="rgb(214,1,49)"/><text x="79.4038%" y="751.50"></text></g><g><title>hwloc::Topology::new (4 samples, 0.10%)</title><rect x="81.0000%" y="629" width="0.1026%" height="15" fill="rgb(226,163,40)"/><text x="81.2500%" y="639.50"></text></g><g><title>hwloc_topology_load (4 samples, 0.10%)</title><rect x="81.0000%" y="613" width="0.1026%" height="15" fill="rgb(239,212,28)"/><text x="81.2500%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.10%)</title><rect x="81.0000%" y="597" width="0.1026%" height="15" fill="rgb(220,20,13)"/><text x="81.2500%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.10%)</title><rect x="81.0000%" y="581" width="0.1026%" height="15" fill="rgb(210,164,35)"/><text x="81.2500%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.10%)</title><rect x="81.0000%" y="565" width="0.1026%" height="15" fill="rgb(248,109,41)"/><text x="81.2500%" y="575.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.13%)</title><rect x="81.2051%" y="597" width="0.1282%" height="15" fill="rgb(238,23,50)"/><text x="81.4551%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.10%)</title><rect x="81.2308%" y="581" width="0.1026%" height="15" fill="rgb(211,48,49)"/><text x="81.4808%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.38%)</title><rect x="81.1026%" y="613" width="0.3846%" height="15" fill="rgb(223,36,21)"/><text x="81.3526%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.15%)</title><rect x="81.3333%" y="597" width="0.1538%" height="15" fill="rgb(207,123,46)"/><text x="81.5833%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (4 samples, 0.10%)</title><rect x="81.4872%" y="613" width="0.1026%" height="15" fill="rgb(240,218,32)"/><text x="81.7372%" y="623.50"></text></g><g><title>std::rt::lang_start_internal (29 samples, 0.74%)</title><rect x="81.0000%" y="757" width="0.7436%" height="15" fill="rgb(252,5,43)"/><text x="81.2500%" y="767.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.74%)</title><rect x="81.0000%" y="741" width="0.7436%" height="15" fill="rgb(252,84,19)"/><text x="81.2500%" y="751.50"></text></g><g><title>std::panicking::try (29 samples, 0.74%)</title><rect x="81.0000%" y="725" width="0.7436%" height="15" fill="rgb(243,152,39)"/><text x="81.2500%" y="735.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.74%)</title><rect x="81.0000%" y="709" width="0.7436%" height="15" fill="rgb(234,160,15)"/><text x="81.2500%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (29 samples, 0.74%)</title><rect x="81.0000%" y="693" width="0.7436%" height="15" fill="rgb(237,34,20)"/><text x="81.2500%" y="703.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (29 samples, 0.74%)</title><rect x="81.0000%" y="677" width="0.7436%" height="15" fill="rgb(229,97,13)"/><text x="81.2500%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 0.74%)</title><rect x="81.0000%" y="661" width="0.7436%" height="15" fill="rgb(234,71,50)"/><text x="81.2500%" y="671.50"></text></g><g><title>lobsters_microbenchmarks::main (29 samples, 0.74%)</title><rect x="81.0000%" y="645" width="0.7436%" height="15" fill="rgb(253,155,4)"/><text x="81.2500%" y="655.50"></text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (25 samples, 0.64%)</title><rect x="81.1026%" y="629" width="0.6410%" height="15" fill="rgb(222,185,37)"/><text x="81.3526%" y="639.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.15%)</title><rect x="81.5897%" y="613" width="0.1538%" height="15" fill="rgb(251,177,13)"/><text x="81.8397%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.15%)</title><rect x="81.5897%" y="597" width="0.1538%" height="15" fill="rgb(250,179,40)"/><text x="81.8397%" y="607.50"></text></g><g><title>core::fmt::write (6 samples, 0.15%)</title><rect x="81.5897%" y="581" width="0.1538%" height="15" fill="rgb(242,44,2)"/><text x="81.8397%" y="591.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (7 samples, 0.18%)</title><rect x="81.7436%" y="741" width="0.1795%" height="15" fill="rgb(216,177,13)"/><text x="81.9936%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (7 samples, 0.18%)</title><rect x="81.7436%" y="725" width="0.1795%" height="15" fill="rgb(216,106,43)"/><text x="81.9936%" y="735.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (7 samples, 0.18%)</title><rect x="81.7436%" y="709" width="0.1795%" height="15" fill="rgb(216,183,2)"/><text x="81.9936%" y="719.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (7 samples, 0.18%)</title><rect x="81.7436%" y="693" width="0.1795%" height="15" fill="rgb(249,75,3)"/><text x="81.9936%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.21%)</title><rect x="81.7436%" y="757" width="0.2051%" height="15" fill="rgb(219,67,39)"/><text x="81.9936%" y="767.50"></text></g><g><title>[unknown] (2,874 samples, 73.69%)</title><rect x="8.2821%" y="773" width="73.6923%" height="15" fill="rgb(253,228,2)"/><text x="8.5321%" y="783.50">[unknown]</text></g><g><title>__GI_madvise (4 samples, 0.10%)</title><rect x="81.9744%" y="709" width="0.1026%" height="15" fill="rgb(235,138,27)"/><text x="82.2244%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.10%)</title><rect x="81.9744%" y="693" width="0.1026%" height="15" fill="rgb(236,97,51)"/><text x="82.2244%" y="703.50"></text></g><g><title>do_syscall_64 (4 samples, 0.10%)</title><rect x="81.9744%" y="677" width="0.1026%" height="15" fill="rgb(240,80,30)"/><text x="82.2244%" y="687.50"></text></g><g><title>__x64_sys_madvise (4 samples, 0.10%)</title><rect x="81.9744%" y="661" width="0.1026%" height="15" fill="rgb(230,178,19)"/><text x="82.2244%" y="671.50"></text></g><g><title>do_madvise (4 samples, 0.10%)</title><rect x="81.9744%" y="645" width="0.1026%" height="15" fill="rgb(210,190,27)"/><text x="82.2244%" y="655.50"></text></g><g><title>zap_page_range (4 samples, 0.10%)</title><rect x="81.9744%" y="629" width="0.1026%" height="15" fill="rgb(222,107,31)"/><text x="82.2244%" y="639.50"></text></g><g><title>__malloc_arena_thread_freeres (6 samples, 0.15%)</title><rect x="81.9744%" y="741" width="0.1538%" height="15" fill="rgb(216,127,34)"/><text x="82.2244%" y="751.50"></text></g><g><title>_int_free (6 samples, 0.15%)</title><rect x="81.9744%" y="725" width="0.1538%" height="15" fill="rgb(234,116,52)"/><text x="82.2244%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (20 samples, 0.51%)</title><rect x="82.3077%" y="613" width="0.5128%" height="15" fill="rgb(222,124,15)"/><text x="82.5577%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.49%)</title><rect x="82.3333%" y="597" width="0.4872%" height="15" fill="rgb(231,179,28)"/><text x="82.5833%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.46%)</title><rect x="82.3590%" y="581" width="0.4615%" height="15" fill="rgb(226,93,45)"/><text x="82.6090%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 0.41%)</title><rect x="82.4103%" y="565" width="0.4103%" height="15" fill="rgb(215,8,51)"/><text x="82.6603%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.21%)</title><rect x="82.6154%" y="549" width="0.2051%" height="15" fill="rgb(223,106,5)"/><text x="82.8654%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.13%)</title><rect x="82.6923%" y="533" width="0.1282%" height="15" fill="rgb(250,191,5)"/><text x="82.9423%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.26%)</title><rect x="83.0256%" y="549" width="0.2564%" height="15" fill="rgb(242,132,44)"/><text x="83.2756%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 0.26%)</title><rect x="83.0256%" y="533" width="0.2564%" height="15" fill="rgb(251,152,29)"/><text x="83.2756%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.26%)</title><rect x="83.0256%" y="517" width="0.2564%" height="15" fill="rgb(218,179,5)"/><text x="83.2756%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.15%)</title><rect x="83.1282%" y="501" width="0.1538%" height="15" fill="rgb(227,67,19)"/><text x="83.3782%" y="511.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.13%)</title><rect x="83.1538%" y="485" width="0.1282%" height="15" fill="rgb(233,119,31)"/><text x="83.4038%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.13%)</title><rect x="83.1538%" y="469" width="0.1282%" height="15" fill="rgb(241,120,22)"/><text x="83.4038%" y="479.50"></text></g><g><title>core::fmt::write (17 samples, 0.44%)</title><rect x="82.9744%" y="581" width="0.4359%" height="15" fill="rgb(224,102,30)"/><text x="83.2244%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (17 samples, 0.44%)</title><rect x="82.9744%" y="565" width="0.4359%" height="15" fill="rgb(210,164,37)"/><text x="83.2244%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.10%)</title><rect x="83.3077%" y="549" width="0.1026%" height="15" fill="rgb(226,191,16)"/><text x="83.5577%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.59%)</title><rect x="82.8462%" y="597" width="0.5897%" height="15" fill="rgb(214,40,45)"/><text x="83.0962%" y="607.50"></text></g><g><title>_int_free (6 samples, 0.15%)</title><rect x="83.5128%" y="597" width="0.1538%" height="15" fill="rgb(244,29,26)"/><text x="83.7628%" y="607.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (6 samples, 0.15%)</title><rect x="83.8205%" y="565" width="0.1538%" height="15" fill="rgb(216,16,5)"/><text x="84.0705%" y="575.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.15%)</title><rect x="83.8205%" y="549" width="0.1538%" height="15" fill="rgb(249,76,35)"/><text x="84.0705%" y="559.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (13 samples, 0.33%)</title><rect x="83.7692%" y="597" width="0.3333%" height="15" fill="rgb(207,11,44)"/><text x="84.0192%" y="607.50"></text></g><g><title>msql_srv::writers::column_definitions (13 samples, 0.33%)</title><rect x="83.7692%" y="581" width="0.3333%" height="15" fill="rgb(228,190,49)"/><text x="84.0192%" y="591.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.13%)</title><rect x="83.9744%" y="565" width="0.1282%" height="15" fill="rgb(214,173,12)"/><text x="84.2244%" y="575.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.10%)</title><rect x="84.2564%" y="549" width="0.1026%" height="15" fill="rgb(218,26,35)"/><text x="84.5064%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.10%)</title><rect x="84.2564%" y="533" width="0.1026%" height="15" fill="rgb(220,200,19)"/><text x="84.5064%" y="543.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="84.2564%" y="517" width="0.1026%" height="15" fill="rgb(239,95,49)"/><text x="84.5064%" y="527.50"></text></g><g><title>decor_mem::helpers::view_to_answer_rows (65 samples, 1.67%)</title><rect x="82.8205%" y="613" width="1.6667%" height="15" fill="rgb(235,85,53)"/><text x="83.0705%" y="623.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (12 samples, 0.31%)</title><rect x="84.1795%" y="597" width="0.3077%" height="15" fill="rgb(233,133,31)"/><text x="84.4295%" y="607.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (12 samples, 0.31%)</title><rect x="84.1795%" y="581" width="0.3077%" height="15" fill="rgb(218,25,20)"/><text x="84.4295%" y="591.50"></text></g><g><title>&lt;i64 as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (12 samples, 0.31%)</title><rect x="84.1795%" y="565" width="0.3077%" height="15" fill="rgb(252,210,38)"/><text x="84.4295%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.10%)</title><rect x="84.3846%" y="549" width="0.1026%" height="15" fill="rgb(242,134,21)"/><text x="84.6346%" y="559.50"></text></g><g><title>_int_free (5 samples, 0.13%)</title><rect x="84.7949%" y="533" width="0.1282%" height="15" fill="rgb(213,28,48)"/><text x="85.0449%" y="543.50"></text></g><g><title>decor_mem::stats::get_qtype (19 samples, 0.49%)</title><rect x="84.4872%" y="613" width="0.4872%" height="15" fill="rgb(250,196,2)"/><text x="84.7372%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.36%)</title><rect x="84.6154%" y="597" width="0.3590%" height="15" fill="rgb(227,5,17)"/><text x="84.8654%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.31%)</title><rect x="84.6667%" y="581" width="0.3077%" height="15" fill="rgb(221,226,24)"/><text x="84.9167%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.31%)</title><rect x="84.6667%" y="565" width="0.3077%" height="15" fill="rgb(211,5,48)"/><text x="84.9167%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.21%)</title><rect x="84.7692%" y="549" width="0.2051%" height="15" fill="rgb(219,150,6)"/><text x="85.0192%" y="559.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (111 samples, 2.85%)</title><rect x="82.1795%" y="629" width="2.8462%" height="15" fill="rgb(251,46,16)"/><text x="82.4295%" y="639.50">&lt;d..</text></g><g><title>_int_free (8 samples, 0.21%)</title><rect x="85.0513%" y="581" width="0.2051%" height="15" fill="rgb(220,204,40)"/><text x="85.3013%" y="591.50"></text></g><g><title>malloc_consolidate (6 samples, 0.15%)</title><rect x="85.1026%" y="565" width="0.1538%" height="15" fill="rgb(211,85,2)"/><text x="85.3526%" y="575.50"></text></g><g><title>_int_free (6 samples, 0.15%)</title><rect x="85.7179%" y="517" width="0.1538%" height="15" fill="rgb(229,17,7)"/><text x="85.9679%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.10%)</title><rect x="86.1026%" y="501" width="0.1026%" height="15" fill="rgb(239,72,28)"/><text x="86.3526%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (24 samples, 0.62%)</title><rect x="85.6154%" y="533" width="0.6154%" height="15" fill="rgb(230,47,54)"/><text x="85.8654%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.36%)</title><rect x="85.8718%" y="517" width="0.3590%" height="15" fill="rgb(214,50,8)"/><text x="86.1218%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 1.23%)</title><rect x="85.0256%" y="597" width="1.2308%" height="15" fill="rgb(216,198,43)"/><text x="85.2756%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (39 samples, 1.00%)</title><rect x="85.2564%" y="581" width="1.0000%" height="15" fill="rgb(234,20,35)"/><text x="85.5064%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (37 samples, 0.95%)</title><rect x="85.3077%" y="565" width="0.9487%" height="15" fill="rgb(254,45,19)"/><text x="85.5577%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (31 samples, 0.79%)</title><rect x="85.4615%" y="549" width="0.7949%" height="15" fill="rgb(219,14,44)"/><text x="85.7115%" y="559.50"></text></g><g><title>ext4_da_write_end (4 samples, 0.10%)</title><rect x="86.5128%" y="405" width="0.1026%" height="15" fill="rgb(217,220,26)"/><text x="86.7628%" y="415.50"></text></g><g><title>ksys_write (10 samples, 0.26%)</title><rect x="86.3846%" y="485" width="0.2564%" height="15" fill="rgb(213,158,28)"/><text x="86.6346%" y="495.50"></text></g><g><title>vfs_write (9 samples, 0.23%)</title><rect x="86.4103%" y="469" width="0.2308%" height="15" fill="rgb(252,51,52)"/><text x="86.6603%" y="479.50"></text></g><g><title>new_sync_write (9 samples, 0.23%)</title><rect x="86.4103%" y="453" width="0.2308%" height="15" fill="rgb(246,89,16)"/><text x="86.6603%" y="463.50"></text></g><g><title>ext4_buffered_write_iter (8 samples, 0.21%)</title><rect x="86.4359%" y="437" width="0.2051%" height="15" fill="rgb(216,158,49)"/><text x="86.6859%" y="447.50"></text></g><g><title>generic_perform_write (8 samples, 0.21%)</title><rect x="86.4359%" y="421" width="0.2051%" height="15" fill="rgb(236,107,19)"/><text x="86.6859%" y="431.50"></text></g><g><title>do_syscall_64 (14 samples, 0.36%)</title><rect x="86.3590%" y="501" width="0.3590%" height="15" fill="rgb(228,185,30)"/><text x="86.6090%" y="511.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (18 samples, 0.46%)</title><rect x="86.3077%" y="581" width="0.4615%" height="15" fill="rgb(246,134,8)"/><text x="86.5577%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (18 samples, 0.46%)</title><rect x="86.3077%" y="565" width="0.4615%" height="15" fill="rgb(214,143,50)"/><text x="86.5577%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (18 samples, 0.46%)</title><rect x="86.3077%" y="549" width="0.4615%" height="15" fill="rgb(228,75,8)"/><text x="86.5577%" y="559.50"></text></g><g><title>__libc_write (18 samples, 0.46%)</title><rect x="86.3077%" y="533" width="0.4615%" height="15" fill="rgb(207,175,4)"/><text x="86.5577%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.46%)</title><rect x="86.3077%" y="517" width="0.4615%" height="15" fill="rgb(205,108,24)"/><text x="86.5577%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (69 samples, 1.77%)</title><rect x="85.0256%" y="629" width="1.7692%" height="15" fill="rgb(244,120,49)"/><text x="85.2756%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (69 samples, 1.77%)</title><rect x="85.0256%" y="613" width="1.7692%" height="15" fill="rgb(223,47,38)"/><text x="85.2756%" y="623.50"></text></g><g><title>decor_mem::stats::print_stats (19 samples, 0.49%)</title><rect x="86.3077%" y="597" width="0.4872%" height="15" fill="rgb(229,179,11)"/><text x="86.5577%" y="607.50"></text></g><g><title>update_curr (4 samples, 0.10%)</title><rect x="88.0000%" y="309" width="0.1026%" height="15" fill="rgb(231,122,1)"/><text x="88.2500%" y="319.50"></text></g><g><title>dequeue_entity (7 samples, 0.18%)</title><rect x="87.9744%" y="325" width="0.1795%" height="15" fill="rgb(245,119,9)"/><text x="88.2244%" y="335.50"></text></g><g><title>dequeue_task_fair (8 samples, 0.21%)</title><rect x="87.9744%" y="341" width="0.2051%" height="15" fill="rgb(241,163,25)"/><text x="88.2244%" y="351.50"></text></g><g><title>finish_task_switch (4 samples, 0.10%)</title><rect x="88.1795%" y="341" width="0.1026%" height="15" fill="rgb(217,214,3)"/><text x="88.4295%" y="351.50"></text></g><g><title>psi_task_change (4 samples, 0.10%)</title><rect x="88.3333%" y="341" width="0.1026%" height="15" fill="rgb(240,86,28)"/><text x="88.5833%" y="351.50"></text></g><g><title>psi_group_change (4 samples, 0.10%)</title><rect x="88.3333%" y="325" width="0.1026%" height="15" fill="rgb(215,47,9)"/><text x="88.5833%" y="335.50"></text></g><g><title>sk_wait_data (36 samples, 0.92%)</title><rect x="87.6154%" y="421" width="0.9231%" height="15" fill="rgb(252,25,45)"/><text x="87.8654%" y="431.50"></text></g><g><title>wait_woken (32 samples, 0.82%)</title><rect x="87.7179%" y="405" width="0.8205%" height="15" fill="rgb(251,164,9)"/><text x="87.9679%" y="415.50"></text></g><g><title>schedule_timeout (30 samples, 0.77%)</title><rect x="87.7692%" y="389" width="0.7692%" height="15" fill="rgb(233,194,0)"/><text x="88.0192%" y="399.50"></text></g><g><title>schedule (29 samples, 0.74%)</title><rect x="87.7949%" y="373" width="0.7436%" height="15" fill="rgb(249,111,24)"/><text x="88.0449%" y="383.50"></text></g><g><title>__schedule (28 samples, 0.72%)</title><rect x="87.8205%" y="357" width="0.7179%" height="15" fill="rgb(250,223,3)"/><text x="88.0705%" y="367.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.10%)</title><rect x="88.5385%" y="421" width="0.1026%" height="15" fill="rgb(236,178,37)"/><text x="88.7885%" y="431.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.10%)</title><rect x="88.5385%" y="405" width="0.1026%" height="15" fill="rgb(241,158,50)"/><text x="88.7885%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (67 samples, 1.72%)</title><rect x="86.9487%" y="485" width="1.7179%" height="15" fill="rgb(213,121,41)"/><text x="87.1987%" y="495.50"></text></g><g><title>__sys_recvfrom (67 samples, 1.72%)</title><rect x="86.9487%" y="469" width="1.7179%" height="15" fill="rgb(240,92,3)"/><text x="87.1987%" y="479.50"></text></g><g><title>inet_recvmsg (61 samples, 1.56%)</title><rect x="87.1026%" y="453" width="1.5641%" height="15" fill="rgb(205,123,3)"/><text x="87.3526%" y="463.50"></text></g><g><title>tcp_recvmsg (59 samples, 1.51%)</title><rect x="87.1538%" y="437" width="1.5128%" height="15" fill="rgb(205,97,47)"/><text x="87.4038%" y="447.50"></text></g><g><title>do_syscall_64 (68 samples, 1.74%)</title><rect x="86.9487%" y="501" width="1.7436%" height="15" fill="rgb(247,152,14)"/><text x="87.1987%" y="511.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (74 samples, 1.90%)</title><rect x="86.8974%" y="597" width="1.8974%" height="15" fill="rgb(248,195,53)"/><text x="87.1474%" y="607.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (74 samples, 1.90%)</title><rect x="86.8974%" y="581" width="1.8974%" height="15" fill="rgb(226,201,16)"/><text x="87.1474%" y="591.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (74 samples, 1.90%)</title><rect x="86.8974%" y="565" width="1.8974%" height="15" fill="rgb(205,98,0)"/><text x="87.1474%" y="575.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (74 samples, 1.90%)</title><rect x="86.8974%" y="549" width="1.8974%" height="15" fill="rgb(214,191,48)"/><text x="87.1474%" y="559.50">s..</text></g><g><title>__libc_recv (74 samples, 1.90%)</title><rect x="86.8974%" y="533" width="1.8974%" height="15" fill="rgb(237,112,39)"/><text x="87.1474%" y="543.50">_..</text></g><g><title>entry_SYSCALL_64 (72 samples, 1.85%)</title><rect x="86.9487%" y="517" width="1.8462%" height="15" fill="rgb(247,203,27)"/><text x="87.1987%" y="527.50">e..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.10%)</title><rect x="88.6923%" y="501" width="0.1026%" height="15" fill="rgb(235,124,28)"/><text x="88.9423%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (75 samples, 1.92%)</title><rect x="86.8974%" y="613" width="1.9231%" height="15" fill="rgb(208,207,46)"/><text x="87.1474%" y="623.50">&lt;..</text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (80 samples, 2.05%)</title><rect x="86.8462%" y="629" width="2.0513%" height="15" fill="rgb(234,176,4)"/><text x="87.0962%" y="639.50">m..</text></g><g><title>dev_hard_start_xmit (8 samples, 0.21%)</title><rect x="89.7692%" y="341" width="0.2051%" height="15" fill="rgb(230,133,28)"/><text x="90.0192%" y="351.50"></text></g><g><title>loopback_xmit (7 samples, 0.18%)</title><rect x="89.7949%" y="325" width="0.1795%" height="15" fill="rgb(211,137,40)"/><text x="90.0449%" y="335.50"></text></g><g><title>__dev_queue_xmit (16 samples, 0.41%)</title><rect x="89.6667%" y="357" width="0.4103%" height="15" fill="rgb(254,35,13)"/><text x="89.9167%" y="367.50"></text></g><g><title>psi_task_change (9 samples, 0.23%)</title><rect x="90.7692%" y="53" width="0.2308%" height="15" fill="rgb(225,49,51)"/><text x="91.0192%" y="63.50"></text></g><g><title>psi_group_change (6 samples, 0.15%)</title><rect x="90.8462%" y="37" width="0.1538%" height="15" fill="rgb(251,10,15)"/><text x="91.0962%" y="47.50"></text></g><g><title>enqueue_task (10 samples, 0.26%)</title><rect x="90.7692%" y="69" width="0.2564%" height="15" fill="rgb(228,207,15)"/><text x="91.0192%" y="79.50"></text></g><g><title>enqueue_task_fair (8 samples, 0.21%)</title><rect x="91.0256%" y="69" width="0.2051%" height="15" fill="rgb(241,99,19)"/><text x="91.2756%" y="79.50"></text></g><g><title>enqueue_entity (8 samples, 0.21%)</title><rect x="91.0256%" y="53" width="0.2051%" height="15" fill="rgb(207,104,49)"/><text x="91.2756%" y="63.50"></text></g><g><title>sock_def_readable (21 samples, 0.54%)</title><rect x="90.7692%" y="133" width="0.5385%" height="15" fill="rgb(234,99,18)"/><text x="91.0192%" y="143.50"></text></g><g><title>__wake_up_common_lock (21 samples, 0.54%)</title><rect x="90.7692%" y="117" width="0.5385%" height="15" fill="rgb(213,191,49)"/><text x="91.0192%" y="127.50"></text></g><g><title>__wake_up_common (21 samples, 0.54%)</title><rect x="90.7692%" y="101" width="0.5385%" height="15" fill="rgb(210,226,19)"/><text x="91.0192%" y="111.50"></text></g><g><title>try_to_wake_up (21 samples, 0.54%)</title><rect x="90.7692%" y="85" width="0.5385%" height="15" fill="rgb(229,97,18)"/><text x="91.0192%" y="95.50"></text></g><g><title>tcp_ack (11 samples, 0.28%)</title><rect x="91.3077%" y="133" width="0.2821%" height="15" fill="rgb(211,167,15)"/><text x="91.5577%" y="143.50"></text></g><g><title>tcp_v4_do_rcv (35 samples, 0.90%)</title><rect x="90.7692%" y="165" width="0.8974%" height="15" fill="rgb(210,169,34)"/><text x="91.0192%" y="175.50"></text></g><g><title>tcp_rcv_established (35 samples, 0.90%)</title><rect x="90.7692%" y="149" width="0.8974%" height="15" fill="rgb(241,121,31)"/><text x="91.0192%" y="159.50"></text></g><g><title>ip_local_deliver (51 samples, 1.31%)</title><rect x="90.3846%" y="229" width="1.3077%" height="15" fill="rgb(232,40,11)"/><text x="90.6346%" y="239.50"></text></g><g><title>ip_local_deliver_finish (48 samples, 1.23%)</title><rect x="90.4615%" y="213" width="1.2308%" height="15" fill="rgb(205,86,26)"/><text x="90.7115%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (48 samples, 1.23%)</title><rect x="90.4615%" y="197" width="1.2308%" height="15" fill="rgb(231,126,28)"/><text x="90.7115%" y="207.50"></text></g><g><title>tcp_v4_rcv (48 samples, 1.23%)</title><rect x="90.4615%" y="181" width="1.2308%" height="15" fill="rgb(219,221,18)"/><text x="90.7115%" y="191.50"></text></g><g><title>__local_bh_enable_ip (65 samples, 1.67%)</title><rect x="90.0769%" y="357" width="1.6667%" height="15" fill="rgb(211,40,0)"/><text x="90.3269%" y="367.50"></text></g><g><title>do_softirq (64 samples, 1.64%)</title><rect x="90.1026%" y="341" width="1.6410%" height="15" fill="rgb(239,85,43)"/><text x="90.3526%" y="351.50"></text></g><g><title>do_softirq_own_stack (64 samples, 1.64%)</title><rect x="90.1026%" y="325" width="1.6410%" height="15" fill="rgb(231,55,21)"/><text x="90.3526%" y="335.50"></text></g><g><title>__do_softirq (64 samples, 1.64%)</title><rect x="90.1026%" y="309" width="1.6410%" height="15" fill="rgb(225,184,43)"/><text x="90.3526%" y="319.50"></text></g><g><title>net_rx_action (61 samples, 1.56%)</title><rect x="90.1795%" y="293" width="1.5641%" height="15" fill="rgb(251,158,41)"/><text x="90.4295%" y="303.50"></text></g><g><title>process_backlog (57 samples, 1.46%)</title><rect x="90.2821%" y="277" width="1.4615%" height="15" fill="rgb(234,159,37)"/><text x="90.5321%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (55 samples, 1.41%)</title><rect x="90.3333%" y="261" width="1.4103%" height="15" fill="rgb(216,204,22)"/><text x="90.5833%" y="271.50"></text></g><g><title>ip_rcv (53 samples, 1.36%)</title><rect x="90.3846%" y="245" width="1.3590%" height="15" fill="rgb(214,17,3)"/><text x="90.6346%" y="255.50"></text></g><g><title>__ip_queue_xmit (91 samples, 2.33%)</title><rect x="89.4359%" y="405" width="2.3333%" height="15" fill="rgb(212,111,17)"/><text x="89.6859%" y="415.50">_..</text></g><g><title>ip_output (87 samples, 2.23%)</title><rect x="89.5385%" y="389" width="2.2308%" height="15" fill="rgb(221,157,24)"/><text x="89.7885%" y="399.50">i..</text></g><g><title>ip_finish_output2 (86 samples, 2.21%)</title><rect x="89.5641%" y="373" width="2.2051%" height="15" fill="rgb(252,16,13)"/><text x="89.8141%" y="383.50">i..</text></g><g><title>__tcp_transmit_skb (95 samples, 2.44%)</title><rect x="89.3846%" y="421" width="2.4359%" height="15" fill="rgb(221,62,2)"/><text x="89.6346%" y="431.50">__..</text></g><g><title>__tcp_push_pending_frames (98 samples, 2.51%)</title><rect x="89.3590%" y="453" width="2.5128%" height="15" fill="rgb(247,87,22)"/><text x="89.6090%" y="463.50">__..</text></g><g><title>tcp_write_xmit (98 samples, 2.51%)</title><rect x="89.3590%" y="437" width="2.5128%" height="15" fill="rgb(215,73,9)"/><text x="89.6090%" y="447.50">tc..</text></g><g><title>__alloc_skb (6 samples, 0.15%)</title><rect x="91.8974%" y="437" width="0.1538%" height="15" fill="rgb(207,175,33)"/><text x="92.1474%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (7 samples, 0.18%)</title><rect x="91.8974%" y="453" width="0.1795%" height="15" fill="rgb(243,129,54)"/><text x="92.1474%" y="463.50"></text></g><g><title>sock_sendmsg (122 samples, 3.13%)</title><rect x="89.1282%" y="501" width="3.1282%" height="15" fill="rgb(227,119,45)"/><text x="89.3782%" y="511.50">soc..</text></g><g><title>tcp_sendmsg (121 samples, 3.10%)</title><rect x="89.1538%" y="485" width="3.1026%" height="15" fill="rgb(205,109,36)"/><text x="89.4038%" y="495.50">tcp..</text></g><g><title>tcp_sendmsg_locked (116 samples, 2.97%)</title><rect x="89.2821%" y="469" width="2.9744%" height="15" fill="rgb(205,6,39)"/><text x="89.5321%" y="479.50">tcp..</text></g><g><title>__x64_sys_sendto (129 samples, 3.31%)</title><rect x="89.0256%" y="533" width="3.3077%" height="15" fill="rgb(221,32,16)"/><text x="89.2756%" y="543.50">__x..</text></g><g><title>__sys_sendto (129 samples, 3.31%)</title><rect x="89.0256%" y="517" width="3.3077%" height="15" fill="rgb(228,144,50)"/><text x="89.2756%" y="527.50">__s..</text></g><g><title>do_syscall_64 (133 samples, 3.41%)</title><rect x="88.9744%" y="549" width="3.4103%" height="15" fill="rgb(229,201,53)"/><text x="89.2244%" y="559.50">do_..</text></g><g><title>entry_SYSCALL_64 (142 samples, 3.64%)</title><rect x="88.9487%" y="565" width="3.6410%" height="15" fill="rgb(249,153,27)"/><text x="89.1987%" y="575.50">entr..</text></g><g><title>prepare_exit_to_usermode (8 samples, 0.21%)</title><rect x="92.3846%" y="549" width="0.2051%" height="15" fill="rgb(227,106,25)"/><text x="92.6346%" y="559.50"></text></g><g><title>__GI___clone (416 samples, 10.67%)</title><rect x="81.9744%" y="773" width="10.6667%" height="15" fill="rgb(230,65,29)"/><text x="82.2244%" y="783.50">__GI___clone</text></g><g><title>start_thread (416 samples, 10.67%)</title><rect x="81.9744%" y="757" width="10.6667%" height="15" fill="rgb(221,57,46)"/><text x="82.2244%" y="767.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (410 samples, 10.51%)</title><rect x="82.1282%" y="741" width="10.5128%" height="15" fill="rgb(229,161,17)"/><text x="82.3782%" y="751.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (410 samples, 10.51%)</title><rect x="82.1282%" y="725" width="10.5128%" height="15" fill="rgb(222,213,11)"/><text x="82.3782%" y="735.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (410 samples, 10.51%)</title><rect x="82.1282%" y="709" width="10.5128%" height="15" fill="rgb(235,35,13)"/><text x="82.3782%" y="719.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (410 samples, 10.51%)</title><rect x="82.1282%" y="693" width="10.5128%" height="15" fill="rgb(233,158,34)"/><text x="82.3782%" y="703.50">core::ops::func..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (410 samples, 10.51%)</title><rect x="82.1282%" y="677" width="10.5128%" height="15" fill="rgb(215,151,48)"/><text x="82.3782%" y="687.50">std::sys_common..</text></g><g><title>decor_mem::Shim::run_on_tcp (410 samples, 10.51%)</title><rect x="82.1282%" y="661" width="10.5128%" height="15" fill="rgb(229,84,14)"/><text x="82.3782%" y="671.50">decor_mem::Shim..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (410 samples, 10.51%)</title><rect x="82.1282%" y="645" width="10.5128%" height="15" fill="rgb(229,68,14)"/><text x="82.3782%" y="655.50">msql_srv::Mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (146 samples, 3.74%)</title><rect x="88.8974%" y="629" width="3.7436%" height="15" fill="rgb(243,106,26)"/><text x="89.1474%" y="639.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (146 samples, 3.74%)</title><rect x="88.8974%" y="613" width="3.7436%" height="15" fill="rgb(206,45,38)"/><text x="89.1474%" y="623.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (146 samples, 3.74%)</title><rect x="88.8974%" y="597" width="3.7436%" height="15" fill="rgb(226,6,15)"/><text x="89.1474%" y="607.50">std:..</text></g><g><title>__libc_send (146 samples, 3.74%)</title><rect x="88.8974%" y="581" width="3.7436%" height="15" fill="rgb(232,22,54)"/><text x="89.1474%" y="591.50">__li..</text></g><g><title>cpu_stop_queue_work (236 samples, 6.05%)</title><rect x="92.7436%" y="389" width="6.0513%" height="15" fill="rgb(229,222,32)"/><text x="92.9936%" y="399.50">cpu_stop..</text></g><g><title>preempt_schedule_thunk (236 samples, 6.05%)</title><rect x="92.7436%" y="373" width="6.0513%" height="15" fill="rgb(228,62,29)"/><text x="92.9936%" y="383.50">preempt_..</text></g><g><title>preempt_schedule_common (236 samples, 6.05%)</title><rect x="92.7436%" y="357" width="6.0513%" height="15" fill="rgb(251,103,34)"/><text x="92.9936%" y="367.50">preempt_..</text></g><g><title>__schedule (236 samples, 6.05%)</title><rect x="92.7436%" y="341" width="6.0513%" height="15" fill="rgb(233,12,30)"/><text x="92.9936%" y="351.50">__schedu..</text></g><g><title>finish_task_switch (236 samples, 6.05%)</title><rect x="92.7436%" y="325" width="6.0513%" height="15" fill="rgb(238,52,0)"/><text x="92.9936%" y="335.50">finish_t..</text></g><g><title>__perf_event_task_sched_in (234 samples, 6.00%)</title><rect x="92.7949%" y="309" width="6.0000%" height="15" fill="rgb(223,98,5)"/><text x="93.0449%" y="319.50">__perf_e..</text></g><g><title>__intel_pmu_enable_all.constprop.0 (234 samples, 6.00%)</title><rect x="92.7949%" y="293" width="6.0000%" height="15" fill="rgb(228,75,37)"/><text x="93.0449%" y="303.50">__intel_..</text></g><g><title>native_write_msr (234 samples, 6.00%)</title><rect x="92.7949%" y="277" width="6.0000%" height="15" fill="rgb(205,115,49)"/><text x="93.0449%" y="287.50">native_w..</text></g><g><title>do_syscall_64 (237 samples, 6.08%)</title><rect x="92.7436%" y="469" width="6.0769%" height="15" fill="rgb(250,154,43)"/><text x="92.9936%" y="479.50">do_sysca..</text></g><g><title>__x64_sys_sched_setaffinity (237 samples, 6.08%)</title><rect x="92.7436%" y="453" width="6.0769%" height="15" fill="rgb(226,43,29)"/><text x="92.9936%" y="463.50">__x64_sy..</text></g><g><title>sched_setaffinity (237 samples, 6.08%)</title><rect x="92.7436%" y="437" width="6.0769%" height="15" fill="rgb(249,228,39)"/><text x="92.9936%" y="447.50">sched_se..</text></g><g><title>__set_cpus_allowed_ptr (237 samples, 6.08%)</title><rect x="92.7436%" y="421" width="6.0769%" height="15" fill="rgb(216,79,43)"/><text x="92.9936%" y="431.50">__set_cp..</text></g><g><title>stop_one_cpu (237 samples, 6.08%)</title><rect x="92.7436%" y="405" width="6.0769%" height="15" fill="rgb(228,95,12)"/><text x="92.9936%" y="415.50">stop_one..</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 6.10%)</title><rect x="92.7436%" y="565" width="6.1026%" height="15" fill="rgb(249,221,15)"/><text x="92.9936%" y="575.50">[libhwlo..</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 6.10%)</title><rect x="92.7436%" y="549" width="6.1026%" height="15" fill="rgb(233,34,13)"/><text x="92.9936%" y="559.50">[libhwlo..</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 6.10%)</title><rect x="92.7436%" y="533" width="6.1026%" height="15" fill="rgb(214,103,39)"/><text x="92.9936%" y="543.50">[libhwlo..</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 6.10%)</title><rect x="92.7436%" y="517" width="6.1026%" height="15" fill="rgb(251,126,39)"/><text x="92.9936%" y="527.50">hwloc_li..</text></g><g><title>__GI___sched_setaffinity_new (238 samples, 6.10%)</title><rect x="92.7436%" y="501" width="6.1026%" height="15" fill="rgb(214,216,36)"/><text x="92.9936%" y="511.50">__GI___s..</text></g><g><title>entry_SYSCALL_64 (238 samples, 6.10%)</title><rect x="92.7436%" y="485" width="6.1026%" height="15" fill="rgb(220,221,8)"/><text x="92.9936%" y="495.50">entry_SY..</text></g><g><title>hwloc::Topology::new (239 samples, 6.13%)</title><rect x="92.7436%" y="597" width="6.1282%" height="15" fill="rgb(240,216,3)"/><text x="92.9936%" y="607.50">hwloc::T..</text></g><g><title>hwloc_topology_load (239 samples, 6.13%)</title><rect x="92.7436%" y="581" width="6.1282%" height="15" fill="rgb(232,218,17)"/><text x="92.9936%" y="591.50">hwloc_to..</text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (4 samples, 0.10%)</title><rect x="98.8718%" y="597" width="0.1026%" height="15" fill="rgb(229,163,45)"/><text x="99.1218%" y="607.50"></text></g><g><title>__libc_start_main (245 samples, 6.28%)</title><rect x="92.7179%" y="757" width="6.2821%" height="15" fill="rgb(231,110,42)"/><text x="92.9679%" y="767.50">__libc_s..</text></g><g><title>main (245 samples, 6.28%)</title><rect x="92.7179%" y="741" width="6.2821%" height="15" fill="rgb(208,170,48)"/><text x="92.9679%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (245 samples, 6.28%)</title><rect x="92.7179%" y="725" width="6.2821%" height="15" fill="rgb(239,116,25)"/><text x="92.9679%" y="735.50">std::rt:..</text></g><g><title>std::panic::catch_unwind (245 samples, 6.28%)</title><rect x="92.7179%" y="709" width="6.2821%" height="15" fill="rgb(219,200,50)"/><text x="92.9679%" y="719.50">std::pan..</text></g><g><title>std::panicking::try (245 samples, 6.28%)</title><rect x="92.7179%" y="693" width="6.2821%" height="15" fill="rgb(245,200,0)"/><text x="92.9679%" y="703.50">std::pan..</text></g><g><title>std::panicking::try::do_call (245 samples, 6.28%)</title><rect x="92.7179%" y="677" width="6.2821%" height="15" fill="rgb(245,119,33)"/><text x="92.9679%" y="687.50">std::pan..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (245 samples, 6.28%)</title><rect x="92.7179%" y="661" width="6.2821%" height="15" fill="rgb(231,125,12)"/><text x="92.9679%" y="671.50">core::op..</text></g><g><title>std::rt::lang_start::_{{closure}} (245 samples, 6.28%)</title><rect x="92.7179%" y="645" width="6.2821%" height="15" fill="rgb(216,96,41)"/><text x="92.9679%" y="655.50">std::rt:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (245 samples, 6.28%)</title><rect x="92.7179%" y="629" width="6.2821%" height="15" fill="rgb(248,43,45)"/><text x="92.9679%" y="639.50">std::sys..</text></g><g><title>lobsters_microbenchmarks::main (245 samples, 6.28%)</title><rect x="92.7179%" y="613" width="6.2821%" height="15" fill="rgb(217,222,7)"/><text x="92.9679%" y="623.50">lobsters..</text></g><g><title>_start (246 samples, 6.31%)</title><rect x="92.7179%" y="773" width="6.3077%" height="15" fill="rgb(233,28,6)"/><text x="92.9679%" y="783.50">_start</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.10%)</title><rect x="99.1282%" y="773" width="0.1026%" height="15" fill="rgb(231,218,15)"/><text x="99.3782%" y="783.50"></text></g><g><title>page_fault (14 samples, 0.36%)</title><rect x="99.4103%" y="773" width="0.3590%" height="15" fill="rgb(226,171,48)"/><text x="99.6603%" y="783.50"></text></g><g><title>lobsters-microb (3,894 samples, 99.85%)</title><rect x="0.0000%" y="789" width="99.8462%" height="15" fill="rgb(235,201,9)"/><text x="0.2500%" y="799.50">lobsters-microb</text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.13%)</title><rect x="99.8462%" y="629" width="0.1282%" height="15" fill="rgb(217,80,15)"/><text x="100.0962%" y="639.50"></text></g><g><title>native_write_msr (5 samples, 0.13%)</title><rect x="99.8462%" y="613" width="0.1282%" height="15" fill="rgb(219,152,8)"/><text x="100.0962%" y="623.50"></text></g><g><title>all (3,900 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(243,107,38)"/><text x="0.2500%" y="815.50"></text></g><g><title>perf (6 samples, 0.15%)</title><rect x="99.8462%" y="789" width="0.1538%" height="15" fill="rgb(231,17,5)"/><text x="100.0962%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.15%)</title><rect x="99.8462%" y="773" width="0.1538%" height="15" fill="rgb(209,25,54)"/><text x="100.0962%" y="783.50"></text></g><g><title>do_syscall_64 (6 samples, 0.15%)</title><rect x="99.8462%" y="757" width="0.1538%" height="15" fill="rgb(219,0,2)"/><text x="100.0962%" y="767.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.15%)</title><rect x="99.8462%" y="741" width="0.1538%" height="15" fill="rgb(246,9,5)"/><text x="100.0962%" y="751.50"></text></g><g><title>do_execve (6 samples, 0.15%)</title><rect x="99.8462%" y="725" width="0.1538%" height="15" fill="rgb(226,159,4)"/><text x="100.0962%" y="735.50"></text></g><g><title>__do_execve_file (6 samples, 0.15%)</title><rect x="99.8462%" y="709" width="0.1538%" height="15" fill="rgb(219,175,34)"/><text x="100.0962%" y="719.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.15%)</title><rect x="99.8462%" y="693" width="0.1538%" height="15" fill="rgb(236,10,46)"/><text x="100.0962%" y="703.50"></text></g><g><title>load_elf_binary (6 samples, 0.15%)</title><rect x="99.8462%" y="677" width="0.1538%" height="15" fill="rgb(240,211,16)"/><text x="100.0962%" y="687.50"></text></g><g><title>setup_new_exec (6 samples, 0.15%)</title><rect x="99.8462%" y="661" width="0.1538%" height="15" fill="rgb(205,3,43)"/><text x="100.0962%" y="671.50"></text></g><g><title>perf_event_exec (6 samples, 0.15%)</title><rect x="99.8462%" y="645" width="0.1538%" height="15" fill="rgb(245,7,22)"/><text x="100.0962%" y="655.50"></text></g></svg></svg>