<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="0.0000%" y="757" width="0.1490%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="767.50"></text></g><g><title>__rdl_realloc (1 samples, 0.15%)</title><rect x="0.1490%" y="757" width="0.1490%" height="15" fill="rgb(217,0,24)"/><text x="0.3990%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.15%)</title><rect x="0.1490%" y="741" width="0.1490%" height="15" fill="rgb(221,193,54)"/><text x="0.3990%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="0.2981%" y="757" width="0.1490%" height="15" fill="rgb(248,212,6)"/><text x="0.5481%" y="767.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="0.4471%" y="757" width="0.1490%" height="15" fill="rgb(208,68,35)"/><text x="0.6971%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.45%)</title><rect x="0.5961%" y="757" width="0.4471%" height="15" fill="rgb(232,128,0)"/><text x="0.8461%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="1.0432%" y="757" width="0.1490%" height="15" fill="rgb(207,160,47)"/><text x="1.2932%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.60%)</title><rect x="1.1923%" y="757" width="0.5961%" height="15" fill="rgb(228,23,34)"/><text x="1.4423%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.15%)</title><rect x="1.6393%" y="741" width="0.1490%" height="15" fill="rgb(218,30,26)"/><text x="1.8893%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="1.6393%" y="725" width="0.1490%" height="15" fill="rgb(220,122,19)"/><text x="1.8893%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="1.6393%" y="709" width="0.1490%" height="15" fill="rgb(250,228,42)"/><text x="1.8893%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="1.6393%" y="693" width="0.1490%" height="15" fill="rgb(240,193,28)"/><text x="1.8893%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="1.6393%" y="677" width="0.1490%" height="15" fill="rgb(216,20,37)"/><text x="1.8893%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="1.6393%" y="661" width="0.1490%" height="15" fill="rgb(206,188,39)"/><text x="1.8893%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="1.6393%" y="645" width="0.1490%" height="15" fill="rgb(217,207,13)"/><text x="1.8893%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="1.6393%" y="629" width="0.1490%" height="15" fill="rgb(231,73,38)"/><text x="1.8893%" y="639.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.45%)</title><rect x="1.7884%" y="757" width="0.4471%" height="15" fill="rgb(225,20,46)"/><text x="2.0384%" y="767.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (1 samples, 0.15%)</title><rect x="2.2355%" y="757" width="0.1490%" height="15" fill="rgb(210,31,41)"/><text x="2.4855%" y="767.50"></text></g><g><title>decor_mem::helpers::is_datatable (1 samples, 0.15%)</title><rect x="2.3845%" y="757" width="0.1490%" height="15" fill="rgb(221,200,47)"/><text x="2.6345%" y="767.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure::{{closure}} (1 samples, 0.15%)</title><rect x="2.5335%" y="757" width="0.1490%" height="15" fill="rgb(226,26,5)"/><text x="2.7835%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.30%)</title><rect x="2.6826%" y="757" width="0.2981%" height="15" fill="rgb(249,33,26)"/><text x="2.9326%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.30%)</title><rect x="2.9806%" y="757" width="0.2981%" height="15" fill="rgb(235,183,28)"/><text x="3.2306%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.15%)</title><rect x="3.2787%" y="757" width="0.1490%" height="15" fill="rgb(221,5,38)"/><text x="3.5287%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.30%)</title><rect x="3.4277%" y="757" width="0.2981%" height="15" fill="rgb(247,18,42)"/><text x="3.6777%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.15%)</title><rect x="3.7258%" y="757" width="0.1490%" height="15" fill="rgb(241,131,45)"/><text x="3.9758%" y="767.50"></text></g><g><title>[anon] (27 samples, 4.02%)</title><rect x="0.0000%" y="773" width="4.0238%" height="15" fill="rgb(249,31,29)"/><text x="0.2500%" y="783.50">[ano..</text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.15%)</title><rect x="3.8748%" y="757" width="0.1490%" height="15" fill="rgb(225,111,53)"/><text x="4.1248%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (1 samples, 0.15%)</title><rect x="4.0238%" y="773" width="0.1490%" height="15" fill="rgb(238,160,17)"/><text x="4.2738%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="4.0238%" y="757" width="0.1490%" height="15" fill="rgb(214,148,48)"/><text x="4.2738%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="4.0238%" y="741" width="0.1490%" height="15" fill="rgb(232,36,49)"/><text x="4.2738%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="4.0238%" y="725" width="0.1490%" height="15" fill="rgb(209,103,24)"/><text x="4.2738%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="4.0238%" y="709" width="0.1490%" height="15" fill="rgb(229,88,8)"/><text x="4.2738%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="4.0238%" y="693" width="0.1490%" height="15" fill="rgb(213,181,19)"/><text x="4.2738%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="4.0238%" y="677" width="0.1490%" height="15" fill="rgb(254,191,54)"/><text x="4.2738%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="4.0238%" y="661" width="0.1490%" height="15" fill="rgb(241,83,37)"/><text x="4.2738%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="4.0238%" y="645" width="0.1490%" height="15" fill="rgb(233,36,39)"/><text x="4.2738%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="4.0238%" y="629" width="0.1490%" height="15" fill="rgb(226,3,54)"/><text x="4.2738%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="4.0238%" y="613" width="0.1490%" height="15" fill="rgb(245,192,40)"/><text x="4.2738%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="4.0238%" y="597" width="0.1490%" height="15" fill="rgb(238,167,29)"/><text x="4.2738%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="4.1729%" y="645" width="0.2981%" height="15" fill="rgb(232,182,51)"/><text x="4.4229%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="4.3219%" y="629" width="0.1490%" height="15" fill="rgb(231,60,39)"/><text x="4.5719%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="4.3219%" y="613" width="0.1490%" height="15" fill="rgb(208,69,12)"/><text x="4.5719%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="4.3219%" y="597" width="0.1490%" height="15" fill="rgb(235,93,37)"/><text x="4.5719%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="4.3219%" y="581" width="0.1490%" height="15" fill="rgb(213,116,39)"/><text x="4.5719%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="4.3219%" y="565" width="0.1490%" height="15" fill="rgb(222,207,29)"/><text x="4.5719%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="4.3219%" y="549" width="0.1490%" height="15" fill="rgb(206,96,30)"/><text x="4.5719%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="4.3219%" y="533" width="0.1490%" height="15" fill="rgb(218,138,4)"/><text x="4.5719%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="4.3219%" y="517" width="0.1490%" height="15" fill="rgb(250,191,14)"/><text x="4.5719%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="4.3219%" y="501" width="0.1490%" height="15" fill="rgb(239,60,40)"/><text x="4.5719%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="4.3219%" y="485" width="0.1490%" height="15" fill="rgb(206,27,48)"/><text x="4.5719%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="4.3219%" y="469" width="0.1490%" height="15" fill="rgb(225,35,8)"/><text x="4.5719%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="4.3219%" y="453" width="0.1490%" height="15" fill="rgb(250,213,24)"/><text x="4.5719%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="4.3219%" y="437" width="0.1490%" height="15" fill="rgb(247,123,22)"/><text x="4.5719%" y="447.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="4.3219%" y="421" width="0.1490%" height="15" fill="rgb(231,138,38)"/><text x="4.5719%" y="431.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="4.3219%" y="405" width="0.1490%" height="15" fill="rgb(231,145,46)"/><text x="4.5719%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="4.3219%" y="389" width="0.1490%" height="15" fill="rgb(251,118,11)"/><text x="4.5719%" y="399.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="4.3219%" y="373" width="0.1490%" height="15" fill="rgb(217,147,25)"/><text x="4.5719%" y="383.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.15%)</title><rect x="4.3219%" y="357" width="0.1490%" height="15" fill="rgb(247,81,37)"/><text x="4.5719%" y="367.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.15%)</title><rect x="4.3219%" y="341" width="0.1490%" height="15" fill="rgb(209,12,38)"/><text x="4.5719%" y="351.50"></text></g><g><title>mprotect_fixup (1 samples, 0.15%)</title><rect x="4.3219%" y="325" width="0.1490%" height="15" fill="rgb(227,1,9)"/><text x="4.5719%" y="335.50"></text></g><g><title>perf_event_mmap (1 samples, 0.15%)</title><rect x="4.3219%" y="309" width="0.1490%" height="15" fill="rgb(248,47,43)"/><text x="4.5719%" y="319.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.15%)</title><rect x="4.3219%" y="293" width="0.1490%" height="15" fill="rgb(221,10,30)"/><text x="4.5719%" y="303.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.15%)</title><rect x="4.3219%" y="277" width="0.1490%" height="15" fill="rgb(210,229,1)"/><text x="4.5719%" y="287.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.15%)</title><rect x="4.3219%" y="261" width="0.1490%" height="15" fill="rgb(222,148,37)"/><text x="4.5719%" y="271.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="4.4709%" y="581" width="0.2981%" height="15" fill="rgb(234,67,33)"/><text x="4.7209%" y="591.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="4.4709%" y="565" width="0.2981%" height="15" fill="rgb(247,98,35)"/><text x="4.7209%" y="575.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.30%)</title><rect x="4.4709%" y="549" width="0.2981%" height="15" fill="rgb(247,138,52)"/><text x="4.7209%" y="559.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.30%)</title><rect x="4.4709%" y="533" width="0.2981%" height="15" fill="rgb(213,79,30)"/><text x="4.7209%" y="543.50"></text></g><g><title>mprotect_fixup (1 samples, 0.15%)</title><rect x="4.6200%" y="517" width="0.1490%" height="15" fill="rgb(246,177,23)"/><text x="4.8700%" y="527.50"></text></g><g><title>perf_event_mmap (1 samples, 0.15%)</title><rect x="4.6200%" y="501" width="0.1490%" height="15" fill="rgb(230,62,27)"/><text x="4.8700%" y="511.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.15%)</title><rect x="4.6200%" y="485" width="0.1490%" height="15" fill="rgb(216,154,8)"/><text x="4.8700%" y="495.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.15%)</title><rect x="4.6200%" y="469" width="0.1490%" height="15" fill="rgb(244,35,45)"/><text x="4.8700%" y="479.50"></text></g><g><title>__GI___mprotect (3 samples, 0.45%)</title><rect x="4.4709%" y="597" width="0.4471%" height="15" fill="rgb(251,115,12)"/><text x="4.7209%" y="607.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="4.7690%" y="581" width="0.1490%" height="15" fill="rgb(240,54,50)"/><text x="5.0190%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (6 samples, 0.89%)</title><rect x="4.1729%" y="709" width="0.8942%" height="15" fill="rgb(233,84,52)"/><text x="4.4229%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (6 samples, 0.89%)</title><rect x="4.1729%" y="693" width="0.8942%" height="15" fill="rgb(207,117,47)"/><text x="4.4229%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.89%)</title><rect x="4.1729%" y="677" width="0.8942%" height="15" fill="rgb(249,43,39)"/><text x="4.4229%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.89%)</title><rect x="4.1729%" y="661" width="0.8942%" height="15" fill="rgb(209,38,44)"/><text x="4.4229%" y="671.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.60%)</title><rect x="4.4709%" y="645" width="0.5961%" height="15" fill="rgb(236,212,23)"/><text x="4.7209%" y="655.50"></text></g><g><title>_int_malloc (4 samples, 0.60%)</title><rect x="4.4709%" y="629" width="0.5961%" height="15" fill="rgb(242,79,21)"/><text x="4.7209%" y="639.50"></text></g><g><title>sysmalloc (4 samples, 0.60%)</title><rect x="4.4709%" y="613" width="0.5961%" height="15" fill="rgb(211,96,35)"/><text x="4.7209%" y="623.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="4.9180%" y="597" width="0.1490%" height="15" fill="rgb(253,215,40)"/><text x="5.1680%" y="607.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="4.9180%" y="581" width="0.1490%" height="15" fill="rgb(211,81,21)"/><text x="5.1680%" y="591.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="4.9180%" y="565" width="0.1490%" height="15" fill="rgb(208,190,38)"/><text x="5.1680%" y="575.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="4.9180%" y="549" width="0.1490%" height="15" fill="rgb(235,213,38)"/><text x="5.1680%" y="559.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.15%)</title><rect x="4.9180%" y="533" width="0.1490%" height="15" fill="rgb(237,122,38)"/><text x="5.1680%" y="543.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.15%)</title><rect x="4.9180%" y="517" width="0.1490%" height="15" fill="rgb(244,218,35)"/><text x="5.1680%" y="527.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.15%)</title><rect x="4.9180%" y="501" width="0.1490%" height="15" fill="rgb(240,68,47)"/><text x="5.1680%" y="511.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.15%)</title><rect x="4.9180%" y="485" width="0.1490%" height="15" fill="rgb(210,16,53)"/><text x="5.1680%" y="495.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="5.3651%" y="437" width="0.1490%" height="15" fill="rgb(235,124,12)"/><text x="5.6151%" y="447.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="5.3651%" y="421" width="0.1490%" height="15" fill="rgb(224,169,11)"/><text x="5.6151%" y="431.50"></text></g><g><title>sock_rfree (1 samples, 0.15%)</title><rect x="5.3651%" y="405" width="0.1490%" height="15" fill="rgb(250,166,2)"/><text x="5.6151%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.30%)</title><rect x="5.5142%" y="357" width="0.2981%" height="15" fill="rgb(242,216,29)"/><text x="5.7642%" y="367.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.15%)</title><rect x="5.8122%" y="357" width="0.1490%" height="15" fill="rgb(230,116,27)"/><text x="6.0622%" y="367.50"></text></g><g><title>dequeue_entity (1 samples, 0.15%)</title><rect x="5.8122%" y="341" width="0.1490%" height="15" fill="rgb(228,99,48)"/><text x="6.0622%" y="351.50"></text></g><g><title>update_curr (1 samples, 0.15%)</title><rect x="5.8122%" y="325" width="0.1490%" height="15" fill="rgb(253,11,6)"/><text x="6.0622%" y="335.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.15%)</title><rect x="5.8122%" y="309" width="0.1490%" height="15" fill="rgb(247,143,39)"/><text x="6.0622%" y="319.50"></text></g><g><title>inet_recvmsg (5 samples, 0.75%)</title><rect x="5.3651%" y="469" width="0.7452%" height="15" fill="rgb(236,97,10)"/><text x="5.6151%" y="479.50"></text></g><g><title>tcp_recvmsg (5 samples, 0.75%)</title><rect x="5.3651%" y="453" width="0.7452%" height="15" fill="rgb(233,208,19)"/><text x="5.6151%" y="463.50"></text></g><g><title>sk_wait_data (4 samples, 0.60%)</title><rect x="5.5142%" y="437" width="0.5961%" height="15" fill="rgb(216,164,2)"/><text x="5.7642%" y="447.50"></text></g><g><title>wait_woken (4 samples, 0.60%)</title><rect x="5.5142%" y="421" width="0.5961%" height="15" fill="rgb(220,129,5)"/><text x="5.7642%" y="431.50"></text></g><g><title>schedule_timeout (4 samples, 0.60%)</title><rect x="5.5142%" y="405" width="0.5961%" height="15" fill="rgb(242,17,10)"/><text x="5.7642%" y="415.50"></text></g><g><title>schedule (4 samples, 0.60%)</title><rect x="5.5142%" y="389" width="0.5961%" height="15" fill="rgb(242,107,0)"/><text x="5.7642%" y="399.50"></text></g><g><title>__schedule (4 samples, 0.60%)</title><rect x="5.5142%" y="373" width="0.5961%" height="15" fill="rgb(251,28,31)"/><text x="5.7642%" y="383.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="5.9613%" y="357" width="0.1490%" height="15" fill="rgb(233,223,10)"/><text x="6.2113%" y="367.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="5.9613%" y="341" width="0.1490%" height="15" fill="rgb(215,21,27)"/><text x="6.2113%" y="351.50"></text></g><g><title>do_syscall_64 (7 samples, 1.04%)</title><rect x="5.2161%" y="517" width="1.0432%" height="15" fill="rgb(232,23,21)"/><text x="5.4661%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 1.04%)</title><rect x="5.2161%" y="501" width="1.0432%" height="15" fill="rgb(244,5,23)"/><text x="5.4661%" y="511.50"></text></g><g><title>__sys_recvfrom (7 samples, 1.04%)</title><rect x="5.2161%" y="485" width="1.0432%" height="15" fill="rgb(226,81,46)"/><text x="5.4661%" y="495.50"></text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="6.1103%" y="469" width="0.1490%" height="15" fill="rgb(247,70,30)"/><text x="6.3603%" y="479.50"></text></g><g><title>__fdget (1 samples, 0.15%)</title><rect x="6.1103%" y="453" width="0.1490%" height="15" fill="rgb(212,68,19)"/><text x="6.3603%" y="463.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.34%)</title><rect x="5.0671%" y="645" width="1.3413%" height="15" fill="rgb(240,187,13)"/><text x="5.3171%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 1.34%)</title><rect x="5.0671%" y="629" width="1.3413%" height="15" fill="rgb(223,113,26)"/><text x="5.3171%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 1.34%)</title><rect x="5.0671%" y="613" width="1.3413%" height="15" fill="rgb(206,192,2)"/><text x="5.3171%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 1.34%)</title><rect x="5.0671%" y="597" width="1.3413%" height="15" fill="rgb(241,108,4)"/><text x="5.3171%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 1.34%)</title><rect x="5.0671%" y="581" width="1.3413%" height="15" fill="rgb(247,173,49)"/><text x="5.3171%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 1.34%)</title><rect x="5.0671%" y="565" width="1.3413%" height="15" fill="rgb(224,114,35)"/><text x="5.3171%" y="575.50"></text></g><g><title>__libc_recv (9 samples, 1.34%)</title><rect x="5.0671%" y="549" width="1.3413%" height="15" fill="rgb(245,159,27)"/><text x="5.3171%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 1.19%)</title><rect x="5.2161%" y="533" width="1.1923%" height="15" fill="rgb(245,172,44)"/><text x="5.4661%" y="543.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="6.2593%" y="517" width="0.1490%" height="15" fill="rgb(236,23,11)"/><text x="6.5093%" y="527.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (16 samples, 2.38%)</title><rect x="4.1729%" y="741" width="2.3845%" height="15" fill="rgb(205,117,38)"/><text x="4.4229%" y="751.50">de..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (16 samples, 2.38%)</title><rect x="4.1729%" y="725" width="2.3845%" height="15" fill="rgb(237,72,25)"/><text x="4.4229%" y="735.50">de..</text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (10 samples, 1.49%)</title><rect x="5.0671%" y="709" width="1.4903%" height="15" fill="rgb(244,70,9)"/><text x="5.3171%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (10 samples, 1.49%)</title><rect x="5.0671%" y="693" width="1.4903%" height="15" fill="rgb(217,125,39)"/><text x="5.3171%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (10 samples, 1.49%)</title><rect x="5.0671%" y="677" width="1.4903%" height="15" fill="rgb(235,36,10)"/><text x="5.3171%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (10 samples, 1.49%)</title><rect x="5.0671%" y="661" width="1.4903%" height="15" fill="rgb(251,123,47)"/><text x="5.3171%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="6.4083%" y="645" width="0.1490%" height="15" fill="rgb(221,13,13)"/><text x="6.6583%" y="655.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.15%)</title><rect x="6.5574%" y="741" width="0.1490%" height="15" fill="rgb(238,131,9)"/><text x="6.8074%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="725" width="0.1490%" height="15" fill="rgb(211,50,8)"/><text x="6.8074%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="709" width="0.1490%" height="15" fill="rgb(245,182,24)"/><text x="6.8074%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="693" width="0.1490%" height="15" fill="rgb(242,14,37)"/><text x="6.8074%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="677" width="0.1490%" height="15" fill="rgb(246,228,12)"/><text x="6.8074%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="661" width="0.1490%" height="15" fill="rgb(213,55,15)"/><text x="6.8074%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="645" width="0.1490%" height="15" fill="rgb(209,9,3)"/><text x="6.8074%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="629" width="0.1490%" height="15" fill="rgb(230,59,30)"/><text x="6.8074%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="6.5574%" y="613" width="0.1490%" height="15" fill="rgb(209,121,21)"/><text x="6.8074%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.15%)</title><rect x="6.5574%" y="597" width="0.1490%" height="15" fill="rgb(220,109,13)"/><text x="6.8074%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="6.8554%" y="677" width="0.1490%" height="15" fill="rgb(232,18,1)"/><text x="7.1054%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.30%)</title><rect x="6.8554%" y="693" width="0.2981%" height="15" fill="rgb(215,41,42)"/><text x="7.1054%" y="703.50"></text></g><g><title>stacker::remaining_stack (1 samples, 0.15%)</title><rect x="7.0045%" y="677" width="0.1490%" height="15" fill="rgb(224,123,36)"/><text x="7.2545%" y="687.50"></text></g><g><title>psm::stack_pointer (1 samples, 0.15%)</title><rect x="7.0045%" y="661" width="0.1490%" height="15" fill="rgb(240,125,3)"/><text x="7.2545%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.15%)</title><rect x="7.1535%" y="693" width="0.1490%" height="15" fill="rgb(205,98,50)"/><text x="7.4035%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="7.1535%" y="677" width="0.1490%" height="15" fill="rgb(205,185,37)"/><text x="7.4035%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.15%)</title><rect x="7.1535%" y="661" width="0.1490%" height="15" fill="rgb(238,207,15)"/><text x="7.4035%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="7.1535%" y="645" width="0.1490%" height="15" fill="rgb(213,199,42)"/><text x="7.4035%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="7.1535%" y="629" width="0.1490%" height="15" fill="rgb(235,201,11)"/><text x="7.4035%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="7.6006%" y="597" width="0.1490%" height="15" fill="rgb(207,46,11)"/><text x="7.8506%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="7.6006%" y="581" width="0.1490%" height="15" fill="rgb(241,35,35)"/><text x="7.8506%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="7.6006%" y="565" width="0.1490%" height="15" fill="rgb(243,32,47)"/><text x="7.8506%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="7.6006%" y="549" width="0.1490%" height="15" fill="rgb(247,202,23)"/><text x="7.8506%" y="559.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (25 samples, 3.73%)</title><rect x="4.1729%" y="757" width="3.7258%" height="15" fill="rgb(219,102,11)"/><text x="4.4229%" y="767.50">&lt;dec..</text></g><g><title>decor_mem::stats::get_qtype (8 samples, 1.19%)</title><rect x="6.7064%" y="741" width="1.1923%" height="15" fill="rgb(243,110,44)"/><text x="6.9564%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (8 samples, 1.19%)</title><rect x="6.7064%" y="725" width="1.1923%" height="15" fill="rgb(222,74,54)"/><text x="6.9564%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (8 samples, 1.19%)</title><rect x="6.7064%" y="709" width="1.1923%" height="15" fill="rgb(216,99,12)"/><text x="6.9564%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (4 samples, 0.60%)</title><rect x="7.3025%" y="693" width="0.5961%" height="15" fill="rgb(226,22,26)"/><text x="7.5525%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="7.6006%" y="677" width="0.2981%" height="15" fill="rgb(217,163,10)"/><text x="7.8506%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="7.6006%" y="661" width="0.2981%" height="15" fill="rgb(213,25,53)"/><text x="7.8506%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="7.6006%" y="645" width="0.2981%" height="15" fill="rgb(252,105,26)"/><text x="7.8506%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.30%)</title><rect x="7.6006%" y="629" width="0.2981%" height="15" fill="rgb(220,39,43)"/><text x="7.8506%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.30%)</title><rect x="7.6006%" y="613" width="0.2981%" height="15" fill="rgb(229,68,48)"/><text x="7.8506%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="7.7496%" y="597" width="0.1490%" height="15" fill="rgb(252,8,32)"/><text x="7.9996%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="7.7496%" y="581" width="0.1490%" height="15" fill="rgb(223,20,43)"/><text x="7.9996%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="7.7496%" y="565" width="0.1490%" height="15" fill="rgb(229,81,49)"/><text x="7.9996%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="7.7496%" y="549" width="0.1490%" height="15" fill="rgb(236,28,36)"/><text x="7.9996%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="7.7496%" y="533" width="0.1490%" height="15" fill="rgb(249,185,26)"/><text x="7.9996%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="7.7496%" y="517" width="0.1490%" height="15" fill="rgb(249,174,33)"/><text x="7.9996%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="7.7496%" y="501" width="0.1490%" height="15" fill="rgb(233,201,37)"/><text x="7.9996%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.15%)</title><rect x="7.7496%" y="485" width="0.1490%" height="15" fill="rgb(221,78,26)"/><text x="7.9996%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="7.7496%" y="469" width="0.1490%" height="15" fill="rgb(250,127,30)"/><text x="7.9996%" y="479.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="7.8987%" y="757" width="0.1490%" height="15" fill="rgb(230,49,44)"/><text x="8.1487%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="8.0477%" y="757" width="0.1490%" height="15" fill="rgb(229,67,23)"/><text x="8.2977%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.15%)</title><rect x="8.1967%" y="757" width="0.1490%" height="15" fill="rgb(249,83,47)"/><text x="8.4467%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.15%)</title><rect x="8.1967%" y="741" width="0.1490%" height="15" fill="rgb(215,43,3)"/><text x="8.4467%" y="751.50"></text></g><g><title>_int_free (2 samples, 0.30%)</title><rect x="8.3458%" y="757" width="0.2981%" height="15" fill="rgb(238,154,13)"/><text x="8.5958%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="8.6438%" y="757" width="0.1490%" height="15" fill="rgb(219,56,2)"/><text x="8.8938%" y="767.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.15%)</title><rect x="8.7928%" y="757" width="0.1490%" height="15" fill="rgb(233,0,4)"/><text x="9.0428%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.15%)</title><rect x="8.9419%" y="757" width="0.1490%" height="15" fill="rgb(235,30,7)"/><text x="9.1919%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="9.0909%" y="757" width="0.1490%" height="15" fill="rgb(250,79,13)"/><text x="9.3409%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="9.2399%" y="757" width="0.1490%" height="15" fill="rgb(211,146,34)"/><text x="9.4899%" y="767.50"></text></g><g><title>decor_mem::ghosts_map::create_ghosts_table (1 samples, 0.15%)</title><rect x="9.3890%" y="693" width="0.1490%" height="15" fill="rgb(228,22,38)"/><text x="9.6390%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.15%)</title><rect x="9.3890%" y="677" width="0.1490%" height="15" fill="rgb(235,168,5)"/><text x="9.6390%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="9.3890%" y="661" width="0.1490%" height="15" fill="rgb(221,155,16)"/><text x="9.6390%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.15%)</title><rect x="9.3890%" y="645" width="0.1490%" height="15" fill="rgb(215,215,53)"/><text x="9.6390%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.15%)</title><rect x="9.3890%" y="629" width="0.1490%" height="15" fill="rgb(223,4,10)"/><text x="9.6390%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="9.3890%" y="613" width="0.1490%" height="15" fill="rgb(234,103,6)"/><text x="9.6390%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="9.3890%" y="597" width="0.1490%" height="15" fill="rgb(227,97,0)"/><text x="9.6390%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="9.3890%" y="581" width="0.1490%" height="15" fill="rgb(234,150,53)"/><text x="9.6390%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.15%)</title><rect x="9.3890%" y="565" width="0.1490%" height="15" fill="rgb(228,201,54)"/><text x="9.6390%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.15%)</title><rect x="9.3890%" y="549" width="0.1490%" height="15" fill="rgb(222,22,37)"/><text x="9.6390%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.15%)</title><rect x="9.3890%" y="533" width="0.1490%" height="15" fill="rgb(237,53,32)"/><text x="9.6390%" y="543.50"></text></g><g><title>__libc_recv (1 samples, 0.15%)</title><rect x="9.3890%" y="517" width="0.1490%" height="15" fill="rgb(233,25,53)"/><text x="9.6390%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="9.3890%" y="501" width="0.1490%" height="15" fill="rgb(210,40,34)"/><text x="9.6390%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="9.3890%" y="485" width="0.1490%" height="15" fill="rgb(241,220,44)"/><text x="9.6390%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.15%)</title><rect x="9.3890%" y="469" width="0.1490%" height="15" fill="rgb(235,28,35)"/><text x="9.6390%" y="479.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.15%)</title><rect x="9.3890%" y="453" width="0.1490%" height="15" fill="rgb(210,56,17)"/><text x="9.6390%" y="463.50"></text></g><g><title>inet_recvmsg (1 samples, 0.15%)</title><rect x="9.3890%" y="437" width="0.1490%" height="15" fill="rgb(224,130,29)"/><text x="9.6390%" y="447.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.15%)</title><rect x="9.3890%" y="421" width="0.1490%" height="15" fill="rgb(235,212,8)"/><text x="9.6390%" y="431.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.15%)</title><rect x="9.3890%" y="405" width="0.1490%" height="15" fill="rgb(223,33,50)"/><text x="9.6390%" y="415.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.15%)</title><rect x="9.3890%" y="389" width="0.1490%" height="15" fill="rgb(219,149,13)"/><text x="9.6390%" y="399.50"></text></g><g><title>ip_output (1 samples, 0.15%)</title><rect x="9.3890%" y="373" width="0.1490%" height="15" fill="rgb(250,156,29)"/><text x="9.6390%" y="383.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.15%)</title><rect x="9.3890%" y="357" width="0.1490%" height="15" fill="rgb(216,193,19)"/><text x="9.6390%" y="367.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="9.3890%" y="341" width="0.1490%" height="15" fill="rgb(216,135,14)"/><text x="9.6390%" y="351.50"></text></g><g><title>do_softirq (1 samples, 0.15%)</title><rect x="9.3890%" y="325" width="0.1490%" height="15" fill="rgb(241,47,5)"/><text x="9.6390%" y="335.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.15%)</title><rect x="9.3890%" y="309" width="0.1490%" height="15" fill="rgb(233,42,35)"/><text x="9.6390%" y="319.50"></text></g><g><title>__do_softirq (1 samples, 0.15%)</title><rect x="9.3890%" y="293" width="0.1490%" height="15" fill="rgb(231,13,6)"/><text x="9.6390%" y="303.50"></text></g><g><title>net_rx_action (1 samples, 0.15%)</title><rect x="9.3890%" y="277" width="0.1490%" height="15" fill="rgb(207,181,40)"/><text x="9.6390%" y="287.50"></text></g><g><title>process_backlog (1 samples, 0.15%)</title><rect x="9.3890%" y="261" width="0.1490%" height="15" fill="rgb(254,173,49)"/><text x="9.6390%" y="271.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="9.3890%" y="245" width="0.1490%" height="15" fill="rgb(221,1,38)"/><text x="9.6390%" y="255.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.30%)</title><rect x="9.3890%" y="725" width="0.2981%" height="15" fill="rgb(206,124,46)"/><text x="9.6390%" y="735.50"></text></g><g><title>decor_mem::Shim::create_schema (2 samples, 0.30%)</title><rect x="9.3890%" y="709" width="0.2981%" height="15" fill="rgb(249,21,11)"/><text x="9.6390%" y="719.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.15%)</title><rect x="9.5380%" y="693" width="0.1490%" height="15" fill="rgb(222,201,40)"/><text x="9.7880%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="9.5380%" y="677" width="0.1490%" height="15" fill="rgb(235,61,29)"/><text x="9.7880%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="9.5380%" y="661" width="0.1490%" height="15" fill="rgb(219,207,3)"/><text x="9.7880%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="9.5380%" y="645" width="0.1490%" height="15" fill="rgb(222,56,46)"/><text x="9.7880%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="9.6870%" y="693" width="0.1490%" height="15" fill="rgb(239,76,54)"/><text x="9.9370%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="9.6870%" y="677" width="0.1490%" height="15" fill="rgb(231,124,27)"/><text x="9.9370%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="9.6870%" y="661" width="0.1490%" height="15" fill="rgb(249,195,6)"/><text x="9.9370%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="9.6870%" y="645" width="0.1490%" height="15" fill="rgb(237,174,47)"/><text x="9.9370%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="9.6870%" y="629" width="0.1490%" height="15" fill="rgb(206,201,31)"/><text x="9.9370%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="9.6870%" y="613" width="0.1490%" height="15" fill="rgb(231,57,52)"/><text x="9.9370%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="9.6870%" y="597" width="0.1490%" height="15" fill="rgb(248,177,22)"/><text x="9.9370%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="9.6870%" y="581" width="0.1490%" height="15" fill="rgb(215,211,37)"/><text x="9.9370%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="9.6870%" y="565" width="0.1490%" height="15" fill="rgb(241,128,51)"/><text x="9.9370%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="9.6870%" y="549" width="0.1490%" height="15" fill="rgb(227,165,31)"/><text x="9.9370%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="9.6870%" y="533" width="0.1490%" height="15" fill="rgb(228,167,24)"/><text x="9.9370%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="9.6870%" y="517" width="0.1490%" height="15" fill="rgb(228,143,12)"/><text x="9.9370%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="9.6870%" y="501" width="0.1490%" height="15" fill="rgb(249,149,8)"/><text x="9.9370%" y="511.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.30%)</title><rect x="9.6870%" y="709" width="0.2981%" height="15" fill="rgb(243,35,44)"/><text x="9.9370%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="9.8361%" y="693" width="0.1490%" height="15" fill="rgb(246,89,9)"/><text x="10.0861%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="9.8361%" y="677" width="0.1490%" height="15" fill="rgb(233,213,13)"/><text x="10.0861%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="10.1341%" y="677" width="0.1490%" height="15" fill="rgb(233,141,41)"/><text x="10.3841%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="10.2832%" y="677" width="0.1490%" height="15" fill="rgb(239,167,4)"/><text x="10.5332%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="10.4322%" y="677" width="0.2981%" height="15" fill="rgb(209,217,16)"/><text x="10.6822%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.30%)</title><rect x="10.4322%" y="661" width="0.2981%" height="15" fill="rgb(219,88,35)"/><text x="10.6822%" y="671.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (11 samples, 1.64%)</title><rect x="9.3890%" y="757" width="1.6393%" height="15" fill="rgb(220,193,23)"/><text x="9.6390%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (11 samples, 1.64%)</title><rect x="9.3890%" y="741" width="1.6393%" height="15" fill="rgb(230,90,52)"/><text x="9.6390%" y="751.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 1.34%)</title><rect x="9.6870%" y="725" width="1.3413%" height="15" fill="rgb(252,106,19)"/><text x="9.9370%" y="735.50"></text></g><g><title>decor_mem::stats::get_qtype (7 samples, 1.04%)</title><rect x="9.9851%" y="709" width="1.0432%" height="15" fill="rgb(206,74,20)"/><text x="10.2351%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (7 samples, 1.04%)</title><rect x="9.9851%" y="693" width="1.0432%" height="15" fill="rgb(230,138,44)"/><text x="10.2351%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.30%)</title><rect x="10.7303%" y="677" width="0.2981%" height="15" fill="rgb(235,182,43)"/><text x="10.9803%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="10.8793%" y="661" width="0.1490%" height="15" fill="rgb(242,16,51)"/><text x="11.1293%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="10.8793%" y="645" width="0.1490%" height="15" fill="rgb(248,9,4)"/><text x="11.1293%" y="655.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (1 samples, 0.15%)</title><rect x="11.0283%" y="741" width="0.1490%" height="15" fill="rgb(210,31,22)"/><text x="11.2783%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (1 samples, 0.15%)</title><rect x="11.0283%" y="725" width="0.1490%" height="15" fill="rgb(239,54,39)"/><text x="11.2783%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="11.1773%" y="709" width="0.1490%" height="15" fill="rgb(230,99,41)"/><text x="11.4273%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="11.1773%" y="693" width="0.1490%" height="15" fill="rgb(253,106,12)"/><text x="11.4273%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="11.1773%" y="677" width="0.1490%" height="15" fill="rgb(213,46,41)"/><text x="11.4273%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (3 samples, 0.45%)</title><rect x="11.0283%" y="757" width="0.4471%" height="15" fill="rgb(215,133,35)"/><text x="11.2783%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::selection_to_datatable_selection (2 samples, 0.30%)</title><rect x="11.1773%" y="741" width="0.2981%" height="15" fill="rgb(213,28,5)"/><text x="11.4273%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (2 samples, 0.30%)</title><rect x="11.1773%" y="725" width="0.2981%" height="15" fill="rgb(215,77,49)"/><text x="11.4273%" y="735.50"></text></g><g><title>decor_mem::helpers::expr_is_ucol (1 samples, 0.15%)</title><rect x="11.3264%" y="709" width="0.1490%" height="15" fill="rgb(248,100,22)"/><text x="11.5764%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="11.3264%" y="693" width="0.1490%" height="15" fill="rgb(208,67,9)"/><text x="11.5764%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="11.3264%" y="677" width="0.1490%" height="15" fill="rgb(219,133,21)"/><text x="11.5764%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="11.3264%" y="661" width="0.1490%" height="15" fill="rgb(246,46,29)"/><text x="11.5764%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="11.3264%" y="645" width="0.1490%" height="15" fill="rgb(246,185,52)"/><text x="11.5764%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="11.3264%" y="629" width="0.1490%" height="15" fill="rgb(252,136,11)"/><text x="11.5764%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="11.3264%" y="613" width="0.1490%" height="15" fill="rgb(219,138,53)"/><text x="11.5764%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="11.3264%" y="597" width="0.1490%" height="15" fill="rgb(211,51,23)"/><text x="11.5764%" y="607.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.15%)</title><rect x="11.4754%" y="757" width="0.1490%" height="15" fill="rgb(247,221,28)"/><text x="11.7254%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.15%)</title><rect x="11.4754%" y="741" width="0.1490%" height="15" fill="rgb(251,222,45)"/><text x="11.7254%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.15%)</title><rect x="11.4754%" y="725" width="0.1490%" height="15" fill="rgb(217,162,53)"/><text x="11.7254%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.15%)</title><rect x="11.4754%" y="709" width="0.1490%" height="15" fill="rgb(229,93,14)"/><text x="11.7254%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.15%)</title><rect x="11.4754%" y="693" width="0.1490%" height="15" fill="rgb(209,67,49)"/><text x="11.7254%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="11.4754%" y="677" width="0.1490%" height="15" fill="rgb(213,87,29)"/><text x="11.7254%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="11.4754%" y="661" width="0.1490%" height="15" fill="rgb(205,151,52)"/><text x="11.7254%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="11.4754%" y="645" width="0.1490%" height="15" fill="rgb(253,215,39)"/><text x="11.7254%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="11.4754%" y="629" width="0.1490%" height="15" fill="rgb(221,220,41)"/><text x="11.7254%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="11.4754%" y="613" width="0.1490%" height="15" fill="rgb(218,133,21)"/><text x="11.7254%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="11.4754%" y="597" width="0.1490%" height="15" fill="rgb(221,193,43)"/><text x="11.7254%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="11.4754%" y="581" width="0.1490%" height="15" fill="rgb(240,128,52)"/><text x="11.7254%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="11.4754%" y="565" width="0.1490%" height="15" fill="rgb(253,114,12)"/><text x="11.7254%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="11.4754%" y="549" width="0.1490%" height="15" fill="rgb(215,223,47)"/><text x="11.7254%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="11.4754%" y="533" width="0.1490%" height="15" fill="rgb(248,225,23)"/><text x="11.7254%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="11.4754%" y="517" width="0.1490%" height="15" fill="rgb(250,108,0)"/><text x="11.7254%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="11.4754%" y="501" width="0.1490%" height="15" fill="rgb(228,208,7)"/><text x="11.7254%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="11.4754%" y="485" width="0.1490%" height="15" fill="rgb(244,45,10)"/><text x="11.7254%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="11.4754%" y="469" width="0.1490%" height="15" fill="rgb(207,125,25)"/><text x="11.7254%" y="479.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.15%)</title><rect x="11.6244%" y="741" width="0.1490%" height="15" fill="rgb(210,195,18)"/><text x="11.8744%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="11.6244%" y="725" width="0.1490%" height="15" fill="rgb(249,80,12)"/><text x="11.8744%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="11.6244%" y="709" width="0.1490%" height="15" fill="rgb(221,65,9)"/><text x="11.8744%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="11.6244%" y="693" width="0.1490%" height="15" fill="rgb(235,49,36)"/><text x="11.8744%" y="703.50"></text></g><g><title>dlopen (1 samples, 0.15%)</title><rect x="11.6244%" y="677" width="0.1490%" height="15" fill="rgb(225,32,20)"/><text x="11.8744%" y="687.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="11.6244%" y="661" width="0.1490%" height="15" fill="rgb(215,141,46)"/><text x="11.8744%" y="671.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.15%)</title><rect x="11.6244%" y="645" width="0.1490%" height="15" fill="rgb(250,160,47)"/><text x="11.8744%" y="655.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="11.6244%" y="629" width="0.1490%" height="15" fill="rgb(216,222,40)"/><text x="11.8744%" y="639.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="11.6244%" y="613" width="0.1490%" height="15" fill="rgb(234,217,39)"/><text x="11.8744%" y="623.50"></text></g><g><title>_dl_open (1 samples, 0.15%)</title><rect x="11.6244%" y="597" width="0.1490%" height="15" fill="rgb(207,178,40)"/><text x="11.8744%" y="607.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="11.6244%" y="581" width="0.1490%" height="15" fill="rgb(221,136,13)"/><text x="11.8744%" y="591.50"></text></g><g><title>dl_open_worker (1 samples, 0.15%)</title><rect x="11.6244%" y="565" width="0.1490%" height="15" fill="rgb(249,199,10)"/><text x="11.8744%" y="575.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.15%)</title><rect x="11.6244%" y="549" width="0.1490%" height="15" fill="rgb(249,222,13)"/><text x="11.8744%" y="559.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.15%)</title><rect x="11.6244%" y="533" width="0.1490%" height="15" fill="rgb(244,185,38)"/><text x="11.8744%" y="543.50"></text></g><g><title>do_lookup_x (1 samples, 0.15%)</title><rect x="11.6244%" y="517" width="0.1490%" height="15" fill="rgb(236,202,9)"/><text x="11.8744%" y="527.50"></text></g><g><title>strcmp (1 samples, 0.15%)</title><rect x="11.6244%" y="501" width="0.1490%" height="15" fill="rgb(250,229,37)"/><text x="11.8744%" y="511.50"></text></g><g><title>lobsters_microbenchmarks::init_database (1 samples, 0.15%)</title><rect x="11.7735%" y="741" width="0.1490%" height="15" fill="rgb(206,174,23)"/><text x="12.0235%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="11.7735%" y="725" width="0.1490%" height="15" fill="rgb(211,33,43)"/><text x="12.0235%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="11.7735%" y="709" width="0.1490%" height="15" fill="rgb(245,58,50)"/><text x="12.0235%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.15%)</title><rect x="11.7735%" y="693" width="0.1490%" height="15" fill="rgb(244,68,36)"/><text x="12.0235%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.15%)</title><rect x="11.7735%" y="677" width="0.1490%" height="15" fill="rgb(232,229,15)"/><text x="12.0235%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="11.7735%" y="661" width="0.1490%" height="15" fill="rgb(254,30,23)"/><text x="12.0235%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.15%)</title><rect x="11.7735%" y="645" width="0.1490%" height="15" fill="rgb(235,160,14)"/><text x="12.0235%" y="655.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="11.7735%" y="629" width="0.1490%" height="15" fill="rgb(212,155,44)"/><text x="12.0235%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="11.7735%" y="613" width="0.1490%" height="15" fill="rgb(226,2,50)"/><text x="12.0235%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="11.7735%" y="597" width="0.1490%" height="15" fill="rgb(234,177,6)"/><text x="12.0235%" y="607.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="11.7735%" y="581" width="0.1490%" height="15" fill="rgb(217,24,9)"/><text x="12.0235%" y="591.50"></text></g><g><title>__sys_sendto (1 samples, 0.15%)</title><rect x="11.7735%" y="565" width="0.1490%" height="15" fill="rgb(220,13,46)"/><text x="12.0235%" y="575.50"></text></g><g><title>sock_sendmsg (1 samples, 0.15%)</title><rect x="11.7735%" y="549" width="0.1490%" height="15" fill="rgb(239,221,27)"/><text x="12.0235%" y="559.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.15%)</title><rect x="11.7735%" y="533" width="0.1490%" height="15" fill="rgb(222,198,25)"/><text x="12.0235%" y="543.50"></text></g><g><title>release_sock (1 samples, 0.15%)</title><rect x="11.7735%" y="517" width="0.1490%" height="15" fill="rgb(211,99,13)"/><text x="12.0235%" y="527.50"></text></g><g><title>__release_sock (1 samples, 0.15%)</title><rect x="11.7735%" y="501" width="0.1490%" height="15" fill="rgb(232,111,31)"/><text x="12.0235%" y="511.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.15%)</title><rect x="11.7735%" y="485" width="0.1490%" height="15" fill="rgb(245,82,37)"/><text x="12.0235%" y="495.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.15%)</title><rect x="11.7735%" y="469" width="0.1490%" height="15" fill="rgb(227,149,46)"/><text x="12.0235%" y="479.50"></text></g><g><title>tcp_ack (1 samples, 0.15%)</title><rect x="11.7735%" y="453" width="0.1490%" height="15" fill="rgb(218,36,50)"/><text x="12.0235%" y="463.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.15%)</title><rect x="11.7735%" y="437" width="0.1490%" height="15" fill="rgb(226,80,48)"/><text x="12.0235%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="12.0715%" y="437" width="0.1490%" height="15" fill="rgb(238,224,15)"/><text x="12.3215%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="12.0715%" y="421" width="0.1490%" height="15" fill="rgb(241,136,10)"/><text x="12.3215%" y="431.50"></text></g><g><title>in_lock_functions (1 samples, 0.15%)</title><rect x="12.0715%" y="405" width="0.1490%" height="15" fill="rgb(208,32,45)"/><text x="12.3215%" y="415.50"></text></g><g><title>remove_wait_queue (1 samples, 0.15%)</title><rect x="12.2206%" y="437" width="0.1490%" height="15" fill="rgb(207,135,9)"/><text x="12.4706%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="12.2206%" y="421" width="0.1490%" height="15" fill="rgb(206,86,44)"/><text x="12.4706%" y="431.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="12.2206%" y="405" width="0.1490%" height="15" fill="rgb(245,177,15)"/><text x="12.4706%" y="415.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.15%)</title><rect x="12.5186%" y="373" width="0.1490%" height="15" fill="rgb(206,64,50)"/><text x="12.7686%" y="383.50"></text></g><g><title>dequeue_entity (1 samples, 0.15%)</title><rect x="12.5186%" y="357" width="0.1490%" height="15" fill="rgb(234,36,40)"/><text x="12.7686%" y="367.50"></text></g><g><title>finish_task_switch (1 samples, 0.15%)</title><rect x="12.6677%" y="373" width="0.1490%" height="15" fill="rgb(213,64,8)"/><text x="12.9177%" y="383.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.15%)</title><rect x="12.8167%" y="373" width="0.1490%" height="15" fill="rgb(210,75,36)"/><text x="13.0667%" y="383.50"></text></g><g><title>newidle_balance (1 samples, 0.15%)</title><rect x="12.8167%" y="357" width="0.1490%" height="15" fill="rgb(229,88,21)"/><text x="13.0667%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.15%)</title><rect x="12.8167%" y="341" width="0.1490%" height="15" fill="rgb(252,204,47)"/><text x="13.0667%" y="351.50"></text></g><g><title>sk_wait_data (7 samples, 1.04%)</title><rect x="12.0715%" y="453" width="1.0432%" height="15" fill="rgb(208,77,27)"/><text x="12.3215%" y="463.50"></text></g><g><title>wait_woken (5 samples, 0.75%)</title><rect x="12.3696%" y="437" width="0.7452%" height="15" fill="rgb(221,76,26)"/><text x="12.6196%" y="447.50"></text></g><g><title>schedule_timeout (5 samples, 0.75%)</title><rect x="12.3696%" y="421" width="0.7452%" height="15" fill="rgb(225,139,18)"/><text x="12.6196%" y="431.50"></text></g><g><title>schedule (5 samples, 0.75%)</title><rect x="12.3696%" y="405" width="0.7452%" height="15" fill="rgb(230,137,11)"/><text x="12.6196%" y="415.50"></text></g><g><title>__schedule (5 samples, 0.75%)</title><rect x="12.3696%" y="389" width="0.7452%" height="15" fill="rgb(212,28,1)"/><text x="12.6196%" y="399.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.15%)</title><rect x="12.9657%" y="373" width="0.1490%" height="15" fill="rgb(248,164,17)"/><text x="13.2157%" y="383.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 1.34%)</title><rect x="11.9225%" y="517" width="1.3413%" height="15" fill="rgb(222,171,42)"/><text x="12.1725%" y="527.50"></text></g><g><title>__sys_recvfrom (9 samples, 1.34%)</title><rect x="11.9225%" y="501" width="1.3413%" height="15" fill="rgb(243,84,45)"/><text x="12.1725%" y="511.50"></text></g><g><title>inet_recvmsg (8 samples, 1.19%)</title><rect x="12.0715%" y="485" width="1.1923%" height="15" fill="rgb(252,49,23)"/><text x="12.3215%" y="495.50"></text></g><g><title>tcp_recvmsg (8 samples, 1.19%)</title><rect x="12.0715%" y="469" width="1.1923%" height="15" fill="rgb(215,19,7)"/><text x="12.3215%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.15%)</title><rect x="13.1148%" y="453" width="0.1490%" height="15" fill="rgb(238,81,41)"/><text x="13.3648%" y="463.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.15%)</title><rect x="13.1148%" y="437" width="0.1490%" height="15" fill="rgb(210,199,37)"/><text x="13.3648%" y="447.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.15%)</title><rect x="13.1148%" y="421" width="0.1490%" height="15" fill="rgb(244,192,49)"/><text x="13.3648%" y="431.50"></text></g><g><title>__check_object_size (1 samples, 0.15%)</title><rect x="13.1148%" y="405" width="0.1490%" height="15" fill="rgb(226,211,11)"/><text x="13.3648%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 1.49%)</title><rect x="11.9225%" y="549" width="1.4903%" height="15" fill="rgb(236,162,54)"/><text x="12.1725%" y="559.50"></text></g><g><title>do_syscall_64 (10 samples, 1.49%)</title><rect x="11.9225%" y="533" width="1.4903%" height="15" fill="rgb(220,229,9)"/><text x="12.1725%" y="543.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="13.2638%" y="517" width="0.1490%" height="15" fill="rgb(250,87,22)"/><text x="13.5138%" y="527.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="13.2638%" y="501" width="0.1490%" height="15" fill="rgb(239,43,17)"/><text x="13.5138%" y="511.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (11 samples, 1.64%)</title><rect x="11.9225%" y="693" width="1.6393%" height="15" fill="rgb(231,177,25)"/><text x="12.1725%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 1.64%)</title><rect x="11.9225%" y="677" width="1.6393%" height="15" fill="rgb(219,179,1)"/><text x="12.1725%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.64%)</title><rect x="11.9225%" y="661" width="1.6393%" height="15" fill="rgb(238,219,53)"/><text x="12.1725%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 1.64%)</title><rect x="11.9225%" y="645" width="1.6393%" height="15" fill="rgb(232,167,36)"/><text x="12.1725%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 1.64%)</title><rect x="11.9225%" y="629" width="1.6393%" height="15" fill="rgb(244,19,51)"/><text x="12.1725%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 1.64%)</title><rect x="11.9225%" y="613" width="1.6393%" height="15" fill="rgb(224,6,22)"/><text x="12.1725%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 1.64%)</title><rect x="11.9225%" y="597" width="1.6393%" height="15" fill="rgb(224,145,5)"/><text x="12.1725%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 1.64%)</title><rect x="11.9225%" y="581" width="1.6393%" height="15" fill="rgb(234,130,49)"/><text x="12.1725%" y="591.50"></text></g><g><title>__libc_recv (11 samples, 1.64%)</title><rect x="11.9225%" y="565" width="1.6393%" height="15" fill="rgb(254,6,2)"/><text x="12.1725%" y="575.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="13.4128%" y="549" width="0.1490%" height="15" fill="rgb(208,96,46)"/><text x="13.6628%" y="559.50"></text></g><g><title>__ip_finish_output (1 samples, 0.15%)</title><rect x="13.7109%" y="421" width="0.1490%" height="15" fill="rgb(239,3,39)"/><text x="13.9609%" y="431.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.15%)</title><rect x="13.8599%" y="405" width="0.1490%" height="15" fill="rgb(233,210,1)"/><text x="14.1099%" y="415.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="13.8599%" y="389" width="0.1490%" height="15" fill="rgb(244,137,37)"/><text x="14.1099%" y="399.50"></text></g><g><title>loopback_xmit (1 samples, 0.15%)</title><rect x="13.8599%" y="373" width="0.1490%" height="15" fill="rgb(240,136,2)"/><text x="14.1099%" y="383.50"></text></g><g><title>tcp_wfree (1 samples, 0.15%)</title><rect x="13.8599%" y="357" width="0.1490%" height="15" fill="rgb(239,18,37)"/><text x="14.1099%" y="367.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="14.0089%" y="213" width="0.1490%" height="15" fill="rgb(218,185,22)"/><text x="14.2589%" y="223.50"></text></g><g><title>inet_ehashfn (1 samples, 0.15%)</title><rect x="14.0089%" y="197" width="0.1490%" height="15" fill="rgb(225,218,4)"/><text x="14.2589%" y="207.50"></text></g><g><title>psi_flags_change (1 samples, 0.15%)</title><rect x="14.3070%" y="85" width="0.1490%" height="15" fill="rgb(230,182,32)"/><text x="14.5570%" y="95.50"></text></g><g><title>psi_task_change (2 samples, 0.30%)</title><rect x="14.3070%" y="101" width="0.2981%" height="15" fill="rgb(242,56,43)"/><text x="14.5570%" y="111.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="14.4560%" y="85" width="0.1490%" height="15" fill="rgb(233,99,24)"/><text x="14.7060%" y="95.50"></text></g><g><title>enqueue_task (3 samples, 0.45%)</title><rect x="14.3070%" y="117" width="0.4471%" height="15" fill="rgb(234,209,42)"/><text x="14.5570%" y="127.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.15%)</title><rect x="14.6051%" y="101" width="0.1490%" height="15" fill="rgb(227,7,12)"/><text x="14.8551%" y="111.50"></text></g><g><title>sock_def_readable (5 samples, 0.75%)</title><rect x="14.1580%" y="181" width="0.7452%" height="15" fill="rgb(245,203,43)"/><text x="14.4080%" y="191.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.75%)</title><rect x="14.1580%" y="165" width="0.7452%" height="15" fill="rgb(238,205,33)"/><text x="14.4080%" y="175.50"></text></g><g><title>__wake_up_common (5 samples, 0.75%)</title><rect x="14.1580%" y="149" width="0.7452%" height="15" fill="rgb(231,56,7)"/><text x="14.4080%" y="159.50"></text></g><g><title>try_to_wake_up (5 samples, 0.75%)</title><rect x="14.1580%" y="133" width="0.7452%" height="15" fill="rgb(244,186,29)"/><text x="14.4080%" y="143.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.15%)</title><rect x="14.7541%" y="117" width="0.1490%" height="15" fill="rgb(234,111,31)"/><text x="15.0041%" y="127.50"></text></g><g><title>check_preempt_curr (1 samples, 0.15%)</title><rect x="14.7541%" y="101" width="0.1490%" height="15" fill="rgb(241,149,10)"/><text x="15.0041%" y="111.50"></text></g><g><title>resched_curr (1 samples, 0.15%)</title><rect x="14.7541%" y="85" width="0.1490%" height="15" fill="rgb(249,206,44)"/><text x="15.0041%" y="95.50"></text></g><g><title>do_syscall_64 (9 samples, 1.34%)</title><rect x="13.7109%" y="597" width="1.3413%" height="15" fill="rgb(251,153,30)"/><text x="13.9609%" y="607.50"></text></g><g><title>__x64_sys_sendto (9 samples, 1.34%)</title><rect x="13.7109%" y="581" width="1.3413%" height="15" fill="rgb(239,152,38)"/><text x="13.9609%" y="591.50"></text></g><g><title>__sys_sendto (9 samples, 1.34%)</title><rect x="13.7109%" y="565" width="1.3413%" height="15" fill="rgb(249,139,47)"/><text x="13.9609%" y="575.50"></text></g><g><title>sock_sendmsg (9 samples, 1.34%)</title><rect x="13.7109%" y="549" width="1.3413%" height="15" fill="rgb(244,64,35)"/><text x="13.9609%" y="559.50"></text></g><g><title>tcp_sendmsg (9 samples, 1.34%)</title><rect x="13.7109%" y="533" width="1.3413%" height="15" fill="rgb(216,46,15)"/><text x="13.9609%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (9 samples, 1.34%)</title><rect x="13.7109%" y="517" width="1.3413%" height="15" fill="rgb(250,74,19)"/><text x="13.9609%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (9 samples, 1.34%)</title><rect x="13.7109%" y="501" width="1.3413%" height="15" fill="rgb(249,42,33)"/><text x="13.9609%" y="511.50"></text></g><g><title>tcp_write_xmit (9 samples, 1.34%)</title><rect x="13.7109%" y="485" width="1.3413%" height="15" fill="rgb(242,149,17)"/><text x="13.9609%" y="495.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 1.34%)</title><rect x="13.7109%" y="469" width="1.3413%" height="15" fill="rgb(244,29,21)"/><text x="13.9609%" y="479.50"></text></g><g><title>__ip_queue_xmit (9 samples, 1.34%)</title><rect x="13.7109%" y="453" width="1.3413%" height="15" fill="rgb(220,130,37)"/><text x="13.9609%" y="463.50"></text></g><g><title>ip_output (9 samples, 1.34%)</title><rect x="13.7109%" y="437" width="1.3413%" height="15" fill="rgb(211,67,2)"/><text x="13.9609%" y="447.50"></text></g><g><title>ip_finish_output2 (8 samples, 1.19%)</title><rect x="13.8599%" y="421" width="1.1923%" height="15" fill="rgb(235,68,52)"/><text x="14.1099%" y="431.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 1.04%)</title><rect x="14.0089%" y="405" width="1.0432%" height="15" fill="rgb(246,142,3)"/><text x="14.2589%" y="415.50"></text></g><g><title>do_softirq (7 samples, 1.04%)</title><rect x="14.0089%" y="389" width="1.0432%" height="15" fill="rgb(241,25,7)"/><text x="14.2589%" y="399.50"></text></g><g><title>do_softirq_own_stack (7 samples, 1.04%)</title><rect x="14.0089%" y="373" width="1.0432%" height="15" fill="rgb(242,119,39)"/><text x="14.2589%" y="383.50"></text></g><g><title>__do_softirq (7 samples, 1.04%)</title><rect x="14.0089%" y="357" width="1.0432%" height="15" fill="rgb(241,98,45)"/><text x="14.2589%" y="367.50"></text></g><g><title>net_rx_action (7 samples, 1.04%)</title><rect x="14.0089%" y="341" width="1.0432%" height="15" fill="rgb(254,28,30)"/><text x="14.2589%" y="351.50"></text></g><g><title>process_backlog (7 samples, 1.04%)</title><rect x="14.0089%" y="325" width="1.0432%" height="15" fill="rgb(241,142,54)"/><text x="14.2589%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 1.04%)</title><rect x="14.0089%" y="309" width="1.0432%" height="15" fill="rgb(222,85,15)"/><text x="14.2589%" y="319.50"></text></g><g><title>ip_rcv (7 samples, 1.04%)</title><rect x="14.0089%" y="293" width="1.0432%" height="15" fill="rgb(210,85,47)"/><text x="14.2589%" y="303.50"></text></g><g><title>ip_local_deliver (7 samples, 1.04%)</title><rect x="14.0089%" y="277" width="1.0432%" height="15" fill="rgb(224,206,25)"/><text x="14.2589%" y="287.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 1.04%)</title><rect x="14.0089%" y="261" width="1.0432%" height="15" fill="rgb(243,201,19)"/><text x="14.2589%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 1.04%)</title><rect x="14.0089%" y="245" width="1.0432%" height="15" fill="rgb(236,59,4)"/><text x="14.2589%" y="255.50"></text></g><g><title>tcp_v4_rcv (7 samples, 1.04%)</title><rect x="14.0089%" y="229" width="1.0432%" height="15" fill="rgb(254,179,45)"/><text x="14.2589%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.89%)</title><rect x="14.1580%" y="213" width="0.8942%" height="15" fill="rgb(226,14,10)"/><text x="14.4080%" y="223.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.89%)</title><rect x="14.1580%" y="197" width="0.8942%" height="15" fill="rgb(244,27,41)"/><text x="14.4080%" y="207.50"></text></g><g><title>tcp_ack (1 samples, 0.15%)</title><rect x="14.9031%" y="181" width="0.1490%" height="15" fill="rgb(235,35,32)"/><text x="15.1531%" y="191.50"></text></g><g><title>lobsters_microbenchmarks::main (24 samples, 3.58%)</title><rect x="11.6244%" y="757" width="3.5768%" height="15" fill="rgb(218,68,31)"/><text x="11.8744%" y="767.50">lobs..</text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (22 samples, 3.28%)</title><rect x="11.9225%" y="741" width="3.2787%" height="15" fill="rgb(207,120,37)"/><text x="12.1725%" y="751.50">lob..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (22 samples, 3.28%)</title><rect x="11.9225%" y="725" width="3.2787%" height="15" fill="rgb(227,98,0)"/><text x="12.1725%" y="735.50">&lt;my..</text></g><g><title>mysql::conn::Conn::_query (22 samples, 3.28%)</title><rect x="11.9225%" y="709" width="3.2787%" height="15" fill="rgb(207,7,3)"/><text x="12.1725%" y="719.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (11 samples, 1.64%)</title><rect x="13.5618%" y="693" width="1.6393%" height="15" fill="rgb(206,98,19)"/><text x="13.8118%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (11 samples, 1.64%)</title><rect x="13.5618%" y="677" width="1.6393%" height="15" fill="rgb(217,5,26)"/><text x="13.8118%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (11 samples, 1.64%)</title><rect x="13.5618%" y="661" width="1.6393%" height="15" fill="rgb(235,190,38)"/><text x="13.8118%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (11 samples, 1.64%)</title><rect x="13.5618%" y="645" width="1.6393%" height="15" fill="rgb(247,86,24)"/><text x="13.8118%" y="655.50"></text></g><g><title>__libc_send (11 samples, 1.64%)</title><rect x="13.5618%" y="629" width="1.6393%" height="15" fill="rgb(205,101,16)"/><text x="13.8118%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 1.64%)</title><rect x="13.5618%" y="613" width="1.6393%" height="15" fill="rgb(246,168,33)"/><text x="13.8118%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="15.0522%" y="597" width="0.1490%" height="15" fill="rgb(231,114,1)"/><text x="15.3022%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.15%)</title><rect x="15.2012%" y="693" width="0.1490%" height="15" fill="rgb(207,184,53)"/><text x="15.4512%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="15.2012%" y="677" width="0.1490%" height="15" fill="rgb(224,95,51)"/><text x="15.4512%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.15%)</title><rect x="15.2012%" y="661" width="0.1490%" height="15" fill="rgb(212,188,45)"/><text x="15.4512%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.15%)</title><rect x="15.2012%" y="645" width="0.1490%" height="15" fill="rgb(223,154,38)"/><text x="15.4512%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="15.2012%" y="629" width="0.1490%" height="15" fill="rgb(251,22,52)"/><text x="15.4512%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.15%)</title><rect x="15.2012%" y="613" width="0.1490%" height="15" fill="rgb(229,209,22)"/><text x="15.4512%" y="623.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="15.2012%" y="597" width="0.1490%" height="15" fill="rgb(234,138,34)"/><text x="15.4512%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="15.2012%" y="581" width="0.1490%" height="15" fill="rgb(212,95,11)"/><text x="15.4512%" y="591.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="15.2012%" y="565" width="0.1490%" height="15" fill="rgb(240,179,47)"/><text x="15.4512%" y="575.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="15.2012%" y="549" width="0.1490%" height="15" fill="rgb(240,163,11)"/><text x="15.4512%" y="559.50"></text></g><g><title>__sys_sendto (1 samples, 0.15%)</title><rect x="15.2012%" y="533" width="0.1490%" height="15" fill="rgb(236,37,12)"/><text x="15.4512%" y="543.50"></text></g><g><title>sock_sendmsg (1 samples, 0.15%)</title><rect x="15.2012%" y="517" width="0.1490%" height="15" fill="rgb(232,164,16)"/><text x="15.4512%" y="527.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.15%)</title><rect x="15.2012%" y="501" width="0.1490%" height="15" fill="rgb(244,205,15)"/><text x="15.4512%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.15%)</title><rect x="15.2012%" y="485" width="0.1490%" height="15" fill="rgb(223,117,47)"/><text x="15.4512%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.15%)</title><rect x="15.2012%" y="469" width="0.1490%" height="15" fill="rgb(244,107,35)"/><text x="15.4512%" y="479.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.15%)</title><rect x="15.2012%" y="453" width="0.1490%" height="15" fill="rgb(205,140,8)"/><text x="15.4512%" y="463.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.15%)</title><rect x="15.2012%" y="437" width="0.1490%" height="15" fill="rgb(228,84,46)"/><text x="15.4512%" y="447.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.15%)</title><rect x="15.2012%" y="421" width="0.1490%" height="15" fill="rgb(254,188,9)"/><text x="15.4512%" y="431.50"></text></g><g><title>ip_output (1 samples, 0.15%)</title><rect x="15.2012%" y="405" width="0.1490%" height="15" fill="rgb(206,112,54)"/><text x="15.4512%" y="415.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.15%)</title><rect x="15.2012%" y="389" width="0.1490%" height="15" fill="rgb(216,84,49)"/><text x="15.4512%" y="399.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="15.2012%" y="373" width="0.1490%" height="15" fill="rgb(214,194,35)"/><text x="15.4512%" y="383.50"></text></g><g><title>do_softirq (1 samples, 0.15%)</title><rect x="15.2012%" y="357" width="0.1490%" height="15" fill="rgb(249,28,3)"/><text x="15.4512%" y="367.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.15%)</title><rect x="15.2012%" y="341" width="0.1490%" height="15" fill="rgb(222,56,52)"/><text x="15.4512%" y="351.50"></text></g><g><title>__do_softirq (1 samples, 0.15%)</title><rect x="15.2012%" y="325" width="0.1490%" height="15" fill="rgb(245,217,50)"/><text x="15.4512%" y="335.50"></text></g><g><title>net_rx_action (1 samples, 0.15%)</title><rect x="15.2012%" y="309" width="0.1490%" height="15" fill="rgb(213,201,24)"/><text x="15.4512%" y="319.50"></text></g><g><title>process_backlog (1 samples, 0.15%)</title><rect x="15.2012%" y="293" width="0.1490%" height="15" fill="rgb(248,116,28)"/><text x="15.4512%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.15%)</title><rect x="15.2012%" y="277" width="0.1490%" height="15" fill="rgb(219,72,43)"/><text x="15.4512%" y="287.50"></text></g><g><title>ip_rcv (1 samples, 0.15%)</title><rect x="15.2012%" y="261" width="0.1490%" height="15" fill="rgb(209,138,14)"/><text x="15.4512%" y="271.50"></text></g><g><title>ip_local_deliver (1 samples, 0.15%)</title><rect x="15.2012%" y="245" width="0.1490%" height="15" fill="rgb(222,18,33)"/><text x="15.4512%" y="255.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.15%)</title><rect x="15.2012%" y="229" width="0.1490%" height="15" fill="rgb(213,199,7)"/><text x="15.4512%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.15%)</title><rect x="15.2012%" y="213" width="0.1490%" height="15" fill="rgb(250,110,10)"/><text x="15.4512%" y="223.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.15%)</title><rect x="15.2012%" y="197" width="0.1490%" height="15" fill="rgb(248,123,6)"/><text x="15.4512%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.15%)</title><rect x="15.2012%" y="181" width="0.1490%" height="15" fill="rgb(206,91,31)"/><text x="15.4512%" y="191.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.15%)</title><rect x="15.2012%" y="165" width="0.1490%" height="15" fill="rgb(211,154,13)"/><text x="15.4512%" y="175.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.15%)</title><rect x="15.2012%" y="149" width="0.1490%" height="15" fill="rgb(225,148,7)"/><text x="15.4512%" y="159.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (2 samples, 0.30%)</title><rect x="15.2012%" y="709" width="0.2981%" height="15" fill="rgb(220,160,43)"/><text x="15.4512%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="15.3502%" y="693" width="0.1490%" height="15" fill="rgb(213,52,39)"/><text x="15.6002%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="15.3502%" y="677" width="0.1490%" height="15" fill="rgb(243,137,7)"/><text x="15.6002%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="15.3502%" y="661" width="0.1490%" height="15" fill="rgb(230,79,13)"/><text x="15.6002%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::IndexDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="15.3502%" y="645" width="0.1490%" height="15" fill="rgb(247,105,23)"/><text x="15.6002%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="15.3502%" y="629" width="0.1490%" height="15" fill="rgb(223,179,41)"/><text x="15.6002%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="15.3502%" y="613" width="0.1490%" height="15" fill="rgb(218,9,34)"/><text x="15.6002%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="15.3502%" y="597" width="0.1490%" height="15" fill="rgb(222,106,8)"/><text x="15.6002%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="15.3502%" y="581" width="0.1490%" height="15" fill="rgb(211,220,0)"/><text x="15.6002%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="15.3502%" y="565" width="0.1490%" height="15" fill="rgb(229,52,16)"/><text x="15.6002%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="15.3502%" y="549" width="0.1490%" height="15" fill="rgb(212,155,18)"/><text x="15.6002%" y="559.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.45%)</title><rect x="15.2012%" y="741" width="0.4471%" height="15" fill="rgb(242,21,14)"/><text x="15.4512%" y="751.50"></text></g><g><title>decor_mem::Shim::create_schema (3 samples, 0.45%)</title><rect x="15.2012%" y="725" width="0.4471%" height="15" fill="rgb(222,19,48)"/><text x="15.4512%" y="735.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.15%)</title><rect x="15.4993%" y="709" width="0.1490%" height="15" fill="rgb(232,45,27)"/><text x="15.7493%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.15%)</title><rect x="15.4993%" y="693" width="0.1490%" height="15" fill="rgb(249,103,42)"/><text x="15.7493%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.15%)</title><rect x="15.4993%" y="677" width="0.1490%" height="15" fill="rgb(246,81,33)"/><text x="15.7493%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.15%)</title><rect x="15.4993%" y="661" width="0.1490%" height="15" fill="rgb(252,33,42)"/><text x="15.7493%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.15%)</title><rect x="15.4993%" y="645" width="0.1490%" height="15" fill="rgb(209,212,41)"/><text x="15.7493%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="15.4993%" y="629" width="0.1490%" height="15" fill="rgb(207,154,6)"/><text x="15.7493%" y="639.50"></text></g><g><title>__rdl_realloc (1 samples, 0.15%)</title><rect x="15.4993%" y="613" width="0.1490%" height="15" fill="rgb(223,64,47)"/><text x="15.7493%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.15%)</title><rect x="15.4993%" y="597" width="0.1490%" height="15" fill="rgb(211,161,38)"/><text x="15.7493%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="15.6483%" y="693" width="0.2981%" height="15" fill="rgb(219,138,40)"/><text x="15.8983%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="15.7973%" y="677" width="0.1490%" height="15" fill="rgb(241,228,46)"/><text x="16.0473%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="15.7973%" y="661" width="0.1490%" height="15" fill="rgb(223,209,38)"/><text x="16.0473%" y="671.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.15%)</title><rect x="16.0954%" y="341" width="0.1490%" height="15" fill="rgb(236,164,45)"/><text x="16.3454%" y="351.50"></text></g><g><title>ctx_sched_out (1 samples, 0.15%)</title><rect x="16.0954%" y="325" width="0.1490%" height="15" fill="rgb(231,15,5)"/><text x="16.3454%" y="335.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.15%)</title><rect x="16.0954%" y="309" width="0.1490%" height="15" fill="rgb(252,35,15)"/><text x="16.3454%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="16.2444%" y="341" width="0.1490%" height="15" fill="rgb(248,181,18)"/><text x="16.4944%" y="351.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.30%)</title><rect x="16.3934%" y="341" width="0.2981%" height="15" fill="rgb(233,39,42)"/><text x="16.6434%" y="351.50"></text></g><g><title>dequeue_entity (2 samples, 0.30%)</title><rect x="16.3934%" y="325" width="0.2981%" height="15" fill="rgb(238,110,33)"/><text x="16.6434%" y="335.50"></text></g><g><title>do_syscall_64 (6 samples, 0.89%)</title><rect x="15.9463%" y="501" width="0.8942%" height="15" fill="rgb(233,195,10)"/><text x="16.1963%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.89%)</title><rect x="15.9463%" y="485" width="0.8942%" height="15" fill="rgb(254,105,3)"/><text x="16.1963%" y="495.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.89%)</title><rect x="15.9463%" y="469" width="0.8942%" height="15" fill="rgb(221,225,9)"/><text x="16.1963%" y="479.50"></text></g><g><title>inet_recvmsg (6 samples, 0.89%)</title><rect x="15.9463%" y="453" width="0.8942%" height="15" fill="rgb(224,227,45)"/><text x="16.1963%" y="463.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.89%)</title><rect x="15.9463%" y="437" width="0.8942%" height="15" fill="rgb(229,198,43)"/><text x="16.1963%" y="447.50"></text></g><g><title>sk_wait_data (6 samples, 0.89%)</title><rect x="15.9463%" y="421" width="0.8942%" height="15" fill="rgb(206,209,35)"/><text x="16.1963%" y="431.50"></text></g><g><title>wait_woken (6 samples, 0.89%)</title><rect x="15.9463%" y="405" width="0.8942%" height="15" fill="rgb(245,195,53)"/><text x="16.1963%" y="415.50"></text></g><g><title>schedule_timeout (5 samples, 0.75%)</title><rect x="16.0954%" y="389" width="0.7452%" height="15" fill="rgb(240,92,26)"/><text x="16.3454%" y="399.50"></text></g><g><title>schedule (5 samples, 0.75%)</title><rect x="16.0954%" y="373" width="0.7452%" height="15" fill="rgb(207,40,23)"/><text x="16.3454%" y="383.50"></text></g><g><title>__schedule (5 samples, 0.75%)</title><rect x="16.0954%" y="357" width="0.7452%" height="15" fill="rgb(223,111,35)"/><text x="16.3454%" y="367.50"></text></g><g><title>finish_task_switch (1 samples, 0.15%)</title><rect x="16.6915%" y="341" width="0.1490%" height="15" fill="rgb(229,147,28)"/><text x="16.9415%" y="351.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (7 samples, 1.04%)</title><rect x="15.9463%" y="661" width="1.0432%" height="15" fill="rgb(211,29,28)"/><text x="16.1963%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (7 samples, 1.04%)</title><rect x="15.9463%" y="645" width="1.0432%" height="15" fill="rgb(228,72,33)"/><text x="16.1963%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.04%)</title><rect x="15.9463%" y="629" width="1.0432%" height="15" fill="rgb(205,214,31)"/><text x="16.1963%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (7 samples, 1.04%)</title><rect x="15.9463%" y="613" width="1.0432%" height="15" fill="rgb(224,111,15)"/><text x="16.1963%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (7 samples, 1.04%)</title><rect x="15.9463%" y="597" width="1.0432%" height="15" fill="rgb(253,21,26)"/><text x="16.1963%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (7 samples, 1.04%)</title><rect x="15.9463%" y="581" width="1.0432%" height="15" fill="rgb(245,139,43)"/><text x="16.1963%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (7 samples, 1.04%)</title><rect x="15.9463%" y="565" width="1.0432%" height="15" fill="rgb(252,170,7)"/><text x="16.1963%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (7 samples, 1.04%)</title><rect x="15.9463%" y="549" width="1.0432%" height="15" fill="rgb(231,118,14)"/><text x="16.1963%" y="559.50"></text></g><g><title>__libc_recv (7 samples, 1.04%)</title><rect x="15.9463%" y="533" width="1.0432%" height="15" fill="rgb(238,83,0)"/><text x="16.1963%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 1.04%)</title><rect x="15.9463%" y="517" width="1.0432%" height="15" fill="rgb(221,39,39)"/><text x="16.1963%" y="527.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="16.8405%" y="501" width="0.1490%" height="15" fill="rgb(222,119,46)"/><text x="17.0905%" y="511.50"></text></g><g><title>sock_def_readable (1 samples, 0.15%)</title><rect x="17.2876%" y="149" width="0.1490%" height="15" fill="rgb(222,165,49)"/><text x="17.5376%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.15%)</title><rect x="17.2876%" y="133" width="0.1490%" height="15" fill="rgb(219,113,52)"/><text x="17.5376%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.15%)</title><rect x="17.2876%" y="117" width="0.1490%" height="15" fill="rgb(214,7,15)"/><text x="17.5376%" y="127.50"></text></g><g><title>pollwake (1 samples, 0.15%)</title><rect x="17.2876%" y="101" width="0.1490%" height="15" fill="rgb(235,32,4)"/><text x="17.5376%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.15%)</title><rect x="17.2876%" y="85" width="0.1490%" height="15" fill="rgb(238,90,54)"/><text x="17.5376%" y="95.50"></text></g><g><title>enqueue_task (1 samples, 0.15%)</title><rect x="17.2876%" y="69" width="0.1490%" height="15" fill="rgb(213,208,19)"/><text x="17.5376%" y="79.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="17.2876%" y="53" width="0.1490%" height="15" fill="rgb(233,156,4)"/><text x="17.5376%" y="63.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="17.2876%" y="37" width="0.1490%" height="15" fill="rgb(207,194,5)"/><text x="17.5376%" y="47.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="17.4367%" y="133" width="0.1490%" height="15" fill="rgb(206,111,30)"/><text x="17.6867%" y="143.50"></text></g><g><title>skb_release_data (1 samples, 0.15%)</title><rect x="17.4367%" y="117" width="0.1490%" height="15" fill="rgb(243,70,54)"/><text x="17.6867%" y="127.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.60%)</title><rect x="17.1386%" y="373" width="0.5961%" height="15" fill="rgb(242,28,8)"/><text x="17.3886%" y="383.50"></text></g><g><title>do_softirq (4 samples, 0.60%)</title><rect x="17.1386%" y="357" width="0.5961%" height="15" fill="rgb(219,106,18)"/><text x="17.3886%" y="367.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.60%)</title><rect x="17.1386%" y="341" width="0.5961%" height="15" fill="rgb(244,222,10)"/><text x="17.3886%" y="351.50"></text></g><g><title>__do_softirq (4 samples, 0.60%)</title><rect x="17.1386%" y="325" width="0.5961%" height="15" fill="rgb(236,179,52)"/><text x="17.3886%" y="335.50"></text></g><g><title>net_rx_action (4 samples, 0.60%)</title><rect x="17.1386%" y="309" width="0.5961%" height="15" fill="rgb(213,23,39)"/><text x="17.3886%" y="319.50"></text></g><g><title>process_backlog (4 samples, 0.60%)</title><rect x="17.1386%" y="293" width="0.5961%" height="15" fill="rgb(238,48,10)"/><text x="17.3886%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.60%)</title><rect x="17.1386%" y="277" width="0.5961%" height="15" fill="rgb(251,196,23)"/><text x="17.3886%" y="287.50"></text></g><g><title>ip_rcv (4 samples, 0.60%)</title><rect x="17.1386%" y="261" width="0.5961%" height="15" fill="rgb(250,152,24)"/><text x="17.3886%" y="271.50"></text></g><g><title>ip_local_deliver (4 samples, 0.60%)</title><rect x="17.1386%" y="245" width="0.5961%" height="15" fill="rgb(209,150,17)"/><text x="17.3886%" y="255.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.60%)</title><rect x="17.1386%" y="229" width="0.5961%" height="15" fill="rgb(234,202,34)"/><text x="17.3886%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.60%)</title><rect x="17.1386%" y="213" width="0.5961%" height="15" fill="rgb(253,148,53)"/><text x="17.3886%" y="223.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.60%)</title><rect x="17.1386%" y="197" width="0.5961%" height="15" fill="rgb(218,129,16)"/><text x="17.3886%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.60%)</title><rect x="17.1386%" y="181" width="0.5961%" height="15" fill="rgb(216,85,19)"/><text x="17.3886%" y="191.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.60%)</title><rect x="17.1386%" y="165" width="0.5961%" height="15" fill="rgb(235,228,7)"/><text x="17.3886%" y="175.50"></text></g><g><title>tcp_ack (2 samples, 0.30%)</title><rect x="17.4367%" y="149" width="0.2981%" height="15" fill="rgb(245,175,0)"/><text x="17.6867%" y="159.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.15%)</title><rect x="17.5857%" y="133" width="0.1490%" height="15" fill="rgb(208,168,36)"/><text x="17.8357%" y="143.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.89%)</title><rect x="16.9896%" y="437" width="0.8942%" height="15" fill="rgb(246,171,24)"/><text x="17.2396%" y="447.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.89%)</title><rect x="16.9896%" y="421" width="0.8942%" height="15" fill="rgb(215,142,24)"/><text x="17.2396%" y="431.50"></text></g><g><title>ip_output (6 samples, 0.89%)</title><rect x="16.9896%" y="405" width="0.8942%" height="15" fill="rgb(250,187,7)"/><text x="17.2396%" y="415.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.89%)</title><rect x="16.9896%" y="389" width="0.8942%" height="15" fill="rgb(228,66,33)"/><text x="17.2396%" y="399.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="17.7347%" y="373" width="0.1490%" height="15" fill="rgb(234,215,21)"/><text x="17.9847%" y="383.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (14 samples, 2.09%)</title><rect x="15.9463%" y="693" width="2.0864%" height="15" fill="rgb(222,191,20)"/><text x="16.1963%" y="703.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (14 samples, 2.09%)</title><rect x="15.9463%" y="677" width="2.0864%" height="15" fill="rgb(245,79,54)"/><text x="16.1963%" y="687.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (7 samples, 1.04%)</title><rect x="16.9896%" y="661" width="1.0432%" height="15" fill="rgb(240,10,37)"/><text x="17.2396%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (7 samples, 1.04%)</title><rect x="16.9896%" y="645" width="1.0432%" height="15" fill="rgb(214,192,32)"/><text x="17.2396%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (7 samples, 1.04%)</title><rect x="16.9896%" y="629" width="1.0432%" height="15" fill="rgb(209,36,54)"/><text x="17.2396%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (7 samples, 1.04%)</title><rect x="16.9896%" y="613" width="1.0432%" height="15" fill="rgb(220,10,11)"/><text x="17.2396%" y="623.50"></text></g><g><title>__libc_send (7 samples, 1.04%)</title><rect x="16.9896%" y="597" width="1.0432%" height="15" fill="rgb(221,106,17)"/><text x="17.2396%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 1.04%)</title><rect x="16.9896%" y="581" width="1.0432%" height="15" fill="rgb(251,142,44)"/><text x="17.2396%" y="591.50"></text></g><g><title>do_syscall_64 (7 samples, 1.04%)</title><rect x="16.9896%" y="565" width="1.0432%" height="15" fill="rgb(238,13,15)"/><text x="17.2396%" y="575.50"></text></g><g><title>__x64_sys_sendto (7 samples, 1.04%)</title><rect x="16.9896%" y="549" width="1.0432%" height="15" fill="rgb(208,107,27)"/><text x="17.2396%" y="559.50"></text></g><g><title>__sys_sendto (7 samples, 1.04%)</title><rect x="16.9896%" y="533" width="1.0432%" height="15" fill="rgb(205,136,37)"/><text x="17.2396%" y="543.50"></text></g><g><title>sock_sendmsg (7 samples, 1.04%)</title><rect x="16.9896%" y="517" width="1.0432%" height="15" fill="rgb(250,205,27)"/><text x="17.2396%" y="527.50"></text></g><g><title>tcp_sendmsg (7 samples, 1.04%)</title><rect x="16.9896%" y="501" width="1.0432%" height="15" fill="rgb(210,80,43)"/><text x="17.2396%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (7 samples, 1.04%)</title><rect x="16.9896%" y="485" width="1.0432%" height="15" fill="rgb(247,160,36)"/><text x="17.2396%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (7 samples, 1.04%)</title><rect x="16.9896%" y="469" width="1.0432%" height="15" fill="rgb(234,13,49)"/><text x="17.2396%" y="479.50"></text></g><g><title>tcp_write_xmit (7 samples, 1.04%)</title><rect x="16.9896%" y="453" width="1.0432%" height="15" fill="rgb(234,122,0)"/><text x="17.2396%" y="463.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.15%)</title><rect x="17.8838%" y="437" width="0.1490%" height="15" fill="rgb(207,146,38)"/><text x="18.1338%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="18.0328%" y="693" width="0.1490%" height="15" fill="rgb(207,177,25)"/><text x="18.2828%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="18.0328%" y="677" width="0.1490%" height="15" fill="rgb(211,178,42)"/><text x="18.2828%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="18.0328%" y="661" width="0.1490%" height="15" fill="rgb(230,69,54)"/><text x="18.2828%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="18.0328%" y="645" width="0.1490%" height="15" fill="rgb(214,135,41)"/><text x="18.2828%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="18.0328%" y="629" width="0.1490%" height="15" fill="rgb(237,67,25)"/><text x="18.2828%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="18.0328%" y="613" width="0.1490%" height="15" fill="rgb(222,189,50)"/><text x="18.2828%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="18.1818%" y="693" width="0.1490%" height="15" fill="rgb(245,148,34)"/><text x="18.4318%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="18.1818%" y="677" width="0.1490%" height="15" fill="rgb(222,29,6)"/><text x="18.4318%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="18.3308%" y="693" width="0.1490%" height="15" fill="rgb(221,189,43)"/><text x="18.5808%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="18.3308%" y="677" width="0.1490%" height="15" fill="rgb(207,36,27)"/><text x="18.5808%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="18.3308%" y="661" width="0.1490%" height="15" fill="rgb(217,90,24)"/><text x="18.5808%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="18.3308%" y="645" width="0.1490%" height="15" fill="rgb(224,66,35)"/><text x="18.5808%" y="655.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="18.3308%" y="629" width="0.1490%" height="15" fill="rgb(221,13,50)"/><text x="18.5808%" y="639.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.15%)</title><rect x="18.4799%" y="613" width="0.1490%" height="15" fill="rgb(236,68,49)"/><text x="18.7299%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="18.4799%" y="597" width="0.1490%" height="15" fill="rgb(229,146,28)"/><text x="18.7299%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="18.4799%" y="581" width="0.1490%" height="15" fill="rgb(225,31,38)"/><text x="18.7299%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="18.4799%" y="565" width="0.1490%" height="15" fill="rgb(250,208,3)"/><text x="18.7299%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="18.4799%" y="549" width="0.1490%" height="15" fill="rgb(246,54,23)"/><text x="18.7299%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="18.4799%" y="533" width="0.1490%" height="15" fill="rgb(243,76,11)"/><text x="18.7299%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="18.4799%" y="517" width="0.1490%" height="15" fill="rgb(245,21,50)"/><text x="18.7299%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="18.4799%" y="501" width="0.1490%" height="15" fill="rgb(228,9,43)"/><text x="18.7299%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="18.4799%" y="485" width="0.1490%" height="15" fill="rgb(208,100,47)"/><text x="18.7299%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.30%)</title><rect x="18.4799%" y="677" width="0.2981%" height="15" fill="rgb(232,26,8)"/><text x="18.7299%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="18.4799%" y="661" width="0.2981%" height="15" fill="rgb(216,166,38)"/><text x="18.7299%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.30%)</title><rect x="18.4799%" y="645" width="0.2981%" height="15" fill="rgb(251,202,51)"/><text x="18.7299%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.30%)</title><rect x="18.4799%" y="629" width="0.2981%" height="15" fill="rgb(254,216,34)"/><text x="18.7299%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="18.6289%" y="613" width="0.1490%" height="15" fill="rgb(251,32,27)"/><text x="18.8789%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="18.6289%" y="597" width="0.1490%" height="15" fill="rgb(208,127,28)"/><text x="18.8789%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="18.6289%" y="581" width="0.1490%" height="15" fill="rgb(224,137,22)"/><text x="18.8789%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="18.6289%" y="565" width="0.1490%" height="15" fill="rgb(254,70,32)"/><text x="18.8789%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="18.7779%" y="645" width="0.1490%" height="15" fill="rgb(229,75,37)"/><text x="19.0279%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="18.7779%" y="629" width="0.1490%" height="15" fill="rgb(252,64,23)"/><text x="19.0279%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="18.7779%" y="613" width="0.1490%" height="15" fill="rgb(232,162,48)"/><text x="19.0279%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.15%)</title><rect x="18.7779%" y="597" width="0.1490%" height="15" fill="rgb(246,160,12)"/><text x="19.0279%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="18.7779%" y="661" width="0.2981%" height="15" fill="rgb(247,166,0)"/><text x="19.0279%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="18.9270%" y="645" width="0.1490%" height="15" fill="rgb(249,219,21)"/><text x="19.1770%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="18.9270%" y="629" width="0.1490%" height="15" fill="rgb(205,209,3)"/><text x="19.1770%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="19.0760%" y="629" width="0.2981%" height="15" fill="rgb(243,44,1)"/><text x="19.3260%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="19.0760%" y="613" width="0.2981%" height="15" fill="rgb(206,159,16)"/><text x="19.3260%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.30%)</title><rect x="19.0760%" y="597" width="0.2981%" height="15" fill="rgb(244,77,30)"/><text x="19.3260%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="19.3741%" y="613" width="0.1490%" height="15" fill="rgb(218,69,12)"/><text x="19.6241%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.60%)</title><rect x="19.0760%" y="661" width="0.5961%" height="15" fill="rgb(212,87,7)"/><text x="19.3260%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.60%)</title><rect x="19.0760%" y="645" width="0.5961%" height="15" fill="rgb(245,114,25)"/><text x="19.3260%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.30%)</title><rect x="19.3741%" y="629" width="0.2981%" height="15" fill="rgb(210,61,42)"/><text x="19.6241%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="19.5231%" y="613" width="0.1490%" height="15" fill="rgb(211,52,33)"/><text x="19.7731%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="19.5231%" y="597" width="0.1490%" height="15" fill="rgb(234,58,33)"/><text x="19.7731%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="19.8212%" y="581" width="0.1490%" height="15" fill="rgb(220,115,36)"/><text x="20.0712%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.45%)</title><rect x="19.6721%" y="613" width="0.4471%" height="15" fill="rgb(243,153,54)"/><text x="19.9221%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.45%)</title><rect x="19.6721%" y="597" width="0.4471%" height="15" fill="rgb(251,47,18)"/><text x="19.9221%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="19.9702%" y="581" width="0.1490%" height="15" fill="rgb(242,102,42)"/><text x="20.2202%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="19.9702%" y="565" width="0.1490%" height="15" fill="rgb(234,31,38)"/><text x="20.2202%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="19.9702%" y="549" width="0.1490%" height="15" fill="rgb(221,117,51)"/><text x="20.2202%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="19.9702%" y="533" width="0.1490%" height="15" fill="rgb(212,20,18)"/><text x="20.2202%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="19.9702%" y="517" width="0.1490%" height="15" fill="rgb(245,133,36)"/><text x="20.2202%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.60%)</title><rect x="19.6721%" y="645" width="0.5961%" height="15" fill="rgb(212,6,19)"/><text x="19.9221%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.60%)</title><rect x="19.6721%" y="629" width="0.5961%" height="15" fill="rgb(218,1,36)"/><text x="19.9221%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="20.1192%" y="613" width="0.1490%" height="15" fill="rgb(246,84,54)"/><text x="20.3692%" y="623.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="20.1192%" y="597" width="0.1490%" height="15" fill="rgb(242,110,6)"/><text x="20.3692%" y="607.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="20.1192%" y="581" width="0.1490%" height="15" fill="rgb(214,47,5)"/><text x="20.3692%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="20.2683%" y="581" width="0.1490%" height="15" fill="rgb(218,159,25)"/><text x="20.5183%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="20.2683%" y="645" width="0.2981%" height="15" fill="rgb(215,211,28)"/><text x="20.5183%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.30%)</title><rect x="20.2683%" y="629" width="0.2981%" height="15" fill="rgb(238,59,32)"/><text x="20.5183%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.30%)</title><rect x="20.2683%" y="613" width="0.2981%" height="15" fill="rgb(226,82,3)"/><text x="20.5183%" y="623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.30%)</title><rect x="20.2683%" y="597" width="0.2981%" height="15" fill="rgb(240,164,32)"/><text x="20.5183%" y="607.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.15%)</title><rect x="20.4173%" y="581" width="0.1490%" height="15" fill="rgb(232,46,7)"/><text x="20.6673%" y="591.50"></text></g><g><title>core::fmt::write (15 samples, 2.24%)</title><rect x="18.4799%" y="693" width="2.2355%" height="15" fill="rgb(229,129,53)"/><text x="18.7299%" y="703.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (13 samples, 1.94%)</title><rect x="18.7779%" y="677" width="1.9374%" height="15" fill="rgb(234,188,29)"/><text x="19.0279%" y="687.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 1.04%)</title><rect x="19.6721%" y="661" width="1.0432%" height="15" fill="rgb(246,141,4)"/><text x="19.9221%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="20.5663%" y="645" width="0.1490%" height="15" fill="rgb(229,23,39)"/><text x="20.8163%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="20.5663%" y="629" width="0.1490%" height="15" fill="rgb(206,12,3)"/><text x="20.8163%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="20.5663%" y="613" width="0.1490%" height="15" fill="rgb(252,226,20)"/><text x="20.8163%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="20.5663%" y="597" width="0.1490%" height="15" fill="rgb(216,123,35)"/><text x="20.8163%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="20.7154%" y="677" width="0.1490%" height="15" fill="rgb(212,68,40)"/><text x="20.9654%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="20.8644%" y="677" width="0.1490%" height="15" fill="rgb(254,125,32)"/><text x="21.1144%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.15%)</title><rect x="20.8644%" y="661" width="0.1490%" height="15" fill="rgb(253,97,22)"/><text x="21.1144%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.60%)</title><rect x="20.7154%" y="693" width="0.5961%" height="15" fill="rgb(241,101,14)"/><text x="20.9654%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="21.0134%" y="677" width="0.2981%" height="15" fill="rgb(238,103,29)"/><text x="21.2634%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.30%)</title><rect x="21.0134%" y="661" width="0.2981%" height="15" fill="rgb(233,195,47)"/><text x="21.2634%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.30%)</title><rect x="21.0134%" y="645" width="0.2981%" height="15" fill="rgb(246,218,30)"/><text x="21.2634%" y="655.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="21.4605%" y="677" width="0.1490%" height="15" fill="rgb(219,145,47)"/><text x="21.7105%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.15%)</title><rect x="21.4605%" y="661" width="0.1490%" height="15" fill="rgb(243,12,26)"/><text x="21.7105%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="21.4605%" y="645" width="0.1490%" height="15" fill="rgb(214,87,16)"/><text x="21.7105%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="21.4605%" y="629" width="0.1490%" height="15" fill="rgb(208,99,42)"/><text x="21.7105%" y="639.50"></text></g><g><title>__lru_cache_add (1 samples, 0.15%)</title><rect x="21.6095%" y="549" width="0.1490%" height="15" fill="rgb(253,99,2)"/><text x="21.8595%" y="559.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.15%)</title><rect x="21.6095%" y="533" width="0.1490%" height="15" fill="rgb(220,168,23)"/><text x="21.8595%" y="543.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.15%)</title><rect x="21.6095%" y="517" width="0.1490%" height="15" fill="rgb(242,38,24)"/><text x="21.8595%" y="527.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.15%)</title><rect x="21.6095%" y="501" width="0.1490%" height="15" fill="rgb(225,182,9)"/><text x="21.8595%" y="511.50"></text></g><g><title>__inc_numa_state (1 samples, 0.15%)</title><rect x="21.7586%" y="501" width="0.1490%" height="15" fill="rgb(243,178,37)"/><text x="22.0086%" y="511.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.15%)</title><rect x="21.7586%" y="485" width="0.1490%" height="15" fill="rgb(232,139,19)"/><text x="22.0086%" y="495.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.45%)</title><rect x="21.6095%" y="661" width="0.4471%" height="15" fill="rgb(225,201,24)"/><text x="21.8595%" y="671.50"></text></g><g><title>_int_malloc (3 samples, 0.45%)</title><rect x="21.6095%" y="645" width="0.4471%" height="15" fill="rgb(221,47,46)"/><text x="21.8595%" y="655.50"></text></g><g><title>sysmalloc (3 samples, 0.45%)</title><rect x="21.6095%" y="629" width="0.4471%" height="15" fill="rgb(249,23,13)"/><text x="21.8595%" y="639.50"></text></g><g><title>page_fault (3 samples, 0.45%)</title><rect x="21.6095%" y="613" width="0.4471%" height="15" fill="rgb(219,9,5)"/><text x="21.8595%" y="623.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.45%)</title><rect x="21.6095%" y="597" width="0.4471%" height="15" fill="rgb(254,171,16)"/><text x="21.8595%" y="607.50"></text></g><g><title>handle_mm_fault (3 samples, 0.45%)</title><rect x="21.6095%" y="581" width="0.4471%" height="15" fill="rgb(230,171,20)"/><text x="21.8595%" y="591.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.45%)</title><rect x="21.6095%" y="565" width="0.4471%" height="15" fill="rgb(210,71,41)"/><text x="21.8595%" y="575.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.30%)</title><rect x="21.7586%" y="549" width="0.2981%" height="15" fill="rgb(206,173,20)"/><text x="22.0086%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.30%)</title><rect x="21.7586%" y="533" width="0.2981%" height="15" fill="rgb(233,88,34)"/><text x="22.0086%" y="543.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.30%)</title><rect x="21.7586%" y="517" width="0.2981%" height="15" fill="rgb(223,209,46)"/><text x="22.0086%" y="527.50"></text></g><g><title>prep_new_page (1 samples, 0.15%)</title><rect x="21.9076%" y="501" width="0.1490%" height="15" fill="rgb(250,43,18)"/><text x="22.1576%" y="511.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.15%)</title><rect x="21.9076%" y="485" width="0.1490%" height="15" fill="rgb(208,13,10)"/><text x="22.1576%" y="495.50"></text></g><g><title>clear_page_erms (1 samples, 0.15%)</title><rect x="21.9076%" y="469" width="0.1490%" height="15" fill="rgb(212,200,36)"/><text x="22.1576%" y="479.50"></text></g><g><title>__x86_indirect_thunk_r15 (1 samples, 0.15%)</title><rect x="22.0566%" y="581" width="0.1490%" height="15" fill="rgb(225,90,30)"/><text x="22.3066%" y="591.50"></text></g><g><title>down_write_killable (1 samples, 0.15%)</title><rect x="22.2057%" y="517" width="0.1490%" height="15" fill="rgb(236,182,39)"/><text x="22.4557%" y="527.50"></text></g><g><title>do_syscall_64 (3 samples, 0.45%)</title><rect x="22.2057%" y="565" width="0.4471%" height="15" fill="rgb(212,144,35)"/><text x="22.4557%" y="575.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.45%)</title><rect x="22.2057%" y="549" width="0.4471%" height="15" fill="rgb(228,63,44)"/><text x="22.4557%" y="559.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.45%)</title><rect x="22.2057%" y="533" width="0.4471%" height="15" fill="rgb(228,109,6)"/><text x="22.4557%" y="543.50"></text></g><g><title>mprotect_fixup (2 samples, 0.30%)</title><rect x="22.3547%" y="517" width="0.2981%" height="15" fill="rgb(238,117,24)"/><text x="22.6047%" y="527.50"></text></g><g><title>perf_event_mmap (2 samples, 0.30%)</title><rect x="22.3547%" y="501" width="0.2981%" height="15" fill="rgb(242,26,26)"/><text x="22.6047%" y="511.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.30%)</title><rect x="22.3547%" y="485" width="0.2981%" height="15" fill="rgb(221,92,48)"/><text x="22.6047%" y="495.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.30%)</title><rect x="22.3547%" y="469" width="0.2981%" height="15" fill="rgb(209,209,32)"/><text x="22.6047%" y="479.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.30%)</title><rect x="22.3547%" y="453" width="0.2981%" height="15" fill="rgb(221,70,22)"/><text x="22.6047%" y="463.50"></text></g><g><title>perf_output_begin (2 samples, 0.30%)</title><rect x="22.3547%" y="437" width="0.2981%" height="15" fill="rgb(248,145,5)"/><text x="22.6047%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.60%)</title><rect x="22.2057%" y="581" width="0.5961%" height="15" fill="rgb(226,116,26)"/><text x="22.4557%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="22.6528%" y="565" width="0.1490%" height="15" fill="rgb(244,5,17)"/><text x="22.9028%" y="575.50"></text></g><g><title>__GI___mprotect (6 samples, 0.89%)</title><rect x="22.0566%" y="597" width="0.8942%" height="15" fill="rgb(252,159,33)"/><text x="22.3066%" y="607.50"></text></g><g><title>error_entry (1 samples, 0.15%)</title><rect x="22.8018%" y="581" width="0.1490%" height="15" fill="rgb(206,71,0)"/><text x="23.0518%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 1.64%)</title><rect x="21.6095%" y="677" width="1.6393%" height="15" fill="rgb(233,118,54)"/><text x="21.8595%" y="687.50"></text></g><g><title>__GI___libc_realloc (8 samples, 1.19%)</title><rect x="22.0566%" y="661" width="1.1923%" height="15" fill="rgb(234,83,48)"/><text x="22.3066%" y="671.50"></text></g><g><title>_int_realloc (8 samples, 1.19%)</title><rect x="22.0566%" y="645" width="1.1923%" height="15" fill="rgb(228,3,54)"/><text x="22.3066%" y="655.50"></text></g><g><title>_int_malloc (8 samples, 1.19%)</title><rect x="22.0566%" y="629" width="1.1923%" height="15" fill="rgb(226,155,13)"/><text x="22.3066%" y="639.50"></text></g><g><title>sysmalloc (8 samples, 1.19%)</title><rect x="22.0566%" y="613" width="1.1923%" height="15" fill="rgb(241,28,37)"/><text x="22.3066%" y="623.50"></text></g><g><title>page_fault (2 samples, 0.30%)</title><rect x="22.9508%" y="597" width="0.2981%" height="15" fill="rgb(233,93,10)"/><text x="23.2008%" y="607.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.30%)</title><rect x="22.9508%" y="581" width="0.2981%" height="15" fill="rgb(225,113,19)"/><text x="23.2008%" y="591.50"></text></g><g><title>handle_mm_fault (2 samples, 0.30%)</title><rect x="22.9508%" y="565" width="0.2981%" height="15" fill="rgb(241,2,18)"/><text x="23.2008%" y="575.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.30%)</title><rect x="22.9508%" y="549" width="0.2981%" height="15" fill="rgb(228,207,21)"/><text x="23.2008%" y="559.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.15%)</title><rect x="23.0999%" y="533" width="0.1490%" height="15" fill="rgb(213,211,35)"/><text x="23.3499%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="23.0999%" y="517" width="0.1490%" height="15" fill="rgb(209,83,10)"/><text x="23.3499%" y="527.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="23.0999%" y="501" width="0.1490%" height="15" fill="rgb(209,164,1)"/><text x="23.3499%" y="511.50"></text></g><g><title>prep_new_page (1 samples, 0.15%)</title><rect x="23.0999%" y="485" width="0.1490%" height="15" fill="rgb(213,184,43)"/><text x="23.3499%" y="495.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.15%)</title><rect x="23.0999%" y="469" width="0.1490%" height="15" fill="rgb(231,61,34)"/><text x="23.3499%" y="479.50"></text></g><g><title>clear_page_erms (1 samples, 0.15%)</title><rect x="23.0999%" y="453" width="0.1490%" height="15" fill="rgb(235,75,3)"/><text x="23.3499%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="23.2489%" y="677" width="0.1490%" height="15" fill="rgb(220,106,47)"/><text x="23.4989%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.15%)</title><rect x="23.2489%" y="661" width="0.1490%" height="15" fill="rgb(210,196,33)"/><text x="23.4989%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.15%)</title><rect x="23.2489%" y="645" width="0.1490%" height="15" fill="rgb(229,154,42)"/><text x="23.4989%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="23.2489%" y="629" width="0.1490%" height="15" fill="rgb(228,114,26)"/><text x="23.4989%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="23.2489%" y="613" width="0.1490%" height="15" fill="rgb(208,144,1)"/><text x="23.4989%" y="623.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="23.5469%" y="357" width="0.1490%" height="15" fill="rgb(239,112,37)"/><text x="23.7969%" y="367.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="23.5469%" y="341" width="0.1490%" height="15" fill="rgb(210,96,50)"/><text x="23.7969%" y="351.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.30%)</title><rect x="23.5469%" y="373" width="0.2981%" height="15" fill="rgb(222,178,2)"/><text x="23.7969%" y="383.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="23.6960%" y="357" width="0.1490%" height="15" fill="rgb(226,74,18)"/><text x="23.9460%" y="367.50"></text></g><g><title>loopback_xmit (1 samples, 0.15%)</title><rect x="23.6960%" y="341" width="0.1490%" height="15" fill="rgb(225,67,54)"/><text x="23.9460%" y="351.50"></text></g><g><title>tcp_wfree (1 samples, 0.15%)</title><rect x="23.6960%" y="325" width="0.1490%" height="15" fill="rgb(251,92,32)"/><text x="23.9460%" y="335.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.30%)</title><rect x="23.9940%" y="181" width="0.2981%" height="15" fill="rgb(228,149,22)"/><text x="24.2440%" y="191.50"></text></g><g><title>sk_reset_timer (1 samples, 0.15%)</title><rect x="24.2921%" y="149" width="0.1490%" height="15" fill="rgb(243,54,13)"/><text x="24.5421%" y="159.50"></text></g><g><title>__mod_timer (1 samples, 0.15%)</title><rect x="24.2921%" y="133" width="0.1490%" height="15" fill="rgb(243,180,28)"/><text x="24.5421%" y="143.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="24.4411%" y="69" width="0.1490%" height="15" fill="rgb(208,167,24)"/><text x="24.6911%" y="79.50"></text></g><g><title>enqueue_task (1 samples, 0.15%)</title><rect x="24.5902%" y="69" width="0.1490%" height="15" fill="rgb(245,73,45)"/><text x="24.8402%" y="79.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="24.5902%" y="53" width="0.1490%" height="15" fill="rgb(237,203,48)"/><text x="24.8402%" y="63.50"></text></g><g><title>__wake_up_common (3 samples, 0.45%)</title><rect x="24.4411%" y="117" width="0.4471%" height="15" fill="rgb(211,197,16)"/><text x="24.6911%" y="127.50"></text></g><g><title>pollwake (3 samples, 0.45%)</title><rect x="24.4411%" y="101" width="0.4471%" height="15" fill="rgb(243,99,51)"/><text x="24.6911%" y="111.50"></text></g><g><title>try_to_wake_up (3 samples, 0.45%)</title><rect x="24.4411%" y="85" width="0.4471%" height="15" fill="rgb(215,123,29)"/><text x="24.6911%" y="95.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.15%)</title><rect x="24.7392%" y="69" width="0.1490%" height="15" fill="rgb(239,186,37)"/><text x="24.9892%" y="79.50"></text></g><g><title>available_idle_cpu (1 samples, 0.15%)</title><rect x="24.7392%" y="53" width="0.1490%" height="15" fill="rgb(252,136,39)"/><text x="24.9892%" y="63.50"></text></g><g><title>sock_def_readable (4 samples, 0.60%)</title><rect x="24.4411%" y="149" width="0.5961%" height="15" fill="rgb(223,213,32)"/><text x="24.6911%" y="159.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.60%)</title><rect x="24.4411%" y="133" width="0.5961%" height="15" fill="rgb(233,115,5)"/><text x="24.6911%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="24.8882%" y="117" width="0.1490%" height="15" fill="rgb(207,226,44)"/><text x="25.1382%" y="127.50"></text></g><g><title>bictcp_acked (1 samples, 0.15%)</title><rect x="25.0373%" y="133" width="0.1490%" height="15" fill="rgb(208,126,0)"/><text x="25.2873%" y="143.50"></text></g><g><title>ip_local_deliver (9 samples, 1.34%)</title><rect x="23.9940%" y="245" width="1.3413%" height="15" fill="rgb(244,66,21)"/><text x="24.2440%" y="255.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 1.34%)</title><rect x="23.9940%" y="229" width="1.3413%" height="15" fill="rgb(222,97,12)"/><text x="24.2440%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 1.34%)</title><rect x="23.9940%" y="213" width="1.3413%" height="15" fill="rgb(219,213,19)"/><text x="24.2440%" y="223.50"></text></g><g><title>tcp_v4_rcv (9 samples, 1.34%)</title><rect x="23.9940%" y="197" width="1.3413%" height="15" fill="rgb(252,169,30)"/><text x="24.2440%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 1.04%)</title><rect x="24.2921%" y="181" width="1.0432%" height="15" fill="rgb(206,32,51)"/><text x="24.5421%" y="191.50"></text></g><g><title>tcp_rcv_established (7 samples, 1.04%)</title><rect x="24.2921%" y="165" width="1.0432%" height="15" fill="rgb(250,172,42)"/><text x="24.5421%" y="175.50"></text></g><g><title>tcp_ack (2 samples, 0.30%)</title><rect x="25.0373%" y="149" width="0.2981%" height="15" fill="rgb(209,34,43)"/><text x="25.2873%" y="159.50"></text></g><g><title>kmem_cache_free (1 samples, 0.15%)</title><rect x="25.1863%" y="133" width="0.1490%" height="15" fill="rgb(223,11,35)"/><text x="25.4363%" y="143.50"></text></g><g><title>ip_finish_output2 (13 samples, 1.94%)</title><rect x="23.5469%" y="389" width="1.9374%" height="15" fill="rgb(251,219,26)"/><text x="23.7969%" y="399.50">i..</text></g><g><title>__local_bh_enable_ip (11 samples, 1.64%)</title><rect x="23.8450%" y="373" width="1.6393%" height="15" fill="rgb(231,119,3)"/><text x="24.0950%" y="383.50"></text></g><g><title>do_softirq (11 samples, 1.64%)</title><rect x="23.8450%" y="357" width="1.6393%" height="15" fill="rgb(216,97,11)"/><text x="24.0950%" y="367.50"></text></g><g><title>do_softirq_own_stack (11 samples, 1.64%)</title><rect x="23.8450%" y="341" width="1.6393%" height="15" fill="rgb(223,59,9)"/><text x="24.0950%" y="351.50"></text></g><g><title>__do_softirq (11 samples, 1.64%)</title><rect x="23.8450%" y="325" width="1.6393%" height="15" fill="rgb(233,93,31)"/><text x="24.0950%" y="335.50"></text></g><g><title>net_rx_action (11 samples, 1.64%)</title><rect x="23.8450%" y="309" width="1.6393%" height="15" fill="rgb(239,81,33)"/><text x="24.0950%" y="319.50"></text></g><g><title>process_backlog (11 samples, 1.64%)</title><rect x="23.8450%" y="293" width="1.6393%" height="15" fill="rgb(213,120,34)"/><text x="24.0950%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (11 samples, 1.64%)</title><rect x="23.8450%" y="277" width="1.6393%" height="15" fill="rgb(243,49,53)"/><text x="24.0950%" y="287.50"></text></g><g><title>ip_rcv (10 samples, 1.49%)</title><rect x="23.9940%" y="261" width="1.4903%" height="15" fill="rgb(247,216,33)"/><text x="24.2440%" y="271.50"></text></g><g><title>ip_rcv_core (1 samples, 0.15%)</title><rect x="25.3353%" y="245" width="0.1490%" height="15" fill="rgb(226,26,14)"/><text x="25.5853%" y="255.50"></text></g><g><title>__tcp_transmit_skb (15 samples, 2.24%)</title><rect x="23.3979%" y="437" width="2.2355%" height="15" fill="rgb(215,49,53)"/><text x="23.6479%" y="447.50">_..</text></g><g><title>__ip_queue_xmit (15 samples, 2.24%)</title><rect x="23.3979%" y="421" width="2.2355%" height="15" fill="rgb(245,162,40)"/><text x="23.6479%" y="431.50">_..</text></g><g><title>ip_output (15 samples, 2.24%)</title><rect x="23.3979%" y="405" width="2.2355%" height="15" fill="rgb(229,68,17)"/><text x="23.6479%" y="415.50">i..</text></g><g><title>ip_finish_output (1 samples, 0.15%)</title><rect x="25.4844%" y="389" width="0.1490%" height="15" fill="rgb(213,182,10)"/><text x="25.7344%" y="399.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.15%)</title><rect x="25.4844%" y="373" width="0.1490%" height="15" fill="rgb(245,125,30)"/><text x="25.7344%" y="383.50"></text></g><g><title>__tcp_push_pending_frames (16 samples, 2.38%)</title><rect x="23.3979%" y="469" width="2.3845%" height="15" fill="rgb(232,202,2)"/><text x="23.6479%" y="479.50">__..</text></g><g><title>tcp_write_xmit (16 samples, 2.38%)</title><rect x="23.3979%" y="453" width="2.3845%" height="15" fill="rgb(237,140,51)"/><text x="23.6479%" y="463.50">tc..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.15%)</title><rect x="25.6334%" y="437" width="0.1490%" height="15" fill="rgb(236,157,25)"/><text x="25.8834%" y="447.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.15%)</title><rect x="25.6334%" y="421" width="0.1490%" height="15" fill="rgb(219,209,0)"/><text x="25.8834%" y="431.50"></text></g><g><title>__x64_sys_sendto (17 samples, 2.53%)</title><rect x="23.3979%" y="549" width="2.5335%" height="15" fill="rgb(240,116,54)"/><text x="23.6479%" y="559.50">__..</text></g><g><title>__sys_sendto (17 samples, 2.53%)</title><rect x="23.3979%" y="533" width="2.5335%" height="15" fill="rgb(216,10,36)"/><text x="23.6479%" y="543.50">__..</text></g><g><title>sock_sendmsg (17 samples, 2.53%)</title><rect x="23.3979%" y="517" width="2.5335%" height="15" fill="rgb(222,72,44)"/><text x="23.6479%" y="527.50">so..</text></g><g><title>tcp_sendmsg (17 samples, 2.53%)</title><rect x="23.3979%" y="501" width="2.5335%" height="15" fill="rgb(232,159,9)"/><text x="23.6479%" y="511.50">tc..</text></g><g><title>tcp_sendmsg_locked (17 samples, 2.53%)</title><rect x="23.3979%" y="485" width="2.5335%" height="15" fill="rgb(210,39,32)"/><text x="23.6479%" y="495.50">tc..</text></g><g><title>sk_stream_alloc_skb (1 samples, 0.15%)</title><rect x="25.7824%" y="469" width="0.1490%" height="15" fill="rgb(216,194,45)"/><text x="26.0324%" y="479.50"></text></g><g><title>__alloc_skb (1 samples, 0.15%)</title><rect x="25.7824%" y="453" width="0.1490%" height="15" fill="rgb(218,18,35)"/><text x="26.0324%" y="463.50"></text></g><g><title>do_syscall_64 (18 samples, 2.68%)</title><rect x="23.3979%" y="565" width="2.6826%" height="15" fill="rgb(207,83,51)"/><text x="23.6479%" y="575.50">do..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="25.9314%" y="549" width="0.1490%" height="15" fill="rgb(225,63,43)"/><text x="26.1814%" y="559.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="25.9314%" y="533" width="0.1490%" height="15" fill="rgb(207,57,36)"/><text x="26.1814%" y="543.50"></text></g><g><title>mysql::conn::Conn::_query (20 samples, 2.98%)</title><rect x="23.3979%" y="677" width="2.9806%" height="15" fill="rgb(216,99,33)"/><text x="23.6479%" y="687.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (20 samples, 2.98%)</title><rect x="23.3979%" y="661" width="2.9806%" height="15" fill="rgb(225,42,16)"/><text x="23.6479%" y="671.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (20 samples, 2.98%)</title><rect x="23.3979%" y="645" width="2.9806%" height="15" fill="rgb(220,201,45)"/><text x="23.6479%" y="655.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (20 samples, 2.98%)</title><rect x="23.3979%" y="629" width="2.9806%" height="15" fill="rgb(225,33,4)"/><text x="23.6479%" y="639.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (20 samples, 2.98%)</title><rect x="23.3979%" y="613" width="2.9806%" height="15" fill="rgb(224,33,50)"/><text x="23.6479%" y="623.50">std..</text></g><g><title>__libc_send (20 samples, 2.98%)</title><rect x="23.3979%" y="597" width="2.9806%" height="15" fill="rgb(246,198,51)"/><text x="23.6479%" y="607.50">__l..</text></g><g><title>entry_SYSCALL_64 (20 samples, 2.98%)</title><rect x="23.3979%" y="581" width="2.9806%" height="15" fill="rgb(205,22,4)"/><text x="23.6479%" y="591.50">ent..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.30%)</title><rect x="26.0805%" y="565" width="0.2981%" height="15" fill="rgb(206,3,8)"/><text x="26.3305%" y="575.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (35 samples, 5.22%)</title><rect x="21.3115%" y="693" width="5.2161%" height="15" fill="rgb(251,23,15)"/><text x="21.5615%" y="703.50">decor_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.15%)</title><rect x="26.3785%" y="677" width="0.1490%" height="15" fill="rgb(252,88,28)"/><text x="26.6285%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.15%)</title><rect x="26.3785%" y="661" width="0.1490%" height="15" fill="rgb(212,127,14)"/><text x="26.6285%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.15%)</title><rect x="26.3785%" y="645" width="0.1490%" height="15" fill="rgb(247,145,37)"/><text x="26.6285%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="26.3785%" y="629" width="0.1490%" height="15" fill="rgb(209,117,53)"/><text x="26.6285%" y="639.50"></text></g><g><title>decor_mem::helpers::get_user_cols_of_datatable (1 samples, 0.15%)</title><rect x="26.5276%" y="693" width="0.1490%" height="15" fill="rgb(212,90,42)"/><text x="26.7776%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="26.5276%" y="677" width="0.1490%" height="15" fill="rgb(218,164,37)"/><text x="26.7776%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="26.5276%" y="661" width="0.1490%" height="15" fill="rgb(246,65,34)"/><text x="26.7776%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="26.5276%" y="645" width="0.1490%" height="15" fill="rgb(231,100,33)"/><text x="26.7776%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="26.5276%" y="629" width="0.1490%" height="15" fill="rgb(228,126,14)"/><text x="26.7776%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="26.5276%" y="613" width="0.1490%" height="15" fill="rgb(215,173,21)"/><text x="26.7776%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="26.5276%" y="597" width="0.1490%" height="15" fill="rgb(210,6,40)"/><text x="26.7776%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="26.5276%" y="581" width="0.1490%" height="15" fill="rgb(212,48,18)"/><text x="26.7776%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="26.5276%" y="565" width="0.1490%" height="15" fill="rgb(230,214,11)"/><text x="26.7776%" y="575.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="26.5276%" y="549" width="0.1490%" height="15" fill="rgb(254,105,39)"/><text x="26.7776%" y="559.50"></text></g><g><title>decor_mem::helpers::str_ident_match (1 samples, 0.15%)</title><rect x="26.6766%" y="693" width="0.1490%" height="15" fill="rgb(245,158,5)"/><text x="26.9266%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="26.6766%" y="677" width="0.1490%" height="15" fill="rgb(249,208,11)"/><text x="26.9266%" y="687.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="26.8256%" y="677" width="0.1490%" height="15" fill="rgb(210,39,28)"/><text x="27.0756%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.15%)</title><rect x="26.8256%" y="661" width="0.1490%" height="15" fill="rgb(211,56,53)"/><text x="27.0756%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="26.8256%" y="645" width="0.1490%" height="15" fill="rgb(226,201,30)"/><text x="27.0756%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.15%)</title><rect x="26.8256%" y="629" width="0.1490%" height="15" fill="rgb(239,101,34)"/><text x="27.0756%" y="639.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.15%)</title><rect x="26.8256%" y="613" width="0.1490%" height="15" fill="rgb(226,209,5)"/><text x="27.0756%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="26.8256%" y="597" width="0.1490%" height="15" fill="rgb(250,105,47)"/><text x="27.0756%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="26.8256%" y="581" width="0.1490%" height="15" fill="rgb(230,72,3)"/><text x="27.0756%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.15%)</title><rect x="26.8256%" y="565" width="0.1490%" height="15" fill="rgb(232,218,39)"/><text x="27.0756%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="26.8256%" y="549" width="0.1490%" height="15" fill="rgb(248,166,6)"/><text x="27.0756%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="26.8256%" y="533" width="0.1490%" height="15" fill="rgb(247,89,20)"/><text x="27.0756%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="26.8256%" y="517" width="0.1490%" height="15" fill="rgb(248,130,54)"/><text x="27.0756%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="26.8256%" y="501" width="0.1490%" height="15" fill="rgb(234,196,4)"/><text x="27.0756%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="26.8256%" y="485" width="0.1490%" height="15" fill="rgb(250,143,31)"/><text x="27.0756%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="26.8256%" y="469" width="0.1490%" height="15" fill="rgb(211,110,34)"/><text x="27.0756%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="26.8256%" y="453" width="0.1490%" height="15" fill="rgb(215,124,48)"/><text x="27.0756%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="26.8256%" y="437" width="0.1490%" height="15" fill="rgb(216,46,13)"/><text x="27.0756%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="26.8256%" y="421" width="0.1490%" height="15" fill="rgb(205,184,25)"/><text x="27.0756%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="26.8256%" y="405" width="0.1490%" height="15" fill="rgb(228,1,10)"/><text x="27.0756%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="26.8256%" y="389" width="0.1490%" height="15" fill="rgb(213,116,27)"/><text x="27.0756%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="26.8256%" y="373" width="0.1490%" height="15" fill="rgb(241,95,50)"/><text x="27.0756%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_with (1 samples, 0.15%)</title><rect x="26.9747%" y="677" width="0.1490%" height="15" fill="rgb(238,48,32)"/><text x="27.2247%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="27.5708%" y="581" width="0.1490%" height="15" fill="rgb(235,113,49)"/><text x="27.8208%" y="591.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.15%)</title><rect x="27.5708%" y="565" width="0.1490%" height="15" fill="rgb(205,127,43)"/><text x="27.8208%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="27.7198%" y="565" width="0.2981%" height="15" fill="rgb(250,162,2)"/><text x="27.9698%" y="575.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.45%)</title><rect x="27.7198%" y="581" width="0.4471%" height="15" fill="rgb(220,13,41)"/><text x="27.9698%" y="591.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.15%)</title><rect x="28.0179%" y="565" width="0.1490%" height="15" fill="rgb(249,221,25)"/><text x="28.2679%" y="575.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.15%)</title><rect x="28.0179%" y="549" width="0.1490%" height="15" fill="rgb(215,208,19)"/><text x="28.2679%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.15%)</title><rect x="28.1669%" y="581" width="0.1490%" height="15" fill="rgb(236,175,2)"/><text x="28.4169%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="28.1669%" y="565" width="0.1490%" height="15" fill="rgb(241,52,2)"/><text x="28.4169%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="28.1669%" y="549" width="0.1490%" height="15" fill="rgb(248,140,14)"/><text x="28.4169%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="28.1669%" y="533" width="0.1490%" height="15" fill="rgb(253,22,42)"/><text x="28.4169%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="28.1669%" y="517" width="0.1490%" height="15" fill="rgb(234,61,47)"/><text x="28.4169%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="28.1669%" y="501" width="0.1490%" height="15" fill="rgb(208,226,15)"/><text x="28.4169%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="28.1669%" y="485" width="0.1490%" height="15" fill="rgb(217,221,4)"/><text x="28.4169%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="28.1669%" y="469" width="0.1490%" height="15" fill="rgb(212,174,34)"/><text x="28.4169%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="28.1669%" y="453" width="0.1490%" height="15" fill="rgb(253,83,4)"/><text x="28.4169%" y="463.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (13 samples, 1.94%)</title><rect x="27.5708%" y="597" width="1.9374%" height="15" fill="rgb(250,195,49)"/><text x="27.8208%" y="607.50">a..</text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 1.19%)</title><rect x="28.3159%" y="581" width="1.1923%" height="15" fill="rgb(241,192,25)"/><text x="28.5659%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 1.04%)</title><rect x="28.4650%" y="565" width="1.0432%" height="15" fill="rgb(208,124,10)"/><text x="28.7150%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 1.04%)</title><rect x="28.4650%" y="549" width="1.0432%" height="15" fill="rgb(222,33,0)"/><text x="28.7150%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.45%)</title><rect x="29.0611%" y="533" width="0.4471%" height="15" fill="rgb(234,209,28)"/><text x="29.3111%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (17 samples, 2.53%)</title><rect x="27.2727%" y="645" width="2.5335%" height="15" fill="rgb(224,11,23)"/><text x="27.5227%" y="655.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 2.38%)</title><rect x="27.4218%" y="629" width="2.3845%" height="15" fill="rgb(232,99,1)"/><text x="27.6718%" y="639.50">&lt;s..</text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (16 samples, 2.38%)</title><rect x="27.4218%" y="613" width="2.3845%" height="15" fill="rgb(237,95,45)"/><text x="27.6718%" y="623.50">sq..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.30%)</title><rect x="29.5082%" y="597" width="0.2981%" height="15" fill="rgb(208,109,11)"/><text x="29.7582%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="29.6572%" y="581" width="0.1490%" height="15" fill="rgb(216,190,48)"/><text x="29.9072%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="29.8063%" y="613" width="0.2981%" height="15" fill="rgb(251,171,36)"/><text x="30.0563%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.30%)</title><rect x="29.8063%" y="597" width="0.2981%" height="15" fill="rgb(230,62,22)"/><text x="30.0563%" y="607.50"></text></g><g><title>__rust_dealloc (1 samples, 0.15%)</title><rect x="29.9553%" y="581" width="0.1490%" height="15" fill="rgb(225,114,35)"/><text x="30.2053%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.45%)</title><rect x="29.8063%" y="645" width="0.4471%" height="15" fill="rgb(215,118,42)"/><text x="30.0563%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.45%)</title><rect x="29.8063%" y="629" width="0.4471%" height="15" fill="rgb(243,119,21)"/><text x="30.0563%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="30.1043%" y="613" width="0.1490%" height="15" fill="rgb(252,177,53)"/><text x="30.3543%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="30.1043%" y="597" width="0.1490%" height="15" fill="rgb(237,209,29)"/><text x="30.3543%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="30.1043%" y="581" width="0.1490%" height="15" fill="rgb(212,65,23)"/><text x="30.3543%" y="591.50"></text></g><g><title>core::fmt::write (21 samples, 3.13%)</title><rect x="27.2727%" y="661" width="3.1297%" height="15" fill="rgb(230,222,46)"/><text x="27.5227%" y="671.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.15%)</title><rect x="30.2534%" y="645" width="0.1490%" height="15" fill="rgb(215,135,32)"/><text x="30.5034%" y="655.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.15%)</title><rect x="30.2534%" y="629" width="0.1490%" height="15" fill="rgb(246,101,22)"/><text x="30.5034%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.15%)</title><rect x="30.2534%" y="613" width="0.1490%" height="15" fill="rgb(206,107,13)"/><text x="30.5034%" y="623.50"></text></g><g><title>core::cmp::min (1 samples, 0.15%)</title><rect x="30.2534%" y="597" width="0.1490%" height="15" fill="rgb(250,100,44)"/><text x="30.5034%" y="607.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.15%)</title><rect x="30.2534%" y="581" width="0.1490%" height="15" fill="rgb(231,147,38)"/><text x="30.5034%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="30.2534%" y="565" width="0.1490%" height="15" fill="rgb(229,8,40)"/><text x="30.5034%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.89%)</title><rect x="30.4024%" y="645" width="0.8942%" height="15" fill="rgb(221,135,30)"/><text x="30.6524%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.75%)</title><rect x="30.5514%" y="629" width="0.7452%" height="15" fill="rgb(249,193,18)"/><text x="30.8014%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="31.4456%" y="613" width="0.1490%" height="15" fill="rgb(209,133,39)"/><text x="31.6956%" y="623.50"></text></g><g><title>decor_mem::views::Views::insert (36 samples, 5.37%)</title><rect x="26.8256%" y="693" width="5.3651%" height="15" fill="rgb(232,100,14)"/><text x="27.0756%" y="703.50">decor_m..</text></g><g><title>decor_mem::views::View::insert_into_index (34 samples, 5.07%)</title><rect x="27.1237%" y="677" width="5.0671%" height="15" fill="rgb(224,185,1)"/><text x="27.3737%" y="687.50">decor_..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 1.79%)</title><rect x="30.4024%" y="661" width="1.7884%" height="15" fill="rgb(223,139,8)"/><text x="30.6524%" y="671.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (6 samples, 0.89%)</title><rect x="31.2966%" y="645" width="0.8942%" height="15" fill="rgb(232,213,38)"/><text x="31.5466%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (6 samples, 0.89%)</title><rect x="31.2966%" y="629" width="0.8942%" height="15" fill="rgb(207,94,22)"/><text x="31.5466%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.60%)</title><rect x="31.5946%" y="613" width="0.5961%" height="15" fill="rgb(219,183,54)"/><text x="31.8446%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.60%)</title><rect x="31.5946%" y="597" width="0.5961%" height="15" fill="rgb(216,185,54)"/><text x="31.8446%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.60%)</title><rect x="31.5946%" y="581" width="0.5961%" height="15" fill="rgb(254,217,39)"/><text x="31.8446%" y="591.50"></text></g><g><title>decor_mem::select::expr_to_col (1 samples, 0.15%)</title><rect x="32.6379%" y="661" width="0.1490%" height="15" fill="rgb(240,178,23)"/><text x="32.8879%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="32.6379%" y="645" width="0.1490%" height="15" fill="rgb(218,11,47)"/><text x="32.8879%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="32.6379%" y="629" width="0.1490%" height="15" fill="rgb(218,51,51)"/><text x="32.8879%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="32.6379%" y="613" width="0.1490%" height="15" fill="rgb(238,126,27)"/><text x="32.8879%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="32.6379%" y="597" width="0.1490%" height="15" fill="rgb(249,202,22)"/><text x="32.8879%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="32.6379%" y="581" width="0.1490%" height="15" fill="rgb(254,195,49)"/><text x="32.8879%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="32.6379%" y="565" width="0.1490%" height="15" fill="rgb(208,123,14)"/><text x="32.8879%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="32.6379%" y="549" width="0.1490%" height="15" fill="rgb(224,200,8)"/><text x="32.8879%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="32.6379%" y="533" width="0.1490%" height="15" fill="rgb(217,61,36)"/><text x="32.8879%" y="543.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (3 samples, 0.45%)</title><rect x="32.4888%" y="677" width="0.4471%" height="15" fill="rgb(206,35,45)"/><text x="32.7388%" y="687.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (1 samples, 0.15%)</title><rect x="32.7869%" y="661" width="0.1490%" height="15" fill="rgb(217,65,33)"/><text x="33.0369%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.15%)</title><rect x="32.7869%" y="645" width="0.1490%" height="15" fill="rgb(222,158,48)"/><text x="33.0369%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.15%)</title><rect x="32.7869%" y="629" width="0.1490%" height="15" fill="rgb(254,2,54)"/><text x="33.0369%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="32.7869%" y="613" width="0.1490%" height="15" fill="rgb(250,143,38)"/><text x="33.0369%" y="623.50"></text></g><g><title>decor_mem::select::expr_to_col (2 samples, 0.30%)</title><rect x="33.2340%" y="661" width="0.2981%" height="15" fill="rgb(248,25,0)"/><text x="33.4840%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.30%)</title><rect x="33.2340%" y="645" width="0.2981%" height="15" fill="rgb(206,152,27)"/><text x="33.4840%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="33.3830%" y="629" width="0.1490%" height="15" fill="rgb(240,77,30)"/><text x="33.6330%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="33.3830%" y="613" width="0.1490%" height="15" fill="rgb(231,5,3)"/><text x="33.6330%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="33.3830%" y="597" width="0.1490%" height="15" fill="rgb(207,226,32)"/><text x="33.6330%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="33.3830%" y="581" width="0.1490%" height="15" fill="rgb(222,207,47)"/><text x="33.6330%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="33.3830%" y="565" width="0.1490%" height="15" fill="rgb(229,115,45)"/><text x="33.6330%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="33.5320%" y="645" width="0.1490%" height="15" fill="rgb(224,191,6)"/><text x="33.7820%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="33.8301%" y="565" width="0.1490%" height="15" fill="rgb(230,227,24)"/><text x="34.0801%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="33.8301%" y="549" width="0.1490%" height="15" fill="rgb(228,80,19)"/><text x="34.0801%" y="559.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.30%)</title><rect x="33.9791%" y="565" width="0.2981%" height="15" fill="rgb(247,229,0)"/><text x="34.2291%" y="575.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.30%)</title><rect x="33.9791%" y="549" width="0.2981%" height="15" fill="rgb(237,194,15)"/><text x="34.2291%" y="559.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.30%)</title><rect x="33.9791%" y="533" width="0.2981%" height="15" fill="rgb(219,203,20)"/><text x="34.2291%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.45%)</title><rect x="35.0224%" y="517" width="0.4471%" height="15" fill="rgb(234,128,8)"/><text x="35.2724%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.94%)</title><rect x="33.6811%" y="613" width="1.9374%" height="15" fill="rgb(248,202,8)"/><text x="33.9311%" y="623.50">&lt;..</text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 1.94%)</title><rect x="33.6811%" y="597" width="1.9374%" height="15" fill="rgb(206,104,37)"/><text x="33.9311%" y="607.50">s..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 1.79%)</title><rect x="33.8301%" y="581" width="1.7884%" height="15" fill="rgb(223,8,27)"/><text x="34.0801%" y="591.50">a..</text></g><g><title>core::unicode::unicode_data::conversions::to_upper (9 samples, 1.34%)</title><rect x="34.2772%" y="565" width="1.3413%" height="15" fill="rgb(216,217,28)"/><text x="34.5272%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 1.04%)</title><rect x="34.5753%" y="549" width="1.0432%" height="15" fill="rgb(249,199,1)"/><text x="34.8253%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 1.04%)</title><rect x="34.5753%" y="533" width="1.0432%" height="15" fill="rgb(240,85,17)"/><text x="34.8253%" y="543.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.15%)</title><rect x="35.4694%" y="517" width="0.1490%" height="15" fill="rgb(206,108,45)"/><text x="35.7194%" y="527.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.15%)</title><rect x="35.4694%" y="501" width="0.1490%" height="15" fill="rgb(245,210,41)"/><text x="35.7194%" y="511.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.15%)</title><rect x="35.4694%" y="485" width="0.1490%" height="15" fill="rgb(206,13,37)"/><text x="35.7194%" y="495.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.15%)</title><rect x="35.4694%" y="469" width="0.1490%" height="15" fill="rgb(250,61,18)"/><text x="35.7194%" y="479.50"></text></g><g><title>tick_sched_timer (1 samples, 0.15%)</title><rect x="35.4694%" y="453" width="0.1490%" height="15" fill="rgb(235,172,48)"/><text x="35.7194%" y="463.50"></text></g><g><title>tick_sched_handle (1 samples, 0.15%)</title><rect x="35.4694%" y="437" width="0.1490%" height="15" fill="rgb(249,201,17)"/><text x="35.7194%" y="447.50"></text></g><g><title>update_process_times (1 samples, 0.15%)</title><rect x="35.4694%" y="421" width="0.1490%" height="15" fill="rgb(219,208,6)"/><text x="35.7194%" y="431.50"></text></g><g><title>scheduler_tick (1 samples, 0.15%)</title><rect x="35.4694%" y="405" width="0.1490%" height="15" fill="rgb(248,31,23)"/><text x="35.7194%" y="415.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.15%)</title><rect x="35.4694%" y="389" width="0.1490%" height="15" fill="rgb(245,15,42)"/><text x="35.7194%" y="399.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.15%)</title><rect x="35.4694%" y="373" width="0.1490%" height="15" fill="rgb(222,217,39)"/><text x="35.7194%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="35.6185%" y="613" width="0.1490%" height="15" fill="rgb(210,219,27)"/><text x="35.8685%" y="623.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.30%)</title><rect x="35.7675%" y="597" width="0.2981%" height="15" fill="rgb(252,166,36)"/><text x="36.0175%" y="607.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="35.9165%" y="581" width="0.1490%" height="15" fill="rgb(245,132,34)"/><text x="36.1665%" y="591.50"></text></g><g><title>core::fmt::write (18 samples, 2.68%)</title><rect x="33.6811%" y="645" width="2.6826%" height="15" fill="rgb(236,54,3)"/><text x="33.9311%" y="655.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (18 samples, 2.68%)</title><rect x="33.6811%" y="629" width="2.6826%" height="15" fill="rgb(241,173,43)"/><text x="33.9311%" y="639.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.60%)</title><rect x="35.7675%" y="613" width="0.5961%" height="15" fill="rgb(215,190,9)"/><text x="36.0175%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.30%)</title><rect x="36.0656%" y="597" width="0.2981%" height="15" fill="rgb(242,101,16)"/><text x="36.3156%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.30%)</title><rect x="36.0656%" y="581" width="0.2981%" height="15" fill="rgb(223,190,21)"/><text x="36.3156%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="36.2146%" y="565" width="0.1490%" height="15" fill="rgb(215,228,25)"/><text x="36.4646%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="36.2146%" y="549" width="0.1490%" height="15" fill="rgb(225,36,22)"/><text x="36.4646%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="36.5127%" y="581" width="0.1490%" height="15" fill="rgb(251,106,46)"/><text x="36.7627%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="36.5127%" y="565" width="0.1490%" height="15" fill="rgb(208,90,1)"/><text x="36.7627%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.15%)</title><rect x="36.5127%" y="549" width="0.1490%" height="15" fill="rgb(243,10,4)"/><text x="36.7627%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="36.5127%" y="533" width="0.1490%" height="15" fill="rgb(212,137,27)"/><text x="36.7627%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="36.5127%" y="517" width="0.1490%" height="15" fill="rgb(231,220,49)"/><text x="36.7627%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="36.5127%" y="501" width="0.1490%" height="15" fill="rgb(237,96,20)"/><text x="36.7627%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="36.5127%" y="485" width="0.1490%" height="15" fill="rgb(239,229,30)"/><text x="36.7627%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="36.5127%" y="469" width="0.1490%" height="15" fill="rgb(219,65,33)"/><text x="36.7627%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="36.5127%" y="453" width="0.1490%" height="15" fill="rgb(243,134,7)"/><text x="36.7627%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="36.5127%" y="437" width="0.1490%" height="15" fill="rgb(216,177,54)"/><text x="36.7627%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="36.5127%" y="421" width="0.1490%" height="15" fill="rgb(211,160,20)"/><text x="36.7627%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="36.5127%" y="405" width="0.1490%" height="15" fill="rgb(239,85,39)"/><text x="36.7627%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="36.5127%" y="389" width="0.1490%" height="15" fill="rgb(232,125,22)"/><text x="36.7627%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="36.5127%" y="373" width="0.1490%" height="15" fill="rgb(244,57,34)"/><text x="36.7627%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="36.5127%" y="357" width="0.1490%" height="15" fill="rgb(214,203,32)"/><text x="36.7627%" y="367.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.15%)</title><rect x="37.1088%" y="517" width="0.1490%" height="15" fill="rgb(207,58,43)"/><text x="37.3588%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="37.1088%" y="501" width="0.1490%" height="15" fill="rgb(215,193,15)"/><text x="37.3588%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.60%)</title><rect x="36.9598%" y="533" width="0.5961%" height="15" fill="rgb(232,15,44)"/><text x="37.2098%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.30%)</title><rect x="37.2578%" y="517" width="0.2981%" height="15" fill="rgb(212,3,48)"/><text x="37.5078%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="37.4069%" y="501" width="0.1490%" height="15" fill="rgb(218,128,7)"/><text x="37.6569%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="37.4069%" y="485" width="0.1490%" height="15" fill="rgb(226,216,39)"/><text x="37.6569%" y="495.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="37.4069%" y="469" width="0.1490%" height="15" fill="rgb(243,47,51)"/><text x="37.6569%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 1.04%)</title><rect x="36.6617%" y="565" width="1.0432%" height="15" fill="rgb(241,183,40)"/><text x="36.9117%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 1.04%)</title><rect x="36.6617%" y="549" width="1.0432%" height="15" fill="rgb(231,217,32)"/><text x="36.9117%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.15%)</title><rect x="37.5559%" y="533" width="0.1490%" height="15" fill="rgb(229,61,38)"/><text x="37.8059%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="37.5559%" y="517" width="0.1490%" height="15" fill="rgb(225,210,5)"/><text x="37.8059%" y="527.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure (33 samples, 4.92%)</title><rect x="32.9359%" y="677" width="4.9180%" height="15" fill="rgb(231,79,45)"/><text x="33.1859%" y="687.50">decor_..</text></g><g><title>decor_mem::select::tablecolumn_matches_col (29 samples, 4.32%)</title><rect x="33.5320%" y="661" width="4.3219%" height="15" fill="rgb(224,100,7)"/><text x="33.7820%" y="671.50">decor..</text></g><g><title>decor_mem::views::TableColumnDef::name (10 samples, 1.49%)</title><rect x="36.3636%" y="645" width="1.4903%" height="15" fill="rgb(241,198,18)"/><text x="36.6136%" y="655.50"></text></g><g><title>alloc::fmt::format (10 samples, 1.49%)</title><rect x="36.3636%" y="629" width="1.4903%" height="15" fill="rgb(252,97,53)"/><text x="36.6136%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 1.49%)</title><rect x="36.3636%" y="613" width="1.4903%" height="15" fill="rgb(220,88,7)"/><text x="36.6136%" y="623.50"></text></g><g><title>core::fmt::write (10 samples, 1.49%)</title><rect x="36.3636%" y="597" width="1.4903%" height="15" fill="rgb(213,176,14)"/><text x="36.6136%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 1.19%)</title><rect x="36.6617%" y="581" width="1.1923%" height="15" fill="rgb(246,73,7)"/><text x="36.9117%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="37.7049%" y="565" width="0.1490%" height="15" fill="rgb(245,64,36)"/><text x="37.9549%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="37.8539%" y="661" width="0.1490%" height="15" fill="rgb(245,80,10)"/><text x="38.1039%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="37.8539%" y="645" width="0.1490%" height="15" fill="rgb(232,107,50)"/><text x="38.1039%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="37.8539%" y="629" width="0.1490%" height="15" fill="rgb(253,3,0)"/><text x="38.1039%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="37.8539%" y="613" width="0.1490%" height="15" fill="rgb(212,99,53)"/><text x="38.1039%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="37.8539%" y="597" width="0.1490%" height="15" fill="rgb(249,111,54)"/><text x="38.1039%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.15%)</title><rect x="38.0030%" y="661" width="0.1490%" height="15" fill="rgb(249,55,30)"/><text x="38.2530%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.15%)</title><rect x="38.0030%" y="645" width="0.1490%" height="15" fill="rgb(237,47,42)"/><text x="38.2530%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.15%)</title><rect x="38.0030%" y="629" width="0.1490%" height="15" fill="rgb(211,20,18)"/><text x="38.2530%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="38.0030%" y="613" width="0.1490%" height="15" fill="rgb(231,203,46)"/><text x="38.2530%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.15%)</title><rect x="38.0030%" y="597" width="0.1490%" height="15" fill="rgb(237,142,3)"/><text x="38.2530%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="38.0030%" y="581" width="0.1490%" height="15" fill="rgb(241,107,1)"/><text x="38.2530%" y="591.50"></text></g><g><title>decor_mem::views::View::update_index (3 samples, 0.45%)</title><rect x="37.8539%" y="677" width="0.4471%" height="15" fill="rgb(229,83,13)"/><text x="38.1039%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.15%)</title><rect x="38.1520%" y="661" width="0.1490%" height="15" fill="rgb(241,91,40)"/><text x="38.4020%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.15%)</title><rect x="38.1520%" y="645" width="0.1490%" height="15" fill="rgb(225,3,45)"/><text x="38.4020%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="38.1520%" y="629" width="0.1490%" height="15" fill="rgb(244,223,14)"/><text x="38.4020%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (153 samples, 22.80%)</title><rect x="15.6483%" y="725" width="22.8018%" height="15" fill="rgb(224,124,37)"/><text x="15.8983%" y="735.50">decor_mem::query_transformer::QueryT..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (153 samples, 22.80%)</title><rect x="15.6483%" y="709" width="22.8018%" height="15" fill="rgb(251,171,30)"/><text x="15.8983%" y="719.50">decor_mem::query_transformer::QueryT..</text></g><g><title>decor_mem::views::Views::update (42 samples, 6.26%)</title><rect x="32.1908%" y="693" width="6.2593%" height="15" fill="rgb(236,46,54)"/><text x="32.4408%" y="703.50">decor_me..</text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="38.3010%" y="677" width="0.1490%" height="15" fill="rgb(245,213,5)"/><text x="38.5510%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="38.3010%" y="661" width="0.1490%" height="15" fill="rgb(230,144,27)"/><text x="38.5510%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="38.4501%" y="693" width="0.1490%" height="15" fill="rgb(220,86,6)"/><text x="38.7001%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="38.4501%" y="677" width="0.1490%" height="15" fill="rgb(240,20,13)"/><text x="38.7001%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="38.4501%" y="661" width="0.1490%" height="15" fill="rgb(217,89,34)"/><text x="38.7001%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="38.5991%" y="693" width="0.1490%" height="15" fill="rgb(229,13,5)"/><text x="38.8491%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="38.5991%" y="677" width="0.1490%" height="15" fill="rgb(244,67,35)"/><text x="38.8491%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.45%)</title><rect x="38.4501%" y="709" width="0.4471%" height="15" fill="rgb(221,40,2)"/><text x="38.7001%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="38.7481%" y="693" width="0.1490%" height="15" fill="rgb(237,157,21)"/><text x="38.9981%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.15%)</title><rect x="38.8972%" y="709" width="0.1490%" height="15" fill="rgb(222,94,11)"/><text x="39.1472%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.15%)</title><rect x="38.8972%" y="693" width="0.1490%" height="15" fill="rgb(249,113,6)"/><text x="39.1472%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.15%)</title><rect x="38.8972%" y="677" width="0.1490%" height="15" fill="rgb(238,137,36)"/><text x="39.1472%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="38.8972%" y="661" width="0.1490%" height="15" fill="rgb(210,102,26)"/><text x="39.1472%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="39.3443%" y="677" width="0.1490%" height="15" fill="rgb(218,30,30)"/><text x="39.5943%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="39.3443%" y="661" width="0.1490%" height="15" fill="rgb(214,67,26)"/><text x="39.5943%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="39.3443%" y="645" width="0.1490%" height="15" fill="rgb(251,9,53)"/><text x="39.5943%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="39.3443%" y="629" width="0.1490%" height="15" fill="rgb(228,204,25)"/><text x="39.5943%" y="639.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="39.4933%" y="677" width="0.1490%" height="15" fill="rgb(207,153,8)"/><text x="39.7433%" y="687.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="39.4933%" y="661" width="0.1490%" height="15" fill="rgb(242,9,16)"/><text x="39.7433%" y="671.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="39.4933%" y="645" width="0.1490%" height="15" fill="rgb(217,211,10)"/><text x="39.7433%" y="655.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="39.4933%" y="629" width="0.1490%" height="15" fill="rgb(219,228,52)"/><text x="39.7433%" y="639.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.15%)</title><rect x="39.4933%" y="613" width="0.1490%" height="15" fill="rgb(231,92,29)"/><text x="39.7433%" y="623.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.15%)</title><rect x="39.4933%" y="597" width="0.1490%" height="15" fill="rgb(232,8,23)"/><text x="39.7433%" y="607.50"></text></g><g><title>try_charge (1 samples, 0.15%)</title><rect x="39.4933%" y="581" width="0.1490%" height="15" fill="rgb(216,211,34)"/><text x="39.7433%" y="591.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="40.2385%" y="645" width="0.1490%" height="15" fill="rgb(236,151,0)"/><text x="40.4885%" y="655.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (6 samples, 0.89%)</title><rect x="39.6423%" y="677" width="0.8942%" height="15" fill="rgb(209,168,3)"/><text x="39.8923%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (5 samples, 0.75%)</title><rect x="39.7914%" y="661" width="0.7452%" height="15" fill="rgb(208,129,28)"/><text x="40.0414%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="40.3875%" y="645" width="0.1490%" height="15" fill="rgb(229,78,22)"/><text x="40.6375%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="40.3875%" y="629" width="0.1490%" height="15" fill="rgb(228,187,13)"/><text x="40.6375%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="40.3875%" y="613" width="0.1490%" height="15" fill="rgb(240,119,24)"/><text x="40.6375%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="40.3875%" y="597" width="0.1490%" height="15" fill="rgb(209,194,42)"/><text x="40.6375%" y="607.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (15 samples, 2.24%)</title><rect x="38.4501%" y="725" width="2.2355%" height="15" fill="rgb(247,200,46)"/><text x="38.7001%" y="735.50">d..</text></g><g><title>sql_parser::parser::parse_statements (11 samples, 1.64%)</title><rect x="39.0462%" y="709" width="1.6393%" height="15" fill="rgb(218,76,16)"/><text x="39.2962%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (10 samples, 1.49%)</title><rect x="39.1952%" y="693" width="1.4903%" height="15" fill="rgb(225,21,48)"/><text x="39.4452%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.15%)</title><rect x="40.5365%" y="677" width="0.1490%" height="15" fill="rgb(239,223,50)"/><text x="40.7865%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="40.5365%" y="661" width="0.1490%" height="15" fill="rgb(244,45,21)"/><text x="40.7865%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="40.5365%" y="645" width="0.1490%" height="15" fill="rgb(232,33,43)"/><text x="40.7865%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.30%)</title><rect x="40.6855%" y="677" width="0.2981%" height="15" fill="rgb(209,8,3)"/><text x="40.9355%" y="687.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.30%)</title><rect x="40.6855%" y="661" width="0.2981%" height="15" fill="rgb(214,25,53)"/><text x="40.9355%" y="671.50"></text></g><g><title>_int_realloc (2 samples, 0.30%)</title><rect x="40.6855%" y="645" width="0.2981%" height="15" fill="rgb(254,186,54)"/><text x="40.9355%" y="655.50"></text></g><g><title>_int_malloc (2 samples, 0.30%)</title><rect x="40.6855%" y="629" width="0.2981%" height="15" fill="rgb(208,174,49)"/><text x="40.9355%" y="639.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.75%)</title><rect x="42.1759%" y="645" width="0.7452%" height="15" fill="rgb(233,191,51)"/><text x="42.4259%" y="655.50"></text></g><g><title>_int_malloc (5 samples, 0.75%)</title><rect x="42.1759%" y="629" width="0.7452%" height="15" fill="rgb(222,134,10)"/><text x="42.4259%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 1.19%)</title><rect x="42.9210%" y="645" width="1.1923%" height="15" fill="rgb(230,226,20)"/><text x="43.1710%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="44.1133%" y="645" width="0.1490%" height="15" fill="rgb(251,111,25)"/><text x="44.3633%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (198 samples, 29.51%)</title><rect x="15.2012%" y="757" width="29.5082%" height="15" fill="rgb(224,40,46)"/><text x="15.4512%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (195 samples, 29.06%)</title><rect x="15.6483%" y="741" width="29.0611%" height="15" fill="rgb(236,108,47)"/><text x="15.8983%" y="751.50">&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on..</text></g><g><title>decor_mem::stats::get_qtype (27 samples, 4.02%)</title><rect x="40.6855%" y="725" width="4.0238%" height="15" fill="rgb(234,93,0)"/><text x="40.9355%" y="735.50">deco..</text></g><g><title>sql_parser::parser::parse_statements (27 samples, 4.02%)</title><rect x="40.6855%" y="709" width="4.0238%" height="15" fill="rgb(224,213,32)"/><text x="40.9355%" y="719.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (27 samples, 4.02%)</title><rect x="40.6855%" y="693" width="4.0238%" height="15" fill="rgb(251,11,48)"/><text x="40.9355%" y="703.50">sql_..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (25 samples, 3.73%)</title><rect x="40.9836%" y="677" width="3.7258%" height="15" fill="rgb(236,173,5)"/><text x="41.2336%" y="687.50">sql_..</text></g><g><title>sql_parser::tokenizer::Token::make_word (25 samples, 3.73%)</title><rect x="40.9836%" y="661" width="3.7258%" height="15" fill="rgb(230,95,12)"/><text x="41.2336%" y="671.50">sql_..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.45%)</title><rect x="44.2623%" y="645" width="0.4471%" height="15" fill="rgb(232,209,1)"/><text x="44.5123%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.30%)</title><rect x="44.4113%" y="629" width="0.2981%" height="15" fill="rgb(232,6,1)"/><text x="44.6613%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.30%)</title><rect x="44.4113%" y="613" width="0.2981%" height="15" fill="rgb(210,224,50)"/><text x="44.6613%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.30%)</title><rect x="44.4113%" y="597" width="0.2981%" height="15" fill="rgb(228,127,35)"/><text x="44.6613%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="44.5604%" y="581" width="0.1490%" height="15" fill="rgb(245,102,45)"/><text x="44.8104%" y="591.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.15%)</title><rect x="44.7094%" y="725" width="0.1490%" height="15" fill="rgb(214,1,49)"/><text x="44.9594%" y="735.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.15%)</title><rect x="44.7094%" y="709" width="0.1490%" height="15" fill="rgb(226,163,40)"/><text x="44.9594%" y="719.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.15%)</title><rect x="44.7094%" y="693" width="0.1490%" height="15" fill="rgb(239,212,28)"/><text x="44.9594%" y="703.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.15%)</title><rect x="44.7094%" y="677" width="0.1490%" height="15" fill="rgb(220,20,13)"/><text x="44.9594%" y="687.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.30%)</title><rect x="44.7094%" y="757" width="0.2981%" height="15" fill="rgb(210,164,35)"/><text x="44.9594%" y="767.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.30%)</title><rect x="44.7094%" y="741" width="0.2981%" height="15" fill="rgb(248,109,41)"/><text x="44.9594%" y="751.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.15%)</title><rect x="44.8584%" y="725" width="0.1490%" height="15" fill="rgb(238,23,50)"/><text x="45.1084%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.15%)</title><rect x="44.8584%" y="709" width="0.1490%" height="15" fill="rgb(211,48,49)"/><text x="45.1084%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="45.0075%" y="613" width="0.1490%" height="15" fill="rgb(223,36,21)"/><text x="45.2575%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="45.0075%" y="597" width="0.1490%" height="15" fill="rgb(207,123,46)"/><text x="45.2575%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.15%)</title><rect x="45.0075%" y="581" width="0.1490%" height="15" fill="rgb(240,218,32)"/><text x="45.2575%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="45.0075%" y="565" width="0.1490%" height="15" fill="rgb(252,5,43)"/><text x="45.2575%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="45.0075%" y="549" width="0.1490%" height="15" fill="rgb(252,84,19)"/><text x="45.2575%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="45.0075%" y="533" width="0.1490%" height="15" fill="rgb(243,152,39)"/><text x="45.2575%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="45.0075%" y="517" width="0.1490%" height="15" fill="rgb(234,160,15)"/><text x="45.2575%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="45.0075%" y="501" width="0.1490%" height="15" fill="rgb(237,34,20)"/><text x="45.2575%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="45.0075%" y="485" width="0.1490%" height="15" fill="rgb(229,97,13)"/><text x="45.2575%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="45.0075%" y="469" width="0.1490%" height="15" fill="rgb(234,71,50)"/><text x="45.2575%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="45.0075%" y="453" width="0.1490%" height="15" fill="rgb(253,155,4)"/><text x="45.2575%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="45.0075%" y="437" width="0.1490%" height="15" fill="rgb(222,185,37)"/><text x="45.2575%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="45.0075%" y="421" width="0.1490%" height="15" fill="rgb(251,177,13)"/><text x="45.2575%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="45.0075%" y="405" width="0.1490%" height="15" fill="rgb(250,179,40)"/><text x="45.2575%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="45.0075%" y="389" width="0.1490%" height="15" fill="rgb(242,44,2)"/><text x="45.2575%" y="399.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (2 samples, 0.30%)</title><rect x="45.0075%" y="741" width="0.2981%" height="15" fill="rgb(216,177,13)"/><text x="45.2575%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.30%)</title><rect x="45.0075%" y="725" width="0.2981%" height="15" fill="rgb(216,106,43)"/><text x="45.2575%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.30%)</title><rect x="45.0075%" y="709" width="0.2981%" height="15" fill="rgb(216,183,2)"/><text x="45.2575%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.30%)</title><rect x="45.0075%" y="693" width="0.2981%" height="15" fill="rgb(249,75,3)"/><text x="45.2575%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.30%)</title><rect x="45.0075%" y="677" width="0.2981%" height="15" fill="rgb(219,67,39)"/><text x="45.2575%" y="687.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.30%)</title><rect x="45.0075%" y="661" width="0.2981%" height="15" fill="rgb(253,228,2)"/><text x="45.2575%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.30%)</title><rect x="45.0075%" y="645" width="0.2981%" height="15" fill="rgb(235,138,27)"/><text x="45.2575%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.30%)</title><rect x="45.0075%" y="629" width="0.2981%" height="15" fill="rgb(236,97,51)"/><text x="45.2575%" y="639.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="45.1565%" y="613" width="0.1490%" height="15" fill="rgb(240,80,30)"/><text x="45.4065%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="45.4545%" y="677" width="0.1490%" height="15" fill="rgb(230,178,19)"/><text x="45.7045%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="45.7526%" y="661" width="0.1490%" height="15" fill="rgb(210,190,27)"/><text x="46.0026%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="45.7526%" y="645" width="0.1490%" height="15" fill="rgb(222,107,31)"/><text x="46.0026%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="45.7526%" y="629" width="0.1490%" height="15" fill="rgb(216,127,34)"/><text x="46.0026%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="45.7526%" y="613" width="0.1490%" height="15" fill="rgb(234,116,52)"/><text x="46.0026%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="45.7526%" y="597" width="0.1490%" height="15" fill="rgb(222,124,15)"/><text x="46.0026%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="45.7526%" y="581" width="0.1490%" height="15" fill="rgb(231,179,28)"/><text x="46.0026%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="45.7526%" y="565" width="0.1490%" height="15" fill="rgb(226,93,45)"/><text x="46.0026%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="45.7526%" y="549" width="0.1490%" height="15" fill="rgb(215,8,51)"/><text x="46.0026%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="45.7526%" y="533" width="0.1490%" height="15" fill="rgb(223,106,5)"/><text x="46.0026%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="45.7526%" y="517" width="0.1490%" height="15" fill="rgb(250,191,5)"/><text x="46.0026%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="45.7526%" y="501" width="0.1490%" height="15" fill="rgb(242,132,44)"/><text x="46.0026%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="45.7526%" y="485" width="0.1490%" height="15" fill="rgb(251,152,29)"/><text x="46.0026%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="45.7526%" y="469" width="0.1490%" height="15" fill="rgb(218,179,5)"/><text x="46.0026%" y="479.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (30 samples, 4.47%)</title><rect x="45.6036%" y="677" width="4.4709%" height="15" fill="rgb(227,67,19)"/><text x="45.8536%" y="687.50">sql_p..</text></g><g><title>sql_parser::parser::Parser::expected (28 samples, 4.17%)</title><rect x="45.9016%" y="661" width="4.1729%" height="15" fill="rgb(233,119,31)"/><text x="46.1516%" y="671.50">sql_p..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 4.02%)</title><rect x="46.0507%" y="645" width="4.0238%" height="15" fill="rgb(241,120,22)"/><text x="46.3007%" y="655.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 4.02%)</title><rect x="46.0507%" y="629" width="4.0238%" height="15" fill="rgb(224,102,30)"/><text x="46.3007%" y="639.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 4.02%)</title><rect x="46.0507%" y="613" width="4.0238%" height="15" fill="rgb(210,164,37)"/><text x="46.3007%" y="623.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (27 samples, 4.02%)</title><rect x="46.0507%" y="597" width="4.0238%" height="15" fill="rgb(226,191,16)"/><text x="46.3007%" y="607.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (27 samples, 4.02%)</title><rect x="46.0507%" y="581" width="4.0238%" height="15" fill="rgb(214,40,45)"/><text x="46.3007%" y="591.50">allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 4.02%)</title><rect x="46.0507%" y="565" width="4.0238%" height="15" fill="rgb(244,29,26)"/><text x="46.3007%" y="575.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (27 samples, 4.02%)</title><rect x="46.0507%" y="549" width="4.0238%" height="15" fill="rgb(216,16,5)"/><text x="46.3007%" y="559.50">allo..</text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 4.02%)</title><rect x="46.0507%" y="533" width="4.0238%" height="15" fill="rgb(249,76,35)"/><text x="46.3007%" y="543.50">core..</text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 4.02%)</title><rect x="46.0507%" y="517" width="4.0238%" height="15" fill="rgb(207,11,44)"/><text x="46.3007%" y="527.50">__me..</text></g><g><title>sql_parser::parser::Parser::check_descent (36 samples, 5.37%)</title><rect x="45.0075%" y="757" width="5.3651%" height="15" fill="rgb(228,190,49)"/><text x="45.2575%" y="767.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (34 samples, 5.07%)</title><rect x="45.3055%" y="741" width="5.0671%" height="15" fill="rgb(214,173,12)"/><text x="45.5555%" y="751.50">sql_pa..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (34 samples, 5.07%)</title><rect x="45.3055%" y="725" width="5.0671%" height="15" fill="rgb(218,26,35)"/><text x="45.5555%" y="735.50">sql_pa..</text></g><g><title>sql_parser::parser::Parser::check_descent (34 samples, 5.07%)</title><rect x="45.3055%" y="709" width="5.0671%" height="15" fill="rgb(220,200,19)"/><text x="45.5555%" y="719.50">sql_pa..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (34 samples, 5.07%)</title><rect x="45.3055%" y="693" width="5.0671%" height="15" fill="rgb(239,95,49)"/><text x="45.5555%" y="703.50">sql_pa..</text></g><g><title>sql_parser::parser::Parser::parse_value (2 samples, 0.30%)</title><rect x="50.0745%" y="677" width="0.2981%" height="15" fill="rgb(235,85,53)"/><text x="50.3245%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="50.2235%" y="661" width="0.1490%" height="15" fill="rgb(233,133,31)"/><text x="50.4735%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="50.2235%" y="645" width="0.1490%" height="15" fill="rgb(218,25,20)"/><text x="50.4735%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="50.2235%" y="629" width="0.1490%" height="15" fill="rgb(252,210,38)"/><text x="50.4735%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="50.2235%" y="613" width="0.1490%" height="15" fill="rgb(242,134,21)"/><text x="50.4735%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="50.2235%" y="597" width="0.1490%" height="15" fill="rgb(213,28,48)"/><text x="50.4735%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="50.2235%" y="581" width="0.1490%" height="15" fill="rgb(250,196,2)"/><text x="50.4735%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="50.2235%" y="565" width="0.1490%" height="15" fill="rgb(227,5,17)"/><text x="50.4735%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="50.2235%" y="549" width="0.1490%" height="15" fill="rgb(221,226,24)"/><text x="50.4735%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="50.2235%" y="533" width="0.1490%" height="15" fill="rgb(211,5,48)"/><text x="50.4735%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="50.2235%" y="517" width="0.1490%" height="15" fill="rgb(219,150,6)"/><text x="50.4735%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="50.2235%" y="501" width="0.1490%" height="15" fill="rgb(251,46,16)"/><text x="50.4735%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="50.2235%" y="485" width="0.1490%" height="15" fill="rgb(220,204,40)"/><text x="50.4735%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="50.2235%" y="469" width="0.1490%" height="15" fill="rgb(211,85,2)"/><text x="50.4735%" y="479.50"></text></g><g><title>sql_parser::parser::Parser::expect_token (1 samples, 0.15%)</title><rect x="50.3726%" y="757" width="0.1490%" height="15" fill="rgb(229,17,7)"/><text x="50.6226%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.15%)</title><rect x="50.5216%" y="757" width="0.1490%" height="15" fill="rgb(239,72,28)"/><text x="50.7716%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.30%)</title><rect x="50.6706%" y="757" width="0.2981%" height="15" fill="rgb(230,47,54)"/><text x="50.9206%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.30%)</title><rect x="50.6706%" y="741" width="0.2981%" height="15" fill="rgb(214,50,8)"/><text x="50.9206%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.30%)</title><rect x="50.6706%" y="725" width="0.2981%" height="15" fill="rgb(216,198,43)"/><text x="50.9206%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.30%)</title><rect x="50.6706%" y="709" width="0.2981%" height="15" fill="rgb(234,20,35)"/><text x="50.9206%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.30%)</title><rect x="50.6706%" y="693" width="0.2981%" height="15" fill="rgb(254,45,19)"/><text x="50.9206%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.30%)</title><rect x="50.6706%" y="677" width="0.2981%" height="15" fill="rgb(219,14,44)"/><text x="50.9206%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="50.6706%" y="661" width="0.2981%" height="15" fill="rgb(217,220,26)"/><text x="50.9206%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="50.6706%" y="645" width="0.2981%" height="15" fill="rgb(213,158,28)"/><text x="50.9206%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.30%)</title><rect x="50.6706%" y="629" width="0.2981%" height="15" fill="rgb(252,51,52)"/><text x="50.9206%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.30%)</title><rect x="50.6706%" y="613" width="0.2981%" height="15" fill="rgb(246,89,16)"/><text x="50.9206%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.30%)</title><rect x="50.6706%" y="597" width="0.2981%" height="15" fill="rgb(216,158,49)"/><text x="50.9206%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.30%)</title><rect x="50.6706%" y="581" width="0.2981%" height="15" fill="rgb(236,107,19)"/><text x="50.9206%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.30%)</title><rect x="50.6706%" y="565" width="0.2981%" height="15" fill="rgb(228,185,30)"/><text x="50.9206%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.30%)</title><rect x="50.6706%" y="549" width="0.2981%" height="15" fill="rgb(246,134,8)"/><text x="50.9206%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.30%)</title><rect x="50.6706%" y="533" width="0.2981%" height="15" fill="rgb(214,143,50)"/><text x="50.9206%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.30%)</title><rect x="50.6706%" y="517" width="0.2981%" height="15" fill="rgb(228,75,8)"/><text x="50.9206%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.30%)</title><rect x="50.6706%" y="501" width="0.2981%" height="15" fill="rgb(207,175,4)"/><text x="50.9206%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.30%)</title><rect x="50.6706%" y="485" width="0.2981%" height="15" fill="rgb(205,108,24)"/><text x="50.9206%" y="495.50"></text></g><g><title>_int_malloc (2 samples, 0.30%)</title><rect x="50.6706%" y="469" width="0.2981%" height="15" fill="rgb(244,120,49)"/><text x="50.9206%" y="479.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="50.8197%" y="453" width="0.1490%" height="15" fill="rgb(223,47,38)"/><text x="51.0697%" y="463.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="50.8197%" y="437" width="0.1490%" height="15" fill="rgb(229,179,11)"/><text x="51.0697%" y="447.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="50.8197%" y="421" width="0.1490%" height="15" fill="rgb(231,122,1)"/><text x="51.0697%" y="431.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="50.8197%" y="405" width="0.1490%" height="15" fill="rgb(245,119,9)"/><text x="51.0697%" y="415.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="50.8197%" y="389" width="0.1490%" height="15" fill="rgb(241,163,25)"/><text x="51.0697%" y="399.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.15%)</title><rect x="50.8197%" y="373" width="0.1490%" height="15" fill="rgb(217,214,3)"/><text x="51.0697%" y="383.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="50.8197%" y="357" width="0.1490%" height="15" fill="rgb(240,86,28)"/><text x="51.0697%" y="367.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="50.8197%" y="341" width="0.1490%" height="15" fill="rgb(215,47,9)"/><text x="51.0697%" y="351.50"></text></g><g><title>prep_new_page (1 samples, 0.15%)</title><rect x="50.8197%" y="325" width="0.1490%" height="15" fill="rgb(252,25,45)"/><text x="51.0697%" y="335.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.15%)</title><rect x="50.8197%" y="309" width="0.1490%" height="15" fill="rgb(251,164,9)"/><text x="51.0697%" y="319.50"></text></g><g><title>clear_page_erms (1 samples, 0.15%)</title><rect x="50.8197%" y="293" width="0.1490%" height="15" fill="rgb(233,194,0)"/><text x="51.0697%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="50.9687%" y="693" width="0.1490%" height="15" fill="rgb(249,111,24)"/><text x="51.2187%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="51.1177%" y="677" width="0.1490%" height="15" fill="rgb(250,223,3)"/><text x="51.3677%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="51.1177%" y="661" width="0.1490%" height="15" fill="rgb(236,178,37)"/><text x="51.3677%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="51.1177%" y="645" width="0.1490%" height="15" fill="rgb(241,158,50)"/><text x="51.3677%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="51.1177%" y="629" width="0.1490%" height="15" fill="rgb(213,121,41)"/><text x="51.3677%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="51.1177%" y="613" width="0.1490%" height="15" fill="rgb(240,92,3)"/><text x="51.3677%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="51.1177%" y="597" width="0.1490%" height="15" fill="rgb(205,123,3)"/><text x="51.3677%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="51.1177%" y="581" width="0.1490%" height="15" fill="rgb(205,97,47)"/><text x="51.3677%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="51.1177%" y="565" width="0.1490%" height="15" fill="rgb(247,152,14)"/><text x="51.3677%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="51.1177%" y="549" width="0.1490%" height="15" fill="rgb(248,195,53)"/><text x="51.3677%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="51.1177%" y="533" width="0.1490%" height="15" fill="rgb(226,201,16)"/><text x="51.3677%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="51.1177%" y="517" width="0.1490%" height="15" fill="rgb(205,98,0)"/><text x="51.3677%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="51.1177%" y="501" width="0.1490%" height="15" fill="rgb(214,191,48)"/><text x="51.3677%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="51.1177%" y="485" width="0.1490%" height="15" fill="rgb(237,112,39)"/><text x="51.3677%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="51.1177%" y="469" width="0.1490%" height="15" fill="rgb(247,203,27)"/><text x="51.3677%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="51.2668%" y="677" width="0.1490%" height="15" fill="rgb(235,124,28)"/><text x="51.5168%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (4 samples, 0.60%)</title><rect x="50.9687%" y="725" width="0.5961%" height="15" fill="rgb(208,207,46)"/><text x="51.2187%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.60%)</title><rect x="50.9687%" y="709" width="0.5961%" height="15" fill="rgb(234,176,4)"/><text x="51.2187%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.45%)</title><rect x="51.1177%" y="693" width="0.4471%" height="15" fill="rgb(230,133,28)"/><text x="51.3677%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.15%)</title><rect x="51.4158%" y="677" width="0.1490%" height="15" fill="rgb(211,137,40)"/><text x="51.6658%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="51.5648%" y="709" width="0.1490%" height="15" fill="rgb(254,35,13)"/><text x="51.8148%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="51.7139%" y="709" width="0.1490%" height="15" fill="rgb(225,49,51)"/><text x="51.9639%" y="719.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="51.7139%" y="693" width="0.1490%" height="15" fill="rgb(251,10,15)"/><text x="51.9639%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="51.8629%" y="709" width="0.1490%" height="15" fill="rgb(228,207,15)"/><text x="52.1129%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="52.0119%" y="709" width="0.1490%" height="15" fill="rgb(241,99,19)"/><text x="52.2619%" y="719.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.15%)</title><rect x="52.0119%" y="693" width="0.1490%" height="15" fill="rgb(207,104,49)"/><text x="52.2619%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="52.0119%" y="677" width="0.1490%" height="15" fill="rgb(234,99,18)"/><text x="52.2619%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.15%)</title><rect x="52.1610%" y="709" width="0.1490%" height="15" fill="rgb(213,191,49)"/><text x="52.4110%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.15%)</title><rect x="52.1610%" y="693" width="0.1490%" height="15" fill="rgb(210,226,19)"/><text x="52.4110%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="52.1610%" y="677" width="0.1490%" height="15" fill="rgb(229,97,18)"/><text x="52.4110%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="52.3100%" y="613" width="0.1490%" height="15" fill="rgb(211,167,15)"/><text x="52.5600%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="52.3100%" y="597" width="0.1490%" height="15" fill="rgb(210,169,34)"/><text x="52.5600%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="52.3100%" y="581" width="0.1490%" height="15" fill="rgb(241,121,31)"/><text x="52.5600%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="52.3100%" y="565" width="0.1490%" height="15" fill="rgb(232,40,11)"/><text x="52.5600%" y="575.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="52.3100%" y="693" width="0.2981%" height="15" fill="rgb(205,86,26)"/><text x="52.5600%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="52.3100%" y="677" width="0.2981%" height="15" fill="rgb(231,126,28)"/><text x="52.5600%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="52.3100%" y="661" width="0.2981%" height="15" fill="rgb(219,221,18)"/><text x="52.5600%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.30%)</title><rect x="52.3100%" y="645" width="0.2981%" height="15" fill="rgb(211,40,0)"/><text x="52.5600%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.30%)</title><rect x="52.3100%" y="629" width="0.2981%" height="15" fill="rgb(239,85,43)"/><text x="52.5600%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="52.4590%" y="613" width="0.1490%" height="15" fill="rgb(231,55,21)"/><text x="52.7090%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="52.4590%" y="597" width="0.1490%" height="15" fill="rgb(225,184,43)"/><text x="52.7090%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="52.4590%" y="581" width="0.1490%" height="15" fill="rgb(251,158,41)"/><text x="52.7090%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="52.4590%" y="565" width="0.1490%" height="15" fill="rgb(234,159,37)"/><text x="52.7090%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="52.4590%" y="549" width="0.1490%" height="15" fill="rgb(216,204,22)"/><text x="52.7090%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="52.4590%" y="533" width="0.1490%" height="15" fill="rgb(214,17,3)"/><text x="52.7090%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="52.4590%" y="517" width="0.1490%" height="15" fill="rgb(212,111,17)"/><text x="52.7090%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="52.4590%" y="501" width="0.1490%" height="15" fill="rgb(221,157,24)"/><text x="52.7090%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="52.4590%" y="485" width="0.1490%" height="15" fill="rgb(252,16,13)"/><text x="52.7090%" y="495.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.45%)</title><rect x="52.3100%" y="709" width="0.4471%" height="15" fill="rgb(221,62,2)"/><text x="52.5600%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="52.6080%" y="693" width="0.1490%" height="15" fill="rgb(247,87,22)"/><text x="52.8580%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (9 samples, 1.34%)</title><rect x="51.5648%" y="725" width="1.3413%" height="15" fill="rgb(215,73,9)"/><text x="51.8148%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.15%)</title><rect x="52.7571%" y="709" width="0.1490%" height="15" fill="rgb(207,175,33)"/><text x="53.0071%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="52.7571%" y="693" width="0.1490%" height="15" fill="rgb(243,129,54)"/><text x="53.0071%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="52.7571%" y="677" width="0.1490%" height="15" fill="rgb(227,119,45)"/><text x="53.0071%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="52.7571%" y="661" width="0.1490%" height="15" fill="rgb(205,109,36)"/><text x="53.0071%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="52.7571%" y="645" width="0.1490%" height="15" fill="rgb(205,6,39)"/><text x="53.0071%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="52.7571%" y="629" width="0.1490%" height="15" fill="rgb(221,32,16)"/><text x="53.0071%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="52.7571%" y="613" width="0.1490%" height="15" fill="rgb(228,144,50)"/><text x="53.0071%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="52.7571%" y="597" width="0.1490%" height="15" fill="rgb(229,201,53)"/><text x="53.0071%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="52.7571%" y="581" width="0.1490%" height="15" fill="rgb(249,153,27)"/><text x="53.0071%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="52.7571%" y="565" width="0.1490%" height="15" fill="rgb(227,106,25)"/><text x="53.0071%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="52.7571%" y="549" width="0.1490%" height="15" fill="rgb(230,65,29)"/><text x="53.0071%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="52.7571%" y="533" width="0.1490%" height="15" fill="rgb(221,57,46)"/><text x="53.0071%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.15%)</title><rect x="52.7571%" y="517" width="0.1490%" height="15" fill="rgb(229,161,17)"/><text x="53.0071%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (15 samples, 2.24%)</title><rect x="50.9687%" y="757" width="2.2355%" height="15" fill="rgb(222,213,11)"/><text x="51.2187%" y="767.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (15 samples, 2.24%)</title><rect x="50.9687%" y="741" width="2.2355%" height="15" fill="rgb(235,35,13)"/><text x="51.2187%" y="751.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.30%)</title><rect x="52.9061%" y="725" width="0.2981%" height="15" fill="rgb(233,158,34)"/><text x="53.1561%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.30%)</title><rect x="52.9061%" y="709" width="0.2981%" height="15" fill="rgb(215,151,48)"/><text x="53.1561%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (5 samples, 0.75%)</title><rect x="53.2042%" y="709" width="0.7452%" height="15" fill="rgb(229,84,14)"/><text x="53.4542%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (5 samples, 0.75%)</title><rect x="53.2042%" y="693" width="0.7452%" height="15" fill="rgb(229,68,14)"/><text x="53.4542%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.30%)</title><rect x="53.6513%" y="677" width="0.2981%" height="15" fill="rgb(243,106,26)"/><text x="53.9013%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="54.0984%" y="693" width="0.1490%" height="15" fill="rgb(206,45,38)"/><text x="54.3484%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 1.19%)</title><rect x="53.2042%" y="725" width="1.1923%" height="15" fill="rgb(226,6,15)"/><text x="53.4542%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.45%)</title><rect x="53.9493%" y="709" width="0.4471%" height="15" fill="rgb(232,22,54)"/><text x="54.1993%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="54.2474%" y="693" width="0.1490%" height="15" fill="rgb(229,222,32)"/><text x="54.4974%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.15%)</title><rect x="54.3964%" y="709" width="0.1490%" height="15" fill="rgb(228,62,29)"/><text x="54.6464%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (10 samples, 1.49%)</title><rect x="53.2042%" y="757" width="1.4903%" height="15" fill="rgb(251,103,34)"/><text x="53.4542%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (10 samples, 1.49%)</title><rect x="53.2042%" y="741" width="1.4903%" height="15" fill="rgb(233,12,30)"/><text x="53.4542%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (2 samples, 0.30%)</title><rect x="54.3964%" y="725" width="0.2981%" height="15" fill="rgb(238,52,0)"/><text x="54.6464%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (1 samples, 0.15%)</title><rect x="54.5455%" y="709" width="0.1490%" height="15" fill="rgb(223,98,5)"/><text x="54.7955%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.15%)</title><rect x="54.5455%" y="693" width="0.1490%" height="15" fill="rgb(228,75,37)"/><text x="54.7955%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="54.5455%" y="677" width="0.1490%" height="15" fill="rgb(205,115,49)"/><text x="54.7955%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="54.5455%" y="661" width="0.1490%" height="15" fill="rgb(250,154,43)"/><text x="54.7955%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="54.5455%" y="645" width="0.1490%" height="15" fill="rgb(226,43,29)"/><text x="54.7955%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="54.5455%" y="629" width="0.1490%" height="15" fill="rgb(249,228,39)"/><text x="54.7955%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="54.5455%" y="613" width="0.1490%" height="15" fill="rgb(216,79,43)"/><text x="54.7955%" y="623.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.15%)</title><rect x="54.6945%" y="421" width="0.1490%" height="15" fill="rgb(228,95,12)"/><text x="54.9445%" y="431.50"></text></g><g><title>kfree (1 samples, 0.15%)</title><rect x="54.8435%" y="405" width="0.1490%" height="15" fill="rgb(249,221,15)"/><text x="55.0935%" y="415.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.45%)</title><rect x="54.6945%" y="757" width="0.4471%" height="15" fill="rgb(233,34,13)"/><text x="54.9445%" y="767.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.45%)</title><rect x="54.6945%" y="741" width="0.4471%" height="15" fill="rgb(214,103,39)"/><text x="54.9445%" y="751.50"></text></g><g><title>std::panicking::try (3 samples, 0.45%)</title><rect x="54.6945%" y="725" width="0.4471%" height="15" fill="rgb(251,126,39)"/><text x="54.9445%" y="735.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.45%)</title><rect x="54.6945%" y="709" width="0.4471%" height="15" fill="rgb(214,216,36)"/><text x="54.9445%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.45%)</title><rect x="54.6945%" y="693" width="0.4471%" height="15" fill="rgb(220,221,8)"/><text x="54.9445%" y="703.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.45%)</title><rect x="54.6945%" y="677" width="0.4471%" height="15" fill="rgb(240,216,3)"/><text x="54.9445%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.45%)</title><rect x="54.6945%" y="661" width="0.4471%" height="15" fill="rgb(232,218,17)"/><text x="54.9445%" y="671.50"></text></g><g><title>lobsters_microbenchmarks::main (3 samples, 0.45%)</title><rect x="54.6945%" y="645" width="0.4471%" height="15" fill="rgb(229,163,45)"/><text x="54.9445%" y="655.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.45%)</title><rect x="54.6945%" y="629" width="0.4471%" height="15" fill="rgb(231,110,42)"/><text x="54.9445%" y="639.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.45%)</title><rect x="54.6945%" y="613" width="0.4471%" height="15" fill="rgb(208,170,48)"/><text x="54.9445%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.45%)</title><rect x="54.6945%" y="597" width="0.4471%" height="15" fill="rgb(239,116,25)"/><text x="54.9445%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.45%)</title><rect x="54.6945%" y="581" width="0.4471%" height="15" fill="rgb(219,200,50)"/><text x="54.9445%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.45%)</title><rect x="54.6945%" y="565" width="0.4471%" height="15" fill="rgb(245,200,0)"/><text x="54.9445%" y="575.50"></text></g><g><title>__GI___openat (3 samples, 0.45%)</title><rect x="54.6945%" y="549" width="0.4471%" height="15" fill="rgb(245,119,33)"/><text x="54.9445%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.45%)</title><rect x="54.6945%" y="533" width="0.4471%" height="15" fill="rgb(231,125,12)"/><text x="54.9445%" y="543.50"></text></g><g><title>do_syscall_64 (3 samples, 0.45%)</title><rect x="54.6945%" y="517" width="0.4471%" height="15" fill="rgb(216,96,41)"/><text x="54.9445%" y="527.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.45%)</title><rect x="54.6945%" y="501" width="0.4471%" height="15" fill="rgb(248,43,45)"/><text x="54.9445%" y="511.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.45%)</title><rect x="54.6945%" y="485" width="0.4471%" height="15" fill="rgb(217,222,7)"/><text x="54.9445%" y="495.50"></text></g><g><title>do_filp_open (3 samples, 0.45%)</title><rect x="54.6945%" y="469" width="0.4471%" height="15" fill="rgb(233,28,6)"/><text x="54.9445%" y="479.50"></text></g><g><title>path_openat (3 samples, 0.45%)</title><rect x="54.6945%" y="453" width="0.4471%" height="15" fill="rgb(231,218,15)"/><text x="54.9445%" y="463.50"></text></g><g><title>link_path_walk (3 samples, 0.45%)</title><rect x="54.6945%" y="437" width="0.4471%" height="15" fill="rgb(226,171,48)"/><text x="54.9445%" y="447.50"></text></g><g><title>walk_component (2 samples, 0.30%)</title><rect x="54.8435%" y="421" width="0.2981%" height="15" fill="rgb(235,201,9)"/><text x="55.0935%" y="431.50"></text></g><g><title>step_into (1 samples, 0.15%)</title><rect x="54.9925%" y="405" width="0.1490%" height="15" fill="rgb(217,80,15)"/><text x="55.2425%" y="415.50"></text></g><g><title>kernfs_iop_get_link (1 samples, 0.15%)</title><rect x="54.9925%" y="389" width="0.1490%" height="15" fill="rgb(219,152,8)"/><text x="55.2425%" y="399.50"></text></g><g><title>memcpy_erms (1 samples, 0.15%)</title><rect x="54.9925%" y="373" width="0.1490%" height="15" fill="rgb(243,107,38)"/><text x="55.2425%" y="383.50"></text></g><g><title>[unknown] (343 samples, 51.12%)</title><rect x="4.1729%" y="773" width="51.1177%" height="15" fill="rgb(231,17,5)"/><text x="4.4229%" y="783.50">[unknown]</text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.15%)</title><rect x="55.1416%" y="757" width="0.1490%" height="15" fill="rgb(209,25,54)"/><text x="55.3916%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="55.4396%" y="613" width="0.1490%" height="15" fill="rgb(219,0,2)"/><text x="55.6896%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="55.4396%" y="597" width="0.1490%" height="15" fill="rgb(246,9,5)"/><text x="55.6896%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="55.4396%" y="581" width="0.1490%" height="15" fill="rgb(226,159,4)"/><text x="55.6896%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="55.4396%" y="565" width="0.1490%" height="15" fill="rgb(219,175,34)"/><text x="55.6896%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="55.4396%" y="549" width="0.1490%" height="15" fill="rgb(236,10,46)"/><text x="55.6896%" y="559.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (1 samples, 0.15%)</title><rect x="55.5887%" y="613" width="0.1490%" height="15" fill="rgb(240,211,16)"/><text x="55.8387%" y="623.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (1 samples, 0.15%)</title><rect x="55.5887%" y="597" width="0.1490%" height="15" fill="rgb(205,3,43)"/><text x="55.8387%" y="607.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.15%)</title><rect x="55.7377%" y="613" width="0.1490%" height="15" fill="rgb(245,7,22)"/><text x="55.9877%" y="623.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.15%)</title><rect x="55.7377%" y="597" width="0.1490%" height="15" fill="rgb(239,132,32)"/><text x="55.9877%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.15%)</title><rect x="55.7377%" y="581" width="0.1490%" height="15" fill="rgb(228,202,34)"/><text x="55.9877%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.15%)</title><rect x="55.7377%" y="565" width="0.1490%" height="15" fill="rgb(254,200,22)"/><text x="55.9877%" y="575.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.15%)</title><rect x="55.7377%" y="549" width="0.1490%" height="15" fill="rgb(219,10,39)"/><text x="55.9877%" y="559.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.15%)</title><rect x="55.7377%" y="533" width="0.1490%" height="15" fill="rgb(226,210,39)"/><text x="55.9877%" y="543.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.60%)</title><rect x="55.4396%" y="629" width="0.5961%" height="15" fill="rgb(208,219,16)"/><text x="55.6896%" y="639.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.15%)</title><rect x="55.8867%" y="613" width="0.1490%" height="15" fill="rgb(216,158,51)"/><text x="56.1367%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.15%)</title><rect x="55.8867%" y="597" width="0.1490%" height="15" fill="rgb(233,14,44)"/><text x="56.1367%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.15%)</title><rect x="55.8867%" y="581" width="0.1490%" height="15" fill="rgb(237,97,39)"/><text x="56.1367%" y="591.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.15%)</title><rect x="55.8867%" y="565" width="0.1490%" height="15" fill="rgb(218,198,43)"/><text x="56.1367%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="56.0358%" y="597" width="0.1490%" height="15" fill="rgb(231,104,20)"/><text x="56.2858%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="56.0358%" y="581" width="0.1490%" height="15" fill="rgb(254,36,13)"/><text x="56.2858%" y="591.50"></text></g><g><title>&lt;mysql::conn::Conn as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="56.1848%" y="597" width="0.1490%" height="15" fill="rgb(248,14,50)"/><text x="56.4348%" y="607.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.15%)</title><rect x="56.1848%" y="581" width="0.1490%" height="15" fill="rgb(217,107,29)"/><text x="56.4348%" y="591.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.15%)</title><rect x="56.1848%" y="565" width="0.1490%" height="15" fill="rgb(251,169,33)"/><text x="56.4348%" y="575.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="56.1848%" y="549" width="0.1490%" height="15" fill="rgb(217,108,32)"/><text x="56.4348%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.15%)</title><rect x="56.1848%" y="533" width="0.1490%" height="15" fill="rgb(219,66,42)"/><text x="56.4348%" y="543.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="56.1848%" y="517" width="0.1490%" height="15" fill="rgb(206,180,7)"/><text x="56.4348%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="56.1848%" y="501" width="0.1490%" height="15" fill="rgb(208,226,31)"/><text x="56.4348%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="56.1848%" y="485" width="0.1490%" height="15" fill="rgb(218,26,49)"/><text x="56.4348%" y="495.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="56.1848%" y="469" width="0.1490%" height="15" fill="rgb(233,197,48)"/><text x="56.4348%" y="479.50"></text></g><g><title>__sys_sendto (1 samples, 0.15%)</title><rect x="56.1848%" y="453" width="0.1490%" height="15" fill="rgb(252,181,51)"/><text x="56.4348%" y="463.50"></text></g><g><title>sock_sendmsg (1 samples, 0.15%)</title><rect x="56.1848%" y="437" width="0.1490%" height="15" fill="rgb(253,90,19)"/><text x="56.4348%" y="447.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.15%)</title><rect x="56.1848%" y="421" width="0.1490%" height="15" fill="rgb(215,171,30)"/><text x="56.4348%" y="431.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.15%)</title><rect x="56.1848%" y="405" width="0.1490%" height="15" fill="rgb(214,222,9)"/><text x="56.4348%" y="415.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.15%)</title><rect x="56.1848%" y="389" width="0.1490%" height="15" fill="rgb(223,3,22)"/><text x="56.4348%" y="399.50"></text></g><g><title>__alloc_skb (1 samples, 0.15%)</title><rect x="56.1848%" y="373" width="0.1490%" height="15" fill="rgb(225,196,46)"/><text x="56.4348%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="56.3338%" y="533" width="0.1490%" height="15" fill="rgb(209,110,37)"/><text x="56.5838%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.15%)</title><rect x="56.3338%" y="517" width="0.1490%" height="15" fill="rgb(249,89,12)"/><text x="56.5838%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="56.3338%" y="501" width="0.1490%" height="15" fill="rgb(226,27,33)"/><text x="56.5838%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="56.3338%" y="597" width="0.2981%" height="15" fill="rgb(213,82,22)"/><text x="56.5838%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.30%)</title><rect x="56.3338%" y="581" width="0.2981%" height="15" fill="rgb(248,140,0)"/><text x="56.5838%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.30%)</title><rect x="56.3338%" y="565" width="0.2981%" height="15" fill="rgb(228,106,3)"/><text x="56.5838%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.30%)</title><rect x="56.3338%" y="549" width="0.2981%" height="15" fill="rgb(209,23,37)"/><text x="56.5838%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="56.4829%" y="533" width="0.1490%" height="15" fill="rgb(241,93,50)"/><text x="56.7329%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="56.4829%" y="517" width="0.1490%" height="15" fill="rgb(253,46,43)"/><text x="56.7329%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="56.6319%" y="405" width="0.1490%" height="15" fill="rgb(226,206,43)"/><text x="56.8819%" y="415.50"></text></g><g><title>[[ext4]] (1 samples, 0.15%)</title><rect x="56.6319%" y="389" width="0.1490%" height="15" fill="rgb(217,54,7)"/><text x="56.8819%" y="399.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.15%)</title><rect x="56.6319%" y="373" width="0.1490%" height="15" fill="rgb(223,5,52)"/><text x="56.8819%" y="383.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.89%)</title><rect x="56.0358%" y="629" width="0.8942%" height="15" fill="rgb(206,52,46)"/><text x="56.2858%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.89%)</title><rect x="56.0358%" y="613" width="0.8942%" height="15" fill="rgb(253,136,11)"/><text x="56.2858%" y="623.50"></text></g><g><title>decor_mem::stats::print_stats (2 samples, 0.30%)</title><rect x="56.6319%" y="597" width="0.2981%" height="15" fill="rgb(208,106,33)"/><text x="56.8819%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.30%)</title><rect x="56.6319%" y="581" width="0.2981%" height="15" fill="rgb(206,54,4)"/><text x="56.8819%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.30%)</title><rect x="56.6319%" y="565" width="0.2981%" height="15" fill="rgb(213,3,15)"/><text x="56.8819%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.30%)</title><rect x="56.6319%" y="549" width="0.2981%" height="15" fill="rgb(252,211,39)"/><text x="56.8819%" y="559.50"></text></g><g><title>__libc_write (2 samples, 0.30%)</title><rect x="56.6319%" y="533" width="0.2981%" height="15" fill="rgb(223,6,36)"/><text x="56.8819%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="56.6319%" y="517" width="0.2981%" height="15" fill="rgb(252,169,45)"/><text x="56.8819%" y="527.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="56.6319%" y="501" width="0.2981%" height="15" fill="rgb(212,48,26)"/><text x="56.8819%" y="511.50"></text></g><g><title>ksys_write (2 samples, 0.30%)</title><rect x="56.6319%" y="485" width="0.2981%" height="15" fill="rgb(251,102,48)"/><text x="56.8819%" y="495.50"></text></g><g><title>vfs_write (2 samples, 0.30%)</title><rect x="56.6319%" y="469" width="0.2981%" height="15" fill="rgb(243,208,16)"/><text x="56.8819%" y="479.50"></text></g><g><title>new_sync_write (2 samples, 0.30%)</title><rect x="56.6319%" y="453" width="0.2981%" height="15" fill="rgb(219,96,24)"/><text x="56.8819%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.30%)</title><rect x="56.6319%" y="437" width="0.2981%" height="15" fill="rgb(219,33,29)"/><text x="56.8819%" y="447.50"></text></g><g><title>generic_perform_write (2 samples, 0.30%)</title><rect x="56.6319%" y="421" width="0.2981%" height="15" fill="rgb(223,176,5)"/><text x="56.8819%" y="431.50"></text></g><g><title>iov_iter_copy_from_user_atomic (1 samples, 0.15%)</title><rect x="56.7809%" y="405" width="0.1490%" height="15" fill="rgb(228,140,14)"/><text x="57.0309%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="56.7809%" y="389" width="0.1490%" height="15" fill="rgb(217,179,31)"/><text x="57.0309%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.15%)</title><rect x="57.0790%" y="229" width="0.1490%" height="15" fill="rgb(230,9,30)"/><text x="57.3290%" y="239.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.15%)</title><rect x="57.0790%" y="213" width="0.1490%" height="15" fill="rgb(230,136,20)"/><text x="57.3290%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.15%)</title><rect x="57.0790%" y="197" width="0.1490%" height="15" fill="rgb(215,210,22)"/><text x="57.3290%" y="207.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.15%)</title><rect x="57.0790%" y="181" width="0.1490%" height="15" fill="rgb(218,43,5)"/><text x="57.3290%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.15%)</title><rect x="57.0790%" y="165" width="0.1490%" height="15" fill="rgb(216,11,5)"/><text x="57.3290%" y="175.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.15%)</title><rect x="57.0790%" y="149" width="0.1490%" height="15" fill="rgb(209,82,29)"/><text x="57.3290%" y="159.50"></text></g><g><title>tcp_ack (1 samples, 0.15%)</title><rect x="57.0790%" y="133" width="0.1490%" height="15" fill="rgb(244,115,12)"/><text x="57.3290%" y="143.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="57.0790%" y="117" width="0.1490%" height="15" fill="rgb(222,82,18)"/><text x="57.3290%" y="127.50"></text></g><g><title>skb_release_data (1 samples, 0.15%)</title><rect x="57.0790%" y="101" width="0.1490%" height="15" fill="rgb(249,227,8)"/><text x="57.3290%" y="111.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.45%)</title><rect x="56.9300%" y="421" width="0.4471%" height="15" fill="rgb(253,141,45)"/><text x="57.1800%" y="431.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.30%)</title><rect x="57.0790%" y="405" width="0.2981%" height="15" fill="rgb(234,184,4)"/><text x="57.3290%" y="415.50"></text></g><g><title>ip_output (2 samples, 0.30%)</title><rect x="57.0790%" y="389" width="0.2981%" height="15" fill="rgb(218,194,23)"/><text x="57.3290%" y="399.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.30%)</title><rect x="57.0790%" y="373" width="0.2981%" height="15" fill="rgb(235,66,41)"/><text x="57.3290%" y="383.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.30%)</title><rect x="57.0790%" y="357" width="0.2981%" height="15" fill="rgb(245,217,1)"/><text x="57.3290%" y="367.50"></text></g><g><title>do_softirq (2 samples, 0.30%)</title><rect x="57.0790%" y="341" width="0.2981%" height="15" fill="rgb(229,91,1)"/><text x="57.3290%" y="351.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.30%)</title><rect x="57.0790%" y="325" width="0.2981%" height="15" fill="rgb(207,101,30)"/><text x="57.3290%" y="335.50"></text></g><g><title>__do_softirq (2 samples, 0.30%)</title><rect x="57.0790%" y="309" width="0.2981%" height="15" fill="rgb(223,82,49)"/><text x="57.3290%" y="319.50"></text></g><g><title>net_rx_action (2 samples, 0.30%)</title><rect x="57.0790%" y="293" width="0.2981%" height="15" fill="rgb(218,167,17)"/><text x="57.3290%" y="303.50"></text></g><g><title>process_backlog (2 samples, 0.30%)</title><rect x="57.0790%" y="277" width="0.2981%" height="15" fill="rgb(208,103,14)"/><text x="57.3290%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.30%)</title><rect x="57.0790%" y="261" width="0.2981%" height="15" fill="rgb(238,20,8)"/><text x="57.3290%" y="271.50"></text></g><g><title>ip_rcv (2 samples, 0.30%)</title><rect x="57.0790%" y="245" width="0.2981%" height="15" fill="rgb(218,80,54)"/><text x="57.3290%" y="255.50"></text></g><g><title>ip_rcv_finish (1 samples, 0.15%)</title><rect x="57.2280%" y="229" width="0.1490%" height="15" fill="rgb(240,144,17)"/><text x="57.4780%" y="239.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.15%)</title><rect x="57.2280%" y="213" width="0.1490%" height="15" fill="rgb(245,27,50)"/><text x="57.4780%" y="223.50"></text></g><g><title>lock_sock_nested (1 samples, 0.15%)</title><rect x="57.3770%" y="421" width="0.1490%" height="15" fill="rgb(251,51,7)"/><text x="57.6270%" y="431.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="57.3770%" y="405" width="0.1490%" height="15" fill="rgb(245,217,29)"/><text x="57.6270%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="57.3770%" y="389" width="0.1490%" height="15" fill="rgb(221,176,29)"/><text x="57.6270%" y="399.50"></text></g><g><title>__calc_delta (1 samples, 0.15%)</title><rect x="57.6751%" y="293" width="0.1490%" height="15" fill="rgb(212,180,24)"/><text x="57.9251%" y="303.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.45%)</title><rect x="57.5261%" y="341" width="0.4471%" height="15" fill="rgb(254,24,2)"/><text x="57.7761%" y="351.50"></text></g><g><title>dequeue_entity (2 samples, 0.30%)</title><rect x="57.6751%" y="325" width="0.2981%" height="15" fill="rgb(230,100,2)"/><text x="57.9251%" y="335.50"></text></g><g><title>update_curr (2 samples, 0.30%)</title><rect x="57.6751%" y="309" width="0.2981%" height="15" fill="rgb(219,142,25)"/><text x="57.9251%" y="319.50"></text></g><g><title>cpuacct_charge (1 samples, 0.15%)</title><rect x="57.8241%" y="293" width="0.1490%" height="15" fill="rgb(240,73,43)"/><text x="58.0741%" y="303.50"></text></g><g><title>__x64_sys_recvfrom (8 samples, 1.19%)</title><rect x="56.9300%" y="485" width="1.1923%" height="15" fill="rgb(214,114,15)"/><text x="57.1800%" y="495.50"></text></g><g><title>__sys_recvfrom (8 samples, 1.19%)</title><rect x="56.9300%" y="469" width="1.1923%" height="15" fill="rgb(207,130,4)"/><text x="57.1800%" y="479.50"></text></g><g><title>inet_recvmsg (8 samples, 1.19%)</title><rect x="56.9300%" y="453" width="1.1923%" height="15" fill="rgb(221,25,40)"/><text x="57.1800%" y="463.50"></text></g><g><title>tcp_recvmsg (8 samples, 1.19%)</title><rect x="56.9300%" y="437" width="1.1923%" height="15" fill="rgb(241,184,7)"/><text x="57.1800%" y="447.50"></text></g><g><title>sk_wait_data (4 samples, 0.60%)</title><rect x="57.5261%" y="421" width="0.5961%" height="15" fill="rgb(235,159,4)"/><text x="57.7761%" y="431.50"></text></g><g><title>wait_woken (4 samples, 0.60%)</title><rect x="57.5261%" y="405" width="0.5961%" height="15" fill="rgb(214,87,48)"/><text x="57.7761%" y="415.50"></text></g><g><title>schedule_timeout (4 samples, 0.60%)</title><rect x="57.5261%" y="389" width="0.5961%" height="15" fill="rgb(246,198,24)"/><text x="57.7761%" y="399.50"></text></g><g><title>schedule (4 samples, 0.60%)</title><rect x="57.5261%" y="373" width="0.5961%" height="15" fill="rgb(209,66,40)"/><text x="57.7761%" y="383.50"></text></g><g><title>__schedule (4 samples, 0.60%)</title><rect x="57.5261%" y="357" width="0.5961%" height="15" fill="rgb(233,147,39)"/><text x="57.7761%" y="367.50"></text></g><g><title>finish_task_switch (1 samples, 0.15%)</title><rect x="57.9732%" y="341" width="0.1490%" height="15" fill="rgb(231,145,52)"/><text x="58.2232%" y="351.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.15%)</title><rect x="57.9732%" y="325" width="0.1490%" height="15" fill="rgb(206,20,26)"/><text x="58.2232%" y="335.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.15%)</title><rect x="57.9732%" y="309" width="0.1490%" height="15" fill="rgb(238,220,4)"/><text x="58.2232%" y="319.50"></text></g><g><title>native_write_msr (1 samples, 0.15%)</title><rect x="57.9732%" y="293" width="0.1490%" height="15" fill="rgb(252,195,42)"/><text x="58.2232%" y="303.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (9 samples, 1.34%)</title><rect x="56.9300%" y="629" width="1.3413%" height="15" fill="rgb(209,10,6)"/><text x="57.1800%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 1.34%)</title><rect x="56.9300%" y="613" width="1.3413%" height="15" fill="rgb(229,3,52)"/><text x="57.1800%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 1.34%)</title><rect x="56.9300%" y="597" width="1.3413%" height="15" fill="rgb(253,49,37)"/><text x="57.1800%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 1.34%)</title><rect x="56.9300%" y="581" width="1.3413%" height="15" fill="rgb(240,103,49)"/><text x="57.1800%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 1.34%)</title><rect x="56.9300%" y="565" width="1.3413%" height="15" fill="rgb(250,182,30)"/><text x="57.1800%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 1.34%)</title><rect x="56.9300%" y="549" width="1.3413%" height="15" fill="rgb(248,8,30)"/><text x="57.1800%" y="559.50"></text></g><g><title>__libc_recv (9 samples, 1.34%)</title><rect x="56.9300%" y="533" width="1.3413%" height="15" fill="rgb(237,120,30)"/><text x="57.1800%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 1.34%)</title><rect x="56.9300%" y="517" width="1.3413%" height="15" fill="rgb(221,146,34)"/><text x="57.1800%" y="527.50"></text></g><g><title>do_syscall_64 (9 samples, 1.34%)</title><rect x="56.9300%" y="501" width="1.3413%" height="15" fill="rgb(242,55,13)"/><text x="57.1800%" y="511.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="58.1222%" y="485" width="0.1490%" height="15" fill="rgb(242,112,31)"/><text x="58.3722%" y="495.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="58.1222%" y="469" width="0.1490%" height="15" fill="rgb(249,192,27)"/><text x="58.3722%" y="479.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.15%)</title><rect x="58.1222%" y="453" width="0.1490%" height="15" fill="rgb(208,204,44)"/><text x="58.3722%" y="463.50"></text></g><g><title>netdev_core_pick_tx (2 samples, 0.30%)</title><rect x="58.4203%" y="341" width="0.2981%" height="15" fill="rgb(208,93,54)"/><text x="58.6703%" y="351.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.45%)</title><rect x="58.4203%" y="357" width="0.4471%" height="15" fill="rgb(242,1,31)"/><text x="58.6703%" y="367.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.15%)</title><rect x="58.7183%" y="341" width="0.1490%" height="15" fill="rgb(241,83,25)"/><text x="58.9683%" y="351.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.15%)</title><rect x="59.0164%" y="293" width="0.1490%" height="15" fill="rgb(205,169,50)"/><text x="59.2664%" y="303.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.15%)</title><rect x="59.0164%" y="277" width="0.1490%" height="15" fill="rgb(239,186,37)"/><text x="59.2664%" y="287.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.15%)</title><rect x="59.1654%" y="245" width="0.1490%" height="15" fill="rgb(205,221,10)"/><text x="59.4154%" y="255.50"></text></g><g><title>enqueue_task (1 samples, 0.15%)</title><rect x="59.4635%" y="69" width="0.1490%" height="15" fill="rgb(218,196,15)"/><text x="59.7135%" y="79.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="59.4635%" y="53" width="0.1490%" height="15" fill="rgb(218,196,35)"/><text x="59.7135%" y="63.50"></text></g><g><title>ip_local_deliver (4 samples, 0.60%)</title><rect x="59.3145%" y="229" width="0.5961%" height="15" fill="rgb(233,63,24)"/><text x="59.5645%" y="239.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.60%)</title><rect x="59.3145%" y="213" width="0.5961%" height="15" fill="rgb(225,8,4)"/><text x="59.5645%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.45%)</title><rect x="59.4635%" y="197" width="0.4471%" height="15" fill="rgb(234,105,35)"/><text x="59.7135%" y="207.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.45%)</title><rect x="59.4635%" y="181" width="0.4471%" height="15" fill="rgb(236,21,32)"/><text x="59.7135%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.45%)</title><rect x="59.4635%" y="165" width="0.4471%" height="15" fill="rgb(228,109,6)"/><text x="59.7135%" y="175.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.45%)</title><rect x="59.4635%" y="149" width="0.4471%" height="15" fill="rgb(229,215,31)"/><text x="59.7135%" y="159.50"></text></g><g><title>sock_def_readable (3 samples, 0.45%)</title><rect x="59.4635%" y="133" width="0.4471%" height="15" fill="rgb(221,52,54)"/><text x="59.7135%" y="143.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.45%)</title><rect x="59.4635%" y="117" width="0.4471%" height="15" fill="rgb(252,129,43)"/><text x="59.7135%" y="127.50"></text></g><g><title>__wake_up_common (3 samples, 0.45%)</title><rect x="59.4635%" y="101" width="0.4471%" height="15" fill="rgb(248,183,27)"/><text x="59.7135%" y="111.50"></text></g><g><title>try_to_wake_up (3 samples, 0.45%)</title><rect x="59.4635%" y="85" width="0.4471%" height="15" fill="rgb(250,0,22)"/><text x="59.7135%" y="95.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.30%)</title><rect x="59.6125%" y="69" width="0.2981%" height="15" fill="rgb(213,166,10)"/><text x="59.8625%" y="79.50"></text></g><g><title>enqueue_entity (1 samples, 0.15%)</title><rect x="59.7615%" y="53" width="0.1490%" height="15" fill="rgb(207,163,36)"/><text x="60.0115%" y="63.50"></text></g><g><title>__tcp_push_pending_frames (12 samples, 1.79%)</title><rect x="58.2712%" y="453" width="1.7884%" height="15" fill="rgb(208,122,22)"/><text x="58.5212%" y="463.50">_..</text></g><g><title>tcp_write_xmit (12 samples, 1.79%)</title><rect x="58.2712%" y="437" width="1.7884%" height="15" fill="rgb(207,104,49)"/><text x="58.5212%" y="447.50">t..</text></g><g><title>__tcp_transmit_skb (11 samples, 1.64%)</title><rect x="58.4203%" y="421" width="1.6393%" height="15" fill="rgb(248,211,50)"/><text x="58.6703%" y="431.50"></text></g><g><title>__ip_queue_xmit (11 samples, 1.64%)</title><rect x="58.4203%" y="405" width="1.6393%" height="15" fill="rgb(217,13,45)"/><text x="58.6703%" y="415.50"></text></g><g><title>ip_output (11 samples, 1.64%)</title><rect x="58.4203%" y="389" width="1.6393%" height="15" fill="rgb(211,216,49)"/><text x="58.6703%" y="399.50"></text></g><g><title>ip_finish_output2 (11 samples, 1.64%)</title><rect x="58.4203%" y="373" width="1.6393%" height="15" fill="rgb(221,58,53)"/><text x="58.6703%" y="383.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 1.19%)</title><rect x="58.8674%" y="357" width="1.1923%" height="15" fill="rgb(220,112,41)"/><text x="59.1174%" y="367.50"></text></g><g><title>do_softirq (8 samples, 1.19%)</title><rect x="58.8674%" y="341" width="1.1923%" height="15" fill="rgb(236,38,28)"/><text x="59.1174%" y="351.50"></text></g><g><title>do_softirq_own_stack (8 samples, 1.19%)</title><rect x="58.8674%" y="325" width="1.1923%" height="15" fill="rgb(227,195,22)"/><text x="59.1174%" y="335.50"></text></g><g><title>__do_softirq (8 samples, 1.19%)</title><rect x="58.8674%" y="309" width="1.1923%" height="15" fill="rgb(214,55,33)"/><text x="59.1174%" y="319.50"></text></g><g><title>net_rx_action (6 samples, 0.89%)</title><rect x="59.1654%" y="293" width="0.8942%" height="15" fill="rgb(248,80,13)"/><text x="59.4154%" y="303.50"></text></g><g><title>process_backlog (6 samples, 0.89%)</title><rect x="59.1654%" y="277" width="0.8942%" height="15" fill="rgb(238,52,6)"/><text x="59.4154%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (6 samples, 0.89%)</title><rect x="59.1654%" y="261" width="0.8942%" height="15" fill="rgb(224,198,47)"/><text x="59.4154%" y="271.50"></text></g><g><title>ip_rcv (5 samples, 0.75%)</title><rect x="59.3145%" y="245" width="0.7452%" height="15" fill="rgb(233,171,20)"/><text x="59.5645%" y="255.50"></text></g><g><title>ip_rcv_finish (1 samples, 0.15%)</title><rect x="59.9106%" y="229" width="0.1490%" height="15" fill="rgb(241,30,25)"/><text x="60.1606%" y="239.50"></text></g><g><title>__x64_sys_sendto (14 samples, 2.09%)</title><rect x="58.2712%" y="533" width="2.0864%" height="15" fill="rgb(207,171,38)"/><text x="58.5212%" y="543.50">_..</text></g><g><title>__sys_sendto (14 samples, 2.09%)</title><rect x="58.2712%" y="517" width="2.0864%" height="15" fill="rgb(234,70,1)"/><text x="58.5212%" y="527.50">_..</text></g><g><title>sock_sendmsg (14 samples, 2.09%)</title><rect x="58.2712%" y="501" width="2.0864%" height="15" fill="rgb(232,178,18)"/><text x="58.5212%" y="511.50">s..</text></g><g><title>tcp_sendmsg (14 samples, 2.09%)</title><rect x="58.2712%" y="485" width="2.0864%" height="15" fill="rgb(241,78,40)"/><text x="58.5212%" y="495.50">t..</text></g><g><title>tcp_sendmsg_locked (14 samples, 2.09%)</title><rect x="58.2712%" y="469" width="2.0864%" height="15" fill="rgb(222,35,25)"/><text x="58.5212%" y="479.50">t..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.30%)</title><rect x="60.0596%" y="453" width="0.2981%" height="15" fill="rgb(207,92,16)"/><text x="60.3096%" y="463.50"></text></g><g><title>__alloc_skb (1 samples, 0.15%)</title><rect x="60.2086%" y="437" width="0.1490%" height="15" fill="rgb(216,59,51)"/><text x="60.4586%" y="447.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.15%)</title><rect x="60.2086%" y="421" width="0.1490%" height="15" fill="rgb(213,80,28)"/><text x="60.4586%" y="431.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (35 samples, 5.22%)</title><rect x="55.2906%" y="645" width="5.2161%" height="15" fill="rgb(220,93,7)"/><text x="55.5406%" y="655.50">msql_s..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (15 samples, 2.24%)</title><rect x="58.2712%" y="629" width="2.2355%" height="15" fill="rgb(225,24,44)"/><text x="58.5212%" y="639.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (15 samples, 2.24%)</title><rect x="58.2712%" y="613" width="2.2355%" height="15" fill="rgb(243,74,40)"/><text x="58.5212%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (15 samples, 2.24%)</title><rect x="58.2712%" y="597" width="2.2355%" height="15" fill="rgb(228,39,7)"/><text x="58.5212%" y="607.50">s..</text></g><g><title>__libc_send (15 samples, 2.24%)</title><rect x="58.2712%" y="581" width="2.2355%" height="15" fill="rgb(227,79,8)"/><text x="58.5212%" y="591.50">_..</text></g><g><title>entry_SYSCALL_64 (15 samples, 2.24%)</title><rect x="58.2712%" y="565" width="2.2355%" height="15" fill="rgb(236,58,11)"/><text x="58.5212%" y="575.50">e..</text></g><g><title>do_syscall_64 (15 samples, 2.24%)</title><rect x="58.2712%" y="549" width="2.2355%" height="15" fill="rgb(249,63,35)"/><text x="58.5212%" y="559.50">d..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="60.3577%" y="533" width="0.1490%" height="15" fill="rgb(252,114,16)"/><text x="60.6077%" y="543.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="60.3577%" y="517" width="0.1490%" height="15" fill="rgb(254,151,24)"/><text x="60.6077%" y="527.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.15%)</title><rect x="60.3577%" y="501" width="0.1490%" height="15" fill="rgb(253,54,39)"/><text x="60.6077%" y="511.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.15%)</title><rect x="60.5067%" y="629" width="0.1490%" height="15" fill="rgb(243,25,45)"/><text x="60.7567%" y="639.50"></text></g><g><title>mysql::conn::Conn::continue_auth (1 samples, 0.15%)</title><rect x="60.5067%" y="613" width="0.1490%" height="15" fill="rgb(234,134,9)"/><text x="60.7567%" y="623.50"></text></g><g><title>mysql::conn::Conn::perform_auth_switch (1 samples, 0.15%)</title><rect x="60.5067%" y="597" width="0.1490%" height="15" fill="rgb(227,166,31)"/><text x="60.7567%" y="607.50"></text></g><g><title>mysql::conn::Conn::continue_auth (1 samples, 0.15%)</title><rect x="60.5067%" y="581" width="0.1490%" height="15" fill="rgb(245,143,41)"/><text x="60.7567%" y="591.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.15%)</title><rect x="60.5067%" y="565" width="0.1490%" height="15" fill="rgb(238,181,32)"/><text x="60.7567%" y="575.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="60.5067%" y="549" width="0.1490%" height="15" fill="rgb(224,113,18)"/><text x="60.7567%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="60.5067%" y="533" width="0.1490%" height="15" fill="rgb(240,229,28)"/><text x="60.7567%" y="543.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="60.5067%" y="517" width="0.1490%" height="15" fill="rgb(250,185,3)"/><text x="60.7567%" y="527.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.15%)</title><rect x="60.5067%" y="501" width="0.1490%" height="15" fill="rgb(212,59,25)"/><text x="60.7567%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.15%)</title><rect x="60.5067%" y="485" width="0.1490%" height="15" fill="rgb(221,87,20)"/><text x="60.7567%" y="495.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.15%)</title><rect x="60.5067%" y="469" width="0.1490%" height="15" fill="rgb(213,74,28)"/><text x="60.7567%" y="479.50"></text></g><g><title>__libc_recv (1 samples, 0.15%)</title><rect x="60.5067%" y="453" width="0.1490%" height="15" fill="rgb(224,132,34)"/><text x="60.7567%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="60.5067%" y="437" width="0.1490%" height="15" fill="rgb(222,101,24)"/><text x="60.7567%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="60.5067%" y="421" width="0.1490%" height="15" fill="rgb(254,142,4)"/><text x="60.7567%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.15%)</title><rect x="60.5067%" y="405" width="0.1490%" height="15" fill="rgb(230,229,49)"/><text x="60.7567%" y="415.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.15%)</title><rect x="60.5067%" y="389" width="0.1490%" height="15" fill="rgb(238,70,47)"/><text x="60.7567%" y="399.50"></text></g><g><title>inet_recvmsg (1 samples, 0.15%)</title><rect x="60.5067%" y="373" width="0.1490%" height="15" fill="rgb(231,160,17)"/><text x="60.7567%" y="383.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.15%)</title><rect x="60.5067%" y="357" width="0.1490%" height="15" fill="rgb(218,68,53)"/><text x="60.7567%" y="367.50"></text></g><g><title>sk_wait_data (1 samples, 0.15%)</title><rect x="60.5067%" y="341" width="0.1490%" height="15" fill="rgb(236,111,10)"/><text x="60.7567%" y="351.50"></text></g><g><title>wait_woken (1 samples, 0.15%)</title><rect x="60.5067%" y="325" width="0.1490%" height="15" fill="rgb(224,34,41)"/><text x="60.7567%" y="335.50"></text></g><g><title>schedule_timeout (1 samples, 0.15%)</title><rect x="60.5067%" y="309" width="0.1490%" height="15" fill="rgb(241,118,19)"/><text x="60.7567%" y="319.50"></text></g><g><title>schedule (1 samples, 0.15%)</title><rect x="60.5067%" y="293" width="0.1490%" height="15" fill="rgb(238,129,25)"/><text x="60.7567%" y="303.50"></text></g><g><title>__schedule (1 samples, 0.15%)</title><rect x="60.5067%" y="277" width="0.1490%" height="15" fill="rgb(238,22,31)"/><text x="60.7567%" y="287.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.15%)</title><rect x="60.5067%" y="261" width="0.1490%" height="15" fill="rgb(222,174,48)"/><text x="60.7567%" y="271.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="60.5067%" y="245" width="0.1490%" height="15" fill="rgb(206,152,40)"/><text x="60.7567%" y="255.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="60.5067%" y="229" width="0.1490%" height="15" fill="rgb(218,99,54)"/><text x="60.7567%" y="239.50"></text></g><g><title>__GI___clone (37 samples, 5.51%)</title><rect x="55.2906%" y="773" width="5.5142%" height="15" fill="rgb(220,174,26)"/><text x="55.5406%" y="783.50">__GI___..</text></g><g><title>start_thread (37 samples, 5.51%)</title><rect x="55.2906%" y="757" width="5.5142%" height="15" fill="rgb(245,116,9)"/><text x="55.5406%" y="767.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (37 samples, 5.51%)</title><rect x="55.2906%" y="741" width="5.5142%" height="15" fill="rgb(209,72,35)"/><text x="55.5406%" y="751.50">std::sy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (37 samples, 5.51%)</title><rect x="55.2906%" y="725" width="5.5142%" height="15" fill="rgb(226,126,21)"/><text x="55.5406%" y="735.50">&lt;alloc:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (37 samples, 5.51%)</title><rect x="55.2906%" y="709" width="5.5142%" height="15" fill="rgb(227,192,1)"/><text x="55.5406%" y="719.50">&lt;alloc:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (37 samples, 5.51%)</title><rect x="55.2906%" y="693" width="5.5142%" height="15" fill="rgb(237,180,29)"/><text x="55.5406%" y="703.50">core::o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37 samples, 5.51%)</title><rect x="55.2906%" y="677" width="5.5142%" height="15" fill="rgb(230,197,35)"/><text x="55.5406%" y="687.50">std::sy..</text></g><g><title>decor_mem::Shim::run_on_tcp (37 samples, 5.51%)</title><rect x="55.2906%" y="661" width="5.5142%" height="15" fill="rgb(246,193,31)"/><text x="55.5406%" y="671.50">decor_m..</text></g><g><title>mysql::conn::Conn::new (2 samples, 0.30%)</title><rect x="60.5067%" y="645" width="0.2981%" height="15" fill="rgb(241,36,4)"/><text x="60.7567%" y="655.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.15%)</title><rect x="60.6557%" y="629" width="0.1490%" height="15" fill="rgb(241,130,17)"/><text x="60.9057%" y="639.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.15%)</title><rect x="60.6557%" y="613" width="0.1490%" height="15" fill="rgb(206,137,32)"/><text x="60.9057%" y="623.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.15%)</title><rect x="60.6557%" y="597" width="0.1490%" height="15" fill="rgb(237,228,51)"/><text x="60.9057%" y="607.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.15%)</title><rect x="60.6557%" y="581" width="0.1490%" height="15" fill="rgb(243,6,42)"/><text x="60.9057%" y="591.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.15%)</title><rect x="60.6557%" y="565" width="0.1490%" height="15" fill="rgb(251,74,28)"/><text x="60.9057%" y="575.50"></text></g><g><title>idna::uts46::find_char (1 samples, 0.15%)</title><rect x="60.6557%" y="549" width="0.1490%" height="15" fill="rgb(218,20,49)"/><text x="60.9057%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="60.9538%" y="517" width="0.1490%" height="15" fill="rgb(238,28,14)"/><text x="61.2038%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="61.1028%" y="501" width="0.1490%" height="15" fill="rgb(229,40,46)"/><text x="61.3528%" y="511.50"></text></g><g><title>destroy_context_ldt (1 samples, 0.15%)</title><rect x="61.4009%" y="293" width="0.1490%" height="15" fill="rgb(244,195,20)"/><text x="61.6509%" y="303.50"></text></g><g><title>__mmdrop (2 samples, 0.30%)</title><rect x="61.4009%" y="309" width="0.2981%" height="15" fill="rgb(253,56,35)"/><text x="61.6509%" y="319.50"></text></g><g><title>pgd_free (1 samples, 0.15%)</title><rect x="61.5499%" y="293" width="0.1490%" height="15" fill="rgb(210,149,44)"/><text x="61.7999%" y="303.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (229 samples, 34.13%)</title><rect x="62.1461%" y="293" width="34.1282%" height="15" fill="rgb(240,135,12)"/><text x="62.3961%" y="303.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (229 samples, 34.13%)</title><rect x="62.1461%" y="277" width="34.1282%" height="15" fill="rgb(251,24,50)"/><text x="62.3961%" y="287.50">native_write_msr</text></g><g><title>__perf_event_task_sched_in (233 samples, 34.72%)</title><rect x="61.6990%" y="309" width="34.7243%" height="15" fill="rgb(243,200,47)"/><text x="61.9490%" y="319.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="96.2742%" y="293" width="0.1490%" height="15" fill="rgb(224,166,26)"/><text x="96.5242%" y="303.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="96.2742%" y="277" width="0.1490%" height="15" fill="rgb(233,0,47)"/><text x="96.5242%" y="287.50"></text></g><g><title>finish_task_switch (236 samples, 35.17%)</title><rect x="61.4009%" y="325" width="35.1714%" height="15" fill="rgb(253,80,5)"/><text x="61.6509%" y="335.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.15%)</title><rect x="96.4232%" y="309" width="0.1490%" height="15" fill="rgb(214,133,25)"/><text x="96.6732%" y="319.50"></text></g><g><title>preempt_count_sub (1 samples, 0.15%)</title><rect x="96.4232%" y="293" width="0.1490%" height="15" fill="rgb(209,27,14)"/><text x="96.6732%" y="303.50"></text></g><g><title>cpu_stop_queue_work (237 samples, 35.32%)</title><rect x="61.4009%" y="389" width="35.3204%" height="15" fill="rgb(219,102,51)"/><text x="61.6509%" y="399.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (237 samples, 35.32%)</title><rect x="61.4009%" y="373" width="35.3204%" height="15" fill="rgb(237,18,16)"/><text x="61.6509%" y="383.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (237 samples, 35.32%)</title><rect x="61.4009%" y="357" width="35.3204%" height="15" fill="rgb(241,85,17)"/><text x="61.6509%" y="367.50">preempt_schedule_common</text></g><g><title>__schedule (237 samples, 35.32%)</title><rect x="61.4009%" y="341" width="35.3204%" height="15" fill="rgb(236,90,42)"/><text x="61.6509%" y="351.50">__schedule</text></g><g><title>put_prev_task_fair (1 samples, 0.15%)</title><rect x="96.5723%" y="325" width="0.1490%" height="15" fill="rgb(249,57,21)"/><text x="96.8223%" y="335.50"></text></g><g><title>put_prev_entity (1 samples, 0.15%)</title><rect x="96.5723%" y="309" width="0.1490%" height="15" fill="rgb(243,12,36)"/><text x="96.8223%" y="319.50"></text></g><g><title>update_curr (1 samples, 0.15%)</title><rect x="96.5723%" y="293" width="0.1490%" height="15" fill="rgb(253,128,47)"/><text x="96.8223%" y="303.50"></text></g><g><title>__calc_delta (1 samples, 0.15%)</title><rect x="96.5723%" y="277" width="0.1490%" height="15" fill="rgb(207,33,20)"/><text x="96.8223%" y="287.50"></text></g><g><title>do_syscall_64 (238 samples, 35.47%)</title><rect x="61.4009%" y="469" width="35.4694%" height="15" fill="rgb(233,215,35)"/><text x="61.6509%" y="479.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (238 samples, 35.47%)</title><rect x="61.4009%" y="453" width="35.4694%" height="15" fill="rgb(249,188,52)"/><text x="61.6509%" y="463.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (238 samples, 35.47%)</title><rect x="61.4009%" y="437" width="35.4694%" height="15" fill="rgb(225,12,32)"/><text x="61.6509%" y="447.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (238 samples, 35.47%)</title><rect x="61.4009%" y="421" width="35.4694%" height="15" fill="rgb(247,98,14)"/><text x="61.6509%" y="431.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (238 samples, 35.47%)</title><rect x="61.4009%" y="405" width="35.4694%" height="15" fill="rgb(247,219,48)"/><text x="61.6509%" y="415.50">stop_one_cpu</text></g><g><title>wait_for_completion (1 samples, 0.15%)</title><rect x="96.7213%" y="389" width="0.1490%" height="15" fill="rgb(253,60,48)"/><text x="96.9713%" y="399.50"></text></g><g><title>hwloc::Topology::new (244 samples, 36.36%)</title><rect x="60.8048%" y="597" width="36.3636%" height="15" fill="rgb(245,15,52)"/><text x="61.0548%" y="607.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (244 samples, 36.36%)</title><rect x="60.8048%" y="581" width="36.3636%" height="15" fill="rgb(220,133,28)"/><text x="61.0548%" y="591.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 36.36%)</title><rect x="60.8048%" y="565" width="36.3636%" height="15" fill="rgb(217,180,4)"/><text x="61.0548%" y="575.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 36.36%)</title><rect x="60.8048%" y="549" width="36.3636%" height="15" fill="rgb(251,24,1)"/><text x="61.0548%" y="559.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 36.21%)</title><rect x="60.9538%" y="533" width="36.2146%" height="15" fill="rgb(212,185,49)"/><text x="61.2038%" y="543.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (242 samples, 36.07%)</title><rect x="61.1028%" y="517" width="36.0656%" height="15" fill="rgb(215,175,22)"/><text x="61.3528%" y="527.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (241 samples, 35.92%)</title><rect x="61.2519%" y="501" width="35.9165%" height="15" fill="rgb(250,205,14)"/><text x="61.5019%" y="511.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (240 samples, 35.77%)</title><rect x="61.4009%" y="485" width="35.7675%" height="15" fill="rgb(225,211,22)"/><text x="61.6509%" y="495.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.30%)</title><rect x="96.8703%" y="469" width="0.2981%" height="15" fill="rgb(251,179,42)"/><text x="97.1203%" y="479.50"></text></g><g><title>lobsters_microbenchmarks::init_database (1 samples, 0.15%)</title><rect x="97.1684%" y="597" width="0.1490%" height="15" fill="rgb(208,216,51)"/><text x="97.4184%" y="607.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="97.1684%" y="581" width="0.1490%" height="15" fill="rgb(235,36,11)"/><text x="97.4184%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.15%)</title><rect x="97.1684%" y="565" width="0.1490%" height="15" fill="rgb(213,189,28)"/><text x="97.4184%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="97.1684%" y="549" width="0.1490%" height="15" fill="rgb(227,203,42)"/><text x="97.4184%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.15%)</title><rect x="97.1684%" y="533" width="0.1490%" height="15" fill="rgb(244,72,36)"/><text x="97.4184%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.15%)</title><rect x="97.1684%" y="517" width="0.1490%" height="15" fill="rgb(213,53,17)"/><text x="97.4184%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="97.1684%" y="501" width="0.1490%" height="15" fill="rgb(207,167,3)"/><text x="97.4184%" y="511.50"></text></g><g><title>std::net::each_addr (1 samples, 0.15%)</title><rect x="97.3174%" y="597" width="0.1490%" height="15" fill="rgb(216,98,30)"/><text x="97.5674%" y="607.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.15%)</title><rect x="97.3174%" y="581" width="0.1490%" height="15" fill="rgb(236,123,15)"/><text x="97.5674%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.15%)</title><rect x="97.3174%" y="565" width="0.1490%" height="15" fill="rgb(248,81,50)"/><text x="97.5674%" y="575.50"></text></g><g><title>__GI___socket (1 samples, 0.15%)</title><rect x="97.3174%" y="549" width="0.1490%" height="15" fill="rgb(214,120,4)"/><text x="97.5674%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="97.3174%" y="533" width="0.1490%" height="15" fill="rgb(208,179,34)"/><text x="97.5674%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="97.3174%" y="517" width="0.1490%" height="15" fill="rgb(227,140,7)"/><text x="97.5674%" y="527.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.15%)</title><rect x="97.3174%" y="501" width="0.1490%" height="15" fill="rgb(214,22,6)"/><text x="97.5674%" y="511.50"></text></g><g><title>__sys_socket (1 samples, 0.15%)</title><rect x="97.3174%" y="485" width="0.1490%" height="15" fill="rgb(207,137,27)"/><text x="97.5674%" y="495.50"></text></g><g><title>__fd_install (1 samples, 0.15%)</title><rect x="97.3174%" y="469" width="0.1490%" height="15" fill="rgb(210,8,46)"/><text x="97.5674%" y="479.50"></text></g><g><title>__libc_start_main (247 samples, 36.81%)</title><rect x="60.8048%" y="757" width="36.8107%" height="15" fill="rgb(240,16,54)"/><text x="61.0548%" y="767.50">__libc_start_main</text></g><g><title>main (247 samples, 36.81%)</title><rect x="60.8048%" y="741" width="36.8107%" height="15" fill="rgb(211,209,29)"/><text x="61.0548%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (247 samples, 36.81%)</title><rect x="60.8048%" y="725" width="36.8107%" height="15" fill="rgb(226,228,24)"/><text x="61.0548%" y="735.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (247 samples, 36.81%)</title><rect x="60.8048%" y="709" width="36.8107%" height="15" fill="rgb(222,84,9)"/><text x="61.0548%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (247 samples, 36.81%)</title><rect x="60.8048%" y="693" width="36.8107%" height="15" fill="rgb(234,203,30)"/><text x="61.0548%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (247 samples, 36.81%)</title><rect x="60.8048%" y="677" width="36.8107%" height="15" fill="rgb(238,109,14)"/><text x="61.0548%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (247 samples, 36.81%)</title><rect x="60.8048%" y="661" width="36.8107%" height="15" fill="rgb(233,206,34)"/><text x="61.0548%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnc..</text></g><g><title>std::rt::lang_start::_{{closure}} (247 samples, 36.81%)</title><rect x="60.8048%" y="645" width="36.8107%" height="15" fill="rgb(220,167,47)"/><text x="61.0548%" y="655.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (247 samples, 36.81%)</title><rect x="60.8048%" y="629" width="36.8107%" height="15" fill="rgb(238,105,10)"/><text x="61.0548%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters_microbenchmarks::main (247 samples, 36.81%)</title><rect x="60.8048%" y="613" width="36.8107%" height="15" fill="rgb(213,227,17)"/><text x="61.0548%" y="623.50">lobsters_microbenchmarks::main</text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.15%)</title><rect x="97.4665%" y="597" width="0.1490%" height="15" fill="rgb(217,132,38)"/><text x="97.7165%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::join (1 samples, 0.15%)</title><rect x="97.4665%" y="581" width="0.1490%" height="15" fill="rgb(242,146,4)"/><text x="97.7165%" y="591.50"></text></g><g><title>__pthread_clockjoin_ex (1 samples, 0.15%)</title><rect x="97.4665%" y="565" width="0.1490%" height="15" fill="rgb(212,61,9)"/><text x="97.7165%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="97.4665%" y="549" width="0.1490%" height="15" fill="rgb(247,126,22)"/><text x="97.7165%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="97.4665%" y="533" width="0.1490%" height="15" fill="rgb(220,196,2)"/><text x="97.7165%" y="543.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.15%)</title><rect x="97.4665%" y="517" width="0.1490%" height="15" fill="rgb(208,46,4)"/><text x="97.7165%" y="527.50"></text></g><g><title>do_futex (1 samples, 0.15%)</title><rect x="97.4665%" y="501" width="0.1490%" height="15" fill="rgb(252,104,46)"/><text x="97.7165%" y="511.50"></text></g><g><title>futex_wait (1 samples, 0.15%)</title><rect x="97.4665%" y="485" width="0.1490%" height="15" fill="rgb(237,152,48)"/><text x="97.7165%" y="495.50"></text></g><g><title>futex_wait_setup (1 samples, 0.15%)</title><rect x="97.4665%" y="469" width="0.1490%" height="15" fill="rgb(221,59,37)"/><text x="97.7165%" y="479.50"></text></g><g><title>get_futex_key (1 samples, 0.15%)</title><rect x="97.4665%" y="453" width="0.1490%" height="15" fill="rgb(209,202,51)"/><text x="97.7165%" y="463.50"></text></g><g><title>internal_get_user_pages_fast (1 samples, 0.15%)</title><rect x="97.4665%" y="437" width="0.1490%" height="15" fill="rgb(228,81,30)"/><text x="97.7165%" y="447.50"></text></g><g><title>gup_pgd_range (1 samples, 0.15%)</title><rect x="97.4665%" y="421" width="0.1490%" height="15" fill="rgb(227,42,39)"/><text x="97.7165%" y="431.50"></text></g><g><title>_start (248 samples, 36.96%)</title><rect x="60.8048%" y="773" width="36.9598%" height="15" fill="rgb(221,26,2)"/><text x="61.0548%" y="783.50">_start</text></g><g><title>_dl_start (1 samples, 0.15%)</title><rect x="97.6155%" y="757" width="0.1490%" height="15" fill="rgb(254,61,31)"/><text x="97.8655%" y="767.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="97.6155%" y="741" width="0.1490%" height="15" fill="rgb(222,173,38)"/><text x="97.8655%" y="751.50"></text></g><g><title>dl_main (1 samples, 0.15%)</title><rect x="97.6155%" y="725" width="0.1490%" height="15" fill="rgb(218,50,12)"/><text x="97.8655%" y="735.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.15%)</title><rect x="97.6155%" y="709" width="0.1490%" height="15" fill="rgb(223,88,40)"/><text x="97.8655%" y="719.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.15%)</title><rect x="97.6155%" y="693" width="0.1490%" height="15" fill="rgb(237,54,19)"/><text x="97.8655%" y="703.50"></text></g><g><title>openaux (1 samples, 0.15%)</title><rect x="97.6155%" y="677" width="0.1490%" height="15" fill="rgb(251,129,25)"/><text x="97.8655%" y="687.50"></text></g><g><title>_dl_map_object (1 samples, 0.15%)</title><rect x="97.6155%" y="661" width="0.1490%" height="15" fill="rgb(238,97,19)"/><text x="97.8655%" y="671.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.15%)</title><rect x="97.6155%" y="645" width="0.1490%" height="15" fill="rgb(240,169,18)"/><text x="97.8655%" y="655.50"></text></g><g><title>memset (1 samples, 0.15%)</title><rect x="97.6155%" y="629" width="0.1490%" height="15" fill="rgb(230,187,49)"/><text x="97.8655%" y="639.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="97.6155%" y="613" width="0.1490%" height="15" fill="rgb(209,44,26)"/><text x="97.8655%" y="623.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="97.6155%" y="597" width="0.1490%" height="15" fill="rgb(244,0,6)"/><text x="97.8655%" y="607.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="97.6155%" y="581" width="0.1490%" height="15" fill="rgb(248,18,21)"/><text x="97.8655%" y="591.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="97.6155%" y="565" width="0.1490%" height="15" fill="rgb(245,180,19)"/><text x="97.8655%" y="575.50"></text></g><g><title>copy_page (1 samples, 0.15%)</title><rect x="97.6155%" y="549" width="0.1490%" height="15" fill="rgb(252,118,36)"/><text x="97.8655%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="97.7645%" y="773" width="0.1490%" height="15" fill="rgb(210,224,19)"/><text x="98.0145%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="97.9136%" y="773" width="0.1490%" height="15" fill="rgb(218,30,24)"/><text x="98.1636%" y="783.50"></text></g><g><title>[vmlinux] (1 samples, 0.15%)</title><rect x="98.2116%" y="741" width="0.1490%" height="15" fill="rgb(219,75,50)"/><text x="98.4616%" y="751.50"></text></g><g><title>do_group_exit (1 samples, 0.15%)</title><rect x="98.2116%" y="725" width="0.1490%" height="15" fill="rgb(234,72,50)"/><text x="98.4616%" y="735.50"></text></g><g><title>do_exit (1 samples, 0.15%)</title><rect x="98.2116%" y="709" width="0.1490%" height="15" fill="rgb(219,100,48)"/><text x="98.4616%" y="719.50"></text></g><g><title>mmput (1 samples, 0.15%)</title><rect x="98.2116%" y="693" width="0.1490%" height="15" fill="rgb(253,5,41)"/><text x="98.4616%" y="703.50"></text></g><g><title>exit_mmap (1 samples, 0.15%)</title><rect x="98.2116%" y="677" width="0.1490%" height="15" fill="rgb(247,181,11)"/><text x="98.4616%" y="687.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.15%)</title><rect x="98.2116%" y="661" width="0.1490%" height="15" fill="rgb(222,223,25)"/><text x="98.4616%" y="671.50"></text></g><g><title>release_pages (1 samples, 0.15%)</title><rect x="98.2116%" y="645" width="0.1490%" height="15" fill="rgb(214,198,28)"/><text x="98.4616%" y="655.50"></text></g><g><title>mem_cgroup_uncharge_list (1 samples, 0.15%)</title><rect x="98.2116%" y="629" width="0.1490%" height="15" fill="rgb(230,46,43)"/><text x="98.4616%" y="639.50"></text></g><g><title>uncharge_page (1 samples, 0.15%)</title><rect x="98.2116%" y="613" width="0.1490%" height="15" fill="rgb(233,65,53)"/><text x="98.4616%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.45%)</title><rect x="98.0626%" y="773" width="0.4471%" height="15" fill="rgb(221,121,27)"/><text x="98.3126%" y="783.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="98.2116%" y="757" width="0.2981%" height="15" fill="rgb(247,70,47)"/><text x="98.4616%" y="767.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.15%)</title><rect x="98.3607%" y="741" width="0.1490%" height="15" fill="rgb(228,85,35)"/><text x="98.6107%" y="751.50"></text></g><g><title>do_execve (1 samples, 0.15%)</title><rect x="98.3607%" y="725" width="0.1490%" height="15" fill="rgb(209,50,18)"/><text x="98.6107%" y="735.50"></text></g><g><title>__do_execve_file (1 samples, 0.15%)</title><rect x="98.3607%" y="709" width="0.1490%" height="15" fill="rgb(250,19,35)"/><text x="98.6107%" y="719.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.15%)</title><rect x="98.3607%" y="693" width="0.1490%" height="15" fill="rgb(253,107,29)"/><text x="98.6107%" y="703.50"></text></g><g><title>load_elf_binary (1 samples, 0.15%)</title><rect x="98.3607%" y="677" width="0.1490%" height="15" fill="rgb(252,179,29)"/><text x="98.6107%" y="687.50"></text></g><g><title>__clear_user (1 samples, 0.15%)</title><rect x="98.3607%" y="661" width="0.1490%" height="15" fill="rgb(238,194,6)"/><text x="98.6107%" y="671.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="98.3607%" y="645" width="0.1490%" height="15" fill="rgb(238,164,29)"/><text x="98.6107%" y="655.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="98.3607%" y="629" width="0.1490%" height="15" fill="rgb(224,25,9)"/><text x="98.6107%" y="639.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="98.3607%" y="613" width="0.1490%" height="15" fill="rgb(244,153,23)"/><text x="98.6107%" y="623.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="98.3607%" y="597" width="0.1490%" height="15" fill="rgb(212,203,14)"/><text x="98.6107%" y="607.50"></text></g><g><title>__pmd_alloc (1 samples, 0.15%)</title><rect x="98.3607%" y="581" width="0.1490%" height="15" fill="rgb(220,164,20)"/><text x="98.6107%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="98.3607%" y="565" width="0.1490%" height="15" fill="rgb(222,203,48)"/><text x="98.6107%" y="575.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.15%)</title><rect x="98.3607%" y="549" width="0.1490%" height="15" fill="rgb(215,159,22)"/><text x="98.6107%" y="559.50"></text></g><g><title>__memcg_kmem_charge (1 samples, 0.15%)</title><rect x="98.3607%" y="533" width="0.1490%" height="15" fill="rgb(216,183,47)"/><text x="98.6107%" y="543.50"></text></g><g><title>try_charge (1 samples, 0.15%)</title><rect x="98.3607%" y="517" width="0.1490%" height="15" fill="rgb(229,195,25)"/><text x="98.6107%" y="527.50"></text></g><g><title>page_fault (3 samples, 0.45%)</title><rect x="98.5097%" y="773" width="0.4471%" height="15" fill="rgb(224,132,51)"/><text x="98.7597%" y="783.50"></text></g><g><title>lobsters-microb (665 samples, 99.11%)</title><rect x="0.0000%" y="789" width="99.1058%" height="15" fill="rgb(240,63,7)"/><text x="0.2500%" y="799.50">lobsters-microb</text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.15%)</title><rect x="98.9568%" y="773" width="0.1490%" height="15" fill="rgb(249,182,41)"/><text x="99.2068%" y="783.50"></text></g><g><title>all (671 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(243,47,26)"/><text x="0.2500%" y="815.50"></text></g><g><title>perf (6 samples, 0.89%)</title><rect x="99.1058%" y="789" width="0.8942%" height="15" fill="rgb(233,48,2)"/><text x="99.3558%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.89%)</title><rect x="99.1058%" y="773" width="0.8942%" height="15" fill="rgb(244,165,34)"/><text x="99.3558%" y="783.50"></text></g><g><title>do_syscall_64 (6 samples, 0.89%)</title><rect x="99.1058%" y="757" width="0.8942%" height="15" fill="rgb(207,89,7)"/><text x="99.3558%" y="767.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.89%)</title><rect x="99.1058%" y="741" width="0.8942%" height="15" fill="rgb(244,117,36)"/><text x="99.3558%" y="751.50"></text></g><g><title>do_execve (6 samples, 0.89%)</title><rect x="99.1058%" y="725" width="0.8942%" height="15" fill="rgb(226,144,34)"/><text x="99.3558%" y="735.50"></text></g><g><title>__do_execve_file (6 samples, 0.89%)</title><rect x="99.1058%" y="709" width="0.8942%" height="15" fill="rgb(213,23,19)"/><text x="99.3558%" y="719.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.89%)</title><rect x="99.1058%" y="693" width="0.8942%" height="15" fill="rgb(217,75,12)"/><text x="99.3558%" y="703.50"></text></g><g><title>load_elf_binary (6 samples, 0.89%)</title><rect x="99.1058%" y="677" width="0.8942%" height="15" fill="rgb(224,159,17)"/><text x="99.3558%" y="687.50"></text></g><g><title>setup_new_exec (6 samples, 0.89%)</title><rect x="99.1058%" y="661" width="0.8942%" height="15" fill="rgb(217,118,1)"/><text x="99.3558%" y="671.50"></text></g><g><title>perf_event_exec (6 samples, 0.89%)</title><rect x="99.1058%" y="645" width="0.8942%" height="15" fill="rgb(232,180,48)"/><text x="99.3558%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.75%)</title><rect x="99.2548%" y="629" width="0.7452%" height="15" fill="rgb(230,27,33)"/><text x="99.5048%" y="639.50"></text></g><g><title>native_write_msr (5 samples, 0.75%)</title><rect x="99.2548%" y="613" width="0.7452%" height="15" fill="rgb(205,31,21)"/><text x="99.5048%" y="623.50"></text></g></svg></svg>