<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="853.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="0.0000%" y="789" width="0.1277%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="799.50"></text></g><g><title>[[heap]] (1 samples, 0.13%)</title><rect x="0.1277%" y="789" width="0.1277%" height="15" fill="rgb(217,0,24)"/><text x="0.3777%" y="799.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.13%)</title><rect x="0.1277%" y="773" width="0.1277%" height="15" fill="rgb(221,193,54)"/><text x="0.3777%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="0.2554%" y="773" width="0.1277%" height="15" fill="rgb(248,212,6)"/><text x="0.5054%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.13%)</title><rect x="0.3831%" y="773" width="0.1277%" height="15" fill="rgb(208,68,35)"/><text x="0.6331%" y="783.50"></text></g><g><title>[[stack]] (3 samples, 0.38%)</title><rect x="0.2554%" y="789" width="0.3831%" height="15" fill="rgb(232,128,0)"/><text x="0.5054%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.13%)</title><rect x="0.5109%" y="773" width="0.1277%" height="15" fill="rgb(207,160,47)"/><text x="0.7609%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.38%)</title><rect x="0.6386%" y="773" width="0.3831%" height="15" fill="rgb(228,23,34)"/><text x="0.8886%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="0.8940%" y="757" width="0.1277%" height="15" fill="rgb(218,30,26)"/><text x="1.1440%" y="767.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.13%)</title><rect x="0.8940%" y="741" width="0.1277%" height="15" fill="rgb(220,122,19)"/><text x="1.1440%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="0.8940%" y="725" width="0.1277%" height="15" fill="rgb(250,228,42)"/><text x="1.1440%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="0.8940%" y="709" width="0.1277%" height="15" fill="rgb(240,193,28)"/><text x="1.1440%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="0.8940%" y="693" width="0.1277%" height="15" fill="rgb(216,20,37)"/><text x="1.1440%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.13%)</title><rect x="0.8940%" y="677" width="0.1277%" height="15" fill="rgb(206,188,39)"/><text x="1.1440%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="0.8940%" y="661" width="0.1277%" height="15" fill="rgb(217,207,13)"/><text x="1.1440%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.13%)</title><rect x="0.8940%" y="645" width="0.1277%" height="15" fill="rgb(231,73,38)"/><text x="1.1440%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="0.8940%" y="629" width="0.1277%" height="15" fill="rgb(225,20,46)"/><text x="1.1440%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="0.8940%" y="613" width="0.1277%" height="15" fill="rgb(210,31,41)"/><text x="1.1440%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.13%)</title><rect x="0.8940%" y="597" width="0.1277%" height="15" fill="rgb(221,200,47)"/><text x="1.1440%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="0.8940%" y="581" width="0.1277%" height="15" fill="rgb(226,26,5)"/><text x="1.1440%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.13%)</title><rect x="0.8940%" y="565" width="0.1277%" height="15" fill="rgb(249,33,26)"/><text x="1.1440%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="1.0217%" y="773" width="0.1277%" height="15" fill="rgb(235,183,28)"/><text x="1.2717%" y="783.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.13%)</title><rect x="1.1494%" y="773" width="0.1277%" height="15" fill="rgb(221,5,38)"/><text x="1.3994%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.13%)</title><rect x="1.1494%" y="757" width="0.1277%" height="15" fill="rgb(247,18,42)"/><text x="1.3994%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="1.2771%" y="773" width="0.1277%" height="15" fill="rgb(241,131,45)"/><text x="1.5271%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="1.4049%" y="773" width="0.1277%" height="15" fill="rgb(249,31,29)"/><text x="1.6549%" y="783.50"></text></g><g><title>__libc_send (1 samples, 0.13%)</title><rect x="1.5326%" y="773" width="0.1277%" height="15" fill="rgb(225,111,53)"/><text x="1.7826%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="1.5326%" y="757" width="0.1277%" height="15" fill="rgb(238,160,17)"/><text x="1.7826%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.26%)</title><rect x="1.6603%" y="773" width="0.2554%" height="15" fill="rgb(214,148,48)"/><text x="1.9103%" y="783.50"></text></g><g><title>__rdl_realloc (1 samples, 0.13%)</title><rect x="1.9157%" y="773" width="0.1277%" height="15" fill="rgb(232,36,49)"/><text x="2.1657%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.13%)</title><rect x="1.9157%" y="757" width="0.1277%" height="15" fill="rgb(209,103,24)"/><text x="2.1657%" y="767.50"></text></g><g><title>_int_free (5 samples, 0.64%)</title><rect x="2.0434%" y="773" width="0.6386%" height="15" fill="rgb(229,88,8)"/><text x="2.2934%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="2.6820%" y="773" width="0.1277%" height="15" fill="rgb(213,181,19)"/><text x="2.9320%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="2.8097%" y="773" width="0.1277%" height="15" fill="rgb(254,191,54)"/><text x="3.0597%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.51%)</title><rect x="2.9374%" y="773" width="0.5109%" height="15" fill="rgb(241,83,37)"/><text x="3.1874%" y="783.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="3.3206%" y="757" width="0.1277%" height="15" fill="rgb(233,36,39)"/><text x="3.5706%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="3.3206%" y="741" width="0.1277%" height="15" fill="rgb(226,3,54)"/><text x="3.5706%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="3.3206%" y="725" width="0.1277%" height="15" fill="rgb(245,192,40)"/><text x="3.5706%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="3.3206%" y="709" width="0.1277%" height="15" fill="rgb(238,167,29)"/><text x="3.5706%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="3.3206%" y="693" width="0.1277%" height="15" fill="rgb(232,182,51)"/><text x="3.5706%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="3.3206%" y="677" width="0.1277%" height="15" fill="rgb(231,60,39)"/><text x="3.5706%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="3.3206%" y="661" width="0.1277%" height="15" fill="rgb(208,69,12)"/><text x="3.5706%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="3.3206%" y="645" width="0.1277%" height="15" fill="rgb(235,93,37)"/><text x="3.5706%" y="655.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.51%)</title><rect x="3.4483%" y="773" width="0.5109%" height="15" fill="rgb(213,116,39)"/><text x="3.6983%" y="783.50"></text></g><g><title>alloc_perturb (1 samples, 0.13%)</title><rect x="3.9591%" y="773" width="0.1277%" height="15" fill="rgb(222,207,29)"/><text x="4.2091%" y="783.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (1 samples, 0.13%)</title><rect x="4.0868%" y="773" width="0.1277%" height="15" fill="rgb(206,96,30)"/><text x="4.3368%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.13%)</title><rect x="4.2146%" y="773" width="0.1277%" height="15" fill="rgb(218,138,4)"/><text x="4.4646%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.13%)</title><rect x="4.3423%" y="773" width="0.1277%" height="15" fill="rgb(250,191,14)"/><text x="4.5923%" y="783.50"></text></g><g><title>[anon] (31 samples, 3.96%)</title><rect x="0.6386%" y="789" width="3.9591%" height="15" fill="rgb(239,60,40)"/><text x="0.8886%" y="799.50">[ano..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.13%)</title><rect x="4.4700%" y="773" width="0.1277%" height="15" fill="rgb(206,27,48)"/><text x="4.7200%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="4.5977%" y="773" width="0.1277%" height="15" fill="rgb(225,35,8)"/><text x="4.8477%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.26%)</title><rect x="4.5977%" y="789" width="0.2554%" height="15" fill="rgb(250,213,24)"/><text x="4.8477%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="4.7254%" y="773" width="0.1277%" height="15" fill="rgb(247,123,22)"/><text x="4.9754%" y="783.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.13%)</title><rect x="4.8531%" y="773" width="0.1277%" height="15" fill="rgb(231,138,38)"/><text x="5.1031%" y="783.50"></text></g><g><title>[lobsters-microbenchmarks] (2 samples, 0.26%)</title><rect x="4.8531%" y="789" width="0.2554%" height="15" fill="rgb(231,145,46)"/><text x="5.1031%" y="799.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="4.9808%" y="773" width="0.1277%" height="15" fill="rgb(251,118,11)"/><text x="5.2308%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="5.1086%" y="773" width="0.1277%" height="15" fill="rgb(217,147,25)"/><text x="5.3586%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.13%)</title><rect x="5.2363%" y="645" width="0.1277%" height="15" fill="rgb(247,81,37)"/><text x="5.4863%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="5.2363%" y="629" width="0.1277%" height="15" fill="rgb(209,12,38)"/><text x="5.4863%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="5.2363%" y="613" width="0.1277%" height="15" fill="rgb(227,1,9)"/><text x="5.4863%" y="623.50"></text></g><g><title>__kfree_skb (1 samples, 0.13%)</title><rect x="5.3640%" y="437" width="0.1277%" height="15" fill="rgb(248,47,43)"/><text x="5.6140%" y="447.50"></text></g><g><title>skb_release_head_state (1 samples, 0.13%)</title><rect x="5.3640%" y="421" width="0.1277%" height="15" fill="rgb(221,10,30)"/><text x="5.6140%" y="431.50"></text></g><g><title>dst_release (1 samples, 0.13%)</title><rect x="5.3640%" y="405" width="0.1277%" height="15" fill="rgb(210,229,1)"/><text x="5.6140%" y="415.50"></text></g><g><title>release_sock (1 samples, 0.13%)</title><rect x="5.4917%" y="437" width="0.1277%" height="15" fill="rgb(222,148,37)"/><text x="5.7417%" y="447.50"></text></g><g><title>update_curr (1 samples, 0.13%)</title><rect x="5.7471%" y="325" width="0.1277%" height="15" fill="rgb(234,67,33)"/><text x="5.9971%" y="335.50"></text></g><g><title>update_min_vruntime (1 samples, 0.13%)</title><rect x="5.7471%" y="309" width="0.1277%" height="15" fill="rgb(247,98,35)"/><text x="5.9971%" y="319.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.38%)</title><rect x="5.7471%" y="357" width="0.3831%" height="15" fill="rgb(247,138,52)"/><text x="5.9971%" y="367.50"></text></g><g><title>dequeue_entity (3 samples, 0.38%)</title><rect x="5.7471%" y="341" width="0.3831%" height="15" fill="rgb(213,79,30)"/><text x="5.9971%" y="351.50"></text></g><g><title>update_load_avg (2 samples, 0.26%)</title><rect x="5.8748%" y="325" width="0.2554%" height="15" fill="rgb(246,177,23)"/><text x="6.1248%" y="335.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.26%)</title><rect x="5.8748%" y="309" width="0.2554%" height="15" fill="rgb(230,62,27)"/><text x="6.1248%" y="319.50"></text></g><g><title>finish_task_switch (1 samples, 0.13%)</title><rect x="6.1303%" y="357" width="0.1277%" height="15" fill="rgb(216,154,8)"/><text x="6.3803%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.13%)</title><rect x="6.1303%" y="341" width="0.1277%" height="15" fill="rgb(244,35,45)"/><text x="6.3803%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.13%)</title><rect x="6.1303%" y="325" width="0.1277%" height="15" fill="rgb(251,115,12)"/><text x="6.3803%" y="335.50"></text></g><g><title>native_write_msr (1 samples, 0.13%)</title><rect x="6.1303%" y="309" width="0.1277%" height="15" fill="rgb(240,54,50)"/><text x="6.3803%" y="319.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.13%)</title><rect x="6.2580%" y="357" width="0.1277%" height="15" fill="rgb(233,84,52)"/><text x="6.5080%" y="367.50"></text></g><g><title>__update_idle_core (1 samples, 0.13%)</title><rect x="6.2580%" y="341" width="0.1277%" height="15" fill="rgb(207,117,47)"/><text x="6.5080%" y="351.50"></text></g><g><title>sk_wait_data (7 samples, 0.89%)</title><rect x="5.6194%" y="437" width="0.8940%" height="15" fill="rgb(249,43,39)"/><text x="5.8694%" y="447.50"></text></g><g><title>wait_woken (7 samples, 0.89%)</title><rect x="5.6194%" y="421" width="0.8940%" height="15" fill="rgb(209,38,44)"/><text x="5.8694%" y="431.50"></text></g><g><title>schedule_timeout (7 samples, 0.89%)</title><rect x="5.6194%" y="405" width="0.8940%" height="15" fill="rgb(236,212,23)"/><text x="5.8694%" y="415.50"></text></g><g><title>schedule (6 samples, 0.77%)</title><rect x="5.7471%" y="389" width="0.7663%" height="15" fill="rgb(242,79,21)"/><text x="5.9971%" y="399.50"></text></g><g><title>__schedule (6 samples, 0.77%)</title><rect x="5.7471%" y="373" width="0.7663%" height="15" fill="rgb(211,96,35)"/><text x="5.9971%" y="383.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.13%)</title><rect x="6.3857%" y="357" width="0.1277%" height="15" fill="rgb(253,215,40)"/><text x="6.6357%" y="367.50"></text></g><g><title>do_syscall_64 (10 samples, 1.28%)</title><rect x="5.3640%" y="517" width="1.2771%" height="15" fill="rgb(211,81,21)"/><text x="5.6140%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (10 samples, 1.28%)</title><rect x="5.3640%" y="501" width="1.2771%" height="15" fill="rgb(208,190,38)"/><text x="5.6140%" y="511.50"></text></g><g><title>__sys_recvfrom (10 samples, 1.28%)</title><rect x="5.3640%" y="485" width="1.2771%" height="15" fill="rgb(235,213,38)"/><text x="5.6140%" y="495.50"></text></g><g><title>inet_recvmsg (10 samples, 1.28%)</title><rect x="5.3640%" y="469" width="1.2771%" height="15" fill="rgb(237,122,38)"/><text x="5.6140%" y="479.50"></text></g><g><title>tcp_recvmsg (10 samples, 1.28%)</title><rect x="5.3640%" y="453" width="1.2771%" height="15" fill="rgb(244,218,35)"/><text x="5.6140%" y="463.50"></text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.13%)</title><rect x="6.5134%" y="437" width="0.1277%" height="15" fill="rgb(240,68,47)"/><text x="6.7634%" y="447.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (13 samples, 1.66%)</title><rect x="5.3640%" y="629" width="1.6603%" height="15" fill="rgb(210,16,53)"/><text x="5.6140%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 1.66%)</title><rect x="5.3640%" y="613" width="1.6603%" height="15" fill="rgb(235,124,12)"/><text x="5.6140%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 1.66%)</title><rect x="5.3640%" y="597" width="1.6603%" height="15" fill="rgb(224,169,11)"/><text x="5.6140%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 1.66%)</title><rect x="5.3640%" y="581" width="1.6603%" height="15" fill="rgb(250,166,2)"/><text x="5.6140%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 1.66%)</title><rect x="5.3640%" y="565" width="1.6603%" height="15" fill="rgb(242,216,29)"/><text x="5.6140%" y="575.50"></text></g><g><title>__libc_recv (13 samples, 1.66%)</title><rect x="5.3640%" y="549" width="1.6603%" height="15" fill="rgb(230,116,27)"/><text x="5.6140%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.66%)</title><rect x="5.3640%" y="533" width="1.6603%" height="15" fill="rgb(228,99,48)"/><text x="5.6140%" y="543.50"></text></g><g><title>prepare_exit_to_usermode (3 samples, 0.38%)</title><rect x="6.6411%" y="517" width="0.3831%" height="15" fill="rgb(253,11,6)"/><text x="6.8911%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.92%)</title><rect x="5.3640%" y="645" width="1.9157%" height="15" fill="rgb(247,143,39)"/><text x="5.6140%" y="655.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.26%)</title><rect x="7.0243%" y="629" width="0.2554%" height="15" fill="rgb(236,97,10)"/><text x="7.2743%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.26%)</title><rect x="7.0243%" y="613" width="0.2554%" height="15" fill="rgb(233,208,19)"/><text x="7.2743%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.26%)</title><rect x="7.0243%" y="597" width="0.2554%" height="15" fill="rgb(216,164,2)"/><text x="7.2743%" y="607.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.13%)</title><rect x="7.1520%" y="581" width="0.1277%" height="15" fill="rgb(220,129,5)"/><text x="7.4020%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.13%)</title><rect x="7.1520%" y="565" width="0.1277%" height="15" fill="rgb(242,17,10)"/><text x="7.4020%" y="575.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (17 samples, 2.17%)</title><rect x="5.2363%" y="725" width="2.1711%" height="15" fill="rgb(242,107,0)"/><text x="5.4863%" y="735.50">d..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (17 samples, 2.17%)</title><rect x="5.2363%" y="709" width="2.1711%" height="15" fill="rgb(251,28,31)"/><text x="5.4863%" y="719.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (17 samples, 2.17%)</title><rect x="5.2363%" y="693" width="2.1711%" height="15" fill="rgb(233,223,10)"/><text x="5.4863%" y="703.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (17 samples, 2.17%)</title><rect x="5.2363%" y="677" width="2.1711%" height="15" fill="rgb(215,21,27)"/><text x="5.4863%" y="687.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (17 samples, 2.17%)</title><rect x="5.2363%" y="661" width="2.1711%" height="15" fill="rgb(232,23,21)"/><text x="5.4863%" y="671.50">m..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.13%)</title><rect x="7.2797%" y="645" width="0.1277%" height="15" fill="rgb(244,5,23)"/><text x="7.5297%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="7.2797%" y="629" width="0.1277%" height="15" fill="rgb(226,81,46)"/><text x="7.5297%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.13%)</title><rect x="7.2797%" y="613" width="0.1277%" height="15" fill="rgb(247,70,30)"/><text x="7.5297%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="7.2797%" y="597" width="0.1277%" height="15" fill="rgb(212,68,19)"/><text x="7.5297%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="7.2797%" y="581" width="0.1277%" height="15" fill="rgb(240,187,13)"/><text x="7.5297%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="7.2797%" y="565" width="0.1277%" height="15" fill="rgb(223,113,26)"/><text x="7.5297%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="7.2797%" y="549" width="0.1277%" height="15" fill="rgb(206,192,2)"/><text x="7.5297%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="7.2797%" y="533" width="0.1277%" height="15" fill="rgb(241,108,4)"/><text x="7.5297%" y="543.50"></text></g><g><title>sysmalloc (1 samples, 0.13%)</title><rect x="7.2797%" y="517" width="0.1277%" height="15" fill="rgb(247,173,49)"/><text x="7.5297%" y="527.50"></text></g><g><title>__GI___mprotect (1 samples, 0.13%)</title><rect x="7.2797%" y="501" width="0.1277%" height="15" fill="rgb(224,114,35)"/><text x="7.5297%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="7.2797%" y="485" width="0.1277%" height="15" fill="rgb(245,159,27)"/><text x="7.5297%" y="495.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="7.2797%" y="469" width="0.1277%" height="15" fill="rgb(245,172,44)"/><text x="7.5297%" y="479.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.13%)</title><rect x="7.2797%" y="453" width="0.1277%" height="15" fill="rgb(236,23,11)"/><text x="7.5297%" y="463.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.13%)</title><rect x="7.2797%" y="437" width="0.1277%" height="15" fill="rgb(205,117,38)"/><text x="7.5297%" y="447.50"></text></g><g><title>mprotect_fixup (1 samples, 0.13%)</title><rect x="7.2797%" y="421" width="0.1277%" height="15" fill="rgb(237,72,25)"/><text x="7.5297%" y="431.50"></text></g><g><title>perf_event_mmap (1 samples, 0.13%)</title><rect x="7.2797%" y="405" width="0.1277%" height="15" fill="rgb(244,70,9)"/><text x="7.5297%" y="415.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.13%)</title><rect x="7.2797%" y="389" width="0.1277%" height="15" fill="rgb(217,125,39)"/><text x="7.5297%" y="399.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.13%)</title><rect x="7.2797%" y="373" width="0.1277%" height="15" fill="rgb(235,36,10)"/><text x="7.5297%" y="383.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="7.4074%" y="581" width="0.1277%" height="15" fill="rgb(251,123,47)"/><text x="7.6574%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="7.4074%" y="565" width="0.1277%" height="15" fill="rgb(221,13,13)"/><text x="7.6574%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="7.4074%" y="549" width="0.1277%" height="15" fill="rgb(238,131,9)"/><text x="7.6574%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="7.4074%" y="533" width="0.1277%" height="15" fill="rgb(211,50,8)"/><text x="7.6574%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="7.4074%" y="517" width="0.1277%" height="15" fill="rgb(245,182,24)"/><text x="7.6574%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="7.4074%" y="501" width="0.1277%" height="15" fill="rgb(242,14,37)"/><text x="7.6574%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="7.4074%" y="485" width="0.1277%" height="15" fill="rgb(246,228,12)"/><text x="7.6574%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="7.4074%" y="469" width="0.1277%" height="15" fill="rgb(213,55,15)"/><text x="7.6574%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="7.4074%" y="453" width="0.1277%" height="15" fill="rgb(209,9,3)"/><text x="7.6574%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="7.4074%" y="437" width="0.1277%" height="15" fill="rgb(230,59,30)"/><text x="7.6574%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.38%)</title><rect x="7.4074%" y="629" width="0.3831%" height="15" fill="rgb(209,121,21)"/><text x="7.6574%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.38%)</title><rect x="7.4074%" y="613" width="0.3831%" height="15" fill="rgb(220,109,13)"/><text x="7.6574%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.38%)</title><rect x="7.4074%" y="597" width="0.3831%" height="15" fill="rgb(232,18,1)"/><text x="7.6574%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.26%)</title><rect x="7.5351%" y="581" width="0.2554%" height="15" fill="rgb(215,41,42)"/><text x="7.7851%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.13%)</title><rect x="7.6628%" y="565" width="0.1277%" height="15" fill="rgb(224,123,36)"/><text x="7.9128%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.13%)</title><rect x="7.6628%" y="549" width="0.1277%" height="15" fill="rgb(240,125,3)"/><text x="7.9128%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="7.6628%" y="533" width="0.1277%" height="15" fill="rgb(205,98,50)"/><text x="7.9128%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="7.7905%" y="629" width="0.1277%" height="15" fill="rgb(205,185,37)"/><text x="8.0405%" y="639.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (5 samples, 0.64%)</title><rect x="7.4074%" y="677" width="0.6386%" height="15" fill="rgb(238,207,15)"/><text x="7.6574%" y="687.50"></text></g><g><title>core::fmt::write (5 samples, 0.64%)</title><rect x="7.4074%" y="661" width="0.6386%" height="15" fill="rgb(213,199,42)"/><text x="7.6574%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.64%)</title><rect x="7.4074%" y="645" width="0.6386%" height="15" fill="rgb(235,201,11)"/><text x="7.6574%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="7.9183%" y="629" width="0.1277%" height="15" fill="rgb(207,46,11)"/><text x="8.1683%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="7.9183%" y="613" width="0.1277%" height="15" fill="rgb(241,35,35)"/><text x="8.1683%" y="623.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (7 samples, 0.89%)</title><rect x="7.4074%" y="693" width="0.8940%" height="15" fill="rgb(243,32,47)"/><text x="7.6574%" y="703.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (2 samples, 0.26%)</title><rect x="8.0460%" y="677" width="0.2554%" height="15" fill="rgb(247,202,23)"/><text x="8.2960%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.26%)</title><rect x="8.0460%" y="661" width="0.2554%" height="15" fill="rgb(219,102,11)"/><text x="8.2960%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.26%)</title><rect x="8.0460%" y="645" width="0.2554%" height="15" fill="rgb(243,110,44)"/><text x="8.2960%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.26%)</title><rect x="8.0460%" y="629" width="0.2554%" height="15" fill="rgb(222,74,54)"/><text x="8.2960%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.26%)</title><rect x="8.0460%" y="613" width="0.2554%" height="15" fill="rgb(216,99,12)"/><text x="8.2960%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.26%)</title><rect x="8.0460%" y="597" width="0.2554%" height="15" fill="rgb(226,22,26)"/><text x="8.2960%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="8.1737%" y="581" width="0.1277%" height="15" fill="rgb(217,163,10)"/><text x="8.4237%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="8.1737%" y="565" width="0.1277%" height="15" fill="rgb(213,25,53)"/><text x="8.4237%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="8.1737%" y="549" width="0.1277%" height="15" fill="rgb(252,105,26)"/><text x="8.4237%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="8.1737%" y="533" width="0.1277%" height="15" fill="rgb(220,39,43)"/><text x="8.4237%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="8.1737%" y="517" width="0.1277%" height="15" fill="rgb(229,68,48)"/><text x="8.4237%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="8.1737%" y="501" width="0.1277%" height="15" fill="rgb(252,8,32)"/><text x="8.4237%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="8.1737%" y="485" width="0.1277%" height="15" fill="rgb(223,20,43)"/><text x="8.4237%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="8.1737%" y="469" width="0.1277%" height="15" fill="rgb(229,81,49)"/><text x="8.4237%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="8.1737%" y="453" width="0.1277%" height="15" fill="rgb(236,28,36)"/><text x="8.4237%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="8.1737%" y="437" width="0.1277%" height="15" fill="rgb(249,185,26)"/><text x="8.4237%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="8.3014%" y="629" width="0.1277%" height="15" fill="rgb(249,174,33)"/><text x="8.5514%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="8.3014%" y="613" width="0.1277%" height="15" fill="rgb(233,201,37)"/><text x="8.5514%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="8.3014%" y="597" width="0.1277%" height="15" fill="rgb(221,78,26)"/><text x="8.5514%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="8.3014%" y="581" width="0.1277%" height="15" fill="rgb(250,127,30)"/><text x="8.5514%" y="591.50"></text></g><g><title>decor_mem::select::expr_to_col (3 samples, 0.38%)</title><rect x="8.3014%" y="677" width="0.3831%" height="15" fill="rgb(230,49,44)"/><text x="8.5514%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.38%)</title><rect x="8.3014%" y="661" width="0.3831%" height="15" fill="rgb(229,67,23)"/><text x="8.5514%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (3 samples, 0.38%)</title><rect x="8.3014%" y="645" width="0.3831%" height="15" fill="rgb(249,83,47)"/><text x="8.5514%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.26%)</title><rect x="8.4291%" y="629" width="0.2554%" height="15" fill="rgb(215,43,3)"/><text x="8.6791%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.26%)</title><rect x="8.4291%" y="613" width="0.2554%" height="15" fill="rgb(238,154,13)"/><text x="8.6791%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.26%)</title><rect x="8.4291%" y="597" width="0.2554%" height="15" fill="rgb(219,56,2)"/><text x="8.6791%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.26%)</title><rect x="8.4291%" y="581" width="0.2554%" height="15" fill="rgb(233,0,4)"/><text x="8.6791%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.26%)</title><rect x="8.4291%" y="565" width="0.2554%" height="15" fill="rgb(235,30,7)"/><text x="8.6791%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.26%)</title><rect x="8.4291%" y="549" width="0.2554%" height="15" fill="rgb(250,79,13)"/><text x="8.6791%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="8.5568%" y="533" width="0.1277%" height="15" fill="rgb(211,146,34)"/><text x="8.8068%" y="543.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="8.6845%" y="581" width="0.1277%" height="15" fill="rgb(228,22,38)"/><text x="8.9345%" y="591.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.13%)</title><rect x="8.6845%" y="565" width="0.1277%" height="15" fill="rgb(235,168,5)"/><text x="8.9345%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="8.6845%" y="549" width="0.1277%" height="15" fill="rgb(221,155,16)"/><text x="8.9345%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.38%)</title><rect x="8.6845%" y="629" width="0.3831%" height="15" fill="rgb(215,215,53)"/><text x="8.9345%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.38%)</title><rect x="8.6845%" y="613" width="0.3831%" height="15" fill="rgb(223,4,10)"/><text x="8.9345%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.38%)</title><rect x="8.6845%" y="597" width="0.3831%" height="15" fill="rgb(234,103,6)"/><text x="8.9345%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.26%)</title><rect x="8.8123%" y="581" width="0.2554%" height="15" fill="rgb(227,97,0)"/><text x="9.0623%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.13%)</title><rect x="8.9400%" y="565" width="0.1277%" height="15" fill="rgb(234,150,53)"/><text x="9.1900%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.13%)</title><rect x="8.9400%" y="549" width="0.1277%" height="15" fill="rgb(228,201,54)"/><text x="9.1900%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="8.9400%" y="533" width="0.1277%" height="15" fill="rgb(222,22,37)"/><text x="9.1900%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="9.0677%" y="613" width="0.1277%" height="15" fill="rgb(237,53,32)"/><text x="9.3177%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="9.0677%" y="597" width="0.1277%" height="15" fill="rgb(233,25,53)"/><text x="9.3177%" y="607.50"></text></g><g><title>core::fmt::write (5 samples, 0.64%)</title><rect x="8.6845%" y="661" width="0.6386%" height="15" fill="rgb(210,40,34)"/><text x="8.9345%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.64%)</title><rect x="8.6845%" y="645" width="0.6386%" height="15" fill="rgb(241,220,44)"/><text x="8.9345%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.26%)</title><rect x="9.0677%" y="629" width="0.2554%" height="15" fill="rgb(235,28,35)"/><text x="9.3177%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="9.1954%" y="613" width="0.1277%" height="15" fill="rgb(210,56,17)"/><text x="9.4454%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="9.1954%" y="597" width="0.1277%" height="15" fill="rgb(224,130,29)"/><text x="9.4454%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="9.1954%" y="581" width="0.1277%" height="15" fill="rgb(235,212,8)"/><text x="9.4454%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="9.1954%" y="565" width="0.1277%" height="15" fill="rgb(223,33,50)"/><text x="9.4454%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="9.1954%" y="549" width="0.1277%" height="15" fill="rgb(219,149,13)"/><text x="9.4454%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="9.3231%" y="421" width="0.1277%" height="15" fill="rgb(250,156,29)"/><text x="9.5731%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="9.3231%" y="405" width="0.1277%" height="15" fill="rgb(216,193,19)"/><text x="9.5731%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="9.3231%" y="389" width="0.1277%" height="15" fill="rgb(216,135,14)"/><text x="9.5731%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="9.3231%" y="373" width="0.1277%" height="15" fill="rgb(241,47,5)"/><text x="9.5731%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.26%)</title><rect x="9.3231%" y="597" width="0.2554%" height="15" fill="rgb(233,42,35)"/><text x="9.5731%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.26%)</title><rect x="9.3231%" y="581" width="0.2554%" height="15" fill="rgb(231,13,6)"/><text x="9.5731%" y="591.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.26%)</title><rect x="9.3231%" y="565" width="0.2554%" height="15" fill="rgb(207,181,40)"/><text x="9.5731%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.26%)</title><rect x="9.3231%" y="549" width="0.2554%" height="15" fill="rgb(254,173,49)"/><text x="9.5731%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.26%)</title><rect x="9.3231%" y="533" width="0.2554%" height="15" fill="rgb(221,1,38)"/><text x="9.5731%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.26%)</title><rect x="9.3231%" y="517" width="0.2554%" height="15" fill="rgb(206,124,46)"/><text x="9.5731%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.26%)</title><rect x="9.3231%" y="501" width="0.2554%" height="15" fill="rgb(249,21,11)"/><text x="9.5731%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.26%)</title><rect x="9.3231%" y="485" width="0.2554%" height="15" fill="rgb(222,201,40)"/><text x="9.5731%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.26%)</title><rect x="9.3231%" y="469" width="0.2554%" height="15" fill="rgb(235,61,29)"/><text x="9.5731%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.26%)</title><rect x="9.3231%" y="453" width="0.2554%" height="15" fill="rgb(219,207,3)"/><text x="9.5731%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.26%)</title><rect x="9.3231%" y="437" width="0.2554%" height="15" fill="rgb(222,56,46)"/><text x="9.5731%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.13%)</title><rect x="9.4508%" y="421" width="0.1277%" height="15" fill="rgb(239,76,54)"/><text x="9.7008%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="9.4508%" y="405" width="0.1277%" height="15" fill="rgb(231,124,27)"/><text x="9.7008%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.13%)</title><rect x="9.4508%" y="389" width="0.1277%" height="15" fill="rgb(249,195,6)"/><text x="9.7008%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="9.4508%" y="373" width="0.1277%" height="15" fill="rgb(237,174,47)"/><text x="9.7008%" y="383.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.26%)</title><rect x="9.7063%" y="533" width="0.2554%" height="15" fill="rgb(206,201,31)"/><text x="9.9563%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.26%)</title><rect x="9.7063%" y="517" width="0.2554%" height="15" fill="rgb(231,57,52)"/><text x="9.9563%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="9.9617%" y="533" width="0.1277%" height="15" fill="rgb(248,177,22)"/><text x="10.2117%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="9.9617%" y="517" width="0.1277%" height="15" fill="rgb(215,211,37)"/><text x="10.2117%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="9.9617%" y="501" width="0.1277%" height="15" fill="rgb(241,128,51)"/><text x="10.2117%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="9.9617%" y="485" width="0.1277%" height="15" fill="rgb(227,165,31)"/><text x="10.2117%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="9.9617%" y="469" width="0.1277%" height="15" fill="rgb(228,167,24)"/><text x="10.2117%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="9.9617%" y="453" width="0.1277%" height="15" fill="rgb(228,143,12)"/><text x="10.2117%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="9.9617%" y="437" width="0.1277%" height="15" fill="rgb(249,149,8)"/><text x="10.2117%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="9.9617%" y="421" width="0.1277%" height="15" fill="rgb(243,35,44)"/><text x="10.2117%" y="431.50"></text></g><g><title>__rust_alloc (1 samples, 0.13%)</title><rect x="9.9617%" y="405" width="0.1277%" height="15" fill="rgb(246,89,9)"/><text x="10.2117%" y="415.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure (15 samples, 1.92%)</title><rect x="8.3014%" y="693" width="1.9157%" height="15" fill="rgb(233,213,13)"/><text x="8.5514%" y="703.50">d..</text></g><g><title>decor_mem::select::tablecolumn_matches_col (12 samples, 1.53%)</title><rect x="8.6845%" y="677" width="1.5326%" height="15" fill="rgb(233,141,41)"/><text x="8.9345%" y="687.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (7 samples, 0.89%)</title><rect x="9.3231%" y="661" width="0.8940%" height="15" fill="rgb(239,167,4)"/><text x="9.5731%" y="671.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.89%)</title><rect x="9.3231%" y="645" width="0.8940%" height="15" fill="rgb(209,217,16)"/><text x="9.5731%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.89%)</title><rect x="9.3231%" y="629" width="0.8940%" height="15" fill="rgb(219,88,35)"/><text x="9.5731%" y="639.50"></text></g><g><title>core::fmt::write (7 samples, 0.89%)</title><rect x="9.3231%" y="613" width="0.8940%" height="15" fill="rgb(220,193,23)"/><text x="9.5731%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.64%)</title><rect x="9.5785%" y="597" width="0.6386%" height="15" fill="rgb(230,90,52)"/><text x="9.8285%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.64%)</title><rect x="9.5785%" y="581" width="0.6386%" height="15" fill="rgb(252,106,19)"/><text x="9.8285%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.64%)</title><rect x="9.5785%" y="565" width="0.6386%" height="15" fill="rgb(206,74,20)"/><text x="9.8285%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.51%)</title><rect x="9.7063%" y="549" width="0.5109%" height="15" fill="rgb(230,138,44)"/><text x="9.9563%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.13%)</title><rect x="10.0894%" y="533" width="0.1277%" height="15" fill="rgb(235,182,43)"/><text x="10.3394%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.13%)</title><rect x="10.0894%" y="517" width="0.1277%" height="15" fill="rgb(242,16,51)"/><text x="10.3394%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.13%)</title><rect x="10.0894%" y="501" width="0.1277%" height="15" fill="rgb(248,9,4)"/><text x="10.3394%" y="511.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="10.0894%" y="485" width="0.1277%" height="15" fill="rgb(210,31,22)"/><text x="10.3394%" y="495.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (41 samples, 5.24%)</title><rect x="5.2363%" y="757" width="5.2363%" height="15" fill="rgb(239,54,39)"/><text x="5.4863%" y="767.50">decor_..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (41 samples, 5.24%)</title><rect x="5.2363%" y="741" width="5.2363%" height="15" fill="rgb(230,99,41)"/><text x="5.4863%" y="751.50">decor_..</text></g><g><title>decor_mem::select::get_query_results (24 samples, 3.07%)</title><rect x="7.4074%" y="725" width="3.0651%" height="15" fill="rgb(253,106,12)"/><text x="7.6574%" y="735.50">dec..</text></g><g><title>decor_mem::select::get_setexpr_results (24 samples, 3.07%)</title><rect x="7.4074%" y="709" width="3.0651%" height="15" fill="rgb(213,46,41)"/><text x="7.6574%" y="719.50">dec..</text></g><g><title>decor_mem::select::tablecolumn_matches_col (2 samples, 0.26%)</title><rect x="10.2171%" y="693" width="0.2554%" height="15" fill="rgb(215,133,35)"/><text x="10.4671%" y="703.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (2 samples, 0.26%)</title><rect x="10.2171%" y="677" width="0.2554%" height="15" fill="rgb(213,28,5)"/><text x="10.4671%" y="687.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.26%)</title><rect x="10.2171%" y="661" width="0.2554%" height="15" fill="rgb(215,77,49)"/><text x="10.4671%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.26%)</title><rect x="10.2171%" y="645" width="0.2554%" height="15" fill="rgb(248,100,22)"/><text x="10.4671%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.26%)</title><rect x="10.2171%" y="629" width="0.2554%" height="15" fill="rgb(208,67,9)"/><text x="10.4671%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.26%)</title><rect x="10.2171%" y="613" width="0.2554%" height="15" fill="rgb(219,133,21)"/><text x="10.4671%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.26%)</title><rect x="10.2171%" y="597" width="0.2554%" height="15" fill="rgb(246,46,29)"/><text x="10.4671%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.26%)</title><rect x="10.2171%" y="581" width="0.2554%" height="15" fill="rgb(246,185,52)"/><text x="10.4671%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.26%)</title><rect x="10.2171%" y="565" width="0.2554%" height="15" fill="rgb(252,136,11)"/><text x="10.4671%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.26%)</title><rect x="10.2171%" y="549" width="0.2554%" height="15" fill="rgb(219,138,53)"/><text x="10.4671%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.26%)</title><rect x="10.2171%" y="533" width="0.2554%" height="15" fill="rgb(211,51,23)"/><text x="10.4671%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.26%)</title><rect x="10.2171%" y="517" width="0.2554%" height="15" fill="rgb(247,221,28)"/><text x="10.4671%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="10.7280%" y="661" width="0.1277%" height="15" fill="rgb(251,222,45)"/><text x="10.9780%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.38%)</title><rect x="10.6003%" y="677" width="0.3831%" height="15" fill="rgb(217,162,53)"/><text x="10.8503%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="10.8557%" y="661" width="0.1277%" height="15" fill="rgb(229,93,14)"/><text x="11.1057%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="10.8557%" y="645" width="0.1277%" height="15" fill="rgb(209,67,49)"/><text x="11.1057%" y="655.50"></text></g><g><title>__rust_alloc (1 samples, 0.13%)</title><rect x="10.9834%" y="629" width="0.1277%" height="15" fill="rgb(213,87,29)"/><text x="11.2334%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.77%)</title><rect x="10.6003%" y="693" width="0.7663%" height="15" fill="rgb(205,151,52)"/><text x="10.8503%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.38%)</title><rect x="10.9834%" y="677" width="0.3831%" height="15" fill="rgb(253,215,39)"/><text x="11.2334%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.38%)</title><rect x="10.9834%" y="661" width="0.3831%" height="15" fill="rgb(221,220,41)"/><text x="11.2334%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.38%)</title><rect x="10.9834%" y="645" width="0.3831%" height="15" fill="rgb(218,133,21)"/><text x="11.2334%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.26%)</title><rect x="11.1111%" y="629" width="0.2554%" height="15" fill="rgb(221,193,43)"/><text x="11.3611%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="11.1111%" y="613" width="0.2554%" height="15" fill="rgb(240,128,52)"/><text x="11.3611%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="11.1111%" y="597" width="0.2554%" height="15" fill="rgb(253,114,12)"/><text x="11.3611%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.26%)</title><rect x="11.1111%" y="581" width="0.2554%" height="15" fill="rgb(215,223,47)"/><text x="11.3611%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.26%)</title><rect x="11.1111%" y="565" width="0.2554%" height="15" fill="rgb(248,225,23)"/><text x="11.3611%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.26%)</title><rect x="11.1111%" y="549" width="0.2554%" height="15" fill="rgb(250,108,0)"/><text x="11.3611%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.26%)</title><rect x="11.1111%" y="533" width="0.2554%" height="15" fill="rgb(228,208,7)"/><text x="11.3611%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.26%)</title><rect x="11.1111%" y="517" width="0.2554%" height="15" fill="rgb(244,45,10)"/><text x="11.3611%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.26%)</title><rect x="11.1111%" y="501" width="0.2554%" height="15" fill="rgb(207,125,25)"/><text x="11.3611%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.26%)</title><rect x="11.1111%" y="485" width="0.2554%" height="15" fill="rgb(210,195,18)"/><text x="11.3611%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.26%)</title><rect x="11.1111%" y="469" width="0.2554%" height="15" fill="rgb(249,80,12)"/><text x="11.3611%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.26%)</title><rect x="11.1111%" y="453" width="0.2554%" height="15" fill="rgb(221,65,9)"/><text x="11.3611%" y="463.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.26%)</title><rect x="11.1111%" y="437" width="0.2554%" height="15" fill="rgb(235,49,36)"/><text x="11.3611%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="11.2388%" y="421" width="0.1277%" height="15" fill="rgb(225,32,20)"/><text x="11.4888%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (9 samples, 1.15%)</title><rect x="10.4725%" y="741" width="1.1494%" height="15" fill="rgb(215,141,46)"/><text x="10.7225%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (9 samples, 1.15%)</title><rect x="10.4725%" y="725" width="1.1494%" height="15" fill="rgb(250,160,47)"/><text x="10.7225%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (9 samples, 1.15%)</title><rect x="10.4725%" y="709" width="1.1494%" height="15" fill="rgb(216,222,40)"/><text x="10.7225%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="11.3665%" y="693" width="0.2554%" height="15" fill="rgb(234,217,39)"/><text x="11.6165%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="11.3665%" y="677" width="0.2554%" height="15" fill="rgb(207,178,40)"/><text x="11.6165%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.26%)</title><rect x="11.3665%" y="661" width="0.2554%" height="15" fill="rgb(221,136,13)"/><text x="11.6165%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="11.4943%" y="645" width="0.1277%" height="15" fill="rgb(249,199,10)"/><text x="11.7443%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.26%)</title><rect x="11.6220%" y="677" width="0.2554%" height="15" fill="rgb(249,222,13)"/><text x="11.8720%" y="687.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.13%)</title><rect x="11.8774%" y="661" width="0.1277%" height="15" fill="rgb(244,185,38)"/><text x="12.1274%" y="671.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.13%)</title><rect x="11.8774%" y="645" width="0.1277%" height="15" fill="rgb(236,202,9)"/><text x="12.1274%" y="655.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.13%)</title><rect x="11.8774%" y="629" width="0.1277%" height="15" fill="rgb(250,229,37)"/><text x="12.1274%" y="639.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (54 samples, 6.90%)</title><rect x="5.2363%" y="773" width="6.8966%" height="15" fill="rgb(206,174,23)"/><text x="5.4863%" y="783.50">&lt;decor_me..</text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (13 samples, 1.66%)</title><rect x="10.4725%" y="757" width="1.6603%" height="15" fill="rgb(211,33,43)"/><text x="10.7225%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.51%)</title><rect x="11.6220%" y="741" width="0.5109%" height="15" fill="rgb(245,58,50)"/><text x="11.8720%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.51%)</title><rect x="11.6220%" y="725" width="0.5109%" height="15" fill="rgb(244,68,36)"/><text x="11.8720%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (4 samples, 0.51%)</title><rect x="11.6220%" y="709" width="0.5109%" height="15" fill="rgb(232,229,15)"/><text x="11.8720%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (4 samples, 0.51%)</title><rect x="11.6220%" y="693" width="0.5109%" height="15" fill="rgb(254,30,23)"/><text x="11.8720%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.26%)</title><rect x="11.8774%" y="677" width="0.2554%" height="15" fill="rgb(235,160,14)"/><text x="12.1274%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.13%)</title><rect x="12.0051%" y="661" width="0.1277%" height="15" fill="rgb(212,155,44)"/><text x="12.2551%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.13%)</title><rect x="12.0051%" y="645" width="0.1277%" height="15" fill="rgb(226,2,50)"/><text x="12.2551%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.13%)</title><rect x="12.0051%" y="629" width="0.1277%" height="15" fill="rgb(234,177,6)"/><text x="12.2551%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="12.0051%" y="613" width="0.1277%" height="15" fill="rgb(217,24,9)"/><text x="12.2551%" y="623.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="12.1328%" y="773" width="0.1277%" height="15" fill="rgb(220,13,46)"/><text x="12.3828%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="12.2605%" y="773" width="0.1277%" height="15" fill="rgb(239,221,27)"/><text x="12.5105%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="12.3883%" y="773" width="0.1277%" height="15" fill="rgb(222,198,25)"/><text x="12.6383%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="12.3883%" y="757" width="0.1277%" height="15" fill="rgb(211,99,13)"/><text x="12.6383%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="12.3883%" y="741" width="0.1277%" height="15" fill="rgb(232,111,31)"/><text x="12.6383%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="12.3883%" y="725" width="0.1277%" height="15" fill="rgb(245,82,37)"/><text x="12.6383%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="12.3883%" y="709" width="0.1277%" height="15" fill="rgb(227,149,46)"/><text x="12.6383%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="12.3883%" y="693" width="0.1277%" height="15" fill="rgb(218,36,50)"/><text x="12.6383%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="12.3883%" y="677" width="0.1277%" height="15" fill="rgb(226,80,48)"/><text x="12.6383%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="12.3883%" y="661" width="0.1277%" height="15" fill="rgb(238,224,15)"/><text x="12.6383%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="12.3883%" y="645" width="0.1277%" height="15" fill="rgb(241,136,10)"/><text x="12.6383%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="12.5160%" y="773" width="0.1277%" height="15" fill="rgb(208,32,45)"/><text x="12.7660%" y="783.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.13%)</title><rect x="12.6437%" y="773" width="0.1277%" height="15" fill="rgb(207,135,9)"/><text x="12.8937%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="12.7714%" y="757" width="0.1277%" height="15" fill="rgb(206,86,44)"/><text x="13.0214%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="12.7714%" y="741" width="0.1277%" height="15" fill="rgb(245,177,15)"/><text x="13.0214%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="12.7714%" y="725" width="0.1277%" height="15" fill="rgb(206,64,50)"/><text x="13.0214%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="12.7714%" y="709" width="0.1277%" height="15" fill="rgb(234,36,40)"/><text x="13.0214%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="12.7714%" y="693" width="0.1277%" height="15" fill="rgb(213,64,8)"/><text x="13.0214%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="12.7714%" y="677" width="0.1277%" height="15" fill="rgb(210,75,36)"/><text x="13.0214%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="12.7714%" y="661" width="0.1277%" height="15" fill="rgb(229,88,21)"/><text x="13.0214%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="12.7714%" y="645" width="0.1277%" height="15" fill="rgb(252,204,47)"/><text x="13.0214%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="12.7714%" y="629" width="0.1277%" height="15" fill="rgb(208,77,27)"/><text x="13.0214%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="12.7714%" y="613" width="0.1277%" height="15" fill="rgb(221,76,26)"/><text x="13.0214%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="12.7714%" y="597" width="0.1277%" height="15" fill="rgb(225,139,18)"/><text x="13.0214%" y="607.50"></text></g><g><title>[lobsters-microbenchmarks] (2 samples, 0.26%)</title><rect x="12.7714%" y="773" width="0.2554%" height="15" fill="rgb(230,137,11)"/><text x="13.0214%" y="783.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.13%)</title><rect x="12.8991%" y="757" width="0.1277%" height="15" fill="rgb(212,28,1)"/><text x="13.1491%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="13.0268%" y="773" width="0.1277%" height="15" fill="rgb(248,164,17)"/><text x="13.2768%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.26%)</title><rect x="13.1545%" y="773" width="0.2554%" height="15" fill="rgb(222,171,42)"/><text x="13.4045%" y="783.50"></text></g><g><title>__libc_recv (1 samples, 0.13%)</title><rect x="13.4100%" y="773" width="0.1277%" height="15" fill="rgb(243,84,45)"/><text x="13.6600%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="13.4100%" y="757" width="0.1277%" height="15" fill="rgb(252,49,23)"/><text x="13.6600%" y="767.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.13%)</title><rect x="13.5377%" y="325" width="0.1277%" height="15" fill="rgb(215,19,7)"/><text x="13.7877%" y="335.50"></text></g><g><title>release_pages (1 samples, 0.13%)</title><rect x="13.5377%" y="309" width="0.1277%" height="15" fill="rgb(238,81,41)"/><text x="13.7877%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.26%)</title><rect x="13.5377%" y="613" width="0.2554%" height="15" fill="rgb(210,199,37)"/><text x="13.7877%" y="623.50"></text></g><g><title>hwloc_topology_destroy (2 samples, 0.26%)</title><rect x="13.5377%" y="597" width="0.2554%" height="15" fill="rgb(244,192,49)"/><text x="13.7877%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.26%)</title><rect x="13.5377%" y="581" width="0.2554%" height="15" fill="rgb(226,211,11)"/><text x="13.7877%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.26%)</title><rect x="13.5377%" y="565" width="0.2554%" height="15" fill="rgb(236,162,54)"/><text x="13.7877%" y="575.50"></text></g><g><title>dlclose (2 samples, 0.26%)</title><rect x="13.5377%" y="549" width="0.2554%" height="15" fill="rgb(220,229,9)"/><text x="13.7877%" y="559.50"></text></g><g><title>[libdl-2.31.so] (2 samples, 0.26%)</title><rect x="13.5377%" y="533" width="0.2554%" height="15" fill="rgb(250,87,22)"/><text x="13.7877%" y="543.50"></text></g><g><title>__GI__dl_catch_error (2 samples, 0.26%)</title><rect x="13.5377%" y="517" width="0.2554%" height="15" fill="rgb(239,43,17)"/><text x="13.7877%" y="527.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.26%)</title><rect x="13.5377%" y="501" width="0.2554%" height="15" fill="rgb(231,177,25)"/><text x="13.7877%" y="511.50"></text></g><g><title>_dl_close (2 samples, 0.26%)</title><rect x="13.5377%" y="485" width="0.2554%" height="15" fill="rgb(219,179,1)"/><text x="13.7877%" y="495.50"></text></g><g><title>_dl_close_worker (2 samples, 0.26%)</title><rect x="13.5377%" y="469" width="0.2554%" height="15" fill="rgb(238,219,53)"/><text x="13.7877%" y="479.50"></text></g><g><title>_dl_unmap (2 samples, 0.26%)</title><rect x="13.5377%" y="453" width="0.2554%" height="15" fill="rgb(232,167,36)"/><text x="13.7877%" y="463.50"></text></g><g><title>munmap (2 samples, 0.26%)</title><rect x="13.5377%" y="437" width="0.2554%" height="15" fill="rgb(244,19,51)"/><text x="13.7877%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.26%)</title><rect x="13.5377%" y="421" width="0.2554%" height="15" fill="rgb(224,6,22)"/><text x="13.7877%" y="431.50"></text></g><g><title>do_syscall_64 (2 samples, 0.26%)</title><rect x="13.5377%" y="405" width="0.2554%" height="15" fill="rgb(224,145,5)"/><text x="13.7877%" y="415.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.26%)</title><rect x="13.5377%" y="389" width="0.2554%" height="15" fill="rgb(234,130,49)"/><text x="13.7877%" y="399.50"></text></g><g><title>__vm_munmap (2 samples, 0.26%)</title><rect x="13.5377%" y="373" width="0.2554%" height="15" fill="rgb(254,6,2)"/><text x="13.7877%" y="383.50"></text></g><g><title>__do_munmap (2 samples, 0.26%)</title><rect x="13.5377%" y="357" width="0.2554%" height="15" fill="rgb(208,96,46)"/><text x="13.7877%" y="367.50"></text></g><g><title>unmap_region (2 samples, 0.26%)</title><rect x="13.5377%" y="341" width="0.2554%" height="15" fill="rgb(239,3,39)"/><text x="13.7877%" y="351.50"></text></g><g><title>unmap_vmas (1 samples, 0.13%)</title><rect x="13.6654%" y="325" width="0.1277%" height="15" fill="rgb(233,210,1)"/><text x="13.9154%" y="335.50"></text></g><g><title>unmap_page_range (1 samples, 0.13%)</title><rect x="13.6654%" y="309" width="0.1277%" height="15" fill="rgb(244,137,37)"/><text x="13.9154%" y="319.50"></text></g><g><title>__libc_start_main (5 samples, 0.64%)</title><rect x="13.5377%" y="773" width="0.6386%" height="15" fill="rgb(240,136,2)"/><text x="13.7877%" y="783.50"></text></g><g><title>main (5 samples, 0.64%)</title><rect x="13.5377%" y="757" width="0.6386%" height="15" fill="rgb(239,18,37)"/><text x="13.7877%" y="767.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.64%)</title><rect x="13.5377%" y="741" width="0.6386%" height="15" fill="rgb(218,185,22)"/><text x="13.7877%" y="751.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.64%)</title><rect x="13.5377%" y="725" width="0.6386%" height="15" fill="rgb(225,218,4)"/><text x="13.7877%" y="735.50"></text></g><g><title>std::panicking::try (5 samples, 0.64%)</title><rect x="13.5377%" y="709" width="0.6386%" height="15" fill="rgb(230,182,32)"/><text x="13.7877%" y="719.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.64%)</title><rect x="13.5377%" y="693" width="0.6386%" height="15" fill="rgb(242,56,43)"/><text x="13.7877%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.64%)</title><rect x="13.5377%" y="677" width="0.6386%" height="15" fill="rgb(233,99,24)"/><text x="13.7877%" y="687.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (5 samples, 0.64%)</title><rect x="13.5377%" y="661" width="0.6386%" height="15" fill="rgb(234,209,42)"/><text x="13.7877%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.64%)</title><rect x="13.5377%" y="645" width="0.6386%" height="15" fill="rgb(227,7,12)"/><text x="13.7877%" y="655.50"></text></g><g><title>lobsters_microbenchmarks::main (5 samples, 0.64%)</title><rect x="13.5377%" y="629" width="0.6386%" height="15" fill="rgb(245,203,43)"/><text x="13.7877%" y="639.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.38%)</title><rect x="13.7931%" y="613" width="0.3831%" height="15" fill="rgb(238,205,33)"/><text x="14.0431%" y="623.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.38%)</title><rect x="13.7931%" y="597" width="0.3831%" height="15" fill="rgb(231,56,7)"/><text x="14.0431%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="13.7931%" y="581" width="0.3831%" height="15" fill="rgb(244,186,29)"/><text x="14.0431%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="13.7931%" y="565" width="0.3831%" height="15" fill="rgb(234,111,31)"/><text x="14.0431%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="13.7931%" y="549" width="0.3831%" height="15" fill="rgb(241,149,10)"/><text x="14.0431%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="13.7931%" y="533" width="0.3831%" height="15" fill="rgb(249,206,44)"/><text x="14.0431%" y="543.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="13.7931%" y="517" width="0.3831%" height="15" fill="rgb(251,153,30)"/><text x="14.0431%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.13%)</title><rect x="14.1762%" y="773" width="0.1277%" height="15" fill="rgb(239,152,38)"/><text x="14.4262%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.13%)</title><rect x="14.1762%" y="757" width="0.1277%" height="15" fill="rgb(249,139,47)"/><text x="14.4262%" y="767.50"></text></g><g><title>__rdl_realloc (1 samples, 0.13%)</title><rect x="14.3040%" y="773" width="0.1277%" height="15" fill="rgb(244,64,35)"/><text x="14.5540%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.13%)</title><rect x="14.3040%" y="757" width="0.1277%" height="15" fill="rgb(216,46,15)"/><text x="14.5540%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="14.4317%" y="773" width="0.1277%" height="15" fill="rgb(250,74,19)"/><text x="14.6817%" y="783.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.13%)</title><rect x="14.5594%" y="773" width="0.1277%" height="15" fill="rgb(249,42,33)"/><text x="14.8094%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.13%)</title><rect x="14.5594%" y="757" width="0.1277%" height="15" fill="rgb(242,149,17)"/><text x="14.8094%" y="767.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.13%)</title><rect x="14.6871%" y="773" width="0.1277%" height="15" fill="rgb(244,29,21)"/><text x="14.9371%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.13%)</title><rect x="14.8148%" y="773" width="0.1277%" height="15" fill="rgb(220,130,37)"/><text x="15.0648%" y="783.50"></text></g><g><title>core::fmt::write (2 samples, 0.26%)</title><rect x="14.9425%" y="773" width="0.2554%" height="15" fill="rgb(211,67,2)"/><text x="15.1925%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.13%)</title><rect x="15.1980%" y="773" width="0.1277%" height="15" fill="rgb(235,68,52)"/><text x="15.4480%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.13%)</title><rect x="15.1980%" y="757" width="0.1277%" height="15" fill="rgb(246,142,3)"/><text x="15.4480%" y="767.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (1 samples, 0.13%)</title><rect x="15.1980%" y="741" width="0.1277%" height="15" fill="rgb(241,25,7)"/><text x="15.4480%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.13%)</title><rect x="15.1980%" y="725" width="0.1277%" height="15" fill="rgb(242,119,39)"/><text x="15.4480%" y="735.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.13%)</title><rect x="15.1980%" y="709" width="0.1277%" height="15" fill="rgb(241,98,45)"/><text x="15.4480%" y="719.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (1 samples, 0.13%)</title><rect x="15.1980%" y="693" width="0.1277%" height="15" fill="rgb(254,28,30)"/><text x="15.4480%" y="703.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (1 samples, 0.13%)</title><rect x="15.1980%" y="677" width="0.1277%" height="15" fill="rgb(241,142,54)"/><text x="15.4480%" y="687.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (1 samples, 0.13%)</title><rect x="15.1980%" y="661" width="0.1277%" height="15" fill="rgb(222,85,15)"/><text x="15.4480%" y="671.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.13%)</title><rect x="15.1980%" y="645" width="0.1277%" height="15" fill="rgb(210,85,47)"/><text x="15.4480%" y="655.50"></text></g><g><title>&lt;i64 as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.13%)</title><rect x="15.1980%" y="629" width="0.1277%" height="15" fill="rgb(224,206,25)"/><text x="15.4480%" y="639.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.13%)</title><rect x="15.1980%" y="613" width="0.1277%" height="15" fill="rgb(243,201,19)"/><text x="15.4480%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.13%)</title><rect x="15.1980%" y="597" width="0.1277%" height="15" fill="rgb(236,59,4)"/><text x="15.4480%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="15.1980%" y="581" width="0.1277%" height="15" fill="rgb(254,179,45)"/><text x="15.4480%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.13%)</title><rect x="15.1980%" y="565" width="0.1277%" height="15" fill="rgb(226,14,10)"/><text x="15.4480%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.13%)</title><rect x="15.1980%" y="549" width="0.1277%" height="15" fill="rgb(244,27,41)"/><text x="15.4480%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="15.1980%" y="533" width="0.1277%" height="15" fill="rgb(235,35,32)"/><text x="15.4480%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="15.1980%" y="517" width="0.1277%" height="15" fill="rgb(218,68,31)"/><text x="15.4480%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.13%)</title><rect x="15.1980%" y="501" width="0.1277%" height="15" fill="rgb(207,120,37)"/><text x="15.4480%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="15.1980%" y="485" width="0.1277%" height="15" fill="rgb(227,98,0)"/><text x="15.4480%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="15.1980%" y="469" width="0.1277%" height="15" fill="rgb(207,7,3)"/><text x="15.4480%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="15.1980%" y="453" width="0.1277%" height="15" fill="rgb(206,98,19)"/><text x="15.4480%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.13%)</title><rect x="15.1980%" y="437" width="0.1277%" height="15" fill="rgb(217,5,26)"/><text x="15.4480%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="15.1980%" y="421" width="0.1277%" height="15" fill="rgb(235,190,38)"/><text x="15.4480%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.13%)</title><rect x="15.1980%" y="405" width="0.1277%" height="15" fill="rgb(247,86,24)"/><text x="15.4480%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="15.1980%" y="389" width="0.1277%" height="15" fill="rgb(205,101,16)"/><text x="15.4480%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="15.1980%" y="373" width="0.1277%" height="15" fill="rgb(246,168,33)"/><text x="15.4480%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="15.1980%" y="357" width="0.1277%" height="15" fill="rgb(231,114,1)"/><text x="15.4480%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="15.1980%" y="341" width="0.1277%" height="15" fill="rgb(207,184,53)"/><text x="15.4480%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="15.1980%" y="325" width="0.1277%" height="15" fill="rgb(224,95,51)"/><text x="15.4480%" y="335.50"></text></g><g><title>__rust_alloc (1 samples, 0.13%)</title><rect x="15.1980%" y="309" width="0.1277%" height="15" fill="rgb(212,188,45)"/><text x="15.4480%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="15.3257%" y="773" width="0.1277%" height="15" fill="rgb(223,154,38)"/><text x="15.5757%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="15.4534%" y="709" width="0.1277%" height="15" fill="rgb(251,22,52)"/><text x="15.7034%" y="719.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="15.4534%" y="693" width="0.1277%" height="15" fill="rgb(229,209,22)"/><text x="15.7034%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="15.4534%" y="677" width="0.1277%" height="15" fill="rgb(234,138,34)"/><text x="15.7034%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="15.4534%" y="661" width="0.1277%" height="15" fill="rgb(212,95,11)"/><text x="15.7034%" y="671.50"></text></g><g><title>sysmalloc (1 samples, 0.13%)</title><rect x="15.4534%" y="645" width="0.1277%" height="15" fill="rgb(240,179,47)"/><text x="15.7034%" y="655.50"></text></g><g><title>__GI___mprotect (1 samples, 0.13%)</title><rect x="15.4534%" y="629" width="0.1277%" height="15" fill="rgb(240,163,11)"/><text x="15.7034%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="15.4534%" y="613" width="0.1277%" height="15" fill="rgb(236,37,12)"/><text x="15.7034%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="15.4534%" y="597" width="0.1277%" height="15" fill="rgb(232,164,16)"/><text x="15.7034%" y="607.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.13%)</title><rect x="15.4534%" y="581" width="0.1277%" height="15" fill="rgb(244,205,15)"/><text x="15.7034%" y="591.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.13%)</title><rect x="15.4534%" y="565" width="0.1277%" height="15" fill="rgb(223,117,47)"/><text x="15.7034%" y="575.50"></text></g><g><title>mprotect_fixup (1 samples, 0.13%)</title><rect x="15.4534%" y="549" width="0.1277%" height="15" fill="rgb(244,107,35)"/><text x="15.7034%" y="559.50"></text></g><g><title>perf_event_mmap (1 samples, 0.13%)</title><rect x="15.4534%" y="533" width="0.1277%" height="15" fill="rgb(205,140,8)"/><text x="15.7034%" y="543.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.13%)</title><rect x="15.4534%" y="517" width="0.1277%" height="15" fill="rgb(228,84,46)"/><text x="15.7034%" y="527.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.13%)</title><rect x="15.4534%" y="501" width="0.1277%" height="15" fill="rgb(254,188,9)"/><text x="15.7034%" y="511.50"></text></g><g><title>decor_mem::Shim::create_schema (2 samples, 0.26%)</title><rect x="15.4534%" y="773" width="0.2554%" height="15" fill="rgb(206,112,54)"/><text x="15.7034%" y="783.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.26%)</title><rect x="15.4534%" y="757" width="0.2554%" height="15" fill="rgb(216,84,49)"/><text x="15.7034%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.26%)</title><rect x="15.4534%" y="741" width="0.2554%" height="15" fill="rgb(214,194,35)"/><text x="15.7034%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.26%)</title><rect x="15.4534%" y="725" width="0.2554%" height="15" fill="rgb(249,28,3)"/><text x="15.7034%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.13%)</title><rect x="15.5811%" y="709" width="0.1277%" height="15" fill="rgb(222,56,52)"/><text x="15.8311%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.13%)</title><rect x="15.5811%" y="693" width="0.1277%" height="15" fill="rgb(245,217,50)"/><text x="15.8311%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="15.5811%" y="677" width="0.1277%" height="15" fill="rgb(213,201,24)"/><text x="15.8311%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="15.5811%" y="661" width="0.1277%" height="15" fill="rgb(248,116,28)"/><text x="15.8311%" y="671.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.13%)</title><rect x="15.7088%" y="741" width="0.1277%" height="15" fill="rgb(219,72,43)"/><text x="15.9588%" y="751.50"></text></g><g><title>decor_mem::Shim::create_schema (1 samples, 0.13%)</title><rect x="15.7088%" y="725" width="0.1277%" height="15" fill="rgb(209,138,14)"/><text x="15.9588%" y="735.50"></text></g><g><title>decor_mem::ghosts_map::create_ghosts_table (1 samples, 0.13%)</title><rect x="15.7088%" y="709" width="0.1277%" height="15" fill="rgb(222,18,33)"/><text x="15.9588%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.13%)</title><rect x="15.7088%" y="693" width="0.1277%" height="15" fill="rgb(213,199,7)"/><text x="15.9588%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.13%)</title><rect x="15.7088%" y="677" width="0.1277%" height="15" fill="rgb(250,110,10)"/><text x="15.9588%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.13%)</title><rect x="15.7088%" y="661" width="0.1277%" height="15" fill="rgb(248,123,6)"/><text x="15.9588%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.13%)</title><rect x="15.7088%" y="645" width="0.1277%" height="15" fill="rgb(206,91,31)"/><text x="15.9588%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="15.7088%" y="629" width="0.1277%" height="15" fill="rgb(211,154,13)"/><text x="15.9588%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="15.7088%" y="613" width="0.1277%" height="15" fill="rgb(225,148,7)"/><text x="15.9588%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="15.7088%" y="597" width="0.1277%" height="15" fill="rgb(220,160,43)"/><text x="15.9588%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.13%)</title><rect x="15.7088%" y="581" width="0.1277%" height="15" fill="rgb(213,52,39)"/><text x="15.9588%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.13%)</title><rect x="15.7088%" y="565" width="0.1277%" height="15" fill="rgb(243,137,7)"/><text x="15.9588%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.13%)</title><rect x="15.7088%" y="549" width="0.1277%" height="15" fill="rgb(230,79,13)"/><text x="15.9588%" y="559.50"></text></g><g><title>__libc_recv (1 samples, 0.13%)</title><rect x="15.7088%" y="533" width="0.1277%" height="15" fill="rgb(247,105,23)"/><text x="15.9588%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="15.7088%" y="517" width="0.1277%" height="15" fill="rgb(223,179,41)"/><text x="15.9588%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="15.7088%" y="501" width="0.1277%" height="15" fill="rgb(218,9,34)"/><text x="15.9588%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.13%)</title><rect x="15.7088%" y="485" width="0.1277%" height="15" fill="rgb(222,106,8)"/><text x="15.9588%" y="495.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.13%)</title><rect x="15.7088%" y="469" width="0.1277%" height="15" fill="rgb(211,220,0)"/><text x="15.9588%" y="479.50"></text></g><g><title>inet_recvmsg (1 samples, 0.13%)</title><rect x="15.7088%" y="453" width="0.1277%" height="15" fill="rgb(229,52,16)"/><text x="15.9588%" y="463.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.13%)</title><rect x="15.7088%" y="437" width="0.1277%" height="15" fill="rgb(212,155,18)"/><text x="15.9588%" y="447.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.13%)</title><rect x="15.7088%" y="421" width="0.1277%" height="15" fill="rgb(242,21,14)"/><text x="15.9588%" y="431.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.13%)</title><rect x="15.7088%" y="405" width="0.1277%" height="15" fill="rgb(222,19,48)"/><text x="15.9588%" y="415.50"></text></g><g><title>ip_output (1 samples, 0.13%)</title><rect x="15.7088%" y="389" width="0.1277%" height="15" fill="rgb(232,45,27)"/><text x="15.9588%" y="399.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.13%)</title><rect x="15.7088%" y="373" width="0.1277%" height="15" fill="rgb(249,103,42)"/><text x="15.9588%" y="383.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="15.7088%" y="357" width="0.1277%" height="15" fill="rgb(246,81,33)"/><text x="15.9588%" y="367.50"></text></g><g><title>do_softirq (1 samples, 0.13%)</title><rect x="15.7088%" y="341" width="0.1277%" height="15" fill="rgb(252,33,42)"/><text x="15.9588%" y="351.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.13%)</title><rect x="15.7088%" y="325" width="0.1277%" height="15" fill="rgb(209,212,41)"/><text x="15.9588%" y="335.50"></text></g><g><title>__do_softirq (1 samples, 0.13%)</title><rect x="15.7088%" y="309" width="0.1277%" height="15" fill="rgb(207,154,6)"/><text x="15.9588%" y="319.50"></text></g><g><title>net_rx_action (1 samples, 0.13%)</title><rect x="15.7088%" y="293" width="0.1277%" height="15" fill="rgb(223,64,47)"/><text x="15.9588%" y="303.50"></text></g><g><title>process_backlog (1 samples, 0.13%)</title><rect x="15.7088%" y="277" width="0.1277%" height="15" fill="rgb(211,161,38)"/><text x="15.9588%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.13%)</title><rect x="15.7088%" y="261" width="0.1277%" height="15" fill="rgb(219,138,40)"/><text x="15.9588%" y="271.50"></text></g><g><title>ip_rcv (1 samples, 0.13%)</title><rect x="15.7088%" y="245" width="0.1277%" height="15" fill="rgb(241,228,46)"/><text x="15.9588%" y="255.50"></text></g><g><title>ip_local_deliver (1 samples, 0.13%)</title><rect x="15.7088%" y="229" width="0.1277%" height="15" fill="rgb(223,209,38)"/><text x="15.9588%" y="239.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.13%)</title><rect x="15.7088%" y="213" width="0.1277%" height="15" fill="rgb(236,164,45)"/><text x="15.9588%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.13%)</title><rect x="15.7088%" y="197" width="0.1277%" height="15" fill="rgb(231,15,5)"/><text x="15.9588%" y="207.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.13%)</title><rect x="15.7088%" y="181" width="0.1277%" height="15" fill="rgb(252,35,15)"/><text x="15.9588%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.13%)</title><rect x="15.7088%" y="165" width="0.1277%" height="15" fill="rgb(248,181,18)"/><text x="15.9588%" y="175.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.13%)</title><rect x="15.7088%" y="149" width="0.1277%" height="15" fill="rgb(233,39,42)"/><text x="15.9588%" y="159.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.13%)</title><rect x="15.8365%" y="725" width="0.1277%" height="15" fill="rgb(238,110,33)"/><text x="16.0865%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="15.8365%" y="709" width="0.1277%" height="15" fill="rgb(233,195,10)"/><text x="16.0865%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="15.9642%" y="693" width="0.1277%" height="15" fill="rgb(254,105,3)"/><text x="16.2142%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="15.9642%" y="677" width="0.1277%" height="15" fill="rgb(221,225,9)"/><text x="16.2142%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="15.9642%" y="661" width="0.1277%" height="15" fill="rgb(224,227,45)"/><text x="16.2142%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="15.9642%" y="645" width="0.1277%" height="15" fill="rgb(229,198,43)"/><text x="16.2142%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="15.9642%" y="629" width="0.1277%" height="15" fill="rgb(206,209,35)"/><text x="16.2142%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="15.9642%" y="613" width="0.1277%" height="15" fill="rgb(245,195,53)"/><text x="16.2142%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="15.9642%" y="597" width="0.1277%" height="15" fill="rgb(240,92,26)"/><text x="16.2142%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="15.9642%" y="581" width="0.1277%" height="15" fill="rgb(207,40,23)"/><text x="16.2142%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="15.9642%" y="565" width="0.1277%" height="15" fill="rgb(223,111,35)"/><text x="16.2142%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="15.9642%" y="549" width="0.1277%" height="15" fill="rgb(229,147,28)"/><text x="16.2142%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="15.9642%" y="533" width="0.1277%" height="15" fill="rgb(211,29,28)"/><text x="16.2142%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="15.9642%" y="517" width="0.1277%" height="15" fill="rgb(228,72,33)"/><text x="16.2142%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="15.9642%" y="501" width="0.1277%" height="15" fill="rgb(205,214,31)"/><text x="16.2142%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="15.9642%" y="485" width="0.1277%" height="15" fill="rgb(224,111,15)"/><text x="16.2142%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.26%)</title><rect x="16.0920%" y="693" width="0.2554%" height="15" fill="rgb(253,21,26)"/><text x="16.3420%" y="703.50"></text></g><g><title>malloc_consolidate (1 samples, 0.13%)</title><rect x="16.2197%" y="677" width="0.1277%" height="15" fill="rgb(245,139,43)"/><text x="16.4697%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="16.3474%" y="693" width="0.1277%" height="15" fill="rgb(252,170,7)"/><text x="16.5974%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="16.3474%" y="677" width="0.1277%" height="15" fill="rgb(231,118,14)"/><text x="16.5974%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="16.3474%" y="661" width="0.1277%" height="15" fill="rgb(238,83,0)"/><text x="16.5974%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.13%)</title><rect x="16.3474%" y="645" width="0.1277%" height="15" fill="rgb(221,39,39)"/><text x="16.5974%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="16.8582%" y="629" width="0.1277%" height="15" fill="rgb(222,119,46)"/><text x="17.1082%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.38%)</title><rect x="16.7305%" y="677" width="0.3831%" height="15" fill="rgb(222,165,49)"/><text x="16.9805%" y="687.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.38%)</title><rect x="16.7305%" y="661" width="0.3831%" height="15" fill="rgb(219,113,52)"/><text x="16.9805%" y="671.50"></text></g><g><title>_int_realloc (3 samples, 0.38%)</title><rect x="16.7305%" y="645" width="0.3831%" height="15" fill="rgb(214,7,15)"/><text x="16.9805%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="16.9860%" y="629" width="0.1277%" height="15" fill="rgb(235,32,4)"/><text x="17.2360%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.13%)</title><rect x="16.9860%" y="613" width="0.1277%" height="15" fill="rgb(238,90,54)"/><text x="17.2360%" y="623.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (13 samples, 1.66%)</title><rect x="15.7088%" y="773" width="1.6603%" height="15" fill="rgb(213,208,19)"/><text x="15.9588%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (13 samples, 1.66%)</title><rect x="15.7088%" y="757" width="1.6603%" height="15" fill="rgb(233,156,4)"/><text x="15.9588%" y="767.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (12 samples, 1.53%)</title><rect x="15.8365%" y="741" width="1.5326%" height="15" fill="rgb(207,194,5)"/><text x="16.0865%" y="751.50"></text></g><g><title>decor_mem::stats::get_qtype (11 samples, 1.40%)</title><rect x="15.9642%" y="725" width="1.4049%" height="15" fill="rgb(206,111,30)"/><text x="16.2142%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (11 samples, 1.40%)</title><rect x="15.9642%" y="709" width="1.4049%" height="15" fill="rgb(243,70,54)"/><text x="16.2142%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (7 samples, 0.89%)</title><rect x="16.4751%" y="693" width="0.8940%" height="15" fill="rgb(242,28,8)"/><text x="16.7251%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.26%)</title><rect x="17.1137%" y="677" width="0.2554%" height="15" fill="rgb(219,106,18)"/><text x="17.3637%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.13%)</title><rect x="17.3691%" y="725" width="0.1277%" height="15" fill="rgb(244,222,10)"/><text x="17.6191%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="17.3691%" y="709" width="0.1277%" height="15" fill="rgb(236,179,52)"/><text x="17.6191%" y="719.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.26%)</title><rect x="17.3691%" y="773" width="0.2554%" height="15" fill="rgb(213,23,39)"/><text x="17.6191%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.26%)</title><rect x="17.3691%" y="757" width="0.2554%" height="15" fill="rgb(238,48,10)"/><text x="17.6191%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.26%)</title><rect x="17.3691%" y="741" width="0.2554%" height="15" fill="rgb(251,196,23)"/><text x="17.6191%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_with_options (1 samples, 0.13%)</title><rect x="17.4968%" y="725" width="0.1277%" height="15" fill="rgb(250,152,24)"/><text x="17.7468%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.13%)</title><rect x="17.4968%" y="709" width="0.1277%" height="15" fill="rgb(209,150,17)"/><text x="17.7468%" y="719.50"></text></g><g><title>fgets (1 samples, 0.13%)</title><rect x="17.6245%" y="773" width="0.1277%" height="15" fill="rgb(234,202,34)"/><text x="17.8745%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.13%)</title><rect x="17.7522%" y="773" width="0.1277%" height="15" fill="rgb(253,148,53)"/><text x="18.0022%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.13%)</title><rect x="17.8799%" y="773" width="0.1277%" height="15" fill="rgb(218,129,16)"/><text x="18.1299%" y="783.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.13%)</title><rect x="18.0077%" y="757" width="0.1277%" height="15" fill="rgb(216,85,19)"/><text x="18.2577%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="18.0077%" y="741" width="0.1277%" height="15" fill="rgb(235,228,7)"/><text x="18.2577%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="18.0077%" y="725" width="0.1277%" height="15" fill="rgb(245,175,0)"/><text x="18.2577%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="18.0077%" y="709" width="0.1277%" height="15" fill="rgb(208,168,36)"/><text x="18.2577%" y="719.50"></text></g><g><title>dlopen (1 samples, 0.13%)</title><rect x="18.0077%" y="693" width="0.1277%" height="15" fill="rgb(246,171,24)"/><text x="18.2577%" y="703.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="18.0077%" y="677" width="0.1277%" height="15" fill="rgb(215,142,24)"/><text x="18.2577%" y="687.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.13%)</title><rect x="18.0077%" y="661" width="0.1277%" height="15" fill="rgb(250,187,7)"/><text x="18.2577%" y="671.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="18.0077%" y="645" width="0.1277%" height="15" fill="rgb(228,66,33)"/><text x="18.2577%" y="655.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="18.0077%" y="629" width="0.1277%" height="15" fill="rgb(234,215,21)"/><text x="18.2577%" y="639.50"></text></g><g><title>_dl_open (1 samples, 0.13%)</title><rect x="18.0077%" y="613" width="0.1277%" height="15" fill="rgb(222,191,20)"/><text x="18.2577%" y="623.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="18.0077%" y="597" width="0.1277%" height="15" fill="rgb(245,79,54)"/><text x="18.2577%" y="607.50"></text></g><g><title>dl_open_worker (1 samples, 0.13%)</title><rect x="18.0077%" y="581" width="0.1277%" height="15" fill="rgb(240,10,37)"/><text x="18.2577%" y="591.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.13%)</title><rect x="18.0077%" y="565" width="0.1277%" height="15" fill="rgb(214,192,32)"/><text x="18.2577%" y="575.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.13%)</title><rect x="18.0077%" y="549" width="0.1277%" height="15" fill="rgb(209,36,54)"/><text x="18.2577%" y="559.50"></text></g><g><title>do_lookup_x (1 samples, 0.13%)</title><rect x="18.0077%" y="533" width="0.1277%" height="15" fill="rgb(220,10,11)"/><text x="18.2577%" y="543.50"></text></g><g><title>&lt;(T1,T2) as mysql_common::row::convert::FromRow&gt;::from_row_opt (5 samples, 0.64%)</title><rect x="18.2631%" y="725" width="0.6386%" height="15" fill="rgb(221,106,17)"/><text x="18.5131%" y="735.50"></text></g><g><title>&lt;mysql_common::value::convert::ParseIr&lt;u64&gt; as mysql_common::value::convert::ConvIr&lt;u64&gt;&gt;::new (1 samples, 0.13%)</title><rect x="18.7739%" y="709" width="0.1277%" height="15" fill="rgb(251,142,44)"/><text x="19.0239%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.13%)</title><rect x="18.9017%" y="677" width="0.1277%" height="15" fill="rgb(238,13,15)"/><text x="19.1517%" y="687.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.13%)</title><rect x="18.9017%" y="661" width="0.1277%" height="15" fill="rgb(208,107,27)"/><text x="19.1517%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="19.4125%" y="581" width="0.1277%" height="15" fill="rgb(205,136,37)"/><text x="19.6625%" y="591.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.64%)</title><rect x="19.0294%" y="661" width="0.6386%" height="15" fill="rgb(250,205,27)"/><text x="19.2794%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.64%)</title><rect x="19.0294%" y="645" width="0.6386%" height="15" fill="rgb(210,80,43)"/><text x="19.2794%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.51%)</title><rect x="19.1571%" y="629" width="0.5109%" height="15" fill="rgb(247,160,36)"/><text x="19.4071%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.51%)</title><rect x="19.1571%" y="613" width="0.5109%" height="15" fill="rgb(234,13,49)"/><text x="19.4071%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.38%)</title><rect x="19.2848%" y="597" width="0.3831%" height="15" fill="rgb(234,122,0)"/><text x="19.5348%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="19.5402%" y="581" width="0.1277%" height="15" fill="rgb(207,146,38)"/><text x="19.7902%" y="591.50"></text></g><g><title>mysql::conn::Conn::read_packet (6 samples, 0.77%)</title><rect x="19.0294%" y="677" width="0.7663%" height="15" fill="rgb(207,177,25)"/><text x="19.2794%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="19.6679%" y="661" width="0.1277%" height="15" fill="rgb(211,178,42)"/><text x="19.9179%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="20.0511%" y="661" width="0.1277%" height="15" fill="rgb(230,69,54)"/><text x="20.3011%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="20.0511%" y="645" width="0.1277%" height="15" fill="rgb(214,135,41)"/><text x="20.3011%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (11 samples, 1.40%)</title><rect x="18.9017%" y="709" width="1.4049%" height="15" fill="rgb(237,67,25)"/><text x="19.1517%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (11 samples, 1.40%)</title><rect x="18.9017%" y="693" width="1.4049%" height="15" fill="rgb(222,189,50)"/><text x="19.1517%" y="703.50"></text></g><g><title>mysql_common::value::read_text_values (4 samples, 0.51%)</title><rect x="19.7957%" y="677" width="0.5109%" height="15" fill="rgb(245,148,34)"/><text x="20.0457%" y="687.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.13%)</title><rect x="20.1788%" y="661" width="0.1277%" height="15" fill="rgb(222,29,6)"/><text x="20.4288%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="20.1788%" y="645" width="0.1277%" height="15" fill="rgb(221,189,43)"/><text x="20.4288%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.13%)</title><rect x="20.3065%" y="709" width="0.1277%" height="15" fill="rgb(207,36,27)"/><text x="20.5565%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="20.3065%" y="693" width="0.1277%" height="15" fill="rgb(217,90,24)"/><text x="20.5565%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 2.43%)</title><rect x="18.1354%" y="741" width="2.4266%" height="15" fill="rgb(224,66,35)"/><text x="18.3854%" y="751.50">&lt;c..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.66%)</title><rect x="18.9017%" y="725" width="1.6603%" height="15" fill="rgb(221,13,50)"/><text x="19.1517%" y="735.50"></text></g><g><title>mysql_common::row::new_row (1 samples, 0.13%)</title><rect x="20.4342%" y="709" width="0.1277%" height="15" fill="rgb(236,68,49)"/><text x="20.6842%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.13%)</title><rect x="20.4342%" y="693" width="0.1277%" height="15" fill="rgb(229,146,28)"/><text x="20.6842%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="20.9451%" y="693" width="0.1277%" height="15" fill="rgb(225,31,38)"/><text x="21.1951%" y="703.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.13%)</title><rect x="21.2005%" y="565" width="0.1277%" height="15" fill="rgb(250,208,3)"/><text x="21.4505%" y="575.50"></text></g><g><title>import_single_range (1 samples, 0.13%)</title><rect x="21.3282%" y="501" width="0.1277%" height="15" fill="rgb(246,54,23)"/><text x="21.5782%" y="511.50"></text></g><g><title>__kfree_skb (1 samples, 0.13%)</title><rect x="21.4559%" y="469" width="0.1277%" height="15" fill="rgb(243,76,11)"/><text x="21.7059%" y="479.50"></text></g><g><title>skb_release_head_state (1 samples, 0.13%)</title><rect x="21.4559%" y="453" width="0.1277%" height="15" fill="rgb(245,21,50)"/><text x="21.7059%" y="463.50"></text></g><g><title>dst_release (1 samples, 0.13%)</title><rect x="21.4559%" y="437" width="0.1277%" height="15" fill="rgb(228,9,43)"/><text x="21.7059%" y="447.50"></text></g><g><title>kfree_skbmem (1 samples, 0.13%)</title><rect x="21.5837%" y="469" width="0.1277%" height="15" fill="rgb(208,100,47)"/><text x="21.8337%" y="479.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="21.7114%" y="453" width="0.1277%" height="15" fill="rgb(232,26,8)"/><text x="21.9614%" y="463.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="21.7114%" y="437" width="0.1277%" height="15" fill="rgb(216,166,38)"/><text x="21.9614%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="21.8391%" y="453" width="0.1277%" height="15" fill="rgb(251,202,51)"/><text x="22.0891%" y="463.50"></text></g><g><title>remove_wait_queue (1 samples, 0.13%)</title><rect x="21.9668%" y="453" width="0.1277%" height="15" fill="rgb(254,216,34)"/><text x="22.2168%" y="463.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="21.9668%" y="437" width="0.1277%" height="15" fill="rgb(251,32,27)"/><text x="22.2168%" y="447.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.26%)</title><rect x="22.3499%" y="389" width="0.2554%" height="15" fill="rgb(208,127,28)"/><text x="22.5999%" y="399.50"></text></g><g><title>update_curr (1 samples, 0.13%)</title><rect x="22.6054%" y="357" width="0.1277%" height="15" fill="rgb(224,137,22)"/><text x="22.8554%" y="367.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.26%)</title><rect x="22.6054%" y="389" width="0.2554%" height="15" fill="rgb(254,70,32)"/><text x="22.8554%" y="399.50"></text></g><g><title>dequeue_entity (2 samples, 0.26%)</title><rect x="22.6054%" y="373" width="0.2554%" height="15" fill="rgb(229,75,37)"/><text x="22.8554%" y="383.50"></text></g><g><title>update_load_avg (1 samples, 0.13%)</title><rect x="22.7331%" y="357" width="0.1277%" height="15" fill="rgb(252,64,23)"/><text x="22.9831%" y="367.50"></text></g><g><title>finish_task_switch (3 samples, 0.38%)</title><rect x="22.8608%" y="389" width="0.3831%" height="15" fill="rgb(232,162,48)"/><text x="23.1108%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.26%)</title><rect x="22.9885%" y="373" width="0.2554%" height="15" fill="rgb(246,160,12)"/><text x="23.2385%" y="383.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.26%)</title><rect x="22.9885%" y="357" width="0.2554%" height="15" fill="rgb(247,166,0)"/><text x="23.2385%" y="367.50"></text></g><g><title>native_write_msr (2 samples, 0.26%)</title><rect x="22.9885%" y="341" width="0.2554%" height="15" fill="rgb(249,219,21)"/><text x="23.2385%" y="351.50"></text></g><g><title>psi_task_change (1 samples, 0.13%)</title><rect x="23.2439%" y="389" width="0.1277%" height="15" fill="rgb(205,209,3)"/><text x="23.4939%" y="399.50"></text></g><g><title>psi_group_change (1 samples, 0.13%)</title><rect x="23.2439%" y="373" width="0.1277%" height="15" fill="rgb(243,44,1)"/><text x="23.4939%" y="383.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.13%)</title><rect x="23.3716%" y="389" width="0.1277%" height="15" fill="rgb(206,159,16)"/><text x="23.6216%" y="399.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="23.4994%" y="373" width="0.1277%" height="15" fill="rgb(244,77,30)"/><text x="23.7494%" y="383.50"></text></g><g><title>sched_clock (1 samples, 0.13%)</title><rect x="23.4994%" y="357" width="0.1277%" height="15" fill="rgb(218,69,12)"/><text x="23.7494%" y="367.50"></text></g><g><title>native_sched_clock (1 samples, 0.13%)</title><rect x="23.4994%" y="341" width="0.1277%" height="15" fill="rgb(212,87,7)"/><text x="23.7494%" y="351.50"></text></g><g><title>sk_wait_data (17 samples, 2.17%)</title><rect x="21.7114%" y="469" width="2.1711%" height="15" fill="rgb(245,114,25)"/><text x="21.9614%" y="479.50">s..</text></g><g><title>wait_woken (14 samples, 1.79%)</title><rect x="22.0945%" y="453" width="1.7880%" height="15" fill="rgb(210,61,42)"/><text x="22.3445%" y="463.50">w..</text></g><g><title>schedule_timeout (13 samples, 1.66%)</title><rect x="22.2222%" y="437" width="1.6603%" height="15" fill="rgb(211,52,33)"/><text x="22.4722%" y="447.50"></text></g><g><title>schedule (13 samples, 1.66%)</title><rect x="22.2222%" y="421" width="1.6603%" height="15" fill="rgb(234,58,33)"/><text x="22.4722%" y="431.50"></text></g><g><title>__schedule (13 samples, 1.66%)</title><rect x="22.2222%" y="405" width="1.6603%" height="15" fill="rgb(220,115,36)"/><text x="22.4722%" y="415.50"></text></g><g><title>update_rq_clock (3 samples, 0.38%)</title><rect x="23.4994%" y="389" width="0.3831%" height="15" fill="rgb(243,153,54)"/><text x="23.7494%" y="399.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.26%)</title><rect x="23.6271%" y="373" width="0.2554%" height="15" fill="rgb(251,47,18)"/><text x="23.8771%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="23.8825%" y="389" width="0.1277%" height="15" fill="rgb(242,102,42)"/><text x="24.1325%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="23.8825%" y="373" width="0.1277%" height="15" fill="rgb(234,31,38)"/><text x="24.1325%" y="383.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="23.8825%" y="357" width="0.1277%" height="15" fill="rgb(221,117,51)"/><text x="24.1325%" y="367.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.13%)</title><rect x="23.8825%" y="341" width="0.1277%" height="15" fill="rgb(212,20,18)"/><text x="24.1325%" y="351.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.13%)</title><rect x="23.8825%" y="325" width="0.1277%" height="15" fill="rgb(245,133,36)"/><text x="24.1325%" y="335.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="23.8825%" y="309" width="0.1277%" height="15" fill="rgb(212,6,19)"/><text x="24.1325%" y="319.50"></text></g><g><title>prep_new_page (1 samples, 0.13%)</title><rect x="23.8825%" y="293" width="0.1277%" height="15" fill="rgb(218,1,36)"/><text x="24.1325%" y="303.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.13%)</title><rect x="23.8825%" y="277" width="0.1277%" height="15" fill="rgb(246,84,54)"/><text x="24.1325%" y="287.50"></text></g><g><title>clear_page_erms (1 samples, 0.13%)</title><rect x="23.8825%" y="261" width="0.1277%" height="15" fill="rgb(242,110,6)"/><text x="24.1325%" y="271.50"></text></g><g><title>_copy_to_iter (2 samples, 0.26%)</title><rect x="23.8825%" y="437" width="0.2554%" height="15" fill="rgb(214,47,5)"/><text x="24.1325%" y="447.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 0.26%)</title><rect x="23.8825%" y="421" width="0.2554%" height="15" fill="rgb(218,159,25)"/><text x="24.1325%" y="431.50"></text></g><g><title>page_fault (2 samples, 0.26%)</title><rect x="23.8825%" y="405" width="0.2554%" height="15" fill="rgb(215,211,28)"/><text x="24.1325%" y="415.50"></text></g><g><title>error_entry (1 samples, 0.13%)</title><rect x="24.0102%" y="389" width="0.1277%" height="15" fill="rgb(238,59,32)"/><text x="24.2602%" y="399.50"></text></g><g><title>do_syscall_64 (23 samples, 2.94%)</title><rect x="21.3282%" y="549" width="2.9374%" height="15" fill="rgb(226,82,3)"/><text x="21.5782%" y="559.50">do..</text></g><g><title>__x64_sys_recvfrom (23 samples, 2.94%)</title><rect x="21.3282%" y="533" width="2.9374%" height="15" fill="rgb(240,164,32)"/><text x="21.5782%" y="543.50">__..</text></g><g><title>__sys_recvfrom (23 samples, 2.94%)</title><rect x="21.3282%" y="517" width="2.9374%" height="15" fill="rgb(232,46,7)"/><text x="21.5782%" y="527.50">__..</text></g><g><title>inet_recvmsg (22 samples, 2.81%)</title><rect x="21.4559%" y="501" width="2.8097%" height="15" fill="rgb(229,129,53)"/><text x="21.7059%" y="511.50">in..</text></g><g><title>tcp_recvmsg (22 samples, 2.81%)</title><rect x="21.4559%" y="485" width="2.8097%" height="15" fill="rgb(234,188,29)"/><text x="21.7059%" y="495.50">tc..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.38%)</title><rect x="23.8825%" y="469" width="0.3831%" height="15" fill="rgb(246,141,4)"/><text x="24.1325%" y="479.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.38%)</title><rect x="23.8825%" y="453" width="0.3831%" height="15" fill="rgb(229,23,39)"/><text x="24.1325%" y="463.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.13%)</title><rect x="24.1379%" y="437" width="0.1277%" height="15" fill="rgb(206,12,3)"/><text x="24.3879%" y="447.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="24.1379%" y="421" width="0.1277%" height="15" fill="rgb(252,226,20)"/><text x="24.3879%" y="431.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="24.1379%" y="405" width="0.1277%" height="15" fill="rgb(216,123,35)"/><text x="24.3879%" y="415.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 3.58%)</title><rect x="21.2005%" y="661" width="3.5760%" height="15" fill="rgb(212,68,40)"/><text x="21.4505%" y="671.50">&lt;std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 3.58%)</title><rect x="21.2005%" y="645" width="3.5760%" height="15" fill="rgb(254,125,32)"/><text x="21.4505%" y="655.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 3.58%)</title><rect x="21.2005%" y="629" width="3.5760%" height="15" fill="rgb(253,97,22)"/><text x="21.4505%" y="639.50">std:..</text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 3.58%)</title><rect x="21.2005%" y="613" width="3.5760%" height="15" fill="rgb(241,101,14)"/><text x="21.4505%" y="623.50">std:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 3.58%)</title><rect x="21.2005%" y="597" width="3.5760%" height="15" fill="rgb(238,103,29)"/><text x="21.4505%" y="607.50">std:..</text></g><g><title>__libc_recv (28 samples, 3.58%)</title><rect x="21.2005%" y="581" width="3.5760%" height="15" fill="rgb(233,195,47)"/><text x="21.4505%" y="591.50">__li..</text></g><g><title>entry_SYSCALL_64 (27 samples, 3.45%)</title><rect x="21.3282%" y="565" width="3.4483%" height="15" fill="rgb(246,218,30)"/><text x="21.5782%" y="575.50">ent..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.51%)</title><rect x="24.2656%" y="549" width="0.5109%" height="15" fill="rgb(219,145,47)"/><text x="24.5156%" y="559.50"></text></g><g><title>switch_fpu_return (2 samples, 0.26%)</title><rect x="24.5211%" y="533" width="0.2554%" height="15" fill="rgb(243,12,26)"/><text x="24.7711%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 3.70%)</title><rect x="21.2005%" y="677" width="3.7037%" height="15" fill="rgb(214,87,16)"/><text x="21.4505%" y="687.50">&lt;mys..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.13%)</title><rect x="24.7765%" y="661" width="0.1277%" height="15" fill="rgb(208,99,42)"/><text x="25.0265%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.13%)</title><rect x="24.7765%" y="645" width="0.1277%" height="15" fill="rgb(253,99,2)"/><text x="25.0265%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (35 samples, 4.47%)</title><rect x="20.5619%" y="709" width="4.4700%" height="15" fill="rgb(220,168,23)"/><text x="20.8119%" y="719.50">mysql..</text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 3.96%)</title><rect x="21.0728%" y="693" width="3.9591%" height="15" fill="rgb(242,38,24)"/><text x="21.3228%" y="703.50">mysq..</text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="24.9042%" y="677" width="0.1277%" height="15" fill="rgb(225,182,9)"/><text x="25.1542%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.13%)</title><rect x="25.0319%" y="629" width="0.1277%" height="15" fill="rgb(243,178,37)"/><text x="25.2819%" y="639.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.13%)</title><rect x="25.2874%" y="549" width="0.1277%" height="15" fill="rgb(232,139,19)"/><text x="25.5374%" y="559.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.13%)</title><rect x="26.0536%" y="453" width="0.1277%" height="15" fill="rgb(225,201,24)"/><text x="26.3036%" y="463.50"></text></g><g><title>__ip_finish_output (1 samples, 0.13%)</title><rect x="26.1814%" y="437" width="0.1277%" height="15" fill="rgb(221,47,46)"/><text x="26.4314%" y="447.50"></text></g><g><title>ipv4_mtu (1 samples, 0.13%)</title><rect x="26.1814%" y="421" width="0.1277%" height="15" fill="rgb(249,23,13)"/><text x="26.4314%" y="431.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="26.3091%" y="405" width="0.1277%" height="15" fill="rgb(219,9,5)"/><text x="26.5591%" y="415.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.26%)</title><rect x="26.4368%" y="405" width="0.2554%" height="15" fill="rgb(254,171,16)"/><text x="26.6868%" y="415.50"></text></g><g><title>loopback_xmit (2 samples, 0.26%)</title><rect x="26.4368%" y="389" width="0.2554%" height="15" fill="rgb(230,171,20)"/><text x="26.6868%" y="399.50"></text></g><g><title>tcp_wfree (2 samples, 0.26%)</title><rect x="26.4368%" y="373" width="0.2554%" height="15" fill="rgb(210,71,41)"/><text x="26.6868%" y="383.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.64%)</title><rect x="26.3091%" y="421" width="0.6386%" height="15" fill="rgb(206,173,20)"/><text x="26.5591%" y="431.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.26%)</title><rect x="26.6922%" y="405" width="0.2554%" height="15" fill="rgb(233,88,34)"/><text x="26.9422%" y="415.50"></text></g><g><title>netif_skb_features (1 samples, 0.13%)</title><rect x="26.8199%" y="389" width="0.1277%" height="15" fill="rgb(223,209,46)"/><text x="27.0699%" y="399.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.13%)</title><rect x="27.2031%" y="357" width="0.1277%" height="15" fill="rgb(250,43,18)"/><text x="27.4531%" y="367.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="27.2031%" y="341" width="0.1277%" height="15" fill="rgb(208,13,10)"/><text x="27.4531%" y="351.50"></text></g><g><title>sched_clock (1 samples, 0.13%)</title><rect x="27.2031%" y="325" width="0.1277%" height="15" fill="rgb(212,200,36)"/><text x="27.4531%" y="335.50"></text></g><g><title>native_sched_clock (1 samples, 0.13%)</title><rect x="27.2031%" y="309" width="0.1277%" height="15" fill="rgb(225,90,30)"/><text x="27.4531%" y="319.50"></text></g><g><title>__kfree_skb_flush (2 samples, 0.26%)</title><rect x="27.3308%" y="341" width="0.2554%" height="15" fill="rgb(236,182,39)"/><text x="27.5808%" y="351.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="27.8416%" y="309" width="0.1277%" height="15" fill="rgb(212,144,35)"/><text x="28.0916%" y="319.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.13%)</title><rect x="27.9693%" y="261" width="0.1277%" height="15" fill="rgb(228,63,44)"/><text x="28.2193%" y="271.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="28.3525%" y="213" width="0.1277%" height="15" fill="rgb(228,109,6)"/><text x="28.6025%" y="223.50"></text></g><g><title>sk_filter_trim_cap (3 samples, 0.38%)</title><rect x="28.2248%" y="229" width="0.3831%" height="15" fill="rgb(238,117,24)"/><text x="28.4748%" y="239.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.13%)</title><rect x="28.4802%" y="213" width="0.1277%" height="15" fill="rgb(242,26,26)"/><text x="28.7302%" y="223.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="28.7356%" y="197" width="0.1277%" height="15" fill="rgb(221,92,48)"/><text x="28.9856%" y="207.50"></text></g><g><title>__mod_timer (1 samples, 0.13%)</title><rect x="28.7356%" y="181" width="0.1277%" height="15" fill="rgb(209,209,32)"/><text x="28.9856%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="29.3742%" y="133" width="0.1277%" height="15" fill="rgb(221,70,22)"/><text x="29.6242%" y="143.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="29.3742%" y="117" width="0.1277%" height="15" fill="rgb(248,145,5)"/><text x="29.6242%" y="127.50"></text></g><g><title>enqueue_task (1 samples, 0.13%)</title><rect x="29.5019%" y="133" width="0.1277%" height="15" fill="rgb(226,116,26)"/><text x="29.7519%" y="143.50"></text></g><g><title>psi_task_change (1 samples, 0.13%)</title><rect x="29.5019%" y="117" width="0.1277%" height="15" fill="rgb(244,5,17)"/><text x="29.7519%" y="127.50"></text></g><g><title>psi_group_change (1 samples, 0.13%)</title><rect x="29.5019%" y="101" width="0.1277%" height="15" fill="rgb(252,159,33)"/><text x="29.7519%" y="111.50"></text></g><g><title>__wake_up_common (7 samples, 0.89%)</title><rect x="28.8633%" y="165" width="0.8940%" height="15" fill="rgb(206,71,0)"/><text x="29.1133%" y="175.50"></text></g><g><title>try_to_wake_up (7 samples, 0.89%)</title><rect x="28.8633%" y="149" width="0.8940%" height="15" fill="rgb(233,118,54)"/><text x="29.1133%" y="159.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.13%)</title><rect x="29.6296%" y="133" width="0.1277%" height="15" fill="rgb(234,83,48)"/><text x="29.8796%" y="143.50"></text></g><g><title>enqueue_entity (1 samples, 0.13%)</title><rect x="29.6296%" y="117" width="0.1277%" height="15" fill="rgb(228,3,54)"/><text x="29.8796%" y="127.50"></text></g><g><title>sock_def_readable (9 samples, 1.15%)</title><rect x="28.8633%" y="197" width="1.1494%" height="15" fill="rgb(226,155,13)"/><text x="29.1133%" y="207.50"></text></g><g><title>__wake_up_common_lock (9 samples, 1.15%)</title><rect x="28.8633%" y="181" width="1.1494%" height="15" fill="rgb(241,28,37)"/><text x="29.1133%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.26%)</title><rect x="29.7573%" y="165" width="0.2554%" height="15" fill="rgb(233,93,10)"/><text x="30.0073%" y="175.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="29.8851%" y="149" width="0.1277%" height="15" fill="rgb(225,113,19)"/><text x="30.1351%" y="159.50"></text></g><g><title>tcp_ack (3 samples, 0.38%)</title><rect x="30.0128%" y="197" width="0.3831%" height="15" fill="rgb(241,2,18)"/><text x="30.2628%" y="207.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.13%)</title><rect x="30.2682%" y="181" width="0.1277%" height="15" fill="rgb(228,207,21)"/><text x="30.5182%" y="191.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.13%)</title><rect x="30.3959%" y="197" width="0.1277%" height="15" fill="rgb(213,211,35)"/><text x="30.6459%" y="207.50"></text></g><g><title>__tcp_transmit_skb (38 samples, 4.85%)</title><rect x="25.7982%" y="485" width="4.8531%" height="15" fill="rgb(209,83,10)"/><text x="26.0482%" y="495.50">__tcp_..</text></g><g><title>__ip_queue_xmit (37 samples, 4.73%)</title><rect x="25.9259%" y="469" width="4.7254%" height="15" fill="rgb(209,164,1)"/><text x="26.1759%" y="479.50">__ip_q..</text></g><g><title>ip_output (35 samples, 4.47%)</title><rect x="26.1814%" y="453" width="4.4700%" height="15" fill="rgb(213,184,43)"/><text x="26.4314%" y="463.50">ip_ou..</text></g><g><title>ip_finish_output2 (34 samples, 4.34%)</title><rect x="26.3091%" y="437" width="4.3423%" height="15" fill="rgb(231,61,34)"/><text x="26.5591%" y="447.50">ip_fi..</text></g><g><title>__local_bh_enable_ip (29 samples, 3.70%)</title><rect x="26.9476%" y="421" width="3.7037%" height="15" fill="rgb(235,75,3)"/><text x="27.1976%" y="431.50">__lo..</text></g><g><title>do_softirq (29 samples, 3.70%)</title><rect x="26.9476%" y="405" width="3.7037%" height="15" fill="rgb(220,106,47)"/><text x="27.1976%" y="415.50">do_s..</text></g><g><title>do_softirq_own_stack (28 samples, 3.58%)</title><rect x="27.0754%" y="389" width="3.5760%" height="15" fill="rgb(210,196,33)"/><text x="27.3254%" y="399.50">do_s..</text></g><g><title>__do_softirq (28 samples, 3.58%)</title><rect x="27.0754%" y="373" width="3.5760%" height="15" fill="rgb(229,154,42)"/><text x="27.3254%" y="383.50">__do..</text></g><g><title>net_rx_action (26 samples, 3.32%)</title><rect x="27.3308%" y="357" width="3.3206%" height="15" fill="rgb(228,114,26)"/><text x="27.5808%" y="367.50">net..</text></g><g><title>process_backlog (24 samples, 3.07%)</title><rect x="27.5862%" y="341" width="3.0651%" height="15" fill="rgb(208,144,1)"/><text x="27.8362%" y="351.50">pro..</text></g><g><title>__netif_receive_skb_one_core (22 samples, 2.81%)</title><rect x="27.8416%" y="325" width="2.8097%" height="15" fill="rgb(239,112,37)"/><text x="28.0916%" y="335.50">__..</text></g><g><title>ip_rcv (21 samples, 2.68%)</title><rect x="27.9693%" y="309" width="2.6820%" height="15" fill="rgb(210,96,50)"/><text x="28.2193%" y="319.50">ip..</text></g><g><title>ip_local_deliver (21 samples, 2.68%)</title><rect x="27.9693%" y="293" width="2.6820%" height="15" fill="rgb(222,178,2)"/><text x="28.2193%" y="303.50">ip..</text></g><g><title>ip_local_deliver_finish (21 samples, 2.68%)</title><rect x="27.9693%" y="277" width="2.6820%" height="15" fill="rgb(226,74,18)"/><text x="28.2193%" y="287.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (20 samples, 2.55%)</title><rect x="28.0971%" y="261" width="2.5543%" height="15" fill="rgb(225,67,54)"/><text x="28.3471%" y="271.50">ip..</text></g><g><title>tcp_v4_rcv (20 samples, 2.55%)</title><rect x="28.0971%" y="245" width="2.5543%" height="15" fill="rgb(251,92,32)"/><text x="28.3471%" y="255.50">tc..</text></g><g><title>tcp_v4_do_rcv (16 samples, 2.04%)</title><rect x="28.6079%" y="229" width="2.0434%" height="15" fill="rgb(228,149,22)"/><text x="28.8579%" y="239.50">t..</text></g><g><title>tcp_rcv_established (16 samples, 2.04%)</title><rect x="28.6079%" y="213" width="2.0434%" height="15" fill="rgb(243,54,13)"/><text x="28.8579%" y="223.50">t..</text></g><g><title>tcp_mstamp_refresh (1 samples, 0.13%)</title><rect x="30.5236%" y="197" width="0.1277%" height="15" fill="rgb(243,180,28)"/><text x="30.7736%" y="207.50"></text></g><g><title>ktime_get (1 samples, 0.13%)</title><rect x="30.5236%" y="181" width="0.1277%" height="15" fill="rgb(208,167,24)"/><text x="30.7736%" y="191.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.13%)</title><rect x="30.6513%" y="485" width="0.1277%" height="15" fill="rgb(245,73,45)"/><text x="30.9013%" y="495.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.13%)</title><rect x="30.7791%" y="485" width="0.1277%" height="15" fill="rgb(237,203,48)"/><text x="31.0291%" y="495.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.13%)</title><rect x="30.7791%" y="469" width="0.1277%" height="15" fill="rgb(211,197,16)"/><text x="31.0291%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (41 samples, 5.24%)</title><rect x="25.7982%" y="517" width="5.2363%" height="15" fill="rgb(243,99,51)"/><text x="26.0482%" y="527.50">__tcp_..</text></g><g><title>tcp_write_xmit (41 samples, 5.24%)</title><rect x="25.7982%" y="501" width="5.2363%" height="15" fill="rgb(215,123,29)"/><text x="26.0482%" y="511.50">tcp_wr..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.13%)</title><rect x="30.9068%" y="485" width="0.1277%" height="15" fill="rgb(239,186,37)"/><text x="31.1568%" y="495.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="30.9068%" y="469" width="0.1277%" height="15" fill="rgb(252,136,39)"/><text x="31.1568%" y="479.50"></text></g><g><title>__mod_timer (1 samples, 0.13%)</title><rect x="30.9068%" y="453" width="0.1277%" height="15" fill="rgb(223,213,32)"/><text x="31.1568%" y="463.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.26%)</title><rect x="31.0345%" y="517" width="0.2554%" height="15" fill="rgb(233,115,5)"/><text x="31.2845%" y="527.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.26%)</title><rect x="31.0345%" y="501" width="0.2554%" height="15" fill="rgb(207,226,44)"/><text x="31.2845%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="31.2899%" y="485" width="0.1277%" height="15" fill="rgb(208,126,0)"/><text x="31.5399%" y="495.50"></text></g><g><title>kmalloc_slab (1 samples, 0.13%)</title><rect x="31.2899%" y="469" width="0.1277%" height="15" fill="rgb(244,66,21)"/><text x="31.5399%" y="479.50"></text></g><g><title>__ksize (4 samples, 0.51%)</title><rect x="31.4176%" y="485" width="0.5109%" height="15" fill="rgb(222,97,12)"/><text x="31.6676%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.77%)</title><rect x="31.2899%" y="517" width="0.7663%" height="15" fill="rgb(219,213,19)"/><text x="31.5399%" y="527.50"></text></g><g><title>__alloc_skb (6 samples, 0.77%)</title><rect x="31.2899%" y="501" width="0.7663%" height="15" fill="rgb(252,169,30)"/><text x="31.5399%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="31.9285%" y="485" width="0.1277%" height="15" fill="rgb(206,32,51)"/><text x="32.1785%" y="495.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="32.0562%" y="501" width="0.1277%" height="15" fill="rgb(250,172,42)"/><text x="32.3062%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.38%)</title><rect x="32.0562%" y="517" width="0.3831%" height="15" fill="rgb(209,34,43)"/><text x="32.3062%" y="527.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.26%)</title><rect x="32.1839%" y="501" width="0.2554%" height="15" fill="rgb(223,11,35)"/><text x="32.4339%" y="511.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.13%)</title><rect x="32.3116%" y="485" width="0.1277%" height="15" fill="rgb(251,219,26)"/><text x="32.5616%" y="495.50"></text></g><g><title>sock_sendmsg (58 samples, 7.41%)</title><rect x="25.2874%" y="565" width="7.4074%" height="15" fill="rgb(231,119,3)"/><text x="25.5374%" y="575.50">sock_sendm..</text></g><g><title>tcp_sendmsg (57 samples, 7.28%)</title><rect x="25.4151%" y="549" width="7.2797%" height="15" fill="rgb(216,97,11)"/><text x="25.6651%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (57 samples, 7.28%)</title><rect x="25.4151%" y="533" width="7.2797%" height="15" fill="rgb(223,59,9)"/><text x="25.6651%" y="543.50">tcp_sendms..</text></g><g><title>tcp_send_mss (2 samples, 0.26%)</title><rect x="32.4393%" y="517" width="0.2554%" height="15" fill="rgb(233,93,31)"/><text x="32.6893%" y="527.50"></text></g><g><title>tcp_current_mss (2 samples, 0.26%)</title><rect x="32.4393%" y="501" width="0.2554%" height="15" fill="rgb(239,81,33)"/><text x="32.6893%" y="511.50"></text></g><g><title>ipv4_mtu (1 samples, 0.13%)</title><rect x="32.5670%" y="485" width="0.1277%" height="15" fill="rgb(213,120,34)"/><text x="32.8170%" y="495.50"></text></g><g><title>__x64_sys_sendto (60 samples, 7.66%)</title><rect x="25.1596%" y="597" width="7.6628%" height="15" fill="rgb(243,49,53)"/><text x="25.4096%" y="607.50">__x64_sys_..</text></g><g><title>__sys_sendto (60 samples, 7.66%)</title><rect x="25.1596%" y="581" width="7.6628%" height="15" fill="rgb(247,216,33)"/><text x="25.4096%" y="591.50">__sys_send..</text></g><g><title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="32.6948%" y="565" width="0.1277%" height="15" fill="rgb(226,26,14)"/><text x="32.9448%" y="575.50"></text></g><g><title>__fget_light (1 samples, 0.13%)</title><rect x="32.6948%" y="549" width="0.1277%" height="15" fill="rgb(215,49,53)"/><text x="32.9448%" y="559.50"></text></g><g><title>__fget_files (1 samples, 0.13%)</title><rect x="32.6948%" y="533" width="0.1277%" height="15" fill="rgb(245,162,40)"/><text x="32.9448%" y="543.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="32.6948%" y="517" width="0.1277%" height="15" fill="rgb(229,68,17)"/><text x="32.9448%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (61 samples, 7.79%)</title><rect x="25.1596%" y="629" width="7.7905%" height="15" fill="rgb(213,182,10)"/><text x="25.4096%" y="639.50">entry_SYSCA..</text></g><g><title>do_syscall_64 (61 samples, 7.79%)</title><rect x="25.1596%" y="613" width="7.7905%" height="15" fill="rgb(245,125,30)"/><text x="25.4096%" y="623.50">do_syscall_..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="32.8225%" y="597" width="0.1277%" height="15" fill="rgb(232,202,2)"/><text x="33.0725%" y="607.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="32.8225%" y="581" width="0.1277%" height="15" fill="rgb(237,140,51)"/><text x="33.0725%" y="591.50"></text></g><g><title>lobsters_microbenchmarks::main (118 samples, 15.07%)</title><rect x="18.0077%" y="773" width="15.0702%" height="15" fill="rgb(236,157,25)"/><text x="18.2577%" y="783.50">lobsters_microbenchmark..</text></g><g><title>mysql::conn::queryable::Queryable::query (117 samples, 14.94%)</title><rect x="18.1354%" y="757" width="14.9425%" height="15" fill="rgb(219,209,0)"/><text x="18.3854%" y="767.50">mysql::conn::queryable:..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (98 samples, 12.52%)</title><rect x="20.5619%" y="741" width="12.5160%" height="15" fill="rgb(240,116,54)"/><text x="20.8119%" y="751.50">&lt;mysql::conn::Conn ..</text></g><g><title>mysql::conn::Conn::_query (98 samples, 12.52%)</title><rect x="20.5619%" y="725" width="12.5160%" height="15" fill="rgb(216,10,36)"/><text x="20.8119%" y="735.50">mysql::conn::Conn::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (63 samples, 8.05%)</title><rect x="25.0319%" y="709" width="8.0460%" height="15" fill="rgb(222,72,44)"/><text x="25.2819%" y="719.50">mysql_commo..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (63 samples, 8.05%)</title><rect x="25.0319%" y="693" width="8.0460%" height="15" fill="rgb(232,159,9)"/><text x="25.2819%" y="703.50">std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (63 samples, 8.05%)</title><rect x="25.0319%" y="677" width="8.0460%" height="15" fill="rgb(210,39,32)"/><text x="25.2819%" y="687.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::write (63 samples, 8.05%)</title><rect x="25.0319%" y="661" width="8.0460%" height="15" fill="rgb(216,194,45)"/><text x="25.2819%" y="671.50">std::sys_co..</text></g><g><title>__libc_send (63 samples, 8.05%)</title><rect x="25.0319%" y="645" width="8.0460%" height="15" fill="rgb(218,18,35)"/><text x="25.2819%" y="655.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.13%)</title><rect x="32.9502%" y="629" width="0.1277%" height="15" fill="rgb(207,83,51)"/><text x="33.2002%" y="639.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.13%)</title><rect x="33.0779%" y="757" width="0.1277%" height="15" fill="rgb(225,63,43)"/><text x="33.3279%" y="767.50"></text></g><g><title>decor_mem::Shim::create_schema (1 samples, 0.13%)</title><rect x="33.0779%" y="741" width="0.1277%" height="15" fill="rgb(207,57,36)"/><text x="33.3279%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (1 samples, 0.13%)</title><rect x="33.0779%" y="725" width="0.1277%" height="15" fill="rgb(216,99,33)"/><text x="33.3279%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="33.0779%" y="709" width="0.1277%" height="15" fill="rgb(225,42,16)"/><text x="33.3279%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="33.0779%" y="693" width="0.1277%" height="15" fill="rgb(220,201,45)"/><text x="33.3279%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.13%)</title><rect x="33.0779%" y="677" width="0.1277%" height="15" fill="rgb(225,33,4)"/><text x="33.3279%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::IndexDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.13%)</title><rect x="33.0779%" y="661" width="0.1277%" height="15" fill="rgb(224,33,50)"/><text x="33.3279%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.13%)</title><rect x="33.0779%" y="645" width="0.1277%" height="15" fill="rgb(246,198,51)"/><text x="33.3279%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.13%)</title><rect x="33.0779%" y="629" width="0.1277%" height="15" fill="rgb(205,22,4)"/><text x="33.3279%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.13%)</title><rect x="33.0779%" y="613" width="0.1277%" height="15" fill="rgb(206,3,8)"/><text x="33.3279%" y="623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="33.0779%" y="597" width="0.1277%" height="15" fill="rgb(251,23,15)"/><text x="33.3279%" y="607.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.13%)</title><rect x="33.0779%" y="581" width="0.1277%" height="15" fill="rgb(252,88,28)"/><text x="33.3279%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="33.2056%" y="645" width="0.2554%" height="15" fill="rgb(212,127,14)"/><text x="33.4556%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="33.3333%" y="629" width="0.1277%" height="15" fill="rgb(247,145,37)"/><text x="33.5833%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="33.3333%" y="613" width="0.1277%" height="15" fill="rgb(209,117,53)"/><text x="33.5833%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="33.3333%" y="597" width="0.1277%" height="15" fill="rgb(212,90,42)"/><text x="33.5833%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="33.3333%" y="581" width="0.1277%" height="15" fill="rgb(218,164,37)"/><text x="33.5833%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="33.3333%" y="565" width="0.1277%" height="15" fill="rgb(246,65,34)"/><text x="33.5833%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="33.3333%" y="549" width="0.1277%" height="15" fill="rgb(231,100,33)"/><text x="33.5833%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="33.3333%" y="533" width="0.1277%" height="15" fill="rgb(228,126,14)"/><text x="33.5833%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="33.3333%" y="517" width="0.1277%" height="15" fill="rgb(215,173,21)"/><text x="33.5833%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="33.3333%" y="501" width="0.1277%" height="15" fill="rgb(210,6,40)"/><text x="33.5833%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="33.3333%" y="485" width="0.1277%" height="15" fill="rgb(212,48,18)"/><text x="33.5833%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="33.3333%" y="469" width="0.1277%" height="15" fill="rgb(230,214,11)"/><text x="33.5833%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="33.3333%" y="453" width="0.1277%" height="15" fill="rgb(254,105,39)"/><text x="33.5833%" y="463.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.13%)</title><rect x="33.5888%" y="437" width="0.1277%" height="15" fill="rgb(245,158,5)"/><text x="33.8388%" y="447.50"></text></g><g><title>__GI___mprotect (3 samples, 0.38%)</title><rect x="33.4610%" y="597" width="0.3831%" height="15" fill="rgb(249,208,11)"/><text x="33.7110%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.38%)</title><rect x="33.4610%" y="581" width="0.3831%" height="15" fill="rgb(210,39,28)"/><text x="33.7110%" y="591.50"></text></g><g><title>do_syscall_64 (3 samples, 0.38%)</title><rect x="33.4610%" y="565" width="0.3831%" height="15" fill="rgb(211,56,53)"/><text x="33.7110%" y="575.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.38%)</title><rect x="33.4610%" y="549" width="0.3831%" height="15" fill="rgb(226,201,30)"/><text x="33.7110%" y="559.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.38%)</title><rect x="33.4610%" y="533" width="0.3831%" height="15" fill="rgb(239,101,34)"/><text x="33.7110%" y="543.50"></text></g><g><title>mprotect_fixup (3 samples, 0.38%)</title><rect x="33.4610%" y="517" width="0.3831%" height="15" fill="rgb(226,209,5)"/><text x="33.7110%" y="527.50"></text></g><g><title>perf_event_mmap (3 samples, 0.38%)</title><rect x="33.4610%" y="501" width="0.3831%" height="15" fill="rgb(250,105,47)"/><text x="33.7110%" y="511.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.38%)</title><rect x="33.4610%" y="485" width="0.3831%" height="15" fill="rgb(230,72,3)"/><text x="33.7110%" y="495.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.26%)</title><rect x="33.5888%" y="469" width="0.2554%" height="15" fill="rgb(232,218,39)"/><text x="33.8388%" y="479.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.26%)</title><rect x="33.5888%" y="453" width="0.2554%" height="15" fill="rgb(248,166,6)"/><text x="33.8388%" y="463.50"></text></g><g><title>perf_output_copy (1 samples, 0.13%)</title><rect x="33.7165%" y="437" width="0.1277%" height="15" fill="rgb(247,89,20)"/><text x="33.9665%" y="447.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.51%)</title><rect x="33.4610%" y="645" width="0.5109%" height="15" fill="rgb(248,130,54)"/><text x="33.7110%" y="655.50"></text></g><g><title>_int_malloc (4 samples, 0.51%)</title><rect x="33.4610%" y="629" width="0.5109%" height="15" fill="rgb(234,196,4)"/><text x="33.7110%" y="639.50"></text></g><g><title>sysmalloc (4 samples, 0.51%)</title><rect x="33.4610%" y="613" width="0.5109%" height="15" fill="rgb(250,143,31)"/><text x="33.7110%" y="623.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.13%)</title><rect x="33.8442%" y="597" width="0.1277%" height="15" fill="rgb(211,110,34)"/><text x="34.0942%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="33.8442%" y="581" width="0.1277%" height="15" fill="rgb(215,124,48)"/><text x="34.0942%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (7 samples, 0.89%)</title><rect x="33.2056%" y="709" width="0.8940%" height="15" fill="rgb(216,46,13)"/><text x="33.4556%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (7 samples, 0.89%)</title><rect x="33.2056%" y="693" width="0.8940%" height="15" fill="rgb(205,184,25)"/><text x="33.4556%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.89%)</title><rect x="33.2056%" y="677" width="0.8940%" height="15" fill="rgb(228,1,10)"/><text x="33.4556%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.89%)</title><rect x="33.2056%" y="661" width="0.8940%" height="15" fill="rgb(213,116,27)"/><text x="33.4556%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="33.9719%" y="645" width="0.1277%" height="15" fill="rgb(241,95,50)"/><text x="34.2219%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.13%)</title><rect x="34.0996%" y="629" width="0.1277%" height="15" fill="rgb(238,48,32)"/><text x="34.3496%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="34.0996%" y="613" width="0.1277%" height="15" fill="rgb(235,113,49)"/><text x="34.3496%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="34.0996%" y="597" width="0.1277%" height="15" fill="rgb(205,127,43)"/><text x="34.3496%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.26%)</title><rect x="34.0996%" y="709" width="0.2554%" height="15" fill="rgb(250,162,2)"/><text x="34.3496%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (2 samples, 0.26%)</title><rect x="34.0996%" y="693" width="0.2554%" height="15" fill="rgb(220,13,41)"/><text x="34.3496%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.26%)</title><rect x="34.0996%" y="677" width="0.2554%" height="15" fill="rgb(249,221,25)"/><text x="34.3496%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.26%)</title><rect x="34.0996%" y="661" width="0.2554%" height="15" fill="rgb(215,208,19)"/><text x="34.3496%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.26%)</title><rect x="34.0996%" y="645" width="0.2554%" height="15" fill="rgb(236,175,2)"/><text x="34.3496%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="34.2273%" y="629" width="0.1277%" height="15" fill="rgb(241,52,2)"/><text x="34.4773%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="34.2273%" y="613" width="0.1277%" height="15" fill="rgb(248,140,14)"/><text x="34.4773%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="34.3550%" y="693" width="0.1277%" height="15" fill="rgb(253,22,42)"/><text x="34.6050%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="34.3550%" y="677" width="0.1277%" height="15" fill="rgb(234,61,47)"/><text x="34.6050%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.26%)</title><rect x="34.3550%" y="709" width="0.2554%" height="15" fill="rgb(208,226,15)"/><text x="34.6050%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="34.4828%" y="693" width="0.1277%" height="15" fill="rgb(217,221,4)"/><text x="34.7328%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="34.4828%" y="677" width="0.1277%" height="15" fill="rgb(212,174,34)"/><text x="34.7328%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="34.4828%" y="661" width="0.1277%" height="15" fill="rgb(253,83,4)"/><text x="34.7328%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="34.4828%" y="645" width="0.1277%" height="15" fill="rgb(250,195,49)"/><text x="34.7328%" y="655.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.38%)</title><rect x="35.1213%" y="373" width="0.3831%" height="15" fill="rgb(241,192,25)"/><text x="35.3713%" y="383.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.38%)</title><rect x="35.1213%" y="357" width="0.3831%" height="15" fill="rgb(208,124,10)"/><text x="35.3713%" y="367.50"></text></g><g><title>loopback_xmit (1 samples, 0.13%)</title><rect x="35.3768%" y="341" width="0.1277%" height="15" fill="rgb(222,33,0)"/><text x="35.6268%" y="351.50"></text></g><g><title>eth_type_trans (1 samples, 0.13%)</title><rect x="35.3768%" y="325" width="0.1277%" height="15" fill="rgb(234,209,28)"/><text x="35.6268%" y="335.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.13%)</title><rect x="35.5045%" y="293" width="0.1277%" height="15" fill="rgb(224,11,23)"/><text x="35.7545%" y="303.50"></text></g><g><title>sock_def_readable (3 samples, 0.38%)</title><rect x="35.7599%" y="149" width="0.3831%" height="15" fill="rgb(232,99,1)"/><text x="36.0099%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.13%)</title><rect x="36.0153%" y="133" width="0.1277%" height="15" fill="rgb(237,95,45)"/><text x="36.2653%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.13%)</title><rect x="36.0153%" y="117" width="0.1277%" height="15" fill="rgb(208,109,11)"/><text x="36.2653%" y="127.50"></text></g><g><title>pollwake (1 samples, 0.13%)</title><rect x="36.0153%" y="101" width="0.1277%" height="15" fill="rgb(216,190,48)"/><text x="36.2653%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.13%)</title><rect x="36.0153%" y="85" width="0.1277%" height="15" fill="rgb(251,171,36)"/><text x="36.2653%" y="95.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.13%)</title><rect x="36.0153%" y="69" width="0.1277%" height="15" fill="rgb(230,62,22)"/><text x="36.2653%" y="79.50"></text></g><g><title>available_idle_cpu (1 samples, 0.13%)</title><rect x="36.0153%" y="53" width="0.1277%" height="15" fill="rgb(225,114,35)"/><text x="36.2653%" y="63.50"></text></g><g><title>__kfree_skb (1 samples, 0.13%)</title><rect x="36.1430%" y="133" width="0.1277%" height="15" fill="rgb(215,118,42)"/><text x="36.3930%" y="143.50"></text></g><g><title>skb_release_data (1 samples, 0.13%)</title><rect x="36.1430%" y="117" width="0.1277%" height="15" fill="rgb(243,119,21)"/><text x="36.3930%" y="127.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.13%)</title><rect x="36.2708%" y="133" width="0.1277%" height="15" fill="rgb(252,177,53)"/><text x="36.5208%" y="143.50"></text></g><g><title>__ip_queue_xmit (11 samples, 1.40%)</title><rect x="35.1213%" y="421" width="1.4049%" height="15" fill="rgb(237,209,29)"/><text x="35.3713%" y="431.50"></text></g><g><title>ip_output (11 samples, 1.40%)</title><rect x="35.1213%" y="405" width="1.4049%" height="15" fill="rgb(212,65,23)"/><text x="35.3713%" y="415.50"></text></g><g><title>ip_finish_output2 (11 samples, 1.40%)</title><rect x="35.1213%" y="389" width="1.4049%" height="15" fill="rgb(230,222,46)"/><text x="35.3713%" y="399.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 1.02%)</title><rect x="35.5045%" y="373" width="1.0217%" height="15" fill="rgb(215,135,32)"/><text x="35.7545%" y="383.50"></text></g><g><title>do_softirq (8 samples, 1.02%)</title><rect x="35.5045%" y="357" width="1.0217%" height="15" fill="rgb(246,101,22)"/><text x="35.7545%" y="367.50"></text></g><g><title>do_softirq_own_stack (8 samples, 1.02%)</title><rect x="35.5045%" y="341" width="1.0217%" height="15" fill="rgb(206,107,13)"/><text x="35.7545%" y="351.50"></text></g><g><title>__do_softirq (8 samples, 1.02%)</title><rect x="35.5045%" y="325" width="1.0217%" height="15" fill="rgb(250,100,44)"/><text x="35.7545%" y="335.50"></text></g><g><title>net_rx_action (8 samples, 1.02%)</title><rect x="35.5045%" y="309" width="1.0217%" height="15" fill="rgb(231,147,38)"/><text x="35.7545%" y="319.50"></text></g><g><title>process_backlog (7 samples, 0.89%)</title><rect x="35.6322%" y="293" width="0.8940%" height="15" fill="rgb(229,8,40)"/><text x="35.8822%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.89%)</title><rect x="35.6322%" y="277" width="0.8940%" height="15" fill="rgb(221,135,30)"/><text x="35.8822%" y="287.50"></text></g><g><title>ip_rcv (7 samples, 0.89%)</title><rect x="35.6322%" y="261" width="0.8940%" height="15" fill="rgb(249,193,18)"/><text x="35.8822%" y="271.50"></text></g><g><title>ip_local_deliver (7 samples, 0.89%)</title><rect x="35.6322%" y="245" width="0.8940%" height="15" fill="rgb(209,133,39)"/><text x="35.8822%" y="255.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.89%)</title><rect x="35.6322%" y="229" width="0.8940%" height="15" fill="rgb(232,100,14)"/><text x="35.8822%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.77%)</title><rect x="35.7599%" y="213" width="0.7663%" height="15" fill="rgb(224,185,1)"/><text x="36.0099%" y="223.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.77%)</title><rect x="35.7599%" y="197" width="0.7663%" height="15" fill="rgb(223,139,8)"/><text x="36.0099%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.77%)</title><rect x="35.7599%" y="181" width="0.7663%" height="15" fill="rgb(232,213,38)"/><text x="36.0099%" y="191.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.77%)</title><rect x="35.7599%" y="165" width="0.7663%" height="15" fill="rgb(207,94,22)"/><text x="36.0099%" y="175.50"></text></g><g><title>tcp_ack (3 samples, 0.38%)</title><rect x="36.1430%" y="149" width="0.3831%" height="15" fill="rgb(219,183,54)"/><text x="36.3930%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.13%)</title><rect x="36.3985%" y="133" width="0.1277%" height="15" fill="rgb(216,185,54)"/><text x="36.6485%" y="143.50"></text></g><g><title>__tcp_push_pending_frames (14 samples, 1.79%)</title><rect x="34.8659%" y="469" width="1.7880%" height="15" fill="rgb(254,217,39)"/><text x="35.1159%" y="479.50">_..</text></g><g><title>tcp_write_xmit (14 samples, 1.79%)</title><rect x="34.8659%" y="453" width="1.7880%" height="15" fill="rgb(240,178,23)"/><text x="35.1159%" y="463.50">t..</text></g><g><title>__tcp_transmit_skb (14 samples, 1.79%)</title><rect x="34.8659%" y="437" width="1.7880%" height="15" fill="rgb(218,11,47)"/><text x="35.1159%" y="447.50">_..</text></g><g><title>tcp_options_write (1 samples, 0.13%)</title><rect x="36.5262%" y="421" width="0.1277%" height="15" fill="rgb(218,51,51)"/><text x="36.7762%" y="431.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.13%)</title><rect x="36.6539%" y="469" width="0.1277%" height="15" fill="rgb(238,126,27)"/><text x="36.9039%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.13%)</title><rect x="36.7816%" y="469" width="0.1277%" height="15" fill="rgb(249,202,22)"/><text x="37.0316%" y="479.50"></text></g><g><title>__alloc_skb (1 samples, 0.13%)</title><rect x="36.7816%" y="453" width="0.1277%" height="15" fill="rgb(254,195,49)"/><text x="37.0316%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="36.7816%" y="437" width="0.1277%" height="15" fill="rgb(208,123,14)"/><text x="37.0316%" y="447.50"></text></g><g><title>do_syscall_64 (18 samples, 2.30%)</title><rect x="34.7382%" y="565" width="2.2989%" height="15" fill="rgb(224,200,8)"/><text x="34.9882%" y="575.50">d..</text></g><g><title>__x64_sys_sendto (18 samples, 2.30%)</title><rect x="34.7382%" y="549" width="2.2989%" height="15" fill="rgb(217,61,36)"/><text x="34.9882%" y="559.50">_..</text></g><g><title>__sys_sendto (18 samples, 2.30%)</title><rect x="34.7382%" y="533" width="2.2989%" height="15" fill="rgb(206,35,45)"/><text x="34.9882%" y="543.50">_..</text></g><g><title>sock_sendmsg (18 samples, 2.30%)</title><rect x="34.7382%" y="517" width="2.2989%" height="15" fill="rgb(217,65,33)"/><text x="34.9882%" y="527.50">s..</text></g><g><title>tcp_sendmsg (18 samples, 2.30%)</title><rect x="34.7382%" y="501" width="2.2989%" height="15" fill="rgb(222,158,48)"/><text x="34.9882%" y="511.50">t..</text></g><g><title>tcp_sendmsg_locked (18 samples, 2.30%)</title><rect x="34.7382%" y="485" width="2.2989%" height="15" fill="rgb(254,2,54)"/><text x="34.9882%" y="495.50">t..</text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.13%)</title><rect x="36.9093%" y="469" width="0.1277%" height="15" fill="rgb(250,143,38)"/><text x="37.1593%" y="479.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="36.9093%" y="453" width="0.1277%" height="15" fill="rgb(248,25,0)"/><text x="37.1593%" y="463.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (20 samples, 2.55%)</title><rect x="34.7382%" y="693" width="2.5543%" height="15" fill="rgb(206,152,27)"/><text x="34.9882%" y="703.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (20 samples, 2.55%)</title><rect x="34.7382%" y="677" width="2.5543%" height="15" fill="rgb(240,77,30)"/><text x="34.9882%" y="687.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (20 samples, 2.55%)</title><rect x="34.7382%" y="661" width="2.5543%" height="15" fill="rgb(231,5,3)"/><text x="34.9882%" y="671.50">my..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (20 samples, 2.55%)</title><rect x="34.7382%" y="645" width="2.5543%" height="15" fill="rgb(207,226,32)"/><text x="34.9882%" y="655.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (20 samples, 2.55%)</title><rect x="34.7382%" y="629" width="2.5543%" height="15" fill="rgb(222,207,47)"/><text x="34.9882%" y="639.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (20 samples, 2.55%)</title><rect x="34.7382%" y="613" width="2.5543%" height="15" fill="rgb(229,115,45)"/><text x="34.9882%" y="623.50">st..</text></g><g><title>__libc_send (20 samples, 2.55%)</title><rect x="34.7382%" y="597" width="2.5543%" height="15" fill="rgb(224,191,6)"/><text x="34.9882%" y="607.50">__..</text></g><g><title>entry_SYSCALL_64 (20 samples, 2.55%)</title><rect x="34.7382%" y="581" width="2.5543%" height="15" fill="rgb(230,227,24)"/><text x="34.9882%" y="591.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.26%)</title><rect x="37.0370%" y="565" width="0.2554%" height="15" fill="rgb(228,80,19)"/><text x="37.2870%" y="575.50"></text></g><g><title>__GI___mprotect (1 samples, 0.13%)</title><rect x="37.2925%" y="613" width="0.1277%" height="15" fill="rgb(247,229,0)"/><text x="37.5425%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="37.2925%" y="597" width="0.1277%" height="15" fill="rgb(237,194,15)"/><text x="37.5425%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="37.2925%" y="581" width="0.1277%" height="15" fill="rgb(219,203,20)"/><text x="37.5425%" y="591.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.13%)</title><rect x="37.2925%" y="565" width="0.1277%" height="15" fill="rgb(234,128,8)"/><text x="37.5425%" y="575.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.13%)</title><rect x="37.2925%" y="549" width="0.1277%" height="15" fill="rgb(248,202,8)"/><text x="37.5425%" y="559.50"></text></g><g><title>mprotect_fixup (1 samples, 0.13%)</title><rect x="37.2925%" y="533" width="0.1277%" height="15" fill="rgb(206,104,37)"/><text x="37.5425%" y="543.50"></text></g><g><title>perf_event_mmap (1 samples, 0.13%)</title><rect x="37.2925%" y="517" width="0.1277%" height="15" fill="rgb(223,8,27)"/><text x="37.5425%" y="527.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.13%)</title><rect x="37.2925%" y="501" width="0.1277%" height="15" fill="rgb(216,217,28)"/><text x="37.5425%" y="511.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.13%)</title><rect x="37.2925%" y="485" width="0.1277%" height="15" fill="rgb(249,199,1)"/><text x="37.5425%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.38%)</title><rect x="37.2925%" y="693" width="0.3831%" height="15" fill="rgb(240,85,17)"/><text x="37.5425%" y="703.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.38%)</title><rect x="37.2925%" y="677" width="0.3831%" height="15" fill="rgb(206,108,45)"/><text x="37.5425%" y="687.50"></text></g><g><title>_int_realloc (3 samples, 0.38%)</title><rect x="37.2925%" y="661" width="0.3831%" height="15" fill="rgb(245,210,41)"/><text x="37.5425%" y="671.50"></text></g><g><title>_int_malloc (3 samples, 0.38%)</title><rect x="37.2925%" y="645" width="0.3831%" height="15" fill="rgb(206,13,37)"/><text x="37.5425%" y="655.50"></text></g><g><title>sysmalloc (3 samples, 0.38%)</title><rect x="37.2925%" y="629" width="0.3831%" height="15" fill="rgb(250,61,18)"/><text x="37.5425%" y="639.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.26%)</title><rect x="37.4202%" y="613" width="0.2554%" height="15" fill="rgb(235,172,48)"/><text x="37.6702%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.26%)</title><rect x="37.4202%" y="597" width="0.2554%" height="15" fill="rgb(249,201,17)"/><text x="37.6702%" y="607.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (25 samples, 3.19%)</title><rect x="34.6105%" y="709" width="3.1928%" height="15" fill="rgb(219,208,6)"/><text x="34.8605%" y="719.50">dec..</text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_into_caches (1 samples, 0.13%)</title><rect x="37.6756%" y="693" width="0.1277%" height="15" fill="rgb(248,31,23)"/><text x="37.9256%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.13%)</title><rect x="37.6756%" y="677" width="0.1277%" height="15" fill="rgb(245,15,42)"/><text x="37.9256%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="37.6756%" y="661" width="0.1277%" height="15" fill="rgb(222,217,39)"/><text x="37.9256%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="37.9310%" y="661" width="0.1277%" height="15" fill="rgb(210,219,27)"/><text x="38.1810%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="37.9310%" y="645" width="0.1277%" height="15" fill="rgb(252,166,36)"/><text x="38.1810%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="37.9310%" y="629" width="0.1277%" height="15" fill="rgb(245,132,34)"/><text x="38.1810%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="37.9310%" y="613" width="0.1277%" height="15" fill="rgb(236,54,3)"/><text x="38.1810%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="37.9310%" y="597" width="0.1277%" height="15" fill="rgb(241,173,43)"/><text x="38.1810%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="37.9310%" y="581" width="0.1277%" height="15" fill="rgb(215,190,9)"/><text x="38.1810%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="37.9310%" y="565" width="0.1277%" height="15" fill="rgb(242,101,16)"/><text x="38.1810%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="37.9310%" y="549" width="0.1277%" height="15" fill="rgb(223,190,21)"/><text x="38.1810%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="37.9310%" y="533" width="0.1277%" height="15" fill="rgb(215,228,25)"/><text x="38.1810%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="37.9310%" y="517" width="0.1277%" height="15" fill="rgb(225,36,22)"/><text x="38.1810%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="37.9310%" y="501" width="0.1277%" height="15" fill="rgb(251,106,46)"/><text x="38.1810%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="37.9310%" y="485" width="0.1277%" height="15" fill="rgb(208,90,1)"/><text x="38.1810%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.51%)</title><rect x="37.8033%" y="677" width="0.5109%" height="15" fill="rgb(243,10,4)"/><text x="38.0533%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="38.0587%" y="661" width="0.2554%" height="15" fill="rgb(212,137,27)"/><text x="38.3087%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="38.1865%" y="645" width="0.1277%" height="15" fill="rgb(231,220,49)"/><text x="38.4365%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="38.3142%" y="677" width="0.1277%" height="15" fill="rgb(237,96,20)"/><text x="38.5642%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="38.4419%" y="661" width="0.1277%" height="15" fill="rgb(239,229,30)"/><text x="38.6919%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.26%)</title><rect x="38.4419%" y="677" width="0.2554%" height="15" fill="rgb(219,65,33)"/><text x="38.6919%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="38.5696%" y="661" width="0.1277%" height="15" fill="rgb(243,134,7)"/><text x="38.8196%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="38.5696%" y="645" width="0.1277%" height="15" fill="rgb(216,177,54)"/><text x="38.8196%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="38.5696%" y="629" width="0.1277%" height="15" fill="rgb(211,160,20)"/><text x="38.8196%" y="639.50"></text></g><g><title>malloc_consolidate (1 samples, 0.13%)</title><rect x="38.5696%" y="613" width="0.1277%" height="15" fill="rgb(239,85,39)"/><text x="38.8196%" y="623.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.13%)</title><rect x="38.6973%" y="677" width="0.1277%" height="15" fill="rgb(232,125,22)"/><text x="38.9473%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="38.8250%" y="677" width="0.1277%" height="15" fill="rgb(244,57,34)"/><text x="39.0750%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="38.8250%" y="661" width="0.1277%" height="15" fill="rgb(214,203,32)"/><text x="39.0750%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="38.8250%" y="645" width="0.1277%" height="15" fill="rgb(207,58,43)"/><text x="39.0750%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="38.8250%" y="629" width="0.1277%" height="15" fill="rgb(215,193,15)"/><text x="39.0750%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.13%)</title><rect x="38.8250%" y="613" width="0.1277%" height="15" fill="rgb(232,15,44)"/><text x="39.0750%" y="623.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.13%)</title><rect x="38.8250%" y="597" width="0.1277%" height="15" fill="rgb(212,3,48)"/><text x="39.0750%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.13%)</title><rect x="38.8250%" y="581" width="0.1277%" height="15" fill="rgb(218,128,7)"/><text x="39.0750%" y="591.50"></text></g><g><title>core::cmp::min (1 samples, 0.13%)</title><rect x="38.8250%" y="565" width="0.1277%" height="15" fill="rgb(226,216,39)"/><text x="39.0750%" y="575.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.13%)</title><rect x="38.8250%" y="549" width="0.1277%" height="15" fill="rgb(243,47,51)"/><text x="39.0750%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="38.8250%" y="533" width="0.1277%" height="15" fill="rgb(241,183,40)"/><text x="39.0750%" y="543.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.13%)</title><rect x="39.0805%" y="581" width="0.1277%" height="15" fill="rgb(231,217,32)"/><text x="39.3305%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="39.0805%" y="565" width="0.1277%" height="15" fill="rgb(229,61,38)"/><text x="39.3305%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.26%)</title><rect x="39.0805%" y="629" width="0.2554%" height="15" fill="rgb(225,210,5)"/><text x="39.3305%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.26%)</title><rect x="39.0805%" y="613" width="0.2554%" height="15" fill="rgb(231,79,45)"/><text x="39.3305%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.26%)</title><rect x="39.0805%" y="597" width="0.2554%" height="15" fill="rgb(224,100,7)"/><text x="39.3305%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.13%)</title><rect x="39.2082%" y="581" width="0.1277%" height="15" fill="rgb(241,198,18)"/><text x="39.4582%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.13%)</title><rect x="39.2082%" y="565" width="0.1277%" height="15" fill="rgb(252,97,53)"/><text x="39.4582%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.13%)</title><rect x="39.2082%" y="549" width="0.1277%" height="15" fill="rgb(220,88,7)"/><text x="39.4582%" y="559.50"></text></g><g><title>decor_mem::select::expr_to_col (4 samples, 0.51%)</title><rect x="38.9527%" y="677" width="0.5109%" height="15" fill="rgb(213,176,14)"/><text x="39.2027%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.38%)</title><rect x="39.0805%" y="661" width="0.3831%" height="15" fill="rgb(246,73,7)"/><text x="39.3305%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (3 samples, 0.38%)</title><rect x="39.0805%" y="645" width="0.3831%" height="15" fill="rgb(245,64,36)"/><text x="39.3305%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="39.3359%" y="629" width="0.1277%" height="15" fill="rgb(245,80,10)"/><text x="39.5859%" y="639.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (1 samples, 0.13%)</title><rect x="39.4636%" y="677" width="0.1277%" height="15" fill="rgb(232,107,50)"/><text x="39.7136%" y="687.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (1 samples, 0.13%)</title><rect x="39.4636%" y="661" width="0.1277%" height="15" fill="rgb(253,3,0)"/><text x="39.7136%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="39.7190%" y="645" width="0.1277%" height="15" fill="rgb(212,99,53)"/><text x="39.9690%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="39.8467%" y="645" width="0.1277%" height="15" fill="rgb(249,111,54)"/><text x="40.0967%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="39.9745%" y="613" width="0.1277%" height="15" fill="rgb(249,55,30)"/><text x="40.2245%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="39.9745%" y="597" width="0.1277%" height="15" fill="rgb(237,47,42)"/><text x="40.2245%" y="607.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure (5 samples, 0.64%)</title><rect x="39.5913%" y="677" width="0.6386%" height="15" fill="rgb(211,20,18)"/><text x="39.8413%" y="687.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (4 samples, 0.51%)</title><rect x="39.7190%" y="661" width="0.5109%" height="15" fill="rgb(231,203,46)"/><text x="39.9690%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.26%)</title><rect x="39.9745%" y="645" width="0.2554%" height="15" fill="rgb(237,142,3)"/><text x="40.2245%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.26%)</title><rect x="39.9745%" y="629" width="0.2554%" height="15" fill="rgb(241,107,1)"/><text x="40.2245%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="40.1022%" y="613" width="0.1277%" height="15" fill="rgb(229,83,13)"/><text x="40.3522%" y="623.50"></text></g><g><title>__GI___libc_free (2 samples, 0.26%)</title><rect x="40.2299%" y="661" width="0.2554%" height="15" fill="rgb(241,91,40)"/><text x="40.4799%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="40.4853%" y="661" width="0.1277%" height="15" fill="rgb(225,3,45)"/><text x="40.7353%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.26%)</title><rect x="40.6130%" y="629" width="0.2554%" height="15" fill="rgb(244,223,14)"/><text x="40.8630%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.26%)</title><rect x="40.6130%" y="613" width="0.2554%" height="15" fill="rgb(224,124,37)"/><text x="40.8630%" y="623.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.26%)</title><rect x="40.9962%" y="581" width="0.2554%" height="15" fill="rgb(251,171,30)"/><text x="41.2462%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.26%)</title><rect x="40.9962%" y="565" width="0.2554%" height="15" fill="rgb(236,46,54)"/><text x="41.2462%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 1.53%)</title><rect x="40.8685%" y="597" width="1.5326%" height="15" fill="rgb(245,213,5)"/><text x="41.1185%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (9 samples, 1.15%)</title><rect x="41.2516%" y="581" width="1.1494%" height="15" fill="rgb(230,144,27)"/><text x="41.5016%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (9 samples, 1.15%)</title><rect x="41.2516%" y="565" width="1.1494%" height="15" fill="rgb(220,86,6)"/><text x="41.5016%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 1.15%)</title><rect x="41.2516%" y="549" width="1.1494%" height="15" fill="rgb(240,20,13)"/><text x="41.5016%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (5 samples, 0.64%)</title><rect x="41.7625%" y="533" width="0.6386%" height="15" fill="rgb(217,89,34)"/><text x="42.0125%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.66%)</title><rect x="40.8685%" y="629" width="1.6603%" height="15" fill="rgb(229,13,5)"/><text x="41.1185%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 1.66%)</title><rect x="40.8685%" y="613" width="1.6603%" height="15" fill="rgb(244,67,35)"/><text x="41.1185%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.13%)</title><rect x="42.4010%" y="597" width="0.1277%" height="15" fill="rgb(221,40,2)"/><text x="42.6510%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="42.4010%" y="581" width="0.1277%" height="15" fill="rgb(237,157,21)"/><text x="42.6510%" y="591.50"></text></g><g><title>core::fmt::write (16 samples, 2.04%)</title><rect x="40.6130%" y="661" width="2.0434%" height="15" fill="rgb(222,94,11)"/><text x="40.8630%" y="671.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (16 samples, 2.04%)</title><rect x="40.6130%" y="645" width="2.0434%" height="15" fill="rgb(249,113,6)"/><text x="40.8630%" y="655.50">&lt;..</text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="42.5287%" y="629" width="0.1277%" height="15" fill="rgb(238,137,36)"/><text x="42.7787%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.13%)</title><rect x="42.6564%" y="485" width="0.1277%" height="15" fill="rgb(210,102,26)"/><text x="42.9064%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="42.6564%" y="469" width="0.1277%" height="15" fill="rgb(218,30,30)"/><text x="42.9064%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.13%)</title><rect x="42.6564%" y="453" width="0.1277%" height="15" fill="rgb(214,67,26)"/><text x="42.9064%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="42.6564%" y="437" width="0.1277%" height="15" fill="rgb(251,9,53)"/><text x="42.9064%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="42.6564%" y="421" width="0.1277%" height="15" fill="rgb(228,204,25)"/><text x="42.9064%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.13%)</title><rect x="42.6564%" y="405" width="0.1277%" height="15" fill="rgb(207,153,8)"/><text x="42.9064%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="42.6564%" y="389" width="0.1277%" height="15" fill="rgb(242,9,16)"/><text x="42.9064%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.13%)</title><rect x="42.6564%" y="373" width="0.1277%" height="15" fill="rgb(217,211,10)"/><text x="42.9064%" y="383.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="42.6564%" y="357" width="0.1277%" height="15" fill="rgb(219,228,52)"/><text x="42.9064%" y="367.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="42.6564%" y="341" width="0.1277%" height="15" fill="rgb(231,92,29)"/><text x="42.9064%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="42.6564%" y="325" width="0.1277%" height="15" fill="rgb(232,8,23)"/><text x="42.9064%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.26%)</title><rect x="42.6564%" y="581" width="0.2554%" height="15" fill="rgb(216,211,34)"/><text x="42.9064%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.26%)</title><rect x="42.6564%" y="565" width="0.2554%" height="15" fill="rgb(236,151,0)"/><text x="42.9064%" y="575.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.26%)</title><rect x="42.6564%" y="549" width="0.2554%" height="15" fill="rgb(209,168,3)"/><text x="42.9064%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.26%)</title><rect x="42.6564%" y="533" width="0.2554%" height="15" fill="rgb(208,129,28)"/><text x="42.9064%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.26%)</title><rect x="42.6564%" y="517" width="0.2554%" height="15" fill="rgb(229,78,22)"/><text x="42.9064%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.26%)</title><rect x="42.6564%" y="501" width="0.2554%" height="15" fill="rgb(228,187,13)"/><text x="42.9064%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="42.7842%" y="485" width="0.1277%" height="15" fill="rgb(240,119,24)"/><text x="43.0342%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.13%)</title><rect x="43.1673%" y="517" width="0.1277%" height="15" fill="rgb(209,194,42)"/><text x="43.4173%" y="527.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.26%)</title><rect x="43.1673%" y="533" width="0.2554%" height="15" fill="rgb(247,200,46)"/><text x="43.4173%" y="543.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.13%)</title><rect x="43.2950%" y="517" width="0.1277%" height="15" fill="rgb(218,76,16)"/><text x="43.5450%" y="527.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.13%)</title><rect x="43.4227%" y="533" width="0.1277%" height="15" fill="rgb(225,21,48)"/><text x="43.6727%" y="543.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.13%)</title><rect x="43.4227%" y="517" width="0.1277%" height="15" fill="rgb(239,223,50)"/><text x="43.6727%" y="527.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.13%)</title><rect x="43.4227%" y="501" width="0.1277%" height="15" fill="rgb(244,45,21)"/><text x="43.6727%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 1.53%)</title><rect x="42.9119%" y="581" width="1.5326%" height="15" fill="rgb(232,33,43)"/><text x="43.1619%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 1.53%)</title><rect x="42.9119%" y="565" width="1.5326%" height="15" fill="rgb(209,8,3)"/><text x="43.1619%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 1.53%)</title><rect x="42.9119%" y="549" width="1.5326%" height="15" fill="rgb(214,25,53)"/><text x="43.1619%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.89%)</title><rect x="43.5504%" y="533" width="0.8940%" height="15" fill="rgb(254,186,54)"/><text x="43.8004%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.64%)</title><rect x="43.8059%" y="517" width="0.6386%" height="15" fill="rgb(208,174,49)"/><text x="44.0559%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.64%)</title><rect x="43.8059%" y="501" width="0.6386%" height="15" fill="rgb(233,191,51)"/><text x="44.0559%" y="511.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="44.3167%" y="485" width="0.1277%" height="15" fill="rgb(222,134,10)"/><text x="44.5667%" y="495.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="44.4444%" y="581" width="0.1277%" height="15" fill="rgb(230,226,20)"/><text x="44.6944%" y="591.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (35 samples, 4.47%)</title><rect x="40.2299%" y="677" width="4.4700%" height="15" fill="rgb(251,111,25)"/><text x="40.4799%" y="687.50">decor..</text></g><g><title>decor_mem::views::TableColumnDef::name (16 samples, 2.04%)</title><rect x="42.6564%" y="661" width="2.0434%" height="15" fill="rgb(224,40,46)"/><text x="42.9064%" y="671.50">d..</text></g><g><title>alloc::fmt::format (16 samples, 2.04%)</title><rect x="42.6564%" y="645" width="2.0434%" height="15" fill="rgb(236,108,47)"/><text x="42.9064%" y="655.50">a..</text></g><g><title>core::fmt::Write::write_fmt (16 samples, 2.04%)</title><rect x="42.6564%" y="629" width="2.0434%" height="15" fill="rgb(234,93,0)"/><text x="42.9064%" y="639.50">c..</text></g><g><title>core::fmt::write (16 samples, 2.04%)</title><rect x="42.6564%" y="613" width="2.0434%" height="15" fill="rgb(224,213,32)"/><text x="42.9064%" y="623.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (16 samples, 2.04%)</title><rect x="42.6564%" y="597" width="2.0434%" height="15" fill="rgb(251,11,48)"/><text x="42.9064%" y="607.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="44.5722%" y="581" width="0.1277%" height="15" fill="rgb(236,173,5)"/><text x="44.8222%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="44.5722%" y="565" width="0.1277%" height="15" fill="rgb(230,95,12)"/><text x="44.8222%" y="575.50"></text></g><g><title>decor_mem::select::get_query_results (55 samples, 7.02%)</title><rect x="37.8033%" y="709" width="7.0243%" height="15" fill="rgb(232,209,1)"/><text x="38.0533%" y="719.50">decor_mem..</text></g><g><title>decor_mem::select::get_setexpr_results (55 samples, 7.02%)</title><rect x="37.8033%" y="693" width="7.0243%" height="15" fill="rgb(232,6,1)"/><text x="38.0533%" y="703.50">decor_mem..</text></g><g><title>decor_mem::select::tablefactor_to_view (1 samples, 0.13%)</title><rect x="44.6999%" y="677" width="0.1277%" height="15" fill="rgb(210,224,50)"/><text x="44.9499%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="44.6999%" y="661" width="0.1277%" height="15" fill="rgb(228,127,35)"/><text x="44.9499%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="44.6999%" y="645" width="0.1277%" height="15" fill="rgb(245,102,45)"/><text x="44.9499%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.13%)</title><rect x="44.6999%" y="629" width="0.1277%" height="15" fill="rgb(214,1,49)"/><text x="44.9499%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.13%)</title><rect x="44.6999%" y="613" width="0.1277%" height="15" fill="rgb(226,163,40)"/><text x="44.9499%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.13%)</title><rect x="44.6999%" y="597" width="0.1277%" height="15" fill="rgb(239,212,28)"/><text x="44.9499%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.13%)</title><rect x="44.6999%" y="581" width="0.1277%" height="15" fill="rgb(220,20,13)"/><text x="44.9499%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.13%)</title><rect x="44.6999%" y="565" width="0.1277%" height="15" fill="rgb(210,164,35)"/><text x="44.9499%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.13%)</title><rect x="44.6999%" y="549" width="0.1277%" height="15" fill="rgb(248,109,41)"/><text x="44.9499%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.13%)</title><rect x="44.6999%" y="533" width="0.1277%" height="15" fill="rgb(238,23,50)"/><text x="44.9499%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="44.8276%" y="693" width="0.1277%" height="15" fill="rgb(211,48,49)"/><text x="45.0776%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="44.8276%" y="677" width="0.1277%" height="15" fill="rgb(223,36,21)"/><text x="45.0776%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="44.8276%" y="661" width="0.1277%" height="15" fill="rgb(207,123,46)"/><text x="45.0776%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="44.8276%" y="645" width="0.1277%" height="15" fill="rgb(240,218,32)"/><text x="45.0776%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="44.8276%" y="629" width="0.1277%" height="15" fill="rgb(252,5,43)"/><text x="45.0776%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="44.8276%" y="613" width="0.1277%" height="15" fill="rgb(252,84,19)"/><text x="45.0776%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="44.8276%" y="597" width="0.1277%" height="15" fill="rgb(243,152,39)"/><text x="45.0776%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="44.8276%" y="581" width="0.1277%" height="15" fill="rgb(234,160,15)"/><text x="45.0776%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="44.8276%" y="565" width="0.1277%" height="15" fill="rgb(237,34,20)"/><text x="45.0776%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="44.8276%" y="549" width="0.1277%" height="15" fill="rgb(229,97,13)"/><text x="45.0776%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="44.8276%" y="533" width="0.1277%" height="15" fill="rgb(234,71,50)"/><text x="45.0776%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="44.8276%" y="517" width="0.1277%" height="15" fill="rgb(253,155,4)"/><text x="45.0776%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="44.9553%" y="677" width="0.1277%" height="15" fill="rgb(222,185,37)"/><text x="45.2053%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.26%)</title><rect x="45.0830%" y="677" width="0.2554%" height="15" fill="rgb(251,177,13)"/><text x="45.3330%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="45.3384%" y="645" width="0.1277%" height="15" fill="rgb(250,179,40)"/><text x="45.5884%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="45.7216%" y="597" width="0.1277%" height="15" fill="rgb(242,44,2)"/><text x="45.9716%" y="607.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.13%)</title><rect x="45.7216%" y="581" width="0.1277%" height="15" fill="rgb(216,177,13)"/><text x="45.9716%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.26%)</title><rect x="45.8493%" y="581" width="0.2554%" height="15" fill="rgb(216,106,43)"/><text x="46.0993%" y="591.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.38%)</title><rect x="45.8493%" y="597" width="0.3831%" height="15" fill="rgb(216,183,2)"/><text x="46.0993%" y="607.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.13%)</title><rect x="46.1047%" y="581" width="0.1277%" height="15" fill="rgb(249,75,3)"/><text x="46.3547%" y="591.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.13%)</title><rect x="46.1047%" y="565" width="0.1277%" height="15" fill="rgb(219,67,39)"/><text x="46.3547%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 1.28%)</title><rect x="45.7216%" y="613" width="1.2771%" height="15" fill="rgb(253,228,2)"/><text x="45.9716%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.77%)</title><rect x="46.2324%" y="597" width="0.7663%" height="15" fill="rgb(235,138,27)"/><text x="46.4824%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.64%)</title><rect x="46.3602%" y="581" width="0.6386%" height="15" fill="rgb(236,97,51)"/><text x="46.6102%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.64%)</title><rect x="46.3602%" y="565" width="0.6386%" height="15" fill="rgb(240,80,30)"/><text x="46.6102%" y="575.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.26%)</title><rect x="46.7433%" y="549" width="0.2554%" height="15" fill="rgb(230,178,19)"/><text x="46.9933%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (14 samples, 1.79%)</title><rect x="45.3384%" y="661" width="1.7880%" height="15" fill="rgb(210,190,27)"/><text x="45.5884%" y="671.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.66%)</title><rect x="45.4662%" y="645" width="1.6603%" height="15" fill="rgb(222,107,31)"/><text x="45.7162%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 1.66%)</title><rect x="45.4662%" y="629" width="1.6603%" height="15" fill="rgb(216,127,34)"/><text x="45.7162%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.13%)</title><rect x="46.9987%" y="613" width="0.1277%" height="15" fill="rgb(234,116,52)"/><text x="47.2487%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="46.9987%" y="597" width="0.1277%" height="15" fill="rgb(222,124,15)"/><text x="47.2487%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="46.9987%" y="581" width="0.1277%" height="15" fill="rgb(231,179,28)"/><text x="47.2487%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.13%)</title><rect x="47.1264%" y="645" width="0.1277%" height="15" fill="rgb(226,93,45)"/><text x="47.3764%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="47.1264%" y="629" width="0.1277%" height="15" fill="rgb(215,8,51)"/><text x="47.3764%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="47.1264%" y="613" width="0.1277%" height="15" fill="rgb(223,106,5)"/><text x="47.3764%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="47.1264%" y="597" width="0.1277%" height="15" fill="rgb(250,191,5)"/><text x="47.3764%" y="607.50"></text></g><g><title>core::fmt::write (16 samples, 2.04%)</title><rect x="45.3384%" y="677" width="2.0434%" height="15" fill="rgb(242,132,44)"/><text x="45.5884%" y="687.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.26%)</title><rect x="47.1264%" y="661" width="0.2554%" height="15" fill="rgb(251,152,29)"/><text x="47.3764%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.13%)</title><rect x="47.2542%" y="645" width="0.1277%" height="15" fill="rgb(218,179,5)"/><text x="47.5042%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="47.2542%" y="629" width="0.1277%" height="15" fill="rgb(227,67,19)"/><text x="47.5042%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (112 samples, 14.30%)</title><rect x="33.2056%" y="741" width="14.3040%" height="15" fill="rgb(233,119,31)"/><text x="33.4556%" y="751.50">decor_mem::query_trans..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (112 samples, 14.30%)</title><rect x="33.2056%" y="725" width="14.3040%" height="15" fill="rgb(241,120,22)"/><text x="33.4556%" y="735.50">decor_mem::query_trans..</text></g><g><title>decor_mem::views::Views::insert (21 samples, 2.68%)</title><rect x="44.8276%" y="709" width="2.6820%" height="15" fill="rgb(224,102,30)"/><text x="45.0776%" y="719.50">de..</text></g><g><title>decor_mem::views::View::insert_into_index (20 samples, 2.55%)</title><rect x="44.9553%" y="693" width="2.5543%" height="15" fill="rgb(210,164,37)"/><text x="45.2053%" y="703.50">de..</text></g><g><title>hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="47.3819%" y="677" width="0.1277%" height="15" fill="rgb(226,191,16)"/><text x="47.6319%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="47.5096%" y="725" width="0.1277%" height="15" fill="rgb(214,40,45)"/><text x="47.7596%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="47.5096%" y="709" width="0.1277%" height="15" fill="rgb(244,29,26)"/><text x="47.7596%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="47.5096%" y="693" width="0.1277%" height="15" fill="rgb(216,16,5)"/><text x="47.7596%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="47.5096%" y="677" width="0.1277%" height="15" fill="rgb(249,76,35)"/><text x="47.7596%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="47.8927%" y="693" width="0.1277%" height="15" fill="rgb(207,11,44)"/><text x="48.1427%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="47.8927%" y="677" width="0.1277%" height="15" fill="rgb(228,190,49)"/><text x="48.1427%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="47.8927%" y="661" width="0.1277%" height="15" fill="rgb(214,173,12)"/><text x="48.1427%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="47.8927%" y="645" width="0.1277%" height="15" fill="rgb(218,26,35)"/><text x="48.1427%" y="655.50"></text></g><g><title>malloc_consolidate (1 samples, 0.13%)</title><rect x="47.8927%" y="629" width="0.1277%" height="15" fill="rgb(220,200,19)"/><text x="48.1427%" y="639.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.13%)</title><rect x="48.0204%" y="693" width="0.1277%" height="15" fill="rgb(239,95,49)"/><text x="48.2704%" y="703.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (6 samples, 0.77%)</title><rect x="47.5096%" y="741" width="0.7663%" height="15" fill="rgb(235,85,53)"/><text x="47.7596%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (5 samples, 0.64%)</title><rect x="47.6373%" y="725" width="0.6386%" height="15" fill="rgb(233,133,31)"/><text x="47.8873%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (5 samples, 0.64%)</title><rect x="47.6373%" y="709" width="0.6386%" height="15" fill="rgb(218,25,20)"/><text x="47.8873%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.13%)</title><rect x="48.1481%" y="693" width="0.1277%" height="15" fill="rgb(252,210,38)"/><text x="48.3981%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="48.1481%" y="677" width="0.1277%" height="15" fill="rgb(242,134,21)"/><text x="48.3981%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="48.1481%" y="661" width="0.1277%" height="15" fill="rgb(213,28,48)"/><text x="48.3981%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="48.1481%" y="645" width="0.1277%" height="15" fill="rgb(250,196,2)"/><text x="48.3981%" y="655.50"></text></g><g><title>malloc_consolidate (1 samples, 0.13%)</title><rect x="48.2759%" y="629" width="0.1277%" height="15" fill="rgb(227,5,17)"/><text x="48.5259%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.26%)</title><rect x="48.2759%" y="693" width="0.2554%" height="15" fill="rgb(221,226,24)"/><text x="48.5259%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.26%)</title><rect x="48.2759%" y="677" width="0.2554%" height="15" fill="rgb(211,5,48)"/><text x="48.5259%" y="687.50"></text></g><g><title>_int_realloc (2 samples, 0.26%)</title><rect x="48.2759%" y="661" width="0.2554%" height="15" fill="rgb(219,150,6)"/><text x="48.5259%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.26%)</title><rect x="48.2759%" y="645" width="0.2554%" height="15" fill="rgb(251,46,16)"/><text x="48.5259%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.13%)</title><rect x="48.4036%" y="629" width="0.1277%" height="15" fill="rgb(220,204,40)"/><text x="48.6536%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.51%)</title><rect x="49.1699%" y="661" width="0.5109%" height="15" fill="rgb(211,85,2)"/><text x="49.4199%" y="671.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.13%)</title><rect x="49.6807%" y="645" width="0.1277%" height="15" fill="rgb(229,17,7)"/><text x="49.9307%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.13%)</title><rect x="49.6807%" y="629" width="0.1277%" height="15" fill="rgb(239,72,28)"/><text x="49.9307%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.13%)</title><rect x="49.6807%" y="613" width="0.1277%" height="15" fill="rgb(230,47,54)"/><text x="49.9307%" y="623.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="49.8084%" y="645" width="0.1277%" height="15" fill="rgb(214,50,8)"/><text x="50.0584%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="49.8084%" y="629" width="0.1277%" height="15" fill="rgb(216,198,43)"/><text x="50.0584%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="49.8084%" y="613" width="0.1277%" height="15" fill="rgb(234,20,35)"/><text x="50.0584%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="49.8084%" y="597" width="0.1277%" height="15" fill="rgb(254,45,19)"/><text x="50.0584%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="49.8084%" y="581" width="0.1277%" height="15" fill="rgb(219,14,44)"/><text x="50.0584%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="49.8084%" y="565" width="0.1277%" height="15" fill="rgb(217,220,26)"/><text x="50.0584%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="49.8084%" y="549" width="0.1277%" height="15" fill="rgb(213,158,28)"/><text x="50.0584%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="49.8084%" y="533" width="0.1277%" height="15" fill="rgb(252,51,52)"/><text x="50.0584%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="49.8084%" y="517" width="0.1277%" height="15" fill="rgb(246,89,16)"/><text x="50.0584%" y="527.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (13 samples, 1.66%)</title><rect x="48.5313%" y="677" width="1.6603%" height="15" fill="rgb(216,158,49)"/><text x="48.7813%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.51%)</title><rect x="49.6807%" y="661" width="0.5109%" height="15" fill="rgb(236,107,19)"/><text x="49.9307%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.26%)</title><rect x="49.9361%" y="645" width="0.2554%" height="15" fill="rgb(228,185,30)"/><text x="50.1861%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.26%)</title><rect x="49.9361%" y="629" width="0.2554%" height="15" fill="rgb(246,134,8)"/><text x="50.1861%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.26%)</title><rect x="49.9361%" y="613" width="0.2554%" height="15" fill="rgb(214,143,50)"/><text x="50.1861%" y="623.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.26%)</title><rect x="49.9361%" y="597" width="0.2554%" height="15" fill="rgb(228,75,8)"/><text x="50.1861%" y="607.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (135 samples, 17.24%)</title><rect x="33.0779%" y="773" width="17.2414%" height="15" fill="rgb(207,175,4)"/><text x="33.3279%" y="783.50">msql_srv::MysqlIntermediary..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (134 samples, 17.11%)</title><rect x="33.2056%" y="757" width="17.1137%" height="15" fill="rgb(205,108,24)"/><text x="33.4556%" y="767.50">&lt;decor_mem::Shim as msql_sr..</text></g><g><title>decor_mem::stats::get_qtype (16 samples, 2.04%)</title><rect x="48.2759%" y="741" width="2.0434%" height="15" fill="rgb(244,120,49)"/><text x="48.5259%" y="751.50">d..</text></g><g><title>sql_parser::parser::parse_statements (16 samples, 2.04%)</title><rect x="48.2759%" y="725" width="2.0434%" height="15" fill="rgb(223,47,38)"/><text x="48.5259%" y="735.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (16 samples, 2.04%)</title><rect x="48.2759%" y="709" width="2.0434%" height="15" fill="rgb(229,179,11)"/><text x="48.5259%" y="719.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (14 samples, 1.79%)</title><rect x="48.5313%" y="693" width="1.7880%" height="15" fill="rgb(231,122,1)"/><text x="48.7813%" y="703.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.13%)</title><rect x="50.1916%" y="677" width="0.1277%" height="15" fill="rgb(245,119,9)"/><text x="50.4416%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="50.1916%" y="661" width="0.1277%" height="15" fill="rgb(241,163,25)"/><text x="50.4416%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="50.1916%" y="645" width="0.1277%" height="15" fill="rgb(217,214,3)"/><text x="50.4416%" y="655.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.13%)</title><rect x="50.3193%" y="773" width="0.1277%" height="15" fill="rgb(240,86,28)"/><text x="50.5693%" y="783.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.13%)</title><rect x="50.4470%" y="773" width="0.1277%" height="15" fill="rgb(215,47,9)"/><text x="50.6970%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.13%)</title><rect x="50.5747%" y="773" width="0.1277%" height="15" fill="rgb(252,25,45)"/><text x="50.8247%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.13%)</title><rect x="50.7024%" y="773" width="0.1277%" height="15" fill="rgb(251,164,9)"/><text x="50.9524%" y="783.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.13%)</title><rect x="50.8301%" y="741" width="0.1277%" height="15" fill="rgb(233,194,0)"/><text x="51.0801%" y="751.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.13%)</title><rect x="50.8301%" y="725" width="0.1277%" height="15" fill="rgb(249,111,24)"/><text x="51.0801%" y="735.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.13%)</title><rect x="50.8301%" y="709" width="0.1277%" height="15" fill="rgb(250,223,3)"/><text x="51.0801%" y="719.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="50.8301%" y="693" width="0.1277%" height="15" fill="rgb(236,178,37)"/><text x="51.0801%" y="703.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.26%)</title><rect x="50.8301%" y="773" width="0.2554%" height="15" fill="rgb(241,158,50)"/><text x="51.0801%" y="783.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.26%)</title><rect x="50.8301%" y="757" width="0.2554%" height="15" fill="rgb(213,121,41)"/><text x="51.0801%" y="767.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.13%)</title><rect x="50.9579%" y="741" width="0.1277%" height="15" fill="rgb(240,92,3)"/><text x="51.2079%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="50.9579%" y="725" width="0.1277%" height="15" fill="rgb(205,123,3)"/><text x="51.2079%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="50.9579%" y="709" width="0.1277%" height="15" fill="rgb(205,97,47)"/><text x="51.2079%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="50.9579%" y="693" width="0.1277%" height="15" fill="rgb(247,152,14)"/><text x="51.2079%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="50.9579%" y="677" width="0.1277%" height="15" fill="rgb(248,195,53)"/><text x="51.2079%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="50.9579%" y="661" width="0.1277%" height="15" fill="rgb(226,201,16)"/><text x="51.2079%" y="671.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.13%)</title><rect x="50.9579%" y="645" width="0.1277%" height="15" fill="rgb(205,98,0)"/><text x="51.2079%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.13%)</title><rect x="50.9579%" y="629" width="0.1277%" height="15" fill="rgb(214,191,48)"/><text x="51.2079%" y="639.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="50.9579%" y="613" width="0.1277%" height="15" fill="rgb(237,112,39)"/><text x="51.2079%" y="623.50"></text></g><g><title>prep_new_page (1 samples, 0.13%)</title><rect x="50.9579%" y="597" width="0.1277%" height="15" fill="rgb(247,203,27)"/><text x="51.2079%" y="607.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.13%)</title><rect x="50.9579%" y="581" width="0.1277%" height="15" fill="rgb(235,124,28)"/><text x="51.2079%" y="591.50"></text></g><g><title>clear_page_erms (1 samples, 0.13%)</title><rect x="50.9579%" y="565" width="0.1277%" height="15" fill="rgb(208,207,46)"/><text x="51.2079%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.13%)</title><rect x="51.0856%" y="757" width="0.1277%" height="15" fill="rgb(234,176,4)"/><text x="51.3356%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.13%)</title><rect x="51.0856%" y="741" width="0.1277%" height="15" fill="rgb(230,133,28)"/><text x="51.3356%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.13%)</title><rect x="51.0856%" y="725" width="0.1277%" height="15" fill="rgb(211,137,40)"/><text x="51.3356%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.13%)</title><rect x="51.0856%" y="709" width="0.1277%" height="15" fill="rgb(254,35,13)"/><text x="51.3356%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.13%)</title><rect x="51.0856%" y="693" width="0.1277%" height="15" fill="rgb(225,49,51)"/><text x="51.3356%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="51.0856%" y="677" width="0.1277%" height="15" fill="rgb(251,10,15)"/><text x="51.3356%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (1 samples, 0.13%)</title><rect x="51.2133%" y="757" width="0.1277%" height="15" fill="rgb(228,207,15)"/><text x="51.4633%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.13%)</title><rect x="51.2133%" y="741" width="0.1277%" height="15" fill="rgb(241,99,19)"/><text x="51.4633%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.13%)</title><rect x="51.2133%" y="725" width="0.1277%" height="15" fill="rgb(207,104,49)"/><text x="51.4633%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.13%)</title><rect x="51.2133%" y="709" width="0.1277%" height="15" fill="rgb(234,99,18)"/><text x="51.4633%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.13%)</title><rect x="51.2133%" y="693" width="0.1277%" height="15" fill="rgb(213,191,49)"/><text x="51.4633%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="51.2133%" y="677" width="0.1277%" height="15" fill="rgb(210,226,19)"/><text x="51.4633%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="51.2133%" y="661" width="0.1277%" height="15" fill="rgb(229,97,18)"/><text x="51.4633%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="51.2133%" y="645" width="0.1277%" height="15" fill="rgb(211,167,15)"/><text x="51.4633%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="51.2133%" y="629" width="0.1277%" height="15" fill="rgb(210,169,34)"/><text x="51.4633%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="51.2133%" y="613" width="0.1277%" height="15" fill="rgb(241,121,31)"/><text x="51.4633%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="51.2133%" y="597" width="0.1277%" height="15" fill="rgb(232,40,11)"/><text x="51.4633%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="51.2133%" y="581" width="0.1277%" height="15" fill="rgb(205,86,26)"/><text x="51.4633%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="51.2133%" y="565" width="0.1277%" height="15" fill="rgb(231,126,28)"/><text x="51.4633%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="51.2133%" y="549" width="0.1277%" height="15" fill="rgb(219,221,18)"/><text x="51.4633%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="51.2133%" y="533" width="0.1277%" height="15" fill="rgb(211,40,0)"/><text x="51.4633%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="51.2133%" y="517" width="0.1277%" height="15" fill="rgb(239,85,43)"/><text x="51.4633%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.13%)</title><rect x="51.2133%" y="501" width="0.1277%" height="15" fill="rgb(231,55,21)"/><text x="51.4633%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.13%)</title><rect x="51.2133%" y="485" width="0.1277%" height="15" fill="rgb(225,184,43)"/><text x="51.4633%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="51.4687%" y="693" width="0.1277%" height="15" fill="rgb(251,158,41)"/><text x="51.7187%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (25 samples, 3.19%)</title><rect x="51.5964%" y="693" width="3.1928%" height="15" fill="rgb(234,159,37)"/><text x="51.8464%" y="703.50">sql..</text></g><g><title>sql_parser::parser::Parser::expected (25 samples, 3.19%)</title><rect x="51.5964%" y="677" width="3.1928%" height="15" fill="rgb(216,204,22)"/><text x="51.8464%" y="687.50">sql..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (24 samples, 3.07%)</title><rect x="51.7241%" y="661" width="3.0651%" height="15" fill="rgb(214,17,3)"/><text x="51.9741%" y="671.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 3.07%)</title><rect x="51.7241%" y="645" width="3.0651%" height="15" fill="rgb(212,111,17)"/><text x="51.9741%" y="655.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 3.07%)</title><rect x="51.7241%" y="629" width="3.0651%" height="15" fill="rgb(221,157,24)"/><text x="51.9741%" y="639.50">all..</text></g><g><title>alloc::slice::hack::to_vec (24 samples, 3.07%)</title><rect x="51.7241%" y="613" width="3.0651%" height="15" fill="rgb(252,16,13)"/><text x="51.9741%" y="623.50">all..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 3.07%)</title><rect x="51.7241%" y="597" width="3.0651%" height="15" fill="rgb(221,62,2)"/><text x="51.9741%" y="607.50">all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 3.07%)</title><rect x="51.7241%" y="581" width="3.0651%" height="15" fill="rgb(247,87,22)"/><text x="51.9741%" y="591.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (24 samples, 3.07%)</title><rect x="51.7241%" y="565" width="3.0651%" height="15" fill="rgb(215,73,9)"/><text x="51.9741%" y="575.50">all..</text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 3.07%)</title><rect x="51.7241%" y="549" width="3.0651%" height="15" fill="rgb(207,175,33)"/><text x="51.9741%" y="559.50">cor..</text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 3.07%)</title><rect x="51.7241%" y="533" width="3.0651%" height="15" fill="rgb(243,129,54)"/><text x="51.9741%" y="543.50">__m..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.13%)</title><rect x="54.7893%" y="693" width="0.1277%" height="15" fill="rgb(227,119,45)"/><text x="55.0393%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="54.7893%" y="677" width="0.1277%" height="15" fill="rgb(205,109,36)"/><text x="55.0393%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="55.0447%" y="629" width="0.1277%" height="15" fill="rgb(205,6,39)"/><text x="55.2947%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="55.0447%" y="677" width="0.2554%" height="15" fill="rgb(221,32,16)"/><text x="55.2947%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.26%)</title><rect x="55.0447%" y="661" width="0.2554%" height="15" fill="rgb(228,144,50)"/><text x="55.2947%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.26%)</title><rect x="55.0447%" y="645" width="0.2554%" height="15" fill="rgb(229,201,53)"/><text x="55.2947%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="55.1724%" y="629" width="0.1277%" height="15" fill="rgb(249,153,27)"/><text x="55.4224%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="55.1724%" y="613" width="0.1277%" height="15" fill="rgb(227,106,25)"/><text x="55.4224%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="55.1724%" y="597" width="0.1277%" height="15" fill="rgb(230,65,29)"/><text x="55.4224%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="55.1724%" y="581" width="0.1277%" height="15" fill="rgb(221,57,46)"/><text x="55.4224%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="55.1724%" y="565" width="0.1277%" height="15" fill="rgb(229,161,17)"/><text x="55.4224%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="55.1724%" y="549" width="0.1277%" height="15" fill="rgb(222,213,11)"/><text x="55.4224%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="55.1724%" y="533" width="0.1277%" height="15" fill="rgb(235,35,13)"/><text x="55.4224%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="55.1724%" y="517" width="0.1277%" height="15" fill="rgb(233,158,34)"/><text x="55.4224%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="55.1724%" y="501" width="0.1277%" height="15" fill="rgb(215,151,48)"/><text x="55.4224%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="55.1724%" y="485" width="0.1277%" height="15" fill="rgb(229,84,14)"/><text x="55.4224%" y="495.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (32 samples, 4.09%)</title><rect x="51.3410%" y="741" width="4.0868%" height="15" fill="rgb(229,68,14)"/><text x="51.5910%" y="751.50">sql_..</text></g><g><title>sql_parser::parser::Parser::check_descent (32 samples, 4.09%)</title><rect x="51.3410%" y="725" width="4.0868%" height="15" fill="rgb(243,106,26)"/><text x="51.5910%" y="735.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (32 samples, 4.09%)</title><rect x="51.3410%" y="709" width="4.0868%" height="15" fill="rgb(206,45,38)"/><text x="51.5910%" y="719.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_value (4 samples, 0.51%)</title><rect x="54.9170%" y="693" width="0.5109%" height="15" fill="rgb(226,6,15)"/><text x="55.1670%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="55.3001%" y="677" width="0.1277%" height="15" fill="rgb(232,22,54)"/><text x="55.5501%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (2 samples, 0.26%)</title><rect x="55.4278%" y="709" width="0.2554%" height="15" fill="rgb(229,222,32)"/><text x="55.6778%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (2 samples, 0.26%)</title><rect x="55.4278%" y="693" width="0.2554%" height="15" fill="rgb(228,62,29)"/><text x="55.6778%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="55.8110%" y="693" width="0.1277%" height="15" fill="rgb(251,103,34)"/><text x="56.0610%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="55.8110%" y="677" width="0.1277%" height="15" fill="rgb(233,12,30)"/><text x="56.0610%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="55.8110%" y="661" width="0.1277%" height="15" fill="rgb(238,52,0)"/><text x="56.0610%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="55.8110%" y="645" width="0.1277%" height="15" fill="rgb(223,98,5)"/><text x="56.0610%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="55.8110%" y="629" width="0.1277%" height="15" fill="rgb(228,75,37)"/><text x="56.0610%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="55.8110%" y="613" width="0.1277%" height="15" fill="rgb(205,115,49)"/><text x="56.0610%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="55.8110%" y="597" width="0.1277%" height="15" fill="rgb(250,154,43)"/><text x="56.0610%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="55.8110%" y="581" width="0.1277%" height="15" fill="rgb(226,43,29)"/><text x="56.0610%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="55.8110%" y="565" width="0.1277%" height="15" fill="rgb(249,228,39)"/><text x="56.0610%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="55.8110%" y="549" width="0.1277%" height="15" fill="rgb(216,79,43)"/><text x="56.0610%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="55.8110%" y="533" width="0.1277%" height="15" fill="rgb(228,95,12)"/><text x="56.0610%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="55.9387%" y="693" width="0.1277%" height="15" fill="rgb(249,221,15)"/><text x="56.1887%" y="703.50"></text></g><g><title>__rust_dealloc (1 samples, 0.13%)</title><rect x="56.0664%" y="693" width="0.1277%" height="15" fill="rgb(233,34,13)"/><text x="56.3164%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.13%)</title><rect x="56.1941%" y="693" width="0.1277%" height="15" fill="rgb(214,103,39)"/><text x="56.4441%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.13%)</title><rect x="56.1941%" y="677" width="0.1277%" height="15" fill="rgb(251,126,39)"/><text x="56.4441%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 1.02%)</title><rect x="55.4278%" y="725" width="1.0217%" height="15" fill="rgb(214,216,36)"/><text x="55.6778%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (6 samples, 0.77%)</title><rect x="55.6833%" y="709" width="0.7663%" height="15" fill="rgb(220,221,8)"/><text x="55.9333%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.13%)</title><rect x="56.3218%" y="693" width="0.1277%" height="15" fill="rgb(240,216,3)"/><text x="56.5718%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (44 samples, 5.62%)</title><rect x="51.0856%" y="773" width="5.6194%" height="15" fill="rgb(232,218,17)"/><text x="51.3356%" y="783.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (42 samples, 5.36%)</title><rect x="51.3410%" y="757" width="5.3640%" height="15" fill="rgb(229,163,45)"/><text x="51.5910%" y="767.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::parse_select (10 samples, 1.28%)</title><rect x="55.4278%" y="741" width="1.2771%" height="15" fill="rgb(231,110,42)"/><text x="55.6778%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (2 samples, 0.26%)</title><rect x="56.4496%" y="725" width="0.2554%" height="15" fill="rgb(208,170,48)"/><text x="56.6996%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_factor (2 samples, 0.26%)</title><rect x="56.4496%" y="709" width="0.2554%" height="15" fill="rgb(239,116,25)"/><text x="56.6996%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.26%)</title><rect x="56.4496%" y="693" width="0.2554%" height="15" fill="rgb(219,200,50)"/><text x="56.6996%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="56.5773%" y="677" width="0.1277%" height="15" fill="rgb(245,200,0)"/><text x="56.8273%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.38%)</title><rect x="56.7050%" y="677" width="0.3831%" height="15" fill="rgb(245,119,33)"/><text x="56.9550%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.38%)</title><rect x="56.7050%" y="661" width="0.3831%" height="15" fill="rgb(231,125,12)"/><text x="56.9550%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.38%)</title><rect x="56.7050%" y="645" width="0.3831%" height="15" fill="rgb(216,96,41)"/><text x="56.9550%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.38%)</title><rect x="56.7050%" y="629" width="0.3831%" height="15" fill="rgb(248,43,45)"/><text x="56.9550%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.38%)</title><rect x="56.7050%" y="613" width="0.3831%" height="15" fill="rgb(217,222,7)"/><text x="56.9550%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.38%)</title><rect x="56.7050%" y="597" width="0.3831%" height="15" fill="rgb(233,28,6)"/><text x="56.9550%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.38%)</title><rect x="56.7050%" y="581" width="0.3831%" height="15" fill="rgb(231,218,15)"/><text x="56.9550%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.38%)</title><rect x="56.7050%" y="565" width="0.3831%" height="15" fill="rgb(226,171,48)"/><text x="56.9550%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.38%)</title><rect x="56.7050%" y="549" width="0.3831%" height="15" fill="rgb(235,201,9)"/><text x="56.9550%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.38%)</title><rect x="56.7050%" y="533" width="0.3831%" height="15" fill="rgb(217,80,15)"/><text x="56.9550%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.38%)</title><rect x="56.7050%" y="517" width="0.3831%" height="15" fill="rgb(219,152,8)"/><text x="56.9550%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.38%)</title><rect x="56.7050%" y="501" width="0.3831%" height="15" fill="rgb(243,107,38)"/><text x="56.9550%" y="511.50"></text></g><g><title>_int_malloc (3 samples, 0.38%)</title><rect x="56.7050%" y="485" width="0.3831%" height="15" fill="rgb(231,17,5)"/><text x="56.9550%" y="495.50"></text></g><g><title>sysmalloc (1 samples, 0.13%)</title><rect x="56.9604%" y="469" width="0.1277%" height="15" fill="rgb(209,25,54)"/><text x="57.2104%" y="479.50"></text></g><g><title>__GI___mprotect (1 samples, 0.13%)</title><rect x="56.9604%" y="453" width="0.1277%" height="15" fill="rgb(219,0,2)"/><text x="57.2104%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="56.9604%" y="437" width="0.1277%" height="15" fill="rgb(246,9,5)"/><text x="57.2104%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="56.9604%" y="421" width="0.1277%" height="15" fill="rgb(226,159,4)"/><text x="57.2104%" y="431.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.13%)</title><rect x="56.9604%" y="405" width="0.1277%" height="15" fill="rgb(219,175,34)"/><text x="57.2104%" y="415.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.13%)</title><rect x="56.9604%" y="389" width="0.1277%" height="15" fill="rgb(236,10,46)"/><text x="57.2104%" y="399.50"></text></g><g><title>mprotect_fixup (1 samples, 0.13%)</title><rect x="56.9604%" y="373" width="0.1277%" height="15" fill="rgb(240,211,16)"/><text x="57.2104%" y="383.50"></text></g><g><title>perf_event_mmap (1 samples, 0.13%)</title><rect x="56.9604%" y="357" width="0.1277%" height="15" fill="rgb(205,3,43)"/><text x="57.2104%" y="367.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.13%)</title><rect x="56.9604%" y="341" width="0.1277%" height="15" fill="rgb(245,7,22)"/><text x="57.2104%" y="351.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.13%)</title><rect x="56.9604%" y="325" width="0.1277%" height="15" fill="rgb(239,132,32)"/><text x="57.2104%" y="335.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.51%)</title><rect x="56.7050%" y="757" width="0.5109%" height="15" fill="rgb(228,202,34)"/><text x="56.9550%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.51%)</title><rect x="56.7050%" y="741" width="0.5109%" height="15" fill="rgb(254,200,22)"/><text x="56.9550%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.51%)</title><rect x="56.7050%" y="725" width="0.5109%" height="15" fill="rgb(219,10,39)"/><text x="56.9550%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.51%)</title><rect x="56.7050%" y="709" width="0.5109%" height="15" fill="rgb(226,210,39)"/><text x="56.9550%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.51%)</title><rect x="56.7050%" y="693" width="0.5109%" height="15" fill="rgb(208,219,16)"/><text x="56.9550%" y="703.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.13%)</title><rect x="57.0881%" y="677" width="0.1277%" height="15" fill="rgb(216,158,51)"/><text x="57.3381%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.13%)</title><rect x="57.0881%" y="661" width="0.1277%" height="15" fill="rgb(233,14,44)"/><text x="57.3381%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="57.0881%" y="645" width="0.1277%" height="15" fill="rgb(237,97,39)"/><text x="57.3381%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="57.0881%" y="629" width="0.1277%" height="15" fill="rgb(218,198,43)"/><text x="57.3381%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="57.0881%" y="613" width="0.1277%" height="15" fill="rgb(231,104,20)"/><text x="57.3381%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.13%)</title><rect x="57.0881%" y="597" width="0.1277%" height="15" fill="rgb(254,36,13)"/><text x="57.3381%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="57.0881%" y="581" width="0.1277%" height="15" fill="rgb(248,14,50)"/><text x="57.3381%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="57.0881%" y="565" width="0.1277%" height="15" fill="rgb(217,107,29)"/><text x="57.3381%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="57.0881%" y="549" width="0.1277%" height="15" fill="rgb(251,169,33)"/><text x="57.3381%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.13%)</title><rect x="57.0881%" y="533" width="0.1277%" height="15" fill="rgb(217,108,32)"/><text x="57.3381%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="57.0881%" y="517" width="0.1277%" height="15" fill="rgb(219,66,42)"/><text x="57.3381%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.13%)</title><rect x="57.0881%" y="501" width="0.1277%" height="15" fill="rgb(206,180,7)"/><text x="57.3381%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="57.0881%" y="485" width="0.1277%" height="15" fill="rgb(208,226,31)"/><text x="57.3381%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="57.0881%" y="469" width="0.1277%" height="15" fill="rgb(218,26,49)"/><text x="57.3381%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.13%)</title><rect x="57.0881%" y="453" width="0.1277%" height="15" fill="rgb(233,197,48)"/><text x="57.3381%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="57.0881%" y="437" width="0.1277%" height="15" fill="rgb(252,181,51)"/><text x="57.3381%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.13%)</title><rect x="57.0881%" y="421" width="0.1277%" height="15" fill="rgb(253,90,19)"/><text x="57.3381%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="57.0881%" y="405" width="0.1277%" height="15" fill="rgb(215,171,30)"/><text x="57.3381%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="57.0881%" y="389" width="0.1277%" height="15" fill="rgb(214,222,9)"/><text x="57.3381%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="57.0881%" y="373" width="0.1277%" height="15" fill="rgb(223,3,22)"/><text x="57.3381%" y="383.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="57.2158%" y="661" width="0.1277%" height="15" fill="rgb(225,196,46)"/><text x="57.4658%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="57.3436%" y="629" width="0.1277%" height="15" fill="rgb(209,110,37)"/><text x="57.5936%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="57.3436%" y="613" width="0.1277%" height="15" fill="rgb(249,89,12)"/><text x="57.5936%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.13%)</title><rect x="57.3436%" y="597" width="0.1277%" height="15" fill="rgb(226,27,33)"/><text x="57.5936%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="57.3436%" y="581" width="0.1277%" height="15" fill="rgb(213,82,22)"/><text x="57.5936%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="57.3436%" y="565" width="0.1277%" height="15" fill="rgb(248,140,0)"/><text x="57.5936%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="57.3436%" y="549" width="0.1277%" height="15" fill="rgb(228,106,3)"/><text x="57.5936%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.13%)</title><rect x="57.3436%" y="533" width="0.1277%" height="15" fill="rgb(209,23,37)"/><text x="57.5936%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="57.3436%" y="517" width="0.1277%" height="15" fill="rgb(241,93,50)"/><text x="57.5936%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.13%)</title><rect x="57.3436%" y="501" width="0.1277%" height="15" fill="rgb(253,46,43)"/><text x="57.5936%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.13%)</title><rect x="57.3436%" y="485" width="0.1277%" height="15" fill="rgb(226,206,43)"/><text x="57.5936%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="57.3436%" y="469" width="0.1277%" height="15" fill="rgb(217,54,7)"/><text x="57.5936%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.13%)</title><rect x="57.3436%" y="453" width="0.1277%" height="15" fill="rgb(223,5,52)"/><text x="57.5936%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="57.3436%" y="437" width="0.1277%" height="15" fill="rgb(206,52,46)"/><text x="57.5936%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.13%)</title><rect x="57.3436%" y="421" width="0.1277%" height="15" fill="rgb(253,136,11)"/><text x="57.5936%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="57.3436%" y="405" width="0.1277%" height="15" fill="rgb(208,106,33)"/><text x="57.5936%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="57.3436%" y="389" width="0.1277%" height="15" fill="rgb(206,54,4)"/><text x="57.5936%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="57.3436%" y="373" width="0.1277%" height="15" fill="rgb(213,3,15)"/><text x="57.5936%" y="383.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.13%)</title><rect x="57.3436%" y="357" width="0.1277%" height="15" fill="rgb(252,211,39)"/><text x="57.5936%" y="367.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (7 samples, 0.89%)</title><rect x="56.7050%" y="773" width="0.8940%" height="15" fill="rgb(223,6,36)"/><text x="56.9550%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (3 samples, 0.38%)</title><rect x="57.2158%" y="757" width="0.3831%" height="15" fill="rgb(252,169,45)"/><text x="57.4658%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.38%)</title><rect x="57.2158%" y="741" width="0.3831%" height="15" fill="rgb(212,48,26)"/><text x="57.4658%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.38%)</title><rect x="57.2158%" y="725" width="0.3831%" height="15" fill="rgb(251,102,48)"/><text x="57.4658%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (3 samples, 0.38%)</title><rect x="57.2158%" y="709" width="0.3831%" height="15" fill="rgb(243,208,16)"/><text x="57.4658%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (3 samples, 0.38%)</title><rect x="57.2158%" y="693" width="0.3831%" height="15" fill="rgb(219,96,24)"/><text x="57.4658%" y="703.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.38%)</title><rect x="57.2158%" y="677" width="0.3831%" height="15" fill="rgb(219,33,29)"/><text x="57.4658%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.26%)</title><rect x="57.3436%" y="661" width="0.2554%" height="15" fill="rgb(223,176,5)"/><text x="57.5936%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.26%)</title><rect x="57.3436%" y="645" width="0.2554%" height="15" fill="rgb(228,140,14)"/><text x="57.5936%" y="655.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="57.4713%" y="629" width="0.1277%" height="15" fill="rgb(217,179,31)"/><text x="57.7213%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.13%)</title><rect x="57.4713%" y="613" width="0.1277%" height="15" fill="rgb(230,9,30)"/><text x="57.7213%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="57.4713%" y="597" width="0.1277%" height="15" fill="rgb(230,136,20)"/><text x="57.7213%" y="607.50"></text></g><g><title>&lt;sql_parser::tokenizer::Word as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="57.4713%" y="581" width="0.1277%" height="15" fill="rgb(215,210,22)"/><text x="57.7213%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.13%)</title><rect x="57.4713%" y="565" width="0.1277%" height="15" fill="rgb(218,43,5)"/><text x="57.7213%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="57.4713%" y="549" width="0.1277%" height="15" fill="rgb(216,11,5)"/><text x="57.7213%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="57.4713%" y="533" width="0.1277%" height="15" fill="rgb(209,82,29)"/><text x="57.7213%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="57.4713%" y="517" width="0.1277%" height="15" fill="rgb(244,115,12)"/><text x="57.7213%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.13%)</title><rect x="57.4713%" y="501" width="0.1277%" height="15" fill="rgb(222,82,18)"/><text x="57.7213%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="57.4713%" y="485" width="0.1277%" height="15" fill="rgb(249,227,8)"/><text x="57.7213%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="57.4713%" y="469" width="0.1277%" height="15" fill="rgb(253,141,45)"/><text x="57.7213%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="57.4713%" y="453" width="0.1277%" height="15" fill="rgb(234,184,4)"/><text x="57.7213%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="57.4713%" y="437" width="0.1277%" height="15" fill="rgb(218,194,23)"/><text x="57.7213%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="57.4713%" y="421" width="0.1277%" height="15" fill="rgb(235,66,41)"/><text x="57.7213%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="57.5990%" y="693" width="0.1277%" height="15" fill="rgb(245,217,1)"/><text x="57.8490%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.13%)</title><rect x="57.7267%" y="693" width="0.1277%" height="15" fill="rgb(229,91,1)"/><text x="57.9767%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (3 samples, 0.38%)</title><rect x="57.5990%" y="773" width="0.3831%" height="15" fill="rgb(207,101,30)"/><text x="57.8490%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.38%)</title><rect x="57.5990%" y="757" width="0.3831%" height="15" fill="rgb(223,82,49)"/><text x="57.8490%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (3 samples, 0.38%)</title><rect x="57.5990%" y="741" width="0.3831%" height="15" fill="rgb(218,167,17)"/><text x="57.8490%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.38%)</title><rect x="57.5990%" y="725" width="0.3831%" height="15" fill="rgb(208,103,14)"/><text x="57.8490%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.38%)</title><rect x="57.5990%" y="709" width="0.3831%" height="15" fill="rgb(238,20,8)"/><text x="57.8490%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.13%)</title><rect x="57.8544%" y="693" width="0.1277%" height="15" fill="rgb(218,80,54)"/><text x="58.1044%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.13%)</title><rect x="57.9821%" y="709" width="0.1277%" height="15" fill="rgb(240,144,17)"/><text x="58.2321%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.26%)</title><rect x="57.9821%" y="741" width="0.2554%" height="15" fill="rgb(245,27,50)"/><text x="58.2321%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.26%)</title><rect x="57.9821%" y="725" width="0.2554%" height="15" fill="rgb(251,51,7)"/><text x="58.2321%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.13%)</title><rect x="58.1098%" y="709" width="0.1277%" height="15" fill="rgb(245,217,29)"/><text x="58.3598%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="58.1098%" y="693" width="0.1277%" height="15" fill="rgb(221,176,29)"/><text x="58.3598%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="58.1098%" y="677" width="0.1277%" height="15" fill="rgb(212,180,24)"/><text x="58.3598%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="58.1098%" y="661" width="0.1277%" height="15" fill="rgb(254,24,2)"/><text x="58.3598%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="58.1098%" y="645" width="0.1277%" height="15" fill="rgb(230,100,2)"/><text x="58.3598%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="58.1098%" y="629" width="0.1277%" height="15" fill="rgb(219,142,25)"/><text x="58.3598%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="58.1098%" y="613" width="0.1277%" height="15" fill="rgb(240,73,43)"/><text x="58.3598%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="58.1098%" y="597" width="0.1277%" height="15" fill="rgb(214,114,15)"/><text x="58.3598%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="58.1098%" y="581" width="0.1277%" height="15" fill="rgb(207,130,4)"/><text x="58.3598%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="58.1098%" y="565" width="0.1277%" height="15" fill="rgb(221,25,40)"/><text x="58.3598%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="58.1098%" y="549" width="0.1277%" height="15" fill="rgb(241,184,7)"/><text x="58.3598%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="58.1098%" y="533" width="0.1277%" height="15" fill="rgb(235,159,4)"/><text x="58.3598%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="58.1098%" y="517" width="0.1277%" height="15" fill="rgb(214,87,48)"/><text x="58.3598%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="58.1098%" y="501" width="0.1277%" height="15" fill="rgb(246,198,24)"/><text x="58.3598%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::expect_token (1 samples, 0.13%)</title><rect x="58.3653%" y="725" width="0.1277%" height="15" fill="rgb(209,66,40)"/><text x="58.6153%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.26%)</title><rect x="58.4930%" y="725" width="0.2554%" height="15" fill="rgb(233,147,39)"/><text x="58.7430%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.13%)</title><rect x="58.6207%" y="709" width="0.1277%" height="15" fill="rgb(231,145,52)"/><text x="58.8707%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.13%)</title><rect x="58.6207%" y="693" width="0.1277%" height="15" fill="rgb(206,20,26)"/><text x="58.8707%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="58.6207%" y="677" width="0.1277%" height="15" fill="rgb(238,220,4)"/><text x="58.8707%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="58.7484%" y="709" width="0.1277%" height="15" fill="rgb(252,195,42)"/><text x="58.9984%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="58.7484%" y="693" width="0.1277%" height="15" fill="rgb(209,10,6)"/><text x="58.9984%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="58.7484%" y="677" width="0.1277%" height="15" fill="rgb(229,3,52)"/><text x="58.9984%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="58.7484%" y="661" width="0.1277%" height="15" fill="rgb(253,49,37)"/><text x="58.9984%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="58.7484%" y="645" width="0.1277%" height="15" fill="rgb(240,103,49)"/><text x="58.9984%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="58.7484%" y="629" width="0.1277%" height="15" fill="rgb(250,182,30)"/><text x="58.9984%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="58.7484%" y="613" width="0.1277%" height="15" fill="rgb(248,8,30)"/><text x="58.9984%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="58.7484%" y="597" width="0.1277%" height="15" fill="rgb(237,120,30)"/><text x="58.9984%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="58.7484%" y="581" width="0.1277%" height="15" fill="rgb(221,146,34)"/><text x="58.9984%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="58.7484%" y="565" width="0.1277%" height="15" fill="rgb(242,55,13)"/><text x="58.9984%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="58.7484%" y="549" width="0.1277%" height="15" fill="rgb(242,112,31)"/><text x="58.9984%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="58.7484%" y="533" width="0.1277%" height="15" fill="rgb(249,192,27)"/><text x="58.9984%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="58.7484%" y="517" width="0.1277%" height="15" fill="rgb(208,204,44)"/><text x="58.9984%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.38%)</title><rect x="58.7484%" y="725" width="0.3831%" height="15" fill="rgb(208,93,54)"/><text x="58.9984%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.26%)</title><rect x="58.8761%" y="709" width="0.2554%" height="15" fill="rgb(242,1,31)"/><text x="59.1261%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.13%)</title><rect x="59.2593%" y="709" width="0.1277%" height="15" fill="rgb(241,83,25)"/><text x="59.5093%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.13%)</title><rect x="59.2593%" y="693" width="0.1277%" height="15" fill="rgb(205,169,50)"/><text x="59.5093%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="59.2593%" y="677" width="0.1277%" height="15" fill="rgb(239,186,37)"/><text x="59.5093%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.13%)</title><rect x="59.3870%" y="709" width="0.1277%" height="15" fill="rgb(205,221,10)"/><text x="59.6370%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.13%)</title><rect x="59.3870%" y="693" width="0.1277%" height="15" fill="rgb(218,196,15)"/><text x="59.6370%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.13%)</title><rect x="59.5147%" y="693" width="0.1277%" height="15" fill="rgb(218,196,35)"/><text x="59.7647%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.13%)</title><rect x="59.5147%" y="677" width="0.1277%" height="15" fill="rgb(233,63,24)"/><text x="59.7647%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.13%)</title><rect x="59.5147%" y="661" width="0.1277%" height="15" fill="rgb(225,8,4)"/><text x="59.7647%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.13%)</title><rect x="59.5147%" y="645" width="0.1277%" height="15" fill="rgb(234,105,35)"/><text x="59.7647%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table::{{closure}} (1 samples, 0.13%)</title><rect x="59.5147%" y="629" width="0.1277%" height="15" fill="rgb(236,21,32)"/><text x="59.7647%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (1 samples, 0.13%)</title><rect x="59.5147%" y="613" width="0.1277%" height="15" fill="rgb(228,109,6)"/><text x="59.7647%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_optional_alias (2 samples, 0.26%)</title><rect x="59.5147%" y="709" width="0.2554%" height="15" fill="rgb(229,215,31)"/><text x="59.7647%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.13%)</title><rect x="59.6424%" y="693" width="0.1277%" height="15" fill="rgb(221,52,54)"/><text x="59.8924%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="59.6424%" y="677" width="0.1277%" height="15" fill="rgb(252,129,43)"/><text x="59.8924%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (16 samples, 2.04%)</title><rect x="57.9821%" y="773" width="2.0434%" height="15" fill="rgb(248,183,27)"/><text x="58.2321%" y="783.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 2.04%)</title><rect x="57.9821%" y="757" width="2.0434%" height="15" fill="rgb(250,0,22)"/><text x="58.2321%" y="767.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (14 samples, 1.79%)</title><rect x="58.2375%" y="741" width="1.7880%" height="15" fill="rgb(213,166,10)"/><text x="58.4875%" y="751.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_select (7 samples, 0.89%)</title><rect x="59.1315%" y="725" width="0.8940%" height="15" fill="rgb(207,163,36)"/><text x="59.3815%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (2 samples, 0.26%)</title><rect x="59.7701%" y="709" width="0.2554%" height="15" fill="rgb(208,122,22)"/><text x="60.0201%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.26%)</title><rect x="59.7701%" y="693" width="0.2554%" height="15" fill="rgb(207,104,49)"/><text x="60.0201%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.13%)</title><rect x="60.2810%" y="725" width="0.1277%" height="15" fill="rgb(248,211,50)"/><text x="60.5310%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="60.2810%" y="709" width="0.1277%" height="15" fill="rgb(217,13,45)"/><text x="60.5310%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.64%)</title><rect x="60.0255%" y="741" width="0.6386%" height="15" fill="rgb(211,216,49)"/><text x="60.2755%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.26%)</title><rect x="60.4087%" y="725" width="0.2554%" height="15" fill="rgb(221,58,53)"/><text x="60.6587%" y="735.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="60.5364%" y="709" width="0.1277%" height="15" fill="rgb(220,112,41)"/><text x="60.7864%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="60.5364%" y="693" width="0.1277%" height="15" fill="rgb(236,38,28)"/><text x="60.7864%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="60.5364%" y="677" width="0.1277%" height="15" fill="rgb(227,195,22)"/><text x="60.7864%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="60.5364%" y="661" width="0.1277%" height="15" fill="rgb(214,55,33)"/><text x="60.7864%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="60.5364%" y="645" width="0.1277%" height="15" fill="rgb(248,80,13)"/><text x="60.7864%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="60.5364%" y="629" width="0.1277%" height="15" fill="rgb(238,52,6)"/><text x="60.7864%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="60.5364%" y="613" width="0.1277%" height="15" fill="rgb(224,198,47)"/><text x="60.7864%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="60.5364%" y="597" width="0.1277%" height="15" fill="rgb(233,171,20)"/><text x="60.7864%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="60.5364%" y="581" width="0.1277%" height="15" fill="rgb(241,30,25)"/><text x="60.7864%" y="591.50"></text></g><g><title>sql_parser::parser::parse_statements (6 samples, 0.77%)</title><rect x="60.0255%" y="773" width="0.7663%" height="15" fill="rgb(207,171,38)"/><text x="60.2755%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (6 samples, 0.77%)</title><rect x="60.0255%" y="757" width="0.7663%" height="15" fill="rgb(234,70,1)"/><text x="60.2755%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.13%)</title><rect x="60.6641%" y="741" width="0.1277%" height="15" fill="rgb(232,178,18)"/><text x="60.9141%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.13%)</title><rect x="60.6641%" y="725" width="0.1277%" height="15" fill="rgb(241,78,40)"/><text x="60.9141%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_optional_precision (1 samples, 0.13%)</title><rect x="60.6641%" y="709" width="0.1277%" height="15" fill="rgb(222,35,25)"/><text x="60.9141%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_literal_uint (1 samples, 0.13%)</title><rect x="60.6641%" y="693" width="0.1277%" height="15" fill="rgb(207,92,16)"/><text x="60.9141%" y="703.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (1 samples, 0.13%)</title><rect x="60.6641%" y="677" width="0.1277%" height="15" fill="rgb(216,59,51)"/><text x="60.9141%" y="687.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.13%)</title><rect x="60.6641%" y="661" width="0.1277%" height="15" fill="rgb(213,80,28)"/><text x="60.9141%" y="671.50"></text></g><g><title>start_thread (1 samples, 0.13%)</title><rect x="60.7918%" y="773" width="0.1277%" height="15" fill="rgb(220,93,7)"/><text x="61.0418%" y="783.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.13%)</title><rect x="60.7918%" y="757" width="0.1277%" height="15" fill="rgb(225,24,44)"/><text x="61.0418%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.13%)</title><rect x="60.7918%" y="741" width="0.1277%" height="15" fill="rgb(243,74,40)"/><text x="61.0418%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.13%)</title><rect x="60.7918%" y="725" width="0.1277%" height="15" fill="rgb(228,39,7)"/><text x="61.0418%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.13%)</title><rect x="60.7918%" y="709" width="0.1277%" height="15" fill="rgb(227,79,8)"/><text x="61.0418%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.13%)</title><rect x="60.7918%" y="693" width="0.1277%" height="15" fill="rgb(236,58,11)"/><text x="61.0418%" y="703.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (1 samples, 0.13%)</title><rect x="60.7918%" y="677" width="0.1277%" height="15" fill="rgb(249,63,35)"/><text x="61.0418%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.13%)</title><rect x="60.7918%" y="661" width="0.1277%" height="15" fill="rgb(252,114,16)"/><text x="61.0418%" y="671.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.13%)</title><rect x="60.7918%" y="645" width="0.1277%" height="15" fill="rgb(254,151,24)"/><text x="61.0418%" y="655.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (1 samples, 0.13%)</title><rect x="60.7918%" y="629" width="0.1277%" height="15" fill="rgb(253,54,39)"/><text x="61.0418%" y="639.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (1 samples, 0.13%)</title><rect x="60.7918%" y="613" width="0.1277%" height="15" fill="rgb(243,25,45)"/><text x="61.0418%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="60.7918%" y="597" width="0.1277%" height="15" fill="rgb(234,134,9)"/><text x="61.0418%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="60.7918%" y="581" width="0.1277%" height="15" fill="rgb(227,166,31)"/><text x="61.0418%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.13%)</title><rect x="60.7918%" y="565" width="0.1277%" height="15" fill="rgb(245,143,41)"/><text x="61.0418%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.13%)</title><rect x="60.7918%" y="549" width="0.1277%" height="15" fill="rgb(238,181,32)"/><text x="61.0418%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.13%)</title><rect x="60.7918%" y="533" width="0.1277%" height="15" fill="rgb(224,113,18)"/><text x="61.0418%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.13%)</title><rect x="60.7918%" y="517" width="0.1277%" height="15" fill="rgb(240,229,28)"/><text x="61.0418%" y="527.50"></text></g><g><title>do_filp_open (1 samples, 0.13%)</title><rect x="60.9195%" y="485" width="0.1277%" height="15" fill="rgb(250,185,3)"/><text x="61.1695%" y="495.50"></text></g><g><title>path_openat (1 samples, 0.13%)</title><rect x="60.9195%" y="469" width="0.1277%" height="15" fill="rgb(212,59,25)"/><text x="61.1695%" y="479.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.13%)</title><rect x="60.9195%" y="453" width="0.1277%" height="15" fill="rgb(221,87,20)"/><text x="61.1695%" y="463.50"></text></g><g><title>__d_lookup (1 samples, 0.13%)</title><rect x="60.9195%" y="437" width="0.1277%" height="15" fill="rgb(213,74,28)"/><text x="61.1695%" y="447.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="60.9195%" y="421" width="0.1277%" height="15" fill="rgb(224,132,34)"/><text x="61.1695%" y="431.50"></text></g><g><title>do_syscall_64 (2 samples, 0.26%)</title><rect x="60.9195%" y="533" width="0.2554%" height="15" fill="rgb(222,101,24)"/><text x="61.1695%" y="543.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.26%)</title><rect x="60.9195%" y="517" width="0.2554%" height="15" fill="rgb(254,142,4)"/><text x="61.1695%" y="527.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.26%)</title><rect x="60.9195%" y="501" width="0.2554%" height="15" fill="rgb(230,229,49)"/><text x="61.1695%" y="511.50"></text></g><g><title>getname_flags.part.0 (1 samples, 0.13%)</title><rect x="61.0473%" y="485" width="0.1277%" height="15" fill="rgb(238,70,47)"/><text x="61.2973%" y="495.50"></text></g><g><title>strncpy_from_user (1 samples, 0.13%)</title><rect x="61.0473%" y="469" width="0.1277%" height="15" fill="rgb(231,160,17)"/><text x="61.2973%" y="479.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.38%)</title><rect x="60.9195%" y="645" width="0.3831%" height="15" fill="rgb(218,68,53)"/><text x="61.1695%" y="655.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.38%)</title><rect x="60.9195%" y="629" width="0.3831%" height="15" fill="rgb(236,111,10)"/><text x="61.1695%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="60.9195%" y="613" width="0.3831%" height="15" fill="rgb(224,34,41)"/><text x="61.1695%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="60.9195%" y="597" width="0.3831%" height="15" fill="rgb(241,118,19)"/><text x="61.1695%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.38%)</title><rect x="60.9195%" y="581" width="0.3831%" height="15" fill="rgb(238,129,25)"/><text x="61.1695%" y="591.50"></text></g><g><title>__GI___openat (3 samples, 0.38%)</title><rect x="60.9195%" y="565" width="0.3831%" height="15" fill="rgb(238,22,31)"/><text x="61.1695%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.38%)</title><rect x="60.9195%" y="549" width="0.3831%" height="15" fill="rgb(222,174,48)"/><text x="61.1695%" y="559.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="61.1750%" y="533" width="0.1277%" height="15" fill="rgb(206,152,40)"/><text x="61.4250%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="61.3027%" y="613" width="0.1277%" height="15" fill="rgb(218,99,54)"/><text x="61.5527%" y="623.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.64%)</title><rect x="60.9195%" y="773" width="0.6386%" height="15" fill="rgb(220,174,26)"/><text x="61.1695%" y="783.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.64%)</title><rect x="60.9195%" y="757" width="0.6386%" height="15" fill="rgb(245,116,9)"/><text x="61.1695%" y="767.50"></text></g><g><title>std::panicking::try (5 samples, 0.64%)</title><rect x="60.9195%" y="741" width="0.6386%" height="15" fill="rgb(209,72,35)"/><text x="61.1695%" y="751.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.64%)</title><rect x="60.9195%" y="725" width="0.6386%" height="15" fill="rgb(226,126,21)"/><text x="61.1695%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.64%)</title><rect x="60.9195%" y="709" width="0.6386%" height="15" fill="rgb(227,192,1)"/><text x="61.1695%" y="719.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (5 samples, 0.64%)</title><rect x="60.9195%" y="693" width="0.6386%" height="15" fill="rgb(237,180,29)"/><text x="61.1695%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.64%)</title><rect x="60.9195%" y="677" width="0.6386%" height="15" fill="rgb(230,197,35)"/><text x="61.1695%" y="687.50"></text></g><g><title>lobsters_microbenchmarks::main (5 samples, 0.64%)</title><rect x="60.9195%" y="661" width="0.6386%" height="15" fill="rgb(246,193,31)"/><text x="61.1695%" y="671.50"></text></g><g><title>mysql::conn::queryable::Queryable::query (2 samples, 0.26%)</title><rect x="61.3027%" y="645" width="0.2554%" height="15" fill="rgb(241,36,4)"/><text x="61.5527%" y="655.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.26%)</title><rect x="61.3027%" y="629" width="0.2554%" height="15" fill="rgb(241,130,17)"/><text x="61.5527%" y="639.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.13%)</title><rect x="61.4304%" y="613" width="0.1277%" height="15" fill="rgb(206,137,32)"/><text x="61.6804%" y="623.50"></text></g><g><title>[unknown] (443 samples, 56.58%)</title><rect x="5.1086%" y="789" width="56.5773%" height="15" fill="rgb(237,228,51)"/><text x="5.3586%" y="799.50">[unknown]</text></g><g><title>unicode_normalization::decompose::Decompositions&lt;I&gt;::push_back (1 samples, 0.13%)</title><rect x="61.5581%" y="773" width="0.1277%" height="15" fill="rgb(243,6,42)"/><text x="61.8081%" y="783.50"></text></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.13%)</title><rect x="61.6858%" y="757" width="0.1277%" height="15" fill="rgb(251,74,28)"/><text x="61.9358%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="61.6858%" y="741" width="0.1277%" height="15" fill="rgb(218,20,49)"/><text x="61.9358%" y="751.50"></text></g><g><title>__GI_madvise (1 samples, 0.13%)</title><rect x="61.6858%" y="725" width="0.1277%" height="15" fill="rgb(238,28,14)"/><text x="61.9358%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="61.6858%" y="709" width="0.1277%" height="15" fill="rgb(229,40,46)"/><text x="61.9358%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="61.6858%" y="693" width="0.1277%" height="15" fill="rgb(244,195,20)"/><text x="61.9358%" y="703.50"></text></g><g><title>__x64_sys_madvise (1 samples, 0.13%)</title><rect x="61.6858%" y="677" width="0.1277%" height="15" fill="rgb(253,56,35)"/><text x="61.9358%" y="687.50"></text></g><g><title>do_madvise (1 samples, 0.13%)</title><rect x="61.6858%" y="661" width="0.1277%" height="15" fill="rgb(210,149,44)"/><text x="61.9358%" y="671.50"></text></g><g><title>zap_page_range (1 samples, 0.13%)</title><rect x="61.6858%" y="645" width="0.1277%" height="15" fill="rgb(240,135,12)"/><text x="61.9358%" y="655.50"></text></g><g><title>unmap_page_range (1 samples, 0.13%)</title><rect x="61.6858%" y="629" width="0.1277%" height="15" fill="rgb(251,24,50)"/><text x="61.9358%" y="639.50"></text></g><g><title>page_remove_rmap.part.0 (1 samples, 0.13%)</title><rect x="61.6858%" y="613" width="0.1277%" height="15" fill="rgb(243,200,47)"/><text x="61.9358%" y="623.50"></text></g><g><title>__dec_node_state (1 samples, 0.13%)</title><rect x="61.6858%" y="597" width="0.1277%" height="15" fill="rgb(224,166,26)"/><text x="61.9358%" y="607.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.13%)</title><rect x="61.9413%" y="645" width="0.1277%" height="15" fill="rgb(233,0,47)"/><text x="62.1913%" y="655.50"></text></g><g><title>decor_mem::Shim::create_schema (1 samples, 0.13%)</title><rect x="61.9413%" y="629" width="0.1277%" height="15" fill="rgb(253,80,5)"/><text x="62.1913%" y="639.50"></text></g><g><title>decor_mem::helpers::process_schema_stmt (1 samples, 0.13%)</title><rect x="61.9413%" y="613" width="0.1277%" height="15" fill="rgb(214,133,25)"/><text x="62.1913%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.13%)</title><rect x="61.9413%" y="597" width="0.1277%" height="15" fill="rgb(209,27,14)"/><text x="62.1913%" y="607.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.13%)</title><rect x="61.9413%" y="581" width="0.1277%" height="15" fill="rgb(219,102,51)"/><text x="62.1913%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.13%)</title><rect x="61.9413%" y="565" width="0.1277%" height="15" fill="rgb(237,18,16)"/><text x="62.1913%" y="575.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (1 samples, 0.13%)</title><rect x="62.0690%" y="629" width="0.1277%" height="15" fill="rgb(241,85,17)"/><text x="62.3190%" y="639.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (1 samples, 0.13%)</title><rect x="62.0690%" y="613" width="0.1277%" height="15" fill="rgb(236,90,42)"/><text x="62.3190%" y="623.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (1 samples, 0.13%)</title><rect x="62.0690%" y="597" width="0.1277%" height="15" fill="rgb(249,57,21)"/><text x="62.3190%" y="607.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.13%)</title><rect x="62.0690%" y="581" width="0.1277%" height="15" fill="rgb(243,12,36)"/><text x="62.3190%" y="591.50"></text></g><g><title>&lt;i64 as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.13%)</title><rect x="62.0690%" y="565" width="0.1277%" height="15" fill="rgb(253,128,47)"/><text x="62.3190%" y="575.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.26%)</title><rect x="62.0690%" y="645" width="0.2554%" height="15" fill="rgb(207,33,20)"/><text x="62.3190%" y="655.50"></text></g><g><title>decor_mem::stats::get_qtype (1 samples, 0.13%)</title><rect x="62.1967%" y="629" width="0.1277%" height="15" fill="rgb(233,215,35)"/><text x="62.4467%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.1967%" y="613" width="0.1277%" height="15" fill="rgb(249,188,52)"/><text x="62.4467%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.1967%" y="597" width="0.1277%" height="15" fill="rgb(225,12,32)"/><text x="62.4467%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.1967%" y="581" width="0.1277%" height="15" fill="rgb(247,98,14)"/><text x="62.4467%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.1967%" y="565" width="0.1277%" height="15" fill="rgb(247,219,48)"/><text x="62.4467%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="62.3244%" y="613" width="0.1277%" height="15" fill="rgb(253,60,48)"/><text x="62.5744%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.3244%" y="597" width="0.1277%" height="15" fill="rgb(245,15,52)"/><text x="62.5744%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.3244%" y="581" width="0.1277%" height="15" fill="rgb(220,133,28)"/><text x="62.5744%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.3244%" y="565" width="0.1277%" height="15" fill="rgb(217,180,4)"/><text x="62.5744%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="62.3244%" y="549" width="0.1277%" height="15" fill="rgb(251,24,1)"/><text x="62.5744%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="62.3244%" y="533" width="0.1277%" height="15" fill="rgb(212,185,49)"/><text x="62.5744%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="62.4521%" y="533" width="0.1277%" height="15" fill="rgb(215,175,22)"/><text x="62.7021%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="62.4521%" y="517" width="0.1277%" height="15" fill="rgb(250,205,14)"/><text x="62.7021%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.26%)</title><rect x="62.4521%" y="613" width="0.2554%" height="15" fill="rgb(225,211,22)"/><text x="62.7021%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.26%)</title><rect x="62.4521%" y="597" width="0.2554%" height="15" fill="rgb(251,179,42)"/><text x="62.7021%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.26%)</title><rect x="62.4521%" y="581" width="0.2554%" height="15" fill="rgb(208,216,51)"/><text x="62.7021%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.26%)</title><rect x="62.4521%" y="565" width="0.2554%" height="15" fill="rgb(235,36,11)"/><text x="62.7021%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.26%)</title><rect x="62.4521%" y="549" width="0.2554%" height="15" fill="rgb(213,189,28)"/><text x="62.7021%" y="559.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="62.5798%" y="533" width="0.1277%" height="15" fill="rgb(227,203,42)"/><text x="62.8298%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.51%)</title><rect x="62.3244%" y="645" width="0.5109%" height="15" fill="rgb(244,72,36)"/><text x="62.5744%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.51%)</title><rect x="62.3244%" y="629" width="0.5109%" height="15" fill="rgb(213,53,17)"/><text x="62.5744%" y="639.50"></text></g><g><title>decor_mem::stats::print_stats (1 samples, 0.13%)</title><rect x="62.7075%" y="613" width="0.1277%" height="15" fill="rgb(207,167,3)"/><text x="62.9575%" y="623.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="62.7075%" y="597" width="0.1277%" height="15" fill="rgb(216,98,30)"/><text x="62.9575%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.13%)</title><rect x="62.7075%" y="581" width="0.1277%" height="15" fill="rgb(236,123,15)"/><text x="62.9575%" y="591.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.13%)</title><rect x="62.7075%" y="565" width="0.1277%" height="15" fill="rgb(248,81,50)"/><text x="62.9575%" y="575.50"></text></g><g><title>__libc_write (1 samples, 0.13%)</title><rect x="62.7075%" y="549" width="0.1277%" height="15" fill="rgb(214,120,4)"/><text x="62.9575%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="62.7075%" y="533" width="0.1277%" height="15" fill="rgb(208,179,34)"/><text x="62.9575%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="62.7075%" y="517" width="0.1277%" height="15" fill="rgb(227,140,7)"/><text x="62.9575%" y="527.50"></text></g><g><title>ksys_write (1 samples, 0.13%)</title><rect x="62.7075%" y="501" width="0.1277%" height="15" fill="rgb(214,22,6)"/><text x="62.9575%" y="511.50"></text></g><g><title>__fdget_pos (1 samples, 0.13%)</title><rect x="62.7075%" y="485" width="0.1277%" height="15" fill="rgb(207,137,27)"/><text x="62.9575%" y="495.50"></text></g><g><title>__fget_light (1 samples, 0.13%)</title><rect x="62.7075%" y="469" width="0.1277%" height="15" fill="rgb(210,8,46)"/><text x="62.9575%" y="479.50"></text></g><g><title>__fget_files (1 samples, 0.13%)</title><rect x="62.7075%" y="453" width="0.1277%" height="15" fill="rgb(240,16,54)"/><text x="62.9575%" y="463.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.13%)</title><rect x="62.8352%" y="645" width="0.1277%" height="15" fill="rgb(211,209,29)"/><text x="63.0852%" y="655.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.13%)</title><rect x="62.8352%" y="629" width="0.1277%" height="15" fill="rgb(226,228,24)"/><text x="63.0852%" y="639.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.26%)</title><rect x="63.3461%" y="357" width="0.2554%" height="15" fill="rgb(222,84,9)"/><text x="63.5961%" y="367.50"></text></g><g><title>finish_task_switch (1 samples, 0.13%)</title><rect x="63.6015%" y="357" width="0.1277%" height="15" fill="rgb(234,203,30)"/><text x="63.8515%" y="367.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.13%)</title><rect x="63.7292%" y="357" width="0.1277%" height="15" fill="rgb(238,109,14)"/><text x="63.9792%" y="367.50"></text></g><g><title>__update_idle_core (1 samples, 0.13%)</title><rect x="63.7292%" y="341" width="0.1277%" height="15" fill="rgb(233,206,34)"/><text x="63.9792%" y="351.50"></text></g><g><title>psi_task_change (1 samples, 0.13%)</title><rect x="63.8570%" y="357" width="0.1277%" height="15" fill="rgb(220,167,47)"/><text x="64.1070%" y="367.50"></text></g><g><title>do_syscall_64 (9 samples, 1.15%)</title><rect x="62.9630%" y="517" width="1.1494%" height="15" fill="rgb(238,105,10)"/><text x="63.2130%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 1.15%)</title><rect x="62.9630%" y="501" width="1.1494%" height="15" fill="rgb(213,227,17)"/><text x="63.2130%" y="511.50"></text></g><g><title>__sys_recvfrom (9 samples, 1.15%)</title><rect x="62.9630%" y="485" width="1.1494%" height="15" fill="rgb(217,132,38)"/><text x="63.2130%" y="495.50"></text></g><g><title>inet_recvmsg (9 samples, 1.15%)</title><rect x="62.9630%" y="469" width="1.1494%" height="15" fill="rgb(242,146,4)"/><text x="63.2130%" y="479.50"></text></g><g><title>tcp_recvmsg (9 samples, 1.15%)</title><rect x="62.9630%" y="453" width="1.1494%" height="15" fill="rgb(212,61,9)"/><text x="63.2130%" y="463.50"></text></g><g><title>sk_wait_data (8 samples, 1.02%)</title><rect x="63.0907%" y="437" width="1.0217%" height="15" fill="rgb(247,126,22)"/><text x="63.3407%" y="447.50"></text></g><g><title>wait_woken (8 samples, 1.02%)</title><rect x="63.0907%" y="421" width="1.0217%" height="15" fill="rgb(220,196,2)"/><text x="63.3407%" y="431.50"></text></g><g><title>schedule_timeout (8 samples, 1.02%)</title><rect x="63.0907%" y="405" width="1.0217%" height="15" fill="rgb(208,46,4)"/><text x="63.3407%" y="415.50"></text></g><g><title>schedule (8 samples, 1.02%)</title><rect x="63.0907%" y="389" width="1.0217%" height="15" fill="rgb(252,104,46)"/><text x="63.3407%" y="399.50"></text></g><g><title>__schedule (8 samples, 1.02%)</title><rect x="63.0907%" y="373" width="1.0217%" height="15" fill="rgb(237,152,48)"/><text x="63.3407%" y="383.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.13%)</title><rect x="63.9847%" y="357" width="0.1277%" height="15" fill="rgb(221,59,37)"/><text x="64.2347%" y="367.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (10 samples, 1.28%)</title><rect x="62.9630%" y="645" width="1.2771%" height="15" fill="rgb(209,202,51)"/><text x="63.2130%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 1.28%)</title><rect x="62.9630%" y="629" width="1.2771%" height="15" fill="rgb(228,81,30)"/><text x="63.2130%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 1.28%)</title><rect x="62.9630%" y="613" width="1.2771%" height="15" fill="rgb(227,42,39)"/><text x="63.2130%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 1.28%)</title><rect x="62.9630%" y="597" width="1.2771%" height="15" fill="rgb(221,26,2)"/><text x="63.2130%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 1.28%)</title><rect x="62.9630%" y="581" width="1.2771%" height="15" fill="rgb(254,61,31)"/><text x="63.2130%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 1.28%)</title><rect x="62.9630%" y="565" width="1.2771%" height="15" fill="rgb(222,173,38)"/><text x="63.2130%" y="575.50"></text></g><g><title>__libc_recv (10 samples, 1.28%)</title><rect x="62.9630%" y="549" width="1.2771%" height="15" fill="rgb(218,50,12)"/><text x="63.2130%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 1.28%)</title><rect x="62.9630%" y="533" width="1.2771%" height="15" fill="rgb(223,88,40)"/><text x="63.2130%" y="543.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="64.1124%" y="517" width="0.1277%" height="15" fill="rgb(237,54,19)"/><text x="64.3624%" y="527.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.13%)</title><rect x="64.6232%" y="373" width="0.1277%" height="15" fill="rgb(251,129,25)"/><text x="64.8732%" y="383.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.13%)</title><rect x="64.6232%" y="357" width="0.1277%" height="15" fill="rgb(238,97,19)"/><text x="64.8732%" y="367.50"></text></g><g><title>loopback_xmit (1 samples, 0.13%)</title><rect x="64.6232%" y="341" width="0.1277%" height="15" fill="rgb(240,169,18)"/><text x="64.8732%" y="351.50"></text></g><g><title>netif_rx (1 samples, 0.13%)</title><rect x="64.6232%" y="325" width="0.1277%" height="15" fill="rgb(230,187,49)"/><text x="64.8732%" y="335.50"></text></g><g><title>netif_rx_internal (1 samples, 0.13%)</title><rect x="64.6232%" y="309" width="0.1277%" height="15" fill="rgb(209,44,26)"/><text x="64.8732%" y="319.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.13%)</title><rect x="64.6232%" y="293" width="0.1277%" height="15" fill="rgb(244,0,6)"/><text x="64.8732%" y="303.50"></text></g><g><title>read_tsc (1 samples, 0.13%)</title><rect x="64.6232%" y="277" width="0.1277%" height="15" fill="rgb(248,18,21)"/><text x="64.8732%" y="287.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="65.0064%" y="261" width="0.1277%" height="15" fill="rgb(245,180,19)"/><text x="65.2564%" y="271.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.13%)</title><rect x="65.1341%" y="181" width="0.1277%" height="15" fill="rgb(252,118,36)"/><text x="65.3841%" y="191.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.13%)</title><rect x="65.1341%" y="165" width="0.1277%" height="15" fill="rgb(210,224,19)"/><text x="65.3841%" y="175.50"></text></g><g><title>enqueue_task (1 samples, 0.13%)</title><rect x="65.3895%" y="85" width="0.1277%" height="15" fill="rgb(218,30,24)"/><text x="65.6395%" y="95.50"></text></g><g><title>psi_task_change (1 samples, 0.13%)</title><rect x="65.3895%" y="69" width="0.1277%" height="15" fill="rgb(219,75,50)"/><text x="65.6395%" y="79.50"></text></g><g><title>psi_group_change (1 samples, 0.13%)</title><rect x="65.3895%" y="53" width="0.1277%" height="15" fill="rgb(234,72,50)"/><text x="65.6395%" y="63.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.13%)</title><rect x="65.5172%" y="85" width="0.1277%" height="15" fill="rgb(219,100,48)"/><text x="65.7672%" y="95.50"></text></g><g><title>enqueue_entity (1 samples, 0.13%)</title><rect x="65.5172%" y="69" width="0.1277%" height="15" fill="rgb(253,5,41)"/><text x="65.7672%" y="79.50"></text></g><g><title>update_load_avg (1 samples, 0.13%)</title><rect x="65.5172%" y="53" width="0.1277%" height="15" fill="rgb(247,181,11)"/><text x="65.7672%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.13%)</title><rect x="65.5172%" y="37" width="0.1277%" height="15" fill="rgb(222,223,25)"/><text x="65.7672%" y="47.50"></text></g><g><title>__tcp_push_pending_frames (11 samples, 1.40%)</title><rect x="64.3678%" y="469" width="1.4049%" height="15" fill="rgb(214,198,28)"/><text x="64.6178%" y="479.50"></text></g><g><title>tcp_write_xmit (11 samples, 1.40%)</title><rect x="64.3678%" y="453" width="1.4049%" height="15" fill="rgb(230,46,43)"/><text x="64.6178%" y="463.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 1.28%)</title><rect x="64.4955%" y="437" width="1.2771%" height="15" fill="rgb(233,65,53)"/><text x="64.7455%" y="447.50"></text></g><g><title>__ip_queue_xmit (10 samples, 1.28%)</title><rect x="64.4955%" y="421" width="1.2771%" height="15" fill="rgb(221,121,27)"/><text x="64.7455%" y="431.50"></text></g><g><title>ip_output (10 samples, 1.28%)</title><rect x="64.4955%" y="405" width="1.2771%" height="15" fill="rgb(247,70,47)"/><text x="64.7455%" y="415.50"></text></g><g><title>ip_finish_output2 (9 samples, 1.15%)</title><rect x="64.6232%" y="389" width="1.1494%" height="15" fill="rgb(228,85,35)"/><text x="64.8732%" y="399.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 1.02%)</title><rect x="64.7510%" y="373" width="1.0217%" height="15" fill="rgb(209,50,18)"/><text x="65.0010%" y="383.50"></text></g><g><title>do_softirq (8 samples, 1.02%)</title><rect x="64.7510%" y="357" width="1.0217%" height="15" fill="rgb(250,19,35)"/><text x="65.0010%" y="367.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.89%)</title><rect x="64.8787%" y="341" width="0.8940%" height="15" fill="rgb(253,107,29)"/><text x="65.1287%" y="351.50"></text></g><g><title>__do_softirq (7 samples, 0.89%)</title><rect x="64.8787%" y="325" width="0.8940%" height="15" fill="rgb(252,179,29)"/><text x="65.1287%" y="335.50"></text></g><g><title>net_rx_action (7 samples, 0.89%)</title><rect x="64.8787%" y="309" width="0.8940%" height="15" fill="rgb(238,194,6)"/><text x="65.1287%" y="319.50"></text></g><g><title>process_backlog (6 samples, 0.77%)</title><rect x="65.0064%" y="293" width="0.7663%" height="15" fill="rgb(238,164,29)"/><text x="65.2564%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (6 samples, 0.77%)</title><rect x="65.0064%" y="277" width="0.7663%" height="15" fill="rgb(224,25,9)"/><text x="65.2564%" y="287.50"></text></g><g><title>ip_rcv (5 samples, 0.64%)</title><rect x="65.1341%" y="261" width="0.6386%" height="15" fill="rgb(244,153,23)"/><text x="65.3841%" y="271.50"></text></g><g><title>ip_local_deliver (5 samples, 0.64%)</title><rect x="65.1341%" y="245" width="0.6386%" height="15" fill="rgb(212,203,14)"/><text x="65.3841%" y="255.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.64%)</title><rect x="65.1341%" y="229" width="0.6386%" height="15" fill="rgb(220,164,20)"/><text x="65.3841%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.64%)</title><rect x="65.1341%" y="213" width="0.6386%" height="15" fill="rgb(222,203,48)"/><text x="65.3841%" y="223.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.64%)</title><rect x="65.1341%" y="197" width="0.6386%" height="15" fill="rgb(215,159,22)"/><text x="65.3841%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.51%)</title><rect x="65.2618%" y="181" width="0.5109%" height="15" fill="rgb(216,183,47)"/><text x="65.5118%" y="191.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.51%)</title><rect x="65.2618%" y="165" width="0.5109%" height="15" fill="rgb(229,195,25)"/><text x="65.5118%" y="175.50"></text></g><g><title>sock_def_readable (4 samples, 0.51%)</title><rect x="65.2618%" y="149" width="0.5109%" height="15" fill="rgb(224,132,51)"/><text x="65.5118%" y="159.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.51%)</title><rect x="65.2618%" y="133" width="0.5109%" height="15" fill="rgb(240,63,7)"/><text x="65.5118%" y="143.50"></text></g><g><title>__wake_up_common (4 samples, 0.51%)</title><rect x="65.2618%" y="117" width="0.5109%" height="15" fill="rgb(249,182,41)"/><text x="65.5118%" y="127.50"></text></g><g><title>try_to_wake_up (3 samples, 0.38%)</title><rect x="65.3895%" y="101" width="0.3831%" height="15" fill="rgb(243,47,26)"/><text x="65.6395%" y="111.50"></text></g><g><title>update_rq_clock (1 samples, 0.13%)</title><rect x="65.6450%" y="85" width="0.1277%" height="15" fill="rgb(233,48,2)"/><text x="65.8950%" y="95.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.66%)</title><rect x="64.2401%" y="581" width="1.6603%" height="15" fill="rgb(244,165,34)"/><text x="64.4901%" y="591.50"></text></g><g><title>do_syscall_64 (13 samples, 1.66%)</title><rect x="64.2401%" y="565" width="1.6603%" height="15" fill="rgb(207,89,7)"/><text x="64.4901%" y="575.50"></text></g><g><title>__x64_sys_sendto (12 samples, 1.53%)</title><rect x="64.3678%" y="549" width="1.5326%" height="15" fill="rgb(244,117,36)"/><text x="64.6178%" y="559.50"></text></g><g><title>__sys_sendto (12 samples, 1.53%)</title><rect x="64.3678%" y="533" width="1.5326%" height="15" fill="rgb(226,144,34)"/><text x="64.6178%" y="543.50"></text></g><g><title>sock_sendmsg (12 samples, 1.53%)</title><rect x="64.3678%" y="517" width="1.5326%" height="15" fill="rgb(213,23,19)"/><text x="64.6178%" y="527.50"></text></g><g><title>tcp_sendmsg (12 samples, 1.53%)</title><rect x="64.3678%" y="501" width="1.5326%" height="15" fill="rgb(217,75,12)"/><text x="64.6178%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 1.53%)</title><rect x="64.3678%" y="485" width="1.5326%" height="15" fill="rgb(224,159,17)"/><text x="64.6178%" y="495.50"></text></g><g><title>tcp_send_mss (1 samples, 0.13%)</title><rect x="65.7727%" y="469" width="0.1277%" height="15" fill="rgb(217,118,1)"/><text x="66.0227%" y="479.50"></text></g><g><title>tcp_current_mss (1 samples, 0.13%)</title><rect x="65.7727%" y="453" width="0.1277%" height="15" fill="rgb(232,180,48)"/><text x="66.0227%" y="463.50"></text></g><g><title>ipv4_mtu (1 samples, 0.13%)</title><rect x="65.7727%" y="437" width="0.1277%" height="15" fill="rgb(230,27,33)"/><text x="66.0227%" y="447.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (33 samples, 4.21%)</title><rect x="61.8135%" y="661" width="4.2146%" height="15" fill="rgb(205,31,21)"/><text x="62.0635%" y="671.50">msql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (14 samples, 1.79%)</title><rect x="64.2401%" y="645" width="1.7880%" height="15" fill="rgb(253,59,4)"/><text x="64.4901%" y="655.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (14 samples, 1.79%)</title><rect x="64.2401%" y="629" width="1.7880%" height="15" fill="rgb(224,201,9)"/><text x="64.4901%" y="639.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (14 samples, 1.79%)</title><rect x="64.2401%" y="613" width="1.7880%" height="15" fill="rgb(229,206,30)"/><text x="64.4901%" y="623.50">s..</text></g><g><title>__libc_send (14 samples, 1.79%)</title><rect x="64.2401%" y="597" width="1.7880%" height="15" fill="rgb(212,67,47)"/><text x="64.4901%" y="607.50">_..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.13%)</title><rect x="65.9004%" y="581" width="0.1277%" height="15" fill="rgb(211,96,50)"/><text x="66.1504%" y="591.50"></text></g><g><title>__GI___clone (35 samples, 4.47%)</title><rect x="61.6858%" y="789" width="4.4700%" height="15" fill="rgb(252,114,18)"/><text x="61.9358%" y="799.50">__GI_..</text></g><g><title>start_thread (35 samples, 4.47%)</title><rect x="61.6858%" y="773" width="4.4700%" height="15" fill="rgb(223,58,37)"/><text x="61.9358%" y="783.50">start..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (34 samples, 4.34%)</title><rect x="61.8135%" y="757" width="4.3423%" height="15" fill="rgb(237,70,4)"/><text x="62.0635%" y="767.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (34 samples, 4.34%)</title><rect x="61.8135%" y="741" width="4.3423%" height="15" fill="rgb(244,85,46)"/><text x="62.0635%" y="751.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (34 samples, 4.34%)</title><rect x="61.8135%" y="725" width="4.3423%" height="15" fill="rgb(223,39,52)"/><text x="62.0635%" y="735.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (34 samples, 4.34%)</title><rect x="61.8135%" y="709" width="4.3423%" height="15" fill="rgb(218,200,14)"/><text x="62.0635%" y="719.50">core:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 4.34%)</title><rect x="61.8135%" y="693" width="4.3423%" height="15" fill="rgb(208,171,16)"/><text x="62.0635%" y="703.50">std::..</text></g><g><title>decor_mem::Shim::run_on_tcp (34 samples, 4.34%)</title><rect x="61.8135%" y="677" width="4.3423%" height="15" fill="rgb(234,200,18)"/><text x="62.0635%" y="687.50">decor..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.13%)</title><rect x="66.0281%" y="661" width="0.1277%" height="15" fill="rgb(228,45,11)"/><text x="66.2781%" y="671.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.13%)</title><rect x="66.0281%" y="645" width="0.1277%" height="15" fill="rgb(237,182,11)"/><text x="66.2781%" y="655.50"></text></g><g><title>mysql::conn::Conn::continue_auth (1 samples, 0.13%)</title><rect x="66.0281%" y="629" width="0.1277%" height="15" fill="rgb(241,175,49)"/><text x="66.2781%" y="639.50"></text></g><g><title>mysql::conn::Conn::perform_auth_switch (1 samples, 0.13%)</title><rect x="66.0281%" y="613" width="0.1277%" height="15" fill="rgb(247,38,35)"/><text x="66.2781%" y="623.50"></text></g><g><title>mysql::conn::Conn::continue_auth (1 samples, 0.13%)</title><rect x="66.0281%" y="597" width="0.1277%" height="15" fill="rgb(228,39,49)"/><text x="66.2781%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.26%)</title><rect x="66.1558%" y="789" width="0.2554%" height="15" fill="rgb(226,101,26)"/><text x="66.4058%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="66.4112%" y="789" width="0.1277%" height="15" fill="rgb(206,141,19)"/><text x="66.6612%" y="799.50"></text></g><g><title>__GI_exit (1 samples, 0.13%)</title><rect x="66.5390%" y="757" width="0.1277%" height="15" fill="rgb(211,200,13)"/><text x="66.7890%" y="767.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.13%)</title><rect x="66.5390%" y="741" width="0.1277%" height="15" fill="rgb(241,121,6)"/><text x="66.7890%" y="751.50"></text></g><g><title>std::pmr::(anonymous namespace)::constant_init&lt;std::atomic&lt;std::pmr::memory_resource*&gt; &gt;::~constant_init (1 samples, 0.13%)</title><rect x="66.5390%" y="725" width="0.1277%" height="15" fill="rgb(234,221,29)"/><text x="66.7890%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="66.5390%" y="709" width="0.1277%" height="15" fill="rgb(229,136,5)"/><text x="66.7890%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="66.5390%" y="693" width="0.1277%" height="15" fill="rgb(238,36,11)"/><text x="66.7890%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="66.5390%" y="677" width="0.1277%" height="15" fill="rgb(251,55,41)"/><text x="66.7890%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="66.5390%" y="661" width="0.1277%" height="15" fill="rgb(242,34,40)"/><text x="66.7890%" y="671.50"></text></g><g><title>filemap_map_pages (1 samples, 0.13%)</title><rect x="66.5390%" y="645" width="0.1277%" height="15" fill="rgb(215,42,17)"/><text x="66.7890%" y="655.50"></text></g><g><title>alloc_set_pte (1 samples, 0.13%)</title><rect x="66.5390%" y="629" width="0.1277%" height="15" fill="rgb(207,44,46)"/><text x="66.7890%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.13%)</title><rect x="66.7944%" y="581" width="0.1277%" height="15" fill="rgb(211,206,28)"/><text x="67.0444%" y="591.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.13%)</title><rect x="66.7944%" y="565" width="0.1277%" height="15" fill="rgb(237,167,16)"/><text x="67.0444%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="66.7944%" y="549" width="0.1277%" height="15" fill="rgb(233,66,6)"/><text x="67.0444%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="66.7944%" y="533" width="0.1277%" height="15" fill="rgb(246,123,29)"/><text x="67.0444%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="66.7944%" y="517" width="0.1277%" height="15" fill="rgb(209,62,40)"/><text x="67.0444%" y="527.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.26%)</title><rect x="66.7944%" y="613" width="0.2554%" height="15" fill="rgb(218,4,25)"/><text x="67.0444%" y="623.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.26%)</title><rect x="66.7944%" y="597" width="0.2554%" height="15" fill="rgb(253,91,49)"/><text x="67.0444%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.13%)</title><rect x="66.9221%" y="581" width="0.1277%" height="15" fill="rgb(228,155,29)"/><text x="67.1721%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.13%)</title><rect x="66.9221%" y="565" width="0.1277%" height="15" fill="rgb(243,57,37)"/><text x="67.1721%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.13%)</title><rect x="66.9221%" y="549" width="0.1277%" height="15" fill="rgb(244,167,17)"/><text x="67.1721%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.13%)</title><rect x="66.9221%" y="533" width="0.1277%" height="15" fill="rgb(207,181,38)"/><text x="67.1721%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="67.0498%" y="613" width="0.1277%" height="15" fill="rgb(211,8,23)"/><text x="67.2998%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="67.0498%" y="597" width="0.1277%" height="15" fill="rgb(235,11,44)"/><text x="67.2998%" y="607.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="67.0498%" y="581" width="0.1277%" height="15" fill="rgb(248,18,52)"/><text x="67.2998%" y="591.50"></text></g><g><title>__GI_munmap (1 samples, 0.13%)</title><rect x="67.0498%" y="565" width="0.1277%" height="15" fill="rgb(208,4,7)"/><text x="67.2998%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="67.0498%" y="549" width="0.1277%" height="15" fill="rgb(240,17,39)"/><text x="67.2998%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="67.0498%" y="533" width="0.1277%" height="15" fill="rgb(207,170,3)"/><text x="67.2998%" y="543.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.13%)</title><rect x="67.0498%" y="517" width="0.1277%" height="15" fill="rgb(236,100,52)"/><text x="67.2998%" y="527.50"></text></g><g><title>__vm_munmap (1 samples, 0.13%)</title><rect x="67.0498%" y="501" width="0.1277%" height="15" fill="rgb(246,78,51)"/><text x="67.2998%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.13%)</title><rect x="67.0498%" y="485" width="0.1277%" height="15" fill="rgb(211,17,15)"/><text x="67.2998%" y="495.50"></text></g><g><title>unmap_region (1 samples, 0.13%)</title><rect x="67.0498%" y="469" width="0.1277%" height="15" fill="rgb(209,59,46)"/><text x="67.2998%" y="479.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.13%)</title><rect x="67.0498%" y="453" width="0.1277%" height="15" fill="rgb(210,92,25)"/><text x="67.2998%" y="463.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.13%)</title><rect x="67.0498%" y="437" width="0.1277%" height="15" fill="rgb(238,174,52)"/><text x="67.2998%" y="447.50"></text></g><g><title>flush_tlb_func_common.constprop.0 (1 samples, 0.13%)</title><rect x="67.0498%" y="421" width="0.1277%" height="15" fill="rgb(230,73,7)"/><text x="67.2998%" y="431.50"></text></g><g><title>native_flush_tlb_one_user (1 samples, 0.13%)</title><rect x="67.0498%" y="405" width="0.1277%" height="15" fill="rgb(243,124,40)"/><text x="67.2998%" y="415.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="67.1775%" y="533" width="0.1277%" height="15" fill="rgb(244,170,11)"/><text x="67.4275%" y="543.50"></text></g><g><title>do_syscall_64 (235 samples, 30.01%)</title><rect x="67.4330%" y="485" width="30.0128%" height="15" fill="rgb(207,114,54)"/><text x="67.6830%" y="495.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 30.01%)</title><rect x="67.4330%" y="469" width="30.0128%" height="15" fill="rgb(205,42,20)"/><text x="67.6830%" y="479.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 30.01%)</title><rect x="67.4330%" y="453" width="30.0128%" height="15" fill="rgb(230,30,28)"/><text x="67.6830%" y="463.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 30.01%)</title><rect x="67.4330%" y="437" width="30.0128%" height="15" fill="rgb(205,73,54)"/><text x="67.6830%" y="447.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 30.01%)</title><rect x="67.4330%" y="421" width="30.0128%" height="15" fill="rgb(254,227,23)"/><text x="67.6830%" y="431.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 30.01%)</title><rect x="67.4330%" y="405" width="30.0128%" height="15" fill="rgb(228,202,34)"/><text x="67.6830%" y="415.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 30.01%)</title><rect x="67.4330%" y="389" width="30.0128%" height="15" fill="rgb(222,225,37)"/><text x="67.6830%" y="399.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 30.01%)</title><rect x="67.4330%" y="373" width="30.0128%" height="15" fill="rgb(221,14,54)"/><text x="67.6830%" y="383.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 30.01%)</title><rect x="67.4330%" y="357" width="30.0128%" height="15" fill="rgb(254,102,2)"/><text x="67.6830%" y="367.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 30.01%)</title><rect x="67.4330%" y="341" width="30.0128%" height="15" fill="rgb(232,104,17)"/><text x="67.6830%" y="351.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 29.89%)</title><rect x="67.5607%" y="325" width="29.8851%" height="15" fill="rgb(250,220,14)"/><text x="67.8107%" y="335.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (234 samples, 29.89%)</title><rect x="67.5607%" y="309" width="29.8851%" height="15" fill="rgb(241,158,9)"/><text x="67.8107%" y="319.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (233 samples, 29.76%)</title><rect x="67.6884%" y="293" width="29.7573%" height="15" fill="rgb(246,9,43)"/><text x="67.9384%" y="303.50">native_write_msr</text></g><g><title>__GI___sched_setaffinity_new (239 samples, 30.52%)</title><rect x="67.3052%" y="517" width="30.5236%" height="15" fill="rgb(206,73,33)"/><text x="67.5552%" y="527.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (238 samples, 30.40%)</title><rect x="67.4330%" y="501" width="30.3959%" height="15" fill="rgb(222,79,8)"/><text x="67.6830%" y="511.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.38%)</title><rect x="97.4457%" y="485" width="0.3831%" height="15" fill="rgb(234,8,54)"/><text x="97.6957%" y="495.50"></text></g><g><title>switch_fpu_return (2 samples, 0.26%)</title><rect x="97.5734%" y="469" width="0.2554%" height="15" fill="rgb(209,134,38)"/><text x="97.8234%" y="479.50"></text></g><g><title>copy_kernel_to_fpregs (2 samples, 0.26%)</title><rect x="97.5734%" y="453" width="0.2554%" height="15" fill="rgb(230,127,29)"/><text x="97.8234%" y="463.50"></text></g><g><title>hwloc::Topology::new (241 samples, 30.78%)</title><rect x="67.1775%" y="613" width="30.7791%" height="15" fill="rgb(242,44,41)"/><text x="67.4275%" y="623.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (241 samples, 30.78%)</title><rect x="67.1775%" y="597" width="30.7791%" height="15" fill="rgb(222,56,43)"/><text x="67.4275%" y="607.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 30.78%)</title><rect x="67.1775%" y="581" width="30.7791%" height="15" fill="rgb(238,39,47)"/><text x="67.4275%" y="591.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 30.78%)</title><rect x="67.1775%" y="565" width="30.7791%" height="15" fill="rgb(226,79,43)"/><text x="67.4275%" y="575.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 30.78%)</title><rect x="67.1775%" y="549" width="30.7791%" height="15" fill="rgb(242,105,53)"/><text x="67.4275%" y="559.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 30.65%)</title><rect x="67.3052%" y="533" width="30.6513%" height="15" fill="rgb(251,132,46)"/><text x="67.5552%" y="543.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__sched_cpufree (1 samples, 0.13%)</title><rect x="97.8289%" y="517" width="0.1277%" height="15" fill="rgb(231,77,14)"/><text x="98.0789%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="97.9566%" y="597" width="0.1277%" height="15" fill="rgb(240,135,9)"/><text x="98.2066%" y="607.50"></text></g><g><title>lobsters_microbenchmarks::init_database (2 samples, 0.26%)</title><rect x="97.9566%" y="613" width="0.2554%" height="15" fill="rgb(248,109,14)"/><text x="98.2066%" y="623.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.13%)</title><rect x="98.0843%" y="597" width="0.1277%" height="15" fill="rgb(227,146,52)"/><text x="98.3343%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.13%)</title><rect x="98.0843%" y="581" width="0.1277%" height="15" fill="rgb(232,54,3)"/><text x="98.3343%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="98.0843%" y="565" width="0.1277%" height="15" fill="rgb(229,201,43)"/><text x="98.3343%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.13%)</title><rect x="98.0843%" y="549" width="0.1277%" height="15" fill="rgb(252,161,33)"/><text x="98.3343%" y="559.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.13%)</title><rect x="98.0843%" y="533" width="0.1277%" height="15" fill="rgb(226,146,40)"/><text x="98.3343%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.13%)</title><rect x="98.0843%" y="517" width="0.1277%" height="15" fill="rgb(219,47,25)"/><text x="98.3343%" y="527.50"></text></g><g><title>__libc_start_main (249 samples, 31.80%)</title><rect x="66.5390%" y="773" width="31.8008%" height="15" fill="rgb(250,135,13)"/><text x="66.7890%" y="783.50">__libc_start_main</text></g><g><title>main (248 samples, 31.67%)</title><rect x="66.6667%" y="757" width="31.6731%" height="15" fill="rgb(219,229,18)"/><text x="66.9167%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (248 samples, 31.67%)</title><rect x="66.6667%" y="741" width="31.6731%" height="15" fill="rgb(217,152,27)"/><text x="66.9167%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (248 samples, 31.67%)</title><rect x="66.6667%" y="725" width="31.6731%" height="15" fill="rgb(225,71,47)"/><text x="66.9167%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (248 samples, 31.67%)</title><rect x="66.6667%" y="709" width="31.6731%" height="15" fill="rgb(220,139,14)"/><text x="66.9167%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (248 samples, 31.67%)</title><rect x="66.6667%" y="693" width="31.6731%" height="15" fill="rgb(247,54,32)"/><text x="66.9167%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (248 samples, 31.67%)</title><rect x="66.6667%" y="677" width="31.6731%" height="15" fill="rgb(252,131,39)"/><text x="66.9167%" y="687.50">core::ops::function::impls::&lt;impl core::ops::functi..</text></g><g><title>std::rt::lang_start::_{{closure}} (248 samples, 31.67%)</title><rect x="66.6667%" y="661" width="31.6731%" height="15" fill="rgb(210,108,39)"/><text x="66.9167%" y="671.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (248 samples, 31.67%)</title><rect x="66.6667%" y="645" width="31.6731%" height="15" fill="rgb(205,23,29)"/><text x="66.9167%" y="655.50">std::sys_common::backtrace::__rust_begin_short_back..</text></g><g><title>lobsters_microbenchmarks::main (248 samples, 31.67%)</title><rect x="66.6667%" y="629" width="31.6731%" height="15" fill="rgb(246,139,46)"/><text x="66.9167%" y="639.50">lobsters_microbenchmarks::main</text></g><g><title>std::net::tcp::TcpListener::local_addr (1 samples, 0.13%)</title><rect x="98.2120%" y="613" width="0.1277%" height="15" fill="rgb(250,81,26)"/><text x="98.4620%" y="623.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr (1 samples, 0.13%)</title><rect x="98.2120%" y="597" width="0.1277%" height="15" fill="rgb(214,104,7)"/><text x="98.4620%" y="607.50"></text></g><g><title>std::sys_common::net::sockname (1 samples, 0.13%)</title><rect x="98.2120%" y="581" width="0.1277%" height="15" fill="rgb(233,189,8)"/><text x="98.4620%" y="591.50"></text></g><g><title>std::sys_common::net::TcpListener::socket_addr::{{closure}} (1 samples, 0.13%)</title><rect x="98.2120%" y="565" width="0.1277%" height="15" fill="rgb(228,141,17)"/><text x="98.4620%" y="575.50"></text></g><g><title>__getsockname (1 samples, 0.13%)</title><rect x="98.2120%" y="549" width="0.1277%" height="15" fill="rgb(247,157,1)"/><text x="98.4620%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="98.2120%" y="533" width="0.1277%" height="15" fill="rgb(249,225,5)"/><text x="98.4620%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="98.2120%" y="517" width="0.1277%" height="15" fill="rgb(242,55,13)"/><text x="98.4620%" y="527.50"></text></g><g><title>__x64_sys_getsockname (1 samples, 0.13%)</title><rect x="98.2120%" y="501" width="0.1277%" height="15" fill="rgb(230,49,50)"/><text x="98.4620%" y="511.50"></text></g><g><title>__sys_getsockname (1 samples, 0.13%)</title><rect x="98.2120%" y="485" width="0.1277%" height="15" fill="rgb(241,111,38)"/><text x="98.4620%" y="495.50"></text></g><g><title>move_addr_to_user (1 samples, 0.13%)</title><rect x="98.2120%" y="469" width="0.1277%" height="15" fill="rgb(252,155,4)"/><text x="98.4620%" y="479.50"></text></g><g><title>_copy_to_user (1 samples, 0.13%)</title><rect x="98.2120%" y="453" width="0.1277%" height="15" fill="rgb(212,69,32)"/><text x="98.4620%" y="463.50"></text></g><g><title>_start (250 samples, 31.93%)</title><rect x="66.5390%" y="789" width="31.9285%" height="15" fill="rgb(243,107,47)"/><text x="66.7890%" y="799.50">_start</text></g><g><title>_dl_start (1 samples, 0.13%)</title><rect x="98.3397%" y="773" width="0.1277%" height="15" fill="rgb(247,130,12)"/><text x="98.5897%" y="783.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.13%)</title><rect x="98.3397%" y="757" width="0.1277%" height="15" fill="rgb(233,74,16)"/><text x="98.5897%" y="767.50"></text></g><g><title>dl_main (1 samples, 0.13%)</title><rect x="98.3397%" y="741" width="0.1277%" height="15" fill="rgb(208,58,18)"/><text x="98.5897%" y="751.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.13%)</title><rect x="98.3397%" y="725" width="0.1277%" height="15" fill="rgb(242,225,1)"/><text x="98.5897%" y="735.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.13%)</title><rect x="98.3397%" y="709" width="0.1277%" height="15" fill="rgb(249,39,40)"/><text x="98.5897%" y="719.50"></text></g><g><title>openaux (1 samples, 0.13%)</title><rect x="98.3397%" y="693" width="0.1277%" height="15" fill="rgb(207,72,44)"/><text x="98.5897%" y="703.50"></text></g><g><title>_dl_map_object (1 samples, 0.13%)</title><rect x="98.3397%" y="677" width="0.1277%" height="15" fill="rgb(215,193,12)"/><text x="98.5897%" y="687.50"></text></g><g><title>strcmp (1 samples, 0.13%)</title><rect x="98.3397%" y="661" width="0.1277%" height="15" fill="rgb(248,41,39)"/><text x="98.5897%" y="671.50"></text></g><g><title>[vmlinux] (1 samples, 0.13%)</title><rect x="98.5951%" y="757" width="0.1277%" height="15" fill="rgb(253,85,4)"/><text x="98.8451%" y="767.50"></text></g><g><title>do_group_exit (1 samples, 0.13%)</title><rect x="98.5951%" y="741" width="0.1277%" height="15" fill="rgb(243,70,31)"/><text x="98.8451%" y="751.50"></text></g><g><title>do_exit (1 samples, 0.13%)</title><rect x="98.5951%" y="725" width="0.1277%" height="15" fill="rgb(253,195,26)"/><text x="98.8451%" y="735.50"></text></g><g><title>mmput (1 samples, 0.13%)</title><rect x="98.5951%" y="709" width="0.1277%" height="15" fill="rgb(243,42,11)"/><text x="98.8451%" y="719.50"></text></g><g><title>exit_mmap (1 samples, 0.13%)</title><rect x="98.5951%" y="693" width="0.1277%" height="15" fill="rgb(239,66,17)"/><text x="98.8451%" y="703.50"></text></g><g><title>unmap_vmas (1 samples, 0.13%)</title><rect x="98.5951%" y="677" width="0.1277%" height="15" fill="rgb(217,132,21)"/><text x="98.8451%" y="687.50"></text></g><g><title>unmap_page_range (1 samples, 0.13%)</title><rect x="98.5951%" y="661" width="0.1277%" height="15" fill="rgb(252,202,21)"/><text x="98.8451%" y="671.50"></text></g><g><title>page_remove_rmap.part.0 (1 samples, 0.13%)</title><rect x="98.5951%" y="645" width="0.1277%" height="15" fill="rgb(233,98,36)"/><text x="98.8451%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.38%)</title><rect x="98.4674%" y="789" width="0.3831%" height="15" fill="rgb(216,153,54)"/><text x="98.7174%" y="799.50"></text></g><g><title>do_syscall_64 (2 samples, 0.26%)</title><rect x="98.5951%" y="773" width="0.2554%" height="15" fill="rgb(250,99,7)"/><text x="98.8451%" y="783.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.13%)</title><rect x="98.7229%" y="757" width="0.1277%" height="15" fill="rgb(207,56,50)"/><text x="98.9729%" y="767.50"></text></g><g><title>do_execve (1 samples, 0.13%)</title><rect x="98.7229%" y="741" width="0.1277%" height="15" fill="rgb(244,61,34)"/><text x="98.9729%" y="751.50"></text></g><g><title>__do_execve_file (1 samples, 0.13%)</title><rect x="98.7229%" y="725" width="0.1277%" height="15" fill="rgb(241,50,38)"/><text x="98.9729%" y="735.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.13%)</title><rect x="98.7229%" y="709" width="0.1277%" height="15" fill="rgb(212,166,30)"/><text x="98.9729%" y="719.50"></text></g><g><title>load_elf_binary (1 samples, 0.13%)</title><rect x="98.7229%" y="693" width="0.1277%" height="15" fill="rgb(249,127,32)"/><text x="98.9729%" y="703.50"></text></g><g><title>__clear_user (1 samples, 0.13%)</title><rect x="98.7229%" y="677" width="0.1277%" height="15" fill="rgb(209,103,0)"/><text x="98.9729%" y="687.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="98.7229%" y="661" width="0.1277%" height="15" fill="rgb(238,209,51)"/><text x="98.9729%" y="671.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="98.7229%" y="645" width="0.1277%" height="15" fill="rgb(237,56,23)"/><text x="98.9729%" y="655.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="98.7229%" y="629" width="0.1277%" height="15" fill="rgb(215,153,46)"/><text x="98.9729%" y="639.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="98.7229%" y="613" width="0.1277%" height="15" fill="rgb(224,49,31)"/><text x="98.9729%" y="623.50"></text></g><g><title>__anon_vma_prepare (1 samples, 0.13%)</title><rect x="98.7229%" y="597" width="0.1277%" height="15" fill="rgb(250,18,42)"/><text x="98.9729%" y="607.50"></text></g><g><title>find_mergeable_anon_vma (1 samples, 0.13%)</title><rect x="98.7229%" y="581" width="0.1277%" height="15" fill="rgb(215,176,39)"/><text x="98.9729%" y="591.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="98.8506%" y="789" width="0.1277%" height="15" fill="rgb(223,77,29)"/><text x="99.1006%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.13%)</title><rect x="98.9783%" y="789" width="0.1277%" height="15" fill="rgb(234,94,52)"/><text x="99.2283%" y="799.50"></text></g><g><title>lobsters-microb (777 samples, 99.23%)</title><rect x="0.0000%" y="805" width="99.2337%" height="15" fill="rgb(220,154,50)"/><text x="0.2500%" y="815.50">lobsters-microb</text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.13%)</title><rect x="99.1060%" y="789" width="0.1277%" height="15" fill="rgb(212,11,10)"/><text x="99.3560%" y="799.50"></text></g><g><title>all (783 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(205,166,19)"/><text x="0.2500%" y="831.50"></text></g><g><title>perf (6 samples, 0.77%)</title><rect x="99.2337%" y="805" width="0.7663%" height="15" fill="rgb(244,198,16)"/><text x="99.4837%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.77%)</title><rect x="99.2337%" y="789" width="0.7663%" height="15" fill="rgb(219,69,12)"/><text x="99.4837%" y="799.50"></text></g><g><title>do_syscall_64 (6 samples, 0.77%)</title><rect x="99.2337%" y="773" width="0.7663%" height="15" fill="rgb(245,30,7)"/><text x="99.4837%" y="783.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.77%)</title><rect x="99.2337%" y="757" width="0.7663%" height="15" fill="rgb(218,221,48)"/><text x="99.4837%" y="767.50"></text></g><g><title>do_execve (6 samples, 0.77%)</title><rect x="99.2337%" y="741" width="0.7663%" height="15" fill="rgb(216,66,15)"/><text x="99.4837%" y="751.50"></text></g><g><title>__do_execve_file (6 samples, 0.77%)</title><rect x="99.2337%" y="725" width="0.7663%" height="15" fill="rgb(226,122,50)"/><text x="99.4837%" y="735.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.77%)</title><rect x="99.2337%" y="709" width="0.7663%" height="15" fill="rgb(239,156,16)"/><text x="99.4837%" y="719.50"></text></g><g><title>load_elf_binary (6 samples, 0.77%)</title><rect x="99.2337%" y="693" width="0.7663%" height="15" fill="rgb(224,27,38)"/><text x="99.4837%" y="703.50"></text></g><g><title>setup_new_exec (6 samples, 0.77%)</title><rect x="99.2337%" y="677" width="0.7663%" height="15" fill="rgb(224,39,27)"/><text x="99.4837%" y="687.50"></text></g><g><title>perf_event_exec (6 samples, 0.77%)</title><rect x="99.2337%" y="661" width="0.7663%" height="15" fill="rgb(215,92,29)"/><text x="99.4837%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.64%)</title><rect x="99.3614%" y="645" width="0.6386%" height="15" fill="rgb(207,159,16)"/><text x="99.6114%" y="655.50"></text></g><g><title>native_write_msr (5 samples, 0.64%)</title><rect x="99.3614%" y="629" width="0.6386%" height="15" fill="rgb(238,163,47)"/><text x="99.6114%" y="639.50"></text></g></svg></svg>