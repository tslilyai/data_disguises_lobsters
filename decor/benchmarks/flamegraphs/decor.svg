<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (1 samples, 0.22%)</title><rect x="0.0000%" y="757" width="0.2151%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="767.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.22%)</title><rect x="0.0000%" y="741" width="0.2151%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.43%)</title><rect x="0.2151%" y="741" width="0.4301%" height="15" fill="rgb(221,193,54)"/><text x="0.4651%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="0.4301%" y="725" width="0.2151%" height="15" fill="rgb(248,212,6)"/><text x="0.6801%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="0.4301%" y="709" width="0.2151%" height="15" fill="rgb(208,68,35)"/><text x="0.6801%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="0.4301%" y="693" width="0.2151%" height="15" fill="rgb(232,128,0)"/><text x="0.6801%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="0.4301%" y="677" width="0.2151%" height="15" fill="rgb(207,160,47)"/><text x="0.6801%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="0.4301%" y="661" width="0.2151%" height="15" fill="rgb(228,23,34)"/><text x="0.6801%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.22%)</title><rect x="0.4301%" y="645" width="0.2151%" height="15" fill="rgb(218,30,26)"/><text x="0.6801%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.22%)</title><rect x="0.4301%" y="629" width="0.2151%" height="15" fill="rgb(220,122,19)"/><text x="0.6801%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="0.4301%" y="613" width="0.2151%" height="15" fill="rgb(250,228,42)"/><text x="0.6801%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="0.4301%" y="597" width="0.2151%" height="15" fill="rgb(240,193,28)"/><text x="0.6801%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="0.4301%" y="581" width="0.2151%" height="15" fill="rgb(216,20,37)"/><text x="0.6801%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="0.6452%" y="741" width="0.2151%" height="15" fill="rgb(206,188,39)"/><text x="0.8952%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="0.8602%" y="741" width="0.2151%" height="15" fill="rgb(217,207,13)"/><text x="1.1102%" y="751.50"></text></g><g><title>__libc_send (2 samples, 0.43%)</title><rect x="1.0753%" y="741" width="0.4301%" height="15" fill="rgb(231,73,38)"/><text x="1.3253%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.43%)</title><rect x="1.0753%" y="725" width="0.4301%" height="15" fill="rgb(225,20,46)"/><text x="1.3253%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="1.5054%" y="741" width="0.2151%" height="15" fill="rgb(210,31,41)"/><text x="1.7554%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.22%)</title><rect x="1.7204%" y="741" width="0.2151%" height="15" fill="rgb(221,200,47)"/><text x="1.9704%" y="751.50"></text></g><g><title>_int_realloc (1 samples, 0.22%)</title><rect x="1.9355%" y="741" width="0.2151%" height="15" fill="rgb(226,26,5)"/><text x="2.1855%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.43%)</title><rect x="2.1505%" y="741" width="0.4301%" height="15" fill="rgb(249,33,26)"/><text x="2.4005%" y="751.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.22%)</title><rect x="2.5806%" y="741" width="0.2151%" height="15" fill="rgb(235,183,28)"/><text x="2.8306%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.22%)</title><rect x="2.7957%" y="741" width="0.2151%" height="15" fill="rgb(221,5,38)"/><text x="3.0457%" y="751.50"></text></g><g><title>core::num::dec2flt::dec2flt (1 samples, 0.22%)</title><rect x="3.0108%" y="741" width="0.2151%" height="15" fill="rgb(247,18,42)"/><text x="3.2608%" y="751.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (1 samples, 0.22%)</title><rect x="3.2258%" y="741" width="0.2151%" height="15" fill="rgb(241,131,45)"/><text x="3.4758%" y="751.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.22%)</title><rect x="3.4409%" y="741" width="0.2151%" height="15" fill="rgb(249,31,29)"/><text x="3.6909%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.22%)</title><rect x="3.6559%" y="741" width="0.2151%" height="15" fill="rgb(225,111,53)"/><text x="3.9059%" y="751.50"></text></g><g><title>[anon] (18 samples, 3.87%)</title><rect x="0.2151%" y="757" width="3.8710%" height="15" fill="rgb(238,160,17)"/><text x="0.4651%" y="767.50">[ano..</text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.22%)</title><rect x="3.8710%" y="741" width="0.2151%" height="15" fill="rgb(214,148,48)"/><text x="4.1210%" y="751.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.22%)</title><rect x="4.0860%" y="709" width="0.2151%" height="15" fill="rgb(232,36,49)"/><text x="4.3360%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.22%)</title><rect x="4.0860%" y="693" width="0.2151%" height="15" fill="rgb(209,103,24)"/><text x="4.3360%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.22%)</title><rect x="4.0860%" y="677" width="0.2151%" height="15" fill="rgb(229,88,8)"/><text x="4.3360%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.22%)</title><rect x="4.0860%" y="661" width="0.2151%" height="15" fill="rgb(213,181,19)"/><text x="4.3360%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.22%)</title><rect x="4.0860%" y="645" width="0.2151%" height="15" fill="rgb(254,191,54)"/><text x="4.3360%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.22%)</title><rect x="4.0860%" y="629" width="0.2151%" height="15" fill="rgb(241,83,37)"/><text x="4.3360%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.22%)</title><rect x="4.0860%" y="613" width="0.2151%" height="15" fill="rgb(233,36,39)"/><text x="4.3360%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.22%)</title><rect x="4.0860%" y="597" width="0.2151%" height="15" fill="rgb(226,3,54)"/><text x="4.3360%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.22%)</title><rect x="4.0860%" y="581" width="0.2151%" height="15" fill="rgb(245,192,40)"/><text x="4.3360%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.22%)</title><rect x="4.0860%" y="565" width="0.2151%" height="15" fill="rgb(238,167,29)"/><text x="4.3360%" y="575.50"></text></g><g><title>__libc_recv (1 samples, 0.22%)</title><rect x="4.0860%" y="549" width="0.2151%" height="15" fill="rgb(232,182,51)"/><text x="4.3360%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="4.0860%" y="533" width="0.2151%" height="15" fill="rgb(231,60,39)"/><text x="4.3360%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="4.0860%" y="517" width="0.2151%" height="15" fill="rgb(208,69,12)"/><text x="4.3360%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.22%)</title><rect x="4.0860%" y="501" width="0.2151%" height="15" fill="rgb(235,93,37)"/><text x="4.3360%" y="511.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.22%)</title><rect x="4.0860%" y="485" width="0.2151%" height="15" fill="rgb(213,116,39)"/><text x="4.3360%" y="495.50"></text></g><g><title>inet_recvmsg (1 samples, 0.22%)</title><rect x="4.0860%" y="469" width="0.2151%" height="15" fill="rgb(222,207,29)"/><text x="4.3360%" y="479.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.22%)</title><rect x="4.0860%" y="453" width="0.2151%" height="15" fill="rgb(206,96,30)"/><text x="4.3360%" y="463.50"></text></g><g><title>sk_wait_data (1 samples, 0.22%)</title><rect x="4.0860%" y="437" width="0.2151%" height="15" fill="rgb(218,138,4)"/><text x="4.3360%" y="447.50"></text></g><g><title>wait_woken (1 samples, 0.22%)</title><rect x="4.0860%" y="421" width="0.2151%" height="15" fill="rgb(250,191,14)"/><text x="4.3360%" y="431.50"></text></g><g><title>schedule_timeout (1 samples, 0.22%)</title><rect x="4.0860%" y="405" width="0.2151%" height="15" fill="rgb(239,60,40)"/><text x="4.3360%" y="415.50"></text></g><g><title>schedule (1 samples, 0.22%)</title><rect x="4.0860%" y="389" width="0.2151%" height="15" fill="rgb(206,27,48)"/><text x="4.3360%" y="399.50"></text></g><g><title>__schedule (1 samples, 0.22%)</title><rect x="4.0860%" y="373" width="0.2151%" height="15" fill="rgb(225,35,8)"/><text x="4.3360%" y="383.50"></text></g><g><title>finish_task_switch (1 samples, 0.22%)</title><rect x="4.0860%" y="357" width="0.2151%" height="15" fill="rgb(250,213,24)"/><text x="4.3360%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.22%)</title><rect x="4.0860%" y="341" width="0.2151%" height="15" fill="rgb(247,123,22)"/><text x="4.3360%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.22%)</title><rect x="4.0860%" y="325" width="0.2151%" height="15" fill="rgb(231,138,38)"/><text x="4.3360%" y="335.50"></text></g><g><title>native_write_msr (1 samples, 0.22%)</title><rect x="4.0860%" y="309" width="0.2151%" height="15" fill="rgb(231,145,46)"/><text x="4.3360%" y="319.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.22%)</title><rect x="4.5161%" y="437" width="0.2151%" height="15" fill="rgb(251,118,11)"/><text x="4.7661%" y="447.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.65%)</title><rect x="4.3011%" y="549" width="0.6452%" height="15" fill="rgb(217,147,25)"/><text x="4.5511%" y="559.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.65%)</title><rect x="4.3011%" y="533" width="0.6452%" height="15" fill="rgb(247,81,37)"/><text x="4.5511%" y="543.50"></text></g><g><title>mprotect_fixup (3 samples, 0.65%)</title><rect x="4.3011%" y="517" width="0.6452%" height="15" fill="rgb(209,12,38)"/><text x="4.5511%" y="527.50"></text></g><g><title>perf_event_mmap (3 samples, 0.65%)</title><rect x="4.3011%" y="501" width="0.6452%" height="15" fill="rgb(227,1,9)"/><text x="4.5511%" y="511.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.65%)</title><rect x="4.3011%" y="485" width="0.6452%" height="15" fill="rgb(248,47,43)"/><text x="4.5511%" y="495.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.65%)</title><rect x="4.3011%" y="469" width="0.6452%" height="15" fill="rgb(221,10,30)"/><text x="4.5511%" y="479.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.43%)</title><rect x="4.5161%" y="453" width="0.4301%" height="15" fill="rgb(210,229,1)"/><text x="4.7661%" y="463.50"></text></g><g><title>perf_output_copy (1 samples, 0.22%)</title><rect x="4.7312%" y="437" width="0.2151%" height="15" fill="rgb(222,148,37)"/><text x="4.9812%" y="447.50"></text></g><g><title>__GI___mprotect (4 samples, 0.86%)</title><rect x="4.3011%" y="597" width="0.8602%" height="15" fill="rgb(234,67,33)"/><text x="4.5511%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.86%)</title><rect x="4.3011%" y="581" width="0.8602%" height="15" fill="rgb(247,98,35)"/><text x="4.5511%" y="591.50"></text></g><g><title>do_syscall_64 (4 samples, 0.86%)</title><rect x="4.3011%" y="565" width="0.8602%" height="15" fill="rgb(247,138,52)"/><text x="4.5511%" y="575.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.22%)</title><rect x="4.9462%" y="549" width="0.2151%" height="15" fill="rgb(213,79,30)"/><text x="5.1962%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (5 samples, 1.08%)</title><rect x="4.3011%" y="709" width="1.0753%" height="15" fill="rgb(246,177,23)"/><text x="4.5511%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (5 samples, 1.08%)</title><rect x="4.3011%" y="693" width="1.0753%" height="15" fill="rgb(230,62,27)"/><text x="4.5511%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 1.08%)</title><rect x="4.3011%" y="677" width="1.0753%" height="15" fill="rgb(216,154,8)"/><text x="4.5511%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 1.08%)</title><rect x="4.3011%" y="661" width="1.0753%" height="15" fill="rgb(244,35,45)"/><text x="4.5511%" y="671.50"></text></g><g><title>__GI___libc_malloc (5 samples, 1.08%)</title><rect x="4.3011%" y="645" width="1.0753%" height="15" fill="rgb(251,115,12)"/><text x="4.5511%" y="655.50"></text></g><g><title>_int_malloc (5 samples, 1.08%)</title><rect x="4.3011%" y="629" width="1.0753%" height="15" fill="rgb(240,54,50)"/><text x="4.5511%" y="639.50"></text></g><g><title>sysmalloc (5 samples, 1.08%)</title><rect x="4.3011%" y="613" width="1.0753%" height="15" fill="rgb(233,84,52)"/><text x="4.5511%" y="623.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="5.1613%" y="597" width="0.2151%" height="15" fill="rgb(207,117,47)"/><text x="5.4113%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="5.1613%" y="581" width="0.2151%" height="15" fill="rgb(249,43,39)"/><text x="5.4113%" y="591.50"></text></g><g><title>finish_task_switch (1 samples, 0.22%)</title><rect x="5.5914%" y="357" width="0.2151%" height="15" fill="rgb(209,38,44)"/><text x="5.8414%" y="367.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.22%)</title><rect x="5.5914%" y="341" width="0.2151%" height="15" fill="rgb(236,212,23)"/><text x="5.8414%" y="351.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.22%)</title><rect x="5.5914%" y="325" width="0.2151%" height="15" fill="rgb(242,79,21)"/><text x="5.8414%" y="335.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.22%)</title><rect x="5.5914%" y="309" width="0.2151%" height="15" fill="rgb(211,96,35)"/><text x="5.8414%" y="319.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.22%)</title><rect x="5.5914%" y="293" width="0.2151%" height="15" fill="rgb(253,215,40)"/><text x="5.8414%" y="303.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.22%)</title><rect x="5.5914%" y="277" width="0.2151%" height="15" fill="rgb(211,81,21)"/><text x="5.8414%" y="287.50"></text></g><g><title>tick_sched_timer (1 samples, 0.22%)</title><rect x="5.5914%" y="261" width="0.2151%" height="15" fill="rgb(208,190,38)"/><text x="5.8414%" y="271.50"></text></g><g><title>tick_sched_handle (1 samples, 0.22%)</title><rect x="5.5914%" y="245" width="0.2151%" height="15" fill="rgb(235,213,38)"/><text x="5.8414%" y="255.50"></text></g><g><title>update_process_times (1 samples, 0.22%)</title><rect x="5.5914%" y="229" width="0.2151%" height="15" fill="rgb(237,122,38)"/><text x="5.8414%" y="239.50"></text></g><g><title>rcu_sched_clock_irq (1 samples, 0.22%)</title><rect x="5.5914%" y="213" width="0.2151%" height="15" fill="rgb(244,218,35)"/><text x="5.8414%" y="223.50"></text></g><g><title>sk_wait_data (4 samples, 0.86%)</title><rect x="5.3763%" y="437" width="0.8602%" height="15" fill="rgb(240,68,47)"/><text x="5.6263%" y="447.50"></text></g><g><title>wait_woken (4 samples, 0.86%)</title><rect x="5.3763%" y="421" width="0.8602%" height="15" fill="rgb(210,16,53)"/><text x="5.6263%" y="431.50"></text></g><g><title>schedule_timeout (4 samples, 0.86%)</title><rect x="5.3763%" y="405" width="0.8602%" height="15" fill="rgb(235,124,12)"/><text x="5.6263%" y="415.50"></text></g><g><title>schedule (4 samples, 0.86%)</title><rect x="5.3763%" y="389" width="0.8602%" height="15" fill="rgb(224,169,11)"/><text x="5.6263%" y="399.50"></text></g><g><title>__schedule (4 samples, 0.86%)</title><rect x="5.3763%" y="373" width="0.8602%" height="15" fill="rgb(250,166,2)"/><text x="5.6263%" y="383.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.43%)</title><rect x="5.8065%" y="357" width="0.4301%" height="15" fill="rgb(242,216,29)"/><text x="6.0565%" y="367.50"></text></g><g><title>do_syscall_64 (6 samples, 1.29%)</title><rect x="5.3763%" y="517" width="1.2903%" height="15" fill="rgb(230,116,27)"/><text x="5.6263%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 1.29%)</title><rect x="5.3763%" y="501" width="1.2903%" height="15" fill="rgb(228,99,48)"/><text x="5.6263%" y="511.50"></text></g><g><title>__sys_recvfrom (6 samples, 1.29%)</title><rect x="5.3763%" y="485" width="1.2903%" height="15" fill="rgb(253,11,6)"/><text x="5.6263%" y="495.50"></text></g><g><title>inet_recvmsg (6 samples, 1.29%)</title><rect x="5.3763%" y="469" width="1.2903%" height="15" fill="rgb(247,143,39)"/><text x="5.6263%" y="479.50"></text></g><g><title>tcp_recvmsg (6 samples, 1.29%)</title><rect x="5.3763%" y="453" width="1.2903%" height="15" fill="rgb(236,97,10)"/><text x="5.6263%" y="463.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.43%)</title><rect x="6.2366%" y="437" width="0.4301%" height="15" fill="rgb(233,208,19)"/><text x="6.4866%" y="447.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.43%)</title><rect x="6.2366%" y="421" width="0.4301%" height="15" fill="rgb(216,164,2)"/><text x="6.4866%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 1.72%)</title><rect x="5.3763%" y="533" width="1.7204%" height="15" fill="rgb(220,129,5)"/><text x="5.6263%" y="543.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.43%)</title><rect x="6.6667%" y="517" width="0.4301%" height="15" fill="rgb(242,17,10)"/><text x="6.9167%" y="527.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (15 samples, 3.23%)</title><rect x="4.0860%" y="725" width="3.2258%" height="15" fill="rgb(242,107,0)"/><text x="4.3360%" y="735.50">dec..</text></g><g><title>decor_mem::ghosts_cache::GhostsCache::insert_uid2gids_for_values (9 samples, 1.94%)</title><rect x="5.3763%" y="709" width="1.9355%" height="15" fill="rgb(251,28,31)"/><text x="5.6263%" y="719.50">d..</text></g><g><title>mysql::conn::Conn::_query (9 samples, 1.94%)</title><rect x="5.3763%" y="693" width="1.9355%" height="15" fill="rgb(233,223,10)"/><text x="5.6263%" y="703.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (9 samples, 1.94%)</title><rect x="5.3763%" y="677" width="1.9355%" height="15" fill="rgb(215,21,27)"/><text x="5.6263%" y="687.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (9 samples, 1.94%)</title><rect x="5.3763%" y="661" width="1.9355%" height="15" fill="rgb(232,23,21)"/><text x="5.6263%" y="671.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.94%)</title><rect x="5.3763%" y="645" width="1.9355%" height="15" fill="rgb(244,5,23)"/><text x="5.6263%" y="655.50">&lt;..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 1.94%)</title><rect x="5.3763%" y="629" width="1.9355%" height="15" fill="rgb(226,81,46)"/><text x="5.6263%" y="639.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 1.94%)</title><rect x="5.3763%" y="613" width="1.9355%" height="15" fill="rgb(247,70,30)"/><text x="5.6263%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 1.94%)</title><rect x="5.3763%" y="597" width="1.9355%" height="15" fill="rgb(212,68,19)"/><text x="5.6263%" y="607.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 1.94%)</title><rect x="5.3763%" y="581" width="1.9355%" height="15" fill="rgb(240,187,13)"/><text x="5.6263%" y="591.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 1.94%)</title><rect x="5.3763%" y="565" width="1.9355%" height="15" fill="rgb(223,113,26)"/><text x="5.6263%" y="575.50">s..</text></g><g><title>__libc_recv (9 samples, 1.94%)</title><rect x="5.3763%" y="549" width="1.9355%" height="15" fill="rgb(206,192,2)"/><text x="5.6263%" y="559.50">_..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.22%)</title><rect x="7.0968%" y="533" width="0.2151%" height="15" fill="rgb(241,108,4)"/><text x="7.3468%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="7.3118%" y="677" width="0.2151%" height="15" fill="rgb(247,173,49)"/><text x="7.5618%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.22%)</title><rect x="7.5269%" y="677" width="0.2151%" height="15" fill="rgb(224,114,35)"/><text x="7.7769%" y="687.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (18 samples, 3.87%)</title><rect x="4.0860%" y="741" width="3.8710%" height="15" fill="rgb(245,159,27)"/><text x="4.3360%" y="751.50">&lt;dec..</text></g><g><title>decor_mem::stats::get_qtype (3 samples, 0.65%)</title><rect x="7.3118%" y="725" width="0.6452%" height="15" fill="rgb(245,172,44)"/><text x="7.5618%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.65%)</title><rect x="7.3118%" y="709" width="0.6452%" height="15" fill="rgb(236,23,11)"/><text x="7.5618%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.65%)</title><rect x="7.3118%" y="693" width="0.6452%" height="15" fill="rgb(205,117,38)"/><text x="7.5618%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.22%)</title><rect x="7.7419%" y="677" width="0.2151%" height="15" fill="rgb(237,72,25)"/><text x="7.9919%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.22%)</title><rect x="7.7419%" y="661" width="0.2151%" height="15" fill="rgb(244,70,9)"/><text x="7.9919%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.22%)</title><rect x="7.7419%" y="645" width="0.2151%" height="15" fill="rgb(217,125,39)"/><text x="7.9919%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.22%)</title><rect x="7.7419%" y="629" width="0.2151%" height="15" fill="rgb(235,36,10)"/><text x="7.9919%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.22%)</title><rect x="7.7419%" y="613" width="0.2151%" height="15" fill="rgb(251,123,47)"/><text x="7.9919%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.22%)</title><rect x="7.7419%" y="597" width="0.2151%" height="15" fill="rgb(221,13,13)"/><text x="7.9919%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.22%)</title><rect x="7.7419%" y="581" width="0.2151%" height="15" fill="rgb(238,131,9)"/><text x="7.9919%" y="591.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="7.9570%" y="741" width="0.2151%" height="15" fill="rgb(211,50,8)"/><text x="8.2070%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.65%)</title><rect x="8.1720%" y="517" width="0.6452%" height="15" fill="rgb(245,182,24)"/><text x="8.4220%" y="527.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.65%)</title><rect x="8.1720%" y="501" width="0.6452%" height="15" fill="rgb(242,14,37)"/><text x="8.4220%" y="511.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.65%)</title><rect x="8.1720%" y="485" width="0.6452%" height="15" fill="rgb(246,228,12)"/><text x="8.4220%" y="495.50"></text></g><g><title>hwloc::Topology::new (4 samples, 0.86%)</title><rect x="8.1720%" y="581" width="0.8602%" height="15" fill="rgb(213,55,15)"/><text x="8.4220%" y="591.50"></text></g><g><title>hwloc_topology_load (4 samples, 0.86%)</title><rect x="8.1720%" y="565" width="0.8602%" height="15" fill="rgb(209,9,3)"/><text x="8.4220%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.86%)</title><rect x="8.1720%" y="549" width="0.8602%" height="15" fill="rgb(230,59,30)"/><text x="8.4220%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.86%)</title><rect x="8.1720%" y="533" width="0.8602%" height="15" fill="rgb(209,121,21)"/><text x="8.4220%" y="543.50"></text></g><g><title>fgets (1 samples, 0.22%)</title><rect x="8.8172%" y="517" width="0.2151%" height="15" fill="rgb(220,109,13)"/><text x="9.0672%" y="527.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.22%)</title><rect x="8.8172%" y="501" width="0.2151%" height="15" fill="rgb(232,18,1)"/><text x="9.0672%" y="511.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.22%)</title><rect x="8.8172%" y="485" width="0.2151%" height="15" fill="rgb(215,41,42)"/><text x="9.0672%" y="495.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.22%)</title><rect x="8.8172%" y="469" width="0.2151%" height="15" fill="rgb(224,123,36)"/><text x="9.0672%" y="479.50"></text></g><g><title>__GI___read (1 samples, 0.22%)</title><rect x="8.8172%" y="453" width="0.2151%" height="15" fill="rgb(240,125,3)"/><text x="9.0672%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="8.8172%" y="437" width="0.2151%" height="15" fill="rgb(205,98,50)"/><text x="9.0672%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="8.8172%" y="421" width="0.2151%" height="15" fill="rgb(205,185,37)"/><text x="9.0672%" y="431.50"></text></g><g><title>ksys_read (1 samples, 0.22%)</title><rect x="8.8172%" y="405" width="0.2151%" height="15" fill="rgb(238,207,15)"/><text x="9.0672%" y="415.50"></text></g><g><title>vfs_read (1 samples, 0.22%)</title><rect x="8.8172%" y="389" width="0.2151%" height="15" fill="rgb(213,199,42)"/><text x="9.0672%" y="399.50"></text></g><g><title>seq_read (1 samples, 0.22%)</title><rect x="8.8172%" y="373" width="0.2151%" height="15" fill="rgb(235,201,11)"/><text x="9.0672%" y="383.50"></text></g><g><title>show_cpuinfo (1 samples, 0.22%)</title><rect x="8.8172%" y="357" width="0.2151%" height="15" fill="rgb(207,46,11)"/><text x="9.0672%" y="367.50"></text></g><g><title>seq_printf (1 samples, 0.22%)</title><rect x="8.8172%" y="341" width="0.2151%" height="15" fill="rgb(241,35,35)"/><text x="9.0672%" y="351.50"></text></g><g><title>vsnprintf (1 samples, 0.22%)</title><rect x="8.8172%" y="325" width="0.2151%" height="15" fill="rgb(243,32,47)"/><text x="9.0672%" y="335.50"></text></g><g><title>format_decode (1 samples, 0.22%)</title><rect x="8.8172%" y="309" width="0.2151%" height="15" fill="rgb(247,202,23)"/><text x="9.0672%" y="319.50"></text></g><g><title>__libc_start_main (5 samples, 1.08%)</title><rect x="8.1720%" y="741" width="1.0753%" height="15" fill="rgb(219,102,11)"/><text x="8.4220%" y="751.50"></text></g><g><title>main (5 samples, 1.08%)</title><rect x="8.1720%" y="725" width="1.0753%" height="15" fill="rgb(243,110,44)"/><text x="8.4220%" y="735.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 1.08%)</title><rect x="8.1720%" y="709" width="1.0753%" height="15" fill="rgb(222,74,54)"/><text x="8.4220%" y="719.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 1.08%)</title><rect x="8.1720%" y="693" width="1.0753%" height="15" fill="rgb(216,99,12)"/><text x="8.4220%" y="703.50"></text></g><g><title>std::panicking::try (5 samples, 1.08%)</title><rect x="8.1720%" y="677" width="1.0753%" height="15" fill="rgb(226,22,26)"/><text x="8.4220%" y="687.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 1.08%)</title><rect x="8.1720%" y="661" width="1.0753%" height="15" fill="rgb(217,163,10)"/><text x="8.4220%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 1.08%)</title><rect x="8.1720%" y="645" width="1.0753%" height="15" fill="rgb(213,25,53)"/><text x="8.4220%" y="655.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (5 samples, 1.08%)</title><rect x="8.1720%" y="629" width="1.0753%" height="15" fill="rgb(252,105,26)"/><text x="8.4220%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 1.08%)</title><rect x="8.1720%" y="613" width="1.0753%" height="15" fill="rgb(220,39,43)"/><text x="8.4220%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::main (5 samples, 1.08%)</title><rect x="8.1720%" y="597" width="1.0753%" height="15" fill="rgb(229,68,48)"/><text x="8.4220%" y="607.50"></text></g><g><title>lobsters_microbenchmarks::queriers::expensive_queries::post_comment (1 samples, 0.22%)</title><rect x="9.0323%" y="581" width="0.2151%" height="15" fill="rgb(252,8,32)"/><text x="9.2823%" y="591.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.22%)</title><rect x="9.0323%" y="565" width="0.2151%" height="15" fill="rgb(223,20,43)"/><text x="9.2823%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.22%)</title><rect x="9.0323%" y="549" width="0.2151%" height="15" fill="rgb(229,81,49)"/><text x="9.2823%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.22%)</title><rect x="9.0323%" y="533" width="0.2151%" height="15" fill="rgb(236,28,36)"/><text x="9.2823%" y="543.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.22%)</title><rect x="9.0323%" y="517" width="0.2151%" height="15" fill="rgb(249,185,26)"/><text x="9.2823%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1 samples, 0.22%)</title><rect x="9.0323%" y="501" width="0.2151%" height="15" fill="rgb(249,174,33)"/><text x="9.2823%" y="511.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.22%)</title><rect x="9.0323%" y="485" width="0.2151%" height="15" fill="rgb(233,201,37)"/><text x="9.2823%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.22%)</title><rect x="9.0323%" y="469" width="0.2151%" height="15" fill="rgb(221,78,26)"/><text x="9.2823%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1 samples, 0.22%)</title><rect x="9.0323%" y="453" width="0.2151%" height="15" fill="rgb(250,127,30)"/><text x="9.2823%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="9.2473%" y="741" width="0.2151%" height="15" fill="rgb(230,49,44)"/><text x="9.4973%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.43%)</title><rect x="9.4624%" y="741" width="0.4301%" height="15" fill="rgb(229,67,23)"/><text x="9.7124%" y="751.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.22%)</title><rect x="9.8925%" y="741" width="0.2151%" height="15" fill="rgb(249,83,47)"/><text x="10.1425%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="10.1075%" y="661" width="0.2151%" height="15" fill="rgb(215,43,3)"/><text x="10.3575%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.43%)</title><rect x="10.3226%" y="661" width="0.4301%" height="15" fill="rgb(238,154,13)"/><text x="10.5726%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="10.5376%" y="645" width="0.2151%" height="15" fill="rgb(219,56,2)"/><text x="10.7876%" y="655.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.22%)</title><rect x="11.1828%" y="629" width="0.2151%" height="15" fill="rgb(233,0,4)"/><text x="11.4328%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.65%)</title><rect x="12.0430%" y="613" width="0.6452%" height="15" fill="rgb(235,30,7)"/><text x="12.2930%" y="623.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (7 samples, 1.51%)</title><rect x="11.3978%" y="629" width="1.5054%" height="15" fill="rgb(250,79,13)"/><text x="11.6478%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.22%)</title><rect x="12.6882%" y="613" width="0.2151%" height="15" fill="rgb(211,146,34)"/><text x="12.9382%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.22%)</title><rect x="12.6882%" y="597" width="0.2151%" height="15" fill="rgb(228,22,38)"/><text x="12.9382%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.22%)</title><rect x="12.6882%" y="581" width="0.2151%" height="15" fill="rgb(235,168,5)"/><text x="12.9382%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.22%)</title><rect x="12.6882%" y="565" width="0.2151%" height="15" fill="rgb(221,155,16)"/><text x="12.9382%" y="575.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.22%)</title><rect x="12.6882%" y="549" width="0.2151%" height="15" fill="rgb(215,215,53)"/><text x="12.9382%" y="559.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (14 samples, 3.01%)</title><rect x="10.1075%" y="741" width="3.0108%" height="15" fill="rgb(223,4,10)"/><text x="10.3575%" y="751.50">dec..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (14 samples, 3.01%)</title><rect x="10.1075%" y="725" width="3.0108%" height="15" fill="rgb(234,103,6)"/><text x="10.3575%" y="735.50">msq..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (14 samples, 3.01%)</title><rect x="10.1075%" y="709" width="3.0108%" height="15" fill="rgb(227,97,0)"/><text x="10.3575%" y="719.50">&lt;de..</text></g><g><title>decor_mem::stats::get_qtype (14 samples, 3.01%)</title><rect x="10.1075%" y="693" width="3.0108%" height="15" fill="rgb(234,150,53)"/><text x="10.3575%" y="703.50">dec..</text></g><g><title>sql_parser::parser::parse_statements (14 samples, 3.01%)</title><rect x="10.1075%" y="677" width="3.0108%" height="15" fill="rgb(228,201,54)"/><text x="10.3575%" y="687.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (11 samples, 2.37%)</title><rect x="10.7527%" y="661" width="2.3656%" height="15" fill="rgb(222,22,37)"/><text x="11.0027%" y="671.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (11 samples, 2.37%)</title><rect x="10.7527%" y="645" width="2.3656%" height="15" fill="rgb(237,53,32)"/><text x="11.0027%" y="655.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.22%)</title><rect x="12.9032%" y="629" width="0.2151%" height="15" fill="rgb(233,25,53)"/><text x="13.1532%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (1 samples, 0.22%)</title><rect x="13.1183%" y="741" width="0.2151%" height="15" fill="rgb(210,40,34)"/><text x="13.3683%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (1 samples, 0.22%)</title><rect x="13.1183%" y="725" width="0.2151%" height="15" fill="rgb(241,220,44)"/><text x="13.3683%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (1 samples, 0.22%)</title><rect x="13.1183%" y="709" width="0.2151%" height="15" fill="rgb(235,28,35)"/><text x="13.3683%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="13.1183%" y="693" width="0.2151%" height="15" fill="rgb(210,56,17)"/><text x="13.3683%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="13.1183%" y="677" width="0.2151%" height="15" fill="rgb(224,130,29)"/><text x="13.3683%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="13.1183%" y="661" width="0.2151%" height="15" fill="rgb(235,212,8)"/><text x="13.3683%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="13.1183%" y="645" width="0.2151%" height="15" fill="rgb(223,33,50)"/><text x="13.3683%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="13.1183%" y="629" width="0.2151%" height="15" fill="rgb(219,149,13)"/><text x="13.3683%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="13.1183%" y="613" width="0.2151%" height="15" fill="rgb(250,156,29)"/><text x="13.3683%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="13.1183%" y="597" width="0.2151%" height="15" fill="rgb(216,193,19)"/><text x="13.3683%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="13.1183%" y="581" width="0.2151%" height="15" fill="rgb(216,135,14)"/><text x="13.3683%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.22%)</title><rect x="13.1183%" y="565" width="0.2151%" height="15" fill="rgb(241,47,5)"/><text x="13.3683%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.22%)</title><rect x="13.1183%" y="549" width="0.2151%" height="15" fill="rgb(233,42,35)"/><text x="13.3683%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="13.1183%" y="533" width="0.2151%" height="15" fill="rgb(231,13,6)"/><text x="13.3683%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="13.1183%" y="517" width="0.2151%" height="15" fill="rgb(207,181,40)"/><text x="13.3683%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="13.1183%" y="501" width="0.2151%" height="15" fill="rgb(254,173,49)"/><text x="13.3683%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="13.1183%" y="485" width="0.2151%" height="15" fill="rgb(221,1,38)"/><text x="13.3683%" y="495.50"></text></g><g><title>decor_mem::select::get_value_for_rows (1 samples, 0.22%)</title><rect x="13.3333%" y="741" width="0.2151%" height="15" fill="rgb(206,124,46)"/><text x="13.5833%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="13.3333%" y="725" width="0.2151%" height="15" fill="rgb(249,21,11)"/><text x="13.5833%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.22%)</title><rect x="13.5484%" y="693" width="0.2151%" height="15" fill="rgb(222,201,40)"/><text x="13.7984%" y="703.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.43%)</title><rect x="13.5484%" y="741" width="0.4301%" height="15" fill="rgb(235,61,29)"/><text x="13.7984%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.43%)</title><rect x="13.5484%" y="725" width="0.4301%" height="15" fill="rgb(219,207,3)"/><text x="13.7984%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.43%)</title><rect x="13.5484%" y="709" width="0.4301%" height="15" fill="rgb(222,56,46)"/><text x="13.7984%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.22%)</title><rect x="13.7634%" y="693" width="0.2151%" height="15" fill="rgb(239,76,54)"/><text x="14.0134%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.22%)</title><rect x="13.7634%" y="677" width="0.2151%" height="15" fill="rgb(231,124,27)"/><text x="14.0134%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="13.7634%" y="661" width="0.2151%" height="15" fill="rgb(249,195,6)"/><text x="14.0134%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="13.7634%" y="645" width="0.2151%" height="15" fill="rgb(237,174,47)"/><text x="14.0134%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="13.7634%" y="629" width="0.2151%" height="15" fill="rgb(206,201,31)"/><text x="14.0134%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="13.7634%" y="613" width="0.2151%" height="15" fill="rgb(231,57,52)"/><text x="14.0134%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="13.7634%" y="597" width="0.2151%" height="15" fill="rgb(248,177,22)"/><text x="14.0134%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="13.7634%" y="581" width="0.2151%" height="15" fill="rgb(215,211,37)"/><text x="14.0134%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.22%)</title><rect x="13.7634%" y="565" width="0.2151%" height="15" fill="rgb(241,128,51)"/><text x="14.0134%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.22%)</title><rect x="13.7634%" y="549" width="0.2151%" height="15" fill="rgb(227,165,31)"/><text x="14.0134%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.22%)</title><rect x="13.7634%" y="533" width="0.2151%" height="15" fill="rgb(228,167,24)"/><text x="14.0134%" y="543.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.22%)</title><rect x="13.9785%" y="725" width="0.2151%" height="15" fill="rgb(228,143,12)"/><text x="14.2285%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.22%)</title><rect x="13.9785%" y="709" width="0.2151%" height="15" fill="rgb(249,149,8)"/><text x="14.2285%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.22%)</title><rect x="13.9785%" y="693" width="0.2151%" height="15" fill="rgb(243,35,44)"/><text x="14.2285%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.22%)</title><rect x="13.9785%" y="677" width="0.2151%" height="15" fill="rgb(246,89,9)"/><text x="14.2285%" y="687.50"></text></g><g><title>dlopen (1 samples, 0.22%)</title><rect x="13.9785%" y="661" width="0.2151%" height="15" fill="rgb(233,213,13)"/><text x="14.2285%" y="671.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.22%)</title><rect x="13.9785%" y="645" width="0.2151%" height="15" fill="rgb(233,141,41)"/><text x="14.2285%" y="655.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.22%)</title><rect x="13.9785%" y="629" width="0.2151%" height="15" fill="rgb(239,167,4)"/><text x="14.2285%" y="639.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.22%)</title><rect x="13.9785%" y="613" width="0.2151%" height="15" fill="rgb(209,217,16)"/><text x="14.2285%" y="623.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.22%)</title><rect x="13.9785%" y="597" width="0.2151%" height="15" fill="rgb(219,88,35)"/><text x="14.2285%" y="607.50"></text></g><g><title>_dl_open (1 samples, 0.22%)</title><rect x="13.9785%" y="581" width="0.2151%" height="15" fill="rgb(220,193,23)"/><text x="14.2285%" y="591.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.22%)</title><rect x="13.9785%" y="565" width="0.2151%" height="15" fill="rgb(230,90,52)"/><text x="14.2285%" y="575.50"></text></g><g><title>dl_open_worker (1 samples, 0.22%)</title><rect x="13.9785%" y="549" width="0.2151%" height="15" fill="rgb(252,106,19)"/><text x="14.2285%" y="559.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.22%)</title><rect x="13.9785%" y="533" width="0.2151%" height="15" fill="rgb(206,74,20)"/><text x="14.2285%" y="543.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.22%)</title><rect x="13.9785%" y="517" width="0.2151%" height="15" fill="rgb(230,138,44)"/><text x="14.2285%" y="527.50"></text></g><g><title>openaux (1 samples, 0.22%)</title><rect x="13.9785%" y="501" width="0.2151%" height="15" fill="rgb(235,182,43)"/><text x="14.2285%" y="511.50"></text></g><g><title>_dl_map_object (1 samples, 0.22%)</title><rect x="13.9785%" y="485" width="0.2151%" height="15" fill="rgb(242,16,51)"/><text x="14.2285%" y="495.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.22%)</title><rect x="13.9785%" y="469" width="0.2151%" height="15" fill="rgb(248,9,4)"/><text x="14.2285%" y="479.50"></text></g><g><title>__mmap (1 samples, 0.22%)</title><rect x="13.9785%" y="453" width="0.2151%" height="15" fill="rgb(210,31,22)"/><text x="14.2285%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="13.9785%" y="437" width="0.2151%" height="15" fill="rgb(239,54,39)"/><text x="14.2285%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="13.9785%" y="421" width="0.2151%" height="15" fill="rgb(230,99,41)"/><text x="14.2285%" y="431.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.22%)</title><rect x="13.9785%" y="405" width="0.2151%" height="15" fill="rgb(253,106,12)"/><text x="14.2285%" y="415.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.22%)</title><rect x="13.9785%" y="389" width="0.2151%" height="15" fill="rgb(213,46,41)"/><text x="14.2285%" y="399.50"></text></g><g><title>do_mmap (1 samples, 0.22%)</title><rect x="13.9785%" y="373" width="0.2151%" height="15" fill="rgb(215,133,35)"/><text x="14.2285%" y="383.50"></text></g><g><title>mmap_region (1 samples, 0.22%)</title><rect x="13.9785%" y="357" width="0.2151%" height="15" fill="rgb(213,28,5)"/><text x="14.2285%" y="367.50"></text></g><g><title>__do_munmap (1 samples, 0.22%)</title><rect x="13.9785%" y="341" width="0.2151%" height="15" fill="rgb(215,77,49)"/><text x="14.2285%" y="351.50"></text></g><g><title>lobsters_microbenchmarks::init_database (1 samples, 0.22%)</title><rect x="14.1935%" y="725" width="0.2151%" height="15" fill="rgb(248,100,22)"/><text x="14.4435%" y="735.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.22%)</title><rect x="14.1935%" y="709" width="0.2151%" height="15" fill="rgb(208,67,9)"/><text x="14.4435%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.22%)</title><rect x="14.1935%" y="693" width="0.2151%" height="15" fill="rgb(219,133,21)"/><text x="14.4435%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.22%)</title><rect x="14.1935%" y="677" width="0.2151%" height="15" fill="rgb(246,46,29)"/><text x="14.4435%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.22%)</title><rect x="14.1935%" y="661" width="0.2151%" height="15" fill="rgb(246,185,52)"/><text x="14.4435%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.22%)</title><rect x="14.1935%" y="645" width="0.2151%" height="15" fill="rgb(252,136,11)"/><text x="14.4435%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.22%)</title><rect x="14.1935%" y="629" width="0.2151%" height="15" fill="rgb(219,138,53)"/><text x="14.4435%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.22%)</title><rect x="14.1935%" y="613" width="0.2151%" height="15" fill="rgb(211,51,23)"/><text x="14.4435%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.22%)</title><rect x="14.1935%" y="597" width="0.2151%" height="15" fill="rgb(247,221,28)"/><text x="14.4435%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.22%)</title><rect x="14.1935%" y="581" width="0.2151%" height="15" fill="rgb(251,222,45)"/><text x="14.4435%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.22%)</title><rect x="14.1935%" y="565" width="0.2151%" height="15" fill="rgb(217,162,53)"/><text x="14.4435%" y="575.50"></text></g><g><title>__libc_recv (1 samples, 0.22%)</title><rect x="14.1935%" y="549" width="0.2151%" height="15" fill="rgb(229,93,14)"/><text x="14.4435%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="14.1935%" y="533" width="0.2151%" height="15" fill="rgb(209,67,49)"/><text x="14.4435%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="14.1935%" y="517" width="0.2151%" height="15" fill="rgb(213,87,29)"/><text x="14.4435%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.22%)</title><rect x="14.1935%" y="501" width="0.2151%" height="15" fill="rgb(205,151,52)"/><text x="14.4435%" y="511.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.22%)</title><rect x="14.1935%" y="485" width="0.2151%" height="15" fill="rgb(253,215,39)"/><text x="14.4435%" y="495.50"></text></g><g><title>inet_recvmsg (1 samples, 0.22%)</title><rect x="14.1935%" y="469" width="0.2151%" height="15" fill="rgb(221,220,41)"/><text x="14.4435%" y="479.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.22%)</title><rect x="14.1935%" y="453" width="0.2151%" height="15" fill="rgb(218,133,21)"/><text x="14.4435%" y="463.50"></text></g><g><title>sk_wait_data (1 samples, 0.22%)</title><rect x="14.1935%" y="437" width="0.2151%" height="15" fill="rgb(221,193,43)"/><text x="14.4435%" y="447.50"></text></g><g><title>wait_woken (1 samples, 0.22%)</title><rect x="14.1935%" y="421" width="0.2151%" height="15" fill="rgb(240,128,52)"/><text x="14.4435%" y="431.50"></text></g><g><title>schedule_timeout (1 samples, 0.22%)</title><rect x="14.1935%" y="405" width="0.2151%" height="15" fill="rgb(253,114,12)"/><text x="14.4435%" y="415.50"></text></g><g><title>schedule (1 samples, 0.22%)</title><rect x="14.1935%" y="389" width="0.2151%" height="15" fill="rgb(215,223,47)"/><text x="14.4435%" y="399.50"></text></g><g><title>__schedule (1 samples, 0.22%)</title><rect x="14.1935%" y="373" width="0.2151%" height="15" fill="rgb(248,225,23)"/><text x="14.4435%" y="383.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.22%)</title><rect x="14.1935%" y="357" width="0.2151%" height="15" fill="rgb(250,108,0)"/><text x="14.4435%" y="367.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.22%)</title><rect x="14.4086%" y="677" width="0.2151%" height="15" fill="rgb(228,208,7)"/><text x="14.6586%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.22%)</title><rect x="14.4086%" y="661" width="0.2151%" height="15" fill="rgb(244,45,10)"/><text x="14.6586%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.22%)</title><rect x="14.4086%" y="645" width="0.2151%" height="15" fill="rgb(207,125,25)"/><text x="14.6586%" y="655.50"></text></g><g><title>__rust_alloc (1 samples, 0.22%)</title><rect x="14.4086%" y="629" width="0.2151%" height="15" fill="rgb(210,195,18)"/><text x="14.6586%" y="639.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.22%)</title><rect x="14.6237%" y="325" width="0.2151%" height="15" fill="rgb(249,80,12)"/><text x="14.8737%" y="335.50"></text></g><g><title>lobsters_microbenchmarks::main (5 samples, 1.08%)</title><rect x="13.9785%" y="741" width="1.0753%" height="15" fill="rgb(221,65,9)"/><text x="14.2285%" y="751.50"></text></g><g><title>lobsters_microbenchmarks::queriers::expensive_queries::post_comment (3 samples, 0.65%)</title><rect x="14.4086%" y="725" width="0.6452%" height="15" fill="rgb(235,49,36)"/><text x="14.6586%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.65%)</title><rect x="14.4086%" y="709" width="0.6452%" height="15" fill="rgb(225,32,20)"/><text x="14.6586%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.65%)</title><rect x="14.4086%" y="693" width="0.6452%" height="15" fill="rgb(215,141,46)"/><text x="14.6586%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.43%)</title><rect x="14.6237%" y="677" width="0.4301%" height="15" fill="rgb(250,160,47)"/><text x="14.8737%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.43%)</title><rect x="14.6237%" y="661" width="0.4301%" height="15" fill="rgb(216,222,40)"/><text x="14.8737%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.43%)</title><rect x="14.6237%" y="645" width="0.4301%" height="15" fill="rgb(234,217,39)"/><text x="14.8737%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.43%)</title><rect x="14.6237%" y="629" width="0.4301%" height="15" fill="rgb(207,178,40)"/><text x="14.8737%" y="639.50"></text></g><g><title>__libc_send (2 samples, 0.43%)</title><rect x="14.6237%" y="613" width="0.4301%" height="15" fill="rgb(221,136,13)"/><text x="14.8737%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.43%)</title><rect x="14.6237%" y="597" width="0.4301%" height="15" fill="rgb(249,199,10)"/><text x="14.8737%" y="607.50"></text></g><g><title>do_syscall_64 (2 samples, 0.43%)</title><rect x="14.6237%" y="581" width="0.4301%" height="15" fill="rgb(249,222,13)"/><text x="14.8737%" y="591.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.43%)</title><rect x="14.6237%" y="565" width="0.4301%" height="15" fill="rgb(244,185,38)"/><text x="14.8737%" y="575.50"></text></g><g><title>__sys_sendto (2 samples, 0.43%)</title><rect x="14.6237%" y="549" width="0.4301%" height="15" fill="rgb(236,202,9)"/><text x="14.8737%" y="559.50"></text></g><g><title>sock_sendmsg (2 samples, 0.43%)</title><rect x="14.6237%" y="533" width="0.4301%" height="15" fill="rgb(250,229,37)"/><text x="14.8737%" y="543.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.43%)</title><rect x="14.6237%" y="517" width="0.4301%" height="15" fill="rgb(206,174,23)"/><text x="14.8737%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.43%)</title><rect x="14.6237%" y="501" width="0.4301%" height="15" fill="rgb(211,33,43)"/><text x="14.8737%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.43%)</title><rect x="14.6237%" y="485" width="0.4301%" height="15" fill="rgb(245,58,50)"/><text x="14.8737%" y="495.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.43%)</title><rect x="14.6237%" y="469" width="0.4301%" height="15" fill="rgb(244,68,36)"/><text x="14.8737%" y="479.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.43%)</title><rect x="14.6237%" y="453" width="0.4301%" height="15" fill="rgb(232,229,15)"/><text x="14.8737%" y="463.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.43%)</title><rect x="14.6237%" y="437" width="0.4301%" height="15" fill="rgb(254,30,23)"/><text x="14.8737%" y="447.50"></text></g><g><title>ip_output (2 samples, 0.43%)</title><rect x="14.6237%" y="421" width="0.4301%" height="15" fill="rgb(235,160,14)"/><text x="14.8737%" y="431.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.43%)</title><rect x="14.6237%" y="405" width="0.4301%" height="15" fill="rgb(212,155,44)"/><text x="14.8737%" y="415.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.43%)</title><rect x="14.6237%" y="389" width="0.4301%" height="15" fill="rgb(226,2,50)"/><text x="14.8737%" y="399.50"></text></g><g><title>do_softirq (2 samples, 0.43%)</title><rect x="14.6237%" y="373" width="0.4301%" height="15" fill="rgb(234,177,6)"/><text x="14.8737%" y="383.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.43%)</title><rect x="14.6237%" y="357" width="0.4301%" height="15" fill="rgb(217,24,9)"/><text x="14.8737%" y="367.50"></text></g><g><title>__do_softirq (2 samples, 0.43%)</title><rect x="14.6237%" y="341" width="0.4301%" height="15" fill="rgb(220,13,46)"/><text x="14.8737%" y="351.50"></text></g><g><title>net_rx_action (1 samples, 0.22%)</title><rect x="14.8387%" y="325" width="0.2151%" height="15" fill="rgb(239,221,27)"/><text x="15.0887%" y="335.50"></text></g><g><title>process_backlog (1 samples, 0.22%)</title><rect x="14.8387%" y="309" width="0.2151%" height="15" fill="rgb(222,198,25)"/><text x="15.0887%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.22%)</title><rect x="14.8387%" y="293" width="0.2151%" height="15" fill="rgb(211,99,13)"/><text x="15.0887%" y="303.50"></text></g><g><title>ip_rcv (1 samples, 0.22%)</title><rect x="14.8387%" y="277" width="0.2151%" height="15" fill="rgb(232,111,31)"/><text x="15.0887%" y="287.50"></text></g><g><title>ip_local_deliver (1 samples, 0.22%)</title><rect x="14.8387%" y="261" width="0.2151%" height="15" fill="rgb(245,82,37)"/><text x="15.0887%" y="271.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.22%)</title><rect x="14.8387%" y="245" width="0.2151%" height="15" fill="rgb(227,149,46)"/><text x="15.0887%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.22%)</title><rect x="14.8387%" y="229" width="0.2151%" height="15" fill="rgb(218,36,50)"/><text x="15.0887%" y="239.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.22%)</title><rect x="14.8387%" y="213" width="0.2151%" height="15" fill="rgb(226,80,48)"/><text x="15.0887%" y="223.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.22%)</title><rect x="14.8387%" y="197" width="0.2151%" height="15" fill="rgb(238,224,15)"/><text x="15.0887%" y="207.50"></text></g><g><title>inet_ehashfn (1 samples, 0.22%)</title><rect x="14.8387%" y="181" width="0.2151%" height="15" fill="rgb(241,136,10)"/><text x="15.0887%" y="191.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.22%)</title><rect x="15.0538%" y="245" width="0.2151%" height="15" fill="rgb(208,32,45)"/><text x="15.3038%" y="255.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (2 samples, 0.43%)</title><rect x="15.0538%" y="693" width="0.4301%" height="15" fill="rgb(207,135,9)"/><text x="15.3038%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.43%)</title><rect x="15.0538%" y="677" width="0.4301%" height="15" fill="rgb(206,86,44)"/><text x="15.3038%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.43%)</title><rect x="15.0538%" y="661" width="0.4301%" height="15" fill="rgb(245,177,15)"/><text x="15.3038%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.43%)</title><rect x="15.0538%" y="645" width="0.4301%" height="15" fill="rgb(206,64,50)"/><text x="15.3038%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.43%)</title><rect x="15.0538%" y="629" width="0.4301%" height="15" fill="rgb(234,36,40)"/><text x="15.3038%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.43%)</title><rect x="15.0538%" y="613" width="0.4301%" height="15" fill="rgb(213,64,8)"/><text x="15.3038%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.43%)</title><rect x="15.0538%" y="597" width="0.4301%" height="15" fill="rgb(210,75,36)"/><text x="15.3038%" y="607.50"></text></g><g><title>__libc_send (2 samples, 0.43%)</title><rect x="15.0538%" y="581" width="0.4301%" height="15" fill="rgb(229,88,21)"/><text x="15.3038%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.43%)</title><rect x="15.0538%" y="565" width="0.4301%" height="15" fill="rgb(252,204,47)"/><text x="15.3038%" y="575.50"></text></g><g><title>do_syscall_64 (2 samples, 0.43%)</title><rect x="15.0538%" y="549" width="0.4301%" height="15" fill="rgb(208,77,27)"/><text x="15.3038%" y="559.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.43%)</title><rect x="15.0538%" y="533" width="0.4301%" height="15" fill="rgb(221,76,26)"/><text x="15.3038%" y="543.50"></text></g><g><title>__sys_sendto (2 samples, 0.43%)</title><rect x="15.0538%" y="517" width="0.4301%" height="15" fill="rgb(225,139,18)"/><text x="15.3038%" y="527.50"></text></g><g><title>sock_sendmsg (2 samples, 0.43%)</title><rect x="15.0538%" y="501" width="0.4301%" height="15" fill="rgb(230,137,11)"/><text x="15.3038%" y="511.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.43%)</title><rect x="15.0538%" y="485" width="0.4301%" height="15" fill="rgb(212,28,1)"/><text x="15.3038%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.43%)</title><rect x="15.0538%" y="469" width="0.4301%" height="15" fill="rgb(248,164,17)"/><text x="15.3038%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.43%)</title><rect x="15.0538%" y="453" width="0.4301%" height="15" fill="rgb(222,171,42)"/><text x="15.3038%" y="463.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.43%)</title><rect x="15.0538%" y="437" width="0.4301%" height="15" fill="rgb(243,84,45)"/><text x="15.3038%" y="447.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.43%)</title><rect x="15.0538%" y="421" width="0.4301%" height="15" fill="rgb(252,49,23)"/><text x="15.3038%" y="431.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.43%)</title><rect x="15.0538%" y="405" width="0.4301%" height="15" fill="rgb(215,19,7)"/><text x="15.3038%" y="415.50"></text></g><g><title>ip_output (2 samples, 0.43%)</title><rect x="15.0538%" y="389" width="0.4301%" height="15" fill="rgb(238,81,41)"/><text x="15.3038%" y="399.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.43%)</title><rect x="15.0538%" y="373" width="0.4301%" height="15" fill="rgb(210,199,37)"/><text x="15.3038%" y="383.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.43%)</title><rect x="15.0538%" y="357" width="0.4301%" height="15" fill="rgb(244,192,49)"/><text x="15.3038%" y="367.50"></text></g><g><title>do_softirq (2 samples, 0.43%)</title><rect x="15.0538%" y="341" width="0.4301%" height="15" fill="rgb(226,211,11)"/><text x="15.3038%" y="351.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.43%)</title><rect x="15.0538%" y="325" width="0.4301%" height="15" fill="rgb(236,162,54)"/><text x="15.3038%" y="335.50"></text></g><g><title>__do_softirq (2 samples, 0.43%)</title><rect x="15.0538%" y="309" width="0.4301%" height="15" fill="rgb(220,229,9)"/><text x="15.3038%" y="319.50"></text></g><g><title>net_rx_action (2 samples, 0.43%)</title><rect x="15.0538%" y="293" width="0.4301%" height="15" fill="rgb(250,87,22)"/><text x="15.3038%" y="303.50"></text></g><g><title>process_backlog (2 samples, 0.43%)</title><rect x="15.0538%" y="277" width="0.4301%" height="15" fill="rgb(239,43,17)"/><text x="15.3038%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.43%)</title><rect x="15.0538%" y="261" width="0.4301%" height="15" fill="rgb(231,177,25)"/><text x="15.3038%" y="271.50"></text></g><g><title>ip_rcv (1 samples, 0.22%)</title><rect x="15.2688%" y="245" width="0.2151%" height="15" fill="rgb(219,179,1)"/><text x="15.5188%" y="255.50"></text></g><g><title>ip_local_deliver (1 samples, 0.22%)</title><rect x="15.2688%" y="229" width="0.2151%" height="15" fill="rgb(238,219,53)"/><text x="15.5188%" y="239.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.22%)</title><rect x="15.2688%" y="213" width="0.2151%" height="15" fill="rgb(232,167,36)"/><text x="15.5188%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.22%)</title><rect x="15.2688%" y="197" width="0.2151%" height="15" fill="rgb(244,19,51)"/><text x="15.5188%" y="207.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.22%)</title><rect x="15.2688%" y="181" width="0.2151%" height="15" fill="rgb(224,6,22)"/><text x="15.5188%" y="191.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.65%)</title><rect x="15.0538%" y="725" width="0.6452%" height="15" fill="rgb(224,145,5)"/><text x="15.3038%" y="735.50"></text></g><g><title>decor_mem::Shim::create_schema (3 samples, 0.65%)</title><rect x="15.0538%" y="709" width="0.6452%" height="15" fill="rgb(234,130,49)"/><text x="15.3038%" y="719.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.22%)</title><rect x="15.4839%" y="693" width="0.2151%" height="15" fill="rgb(254,6,2)"/><text x="15.7339%" y="703.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.22%)</title><rect x="15.4839%" y="677" width="0.2151%" height="15" fill="rgb(208,96,46)"/><text x="15.7339%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.22%)</title><rect x="15.4839%" y="661" width="0.2151%" height="15" fill="rgb(239,3,39)"/><text x="15.7339%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.22%)</title><rect x="15.4839%" y="645" width="0.2151%" height="15" fill="rgb(233,210,1)"/><text x="15.7339%" y="655.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.22%)</title><rect x="15.4839%" y="629" width="0.2151%" height="15" fill="rgb(244,137,37)"/><text x="15.7339%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="15.4839%" y="613" width="0.2151%" height="15" fill="rgb(240,136,2)"/><text x="15.7339%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="15.4839%" y="597" width="0.2151%" height="15" fill="rgb(239,18,37)"/><text x="15.7339%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="15.6989%" y="677" width="0.2151%" height="15" fill="rgb(218,185,22)"/><text x="15.9489%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.22%)</title><rect x="15.6989%" y="661" width="0.2151%" height="15" fill="rgb(225,218,4)"/><text x="15.9489%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="15.6989%" y="645" width="0.2151%" height="15" fill="rgb(230,182,32)"/><text x="15.9489%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="15.6989%" y="629" width="0.2151%" height="15" fill="rgb(242,56,43)"/><text x="15.9489%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="15.6989%" y="613" width="0.2151%" height="15" fill="rgb(233,99,24)"/><text x="15.9489%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="15.6989%" y="597" width="0.2151%" height="15" fill="rgb(234,209,42)"/><text x="15.9489%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="15.6989%" y="581" width="0.2151%" height="15" fill="rgb(227,7,12)"/><text x="15.9489%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.22%)</title><rect x="15.6989%" y="565" width="0.2151%" height="15" fill="rgb(245,203,43)"/><text x="15.9489%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.22%)</title><rect x="15.6989%" y="549" width="0.2151%" height="15" fill="rgb(238,205,33)"/><text x="15.9489%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.22%)</title><rect x="15.6989%" y="533" width="0.2151%" height="15" fill="rgb(231,56,7)"/><text x="15.9489%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.43%)</title><rect x="15.6989%" y="693" width="0.4301%" height="15" fill="rgb(244,186,29)"/><text x="15.9489%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="15.9140%" y="677" width="0.2151%" height="15" fill="rgb(234,111,31)"/><text x="16.1640%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="15.9140%" y="661" width="0.2151%" height="15" fill="rgb(241,149,10)"/><text x="16.1640%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="15.9140%" y="645" width="0.2151%" height="15" fill="rgb(249,206,44)"/><text x="16.1640%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="15.9140%" y="629" width="0.2151%" height="15" fill="rgb(251,153,30)"/><text x="16.1640%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="15.9140%" y="613" width="0.2151%" height="15" fill="rgb(239,152,38)"/><text x="16.1640%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="15.9140%" y="597" width="0.2151%" height="15" fill="rgb(249,139,47)"/><text x="16.1640%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="15.9140%" y="581" width="0.2151%" height="15" fill="rgb(244,64,35)"/><text x="16.1640%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="15.9140%" y="565" width="0.2151%" height="15" fill="rgb(216,46,15)"/><text x="16.1640%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="15.9140%" y="549" width="0.2151%" height="15" fill="rgb(250,74,19)"/><text x="16.1640%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.22%)</title><rect x="15.9140%" y="533" width="0.2151%" height="15" fill="rgb(249,42,33)"/><text x="16.1640%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.22%)</title><rect x="15.9140%" y="517" width="0.2151%" height="15" fill="rgb(242,149,17)"/><text x="16.1640%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="15.9140%" y="501" width="0.2151%" height="15" fill="rgb(244,29,21)"/><text x="16.1640%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="15.9140%" y="485" width="0.2151%" height="15" fill="rgb(220,130,37)"/><text x="16.1640%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="15.9140%" y="469" width="0.2151%" height="15" fill="rgb(211,67,2)"/><text x="16.1640%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="15.9140%" y="453" width="0.2151%" height="15" fill="rgb(235,68,52)"/><text x="16.1640%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.22%)</title><rect x="16.1290%" y="677" width="0.2151%" height="15" fill="rgb(246,142,3)"/><text x="16.3790%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="16.1290%" y="661" width="0.2151%" height="15" fill="rgb(241,25,7)"/><text x="16.3790%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="16.1290%" y="645" width="0.2151%" height="15" fill="rgb(242,119,39)"/><text x="16.3790%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="16.1290%" y="629" width="0.2151%" height="15" fill="rgb(241,98,45)"/><text x="16.3790%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="16.1290%" y="613" width="0.2151%" height="15" fill="rgb(254,28,30)"/><text x="16.3790%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="16.1290%" y="597" width="0.2151%" height="15" fill="rgb(241,142,54)"/><text x="16.3790%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="16.1290%" y="581" width="0.2151%" height="15" fill="rgb(222,85,15)"/><text x="16.3790%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.22%)</title><rect x="16.1290%" y="565" width="0.2151%" height="15" fill="rgb(210,85,47)"/><text x="16.3790%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.22%)</title><rect x="16.1290%" y="549" width="0.2151%" height="15" fill="rgb(224,206,25)"/><text x="16.3790%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="16.1290%" y="533" width="0.2151%" height="15" fill="rgb(243,201,19)"/><text x="16.3790%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="16.1290%" y="517" width="0.2151%" height="15" fill="rgb(236,59,4)"/><text x="16.3790%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="16.1290%" y="501" width="0.2151%" height="15" fill="rgb(254,179,45)"/><text x="16.3790%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="16.1290%" y="485" width="0.2151%" height="15" fill="rgb(226,14,10)"/><text x="16.3790%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.22%)</title><rect x="16.1290%" y="469" width="0.2151%" height="15" fill="rgb(244,27,41)"/><text x="16.3790%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.43%)</title><rect x="16.1290%" y="693" width="0.4301%" height="15" fill="rgb(235,35,32)"/><text x="16.3790%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="16.3441%" y="677" width="0.2151%" height="15" fill="rgb(218,68,31)"/><text x="16.5941%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="16.3441%" y="661" width="0.2151%" height="15" fill="rgb(207,120,37)"/><text x="16.5941%" y="671.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.43%)</title><rect x="16.5591%" y="549" width="0.4301%" height="15" fill="rgb(227,98,0)"/><text x="16.8091%" y="559.50"></text></g><g><title>__sys_sendto (2 samples, 0.43%)</title><rect x="16.5591%" y="533" width="0.4301%" height="15" fill="rgb(207,7,3)"/><text x="16.8091%" y="543.50"></text></g><g><title>sock_sendmsg (2 samples, 0.43%)</title><rect x="16.5591%" y="517" width="0.4301%" height="15" fill="rgb(206,98,19)"/><text x="16.8091%" y="527.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.43%)</title><rect x="16.5591%" y="501" width="0.4301%" height="15" fill="rgb(217,5,26)"/><text x="16.8091%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.43%)</title><rect x="16.5591%" y="485" width="0.4301%" height="15" fill="rgb(235,190,38)"/><text x="16.8091%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.43%)</title><rect x="16.5591%" y="469" width="0.4301%" height="15" fill="rgb(247,86,24)"/><text x="16.8091%" y="479.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.43%)</title><rect x="16.5591%" y="453" width="0.4301%" height="15" fill="rgb(205,101,16)"/><text x="16.8091%" y="463.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.43%)</title><rect x="16.5591%" y="437" width="0.4301%" height="15" fill="rgb(246,168,33)"/><text x="16.8091%" y="447.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.22%)</title><rect x="16.7742%" y="421" width="0.2151%" height="15" fill="rgb(231,114,1)"/><text x="17.0242%" y="431.50"></text></g><g><title>ip_output (1 samples, 0.22%)</title><rect x="16.7742%" y="405" width="0.2151%" height="15" fill="rgb(207,184,53)"/><text x="17.0242%" y="415.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.22%)</title><rect x="16.7742%" y="389" width="0.2151%" height="15" fill="rgb(224,95,51)"/><text x="17.0242%" y="399.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.22%)</title><rect x="16.7742%" y="373" width="0.2151%" height="15" fill="rgb(212,188,45)"/><text x="17.0242%" y="383.50"></text></g><g><title>do_softirq (1 samples, 0.22%)</title><rect x="16.7742%" y="357" width="0.2151%" height="15" fill="rgb(223,154,38)"/><text x="17.0242%" y="367.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.22%)</title><rect x="16.7742%" y="341" width="0.2151%" height="15" fill="rgb(251,22,52)"/><text x="17.0242%" y="351.50"></text></g><g><title>__do_softirq (1 samples, 0.22%)</title><rect x="16.7742%" y="325" width="0.2151%" height="15" fill="rgb(229,209,22)"/><text x="17.0242%" y="335.50"></text></g><g><title>net_rx_action (1 samples, 0.22%)</title><rect x="16.7742%" y="309" width="0.2151%" height="15" fill="rgb(234,138,34)"/><text x="17.0242%" y="319.50"></text></g><g><title>process_backlog (1 samples, 0.22%)</title><rect x="16.7742%" y="293" width="0.2151%" height="15" fill="rgb(212,95,11)"/><text x="17.0242%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.22%)</title><rect x="16.7742%" y="277" width="0.2151%" height="15" fill="rgb(240,179,47)"/><text x="17.0242%" y="287.50"></text></g><g><title>ip_rcv (1 samples, 0.22%)</title><rect x="16.7742%" y="261" width="0.2151%" height="15" fill="rgb(240,163,11)"/><text x="17.0242%" y="271.50"></text></g><g><title>ip_local_deliver (1 samples, 0.22%)</title><rect x="16.7742%" y="245" width="0.2151%" height="15" fill="rgb(236,37,12)"/><text x="17.0242%" y="255.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.22%)</title><rect x="16.7742%" y="229" width="0.2151%" height="15" fill="rgb(232,164,16)"/><text x="17.0242%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.22%)</title><rect x="16.7742%" y="213" width="0.2151%" height="15" fill="rgb(244,205,15)"/><text x="17.0242%" y="223.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.22%)</title><rect x="16.7742%" y="197" width="0.2151%" height="15" fill="rgb(223,117,47)"/><text x="17.0242%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.22%)</title><rect x="16.7742%" y="181" width="0.2151%" height="15" fill="rgb(244,107,35)"/><text x="17.0242%" y="191.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.65%)</title><rect x="16.5591%" y="693" width="0.6452%" height="15" fill="rgb(205,140,8)"/><text x="16.8091%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.65%)</title><rect x="16.5591%" y="677" width="0.6452%" height="15" fill="rgb(228,84,46)"/><text x="16.8091%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (3 samples, 0.65%)</title><rect x="16.5591%" y="661" width="0.6452%" height="15" fill="rgb(254,188,9)"/><text x="16.8091%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.65%)</title><rect x="16.5591%" y="645" width="0.6452%" height="15" fill="rgb(206,112,54)"/><text x="16.8091%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (3 samples, 0.65%)</title><rect x="16.5591%" y="629" width="0.6452%" height="15" fill="rgb(216,84,49)"/><text x="16.8091%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (3 samples, 0.65%)</title><rect x="16.5591%" y="613" width="0.6452%" height="15" fill="rgb(214,194,35)"/><text x="16.8091%" y="623.50"></text></g><g><title>__libc_send (3 samples, 0.65%)</title><rect x="16.5591%" y="597" width="0.6452%" height="15" fill="rgb(249,28,3)"/><text x="16.8091%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.65%)</title><rect x="16.5591%" y="581" width="0.6452%" height="15" fill="rgb(222,56,52)"/><text x="16.8091%" y="591.50"></text></g><g><title>do_syscall_64 (3 samples, 0.65%)</title><rect x="16.5591%" y="565" width="0.6452%" height="15" fill="rgb(245,217,50)"/><text x="16.8091%" y="575.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.22%)</title><rect x="16.9892%" y="549" width="0.2151%" height="15" fill="rgb(213,201,24)"/><text x="17.2392%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.22%)</title><rect x="17.2043%" y="661" width="0.2151%" height="15" fill="rgb(248,116,28)"/><text x="17.4543%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.22%)</title><rect x="17.2043%" y="645" width="0.2151%" height="15" fill="rgb(219,72,43)"/><text x="17.4543%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.22%)</title><rect x="17.2043%" y="629" width="0.2151%" height="15" fill="rgb(209,138,14)"/><text x="17.4543%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.22%)</title><rect x="17.2043%" y="613" width="0.2151%" height="15" fill="rgb(222,18,33)"/><text x="17.4543%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.22%)</title><rect x="17.2043%" y="597" width="0.2151%" height="15" fill="rgb(213,199,7)"/><text x="17.4543%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.43%)</title><rect x="17.2043%" y="693" width="0.4301%" height="15" fill="rgb(250,110,10)"/><text x="17.4543%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (2 samples, 0.43%)</title><rect x="17.2043%" y="677" width="0.4301%" height="15" fill="rgb(248,123,6)"/><text x="17.4543%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.22%)</title><rect x="17.4194%" y="661" width="0.2151%" height="15" fill="rgb(206,91,31)"/><text x="17.6694%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.22%)</title><rect x="17.4194%" y="645" width="0.2151%" height="15" fill="rgb(211,154,13)"/><text x="17.6694%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.22%)</title><rect x="17.4194%" y="629" width="0.2151%" height="15" fill="rgb(225,148,7)"/><text x="17.6694%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.22%)</title><rect x="17.6344%" y="677" width="0.2151%" height="15" fill="rgb(220,160,43)"/><text x="17.8844%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="17.6344%" y="661" width="0.2151%" height="15" fill="rgb(213,52,39)"/><text x="17.8844%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.43%)</title><rect x="17.6344%" y="693" width="0.4301%" height="15" fill="rgb(243,137,7)"/><text x="17.8844%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.22%)</title><rect x="17.8495%" y="677" width="0.2151%" height="15" fill="rgb(230,79,13)"/><text x="18.0995%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.22%)</title><rect x="17.8495%" y="661" width="0.2151%" height="15" fill="rgb(247,105,23)"/><text x="18.0995%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.22%)</title><rect x="17.8495%" y="645" width="0.2151%" height="15" fill="rgb(223,179,41)"/><text x="18.0995%" y="655.50"></text></g><g><title>__ip_local_out (1 samples, 0.22%)</title><rect x="18.2796%" y="405" width="0.2151%" height="15" fill="rgb(218,9,34)"/><text x="18.5296%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.22%)</title><rect x="18.4946%" y="405" width="0.2151%" height="15" fill="rgb(222,106,8)"/><text x="18.7446%" y="415.50"></text></g><g><title>__ip_finish_output (1 samples, 0.22%)</title><rect x="18.7097%" y="389" width="0.2151%" height="15" fill="rgb(211,220,0)"/><text x="18.9597%" y="399.50"></text></g><g><title>ipv4_mtu (1 samples, 0.22%)</title><rect x="18.7097%" y="373" width="0.2151%" height="15" fill="rgb(229,52,16)"/><text x="18.9597%" y="383.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.22%)</title><rect x="19.1398%" y="357" width="0.2151%" height="15" fill="rgb(212,155,18)"/><text x="19.3898%" y="367.50"></text></g><g><title>loopback_xmit (1 samples, 0.22%)</title><rect x="19.1398%" y="341" width="0.2151%" height="15" fill="rgb(242,21,14)"/><text x="19.3898%" y="351.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.22%)</title><rect x="19.1398%" y="325" width="0.2151%" height="15" fill="rgb(222,19,48)"/><text x="19.3898%" y="335.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.43%)</title><rect x="19.1398%" y="373" width="0.4301%" height="15" fill="rgb(232,45,27)"/><text x="19.3898%" y="383.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.22%)</title><rect x="19.3548%" y="357" width="0.2151%" height="15" fill="rgb(249,103,42)"/><text x="19.6048%" y="367.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.22%)</title><rect x="19.3548%" y="341" width="0.2151%" height="15" fill="rgb(246,81,33)"/><text x="19.6048%" y="351.50"></text></g><g><title>sock_def_readable (4 samples, 0.86%)</title><rect x="19.5699%" y="149" width="0.8602%" height="15" fill="rgb(252,33,42)"/><text x="19.8199%" y="159.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.86%)</title><rect x="19.5699%" y="133" width="0.8602%" height="15" fill="rgb(209,212,41)"/><text x="19.8199%" y="143.50"></text></g><g><title>__wake_up_common (4 samples, 0.86%)</title><rect x="19.5699%" y="117" width="0.8602%" height="15" fill="rgb(207,154,6)"/><text x="19.8199%" y="127.50"></text></g><g><title>pollwake (4 samples, 0.86%)</title><rect x="19.5699%" y="101" width="0.8602%" height="15" fill="rgb(223,64,47)"/><text x="19.8199%" y="111.50"></text></g><g><title>try_to_wake_up (4 samples, 0.86%)</title><rect x="19.5699%" y="85" width="0.8602%" height="15" fill="rgb(211,161,38)"/><text x="19.8199%" y="95.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.86%)</title><rect x="19.5699%" y="69" width="0.8602%" height="15" fill="rgb(219,138,40)"/><text x="19.8199%" y="79.50"></text></g><g><title>enqueue_entity (4 samples, 0.86%)</title><rect x="19.5699%" y="53" width="0.8602%" height="15" fill="rgb(241,228,46)"/><text x="19.8199%" y="63.50"></text></g><g><title>update_curr (1 samples, 0.22%)</title><rect x="20.2151%" y="37" width="0.2151%" height="15" fill="rgb(223,209,38)"/><text x="20.4651%" y="47.50"></text></g><g><title>__ip_queue_xmit (11 samples, 2.37%)</title><rect x="18.2796%" y="421" width="2.3656%" height="15" fill="rgb(236,164,45)"/><text x="18.5296%" y="431.50">__..</text></g><g><title>ip_output (9 samples, 1.94%)</title><rect x="18.7097%" y="405" width="1.9355%" height="15" fill="rgb(231,15,5)"/><text x="18.9597%" y="415.50">i..</text></g><g><title>ip_finish_output2 (8 samples, 1.72%)</title><rect x="18.9247%" y="389" width="1.7204%" height="15" fill="rgb(252,35,15)"/><text x="19.1747%" y="399.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 1.08%)</title><rect x="19.5699%" y="373" width="1.0753%" height="15" fill="rgb(248,181,18)"/><text x="19.8199%" y="383.50"></text></g><g><title>do_softirq (5 samples, 1.08%)</title><rect x="19.5699%" y="357" width="1.0753%" height="15" fill="rgb(233,39,42)"/><text x="19.8199%" y="367.50"></text></g><g><title>do_softirq_own_stack (5 samples, 1.08%)</title><rect x="19.5699%" y="341" width="1.0753%" height="15" fill="rgb(238,110,33)"/><text x="19.8199%" y="351.50"></text></g><g><title>__do_softirq (5 samples, 1.08%)</title><rect x="19.5699%" y="325" width="1.0753%" height="15" fill="rgb(233,195,10)"/><text x="19.8199%" y="335.50"></text></g><g><title>net_rx_action (5 samples, 1.08%)</title><rect x="19.5699%" y="309" width="1.0753%" height="15" fill="rgb(254,105,3)"/><text x="19.8199%" y="319.50"></text></g><g><title>process_backlog (5 samples, 1.08%)</title><rect x="19.5699%" y="293" width="1.0753%" height="15" fill="rgb(221,225,9)"/><text x="19.8199%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 1.08%)</title><rect x="19.5699%" y="277" width="1.0753%" height="15" fill="rgb(224,227,45)"/><text x="19.8199%" y="287.50"></text></g><g><title>ip_rcv (5 samples, 1.08%)</title><rect x="19.5699%" y="261" width="1.0753%" height="15" fill="rgb(229,198,43)"/><text x="19.8199%" y="271.50"></text></g><g><title>ip_local_deliver (5 samples, 1.08%)</title><rect x="19.5699%" y="245" width="1.0753%" height="15" fill="rgb(206,209,35)"/><text x="19.8199%" y="255.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 1.08%)</title><rect x="19.5699%" y="229" width="1.0753%" height="15" fill="rgb(245,195,53)"/><text x="19.8199%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 1.08%)</title><rect x="19.5699%" y="213" width="1.0753%" height="15" fill="rgb(240,92,26)"/><text x="19.8199%" y="223.50"></text></g><g><title>tcp_v4_rcv (5 samples, 1.08%)</title><rect x="19.5699%" y="197" width="1.0753%" height="15" fill="rgb(207,40,23)"/><text x="19.8199%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 1.08%)</title><rect x="19.5699%" y="181" width="1.0753%" height="15" fill="rgb(223,111,35)"/><text x="19.8199%" y="191.50"></text></g><g><title>tcp_rcv_established (5 samples, 1.08%)</title><rect x="19.5699%" y="165" width="1.0753%" height="15" fill="rgb(229,147,28)"/><text x="19.8199%" y="175.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.22%)</title><rect x="20.4301%" y="149" width="0.2151%" height="15" fill="rgb(211,29,28)"/><text x="20.6801%" y="159.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (12 samples, 2.58%)</title><rect x="18.2796%" y="629" width="2.5806%" height="15" fill="rgb(228,72,33)"/><text x="18.5296%" y="639.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (12 samples, 2.58%)</title><rect x="18.2796%" y="613" width="2.5806%" height="15" fill="rgb(205,214,31)"/><text x="18.5296%" y="623.50">st..</text></g><g><title>__libc_send (12 samples, 2.58%)</title><rect x="18.2796%" y="597" width="2.5806%" height="15" fill="rgb(224,111,15)"/><text x="18.5296%" y="607.50">__..</text></g><g><title>entry_SYSCALL_64 (12 samples, 2.58%)</title><rect x="18.2796%" y="581" width="2.5806%" height="15" fill="rgb(253,21,26)"/><text x="18.5296%" y="591.50">en..</text></g><g><title>do_syscall_64 (12 samples, 2.58%)</title><rect x="18.2796%" y="565" width="2.5806%" height="15" fill="rgb(245,139,43)"/><text x="18.5296%" y="575.50">do..</text></g><g><title>__x64_sys_sendto (12 samples, 2.58%)</title><rect x="18.2796%" y="549" width="2.5806%" height="15" fill="rgb(252,170,7)"/><text x="18.5296%" y="559.50">__..</text></g><g><title>__sys_sendto (12 samples, 2.58%)</title><rect x="18.2796%" y="533" width="2.5806%" height="15" fill="rgb(231,118,14)"/><text x="18.5296%" y="543.50">__..</text></g><g><title>sock_sendmsg (12 samples, 2.58%)</title><rect x="18.2796%" y="517" width="2.5806%" height="15" fill="rgb(238,83,0)"/><text x="18.5296%" y="527.50">so..</text></g><g><title>tcp_sendmsg (12 samples, 2.58%)</title><rect x="18.2796%" y="501" width="2.5806%" height="15" fill="rgb(221,39,39)"/><text x="18.5296%" y="511.50">tc..</text></g><g><title>tcp_sendmsg_locked (12 samples, 2.58%)</title><rect x="18.2796%" y="485" width="2.5806%" height="15" fill="rgb(222,119,46)"/><text x="18.5296%" y="495.50">tc..</text></g><g><title>__tcp_push_pending_frames (12 samples, 2.58%)</title><rect x="18.2796%" y="469" width="2.5806%" height="15" fill="rgb(222,165,49)"/><text x="18.5296%" y="479.50">__..</text></g><g><title>tcp_write_xmit (12 samples, 2.58%)</title><rect x="18.2796%" y="453" width="2.5806%" height="15" fill="rgb(219,113,52)"/><text x="18.5296%" y="463.50">tc..</text></g><g><title>__tcp_transmit_skb (12 samples, 2.58%)</title><rect x="18.2796%" y="437" width="2.5806%" height="15" fill="rgb(214,7,15)"/><text x="18.5296%" y="447.50">__..</text></g><g><title>skb_clone (1 samples, 0.22%)</title><rect x="20.6452%" y="421" width="0.2151%" height="15" fill="rgb(235,32,4)"/><text x="20.8952%" y="431.50"></text></g><g><title>decor_mem::ghosts_cache::GhostsCache::insert_uid2gids_for_values (14 samples, 3.01%)</title><rect x="18.0645%" y="693" width="3.0108%" height="15" fill="rgb(238,90,54)"/><text x="18.3145%" y="703.50">dec..</text></g><g><title>mysql::conn::Conn::_query (14 samples, 3.01%)</title><rect x="18.0645%" y="677" width="3.0108%" height="15" fill="rgb(213,208,19)"/><text x="18.3145%" y="687.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (13 samples, 2.80%)</title><rect x="18.2796%" y="661" width="2.7957%" height="15" fill="rgb(233,156,4)"/><text x="18.5296%" y="671.50">my..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 2.80%)</title><rect x="18.2796%" y="645" width="2.7957%" height="15" fill="rgb(207,194,5)"/><text x="18.5296%" y="655.50">st..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.22%)</title><rect x="20.8602%" y="629" width="0.2151%" height="15" fill="rgb(206,111,30)"/><text x="21.1102%" y="639.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.22%)</title><rect x="20.8602%" y="613" width="0.2151%" height="15" fill="rgb(243,70,54)"/><text x="21.1102%" y="623.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.22%)</title><rect x="20.8602%" y="597" width="0.2151%" height="15" fill="rgb(242,28,8)"/><text x="21.1102%" y="607.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.22%)</title><rect x="20.8602%" y="581" width="0.2151%" height="15" fill="rgb(219,106,18)"/><text x="21.1102%" y="591.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.22%)</title><rect x="21.0753%" y="661" width="0.2151%" height="15" fill="rgb(244,222,10)"/><text x="21.3253%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.22%)</title><rect x="21.0753%" y="645" width="0.2151%" height="15" fill="rgb(236,179,52)"/><text x="21.3253%" y="655.50"></text></g><g><title>decor_mem::helpers::str_ident_match (2 samples, 0.43%)</title><rect x="21.0753%" y="693" width="0.4301%" height="15" fill="rgb(213,23,39)"/><text x="21.3253%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.43%)</title><rect x="21.0753%" y="677" width="0.4301%" height="15" fill="rgb(238,48,10)"/><text x="21.3253%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="21.2903%" y="661" width="0.2151%" height="15" fill="rgb(251,196,23)"/><text x="21.5403%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.22%)</title><rect x="21.2903%" y="645" width="0.2151%" height="15" fill="rgb(250,152,24)"/><text x="21.5403%" y="655.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.22%)</title><rect x="21.5054%" y="677" width="0.2151%" height="15" fill="rgb(209,150,17)"/><text x="21.7554%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.22%)</title><rect x="21.5054%" y="661" width="0.2151%" height="15" fill="rgb(234,202,34)"/><text x="21.7554%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.22%)</title><rect x="21.5054%" y="645" width="0.2151%" height="15" fill="rgb(253,148,53)"/><text x="21.7554%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.22%)</title><rect x="21.5054%" y="629" width="0.2151%" height="15" fill="rgb(218,129,16)"/><text x="21.7554%" y="639.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.22%)</title><rect x="21.5054%" y="613" width="0.2151%" height="15" fill="rgb(216,85,19)"/><text x="21.7554%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.22%)</title><rect x="21.5054%" y="597" width="0.2151%" height="15" fill="rgb(235,228,7)"/><text x="21.7554%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.22%)</title><rect x="21.5054%" y="581" width="0.2151%" height="15" fill="rgb(245,175,0)"/><text x="21.7554%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.22%)</title><rect x="21.5054%" y="565" width="0.2151%" height="15" fill="rgb(208,168,36)"/><text x="21.7554%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="21.5054%" y="549" width="0.2151%" height="15" fill="rgb(246,171,24)"/><text x="21.7554%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.22%)</title><rect x="21.5054%" y="533" width="0.2151%" height="15" fill="rgb(215,142,24)"/><text x="21.7554%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.22%)</title><rect x="21.5054%" y="517" width="0.2151%" height="15" fill="rgb(250,187,7)"/><text x="21.7554%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.22%)</title><rect x="21.5054%" y="501" width="0.2151%" height="15" fill="rgb(228,66,33)"/><text x="21.7554%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="21.5054%" y="485" width="0.2151%" height="15" fill="rgb(234,215,21)"/><text x="21.7554%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.22%)</title><rect x="21.5054%" y="469" width="0.2151%" height="15" fill="rgb(222,191,20)"/><text x="21.7554%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.22%)</title><rect x="21.5054%" y="453" width="0.2151%" height="15" fill="rgb(245,79,54)"/><text x="21.7554%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.22%)</title><rect x="21.5054%" y="437" width="0.2151%" height="15" fill="rgb(240,10,37)"/><text x="21.7554%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="21.5054%" y="421" width="0.2151%" height="15" fill="rgb(214,192,32)"/><text x="21.7554%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="21.5054%" y="405" width="0.2151%" height="15" fill="rgb(209,36,54)"/><text x="21.7554%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="21.5054%" y="389" width="0.2151%" height="15" fill="rgb(220,10,11)"/><text x="21.7554%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.22%)</title><rect x="21.5054%" y="373" width="0.2151%" height="15" fill="rgb(221,106,17)"/><text x="21.7554%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.22%)</title><rect x="21.5054%" y="357" width="0.2151%" height="15" fill="rgb(251,142,44)"/><text x="21.7554%" y="367.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.43%)</title><rect x="21.7204%" y="597" width="0.4301%" height="15" fill="rgb(238,13,15)"/><text x="21.9704%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.43%)</title><rect x="21.7204%" y="581" width="0.4301%" height="15" fill="rgb(208,107,27)"/><text x="21.9704%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.22%)</title><rect x="21.9355%" y="565" width="0.2151%" height="15" fill="rgb(205,136,37)"/><text x="22.1855%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.22%)</title><rect x="21.9355%" y="549" width="0.2151%" height="15" fill="rgb(250,205,27)"/><text x="22.1855%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (3 samples, 0.65%)</title><rect x="21.7204%" y="645" width="0.6452%" height="15" fill="rgb(210,80,43)"/><text x="21.9704%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.65%)</title><rect x="21.7204%" y="629" width="0.6452%" height="15" fill="rgb(247,160,36)"/><text x="21.9704%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.65%)</title><rect x="21.7204%" y="613" width="0.6452%" height="15" fill="rgb(234,13,49)"/><text x="21.9704%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.22%)</title><rect x="22.1505%" y="597" width="0.2151%" height="15" fill="rgb(234,122,0)"/><text x="22.4005%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.22%)</title><rect x="22.1505%" y="581" width="0.2151%" height="15" fill="rgb(207,146,38)"/><text x="22.4005%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.22%)</title><rect x="22.3656%" y="629" width="0.2151%" height="15" fill="rgb(207,177,25)"/><text x="22.6156%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.22%)</title><rect x="22.3656%" y="613" width="0.2151%" height="15" fill="rgb(211,178,42)"/><text x="22.6156%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.22%)</title><rect x="22.3656%" y="597" width="0.2151%" height="15" fill="rgb(230,69,54)"/><text x="22.6156%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="22.3656%" y="581" width="0.2151%" height="15" fill="rgb(214,135,41)"/><text x="22.6156%" y="591.50"></text></g><g><title>core::fmt::write (5 samples, 1.08%)</title><rect x="21.7204%" y="661" width="1.0753%" height="15" fill="rgb(237,67,25)"/><text x="21.9704%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.43%)</title><rect x="22.3656%" y="645" width="0.4301%" height="15" fill="rgb(222,189,50)"/><text x="22.6156%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.22%)</title><rect x="22.5806%" y="629" width="0.2151%" height="15" fill="rgb(245,148,34)"/><text x="22.8306%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="22.5806%" y="613" width="0.2151%" height="15" fill="rgb(222,29,6)"/><text x="22.8306%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="22.5806%" y="597" width="0.2151%" height="15" fill="rgb(221,189,43)"/><text x="22.8306%" y="607.50"></text></g><g><title>decor_mem::views::Views::insert (7 samples, 1.51%)</title><rect x="21.5054%" y="693" width="1.5054%" height="15" fill="rgb(207,36,27)"/><text x="21.7554%" y="703.50"></text></g><g><title>decor_mem::views::View::insert_into_index (6 samples, 1.29%)</title><rect x="21.7204%" y="677" width="1.2903%" height="15" fill="rgb(217,90,24)"/><text x="21.9704%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.22%)</title><rect x="22.7957%" y="661" width="0.2151%" height="15" fill="rgb(224,66,35)"/><text x="23.0457%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.22%)</title><rect x="22.7957%" y="645" width="0.2151%" height="15" fill="rgb(221,13,50)"/><text x="23.0457%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.22%)</title><rect x="23.0108%" y="677" width="0.2151%" height="15" fill="rgb(236,68,49)"/><text x="23.2608%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.43%)</title><rect x="23.2258%" y="661" width="0.4301%" height="15" fill="rgb(229,146,28)"/><text x="23.4758%" y="671.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (2 samples, 0.43%)</title><rect x="23.6559%" y="661" width="0.4301%" height="15" fill="rgb(225,31,38)"/><text x="23.9059%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.22%)</title><rect x="23.8710%" y="645" width="0.2151%" height="15" fill="rgb(250,208,3)"/><text x="24.1210%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="24.0860%" y="581" width="0.2151%" height="15" fill="rgb(246,54,23)"/><text x="24.3360%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.22%)</title><rect x="24.0860%" y="565" width="0.2151%" height="15" fill="rgb(243,76,11)"/><text x="24.3360%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.22%)</title><rect x="24.0860%" y="549" width="0.2151%" height="15" fill="rgb(245,21,50)"/><text x="24.3360%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.22%)</title><rect x="24.0860%" y="533" width="0.2151%" height="15" fill="rgb(228,9,43)"/><text x="24.3360%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="24.0860%" y="517" width="0.2151%" height="15" fill="rgb(208,100,47)"/><text x="24.3360%" y="527.50"></text></g><g><title>__GI___libc_malloc (5 samples, 1.08%)</title><rect x="24.3011%" y="469" width="1.0753%" height="15" fill="rgb(232,26,8)"/><text x="24.5511%" y="479.50"></text></g><g><title>_int_malloc (3 samples, 0.65%)</title><rect x="24.7312%" y="453" width="0.6452%" height="15" fill="rgb(216,166,38)"/><text x="24.9812%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 1.72%)</title><rect x="24.0860%" y="645" width="1.7204%" height="15" fill="rgb(251,202,51)"/><text x="24.3360%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 1.72%)</title><rect x="24.0860%" y="629" width="1.7204%" height="15" fill="rgb(254,216,34)"/><text x="24.3360%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 1.72%)</title><rect x="24.0860%" y="613" width="1.7204%" height="15" fill="rgb(251,32,27)"/><text x="24.3360%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 1.72%)</title><rect x="24.0860%" y="597" width="1.7204%" height="15" fill="rgb(208,127,28)"/><text x="24.3360%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 1.51%)</title><rect x="24.3011%" y="581" width="1.5054%" height="15" fill="rgb(224,137,22)"/><text x="24.5511%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 1.51%)</title><rect x="24.3011%" y="565" width="1.5054%" height="15" fill="rgb(254,70,32)"/><text x="24.5511%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 1.51%)</title><rect x="24.3011%" y="549" width="1.5054%" height="15" fill="rgb(229,75,37)"/><text x="24.5511%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 1.51%)</title><rect x="24.3011%" y="533" width="1.5054%" height="15" fill="rgb(252,64,23)"/><text x="24.5511%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 1.51%)</title><rect x="24.3011%" y="517" width="1.5054%" height="15" fill="rgb(232,162,48)"/><text x="24.5511%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 1.51%)</title><rect x="24.3011%" y="501" width="1.5054%" height="15" fill="rgb(246,160,12)"/><text x="24.5511%" y="511.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 1.51%)</title><rect x="24.3011%" y="485" width="1.5054%" height="15" fill="rgb(247,166,0)"/><text x="24.5511%" y="495.50"></text></g><g><title>__rdl_alloc (2 samples, 0.43%)</title><rect x="25.3763%" y="469" width="0.4301%" height="15" fill="rgb(249,219,21)"/><text x="25.6263%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.43%)</title><rect x="25.3763%" y="453" width="0.4301%" height="15" fill="rgb(205,209,3)"/><text x="25.6263%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="25.8065%" y="645" width="0.2151%" height="15" fill="rgb(243,44,1)"/><text x="26.0565%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.22%)</title><rect x="25.8065%" y="629" width="0.2151%" height="15" fill="rgb(206,159,16)"/><text x="26.0565%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.22%)</title><rect x="25.8065%" y="613" width="0.2151%" height="15" fill="rgb(244,77,30)"/><text x="26.0565%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.22%)</title><rect x="25.8065%" y="597" width="0.2151%" height="15" fill="rgb(218,69,12)"/><text x="26.0565%" y="607.50"></text></g><g><title>malloc_consolidate (1 samples, 0.22%)</title><rect x="25.8065%" y="581" width="0.2151%" height="15" fill="rgb(212,87,7)"/><text x="26.0565%" y="591.50"></text></g><g><title>decor_mem::select::get_rows_matching_constraint (14 samples, 3.01%)</title><rect x="23.2258%" y="677" width="3.0108%" height="15" fill="rgb(245,114,25)"/><text x="23.4758%" y="687.50">dec..</text></g><g><title>decor_mem::select::get_value_for_rows (10 samples, 2.15%)</title><rect x="24.0860%" y="661" width="2.1505%" height="15" fill="rgb(210,61,42)"/><text x="24.3360%" y="671.50">d..</text></g><g><title>decor_mem::select::expr_to_col (1 samples, 0.22%)</title><rect x="26.0215%" y="645" width="0.2151%" height="15" fill="rgb(211,52,33)"/><text x="26.2715%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.22%)</title><rect x="26.0215%" y="629" width="0.2151%" height="15" fill="rgb(234,58,33)"/><text x="26.2715%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.22%)</title><rect x="26.0215%" y="613" width="0.2151%" height="15" fill="rgb(220,115,36)"/><text x="26.2715%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.22%)</title><rect x="26.0215%" y="597" width="0.2151%" height="15" fill="rgb(243,153,54)"/><text x="26.2715%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="26.4516%" y="661" width="0.2151%" height="15" fill="rgb(251,47,18)"/><text x="26.7016%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="26.4516%" y="645" width="0.2151%" height="15" fill="rgb(242,102,42)"/><text x="26.7016%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="26.4516%" y="629" width="0.2151%" height="15" fill="rgb(234,31,38)"/><text x="26.7016%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="26.4516%" y="613" width="0.2151%" height="15" fill="rgb(221,117,51)"/><text x="26.7016%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="26.4516%" y="597" width="0.2151%" height="15" fill="rgb(212,20,18)"/><text x="26.7016%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="26.4516%" y="581" width="0.2151%" height="15" fill="rgb(245,133,36)"/><text x="26.7016%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.22%)</title><rect x="26.4516%" y="565" width="0.2151%" height="15" fill="rgb(212,6,19)"/><text x="26.7016%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.22%)</title><rect x="26.4516%" y="549" width="0.2151%" height="15" fill="rgb(218,1,36)"/><text x="26.7016%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="26.4516%" y="533" width="0.2151%" height="15" fill="rgb(246,84,54)"/><text x="26.7016%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="26.4516%" y="517" width="0.2151%" height="15" fill="rgb(242,110,6)"/><text x="26.7016%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="26.4516%" y="501" width="0.2151%" height="15" fill="rgb(214,47,5)"/><text x="26.7016%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="26.4516%" y="485" width="0.2151%" height="15" fill="rgb(218,159,25)"/><text x="26.7016%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.22%)</title><rect x="26.4516%" y="469" width="0.2151%" height="15" fill="rgb(215,211,28)"/><text x="26.7016%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="26.6667%" y="661" width="0.2151%" height="15" fill="rgb(238,59,32)"/><text x="26.9167%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.43%)</title><rect x="26.8817%" y="661" width="0.4301%" height="15" fill="rgb(226,82,3)"/><text x="27.1317%" y="671.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.43%)</title><rect x="26.8817%" y="645" width="0.4301%" height="15" fill="rgb(240,164,32)"/><text x="27.1317%" y="655.50"></text></g><g><title>_int_realloc (2 samples, 0.43%)</title><rect x="26.8817%" y="629" width="0.4301%" height="15" fill="rgb(232,46,7)"/><text x="27.1317%" y="639.50"></text></g><g><title>_int_malloc (2 samples, 0.43%)</title><rect x="26.8817%" y="613" width="0.4301%" height="15" fill="rgb(229,129,53)"/><text x="27.1317%" y="623.50"></text></g><g><title>malloc_consolidate (1 samples, 0.22%)</title><rect x="27.0968%" y="597" width="0.2151%" height="15" fill="rgb(234,188,29)"/><text x="27.3468%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad_formatted_parts (1 samples, 0.22%)</title><rect x="27.5269%" y="613" width="0.2151%" height="15" fill="rgb(246,141,4)"/><text x="27.7769%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1 samples, 0.22%)</title><rect x="27.7419%" y="613" width="0.2151%" height="15" fill="rgb(229,23,39)"/><text x="27.9919%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.22%)</title><rect x="27.7419%" y="597" width="0.2151%" height="15" fill="rgb(206,12,3)"/><text x="27.9919%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="27.7419%" y="581" width="0.2151%" height="15" fill="rgb(252,226,20)"/><text x="27.9919%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="27.7419%" y="565" width="0.2151%" height="15" fill="rgb(216,123,35)"/><text x="27.9919%" y="575.50"></text></g><g><title>core::num::flt2dec::determine_sign (1 samples, 0.22%)</title><rect x="28.1720%" y="597" width="0.2151%" height="15" fill="rgb(212,68,40)"/><text x="28.4220%" y="607.50"></text></g><g><title>core::num::flt2dec::digits_to_dec_str (1 samples, 0.22%)</title><rect x="28.3871%" y="597" width="0.2151%" height="15" fill="rgb(254,125,32)"/><text x="28.6371%" y="607.50"></text></g><g><title>core::num::diy_float::Fp::normalize_to (1 samples, 0.22%)</title><rect x="28.6022%" y="549" width="0.2151%" height="15" fill="rgb(253,97,22)"/><text x="28.8522%" y="559.50"></text></g><g><title>core::fmt::write (7 samples, 1.51%)</title><rect x="27.5269%" y="645" width="1.5054%" height="15" fill="rgb(241,101,14)"/><text x="27.7769%" y="655.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (7 samples, 1.51%)</title><rect x="27.5269%" y="629" width="1.5054%" height="15" fill="rgb(238,103,29)"/><text x="27.7769%" y="639.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (5 samples, 1.08%)</title><rect x="27.9570%" y="613" width="1.0753%" height="15" fill="rgb(233,195,47)"/><text x="28.2070%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.43%)</title><rect x="28.6022%" y="597" width="0.4301%" height="15" fill="rgb(246,218,30)"/><text x="28.8522%" y="607.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest (2 samples, 0.43%)</title><rect x="28.6022%" y="581" width="0.4301%" height="15" fill="rgb(219,145,47)"/><text x="28.8522%" y="591.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (2 samples, 0.43%)</title><rect x="28.6022%" y="565" width="0.4301%" height="15" fill="rgb(243,12,26)"/><text x="28.8522%" y="575.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::max_pow10_no_more_than (1 samples, 0.22%)</title><rect x="28.8172%" y="549" width="0.2151%" height="15" fill="rgb(214,87,16)"/><text x="29.0672%" y="559.50"></text></g><g><title>decor_mem::helpers::plus_parser_vals (12 samples, 2.58%)</title><rect x="27.3118%" y="661" width="2.5806%" height="15" fill="rgb(208,99,42)"/><text x="27.5618%" y="671.50">de..</text></g><g><title>core::num::dec2flt::dec2flt (4 samples, 0.86%)</title><rect x="29.0323%" y="645" width="0.8602%" height="15" fill="rgb(253,99,2)"/><text x="29.2823%" y="655.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (1 samples, 0.22%)</title><rect x="29.6774%" y="629" width="0.2151%" height="15" fill="rgb(220,168,23)"/><text x="29.9274%" y="639.50"></text></g><g><title>core::num::dec2flt::parse::eat_digits (1 samples, 0.22%)</title><rect x="29.6774%" y="613" width="0.2151%" height="15" fill="rgb(242,38,24)"/><text x="29.9274%" y="623.50"></text></g><g><title>decor_mem::select::expr_to_col (1 samples, 0.22%)</title><rect x="29.8925%" y="661" width="0.2151%" height="15" fill="rgb(225,182,9)"/><text x="30.1425%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.22%)</title><rect x="29.8925%" y="645" width="0.2151%" height="15" fill="rgb(243,178,37)"/><text x="30.1425%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.22%)</title><rect x="29.8925%" y="629" width="0.2151%" height="15" fill="rgb(232,139,19)"/><text x="30.1425%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.22%)</title><rect x="29.8925%" y="613" width="0.2151%" height="15" fill="rgb(225,201,24)"/><text x="30.1425%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.22%)</title><rect x="29.8925%" y="597" width="0.2151%" height="15" fill="rgb(221,47,46)"/><text x="30.1425%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.22%)</title><rect x="29.8925%" y="581" width="0.2151%" height="15" fill="rgb(249,23,13)"/><text x="30.1425%" y="591.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.22%)</title><rect x="29.8925%" y="565" width="0.2151%" height="15" fill="rgb(219,9,5)"/><text x="30.1425%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.22%)</title><rect x="29.8925%" y="549" width="0.2151%" height="15" fill="rgb(254,171,16)"/><text x="30.1425%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.22%)</title><rect x="29.8925%" y="533" width="0.2151%" height="15" fill="rgb(230,171,20)"/><text x="30.1425%" y="543.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.22%)</title><rect x="30.1075%" y="517" width="0.2151%" height="15" fill="rgb(210,71,41)"/><text x="30.3575%" y="527.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.22%)</title><rect x="30.1075%" y="501" width="0.2151%" height="15" fill="rgb(206,173,20)"/><text x="30.3575%" y="511.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (69 samples, 14.84%)</title><rect x="15.6989%" y="709" width="14.8387%" height="15" fill="rgb(233,88,34)"/><text x="15.9489%" y="719.50">decor_mem::query_transf..</text></g><g><title>decor_mem::views::Views::update (35 samples, 7.53%)</title><rect x="23.0108%" y="693" width="7.5269%" height="15" fill="rgb(223,209,46)"/><text x="23.2608%" y="703.50">decor_mem:..</text></g><g><title>decor_mem::select::get_value_for_rows (20 samples, 4.30%)</title><rect x="26.2366%" y="677" width="4.3011%" height="15" fill="rgb(250,43,18)"/><text x="26.4866%" y="687.50">decor..</text></g><g><title>decor_mem::select::tablecolumn_matches_col (2 samples, 0.43%)</title><rect x="30.1075%" y="661" width="0.4301%" height="15" fill="rgb(208,13,10)"/><text x="30.3575%" y="671.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (2 samples, 0.43%)</title><rect x="30.1075%" y="645" width="0.4301%" height="15" fill="rgb(212,200,36)"/><text x="30.3575%" y="655.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.43%)</title><rect x="30.1075%" y="629" width="0.4301%" height="15" fill="rgb(225,90,30)"/><text x="30.3575%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.43%)</title><rect x="30.1075%" y="613" width="0.4301%" height="15" fill="rgb(236,182,39)"/><text x="30.3575%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.43%)</title><rect x="30.1075%" y="597" width="0.4301%" height="15" fill="rgb(212,144,35)"/><text x="30.3575%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.43%)</title><rect x="30.1075%" y="581" width="0.4301%" height="15" fill="rgb(228,63,44)"/><text x="30.3575%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.43%)</title><rect x="30.1075%" y="565" width="0.4301%" height="15" fill="rgb(228,109,6)"/><text x="30.3575%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.43%)</title><rect x="30.1075%" y="549" width="0.4301%" height="15" fill="rgb(238,117,24)"/><text x="30.3575%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.43%)</title><rect x="30.1075%" y="533" width="0.4301%" height="15" fill="rgb(242,26,26)"/><text x="30.3575%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.22%)</title><rect x="30.3226%" y="517" width="0.2151%" height="15" fill="rgb(221,92,48)"/><text x="30.5726%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.22%)</title><rect x="30.3226%" y="501" width="0.2151%" height="15" fill="rgb(209,209,32)"/><text x="30.5726%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.22%)</title><rect x="30.3226%" y="485" width="0.2151%" height="15" fill="rgb(221,70,22)"/><text x="30.5726%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="30.5376%" y="693" width="0.2151%" height="15" fill="rgb(248,145,5)"/><text x="30.7876%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="30.5376%" y="677" width="0.2151%" height="15" fill="rgb(226,116,26)"/><text x="30.7876%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.22%)</title><rect x="30.7527%" y="677" width="0.2151%" height="15" fill="rgb(244,5,17)"/><text x="31.0027%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.43%)</title><rect x="30.9677%" y="661" width="0.4301%" height="15" fill="rgb(252,159,33)"/><text x="31.2177%" y="671.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.22%)</title><rect x="31.1828%" y="645" width="0.2151%" height="15" fill="rgb(206,71,0)"/><text x="31.4328%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (77 samples, 16.56%)</title><rect x="15.0538%" y="741" width="16.5591%" height="15" fill="rgb(233,118,54)"/><text x="15.3038%" y="751.50">msql_srv::MysqlIntermediar..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (74 samples, 15.91%)</title><rect x="15.6989%" y="725" width="15.9140%" height="15" fill="rgb(234,83,48)"/><text x="15.9489%" y="735.50">&lt;decor_mem::Shim as msql..</text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (5 samples, 1.08%)</title><rect x="30.5376%" y="709" width="1.0753%" height="15" fill="rgb(228,3,54)"/><text x="30.7876%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.86%)</title><rect x="30.7527%" y="693" width="0.8602%" height="15" fill="rgb(226,155,13)"/><text x="31.0027%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.65%)</title><rect x="30.9677%" y="677" width="0.6452%" height="15" fill="rgb(241,28,37)"/><text x="31.2177%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (1 samples, 0.22%)</title><rect x="31.3978%" y="661" width="0.2151%" height="15" fill="rgb(233,93,10)"/><text x="31.6478%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="31.3978%" y="645" width="0.2151%" height="15" fill="rgb(225,113,19)"/><text x="31.6478%" y="655.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.22%)</title><rect x="31.6129%" y="741" width="0.2151%" height="15" fill="rgb(241,2,18)"/><text x="31.8629%" y="751.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.22%)</title><rect x="31.6129%" y="725" width="0.2151%" height="15" fill="rgb(228,207,21)"/><text x="31.8629%" y="735.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.22%)</title><rect x="31.6129%" y="709" width="0.2151%" height="15" fill="rgb(213,211,35)"/><text x="31.8629%" y="719.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.22%)</title><rect x="31.6129%" y="693" width="0.2151%" height="15" fill="rgb(209,83,10)"/><text x="31.8629%" y="703.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.22%)</title><rect x="31.6129%" y="677" width="0.2151%" height="15" fill="rgb(209,164,1)"/><text x="31.8629%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="31.8280%" y="661" width="0.2151%" height="15" fill="rgb(213,184,43)"/><text x="32.0780%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="31.8280%" y="645" width="0.2151%" height="15" fill="rgb(231,61,34)"/><text x="32.0780%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="31.8280%" y="629" width="0.2151%" height="15" fill="rgb(235,75,3)"/><text x="32.0780%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="31.8280%" y="613" width="0.2151%" height="15" fill="rgb(220,106,47)"/><text x="32.0780%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="31.8280%" y="597" width="0.2151%" height="15" fill="rgb(210,196,33)"/><text x="32.0780%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="31.8280%" y="581" width="0.2151%" height="15" fill="rgb(229,154,42)"/><text x="32.0780%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="31.8280%" y="565" width="0.2151%" height="15" fill="rgb(228,114,26)"/><text x="32.0780%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.22%)</title><rect x="31.8280%" y="549" width="0.2151%" height="15" fill="rgb(208,144,1)"/><text x="32.0780%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.22%)</title><rect x="31.8280%" y="533" width="0.2151%" height="15" fill="rgb(239,112,37)"/><text x="32.0780%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="31.8280%" y="517" width="0.2151%" height="15" fill="rgb(210,96,50)"/><text x="32.0780%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="31.8280%" y="501" width="0.2151%" height="15" fill="rgb(222,178,2)"/><text x="32.0780%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="31.8280%" y="485" width="0.2151%" height="15" fill="rgb(226,74,18)"/><text x="32.0780%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="31.8280%" y="469" width="0.2151%" height="15" fill="rgb(225,67,54)"/><text x="32.0780%" y="479.50"></text></g><g><title>__GI___libc_free (1 samples, 0.22%)</title><rect x="32.0430%" y="661" width="0.2151%" height="15" fill="rgb(251,92,32)"/><text x="32.2930%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="32.2581%" y="661" width="0.2151%" height="15" fill="rgb(228,149,22)"/><text x="32.5081%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (22 samples, 4.73%)</title><rect x="32.6882%" y="565" width="4.7312%" height="15" fill="rgb(243,54,13)"/><text x="32.9382%" y="575.50">alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 4.73%)</title><rect x="32.6882%" y="549" width="4.7312%" height="15" fill="rgb(243,180,28)"/><text x="32.9382%" y="559.50">&lt;alloc..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (22 samples, 4.73%)</title><rect x="32.6882%" y="533" width="4.7312%" height="15" fill="rgb(208,167,24)"/><text x="32.9382%" y="543.50">alloc:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 4.73%)</title><rect x="32.6882%" y="517" width="4.7312%" height="15" fill="rgb(245,73,45)"/><text x="32.9382%" y="527.50">core::..</text></g><g><title>__memmove_avx_unaligned_erms (22 samples, 4.73%)</title><rect x="32.6882%" y="501" width="4.7312%" height="15" fill="rgb(237,203,48)"/><text x="32.9382%" y="511.50">__memm..</text></g><g><title>apic_timer_interrupt (1 samples, 0.22%)</title><rect x="37.2043%" y="485" width="0.2151%" height="15" fill="rgb(211,197,16)"/><text x="37.4543%" y="495.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.22%)</title><rect x="37.2043%" y="469" width="0.2151%" height="15" fill="rgb(243,99,51)"/><text x="37.4543%" y="479.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.22%)</title><rect x="37.2043%" y="453" width="0.2151%" height="15" fill="rgb(215,123,29)"/><text x="37.4543%" y="463.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.22%)</title><rect x="37.2043%" y="437" width="0.2151%" height="15" fill="rgb(239,186,37)"/><text x="37.4543%" y="447.50"></text></g><g><title>tick_sched_timer (1 samples, 0.22%)</title><rect x="37.2043%" y="421" width="0.2151%" height="15" fill="rgb(252,136,39)"/><text x="37.4543%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (24 samples, 5.16%)</title><rect x="32.6882%" y="629" width="5.1613%" height="15" fill="rgb(223,213,32)"/><text x="32.9382%" y="639.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 5.16%)</title><rect x="32.6882%" y="613" width="5.1613%" height="15" fill="rgb(233,115,5)"/><text x="32.9382%" y="623.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 5.16%)</title><rect x="32.6882%" y="597" width="5.1613%" height="15" fill="rgb(207,226,44)"/><text x="32.9382%" y="607.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (24 samples, 5.16%)</title><rect x="32.6882%" y="581" width="5.1613%" height="15" fill="rgb(208,126,0)"/><text x="32.9382%" y="591.50">alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.43%)</title><rect x="37.4194%" y="565" width="0.4301%" height="15" fill="rgb(244,66,21)"/><text x="37.6694%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.43%)</title><rect x="37.4194%" y="549" width="0.4301%" height="15" fill="rgb(222,97,12)"/><text x="37.6694%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.43%)</title><rect x="37.4194%" y="533" width="0.4301%" height="15" fill="rgb(219,213,19)"/><text x="37.6694%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.43%)</title><rect x="37.4194%" y="517" width="0.4301%" height="15" fill="rgb(252,169,30)"/><text x="37.6694%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.43%)</title><rect x="37.4194%" y="501" width="0.4301%" height="15" fill="rgb(206,32,51)"/><text x="37.6694%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.43%)</title><rect x="37.4194%" y="485" width="0.4301%" height="15" fill="rgb(250,172,42)"/><text x="37.6694%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.43%)</title><rect x="37.4194%" y="469" width="0.4301%" height="15" fill="rgb(209,34,43)"/><text x="37.6694%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.43%)</title><rect x="37.4194%" y="453" width="0.4301%" height="15" fill="rgb(223,11,35)"/><text x="37.6694%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (26 samples, 5.59%)</title><rect x="32.4731%" y="661" width="5.5914%" height="15" fill="rgb(251,219,26)"/><text x="32.7231%" y="671.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::expected (25 samples, 5.38%)</title><rect x="32.6882%" y="645" width="5.3763%" height="15" fill="rgb(231,119,3)"/><text x="32.9382%" y="655.50">sql_par..</text></g><g><title>alloc::fmt::format (1 samples, 0.22%)</title><rect x="37.8495%" y="629" width="0.2151%" height="15" fill="rgb(216,97,11)"/><text x="38.0995%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.22%)</title><rect x="37.8495%" y="613" width="0.2151%" height="15" fill="rgb(223,59,9)"/><text x="38.0995%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.43%)</title><rect x="38.0645%" y="661" width="0.4301%" height="15" fill="rgb(233,93,31)"/><text x="38.3145%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.22%)</title><rect x="38.2796%" y="645" width="0.2151%" height="15" fill="rgb(239,81,33)"/><text x="38.5296%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (32 samples, 6.88%)</title><rect x="31.8280%" y="741" width="6.8817%" height="15" fill="rgb(213,120,34)"/><text x="32.0780%" y="751.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (32 samples, 6.88%)</title><rect x="31.8280%" y="725" width="6.8817%" height="15" fill="rgb(243,49,53)"/><text x="32.0780%" y="735.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (32 samples, 6.88%)</title><rect x="31.8280%" y="709" width="6.8817%" height="15" fill="rgb(247,216,33)"/><text x="32.0780%" y="719.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::check_descent (32 samples, 6.88%)</title><rect x="31.8280%" y="693" width="6.8817%" height="15" fill="rgb(226,26,14)"/><text x="32.0780%" y="703.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (32 samples, 6.88%)</title><rect x="31.8280%" y="677" width="6.8817%" height="15" fill="rgb(215,49,53)"/><text x="32.0780%" y="687.50">sql_parse..</text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.22%)</title><rect x="38.4946%" y="661" width="0.2151%" height="15" fill="rgb(245,162,40)"/><text x="38.7446%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="38.4946%" y="645" width="0.2151%" height="15" fill="rgb(229,68,17)"/><text x="38.7446%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.22%)</title><rect x="38.4946%" y="629" width="0.2151%" height="15" fill="rgb(213,182,10)"/><text x="38.7446%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.22%)</title><rect x="38.4946%" y="613" width="0.2151%" height="15" fill="rgb(245,125,30)"/><text x="38.7446%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.22%)</title><rect x="38.4946%" y="597" width="0.2151%" height="15" fill="rgb(232,202,2)"/><text x="38.7446%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="38.4946%" y="581" width="0.2151%" height="15" fill="rgb(237,140,51)"/><text x="38.7446%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.22%)</title><rect x="38.4946%" y="565" width="0.2151%" height="15" fill="rgb(236,157,25)"/><text x="38.7446%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.22%)</title><rect x="38.4946%" y="549" width="0.2151%" height="15" fill="rgb(219,209,0)"/><text x="38.7446%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.22%)</title><rect x="38.4946%" y="533" width="0.2151%" height="15" fill="rgb(240,116,54)"/><text x="38.7446%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.22%)</title><rect x="38.4946%" y="517" width="0.2151%" height="15" fill="rgb(216,10,36)"/><text x="38.7446%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.22%)</title><rect x="38.4946%" y="501" width="0.2151%" height="15" fill="rgb(222,72,44)"/><text x="38.7446%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.22%)</title><rect x="38.4946%" y="485" width="0.2151%" height="15" fill="rgb(232,159,9)"/><text x="38.7446%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="38.4946%" y="469" width="0.2151%" height="15" fill="rgb(210,39,32)"/><text x="38.7446%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.22%)</title><rect x="38.4946%" y="453" width="0.2151%" height="15" fill="rgb(216,194,45)"/><text x="38.7446%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.22%)</title><rect x="38.7097%" y="741" width="0.2151%" height="15" fill="rgb(218,18,35)"/><text x="38.9597%" y="751.50"></text></g><g><title>malloc_consolidate (1 samples, 0.22%)</title><rect x="38.9247%" y="437" width="0.2151%" height="15" fill="rgb(207,83,51)"/><text x="39.1747%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.43%)</title><rect x="38.9247%" y="645" width="0.4301%" height="15" fill="rgb(225,63,43)"/><text x="39.1747%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.43%)</title><rect x="38.9247%" y="629" width="0.4301%" height="15" fill="rgb(207,57,36)"/><text x="39.1747%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.43%)</title><rect x="38.9247%" y="613" width="0.4301%" height="15" fill="rgb(216,99,33)"/><text x="39.1747%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.43%)</title><rect x="38.9247%" y="597" width="0.4301%" height="15" fill="rgb(225,42,16)"/><text x="39.1747%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.43%)</title><rect x="38.9247%" y="581" width="0.4301%" height="15" fill="rgb(220,201,45)"/><text x="39.1747%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.43%)</title><rect x="38.9247%" y="565" width="0.4301%" height="15" fill="rgb(225,33,4)"/><text x="39.1747%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.43%)</title><rect x="38.9247%" y="549" width="0.4301%" height="15" fill="rgb(224,33,50)"/><text x="39.1747%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.43%)</title><rect x="38.9247%" y="533" width="0.4301%" height="15" fill="rgb(246,198,51)"/><text x="39.1747%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.43%)</title><rect x="38.9247%" y="517" width="0.4301%" height="15" fill="rgb(205,22,4)"/><text x="39.1747%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.43%)</title><rect x="38.9247%" y="501" width="0.4301%" height="15" fill="rgb(206,3,8)"/><text x="39.1747%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.43%)</title><rect x="38.9247%" y="485" width="0.4301%" height="15" fill="rgb(251,23,15)"/><text x="39.1747%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.43%)</title><rect x="38.9247%" y="469" width="0.4301%" height="15" fill="rgb(252,88,28)"/><text x="39.1747%" y="479.50"></text></g><g><title>_int_malloc (2 samples, 0.43%)</title><rect x="38.9247%" y="453" width="0.4301%" height="15" fill="rgb(212,127,14)"/><text x="39.1747%" y="463.50"></text></g><g><title>sysmalloc (1 samples, 0.22%)</title><rect x="39.1398%" y="437" width="0.2151%" height="15" fill="rgb(247,145,37)"/><text x="39.3898%" y="447.50"></text></g><g><title>page_fault (1 samples, 0.22%)</title><rect x="39.1398%" y="421" width="0.2151%" height="15" fill="rgb(209,117,53)"/><text x="39.3898%" y="431.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.22%)</title><rect x="39.1398%" y="405" width="0.2151%" height="15" fill="rgb(212,90,42)"/><text x="39.3898%" y="415.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.65%)</title><rect x="38.9247%" y="741" width="0.6452%" height="15" fill="rgb(218,164,37)"/><text x="39.1747%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (3 samples, 0.65%)</title><rect x="38.9247%" y="725" width="0.6452%" height="15" fill="rgb(246,65,34)"/><text x="39.1747%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.65%)</title><rect x="38.9247%" y="709" width="0.6452%" height="15" fill="rgb(231,100,33)"/><text x="39.1747%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.65%)</title><rect x="38.9247%" y="693" width="0.6452%" height="15" fill="rgb(228,126,14)"/><text x="39.1747%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (3 samples, 0.65%)</title><rect x="38.9247%" y="677" width="0.6452%" height="15" fill="rgb(215,173,21)"/><text x="39.1747%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (3 samples, 0.65%)</title><rect x="38.9247%" y="661" width="0.6452%" height="15" fill="rgb(210,6,40)"/><text x="39.1747%" y="671.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.22%)</title><rect x="39.3548%" y="645" width="0.2151%" height="15" fill="rgb(212,48,18)"/><text x="39.6048%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.22%)</title><rect x="39.3548%" y="629" width="0.2151%" height="15" fill="rgb(230,214,11)"/><text x="39.6048%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.22%)</title><rect x="39.3548%" y="613" width="0.2151%" height="15" fill="rgb(254,105,39)"/><text x="39.6048%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.22%)</title><rect x="39.3548%" y="597" width="0.2151%" height="15" fill="rgb(245,158,5)"/><text x="39.6048%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.22%)</title><rect x="39.3548%" y="581" width="0.2151%" height="15" fill="rgb(249,208,11)"/><text x="39.6048%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.22%)</title><rect x="39.3548%" y="565" width="0.2151%" height="15" fill="rgb(210,39,28)"/><text x="39.6048%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="39.3548%" y="549" width="0.2151%" height="15" fill="rgb(211,56,53)"/><text x="39.6048%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.22%)</title><rect x="39.3548%" y="533" width="0.2151%" height="15" fill="rgb(226,201,30)"/><text x="39.6048%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.22%)</title><rect x="39.3548%" y="517" width="0.2151%" height="15" fill="rgb(239,101,34)"/><text x="39.6048%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.22%)</title><rect x="39.3548%" y="501" width="0.2151%" height="15" fill="rgb(226,209,5)"/><text x="39.6048%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="39.3548%" y="485" width="0.2151%" height="15" fill="rgb(250,105,47)"/><text x="39.6048%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.22%)</title><rect x="39.3548%" y="469" width="0.2151%" height="15" fill="rgb(230,72,3)"/><text x="39.6048%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.22%)</title><rect x="39.3548%" y="453" width="0.2151%" height="15" fill="rgb(232,218,39)"/><text x="39.6048%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.22%)</title><rect x="39.3548%" y="437" width="0.2151%" height="15" fill="rgb(248,166,6)"/><text x="39.6048%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.22%)</title><rect x="39.3548%" y="421" width="0.2151%" height="15" fill="rgb(247,89,20)"/><text x="39.6048%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.22%)</title><rect x="39.3548%" y="405" width="0.2151%" height="15" fill="rgb(248,130,54)"/><text x="39.6048%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.22%)</title><rect x="39.3548%" y="389" width="0.2151%" height="15" fill="rgb(234,196,4)"/><text x="39.6048%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.22%)</title><rect x="39.3548%" y="373" width="0.2151%" height="15" fill="rgb(250,143,31)"/><text x="39.6048%" y="383.50"></text></g><g><title>_int_realloc (1 samples, 0.22%)</title><rect x="39.3548%" y="357" width="0.2151%" height="15" fill="rgb(211,110,34)"/><text x="39.6048%" y="367.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (1 samples, 0.22%)</title><rect x="39.5699%" y="709" width="0.2151%" height="15" fill="rgb(215,124,48)"/><text x="39.8199%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.22%)</title><rect x="39.5699%" y="693" width="0.2151%" height="15" fill="rgb(216,46,13)"/><text x="39.8199%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.22%)</title><rect x="39.5699%" y="677" width="0.2151%" height="15" fill="rgb(205,184,25)"/><text x="39.8199%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="39.5699%" y="661" width="0.2151%" height="15" fill="rgb(228,1,10)"/><text x="39.8199%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="39.7849%" y="677" width="0.2151%" height="15" fill="rgb(213,116,27)"/><text x="40.0349%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="40.0000%" y="661" width="0.2151%" height="15" fill="rgb(241,95,50)"/><text x="40.2500%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.22%)</title><rect x="40.2151%" y="661" width="0.2151%" height="15" fill="rgb(238,48,32)"/><text x="40.4651%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.22%)</title><rect x="40.2151%" y="645" width="0.2151%" height="15" fill="rgb(235,113,49)"/><text x="40.4651%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.22%)</title><rect x="40.2151%" y="629" width="0.2151%" height="15" fill="rgb(205,127,43)"/><text x="40.4651%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (5 samples, 1.08%)</title><rect x="39.5699%" y="741" width="1.0753%" height="15" fill="rgb(250,162,2)"/><text x="39.8199%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 1.08%)</title><rect x="39.5699%" y="725" width="1.0753%" height="15" fill="rgb(220,13,41)"/><text x="39.8199%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (4 samples, 0.86%)</title><rect x="39.7849%" y="709" width="0.8602%" height="15" fill="rgb(249,221,25)"/><text x="40.0349%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.86%)</title><rect x="39.7849%" y="693" width="0.8602%" height="15" fill="rgb(215,208,19)"/><text x="40.0349%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.65%)</title><rect x="40.0000%" y="677" width="0.6452%" height="15" fill="rgb(236,175,2)"/><text x="40.2500%" y="687.50"></text></g><g><title>__rdl_realloc (1 samples, 0.22%)</title><rect x="40.4301%" y="661" width="0.2151%" height="15" fill="rgb(241,52,2)"/><text x="40.6801%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.22%)</title><rect x="40.4301%" y="645" width="0.2151%" height="15" fill="rgb(248,140,14)"/><text x="40.6801%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.22%)</title><rect x="40.6452%" y="677" width="0.2151%" height="15" fill="rgb(253,22,42)"/><text x="40.8952%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.22%)</title><rect x="40.8602%" y="677" width="0.2151%" height="15" fill="rgb(234,61,47)"/><text x="41.1102%" y="687.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.65%)</title><rect x="40.6452%" y="741" width="0.6452%" height="15" fill="rgb(208,226,15)"/><text x="40.8952%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.65%)</title><rect x="40.6452%" y="725" width="0.6452%" height="15" fill="rgb(217,221,4)"/><text x="40.8952%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.65%)</title><rect x="40.6452%" y="709" width="0.6452%" height="15" fill="rgb(212,174,34)"/><text x="40.8952%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.65%)</title><rect x="40.6452%" y="693" width="0.6452%" height="15" fill="rgb(253,83,4)"/><text x="40.8952%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.22%)</title><rect x="41.0753%" y="677" width="0.2151%" height="15" fill="rgb(250,195,49)"/><text x="41.3253%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.22%)</title><rect x="41.0753%" y="661" width="0.2151%" height="15" fill="rgb(241,192,25)"/><text x="41.3253%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="41.2903%" y="517" width="0.2151%" height="15" fill="rgb(208,124,10)"/><text x="41.5403%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="41.2903%" y="501" width="0.2151%" height="15" fill="rgb(222,33,0)"/><text x="41.5403%" y="511.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.22%)</title><rect x="41.2903%" y="485" width="0.2151%" height="15" fill="rgb(234,209,28)"/><text x="41.5403%" y="495.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.22%)</title><rect x="41.2903%" y="469" width="0.2151%" height="15" fill="rgb(224,11,23)"/><text x="41.5403%" y="479.50"></text></g><g><title>do_filp_open (1 samples, 0.22%)</title><rect x="41.2903%" y="453" width="0.2151%" height="15" fill="rgb(232,99,1)"/><text x="41.5403%" y="463.50"></text></g><g><title>path_openat (1 samples, 0.22%)</title><rect x="41.2903%" y="437" width="0.2151%" height="15" fill="rgb(237,95,45)"/><text x="41.5403%" y="447.50"></text></g><g><title>link_path_walk (1 samples, 0.22%)</title><rect x="41.2903%" y="421" width="0.2151%" height="15" fill="rgb(208,109,11)"/><text x="41.5403%" y="431.50"></text></g><g><title>walk_component (1 samples, 0.22%)</title><rect x="41.2903%" y="405" width="0.2151%" height="15" fill="rgb(216,190,48)"/><text x="41.5403%" y="415.50"></text></g><g><title>step_into (1 samples, 0.22%)</title><rect x="41.2903%" y="389" width="0.2151%" height="15" fill="rgb(251,171,36)"/><text x="41.5403%" y="399.50"></text></g><g><title>kernfs_iop_get_link (1 samples, 0.22%)</title><rect x="41.2903%" y="373" width="0.2151%" height="15" fill="rgb(230,62,22)"/><text x="41.5403%" y="383.50"></text></g><g><title>mutex_lock (1 samples, 0.22%)</title><rect x="41.2903%" y="357" width="0.2151%" height="15" fill="rgb(225,114,35)"/><text x="41.5403%" y="367.50"></text></g><g><title>__GI___openat (2 samples, 0.43%)</title><rect x="41.2903%" y="533" width="0.4301%" height="15" fill="rgb(215,118,42)"/><text x="41.5403%" y="543.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.22%)</title><rect x="41.5054%" y="517" width="0.2151%" height="15" fill="rgb(243,119,21)"/><text x="41.7554%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.65%)</title><rect x="41.2903%" y="741" width="0.6452%" height="15" fill="rgb(252,177,53)"/><text x="41.5403%" y="751.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.65%)</title><rect x="41.2903%" y="725" width="0.6452%" height="15" fill="rgb(237,209,29)"/><text x="41.5403%" y="735.50"></text></g><g><title>std::panicking::try (3 samples, 0.65%)</title><rect x="41.2903%" y="709" width="0.6452%" height="15" fill="rgb(212,65,23)"/><text x="41.5403%" y="719.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.65%)</title><rect x="41.2903%" y="693" width="0.6452%" height="15" fill="rgb(230,222,46)"/><text x="41.5403%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.65%)</title><rect x="41.2903%" y="677" width="0.6452%" height="15" fill="rgb(215,135,32)"/><text x="41.5403%" y="687.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.65%)</title><rect x="41.2903%" y="661" width="0.6452%" height="15" fill="rgb(246,101,22)"/><text x="41.5403%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.65%)</title><rect x="41.2903%" y="645" width="0.6452%" height="15" fill="rgb(206,107,13)"/><text x="41.5403%" y="655.50"></text></g><g><title>lobsters_microbenchmarks::main (3 samples, 0.65%)</title><rect x="41.2903%" y="629" width="0.6452%" height="15" fill="rgb(250,100,44)"/><text x="41.5403%" y="639.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.65%)</title><rect x="41.2903%" y="613" width="0.6452%" height="15" fill="rgb(231,147,38)"/><text x="41.5403%" y="623.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.65%)</title><rect x="41.2903%" y="597" width="0.6452%" height="15" fill="rgb(229,8,40)"/><text x="41.5403%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.65%)</title><rect x="41.2903%" y="581" width="0.6452%" height="15" fill="rgb(221,135,30)"/><text x="41.5403%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.65%)</title><rect x="41.2903%" y="565" width="0.6452%" height="15" fill="rgb(249,193,18)"/><text x="41.5403%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.65%)</title><rect x="41.2903%" y="549" width="0.6452%" height="15" fill="rgb(209,133,39)"/><text x="41.5403%" y="559.50"></text></g><g><title>__libc_close (1 samples, 0.22%)</title><rect x="41.7204%" y="533" width="0.2151%" height="15" fill="rgb(232,100,14)"/><text x="41.9704%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="41.7204%" y="517" width="0.2151%" height="15" fill="rgb(224,185,1)"/><text x="41.9704%" y="527.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="41.7204%" y="501" width="0.2151%" height="15" fill="rgb(223,139,8)"/><text x="41.9704%" y="511.50"></text></g><g><title>task_work_run (1 samples, 0.22%)</title><rect x="41.7204%" y="485" width="0.2151%" height="15" fill="rgb(232,213,38)"/><text x="41.9704%" y="495.50"></text></g><g><title>__fput (1 samples, 0.22%)</title><rect x="41.7204%" y="469" width="0.2151%" height="15" fill="rgb(207,94,22)"/><text x="41.9704%" y="479.50"></text></g><g><title>[unknown] (177 samples, 38.06%)</title><rect x="4.0860%" y="757" width="38.0645%" height="15" fill="rgb(219,183,54)"/><text x="4.3360%" y="767.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.22%)</title><rect x="41.9355%" y="741" width="0.2151%" height="15" fill="rgb(216,185,54)"/><text x="42.1855%" y="751.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (1 samples, 0.22%)</title><rect x="41.9355%" y="725" width="0.2151%" height="15" fill="rgb(254,217,39)"/><text x="42.1855%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.22%)</title><rect x="41.9355%" y="709" width="0.2151%" height="15" fill="rgb(240,178,23)"/><text x="42.1855%" y="719.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.22%)</title><rect x="41.9355%" y="693" width="0.2151%" height="15" fill="rgb(218,11,47)"/><text x="42.1855%" y="703.50"></text></g><g><title>decor_mem::Shim::create_schema (1 samples, 0.22%)</title><rect x="41.9355%" y="677" width="0.2151%" height="15" fill="rgb(218,51,51)"/><text x="42.1855%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.22%)</title><rect x="41.9355%" y="661" width="0.2151%" height="15" fill="rgb(238,126,27)"/><text x="42.1855%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.22%)</title><rect x="41.9355%" y="645" width="0.2151%" height="15" fill="rgb(249,202,22)"/><text x="42.1855%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.22%)</title><rect x="41.9355%" y="629" width="0.2151%" height="15" fill="rgb(254,195,49)"/><text x="42.1855%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.22%)</title><rect x="41.9355%" y="613" width="0.2151%" height="15" fill="rgb(208,123,14)"/><text x="42.1855%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.22%)</title><rect x="41.9355%" y="597" width="0.2151%" height="15" fill="rgb(224,200,8)"/><text x="42.1855%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.22%)</title><rect x="41.9355%" y="581" width="0.2151%" height="15" fill="rgb(217,61,36)"/><text x="42.1855%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.22%)</title><rect x="41.9355%" y="565" width="0.2151%" height="15" fill="rgb(206,35,45)"/><text x="42.1855%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.22%)</title><rect x="41.9355%" y="549" width="0.2151%" height="15" fill="rgb(217,65,33)"/><text x="42.1855%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.22%)</title><rect x="41.9355%" y="533" width="0.2151%" height="15" fill="rgb(222,158,48)"/><text x="42.1855%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.22%)</title><rect x="41.9355%" y="517" width="0.2151%" height="15" fill="rgb(254,2,54)"/><text x="42.1855%" y="527.50"></text></g><g><title>__libc_recv (1 samples, 0.22%)</title><rect x="41.9355%" y="501" width="0.2151%" height="15" fill="rgb(250,143,38)"/><text x="42.1855%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="41.9355%" y="485" width="0.2151%" height="15" fill="rgb(248,25,0)"/><text x="42.1855%" y="495.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="41.9355%" y="469" width="0.2151%" height="15" fill="rgb(206,152,27)"/><text x="42.1855%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.22%)</title><rect x="41.9355%" y="453" width="0.2151%" height="15" fill="rgb(240,77,30)"/><text x="42.1855%" y="463.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.22%)</title><rect x="41.9355%" y="437" width="0.2151%" height="15" fill="rgb(231,5,3)"/><text x="42.1855%" y="447.50"></text></g><g><title>inet_recvmsg (1 samples, 0.22%)</title><rect x="41.9355%" y="421" width="0.2151%" height="15" fill="rgb(207,226,32)"/><text x="42.1855%" y="431.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.22%)</title><rect x="41.9355%" y="405" width="0.2151%" height="15" fill="rgb(222,207,47)"/><text x="42.1855%" y="415.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.22%)</title><rect x="41.9355%" y="389" width="0.2151%" height="15" fill="rgb(229,115,45)"/><text x="42.1855%" y="399.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.22%)</title><rect x="41.9355%" y="373" width="0.2151%" height="15" fill="rgb(224,191,6)"/><text x="42.1855%" y="383.50"></text></g><g><title>ip_output (1 samples, 0.22%)</title><rect x="41.9355%" y="357" width="0.2151%" height="15" fill="rgb(230,227,24)"/><text x="42.1855%" y="367.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.22%)</title><rect x="41.9355%" y="341" width="0.2151%" height="15" fill="rgb(228,80,19)"/><text x="42.1855%" y="351.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.22%)</title><rect x="41.9355%" y="325" width="0.2151%" height="15" fill="rgb(247,229,0)"/><text x="42.1855%" y="335.50"></text></g><g><title>do_softirq (1 samples, 0.22%)</title><rect x="41.9355%" y="309" width="0.2151%" height="15" fill="rgb(237,194,15)"/><text x="42.1855%" y="319.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.22%)</title><rect x="41.9355%" y="293" width="0.2151%" height="15" fill="rgb(219,203,20)"/><text x="42.1855%" y="303.50"></text></g><g><title>__do_softirq (1 samples, 0.22%)</title><rect x="41.9355%" y="277" width="0.2151%" height="15" fill="rgb(234,128,8)"/><text x="42.1855%" y="287.50"></text></g><g><title>net_rx_action (1 samples, 0.22%)</title><rect x="41.9355%" y="261" width="0.2151%" height="15" fill="rgb(248,202,8)"/><text x="42.1855%" y="271.50"></text></g><g><title>process_backlog (1 samples, 0.22%)</title><rect x="41.9355%" y="245" width="0.2151%" height="15" fill="rgb(206,104,37)"/><text x="42.1855%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.22%)</title><rect x="41.9355%" y="229" width="0.2151%" height="15" fill="rgb(223,8,27)"/><text x="42.1855%" y="239.50"></text></g><g><title>ip_rcv (1 samples, 0.22%)</title><rect x="41.9355%" y="213" width="0.2151%" height="15" fill="rgb(216,217,28)"/><text x="42.1855%" y="223.50"></text></g><g><title>ip_local_deliver (1 samples, 0.22%)</title><rect x="41.9355%" y="197" width="0.2151%" height="15" fill="rgb(249,199,1)"/><text x="42.1855%" y="207.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.22%)</title><rect x="41.9355%" y="181" width="0.2151%" height="15" fill="rgb(240,85,17)"/><text x="42.1855%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.22%)</title><rect x="41.9355%" y="165" width="0.2151%" height="15" fill="rgb(206,108,45)"/><text x="42.1855%" y="175.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.22%)</title><rect x="41.9355%" y="149" width="0.2151%" height="15" fill="rgb(245,210,41)"/><text x="42.1855%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.22%)</title><rect x="41.9355%" y="133" width="0.2151%" height="15" fill="rgb(206,13,37)"/><text x="42.1855%" y="143.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.22%)</title><rect x="41.9355%" y="117" width="0.2151%" height="15" fill="rgb(250,61,18)"/><text x="42.1855%" y="127.50"></text></g><g><title>tcp_ack (1 samples, 0.22%)</title><rect x="41.9355%" y="101" width="0.2151%" height="15" fill="rgb(235,172,48)"/><text x="42.1855%" y="111.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.22%)</title><rect x="41.9355%" y="85" width="0.2151%" height="15" fill="rgb(249,201,17)"/><text x="42.1855%" y="95.50"></text></g><g><title>__GI___libc_free (2 samples, 0.43%)</title><rect x="42.3656%" y="581" width="0.4301%" height="15" fill="rgb(219,208,6)"/><text x="42.6156%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="42.7957%" y="581" width="0.2151%" height="15" fill="rgb(248,31,23)"/><text x="43.0457%" y="591.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (5 samples, 1.08%)</title><rect x="42.1505%" y="613" width="1.0753%" height="15" fill="rgb(245,15,42)"/><text x="42.4005%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.86%)</title><rect x="42.3656%" y="597" width="0.8602%" height="15" fill="rgb(222,217,39)"/><text x="42.6156%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.22%)</title><rect x="43.0108%" y="581" width="0.2151%" height="15" fill="rgb(210,219,27)"/><text x="43.2608%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.22%)</title><rect x="43.0108%" y="565" width="0.2151%" height="15" fill="rgb(252,166,36)"/><text x="43.2608%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.22%)</title><rect x="43.0108%" y="549" width="0.2151%" height="15" fill="rgb(245,132,34)"/><text x="43.2608%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.22%)</title><rect x="43.0108%" y="533" width="0.2151%" height="15" fill="rgb(236,54,3)"/><text x="43.2608%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.22%)</title><rect x="43.0108%" y="517" width="0.2151%" height="15" fill="rgb(241,173,43)"/><text x="43.2608%" y="527.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.22%)</title><rect x="43.0108%" y="501" width="0.2151%" height="15" fill="rgb(215,190,9)"/><text x="43.2608%" y="511.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::flush (1 samples, 0.22%)</title><rect x="43.2258%" y="613" width="0.2151%" height="15" fill="rgb(242,101,16)"/><text x="43.4758%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.22%)</title><rect x="43.4409%" y="581" width="0.2151%" height="15" fill="rgb(223,190,21)"/><text x="43.6909%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.22%)</title><rect x="43.4409%" y="565" width="0.2151%" height="15" fill="rgb(215,228,25)"/><text x="43.6909%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.22%)</title><rect x="43.4409%" y="549" width="0.2151%" height="15" fill="rgb(225,36,22)"/><text x="43.6909%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.22%)</title><rect x="43.4409%" y="533" width="0.2151%" height="15" fill="rgb(251,106,46)"/><text x="43.6909%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.22%)</title><rect x="43.4409%" y="517" width="0.2151%" height="15" fill="rgb(208,90,1)"/><text x="43.6909%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.43%)</title><rect x="43.4409%" y="613" width="0.4301%" height="15" fill="rgb(243,10,4)"/><text x="43.6909%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.43%)</title><rect x="43.4409%" y="597" width="0.4301%" height="15" fill="rgb(212,137,27)"/><text x="43.6909%" y="607.50"></text></g><g><title>decor_mem::stats::print_stats (1 samples, 0.22%)</title><rect x="43.6559%" y="581" width="0.2151%" height="15" fill="rgb(231,220,49)"/><text x="43.9059%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.22%)</title><rect x="43.6559%" y="565" width="0.2151%" height="15" fill="rgb(237,96,20)"/><text x="43.9059%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.22%)</title><rect x="43.6559%" y="549" width="0.2151%" height="15" fill="rgb(239,229,30)"/><text x="43.9059%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.22%)</title><rect x="43.6559%" y="533" width="0.2151%" height="15" fill="rgb(219,65,33)"/><text x="43.9059%" y="543.50"></text></g><g><title>__libc_write (1 samples, 0.22%)</title><rect x="43.6559%" y="517" width="0.2151%" height="15" fill="rgb(243,134,7)"/><text x="43.9059%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="43.6559%" y="501" width="0.2151%" height="15" fill="rgb(216,177,54)"/><text x="43.9059%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="43.6559%" y="485" width="0.2151%" height="15" fill="rgb(211,160,20)"/><text x="43.9059%" y="495.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.22%)</title><rect x="43.6559%" y="469" width="0.2151%" height="15" fill="rgb(239,85,39)"/><text x="43.9059%" y="479.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.22%)</title><rect x="43.8710%" y="341" width="0.2151%" height="15" fill="rgb(232,125,22)"/><text x="44.1210%" y="351.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.22%)</title><rect x="43.8710%" y="325" width="0.2151%" height="15" fill="rgb(244,57,34)"/><text x="44.1210%" y="335.50"></text></g><g><title>loopback_xmit (1 samples, 0.22%)</title><rect x="43.8710%" y="309" width="0.2151%" height="15" fill="rgb(214,203,32)"/><text x="44.1210%" y="319.50"></text></g><g><title>netif_rx (1 samples, 0.22%)</title><rect x="43.8710%" y="293" width="0.2151%" height="15" fill="rgb(207,58,43)"/><text x="44.1210%" y="303.50"></text></g><g><title>netif_rx_internal (1 samples, 0.22%)</title><rect x="43.8710%" y="277" width="0.2151%" height="15" fill="rgb(215,193,15)"/><text x="44.1210%" y="287.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.22%)</title><rect x="43.8710%" y="261" width="0.2151%" height="15" fill="rgb(232,15,44)"/><text x="44.1210%" y="271.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.22%)</title><rect x="43.8710%" y="245" width="0.2151%" height="15" fill="rgb(212,3,48)"/><text x="44.1210%" y="255.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (2 samples, 0.43%)</title><rect x="43.8710%" y="613" width="0.4301%" height="15" fill="rgb(218,128,7)"/><text x="44.1210%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.43%)</title><rect x="43.8710%" y="597" width="0.4301%" height="15" fill="rgb(226,216,39)"/><text x="44.1210%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.43%)</title><rect x="43.8710%" y="581" width="0.4301%" height="15" fill="rgb(243,47,51)"/><text x="44.1210%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.43%)</title><rect x="43.8710%" y="565" width="0.4301%" height="15" fill="rgb(241,183,40)"/><text x="44.1210%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.43%)</title><rect x="43.8710%" y="549" width="0.4301%" height="15" fill="rgb(231,217,32)"/><text x="44.1210%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.43%)</title><rect x="43.8710%" y="533" width="0.4301%" height="15" fill="rgb(229,61,38)"/><text x="44.1210%" y="543.50"></text></g><g><title>__libc_recv (2 samples, 0.43%)</title><rect x="43.8710%" y="517" width="0.4301%" height="15" fill="rgb(225,210,5)"/><text x="44.1210%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.43%)</title><rect x="43.8710%" y="501" width="0.4301%" height="15" fill="rgb(231,79,45)"/><text x="44.1210%" y="511.50"></text></g><g><title>do_syscall_64 (2 samples, 0.43%)</title><rect x="43.8710%" y="485" width="0.4301%" height="15" fill="rgb(224,100,7)"/><text x="44.1210%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (2 samples, 0.43%)</title><rect x="43.8710%" y="469" width="0.4301%" height="15" fill="rgb(241,198,18)"/><text x="44.1210%" y="479.50"></text></g><g><title>__sys_recvfrom (2 samples, 0.43%)</title><rect x="43.8710%" y="453" width="0.4301%" height="15" fill="rgb(252,97,53)"/><text x="44.1210%" y="463.50"></text></g><g><title>inet_recvmsg (2 samples, 0.43%)</title><rect x="43.8710%" y="437" width="0.4301%" height="15" fill="rgb(220,88,7)"/><text x="44.1210%" y="447.50"></text></g><g><title>tcp_recvmsg (2 samples, 0.43%)</title><rect x="43.8710%" y="421" width="0.4301%" height="15" fill="rgb(213,176,14)"/><text x="44.1210%" y="431.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.43%)</title><rect x="43.8710%" y="405" width="0.4301%" height="15" fill="rgb(246,73,7)"/><text x="44.1210%" y="415.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.43%)</title><rect x="43.8710%" y="389" width="0.4301%" height="15" fill="rgb(245,64,36)"/><text x="44.1210%" y="399.50"></text></g><g><title>ip_output (2 samples, 0.43%)</title><rect x="43.8710%" y="373" width="0.4301%" height="15" fill="rgb(245,80,10)"/><text x="44.1210%" y="383.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.43%)</title><rect x="43.8710%" y="357" width="0.4301%" height="15" fill="rgb(232,107,50)"/><text x="44.1210%" y="367.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.22%)</title><rect x="44.0860%" y="341" width="0.2151%" height="15" fill="rgb(253,3,0)"/><text x="44.3360%" y="351.50"></text></g><g><title>do_softirq (1 samples, 0.22%)</title><rect x="44.0860%" y="325" width="0.2151%" height="15" fill="rgb(212,99,53)"/><text x="44.3360%" y="335.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.22%)</title><rect x="44.0860%" y="309" width="0.2151%" height="15" fill="rgb(249,111,54)"/><text x="44.3360%" y="319.50"></text></g><g><title>__do_softirq (1 samples, 0.22%)</title><rect x="44.0860%" y="293" width="0.2151%" height="15" fill="rgb(249,55,30)"/><text x="44.3360%" y="303.50"></text></g><g><title>net_rx_action (1 samples, 0.22%)</title><rect x="44.0860%" y="277" width="0.2151%" height="15" fill="rgb(237,47,42)"/><text x="44.3360%" y="287.50"></text></g><g><title>process_backlog (1 samples, 0.22%)</title><rect x="44.0860%" y="261" width="0.2151%" height="15" fill="rgb(211,20,18)"/><text x="44.3360%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.22%)</title><rect x="44.0860%" y="245" width="0.2151%" height="15" fill="rgb(231,203,46)"/><text x="44.3360%" y="255.50"></text></g><g><title>ip_rcv (1 samples, 0.22%)</title><rect x="44.0860%" y="229" width="0.2151%" height="15" fill="rgb(237,142,3)"/><text x="44.3360%" y="239.50"></text></g><g><title>ip_rcv_core (1 samples, 0.22%)</title><rect x="44.0860%" y="213" width="0.2151%" height="15" fill="rgb(241,107,1)"/><text x="44.3360%" y="223.50"></text></g><g><title>import_single_range (1 samples, 0.22%)</title><rect x="44.3011%" y="485" width="0.2151%" height="15" fill="rgb(229,83,13)"/><text x="44.5511%" y="495.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (12 samples, 2.58%)</title><rect x="42.1505%" y="629" width="2.5806%" height="15" fill="rgb(241,91,40)"/><text x="42.4005%" y="639.50">ms..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.43%)</title><rect x="44.3011%" y="613" width="0.4301%" height="15" fill="rgb(225,3,45)"/><text x="44.5511%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.43%)</title><rect x="44.3011%" y="597" width="0.4301%" height="15" fill="rgb(244,223,14)"/><text x="44.5511%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.43%)</title><rect x="44.3011%" y="581" width="0.4301%" height="15" fill="rgb(224,124,37)"/><text x="44.5511%" y="591.50"></text></g><g><title>__libc_send (2 samples, 0.43%)</title><rect x="44.3011%" y="565" width="0.4301%" height="15" fill="rgb(251,171,30)"/><text x="44.5511%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.43%)</title><rect x="44.3011%" y="549" width="0.4301%" height="15" fill="rgb(236,46,54)"/><text x="44.5511%" y="559.50"></text></g><g><title>do_syscall_64 (2 samples, 0.43%)</title><rect x="44.3011%" y="533" width="0.4301%" height="15" fill="rgb(245,213,5)"/><text x="44.5511%" y="543.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.43%)</title><rect x="44.3011%" y="517" width="0.4301%" height="15" fill="rgb(230,144,27)"/><text x="44.5511%" y="527.50"></text></g><g><title>__sys_sendto (2 samples, 0.43%)</title><rect x="44.3011%" y="501" width="0.4301%" height="15" fill="rgb(220,86,6)"/><text x="44.5511%" y="511.50"></text></g><g><title>sock_sendmsg (1 samples, 0.22%)</title><rect x="44.5161%" y="485" width="0.2151%" height="15" fill="rgb(240,20,13)"/><text x="44.7661%" y="495.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.22%)</title><rect x="44.5161%" y="469" width="0.2151%" height="15" fill="rgb(217,89,34)"/><text x="44.7661%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.22%)</title><rect x="44.5161%" y="453" width="0.2151%" height="15" fill="rgb(229,13,5)"/><text x="44.7661%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.22%)</title><rect x="44.5161%" y="437" width="0.2151%" height="15" fill="rgb(244,67,35)"/><text x="44.7661%" y="447.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.22%)</title><rect x="44.5161%" y="421" width="0.2151%" height="15" fill="rgb(221,40,2)"/><text x="44.7661%" y="431.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.22%)</title><rect x="44.5161%" y="405" width="0.2151%" height="15" fill="rgb(237,157,21)"/><text x="44.7661%" y="415.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.22%)</title><rect x="44.5161%" y="389" width="0.2151%" height="15" fill="rgb(222,94,11)"/><text x="44.7661%" y="399.50"></text></g><g><title>ip_output (1 samples, 0.22%)</title><rect x="44.5161%" y="373" width="0.2151%" height="15" fill="rgb(249,113,6)"/><text x="44.7661%" y="383.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.22%)</title><rect x="44.5161%" y="357" width="0.2151%" height="15" fill="rgb(238,137,36)"/><text x="44.7661%" y="367.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.22%)</title><rect x="44.5161%" y="341" width="0.2151%" height="15" fill="rgb(210,102,26)"/><text x="44.7661%" y="351.50"></text></g><g><title>do_softirq (1 samples, 0.22%)</title><rect x="44.5161%" y="325" width="0.2151%" height="15" fill="rgb(218,30,30)"/><text x="44.7661%" y="335.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.22%)</title><rect x="44.5161%" y="309" width="0.2151%" height="15" fill="rgb(214,67,26)"/><text x="44.7661%" y="319.50"></text></g><g><title>__do_softirq (1 samples, 0.22%)</title><rect x="44.5161%" y="293" width="0.2151%" height="15" fill="rgb(251,9,53)"/><text x="44.7661%" y="303.50"></text></g><g><title>net_rx_action (1 samples, 0.22%)</title><rect x="44.5161%" y="277" width="0.2151%" height="15" fill="rgb(228,204,25)"/><text x="44.7661%" y="287.50"></text></g><g><title>process_backlog (1 samples, 0.22%)</title><rect x="44.5161%" y="261" width="0.2151%" height="15" fill="rgb(207,153,8)"/><text x="44.7661%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.22%)</title><rect x="44.5161%" y="245" width="0.2151%" height="15" fill="rgb(242,9,16)"/><text x="44.7661%" y="255.50"></text></g><g><title>ip_rcv (1 samples, 0.22%)</title><rect x="44.5161%" y="229" width="0.2151%" height="15" fill="rgb(217,211,10)"/><text x="44.7661%" y="239.50"></text></g><g><title>ip_local_deliver (1 samples, 0.22%)</title><rect x="44.5161%" y="213" width="0.2151%" height="15" fill="rgb(219,228,52)"/><text x="44.7661%" y="223.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.22%)</title><rect x="44.5161%" y="197" width="0.2151%" height="15" fill="rgb(231,92,29)"/><text x="44.7661%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.22%)</title><rect x="44.5161%" y="181" width="0.2151%" height="15" fill="rgb(232,8,23)"/><text x="44.7661%" y="191.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.22%)</title><rect x="44.5161%" y="165" width="0.2151%" height="15" fill="rgb(216,211,34)"/><text x="44.7661%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.22%)</title><rect x="44.5161%" y="149" width="0.2151%" height="15" fill="rgb(236,151,0)"/><text x="44.7661%" y="159.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.22%)</title><rect x="44.5161%" y="133" width="0.2151%" height="15" fill="rgb(209,168,3)"/><text x="44.7661%" y="143.50"></text></g><g><title>sock_def_readable (1 samples, 0.22%)</title><rect x="44.5161%" y="117" width="0.2151%" height="15" fill="rgb(208,129,28)"/><text x="44.7661%" y="127.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.22%)</title><rect x="44.5161%" y="101" width="0.2151%" height="15" fill="rgb(229,78,22)"/><text x="44.7661%" y="111.50"></text></g><g><title>__wake_up_common (1 samples, 0.22%)</title><rect x="44.5161%" y="85" width="0.2151%" height="15" fill="rgb(228,187,13)"/><text x="44.7661%" y="95.50"></text></g><g><title>try_to_wake_up (1 samples, 0.22%)</title><rect x="44.5161%" y="69" width="0.2151%" height="15" fill="rgb(240,119,24)"/><text x="44.7661%" y="79.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.22%)</title><rect x="44.5161%" y="53" width="0.2151%" height="15" fill="rgb(209,194,42)"/><text x="44.7661%" y="63.50"></text></g><g><title>__GI___clone (13 samples, 2.80%)</title><rect x="42.1505%" y="757" width="2.7957%" height="15" fill="rgb(247,200,46)"/><text x="42.4005%" y="767.50">__..</text></g><g><title>start_thread (13 samples, 2.80%)</title><rect x="42.1505%" y="741" width="2.7957%" height="15" fill="rgb(218,76,16)"/><text x="42.4005%" y="751.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 2.80%)</title><rect x="42.1505%" y="725" width="2.7957%" height="15" fill="rgb(225,21,48)"/><text x="42.4005%" y="735.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (13 samples, 2.80%)</title><rect x="42.1505%" y="709" width="2.7957%" height="15" fill="rgb(239,223,50)"/><text x="42.4005%" y="719.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (13 samples, 2.80%)</title><rect x="42.1505%" y="693" width="2.7957%" height="15" fill="rgb(244,45,21)"/><text x="42.4005%" y="703.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (13 samples, 2.80%)</title><rect x="42.1505%" y="677" width="2.7957%" height="15" fill="rgb(232,33,43)"/><text x="42.4005%" y="687.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 2.80%)</title><rect x="42.1505%" y="661" width="2.7957%" height="15" fill="rgb(209,8,3)"/><text x="42.4005%" y="671.50">st..</text></g><g><title>decor_mem::Shim::run_on_tcp (13 samples, 2.80%)</title><rect x="42.1505%" y="645" width="2.7957%" height="15" fill="rgb(214,25,53)"/><text x="42.4005%" y="655.50">de..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.22%)</title><rect x="44.7312%" y="629" width="0.2151%" height="15" fill="rgb(254,186,54)"/><text x="44.9812%" y="639.50"></text></g><g><title>page_fault (1 samples, 0.22%)</title><rect x="44.7312%" y="613" width="0.2151%" height="15" fill="rgb(208,174,49)"/><text x="44.9812%" y="623.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.22%)</title><rect x="44.7312%" y="597" width="0.2151%" height="15" fill="rgb(233,191,51)"/><text x="44.9812%" y="607.50"></text></g><g><title>handle_mm_fault (1 samples, 0.22%)</title><rect x="44.7312%" y="581" width="0.2151%" height="15" fill="rgb(222,134,10)"/><text x="44.9812%" y="591.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.22%)</title><rect x="44.7312%" y="565" width="0.2151%" height="15" fill="rgb(230,226,20)"/><text x="44.9812%" y="575.50"></text></g><g><title>filemap_map_pages (1 samples, 0.22%)</title><rect x="44.7312%" y="549" width="0.2151%" height="15" fill="rgb(251,111,25)"/><text x="44.9812%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as core::ops::drop::Drop&gt;::drop (1 samples, 0.22%)</title><rect x="44.9462%" y="581" width="0.2151%" height="15" fill="rgb(224,40,46)"/><text x="45.1962%" y="591.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.22%)</title><rect x="44.9462%" y="565" width="0.2151%" height="15" fill="rgb(236,108,47)"/><text x="45.1962%" y="575.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.22%)</title><rect x="44.9462%" y="549" width="0.2151%" height="15" fill="rgb(234,93,0)"/><text x="45.1962%" y="559.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.22%)</title><rect x="44.9462%" y="533" width="0.2151%" height="15" fill="rgb(224,213,32)"/><text x="45.1962%" y="543.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.22%)</title><rect x="44.9462%" y="517" width="0.2151%" height="15" fill="rgb(251,11,48)"/><text x="45.1962%" y="527.50"></text></g><g><title>__libc_send (1 samples, 0.22%)</title><rect x="44.9462%" y="501" width="0.2151%" height="15" fill="rgb(236,173,5)"/><text x="45.1962%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.22%)</title><rect x="44.9462%" y="485" width="0.2151%" height="15" fill="rgb(230,95,12)"/><text x="45.1962%" y="495.50"></text></g><g><title>do_syscall_64 (1 samples, 0.22%)</title><rect x="44.9462%" y="469" width="0.2151%" height="15" fill="rgb(232,209,1)"/><text x="45.1962%" y="479.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.22%)</title><rect x="44.9462%" y="453" width="0.2151%" height="15" fill="rgb(232,6,1)"/><text x="45.1962%" y="463.50"></text></g><g><title>__sys_sendto (1 samples, 0.22%)</title><rect x="44.9462%" y="437" width="0.2151%" height="15" fill="rgb(210,224,50)"/><text x="45.1962%" y="447.50"></text></g><g><title>sock_sendmsg (1 samples, 0.22%)</title><rect x="44.9462%" y="421" width="0.2151%" height="15" fill="rgb(228,127,35)"/><text x="45.1962%" y="431.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.22%)</title><rect x="44.9462%" y="405" width="0.2151%" height="15" fill="rgb(245,102,45)"/><text x="45.1962%" y="415.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.22%)</title><rect x="44.9462%" y="389" width="0.2151%" height="15" fill="rgb(214,1,49)"/><text x="45.1962%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.22%)</title><rect x="44.9462%" y="373" width="0.2151%" height="15" fill="rgb(226,163,40)"/><text x="45.1962%" y="383.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.22%)</title><rect x="44.9462%" y="357" width="0.2151%" height="15" fill="rgb(239,212,28)"/><text x="45.1962%" y="367.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.22%)</title><rect x="44.9462%" y="341" width="0.2151%" height="15" fill="rgb(220,20,13)"/><text x="45.1962%" y="351.50"></text></g><g><title>skb_clone (1 samples, 0.22%)</title><rect x="44.9462%" y="325" width="0.2151%" height="15" fill="rgb(210,164,35)"/><text x="45.1962%" y="335.50"></text></g><g><title>__copy_skb_header (1 samples, 0.22%)</title><rect x="44.9462%" y="309" width="0.2151%" height="15" fill="rgb(248,109,41)"/><text x="45.1962%" y="319.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.22%)</title><rect x="45.1613%" y="501" width="0.2151%" height="15" fill="rgb(238,23,50)"/><text x="45.4113%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.22%)</title><rect x="45.1613%" y="485" width="0.2151%" height="15" fill="rgb(211,48,49)"/><text x="45.4113%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.22%)</title><rect x="45.1613%" y="469" width="0.2151%" height="15" fill="rgb(223,36,21)"/><text x="45.4113%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.22%)</title><rect x="45.3763%" y="485" width="0.2151%" height="15" fill="rgb(207,123,46)"/><text x="45.6263%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (234 samples, 50.32%)</title><rect x="45.5914%" y="293" width="50.3226%" height="15" fill="rgb(240,218,32)"/><text x="45.8414%" y="303.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (234 samples, 50.32%)</title><rect x="45.5914%" y="277" width="50.3226%" height="15" fill="rgb(252,5,43)"/><text x="45.8414%" y="287.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (234 samples, 50.32%)</title><rect x="45.5914%" y="261" width="50.3226%" height="15" fill="rgb(252,84,19)"/><text x="45.8414%" y="271.50">native_write_msr</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 50.54%)</title><rect x="45.5914%" y="405" width="50.5376%" height="15" fill="rgb(243,152,39)"/><text x="45.8414%" y="415.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 50.54%)</title><rect x="45.5914%" y="389" width="50.5376%" height="15" fill="rgb(234,160,15)"/><text x="45.8414%" y="399.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 50.54%)</title><rect x="45.5914%" y="373" width="50.5376%" height="15" fill="rgb(237,34,20)"/><text x="45.8414%" y="383.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 50.54%)</title><rect x="45.5914%" y="357" width="50.5376%" height="15" fill="rgb(229,97,13)"/><text x="45.8414%" y="367.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 50.54%)</title><rect x="45.5914%" y="341" width="50.5376%" height="15" fill="rgb(234,71,50)"/><text x="45.8414%" y="351.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 50.54%)</title><rect x="45.5914%" y="325" width="50.5376%" height="15" fill="rgb(253,155,4)"/><text x="45.8414%" y="335.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 50.54%)</title><rect x="45.5914%" y="309" width="50.5376%" height="15" fill="rgb(222,185,37)"/><text x="45.8414%" y="319.50">finish_task_switch</text></g><g><title>kmem_cache_free (1 samples, 0.22%)</title><rect x="95.9140%" y="293" width="0.2151%" height="15" fill="rgb(251,177,13)"/><text x="96.1640%" y="303.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.22%)</title><rect x="95.9140%" y="277" width="0.2151%" height="15" fill="rgb(250,179,40)"/><text x="96.1640%" y="287.50"></text></g><g><title>__bitmap_and (1 samples, 0.22%)</title><rect x="96.1290%" y="389" width="0.2151%" height="15" fill="rgb(242,44,2)"/><text x="96.3790%" y="399.50"></text></g><g><title>do_syscall_64 (237 samples, 50.97%)</title><rect x="45.5914%" y="453" width="50.9677%" height="15" fill="rgb(216,177,13)"/><text x="45.8414%" y="463.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (237 samples, 50.97%)</title><rect x="45.5914%" y="437" width="50.9677%" height="15" fill="rgb(216,106,43)"/><text x="45.8414%" y="447.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (237 samples, 50.97%)</title><rect x="45.5914%" y="421" width="50.9677%" height="15" fill="rgb(216,183,2)"/><text x="45.8414%" y="431.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (2 samples, 0.43%)</title><rect x="96.1290%" y="405" width="0.4301%" height="15" fill="rgb(249,75,3)"/><text x="96.3790%" y="415.50"></text></g><g><title>guarantee_online_cpus (1 samples, 0.22%)</title><rect x="96.3441%" y="389" width="0.2151%" height="15" fill="rgb(219,67,39)"/><text x="96.5941%" y="399.50"></text></g><g><title>__bitmap_intersects (1 samples, 0.22%)</title><rect x="96.3441%" y="373" width="0.2151%" height="15" fill="rgb(253,228,2)"/><text x="96.5941%" y="383.50"></text></g><g><title>hwloc::Topology::new (241 samples, 51.83%)</title><rect x="45.1613%" y="581" width="51.8280%" height="15" fill="rgb(235,138,27)"/><text x="45.4113%" y="591.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (241 samples, 51.83%)</title><rect x="45.1613%" y="565" width="51.8280%" height="15" fill="rgb(236,97,51)"/><text x="45.4113%" y="575.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 51.83%)</title><rect x="45.1613%" y="549" width="51.8280%" height="15" fill="rgb(240,80,30)"/><text x="45.4113%" y="559.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 51.83%)</title><rect x="45.1613%" y="533" width="51.8280%" height="15" fill="rgb(230,178,19)"/><text x="45.4113%" y="543.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 51.83%)</title><rect x="45.1613%" y="517" width="51.8280%" height="15" fill="rgb(210,190,27)"/><text x="45.4113%" y="527.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 51.61%)</title><rect x="45.3763%" y="501" width="51.6129%" height="15" fill="rgb(222,107,31)"/><text x="45.6263%" y="511.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (239 samples, 51.40%)</title><rect x="45.5914%" y="485" width="51.3978%" height="15" fill="rgb(216,127,34)"/><text x="45.8414%" y="495.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (239 samples, 51.40%)</title><rect x="45.5914%" y="469" width="51.3978%" height="15" fill="rgb(234,116,52)"/><text x="45.8414%" y="479.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.43%)</title><rect x="96.5591%" y="453" width="0.4301%" height="15" fill="rgb(222,124,15)"/><text x="96.8091%" y="463.50"></text></g><g><title>switch_fpu_return (1 samples, 0.22%)</title><rect x="96.7742%" y="437" width="0.2151%" height="15" fill="rgb(231,179,28)"/><text x="97.0242%" y="447.50"></text></g><g><title>_start (243 samples, 52.26%)</title><rect x="44.9462%" y="757" width="52.2581%" height="15" fill="rgb(226,93,45)"/><text x="45.1962%" y="767.50">_start</text></g><g><title>__libc_start_main (243 samples, 52.26%)</title><rect x="44.9462%" y="741" width="52.2581%" height="15" fill="rgb(215,8,51)"/><text x="45.1962%" y="751.50">__libc_start_main</text></g><g><title>main (243 samples, 52.26%)</title><rect x="44.9462%" y="725" width="52.2581%" height="15" fill="rgb(223,106,5)"/><text x="45.1962%" y="735.50">main</text></g><g><title>std::rt::lang_start_internal (243 samples, 52.26%)</title><rect x="44.9462%" y="709" width="52.2581%" height="15" fill="rgb(250,191,5)"/><text x="45.1962%" y="719.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (243 samples, 52.26%)</title><rect x="44.9462%" y="693" width="52.2581%" height="15" fill="rgb(242,132,44)"/><text x="45.1962%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (243 samples, 52.26%)</title><rect x="44.9462%" y="677" width="52.2581%" height="15" fill="rgb(251,152,29)"/><text x="45.1962%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (243 samples, 52.26%)</title><rect x="44.9462%" y="661" width="52.2581%" height="15" fill="rgb(218,179,5)"/><text x="45.1962%" y="671.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (243 samples, 52.26%)</title><rect x="44.9462%" y="645" width="52.2581%" height="15" fill="rgb(227,67,19)"/><text x="45.1962%" y="655.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (243 samples, 52.26%)</title><rect x="44.9462%" y="629" width="52.2581%" height="15" fill="rgb(233,119,31)"/><text x="45.1962%" y="639.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (243 samples, 52.26%)</title><rect x="44.9462%" y="613" width="52.2581%" height="15" fill="rgb(241,120,22)"/><text x="45.1962%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters_microbenchmarks::main (243 samples, 52.26%)</title><rect x="44.9462%" y="597" width="52.2581%" height="15" fill="rgb(224,102,30)"/><text x="45.1962%" y="607.50">lobsters_microbenchmarks::main</text></g><g><title>std::net::tcp::TcpListener::bind (1 samples, 0.22%)</title><rect x="96.9892%" y="581" width="0.2151%" height="15" fill="rgb(210,164,37)"/><text x="97.2392%" y="591.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.22%)</title><rect x="96.9892%" y="565" width="0.2151%" height="15" fill="rgb(226,191,16)"/><text x="97.2392%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.22%)</title><rect x="96.9892%" y="549" width="0.2151%" height="15" fill="rgb(214,40,45)"/><text x="97.2392%" y="559.50"></text></g><g><title>__GI___socket (1 samples, 0.22%)</title><rect x="96.9892%" y="533" width="0.2151%" height="15" fill="rgb(244,29,26)"/><text x="97.2392%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.22%)</title><rect x="97.2043%" y="757" width="0.2151%" height="15" fill="rgb(216,16,5)"/><text x="97.4543%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.22%)</title><rect x="97.4194%" y="757" width="0.2151%" height="15" fill="rgb(249,76,35)"/><text x="97.6694%" y="767.50"></text></g><g><title>anon.363c97a0b7c6cb4f226853851178de5f.3.llvm.729346176576640277 (1 samples, 0.22%)</title><rect x="97.6344%" y="757" width="0.2151%" height="15" fill="rgb(207,11,44)"/><text x="97.8844%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.22%)</title><rect x="97.6344%" y="741" width="0.2151%" height="15" fill="rgb(228,190,49)"/><text x="97.8844%" y="751.50"></text></g><g><title>[vmlinux] (1 samples, 0.22%)</title><rect x="97.8495%" y="725" width="0.2151%" height="15" fill="rgb(214,173,12)"/><text x="98.0995%" y="735.50"></text></g><g><title>do_group_exit (1 samples, 0.22%)</title><rect x="97.8495%" y="709" width="0.2151%" height="15" fill="rgb(218,26,35)"/><text x="98.0995%" y="719.50"></text></g><g><title>do_exit (1 samples, 0.22%)</title><rect x="97.8495%" y="693" width="0.2151%" height="15" fill="rgb(220,200,19)"/><text x="98.0995%" y="703.50"></text></g><g><title>mmput (1 samples, 0.22%)</title><rect x="97.8495%" y="677" width="0.2151%" height="15" fill="rgb(239,95,49)"/><text x="98.0995%" y="687.50"></text></g><g><title>exit_mmap (1 samples, 0.22%)</title><rect x="97.8495%" y="661" width="0.2151%" height="15" fill="rgb(235,85,53)"/><text x="98.0995%" y="671.50"></text></g><g><title>unmap_vmas (1 samples, 0.22%)</title><rect x="97.8495%" y="645" width="0.2151%" height="15" fill="rgb(233,133,31)"/><text x="98.0995%" y="655.50"></text></g><g><title>unmap_page_range (1 samples, 0.22%)</title><rect x="97.8495%" y="629" width="0.2151%" height="15" fill="rgb(218,25,20)"/><text x="98.0995%" y="639.50"></text></g><g><title>page_remove_rmap (1 samples, 0.22%)</title><rect x="97.8495%" y="613" width="0.2151%" height="15" fill="rgb(252,210,38)"/><text x="98.0995%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.43%)</title><rect x="97.8495%" y="757" width="0.4301%" height="15" fill="rgb(242,134,21)"/><text x="98.0995%" y="767.50"></text></g><g><title>do_syscall_64 (2 samples, 0.43%)</title><rect x="97.8495%" y="741" width="0.4301%" height="15" fill="rgb(213,28,48)"/><text x="98.0995%" y="751.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.22%)</title><rect x="98.0645%" y="725" width="0.2151%" height="15" fill="rgb(250,196,2)"/><text x="98.3145%" y="735.50"></text></g><g><title>do_execve (1 samples, 0.22%)</title><rect x="98.0645%" y="709" width="0.2151%" height="15" fill="rgb(227,5,17)"/><text x="98.3145%" y="719.50"></text></g><g><title>__do_execve_file (1 samples, 0.22%)</title><rect x="98.0645%" y="693" width="0.2151%" height="15" fill="rgb(221,226,24)"/><text x="98.3145%" y="703.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.22%)</title><rect x="98.0645%" y="677" width="0.2151%" height="15" fill="rgb(211,5,48)"/><text x="98.3145%" y="687.50"></text></g><g><title>load_elf_binary (1 samples, 0.22%)</title><rect x="98.0645%" y="661" width="0.2151%" height="15" fill="rgb(219,150,6)"/><text x="98.3145%" y="671.50"></text></g><g><title>elf_map (1 samples, 0.22%)</title><rect x="98.0645%" y="645" width="0.2151%" height="15" fill="rgb(251,46,16)"/><text x="98.3145%" y="655.50"></text></g><g><title>__vm_munmap (1 samples, 0.22%)</title><rect x="98.0645%" y="629" width="0.2151%" height="15" fill="rgb(220,204,40)"/><text x="98.3145%" y="639.50"></text></g><g><title>__do_munmap (1 samples, 0.22%)</title><rect x="98.0645%" y="613" width="0.2151%" height="15" fill="rgb(211,85,2)"/><text x="98.3145%" y="623.50"></text></g><g><title>__split_vma (1 samples, 0.22%)</title><rect x="98.0645%" y="597" width="0.2151%" height="15" fill="rgb(229,17,7)"/><text x="98.3145%" y="607.50"></text></g><g><title>__vma_adjust (1 samples, 0.22%)</title><rect x="98.0645%" y="581" width="0.2151%" height="15" fill="rgb(239,72,28)"/><text x="98.3145%" y="591.50"></text></g><g><title>page_fault (1 samples, 0.22%)</title><rect x="98.2796%" y="757" width="0.2151%" height="15" fill="rgb(230,47,54)"/><text x="98.5296%" y="767.50"></text></g><g><title>lobsters-microb (459 samples, 98.71%)</title><rect x="0.0000%" y="773" width="98.7097%" height="15" fill="rgb(214,50,8)"/><text x="0.2500%" y="783.50">lobsters-microb</text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.22%)</title><rect x="98.4946%" y="757" width="0.2151%" height="15" fill="rgb(216,198,43)"/><text x="98.7446%" y="767.50"></text></g><g><title>all (465 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(234,20,35)"/><text x="0.2500%" y="799.50"></text></g><g><title>perf (6 samples, 1.29%)</title><rect x="98.7097%" y="773" width="1.2903%" height="15" fill="rgb(254,45,19)"/><text x="98.9597%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 1.29%)</title><rect x="98.7097%" y="757" width="1.2903%" height="15" fill="rgb(219,14,44)"/><text x="98.9597%" y="767.50"></text></g><g><title>do_syscall_64 (6 samples, 1.29%)</title><rect x="98.7097%" y="741" width="1.2903%" height="15" fill="rgb(217,220,26)"/><text x="98.9597%" y="751.50"></text></g><g><title>__x64_sys_execve (6 samples, 1.29%)</title><rect x="98.7097%" y="725" width="1.2903%" height="15" fill="rgb(213,158,28)"/><text x="98.9597%" y="735.50"></text></g><g><title>do_execve (6 samples, 1.29%)</title><rect x="98.7097%" y="709" width="1.2903%" height="15" fill="rgb(252,51,52)"/><text x="98.9597%" y="719.50"></text></g><g><title>__do_execve_file (6 samples, 1.29%)</title><rect x="98.7097%" y="693" width="1.2903%" height="15" fill="rgb(246,89,16)"/><text x="98.9597%" y="703.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 1.29%)</title><rect x="98.7097%" y="677" width="1.2903%" height="15" fill="rgb(216,158,49)"/><text x="98.9597%" y="687.50"></text></g><g><title>load_elf_binary (6 samples, 1.29%)</title><rect x="98.7097%" y="661" width="1.2903%" height="15" fill="rgb(236,107,19)"/><text x="98.9597%" y="671.50"></text></g><g><title>setup_new_exec (6 samples, 1.29%)</title><rect x="98.7097%" y="645" width="1.2903%" height="15" fill="rgb(228,185,30)"/><text x="98.9597%" y="655.50"></text></g><g><title>perf_event_exec (6 samples, 1.29%)</title><rect x="98.7097%" y="629" width="1.2903%" height="15" fill="rgb(246,134,8)"/><text x="98.9597%" y="639.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 1.29%)</title><rect x="98.7097%" y="613" width="1.2903%" height="15" fill="rgb(214,143,50)"/><text x="98.9597%" y="623.50"></text></g><g><title>native_write_msr (6 samples, 1.29%)</title><rect x="98.7097%" y="597" width="1.2903%" height="15" fill="rgb(228,75,8)"/><text x="98.9597%" y="607.50"></text></g></svg></svg>