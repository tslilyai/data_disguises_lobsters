<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="0.0000%" y="773" width="0.1350%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="783.50"></text></g><g><title>[[stack]] (2 samples, 0.14%)</title><rect x="0.2026%" y="773" width="0.1350%" height="15" fill="rgb(217,0,24)"/><text x="0.4526%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.20%)</title><rect x="0.3376%" y="757" width="0.2026%" height="15" fill="rgb(221,193,54)"/><text x="0.5876%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="0.6077%" y="757" width="0.1350%" height="15" fill="rgb(248,212,6)"/><text x="0.8577%" y="767.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="1.0128%" y="757" width="0.1350%" height="15" fill="rgb(208,68,35)"/><text x="1.2628%" y="767.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.27%)</title><rect x="1.1479%" y="757" width="0.2701%" height="15" fill="rgb(232,128,0)"/><text x="1.3979%" y="767.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.27%)</title><rect x="1.4180%" y="757" width="0.2701%" height="15" fill="rgb(207,160,47)"/><text x="1.6680%" y="767.50"></text></g><g><title>__libc_send (4 samples, 0.27%)</title><rect x="1.7556%" y="757" width="0.2701%" height="15" fill="rgb(228,23,34)"/><text x="2.0056%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.27%)</title><rect x="1.7556%" y="741" width="0.2701%" height="15" fill="rgb(218,30,26)"/><text x="2.0056%" y="751.50"></text></g><g><title>__rdl_realloc (2 samples, 0.14%)</title><rect x="2.0932%" y="757" width="0.1350%" height="15" fill="rgb(220,122,19)"/><text x="2.3432%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.41%)</title><rect x="2.2282%" y="757" width="0.4051%" height="15" fill="rgb(250,228,42)"/><text x="2.4782%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="2.6334%" y="757" width="0.1350%" height="15" fill="rgb(240,193,28)"/><text x="2.8834%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.68%)</title><rect x="2.8359%" y="757" width="0.6752%" height="15" fill="rgb(216,20,37)"/><text x="3.0859%" y="767.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.14%)</title><rect x="3.3761%" y="741" width="0.1350%" height="15" fill="rgb(206,188,39)"/><text x="3.6261%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="3.3761%" y="725" width="0.1350%" height="15" fill="rgb(217,207,13)"/><text x="3.6261%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="3.3761%" y="709" width="0.1350%" height="15" fill="rgb(231,73,38)"/><text x="3.6261%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="3.3761%" y="693" width="0.1350%" height="15" fill="rgb(225,20,46)"/><text x="3.6261%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="3.3761%" y="677" width="0.1350%" height="15" fill="rgb(210,31,41)"/><text x="3.6261%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="3.3761%" y="661" width="0.1350%" height="15" fill="rgb(221,200,47)"/><text x="3.6261%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="3.3761%" y="645" width="0.1350%" height="15" fill="rgb(226,26,5)"/><text x="3.6261%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="3.3761%" y="629" width="0.1350%" height="15" fill="rgb(249,33,26)"/><text x="3.6261%" y="639.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.41%)</title><rect x="3.5111%" y="757" width="0.4051%" height="15" fill="rgb(235,183,28)"/><text x="3.7611%" y="767.50"></text></g><g><title>core::fmt::write (3 samples, 0.20%)</title><rect x="3.9838%" y="757" width="0.2026%" height="15" fill="rgb(221,5,38)"/><text x="4.2338%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.20%)</title><rect x="4.1864%" y="757" width="0.2026%" height="15" fill="rgb(247,18,42)"/><text x="4.4364%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (2 samples, 0.14%)</title><rect x="4.3889%" y="757" width="0.1350%" height="15" fill="rgb(241,131,45)"/><text x="4.6389%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.14%)</title><rect x="4.9291%" y="757" width="0.1350%" height="15" fill="rgb(249,31,29)"/><text x="5.1791%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.14%)</title><rect x="5.4018%" y="757" width="0.1350%" height="15" fill="rgb(225,111,53)"/><text x="5.6518%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.20%)</title><rect x="5.5368%" y="757" width="0.2026%" height="15" fill="rgb(238,160,17)"/><text x="5.7868%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.14%)</title><rect x="6.0770%" y="757" width="0.1350%" height="15" fill="rgb(214,148,48)"/><text x="6.3270%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.20%)</title><rect x="6.2120%" y="757" width="0.2026%" height="15" fill="rgb(232,36,49)"/><text x="6.4620%" y="767.50"></text></g><g><title>[anon] (91 samples, 6.14%)</title><rect x="0.3376%" y="773" width="6.1445%" height="15" fill="rgb(209,103,24)"/><text x="0.5876%" y="783.50">[anon]</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="6.5496%" y="757" width="0.2026%" height="15" fill="rgb(229,88,8)"/><text x="6.7996%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (5 samples, 0.34%)</title><rect x="6.4821%" y="773" width="0.3376%" height="15" fill="rgb(213,181,19)"/><text x="6.7321%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="6.8197%" y="757" width="0.1350%" height="15" fill="rgb(254,191,54)"/><text x="7.0697%" y="767.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.20%)</title><rect x="6.9548%" y="709" width="0.2026%" height="15" fill="rgb(241,83,37)"/><text x="7.2048%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.20%)</title><rect x="6.9548%" y="693" width="0.2026%" height="15" fill="rgb(233,36,39)"/><text x="7.2048%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.20%)</title><rect x="6.9548%" y="677" width="0.2026%" height="15" fill="rgb(226,3,54)"/><text x="7.2048%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.20%)</title><rect x="6.9548%" y="661" width="0.2026%" height="15" fill="rgb(245,192,40)"/><text x="7.2048%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="6.9548%" y="645" width="0.2026%" height="15" fill="rgb(238,167,29)"/><text x="7.2048%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.20%)</title><rect x="6.9548%" y="629" width="0.2026%" height="15" fill="rgb(232,182,51)"/><text x="7.2048%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.20%)</title><rect x="6.9548%" y="613" width="0.2026%" height="15" fill="rgb(231,60,39)"/><text x="7.2048%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.20%)</title><rect x="6.9548%" y="597" width="0.2026%" height="15" fill="rgb(208,69,12)"/><text x="7.2048%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="6.9548%" y="581" width="0.2026%" height="15" fill="rgb(235,93,37)"/><text x="7.2048%" y="591.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="6.9548%" y="565" width="0.2026%" height="15" fill="rgb(213,116,39)"/><text x="7.2048%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="7.1573%" y="645" width="0.1350%" height="15" fill="rgb(222,207,29)"/><text x="7.4073%" y="655.50"></text></g><g><title>__GI___mprotect (2 samples, 0.14%)</title><rect x="7.2924%" y="597" width="0.1350%" height="15" fill="rgb(206,96,30)"/><text x="7.5424%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.14%)</title><rect x="7.2924%" y="581" width="0.1350%" height="15" fill="rgb(218,138,4)"/><text x="7.5424%" y="591.50"></text></g><g><title>do_syscall_64 (2 samples, 0.14%)</title><rect x="7.2924%" y="565" width="0.1350%" height="15" fill="rgb(250,191,14)"/><text x="7.5424%" y="575.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.14%)</title><rect x="7.2924%" y="549" width="0.1350%" height="15" fill="rgb(239,60,40)"/><text x="7.5424%" y="559.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.14%)</title><rect x="7.2924%" y="533" width="0.1350%" height="15" fill="rgb(206,27,48)"/><text x="7.5424%" y="543.50"></text></g><g><title>mprotect_fixup (2 samples, 0.14%)</title><rect x="7.2924%" y="517" width="0.1350%" height="15" fill="rgb(225,35,8)"/><text x="7.5424%" y="527.50"></text></g><g><title>perf_event_mmap (2 samples, 0.14%)</title><rect x="7.2924%" y="501" width="0.1350%" height="15" fill="rgb(250,213,24)"/><text x="7.5424%" y="511.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.14%)</title><rect x="7.2924%" y="485" width="0.1350%" height="15" fill="rgb(247,123,22)"/><text x="7.5424%" y="495.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.14%)</title><rect x="7.2924%" y="469" width="0.1350%" height="15" fill="rgb(231,138,38)"/><text x="7.5424%" y="479.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.14%)</title><rect x="7.2924%" y="453" width="0.1350%" height="15" fill="rgb(231,145,46)"/><text x="7.5424%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="7.1573%" y="709" width="0.3376%" height="15" fill="rgb(251,118,11)"/><text x="7.4073%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="7.1573%" y="693" width="0.3376%" height="15" fill="rgb(217,147,25)"/><text x="7.4073%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="7.1573%" y="677" width="0.3376%" height="15" fill="rgb(247,81,37)"/><text x="7.4073%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="7.1573%" y="661" width="0.3376%" height="15" fill="rgb(209,12,38)"/><text x="7.4073%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="7.2924%" y="645" width="0.2026%" height="15" fill="rgb(227,1,9)"/><text x="7.5424%" y="655.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="7.2924%" y="629" width="0.2026%" height="15" fill="rgb(248,47,43)"/><text x="7.5424%" y="639.50"></text></g><g><title>sysmalloc (3 samples, 0.20%)</title><rect x="7.2924%" y="613" width="0.2026%" height="15" fill="rgb(221,10,30)"/><text x="7.5424%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.47%)</title><rect x="7.5625%" y="501" width="0.4727%" height="15" fill="rgb(210,229,1)"/><text x="7.8125%" y="511.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.47%)</title><rect x="7.5625%" y="485" width="0.4727%" height="15" fill="rgb(222,148,37)"/><text x="7.8125%" y="495.50"></text></g><g><title>inet_recvmsg (7 samples, 0.47%)</title><rect x="7.5625%" y="469" width="0.4727%" height="15" fill="rgb(234,67,33)"/><text x="7.8125%" y="479.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.47%)</title><rect x="7.5625%" y="453" width="0.4727%" height="15" fill="rgb(247,98,35)"/><text x="7.8125%" y="463.50"></text></g><g><title>sk_wait_data (4 samples, 0.27%)</title><rect x="7.7650%" y="437" width="0.2701%" height="15" fill="rgb(247,138,52)"/><text x="8.0150%" y="447.50"></text></g><g><title>wait_woken (4 samples, 0.27%)</title><rect x="7.7650%" y="421" width="0.2701%" height="15" fill="rgb(213,79,30)"/><text x="8.0150%" y="431.50"></text></g><g><title>schedule_timeout (4 samples, 0.27%)</title><rect x="7.7650%" y="405" width="0.2701%" height="15" fill="rgb(246,177,23)"/><text x="8.0150%" y="415.50"></text></g><g><title>schedule (4 samples, 0.27%)</title><rect x="7.7650%" y="389" width="0.2701%" height="15" fill="rgb(230,62,27)"/><text x="8.0150%" y="399.50"></text></g><g><title>__schedule (4 samples, 0.27%)</title><rect x="7.7650%" y="373" width="0.2701%" height="15" fill="rgb(216,154,8)"/><text x="8.0150%" y="383.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 0.61%)</title><rect x="7.4949%" y="629" width="0.6077%" height="15" fill="rgb(244,35,45)"/><text x="7.7449%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 0.61%)</title><rect x="7.4949%" y="613" width="0.6077%" height="15" fill="rgb(251,115,12)"/><text x="7.7449%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 0.61%)</title><rect x="7.4949%" y="597" width="0.6077%" height="15" fill="rgb(240,54,50)"/><text x="7.7449%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 0.61%)</title><rect x="7.4949%" y="581" width="0.6077%" height="15" fill="rgb(233,84,52)"/><text x="7.7449%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 0.61%)</title><rect x="7.4949%" y="565" width="0.6077%" height="15" fill="rgb(207,117,47)"/><text x="7.7449%" y="575.50"></text></g><g><title>__libc_recv (9 samples, 0.61%)</title><rect x="7.4949%" y="549" width="0.6077%" height="15" fill="rgb(249,43,39)"/><text x="7.7449%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.54%)</title><rect x="7.5625%" y="533" width="0.5402%" height="15" fill="rgb(209,38,44)"/><text x="7.8125%" y="543.50"></text></g><g><title>do_syscall_64 (8 samples, 0.54%)</title><rect x="7.5625%" y="517" width="0.5402%" height="15" fill="rgb(236,212,23)"/><text x="7.8125%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (10 samples, 0.68%)</title><rect x="7.4949%" y="661" width="0.6752%" height="15" fill="rgb(242,79,21)"/><text x="7.7449%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.68%)</title><rect x="7.4949%" y="645" width="0.6752%" height="15" fill="rgb(211,96,35)"/><text x="7.7449%" y="655.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (11 samples, 0.74%)</title><rect x="7.4949%" y="709" width="0.7427%" height="15" fill="rgb(253,215,40)"/><text x="7.7449%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (11 samples, 0.74%)</title><rect x="7.4949%" y="693" width="0.7427%" height="15" fill="rgb(211,81,21)"/><text x="7.7449%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (11 samples, 0.74%)</title><rect x="7.4949%" y="677" width="0.7427%" height="15" fill="rgb(208,190,38)"/><text x="7.7449%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (3 samples, 0.20%)</title><rect x="8.2377%" y="709" width="0.2026%" height="15" fill="rgb(235,213,38)"/><text x="8.4877%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="8.3052%" y="693" width="0.1350%" height="15" fill="rgb(237,122,38)"/><text x="8.5552%" y="703.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (24 samples, 1.62%)</title><rect x="6.9548%" y="741" width="1.6205%" height="15" fill="rgb(244,218,35)"/><text x="7.2048%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (24 samples, 1.62%)</title><rect x="6.9548%" y="725" width="1.6205%" height="15" fill="rgb(240,68,47)"/><text x="7.2048%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::selection_to_datatable_selection (2 samples, 0.14%)</title><rect x="8.4402%" y="709" width="0.1350%" height="15" fill="rgb(210,16,53)"/><text x="8.6902%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="8.4402%" y="693" width="0.1350%" height="15" fill="rgb(235,124,12)"/><text x="8.6902%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="8.7103%" y="693" width="0.1350%" height="15" fill="rgb(224,169,11)"/><text x="8.9603%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.27%)</title><rect x="8.9129%" y="693" width="0.2701%" height="15" fill="rgb(250,166,2)"/><text x="9.1629%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (2 samples, 0.14%)</title><rect x="9.0479%" y="677" width="0.1350%" height="15" fill="rgb(242,216,29)"/><text x="9.2979%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expect_token (2 samples, 0.14%)</title><rect x="9.1830%" y="693" width="0.1350%" height="15" fill="rgb(230,116,27)"/><text x="9.4330%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (10 samples, 0.68%)</title><rect x="9.3180%" y="693" width="0.6752%" height="15" fill="rgb(228,99,48)"/><text x="9.5680%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (9 samples, 0.61%)</title><rect x="9.3856%" y="677" width="0.6077%" height="15" fill="rgb(253,11,6)"/><text x="9.6356%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (5 samples, 0.34%)</title><rect x="9.6556%" y="661" width="0.3376%" height="15" fill="rgb(247,143,39)"/><text x="9.9056%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.27%)</title><rect x="9.7232%" y="645" width="0.2701%" height="15" fill="rgb(236,97,10)"/><text x="9.9732%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.27%)</title><rect x="9.7232%" y="629" width="0.2701%" height="15" fill="rgb(233,208,19)"/><text x="9.9732%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="9.8582%" y="613" width="0.1350%" height="15" fill="rgb(216,164,2)"/><text x="10.1082%" y="623.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="10.3984%" y="677" width="0.1350%" height="15" fill="rgb(220,129,5)"/><text x="10.6484%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="10.3984%" y="661" width="0.1350%" height="15" fill="rgb(242,17,10)"/><text x="10.6484%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="10.3984%" y="645" width="0.1350%" height="15" fill="rgb(242,107,0)"/><text x="10.6484%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="10.3984%" y="629" width="0.1350%" height="15" fill="rgb(251,28,31)"/><text x="10.6484%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="10.3984%" y="613" width="0.1350%" height="15" fill="rgb(233,223,10)"/><text x="10.6484%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="10.3984%" y="597" width="0.1350%" height="15" fill="rgb(215,21,27)"/><text x="10.6484%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="10.3984%" y="581" width="0.1350%" height="15" fill="rgb(232,23,21)"/><text x="10.6484%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="10.3984%" y="565" width="0.1350%" height="15" fill="rgb(244,5,23)"/><text x="10.6484%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="10.3984%" y="549" width="0.1350%" height="15" fill="rgb(226,81,46)"/><text x="10.6484%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="10.3984%" y="533" width="0.1350%" height="15" fill="rgb(247,70,30)"/><text x="10.6484%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="10.3984%" y="517" width="0.1350%" height="15" fill="rgb(212,68,19)"/><text x="10.6484%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (13 samples, 0.88%)</title><rect x="9.9932%" y="693" width="0.8778%" height="15" fill="rgb(240,187,13)"/><text x="10.2432%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.34%)</title><rect x="10.5334%" y="677" width="0.3376%" height="15" fill="rgb(223,113,26)"/><text x="10.7834%" y="687.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (63 samples, 4.25%)</title><rect x="6.9548%" y="757" width="4.2539%" height="15" fill="rgb(206,192,2)"/><text x="7.2048%" y="767.50">&lt;deco..</text></g><g><title>decor_mem::stats::get_qtype (39 samples, 2.63%)</title><rect x="8.5753%" y="741" width="2.6334%" height="15" fill="rgb(241,108,4)"/><text x="8.8253%" y="751.50">de..</text></g><g><title>sql_parser::parser::parse_statements (39 samples, 2.63%)</title><rect x="8.5753%" y="725" width="2.6334%" height="15" fill="rgb(247,173,49)"/><text x="8.8253%" y="735.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_statement (39 samples, 2.63%)</title><rect x="8.5753%" y="709" width="2.6334%" height="15" fill="rgb(224,114,35)"/><text x="8.8253%" y="719.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_object_name (5 samples, 0.34%)</title><rect x="10.8710%" y="693" width="0.3376%" height="15" fill="rgb(245,159,27)"/><text x="11.1210%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (4 samples, 0.27%)</title><rect x="10.9386%" y="677" width="0.2701%" height="15" fill="rgb(245,172,44)"/><text x="11.1886%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (4 samples, 0.27%)</title><rect x="10.9386%" y="661" width="0.2701%" height="15" fill="rgb(236,23,11)"/><text x="11.1886%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.14%)</title><rect x="11.0736%" y="645" width="0.1350%" height="15" fill="rgb(205,117,38)"/><text x="11.3236%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="11.0736%" y="629" width="0.1350%" height="15" fill="rgb(237,72,25)"/><text x="11.3236%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="11.0736%" y="613" width="0.1350%" height="15" fill="rgb(244,70,9)"/><text x="11.3236%" y="623.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="11.0736%" y="597" width="0.1350%" height="15" fill="rgb(217,125,39)"/><text x="11.3236%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (3 samples, 0.20%)</title><rect x="11.2762%" y="757" width="0.2026%" height="15" fill="rgb(235,36,10)"/><text x="11.5262%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (2 samples, 0.14%)</title><rect x="11.6813%" y="757" width="0.1350%" height="15" fill="rgb(251,123,47)"/><text x="11.9313%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="11.6813%" y="741" width="0.1350%" height="15" fill="rgb(221,13,13)"/><text x="11.9313%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="11.6813%" y="725" width="0.1350%" height="15" fill="rgb(238,131,9)"/><text x="11.9313%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="11.6813%" y="709" width="0.1350%" height="15" fill="rgb(211,50,8)"/><text x="11.9313%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="11.6813%" y="693" width="0.1350%" height="15" fill="rgb(245,182,24)"/><text x="11.9313%" y="703.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.14%)</title><rect x="11.9514%" y="597" width="0.1350%" height="15" fill="rgb(242,14,37)"/><text x="12.2014%" y="607.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.14%)</title><rect x="11.9514%" y="581" width="0.1350%" height="15" fill="rgb(246,228,12)"/><text x="12.2014%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.14%)</title><rect x="11.9514%" y="565" width="0.1350%" height="15" fill="rgb(213,55,15)"/><text x="12.2014%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.14%)</title><rect x="11.9514%" y="549" width="0.1350%" height="15" fill="rgb(209,9,3)"/><text x="12.2014%" y="559.50"></text></g><g><title>__libc_start_main (4 samples, 0.27%)</title><rect x="11.9514%" y="757" width="0.2701%" height="15" fill="rgb(230,59,30)"/><text x="12.2014%" y="767.50"></text></g><g><title>main (4 samples, 0.27%)</title><rect x="11.9514%" y="741" width="0.2701%" height="15" fill="rgb(209,121,21)"/><text x="12.2014%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.27%)</title><rect x="11.9514%" y="725" width="0.2701%" height="15" fill="rgb(220,109,13)"/><text x="12.2014%" y="735.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.27%)</title><rect x="11.9514%" y="709" width="0.2701%" height="15" fill="rgb(232,18,1)"/><text x="12.2014%" y="719.50"></text></g><g><title>std::panicking::try (4 samples, 0.27%)</title><rect x="11.9514%" y="693" width="0.2701%" height="15" fill="rgb(215,41,42)"/><text x="12.2014%" y="703.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.27%)</title><rect x="11.9514%" y="677" width="0.2701%" height="15" fill="rgb(224,123,36)"/><text x="12.2014%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.27%)</title><rect x="11.9514%" y="661" width="0.2701%" height="15" fill="rgb(240,125,3)"/><text x="12.2014%" y="671.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.27%)</title><rect x="11.9514%" y="645" width="0.2701%" height="15" fill="rgb(205,98,50)"/><text x="12.2014%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.27%)</title><rect x="11.9514%" y="629" width="0.2701%" height="15" fill="rgb(205,185,37)"/><text x="12.2014%" y="639.50"></text></g><g><title>lobsters_microbenchmarks::main (4 samples, 0.27%)</title><rect x="11.9514%" y="613" width="0.2701%" height="15" fill="rgb(238,207,15)"/><text x="12.2014%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (2 samples, 0.14%)</title><rect x="12.0864%" y="597" width="0.1350%" height="15" fill="rgb(213,199,42)"/><text x="12.3364%" y="607.50"></text></g><g><title>__rdl_alloc (4 samples, 0.27%)</title><rect x="12.2890%" y="757" width="0.2701%" height="15" fill="rgb(235,201,11)"/><text x="12.5390%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.14%)</title><rect x="12.4240%" y="741" width="0.1350%" height="15" fill="rgb(207,46,11)"/><text x="12.6740%" y="751.50"></text></g><g><title>_int_free (5 samples, 0.34%)</title><rect x="12.5591%" y="757" width="0.3376%" height="15" fill="rgb(241,35,35)"/><text x="12.8091%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="12.8967%" y="757" width="0.1350%" height="15" fill="rgb(243,32,47)"/><text x="13.1467%" y="767.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.27%)</title><rect x="13.0993%" y="757" width="0.2701%" height="15" fill="rgb(247,202,23)"/><text x="13.3493%" y="767.50"></text></g><g><title>core::fmt::write (4 samples, 0.27%)</title><rect x="13.5044%" y="757" width="0.2701%" height="15" fill="rgb(219,102,11)"/><text x="13.7544%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.34%)</title><rect x="13.7745%" y="757" width="0.3376%" height="15" fill="rgb(243,110,44)"/><text x="14.0245%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.81%)</title><rect x="14.2471%" y="677" width="0.8103%" height="15" fill="rgb(222,74,54)"/><text x="14.4971%" y="687.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.68%)</title><rect x="14.3822%" y="661" width="0.6752%" height="15" fill="rgb(216,99,12)"/><text x="14.6322%" y="671.50"></text></g><g><title>_int_malloc (10 samples, 0.68%)</title><rect x="14.3822%" y="645" width="0.6752%" height="15" fill="rgb(226,22,26)"/><text x="14.6322%" y="655.50"></text></g><g><title>malloc_consolidate (7 samples, 0.47%)</title><rect x="14.5847%" y="629" width="0.4727%" height="15" fill="rgb(217,163,10)"/><text x="14.8347%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="15.0574%" y="677" width="0.1350%" height="15" fill="rgb(213,25,53)"/><text x="15.3074%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (3 samples, 0.20%)</title><rect x="15.6651%" y="661" width="0.2026%" height="15" fill="rgb(252,105,26)"/><text x="15.9151%" y="671.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (27 samples, 1.82%)</title><rect x="14.1121%" y="757" width="1.8231%" height="15" fill="rgb(220,39,43)"/><text x="14.3621%" y="767.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (27 samples, 1.82%)</title><rect x="14.1121%" y="741" width="1.8231%" height="15" fill="rgb(229,68,48)"/><text x="14.3621%" y="751.50">m..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (27 samples, 1.82%)</title><rect x="14.1121%" y="725" width="1.8231%" height="15" fill="rgb(252,8,32)"/><text x="14.3621%" y="735.50">&lt;..</text></g><g><title>decor_mem::stats::get_qtype (26 samples, 1.76%)</title><rect x="14.1796%" y="709" width="1.7556%" height="15" fill="rgb(223,20,43)"/><text x="14.4296%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (26 samples, 1.76%)</title><rect x="14.1796%" y="693" width="1.7556%" height="15" fill="rgb(229,81,49)"/><text x="14.4296%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (11 samples, 0.74%)</title><rect x="15.1924%" y="677" width="0.7427%" height="15" fill="rgb(236,28,36)"/><text x="15.4424%" y="687.50"></text></g><g><title>decor_mem::helpers::get_user_cols_of_datatable (2 samples, 0.14%)</title><rect x="15.9352%" y="757" width="0.1350%" height="15" fill="rgb(249,185,26)"/><text x="16.1852%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="16.1377%" y="709" width="0.1350%" height="15" fill="rgb(249,174,33)"/><text x="16.3877%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="16.4754%" y="645" width="0.2026%" height="15" fill="rgb(233,201,37)"/><text x="16.7254%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.20%)</title><rect x="16.4754%" y="629" width="0.2026%" height="15" fill="rgb(221,78,26)"/><text x="16.7254%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.20%)</title><rect x="16.4754%" y="613" width="0.2026%" height="15" fill="rgb(250,127,30)"/><text x="16.7254%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="16.5429%" y="597" width="0.1350%" height="15" fill="rgb(230,49,44)"/><text x="16.7929%" y="607.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="16.6779%" y="629" width="0.1350%" height="15" fill="rgb(229,67,23)"/><text x="16.9279%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (12 samples, 0.81%)</title><rect x="16.0702%" y="757" width="0.8103%" height="15" fill="rgb(249,83,47)"/><text x="16.3202%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::selection_to_datatable_selection (11 samples, 0.74%)</title><rect x="16.1377%" y="741" width="0.7427%" height="15" fill="rgb(215,43,3)"/><text x="16.3877%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (11 samples, 0.74%)</title><rect x="16.1377%" y="725" width="0.7427%" height="15" fill="rgb(238,154,13)"/><text x="16.3877%" y="735.50"></text></g><g><title>decor_mem::helpers::expr_is_ucol (8 samples, 0.54%)</title><rect x="16.3403%" y="709" width="0.5402%" height="15" fill="rgb(219,56,2)"/><text x="16.5903%" y="719.50"></text></g><g><title>core::fmt::write (8 samples, 0.54%)</title><rect x="16.3403%" y="693" width="0.5402%" height="15" fill="rgb(233,0,4)"/><text x="16.5903%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (7 samples, 0.47%)</title><rect x="16.4078%" y="677" width="0.4727%" height="15" fill="rgb(235,30,7)"/><text x="16.6578%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.41%)</title><rect x="16.4754%" y="661" width="0.4051%" height="15" fill="rgb(250,79,13)"/><text x="16.7254%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.20%)</title><rect x="16.6779%" y="645" width="0.2026%" height="15" fill="rgb(211,146,34)"/><text x="16.9279%" y="655.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (2 samples, 0.14%)</title><rect x="16.8805%" y="757" width="0.1350%" height="15" fill="rgb(228,22,38)"/><text x="17.1305%" y="767.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.14%)</title><rect x="17.0155%" y="757" width="0.1350%" height="15" fill="rgb(235,168,5)"/><text x="17.2655%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.14%)</title><rect x="17.0155%" y="741" width="0.1350%" height="15" fill="rgb(221,155,16)"/><text x="17.2655%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.14%)</title><rect x="17.0155%" y="725" width="0.1350%" height="15" fill="rgb(215,215,53)"/><text x="17.2655%" y="735.50"></text></g><g><title>sk_wait_data (5 samples, 0.34%)</title><rect x="17.7583%" y="453" width="0.3376%" height="15" fill="rgb(223,4,10)"/><text x="18.0083%" y="463.50"></text></g><g><title>wait_woken (4 samples, 0.27%)</title><rect x="17.8258%" y="437" width="0.2701%" height="15" fill="rgb(234,103,6)"/><text x="18.0758%" y="447.50"></text></g><g><title>schedule_timeout (3 samples, 0.20%)</title><rect x="17.8933%" y="421" width="0.2026%" height="15" fill="rgb(227,97,0)"/><text x="18.1433%" y="431.50"></text></g><g><title>schedule (3 samples, 0.20%)</title><rect x="17.8933%" y="405" width="0.2026%" height="15" fill="rgb(234,150,53)"/><text x="18.1433%" y="415.50"></text></g><g><title>__schedule (3 samples, 0.20%)</title><rect x="17.8933%" y="389" width="0.2026%" height="15" fill="rgb(228,201,54)"/><text x="18.1433%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.54%)</title><rect x="17.6232%" y="549" width="0.5402%" height="15" fill="rgb(222,22,37)"/><text x="17.8732%" y="559.50"></text></g><g><title>do_syscall_64 (8 samples, 0.54%)</title><rect x="17.6232%" y="533" width="0.5402%" height="15" fill="rgb(237,53,32)"/><text x="17.8732%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (8 samples, 0.54%)</title><rect x="17.6232%" y="517" width="0.5402%" height="15" fill="rgb(233,25,53)"/><text x="17.8732%" y="527.50"></text></g><g><title>__sys_recvfrom (8 samples, 0.54%)</title><rect x="17.6232%" y="501" width="0.5402%" height="15" fill="rgb(210,40,34)"/><text x="17.8732%" y="511.50"></text></g><g><title>inet_recvmsg (8 samples, 0.54%)</title><rect x="17.6232%" y="485" width="0.5402%" height="15" fill="rgb(241,220,44)"/><text x="17.8732%" y="495.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.47%)</title><rect x="17.6907%" y="469" width="0.4727%" height="15" fill="rgb(235,28,35)"/><text x="17.9407%" y="479.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 0.74%)</title><rect x="17.4882%" y="677" width="0.7427%" height="15" fill="rgb(210,56,17)"/><text x="17.7382%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.68%)</title><rect x="17.5557%" y="661" width="0.6752%" height="15" fill="rgb(224,130,29)"/><text x="17.8057%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 0.68%)</title><rect x="17.5557%" y="645" width="0.6752%" height="15" fill="rgb(235,212,8)"/><text x="17.8057%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 0.68%)</title><rect x="17.5557%" y="629" width="0.6752%" height="15" fill="rgb(223,33,50)"/><text x="17.8057%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 0.68%)</title><rect x="17.5557%" y="613" width="0.6752%" height="15" fill="rgb(219,149,13)"/><text x="17.8057%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 0.68%)</title><rect x="17.5557%" y="597" width="0.6752%" height="15" fill="rgb(250,156,29)"/><text x="17.8057%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 0.68%)</title><rect x="17.5557%" y="581" width="0.6752%" height="15" fill="rgb(216,193,19)"/><text x="17.8057%" y="591.50"></text></g><g><title>__libc_recv (10 samples, 0.68%)</title><rect x="17.5557%" y="565" width="0.6752%" height="15" fill="rgb(216,135,14)"/><text x="17.8057%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (16 samples, 1.08%)</title><rect x="17.2856%" y="693" width="1.0804%" height="15" fill="rgb(241,47,5)"/><text x="17.5356%" y="703.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.14%)</title><rect x="18.2309%" y="677" width="0.1350%" height="15" fill="rgb(233,42,35)"/><text x="18.4809%" y="687.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.20%)</title><rect x="19.4463%" y="389" width="0.2026%" height="15" fill="rgb(231,13,6)"/><text x="19.6963%" y="399.50"></text></g><g><title>loopback_xmit (3 samples, 0.20%)</title><rect x="19.4463%" y="373" width="0.2026%" height="15" fill="rgb(207,181,40)"/><text x="19.6963%" y="383.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.41%)</title><rect x="19.3788%" y="405" width="0.4051%" height="15" fill="rgb(254,173,49)"/><text x="19.6288%" y="415.50"></text></g><g><title>enqueue_task (4 samples, 0.27%)</title><rect x="20.4591%" y="117" width="0.2701%" height="15" fill="rgb(221,1,38)"/><text x="20.7091%" y="127.50"></text></g><g><title>psi_task_change (4 samples, 0.27%)</title><rect x="20.4591%" y="101" width="0.2701%" height="15" fill="rgb(206,124,46)"/><text x="20.7091%" y="111.50"></text></g><g><title>psi_group_change (4 samples, 0.27%)</title><rect x="20.4591%" y="85" width="0.2701%" height="15" fill="rgb(249,21,11)"/><text x="20.7091%" y="95.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.14%)</title><rect x="20.7292%" y="117" width="0.1350%" height="15" fill="rgb(222,201,40)"/><text x="20.9792%" y="127.50"></text></g><g><title>check_preempt_curr (2 samples, 0.14%)</title><rect x="20.7292%" y="101" width="0.1350%" height="15" fill="rgb(235,61,29)"/><text x="20.9792%" y="111.50"></text></g><g><title>resched_curr (2 samples, 0.14%)</title><rect x="20.7292%" y="85" width="0.1350%" height="15" fill="rgb(219,207,3)"/><text x="20.9792%" y="95.50"></text></g><g><title>__wake_up_common (10 samples, 0.68%)</title><rect x="20.3241%" y="149" width="0.6752%" height="15" fill="rgb(222,56,46)"/><text x="20.5741%" y="159.50"></text></g><g><title>try_to_wake_up (10 samples, 0.68%)</title><rect x="20.3241%" y="133" width="0.6752%" height="15" fill="rgb(239,76,54)"/><text x="20.5741%" y="143.50"></text></g><g><title>update_rq_clock (2 samples, 0.14%)</title><rect x="20.8643%" y="117" width="0.1350%" height="15" fill="rgb(231,124,27)"/><text x="21.1143%" y="127.50"></text></g><g><title>sock_def_readable (12 samples, 0.81%)</title><rect x="20.2566%" y="181" width="0.8103%" height="15" fill="rgb(249,195,6)"/><text x="20.5066%" y="191.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.74%)</title><rect x="20.3241%" y="165" width="0.7427%" height="15" fill="rgb(237,174,47)"/><text x="20.5741%" y="175.50"></text></g><g><title>kfree (2 samples, 0.14%)</title><rect x="21.3369%" y="149" width="0.1350%" height="15" fill="rgb(206,201,31)"/><text x="21.5869%" y="159.50"></text></g><g><title>__slab_free (2 samples, 0.14%)</title><rect x="21.3369%" y="133" width="0.1350%" height="15" fill="rgb(231,57,52)"/><text x="21.5869%" y="143.50"></text></g><g><title>__kfree_skb (3 samples, 0.20%)</title><rect x="21.3369%" y="165" width="0.2026%" height="15" fill="rgb(248,177,22)"/><text x="21.5869%" y="175.50"></text></g><g><title>tcp_ack (10 samples, 0.68%)</title><rect x="21.0668%" y="181" width="0.6752%" height="15" fill="rgb(215,211,37)"/><text x="21.3168%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (26 samples, 1.76%)</title><rect x="20.1215%" y="213" width="1.7556%" height="15" fill="rgb(241,128,51)"/><text x="20.3715%" y="223.50"></text></g><g><title>tcp_rcv_established (26 samples, 1.76%)</title><rect x="20.1215%" y="197" width="1.7556%" height="15" fill="rgb(227,165,31)"/><text x="20.3715%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (30 samples, 2.03%)</title><rect x="19.9190%" y="309" width="2.0257%" height="15" fill="rgb(228,167,24)"/><text x="20.1690%" y="319.50">_..</text></g><g><title>ip_rcv (29 samples, 1.96%)</title><rect x="19.9865%" y="293" width="1.9581%" height="15" fill="rgb(228,143,12)"/><text x="20.2365%" y="303.50">i..</text></g><g><title>ip_local_deliver (29 samples, 1.96%)</title><rect x="19.9865%" y="277" width="1.9581%" height="15" fill="rgb(249,149,8)"/><text x="20.2365%" y="287.50">i..</text></g><g><title>ip_local_deliver_finish (28 samples, 1.89%)</title><rect x="20.0540%" y="261" width="1.8906%" height="15" fill="rgb(243,35,44)"/><text x="20.3040%" y="271.50">i..</text></g><g><title>ip_protocol_deliver_rcu (28 samples, 1.89%)</title><rect x="20.0540%" y="245" width="1.8906%" height="15" fill="rgb(246,89,9)"/><text x="20.3040%" y="255.50">i..</text></g><g><title>tcp_v4_rcv (28 samples, 1.89%)</title><rect x="20.0540%" y="229" width="1.8906%" height="15" fill="rgb(233,213,13)"/><text x="20.3040%" y="239.50">t..</text></g><g><title>__ip_queue_xmit (43 samples, 2.90%)</title><rect x="19.1087%" y="453" width="2.9034%" height="15" fill="rgb(233,141,41)"/><text x="19.3587%" y="463.50">__..</text></g><g><title>ip_output (43 samples, 2.90%)</title><rect x="19.1087%" y="437" width="2.9034%" height="15" fill="rgb(239,167,4)"/><text x="19.3587%" y="447.50">ip..</text></g><g><title>ip_finish_output2 (42 samples, 2.84%)</title><rect x="19.1762%" y="421" width="2.8359%" height="15" fill="rgb(209,217,16)"/><text x="19.4262%" y="431.50">ip..</text></g><g><title>__local_bh_enable_ip (33 samples, 2.23%)</title><rect x="19.7839%" y="405" width="2.2282%" height="15" fill="rgb(219,88,35)"/><text x="20.0339%" y="415.50">_..</text></g><g><title>do_softirq (33 samples, 2.23%)</title><rect x="19.7839%" y="389" width="2.2282%" height="15" fill="rgb(220,193,23)"/><text x="20.0339%" y="399.50">d..</text></g><g><title>do_softirq_own_stack (32 samples, 2.16%)</title><rect x="19.8515%" y="373" width="2.1607%" height="15" fill="rgb(230,90,52)"/><text x="20.1015%" y="383.50">d..</text></g><g><title>__do_softirq (32 samples, 2.16%)</title><rect x="19.8515%" y="357" width="2.1607%" height="15" fill="rgb(252,106,19)"/><text x="20.1015%" y="367.50">_..</text></g><g><title>net_rx_action (32 samples, 2.16%)</title><rect x="19.8515%" y="341" width="2.1607%" height="15" fill="rgb(206,74,20)"/><text x="20.1015%" y="351.50">n..</text></g><g><title>process_backlog (32 samples, 2.16%)</title><rect x="19.8515%" y="325" width="2.1607%" height="15" fill="rgb(230,138,44)"/><text x="20.1015%" y="335.50">p..</text></g><g><title>__tcp_push_pending_frames (48 samples, 3.24%)</title><rect x="18.9737%" y="501" width="3.2411%" height="15" fill="rgb(235,182,43)"/><text x="19.2237%" y="511.50">__t..</text></g><g><title>tcp_write_xmit (48 samples, 3.24%)</title><rect x="18.9737%" y="485" width="3.2411%" height="15" fill="rgb(242,16,51)"/><text x="19.2237%" y="495.50">tcp..</text></g><g><title>__tcp_transmit_skb (47 samples, 3.17%)</title><rect x="19.0412%" y="469" width="3.1735%" height="15" fill="rgb(248,9,4)"/><text x="19.2912%" y="479.50">__t..</text></g><g><title>sock_sendmsg (53 samples, 3.58%)</title><rect x="18.7711%" y="549" width="3.5787%" height="15" fill="rgb(210,31,22)"/><text x="19.0211%" y="559.50">sock..</text></g><g><title>tcp_sendmsg (53 samples, 3.58%)</title><rect x="18.7711%" y="533" width="3.5787%" height="15" fill="rgb(239,54,39)"/><text x="19.0211%" y="543.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (51 samples, 3.44%)</title><rect x="18.9061%" y="517" width="3.4436%" height="15" fill="rgb(230,99,41)"/><text x="19.1561%" y="527.50">tcp..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.14%)</title><rect x="22.2147%" y="501" width="0.1350%" height="15" fill="rgb(253,106,12)"/><text x="22.4647%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.14%)</title><rect x="22.2147%" y="485" width="0.1350%" height="15" fill="rgb(213,46,41)"/><text x="22.4647%" y="495.50"></text></g><g><title>__x64_sys_sendto (56 samples, 3.78%)</title><rect x="18.6361%" y="581" width="3.7812%" height="15" fill="rgb(215,133,35)"/><text x="18.8861%" y="591.50">__x6..</text></g><g><title>__sys_sendto (56 samples, 3.78%)</title><rect x="18.6361%" y="565" width="3.7812%" height="15" fill="rgb(213,28,5)"/><text x="18.8861%" y="575.50">__sy..</text></g><g><title>do_syscall_64 (57 samples, 3.85%)</title><rect x="18.6361%" y="597" width="3.8488%" height="15" fill="rgb(215,77,49)"/><text x="18.8861%" y="607.50">do_s..</text></g><g><title>entry_SYSCALL_64 (60 samples, 4.05%)</title><rect x="18.5685%" y="613" width="4.0513%" height="15" fill="rgb(248,100,22)"/><text x="18.8185%" y="623.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="22.4848%" y="597" width="0.1350%" height="15" fill="rgb(208,67,9)"/><text x="22.7348%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (80 samples, 5.40%)</title><rect x="17.2856%" y="725" width="5.4018%" height="15" fill="rgb(219,133,21)"/><text x="17.5356%" y="735.50">&lt;mysql:..</text></g><g><title>mysql::conn::Conn::_query (80 samples, 5.40%)</title><rect x="17.2856%" y="709" width="5.4018%" height="15" fill="rgb(246,46,29)"/><text x="17.5356%" y="719.50">mysql::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (64 samples, 4.32%)</title><rect x="18.3660%" y="693" width="4.3214%" height="15" fill="rgb(246,185,52)"/><text x="18.6160%" y="703.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (63 samples, 4.25%)</title><rect x="18.4335%" y="677" width="4.2539%" height="15" fill="rgb(252,136,11)"/><text x="18.6835%" y="687.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (63 samples, 4.25%)</title><rect x="18.4335%" y="661" width="4.2539%" height="15" fill="rgb(219,138,53)"/><text x="18.6835%" y="671.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (63 samples, 4.25%)</title><rect x="18.4335%" y="645" width="4.2539%" height="15" fill="rgb(211,51,23)"/><text x="18.6835%" y="655.50">std::..</text></g><g><title>__libc_send (63 samples, 4.25%)</title><rect x="18.4335%" y="629" width="4.2539%" height="15" fill="rgb(247,221,28)"/><text x="18.6835%" y="639.50">__lib..</text></g><g><title>lobsters_microbenchmarks::main (82 samples, 5.54%)</title><rect x="17.2181%" y="757" width="5.5368%" height="15" fill="rgb(251,222,45)"/><text x="17.4681%" y="767.50">lobster..</text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (81 samples, 5.47%)</title><rect x="17.2856%" y="741" width="5.4693%" height="15" fill="rgb(217,162,53)"/><text x="17.5356%" y="751.50">lobster..</text></g><g><title>__tcp_push_pending_frames (2 samples, 0.14%)</title><rect x="22.7549%" y="469" width="0.1350%" height="15" fill="rgb(229,93,14)"/><text x="23.0049%" y="479.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.14%)</title><rect x="22.7549%" y="453" width="0.1350%" height="15" fill="rgb(209,67,49)"/><text x="23.0049%" y="463.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.14%)</title><rect x="22.7549%" y="437" width="0.1350%" height="15" fill="rgb(213,87,29)"/><text x="23.0049%" y="447.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.14%)</title><rect x="22.7549%" y="421" width="0.1350%" height="15" fill="rgb(205,151,52)"/><text x="23.0049%" y="431.50"></text></g><g><title>ip_output (2 samples, 0.14%)</title><rect x="22.7549%" y="405" width="0.1350%" height="15" fill="rgb(253,215,39)"/><text x="23.0049%" y="415.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.14%)</title><rect x="22.7549%" y="389" width="0.1350%" height="15" fill="rgb(221,220,41)"/><text x="23.0049%" y="399.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.14%)</title><rect x="22.7549%" y="373" width="0.1350%" height="15" fill="rgb(218,133,21)"/><text x="23.0049%" y="383.50"></text></g><g><title>do_softirq (2 samples, 0.14%)</title><rect x="22.7549%" y="357" width="0.1350%" height="15" fill="rgb(221,193,43)"/><text x="23.0049%" y="367.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.14%)</title><rect x="22.7549%" y="341" width="0.1350%" height="15" fill="rgb(240,128,52)"/><text x="23.0049%" y="351.50"></text></g><g><title>__do_softirq (2 samples, 0.14%)</title><rect x="22.7549%" y="325" width="0.1350%" height="15" fill="rgb(253,114,12)"/><text x="23.0049%" y="335.50"></text></g><g><title>net_rx_action (2 samples, 0.14%)</title><rect x="22.7549%" y="309" width="0.1350%" height="15" fill="rgb(215,223,47)"/><text x="23.0049%" y="319.50"></text></g><g><title>process_backlog (2 samples, 0.14%)</title><rect x="22.7549%" y="293" width="0.1350%" height="15" fill="rgb(248,225,23)"/><text x="23.0049%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.14%)</title><rect x="22.7549%" y="277" width="0.1350%" height="15" fill="rgb(250,108,0)"/><text x="23.0049%" y="287.50"></text></g><g><title>ip_rcv (2 samples, 0.14%)</title><rect x="22.7549%" y="261" width="0.1350%" height="15" fill="rgb(228,208,7)"/><text x="23.0049%" y="271.50"></text></g><g><title>ip_local_deliver (2 samples, 0.14%)</title><rect x="22.7549%" y="245" width="0.1350%" height="15" fill="rgb(244,45,10)"/><text x="23.0049%" y="255.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.14%)</title><rect x="22.7549%" y="229" width="0.1350%" height="15" fill="rgb(207,125,25)"/><text x="23.0049%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.14%)</title><rect x="22.7549%" y="213" width="0.1350%" height="15" fill="rgb(210,195,18)"/><text x="23.0049%" y="223.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.14%)</title><rect x="22.7549%" y="197" width="0.1350%" height="15" fill="rgb(249,80,12)"/><text x="23.0049%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.14%)</title><rect x="22.7549%" y="181" width="0.1350%" height="15" fill="rgb(221,65,9)"/><text x="23.0049%" y="191.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.14%)</title><rect x="22.7549%" y="165" width="0.1350%" height="15" fill="rgb(235,49,36)"/><text x="23.0049%" y="175.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (3 samples, 0.20%)</title><rect x="22.7549%" y="709" width="0.2026%" height="15" fill="rgb(225,32,20)"/><text x="23.0049%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.20%)</title><rect x="22.7549%" y="693" width="0.2026%" height="15" fill="rgb(215,141,46)"/><text x="23.0049%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.20%)</title><rect x="22.7549%" y="677" width="0.2026%" height="15" fill="rgb(250,160,47)"/><text x="23.0049%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (3 samples, 0.20%)</title><rect x="22.7549%" y="661" width="0.2026%" height="15" fill="rgb(216,222,40)"/><text x="23.0049%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.20%)</title><rect x="22.7549%" y="645" width="0.2026%" height="15" fill="rgb(234,217,39)"/><text x="23.0049%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (3 samples, 0.20%)</title><rect x="22.7549%" y="629" width="0.2026%" height="15" fill="rgb(207,178,40)"/><text x="23.0049%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (3 samples, 0.20%)</title><rect x="22.7549%" y="613" width="0.2026%" height="15" fill="rgb(221,136,13)"/><text x="23.0049%" y="623.50"></text></g><g><title>__libc_send (3 samples, 0.20%)</title><rect x="22.7549%" y="597" width="0.2026%" height="15" fill="rgb(249,199,10)"/><text x="23.0049%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.20%)</title><rect x="22.7549%" y="581" width="0.2026%" height="15" fill="rgb(249,222,13)"/><text x="23.0049%" y="591.50"></text></g><g><title>do_syscall_64 (3 samples, 0.20%)</title><rect x="22.7549%" y="565" width="0.2026%" height="15" fill="rgb(244,185,38)"/><text x="23.0049%" y="575.50"></text></g><g><title>__x64_sys_sendto (3 samples, 0.20%)</title><rect x="22.7549%" y="549" width="0.2026%" height="15" fill="rgb(236,202,9)"/><text x="23.0049%" y="559.50"></text></g><g><title>__sys_sendto (3 samples, 0.20%)</title><rect x="22.7549%" y="533" width="0.2026%" height="15" fill="rgb(250,229,37)"/><text x="23.0049%" y="543.50"></text></g><g><title>sock_sendmsg (3 samples, 0.20%)</title><rect x="22.7549%" y="517" width="0.2026%" height="15" fill="rgb(206,174,23)"/><text x="23.0049%" y="527.50"></text></g><g><title>tcp_sendmsg (3 samples, 0.20%)</title><rect x="22.7549%" y="501" width="0.2026%" height="15" fill="rgb(211,33,43)"/><text x="23.0049%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (3 samples, 0.20%)</title><rect x="22.7549%" y="485" width="0.2026%" height="15" fill="rgb(245,58,50)"/><text x="23.0049%" y="495.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (5 samples, 0.34%)</title><rect x="22.7549%" y="741" width="0.3376%" height="15" fill="rgb(244,68,36)"/><text x="23.0049%" y="751.50"></text></g><g><title>decor_mem::Shim::create_schema (5 samples, 0.34%)</title><rect x="22.7549%" y="725" width="0.3376%" height="15" fill="rgb(232,229,15)"/><text x="23.0049%" y="735.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.14%)</title><rect x="22.9575%" y="709" width="0.1350%" height="15" fill="rgb(254,30,23)"/><text x="23.2075%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.14%)</title><rect x="22.9575%" y="693" width="0.1350%" height="15" fill="rgb(235,160,14)"/><text x="23.2075%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="23.3626%" y="677" width="0.3376%" height="15" fill="rgb(212,155,44)"/><text x="23.6126%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="23.3626%" y="661" width="0.3376%" height="15" fill="rgb(226,2,50)"/><text x="23.6126%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.27%)</title><rect x="23.4301%" y="645" width="0.2701%" height="15" fill="rgb(234,177,6)"/><text x="23.6801%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="23.4976%" y="629" width="0.2026%" height="15" fill="rgb(217,24,9)"/><text x="23.7476%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="23.4976%" y="613" width="0.2026%" height="15" fill="rgb(220,13,46)"/><text x="23.7476%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.20%)</title><rect x="23.4976%" y="597" width="0.2026%" height="15" fill="rgb(239,221,27)"/><text x="23.7476%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.20%)</title><rect x="23.4976%" y="581" width="0.2026%" height="15" fill="rgb(222,198,25)"/><text x="23.7476%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="23.4976%" y="565" width="0.2026%" height="15" fill="rgb(211,99,13)"/><text x="23.7476%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="23.4976%" y="549" width="0.2026%" height="15" fill="rgb(232,111,31)"/><text x="23.7476%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.20%)</title><rect x="23.4976%" y="533" width="0.2026%" height="15" fill="rgb(245,82,37)"/><text x="23.7476%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.20%)</title><rect x="23.4976%" y="517" width="0.2026%" height="15" fill="rgb(227,149,46)"/><text x="23.7476%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="23.5652%" y="501" width="0.1350%" height="15" fill="rgb(218,36,50)"/><text x="23.8152%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="23.5652%" y="485" width="0.1350%" height="15" fill="rgb(226,80,48)"/><text x="23.8152%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="23.5652%" y="469" width="0.1350%" height="15" fill="rgb(238,224,15)"/><text x="23.8152%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="23.5652%" y="453" width="0.1350%" height="15" fill="rgb(241,136,10)"/><text x="23.8152%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.47%)</title><rect x="23.2951%" y="693" width="0.4727%" height="15" fill="rgb(208,32,45)"/><text x="23.5451%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.14%)</title><rect x="24.1729%" y="629" width="0.1350%" height="15" fill="rgb(207,135,9)"/><text x="24.4229%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="24.1729%" y="613" width="0.1350%" height="15" fill="rgb(206,86,44)"/><text x="24.4229%" y="623.50"></text></g><g><title>lock_sock_nested (2 samples, 0.14%)</title><rect x="24.7806%" y="421" width="0.1350%" height="15" fill="rgb(245,177,15)"/><text x="25.0306%" y="431.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.14%)</title><rect x="24.7806%" y="405" width="0.1350%" height="15" fill="rgb(206,64,50)"/><text x="25.0306%" y="415.50"></text></g><g><title>preempt_count_add (2 samples, 0.14%)</title><rect x="24.7806%" y="389" width="0.1350%" height="15" fill="rgb(234,36,40)"/><text x="25.0306%" y="399.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.14%)</title><rect x="25.2532%" y="341" width="0.1350%" height="15" fill="rgb(213,64,8)"/><text x="25.5032%" y="351.50"></text></g><g><title>dequeue_entity (2 samples, 0.14%)</title><rect x="25.2532%" y="325" width="0.1350%" height="15" fill="rgb(210,75,36)"/><text x="25.5032%" y="335.50"></text></g><g><title>sk_wait_data (9 samples, 0.61%)</title><rect x="24.9156%" y="421" width="0.6077%" height="15" fill="rgb(229,88,21)"/><text x="25.1656%" y="431.50"></text></g><g><title>wait_woken (8 samples, 0.54%)</title><rect x="24.9831%" y="405" width="0.5402%" height="15" fill="rgb(252,204,47)"/><text x="25.2331%" y="415.50"></text></g><g><title>schedule_timeout (7 samples, 0.47%)</title><rect x="25.0506%" y="389" width="0.4727%" height="15" fill="rgb(208,77,27)"/><text x="25.3006%" y="399.50"></text></g><g><title>schedule (6 samples, 0.41%)</title><rect x="25.1182%" y="373" width="0.4051%" height="15" fill="rgb(221,76,26)"/><text x="25.3682%" y="383.50"></text></g><g><title>__schedule (6 samples, 0.41%)</title><rect x="25.1182%" y="357" width="0.4051%" height="15" fill="rgb(225,139,18)"/><text x="25.3682%" y="367.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.20%)</title><rect x="25.5233%" y="421" width="0.2026%" height="15" fill="rgb(230,137,11)"/><text x="25.7733%" y="431.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.20%)</title><rect x="25.5233%" y="405" width="0.2026%" height="15" fill="rgb(212,28,1)"/><text x="25.7733%" y="415.50"></text></g><g><title>inet_recvmsg (19 samples, 1.28%)</title><rect x="24.5780%" y="453" width="1.2829%" height="15" fill="rgb(248,164,17)"/><text x="24.8280%" y="463.50"></text></g><g><title>tcp_recvmsg (19 samples, 1.28%)</title><rect x="24.5780%" y="437" width="1.2829%" height="15" fill="rgb(222,171,42)"/><text x="24.8280%" y="447.50"></text></g><g><title>tcp_cleanup_rbuf (2 samples, 0.14%)</title><rect x="25.7259%" y="421" width="0.1350%" height="15" fill="rgb(243,84,45)"/><text x="25.9759%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 1.55%)</title><rect x="24.4429%" y="485" width="1.5530%" height="15" fill="rgb(252,49,23)"/><text x="24.6929%" y="495.50"></text></g><g><title>__sys_recvfrom (23 samples, 1.55%)</title><rect x="24.4429%" y="469" width="1.5530%" height="15" fill="rgb(215,19,7)"/><text x="24.6929%" y="479.50"></text></g><g><title>sockfd_lookup_light (2 samples, 0.14%)</title><rect x="25.8609%" y="453" width="0.1350%" height="15" fill="rgb(238,81,41)"/><text x="26.1109%" y="463.50"></text></g><g><title>__fget_light (2 samples, 0.14%)</title><rect x="25.8609%" y="437" width="0.1350%" height="15" fill="rgb(210,199,37)"/><text x="26.1109%" y="447.50"></text></g><g><title>__fget_files (2 samples, 0.14%)</title><rect x="25.8609%" y="421" width="0.1350%" height="15" fill="rgb(244,192,49)"/><text x="26.1109%" y="431.50"></text></g><g><title>do_syscall_64 (24 samples, 1.62%)</title><rect x="24.4429%" y="501" width="1.6205%" height="15" fill="rgb(226,211,11)"/><text x="24.6929%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (27 samples, 1.82%)</title><rect x="24.3079%" y="613" width="1.8231%" height="15" fill="rgb(236,162,54)"/><text x="24.5579%" y="623.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 1.82%)</title><rect x="24.3079%" y="597" width="1.8231%" height="15" fill="rgb(220,229,9)"/><text x="24.5579%" y="607.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (27 samples, 1.82%)</title><rect x="24.3079%" y="581" width="1.8231%" height="15" fill="rgb(250,87,22)"/><text x="24.5579%" y="591.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (27 samples, 1.82%)</title><rect x="24.3079%" y="565" width="1.8231%" height="15" fill="rgb(239,43,17)"/><text x="24.5579%" y="575.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 1.82%)</title><rect x="24.3079%" y="549" width="1.8231%" height="15" fill="rgb(231,177,25)"/><text x="24.5579%" y="559.50">s..</text></g><g><title>__libc_recv (27 samples, 1.82%)</title><rect x="24.3079%" y="533" width="1.8231%" height="15" fill="rgb(219,179,1)"/><text x="24.5579%" y="543.50">_..</text></g><g><title>entry_SYSCALL_64 (26 samples, 1.76%)</title><rect x="24.3754%" y="517" width="1.7556%" height="15" fill="rgb(238,219,53)"/><text x="24.6254%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 1.89%)</title><rect x="24.3079%" y="629" width="1.8906%" height="15" fill="rgb(232,167,36)"/><text x="24.5579%" y="639.50">&lt;..</text></g><g><title>mysql::conn::Conn::handle_result_set (34 samples, 2.30%)</title><rect x="24.0378%" y="661" width="2.2957%" height="15" fill="rgb(244,19,51)"/><text x="24.2878%" y="671.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (32 samples, 2.16%)</title><rect x="24.1729%" y="645" width="2.1607%" height="15" fill="rgb(224,6,22)"/><text x="24.4229%" y="655.50">m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.14%)</title><rect x="26.3336%" y="645" width="0.1350%" height="15" fill="rgb(224,145,5)"/><text x="26.5836%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.14%)</title><rect x="26.3336%" y="629" width="0.1350%" height="15" fill="rgb(234,130,49)"/><text x="26.5836%" y="639.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.14%)</title><rect x="26.6712%" y="485" width="0.1350%" height="15" fill="rgb(254,6,2)"/><text x="26.9212%" y="495.50"></text></g><g><title>preempt_count_sub (2 samples, 0.14%)</title><rect x="26.6712%" y="469" width="0.1350%" height="15" fill="rgb(208,96,46)"/><text x="26.9212%" y="479.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.34%)</title><rect x="27.0763%" y="357" width="0.3376%" height="15" fill="rgb(239,3,39)"/><text x="27.3263%" y="367.50"></text></g><g><title>loopback_xmit (4 samples, 0.27%)</title><rect x="27.1438%" y="341" width="0.2701%" height="15" fill="rgb(233,210,1)"/><text x="27.3938%" y="351.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.61%)</title><rect x="27.0088%" y="373" width="0.6077%" height="15" fill="rgb(244,137,37)"/><text x="27.2588%" y="383.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.20%)</title><rect x="27.4139%" y="357" width="0.2026%" height="15" fill="rgb(240,136,2)"/><text x="27.6639%" y="367.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.14%)</title><rect x="27.7515%" y="261" width="0.1350%" height="15" fill="rgb(239,18,37)"/><text x="28.0015%" y="271.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.14%)</title><rect x="28.0891%" y="181" width="0.1350%" height="15" fill="rgb(218,185,22)"/><text x="28.3391%" y="191.50"></text></g><g><title>enqueue_task (4 samples, 0.27%)</title><rect x="28.3592%" y="69" width="0.2701%" height="15" fill="rgb(225,218,4)"/><text x="28.6092%" y="79.50"></text></g><g><title>psi_task_change (4 samples, 0.27%)</title><rect x="28.3592%" y="53" width="0.2701%" height="15" fill="rgb(230,182,32)"/><text x="28.6092%" y="63.50"></text></g><g><title>psi_group_change (4 samples, 0.27%)</title><rect x="28.3592%" y="37" width="0.2701%" height="15" fill="rgb(242,56,43)"/><text x="28.6092%" y="47.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.20%)</title><rect x="28.6293%" y="69" width="0.2026%" height="15" fill="rgb(233,99,24)"/><text x="28.8793%" y="79.50"></text></g><g><title>enqueue_entity (2 samples, 0.14%)</title><rect x="28.6968%" y="53" width="0.1350%" height="15" fill="rgb(234,209,42)"/><text x="28.9468%" y="63.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.14%)</title><rect x="28.8319%" y="69" width="0.1350%" height="15" fill="rgb(227,7,12)"/><text x="29.0819%" y="79.50"></text></g><g><title>__wake_up_common (12 samples, 0.81%)</title><rect x="28.2917%" y="117" width="0.8103%" height="15" fill="rgb(245,203,43)"/><text x="28.5417%" y="127.50"></text></g><g><title>pollwake (12 samples, 0.81%)</title><rect x="28.2917%" y="101" width="0.8103%" height="15" fill="rgb(238,205,33)"/><text x="28.5417%" y="111.50"></text></g><g><title>try_to_wake_up (12 samples, 0.81%)</title><rect x="28.2917%" y="85" width="0.8103%" height="15" fill="rgb(231,56,7)"/><text x="28.5417%" y="95.50"></text></g><g><title>sock_def_readable (13 samples, 0.88%)</title><rect x="28.2917%" y="149" width="0.8778%" height="15" fill="rgb(244,186,29)"/><text x="28.5417%" y="159.50"></text></g><g><title>__wake_up_common_lock (13 samples, 0.88%)</title><rect x="28.2917%" y="133" width="0.8778%" height="15" fill="rgb(234,111,31)"/><text x="28.5417%" y="143.50"></text></g><g><title>tcp_ack_update_rtt (3 samples, 0.20%)</title><rect x="29.3720%" y="133" width="0.2026%" height="15" fill="rgb(241,149,10)"/><text x="29.6220%" y="143.50"></text></g><g><title>tcp_ack (8 samples, 0.54%)</title><rect x="29.1695%" y="149" width="0.5402%" height="15" fill="rgb(249,206,44)"/><text x="29.4195%" y="159.50"></text></g><g><title>tcp_xmit_recovery (2 samples, 0.14%)</title><rect x="29.5746%" y="133" width="0.1350%" height="15" fill="rgb(251,153,30)"/><text x="29.8246%" y="143.50"></text></g><g><title>ip_local_deliver (28 samples, 1.89%)</title><rect x="27.9541%" y="245" width="1.8906%" height="15" fill="rgb(239,152,38)"/><text x="28.2041%" y="255.50">i..</text></g><g><title>ip_local_deliver_finish (28 samples, 1.89%)</title><rect x="27.9541%" y="229" width="1.8906%" height="15" fill="rgb(249,139,47)"/><text x="28.2041%" y="239.50">i..</text></g><g><title>ip_protocol_deliver_rcu (28 samples, 1.89%)</title><rect x="27.9541%" y="213" width="1.8906%" height="15" fill="rgb(244,64,35)"/><text x="28.2041%" y="223.50">i..</text></g><g><title>tcp_v4_rcv (27 samples, 1.82%)</title><rect x="28.0216%" y="197" width="1.8231%" height="15" fill="rgb(216,46,15)"/><text x="28.2716%" y="207.50">t..</text></g><g><title>tcp_v4_do_rcv (24 samples, 1.62%)</title><rect x="28.2242%" y="181" width="1.6205%" height="15" fill="rgb(250,74,19)"/><text x="28.4742%" y="191.50"></text></g><g><title>tcp_rcv_established (24 samples, 1.62%)</title><rect x="28.2242%" y="165" width="1.6205%" height="15" fill="rgb(249,42,33)"/><text x="28.4742%" y="175.50"></text></g><g><title>__local_bh_enable_ip (34 samples, 2.30%)</title><rect x="27.6165%" y="373" width="2.2957%" height="15" fill="rgb(242,149,17)"/><text x="27.8665%" y="383.50">_..</text></g><g><title>do_softirq (34 samples, 2.30%)</title><rect x="27.6165%" y="357" width="2.2957%" height="15" fill="rgb(244,29,21)"/><text x="27.8665%" y="367.50">d..</text></g><g><title>do_softirq_own_stack (33 samples, 2.23%)</title><rect x="27.6840%" y="341" width="2.2282%" height="15" fill="rgb(220,130,37)"/><text x="27.9340%" y="351.50">d..</text></g><g><title>__do_softirq (33 samples, 2.23%)</title><rect x="27.6840%" y="325" width="2.2282%" height="15" fill="rgb(211,67,2)"/><text x="27.9340%" y="335.50">_..</text></g><g><title>net_rx_action (32 samples, 2.16%)</title><rect x="27.7515%" y="309" width="2.1607%" height="15" fill="rgb(235,68,52)"/><text x="28.0015%" y="319.50">n..</text></g><g><title>process_backlog (32 samples, 2.16%)</title><rect x="27.7515%" y="293" width="2.1607%" height="15" fill="rgb(246,142,3)"/><text x="28.0015%" y="303.50">p..</text></g><g><title>__netif_receive_skb_one_core (32 samples, 2.16%)</title><rect x="27.7515%" y="277" width="2.1607%" height="15" fill="rgb(241,25,7)"/><text x="28.0015%" y="287.50">_..</text></g><g><title>ip_rcv (30 samples, 2.03%)</title><rect x="27.8866%" y="261" width="2.0257%" height="15" fill="rgb(242,119,39)"/><text x="28.1366%" y="271.50">i..</text></g><g><title>ip_finish_output2 (45 samples, 3.04%)</title><rect x="27.0088%" y="389" width="3.0385%" height="15" fill="rgb(241,98,45)"/><text x="27.2588%" y="399.50">ip_..</text></g><g><title>__ip_queue_xmit (47 samples, 3.17%)</title><rect x="26.9413%" y="421" width="3.1735%" height="15" fill="rgb(254,28,30)"/><text x="27.1913%" y="431.50">__i..</text></g><g><title>ip_output (46 samples, 3.11%)</title><rect x="27.0088%" y="405" width="3.1060%" height="15" fill="rgb(241,142,54)"/><text x="27.2588%" y="415.50">ip_..</text></g><g><title>__tcp_transmit_skb (51 samples, 3.44%)</title><rect x="26.8062%" y="437" width="3.4436%" height="15" fill="rgb(222,85,15)"/><text x="27.0562%" y="447.50">__t..</text></g><g><title>__tcp_push_pending_frames (53 samples, 3.58%)</title><rect x="26.8062%" y="469" width="3.5787%" height="15" fill="rgb(210,85,47)"/><text x="27.0562%" y="479.50">__tc..</text></g><g><title>tcp_write_xmit (53 samples, 3.58%)</title><rect x="26.8062%" y="453" width="3.5787%" height="15" fill="rgb(224,206,25)"/><text x="27.0562%" y="463.50">tcp_..</text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.14%)</title><rect x="30.3849%" y="437" width="0.1350%" height="15" fill="rgb(243,201,19)"/><text x="30.6349%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.20%)</title><rect x="30.3849%" y="469" width="0.2026%" height="15" fill="rgb(236,59,4)"/><text x="30.6349%" y="479.50"></text></g><g><title>__alloc_skb (3 samples, 0.20%)</title><rect x="30.3849%" y="453" width="0.2026%" height="15" fill="rgb(254,179,45)"/><text x="30.6349%" y="463.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.20%)</title><rect x="30.5874%" y="469" width="0.2026%" height="15" fill="rgb(226,14,10)"/><text x="30.8374%" y="479.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.14%)</title><rect x="30.6550%" y="453" width="0.1350%" height="15" fill="rgb(244,27,41)"/><text x="30.9050%" y="463.50"></text></g><g><title>__x64_sys_sendto (64 samples, 4.32%)</title><rect x="26.5361%" y="549" width="4.3214%" height="15" fill="rgb(235,35,32)"/><text x="26.7861%" y="559.50">__x64..</text></g><g><title>__sys_sendto (64 samples, 4.32%)</title><rect x="26.5361%" y="533" width="4.3214%" height="15" fill="rgb(218,68,31)"/><text x="26.7861%" y="543.50">__sys..</text></g><g><title>sock_sendmsg (62 samples, 4.19%)</title><rect x="26.6712%" y="517" width="4.1864%" height="15" fill="rgb(207,120,37)"/><text x="26.9212%" y="527.50">sock_..</text></g><g><title>tcp_sendmsg (62 samples, 4.19%)</title><rect x="26.6712%" y="501" width="4.1864%" height="15" fill="rgb(227,98,0)"/><text x="26.9212%" y="511.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (60 samples, 4.05%)</title><rect x="26.8062%" y="485" width="4.0513%" height="15" fill="rgb(207,7,3)"/><text x="27.0562%" y="495.50">tcp_..</text></g><g><title>do_syscall_64 (65 samples, 4.39%)</title><rect x="26.5361%" y="565" width="4.3889%" height="15" fill="rgb(206,98,19)"/><text x="26.7861%" y="575.50">do_sy..</text></g><g><title>entry_SYSCALL_64 (67 samples, 4.52%)</title><rect x="26.5361%" y="581" width="4.5240%" height="15" fill="rgb(217,5,26)"/><text x="26.7861%" y="591.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="30.9251%" y="565" width="0.1350%" height="15" fill="rgb(235,190,38)"/><text x="31.1751%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (109 samples, 7.36%)</title><rect x="23.7677%" y="693" width="7.3599%" height="15" fill="rgb(247,86,24)"/><text x="24.0177%" y="703.50">&lt;mysql::co..</text></g><g><title>mysql::conn::Conn::_query (105 samples, 7.09%)</title><rect x="24.0378%" y="677" width="7.0898%" height="15" fill="rgb(205,101,16)"/><text x="24.2878%" y="687.50">mysql::con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (71 samples, 4.79%)</title><rect x="26.3336%" y="661" width="4.7941%" height="15" fill="rgb(246,168,33)"/><text x="26.5836%" y="671.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (69 samples, 4.66%)</title><rect x="26.4686%" y="645" width="4.6590%" height="15" fill="rgb(231,114,1)"/><text x="26.7186%" y="655.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (68 samples, 4.59%)</title><rect x="26.5361%" y="629" width="4.5915%" height="15" fill="rgb(207,184,53)"/><text x="26.7861%" y="639.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (68 samples, 4.59%)</title><rect x="26.5361%" y="613" width="4.5915%" height="15" fill="rgb(224,95,51)"/><text x="26.7861%" y="623.50">std::..</text></g><g><title>__libc_send (68 samples, 4.59%)</title><rect x="26.5361%" y="597" width="4.5915%" height="15" fill="rgb(212,188,45)"/><text x="26.7861%" y="607.50">__lib..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="31.1276%" y="677" width="0.1350%" height="15" fill="rgb(223,154,38)"/><text x="31.3776%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="31.1276%" y="693" width="0.2026%" height="15" fill="rgb(251,22,52)"/><text x="31.3776%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="31.3977%" y="661" width="0.1350%" height="15" fill="rgb(229,209,22)"/><text x="31.6477%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="31.3977%" y="645" width="0.1350%" height="15" fill="rgb(234,138,34)"/><text x="31.6477%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.14%)</title><rect x="31.3977%" y="629" width="0.1350%" height="15" fill="rgb(212,95,11)"/><text x="31.6477%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (6 samples, 0.41%)</title><rect x="31.3302%" y="677" width="0.4051%" height="15" fill="rgb(240,179,47)"/><text x="31.5802%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.20%)</title><rect x="31.5327%" y="661" width="0.2026%" height="15" fill="rgb(240,163,11)"/><text x="31.7827%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="31.5327%" y="645" width="0.2026%" height="15" fill="rgb(236,37,12)"/><text x="31.7827%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="31.5327%" y="629" width="0.2026%" height="15" fill="rgb(232,164,16)"/><text x="31.7827%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.20%)</title><rect x="31.5327%" y="613" width="0.2026%" height="15" fill="rgb(244,205,15)"/><text x="31.7827%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.20%)</title><rect x="31.5327%" y="597" width="0.2026%" height="15" fill="rgb(223,117,47)"/><text x="31.7827%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="31.5327%" y="581" width="0.2026%" height="15" fill="rgb(244,107,35)"/><text x="31.7827%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="31.5327%" y="565" width="0.2026%" height="15" fill="rgb(205,140,8)"/><text x="31.7827%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.20%)</title><rect x="31.5327%" y="549" width="0.2026%" height="15" fill="rgb(228,84,46)"/><text x="31.7827%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.20%)</title><rect x="31.5327%" y="533" width="0.2026%" height="15" fill="rgb(254,188,9)"/><text x="31.7827%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.20%)</title><rect x="31.5327%" y="517" width="0.2026%" height="15" fill="rgb(206,112,54)"/><text x="31.7827%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.20%)</title><rect x="31.5327%" y="501" width="0.2026%" height="15" fill="rgb(216,84,49)"/><text x="31.7827%" y="511.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.20%)</title><rect x="31.5327%" y="485" width="0.2026%" height="15" fill="rgb(214,194,35)"/><text x="31.7827%" y="495.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="31.5327%" y="469" width="0.2026%" height="15" fill="rgb(249,28,3)"/><text x="31.7827%" y="479.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="31.5327%" y="453" width="0.2026%" height="15" fill="rgb(222,56,52)"/><text x="31.7827%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.47%)</title><rect x="31.3302%" y="693" width="0.4727%" height="15" fill="rgb(245,217,50)"/><text x="31.5802%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="31.8704%" y="693" width="0.2026%" height="15" fill="rgb(213,201,24)"/><text x="32.1204%" y="703.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="31.8704%" y="677" width="0.2026%" height="15" fill="rgb(248,116,28)"/><text x="32.1204%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="32.0729%" y="693" width="0.1350%" height="15" fill="rgb(219,72,43)"/><text x="32.3229%" y="703.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.14%)</title><rect x="32.6131%" y="613" width="0.1350%" height="15" fill="rgb(209,138,14)"/><text x="32.8631%" y="623.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.14%)</title><rect x="32.6131%" y="597" width="0.1350%" height="15" fill="rgb(222,18,33)"/><text x="32.8631%" y="607.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.14%)</title><rect x="32.6131%" y="581" width="0.1350%" height="15" fill="rgb(213,199,7)"/><text x="32.8631%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="32.7481%" y="485" width="0.1350%" height="15" fill="rgb(250,110,10)"/><text x="32.9981%" y="495.50"></text></g><g><title>alloc::string::String::with_capacity (3 samples, 0.20%)</title><rect x="32.7481%" y="613" width="0.2026%" height="15" fill="rgb(248,123,6)"/><text x="32.9981%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="32.7481%" y="597" width="0.2026%" height="15" fill="rgb(206,91,31)"/><text x="32.9981%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="32.7481%" y="581" width="0.2026%" height="15" fill="rgb(211,154,13)"/><text x="32.9981%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.20%)</title><rect x="32.7481%" y="565" width="0.2026%" height="15" fill="rgb(225,148,7)"/><text x="32.9981%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.20%)</title><rect x="32.7481%" y="549" width="0.2026%" height="15" fill="rgb(220,160,43)"/><text x="32.9981%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.20%)</title><rect x="32.7481%" y="533" width="0.2026%" height="15" fill="rgb(213,52,39)"/><text x="32.9981%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.20%)</title><rect x="32.7481%" y="517" width="0.2026%" height="15" fill="rgb(243,137,7)"/><text x="32.9981%" y="527.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.20%)</title><rect x="32.7481%" y="501" width="0.2026%" height="15" fill="rgb(230,79,13)"/><text x="32.9981%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.61%)</title><rect x="32.5456%" y="629" width="0.6077%" height="15" fill="rgb(247,105,23)"/><text x="32.7956%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.20%)</title><rect x="32.9507%" y="613" width="0.2026%" height="15" fill="rgb(223,179,41)"/><text x="33.2007%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.20%)</title><rect x="32.9507%" y="597" width="0.2026%" height="15" fill="rgb(218,9,34)"/><text x="33.2007%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.20%)</title><rect x="32.9507%" y="581" width="0.2026%" height="15" fill="rgb(222,106,8)"/><text x="33.2007%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="33.0182%" y="565" width="0.1350%" height="15" fill="rgb(211,220,0)"/><text x="33.2682%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.68%)</title><rect x="32.5456%" y="661" width="0.6752%" height="15" fill="rgb(229,52,16)"/><text x="32.7956%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 0.68%)</title><rect x="32.5456%" y="645" width="0.6752%" height="15" fill="rgb(212,155,18)"/><text x="32.7956%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (12 samples, 0.81%)</title><rect x="32.4781%" y="677" width="0.8103%" height="15" fill="rgb(242,21,14)"/><text x="32.7281%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="33.2883%" y="645" width="0.1350%" height="15" fill="rgb(222,19,48)"/><text x="33.5383%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="33.2883%" y="629" width="0.1350%" height="15" fill="rgb(232,45,27)"/><text x="33.5383%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.14%)</title><rect x="33.2883%" y="613" width="0.1350%" height="15" fill="rgb(249,103,42)"/><text x="33.5383%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="33.2883%" y="597" width="0.1350%" height="15" fill="rgb(246,81,33)"/><text x="33.5383%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="33.2883%" y="661" width="0.2026%" height="15" fill="rgb(252,33,42)"/><text x="33.5383%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="33.4909%" y="661" width="0.1350%" height="15" fill="rgb(209,212,41)"/><text x="33.7409%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="33.4909%" y="645" width="0.1350%" height="15" fill="rgb(207,154,6)"/><text x="33.7409%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="33.4909%" y="629" width="0.1350%" height="15" fill="rgb(223,64,47)"/><text x="33.7409%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="33.6259%" y="565" width="0.1350%" height="15" fill="rgb(211,161,38)"/><text x="33.8759%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.47%)</title><rect x="33.6259%" y="613" width="0.4727%" height="15" fill="rgb(219,138,40)"/><text x="33.8759%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.47%)</title><rect x="33.6259%" y="597" width="0.4727%" height="15" fill="rgb(241,228,46)"/><text x="33.8759%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.47%)</title><rect x="33.6259%" y="581" width="0.4727%" height="15" fill="rgb(223,209,38)"/><text x="33.8759%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.27%)</title><rect x="33.8285%" y="565" width="0.2701%" height="15" fill="rgb(236,164,45)"/><text x="34.0785%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="33.9635%" y="549" width="0.1350%" height="15" fill="rgb(231,15,5)"/><text x="34.2135%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="33.9635%" y="533" width="0.1350%" height="15" fill="rgb(252,35,15)"/><text x="34.2135%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="34.0986%" y="597" width="0.1350%" height="15" fill="rgb(248,181,18)"/><text x="34.3486%" y="607.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="34.0986%" y="581" width="0.1350%" height="15" fill="rgb(233,39,42)"/><text x="34.3486%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.74%)</title><rect x="33.6259%" y="629" width="0.7427%" height="15" fill="rgb(238,110,33)"/><text x="33.8759%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.27%)</title><rect x="34.0986%" y="613" width="0.2701%" height="15" fill="rgb(233,195,10)"/><text x="34.3486%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="34.2336%" y="597" width="0.1350%" height="15" fill="rgb(254,105,3)"/><text x="34.4836%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="34.2336%" y="581" width="0.1350%" height="15" fill="rgb(221,225,9)"/><text x="34.4836%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="34.2336%" y="565" width="0.1350%" height="15" fill="rgb(224,227,45)"/><text x="34.4836%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 1.22%)</title><rect x="33.6259%" y="645" width="1.2154%" height="15" fill="rgb(229,198,43)"/><text x="33.8759%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.47%)</title><rect x="34.3687%" y="629" width="0.4727%" height="15" fill="rgb(206,209,35)"/><text x="34.6187%" y="639.50"></text></g><g><title>core::fmt::write (5 samples, 0.34%)</title><rect x="34.5037%" y="613" width="0.3376%" height="15" fill="rgb(245,195,53)"/><text x="34.7537%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.27%)</title><rect x="34.5712%" y="597" width="0.2701%" height="15" fill="rgb(240,92,26)"/><text x="34.8212%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="34.6388%" y="581" width="0.2026%" height="15" fill="rgb(207,40,23)"/><text x="34.8888%" y="591.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="34.6388%" y="565" width="0.2026%" height="15" fill="rgb(223,111,35)"/><text x="34.8888%" y="575.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="34.6388%" y="549" width="0.2026%" height="15" fill="rgb(229,147,28)"/><text x="34.8888%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.20%)</title><rect x="34.8413%" y="613" width="0.2026%" height="15" fill="rgb(211,29,28)"/><text x="35.0913%" y="623.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.14%)</title><rect x="34.9088%" y="597" width="0.1350%" height="15" fill="rgb(228,72,33)"/><text x="35.1588%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="34.9088%" y="581" width="0.1350%" height="15" fill="rgb(205,214,31)"/><text x="35.1588%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="34.9088%" y="565" width="0.1350%" height="15" fill="rgb(224,111,15)"/><text x="35.1588%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="34.9088%" y="549" width="0.1350%" height="15" fill="rgb(253,21,26)"/><text x="35.1588%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="34.9088%" y="533" width="0.1350%" height="15" fill="rgb(245,139,43)"/><text x="35.1588%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="34.9088%" y="517" width="0.1350%" height="15" fill="rgb(252,170,7)"/><text x="35.1588%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="34.9088%" y="501" width="0.1350%" height="15" fill="rgb(231,118,14)"/><text x="35.1588%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="34.9088%" y="485" width="0.1350%" height="15" fill="rgb(238,83,0)"/><text x="35.1588%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="34.9088%" y="469" width="0.1350%" height="15" fill="rgb(221,39,39)"/><text x="35.1588%" y="479.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="34.9088%" y="453" width="0.1350%" height="15" fill="rgb(222,119,46)"/><text x="35.1588%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.27%)</title><rect x="34.8413%" y="645" width="0.2701%" height="15" fill="rgb(222,165,49)"/><text x="35.0913%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.27%)</title><rect x="34.8413%" y="629" width="0.2701%" height="15" fill="rgb(219,113,52)"/><text x="35.0913%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="35.2465%" y="629" width="0.1350%" height="15" fill="rgb(214,7,15)"/><text x="35.4965%" y="639.50"></text></g><g><title>core::fmt::write (50 samples, 3.38%)</title><rect x="32.4105%" y="693" width="3.3761%" height="15" fill="rgb(235,32,4)"/><text x="32.6605%" y="703.50">cor..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (37 samples, 2.50%)</title><rect x="33.2883%" y="677" width="2.4983%" height="15" fill="rgb(238,90,54)"/><text x="33.5383%" y="687.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (32 samples, 2.16%)</title><rect x="33.6259%" y="661" width="2.1607%" height="15" fill="rgb(213,208,19)"/><text x="33.8759%" y="671.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.68%)</title><rect x="35.1114%" y="645" width="0.6752%" height="15" fill="rgb(233,156,4)"/><text x="35.3614%" y="655.50"></text></g><g><title>core::fmt::write (4 samples, 0.27%)</title><rect x="35.5165%" y="629" width="0.2701%" height="15" fill="rgb(207,194,5)"/><text x="35.7665%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.27%)</title><rect x="35.5165%" y="613" width="0.2701%" height="15" fill="rgb(206,111,30)"/><text x="35.7665%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="35.5841%" y="597" width="0.2026%" height="15" fill="rgb(243,70,54)"/><text x="35.8341%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="35.6516%" y="581" width="0.1350%" height="15" fill="rgb(242,28,8)"/><text x="35.9016%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="36.0567%" y="677" width="0.1350%" height="15" fill="rgb(219,106,18)"/><text x="36.3067%" y="687.50"></text></g><g><title>_int_free (3 samples, 0.20%)</title><rect x="36.1918%" y="677" width="0.2026%" height="15" fill="rgb(244,222,10)"/><text x="36.4418%" y="687.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="36.3943%" y="661" width="0.1350%" height="15" fill="rgb(236,179,52)"/><text x="36.6443%" y="671.50"></text></g><g><title>_int_free (4 samples, 0.27%)</title><rect x="36.5294%" y="661" width="0.2701%" height="15" fill="rgb(213,23,39)"/><text x="36.7794%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 1.15%)</title><rect x="35.7866%" y="693" width="1.1479%" height="15" fill="rgb(238,48,10)"/><text x="36.0366%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.54%)</title><rect x="36.3943%" y="677" width="0.5402%" height="15" fill="rgb(251,196,23)"/><text x="36.6443%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="36.7995%" y="661" width="0.1350%" height="15" fill="rgb(250,152,24)"/><text x="37.0495%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="37.2046%" y="661" width="0.1350%" height="15" fill="rgb(209,150,17)"/><text x="37.4546%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="37.2046%" y="645" width="0.1350%" height="15" fill="rgb(234,202,34)"/><text x="37.4546%" y="655.50"></text></g><g><title>sysmalloc (2 samples, 0.14%)</title><rect x="37.2046%" y="629" width="0.1350%" height="15" fill="rgb(253,148,53)"/><text x="37.4546%" y="639.50"></text></g><g><title>perf_event_mmap (2 samples, 0.14%)</title><rect x="37.3396%" y="501" width="0.1350%" height="15" fill="rgb(218,129,16)"/><text x="37.5896%" y="511.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.14%)</title><rect x="37.3396%" y="485" width="0.1350%" height="15" fill="rgb(216,85,19)"/><text x="37.5896%" y="495.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.14%)</title><rect x="37.3396%" y="469" width="0.1350%" height="15" fill="rgb(235,228,7)"/><text x="37.5896%" y="479.50"></text></g><g><title>__GI___mprotect (3 samples, 0.20%)</title><rect x="37.3396%" y="597" width="0.2026%" height="15" fill="rgb(245,175,0)"/><text x="37.5896%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.20%)</title><rect x="37.3396%" y="581" width="0.2026%" height="15" fill="rgb(208,168,36)"/><text x="37.5896%" y="591.50"></text></g><g><title>do_syscall_64 (3 samples, 0.20%)</title><rect x="37.3396%" y="565" width="0.2026%" height="15" fill="rgb(246,171,24)"/><text x="37.5896%" y="575.50"></text></g><g><title>__x64_sys_mprotect (3 samples, 0.20%)</title><rect x="37.3396%" y="549" width="0.2026%" height="15" fill="rgb(215,142,24)"/><text x="37.5896%" y="559.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.20%)</title><rect x="37.3396%" y="533" width="0.2026%" height="15" fill="rgb(250,187,7)"/><text x="37.5896%" y="543.50"></text></g><g><title>mprotect_fixup (3 samples, 0.20%)</title><rect x="37.3396%" y="517" width="0.2026%" height="15" fill="rgb(228,66,33)"/><text x="37.5896%" y="527.50"></text></g><g><title>page_fault (2 samples, 0.14%)</title><rect x="37.5422%" y="597" width="0.1350%" height="15" fill="rgb(234,215,21)"/><text x="37.7922%" y="607.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.14%)</title><rect x="37.5422%" y="581" width="0.1350%" height="15" fill="rgb(222,191,20)"/><text x="37.7922%" y="591.50"></text></g><g><title>handle_mm_fault (2 samples, 0.14%)</title><rect x="37.5422%" y="565" width="0.1350%" height="15" fill="rgb(245,79,54)"/><text x="37.7922%" y="575.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.14%)</title><rect x="37.5422%" y="549" width="0.1350%" height="15" fill="rgb(240,10,37)"/><text x="37.7922%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.54%)</title><rect x="37.2046%" y="677" width="0.5402%" height="15" fill="rgb(214,192,32)"/><text x="37.4546%" y="687.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.41%)</title><rect x="37.3396%" y="661" width="0.4051%" height="15" fill="rgb(209,36,54)"/><text x="37.5896%" y="671.50"></text></g><g><title>_int_realloc (6 samples, 0.41%)</title><rect x="37.3396%" y="645" width="0.4051%" height="15" fill="rgb(220,10,11)"/><text x="37.5896%" y="655.50"></text></g><g><title>_int_malloc (6 samples, 0.41%)</title><rect x="37.3396%" y="629" width="0.4051%" height="15" fill="rgb(221,106,17)"/><text x="37.5896%" y="639.50"></text></g><g><title>sysmalloc (6 samples, 0.41%)</title><rect x="37.3396%" y="613" width="0.4051%" height="15" fill="rgb(251,142,44)"/><text x="37.5896%" y="623.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.14%)</title><rect x="38.2174%" y="69" width="0.1350%" height="15" fill="rgb(238,13,15)"/><text x="38.4674%" y="79.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.54%)</title><rect x="37.9473%" y="421" width="0.5402%" height="15" fill="rgb(208,107,27)"/><text x="38.1973%" y="431.50"></text></g><g><title>ip_output (8 samples, 0.54%)</title><rect x="37.9473%" y="405" width="0.5402%" height="15" fill="rgb(205,136,37)"/><text x="38.1973%" y="415.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.47%)</title><rect x="38.0149%" y="389" width="0.4727%" height="15" fill="rgb(250,205,27)"/><text x="38.2649%" y="399.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.47%)</title><rect x="38.0149%" y="373" width="0.4727%" height="15" fill="rgb(210,80,43)"/><text x="38.2649%" y="383.50"></text></g><g><title>do_softirq (7 samples, 0.47%)</title><rect x="38.0149%" y="357" width="0.4727%" height="15" fill="rgb(247,160,36)"/><text x="38.2649%" y="367.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.47%)</title><rect x="38.0149%" y="341" width="0.4727%" height="15" fill="rgb(234,13,49)"/><text x="38.2649%" y="351.50"></text></g><g><title>__do_softirq (7 samples, 0.47%)</title><rect x="38.0149%" y="325" width="0.4727%" height="15" fill="rgb(234,122,0)"/><text x="38.2649%" y="335.50"></text></g><g><title>net_rx_action (7 samples, 0.47%)</title><rect x="38.0149%" y="309" width="0.4727%" height="15" fill="rgb(207,146,38)"/><text x="38.2649%" y="319.50"></text></g><g><title>process_backlog (7 samples, 0.47%)</title><rect x="38.0149%" y="293" width="0.4727%" height="15" fill="rgb(207,177,25)"/><text x="38.2649%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.47%)</title><rect x="38.0149%" y="277" width="0.4727%" height="15" fill="rgb(211,178,42)"/><text x="38.2649%" y="287.50"></text></g><g><title>ip_rcv (7 samples, 0.47%)</title><rect x="38.0149%" y="261" width="0.4727%" height="15" fill="rgb(230,69,54)"/><text x="38.2649%" y="271.50"></text></g><g><title>ip_local_deliver (7 samples, 0.47%)</title><rect x="38.0149%" y="245" width="0.4727%" height="15" fill="rgb(214,135,41)"/><text x="38.2649%" y="255.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.47%)</title><rect x="38.0149%" y="229" width="0.4727%" height="15" fill="rgb(237,67,25)"/><text x="38.2649%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.47%)</title><rect x="38.0149%" y="213" width="0.4727%" height="15" fill="rgb(222,189,50)"/><text x="38.2649%" y="223.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.41%)</title><rect x="38.0824%" y="197" width="0.4051%" height="15" fill="rgb(245,148,34)"/><text x="38.3324%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.27%)</title><rect x="38.2174%" y="181" width="0.2701%" height="15" fill="rgb(222,29,6)"/><text x="38.4674%" y="191.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.27%)</title><rect x="38.2174%" y="165" width="0.2701%" height="15" fill="rgb(221,189,43)"/><text x="38.4674%" y="175.50"></text></g><g><title>sock_def_readable (4 samples, 0.27%)</title><rect x="38.2174%" y="149" width="0.2701%" height="15" fill="rgb(207,36,27)"/><text x="38.4674%" y="159.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.27%)</title><rect x="38.2174%" y="133" width="0.2701%" height="15" fill="rgb(217,90,24)"/><text x="38.4674%" y="143.50"></text></g><g><title>__wake_up_common (4 samples, 0.27%)</title><rect x="38.2174%" y="117" width="0.2701%" height="15" fill="rgb(224,66,35)"/><text x="38.4674%" y="127.50"></text></g><g><title>pollwake (4 samples, 0.27%)</title><rect x="38.2174%" y="101" width="0.2701%" height="15" fill="rgb(221,13,50)"/><text x="38.4674%" y="111.50"></text></g><g><title>try_to_wake_up (4 samples, 0.27%)</title><rect x="38.2174%" y="85" width="0.2701%" height="15" fill="rgb(236,68,49)"/><text x="38.4674%" y="95.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 0.68%)</title><rect x="37.8798%" y="437" width="0.6752%" height="15" fill="rgb(229,146,28)"/><text x="38.1298%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (11 samples, 0.74%)</title><rect x="37.8798%" y="469" width="0.7427%" height="15" fill="rgb(225,31,38)"/><text x="38.1298%" y="479.50"></text></g><g><title>tcp_write_xmit (11 samples, 0.74%)</title><rect x="37.8798%" y="453" width="0.7427%" height="15" fill="rgb(250,208,3)"/><text x="38.1298%" y="463.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (14 samples, 0.95%)</title><rect x="37.7448%" y="661" width="0.9453%" height="15" fill="rgb(246,54,23)"/><text x="37.9948%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.88%)</title><rect x="37.8123%" y="645" width="0.8778%" height="15" fill="rgb(243,76,11)"/><text x="38.0623%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (13 samples, 0.88%)</title><rect x="37.8123%" y="629" width="0.8778%" height="15" fill="rgb(245,21,50)"/><text x="38.0623%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (13 samples, 0.88%)</title><rect x="37.8123%" y="613" width="0.8778%" height="15" fill="rgb(228,9,43)"/><text x="38.0623%" y="623.50"></text></g><g><title>__libc_send (13 samples, 0.88%)</title><rect x="37.8123%" y="597" width="0.8778%" height="15" fill="rgb(208,100,47)"/><text x="38.0623%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.81%)</title><rect x="37.8798%" y="581" width="0.8103%" height="15" fill="rgb(232,26,8)"/><text x="38.1298%" y="591.50"></text></g><g><title>do_syscall_64 (12 samples, 0.81%)</title><rect x="37.8798%" y="565" width="0.8103%" height="15" fill="rgb(216,166,38)"/><text x="38.1298%" y="575.50"></text></g><g><title>__x64_sys_sendto (12 samples, 0.81%)</title><rect x="37.8798%" y="549" width="0.8103%" height="15" fill="rgb(251,202,51)"/><text x="38.1298%" y="559.50"></text></g><g><title>__sys_sendto (12 samples, 0.81%)</title><rect x="37.8798%" y="533" width="0.8103%" height="15" fill="rgb(254,216,34)"/><text x="38.1298%" y="543.50"></text></g><g><title>sock_sendmsg (12 samples, 0.81%)</title><rect x="37.8798%" y="517" width="0.8103%" height="15" fill="rgb(251,32,27)"/><text x="38.1298%" y="527.50"></text></g><g><title>tcp_sendmsg (12 samples, 0.81%)</title><rect x="37.8798%" y="501" width="0.8103%" height="15" fill="rgb(208,127,28)"/><text x="38.1298%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 0.81%)</title><rect x="37.8798%" y="485" width="0.8103%" height="15" fill="rgb(224,137,22)"/><text x="38.1298%" y="495.50"></text></g><g><title>mysql::conn::Conn::_query (15 samples, 1.01%)</title><rect x="37.7448%" y="677" width="1.0128%" height="15" fill="rgb(254,70,32)"/><text x="37.9948%" y="687.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (28 samples, 1.89%)</title><rect x="36.9345%" y="693" width="1.8906%" height="15" fill="rgb(229,75,37)"/><text x="37.1845%" y="703.50">d..</text></g><g><title>decor_mem::helpers::get_user_cols_of_datatable (2 samples, 0.14%)</title><rect x="38.8251%" y="693" width="0.1350%" height="15" fill="rgb(252,64,23)"/><text x="39.0751%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="38.8251%" y="677" width="0.1350%" height="15" fill="rgb(232,162,48)"/><text x="39.0751%" y="687.50"></text></g><g><title>alloc::string::String::with_capacity (3 samples, 0.20%)</title><rect x="39.0952%" y="597" width="0.2026%" height="15" fill="rgb(246,160,12)"/><text x="39.3452%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="39.0952%" y="581" width="0.2026%" height="15" fill="rgb(247,166,0)"/><text x="39.3452%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="39.0952%" y="565" width="0.2026%" height="15" fill="rgb(249,219,21)"/><text x="39.3452%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.20%)</title><rect x="39.0952%" y="549" width="0.2026%" height="15" fill="rgb(205,209,3)"/><text x="39.3452%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.20%)</title><rect x="39.0952%" y="533" width="0.2026%" height="15" fill="rgb(243,44,1)"/><text x="39.3452%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.20%)</title><rect x="39.0952%" y="517" width="0.2026%" height="15" fill="rgb(206,159,16)"/><text x="39.3452%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.20%)</title><rect x="39.0952%" y="501" width="0.2026%" height="15" fill="rgb(244,77,30)"/><text x="39.3452%" y="511.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.20%)</title><rect x="39.0952%" y="485" width="0.2026%" height="15" fill="rgb(218,69,12)"/><text x="39.3452%" y="495.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="39.0952%" y="469" width="0.2026%" height="15" fill="rgb(212,87,7)"/><text x="39.3452%" y="479.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="39.0952%" y="453" width="0.2026%" height="15" fill="rgb(245,114,25)"/><text x="39.3452%" y="463.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.41%)</title><rect x="39.0277%" y="613" width="0.4051%" height="15" fill="rgb(210,61,42)"/><text x="39.2777%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="39.2978%" y="597" width="0.1350%" height="15" fill="rgb(211,52,33)"/><text x="39.5478%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="39.2978%" y="581" width="0.1350%" height="15" fill="rgb(234,58,33)"/><text x="39.5478%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="39.2978%" y="565" width="0.1350%" height="15" fill="rgb(220,115,36)"/><text x="39.5478%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.47%)</title><rect x="39.0277%" y="645" width="0.4727%" height="15" fill="rgb(243,153,54)"/><text x="39.2777%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.47%)</title><rect x="39.0277%" y="629" width="0.4727%" height="15" fill="rgb(251,47,18)"/><text x="39.2777%" y="639.50"></text></g><g><title>decor_mem::helpers::is_datatable (9 samples, 0.61%)</title><rect x="38.9602%" y="693" width="0.6077%" height="15" fill="rgb(242,102,42)"/><text x="39.2102%" y="703.50"></text></g><g><title>core::fmt::write (8 samples, 0.54%)</title><rect x="39.0277%" y="677" width="0.5402%" height="15" fill="rgb(234,31,38)"/><text x="39.2777%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (8 samples, 0.54%)</title><rect x="39.0277%" y="661" width="0.5402%" height="15" fill="rgb(221,117,51)"/><text x="39.2777%" y="671.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="39.5679%" y="661" width="0.1350%" height="15" fill="rgb(212,20,18)"/><text x="39.8179%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.41%)</title><rect x="39.5679%" y="677" width="0.4051%" height="15" fill="rgb(245,133,36)"/><text x="39.8179%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="39.7704%" y="661" width="0.2026%" height="15" fill="rgb(212,6,19)"/><text x="40.0204%" y="671.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.20%)</title><rect x="39.7704%" y="645" width="0.2026%" height="15" fill="rgb(218,1,36)"/><text x="40.0204%" y="655.50"></text></g><g><title>_int_realloc (3 samples, 0.20%)</title><rect x="39.7704%" y="629" width="0.2026%" height="15" fill="rgb(246,84,54)"/><text x="40.0204%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="39.8379%" y="613" width="0.1350%" height="15" fill="rgb(242,110,6)"/><text x="40.0879%" y="623.50"></text></g><g><title>decor_mem::helpers::str_ident_match (7 samples, 0.47%)</title><rect x="39.5679%" y="693" width="0.4727%" height="15" fill="rgb(214,47,5)"/><text x="39.8179%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="40.1080%" y="661" width="0.1350%" height="15" fill="rgb(218,159,25)"/><text x="40.3580%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.61%)</title><rect x="40.3106%" y="629" width="0.6077%" height="15" fill="rgb(215,211,28)"/><text x="40.5606%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.61%)</title><rect x="40.3106%" y="613" width="0.6077%" height="15" fill="rgb(238,59,32)"/><text x="40.5606%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.54%)</title><rect x="40.3781%" y="597" width="0.5402%" height="15" fill="rgb(226,82,3)"/><text x="40.6281%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.41%)</title><rect x="40.5132%" y="581" width="0.4051%" height="15" fill="rgb(240,164,32)"/><text x="40.7632%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.20%)</title><rect x="40.7157%" y="565" width="0.2026%" height="15" fill="rgb(232,46,7)"/><text x="40.9657%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.20%)</title><rect x="40.7157%" y="549" width="0.2026%" height="15" fill="rgb(229,129,53)"/><text x="40.9657%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (11 samples, 0.74%)</title><rect x="40.3106%" y="645" width="0.7427%" height="15" fill="rgb(234,188,29)"/><text x="40.5606%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="40.9183%" y="629" width="0.1350%" height="15" fill="rgb(246,141,4)"/><text x="41.1683%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="40.9183%" y="613" width="0.1350%" height="15" fill="rgb(229,23,39)"/><text x="41.1683%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="40.9183%" y="597" width="0.1350%" height="15" fill="rgb(206,12,3)"/><text x="41.1683%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="40.9183%" y="581" width="0.1350%" height="15" fill="rgb(252,226,20)"/><text x="41.1683%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="40.9183%" y="565" width="0.1350%" height="15" fill="rgb(216,123,35)"/><text x="41.1683%" y="575.50"></text></g><g><title>core::fmt::write (13 samples, 0.88%)</title><rect x="40.2431%" y="661" width="0.8778%" height="15" fill="rgb(212,68,40)"/><text x="40.4931%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.47%)</title><rect x="41.1884%" y="645" width="0.4727%" height="15" fill="rgb(254,125,32)"/><text x="41.4384%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.41%)</title><rect x="41.2559%" y="629" width="0.4051%" height="15" fill="rgb(253,97,22)"/><text x="41.5059%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.81%)</title><rect x="41.1209%" y="661" width="0.8103%" height="15" fill="rgb(241,101,14)"/><text x="41.3709%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (4 samples, 0.27%)</title><rect x="41.6610%" y="645" width="0.2701%" height="15" fill="rgb(238,103,29)"/><text x="41.9110%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (4 samples, 0.27%)</title><rect x="41.6610%" y="629" width="0.2701%" height="15" fill="rgb(233,195,47)"/><text x="41.9110%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.27%)</title><rect x="41.6610%" y="613" width="0.2701%" height="15" fill="rgb(246,218,30)"/><text x="41.9110%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.27%)</title><rect x="41.6610%" y="597" width="0.2701%" height="15" fill="rgb(219,145,47)"/><text x="41.9110%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.20%)</title><rect x="41.7286%" y="581" width="0.2026%" height="15" fill="rgb(243,12,26)"/><text x="41.9786%" y="591.50"></text></g><g><title>decor_mem::views::Views::insert (29 samples, 1.96%)</title><rect x="40.0405%" y="693" width="1.9581%" height="15" fill="rgb(214,87,16)"/><text x="40.2905%" y="703.50">d..</text></g><g><title>decor_mem::views::View::insert_into_index (28 samples, 1.89%)</title><rect x="40.1080%" y="677" width="1.8906%" height="15" fill="rgb(208,99,42)"/><text x="40.3580%" y="687.50">d..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="42.3363%" y="645" width="0.1350%" height="15" fill="rgb(253,99,2)"/><text x="42.5863%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.14%)</title><rect x="42.3363%" y="629" width="0.1350%" height="15" fill="rgb(220,168,23)"/><text x="42.5863%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="42.3363%" y="613" width="0.1350%" height="15" fill="rgb(242,38,24)"/><text x="42.5863%" y="623.50"></text></g><g><title>core::fmt::write (6 samples, 0.41%)</title><rect x="42.2012%" y="677" width="0.4051%" height="15" fill="rgb(225,182,9)"/><text x="42.4512%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.27%)</title><rect x="42.3363%" y="661" width="0.2701%" height="15" fill="rgb(243,178,37)"/><text x="42.5863%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="42.4713%" y="645" width="0.1350%" height="15" fill="rgb(232,139,19)"/><text x="42.7213%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="42.6063%" y="677" width="0.1350%" height="15" fill="rgb(225,201,24)"/><text x="42.8563%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="42.9440%" y="661" width="0.1350%" height="15" fill="rgb(221,47,46)"/><text x="43.1940%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.14%)</title><rect x="42.9440%" y="645" width="0.1350%" height="15" fill="rgb(249,23,13)"/><text x="43.1940%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.34%)</title><rect x="43.2140%" y="613" width="0.3376%" height="15" fill="rgb(219,9,5)"/><text x="43.4640%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.34%)</title><rect x="43.2140%" y="597" width="0.3376%" height="15" fill="rgb(254,171,16)"/><text x="43.4640%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="43.4166%" y="581" width="0.1350%" height="15" fill="rgb(230,171,20)"/><text x="43.6666%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="43.4166%" y="565" width="0.1350%" height="15" fill="rgb(210,71,41)"/><text x="43.6666%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="43.4166%" y="549" width="0.1350%" height="15" fill="rgb(206,173,20)"/><text x="43.6666%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="43.4166%" y="533" width="0.1350%" height="15" fill="rgb(233,88,34)"/><text x="43.6666%" y="543.50"></text></g><g><title>decor_mem::select::expr_to_col (10 samples, 0.68%)</title><rect x="43.0790%" y="661" width="0.6752%" height="15" fill="rgb(223,209,46)"/><text x="43.3290%" y="671.50"></text></g><g><title>core::fmt::write (9 samples, 0.61%)</title><rect x="43.1465%" y="645" width="0.6077%" height="15" fill="rgb(250,43,18)"/><text x="43.3965%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.61%)</title><rect x="43.1465%" y="629" width="0.6077%" height="15" fill="rgb(208,13,10)"/><text x="43.3965%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="43.6192%" y="613" width="0.1350%" height="15" fill="rgb(212,200,36)"/><text x="43.8692%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.34%)</title><rect x="43.8893%" y="629" width="0.3376%" height="15" fill="rgb(225,90,30)"/><text x="44.1393%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.34%)</title><rect x="43.8893%" y="613" width="0.3376%" height="15" fill="rgb(236,182,39)"/><text x="44.1393%" y="623.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (24 samples, 1.62%)</title><rect x="42.7414%" y="677" width="1.6205%" height="15" fill="rgb(212,144,35)"/><text x="42.9914%" y="687.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (8 samples, 0.54%)</title><rect x="43.8217%" y="661" width="0.5402%" height="15" fill="rgb(228,63,44)"/><text x="44.0717%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.54%)</title><rect x="43.8217%" y="645" width="0.5402%" height="15" fill="rgb(228,109,6)"/><text x="44.0717%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (2 samples, 0.14%)</title><rect x="44.2269%" y="629" width="0.1350%" height="15" fill="rgb(238,117,24)"/><text x="44.4769%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.14%)</title><rect x="44.2269%" y="613" width="0.1350%" height="15" fill="rgb(242,26,26)"/><text x="44.4769%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (2 samples, 0.14%)</title><rect x="44.2269%" y="597" width="0.1350%" height="15" fill="rgb(221,92,48)"/><text x="44.4769%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="44.4970%" y="645" width="0.1350%" height="15" fill="rgb(209,209,32)"/><text x="44.7470%" y="655.50"></text></g><g><title>decor_mem::helpers::plus_parser_vals (4 samples, 0.27%)</title><rect x="44.4970%" y="661" width="0.2701%" height="15" fill="rgb(221,70,22)"/><text x="44.7470%" y="671.50"></text></g><g><title>core::num::dec2flt::dec2flt (2 samples, 0.14%)</title><rect x="44.6320%" y="645" width="0.1350%" height="15" fill="rgb(248,145,5)"/><text x="44.8820%" y="655.50"></text></g><g><title>&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (2 samples, 0.14%)</title><rect x="44.6320%" y="629" width="0.1350%" height="15" fill="rgb(226,116,26)"/><text x="44.8820%" y="639.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure::{{closure}} (7 samples, 0.47%)</title><rect x="44.3619%" y="677" width="0.4727%" height="15" fill="rgb(244,5,17)"/><text x="44.6119%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.41%)</title><rect x="44.8346%" y="613" width="0.4051%" height="15" fill="rgb(252,159,33)"/><text x="45.0846%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.41%)</title><rect x="44.8346%" y="597" width="0.4051%" height="15" fill="rgb(206,71,0)"/><text x="45.0846%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.27%)</title><rect x="44.9696%" y="581" width="0.2701%" height="15" fill="rgb(233,118,54)"/><text x="45.2196%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.27%)</title><rect x="44.9696%" y="565" width="0.2701%" height="15" fill="rgb(234,83,48)"/><text x="45.2196%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.20%)</title><rect x="45.0371%" y="549" width="0.2026%" height="15" fill="rgb(228,3,54)"/><text x="45.2871%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.20%)</title><rect x="45.0371%" y="533" width="0.2026%" height="15" fill="rgb(226,155,13)"/><text x="45.2871%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.20%)</title><rect x="45.0371%" y="517" width="0.2026%" height="15" fill="rgb(241,28,37)"/><text x="45.2871%" y="527.50"></text></g><g><title>decor_mem::select::expr_to_col (8 samples, 0.54%)</title><rect x="44.8346%" y="661" width="0.5402%" height="15" fill="rgb(233,93,10)"/><text x="45.0846%" y="671.50"></text></g><g><title>core::fmt::write (8 samples, 0.54%)</title><rect x="44.8346%" y="645" width="0.5402%" height="15" fill="rgb(225,113,19)"/><text x="45.0846%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.54%)</title><rect x="44.8346%" y="629" width="0.5402%" height="15" fill="rgb(241,2,18)"/><text x="45.0846%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="45.2397%" y="613" width="0.1350%" height="15" fill="rgb(228,207,21)"/><text x="45.4897%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="45.6448%" y="613" width="0.1350%" height="15" fill="rgb(213,211,35)"/><text x="45.8948%" y="623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.27%)</title><rect x="46.0500%" y="565" width="0.2701%" height="15" fill="rgb(209,83,10)"/><text x="46.3000%" y="575.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.20%)</title><rect x="46.1175%" y="549" width="0.2026%" height="15" fill="rgb(209,164,1)"/><text x="46.3675%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.20%)</title><rect x="46.3201%" y="549" width="0.2026%" height="15" fill="rgb(213,184,43)"/><text x="46.5701%" y="559.50"></text></g><g><title>alloc::string::String::push (5 samples, 0.34%)</title><rect x="46.3201%" y="565" width="0.3376%" height="15" fill="rgb(231,61,34)"/><text x="46.5701%" y="575.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.14%)</title><rect x="46.5226%" y="549" width="0.1350%" height="15" fill="rgb(235,75,3)"/><text x="46.7726%" y="559.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.14%)</title><rect x="46.5226%" y="533" width="0.1350%" height="15" fill="rgb(220,106,47)"/><text x="46.7726%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (30 samples, 2.03%)</title><rect x="45.9824%" y="581" width="2.0257%" height="15" fill="rgb(210,196,33)"/><text x="46.2324%" y="591.50">a..</text></g><g><title>core::unicode::unicode_data::conversions::to_upper (18 samples, 1.22%)</title><rect x="46.7927%" y="565" width="1.2154%" height="15" fill="rgb(229,154,42)"/><text x="47.0427%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (13 samples, 0.88%)</title><rect x="47.1303%" y="549" width="0.8778%" height="15" fill="rgb(228,114,26)"/><text x="47.3803%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (13 samples, 0.88%)</title><rect x="47.1303%" y="533" width="0.8778%" height="15" fill="rgb(208,144,1)"/><text x="47.3803%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (7 samples, 0.47%)</title><rect x="47.5354%" y="517" width="0.4727%" height="15" fill="rgb(239,112,37)"/><text x="47.7854%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (34 samples, 2.30%)</title><rect x="45.7799%" y="613" width="2.2957%" height="15" fill="rgb(210,96,50)"/><text x="46.0299%" y="623.50">&lt;..</text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (34 samples, 2.30%)</title><rect x="45.7799%" y="597" width="2.2957%" height="15" fill="rgb(222,178,2)"/><text x="46.0299%" y="607.50">s..</text></g><g><title>__GI___libc_realloc (3 samples, 0.20%)</title><rect x="48.1431%" y="597" width="0.2026%" height="15" fill="rgb(226,74,18)"/><text x="48.3931%" y="607.50"></text></g><g><title>core::fmt::write (43 samples, 2.90%)</title><rect x="45.5773%" y="645" width="2.9034%" height="15" fill="rgb(225,67,54)"/><text x="45.8273%" y="655.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (43 samples, 2.90%)</title><rect x="45.5773%" y="629" width="2.9034%" height="15" fill="rgb(251,92,32)"/><text x="45.8273%" y="639.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.41%)</title><rect x="48.0756%" y="613" width="0.4051%" height="15" fill="rgb(228,149,22)"/><text x="48.3256%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="48.6158%" y="581" width="0.1350%" height="15" fill="rgb(243,54,13)"/><text x="48.8658%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="48.6158%" y="565" width="0.1350%" height="15" fill="rgb(243,180,28)"/><text x="48.8658%" y="575.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="48.6158%" y="549" width="0.1350%" height="15" fill="rgb(208,167,24)"/><text x="48.8658%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="48.6158%" y="533" width="0.1350%" height="15" fill="rgb(245,73,45)"/><text x="48.8658%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="48.6158%" y="517" width="0.1350%" height="15" fill="rgb(237,203,48)"/><text x="48.8658%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.14%)</title><rect x="48.6158%" y="501" width="0.1350%" height="15" fill="rgb(211,197,16)"/><text x="48.8658%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="48.6158%" y="485" width="0.1350%" height="15" fill="rgb(243,99,51)"/><text x="48.8658%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="48.6158%" y="469" width="0.1350%" height="15" fill="rgb(215,123,29)"/><text x="48.8658%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.20%)</title><rect x="48.8184%" y="405" width="0.2026%" height="15" fill="rgb(239,186,37)"/><text x="49.0684%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (3 samples, 0.20%)</title><rect x="48.8184%" y="389" width="0.2026%" height="15" fill="rgb(252,136,39)"/><text x="49.0684%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.20%)</title><rect x="48.8184%" y="373" width="0.2026%" height="15" fill="rgb(223,213,32)"/><text x="49.0684%" y="383.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.20%)</title><rect x="48.8184%" y="357" width="0.2026%" height="15" fill="rgb(233,115,5)"/><text x="49.0684%" y="367.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.20%)</title><rect x="48.8184%" y="341" width="0.2026%" height="15" fill="rgb(207,226,44)"/><text x="49.0684%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.34%)</title><rect x="48.7508%" y="565" width="0.3376%" height="15" fill="rgb(208,126,0)"/><text x="49.0008%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.27%)</title><rect x="48.8184%" y="549" width="0.2701%" height="15" fill="rgb(244,66,21)"/><text x="49.0684%" y="559.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.27%)</title><rect x="48.8184%" y="533" width="0.2701%" height="15" fill="rgb(222,97,12)"/><text x="49.0684%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.27%)</title><rect x="48.8184%" y="517" width="0.2701%" height="15" fill="rgb(219,213,19)"/><text x="49.0684%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.27%)</title><rect x="48.8184%" y="501" width="0.2701%" height="15" fill="rgb(252,169,30)"/><text x="49.0684%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (4 samples, 0.27%)</title><rect x="48.8184%" y="485" width="0.2701%" height="15" fill="rgb(206,32,51)"/><text x="49.0684%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.27%)</title><rect x="48.8184%" y="469" width="0.2701%" height="15" fill="rgb(250,172,42)"/><text x="49.0684%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.27%)</title><rect x="48.8184%" y="453" width="0.2701%" height="15" fill="rgb(209,34,43)"/><text x="49.0684%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.27%)</title><rect x="48.8184%" y="437" width="0.2701%" height="15" fill="rgb(223,11,35)"/><text x="49.0684%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.27%)</title><rect x="48.8184%" y="421" width="0.2701%" height="15" fill="rgb(251,219,26)"/><text x="49.0684%" y="431.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.20%)</title><rect x="49.6286%" y="517" width="0.2026%" height="15" fill="rgb(231,119,3)"/><text x="49.8786%" y="527.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.14%)</title><rect x="49.6962%" y="501" width="0.1350%" height="15" fill="rgb(216,97,11)"/><text x="49.9462%" y="511.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.14%)</title><rect x="49.6962%" y="485" width="0.1350%" height="15" fill="rgb(223,59,9)"/><text x="49.9462%" y="495.50"></text></g><g><title>alloc::string::String::with_capacity (3 samples, 0.20%)</title><rect x="49.8312%" y="517" width="0.2026%" height="15" fill="rgb(233,93,31)"/><text x="50.0812%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="49.8987%" y="501" width="0.1350%" height="15" fill="rgb(239,81,33)"/><text x="50.1487%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="49.8987%" y="485" width="0.1350%" height="15" fill="rgb(213,120,34)"/><text x="50.1487%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="49.8987%" y="469" width="0.1350%" height="15" fill="rgb(243,49,53)"/><text x="50.1487%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="49.8987%" y="453" width="0.1350%" height="15" fill="rgb(247,216,33)"/><text x="50.1487%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="49.8987%" y="437" width="0.1350%" height="15" fill="rgb(226,26,14)"/><text x="50.1487%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="49.8987%" y="421" width="0.1350%" height="15" fill="rgb(215,49,53)"/><text x="50.1487%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="49.8987%" y="405" width="0.1350%" height="15" fill="rgb(245,162,40)"/><text x="50.1487%" y="415.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (21 samples, 1.42%)</title><rect x="49.3585%" y="533" width="1.4180%" height="15" fill="rgb(229,68,17)"/><text x="49.6085%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (11 samples, 0.74%)</title><rect x="50.0338%" y="517" width="0.7427%" height="15" fill="rgb(213,182,10)"/><text x="50.2838%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (9 samples, 0.61%)</title><rect x="50.1688%" y="501" width="0.6077%" height="15" fill="rgb(245,125,30)"/><text x="50.4188%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 0.61%)</title><rect x="50.1688%" y="485" width="0.6077%" height="15" fill="rgb(232,202,2)"/><text x="50.4188%" y="495.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="50.6415%" y="469" width="0.1350%" height="15" fill="rgb(237,140,51)"/><text x="50.8915%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (28 samples, 1.89%)</title><rect x="49.0885%" y="565" width="1.8906%" height="15" fill="rgb(236,157,25)"/><text x="49.3385%" y="575.50">&lt;..</text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (28 samples, 1.89%)</title><rect x="49.0885%" y="549" width="1.8906%" height="15" fill="rgb(219,209,0)"/><text x="49.3385%" y="559.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.20%)</title><rect x="50.7765%" y="533" width="0.2026%" height="15" fill="rgb(240,116,54)"/><text x="51.0265%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.14%)</title><rect x="50.8440%" y="517" width="0.1350%" height="15" fill="rgb(216,10,36)"/><text x="51.0940%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="50.8440%" y="501" width="0.1350%" height="15" fill="rgb(222,72,44)"/><text x="51.0940%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="51.1141%" y="549" width="0.1350%" height="15" fill="rgb(232,159,9)"/><text x="51.3641%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.34%)</title><rect x="51.3167%" y="533" width="0.3376%" height="15" fill="rgb(210,39,32)"/><text x="51.5667%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="51.4517%" y="517" width="0.2026%" height="15" fill="rgb(216,194,45)"/><text x="51.7017%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="51.5192%" y="501" width="0.1350%" height="15" fill="rgb(218,18,35)"/><text x="51.7692%" y="511.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure (102 samples, 6.89%)</title><rect x="44.8346%" y="677" width="6.8872%" height="15" fill="rgb(207,83,51)"/><text x="45.0846%" y="687.50">decor_mem..</text></g><g><title>decor_mem::select::tablecolumn_matches_col (94 samples, 6.35%)</title><rect x="45.3747%" y="661" width="6.3471%" height="15" fill="rgb(225,63,43)"/><text x="45.6247%" y="671.50">decor_me..</text></g><g><title>decor_mem::views::TableColumnDef::name (48 samples, 3.24%)</title><rect x="48.4808%" y="645" width="3.2411%" height="15" fill="rgb(207,57,36)"/><text x="48.7308%" y="655.50">dec..</text></g><g><title>alloc::fmt::format (48 samples, 3.24%)</title><rect x="48.4808%" y="629" width="3.2411%" height="15" fill="rgb(216,99,33)"/><text x="48.7308%" y="639.50">all..</text></g><g><title>core::fmt::Write::write_fmt (48 samples, 3.24%)</title><rect x="48.4808%" y="613" width="3.2411%" height="15" fill="rgb(225,42,16)"/><text x="48.7308%" y="623.50">cor..</text></g><g><title>core::fmt::write (48 samples, 3.24%)</title><rect x="48.4808%" y="597" width="3.2411%" height="15" fill="rgb(220,201,45)"/><text x="48.7308%" y="607.50">cor..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (44 samples, 2.97%)</title><rect x="48.7508%" y="581" width="2.9710%" height="15" fill="rgb(225,33,4)"/><text x="49.0008%" y="591.50">&lt;sq..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.61%)</title><rect x="51.1141%" y="565" width="0.6077%" height="15" fill="rgb(224,33,50)"/><text x="51.3641%" y="575.50"></text></g><g><title>core::fmt::write (7 samples, 0.47%)</title><rect x="51.2492%" y="549" width="0.4727%" height="15" fill="rgb(246,198,51)"/><text x="51.4992%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.41%)</title><rect x="51.8569%" y="629" width="0.4051%" height="15" fill="rgb(205,22,4)"/><text x="52.1069%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.41%)</title><rect x="51.8569%" y="613" width="0.4051%" height="15" fill="rgb(206,3,8)"/><text x="52.1069%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.41%)</title><rect x="51.8569%" y="597" width="0.4051%" height="15" fill="rgb(251,23,15)"/><text x="52.1069%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.20%)</title><rect x="52.0594%" y="581" width="0.2026%" height="15" fill="rgb(252,88,28)"/><text x="52.3094%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.61%)</title><rect x="51.8569%" y="645" width="0.6077%" height="15" fill="rgb(212,127,14)"/><text x="52.1069%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.20%)</title><rect x="52.2620%" y="629" width="0.2026%" height="15" fill="rgb(247,145,37)"/><text x="52.5120%" y="639.50"></text></g><g><title>core::fmt::write (11 samples, 0.74%)</title><rect x="51.8569%" y="661" width="0.7427%" height="15" fill="rgb(209,117,53)"/><text x="52.1069%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.14%)</title><rect x="52.4646%" y="645" width="0.1350%" height="15" fill="rgb(212,90,42)"/><text x="52.7146%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="52.4646%" y="629" width="0.1350%" height="15" fill="rgb(218,164,37)"/><text x="52.7146%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.34%)</title><rect x="52.5996%" y="661" width="0.3376%" height="15" fill="rgb(246,65,34)"/><text x="52.8496%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (4 samples, 0.27%)</title><rect x="52.6671%" y="645" width="0.2701%" height="15" fill="rgb(231,100,33)"/><text x="52.9171%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (4 samples, 0.27%)</title><rect x="52.6671%" y="629" width="0.2701%" height="15" fill="rgb(228,126,14)"/><text x="52.9171%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.27%)</title><rect x="52.6671%" y="613" width="0.2701%" height="15" fill="rgb(215,173,21)"/><text x="52.9171%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.27%)</title><rect x="52.6671%" y="597" width="0.2701%" height="15" fill="rgb(210,6,40)"/><text x="52.9171%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.27%)</title><rect x="52.6671%" y="581" width="0.2701%" height="15" fill="rgb(212,48,18)"/><text x="52.9171%" y="591.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (446 samples, 30.11%)</title><rect x="23.0925%" y="725" width="30.1148%" height="15" fill="rgb(230,214,11)"/><text x="23.3425%" y="735.50">decor_mem::query_transformer::QueryTransformer::q..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (446 samples, 30.11%)</title><rect x="23.0925%" y="709" width="30.1148%" height="15" fill="rgb(254,105,39)"/><text x="23.3425%" y="719.50">decor_mem::query_transformer::QueryTransformer::i..</text></g><g><title>decor_mem::views::Views::update (166 samples, 11.21%)</title><rect x="41.9986%" y="693" width="11.2086%" height="15" fill="rgb(245,158,5)"/><text x="42.2486%" y="703.50">decor_mem::views..</text></g><g><title>decor_mem::views::View::update_index (22 samples, 1.49%)</title><rect x="51.7218%" y="677" width="1.4855%" height="15" fill="rgb(249,208,11)"/><text x="51.9718%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (4 samples, 0.27%)</title><rect x="52.9372%" y="661" width="0.2701%" height="15" fill="rgb(210,39,28)"/><text x="53.1872%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.27%)</title><rect x="52.9372%" y="645" width="0.2701%" height="15" fill="rgb(211,56,53)"/><text x="53.1872%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.27%)</title><rect x="52.9372%" y="629" width="0.2701%" height="15" fill="rgb(226,201,30)"/><text x="53.1872%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.27%)</title><rect x="53.2073%" y="693" width="0.2701%" height="15" fill="rgb(239,101,34)"/><text x="53.4573%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="53.2748%" y="677" width="0.2026%" height="15" fill="rgb(226,209,5)"/><text x="53.5248%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="53.3423%" y="661" width="0.1350%" height="15" fill="rgb(250,105,47)"/><text x="53.5923%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="53.4774%" y="693" width="0.1350%" height="15" fill="rgb(230,72,3)"/><text x="53.7274%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="53.4774%" y="677" width="0.1350%" height="15" fill="rgb(232,218,39)"/><text x="53.7274%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (8 samples, 0.54%)</title><rect x="53.2073%" y="709" width="0.5402%" height="15" fill="rgb(248,166,6)"/><text x="53.4573%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.14%)</title><rect x="54.1526%" y="645" width="0.1350%" height="15" fill="rgb(247,89,20)"/><text x="54.4026%" y="655.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (9 samples, 0.61%)</title><rect x="53.8150%" y="661" width="0.6077%" height="15" fill="rgb(248,130,54)"/><text x="54.0650%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="54.2876%" y="645" width="0.1350%" height="15" fill="rgb(234,196,4)"/><text x="54.5376%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="54.2876%" y="629" width="0.1350%" height="15" fill="rgb(250,143,31)"/><text x="54.5376%" y="639.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (11 samples, 0.74%)</title><rect x="53.7475%" y="677" width="0.7427%" height="15" fill="rgb(211,110,34)"/><text x="53.9975%" y="687.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (20 samples, 1.35%)</title><rect x="53.2073%" y="725" width="1.3504%" height="15" fill="rgb(215,124,48)"/><text x="53.4573%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (12 samples, 0.81%)</title><rect x="53.7475%" y="709" width="0.8103%" height="15" fill="rgb(216,46,13)"/><text x="53.9975%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (12 samples, 0.81%)</title><rect x="53.7475%" y="693" width="0.8103%" height="15" fill="rgb(205,184,25)"/><text x="53.9975%" y="703.50"></text></g><g><title>malloc_consolidate (4 samples, 0.27%)</title><rect x="54.7603%" y="613" width="0.2701%" height="15" fill="rgb(228,1,10)"/><text x="55.0103%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.54%)</title><rect x="54.5577%" y="677" width="0.5402%" height="15" fill="rgb(213,116,27)"/><text x="54.8077%" y="687.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.54%)</title><rect x="54.5577%" y="661" width="0.5402%" height="15" fill="rgb(241,95,50)"/><text x="54.8077%" y="671.50"></text></g><g><title>_int_realloc (8 samples, 0.54%)</title><rect x="54.5577%" y="645" width="0.5402%" height="15" fill="rgb(238,48,32)"/><text x="54.8077%" y="655.50"></text></g><g><title>_int_malloc (8 samples, 0.54%)</title><rect x="54.5577%" y="629" width="0.5402%" height="15" fill="rgb(235,113,49)"/><text x="54.8077%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="55.7056%" y="661" width="0.1350%" height="15" fill="rgb(205,127,43)"/><text x="55.9556%" y="671.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.14%)</title><rect x="55.8406%" y="661" width="0.1350%" height="15" fill="rgb(250,162,2)"/><text x="56.0906%" y="671.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.27%)</title><rect x="58.3390%" y="645" width="0.2701%" height="15" fill="rgb(220,13,41)"/><text x="58.5890%" y="655.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="58.4065%" y="629" width="0.2026%" height="15" fill="rgb(249,221,25)"/><text x="58.6565%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.74%)</title><rect x="58.6090%" y="645" width="0.7427%" height="15" fill="rgb(215,208,19)"/><text x="58.8590%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="59.4868%" y="629" width="0.1350%" height="15" fill="rgb(236,175,2)"/><text x="59.7368%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.34%)</title><rect x="59.6219%" y="613" width="0.3376%" height="15" fill="rgb(241,52,2)"/><text x="59.8719%" y="623.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.41%)</title><rect x="59.6219%" y="629" width="0.4051%" height="15" fill="rgb(248,140,14)"/><text x="59.8719%" y="639.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (84 samples, 5.67%)</title><rect x="55.9757%" y="661" width="5.6718%" height="15" fill="rgb(253,22,42)"/><text x="56.2257%" y="671.50">sql_par..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (33 samples, 2.23%)</title><rect x="59.4193%" y="645" width="2.2282%" height="15" fill="rgb(234,61,47)"/><text x="59.6693%" y="655.50">a..</text></g><g><title>core::unicode::unicode_data::conversions::to_upper (23 samples, 1.55%)</title><rect x="60.0945%" y="629" width="1.5530%" height="15" fill="rgb(208,226,15)"/><text x="60.3445%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (20 samples, 1.35%)</title><rect x="60.2971%" y="613" width="1.3504%" height="15" fill="rgb(217,221,4)"/><text x="60.5471%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (20 samples, 1.35%)</title><rect x="60.2971%" y="597" width="1.3504%" height="15" fill="rgb(212,174,34)"/><text x="60.5471%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (14 samples, 0.95%)</title><rect x="60.7022%" y="581" width="0.9453%" height="15" fill="rgb(253,83,4)"/><text x="60.9522%" y="591.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.20%)</title><rect x="61.9176%" y="629" width="0.2026%" height="15" fill="rgb(250,195,49)"/><text x="62.1676%" y="639.50"></text></g><g><title>_int_realloc (2 samples, 0.14%)</title><rect x="61.9851%" y="613" width="0.1350%" height="15" fill="rgb(241,192,25)"/><text x="62.2351%" y="623.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (584 samples, 39.43%)</title><rect x="22.7549%" y="757" width="39.4328%" height="15" fill="rgb(208,124,10)"/><text x="23.0049%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (579 samples, 39.10%)</title><rect x="23.0925%" y="741" width="39.0952%" height="15" fill="rgb(222,33,0)"/><text x="23.3425%" y="751.50">&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query</text></g><g><title>decor_mem::stats::get_qtype (113 samples, 7.63%)</title><rect x="54.5577%" y="725" width="7.6300%" height="15" fill="rgb(234,209,28)"/><text x="54.8077%" y="735.50">decor_mem:..</text></g><g><title>sql_parser::parser::parse_statements (113 samples, 7.63%)</title><rect x="54.5577%" y="709" width="7.6300%" height="15" fill="rgb(224,11,23)"/><text x="54.8077%" y="719.50">sql_parser..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (113 samples, 7.63%)</title><rect x="54.5577%" y="693" width="7.6300%" height="15" fill="rgb(232,99,1)"/><text x="54.8077%" y="703.50">sql_parser..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (105 samples, 7.09%)</title><rect x="55.0979%" y="677" width="7.0898%" height="15" fill="rgb(237,95,45)"/><text x="55.3479%" y="687.50">sql_parser..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (8 samples, 0.54%)</title><rect x="61.6475%" y="661" width="0.5402%" height="15" fill="rgb(208,109,11)"/><text x="61.8975%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.27%)</title><rect x="61.9176%" y="645" width="0.2701%" height="15" fill="rgb(216,190,48)"/><text x="62.1676%" y="655.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.14%)</title><rect x="62.3228%" y="757" width="0.1350%" height="15" fill="rgb(251,171,36)"/><text x="62.5728%" y="767.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.14%)</title><rect x="62.3228%" y="741" width="0.1350%" height="15" fill="rgb(230,62,22)"/><text x="62.5728%" y="751.50"></text></g><g><title>regex::compile::Compiler::c (2 samples, 0.14%)</title><rect x="62.3228%" y="725" width="0.1350%" height="15" fill="rgb(225,114,35)"/><text x="62.5728%" y="735.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (2 samples, 0.14%)</title><rect x="62.3228%" y="709" width="0.1350%" height="15" fill="rgb(215,118,42)"/><text x="62.5728%" y="719.50"></text></g><g><title>regex::compile::Compiler::c_class (2 samples, 0.14%)</title><rect x="62.3228%" y="693" width="0.1350%" height="15" fill="rgb(243,119,21)"/><text x="62.5728%" y="703.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (2 samples, 0.14%)</title><rect x="62.3228%" y="677" width="0.1350%" height="15" fill="rgb(252,177,53)"/><text x="62.5728%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.34%)</title><rect x="62.5253%" y="693" width="0.3376%" height="15" fill="rgb(237,209,29)"/><text x="62.7753%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (5 samples, 0.34%)</title><rect x="62.5253%" y="677" width="0.3376%" height="15" fill="rgb(212,65,23)"/><text x="62.7753%" y="687.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.20%)</title><rect x="62.6604%" y="661" width="0.2026%" height="15" fill="rgb(230,222,46)"/><text x="62.9104%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.14%)</title><rect x="62.7279%" y="645" width="0.1350%" height="15" fill="rgb(215,135,32)"/><text x="62.9779%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="62.7279%" y="629" width="0.1350%" height="15" fill="rgb(246,101,22)"/><text x="62.9779%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="62.7279%" y="613" width="0.1350%" height="15" fill="rgb(206,107,13)"/><text x="62.9779%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="62.7279%" y="597" width="0.1350%" height="15" fill="rgb(250,100,44)"/><text x="62.9779%" y="607.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="62.7279%" y="581" width="0.1350%" height="15" fill="rgb(231,147,38)"/><text x="62.9779%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="62.7279%" y="565" width="0.1350%" height="15" fill="rgb(229,8,40)"/><text x="62.9779%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="62.7279%" y="549" width="0.1350%" height="15" fill="rgb(221,135,30)"/><text x="62.9779%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.14%)</title><rect x="62.7279%" y="533" width="0.1350%" height="15" fill="rgb(249,193,18)"/><text x="62.9779%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.14%)</title><rect x="62.7279%" y="517" width="0.1350%" height="15" fill="rgb(209,133,39)"/><text x="62.9779%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="62.7279%" y="501" width="0.1350%" height="15" fill="rgb(232,100,14)"/><text x="62.9779%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.14%)</title><rect x="62.7279%" y="485" width="0.1350%" height="15" fill="rgb(224,185,1)"/><text x="62.9779%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.14%)</title><rect x="62.7279%" y="469" width="0.1350%" height="15" fill="rgb(223,139,8)"/><text x="62.9779%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.14%)</title><rect x="62.7279%" y="453" width="0.1350%" height="15" fill="rgb(232,213,38)"/><text x="62.9779%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (6 samples, 0.41%)</title><rect x="62.5253%" y="741" width="0.4051%" height="15" fill="rgb(207,94,22)"/><text x="62.7753%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (6 samples, 0.41%)</title><rect x="62.5253%" y="725" width="0.4051%" height="15" fill="rgb(219,183,54)"/><text x="62.7753%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (6 samples, 0.41%)</title><rect x="62.5253%" y="709" width="0.4051%" height="15" fill="rgb(216,185,54)"/><text x="62.7753%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="62.9980%" y="677" width="0.1350%" height="15" fill="rgb(254,217,39)"/><text x="63.2480%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 1.89%)</title><rect x="63.1330%" y="645" width="1.8906%" height="15" fill="rgb(240,178,23)"/><text x="63.3830%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 1.89%)</title><rect x="63.1330%" y="629" width="1.8906%" height="15" fill="rgb(218,11,47)"/><text x="63.3830%" y="639.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 1.89%)</title><rect x="63.1330%" y="613" width="1.8906%" height="15" fill="rgb(218,51,51)"/><text x="63.3830%" y="623.50">a..</text></g><g><title>alloc::slice::hack::to_vec (28 samples, 1.89%)</title><rect x="63.1330%" y="597" width="1.8906%" height="15" fill="rgb(238,126,27)"/><text x="63.3830%" y="607.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (28 samples, 1.89%)</title><rect x="63.1330%" y="581" width="1.8906%" height="15" fill="rgb(249,202,22)"/><text x="63.3830%" y="591.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28 samples, 1.89%)</title><rect x="63.1330%" y="565" width="1.8906%" height="15" fill="rgb(254,195,49)"/><text x="63.3830%" y="575.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (28 samples, 1.89%)</title><rect x="63.1330%" y="549" width="1.8906%" height="15" fill="rgb(208,123,14)"/><text x="63.3830%" y="559.50">a..</text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 1.89%)</title><rect x="63.1330%" y="533" width="1.8906%" height="15" fill="rgb(224,200,8)"/><text x="63.3830%" y="543.50">c..</text></g><g><title>__memmove_avx_unaligned_erms (28 samples, 1.89%)</title><rect x="63.1330%" y="517" width="1.8906%" height="15" fill="rgb(217,61,36)"/><text x="63.3830%" y="527.50">_..</text></g><g><title>sql_parser::parser::Parser::parse_data_type (29 samples, 1.96%)</title><rect x="63.1330%" y="677" width="1.9581%" height="15" fill="rgb(206,35,45)"/><text x="63.3830%" y="687.50">s..</text></g><g><title>sql_parser::parser::Parser::expected (29 samples, 1.96%)</title><rect x="63.1330%" y="661" width="1.9581%" height="15" fill="rgb(217,65,33)"/><text x="63.3830%" y="671.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.14%)</title><rect x="65.0912%" y="677" width="0.1350%" height="15" fill="rgb(222,158,48)"/><text x="65.3412%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (43 samples, 2.90%)</title><rect x="62.4578%" y="757" width="2.9034%" height="15" fill="rgb(254,2,54)"/><text x="62.7078%" y="767.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (36 samples, 2.43%)</title><rect x="62.9305%" y="741" width="2.4308%" height="15" fill="rgb(250,143,38)"/><text x="63.1805%" y="751.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (36 samples, 2.43%)</title><rect x="62.9305%" y="725" width="2.4308%" height="15" fill="rgb(248,25,0)"/><text x="63.1805%" y="735.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (36 samples, 2.43%)</title><rect x="62.9305%" y="709" width="2.4308%" height="15" fill="rgb(206,152,27)"/><text x="63.1805%" y="719.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (36 samples, 2.43%)</title><rect x="62.9305%" y="693" width="2.4308%" height="15" fill="rgb(240,77,30)"/><text x="63.1805%" y="703.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_value (2 samples, 0.14%)</title><rect x="65.2262%" y="677" width="0.1350%" height="15" fill="rgb(231,5,3)"/><text x="65.4762%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="65.5638%" y="661" width="0.2026%" height="15" fill="rgb(207,226,32)"/><text x="65.8138%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="65.5638%" y="645" width="0.2026%" height="15" fill="rgb(222,207,47)"/><text x="65.8138%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.20%)</title><rect x="65.5638%" y="629" width="0.2026%" height="15" fill="rgb(229,115,45)"/><text x="65.8138%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.20%)</title><rect x="65.5638%" y="613" width="0.2026%" height="15" fill="rgb(224,191,6)"/><text x="65.8138%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="65.5638%" y="597" width="0.2026%" height="15" fill="rgb(230,227,24)"/><text x="65.8138%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="65.5638%" y="581" width="0.2026%" height="15" fill="rgb(228,80,19)"/><text x="65.8138%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.20%)</title><rect x="65.5638%" y="565" width="0.2026%" height="15" fill="rgb(247,229,0)"/><text x="65.8138%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.20%)</title><rect x="65.5638%" y="549" width="0.2026%" height="15" fill="rgb(237,194,15)"/><text x="65.8138%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.20%)</title><rect x="65.5638%" y="533" width="0.2026%" height="15" fill="rgb(219,203,20)"/><text x="65.8138%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.20%)</title><rect x="65.5638%" y="517" width="0.2026%" height="15" fill="rgb(234,128,8)"/><text x="65.8138%" y="527.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.20%)</title><rect x="65.5638%" y="501" width="0.2026%" height="15" fill="rgb(248,202,8)"/><text x="65.8138%" y="511.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="65.5638%" y="485" width="0.2026%" height="15" fill="rgb(206,104,37)"/><text x="65.8138%" y="495.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="65.5638%" y="469" width="0.2026%" height="15" fill="rgb(223,8,27)"/><text x="65.8138%" y="479.50"></text></g><g><title>sysmalloc (2 samples, 0.14%)</title><rect x="65.6313%" y="453" width="0.1350%" height="15" fill="rgb(216,217,28)"/><text x="65.8813%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (4 samples, 0.27%)</title><rect x="65.5638%" y="757" width="0.2701%" height="15" fill="rgb(249,199,1)"/><text x="65.8138%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.27%)</title><rect x="65.5638%" y="741" width="0.2701%" height="15" fill="rgb(240,85,17)"/><text x="65.8138%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.27%)</title><rect x="65.5638%" y="725" width="0.2701%" height="15" fill="rgb(206,108,45)"/><text x="65.8138%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.27%)</title><rect x="65.5638%" y="709" width="0.2701%" height="15" fill="rgb(245,210,41)"/><text x="65.8138%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.27%)</title><rect x="65.5638%" y="693" width="0.2701%" height="15" fill="rgb(206,13,37)"/><text x="65.8138%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.27%)</title><rect x="65.5638%" y="677" width="0.2701%" height="15" fill="rgb(250,61,18)"/><text x="65.8138%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (2 samples, 0.14%)</title><rect x="65.8339%" y="693" width="0.1350%" height="15" fill="rgb(235,172,48)"/><text x="66.0839%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (9 samples, 0.61%)</title><rect x="65.8339%" y="725" width="0.6077%" height="15" fill="rgb(249,201,17)"/><text x="66.0839%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (9 samples, 0.61%)</title><rect x="65.8339%" y="709" width="0.6077%" height="15" fill="rgb(219,208,6)"/><text x="66.0839%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (7 samples, 0.47%)</title><rect x="65.9689%" y="693" width="0.4727%" height="15" fill="rgb(248,31,23)"/><text x="66.2189%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="66.4416%" y="709" width="0.1350%" height="15" fill="rgb(245,15,42)"/><text x="66.6916%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="66.4416%" y="693" width="0.1350%" height="15" fill="rgb(222,217,39)"/><text x="66.6916%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="66.4416%" y="677" width="0.1350%" height="15" fill="rgb(210,219,27)"/><text x="66.6916%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="66.4416%" y="661" width="0.1350%" height="15" fill="rgb(252,166,36)"/><text x="66.6916%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="66.4416%" y="645" width="0.1350%" height="15" fill="rgb(245,132,34)"/><text x="66.6916%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="66.4416%" y="629" width="0.1350%" height="15" fill="rgb(236,54,3)"/><text x="66.6916%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="66.4416%" y="613" width="0.1350%" height="15" fill="rgb(241,173,43)"/><text x="66.6916%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.14%)</title><rect x="66.4416%" y="597" width="0.1350%" height="15" fill="rgb(215,190,9)"/><text x="66.6916%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (4 samples, 0.27%)</title><rect x="66.7117%" y="709" width="0.2701%" height="15" fill="rgb(242,101,16)"/><text x="66.9617%" y="719.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.27%)</title><rect x="66.7117%" y="693" width="0.2701%" height="15" fill="rgb(223,190,21)"/><text x="66.9617%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (4 samples, 0.27%)</title><rect x="66.7117%" y="677" width="0.2701%" height="15" fill="rgb(215,228,25)"/><text x="66.9617%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (3 samples, 0.20%)</title><rect x="66.7792%" y="661" width="0.2026%" height="15" fill="rgb(225,36,22)"/><text x="67.0292%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="67.6570%" y="629" width="0.1350%" height="15" fill="rgb(251,106,46)"/><text x="67.9070%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="67.6570%" y="613" width="0.1350%" height="15" fill="rgb(208,90,1)"/><text x="67.9070%" y="623.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="67.6570%" y="597" width="0.1350%" height="15" fill="rgb(243,10,4)"/><text x="67.9070%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="67.6570%" y="581" width="0.1350%" height="15" fill="rgb(212,137,27)"/><text x="67.9070%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="67.6570%" y="565" width="0.1350%" height="15" fill="rgb(231,220,49)"/><text x="67.9070%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.14%)</title><rect x="67.6570%" y="549" width="0.1350%" height="15" fill="rgb(237,96,20)"/><text x="67.9070%" y="559.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.41%)</title><rect x="67.5219%" y="677" width="0.4051%" height="15" fill="rgb(239,229,30)"/><text x="67.7719%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.27%)</title><rect x="67.6570%" y="661" width="0.2701%" height="15" fill="rgb(219,65,33)"/><text x="67.9070%" y="671.50"></text></g><g><title>core::fmt::write (4 samples, 0.27%)</title><rect x="67.6570%" y="645" width="0.2701%" height="15" fill="rgb(243,134,7)"/><text x="67.9070%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (15 samples, 1.01%)</title><rect x="66.9818%" y="709" width="1.0128%" height="15" fill="rgb(216,177,54)"/><text x="67.2318%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (10 samples, 0.68%)</title><rect x="67.3194%" y="693" width="0.6752%" height="15" fill="rgb(211,160,20)"/><text x="67.5694%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (4 samples, 0.27%)</title><rect x="67.9946%" y="693" width="0.2701%" height="15" fill="rgb(239,85,39)"/><text x="68.2446%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="68.0621%" y="677" width="0.2026%" height="15" fill="rgb(232,125,22)"/><text x="68.3121%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="68.0621%" y="661" width="0.2026%" height="15" fill="rgb(244,57,34)"/><text x="68.3121%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.20%)</title><rect x="68.0621%" y="645" width="0.2026%" height="15" fill="rgb(214,203,32)"/><text x="68.3121%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.20%)</title><rect x="68.0621%" y="629" width="0.2026%" height="15" fill="rgb(207,58,43)"/><text x="68.3121%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="68.0621%" y="613" width="0.2026%" height="15" fill="rgb(215,193,15)"/><text x="68.3121%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.20%)</title><rect x="68.0621%" y="597" width="0.2026%" height="15" fill="rgb(232,15,44)"/><text x="68.3121%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.20%)</title><rect x="68.0621%" y="581" width="0.2026%" height="15" fill="rgb(212,3,48)"/><text x="68.3121%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.20%)</title><rect x="68.0621%" y="565" width="0.2026%" height="15" fill="rgb(218,128,7)"/><text x="68.3121%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.20%)</title><rect x="68.0621%" y="549" width="0.2026%" height="15" fill="rgb(226,216,39)"/><text x="68.3121%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.20%)</title><rect x="68.0621%" y="533" width="0.2026%" height="15" fill="rgb(243,47,51)"/><text x="68.3121%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.20%)</title><rect x="68.0621%" y="517" width="0.2026%" height="15" fill="rgb(241,183,40)"/><text x="68.3121%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="68.0621%" y="501" width="0.2026%" height="15" fill="rgb(231,217,32)"/><text x="68.3121%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="68.1296%" y="485" width="0.1350%" height="15" fill="rgb(229,61,38)"/><text x="68.3796%" y="495.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (5 samples, 0.34%)</title><rect x="67.9946%" y="709" width="0.3376%" height="15" fill="rgb(225,210,5)"/><text x="68.2446%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (29 samples, 1.96%)</title><rect x="66.4416%" y="725" width="1.9581%" height="15" fill="rgb(231,79,45)"/><text x="66.6916%" y="735.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_statement (39 samples, 2.63%)</title><rect x="65.8339%" y="757" width="2.6334%" height="15" fill="rgb(224,100,7)"/><text x="66.0839%" y="767.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (39 samples, 2.63%)</title><rect x="65.8339%" y="741" width="2.6334%" height="15" fill="rgb(241,198,18)"/><text x="66.0839%" y="751.50">sq..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="68.6023%" y="693" width="0.1350%" height="15" fill="rgb(252,97,53)"/><text x="68.8523%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (14 samples, 0.95%)</title><rect x="68.5348%" y="709" width="0.9453%" height="15" fill="rgb(220,88,7)"/><text x="68.7848%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (11 samples, 0.74%)</title><rect x="68.7373%" y="693" width="0.7427%" height="15" fill="rgb(213,176,14)"/><text x="68.9873%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.34%)</title><rect x="69.1425%" y="677" width="0.3376%" height="15" fill="rgb(246,73,7)"/><text x="69.3925%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (34 samples, 2.30%)</title><rect x="68.5348%" y="725" width="2.2957%" height="15" fill="rgb(245,64,36)"/><text x="68.7848%" y="735.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (20 samples, 1.35%)</title><rect x="69.4801%" y="709" width="1.3504%" height="15" fill="rgb(245,80,10)"/><text x="69.7301%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (11 samples, 0.74%)</title><rect x="70.0878%" y="693" width="0.7427%" height="15" fill="rgb(232,107,50)"/><text x="70.3378%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (9 samples, 0.61%)</title><rect x="70.2228%" y="677" width="0.6077%" height="15" fill="rgb(253,3,0)"/><text x="70.4728%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.41%)</title><rect x="70.4254%" y="661" width="0.4051%" height="15" fill="rgb(212,99,53)"/><text x="70.6754%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.41%)</title><rect x="70.4254%" y="645" width="0.4051%" height="15" fill="rgb(249,111,54)"/><text x="70.6754%" y="655.50"></text></g><g><title>sql_parser::parser::parse_statements (36 samples, 2.43%)</title><rect x="68.4673%" y="757" width="2.4308%" height="15" fill="rgb(249,55,30)"/><text x="68.7173%" y="767.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_statement (35 samples, 2.36%)</title><rect x="68.5348%" y="741" width="2.3633%" height="15" fill="rgb(237,47,42)"/><text x="68.7848%" y="751.50">sq..</text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.14%)</title><rect x="70.8980%" y="757" width="0.1350%" height="15" fill="rgb(211,20,18)"/><text x="71.1480%" y="767.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.20%)</title><rect x="71.1006%" y="629" width="0.2026%" height="15" fill="rgb(231,203,46)"/><text x="71.3506%" y="639.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.20%)</title><rect x="71.1006%" y="613" width="0.2026%" height="15" fill="rgb(237,142,3)"/><text x="71.3506%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.20%)</title><rect x="71.1006%" y="597" width="0.2026%" height="15" fill="rgb(241,107,1)"/><text x="71.3506%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.20%)</title><rect x="71.1006%" y="581" width="0.2026%" height="15" fill="rgb(229,83,13)"/><text x="71.3506%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.20%)</title><rect x="71.1006%" y="565" width="0.2026%" height="15" fill="rgb(241,91,40)"/><text x="71.3506%" y="575.50"></text></g><g><title>__GI___openat (3 samples, 0.20%)</title><rect x="71.1006%" y="549" width="0.2026%" height="15" fill="rgb(225,3,45)"/><text x="71.3506%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.20%)</title><rect x="71.1006%" y="533" width="0.2026%" height="15" fill="rgb(244,223,14)"/><text x="71.3506%" y="543.50"></text></g><g><title>do_syscall_64 (2 samples, 0.14%)</title><rect x="71.1681%" y="517" width="0.1350%" height="15" fill="rgb(224,124,37)"/><text x="71.4181%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.14%)</title><rect x="71.3032%" y="613" width="0.1350%" height="15" fill="rgb(251,171,30)"/><text x="71.5532%" y="623.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.14%)</title><rect x="71.3032%" y="597" width="0.1350%" height="15" fill="rgb(236,46,54)"/><text x="71.5532%" y="607.50"></text></g><g><title>std::rt::lang_start_internal (7 samples, 0.47%)</title><rect x="71.1006%" y="757" width="0.4727%" height="15" fill="rgb(245,213,5)"/><text x="71.3506%" y="767.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.47%)</title><rect x="71.1006%" y="741" width="0.4727%" height="15" fill="rgb(230,144,27)"/><text x="71.3506%" y="751.50"></text></g><g><title>std::panicking::try (7 samples, 0.47%)</title><rect x="71.1006%" y="725" width="0.4727%" height="15" fill="rgb(220,86,6)"/><text x="71.3506%" y="735.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.47%)</title><rect x="71.1006%" y="709" width="0.4727%" height="15" fill="rgb(240,20,13)"/><text x="71.3506%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.47%)</title><rect x="71.1006%" y="693" width="0.4727%" height="15" fill="rgb(217,89,34)"/><text x="71.3506%" y="703.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (7 samples, 0.47%)</title><rect x="71.1006%" y="677" width="0.4727%" height="15" fill="rgb(229,13,5)"/><text x="71.3506%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.47%)</title><rect x="71.1006%" y="661" width="0.4727%" height="15" fill="rgb(244,67,35)"/><text x="71.3506%" y="671.50"></text></g><g><title>lobsters_microbenchmarks::main (7 samples, 0.47%)</title><rect x="71.1006%" y="645" width="0.4727%" height="15" fill="rgb(221,40,2)"/><text x="71.3506%" y="655.50"></text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (4 samples, 0.27%)</title><rect x="71.3032%" y="629" width="0.2701%" height="15" fill="rgb(237,157,21)"/><text x="71.5532%" y="639.50"></text></g><g><title>[unknown] (960 samples, 64.82%)</title><rect x="6.8197%" y="773" width="64.8211%" height="15" fill="rgb(222,94,11)"/><text x="7.0697%" y="783.50">[unknown]</text></g><g><title>core::ptr::drop_in_place (6 samples, 0.41%)</title><rect x="72.0459%" y="613" width="0.4051%" height="15" fill="rgb(249,113,6)"/><text x="72.2959%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="72.3160%" y="597" width="0.1350%" height="15" fill="rgb(238,137,36)"/><text x="72.5660%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (2 samples, 0.14%)</title><rect x="72.4510%" y="613" width="0.1350%" height="15" fill="rgb(210,102,26)"/><text x="72.7010%" y="623.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (2 samples, 0.14%)</title><rect x="72.4510%" y="597" width="0.1350%" height="15" fill="rgb(218,30,30)"/><text x="72.7010%" y="607.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.14%)</title><rect x="72.4510%" y="581" width="0.1350%" height="15" fill="rgb(214,67,26)"/><text x="72.7010%" y="591.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="72.7887%" y="581" width="0.1350%" height="15" fill="rgb(251,9,53)"/><text x="73.0387%" y="591.50"></text></g><g><title>decor_mem::stats::get_qtype (9 samples, 0.61%)</title><rect x="72.5861%" y="613" width="0.6077%" height="15" fill="rgb(228,204,25)"/><text x="72.8361%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.54%)</title><rect x="72.6536%" y="597" width="0.5402%" height="15" fill="rgb(207,153,8)"/><text x="72.9036%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.27%)</title><rect x="72.9237%" y="581" width="0.2701%" height="15" fill="rgb(242,9,16)"/><text x="73.1737%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="73.0587%" y="565" width="0.1350%" height="15" fill="rgb(217,211,10)"/><text x="73.3087%" y="575.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="73.0587%" y="549" width="0.1350%" height="15" fill="rgb(219,228,52)"/><text x="73.3087%" y="559.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (22 samples, 1.49%)</title><rect x="71.7758%" y="629" width="1.4855%" height="15" fill="rgb(231,92,29)"/><text x="72.0258%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="73.3964%" y="597" width="0.1350%" height="15" fill="rgb(232,8,23)"/><text x="73.6464%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="73.3964%" y="581" width="0.1350%" height="15" fill="rgb(216,211,34)"/><text x="73.6464%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="73.3964%" y="565" width="0.1350%" height="15" fill="rgb(236,151,0)"/><text x="73.6464%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="73.3964%" y="549" width="0.1350%" height="15" fill="rgb(209,168,3)"/><text x="73.6464%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="73.3964%" y="533" width="0.1350%" height="15" fill="rgb(208,129,28)"/><text x="73.6464%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.14%)</title><rect x="73.3964%" y="517" width="0.1350%" height="15" fill="rgb(229,78,22)"/><text x="73.6464%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="73.3964%" y="501" width="0.1350%" height="15" fill="rgb(228,187,13)"/><text x="73.6464%" y="511.50"></text></g><g><title>__mark_inode_dirty (4 samples, 0.27%)</title><rect x="73.6664%" y="373" width="0.2701%" height="15" fill="rgb(240,119,24)"/><text x="73.9164%" y="383.50"></text></g><g><title>ext4_dirty_inode (3 samples, 0.20%)</title><rect x="73.7340%" y="357" width="0.2026%" height="15" fill="rgb(209,194,42)"/><text x="73.9840%" y="367.50"></text></g><g><title>__ext4_mark_inode_dirty (3 samples, 0.20%)</title><rect x="73.7340%" y="341" width="0.2026%" height="15" fill="rgb(247,200,46)"/><text x="73.9840%" y="351.50"></text></g><g><title>ext4_reserve_inode_write (2 samples, 0.14%)</title><rect x="73.8015%" y="325" width="0.1350%" height="15" fill="rgb(218,76,16)"/><text x="74.0515%" y="335.50"></text></g><g><title>__ext4_get_inode_loc (2 samples, 0.14%)</title><rect x="73.8015%" y="309" width="0.1350%" height="15" fill="rgb(225,21,48)"/><text x="74.0515%" y="319.50"></text></g><g><title>ksys_write (7 samples, 0.47%)</title><rect x="73.5314%" y="485" width="0.4727%" height="15" fill="rgb(239,223,50)"/><text x="73.7814%" y="495.50"></text></g><g><title>vfs_write (7 samples, 0.47%)</title><rect x="73.5314%" y="469" width="0.4727%" height="15" fill="rgb(244,45,21)"/><text x="73.7814%" y="479.50"></text></g><g><title>new_sync_write (6 samples, 0.41%)</title><rect x="73.5989%" y="453" width="0.4051%" height="15" fill="rgb(232,33,43)"/><text x="73.8489%" y="463.50"></text></g><g><title>ext4_buffered_write_iter (6 samples, 0.41%)</title><rect x="73.5989%" y="437" width="0.4051%" height="15" fill="rgb(209,8,3)"/><text x="73.8489%" y="447.50"></text></g><g><title>generic_perform_write (6 samples, 0.41%)</title><rect x="73.5989%" y="421" width="0.4051%" height="15" fill="rgb(214,25,53)"/><text x="73.8489%" y="431.50"></text></g><g><title>ext4_da_write_end (5 samples, 0.34%)</title><rect x="73.6664%" y="405" width="0.3376%" height="15" fill="rgb(254,186,54)"/><text x="73.9164%" y="415.50"></text></g><g><title>generic_write_end (5 samples, 0.34%)</title><rect x="73.6664%" y="389" width="0.3376%" height="15" fill="rgb(208,174,49)"/><text x="73.9164%" y="399.50"></text></g><g><title>do_syscall_64 (8 samples, 0.54%)</title><rect x="73.5314%" y="501" width="0.5402%" height="15" fill="rgb(233,191,51)"/><text x="73.7814%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.81%)</title><rect x="73.3288%" y="629" width="0.8103%" height="15" fill="rgb(222,134,10)"/><text x="73.5788%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.81%)</title><rect x="73.3288%" y="613" width="0.8103%" height="15" fill="rgb(230,226,20)"/><text x="73.5788%" y="623.50"></text></g><g><title>decor_mem::stats::print_stats (9 samples, 0.61%)</title><rect x="73.5314%" y="597" width="0.6077%" height="15" fill="rgb(251,111,25)"/><text x="73.7814%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (9 samples, 0.61%)</title><rect x="73.5314%" y="581" width="0.6077%" height="15" fill="rgb(224,40,46)"/><text x="73.7814%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (9 samples, 0.61%)</title><rect x="73.5314%" y="565" width="0.6077%" height="15" fill="rgb(236,108,47)"/><text x="73.7814%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (9 samples, 0.61%)</title><rect x="73.5314%" y="549" width="0.6077%" height="15" fill="rgb(234,93,0)"/><text x="73.7814%" y="559.50"></text></g><g><title>__libc_write (9 samples, 0.61%)</title><rect x="73.5314%" y="533" width="0.6077%" height="15" fill="rgb(224,213,32)"/><text x="73.7814%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.61%)</title><rect x="73.5314%" y="517" width="0.6077%" height="15" fill="rgb(251,11,48)"/><text x="73.7814%" y="527.50"></text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="74.7468%" y="421" width="0.1350%" height="15" fill="rgb(236,173,5)"/><text x="74.9968%" y="431.50"></text></g><g><title>skb_release_head_state (2 samples, 0.14%)</title><rect x="74.7468%" y="405" width="0.1350%" height="15" fill="rgb(230,95,12)"/><text x="74.9968%" y="415.50"></text></g><g><title>dst_release (2 samples, 0.14%)</title><rect x="74.7468%" y="389" width="0.1350%" height="15" fill="rgb(232,209,1)"/><text x="74.9968%" y="399.50"></text></g><g><title>do_softirq (2 samples, 0.14%)</title><rect x="74.9494%" y="341" width="0.1350%" height="15" fill="rgb(232,6,1)"/><text x="75.1994%" y="351.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.14%)</title><rect x="74.9494%" y="325" width="0.1350%" height="15" fill="rgb(210,224,50)"/><text x="75.1994%" y="335.50"></text></g><g><title>__do_softirq (2 samples, 0.14%)</title><rect x="74.9494%" y="309" width="0.1350%" height="15" fill="rgb(228,127,35)"/><text x="75.1994%" y="319.50"></text></g><g><title>net_rx_action (2 samples, 0.14%)</title><rect x="74.9494%" y="293" width="0.1350%" height="15" fill="rgb(245,102,45)"/><text x="75.1994%" y="303.50"></text></g><g><title>process_backlog (2 samples, 0.14%)</title><rect x="74.9494%" y="277" width="0.1350%" height="15" fill="rgb(214,1,49)"/><text x="75.1994%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.14%)</title><rect x="74.9494%" y="261" width="0.1350%" height="15" fill="rgb(226,163,40)"/><text x="75.1994%" y="271.50"></text></g><g><title>ip_rcv (2 samples, 0.14%)</title><rect x="74.9494%" y="245" width="0.1350%" height="15" fill="rgb(239,212,28)"/><text x="75.1994%" y="255.50"></text></g><g><title>ip_local_deliver (2 samples, 0.14%)</title><rect x="74.9494%" y="229" width="0.1350%" height="15" fill="rgb(220,20,13)"/><text x="75.1994%" y="239.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.14%)</title><rect x="74.9494%" y="213" width="0.1350%" height="15" fill="rgb(210,164,35)"/><text x="75.1994%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.14%)</title><rect x="74.9494%" y="197" width="0.1350%" height="15" fill="rgb(248,109,41)"/><text x="75.1994%" y="207.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.14%)</title><rect x="74.9494%" y="181" width="0.1350%" height="15" fill="rgb(238,23,50)"/><text x="75.1994%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.14%)</title><rect x="74.9494%" y="165" width="0.1350%" height="15" fill="rgb(211,48,49)"/><text x="75.1994%" y="175.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.14%)</title><rect x="74.9494%" y="149" width="0.1350%" height="15" fill="rgb(223,36,21)"/><text x="75.1994%" y="159.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.27%)</title><rect x="74.8818%" y="421" width="0.2701%" height="15" fill="rgb(207,123,46)"/><text x="75.1318%" y="431.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.27%)</title><rect x="74.8818%" y="405" width="0.2701%" height="15" fill="rgb(240,218,32)"/><text x="75.1318%" y="415.50"></text></g><g><title>ip_output (3 samples, 0.20%)</title><rect x="74.9494%" y="389" width="0.2026%" height="15" fill="rgb(252,5,43)"/><text x="75.1994%" y="399.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.20%)</title><rect x="74.9494%" y="373" width="0.2026%" height="15" fill="rgb(252,84,19)"/><text x="75.1994%" y="383.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.20%)</title><rect x="74.9494%" y="357" width="0.2026%" height="15" fill="rgb(243,152,39)"/><text x="75.1994%" y="367.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.14%)</title><rect x="75.3545%" y="341" width="0.1350%" height="15" fill="rgb(234,160,15)"/><text x="75.6045%" y="351.50"></text></g><g><title>dequeue_entity (4 samples, 0.27%)</title><rect x="75.5571%" y="325" width="0.2701%" height="15" fill="rgb(237,34,20)"/><text x="75.8071%" y="335.50"></text></g><g><title>update_curr (4 samples, 0.27%)</title><rect x="75.5571%" y="309" width="0.2701%" height="15" fill="rgb(229,97,13)"/><text x="75.8071%" y="319.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.34%)</title><rect x="75.5571%" y="341" width="0.3376%" height="15" fill="rgb(234,71,50)"/><text x="75.8071%" y="351.50"></text></g><g><title>sk_wait_data (13 samples, 0.88%)</title><rect x="75.2194%" y="421" width="0.8778%" height="15" fill="rgb(253,155,4)"/><text x="75.4694%" y="431.50"></text></g><g><title>wait_woken (11 samples, 0.74%)</title><rect x="75.3545%" y="405" width="0.7427%" height="15" fill="rgb(222,185,37)"/><text x="75.6045%" y="415.50"></text></g><g><title>schedule_timeout (11 samples, 0.74%)</title><rect x="75.3545%" y="389" width="0.7427%" height="15" fill="rgb(251,177,13)"/><text x="75.6045%" y="399.50"></text></g><g><title>schedule (11 samples, 0.74%)</title><rect x="75.3545%" y="373" width="0.7427%" height="15" fill="rgb(250,179,40)"/><text x="75.6045%" y="383.50"></text></g><g><title>__schedule (11 samples, 0.74%)</title><rect x="75.3545%" y="357" width="0.7427%" height="15" fill="rgb(242,44,2)"/><text x="75.6045%" y="367.50"></text></g><g><title>do_syscall_64 (25 samples, 1.69%)</title><rect x="74.4767%" y="501" width="1.6880%" height="15" fill="rgb(216,177,13)"/><text x="74.7267%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (25 samples, 1.69%)</title><rect x="74.4767%" y="485" width="1.6880%" height="15" fill="rgb(216,106,43)"/><text x="74.7267%" y="495.50"></text></g><g><title>__sys_recvfrom (25 samples, 1.69%)</title><rect x="74.4767%" y="469" width="1.6880%" height="15" fill="rgb(216,183,2)"/><text x="74.7267%" y="479.50"></text></g><g><title>inet_recvmsg (23 samples, 1.55%)</title><rect x="74.6117%" y="453" width="1.5530%" height="15" fill="rgb(249,75,3)"/><text x="74.8617%" y="463.50"></text></g><g><title>tcp_recvmsg (23 samples, 1.55%)</title><rect x="74.6117%" y="437" width="1.5530%" height="15" fill="rgb(219,67,39)"/><text x="74.8617%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 2.16%)</title><rect x="74.4767%" y="517" width="2.1607%" height="15" fill="rgb(253,228,2)"/><text x="74.7267%" y="527.50">e..</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.47%)</title><rect x="76.1648%" y="501" width="0.4727%" height="15" fill="rgb(235,138,27)"/><text x="76.4148%" y="511.50"></text></g><g><title>switch_fpu_return (3 samples, 0.20%)</title><rect x="76.4348%" y="485" width="0.2026%" height="15" fill="rgb(236,97,51)"/><text x="76.6848%" y="495.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 2.30%)</title><rect x="74.4767%" y="597" width="2.2957%" height="15" fill="rgb(240,80,30)"/><text x="74.7267%" y="607.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 2.30%)</title><rect x="74.4767%" y="581" width="2.2957%" height="15" fill="rgb(230,178,19)"/><text x="74.7267%" y="591.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 2.30%)</title><rect x="74.4767%" y="565" width="2.2957%" height="15" fill="rgb(210,190,27)"/><text x="74.7267%" y="575.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 2.30%)</title><rect x="74.4767%" y="549" width="2.2957%" height="15" fill="rgb(222,107,31)"/><text x="74.7267%" y="559.50">s..</text></g><g><title>__libc_recv (34 samples, 2.30%)</title><rect x="74.4767%" y="533" width="2.2957%" height="15" fill="rgb(216,127,34)"/><text x="74.7267%" y="543.50">_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.14%)</title><rect x="76.6374%" y="517" width="0.1350%" height="15" fill="rgb(234,116,52)"/><text x="76.8874%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 2.50%)</title><rect x="74.3417%" y="613" width="2.4983%" height="15" fill="rgb(222,124,15)"/><text x="74.5917%" y="623.50">&lt;s..</text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (40 samples, 2.70%)</title><rect x="74.2741%" y="629" width="2.7009%" height="15" fill="rgb(231,179,28)"/><text x="74.5241%" y="639.50">ms..</text></g><g><title>__dev_queue_xmit (3 samples, 0.20%)</title><rect x="78.1229%" y="357" width="0.2026%" height="15" fill="rgb(226,93,45)"/><text x="78.3729%" y="367.50"></text></g><g><title>__inet_lookup_established (4 samples, 0.27%)</title><rect x="78.7306%" y="165" width="0.2701%" height="15" fill="rgb(215,8,51)"/><text x="78.9806%" y="175.50"></text></g><g><title>psi_task_change (4 samples, 0.27%)</title><rect x="79.1357%" y="53" width="0.2701%" height="15" fill="rgb(223,106,5)"/><text x="79.3857%" y="63.50"></text></g><g><title>psi_group_change (4 samples, 0.27%)</title><rect x="79.1357%" y="37" width="0.2701%" height="15" fill="rgb(250,191,5)"/><text x="79.3857%" y="47.50"></text></g><g><title>enqueue_task (6 samples, 0.41%)</title><rect x="79.1357%" y="69" width="0.4051%" height="15" fill="rgb(242,132,44)"/><text x="79.3857%" y="79.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.14%)</title><rect x="79.4058%" y="53" width="0.1350%" height="15" fill="rgb(251,152,29)"/><text x="79.6558%" y="63.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.27%)</title><rect x="79.5409%" y="69" width="0.2701%" height="15" fill="rgb(218,179,5)"/><text x="79.7909%" y="79.50"></text></g><g><title>enqueue_entity (3 samples, 0.20%)</title><rect x="79.6084%" y="53" width="0.2026%" height="15" fill="rgb(227,67,19)"/><text x="79.8584%" y="63.50"></text></g><g><title>update_load_avg (2 samples, 0.14%)</title><rect x="79.6759%" y="37" width="0.1350%" height="15" fill="rgb(233,119,31)"/><text x="79.9259%" y="47.50"></text></g><g><title>sock_def_readable (11 samples, 0.74%)</title><rect x="79.1357%" y="133" width="0.7427%" height="15" fill="rgb(241,120,22)"/><text x="79.3857%" y="143.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.74%)</title><rect x="79.1357%" y="117" width="0.7427%" height="15" fill="rgb(224,102,30)"/><text x="79.3857%" y="127.50"></text></g><g><title>__wake_up_common (11 samples, 0.74%)</title><rect x="79.1357%" y="101" width="0.7427%" height="15" fill="rgb(210,164,37)"/><text x="79.3857%" y="111.50"></text></g><g><title>try_to_wake_up (11 samples, 0.74%)</title><rect x="79.1357%" y="85" width="0.7427%" height="15" fill="rgb(226,191,16)"/><text x="79.3857%" y="95.50"></text></g><g><title>bictcp_acked (2 samples, 0.14%)</title><rect x="80.0810%" y="117" width="0.1350%" height="15" fill="rgb(214,40,45)"/><text x="80.3310%" y="127.50"></text></g><g><title>ip_local_deliver (25 samples, 1.69%)</title><rect x="78.6631%" y="229" width="1.6880%" height="15" fill="rgb(244,29,26)"/><text x="78.9131%" y="239.50"></text></g><g><title>ip_local_deliver_finish (25 samples, 1.69%)</title><rect x="78.6631%" y="213" width="1.6880%" height="15" fill="rgb(216,16,5)"/><text x="78.9131%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (25 samples, 1.69%)</title><rect x="78.6631%" y="197" width="1.6880%" height="15" fill="rgb(249,76,35)"/><text x="78.9131%" y="207.50"></text></g><g><title>tcp_v4_rcv (25 samples, 1.69%)</title><rect x="78.6631%" y="181" width="1.6880%" height="15" fill="rgb(207,11,44)"/><text x="78.9131%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (20 samples, 1.35%)</title><rect x="79.0007%" y="165" width="1.3504%" height="15" fill="rgb(228,190,49)"/><text x="79.2507%" y="175.50"></text></g><g><title>tcp_rcv_established (20 samples, 1.35%)</title><rect x="79.0007%" y="149" width="1.3504%" height="15" fill="rgb(214,173,12)"/><text x="79.2507%" y="159.50"></text></g><g><title>tcp_ack (7 samples, 0.47%)</title><rect x="79.8785%" y="133" width="0.4727%" height="15" fill="rgb(218,26,35)"/><text x="80.1285%" y="143.50"></text></g><g><title>ip_finish_output2 (36 samples, 2.43%)</title><rect x="78.0554%" y="373" width="2.4308%" height="15" fill="rgb(220,200,19)"/><text x="78.3054%" y="383.50">ip..</text></g><g><title>__local_bh_enable_ip (32 samples, 2.16%)</title><rect x="78.3255%" y="357" width="2.1607%" height="15" fill="rgb(239,95,49)"/><text x="78.5755%" y="367.50">_..</text></g><g><title>do_softirq (32 samples, 2.16%)</title><rect x="78.3255%" y="341" width="2.1607%" height="15" fill="rgb(235,85,53)"/><text x="78.5755%" y="351.50">d..</text></g><g><title>do_softirq_own_stack (32 samples, 2.16%)</title><rect x="78.3255%" y="325" width="2.1607%" height="15" fill="rgb(233,133,31)"/><text x="78.5755%" y="335.50">d..</text></g><g><title>__do_softirq (31 samples, 2.09%)</title><rect x="78.3930%" y="309" width="2.0932%" height="15" fill="rgb(218,25,20)"/><text x="78.6430%" y="319.50">_..</text></g><g><title>net_rx_action (29 samples, 1.96%)</title><rect x="78.5280%" y="293" width="1.9581%" height="15" fill="rgb(252,210,38)"/><text x="78.7780%" y="303.50">n..</text></g><g><title>process_backlog (29 samples, 1.96%)</title><rect x="78.5280%" y="277" width="1.9581%" height="15" fill="rgb(242,134,21)"/><text x="78.7780%" y="287.50">p..</text></g><g><title>__netif_receive_skb_one_core (28 samples, 1.89%)</title><rect x="78.5955%" y="261" width="1.8906%" height="15" fill="rgb(213,28,48)"/><text x="78.8455%" y="271.50">_..</text></g><g><title>ip_rcv (27 samples, 1.82%)</title><rect x="78.6631%" y="245" width="1.8231%" height="15" fill="rgb(250,196,2)"/><text x="78.9131%" y="255.50">i..</text></g><g><title>__ip_queue_xmit (39 samples, 2.63%)</title><rect x="77.9203%" y="405" width="2.6334%" height="15" fill="rgb(227,5,17)"/><text x="78.1703%" y="415.50">__..</text></g><g><title>ip_output (37 samples, 2.50%)</title><rect x="78.0554%" y="389" width="2.4983%" height="15" fill="rgb(221,226,24)"/><text x="78.3054%" y="399.50">ip..</text></g><g><title>__tcp_transmit_skb (46 samples, 3.11%)</title><rect x="77.7853%" y="421" width="3.1060%" height="15" fill="rgb(211,5,48)"/><text x="78.0353%" y="431.50">__t..</text></g><g><title>skb_clone (5 samples, 0.34%)</title><rect x="80.5537%" y="405" width="0.3376%" height="15" fill="rgb(219,150,6)"/><text x="80.8037%" y="415.50"></text></g><g><title>__copy_skb_header (3 samples, 0.20%)</title><rect x="80.6887%" y="389" width="0.2026%" height="15" fill="rgb(251,46,16)"/><text x="80.9387%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (49 samples, 3.31%)</title><rect x="77.6502%" y="453" width="3.3086%" height="15" fill="rgb(220,204,40)"/><text x="77.9002%" y="463.50">__t..</text></g><g><title>tcp_write_xmit (49 samples, 3.31%)</title><rect x="77.6502%" y="437" width="3.3086%" height="15" fill="rgb(211,85,2)"/><text x="77.9002%" y="447.50">tcp..</text></g><g><title>sk_stream_alloc_skb (4 samples, 0.27%)</title><rect x="80.9588%" y="453" width="0.2701%" height="15" fill="rgb(229,17,7)"/><text x="81.2088%" y="463.50"></text></g><g><title>__alloc_skb (4 samples, 0.27%)</title><rect x="80.9588%" y="437" width="0.2701%" height="15" fill="rgb(239,72,28)"/><text x="81.2088%" y="447.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.20%)</title><rect x="81.0263%" y="421" width="0.2026%" height="15" fill="rgb(230,47,54)"/><text x="81.2763%" y="431.50"></text></g><g><title>tcp_send_mss (2 samples, 0.14%)</title><rect x="81.2964%" y="453" width="0.1350%" height="15" fill="rgb(214,50,8)"/><text x="81.5464%" y="463.50"></text></g><g><title>tcp_current_mss (2 samples, 0.14%)</title><rect x="81.2964%" y="437" width="0.1350%" height="15" fill="rgb(216,198,43)"/><text x="81.5464%" y="447.50"></text></g><g><title>__x64_sys_sendto (61 samples, 4.12%)</title><rect x="77.3801%" y="533" width="4.1188%" height="15" fill="rgb(234,20,35)"/><text x="77.6301%" y="543.50">__x6..</text></g><g><title>__sys_sendto (61 samples, 4.12%)</title><rect x="77.3801%" y="517" width="4.1188%" height="15" fill="rgb(254,45,19)"/><text x="77.6301%" y="527.50">__sy..</text></g><g><title>sock_sendmsg (60 samples, 4.05%)</title><rect x="77.4477%" y="501" width="4.0513%" height="15" fill="rgb(219,14,44)"/><text x="77.6977%" y="511.50">sock..</text></g><g><title>tcp_sendmsg (60 samples, 4.05%)</title><rect x="77.4477%" y="485" width="4.0513%" height="15" fill="rgb(217,220,26)"/><text x="77.6977%" y="495.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (58 samples, 3.92%)</title><rect x="77.5827%" y="469" width="3.9163%" height="15" fill="rgb(213,158,28)"/><text x="77.8327%" y="479.50">tcp_..</text></g><g><title>syscall_slow_exit_work (3 samples, 0.20%)</title><rect x="81.4990%" y="533" width="0.2026%" height="15" fill="rgb(252,51,52)"/><text x="81.7490%" y="543.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.14%)</title><rect x="81.5665%" y="517" width="0.1350%" height="15" fill="rgb(246,89,16)"/><text x="81.8165%" y="527.50"></text></g><g><title>do_syscall_64 (66 samples, 4.46%)</title><rect x="77.3801%" y="549" width="4.4564%" height="15" fill="rgb(216,158,49)"/><text x="77.6301%" y="559.50">do_sy..</text></g><g><title>syscall_trace_enter (2 samples, 0.14%)</title><rect x="81.7016%" y="533" width="0.1350%" height="15" fill="rgb(236,107,19)"/><text x="81.9516%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (69 samples, 4.66%)</title><rect x="77.2451%" y="565" width="4.6590%" height="15" fill="rgb(228,185,30)"/><text x="77.4951%" y="575.50">entry..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (153 samples, 10.33%)</title><rect x="71.6408%" y="645" width="10.3309%" height="15" fill="rgb(246,134,8)"/><text x="71.8908%" y="655.50">msql_srv::Mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (74 samples, 5.00%)</title><rect x="76.9750%" y="629" width="4.9966%" height="15" fill="rgb(214,143,50)"/><text x="77.2250%" y="639.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (74 samples, 5.00%)</title><rect x="76.9750%" y="613" width="4.9966%" height="15" fill="rgb(228,75,8)"/><text x="77.2250%" y="623.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (74 samples, 5.00%)</title><rect x="76.9750%" y="597" width="4.9966%" height="15" fill="rgb(207,175,4)"/><text x="77.2250%" y="607.50">std::s..</text></g><g><title>__libc_send (74 samples, 5.00%)</title><rect x="76.9750%" y="581" width="4.9966%" height="15" fill="rgb(205,108,24)"/><text x="77.2250%" y="591.50">__libc..</text></g><g><title>__GI___clone (155 samples, 10.47%)</title><rect x="71.6408%" y="773" width="10.4659%" height="15" fill="rgb(244,120,49)"/><text x="71.8908%" y="783.50">__GI___clone</text></g><g><title>start_thread (155 samples, 10.47%)</title><rect x="71.6408%" y="757" width="10.4659%" height="15" fill="rgb(223,47,38)"/><text x="71.8908%" y="767.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (155 samples, 10.47%)</title><rect x="71.6408%" y="741" width="10.4659%" height="15" fill="rgb(229,179,11)"/><text x="71.8908%" y="751.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (155 samples, 10.47%)</title><rect x="71.6408%" y="725" width="10.4659%" height="15" fill="rgb(231,122,1)"/><text x="71.8908%" y="735.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (155 samples, 10.47%)</title><rect x="71.6408%" y="709" width="10.4659%" height="15" fill="rgb(245,119,9)"/><text x="71.8908%" y="719.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (155 samples, 10.47%)</title><rect x="71.6408%" y="693" width="10.4659%" height="15" fill="rgb(241,163,25)"/><text x="71.8908%" y="703.50">core::ops::func..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (155 samples, 10.47%)</title><rect x="71.6408%" y="677" width="10.4659%" height="15" fill="rgb(217,214,3)"/><text x="71.8908%" y="687.50">std::sys_common..</text></g><g><title>decor_mem::Shim::run_on_tcp (155 samples, 10.47%)</title><rect x="71.6408%" y="661" width="10.4659%" height="15" fill="rgb(240,86,28)"/><text x="71.8908%" y="671.50">decor_mem::Shim..</text></g><g><title>mysql::conn::Conn::new (2 samples, 0.14%)</title><rect x="81.9716%" y="645" width="0.1350%" height="15" fill="rgb(215,47,9)"/><text x="82.2216%" y="655.50"></text></g><g><title>_edata (2 samples, 0.14%)</title><rect x="82.1067%" y="773" width="0.1350%" height="15" fill="rgb(252,25,45)"/><text x="82.3567%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="82.1067%" y="757" width="0.1350%" height="15" fill="rgb(251,164,9)"/><text x="82.3567%" y="767.50"></text></g><g><title>hwloc::Topology::new (238 samples, 16.07%)</title><rect x="82.3768%" y="597" width="16.0702%" height="15" fill="rgb(233,194,0)"/><text x="82.6268%" y="607.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (238 samples, 16.07%)</title><rect x="82.3768%" y="581" width="16.0702%" height="15" fill="rgb(249,111,24)"/><text x="82.6268%" y="591.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 16.07%)</title><rect x="82.3768%" y="565" width="16.0702%" height="15" fill="rgb(250,223,3)"/><text x="82.6268%" y="575.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 16.07%)</title><rect x="82.3768%" y="549" width="16.0702%" height="15" fill="rgb(236,178,37)"/><text x="82.6268%" y="559.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 16.07%)</title><rect x="82.3768%" y="533" width="16.0702%" height="15" fill="rgb(241,158,50)"/><text x="82.6268%" y="543.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 16.07%)</title><rect x="82.3768%" y="517" width="16.0702%" height="15" fill="rgb(213,121,41)"/><text x="82.6268%" y="527.50">hwloc_linux_set_tid_cpubi..</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 16.00%)</title><rect x="82.4443%" y="501" width="16.0027%" height="15" fill="rgb(240,92,3)"/><text x="82.6943%" y="511.50">__GI___sched_setaffinity_..</text></g><g><title>entry_SYSCALL_64 (236 samples, 15.94%)</title><rect x="82.5118%" y="485" width="15.9352%" height="15" fill="rgb(205,123,3)"/><text x="82.7618%" y="495.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (236 samples, 15.94%)</title><rect x="82.5118%" y="469" width="15.9352%" height="15" fill="rgb(205,97,47)"/><text x="82.7618%" y="479.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 15.94%)</title><rect x="82.5118%" y="453" width="15.9352%" height="15" fill="rgb(247,152,14)"/><text x="82.7618%" y="463.50">__x64_sys_sched_setaffini..</text></g><g><title>sched_setaffinity (236 samples, 15.94%)</title><rect x="82.5118%" y="437" width="15.9352%" height="15" fill="rgb(248,195,53)"/><text x="82.7618%" y="447.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (236 samples, 15.94%)</title><rect x="82.5118%" y="421" width="15.9352%" height="15" fill="rgb(226,201,16)"/><text x="82.7618%" y="431.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (236 samples, 15.94%)</title><rect x="82.5118%" y="405" width="15.9352%" height="15" fill="rgb(205,98,0)"/><text x="82.7618%" y="415.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (236 samples, 15.94%)</title><rect x="82.5118%" y="389" width="15.9352%" height="15" fill="rgb(214,191,48)"/><text x="82.7618%" y="399.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 15.87%)</title><rect x="82.5793%" y="373" width="15.8677%" height="15" fill="rgb(237,112,39)"/><text x="82.8293%" y="383.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 15.87%)</title><rect x="82.5793%" y="357" width="15.8677%" height="15" fill="rgb(247,203,27)"/><text x="82.8293%" y="367.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 15.87%)</title><rect x="82.5793%" y="341" width="15.8677%" height="15" fill="rgb(235,124,28)"/><text x="82.8293%" y="351.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 15.80%)</title><rect x="82.6469%" y="325" width="15.8001%" height="15" fill="rgb(208,207,46)"/><text x="82.8969%" y="335.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 15.73%)</title><rect x="82.7144%" y="309" width="15.7326%" height="15" fill="rgb(234,176,4)"/><text x="82.9644%" y="319.50">__perf_event_task_sched_..</text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 15.53%)</title><rect x="82.9169%" y="293" width="15.5300%" height="15" fill="rgb(230,133,28)"/><text x="83.1669%" y="303.50">__intel_pmu_enable_all.c..</text></g><g><title>native_write_msr (230 samples, 15.53%)</title><rect x="82.9169%" y="277" width="15.5300%" height="15" fill="rgb(211,137,40)"/><text x="83.1669%" y="287.50">native_write_msr</text></g><g><title>__libc_start_main (242 samples, 16.34%)</title><rect x="82.3093%" y="757" width="16.3403%" height="15" fill="rgb(254,35,13)"/><text x="82.5593%" y="767.50">__libc_start_main</text></g><g><title>main (242 samples, 16.34%)</title><rect x="82.3093%" y="741" width="16.3403%" height="15" fill="rgb(225,49,51)"/><text x="82.5593%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (242 samples, 16.34%)</title><rect x="82.3093%" y="725" width="16.3403%" height="15" fill="rgb(251,10,15)"/><text x="82.5593%" y="735.50">std::rt::lang_start_inter..</text></g><g><title>std::panic::catch_unwind (242 samples, 16.34%)</title><rect x="82.3093%" y="709" width="16.3403%" height="15" fill="rgb(228,207,15)"/><text x="82.5593%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (242 samples, 16.34%)</title><rect x="82.3093%" y="693" width="16.3403%" height="15" fill="rgb(241,99,19)"/><text x="82.5593%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (242 samples, 16.34%)</title><rect x="82.3093%" y="677" width="16.3403%" height="15" fill="rgb(207,104,49)"/><text x="82.5593%" y="687.50">std::panicking::try::do_c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (242 samples, 16.34%)</title><rect x="82.3093%" y="661" width="16.3403%" height="15" fill="rgb(234,99,18)"/><text x="82.5593%" y="671.50">core::ops::function::impl..</text></g><g><title>std::rt::lang_start::_{{closure}} (242 samples, 16.34%)</title><rect x="82.3093%" y="645" width="16.3403%" height="15" fill="rgb(213,191,49)"/><text x="82.5593%" y="655.50">std::rt::lang_start::_{{c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (242 samples, 16.34%)</title><rect x="82.3093%" y="629" width="16.3403%" height="15" fill="rgb(210,226,19)"/><text x="82.5593%" y="639.50">std::sys_common::backtrac..</text></g><g><title>lobsters_microbenchmarks::main (242 samples, 16.34%)</title><rect x="82.3093%" y="613" width="16.3403%" height="15" fill="rgb(229,97,18)"/><text x="82.5593%" y="623.50">lobsters_microbenchmarks:..</text></g><g><title>_start (243 samples, 16.41%)</title><rect x="82.3093%" y="773" width="16.4078%" height="15" fill="rgb(211,167,15)"/><text x="82.5593%" y="783.50">_start</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.27%)</title><rect x="98.9196%" y="773" width="0.2701%" height="15" fill="rgb(210,169,34)"/><text x="99.1696%" y="783.50"></text></g><g><title>do_syscall_64 (2 samples, 0.14%)</title><rect x="99.0547%" y="757" width="0.1350%" height="15" fill="rgb(241,121,31)"/><text x="99.3047%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.14%)</title><rect x="99.1897%" y="773" width="0.1350%" height="15" fill="rgb(232,40,11)"/><text x="99.4397%" y="783.50"></text></g><g><title>lobsters-microb (1,475 samples, 99.59%)</title><rect x="0.0000%" y="789" width="99.5949%" height="15" fill="rgb(205,86,26)"/><text x="0.2500%" y="799.50">lobsters-microb</text></g><g><title>all (1,481 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(231,126,28)"/><text x="0.2500%" y="815.50"></text></g><g><title>perf (6 samples, 0.41%)</title><rect x="99.5949%" y="789" width="0.4051%" height="15" fill="rgb(219,221,18)"/><text x="99.8449%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.41%)</title><rect x="99.5949%" y="773" width="0.4051%" height="15" fill="rgb(211,40,0)"/><text x="99.8449%" y="783.50"></text></g><g><title>do_syscall_64 (6 samples, 0.41%)</title><rect x="99.5949%" y="757" width="0.4051%" height="15" fill="rgb(239,85,43)"/><text x="99.8449%" y="767.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.41%)</title><rect x="99.5949%" y="741" width="0.4051%" height="15" fill="rgb(231,55,21)"/><text x="99.8449%" y="751.50"></text></g><g><title>do_execve (6 samples, 0.41%)</title><rect x="99.5949%" y="725" width="0.4051%" height="15" fill="rgb(225,184,43)"/><text x="99.8449%" y="735.50"></text></g><g><title>__do_execve_file (6 samples, 0.41%)</title><rect x="99.5949%" y="709" width="0.4051%" height="15" fill="rgb(251,158,41)"/><text x="99.8449%" y="719.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.41%)</title><rect x="99.5949%" y="693" width="0.4051%" height="15" fill="rgb(234,159,37)"/><text x="99.8449%" y="703.50"></text></g><g><title>load_elf_binary (6 samples, 0.41%)</title><rect x="99.5949%" y="677" width="0.4051%" height="15" fill="rgb(216,204,22)"/><text x="99.8449%" y="687.50"></text></g><g><title>setup_new_exec (6 samples, 0.41%)</title><rect x="99.5949%" y="661" width="0.4051%" height="15" fill="rgb(214,17,3)"/><text x="99.8449%" y="671.50"></text></g><g><title>perf_event_exec (6 samples, 0.41%)</title><rect x="99.5949%" y="645" width="0.4051%" height="15" fill="rgb(212,111,17)"/><text x="99.8449%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.34%)</title><rect x="99.6624%" y="629" width="0.3376%" height="15" fill="rgb(221,157,24)"/><text x="99.9124%" y="639.50"></text></g><g><title>native_write_msr (5 samples, 0.34%)</title><rect x="99.6624%" y="613" width="0.3376%" height="15" fill="rgb(252,16,13)"/><text x="99.9124%" y="623.50"></text></g></svg></svg>