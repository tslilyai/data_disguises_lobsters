<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.12%)</title><rect x="0.1795%" y="773" width="0.1197%" height="15" fill="rgb(227,0,7)"/><text x="0.4295%" y="783.50"></text></g><g><title>[[heap]] (22 samples, 0.66%)</title><rect x="0.3290%" y="773" width="0.6581%" height="15" fill="rgb(217,0,24)"/><text x="0.5790%" y="783.50"></text></g><g><title>_int_free (4 samples, 0.12%)</title><rect x="1.3760%" y="757" width="0.1197%" height="15" fill="rgb(221,193,54)"/><text x="1.6260%" y="767.50"></text></g><g><title>[[stack]] (32 samples, 0.96%)</title><rect x="0.9871%" y="773" width="0.9572%" height="15" fill="rgb(248,212,6)"/><text x="1.2371%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.39%)</title><rect x="1.9444%" y="757" width="0.3889%" height="15" fill="rgb(208,68,35)"/><text x="2.1944%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.66%)</title><rect x="2.3332%" y="757" width="0.6581%" height="15" fill="rgb(232,128,0)"/><text x="2.5832%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.12%)</title><rect x="2.9913%" y="757" width="0.1197%" height="15" fill="rgb(207,160,47)"/><text x="3.2413%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (6 samples, 0.18%)</title><rect x="3.2306%" y="757" width="0.1795%" height="15" fill="rgb(228,23,34)"/><text x="3.4806%" y="767.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.39%)</title><rect x="3.4699%" y="757" width="0.3889%" height="15" fill="rgb(218,30,26)"/><text x="3.7199%" y="767.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.21%)</title><rect x="3.8588%" y="757" width="0.2094%" height="15" fill="rgb(220,122,19)"/><text x="4.1088%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.18%)</title><rect x="4.0682%" y="757" width="0.1795%" height="15" fill="rgb(250,228,42)"/><text x="4.3182%" y="767.50"></text></g><g><title>__rdl_realloc (6 samples, 0.18%)</title><rect x="4.2776%" y="757" width="0.1795%" height="15" fill="rgb(240,193,28)"/><text x="4.5276%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.15%)</title><rect x="4.3075%" y="741" width="0.1496%" height="15" fill="rgb(216,20,37)"/><text x="4.5575%" y="751.50"></text></g><g><title>_int_free (32 samples, 0.96%)</title><rect x="4.4571%" y="757" width="0.9572%" height="15" fill="rgb(206,188,39)"/><text x="4.7071%" y="767.50"></text></g><g><title>_int_malloc (11 samples, 0.33%)</title><rect x="5.4143%" y="757" width="0.3290%" height="15" fill="rgb(217,207,13)"/><text x="5.6643%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.51%)</title><rect x="5.7433%" y="757" width="0.5085%" height="15" fill="rgb(231,73,38)"/><text x="5.9933%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.24%)</title><rect x="6.3416%" y="757" width="0.2393%" height="15" fill="rgb(225,20,46)"/><text x="6.5916%" y="767.50"></text></g><g><title>alloc::string::String::push (5 samples, 0.15%)</title><rect x="6.5809%" y="757" width="0.1496%" height="15" fill="rgb(210,31,41)"/><text x="6.8309%" y="767.50"></text></g><g><title>core::fmt::write (7 samples, 0.21%)</title><rect x="6.7305%" y="757" width="0.2094%" height="15" fill="rgb(221,200,47)"/><text x="6.9805%" y="767.50"></text></g><g><title>core::num::dec2flt::dec2flt (17 samples, 0.51%)</title><rect x="6.9399%" y="757" width="0.5085%" height="15" fill="rgb(226,26,5)"/><text x="7.1899%" y="767.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (12 samples, 0.36%)</title><rect x="7.4484%" y="757" width="0.3590%" height="15" fill="rgb(249,33,26)"/><text x="7.6984%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (4 samples, 0.12%)</title><rect x="8.4954%" y="757" width="0.1197%" height="15" fill="rgb(235,183,28)"/><text x="8.7454%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (6 samples, 0.18%)</title><rect x="8.8543%" y="757" width="0.1795%" height="15" fill="rgb(221,5,38)"/><text x="9.1043%" y="767.50"></text></g><g><title>[anon] (244 samples, 7.30%)</title><rect x="1.9444%" y="773" width="7.2988%" height="15" fill="rgb(247,18,42)"/><text x="2.1944%" y="783.50">[anon]</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.12%)</title><rect x="9.3030%" y="757" width="0.1197%" height="15" fill="rgb(241,131,45)"/><text x="9.5530%" y="767.50"></text></g><g><title>_int_realloc (4 samples, 0.12%)</title><rect x="9.6022%" y="757" width="0.1197%" height="15" fill="rgb(249,31,29)"/><text x="9.8522%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.15%)</title><rect x="9.7218%" y="757" width="0.1496%" height="15" fill="rgb(225,111,53)"/><text x="9.9718%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (22 samples, 0.66%)</title><rect x="9.3030%" y="773" width="0.6581%" height="15" fill="rgb(238,160,17)"/><text x="9.5530%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.12%)</title><rect x="10.0209%" y="757" width="0.1197%" height="15" fill="rgb(214,148,48)"/><text x="10.2709%" y="767.50"></text></g><g><title>inet_recvmsg (7 samples, 0.21%)</title><rect x="10.3201%" y="453" width="0.2094%" height="15" fill="rgb(232,36,49)"/><text x="10.5701%" y="463.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.21%)</title><rect x="10.3201%" y="437" width="0.2094%" height="15" fill="rgb(209,103,24)"/><text x="10.5701%" y="447.50"></text></g><g><title>sk_wait_data (6 samples, 0.18%)</title><rect x="10.3500%" y="421" width="0.1795%" height="15" fill="rgb(229,88,8)"/><text x="10.6000%" y="431.50"></text></g><g><title>do_syscall_64 (9 samples, 0.27%)</title><rect x="10.2902%" y="501" width="0.2692%" height="15" fill="rgb(213,181,19)"/><text x="10.5402%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 0.27%)</title><rect x="10.2902%" y="485" width="0.2692%" height="15" fill="rgb(254,191,54)"/><text x="10.5402%" y="495.50"></text></g><g><title>__sys_recvfrom (8 samples, 0.24%)</title><rect x="10.3201%" y="469" width="0.2393%" height="15" fill="rgb(241,83,37)"/><text x="10.5701%" y="479.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.30%)</title><rect x="10.2902%" y="629" width="0.2991%" height="15" fill="rgb(233,36,39)"/><text x="10.5402%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 0.30%)</title><rect x="10.2902%" y="613" width="0.2991%" height="15" fill="rgb(226,3,54)"/><text x="10.5402%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 0.30%)</title><rect x="10.2902%" y="597" width="0.2991%" height="15" fill="rgb(245,192,40)"/><text x="10.5402%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 0.30%)</title><rect x="10.2902%" y="581" width="0.2991%" height="15" fill="rgb(238,167,29)"/><text x="10.5402%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 0.30%)</title><rect x="10.2902%" y="565" width="0.2991%" height="15" fill="rgb(232,182,51)"/><text x="10.5402%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 0.30%)</title><rect x="10.2902%" y="549" width="0.2991%" height="15" fill="rgb(231,60,39)"/><text x="10.5402%" y="559.50"></text></g><g><title>__libc_recv (10 samples, 0.30%)</title><rect x="10.2902%" y="533" width="0.2991%" height="15" fill="rgb(208,69,12)"/><text x="10.5402%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.30%)</title><rect x="10.2902%" y="517" width="0.2991%" height="15" fill="rgb(235,93,37)"/><text x="10.5402%" y="527.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (11 samples, 0.33%)</title><rect x="10.2902%" y="709" width="0.3290%" height="15" fill="rgb(213,116,39)"/><text x="10.5402%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (11 samples, 0.33%)</title><rect x="10.2902%" y="693" width="0.3290%" height="15" fill="rgb(222,207,29)"/><text x="10.5402%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (11 samples, 0.33%)</title><rect x="10.2902%" y="677" width="0.3290%" height="15" fill="rgb(206,96,30)"/><text x="10.5402%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (11 samples, 0.33%)</title><rect x="10.2902%" y="661" width="0.3290%" height="15" fill="rgb(218,138,4)"/><text x="10.5402%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 0.33%)</title><rect x="10.2902%" y="645" width="0.3290%" height="15" fill="rgb(250,191,14)"/><text x="10.5402%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.15%)</title><rect x="10.7389%" y="661" width="0.1496%" height="15" fill="rgb(239,60,40)"/><text x="10.9889%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.15%)</title><rect x="10.7389%" y="645" width="0.1496%" height="15" fill="rgb(206,27,48)"/><text x="10.9889%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.15%)</title><rect x="10.7389%" y="629" width="0.1496%" height="15" fill="rgb(225,35,8)"/><text x="10.9889%" y="639.50"></text></g><g><title>core::fmt::write (4 samples, 0.12%)</title><rect x="10.7688%" y="613" width="0.1197%" height="15" fill="rgb(250,213,24)"/><text x="11.0188%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.15%)</title><rect x="10.8884%" y="613" width="0.1496%" height="15" fill="rgb(247,123,22)"/><text x="11.1384%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.15%)</title><rect x="10.8884%" y="597" width="0.1496%" height="15" fill="rgb(231,138,38)"/><text x="11.1384%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.12%)</title><rect x="10.9183%" y="581" width="0.1197%" height="15" fill="rgb(231,145,46)"/><text x="11.1683%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.12%)</title><rect x="10.9183%" y="565" width="0.1197%" height="15" fill="rgb(251,118,11)"/><text x="11.1683%" y="575.50"></text></g><g><title>decor_mem::select::expr_to_col (6 samples, 0.18%)</title><rect x="10.8884%" y="661" width="0.1795%" height="15" fill="rgb(217,147,25)"/><text x="11.1384%" y="671.50"></text></g><g><title>core::fmt::write (6 samples, 0.18%)</title><rect x="10.8884%" y="645" width="0.1795%" height="15" fill="rgb(247,81,37)"/><text x="11.1384%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.18%)</title><rect x="10.8884%" y="629" width="0.1795%" height="15" fill="rgb(209,12,38)"/><text x="11.1384%" y="639.50"></text></g><g><title>core::fmt::write (4 samples, 0.12%)</title><rect x="11.4568%" y="645" width="0.1197%" height="15" fill="rgb(227,1,9)"/><text x="11.7068%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (4 samples, 0.12%)</title><rect x="11.4568%" y="629" width="0.1197%" height="15" fill="rgb(248,47,43)"/><text x="11.7068%" y="639.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (11 samples, 0.33%)</title><rect x="11.5764%" y="645" width="0.3290%" height="15" fill="rgb(221,10,30)"/><text x="11.8264%" y="655.50"></text></g><g><title>core::num::dec2flt::dec2flt (11 samples, 0.33%)</title><rect x="11.5764%" y="629" width="0.3290%" height="15" fill="rgb(210,229,1)"/><text x="11.8264%" y="639.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (6 samples, 0.18%)</title><rect x="12.1747%" y="629" width="0.1795%" height="15" fill="rgb(222,148,37)"/><text x="12.4247%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.15%)</title><rect x="12.4439%" y="581" width="0.1496%" height="15" fill="rgb(234,67,33)"/><text x="12.6939%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.15%)</title><rect x="12.4439%" y="565" width="0.1496%" height="15" fill="rgb(247,98,35)"/><text x="12.6939%" y="575.50"></text></g><g><title>core::fmt::write (6 samples, 0.18%)</title><rect x="12.4439%" y="613" width="0.1795%" height="15" fill="rgb(247,138,52)"/><text x="12.6939%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.18%)</title><rect x="12.4439%" y="597" width="0.1795%" height="15" fill="rgb(213,79,30)"/><text x="12.6939%" y="607.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (23 samples, 0.69%)</title><rect x="11.9952%" y="645" width="0.6880%" height="15" fill="rgb(246,177,23)"/><text x="12.2452%" y="655.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (11 samples, 0.33%)</title><rect x="12.3542%" y="629" width="0.3290%" height="15" fill="rgb(230,62,27)"/><text x="12.6042%" y="639.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.15%)</title><rect x="13.0422%" y="613" width="0.1496%" height="15" fill="rgb(216,154,8)"/><text x="13.2922%" y="623.50"></text></g><g><title>core::fmt::write (8 samples, 0.24%)</title><rect x="13.1917%" y="613" width="0.2393%" height="15" fill="rgb(244,35,45)"/><text x="13.4417%" y="623.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (8 samples, 0.24%)</title><rect x="13.1917%" y="597" width="0.2393%" height="15" fill="rgb(251,115,12)"/><text x="13.4417%" y="607.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (4 samples, 0.12%)</title><rect x="13.3114%" y="581" width="0.1197%" height="15" fill="rgb(240,54,50)"/><text x="13.5614%" y="591.50"></text></g><g><title>decor_mem::helpers::minus_parser_vals (23 samples, 0.69%)</title><rect x="13.0422%" y="629" width="0.6880%" height="15" fill="rgb(233,84,52)"/><text x="13.2922%" y="639.50"></text></g><g><title>core::num::dec2flt::dec2flt (10 samples, 0.30%)</title><rect x="13.4310%" y="613" width="0.2991%" height="15" fill="rgb(207,117,47)"/><text x="13.6810%" y="623.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure::{{closure}} (42 samples, 1.26%)</title><rect x="12.6832%" y="645" width="1.2564%" height="15" fill="rgb(249,43,39)"/><text x="12.9332%" y="655.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure::{{closure}} (7 samples, 0.21%)</title><rect x="13.7302%" y="629" width="0.2094%" height="15" fill="rgb(209,38,44)"/><text x="13.9802%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.21%)</title><rect x="13.7302%" y="613" width="0.2094%" height="15" fill="rgb(236,212,23)"/><text x="13.9802%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.21%)</title><rect x="13.7302%" y="597" width="0.2094%" height="15" fill="rgb(242,79,21)"/><text x="13.9802%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.12%)</title><rect x="13.8199%" y="581" width="0.1197%" height="15" fill="rgb(211,96,35)"/><text x="14.0699%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.12%)</title><rect x="13.8199%" y="565" width="0.1197%" height="15" fill="rgb(253,215,40)"/><text x="14.0699%" y="575.50"></text></g><g><title>core::fmt::write (6 samples, 0.18%)</title><rect x="13.9994%" y="613" width="0.1795%" height="15" fill="rgb(211,81,21)"/><text x="14.2494%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.18%)</title><rect x="13.9994%" y="597" width="0.1795%" height="15" fill="rgb(208,190,38)"/><text x="14.2494%" y="607.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure (11 samples, 0.33%)</title><rect x="13.9396%" y="645" width="0.3290%" height="15" fill="rgb(235,213,38)"/><text x="14.1896%" y="655.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (9 samples, 0.27%)</title><rect x="13.9994%" y="629" width="0.2692%" height="15" fill="rgb(237,122,38)"/><text x="14.2494%" y="639.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (4 samples, 0.12%)</title><rect x="14.2686%" y="645" width="0.1197%" height="15" fill="rgb(244,218,35)"/><text x="14.5186%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.21%)</title><rect x="14.6276%" y="565" width="0.2094%" height="15" fill="rgb(240,68,47)"/><text x="14.8776%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.21%)</title><rect x="14.6276%" y="549" width="0.2094%" height="15" fill="rgb(210,16,53)"/><text x="14.8776%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.18%)</title><rect x="14.6575%" y="533" width="0.1795%" height="15" fill="rgb(235,124,12)"/><text x="14.9075%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.18%)</title><rect x="14.6575%" y="517" width="0.1795%" height="15" fill="rgb(224,169,11)"/><text x="14.9075%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (11 samples, 0.33%)</title><rect x="14.5678%" y="613" width="0.3290%" height="15" fill="rgb(250,166,2)"/><text x="14.8178%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.33%)</title><rect x="14.5678%" y="597" width="0.3290%" height="15" fill="rgb(242,216,29)"/><text x="14.8178%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (11 samples, 0.33%)</title><rect x="14.5678%" y="581" width="0.3290%" height="15" fill="rgb(230,116,27)"/><text x="14.8178%" y="591.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (32 samples, 0.96%)</title><rect x="14.3883%" y="645" width="0.9572%" height="15" fill="rgb(228,99,48)"/><text x="14.6383%" y="655.50"></text></g><g><title>core::fmt::write (26 samples, 0.78%)</title><rect x="14.5678%" y="629" width="0.7777%" height="15" fill="rgb(253,11,6)"/><text x="14.8178%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (15 samples, 0.45%)</title><rect x="14.8968%" y="613" width="0.4487%" height="15" fill="rgb(247,143,39)"/><text x="15.1468%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.42%)</title><rect x="14.9267%" y="597" width="0.4188%" height="15" fill="rgb(236,97,10)"/><text x="15.1767%" y="607.50"></text></g><g><title>core::num::dec2flt::parse::eat_digits (5 samples, 0.15%)</title><rect x="16.3326%" y="549" width="0.1496%" height="15" fill="rgb(233,208,19)"/><text x="16.5826%" y="559.50"></text></g><g><title>alloc::slice::merge_sort (35 samples, 1.05%)</title><rect x="15.4652%" y="629" width="1.0470%" height="15" fill="rgb(216,164,2)"/><text x="15.7152%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (35 samples, 1.05%)</title><rect x="15.4652%" y="613" width="1.0470%" height="15" fill="rgb(220,129,5)"/><text x="15.7152%" y="623.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (33 samples, 0.99%)</title><rect x="15.5250%" y="597" width="0.9871%" height="15" fill="rgb(242,17,10)"/><text x="15.7750%" y="607.50"></text></g><g><title>core::num::dec2flt::dec2flt (30 samples, 0.90%)</title><rect x="15.6147%" y="581" width="0.8974%" height="15" fill="rgb(242,107,0)"/><text x="15.8647%" y="591.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (10 samples, 0.30%)</title><rect x="16.2130%" y="565" width="0.2991%" height="15" fill="rgb(251,28,31)"/><text x="16.4630%" y="575.50"></text></g><g><title>decor_mem::views::View::intersect_rptrs (70 samples, 2.09%)</title><rect x="15.3455%" y="645" width="2.0939%" height="15" fill="rgb(233,223,10)"/><text x="15.5955%" y="655.50">d..</text></g><g><title>decor_mem::helpers::parser_vals_cmp (31 samples, 0.93%)</title><rect x="16.5121%" y="629" width="0.9273%" height="15" fill="rgb(215,21,27)"/><text x="16.7621%" y="639.50"></text></g><g><title>core::num::dec2flt::dec2flt (29 samples, 0.87%)</title><rect x="16.5719%" y="613" width="0.8675%" height="15" fill="rgb(232,23,21)"/><text x="16.8219%" y="623.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (5 samples, 0.15%)</title><rect x="17.2899%" y="597" width="0.1496%" height="15" fill="rgb(244,5,23)"/><text x="17.5399%" y="607.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (214 samples, 6.40%)</title><rect x="11.0679%" y="661" width="6.4014%" height="15" fill="rgb(226,81,46)"/><text x="11.3179%" y="671.50">decor_me..</text></g><g><title>core::fmt::write (4 samples, 0.12%)</title><rect x="17.4693%" y="645" width="0.1197%" height="15" fill="rgb(247,70,30)"/><text x="17.7193%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.12%)</title><rect x="17.4693%" y="629" width="0.1197%" height="15" fill="rgb(212,68,19)"/><text x="17.7193%" y="639.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (7 samples, 0.21%)</title><rect x="17.4693%" y="661" width="0.2094%" height="15" fill="rgb(240,187,13)"/><text x="17.7193%" y="671.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.21%)</title><rect x="17.6787%" y="645" width="0.2094%" height="15" fill="rgb(223,113,26)"/><text x="17.9287%" y="655.50"></text></g><g><title>_int_realloc (7 samples, 0.21%)</title><rect x="17.6787%" y="629" width="0.2094%" height="15" fill="rgb(206,192,2)"/><text x="17.9287%" y="639.50"></text></g><g><title>_int_free (12 samples, 0.36%)</title><rect x="17.8881%" y="645" width="0.3590%" height="15" fill="rgb(241,108,4)"/><text x="18.1381%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (23 samples, 0.69%)</title><rect x="18.6958%" y="581" width="0.6880%" height="15" fill="rgb(247,173,49)"/><text x="18.9458%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (15 samples, 0.45%)</title><rect x="18.9351%" y="565" width="0.4487%" height="15" fill="rgb(224,114,35)"/><text x="19.1851%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (11 samples, 0.33%)</title><rect x="19.0547%" y="549" width="0.3290%" height="15" fill="rgb(245,159,27)"/><text x="19.3047%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (11 samples, 0.33%)</title><rect x="19.0547%" y="533" width="0.3290%" height="15" fill="rgb(245,172,44)"/><text x="19.3047%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (7 samples, 0.21%)</title><rect x="19.1744%" y="517" width="0.2094%" height="15" fill="rgb(236,23,11)"/><text x="19.4244%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (30 samples, 0.90%)</title><rect x="18.5761%" y="613" width="0.8974%" height="15" fill="rgb(205,117,38)"/><text x="18.8261%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (30 samples, 0.90%)</title><rect x="18.5761%" y="597" width="0.8974%" height="15" fill="rgb(237,72,25)"/><text x="18.8261%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (38 samples, 1.14%)</title><rect x="18.5462%" y="629" width="1.1367%" height="15" fill="rgb(244,70,9)"/><text x="18.7962%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.18%)</title><rect x="19.5034%" y="613" width="0.1795%" height="15" fill="rgb(217,125,39)"/><text x="19.7534%" y="623.50"></text></g><g><title>core::fmt::write (4 samples, 0.12%)</title><rect x="19.5633%" y="597" width="0.1197%" height="15" fill="rgb(235,36,10)"/><text x="19.8133%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.12%)</title><rect x="19.8624%" y="597" width="0.1197%" height="15" fill="rgb(251,123,47)"/><text x="20.1124%" y="607.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.15%)</title><rect x="19.9821%" y="581" width="0.1496%" height="15" fill="rgb(221,13,13)"/><text x="20.2321%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.39%)</title><rect x="19.7727%" y="613" width="0.3889%" height="15" fill="rgb(238,131,9)"/><text x="20.0227%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.18%)</title><rect x="19.9821%" y="597" width="0.1795%" height="15" fill="rgb(211,50,8)"/><text x="20.2321%" y="607.50"></text></g><g><title>_int_free (10 samples, 0.30%)</title><rect x="20.2513%" y="613" width="0.2991%" height="15" fill="rgb(245,182,24)"/><text x="20.5013%" y="623.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.66%)</title><rect x="20.8794%" y="597" width="0.6581%" height="15" fill="rgb(242,14,37)"/><text x="21.1294%" y="607.50"></text></g><g><title>_int_realloc (7 samples, 0.21%)</title><rect x="21.3281%" y="581" width="0.2094%" height="15" fill="rgb(246,228,12)"/><text x="21.5781%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.12%)</title><rect x="21.5375%" y="597" width="0.1197%" height="15" fill="rgb(213,55,15)"/><text x="21.7875%" y="607.50"></text></g><g><title>_int_free (7 samples, 0.21%)</title><rect x="21.7170%" y="597" width="0.2094%" height="15" fill="rgb(209,9,3)"/><text x="21.9670%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.24%)</title><rect x="21.9264%" y="597" width="0.2393%" height="15" fill="rgb(230,59,30)"/><text x="22.1764%" y="607.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.15%)</title><rect x="22.5546%" y="549" width="0.1496%" height="15" fill="rgb(209,121,21)"/><text x="22.8046%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.42%)</title><rect x="22.3153%" y="581" width="0.4188%" height="15" fill="rgb(220,109,13)"/><text x="22.5653%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.24%)</title><rect x="22.4948%" y="565" width="0.2393%" height="15" fill="rgb(232,18,1)"/><text x="22.7448%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (107 samples, 3.20%)</title><rect x="19.6829%" y="629" width="3.2007%" height="15" fill="rgb(215,41,42)"/><text x="19.9329%" y="639.50">&lt;sq..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (78 samples, 2.33%)</title><rect x="20.5504%" y="613" width="2.3332%" height="15" fill="rgb(224,123,36)"/><text x="20.8004%" y="623.50">s..</text></g><g><title>core::fmt::write (24 samples, 0.72%)</title><rect x="22.1657%" y="597" width="0.7179%" height="15" fill="rgb(240,125,3)"/><text x="22.4157%" y="607.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (176 samples, 5.26%)</title><rect x="17.6787%" y="661" width="5.2647%" height="15" fill="rgb(205,98,50)"/><text x="17.9287%" y="671.50">decor_..</text></g><g><title>core::fmt::write (157 samples, 4.70%)</title><rect x="18.2471%" y="645" width="4.6964%" height="15" fill="rgb(205,185,37)"/><text x="18.4971%" y="655.50">core:..</text></g><g><title>&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (4 samples, 0.12%)</title><rect x="25.3964%" y="581" width="0.1197%" height="15" fill="rgb(238,207,15)"/><text x="25.6464%" y="591.50"></text></g><g><title>core::num::dec2flt::extract_sign (6 samples, 0.18%)</title><rect x="25.5160%" y="581" width="0.1795%" height="15" fill="rgb(213,199,42)"/><text x="25.7660%" y="591.50"></text></g><g><title>core::num::dec2flt::parse::eat_digits (5 samples, 0.15%)</title><rect x="25.7254%" y="565" width="0.1496%" height="15" fill="rgb(235,201,11)"/><text x="25.9754%" y="575.50"></text></g><g><title>alloc::slice::merge_sort (99 samples, 2.96%)</title><rect x="22.9734%" y="645" width="2.9614%" height="15" fill="rgb(207,46,11)"/><text x="23.2234%" y="655.50">all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (98 samples, 2.93%)</title><rect x="23.0033%" y="629" width="2.9315%" height="15" fill="rgb(241,35,35)"/><text x="23.2533%" y="639.50">al..</text></g><g><title>decor_mem::helpers::parser_vals_cmp (98 samples, 2.93%)</title><rect x="23.0033%" y="613" width="2.9315%" height="15" fill="rgb(243,32,47)"/><text x="23.2533%" y="623.50">de..</text></g><g><title>core::num::dec2flt::dec2flt (92 samples, 2.75%)</title><rect x="23.1828%" y="597" width="2.7520%" height="15" fill="rgb(247,202,23)"/><text x="23.4328%" y="607.50">co..</text></g><g><title>core::num::dec2flt::parse::parse_decimal (8 samples, 0.24%)</title><rect x="25.6955%" y="581" width="0.2393%" height="15" fill="rgb(219,102,11)"/><text x="25.9455%" y="591.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (533 samples, 15.94%)</title><rect x="10.7089%" y="677" width="15.9438%" height="15" fill="rgb(243,110,44)"/><text x="10.9589%" y="687.50">decor_mem::select::get_rp..</text></g><g><title>decor_mem::views::View::intersect_rptrs (124 samples, 3.71%)</title><rect x="22.9435%" y="661" width="3.7092%" height="15" fill="rgb(222,74,54)"/><text x="23.1935%" y="671.50">deco..</text></g><g><title>decor_mem::helpers::parser_vals_cmp (24 samples, 0.72%)</title><rect x="25.9348%" y="645" width="0.7179%" height="15" fill="rgb(216,99,12)"/><text x="26.1848%" y="655.50"></text></g><g><title>core::num::dec2flt::dec2flt (24 samples, 0.72%)</title><rect x="25.9348%" y="629" width="0.7179%" height="15" fill="rgb(226,22,26)"/><text x="26.1848%" y="639.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (5 samples, 0.15%)</title><rect x="26.5031%" y="613" width="0.1496%" height="15" fill="rgb(217,163,10)"/><text x="26.7531%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (64 samples, 1.91%)</title><rect x="26.6826%" y="645" width="1.9144%" height="15" fill="rgb(213,25,53)"/><text x="26.9326%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (64 samples, 1.91%)</title><rect x="26.6826%" y="629" width="1.9144%" height="15" fill="rgb(252,105,26)"/><text x="26.9326%" y="639.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (64 samples, 1.91%)</title><rect x="26.6826%" y="613" width="1.9144%" height="15" fill="rgb(220,39,43)"/><text x="26.9326%" y="623.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (64 samples, 1.91%)</title><rect x="26.6826%" y="597" width="1.9144%" height="15" fill="rgb(229,68,48)"/><text x="26.9326%" y="607.50">a..</text></g><g><title>alloc::slice::hack::to_vec (64 samples, 1.91%)</title><rect x="26.6826%" y="581" width="1.9144%" height="15" fill="rgb(252,8,32)"/><text x="26.9326%" y="591.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (64 samples, 1.91%)</title><rect x="26.6826%" y="565" width="1.9144%" height="15" fill="rgb(223,20,43)"/><text x="26.9326%" y="575.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (64 samples, 1.91%)</title><rect x="26.6826%" y="549" width="1.9144%" height="15" fill="rgb(229,81,49)"/><text x="26.9326%" y="559.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 1.91%)</title><rect x="26.6826%" y="533" width="1.9144%" height="15" fill="rgb(236,28,36)"/><text x="26.9326%" y="543.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 1.91%)</title><rect x="26.6826%" y="517" width="1.9144%" height="15" fill="rgb(249,185,26)"/><text x="26.9326%" y="527.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (64 samples, 1.91%)</title><rect x="26.6826%" y="501" width="1.9144%" height="15" fill="rgb(249,174,33)"/><text x="26.9326%" y="511.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 1.91%)</title><rect x="26.6826%" y="485" width="1.9144%" height="15" fill="rgb(233,201,37)"/><text x="26.9326%" y="495.50">a..</text></g><g><title>alloc::alloc::alloc (64 samples, 1.91%)</title><rect x="26.6826%" y="469" width="1.9144%" height="15" fill="rgb(221,78,26)"/><text x="26.9326%" y="479.50">a..</text></g><g><title>__GI___libc_malloc (64 samples, 1.91%)</title><rect x="26.6826%" y="453" width="1.9144%" height="15" fill="rgb(250,127,30)"/><text x="26.9326%" y="463.50">_..</text></g><g><title>_int_malloc (64 samples, 1.91%)</title><rect x="26.6826%" y="437" width="1.9144%" height="15" fill="rgb(230,49,44)"/><text x="26.9326%" y="447.50">_..</text></g><g><title>__GI___mprotect (4 samples, 0.12%)</title><rect x="28.6569%" y="597" width="0.1197%" height="15" fill="rgb(229,67,23)"/><text x="28.9069%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.12%)</title><rect x="28.6569%" y="581" width="0.1197%" height="15" fill="rgb(249,83,47)"/><text x="28.9069%" y="591.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="28.6569%" y="565" width="0.1197%" height="15" fill="rgb(215,43,3)"/><text x="28.9069%" y="575.50"></text></g><g><title>__x64_sys_mprotect (4 samples, 0.12%)</title><rect x="28.6569%" y="549" width="0.1197%" height="15" fill="rgb(238,154,13)"/><text x="28.9069%" y="559.50"></text></g><g><title>do_mprotect_pkey (4 samples, 0.12%)</title><rect x="28.6569%" y="533" width="0.1197%" height="15" fill="rgb(219,56,2)"/><text x="28.9069%" y="543.50"></text></g><g><title>mprotect_fixup (4 samples, 0.12%)</title><rect x="28.6569%" y="517" width="0.1197%" height="15" fill="rgb(233,0,4)"/><text x="28.9069%" y="527.50"></text></g><g><title>perf_event_mmap (4 samples, 0.12%)</title><rect x="28.6569%" y="501" width="0.1197%" height="15" fill="rgb(235,30,7)"/><text x="28.9069%" y="511.50"></text></g><g><title>perf_iterate_sb (4 samples, 0.12%)</title><rect x="28.6569%" y="485" width="0.1197%" height="15" fill="rgb(250,79,13)"/><text x="28.9069%" y="495.50"></text></g><g><title>perf_iterate_ctx (4 samples, 0.12%)</title><rect x="28.6569%" y="469" width="0.1197%" height="15" fill="rgb(211,146,34)"/><text x="28.9069%" y="479.50"></text></g><g><title>perf_event_mmap_output (4 samples, 0.12%)</title><rect x="28.6569%" y="453" width="0.1197%" height="15" fill="rgb(228,22,38)"/><text x="28.9069%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (73 samples, 2.18%)</title><rect x="26.6826%" y="661" width="2.1837%" height="15" fill="rgb(235,168,5)"/><text x="26.9326%" y="671.50">&lt;..</text></g><g><title>__GI___libc_malloc (7 samples, 0.21%)</title><rect x="28.6569%" y="645" width="0.2094%" height="15" fill="rgb(221,155,16)"/><text x="28.9069%" y="655.50"></text></g><g><title>_int_malloc (7 samples, 0.21%)</title><rect x="28.6569%" y="629" width="0.2094%" height="15" fill="rgb(215,215,53)"/><text x="28.9069%" y="639.50"></text></g><g><title>sysmalloc (7 samples, 0.21%)</title><rect x="28.6569%" y="613" width="0.2094%" height="15" fill="rgb(223,4,10)"/><text x="28.9069%" y="623.50"></text></g><g><title>perf_event_mmap (8 samples, 0.24%)</title><rect x="28.8962%" y="485" width="0.2393%" height="15" fill="rgb(234,103,6)"/><text x="29.1462%" y="495.50"></text></g><g><title>perf_iterate_sb (8 samples, 0.24%)</title><rect x="28.8962%" y="469" width="0.2393%" height="15" fill="rgb(227,97,0)"/><text x="29.1462%" y="479.50"></text></g><g><title>perf_iterate_ctx (8 samples, 0.24%)</title><rect x="28.8962%" y="453" width="0.2393%" height="15" fill="rgb(234,150,53)"/><text x="29.1462%" y="463.50"></text></g><g><title>perf_event_mmap_output (6 samples, 0.18%)</title><rect x="28.9560%" y="437" width="0.1795%" height="15" fill="rgb(228,201,54)"/><text x="29.2060%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.27%)</title><rect x="28.8962%" y="565" width="0.2692%" height="15" fill="rgb(222,22,37)"/><text x="29.1462%" y="575.50"></text></g><g><title>do_syscall_64 (9 samples, 0.27%)</title><rect x="28.8962%" y="549" width="0.2692%" height="15" fill="rgb(237,53,32)"/><text x="29.1462%" y="559.50"></text></g><g><title>__x64_sys_mprotect (9 samples, 0.27%)</title><rect x="28.8962%" y="533" width="0.2692%" height="15" fill="rgb(233,25,53)"/><text x="29.1462%" y="543.50"></text></g><g><title>do_mprotect_pkey (9 samples, 0.27%)</title><rect x="28.8962%" y="517" width="0.2692%" height="15" fill="rgb(210,40,34)"/><text x="29.1462%" y="527.50"></text></g><g><title>mprotect_fixup (9 samples, 0.27%)</title><rect x="28.8962%" y="501" width="0.2692%" height="15" fill="rgb(241,220,44)"/><text x="29.1462%" y="511.50"></text></g><g><title>__GI___mprotect (12 samples, 0.36%)</title><rect x="28.8962%" y="581" width="0.3590%" height="15" fill="rgb(235,28,35)"/><text x="29.1462%" y="591.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.12%)</title><rect x="29.2851%" y="517" width="0.1197%" height="15" fill="rgb(210,56,17)"/><text x="29.5351%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.12%)</title><rect x="29.2851%" y="501" width="0.1197%" height="15" fill="rgb(224,130,29)"/><text x="29.5351%" y="511.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.12%)</title><rect x="29.2851%" y="485" width="0.1197%" height="15" fill="rgb(235,212,8)"/><text x="29.5351%" y="495.50"></text></g><g><title>page_fault (7 samples, 0.21%)</title><rect x="29.2552%" y="581" width="0.2094%" height="15" fill="rgb(223,33,50)"/><text x="29.5052%" y="591.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.21%)</title><rect x="29.2552%" y="565" width="0.2094%" height="15" fill="rgb(219,149,13)"/><text x="29.5052%" y="575.50"></text></g><g><title>handle_mm_fault (7 samples, 0.21%)</title><rect x="29.2552%" y="549" width="0.2094%" height="15" fill="rgb(250,156,29)"/><text x="29.5052%" y="559.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.21%)</title><rect x="29.2552%" y="533" width="0.2094%" height="15" fill="rgb(216,193,19)"/><text x="29.5052%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.66%)</title><rect x="28.8663%" y="661" width="0.6581%" height="15" fill="rgb(216,135,14)"/><text x="29.1163%" y="671.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.66%)</title><rect x="28.8663%" y="645" width="0.6581%" height="15" fill="rgb(241,47,5)"/><text x="29.1163%" y="655.50"></text></g><g><title>_int_realloc (22 samples, 0.66%)</title><rect x="28.8663%" y="629" width="0.6581%" height="15" fill="rgb(233,42,35)"/><text x="29.1163%" y="639.50"></text></g><g><title>_int_malloc (22 samples, 0.66%)</title><rect x="28.8663%" y="613" width="0.6581%" height="15" fill="rgb(231,13,6)"/><text x="29.1163%" y="623.50"></text></g><g><title>sysmalloc (22 samples, 0.66%)</title><rect x="28.8663%" y="597" width="0.6581%" height="15" fill="rgb(207,181,40)"/><text x="29.1163%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.12%)</title><rect x="29.7338%" y="597" width="0.1197%" height="15" fill="rgb(254,173,49)"/><text x="29.9838%" y="607.50"></text></g><g><title>core::fmt::write (17 samples, 0.51%)</title><rect x="29.5244%" y="645" width="0.5085%" height="15" fill="rgb(221,1,38)"/><text x="29.7744%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (17 samples, 0.51%)</title><rect x="29.5244%" y="629" width="0.5085%" height="15" fill="rgb(206,124,46)"/><text x="29.7744%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.45%)</title><rect x="29.5842%" y="613" width="0.4487%" height="15" fill="rgb(249,21,11)"/><text x="29.8342%" y="623.50"></text></g><g><title>core::fmt::write (6 samples, 0.18%)</title><rect x="29.8534%" y="597" width="0.1795%" height="15" fill="rgb(222,201,40)"/><text x="30.1034%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.18%)</title><rect x="29.8534%" y="581" width="0.1795%" height="15" fill="rgb(235,61,29)"/><text x="30.1034%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.18%)</title><rect x="29.8534%" y="565" width="0.1795%" height="15" fill="rgb(219,207,3)"/><text x="30.1034%" y="575.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.18%)</title><rect x="29.8534%" y="549" width="0.1795%" height="15" fill="rgb(222,56,46)"/><text x="30.1034%" y="559.50"></text></g><g><title>_int_malloc (4 samples, 0.12%)</title><rect x="29.9133%" y="533" width="0.1197%" height="15" fill="rgb(239,76,54)"/><text x="30.1633%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.15%)</title><rect x="30.0628%" y="597" width="0.1496%" height="15" fill="rgb(231,124,27)"/><text x="30.3128%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (667 samples, 19.95%)</title><rect x="10.2902%" y="741" width="19.9521%" height="15" fill="rgb(249,195,6)"/><text x="10.5402%" y="751.50">decor_mem::query_transformer::Q..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (667 samples, 19.95%)</title><rect x="10.2902%" y="725" width="19.9521%" height="15" fill="rgb(237,174,47)"/><text x="10.5402%" y="735.50">decor_mem::query_transformer::Q..</text></g><g><title>decor_mem::select::get_query_results (656 samples, 19.62%)</title><rect x="10.6192%" y="709" width="19.6231%" height="15" fill="rgb(206,201,31)"/><text x="10.8692%" y="719.50">decor_mem::select::get_query_re..</text></g><g><title>decor_mem::select::get_setexpr_results (656 samples, 19.62%)</title><rect x="10.6192%" y="693" width="19.6231%" height="15" fill="rgb(231,57,52)"/><text x="10.8692%" y="703.50">decor_mem::select::get_setexpr_..</text></g><g><title>decor_mem::select::join_views (119 samples, 3.56%)</title><rect x="26.6826%" y="677" width="3.5597%" height="15" fill="rgb(248,177,22)"/><text x="26.9326%" y="687.50">deco..</text></g><g><title>decor_mem::views::View::insert_row (24 samples, 0.72%)</title><rect x="29.5244%" y="661" width="0.7179%" height="15" fill="rgb(215,211,37)"/><text x="29.7744%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.21%)</title><rect x="30.0329%" y="645" width="0.2094%" height="15" fill="rgb(241,128,51)"/><text x="30.2829%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (6 samples, 0.18%)</title><rect x="30.0628%" y="629" width="0.1795%" height="15" fill="rgb(227,165,31)"/><text x="30.3128%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (6 samples, 0.18%)</title><rect x="30.0628%" y="613" width="0.1795%" height="15" fill="rgb(228,167,24)"/><text x="30.3128%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.21%)</title><rect x="30.2423%" y="677" width="0.2094%" height="15" fill="rgb(228,143,12)"/><text x="30.4923%" y="687.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.21%)</title><rect x="30.5713%" y="453" width="0.2094%" height="15" fill="rgb(249,149,8)"/><text x="30.8213%" y="463.50"></text></g><g><title>_int_malloc (6 samples, 0.18%)</title><rect x="30.6013%" y="437" width="0.1795%" height="15" fill="rgb(243,35,44)"/><text x="30.8513%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.24%)</title><rect x="30.5713%" y="613" width="0.2393%" height="15" fill="rgb(246,89,9)"/><text x="30.8213%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.24%)</title><rect x="30.5713%" y="597" width="0.2393%" height="15" fill="rgb(233,213,13)"/><text x="30.8213%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.24%)</title><rect x="30.5713%" y="581" width="0.2393%" height="15" fill="rgb(233,141,41)"/><text x="30.8213%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.24%)</title><rect x="30.5713%" y="565" width="0.2393%" height="15" fill="rgb(239,167,4)"/><text x="30.8213%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.24%)</title><rect x="30.5713%" y="549" width="0.2393%" height="15" fill="rgb(209,217,16)"/><text x="30.8213%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.24%)</title><rect x="30.5713%" y="533" width="0.2393%" height="15" fill="rgb(219,88,35)"/><text x="30.8213%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.24%)</title><rect x="30.5713%" y="517" width="0.2393%" height="15" fill="rgb(220,193,23)"/><text x="30.8213%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (8 samples, 0.24%)</title><rect x="30.5713%" y="501" width="0.2393%" height="15" fill="rgb(230,90,52)"/><text x="30.8213%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.24%)</title><rect x="30.5713%" y="485" width="0.2393%" height="15" fill="rgb(252,106,19)"/><text x="30.8213%" y="495.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.24%)</title><rect x="30.5713%" y="469" width="0.2393%" height="15" fill="rgb(206,74,20)"/><text x="30.8213%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (12 samples, 0.36%)</title><rect x="30.4816%" y="645" width="0.3590%" height="15" fill="rgb(230,138,44)"/><text x="30.7316%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.27%)</title><rect x="30.5713%" y="629" width="0.2692%" height="15" fill="rgb(235,182,43)"/><text x="30.8213%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.48%)</title><rect x="30.4816%" y="661" width="0.4786%" height="15" fill="rgb(242,16,51)"/><text x="30.7316%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.12%)</title><rect x="30.8406%" y="645" width="0.1197%" height="15" fill="rgb(248,9,4)"/><text x="31.0906%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.12%)</title><rect x="30.9901%" y="645" width="0.1197%" height="15" fill="rgb(210,31,22)"/><text x="31.2401%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (24 samples, 0.72%)</title><rect x="30.4517%" y="677" width="0.7179%" height="15" fill="rgb(239,54,39)"/><text x="30.7017%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.21%)</title><rect x="30.9602%" y="661" width="0.2094%" height="15" fill="rgb(230,99,41)"/><text x="31.2102%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (32 samples, 0.96%)</title><rect x="30.2423%" y="725" width="0.9572%" height="15" fill="rgb(253,106,12)"/><text x="30.4923%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (32 samples, 0.96%)</title><rect x="30.2423%" y="709" width="0.9572%" height="15" fill="rgb(213,46,41)"/><text x="30.4923%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (32 samples, 0.96%)</title><rect x="30.2423%" y="693" width="0.9572%" height="15" fill="rgb(215,133,35)"/><text x="30.4923%" y="703.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.18%)</title><rect x="31.4089%" y="661" width="0.1795%" height="15" fill="rgb(213,28,5)"/><text x="31.6589%" y="671.50"></text></g><g><title>_int_malloc (4 samples, 0.12%)</title><rect x="31.4687%" y="645" width="0.1197%" height="15" fill="rgb(215,77,49)"/><text x="31.7187%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.12%)</title><rect x="31.5884%" y="661" width="0.1197%" height="15" fill="rgb(248,100,22)"/><text x="31.8384%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (26 samples, 0.78%)</title><rect x="31.1995%" y="677" width="0.7777%" height="15" fill="rgb(208,67,9)"/><text x="31.4495%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.24%)</title><rect x="31.7380%" y="661" width="0.2393%" height="15" fill="rgb(219,133,21)"/><text x="31.9880%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.15%)</title><rect x="31.8277%" y="645" width="0.1496%" height="15" fill="rgb(246,46,29)"/><text x="32.0777%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.12%)</title><rect x="31.8576%" y="629" width="0.1197%" height="15" fill="rgb(246,185,52)"/><text x="32.1076%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.12%)</title><rect x="31.8576%" y="613" width="0.1197%" height="15" fill="rgb(252,136,11)"/><text x="32.1076%" y="623.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (60 samples, 1.79%)</title><rect x="30.2423%" y="741" width="1.7948%" height="15" fill="rgb(219,138,53)"/><text x="30.4923%" y="751.50">d..</text></g><g><title>sql_parser::parser::parse_statements (28 samples, 0.84%)</title><rect x="31.1995%" y="725" width="0.8376%" height="15" fill="rgb(211,51,23)"/><text x="31.4495%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (28 samples, 0.84%)</title><rect x="31.1995%" y="709" width="0.8376%" height="15" fill="rgb(247,221,28)"/><text x="31.4495%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (28 samples, 0.84%)</title><rect x="31.1995%" y="693" width="0.8376%" height="15" fill="rgb(251,222,45)"/><text x="31.4495%" y="703.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (728 samples, 21.78%)</title><rect x="10.2902%" y="757" width="21.7768%" height="15" fill="rgb(217,162,53)"/><text x="10.5402%" y="767.50">&lt;decor_mem::Shim as msql_srv::Mysq..</text></g><g><title>__GI___libc_free (8 samples, 0.24%)</title><rect x="32.5456%" y="757" width="0.2393%" height="15" fill="rgb(229,93,14)"/><text x="32.7956%" y="767.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.12%)</title><rect x="32.8747%" y="757" width="0.1197%" height="15" fill="rgb(209,67,49)"/><text x="33.1247%" y="767.50"></text></g><g><title>__libc_recv (4 samples, 0.12%)</title><rect x="33.0242%" y="757" width="0.1197%" height="15" fill="rgb(213,87,29)"/><text x="33.2742%" y="767.50"></text></g><g><title>_int_free (8 samples, 0.24%)</title><rect x="33.5328%" y="581" width="0.2393%" height="15" fill="rgb(205,151,52)"/><text x="33.7828%" y="591.50"></text></g><g><title>__libc_start_main (26 samples, 0.78%)</title><rect x="33.1439%" y="757" width="0.7777%" height="15" fill="rgb(253,215,39)"/><text x="33.3939%" y="767.50"></text></g><g><title>main (26 samples, 0.78%)</title><rect x="33.1439%" y="741" width="0.7777%" height="15" fill="rgb(221,220,41)"/><text x="33.3939%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (26 samples, 0.78%)</title><rect x="33.1439%" y="725" width="0.7777%" height="15" fill="rgb(218,133,21)"/><text x="33.3939%" y="735.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.78%)</title><rect x="33.1439%" y="709" width="0.7777%" height="15" fill="rgb(221,193,43)"/><text x="33.3939%" y="719.50"></text></g><g><title>std::panicking::try (26 samples, 0.78%)</title><rect x="33.1439%" y="693" width="0.7777%" height="15" fill="rgb(240,128,52)"/><text x="33.3939%" y="703.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.78%)</title><rect x="33.1439%" y="677" width="0.7777%" height="15" fill="rgb(253,114,12)"/><text x="33.3939%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (26 samples, 0.78%)</title><rect x="33.1439%" y="661" width="0.7777%" height="15" fill="rgb(215,223,47)"/><text x="33.3939%" y="671.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (26 samples, 0.78%)</title><rect x="33.1439%" y="645" width="0.7777%" height="15" fill="rgb(248,225,23)"/><text x="33.3939%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.78%)</title><rect x="33.1439%" y="629" width="0.7777%" height="15" fill="rgb(250,108,0)"/><text x="33.3939%" y="639.50"></text></g><g><title>lobsters_microbenchmarks::main (26 samples, 0.78%)</title><rect x="33.1439%" y="613" width="0.7777%" height="15" fill="rgb(228,208,7)"/><text x="33.3939%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (22 samples, 0.66%)</title><rect x="33.2635%" y="597" width="0.6581%" height="15" fill="rgb(244,45,10)"/><text x="33.5135%" y="607.50"></text></g><g><title>_int_free (7 samples, 0.21%)</title><rect x="33.9515%" y="757" width="0.2094%" height="15" fill="rgb(207,125,25)"/><text x="34.2015%" y="767.50"></text></g><g><title>_int_realloc (4 samples, 0.12%)</title><rect x="34.2208%" y="757" width="0.1197%" height="15" fill="rgb(210,195,18)"/><text x="34.4708%" y="767.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.18%)</title><rect x="34.6096%" y="757" width="0.1795%" height="15" fill="rgb(249,80,12)"/><text x="34.8596%" y="767.50"></text></g><g><title>core::fmt::write (5 samples, 0.15%)</title><rect x="34.9686%" y="757" width="0.1496%" height="15" fill="rgb(221,65,9)"/><text x="35.2186%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.12%)</title><rect x="35.3276%" y="757" width="0.1197%" height="15" fill="rgb(235,49,36)"/><text x="35.5776%" y="767.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (16 samples, 0.48%)</title><rect x="35.4472%" y="709" width="0.4786%" height="15" fill="rgb(225,32,20)"/><text x="35.6972%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (5 samples, 0.15%)</title><rect x="35.7762%" y="693" width="0.1496%" height="15" fill="rgb(215,141,46)"/><text x="36.0262%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.27%)</title><rect x="36.3745%" y="661" width="0.2692%" height="15" fill="rgb(250,160,47)"/><text x="36.6245%" y="671.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.27%)</title><rect x="36.3745%" y="645" width="0.2692%" height="15" fill="rgb(216,222,40)"/><text x="36.6245%" y="655.50"></text></g><g><title>_int_realloc (8 samples, 0.24%)</title><rect x="36.4044%" y="629" width="0.2393%" height="15" fill="rgb(234,217,39)"/><text x="36.6544%" y="639.50"></text></g><g><title>_int_malloc (7 samples, 0.21%)</title><rect x="36.4343%" y="613" width="0.2094%" height="15" fill="rgb(207,178,40)"/><text x="36.6843%" y="623.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (16 samples, 0.48%)</title><rect x="36.6437%" y="661" width="0.4786%" height="15" fill="rgb(221,136,13)"/><text x="36.8937%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (5 samples, 0.15%)</title><rect x="36.9728%" y="645" width="0.1496%" height="15" fill="rgb(249,199,10)"/><text x="37.2228%" y="655.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (62 samples, 1.85%)</title><rect x="35.4472%" y="757" width="1.8546%" height="15" fill="rgb(249,222,13)"/><text x="35.6972%" y="767.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (62 samples, 1.85%)</title><rect x="35.4472%" y="741" width="1.8546%" height="15" fill="rgb(244,185,38)"/><text x="35.6972%" y="751.50">m..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (62 samples, 1.85%)</title><rect x="35.4472%" y="725" width="1.8546%" height="15" fill="rgb(236,202,9)"/><text x="35.6972%" y="735.50">&lt;..</text></g><g><title>decor_mem::stats::get_qtype (46 samples, 1.38%)</title><rect x="35.9258%" y="709" width="1.3760%" height="15" fill="rgb(250,229,37)"/><text x="36.1758%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (46 samples, 1.38%)</title><rect x="35.9258%" y="693" width="1.3760%" height="15" fill="rgb(206,174,23)"/><text x="36.1758%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (35 samples, 1.05%)</title><rect x="36.2549%" y="677" width="1.0470%" height="15" fill="rgb(211,33,43)"/><text x="36.5049%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (6 samples, 0.18%)</title><rect x="37.1223%" y="661" width="0.1795%" height="15" fill="rgb(245,58,50)"/><text x="37.3723%" y="671.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.12%)</title><rect x="37.3916%" y="757" width="0.1197%" height="15" fill="rgb(244,68,36)"/><text x="37.6416%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.12%)</title><rect x="37.3916%" y="741" width="0.1197%" height="15" fill="rgb(232,229,15)"/><text x="37.6416%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.12%)</title><rect x="37.3916%" y="725" width="0.1197%" height="15" fill="rgb(254,30,23)"/><text x="37.6416%" y="735.50"></text></g><g><title>sk_wait_data (10 samples, 0.30%)</title><rect x="37.7206%" y="453" width="0.2991%" height="15" fill="rgb(235,160,14)"/><text x="37.9706%" y="463.50"></text></g><g><title>wait_woken (8 samples, 0.24%)</title><rect x="37.7804%" y="437" width="0.2393%" height="15" fill="rgb(212,155,44)"/><text x="38.0304%" y="447.50"></text></g><g><title>schedule_timeout (7 samples, 0.21%)</title><rect x="37.8103%" y="421" width="0.2094%" height="15" fill="rgb(226,2,50)"/><text x="38.0603%" y="431.50"></text></g><g><title>schedule (7 samples, 0.21%)</title><rect x="37.8103%" y="405" width="0.2094%" height="15" fill="rgb(234,177,6)"/><text x="38.0603%" y="415.50"></text></g><g><title>__schedule (7 samples, 0.21%)</title><rect x="37.8103%" y="389" width="0.2094%" height="15" fill="rgb(217,24,9)"/><text x="38.0603%" y="399.50"></text></g><g><title>inet_recvmsg (14 samples, 0.42%)</title><rect x="37.6907%" y="485" width="0.4188%" height="15" fill="rgb(220,13,46)"/><text x="37.9407%" y="495.50"></text></g><g><title>tcp_recvmsg (14 samples, 0.42%)</title><rect x="37.6907%" y="469" width="0.4188%" height="15" fill="rgb(239,221,27)"/><text x="37.9407%" y="479.50"></text></g><g><title>do_syscall_64 (15 samples, 0.45%)</title><rect x="37.6907%" y="533" width="0.4487%" height="15" fill="rgb(222,198,25)"/><text x="37.9407%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (15 samples, 0.45%)</title><rect x="37.6907%" y="517" width="0.4487%" height="15" fill="rgb(211,99,13)"/><text x="37.9407%" y="527.50"></text></g><g><title>__sys_recvfrom (15 samples, 0.45%)</title><rect x="37.6907%" y="501" width="0.4487%" height="15" fill="rgb(232,111,31)"/><text x="37.9407%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (19 samples, 0.57%)</title><rect x="37.6608%" y="645" width="0.5684%" height="15" fill="rgb(245,82,37)"/><text x="37.9108%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 0.57%)</title><rect x="37.6608%" y="629" width="0.5684%" height="15" fill="rgb(227,149,46)"/><text x="37.9108%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (19 samples, 0.57%)</title><rect x="37.6608%" y="613" width="0.5684%" height="15" fill="rgb(218,36,50)"/><text x="37.9108%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (19 samples, 0.57%)</title><rect x="37.6608%" y="597" width="0.5684%" height="15" fill="rgb(226,80,48)"/><text x="37.9108%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (19 samples, 0.57%)</title><rect x="37.6608%" y="581" width="0.5684%" height="15" fill="rgb(238,224,15)"/><text x="37.9108%" y="591.50"></text></g><g><title>__libc_recv (19 samples, 0.57%)</title><rect x="37.6608%" y="565" width="0.5684%" height="15" fill="rgb(241,136,10)"/><text x="37.9108%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.54%)</title><rect x="37.6907%" y="549" width="0.5384%" height="15" fill="rgb(208,32,45)"/><text x="37.9407%" y="559.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (21 samples, 0.63%)</title><rect x="37.6309%" y="693" width="0.6282%" height="15" fill="rgb(207,135,9)"/><text x="37.8809%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 0.63%)</title><rect x="37.6309%" y="677" width="0.6282%" height="15" fill="rgb(206,86,44)"/><text x="37.8809%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.60%)</title><rect x="37.6608%" y="661" width="0.5983%" height="15" fill="rgb(245,177,15)"/><text x="37.9108%" y="671.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.12%)</title><rect x="38.4385%" y="405" width="0.1197%" height="15" fill="rgb(206,64,50)"/><text x="38.6885%" y="415.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.12%)</title><rect x="38.4385%" y="389" width="0.1197%" height="15" fill="rgb(234,36,40)"/><text x="38.6885%" y="399.50"></text></g><g><title>loopback_xmit (4 samples, 0.12%)</title><rect x="38.4385%" y="373" width="0.1197%" height="15" fill="rgb(213,64,8)"/><text x="38.6885%" y="383.50"></text></g><g><title>sock_def_readable (6 samples, 0.18%)</title><rect x="38.6778%" y="181" width="0.1795%" height="15" fill="rgb(210,75,36)"/><text x="38.9278%" y="191.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.18%)</title><rect x="38.6778%" y="165" width="0.1795%" height="15" fill="rgb(229,88,21)"/><text x="38.9278%" y="175.50"></text></g><g><title>__wake_up_common (6 samples, 0.18%)</title><rect x="38.6778%" y="149" width="0.1795%" height="15" fill="rgb(252,204,47)"/><text x="38.9278%" y="159.50"></text></g><g><title>try_to_wake_up (6 samples, 0.18%)</title><rect x="38.6778%" y="133" width="0.1795%" height="15" fill="rgb(208,77,27)"/><text x="38.9278%" y="143.50"></text></g><g><title>tcp_ack (5 samples, 0.15%)</title><rect x="38.8573%" y="181" width="0.1496%" height="15" fill="rgb(221,76,26)"/><text x="39.1073%" y="191.50"></text></g><g><title>do_softirq (17 samples, 0.51%)</title><rect x="38.5582%" y="389" width="0.5085%" height="15" fill="rgb(225,139,18)"/><text x="38.8082%" y="399.50"></text></g><g><title>do_softirq_own_stack (16 samples, 0.48%)</title><rect x="38.5881%" y="373" width="0.4786%" height="15" fill="rgb(230,137,11)"/><text x="38.8381%" y="383.50"></text></g><g><title>__do_softirq (16 samples, 0.48%)</title><rect x="38.5881%" y="357" width="0.4786%" height="15" fill="rgb(212,28,1)"/><text x="38.8381%" y="367.50"></text></g><g><title>net_rx_action (16 samples, 0.48%)</title><rect x="38.5881%" y="341" width="0.4786%" height="15" fill="rgb(248,164,17)"/><text x="38.8381%" y="351.50"></text></g><g><title>process_backlog (15 samples, 0.45%)</title><rect x="38.6180%" y="325" width="0.4487%" height="15" fill="rgb(222,171,42)"/><text x="38.8680%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 0.45%)</title><rect x="38.6180%" y="309" width="0.4487%" height="15" fill="rgb(243,84,45)"/><text x="38.8680%" y="319.50"></text></g><g><title>ip_rcv (15 samples, 0.45%)</title><rect x="38.6180%" y="293" width="0.4487%" height="15" fill="rgb(252,49,23)"/><text x="38.8680%" y="303.50"></text></g><g><title>ip_local_deliver (15 samples, 0.45%)</title><rect x="38.6180%" y="277" width="0.4487%" height="15" fill="rgb(215,19,7)"/><text x="38.8680%" y="287.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 0.45%)</title><rect x="38.6180%" y="261" width="0.4487%" height="15" fill="rgb(238,81,41)"/><text x="38.8680%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 0.42%)</title><rect x="38.6479%" y="245" width="0.4188%" height="15" fill="rgb(210,199,37)"/><text x="38.8979%" y="255.50"></text></g><g><title>tcp_v4_rcv (14 samples, 0.42%)</title><rect x="38.6479%" y="229" width="0.4188%" height="15" fill="rgb(244,192,49)"/><text x="38.8979%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 0.39%)</title><rect x="38.6778%" y="213" width="0.3889%" height="15" fill="rgb(226,211,11)"/><text x="38.9278%" y="223.50"></text></g><g><title>tcp_rcv_established (13 samples, 0.39%)</title><rect x="38.6778%" y="197" width="0.3889%" height="15" fill="rgb(236,162,54)"/><text x="38.9278%" y="207.50"></text></g><g><title>ip_finish_output2 (23 samples, 0.69%)</title><rect x="38.4086%" y="421" width="0.6880%" height="15" fill="rgb(220,229,9)"/><text x="38.6586%" y="431.50"></text></g><g><title>__local_bh_enable_ip (18 samples, 0.54%)</title><rect x="38.5582%" y="405" width="0.5384%" height="15" fill="rgb(250,87,22)"/><text x="38.8082%" y="415.50"></text></g><g><title>__ip_queue_xmit (26 samples, 0.78%)</title><rect x="38.3488%" y="453" width="0.7777%" height="15" fill="rgb(239,43,17)"/><text x="38.5988%" y="463.50"></text></g><g><title>ip_output (24 samples, 0.72%)</title><rect x="38.4086%" y="437" width="0.7179%" height="15" fill="rgb(231,177,25)"/><text x="38.6586%" y="447.50"></text></g><g><title>__tcp_transmit_skb (28 samples, 0.84%)</title><rect x="38.3488%" y="469" width="0.8376%" height="15" fill="rgb(219,179,1)"/><text x="38.5988%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (31 samples, 0.93%)</title><rect x="38.3189%" y="501" width="0.9273%" height="15" fill="rgb(238,219,53)"/><text x="38.5689%" y="511.50"></text></g><g><title>tcp_write_xmit (31 samples, 0.93%)</title><rect x="38.3189%" y="485" width="0.9273%" height="15" fill="rgb(232,167,36)"/><text x="38.5689%" y="495.50"></text></g><g><title>__x64_sys_sendto (34 samples, 1.02%)</title><rect x="38.2590%" y="581" width="1.0171%" height="15" fill="rgb(244,19,51)"/><text x="38.5090%" y="591.50"></text></g><g><title>__sys_sendto (34 samples, 1.02%)</title><rect x="38.2590%" y="565" width="1.0171%" height="15" fill="rgb(224,6,22)"/><text x="38.5090%" y="575.50"></text></g><g><title>sock_sendmsg (34 samples, 1.02%)</title><rect x="38.2590%" y="549" width="1.0171%" height="15" fill="rgb(224,145,5)"/><text x="38.5090%" y="559.50"></text></g><g><title>tcp_sendmsg (34 samples, 1.02%)</title><rect x="38.2590%" y="533" width="1.0171%" height="15" fill="rgb(234,130,49)"/><text x="38.5090%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (33 samples, 0.99%)</title><rect x="38.2890%" y="517" width="0.9871%" height="15" fill="rgb(254,6,2)"/><text x="38.5390%" y="527.50"></text></g><g><title>do_syscall_64 (35 samples, 1.05%)</title><rect x="38.2590%" y="597" width="1.0470%" height="15" fill="rgb(208,96,46)"/><text x="38.5090%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (58 samples, 1.73%)</title><rect x="37.6010%" y="725" width="1.7350%" height="15" fill="rgb(239,3,39)"/><text x="37.8510%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (58 samples, 1.73%)</title><rect x="37.6010%" y="709" width="1.7350%" height="15" fill="rgb(233,210,1)"/><text x="37.8510%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (36 samples, 1.08%)</title><rect x="38.2590%" y="693" width="1.0769%" height="15" fill="rgb(244,137,37)"/><text x="38.5090%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (36 samples, 1.08%)</title><rect x="38.2590%" y="677" width="1.0769%" height="15" fill="rgb(240,136,2)"/><text x="38.5090%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (36 samples, 1.08%)</title><rect x="38.2590%" y="661" width="1.0769%" height="15" fill="rgb(239,18,37)"/><text x="38.5090%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (36 samples, 1.08%)</title><rect x="38.2590%" y="645" width="1.0769%" height="15" fill="rgb(218,185,22)"/><text x="38.5090%" y="655.50"></text></g><g><title>__libc_send (36 samples, 1.08%)</title><rect x="38.2590%" y="629" width="1.0769%" height="15" fill="rgb(225,218,4)"/><text x="38.5090%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (36 samples, 1.08%)</title><rect x="38.2590%" y="613" width="1.0769%" height="15" fill="rgb(230,182,32)"/><text x="38.5090%" y="623.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.12%)</title><rect x="39.5154%" y="293" width="0.1197%" height="15" fill="rgb(242,56,43)"/><text x="39.7654%" y="303.50"></text></g><g><title>ip_rcv (4 samples, 0.12%)</title><rect x="39.5154%" y="277" width="0.1197%" height="15" fill="rgb(233,99,24)"/><text x="39.7654%" y="287.50"></text></g><g><title>ip_local_deliver (4 samples, 0.12%)</title><rect x="39.5154%" y="261" width="0.1197%" height="15" fill="rgb(234,209,42)"/><text x="39.7654%" y="271.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.12%)</title><rect x="39.5154%" y="245" width="0.1197%" height="15" fill="rgb(227,7,12)"/><text x="39.7654%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.12%)</title><rect x="39.5154%" y="229" width="0.1197%" height="15" fill="rgb(245,203,43)"/><text x="39.7654%" y="239.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.12%)</title><rect x="39.5154%" y="213" width="0.1197%" height="15" fill="rgb(238,205,33)"/><text x="39.7654%" y="223.50"></text></g><g><title>mysql::conn::queryable::Queryable::query (9 samples, 0.27%)</title><rect x="39.3958%" y="725" width="0.2692%" height="15" fill="rgb(231,56,7)"/><text x="39.6458%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (8 samples, 0.24%)</title><rect x="39.4257%" y="709" width="0.2393%" height="15" fill="rgb(244,186,29)"/><text x="39.6757%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (8 samples, 0.24%)</title><rect x="39.4257%" y="693" width="0.2393%" height="15" fill="rgb(234,111,31)"/><text x="39.6757%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (6 samples, 0.18%)</title><rect x="39.4855%" y="677" width="0.1795%" height="15" fill="rgb(241,149,10)"/><text x="39.7355%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (6 samples, 0.18%)</title><rect x="39.4855%" y="661" width="0.1795%" height="15" fill="rgb(249,206,44)"/><text x="39.7355%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (6 samples, 0.18%)</title><rect x="39.4855%" y="645" width="0.1795%" height="15" fill="rgb(251,153,30)"/><text x="39.7355%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (6 samples, 0.18%)</title><rect x="39.4855%" y="629" width="0.1795%" height="15" fill="rgb(239,152,38)"/><text x="39.7355%" y="639.50"></text></g><g><title>__libc_send (6 samples, 0.18%)</title><rect x="39.4855%" y="613" width="0.1795%" height="15" fill="rgb(249,139,47)"/><text x="39.7355%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.18%)</title><rect x="39.4855%" y="597" width="0.1795%" height="15" fill="rgb(244,64,35)"/><text x="39.7355%" y="607.50"></text></g><g><title>do_syscall_64 (6 samples, 0.18%)</title><rect x="39.4855%" y="581" width="0.1795%" height="15" fill="rgb(216,46,15)"/><text x="39.7355%" y="591.50"></text></g><g><title>__x64_sys_sendto (6 samples, 0.18%)</title><rect x="39.4855%" y="565" width="0.1795%" height="15" fill="rgb(250,74,19)"/><text x="39.7355%" y="575.50"></text></g><g><title>__sys_sendto (6 samples, 0.18%)</title><rect x="39.4855%" y="549" width="0.1795%" height="15" fill="rgb(249,42,33)"/><text x="39.7355%" y="559.50"></text></g><g><title>sock_sendmsg (6 samples, 0.18%)</title><rect x="39.4855%" y="533" width="0.1795%" height="15" fill="rgb(242,149,17)"/><text x="39.7355%" y="543.50"></text></g><g><title>tcp_sendmsg (6 samples, 0.18%)</title><rect x="39.4855%" y="517" width="0.1795%" height="15" fill="rgb(244,29,21)"/><text x="39.7355%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (6 samples, 0.18%)</title><rect x="39.4855%" y="501" width="0.1795%" height="15" fill="rgb(220,130,37)"/><text x="39.7355%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (6 samples, 0.18%)</title><rect x="39.4855%" y="485" width="0.1795%" height="15" fill="rgb(211,67,2)"/><text x="39.7355%" y="495.50"></text></g><g><title>tcp_write_xmit (6 samples, 0.18%)</title><rect x="39.4855%" y="469" width="0.1795%" height="15" fill="rgb(235,68,52)"/><text x="39.7355%" y="479.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.18%)</title><rect x="39.4855%" y="453" width="0.1795%" height="15" fill="rgb(246,142,3)"/><text x="39.7355%" y="463.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.18%)</title><rect x="39.4855%" y="437" width="0.1795%" height="15" fill="rgb(241,25,7)"/><text x="39.7355%" y="447.50"></text></g><g><title>ip_output (6 samples, 0.18%)</title><rect x="39.4855%" y="421" width="0.1795%" height="15" fill="rgb(242,119,39)"/><text x="39.7355%" y="431.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.15%)</title><rect x="39.5154%" y="405" width="0.1496%" height="15" fill="rgb(241,98,45)"/><text x="39.7654%" y="415.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.15%)</title><rect x="39.5154%" y="389" width="0.1496%" height="15" fill="rgb(254,28,30)"/><text x="39.7654%" y="399.50"></text></g><g><title>do_softirq (5 samples, 0.15%)</title><rect x="39.5154%" y="373" width="0.1496%" height="15" fill="rgb(241,142,54)"/><text x="39.7654%" y="383.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.15%)</title><rect x="39.5154%" y="357" width="0.1496%" height="15" fill="rgb(222,85,15)"/><text x="39.7654%" y="367.50"></text></g><g><title>__do_softirq (5 samples, 0.15%)</title><rect x="39.5154%" y="341" width="0.1496%" height="15" fill="rgb(210,85,47)"/><text x="39.7654%" y="351.50"></text></g><g><title>net_rx_action (5 samples, 0.15%)</title><rect x="39.5154%" y="325" width="0.1496%" height="15" fill="rgb(224,206,25)"/><text x="39.7654%" y="335.50"></text></g><g><title>process_backlog (5 samples, 0.15%)</title><rect x="39.5154%" y="309" width="0.1496%" height="15" fill="rgb(243,201,19)"/><text x="39.7654%" y="319.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.12%)</title><rect x="39.7248%" y="677" width="0.1197%" height="15" fill="rgb(236,59,4)"/><text x="39.9748%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.12%)</title><rect x="39.7248%" y="661" width="0.1197%" height="15" fill="rgb(254,179,45)"/><text x="39.9748%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="39.7248%" y="645" width="0.1197%" height="15" fill="rgb(226,14,10)"/><text x="39.9748%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.12%)</title><rect x="39.7248%" y="629" width="0.1197%" height="15" fill="rgb(244,27,41)"/><text x="39.9748%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.12%)</title><rect x="39.7248%" y="613" width="0.1197%" height="15" fill="rgb(235,35,32)"/><text x="39.9748%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.12%)</title><rect x="39.7248%" y="597" width="0.1197%" height="15" fill="rgb(218,68,31)"/><text x="39.9748%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (4 samples, 0.12%)</title><rect x="39.7248%" y="581" width="0.1197%" height="15" fill="rgb(207,120,37)"/><text x="39.9748%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.12%)</title><rect x="39.7248%" y="565" width="0.1197%" height="15" fill="rgb(227,98,0)"/><text x="39.9748%" y="575.50"></text></g><g><title>__libc_recv (4 samples, 0.12%)</title><rect x="39.7248%" y="549" width="0.1197%" height="15" fill="rgb(207,7,3)"/><text x="39.9748%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.12%)</title><rect x="39.7248%" y="533" width="0.1197%" height="15" fill="rgb(206,98,19)"/><text x="39.9748%" y="543.50"></text></g><g><title>__x64_sys_sendto (7 samples, 0.21%)</title><rect x="39.8445%" y="565" width="0.2094%" height="15" fill="rgb(217,5,26)"/><text x="40.0945%" y="575.50"></text></g><g><title>__sys_sendto (7 samples, 0.21%)</title><rect x="39.8445%" y="549" width="0.2094%" height="15" fill="rgb(235,190,38)"/><text x="40.0945%" y="559.50"></text></g><g><title>sock_sendmsg (6 samples, 0.18%)</title><rect x="39.8744%" y="533" width="0.1795%" height="15" fill="rgb(247,86,24)"/><text x="40.1244%" y="543.50"></text></g><g><title>tcp_sendmsg (6 samples, 0.18%)</title><rect x="39.8744%" y="517" width="0.1795%" height="15" fill="rgb(205,101,16)"/><text x="40.1244%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (6 samples, 0.18%)</title><rect x="39.8744%" y="501" width="0.1795%" height="15" fill="rgb(246,168,33)"/><text x="40.1244%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (6 samples, 0.18%)</title><rect x="39.8744%" y="485" width="0.1795%" height="15" fill="rgb(231,114,1)"/><text x="40.1244%" y="495.50"></text></g><g><title>tcp_write_xmit (6 samples, 0.18%)</title><rect x="39.8744%" y="469" width="0.1795%" height="15" fill="rgb(207,184,53)"/><text x="40.1244%" y="479.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.18%)</title><rect x="39.8744%" y="453" width="0.1795%" height="15" fill="rgb(224,95,51)"/><text x="40.1244%" y="463.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.18%)</title><rect x="39.8744%" y="437" width="0.1795%" height="15" fill="rgb(212,188,45)"/><text x="40.1244%" y="447.50"></text></g><g><title>ip_output (6 samples, 0.18%)</title><rect x="39.8744%" y="421" width="0.1795%" height="15" fill="rgb(223,154,38)"/><text x="40.1244%" y="431.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.18%)</title><rect x="39.8744%" y="405" width="0.1795%" height="15" fill="rgb(251,22,52)"/><text x="40.1244%" y="415.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.15%)</title><rect x="39.9043%" y="389" width="0.1496%" height="15" fill="rgb(229,209,22)"/><text x="40.1543%" y="399.50"></text></g><g><title>do_softirq (5 samples, 0.15%)</title><rect x="39.9043%" y="373" width="0.1496%" height="15" fill="rgb(234,138,34)"/><text x="40.1543%" y="383.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.15%)</title><rect x="39.9043%" y="357" width="0.1496%" height="15" fill="rgb(212,95,11)"/><text x="40.1543%" y="367.50"></text></g><g><title>__do_softirq (5 samples, 0.15%)</title><rect x="39.9043%" y="341" width="0.1496%" height="15" fill="rgb(240,179,47)"/><text x="40.1543%" y="351.50"></text></g><g><title>net_rx_action (5 samples, 0.15%)</title><rect x="39.9043%" y="325" width="0.1496%" height="15" fill="rgb(240,163,11)"/><text x="40.1543%" y="335.50"></text></g><g><title>process_backlog (5 samples, 0.15%)</title><rect x="39.9043%" y="309" width="0.1496%" height="15" fill="rgb(236,37,12)"/><text x="40.1543%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.15%)</title><rect x="39.9043%" y="293" width="0.1496%" height="15" fill="rgb(232,164,16)"/><text x="40.1543%" y="303.50"></text></g><g><title>ip_rcv (5 samples, 0.15%)</title><rect x="39.9043%" y="277" width="0.1496%" height="15" fill="rgb(244,205,15)"/><text x="40.1543%" y="287.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (13 samples, 0.39%)</title><rect x="39.6949%" y="709" width="0.3889%" height="15" fill="rgb(223,117,47)"/><text x="39.9449%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (13 samples, 0.39%)</title><rect x="39.6949%" y="693" width="0.3889%" height="15" fill="rgb(244,107,35)"/><text x="39.9449%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (8 samples, 0.24%)</title><rect x="39.8445%" y="677" width="0.2393%" height="15" fill="rgb(205,140,8)"/><text x="40.0945%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (8 samples, 0.24%)</title><rect x="39.8445%" y="661" width="0.2393%" height="15" fill="rgb(228,84,46)"/><text x="40.0945%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (8 samples, 0.24%)</title><rect x="39.8445%" y="645" width="0.2393%" height="15" fill="rgb(254,188,9)"/><text x="40.0945%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (8 samples, 0.24%)</title><rect x="39.8445%" y="629" width="0.2393%" height="15" fill="rgb(206,112,54)"/><text x="40.0945%" y="639.50"></text></g><g><title>__libc_send (8 samples, 0.24%)</title><rect x="39.8445%" y="613" width="0.2393%" height="15" fill="rgb(216,84,49)"/><text x="40.0945%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.24%)</title><rect x="39.8445%" y="597" width="0.2393%" height="15" fill="rgb(214,194,35)"/><text x="40.0945%" y="607.50"></text></g><g><title>do_syscall_64 (8 samples, 0.24%)</title><rect x="39.8445%" y="581" width="0.2393%" height="15" fill="rgb(249,28,3)"/><text x="40.0945%" y="591.50"></text></g><g><title>lobsters_microbenchmarks::queriers::comment::post_comment (87 samples, 2.60%)</title><rect x="37.6010%" y="741" width="2.6025%" height="15" fill="rgb(222,56,52)"/><text x="37.8510%" y="751.50">lo..</text></g><g><title>mysql::conn::queryable::Queryable::query_first (18 samples, 0.54%)</title><rect x="39.6650%" y="725" width="0.5384%" height="15" fill="rgb(245,217,50)"/><text x="39.9150%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="40.0838%" y="709" width="0.1197%" height="15" fill="rgb(213,201,24)"/><text x="40.3338%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (10 samples, 0.30%)</title><rect x="40.2632%" y="533" width="0.2991%" height="15" fill="rgb(248,116,28)"/><text x="40.5132%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.30%)</title><rect x="40.2632%" y="517" width="0.2991%" height="15" fill="rgb(219,72,43)"/><text x="40.5132%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (10 samples, 0.30%)</title><rect x="40.2632%" y="501" width="0.2991%" height="15" fill="rgb(209,138,14)"/><text x="40.5132%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.30%)</title><rect x="40.2632%" y="485" width="0.2991%" height="15" fill="rgb(222,18,33)"/><text x="40.5132%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.27%)</title><rect x="40.2931%" y="469" width="0.2692%" height="15" fill="rgb(213,199,7)"/><text x="40.5431%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.27%)</title><rect x="40.2931%" y="453" width="0.2692%" height="15" fill="rgb(250,110,10)"/><text x="40.5431%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.27%)</title><rect x="40.2931%" y="437" width="0.2692%" height="15" fill="rgb(248,123,6)"/><text x="40.5431%" y="447.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.27%)</title><rect x="40.2931%" y="421" width="0.2692%" height="15" fill="rgb(206,91,31)"/><text x="40.5431%" y="431.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.24%)</title><rect x="40.3231%" y="405" width="0.2393%" height="15" fill="rgb(211,154,13)"/><text x="40.5731%" y="415.50"></text></g><g><title>_int_malloc (7 samples, 0.21%)</title><rect x="40.3530%" y="389" width="0.2094%" height="15" fill="rgb(225,148,7)"/><text x="40.6030%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.33%)</title><rect x="40.2632%" y="629" width="0.3290%" height="15" fill="rgb(220,160,43)"/><text x="40.5132%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.33%)</title><rect x="40.2632%" y="613" width="0.3290%" height="15" fill="rgb(213,52,39)"/><text x="40.5132%" y="623.50"></text></g><g><title>alloc::string::String::push_str (11 samples, 0.33%)</title><rect x="40.2632%" y="597" width="0.3290%" height="15" fill="rgb(243,137,7)"/><text x="40.5132%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 0.33%)</title><rect x="40.2632%" y="581" width="0.3290%" height="15" fill="rgb(230,79,13)"/><text x="40.5132%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.33%)</title><rect x="40.2632%" y="565" width="0.3290%" height="15" fill="rgb(247,105,23)"/><text x="40.5132%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (11 samples, 0.33%)</title><rect x="40.2632%" y="549" width="0.3290%" height="15" fill="rgb(223,179,41)"/><text x="40.5132%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (14 samples, 0.42%)</title><rect x="40.2333%" y="661" width="0.4188%" height="15" fill="rgb(218,9,34)"/><text x="40.4833%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (13 samples, 0.39%)</title><rect x="40.2632%" y="645" width="0.3889%" height="15" fill="rgb(222,106,8)"/><text x="40.5132%" y="655.50"></text></g><g><title>alloc::fmt::format (16 samples, 0.48%)</title><rect x="40.2034%" y="709" width="0.4786%" height="15" fill="rgb(211,220,0)"/><text x="40.4534%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (16 samples, 0.48%)</title><rect x="40.2034%" y="693" width="0.4786%" height="15" fill="rgb(229,52,16)"/><text x="40.4534%" y="703.50"></text></g><g><title>core::fmt::write (16 samples, 0.48%)</title><rect x="40.2034%" y="677" width="0.4786%" height="15" fill="rgb(212,155,18)"/><text x="40.4534%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.15%)</title><rect x="40.6820%" y="645" width="0.1496%" height="15" fill="rgb(242,21,14)"/><text x="40.9320%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.15%)</title><rect x="40.6820%" y="629" width="0.1496%" height="15" fill="rgb(222,19,48)"/><text x="40.9320%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.66%)</title><rect x="40.2034%" y="725" width="0.6581%" height="15" fill="rgb(232,45,27)"/><text x="40.4534%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.18%)</title><rect x="40.6820%" y="709" width="0.1795%" height="15" fill="rgb(249,103,42)"/><text x="40.9320%" y="719.50"></text></g><g><title>core::fmt::write (6 samples, 0.18%)</title><rect x="40.6820%" y="693" width="0.1795%" height="15" fill="rgb(246,81,33)"/><text x="40.9320%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (6 samples, 0.18%)</title><rect x="40.6820%" y="677" width="0.1795%" height="15" fill="rgb(252,33,42)"/><text x="40.9320%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (6 samples, 0.18%)</title><rect x="40.6820%" y="661" width="0.1795%" height="15" fill="rgb(209,212,41)"/><text x="40.9320%" y="671.50"></text></g><g><title>remove_wait_queue (5 samples, 0.15%)</title><rect x="41.9085%" y="437" width="0.1496%" height="15" fill="rgb(207,154,6)"/><text x="42.1585%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.12%)</title><rect x="41.9384%" y="421" width="0.1197%" height="15" fill="rgb(223,64,47)"/><text x="42.1884%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (7 samples, 0.21%)</title><rect x="42.2973%" y="373" width="0.2094%" height="15" fill="rgb(211,161,38)"/><text x="42.5473%" y="383.50"></text></g><g><title>ctx_sched_out (6 samples, 0.18%)</title><rect x="42.3273%" y="357" width="0.1795%" height="15" fill="rgb(219,138,40)"/><text x="42.5773%" y="367.50"></text></g><g><title>dequeue_task_fair (10 samples, 0.30%)</title><rect x="42.5067%" y="373" width="0.2991%" height="15" fill="rgb(241,228,46)"/><text x="42.7567%" y="383.50"></text></g><g><title>dequeue_entity (10 samples, 0.30%)</title><rect x="42.5067%" y="357" width="0.2991%" height="15" fill="rgb(223,209,38)"/><text x="42.7567%" y="367.50"></text></g><g><title>update_load_avg (4 samples, 0.12%)</title><rect x="42.6862%" y="341" width="0.1197%" height="15" fill="rgb(236,164,45)"/><text x="42.9362%" y="351.50"></text></g><g><title>psi_task_change (6 samples, 0.18%)</title><rect x="42.8358%" y="373" width="0.1795%" height="15" fill="rgb(231,15,5)"/><text x="43.0858%" y="383.50"></text></g><g><title>psi_group_change (6 samples, 0.18%)</title><rect x="42.8358%" y="357" width="0.1795%" height="15" fill="rgb(252,35,15)"/><text x="43.0858%" y="367.50"></text></g><g><title>record_times (4 samples, 0.12%)</title><rect x="42.8956%" y="341" width="0.1197%" height="15" fill="rgb(248,181,18)"/><text x="43.1456%" y="351.50"></text></g><g><title>sk_wait_data (47 samples, 1.41%)</title><rect x="41.6692%" y="453" width="1.4059%" height="15" fill="rgb(233,39,42)"/><text x="41.9192%" y="463.50"></text></g><g><title>wait_woken (34 samples, 1.02%)</title><rect x="42.0580%" y="437" width="1.0171%" height="15" fill="rgb(238,110,33)"/><text x="42.3080%" y="447.50"></text></g><g><title>schedule_timeout (32 samples, 0.96%)</title><rect x="42.1179%" y="421" width="0.9572%" height="15" fill="rgb(233,195,10)"/><text x="42.3679%" y="431.50"></text></g><g><title>schedule (30 samples, 0.90%)</title><rect x="42.1777%" y="405" width="0.8974%" height="15" fill="rgb(254,105,3)"/><text x="42.4277%" y="415.50"></text></g><g><title>__schedule (29 samples, 0.87%)</title><rect x="42.2076%" y="389" width="0.8675%" height="15" fill="rgb(221,225,9)"/><text x="42.4576%" y="399.50"></text></g><g><title>_copy_to_iter (8 samples, 0.24%)</title><rect x="43.1050%" y="421" width="0.2393%" height="15" fill="rgb(224,227,45)"/><text x="43.3550%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (8 samples, 0.24%)</title><rect x="43.1050%" y="405" width="0.2393%" height="15" fill="rgb(229,198,43)"/><text x="43.3550%" y="415.50"></text></g><g><title>page_fault (6 samples, 0.18%)</title><rect x="43.1648%" y="389" width="0.1795%" height="15" fill="rgb(206,209,35)"/><text x="43.4148%" y="399.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.15%)</title><rect x="43.1947%" y="373" width="0.1496%" height="15" fill="rgb(245,195,53)"/><text x="43.4447%" y="383.50"></text></g><g><title>handle_mm_fault (4 samples, 0.12%)</title><rect x="43.2246%" y="357" width="0.1197%" height="15" fill="rgb(240,92,26)"/><text x="43.4746%" y="367.50"></text></g><g><title>skb_copy_datagram_iter (12 samples, 0.36%)</title><rect x="43.0751%" y="453" width="0.3590%" height="15" fill="rgb(207,40,23)"/><text x="43.3251%" y="463.50"></text></g><g><title>__skb_datagram_iter (12 samples, 0.36%)</title><rect x="43.0751%" y="437" width="0.3590%" height="15" fill="rgb(223,111,35)"/><text x="43.3251%" y="447.50"></text></g><g><title>inet_recvmsg (64 samples, 1.91%)</title><rect x="41.5495%" y="485" width="1.9144%" height="15" fill="rgb(229,147,28)"/><text x="41.7995%" y="495.50">i..</text></g><g><title>tcp_recvmsg (64 samples, 1.91%)</title><rect x="41.5495%" y="469" width="1.9144%" height="15" fill="rgb(211,29,28)"/><text x="41.7995%" y="479.50">t..</text></g><g><title>__x64_sys_recvfrom (68 samples, 2.03%)</title><rect x="41.4598%" y="517" width="2.0341%" height="15" fill="rgb(228,72,33)"/><text x="41.7098%" y="527.50">_..</text></g><g><title>__sys_recvfrom (68 samples, 2.03%)</title><rect x="41.4598%" y="501" width="2.0341%" height="15" fill="rgb(205,214,31)"/><text x="41.7098%" y="511.50">_..</text></g><g><title>do_syscall_64 (70 samples, 2.09%)</title><rect x="41.4598%" y="533" width="2.0939%" height="15" fill="rgb(224,111,15)"/><text x="41.7098%" y="543.50">d..</text></g><g><title>entry_SYSCALL_64 (77 samples, 2.30%)</title><rect x="41.4598%" y="549" width="2.3033%" height="15" fill="rgb(253,21,26)"/><text x="41.7098%" y="559.50">e..</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.21%)</title><rect x="43.5537%" y="533" width="0.2094%" height="15" fill="rgb(245,139,43)"/><text x="43.8037%" y="543.50"></text></g><g><title>__libc_recv (86 samples, 2.57%)</title><rect x="41.3700%" y="565" width="2.5725%" height="15" fill="rgb(252,170,7)"/><text x="41.6200%" y="575.50">__..</text></g><g><title>syscall_return_via_sysret (6 samples, 0.18%)</title><rect x="43.7631%" y="549" width="0.1795%" height="15" fill="rgb(231,118,14)"/><text x="44.0131%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (87 samples, 2.60%)</title><rect x="41.3700%" y="645" width="2.6025%" height="15" fill="rgb(238,83,0)"/><text x="41.6200%" y="655.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (87 samples, 2.60%)</title><rect x="41.3700%" y="629" width="2.6025%" height="15" fill="rgb(221,39,39)"/><text x="41.6200%" y="639.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (87 samples, 2.60%)</title><rect x="41.3700%" y="613" width="2.6025%" height="15" fill="rgb(222,119,46)"/><text x="41.6200%" y="623.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (87 samples, 2.60%)</title><rect x="41.3700%" y="597" width="2.6025%" height="15" fill="rgb(222,165,49)"/><text x="41.6200%" y="607.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (87 samples, 2.60%)</title><rect x="41.3700%" y="581" width="2.6025%" height="15" fill="rgb(219,113,52)"/><text x="41.6200%" y="591.50">st..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 3.08%)</title><rect x="41.2205%" y="661" width="3.0811%" height="15" fill="rgb(214,7,15)"/><text x="41.4705%" y="671.50">&lt;my..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (11 samples, 0.33%)</title><rect x="43.9725%" y="645" width="0.3290%" height="15" fill="rgb(235,32,4)"/><text x="44.2225%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (11 samples, 0.33%)</title><rect x="43.9725%" y="629" width="0.3290%" height="15" fill="rgb(238,90,54)"/><text x="44.2225%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (11 samples, 0.33%)</title><rect x="43.9725%" y="613" width="0.3290%" height="15" fill="rgb(213,208,19)"/><text x="44.2225%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (9 samples, 0.27%)</title><rect x="44.0323%" y="597" width="0.2692%" height="15" fill="rgb(233,156,4)"/><text x="44.2823%" y="607.50"></text></g><g><title>_int_free (4 samples, 0.12%)</title><rect x="44.3614%" y="661" width="0.1197%" height="15" fill="rgb(207,194,5)"/><text x="44.6114%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (114 samples, 3.41%)</title><rect x="41.1307%" y="677" width="3.4101%" height="15" fill="rgb(206,111,30)"/><text x="41.3807%" y="687.50">mys..</text></g><g><title>mysql::conn::Conn::handle_result_set (122 samples, 3.65%)</title><rect x="41.0111%" y="693" width="3.6494%" height="15" fill="rgb(243,70,54)"/><text x="41.2611%" y="703.50">mysq..</text></g><g><title>mysql_common::packets::column_from_payload (4 samples, 0.12%)</title><rect x="44.5408%" y="677" width="0.1197%" height="15" fill="rgb(242,28,8)"/><text x="44.7908%" y="687.50"></text></g><g><title>eth_type_trans (4 samples, 0.12%)</title><rect x="45.7074%" y="357" width="0.1197%" height="15" fill="rgb(219,106,18)"/><text x="45.9574%" y="367.50"></text></g><g><title>dev_hard_start_xmit (9 samples, 0.27%)</title><rect x="45.7074%" y="389" width="0.2692%" height="15" fill="rgb(244,222,10)"/><text x="45.9574%" y="399.50"></text></g><g><title>loopback_xmit (9 samples, 0.27%)</title><rect x="45.7074%" y="373" width="0.2692%" height="15" fill="rgb(236,179,52)"/><text x="45.9574%" y="383.50"></text></g><g><title>__dev_queue_xmit (14 samples, 0.42%)</title><rect x="45.6177%" y="405" width="0.4188%" height="15" fill="rgb(213,23,39)"/><text x="45.8677%" y="415.50"></text></g><g><title>psi_task_change (6 samples, 0.18%)</title><rect x="46.8142%" y="101" width="0.1795%" height="15" fill="rgb(238,48,10)"/><text x="47.0642%" y="111.50"></text></g><g><title>enqueue_task (7 samples, 0.21%)</title><rect x="46.8142%" y="117" width="0.2094%" height="15" fill="rgb(251,196,23)"/><text x="47.0642%" y="127.50"></text></g><g><title>__wake_up_common (18 samples, 0.54%)</title><rect x="46.6048%" y="149" width="0.5384%" height="15" fill="rgb(250,152,24)"/><text x="46.8548%" y="159.50"></text></g><g><title>try_to_wake_up (17 samples, 0.51%)</title><rect x="46.6348%" y="133" width="0.5085%" height="15" fill="rgb(209,150,17)"/><text x="46.8848%" y="143.50"></text></g><g><title>sock_def_readable (20 samples, 0.60%)</title><rect x="46.6048%" y="181" width="0.5983%" height="15" fill="rgb(234,202,34)"/><text x="46.8548%" y="191.50"></text></g><g><title>__wake_up_common_lock (20 samples, 0.60%)</title><rect x="46.6048%" y="165" width="0.5983%" height="15" fill="rgb(253,148,53)"/><text x="46.8548%" y="175.50"></text></g><g><title>__kfree_skb (4 samples, 0.12%)</title><rect x="47.3228%" y="165" width="0.1197%" height="15" fill="rgb(218,129,16)"/><text x="47.5728%" y="175.50"></text></g><g><title>tcp_ack (20 samples, 0.60%)</title><rect x="47.2031%" y="181" width="0.5983%" height="15" fill="rgb(216,85,19)"/><text x="47.4531%" y="191.50"></text></g><g><title>psi_task_change (4 samples, 0.12%)</title><rect x="47.9509%" y="85" width="0.1197%" height="15" fill="rgb(235,228,7)"/><text x="48.2009%" y="95.50"></text></g><g><title>psi_group_change (4 samples, 0.12%)</title><rect x="47.9509%" y="69" width="0.1197%" height="15" fill="rgb(245,175,0)"/><text x="48.2009%" y="79.50"></text></g><g><title>enqueue_task (5 samples, 0.15%)</title><rect x="47.9509%" y="101" width="0.1496%" height="15" fill="rgb(208,168,36)"/><text x="48.2009%" y="111.50"></text></g><g><title>tcp_data_queue (14 samples, 0.42%)</title><rect x="47.8014%" y="181" width="0.4188%" height="15" fill="rgb(246,171,24)"/><text x="48.0514%" y="191.50"></text></g><g><title>sock_def_readable (14 samples, 0.42%)</title><rect x="47.8014%" y="165" width="0.4188%" height="15" fill="rgb(215,142,24)"/><text x="48.0514%" y="175.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.42%)</title><rect x="47.8014%" y="149" width="0.4188%" height="15" fill="rgb(250,187,7)"/><text x="48.0514%" y="159.50"></text></g><g><title>__wake_up_common (14 samples, 0.42%)</title><rect x="47.8014%" y="133" width="0.4188%" height="15" fill="rgb(228,66,33)"/><text x="48.0514%" y="143.50"></text></g><g><title>try_to_wake_up (14 samples, 0.42%)</title><rect x="47.8014%" y="117" width="0.4188%" height="15" fill="rgb(234,215,21)"/><text x="48.0514%" y="127.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.12%)</title><rect x="48.1005%" y="101" width="0.1197%" height="15" fill="rgb(222,191,20)"/><text x="48.3505%" y="111.50"></text></g><g><title>enqueue_entity (4 samples, 0.12%)</title><rect x="48.1005%" y="85" width="0.1197%" height="15" fill="rgb(245,79,54)"/><text x="48.3505%" y="95.50"></text></g><g><title>tcp_v4_do_rcv (59 samples, 1.76%)</title><rect x="46.5151%" y="213" width="1.7649%" height="15" fill="rgb(240,10,37)"/><text x="46.7651%" y="223.50"></text></g><g><title>tcp_rcv_established (59 samples, 1.76%)</title><rect x="46.5151%" y="197" width="1.7649%" height="15" fill="rgb(214,192,32)"/><text x="46.7651%" y="207.50"></text></g><g><title>ip_local_deliver (69 samples, 2.06%)</title><rect x="46.2459%" y="277" width="2.0640%" height="15" fill="rgb(209,36,54)"/><text x="46.4959%" y="287.50">i..</text></g><g><title>ip_local_deliver_finish (69 samples, 2.06%)</title><rect x="46.2459%" y="261" width="2.0640%" height="15" fill="rgb(220,10,11)"/><text x="46.4959%" y="271.50">i..</text></g><g><title>ip_protocol_deliver_rcu (67 samples, 2.00%)</title><rect x="46.3057%" y="245" width="2.0042%" height="15" fill="rgb(221,106,17)"/><text x="46.5557%" y="255.50">i..</text></g><g><title>tcp_v4_rcv (66 samples, 1.97%)</title><rect x="46.3356%" y="229" width="1.9743%" height="15" fill="rgb(251,142,44)"/><text x="46.5856%" y="239.50">t..</text></g><g><title>__netif_receive_skb_one_core (72 samples, 2.15%)</title><rect x="46.1861%" y="309" width="2.1538%" height="15" fill="rgb(238,13,15)"/><text x="46.4361%" y="319.50">_..</text></g><g><title>ip_rcv (70 samples, 2.09%)</title><rect x="46.2459%" y="293" width="2.0939%" height="15" fill="rgb(208,107,27)"/><text x="46.4959%" y="303.50">i..</text></g><g><title>ip_finish_output2 (93 samples, 2.78%)</title><rect x="45.5878%" y="421" width="2.7819%" height="15" fill="rgb(205,136,37)"/><text x="45.8378%" y="431.50">ip..</text></g><g><title>__local_bh_enable_ip (78 samples, 2.33%)</title><rect x="46.0365%" y="405" width="2.3332%" height="15" fill="rgb(250,205,27)"/><text x="46.2865%" y="415.50">_..</text></g><g><title>do_softirq (78 samples, 2.33%)</title><rect x="46.0365%" y="389" width="2.3332%" height="15" fill="rgb(210,80,43)"/><text x="46.2865%" y="399.50">d..</text></g><g><title>do_softirq_own_stack (78 samples, 2.33%)</title><rect x="46.0365%" y="373" width="2.3332%" height="15" fill="rgb(247,160,36)"/><text x="46.2865%" y="383.50">d..</text></g><g><title>__do_softirq (78 samples, 2.33%)</title><rect x="46.0365%" y="357" width="2.3332%" height="15" fill="rgb(234,13,49)"/><text x="46.2865%" y="367.50">_..</text></g><g><title>net_rx_action (78 samples, 2.33%)</title><rect x="46.0365%" y="341" width="2.3332%" height="15" fill="rgb(234,122,0)"/><text x="46.2865%" y="351.50">n..</text></g><g><title>process_backlog (74 samples, 2.21%)</title><rect x="46.1561%" y="325" width="2.2136%" height="15" fill="rgb(207,146,38)"/><text x="46.4061%" y="335.50">p..</text></g><g><title>__ip_queue_xmit (97 samples, 2.90%)</title><rect x="45.4981%" y="453" width="2.9016%" height="15" fill="rgb(207,177,25)"/><text x="45.7481%" y="463.50">__..</text></g><g><title>ip_output (96 samples, 2.87%)</title><rect x="45.5280%" y="437" width="2.8717%" height="15" fill="rgb(211,178,42)"/><text x="45.7780%" y="447.50">ip..</text></g><g><title>__tcp_transmit_skb (106 samples, 3.17%)</title><rect x="45.4083%" y="469" width="3.1708%" height="15" fill="rgb(230,69,54)"/><text x="45.6583%" y="479.50">__t..</text></g><g><title>__tcp_push_pending_frames (111 samples, 3.32%)</title><rect x="45.3485%" y="501" width="3.3204%" height="15" fill="rgb(214,135,41)"/><text x="45.5985%" y="511.50">__t..</text></g><g><title>tcp_write_xmit (111 samples, 3.32%)</title><rect x="45.3485%" y="485" width="3.3204%" height="15" fill="rgb(237,67,25)"/><text x="45.5985%" y="495.50">tcp..</text></g><g><title>sk_stream_alloc_skb (6 samples, 0.18%)</title><rect x="48.6988%" y="501" width="0.1795%" height="15" fill="rgb(222,189,50)"/><text x="48.9488%" y="511.50"></text></g><g><title>__alloc_skb (5 samples, 0.15%)</title><rect x="48.7287%" y="485" width="0.1496%" height="15" fill="rgb(245,148,34)"/><text x="48.9787%" y="495.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.12%)</title><rect x="48.8783%" y="501" width="0.1197%" height="15" fill="rgb(222,29,6)"/><text x="49.1283%" y="511.50"></text></g><g><title>sock_sendmsg (136 samples, 4.07%)</title><rect x="45.0793%" y="549" width="4.0682%" height="15" fill="rgb(221,189,43)"/><text x="45.3293%" y="559.50">sock..</text></g><g><title>tcp_sendmsg (136 samples, 4.07%)</title><rect x="45.0793%" y="533" width="4.0682%" height="15" fill="rgb(207,36,27)"/><text x="45.3293%" y="543.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (132 samples, 3.95%)</title><rect x="45.1989%" y="517" width="3.9485%" height="15" fill="rgb(217,90,24)"/><text x="45.4489%" y="527.50">tcp_..</text></g><g><title>__x64_sys_sendto (143 samples, 4.28%)</title><rect x="44.9895%" y="581" width="4.2776%" height="15" fill="rgb(224,66,35)"/><text x="45.2395%" y="591.50">__x64..</text></g><g><title>__sys_sendto (143 samples, 4.28%)</title><rect x="44.9895%" y="565" width="4.2776%" height="15" fill="rgb(221,13,50)"/><text x="45.2395%" y="575.50">__sys..</text></g><g><title>sockfd_lookup_light (4 samples, 0.12%)</title><rect x="49.1475%" y="549" width="0.1197%" height="15" fill="rgb(236,68,49)"/><text x="49.3975%" y="559.50"></text></g><g><title>do_syscall_64 (147 samples, 4.40%)</title><rect x="44.9895%" y="597" width="4.3972%" height="15" fill="rgb(229,146,28)"/><text x="45.2395%" y="607.50">do_sy..</text></g><g><title>entry_SYSCALL_64 (154 samples, 4.61%)</title><rect x="44.9596%" y="613" width="4.6066%" height="15" fill="rgb(225,31,38)"/><text x="45.2096%" y="623.50">entry..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.18%)</title><rect x="49.3868%" y="597" width="0.1795%" height="15" fill="rgb(250,208,3)"/><text x="49.6368%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (292 samples, 8.73%)</title><rect x="40.8615%" y="725" width="8.7347%" height="15" fill="rgb(246,54,23)"/><text x="41.1115%" y="735.50">&lt;mysql::conn..</text></g><g><title>mysql::conn::Conn::_query (292 samples, 8.73%)</title><rect x="40.8615%" y="709" width="8.7347%" height="15" fill="rgb(243,76,11)"/><text x="41.1115%" y="719.50">mysql::conn:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (164 samples, 4.91%)</title><rect x="44.6904%" y="693" width="4.9058%" height="15" fill="rgb(245,21,50)"/><text x="44.9404%" y="703.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (160 samples, 4.79%)</title><rect x="44.8101%" y="677" width="4.7861%" height="15" fill="rgb(228,9,43)"/><text x="45.0601%" y="687.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (159 samples, 4.76%)</title><rect x="44.8400%" y="661" width="4.7562%" height="15" fill="rgb(208,100,47)"/><text x="45.0900%" y="671.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (159 samples, 4.76%)</title><rect x="44.8400%" y="645" width="4.7562%" height="15" fill="rgb(232,26,8)"/><text x="45.0900%" y="655.50">std::s..</text></g><g><title>__libc_send (158 samples, 4.73%)</title><rect x="44.8699%" y="629" width="4.7263%" height="15" fill="rgb(216,166,38)"/><text x="45.1199%" y="639.50">__libc..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="50.0150%" y="645" width="0.1197%" height="15" fill="rgb(251,202,51)"/><text x="50.2650%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.12%)</title><rect x="50.0150%" y="629" width="0.1197%" height="15" fill="rgb(254,216,34)"/><text x="50.2650%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (9 samples, 0.27%)</title><rect x="49.9551%" y="661" width="0.2692%" height="15" fill="rgb(251,32,27)"/><text x="50.2051%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (24 samples, 0.72%)</title><rect x="49.6560%" y="693" width="0.7179%" height="15" fill="rgb(208,127,28)"/><text x="49.9060%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (24 samples, 0.72%)</title><rect x="49.6560%" y="677" width="0.7179%" height="15" fill="rgb(224,137,22)"/><text x="49.9060%" y="687.50"></text></g><g><title>mysql_common::value::read_text_values (5 samples, 0.15%)</title><rect x="50.2243%" y="661" width="0.1496%" height="15" fill="rgb(254,70,32)"/><text x="50.4743%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 1.05%)</title><rect x="49.5962%" y="725" width="1.0470%" height="15" fill="rgb(229,75,37)"/><text x="49.8462%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 1.05%)</title><rect x="49.5962%" y="709" width="1.0470%" height="15" fill="rgb(252,64,23)"/><text x="49.8462%" y="719.50"></text></g><g><title>mysql_common::row::new_row (6 samples, 0.18%)</title><rect x="50.4637%" y="693" width="0.1795%" height="15" fill="rgb(232,162,48)"/><text x="50.7137%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.18%)</title><rect x="50.4637%" y="677" width="0.1795%" height="15" fill="rgb(246,160,12)"/><text x="50.7137%" y="687.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.15%)</title><rect x="50.6431%" y="725" width="0.1496%" height="15" fill="rgb(247,166,0)"/><text x="50.8931%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.15%)</title><rect x="50.6431%" y="709" width="0.1496%" height="15" fill="rgb(249,219,21)"/><text x="50.8931%" y="719.50"></text></g><g><title>core::fmt::write (5 samples, 0.15%)</title><rect x="50.6431%" y="693" width="0.1496%" height="15" fill="rgb(205,209,3)"/><text x="50.8931%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.15%)</title><rect x="50.6431%" y="677" width="0.1496%" height="15" fill="rgb(243,44,1)"/><text x="50.8931%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.15%)</title><rect x="50.6431%" y="661" width="0.1496%" height="15" fill="rgb(206,159,16)"/><text x="50.8931%" y="671.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.15%)</title><rect x="50.6431%" y="645" width="0.1496%" height="15" fill="rgb(244,77,30)"/><text x="50.8931%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.15%)</title><rect x="50.6431%" y="629" width="0.1496%" height="15" fill="rgb(218,69,12)"/><text x="50.8931%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.15%)</title><rect x="50.6431%" y="613" width="0.1496%" height="15" fill="rgb(212,87,7)"/><text x="50.8931%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.15%)</title><rect x="50.6431%" y="597" width="0.1496%" height="15" fill="rgb(245,114,25)"/><text x="50.8931%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (5 samples, 0.15%)</title><rect x="50.6431%" y="581" width="0.1496%" height="15" fill="rgb(210,61,42)"/><text x="50.8931%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.15%)</title><rect x="50.6431%" y="565" width="0.1496%" height="15" fill="rgb(211,52,33)"/><text x="50.8931%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.15%)</title><rect x="50.6431%" y="549" width="0.1496%" height="15" fill="rgb(234,58,33)"/><text x="50.8931%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.15%)</title><rect x="50.6431%" y="533" width="0.1496%" height="15" fill="rgb(220,115,36)"/><text x="50.8931%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.15%)</title><rect x="50.6431%" y="517" width="0.1496%" height="15" fill="rgb(243,153,54)"/><text x="50.8931%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (5 samples, 0.15%)</title><rect x="50.6431%" y="501" width="0.1496%" height="15" fill="rgb(251,47,18)"/><text x="50.8931%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.15%)</title><rect x="50.6431%" y="485" width="0.1496%" height="15" fill="rgb(242,102,42)"/><text x="50.8931%" y="495.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.15%)</title><rect x="50.6431%" y="469" width="0.1496%" height="15" fill="rgb(234,31,38)"/><text x="50.8931%" y="479.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.15%)</title><rect x="50.6431%" y="453" width="0.1496%" height="15" fill="rgb(221,117,51)"/><text x="50.8931%" y="463.50"></text></g><g><title>_int_realloc (5 samples, 0.15%)</title><rect x="50.6431%" y="437" width="0.1496%" height="15" fill="rgb(212,20,18)"/><text x="50.8931%" y="447.50"></text></g><g><title>_int_malloc (5 samples, 0.15%)</title><rect x="50.6431%" y="421" width="0.1496%" height="15" fill="rgb(245,133,36)"/><text x="50.8931%" y="431.50"></text></g><g><title>&lt;mysql_common::value::convert::ParseIr&lt;u64&gt; as mysql_common::value::convert::ConvIr&lt;u64&gt;&gt;::new (13 samples, 0.39%)</title><rect x="51.2115%" y="677" width="0.3889%" height="15" fill="rgb(212,6,19)"/><text x="51.4615%" y="687.50"></text></g><g><title>&lt;(T1,T2) as mysql_common::row::convert::FromRow&gt;::from_row_opt (27 samples, 0.81%)</title><rect x="50.8525%" y="693" width="0.8077%" height="15" fill="rgb(218,1,36)"/><text x="51.1025%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.33%)</title><rect x="51.8397%" y="629" width="0.3290%" height="15" fill="rgb(246,84,54)"/><text x="52.0897%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (9 samples, 0.27%)</title><rect x="51.8995%" y="613" width="0.2692%" height="15" fill="rgb(242,110,6)"/><text x="52.1495%" y="623.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (8 samples, 0.24%)</title><rect x="51.9294%" y="597" width="0.2393%" height="15" fill="rgb(214,47,5)"/><text x="52.1794%" y="607.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (8 samples, 0.24%)</title><rect x="51.9294%" y="581" width="0.2393%" height="15" fill="rgb(218,159,25)"/><text x="52.1794%" y="591.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 0.45%)</title><rect x="51.8098%" y="645" width="0.4487%" height="15" fill="rgb(215,211,28)"/><text x="52.0598%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (26 samples, 0.78%)</title><rect x="51.7200%" y="677" width="0.7777%" height="15" fill="rgb(238,59,32)"/><text x="51.9700%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (26 samples, 0.78%)</title><rect x="51.7200%" y="661" width="0.7777%" height="15" fill="rgb(226,82,3)"/><text x="51.9700%" y="671.50"></text></g><g><title>mysql_common::value::read_text_values (8 samples, 0.24%)</title><rect x="52.2585%" y="645" width="0.2393%" height="15" fill="rgb(240,164,32)"/><text x="52.5085%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.93%)</title><rect x="51.6602%" y="693" width="0.9273%" height="15" fill="rgb(232,46,7)"/><text x="51.9102%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.12%)</title><rect x="52.7071%" y="677" width="0.1197%" height="15" fill="rgb(229,129,53)"/><text x="52.9571%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (80 samples, 2.39%)</title><rect x="50.8226%" y="709" width="2.3931%" height="15" fill="rgb(234,188,29)"/><text x="51.0726%" y="719.50">&lt;c..</text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::insert (21 samples, 0.63%)</title><rect x="52.5875%" y="693" width="0.6282%" height="15" fill="rgb(246,141,4)"/><text x="52.8375%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (13 samples, 0.39%)</title><rect x="52.8268%" y="677" width="0.3889%" height="15" fill="rgb(229,23,39)"/><text x="53.0768%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (13 samples, 0.39%)</title><rect x="52.8268%" y="661" width="0.3889%" height="15" fill="rgb(206,12,3)"/><text x="53.0768%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.18%)</title><rect x="53.0362%" y="645" width="0.1795%" height="15" fill="rgb(252,226,20)"/><text x="53.2862%" y="655.50"></text></g><g><title>sk_wait_data (4 samples, 0.12%)</title><rect x="53.4849%" y="453" width="0.1197%" height="15" fill="rgb(216,123,35)"/><text x="53.7349%" y="463.50"></text></g><g><title>wait_woken (4 samples, 0.12%)</title><rect x="53.4849%" y="437" width="0.1197%" height="15" fill="rgb(212,68,40)"/><text x="53.7349%" y="447.50"></text></g><g><title>schedule_timeout (4 samples, 0.12%)</title><rect x="53.4849%" y="421" width="0.1197%" height="15" fill="rgb(254,125,32)"/><text x="53.7349%" y="431.50"></text></g><g><title>schedule (4 samples, 0.12%)</title><rect x="53.4849%" y="405" width="0.1197%" height="15" fill="rgb(253,97,22)"/><text x="53.7349%" y="415.50"></text></g><g><title>__schedule (4 samples, 0.12%)</title><rect x="53.4849%" y="389" width="0.1197%" height="15" fill="rgb(241,101,14)"/><text x="53.7349%" y="399.50"></text></g><g><title>do_syscall_64 (9 samples, 0.27%)</title><rect x="53.4550%" y="533" width="0.2692%" height="15" fill="rgb(238,103,29)"/><text x="53.7050%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 0.27%)</title><rect x="53.4550%" y="517" width="0.2692%" height="15" fill="rgb(233,195,47)"/><text x="53.7050%" y="527.50"></text></g><g><title>__sys_recvfrom (9 samples, 0.27%)</title><rect x="53.4550%" y="501" width="0.2692%" height="15" fill="rgb(246,218,30)"/><text x="53.7050%" y="511.50"></text></g><g><title>inet_recvmsg (9 samples, 0.27%)</title><rect x="53.4550%" y="485" width="0.2692%" height="15" fill="rgb(219,145,47)"/><text x="53.7050%" y="495.50"></text></g><g><title>tcp_recvmsg (8 samples, 0.24%)</title><rect x="53.4849%" y="469" width="0.2393%" height="15" fill="rgb(243,12,26)"/><text x="53.7349%" y="479.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 0.33%)</title><rect x="53.4251%" y="645" width="0.3290%" height="15" fill="rgb(214,87,16)"/><text x="53.6751%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.33%)</title><rect x="53.4251%" y="629" width="0.3290%" height="15" fill="rgb(208,99,42)"/><text x="53.6751%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 0.33%)</title><rect x="53.4251%" y="613" width="0.3290%" height="15" fill="rgb(253,99,2)"/><text x="53.6751%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.33%)</title><rect x="53.4251%" y="597" width="0.3290%" height="15" fill="rgb(220,168,23)"/><text x="53.6751%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.33%)</title><rect x="53.4251%" y="581" width="0.3290%" height="15" fill="rgb(242,38,24)"/><text x="53.6751%" y="591.50"></text></g><g><title>__libc_recv (11 samples, 0.33%)</title><rect x="53.4251%" y="565" width="0.3290%" height="15" fill="rgb(225,182,9)"/><text x="53.6751%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.30%)</title><rect x="53.4550%" y="549" width="0.2991%" height="15" fill="rgb(243,178,37)"/><text x="53.7050%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.45%)</title><rect x="53.3952%" y="661" width="0.4487%" height="15" fill="rgb(232,139,19)"/><text x="53.6452%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (17 samples, 0.51%)</title><rect x="53.3652%" y="693" width="0.5085%" height="15" fill="rgb(225,201,24)"/><text x="53.6152%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (17 samples, 0.51%)</title><rect x="53.3652%" y="677" width="0.5085%" height="15" fill="rgb(221,47,46)"/><text x="53.6152%" y="687.50"></text></g><g><title>sock_def_readable (4 samples, 0.12%)</title><rect x="54.2028%" y="181" width="0.1197%" height="15" fill="rgb(249,23,13)"/><text x="54.4528%" y="191.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.12%)</title><rect x="54.2028%" y="165" width="0.1197%" height="15" fill="rgb(219,9,5)"/><text x="54.4528%" y="175.50"></text></g><g><title>__wake_up_common (4 samples, 0.12%)</title><rect x="54.2028%" y="149" width="0.1197%" height="15" fill="rgb(254,171,16)"/><text x="54.4528%" y="159.50"></text></g><g><title>try_to_wake_up (4 samples, 0.12%)</title><rect x="54.2028%" y="133" width="0.1197%" height="15" fill="rgb(230,171,20)"/><text x="54.4528%" y="143.50"></text></g><g><title>tcp_ack (4 samples, 0.12%)</title><rect x="54.3225%" y="181" width="0.1197%" height="15" fill="rgb(210,71,41)"/><text x="54.5725%" y="191.50"></text></g><g><title>ip_finish_output2 (18 samples, 0.54%)</title><rect x="53.9934%" y="421" width="0.5384%" height="15" fill="rgb(206,173,20)"/><text x="54.2434%" y="431.50"></text></g><g><title>__local_bh_enable_ip (14 samples, 0.42%)</title><rect x="54.1131%" y="405" width="0.4188%" height="15" fill="rgb(233,88,34)"/><text x="54.3631%" y="415.50"></text></g><g><title>do_softirq (14 samples, 0.42%)</title><rect x="54.1131%" y="389" width="0.4188%" height="15" fill="rgb(223,209,46)"/><text x="54.3631%" y="399.50"></text></g><g><title>do_softirq_own_stack (14 samples, 0.42%)</title><rect x="54.1131%" y="373" width="0.4188%" height="15" fill="rgb(250,43,18)"/><text x="54.3631%" y="383.50"></text></g><g><title>__do_softirq (14 samples, 0.42%)</title><rect x="54.1131%" y="357" width="0.4188%" height="15" fill="rgb(208,13,10)"/><text x="54.3631%" y="367.50"></text></g><g><title>net_rx_action (14 samples, 0.42%)</title><rect x="54.1131%" y="341" width="0.4188%" height="15" fill="rgb(212,200,36)"/><text x="54.3631%" y="351.50"></text></g><g><title>process_backlog (14 samples, 0.42%)</title><rect x="54.1131%" y="325" width="0.4188%" height="15" fill="rgb(225,90,30)"/><text x="54.3631%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (14 samples, 0.42%)</title><rect x="54.1131%" y="309" width="0.4188%" height="15" fill="rgb(236,182,39)"/><text x="54.3631%" y="319.50"></text></g><g><title>ip_rcv (14 samples, 0.42%)</title><rect x="54.1131%" y="293" width="0.4188%" height="15" fill="rgb(212,144,35)"/><text x="54.3631%" y="303.50"></text></g><g><title>ip_local_deliver (14 samples, 0.42%)</title><rect x="54.1131%" y="277" width="0.4188%" height="15" fill="rgb(228,63,44)"/><text x="54.3631%" y="287.50"></text></g><g><title>ip_local_deliver_finish (14 samples, 0.42%)</title><rect x="54.1131%" y="261" width="0.4188%" height="15" fill="rgb(228,109,6)"/><text x="54.3631%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (13 samples, 0.39%)</title><rect x="54.1430%" y="245" width="0.3889%" height="15" fill="rgb(238,117,24)"/><text x="54.3930%" y="255.50"></text></g><g><title>tcp_v4_rcv (12 samples, 0.36%)</title><rect x="54.1729%" y="229" width="0.3590%" height="15" fill="rgb(242,26,26)"/><text x="54.4229%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 0.36%)</title><rect x="54.1729%" y="213" width="0.3590%" height="15" fill="rgb(221,92,48)"/><text x="54.4229%" y="223.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.36%)</title><rect x="54.1729%" y="197" width="0.3590%" height="15" fill="rgb(209,209,32)"/><text x="54.4229%" y="207.50"></text></g><g><title>__ip_queue_xmit (20 samples, 0.60%)</title><rect x="53.9635%" y="453" width="0.5983%" height="15" fill="rgb(221,70,22)"/><text x="54.2135%" y="463.50"></text></g><g><title>ip_output (20 samples, 0.60%)</title><rect x="53.9635%" y="437" width="0.5983%" height="15" fill="rgb(248,145,5)"/><text x="54.2135%" y="447.50"></text></g><g><title>__tcp_transmit_skb (21 samples, 0.63%)</title><rect x="53.9635%" y="469" width="0.6282%" height="15" fill="rgb(226,116,26)"/><text x="54.2135%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (25 samples, 0.75%)</title><rect x="53.9336%" y="501" width="0.7478%" height="15" fill="rgb(244,5,17)"/><text x="54.1836%" y="511.50"></text></g><g><title>tcp_write_xmit (25 samples, 0.75%)</title><rect x="53.9336%" y="485" width="0.7478%" height="15" fill="rgb(252,159,33)"/><text x="54.1836%" y="495.50"></text></g><g><title>do_syscall_64 (29 samples, 0.87%)</title><rect x="53.8738%" y="597" width="0.8675%" height="15" fill="rgb(206,71,0)"/><text x="54.1238%" y="607.50"></text></g><g><title>__x64_sys_sendto (29 samples, 0.87%)</title><rect x="53.8738%" y="581" width="0.8675%" height="15" fill="rgb(233,118,54)"/><text x="54.1238%" y="591.50"></text></g><g><title>__sys_sendto (29 samples, 0.87%)</title><rect x="53.8738%" y="565" width="0.8675%" height="15" fill="rgb(234,83,48)"/><text x="54.1238%" y="575.50"></text></g><g><title>sock_sendmsg (29 samples, 0.87%)</title><rect x="53.8738%" y="549" width="0.8675%" height="15" fill="rgb(228,3,54)"/><text x="54.1238%" y="559.50"></text></g><g><title>tcp_sendmsg (29 samples, 0.87%)</title><rect x="53.8738%" y="533" width="0.8675%" height="15" fill="rgb(226,155,13)"/><text x="54.1238%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (27 samples, 0.81%)</title><rect x="53.9336%" y="517" width="0.8077%" height="15" fill="rgb(241,28,37)"/><text x="54.1836%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (31 samples, 0.93%)</title><rect x="53.8738%" y="613" width="0.9273%" height="15" fill="rgb(233,93,10)"/><text x="54.1238%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (489 samples, 14.63%)</title><rect x="40.2034%" y="741" width="14.6276%" height="15" fill="rgb(225,113,19)"/><text x="40.4534%" y="751.50">lobsters_microbenchmar..</text></g><g><title>mysql::conn::queryable::Queryable::query_map (135 samples, 4.04%)</title><rect x="50.7927%" y="725" width="4.0383%" height="15" fill="rgb(241,2,18)"/><text x="51.0427%" y="735.50">mysq..</text></g><g><title>mysql::conn::Conn::_query (51 samples, 1.53%)</title><rect x="53.3054%" y="709" width="1.5256%" height="15" fill="rgb(228,207,21)"/><text x="53.5554%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (32 samples, 0.96%)</title><rect x="53.8738%" y="693" width="0.9572%" height="15" fill="rgb(213,211,35)"/><text x="54.1238%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (32 samples, 0.96%)</title><rect x="53.8738%" y="677" width="0.9572%" height="15" fill="rgb(209,83,10)"/><text x="54.1238%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (32 samples, 0.96%)</title><rect x="53.8738%" y="661" width="0.9572%" height="15" fill="rgb(209,164,1)"/><text x="54.1238%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (32 samples, 0.96%)</title><rect x="53.8738%" y="645" width="0.9572%" height="15" fill="rgb(213,184,43)"/><text x="54.1238%" y="655.50"></text></g><g><title>__libc_send (32 samples, 0.96%)</title><rect x="53.8738%" y="629" width="0.9572%" height="15" fill="rgb(231,61,34)"/><text x="54.1238%" y="639.50"></text></g><g><title>do_syscall_64 (7 samples, 0.21%)</title><rect x="54.8609%" y="533" width="0.2094%" height="15" fill="rgb(235,75,3)"/><text x="55.1109%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.21%)</title><rect x="54.8609%" y="517" width="0.2094%" height="15" fill="rgb(220,106,47)"/><text x="55.1109%" y="527.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.21%)</title><rect x="54.8609%" y="501" width="0.2094%" height="15" fill="rgb(210,196,33)"/><text x="55.1109%" y="511.50"></text></g><g><title>inet_recvmsg (7 samples, 0.21%)</title><rect x="54.8609%" y="485" width="0.2094%" height="15" fill="rgb(229,154,42)"/><text x="55.1109%" y="495.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.18%)</title><rect x="54.8908%" y="469" width="0.1795%" height="15" fill="rgb(228,114,26)"/><text x="55.1408%" y="479.50"></text></g><g><title>sk_wait_data (6 samples, 0.18%)</title><rect x="54.8908%" y="453" width="0.1795%" height="15" fill="rgb(208,144,1)"/><text x="55.1408%" y="463.50"></text></g><g><title>wait_woken (5 samples, 0.15%)</title><rect x="54.9207%" y="437" width="0.1496%" height="15" fill="rgb(239,112,37)"/><text x="55.1707%" y="447.50"></text></g><g><title>schedule_timeout (4 samples, 0.12%)</title><rect x="54.9506%" y="421" width="0.1197%" height="15" fill="rgb(210,96,50)"/><text x="55.2006%" y="431.50"></text></g><g><title>schedule (4 samples, 0.12%)</title><rect x="54.9506%" y="405" width="0.1197%" height="15" fill="rgb(222,178,2)"/><text x="55.2006%" y="415.50"></text></g><g><title>__schedule (4 samples, 0.12%)</title><rect x="54.9506%" y="389" width="0.1197%" height="15" fill="rgb(226,74,18)"/><text x="55.2006%" y="399.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (9 samples, 0.27%)</title><rect x="54.8310%" y="693" width="0.2692%" height="15" fill="rgb(225,67,54)"/><text x="55.0810%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (9 samples, 0.27%)</title><rect x="54.8310%" y="677" width="0.2692%" height="15" fill="rgb(251,92,32)"/><text x="55.0810%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.27%)</title><rect x="54.8310%" y="661" width="0.2692%" height="15" fill="rgb(228,149,22)"/><text x="55.0810%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.24%)</title><rect x="54.8609%" y="645" width="0.2393%" height="15" fill="rgb(243,54,13)"/><text x="55.1109%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.24%)</title><rect x="54.8609%" y="629" width="0.2393%" height="15" fill="rgb(243,180,28)"/><text x="55.1109%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 0.24%)</title><rect x="54.8609%" y="613" width="0.2393%" height="15" fill="rgb(208,167,24)"/><text x="55.1109%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 0.24%)</title><rect x="54.8609%" y="597" width="0.2393%" height="15" fill="rgb(245,73,45)"/><text x="55.1109%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 0.24%)</title><rect x="54.8609%" y="581" width="0.2393%" height="15" fill="rgb(237,203,48)"/><text x="55.1109%" y="591.50"></text></g><g><title>__libc_recv (8 samples, 0.24%)</title><rect x="54.8609%" y="565" width="0.2393%" height="15" fill="rgb(211,197,16)"/><text x="55.1109%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.24%)</title><rect x="54.8609%" y="549" width="0.2393%" height="15" fill="rgb(243,99,51)"/><text x="55.1109%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (11 samples, 0.33%)</title><rect x="54.8310%" y="725" width="0.3290%" height="15" fill="rgb(215,123,29)"/><text x="55.0810%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (11 samples, 0.33%)</title><rect x="54.8310%" y="709" width="0.3290%" height="15" fill="rgb(239,186,37)"/><text x="55.0810%" y="719.50"></text></g><g><title>lobsters_microbenchmarks::queriers::post_story::post_story (12 samples, 0.36%)</title><rect x="54.8310%" y="741" width="0.3590%" height="15" fill="rgb(252,136,39)"/><text x="55.0810%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (5 samples, 0.15%)</title><rect x="55.1899%" y="693" width="0.1496%" height="15" fill="rgb(223,213,32)"/><text x="55.4399%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.15%)</title><rect x="55.1899%" y="677" width="0.1496%" height="15" fill="rgb(233,115,5)"/><text x="55.4399%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="55.2199%" y="661" width="0.1197%" height="15" fill="rgb(207,226,44)"/><text x="55.4699%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.12%)</title><rect x="55.2199%" y="645" width="0.1197%" height="15" fill="rgb(208,126,0)"/><text x="55.4699%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.12%)</title><rect x="55.2199%" y="629" width="0.1197%" height="15" fill="rgb(244,66,21)"/><text x="55.4699%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.12%)</title><rect x="55.2199%" y="613" width="0.1197%" height="15" fill="rgb(222,97,12)"/><text x="55.4699%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (4 samples, 0.12%)</title><rect x="55.2199%" y="597" width="0.1197%" height="15" fill="rgb(219,213,19)"/><text x="55.4699%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.12%)</title><rect x="55.2199%" y="581" width="0.1197%" height="15" fill="rgb(252,169,30)"/><text x="55.4699%" y="591.50"></text></g><g><title>__libc_recv (4 samples, 0.12%)</title><rect x="55.2199%" y="565" width="0.1197%" height="15" fill="rgb(206,32,51)"/><text x="55.4699%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.12%)</title><rect x="55.2199%" y="549" width="0.1197%" height="15" fill="rgb(250,172,42)"/><text x="55.4699%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (4 samples, 0.12%)</title><rect x="55.3694%" y="501" width="0.1197%" height="15" fill="rgb(209,34,43)"/><text x="55.6194%" y="511.50"></text></g><g><title>tcp_write_xmit (4 samples, 0.12%)</title><rect x="55.3694%" y="485" width="0.1197%" height="15" fill="rgb(223,11,35)"/><text x="55.6194%" y="495.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.12%)</title><rect x="55.3694%" y="469" width="0.1197%" height="15" fill="rgb(251,219,26)"/><text x="55.6194%" y="479.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.12%)</title><rect x="55.3694%" y="453" width="0.1197%" height="15" fill="rgb(231,119,3)"/><text x="55.6194%" y="463.50"></text></g><g><title>ip_output (4 samples, 0.12%)</title><rect x="55.3694%" y="437" width="0.1197%" height="15" fill="rgb(216,97,11)"/><text x="55.6194%" y="447.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.12%)</title><rect x="55.3694%" y="421" width="0.1197%" height="15" fill="rgb(223,59,9)"/><text x="55.6194%" y="431.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.12%)</title><rect x="55.3694%" y="405" width="0.1197%" height="15" fill="rgb(233,93,31)"/><text x="55.6194%" y="415.50"></text></g><g><title>do_softirq (4 samples, 0.12%)</title><rect x="55.3694%" y="389" width="0.1197%" height="15" fill="rgb(239,81,33)"/><text x="55.6194%" y="399.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.12%)</title><rect x="55.3694%" y="373" width="0.1197%" height="15" fill="rgb(213,120,34)"/><text x="55.6194%" y="383.50"></text></g><g><title>__do_softirq (4 samples, 0.12%)</title><rect x="55.3694%" y="357" width="0.1197%" height="15" fill="rgb(243,49,53)"/><text x="55.6194%" y="367.50"></text></g><g><title>net_rx_action (4 samples, 0.12%)</title><rect x="55.3694%" y="341" width="0.1197%" height="15" fill="rgb(247,216,33)"/><text x="55.6194%" y="351.50"></text></g><g><title>process_backlog (4 samples, 0.12%)</title><rect x="55.3694%" y="325" width="0.1197%" height="15" fill="rgb(226,26,14)"/><text x="55.6194%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.12%)</title><rect x="55.3694%" y="309" width="0.1197%" height="15" fill="rgb(215,49,53)"/><text x="55.6194%" y="319.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (11 samples, 0.33%)</title><rect x="55.1899%" y="725" width="0.3290%" height="15" fill="rgb(245,162,40)"/><text x="55.4399%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (11 samples, 0.33%)</title><rect x="55.1899%" y="709" width="0.3290%" height="15" fill="rgb(229,68,17)"/><text x="55.4399%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (6 samples, 0.18%)</title><rect x="55.3395%" y="693" width="0.1795%" height="15" fill="rgb(213,182,10)"/><text x="55.5895%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (6 samples, 0.18%)</title><rect x="55.3395%" y="677" width="0.1795%" height="15" fill="rgb(245,125,30)"/><text x="55.5895%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (6 samples, 0.18%)</title><rect x="55.3395%" y="661" width="0.1795%" height="15" fill="rgb(232,202,2)"/><text x="55.5895%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (6 samples, 0.18%)</title><rect x="55.3395%" y="645" width="0.1795%" height="15" fill="rgb(237,140,51)"/><text x="55.5895%" y="655.50"></text></g><g><title>__libc_send (6 samples, 0.18%)</title><rect x="55.3395%" y="629" width="0.1795%" height="15" fill="rgb(236,157,25)"/><text x="55.5895%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.18%)</title><rect x="55.3395%" y="613" width="0.1795%" height="15" fill="rgb(219,209,0)"/><text x="55.5895%" y="623.50"></text></g><g><title>do_syscall_64 (6 samples, 0.18%)</title><rect x="55.3395%" y="597" width="0.1795%" height="15" fill="rgb(240,116,54)"/><text x="55.5895%" y="607.50"></text></g><g><title>__x64_sys_sendto (6 samples, 0.18%)</title><rect x="55.3395%" y="581" width="0.1795%" height="15" fill="rgb(216,10,36)"/><text x="55.5895%" y="591.50"></text></g><g><title>__sys_sendto (6 samples, 0.18%)</title><rect x="55.3395%" y="565" width="0.1795%" height="15" fill="rgb(222,72,44)"/><text x="55.5895%" y="575.50"></text></g><g><title>sock_sendmsg (6 samples, 0.18%)</title><rect x="55.3395%" y="549" width="0.1795%" height="15" fill="rgb(232,159,9)"/><text x="55.5895%" y="559.50"></text></g><g><title>tcp_sendmsg (6 samples, 0.18%)</title><rect x="55.3395%" y="533" width="0.1795%" height="15" fill="rgb(210,39,32)"/><text x="55.5895%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (5 samples, 0.15%)</title><rect x="55.3694%" y="517" width="0.1496%" height="15" fill="rgb(216,194,45)"/><text x="55.6194%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.12%)</title><rect x="55.5489%" y="597" width="0.1197%" height="15" fill="rgb(218,18,35)"/><text x="55.7989%" y="607.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="55.5489%" y="581" width="0.1197%" height="15" fill="rgb(207,83,51)"/><text x="55.7989%" y="591.50"></text></g><g><title>__x64_sys_sendto (4 samples, 0.12%)</title><rect x="55.5489%" y="565" width="0.1197%" height="15" fill="rgb(225,63,43)"/><text x="55.7989%" y="575.50"></text></g><g><title>__sys_sendto (4 samples, 0.12%)</title><rect x="55.5489%" y="549" width="0.1197%" height="15" fill="rgb(207,57,36)"/><text x="55.7989%" y="559.50"></text></g><g><title>sock_sendmsg (4 samples, 0.12%)</title><rect x="55.5489%" y="533" width="0.1197%" height="15" fill="rgb(216,99,33)"/><text x="55.7989%" y="543.50"></text></g><g><title>tcp_sendmsg (4 samples, 0.12%)</title><rect x="55.5489%" y="517" width="0.1197%" height="15" fill="rgb(225,42,16)"/><text x="55.7989%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (4 samples, 0.12%)</title><rect x="55.5489%" y="501" width="0.1197%" height="15" fill="rgb(220,201,45)"/><text x="55.7989%" y="511.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::get_profile (17 samples, 0.51%)</title><rect x="55.1899%" y="741" width="0.5085%" height="15" fill="rgb(225,33,4)"/><text x="55.4399%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query (6 samples, 0.18%)</title><rect x="55.5190%" y="725" width="0.1795%" height="15" fill="rgb(224,33,50)"/><text x="55.7690%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (6 samples, 0.18%)</title><rect x="55.5190%" y="709" width="0.1795%" height="15" fill="rgb(246,198,51)"/><text x="55.7690%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (6 samples, 0.18%)</title><rect x="55.5190%" y="693" width="0.1795%" height="15" fill="rgb(205,22,4)"/><text x="55.7690%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (5 samples, 0.15%)</title><rect x="55.5489%" y="677" width="0.1496%" height="15" fill="rgb(206,3,8)"/><text x="55.7989%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (5 samples, 0.15%)</title><rect x="55.5489%" y="661" width="0.1496%" height="15" fill="rgb(251,23,15)"/><text x="55.7989%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (5 samples, 0.15%)</title><rect x="55.5489%" y="645" width="0.1496%" height="15" fill="rgb(252,88,28)"/><text x="55.7989%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (5 samples, 0.15%)</title><rect x="55.5489%" y="629" width="0.1496%" height="15" fill="rgb(212,127,14)"/><text x="55.7989%" y="639.50"></text></g><g><title>__libc_send (5 samples, 0.15%)</title><rect x="55.5489%" y="613" width="0.1496%" height="15" fill="rgb(247,145,37)"/><text x="55.7989%" y="623.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="55.6985%" y="533" width="0.1197%" height="15" fill="rgb(209,117,53)"/><text x="55.9485%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.15%)</title><rect x="55.6985%" y="645" width="0.1496%" height="15" fill="rgb(212,90,42)"/><text x="55.9485%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.15%)</title><rect x="55.6985%" y="629" width="0.1496%" height="15" fill="rgb(218,164,37)"/><text x="55.9485%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (5 samples, 0.15%)</title><rect x="55.6985%" y="613" width="0.1496%" height="15" fill="rgb(246,65,34)"/><text x="55.9485%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (5 samples, 0.15%)</title><rect x="55.6985%" y="597" width="0.1496%" height="15" fill="rgb(231,100,33)"/><text x="55.9485%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (5 samples, 0.15%)</title><rect x="55.6985%" y="581" width="0.1496%" height="15" fill="rgb(228,126,14)"/><text x="55.9485%" y="591.50"></text></g><g><title>__libc_recv (5 samples, 0.15%)</title><rect x="55.6985%" y="565" width="0.1496%" height="15" fill="rgb(215,173,21)"/><text x="55.9485%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.15%)</title><rect x="55.6985%" y="549" width="0.1496%" height="15" fill="rgb(210,6,40)"/><text x="55.9485%" y="559.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (7 samples, 0.21%)</title><rect x="55.6985%" y="693" width="0.2094%" height="15" fill="rgb(212,48,18)"/><text x="55.9485%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (7 samples, 0.21%)</title><rect x="55.6985%" y="677" width="0.2094%" height="15" fill="rgb(230,214,11)"/><text x="55.9485%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.21%)</title><rect x="55.6985%" y="661" width="0.2094%" height="15" fill="rgb(254,105,39)"/><text x="55.9485%" y="671.50"></text></g><g><title>sock_def_readable (4 samples, 0.12%)</title><rect x="56.2070%" y="181" width="0.1197%" height="15" fill="rgb(245,158,5)"/><text x="56.4570%" y="191.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.12%)</title><rect x="56.2070%" y="165" width="0.1197%" height="15" fill="rgb(249,208,11)"/><text x="56.4570%" y="175.50"></text></g><g><title>__wake_up_common (4 samples, 0.12%)</title><rect x="56.2070%" y="149" width="0.1197%" height="15" fill="rgb(210,39,28)"/><text x="56.4570%" y="159.50"></text></g><g><title>try_to_wake_up (4 samples, 0.12%)</title><rect x="56.2070%" y="133" width="0.1197%" height="15" fill="rgb(211,56,53)"/><text x="56.4570%" y="143.50"></text></g><g><title>ip_finish_output2 (12 samples, 0.36%)</title><rect x="56.0275%" y="421" width="0.3590%" height="15" fill="rgb(226,201,30)"/><text x="56.2775%" y="431.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 0.24%)</title><rect x="56.1472%" y="405" width="0.2393%" height="15" fill="rgb(239,101,34)"/><text x="56.3972%" y="415.50"></text></g><g><title>do_softirq (8 samples, 0.24%)</title><rect x="56.1472%" y="389" width="0.2393%" height="15" fill="rgb(226,209,5)"/><text x="56.3972%" y="399.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.21%)</title><rect x="56.1771%" y="373" width="0.2094%" height="15" fill="rgb(250,105,47)"/><text x="56.4271%" y="383.50"></text></g><g><title>__do_softirq (7 samples, 0.21%)</title><rect x="56.1771%" y="357" width="0.2094%" height="15" fill="rgb(230,72,3)"/><text x="56.4271%" y="367.50"></text></g><g><title>net_rx_action (7 samples, 0.21%)</title><rect x="56.1771%" y="341" width="0.2094%" height="15" fill="rgb(232,218,39)"/><text x="56.4271%" y="351.50"></text></g><g><title>process_backlog (6 samples, 0.18%)</title><rect x="56.2070%" y="325" width="0.1795%" height="15" fill="rgb(248,166,6)"/><text x="56.4570%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (6 samples, 0.18%)</title><rect x="56.2070%" y="309" width="0.1795%" height="15" fill="rgb(247,89,20)"/><text x="56.4570%" y="319.50"></text></g><g><title>ip_rcv (6 samples, 0.18%)</title><rect x="56.2070%" y="293" width="0.1795%" height="15" fill="rgb(248,130,54)"/><text x="56.4570%" y="303.50"></text></g><g><title>ip_local_deliver (6 samples, 0.18%)</title><rect x="56.2070%" y="277" width="0.1795%" height="15" fill="rgb(234,196,4)"/><text x="56.4570%" y="287.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.18%)</title><rect x="56.2070%" y="261" width="0.1795%" height="15" fill="rgb(250,143,31)"/><text x="56.4570%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.18%)</title><rect x="56.2070%" y="245" width="0.1795%" height="15" fill="rgb(211,110,34)"/><text x="56.4570%" y="255.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.18%)</title><rect x="56.2070%" y="229" width="0.1795%" height="15" fill="rgb(215,124,48)"/><text x="56.4570%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.18%)</title><rect x="56.2070%" y="213" width="0.1795%" height="15" fill="rgb(216,46,13)"/><text x="56.4570%" y="223.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.18%)</title><rect x="56.2070%" y="197" width="0.1795%" height="15" fill="rgb(205,184,25)"/><text x="56.4570%" y="207.50"></text></g><g><title>__tcp_push_pending_frames (15 samples, 0.45%)</title><rect x="55.9976%" y="501" width="0.4487%" height="15" fill="rgb(228,1,10)"/><text x="56.2476%" y="511.50"></text></g><g><title>tcp_write_xmit (15 samples, 0.45%)</title><rect x="55.9976%" y="485" width="0.4487%" height="15" fill="rgb(213,116,27)"/><text x="56.2476%" y="495.50"></text></g><g><title>__tcp_transmit_skb (14 samples, 0.42%)</title><rect x="56.0275%" y="469" width="0.4188%" height="15" fill="rgb(241,95,50)"/><text x="56.2775%" y="479.50"></text></g><g><title>__ip_queue_xmit (14 samples, 0.42%)</title><rect x="56.0275%" y="453" width="0.4188%" height="15" fill="rgb(238,48,32)"/><text x="56.2775%" y="463.50"></text></g><g><title>ip_output (14 samples, 0.42%)</title><rect x="56.0275%" y="437" width="0.4188%" height="15" fill="rgb(235,113,49)"/><text x="56.2775%" y="447.50"></text></g><g><title>__x64_sys_sendto (20 samples, 0.60%)</title><rect x="55.9677%" y="581" width="0.5983%" height="15" fill="rgb(205,127,43)"/><text x="56.2177%" y="591.50"></text></g><g><title>__sys_sendto (20 samples, 0.60%)</title><rect x="55.9677%" y="565" width="0.5983%" height="15" fill="rgb(250,162,2)"/><text x="56.2177%" y="575.50"></text></g><g><title>sock_sendmsg (20 samples, 0.60%)</title><rect x="55.9677%" y="549" width="0.5983%" height="15" fill="rgb(220,13,41)"/><text x="56.2177%" y="559.50"></text></g><g><title>tcp_sendmsg (20 samples, 0.60%)</title><rect x="55.9677%" y="533" width="0.5983%" height="15" fill="rgb(249,221,25)"/><text x="56.2177%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (19 samples, 0.57%)</title><rect x="55.9976%" y="517" width="0.5684%" height="15" fill="rgb(215,208,19)"/><text x="56.2476%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (30 samples, 0.90%)</title><rect x="55.6985%" y="725" width="0.8974%" height="15" fill="rgb(236,175,2)"/><text x="55.9485%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (30 samples, 0.90%)</title><rect x="55.6985%" y="709" width="0.8974%" height="15" fill="rgb(241,52,2)"/><text x="55.9485%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (23 samples, 0.69%)</title><rect x="55.9079%" y="693" width="0.6880%" height="15" fill="rgb(248,140,14)"/><text x="56.1579%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (21 samples, 0.63%)</title><rect x="55.9677%" y="677" width="0.6282%" height="15" fill="rgb(253,22,42)"/><text x="56.2177%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (21 samples, 0.63%)</title><rect x="55.9677%" y="661" width="0.6282%" height="15" fill="rgb(234,61,47)"/><text x="56.2177%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (21 samples, 0.63%)</title><rect x="55.9677%" y="645" width="0.6282%" height="15" fill="rgb(208,226,15)"/><text x="56.2177%" y="655.50"></text></g><g><title>__libc_send (21 samples, 0.63%)</title><rect x="55.9677%" y="629" width="0.6282%" height="15" fill="rgb(217,221,4)"/><text x="56.2177%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 0.63%)</title><rect x="55.9677%" y="613" width="0.6282%" height="15" fill="rgb(212,174,34)"/><text x="56.2177%" y="623.50"></text></g><g><title>do_syscall_64 (21 samples, 0.63%)</title><rect x="55.9677%" y="597" width="0.6282%" height="15" fill="rgb(253,83,4)"/><text x="56.2177%" y="607.50"></text></g><g><title>lobsters_microbenchmarks::main (641 samples, 19.17%)</title><rect x="37.5710%" y="757" width="19.1744%" height="15" fill="rgb(250,195,49)"/><text x="37.8210%" y="767.50">lobsters_microbenchmarks::main</text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (35 samples, 1.05%)</title><rect x="55.6985%" y="741" width="1.0470%" height="15" fill="rgb(241,192,25)"/><text x="55.9485%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query (5 samples, 0.15%)</title><rect x="56.5959%" y="725" width="0.1496%" height="15" fill="rgb(208,124,10)"/><text x="56.8459%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (5 samples, 0.15%)</title><rect x="56.5959%" y="709" width="0.1496%" height="15" fill="rgb(222,33,0)"/><text x="56.8459%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (5 samples, 0.15%)</title><rect x="56.5959%" y="693" width="0.1496%" height="15" fill="rgb(234,209,28)"/><text x="56.8459%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="56.9548%" y="629" width="0.1197%" height="15" fill="rgb(224,11,23)"/><text x="57.2048%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.12%)</title><rect x="56.9548%" y="613" width="0.1197%" height="15" fill="rgb(232,99,1)"/><text x="57.2048%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.12%)</title><rect x="56.9548%" y="597" width="0.1197%" height="15" fill="rgb(237,95,45)"/><text x="57.2048%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.12%)</title><rect x="56.9548%" y="581" width="0.1197%" height="15" fill="rgb(208,109,11)"/><text x="57.2048%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (4 samples, 0.12%)</title><rect x="56.9548%" y="565" width="0.1197%" height="15" fill="rgb(216,190,48)"/><text x="57.2048%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.12%)</title><rect x="56.9548%" y="549" width="0.1197%" height="15" fill="rgb(251,171,36)"/><text x="57.2048%" y="559.50"></text></g><g><title>__libc_recv (4 samples, 0.12%)</title><rect x="56.9548%" y="533" width="0.1197%" height="15" fill="rgb(230,62,22)"/><text x="57.2048%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.12%)</title><rect x="56.9548%" y="517" width="0.1197%" height="15" fill="rgb(225,114,35)"/><text x="57.2048%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (6 samples, 0.18%)</title><rect x="56.9249%" y="645" width="0.1795%" height="15" fill="rgb(215,118,42)"/><text x="57.1749%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (8 samples, 0.24%)</title><rect x="56.8950%" y="661" width="0.2393%" height="15" fill="rgb(243,119,21)"/><text x="57.1450%" y="671.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (12 samples, 0.36%)</title><rect x="56.8950%" y="693" width="0.3590%" height="15" fill="rgb(252,177,53)"/><text x="57.1450%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (12 samples, 0.36%)</title><rect x="56.8950%" y="677" width="0.3590%" height="15" fill="rgb(237,209,29)"/><text x="57.1450%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (4 samples, 0.12%)</title><rect x="57.1343%" y="661" width="0.1197%" height="15" fill="rgb(212,65,23)"/><text x="57.3843%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (4 samples, 0.12%)</title><rect x="57.1343%" y="645" width="0.1197%" height="15" fill="rgb(230,222,46)"/><text x="57.3843%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (4 samples, 0.12%)</title><rect x="57.1343%" y="629" width="0.1197%" height="15" fill="rgb(215,135,32)"/><text x="57.3843%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (4 samples, 0.12%)</title><rect x="57.1343%" y="613" width="0.1197%" height="15" fill="rgb(246,101,22)"/><text x="57.3843%" y="623.50"></text></g><g><title>__libc_send (4 samples, 0.12%)</title><rect x="57.1343%" y="597" width="0.1197%" height="15" fill="rgb(206,107,13)"/><text x="57.3843%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.12%)</title><rect x="57.1343%" y="581" width="0.1197%" height="15" fill="rgb(250,100,44)"/><text x="57.3843%" y="591.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.12%)</title><rect x="57.2540%" y="629" width="0.1197%" height="15" fill="rgb(231,147,38)"/><text x="57.5040%" y="639.50"></text></g><g><title>_int_malloc (4 samples, 0.12%)</title><rect x="57.2540%" y="613" width="0.1197%" height="15" fill="rgb(229,8,40)"/><text x="57.5040%" y="623.50"></text></g><g><title>sysmalloc (4 samples, 0.12%)</title><rect x="57.2540%" y="597" width="0.1197%" height="15" fill="rgb(221,135,30)"/><text x="57.5040%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (5 samples, 0.15%)</title><rect x="57.2540%" y="693" width="0.1496%" height="15" fill="rgb(249,193,18)"/><text x="57.5040%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (5 samples, 0.15%)</title><rect x="57.2540%" y="677" width="0.1496%" height="15" fill="rgb(209,133,39)"/><text x="57.5040%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.15%)</title><rect x="57.2540%" y="661" width="0.1496%" height="15" fill="rgb(232,100,14)"/><text x="57.5040%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.15%)</title><rect x="57.2540%" y="645" width="0.1496%" height="15" fill="rgb(224,185,1)"/><text x="57.5040%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.15%)</title><rect x="57.4334%" y="693" width="0.1496%" height="15" fill="rgb(223,139,8)"/><text x="57.6834%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (4 samples, 0.12%)</title><rect x="57.4634%" y="677" width="0.1197%" height="15" fill="rgb(232,213,38)"/><text x="57.7134%" y="687.50"></text></g><g><title>__tcp_push_pending_frames (11 samples, 0.33%)</title><rect x="57.8223%" y="453" width="0.3290%" height="15" fill="rgb(207,94,22)"/><text x="58.0723%" y="463.50"></text></g><g><title>tcp_write_xmit (11 samples, 0.33%)</title><rect x="57.8223%" y="437" width="0.3290%" height="15" fill="rgb(219,183,54)"/><text x="58.0723%" y="447.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.33%)</title><rect x="57.8223%" y="421" width="0.3290%" height="15" fill="rgb(216,185,54)"/><text x="58.0723%" y="431.50"></text></g><g><title>__ip_queue_xmit (10 samples, 0.30%)</title><rect x="57.8522%" y="405" width="0.2991%" height="15" fill="rgb(254,217,39)"/><text x="58.1022%" y="415.50"></text></g><g><title>ip_output (10 samples, 0.30%)</title><rect x="57.8522%" y="389" width="0.2991%" height="15" fill="rgb(240,178,23)"/><text x="58.1022%" y="399.50"></text></g><g><title>ip_finish_output2 (10 samples, 0.30%)</title><rect x="57.8522%" y="373" width="0.2991%" height="15" fill="rgb(218,11,47)"/><text x="58.1022%" y="383.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.21%)</title><rect x="57.9420%" y="357" width="0.2094%" height="15" fill="rgb(218,51,51)"/><text x="58.1920%" y="367.50"></text></g><g><title>do_softirq (7 samples, 0.21%)</title><rect x="57.9420%" y="341" width="0.2094%" height="15" fill="rgb(238,126,27)"/><text x="58.1920%" y="351.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.21%)</title><rect x="57.9420%" y="325" width="0.2094%" height="15" fill="rgb(249,202,22)"/><text x="58.1920%" y="335.50"></text></g><g><title>__do_softirq (7 samples, 0.21%)</title><rect x="57.9420%" y="309" width="0.2094%" height="15" fill="rgb(254,195,49)"/><text x="58.1920%" y="319.50"></text></g><g><title>net_rx_action (7 samples, 0.21%)</title><rect x="57.9420%" y="293" width="0.2094%" height="15" fill="rgb(208,123,14)"/><text x="58.1920%" y="303.50"></text></g><g><title>process_backlog (7 samples, 0.21%)</title><rect x="57.9420%" y="277" width="0.2094%" height="15" fill="rgb(224,200,8)"/><text x="58.1920%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.21%)</title><rect x="57.9420%" y="261" width="0.2094%" height="15" fill="rgb(217,61,36)"/><text x="58.1920%" y="271.50"></text></g><g><title>ip_rcv (7 samples, 0.21%)</title><rect x="57.9420%" y="245" width="0.2094%" height="15" fill="rgb(206,35,45)"/><text x="58.1920%" y="255.50"></text></g><g><title>ip_local_deliver (7 samples, 0.21%)</title><rect x="57.9420%" y="229" width="0.2094%" height="15" fill="rgb(217,65,33)"/><text x="58.1920%" y="239.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.21%)</title><rect x="57.9420%" y="213" width="0.2094%" height="15" fill="rgb(222,158,48)"/><text x="58.1920%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.21%)</title><rect x="57.9420%" y="197" width="0.2094%" height="15" fill="rgb(254,2,54)"/><text x="58.1920%" y="207.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.21%)</title><rect x="57.9420%" y="181" width="0.2094%" height="15" fill="rgb(250,143,38)"/><text x="58.1920%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.15%)</title><rect x="58.0018%" y="165" width="0.1496%" height="15" fill="rgb(248,25,0)"/><text x="58.2518%" y="175.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.15%)</title><rect x="58.0018%" y="149" width="0.1496%" height="15" fill="rgb(206,152,27)"/><text x="58.2518%" y="159.50"></text></g><g><title>tcp_ack (4 samples, 0.12%)</title><rect x="58.0317%" y="133" width="0.1197%" height="15" fill="rgb(240,77,30)"/><text x="58.2817%" y="143.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (20 samples, 0.60%)</title><rect x="57.6428%" y="677" width="0.5983%" height="15" fill="rgb(231,5,3)"/><text x="57.8928%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (20 samples, 0.60%)</title><rect x="57.6428%" y="661" width="0.5983%" height="15" fill="rgb(207,226,32)"/><text x="57.8928%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (18 samples, 0.54%)</title><rect x="57.7027%" y="645" width="0.5384%" height="15" fill="rgb(222,207,47)"/><text x="57.9527%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (17 samples, 0.51%)</title><rect x="57.7326%" y="629" width="0.5085%" height="15" fill="rgb(229,115,45)"/><text x="57.9826%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (17 samples, 0.51%)</title><rect x="57.7326%" y="613" width="0.5085%" height="15" fill="rgb(224,191,6)"/><text x="57.9826%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (17 samples, 0.51%)</title><rect x="57.7326%" y="597" width="0.5085%" height="15" fill="rgb(230,227,24)"/><text x="57.9826%" y="607.50"></text></g><g><title>__libc_send (17 samples, 0.51%)</title><rect x="57.7326%" y="581" width="0.5085%" height="15" fill="rgb(228,80,19)"/><text x="57.9826%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (16 samples, 0.48%)</title><rect x="57.7625%" y="565" width="0.4786%" height="15" fill="rgb(247,229,0)"/><text x="58.0125%" y="575.50"></text></g><g><title>do_syscall_64 (16 samples, 0.48%)</title><rect x="57.7625%" y="549" width="0.4786%" height="15" fill="rgb(237,194,15)"/><text x="58.0125%" y="559.50"></text></g><g><title>__x64_sys_sendto (16 samples, 0.48%)</title><rect x="57.7625%" y="533" width="0.4786%" height="15" fill="rgb(219,203,20)"/><text x="58.0125%" y="543.50"></text></g><g><title>__sys_sendto (16 samples, 0.48%)</title><rect x="57.7625%" y="517" width="0.4786%" height="15" fill="rgb(234,128,8)"/><text x="58.0125%" y="527.50"></text></g><g><title>sock_sendmsg (16 samples, 0.48%)</title><rect x="57.7625%" y="501" width="0.4786%" height="15" fill="rgb(248,202,8)"/><text x="58.0125%" y="511.50"></text></g><g><title>tcp_sendmsg (16 samples, 0.48%)</title><rect x="57.7625%" y="485" width="0.4786%" height="15" fill="rgb(206,104,37)"/><text x="58.0125%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (15 samples, 0.45%)</title><rect x="57.7924%" y="469" width="0.4487%" height="15" fill="rgb(223,8,27)"/><text x="58.0424%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.24%)</title><rect x="58.2411%" y="677" width="0.2393%" height="15" fill="rgb(216,217,28)"/><text x="58.4911%" y="687.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.15%)</title><rect x="58.3308%" y="661" width="0.1496%" height="15" fill="rgb(249,199,1)"/><text x="58.5808%" y="671.50"></text></g><g><title>_int_realloc (5 samples, 0.15%)</title><rect x="58.3308%" y="645" width="0.1496%" height="15" fill="rgb(240,85,17)"/><text x="58.5808%" y="655.50"></text></g><g><title>_int_malloc (5 samples, 0.15%)</title><rect x="58.3308%" y="629" width="0.1496%" height="15" fill="rgb(206,108,45)"/><text x="58.5808%" y="639.50"></text></g><g><title>sysmalloc (5 samples, 0.15%)</title><rect x="58.3308%" y="613" width="0.1496%" height="15" fill="rgb(245,210,41)"/><text x="58.5808%" y="623.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (31 samples, 0.93%)</title><rect x="57.6129%" y="693" width="0.9273%" height="15" fill="rgb(206,13,37)"/><text x="57.8629%" y="703.50"></text></g><g><title>__GI___libc_free (7 samples, 0.21%)</title><rect x="58.9291%" y="613" width="0.2094%" height="15" fill="rgb(250,61,18)"/><text x="59.1791%" y="623.50"></text></g><g><title>_int_free (21 samples, 0.63%)</title><rect x="59.1983%" y="613" width="0.6282%" height="15" fill="rgb(235,172,48)"/><text x="59.4483%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 1.38%)</title><rect x="58.7197%" y="629" width="1.3760%" height="15" fill="rgb(249,201,17)"/><text x="58.9697%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.27%)</title><rect x="59.8265%" y="613" width="0.2692%" height="15" fill="rgb(219,208,6)"/><text x="60.0765%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 1.56%)</title><rect x="58.6599%" y="645" width="1.5555%" height="15" fill="rgb(248,31,23)"/><text x="58.9099%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 2.51%)</title><rect x="58.6599%" y="661" width="2.5127%" height="15" fill="rgb(245,15,42)"/><text x="58.9099%" y="671.50">&lt;a..</text></g><g><title>_int_free (32 samples, 0.96%)</title><rect x="60.2154%" y="645" width="0.9572%" height="15" fill="rgb(222,217,39)"/><text x="60.4654%" y="655.50"></text></g><g><title>malloc_consolidate (32 samples, 0.96%)</title><rect x="60.2154%" y="629" width="0.9572%" height="15" fill="rgb(210,219,27)"/><text x="60.4654%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (8 samples, 0.24%)</title><rect x="60.9333%" y="613" width="0.2393%" height="15" fill="rgb(252,166,36)"/><text x="61.1833%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.15%)</title><rect x="61.2923%" y="629" width="0.1496%" height="15" fill="rgb(245,132,34)"/><text x="61.5423%" y="639.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.15%)</title><rect x="61.2923%" y="613" width="0.1496%" height="15" fill="rgb(236,54,3)"/><text x="61.5423%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.30%)</title><rect x="61.1726%" y="661" width="0.2991%" height="15" fill="rgb(241,173,43)"/><text x="61.4226%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as core::clone::Clone&gt;::clone (8 samples, 0.24%)</title><rect x="61.2324%" y="645" width="0.2393%" height="15" fill="rgb(215,190,9)"/><text x="61.4824%" y="655.50"></text></g><g><title>alloc::slice::merge_sort (34 samples, 1.02%)</title><rect x="61.5016%" y="661" width="1.0171%" height="15" fill="rgb(242,101,16)"/><text x="61.7516%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (33 samples, 0.99%)</title><rect x="61.5316%" y="645" width="0.9871%" height="15" fill="rgb(223,190,21)"/><text x="61.7816%" y="655.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (26 samples, 0.78%)</title><rect x="61.7410%" y="629" width="0.7777%" height="15" fill="rgb(215,228,25)"/><text x="61.9910%" y="639.50"></text></g><g><title>core::num::dec2flt::dec2flt (22 samples, 0.66%)</title><rect x="61.8606%" y="613" width="0.6581%" height="15" fill="rgb(225,36,22)"/><text x="62.1106%" y="623.50"></text></g><g><title>core::fmt::write (7 samples, 0.21%)</title><rect x="62.8777%" y="645" width="0.2094%" height="15" fill="rgb(251,106,46)"/><text x="63.1277%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.18%)</title><rect x="62.9076%" y="629" width="0.1795%" height="15" fill="rgb(208,90,1)"/><text x="63.1576%" y="639.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.45%)</title><rect x="63.7152%" y="629" width="0.4487%" height="15" fill="rgb(243,10,4)"/><text x="63.9652%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.15%)</title><rect x="64.1639%" y="629" width="0.1496%" height="15" fill="rgb(212,137,27)"/><text x="64.4139%" y="639.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (49 samples, 1.47%)</title><rect x="63.0870%" y="645" width="1.4657%" height="15" fill="rgb(231,220,49)"/><text x="63.3370%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.12%)</title><rect x="64.4331%" y="629" width="0.1197%" height="15" fill="rgb(237,96,20)"/><text x="64.6831%" y="639.50"></text></g><g><title>alloc::slice::merge_sort (14 samples, 0.42%)</title><rect x="64.7622%" y="629" width="0.4188%" height="15" fill="rgb(239,229,30)"/><text x="65.0122%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (8 samples, 0.24%)</title><rect x="64.9417%" y="613" width="0.2393%" height="15" fill="rgb(219,65,33)"/><text x="65.1917%" y="623.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (88 samples, 2.63%)</title><rect x="62.6982%" y="661" width="2.6324%" height="15" fill="rgb(243,134,7)"/><text x="62.9482%" y="671.50">de..</text></g><g><title>decor_mem::views::View::intersect_rptrs (26 samples, 0.78%)</title><rect x="64.5528%" y="645" width="0.7777%" height="15" fill="rgb(216,177,54)"/><text x="64.8028%" y="655.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (5 samples, 0.15%)</title><rect x="65.1810%" y="629" width="0.1496%" height="15" fill="rgb(211,160,20)"/><text x="65.4310%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (13 samples, 0.39%)</title><rect x="67.0057%" y="549" width="0.3889%" height="15" fill="rgb(239,85,39)"/><text x="67.2557%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.39%)</title><rect x="67.0057%" y="533" width="0.3889%" height="15" fill="rgb(232,125,22)"/><text x="67.2557%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (13 samples, 0.39%)</title><rect x="67.0057%" y="517" width="0.3889%" height="15" fill="rgb(244,57,34)"/><text x="67.2557%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.39%)</title><rect x="67.0057%" y="501" width="0.3889%" height="15" fill="rgb(214,203,32)"/><text x="67.2557%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.27%)</title><rect x="67.1253%" y="485" width="0.2692%" height="15" fill="rgb(207,58,43)"/><text x="67.3753%" y="495.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.93%)</title><rect x="67.3946%" y="437" width="0.9273%" height="15" fill="rgb(215,193,15)"/><text x="67.6446%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (101 samples, 3.02%)</title><rect x="65.5399%" y="629" width="3.0212%" height="15" fill="rgb(232,15,44)"/><text x="65.7899%" y="639.50">&lt;co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (60 samples, 1.79%)</title><rect x="66.7664%" y="613" width="1.7948%" height="15" fill="rgb(212,3,48)"/><text x="67.0164%" y="623.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 1.71%)</title><rect x="66.8561%" y="597" width="1.7051%" height="15" fill="rgb(218,128,7)"/><text x="67.1061%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (54 samples, 1.62%)</title><rect x="66.9459%" y="581" width="1.6153%" height="15" fill="rgb(226,216,39)"/><text x="67.1959%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 1.56%)</title><rect x="67.0057%" y="565" width="1.5555%" height="15" fill="rgb(243,47,51)"/><text x="67.2557%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (39 samples, 1.17%)</title><rect x="67.3946%" y="549" width="1.1666%" height="15" fill="rgb(241,183,40)"/><text x="67.6446%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (39 samples, 1.17%)</title><rect x="67.3946%" y="533" width="1.1666%" height="15" fill="rgb(231,217,32)"/><text x="67.6446%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (39 samples, 1.17%)</title><rect x="67.3946%" y="517" width="1.1666%" height="15" fill="rgb(229,61,38)"/><text x="67.6446%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (39 samples, 1.17%)</title><rect x="67.3946%" y="501" width="1.1666%" height="15" fill="rgb(225,210,5)"/><text x="67.6446%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (39 samples, 1.17%)</title><rect x="67.3946%" y="485" width="1.1666%" height="15" fill="rgb(231,79,45)"/><text x="67.6446%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 1.17%)</title><rect x="67.3946%" y="469" width="1.1666%" height="15" fill="rgb(224,100,7)"/><text x="67.6446%" y="479.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 1.17%)</title><rect x="67.3946%" y="453" width="1.1666%" height="15" fill="rgb(241,198,18)"/><text x="67.6446%" y="463.50"></text></g><g><title>__rust_alloc (5 samples, 0.15%)</title><rect x="68.4116%" y="437" width="0.1496%" height="15" fill="rgb(252,97,53)"/><text x="68.6616%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (112 samples, 3.35%)</title><rect x="65.4502%" y="645" width="3.3503%" height="15" fill="rgb(220,88,7)"/><text x="65.7002%" y="655.50">&lt;al..</text></g><g><title>__GI___libc_malloc (8 samples, 0.24%)</title><rect x="68.5612%" y="629" width="0.2393%" height="15" fill="rgb(213,176,14)"/><text x="68.8112%" y="639.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.18%)</title><rect x="68.8304%" y="645" width="0.1795%" height="15" fill="rgb(246,73,7)"/><text x="69.0804%" y="655.50"></text></g><g><title>_int_free (4 samples, 0.12%)</title><rect x="69.1295%" y="645" width="0.1197%" height="15" fill="rgb(245,64,36)"/><text x="69.3795%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.36%)</title><rect x="69.2492%" y="645" width="0.3590%" height="15" fill="rgb(245,80,10)"/><text x="69.4992%" y="655.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.30%)</title><rect x="69.3090%" y="629" width="0.2991%" height="15" fill="rgb(232,107,50)"/><text x="69.5590%" y="639.50"></text></g><g><title>_int_realloc (7 samples, 0.21%)</title><rect x="69.3987%" y="613" width="0.2094%" height="15" fill="rgb(253,3,0)"/><text x="69.6487%" y="623.50"></text></g><g><title>_int_malloc (5 samples, 0.15%)</title><rect x="69.4586%" y="597" width="0.1496%" height="15" fill="rgb(212,99,53)"/><text x="69.7086%" y="607.50"></text></g><g><title>decor_mem::views::View::insert_row (7 samples, 0.21%)</title><rect x="69.6081%" y="645" width="0.2094%" height="15" fill="rgb(249,111,54)"/><text x="69.8581%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.12%)</title><rect x="69.6979%" y="629" width="0.1197%" height="15" fill="rgb(249,55,30)"/><text x="69.9479%" y="639.50"></text></g><g><title>decor_mem::views::ViewIndex::get_index_rows_of_val (11 samples, 0.33%)</title><rect x="69.8175%" y="645" width="0.3290%" height="15" fill="rgb(237,47,42)"/><text x="70.0675%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.24%)</title><rect x="69.9073%" y="629" width="0.2393%" height="15" fill="rgb(211,20,18)"/><text x="70.1573%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.12%)</title><rect x="70.0269%" y="613" width="0.1197%" height="15" fill="rgb(231,203,46)"/><text x="70.2769%" y="623.50"></text></g><g><title>decor_mem::select::join_views (161 samples, 4.82%)</title><rect x="65.3605%" y="661" width="4.8160%" height="15" fill="rgb(237,142,3)"/><text x="65.6105%" y="671.50">decor_..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.12%)</title><rect x="70.1765%" y="613" width="0.1197%" height="15" fill="rgb(241,107,1)"/><text x="70.4265%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.12%)</title><rect x="70.1765%" y="597" width="0.1197%" height="15" fill="rgb(229,83,13)"/><text x="70.4265%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.15%)</title><rect x="70.1765%" y="629" width="0.1496%" height="15" fill="rgb(241,91,40)"/><text x="70.4265%" y="639.50"></text></g><g><title>core::fmt::write (6 samples, 0.18%)</title><rect x="70.1765%" y="645" width="0.1795%" height="15" fill="rgb(225,3,45)"/><text x="70.4265%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.12%)</title><rect x="70.3560%" y="565" width="0.1197%" height="15" fill="rgb(244,223,14)"/><text x="70.6060%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.12%)</title><rect x="70.3560%" y="549" width="0.1197%" height="15" fill="rgb(224,124,37)"/><text x="70.6060%" y="559.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (12 samples, 0.36%)</title><rect x="70.1765%" y="661" width="0.3590%" height="15" fill="rgb(251,171,30)"/><text x="70.4265%" y="671.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (6 samples, 0.18%)</title><rect x="70.3560%" y="645" width="0.1795%" height="15" fill="rgb(236,46,54)"/><text x="70.6060%" y="655.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.18%)</title><rect x="70.3560%" y="629" width="0.1795%" height="15" fill="rgb(245,213,5)"/><text x="70.6060%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.18%)</title><rect x="70.3560%" y="613" width="0.1795%" height="15" fill="rgb(230,144,27)"/><text x="70.6060%" y="623.50"></text></g><g><title>core::fmt::write (6 samples, 0.18%)</title><rect x="70.3560%" y="597" width="0.1795%" height="15" fill="rgb(220,86,6)"/><text x="70.6060%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.18%)</title><rect x="70.3560%" y="581" width="0.1795%" height="15" fill="rgb(240,20,13)"/><text x="70.6060%" y="591.50"></text></g><g><title>decor_mem::select::get_query_results (406 samples, 12.14%)</title><rect x="58.5701%" y="693" width="12.1448%" height="15" fill="rgb(217,89,34)"/><text x="58.8201%" y="703.50">decor_mem::select:..</text></g><g><title>decor_mem::select::get_setexpr_results (406 samples, 12.14%)</title><rect x="58.5701%" y="677" width="12.1448%" height="15" fill="rgb(229,13,5)"/><text x="58.8201%" y="687.50">decor_mem::select:..</text></g><g><title>decor_mem::select::tablefactor_to_view (6 samples, 0.18%)</title><rect x="70.5354%" y="661" width="0.1795%" height="15" fill="rgb(244,67,35)"/><text x="70.7854%" y="671.50"></text></g><g><title>core::fmt::write (5 samples, 0.15%)</title><rect x="70.5654%" y="645" width="0.1496%" height="15" fill="rgb(221,40,2)"/><text x="70.8154%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (5 samples, 0.15%)</title><rect x="70.5654%" y="629" width="0.1496%" height="15" fill="rgb(237,157,21)"/><text x="70.8154%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.24%)</title><rect x="71.0440%" y="629" width="0.2393%" height="15" fill="rgb(222,94,11)"/><text x="71.2940%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.24%)</title><rect x="71.0440%" y="613" width="0.2393%" height="15" fill="rgb(249,113,6)"/><text x="71.2940%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.24%)</title><rect x="71.0440%" y="597" width="0.2393%" height="15" fill="rgb(238,137,36)"/><text x="71.2940%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.18%)</title><rect x="71.1038%" y="581" width="0.1795%" height="15" fill="rgb(210,102,26)"/><text x="71.3538%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.12%)</title><rect x="71.1636%" y="565" width="0.1197%" height="15" fill="rgb(218,30,30)"/><text x="71.4136%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.12%)</title><rect x="71.1636%" y="549" width="0.1197%" height="15" fill="rgb(214,67,26)"/><text x="71.4136%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.12%)</title><rect x="71.1636%" y="533" width="0.1197%" height="15" fill="rgb(251,9,53)"/><text x="71.4136%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (12 samples, 0.36%)</title><rect x="71.0440%" y="645" width="0.3590%" height="15" fill="rgb(228,204,25)"/><text x="71.2940%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.12%)</title><rect x="71.2833%" y="629" width="0.1197%" height="15" fill="rgb(207,153,8)"/><text x="71.5333%" y="639.50"></text></g><g><title>core::fmt::write (17 samples, 0.51%)</title><rect x="71.0141%" y="661" width="0.5085%" height="15" fill="rgb(242,9,16)"/><text x="71.2641%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (4 samples, 0.12%)</title><rect x="71.4029%" y="645" width="0.1197%" height="15" fill="rgb(217,211,10)"/><text x="71.6529%" y="655.50"></text></g><g><title>decor_mem::views::View::insert_into_index (25 samples, 0.75%)</title><rect x="70.8645%" y="677" width="0.7478%" height="15" fill="rgb(219,228,52)"/><text x="71.1145%" y="687.50"></text></g><g><title>decor_mem::views::Views::insert (32 samples, 0.96%)</title><rect x="70.7149%" y="693" width="0.9572%" height="15" fill="rgb(231,92,29)"/><text x="70.9649%" y="703.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (14 samples, 0.42%)</title><rect x="71.6722%" y="677" width="0.4188%" height="15" fill="rgb(232,8,23)"/><text x="71.9222%" y="687.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (13 samples, 0.39%)</title><rect x="71.7021%" y="661" width="0.3889%" height="15" fill="rgb(216,211,34)"/><text x="71.9521%" y="671.50"></text></g><g><title>core::fmt::write (7 samples, 0.21%)</title><rect x="71.8815%" y="645" width="0.2094%" height="15" fill="rgb(236,151,0)"/><text x="72.1315%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (7 samples, 0.21%)</title><rect x="71.8815%" y="629" width="0.2094%" height="15" fill="rgb(209,168,3)"/><text x="72.1315%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.15%)</title><rect x="71.9414%" y="613" width="0.1496%" height="15" fill="rgb(208,129,28)"/><text x="72.1914%" y="623.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (511 samples, 15.29%)</title><rect x="56.8651%" y="725" width="15.2857%" height="15" fill="rgb(229,78,22)"/><text x="57.1151%" y="735.50">decor_mem::query_transf..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (511 samples, 15.29%)</title><rect x="56.8651%" y="709" width="15.2857%" height="15" fill="rgb(228,187,13)"/><text x="57.1151%" y="719.50">decor_mem::query_transf..</text></g><g><title>decor_mem::views::Views::update (16 samples, 0.48%)</title><rect x="71.6722%" y="693" width="0.4786%" height="15" fill="rgb(240,119,24)"/><text x="71.9222%" y="703.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.18%)</title><rect x="72.6892%" y="661" width="0.1795%" height="15" fill="rgb(209,194,42)"/><text x="72.9392%" y="671.50"></text></g><g><title>_int_realloc (4 samples, 0.12%)</title><rect x="72.7490%" y="645" width="0.1197%" height="15" fill="rgb(247,200,46)"/><text x="72.9990%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.21%)</title><rect x="72.6892%" y="677" width="0.2094%" height="15" fill="rgb(218,76,16)"/><text x="72.9392%" y="687.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (5 samples, 0.15%)</title><rect x="73.0482%" y="661" width="0.1496%" height="15" fill="rgb(225,21,48)"/><text x="73.2982%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (11 samples, 0.33%)</title><rect x="72.9285%" y="677" width="0.3290%" height="15" fill="rgb(239,223,50)"/><text x="73.1785%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.24%)</title><rect x="73.4969%" y="661" width="0.2393%" height="15" fill="rgb(244,45,21)"/><text x="73.7469%" y="671.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.21%)</title><rect x="73.5268%" y="645" width="0.2094%" height="15" fill="rgb(232,33,43)"/><text x="73.7768%" y="655.50"></text></g><g><title>_int_malloc (4 samples, 0.12%)</title><rect x="73.6165%" y="629" width="0.1197%" height="15" fill="rgb(209,8,3)"/><text x="73.8665%" y="639.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (55 samples, 1.65%)</title><rect x="72.1508%" y="725" width="1.6452%" height="15" fill="rgb(214,25,53)"/><text x="72.4008%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (46 samples, 1.38%)</title><rect x="72.4200%" y="709" width="1.3760%" height="15" fill="rgb(254,186,54)"/><text x="72.6700%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (42 samples, 1.26%)</title><rect x="72.5396%" y="693" width="1.2564%" height="15" fill="rgb(208,174,49)"/><text x="72.7896%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (18 samples, 0.54%)</title><rect x="73.2576%" y="677" width="0.5384%" height="15" fill="rgb(233,191,51)"/><text x="73.5076%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.18%)</title><rect x="73.7960%" y="677" width="0.1795%" height="15" fill="rgb(222,134,10)"/><text x="74.0460%" y="687.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.18%)</title><rect x="73.7960%" y="661" width="0.1795%" height="15" fill="rgb(230,226,20)"/><text x="74.0460%" y="671.50"></text></g><g><title>_int_realloc (6 samples, 0.18%)</title><rect x="73.7960%" y="645" width="0.1795%" height="15" fill="rgb(251,111,25)"/><text x="74.0460%" y="655.50"></text></g><g><title>_int_malloc (6 samples, 0.18%)</title><rect x="73.7960%" y="629" width="0.1795%" height="15" fill="rgb(224,40,46)"/><text x="74.0460%" y="639.50"></text></g><g><title>malloc_consolidate (6 samples, 0.18%)</title><rect x="73.7960%" y="613" width="0.1795%" height="15" fill="rgb(236,108,47)"/><text x="74.0460%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (16 samples, 0.48%)</title><rect x="74.5139%" y="645" width="0.4786%" height="15" fill="rgb(234,93,0)"/><text x="74.7639%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 0.30%)</title><rect x="74.6934%" y="629" width="0.2991%" height="15" fill="rgb(224,213,32)"/><text x="74.9434%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (10 samples, 0.30%)</title><rect x="74.6934%" y="613" width="0.2991%" height="15" fill="rgb(251,11,48)"/><text x="74.9434%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (10 samples, 0.30%)</title><rect x="74.6934%" y="597" width="0.2991%" height="15" fill="rgb(236,173,5)"/><text x="74.9434%" y="607.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (32 samples, 0.96%)</title><rect x="74.0652%" y="661" width="0.9572%" height="15" fill="rgb(230,95,12)"/><text x="74.3152%" y="671.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (36 samples, 1.08%)</title><rect x="73.9755%" y="677" width="1.0769%" height="15" fill="rgb(232,209,1)"/><text x="74.2255%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (613 samples, 18.34%)</title><rect x="56.8053%" y="757" width="18.3368%" height="15" fill="rgb(232,6,1)"/><text x="57.0553%" y="767.50">msql_srv::MysqlIntermediary&lt;B..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (611 samples, 18.28%)</title><rect x="56.8651%" y="741" width="18.2770%" height="15" fill="rgb(210,224,50)"/><text x="57.1151%" y="751.50">&lt;decor_mem::Shim as msql_srv..</text></g><g><title>decor_mem::stats::get_qtype (45 samples, 1.35%)</title><rect x="73.7960%" y="725" width="1.3461%" height="15" fill="rgb(228,127,35)"/><text x="74.0460%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (45 samples, 1.35%)</title><rect x="73.7960%" y="709" width="1.3461%" height="15" fill="rgb(245,102,45)"/><text x="74.0460%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (45 samples, 1.35%)</title><rect x="73.7960%" y="693" width="1.3461%" height="15" fill="rgb(214,1,49)"/><text x="74.0460%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (5 samples, 0.15%)</title><rect x="75.4711%" y="709" width="0.1496%" height="15" fill="rgb(226,163,40)"/><text x="75.7211%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.15%)</title><rect x="75.4711%" y="693" width="0.1496%" height="15" fill="rgb(239,212,28)"/><text x="75.7211%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.15%)</title><rect x="75.4711%" y="677" width="0.1496%" height="15" fill="rgb(220,20,13)"/><text x="75.7211%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (9 samples, 0.27%)</title><rect x="75.4711%" y="725" width="0.2692%" height="15" fill="rgb(210,164,35)"/><text x="75.7211%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.12%)</title><rect x="75.6207%" y="709" width="0.1197%" height="15" fill="rgb(248,109,41)"/><text x="75.8707%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.12%)</title><rect x="75.6207%" y="693" width="0.1197%" height="15" fill="rgb(238,23,50)"/><text x="75.8707%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.18%)</title><rect x="76.0694%" y="677" width="0.1795%" height="15" fill="rgb(211,48,49)"/><text x="76.3194%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (20 samples, 0.60%)</title><rect x="76.3984%" y="677" width="0.5983%" height="15" fill="rgb(223,36,21)"/><text x="76.6484%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (14 samples, 0.42%)</title><rect x="76.5779%" y="661" width="0.4188%" height="15" fill="rgb(207,123,46)"/><text x="76.8279%" y="671.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.21%)</title><rect x="76.7873%" y="645" width="0.2094%" height="15" fill="rgb(240,218,32)"/><text x="77.0373%" y="655.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (6 samples, 0.18%)</title><rect x="76.8172%" y="629" width="0.1795%" height="15" fill="rgb(252,5,43)"/><text x="77.0672%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (10 samples, 0.30%)</title><rect x="76.9967%" y="677" width="0.2991%" height="15" fill="rgb(252,84,19)"/><text x="77.2467%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.36%)</title><rect x="77.3856%" y="661" width="0.3590%" height="15" fill="rgb(243,152,39)"/><text x="77.6356%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.36%)</title><rect x="77.3856%" y="645" width="0.3590%" height="15" fill="rgb(234,160,15)"/><text x="77.6356%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.36%)</title><rect x="77.3856%" y="629" width="0.3590%" height="15" fill="rgb(237,34,20)"/><text x="77.6356%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.36%)</title><rect x="77.3856%" y="613" width="0.3590%" height="15" fill="rgb(229,97,13)"/><text x="77.6356%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.36%)</title><rect x="77.3856%" y="597" width="0.3590%" height="15" fill="rgb(234,71,50)"/><text x="77.6356%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.36%)</title><rect x="77.3856%" y="581" width="0.3590%" height="15" fill="rgb(253,155,4)"/><text x="77.6356%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.36%)</title><rect x="77.3856%" y="565" width="0.3590%" height="15" fill="rgb(222,185,37)"/><text x="77.6356%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.36%)</title><rect x="77.3856%" y="549" width="0.3590%" height="15" fill="rgb(251,177,13)"/><text x="77.6356%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (12 samples, 0.36%)</title><rect x="77.3856%" y="533" width="0.3590%" height="15" fill="rgb(250,179,40)"/><text x="77.6356%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.36%)</title><rect x="77.3856%" y="517" width="0.3590%" height="15" fill="rgb(242,44,2)"/><text x="77.6356%" y="527.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.33%)</title><rect x="77.4155%" y="501" width="0.3290%" height="15" fill="rgb(216,177,13)"/><text x="77.6655%" y="511.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.33%)</title><rect x="77.4155%" y="485" width="0.3290%" height="15" fill="rgb(216,106,43)"/><text x="77.6655%" y="495.50"></text></g><g><title>_int_malloc (8 samples, 0.24%)</title><rect x="77.5052%" y="469" width="0.2393%" height="15" fill="rgb(216,183,2)"/><text x="77.7552%" y="479.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (81 samples, 2.42%)</title><rect x="75.4711%" y="741" width="2.4230%" height="15" fill="rgb(249,75,3)"/><text x="75.7211%" y="751.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (72 samples, 2.15%)</title><rect x="75.7404%" y="725" width="2.1538%" height="15" fill="rgb(219,67,39)"/><text x="75.9904%" y="735.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (72 samples, 2.15%)</title><rect x="75.7404%" y="709" width="2.1538%" height="15" fill="rgb(253,228,2)"/><text x="75.9904%" y="719.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (72 samples, 2.15%)</title><rect x="75.7404%" y="693" width="2.1538%" height="15" fill="rgb(235,138,27)"/><text x="75.9904%" y="703.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_value (20 samples, 0.60%)</title><rect x="77.2958%" y="677" width="0.5983%" height="15" fill="rgb(236,97,51)"/><text x="77.5458%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.81%)</title><rect x="78.1932%" y="645" width="0.8077%" height="15" fill="rgb(240,80,30)"/><text x="78.4432%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.81%)</title><rect x="78.1932%" y="629" width="0.8077%" height="15" fill="rgb(230,178,19)"/><text x="78.4432%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.81%)</title><rect x="78.1932%" y="613" width="0.8077%" height="15" fill="rgb(210,190,27)"/><text x="78.4432%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.81%)</title><rect x="78.1932%" y="597" width="0.8077%" height="15" fill="rgb(222,107,31)"/><text x="78.4432%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (27 samples, 0.81%)</title><rect x="78.1932%" y="581" width="0.8077%" height="15" fill="rgb(216,127,34)"/><text x="78.4432%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.81%)</title><rect x="78.1932%" y="565" width="0.8077%" height="15" fill="rgb(234,116,52)"/><text x="78.4432%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (27 samples, 0.81%)</title><rect x="78.1932%" y="549" width="0.8077%" height="15" fill="rgb(222,124,15)"/><text x="78.4432%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.81%)</title><rect x="78.1932%" y="533" width="0.8077%" height="15" fill="rgb(231,179,28)"/><text x="78.4432%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.81%)</title><rect x="78.1932%" y="517" width="0.8077%" height="15" fill="rgb(226,93,45)"/><text x="78.4432%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (30 samples, 0.90%)</title><rect x="78.1334%" y="677" width="0.8974%" height="15" fill="rgb(215,8,51)"/><text x="78.3834%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (28 samples, 0.84%)</title><rect x="78.1932%" y="661" width="0.8376%" height="15" fill="rgb(223,106,5)"/><text x="78.4432%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (39 samples, 1.17%)</title><rect x="77.9240%" y="725" width="1.1666%" height="15" fill="rgb(250,191,5)"/><text x="78.1740%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (39 samples, 1.17%)</title><rect x="77.9240%" y="709" width="1.1666%" height="15" fill="rgb(242,132,44)"/><text x="78.1740%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (39 samples, 1.17%)</title><rect x="77.9240%" y="693" width="1.1666%" height="15" fill="rgb(251,152,29)"/><text x="78.1740%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (7 samples, 0.21%)</title><rect x="79.1804%" y="677" width="0.2094%" height="15" fill="rgb(218,179,5)"/><text x="79.4304%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (23 samples, 0.69%)</title><rect x="79.0906%" y="693" width="0.6880%" height="15" fill="rgb(227,67,19)"/><text x="79.3406%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (10 samples, 0.30%)</title><rect x="79.4795%" y="677" width="0.2991%" height="15" fill="rgb(233,119,31)"/><text x="79.7295%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (35 samples, 1.05%)</title><rect x="79.0906%" y="709" width="1.0470%" height="15" fill="rgb(241,120,22)"/><text x="79.3406%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (12 samples, 0.36%)</title><rect x="79.7786%" y="693" width="0.3590%" height="15" fill="rgb(224,102,30)"/><text x="80.0286%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (163 samples, 4.88%)</title><rect x="75.4711%" y="757" width="4.8759%" height="15" fill="rgb(210,164,37)"/><text x="75.7211%" y="767.50">sql_pa..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (81 samples, 2.42%)</title><rect x="77.9240%" y="741" width="2.4230%" height="15" fill="rgb(226,191,16)"/><text x="78.1740%" y="751.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_select (42 samples, 1.26%)</title><rect x="79.0906%" y="725" width="1.2564%" height="15" fill="rgb(214,40,45)"/><text x="79.3406%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (7 samples, 0.21%)</title><rect x="80.1376%" y="709" width="0.2094%" height="15" fill="rgb(244,29,26)"/><text x="80.3876%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_factor (7 samples, 0.21%)</title><rect x="80.1376%" y="693" width="0.2094%" height="15" fill="rgb(216,16,5)"/><text x="80.3876%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.24%)</title><rect x="80.7359%" y="453" width="0.2393%" height="15" fill="rgb(249,76,35)"/><text x="80.9859%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (7 samples, 0.21%)</title><rect x="80.7658%" y="437" width="0.2094%" height="15" fill="rgb(207,11,44)"/><text x="81.0158%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.21%)</title><rect x="80.7658%" y="421" width="0.2094%" height="15" fill="rgb(228,190,49)"/><text x="81.0158%" y="431.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.21%)</title><rect x="80.7658%" y="405" width="0.2094%" height="15" fill="rgb(214,173,12)"/><text x="81.0158%" y="415.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.21%)</title><rect x="80.7658%" y="389" width="0.2094%" height="15" fill="rgb(218,26,35)"/><text x="81.0158%" y="399.50"></text></g><g><title>_int_realloc (6 samples, 0.18%)</title><rect x="80.7957%" y="373" width="0.1795%" height="15" fill="rgb(220,200,19)"/><text x="81.0457%" y="383.50"></text></g><g><title>_int_malloc (6 samples, 0.18%)</title><rect x="80.7957%" y="357" width="0.1795%" height="15" fill="rgb(239,95,49)"/><text x="81.0457%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.36%)</title><rect x="80.6760%" y="517" width="0.3590%" height="15" fill="rgb(235,85,53)"/><text x="80.9260%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.33%)</title><rect x="80.7060%" y="501" width="0.3290%" height="15" fill="rgb(233,133,31)"/><text x="80.9560%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (11 samples, 0.33%)</title><rect x="80.7060%" y="485" width="0.3290%" height="15" fill="rgb(218,25,20)"/><text x="80.9560%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.30%)</title><rect x="80.7359%" y="469" width="0.2991%" height="15" fill="rgb(252,210,38)"/><text x="80.9859%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.51%)</title><rect x="80.6461%" y="613" width="0.5085%" height="15" fill="rgb(242,134,21)"/><text x="80.8961%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.48%)</title><rect x="80.6760%" y="597" width="0.4786%" height="15" fill="rgb(213,28,48)"/><text x="80.9260%" y="607.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.48%)</title><rect x="80.6760%" y="581" width="0.4786%" height="15" fill="rgb(250,196,2)"/><text x="80.9260%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 0.48%)</title><rect x="80.6760%" y="565" width="0.4786%" height="15" fill="rgb(227,5,17)"/><text x="80.9260%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.48%)</title><rect x="80.6760%" y="549" width="0.4786%" height="15" fill="rgb(221,226,24)"/><text x="80.9260%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (16 samples, 0.48%)</title><rect x="80.6760%" y="533" width="0.4786%" height="15" fill="rgb(211,5,48)"/><text x="80.9260%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.12%)</title><rect x="81.0350%" y="517" width="0.1197%" height="15" fill="rgb(219,150,6)"/><text x="81.2850%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.12%)</title><rect x="81.0350%" y="501" width="0.1197%" height="15" fill="rgb(251,46,16)"/><text x="81.2850%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (29 samples, 0.87%)</title><rect x="80.4068%" y="757" width="0.8675%" height="15" fill="rgb(220,204,40)"/><text x="80.6568%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (28 samples, 0.84%)</title><rect x="80.4367%" y="741" width="0.8376%" height="15" fill="rgb(211,85,2)"/><text x="80.6867%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (28 samples, 0.84%)</title><rect x="80.4367%" y="725" width="0.8376%" height="15" fill="rgb(229,17,7)"/><text x="80.6867%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (28 samples, 0.84%)</title><rect x="80.4367%" y="709" width="0.8376%" height="15" fill="rgb(239,72,28)"/><text x="80.6867%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (28 samples, 0.84%)</title><rect x="80.4367%" y="693" width="0.8376%" height="15" fill="rgb(230,47,54)"/><text x="80.6867%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (28 samples, 0.84%)</title><rect x="80.4367%" y="677" width="0.8376%" height="15" fill="rgb(214,50,8)"/><text x="80.6867%" y="687.50"></text></g><g><title>alloc::fmt::format (26 samples, 0.78%)</title><rect x="80.4966%" y="661" width="0.7777%" height="15" fill="rgb(216,198,43)"/><text x="80.7466%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (26 samples, 0.78%)</title><rect x="80.4966%" y="645" width="0.7777%" height="15" fill="rgb(234,20,35)"/><text x="80.7466%" y="655.50"></text></g><g><title>core::fmt::write (26 samples, 0.78%)</title><rect x="80.4966%" y="629" width="0.7777%" height="15" fill="rgb(254,45,19)"/><text x="80.7466%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.12%)</title><rect x="81.3640%" y="741" width="0.1197%" height="15" fill="rgb(219,14,44)"/><text x="81.6140%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.12%)</title><rect x="81.3640%" y="725" width="0.1197%" height="15" fill="rgb(217,220,26)"/><text x="81.6140%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.12%)</title><rect x="81.3640%" y="709" width="0.1197%" height="15" fill="rgb(213,158,28)"/><text x="81.6140%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.12%)</title><rect x="81.3640%" y="693" width="0.1197%" height="15" fill="rgb(252,51,52)"/><text x="81.6140%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.12%)</title><rect x="81.3640%" y="677" width="0.1197%" height="15" fill="rgb(246,89,16)"/><text x="81.6140%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (12 samples, 0.36%)</title><rect x="81.4837%" y="709" width="0.3590%" height="15" fill="rgb(216,158,49)"/><text x="81.7337%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (11 samples, 0.33%)</title><rect x="81.5136%" y="693" width="0.3290%" height="15" fill="rgb(236,107,19)"/><text x="81.7636%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 0.24%)</title><rect x="81.6034%" y="677" width="0.2393%" height="15" fill="rgb(228,185,30)"/><text x="81.8534%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (11 samples, 0.33%)</title><rect x="81.8427%" y="693" width="0.3290%" height="15" fill="rgb(246,134,8)"/><text x="82.0927%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (9 samples, 0.27%)</title><rect x="81.9025%" y="677" width="0.2692%" height="15" fill="rgb(214,143,50)"/><text x="82.1525%" y="687.50"></text></g><g><title>alloc::fmt::format (9 samples, 0.27%)</title><rect x="81.9025%" y="661" width="0.2692%" height="15" fill="rgb(228,75,8)"/><text x="82.1525%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.21%)</title><rect x="81.9623%" y="645" width="0.2094%" height="15" fill="rgb(207,175,4)"/><text x="82.2123%" y="655.50"></text></g><g><title>core::fmt::write (7 samples, 0.21%)</title><rect x="81.9623%" y="629" width="0.2094%" height="15" fill="rgb(205,108,24)"/><text x="82.2123%" y="639.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (4 samples, 0.12%)</title><rect x="82.0520%" y="613" width="0.1197%" height="15" fill="rgb(244,120,49)"/><text x="82.3020%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.12%)</title><rect x="82.0520%" y="597" width="0.1197%" height="15" fill="rgb(223,47,38)"/><text x="82.3020%" y="607.50"></text></g><g><title>core::fmt::write (4 samples, 0.12%)</title><rect x="82.0520%" y="581" width="0.1197%" height="15" fill="rgb(229,179,11)"/><text x="82.3020%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (24 samples, 0.72%)</title><rect x="81.4837%" y="725" width="0.7179%" height="15" fill="rgb(231,122,1)"/><text x="81.7337%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (12 samples, 0.36%)</title><rect x="81.8427%" y="709" width="0.3590%" height="15" fill="rgb(245,119,9)"/><text x="82.0927%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (30 samples, 0.90%)</title><rect x="81.3640%" y="757" width="0.8974%" height="15" fill="rgb(241,163,25)"/><text x="81.6140%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (26 samples, 0.78%)</title><rect x="81.4837%" y="741" width="0.7777%" height="15" fill="rgb(217,214,3)"/><text x="81.7337%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (9 samples, 0.27%)</title><rect x="82.2914%" y="677" width="0.2692%" height="15" fill="rgb(240,86,28)"/><text x="82.5414%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (15 samples, 0.45%)</title><rect x="82.2614%" y="693" width="0.4487%" height="15" fill="rgb(215,47,9)"/><text x="82.5114%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (4 samples, 0.12%)</title><rect x="82.5905%" y="677" width="0.1197%" height="15" fill="rgb(252,25,45)"/><text x="82.8405%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (19 samples, 0.57%)</title><rect x="82.2614%" y="757" width="0.5684%" height="15" fill="rgb(251,164,9)"/><text x="82.5114%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (19 samples, 0.57%)</title><rect x="82.2614%" y="741" width="0.5684%" height="15" fill="rgb(233,194,0)"/><text x="82.5114%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (19 samples, 0.57%)</title><rect x="82.2614%" y="725" width="0.5684%" height="15" fill="rgb(249,111,24)"/><text x="82.5114%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (19 samples, 0.57%)</title><rect x="82.2614%" y="709" width="0.5684%" height="15" fill="rgb(250,223,3)"/><text x="82.5114%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.12%)</title><rect x="82.7101%" y="693" width="0.1197%" height="15" fill="rgb(236,178,37)"/><text x="82.9601%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (7 samples, 0.21%)</title><rect x="83.0691%" y="709" width="0.2094%" height="15" fill="rgb(241,158,50)"/><text x="83.3191%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 0.24%)</title><rect x="83.3383%" y="693" width="0.2393%" height="15" fill="rgb(213,121,41)"/><text x="83.5883%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (6 samples, 0.18%)</title><rect x="83.3981%" y="677" width="0.1795%" height="15" fill="rgb(240,92,3)"/><text x="83.6481%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (18 samples, 0.54%)</title><rect x="83.5776%" y="693" width="0.5384%" height="15" fill="rgb(205,123,3)"/><text x="83.8276%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.21%)</title><rect x="83.9067%" y="677" width="0.2094%" height="15" fill="rgb(205,97,47)"/><text x="84.1567%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (54 samples, 1.62%)</title><rect x="82.8298%" y="757" width="1.6153%" height="15" fill="rgb(247,152,14)"/><text x="83.0798%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (54 samples, 1.62%)</title><rect x="82.8298%" y="741" width="1.6153%" height="15" fill="rgb(248,195,53)"/><text x="83.0798%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (54 samples, 1.62%)</title><rect x="82.8298%" y="725" width="1.6153%" height="15" fill="rgb(226,201,16)"/><text x="83.0798%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (39 samples, 1.17%)</title><rect x="83.2785%" y="709" width="1.1666%" height="15" fill="rgb(205,98,0)"/><text x="83.5285%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (8 samples, 0.24%)</title><rect x="84.2058%" y="693" width="0.2393%" height="15" fill="rgb(214,191,48)"/><text x="84.4558%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (8 samples, 0.24%)</title><rect x="84.2058%" y="677" width="0.2393%" height="15" fill="rgb(237,112,39)"/><text x="84.4558%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (24 samples, 0.72%)</title><rect x="84.5947%" y="709" width="0.7179%" height="15" fill="rgb(247,203,27)"/><text x="84.8447%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.30%)</title><rect x="85.0135%" y="693" width="0.2991%" height="15" fill="rgb(235,124,28)"/><text x="85.2635%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (31 samples, 0.93%)</title><rect x="84.4451%" y="725" width="0.9273%" height="15" fill="rgb(208,207,46)"/><text x="84.6951%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (32 samples, 0.96%)</title><rect x="84.4451%" y="757" width="0.9572%" height="15" fill="rgb(234,176,4)"/><text x="84.6951%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (32 samples, 0.96%)</title><rect x="84.4451%" y="741" width="0.9572%" height="15" fill="rgb(230,133,28)"/><text x="84.6951%" y="751.50"></text></g><g><title>start_thread (4 samples, 0.12%)</title><rect x="85.4322%" y="757" width="0.1197%" height="15" fill="rgb(211,137,40)"/><text x="85.6822%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.12%)</title><rect x="85.4322%" y="741" width="0.1197%" height="15" fill="rgb(254,35,13)"/><text x="85.6822%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.12%)</title><rect x="85.4322%" y="725" width="0.1197%" height="15" fill="rgb(225,49,51)"/><text x="85.6822%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.12%)</title><rect x="85.4322%" y="709" width="0.1197%" height="15" fill="rgb(251,10,15)"/><text x="85.6822%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.12%)</title><rect x="85.4322%" y="693" width="0.1197%" height="15" fill="rgb(228,207,15)"/><text x="85.6822%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.12%)</title><rect x="85.4322%" y="677" width="0.1197%" height="15" fill="rgb(241,99,19)"/><text x="85.6822%" y="687.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (4 samples, 0.12%)</title><rect x="85.4322%" y="661" width="0.1197%" height="15" fill="rgb(207,104,49)"/><text x="85.6822%" y="671.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.12%)</title><rect x="85.4322%" y="645" width="0.1197%" height="15" fill="rgb(234,99,18)"/><text x="85.6822%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.12%)</title><rect x="85.4322%" y="629" width="0.1197%" height="15" fill="rgb(213,191,49)"/><text x="85.6822%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (4 samples, 0.12%)</title><rect x="85.4322%" y="613" width="0.1197%" height="15" fill="rgb(210,226,19)"/><text x="85.6822%" y="623.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (4 samples, 0.12%)</title><rect x="85.4322%" y="597" width="0.1197%" height="15" fill="rgb(229,97,18)"/><text x="85.6822%" y="607.50"></text></g><g><title>hwloc::Topology::new (4 samples, 0.12%)</title><rect x="85.7314%" y="629" width="0.1197%" height="15" fill="rgb(211,167,15)"/><text x="85.9814%" y="639.50"></text></g><g><title>hwloc_topology_load (4 samples, 0.12%)</title><rect x="85.7314%" y="613" width="0.1197%" height="15" fill="rgb(210,169,34)"/><text x="85.9814%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.12%)</title><rect x="85.7314%" y="597" width="0.1197%" height="15" fill="rgb(241,121,31)"/><text x="85.9814%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.12%)</title><rect x="85.7314%" y="581" width="0.1197%" height="15" fill="rgb(232,40,11)"/><text x="85.9814%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.12%)</title><rect x="85.7314%" y="565" width="0.1197%" height="15" fill="rgb(205,86,26)"/><text x="85.9814%" y="575.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.12%)</title><rect x="86.0006%" y="597" width="0.1197%" height="15" fill="rgb(231,126,28)"/><text x="86.2506%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.30%)</title><rect x="85.9109%" y="613" width="0.2991%" height="15" fill="rgb(219,221,18)"/><text x="86.1609%" y="623.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.15%)</title><rect x="86.2399%" y="613" width="0.1496%" height="15" fill="rgb(211,40,0)"/><text x="86.4899%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.12%)</title><rect x="86.3895%" y="565" width="0.1197%" height="15" fill="rgb(239,85,43)"/><text x="86.6395%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.12%)</title><rect x="86.3895%" y="549" width="0.1197%" height="15" fill="rgb(231,55,21)"/><text x="86.6395%" y="559.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.12%)</title><rect x="86.3895%" y="533" width="0.1197%" height="15" fill="rgb(225,184,43)"/><text x="86.6395%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.12%)</title><rect x="86.3895%" y="517" width="0.1197%" height="15" fill="rgb(251,158,41)"/><text x="86.6395%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.12%)</title><rect x="86.3895%" y="501" width="0.1197%" height="15" fill="rgb(234,159,37)"/><text x="86.6395%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (4 samples, 0.12%)</title><rect x="86.3895%" y="485" width="0.1197%" height="15" fill="rgb(216,204,22)"/><text x="86.6395%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.12%)</title><rect x="86.3895%" y="469" width="0.1197%" height="15" fill="rgb(214,17,3)"/><text x="86.6395%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.12%)</title><rect x="86.3895%" y="453" width="0.1197%" height="15" fill="rgb(212,111,17)"/><text x="86.6395%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.12%)</title><rect x="86.3895%" y="437" width="0.1197%" height="15" fill="rgb(221,157,24)"/><text x="86.6395%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.12%)</title><rect x="86.3895%" y="421" width="0.1197%" height="15" fill="rgb(252,16,13)"/><text x="86.6395%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.12%)</title><rect x="86.3895%" y="405" width="0.1197%" height="15" fill="rgb(221,62,2)"/><text x="86.6395%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (4 samples, 0.12%)</title><rect x="86.3895%" y="389" width="0.1197%" height="15" fill="rgb(247,87,22)"/><text x="86.6395%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.12%)</title><rect x="86.3895%" y="373" width="0.1197%" height="15" fill="rgb(215,73,9)"/><text x="86.6395%" y="383.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.12%)</title><rect x="86.3895%" y="357" width="0.1197%" height="15" fill="rgb(207,175,33)"/><text x="86.6395%" y="367.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.12%)</title><rect x="86.3895%" y="341" width="0.1197%" height="15" fill="rgb(243,129,54)"/><text x="86.6395%" y="351.50"></text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (21 samples, 0.63%)</title><rect x="85.9109%" y="629" width="0.6282%" height="15" fill="rgb(227,119,45)"/><text x="86.1609%" y="639.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.15%)</title><rect x="86.3895%" y="613" width="0.1496%" height="15" fill="rgb(205,109,36)"/><text x="86.6395%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.15%)</title><rect x="86.3895%" y="597" width="0.1496%" height="15" fill="rgb(205,6,39)"/><text x="86.6395%" y="607.50"></text></g><g><title>core::fmt::write (5 samples, 0.15%)</title><rect x="86.3895%" y="581" width="0.1496%" height="15" fill="rgb(221,32,16)"/><text x="86.6395%" y="591.50"></text></g><g><title>std::rt::lang_start_internal (28 samples, 0.84%)</title><rect x="85.7314%" y="757" width="0.8376%" height="15" fill="rgb(228,144,50)"/><text x="85.9814%" y="767.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.84%)</title><rect x="85.7314%" y="741" width="0.8376%" height="15" fill="rgb(229,201,53)"/><text x="85.9814%" y="751.50"></text></g><g><title>std::panicking::try (28 samples, 0.84%)</title><rect x="85.7314%" y="725" width="0.8376%" height="15" fill="rgb(249,153,27)"/><text x="85.9814%" y="735.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.84%)</title><rect x="85.7314%" y="709" width="0.8376%" height="15" fill="rgb(227,106,25)"/><text x="85.9814%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (28 samples, 0.84%)</title><rect x="85.7314%" y="693" width="0.8376%" height="15" fill="rgb(230,65,29)"/><text x="85.9814%" y="703.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (28 samples, 0.84%)</title><rect x="85.7314%" y="677" width="0.8376%" height="15" fill="rgb(221,57,46)"/><text x="85.9814%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 0.84%)</title><rect x="85.7314%" y="661" width="0.8376%" height="15" fill="rgb(229,161,17)"/><text x="85.9814%" y="671.50"></text></g><g><title>lobsters_microbenchmarks::main (28 samples, 0.84%)</title><rect x="85.7314%" y="645" width="0.8376%" height="15" fill="rgb(222,213,11)"/><text x="85.9814%" y="655.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.12%)</title><rect x="86.5690%" y="757" width="0.1197%" height="15" fill="rgb(235,35,13)"/><text x="86.8190%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.12%)</title><rect x="86.5690%" y="741" width="0.1197%" height="15" fill="rgb(233,158,34)"/><text x="86.8190%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.12%)</title><rect x="86.5690%" y="725" width="0.1197%" height="15" fill="rgb(215,151,48)"/><text x="86.8190%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.12%)</title><rect x="86.5690%" y="709" width="0.1197%" height="15" fill="rgb(229,84,14)"/><text x="86.8190%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.12%)</title><rect x="86.5690%" y="693" width="0.1197%" height="15" fill="rgb(229,68,14)"/><text x="86.8190%" y="703.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (4 samples, 0.12%)</title><rect x="86.5690%" y="677" width="0.1197%" height="15" fill="rgb(243,106,26)"/><text x="86.8190%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.12%)</title><rect x="86.5690%" y="661" width="0.1197%" height="15" fill="rgb(206,45,38)"/><text x="86.8190%" y="671.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.12%)</title><rect x="86.5690%" y="645" width="0.1197%" height="15" fill="rgb(226,6,15)"/><text x="86.8190%" y="655.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (4 samples, 0.12%)</title><rect x="86.5690%" y="629" width="0.1197%" height="15" fill="rgb(232,22,54)"/><text x="86.8190%" y="639.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (4 samples, 0.12%)</title><rect x="86.5690%" y="613" width="0.1197%" height="15" fill="rgb(229,222,32)"/><text x="86.8190%" y="623.50"></text></g><g><title>[unknown] (2,570 samples, 76.88%)</title><rect x="9.9611%" y="773" width="76.8771%" height="15" fill="rgb(228,62,29)"/><text x="10.2111%" y="783.50">[unknown]</text></g><g><title>core::ptr::drop_in_place (9 samples, 0.27%)</title><rect x="87.0476%" y="613" width="0.2692%" height="15" fill="rgb(251,103,34)"/><text x="87.2976%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.24%)</title><rect x="87.0775%" y="597" width="0.2393%" height="15" fill="rgb(233,12,30)"/><text x="87.3275%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.21%)</title><rect x="87.1074%" y="581" width="0.2094%" height="15" fill="rgb(238,52,0)"/><text x="87.3574%" y="591.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (5 samples, 0.15%)</title><rect x="87.5262%" y="581" width="0.1496%" height="15" fill="rgb(223,98,5)"/><text x="87.7762%" y="591.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (16 samples, 0.48%)</title><rect x="87.3168%" y="613" width="0.4786%" height="15" fill="rgb(228,75,37)"/><text x="87.5668%" y="623.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (14 samples, 0.42%)</title><rect x="87.3766%" y="597" width="0.4188%" height="15" fill="rgb(205,115,49)"/><text x="87.6266%" y="607.50"></text></g><g><title>decor_mem::stats::get_qtype (10 samples, 0.30%)</title><rect x="87.7954%" y="613" width="0.2991%" height="15" fill="rgb(250,154,43)"/><text x="88.0454%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.27%)</title><rect x="87.8253%" y="597" width="0.2692%" height="15" fill="rgb(226,43,29)"/><text x="88.0753%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.24%)</title><rect x="87.8552%" y="581" width="0.2393%" height="15" fill="rgb(249,228,39)"/><text x="88.1052%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.24%)</title><rect x="87.8552%" y="565" width="0.2393%" height="15" fill="rgb(216,79,43)"/><text x="88.1052%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.21%)</title><rect x="87.8851%" y="549" width="0.2094%" height="15" fill="rgb(228,95,12)"/><text x="88.1351%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.15%)</title><rect x="87.9450%" y="533" width="0.1496%" height="15" fill="rgb(249,221,15)"/><text x="88.1950%" y="543.50"></text></g><g><title>log::__private_api_log (5 samples, 0.15%)</title><rect x="88.0945%" y="613" width="0.1496%" height="15" fill="rgb(233,34,13)"/><text x="88.3445%" y="623.50"></text></g><g><title>&lt;env_logger::Logger as log::Log&gt;::log (5 samples, 0.15%)</title><rect x="88.0945%" y="597" width="0.1496%" height="15" fill="rgb(214,103,39)"/><text x="88.3445%" y="607.50"></text></g><g><title>&lt;env_logger::Logger as log::Log&gt;::log::{{closure}} (5 samples, 0.15%)</title><rect x="88.0945%" y="581" width="0.1496%" height="15" fill="rgb(251,126,39)"/><text x="88.3445%" y="591.50"></text></g><g><title>env_logger::fmt::writer::termcolor::imp::BufferWriter::print (4 samples, 0.12%)</title><rect x="88.1244%" y="565" width="0.1197%" height="15" fill="rgb(214,216,36)"/><text x="88.3744%" y="575.50"></text></g><g><title>std::io::stdio::_eprint (4 samples, 0.12%)</title><rect x="88.1244%" y="549" width="0.1197%" height="15" fill="rgb(220,221,8)"/><text x="88.3744%" y="559.50"></text></g><g><title>std::io::stdio::print_to (4 samples, 0.12%)</title><rect x="88.1244%" y="533" width="0.1197%" height="15" fill="rgb(240,216,3)"/><text x="88.3744%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (4 samples, 0.12%)</title><rect x="88.1244%" y="517" width="0.1197%" height="15" fill="rgb(232,218,17)"/><text x="88.3744%" y="527.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (4 samples, 0.12%)</title><rect x="88.1244%" y="501" width="0.1197%" height="15" fill="rgb(229,163,45)"/><text x="88.3744%" y="511.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (4 samples, 0.12%)</title><rect x="88.1244%" y="485" width="0.1197%" height="15" fill="rgb(231,110,42)"/><text x="88.3744%" y="495.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (4 samples, 0.12%)</title><rect x="88.1244%" y="469" width="0.1197%" height="15" fill="rgb(208,170,48)"/><text x="88.3744%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (4 samples, 0.12%)</title><rect x="88.1244%" y="453" width="0.1197%" height="15" fill="rgb(239,116,25)"/><text x="88.3744%" y="463.50"></text></g><g><title>core::fmt::write (4 samples, 0.12%)</title><rect x="88.1244%" y="437" width="0.1197%" height="15" fill="rgb(219,200,50)"/><text x="88.3744%" y="447.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.12%)</title><rect x="88.1244%" y="421" width="0.1197%" height="15" fill="rgb(245,200,0)"/><text x="88.3744%" y="431.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (4 samples, 0.12%)</title><rect x="88.1244%" y="405" width="0.1197%" height="15" fill="rgb(245,119,33)"/><text x="88.3744%" y="415.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (4 samples, 0.12%)</title><rect x="88.1244%" y="389" width="0.1197%" height="15" fill="rgb(231,125,12)"/><text x="88.3744%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.12%)</title><rect x="88.1244%" y="373" width="0.1197%" height="15" fill="rgb(216,96,41)"/><text x="88.3744%" y="383.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (4 samples, 0.12%)</title><rect x="88.1244%" y="357" width="0.1197%" height="15" fill="rgb(248,43,45)"/><text x="88.3744%" y="367.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.12%)</title><rect x="88.1244%" y="341" width="0.1197%" height="15" fill="rgb(217,222,7)"/><text x="88.3744%" y="351.50"></text></g><g><title>__libc_write (4 samples, 0.12%)</title><rect x="88.1244%" y="325" width="0.1197%" height="15" fill="rgb(233,28,6)"/><text x="88.3744%" y="335.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.12%)</title><rect x="88.1244%" y="309" width="0.1197%" height="15" fill="rgb(231,218,15)"/><text x="88.3744%" y="319.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="88.1244%" y="293" width="0.1197%" height="15" fill="rgb(226,171,48)"/><text x="88.3744%" y="303.50"></text></g><g><title>ksys_write (4 samples, 0.12%)</title><rect x="88.1244%" y="277" width="0.1197%" height="15" fill="rgb(235,201,9)"/><text x="88.3744%" y="287.50"></text></g><g><title>vfs_write (4 samples, 0.12%)</title><rect x="88.1244%" y="261" width="0.1197%" height="15" fill="rgb(217,80,15)"/><text x="88.3744%" y="271.50"></text></g><g><title>tty_write (4 samples, 0.12%)</title><rect x="88.1244%" y="245" width="0.1197%" height="15" fill="rgb(219,152,8)"/><text x="88.3744%" y="255.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (44 samples, 1.32%)</title><rect x="86.9578%" y="629" width="1.3162%" height="15" fill="rgb(243,107,38)"/><text x="87.2078%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.54%)</title><rect x="88.2740%" y="597" width="0.5384%" height="15" fill="rgb(231,17,5)"/><text x="88.5240%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.51%)</title><rect x="88.3039%" y="581" width="0.5085%" height="15" fill="rgb(209,25,54)"/><text x="88.5539%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 0.48%)</title><rect x="88.3338%" y="565" width="0.4786%" height="15" fill="rgb(219,0,2)"/><text x="88.5838%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.42%)</title><rect x="88.3937%" y="549" width="0.4188%" height="15" fill="rgb(246,9,5)"/><text x="88.6437%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.24%)</title><rect x="88.5731%" y="533" width="0.2393%" height="15" fill="rgb(226,159,4)"/><text x="88.8231%" y="543.50"></text></g><g><title>ext4_buffered_write_iter (4 samples, 0.12%)</title><rect x="88.9022%" y="437" width="0.1197%" height="15" fill="rgb(219,175,34)"/><text x="89.1522%" y="447.50"></text></g><g><title>generic_perform_write (4 samples, 0.12%)</title><rect x="88.9022%" y="421" width="0.1197%" height="15" fill="rgb(236,10,46)"/><text x="89.1522%" y="431.50"></text></g><g><title>do_syscall_64 (6 samples, 0.18%)</title><rect x="88.9022%" y="501" width="0.1795%" height="15" fill="rgb(240,211,16)"/><text x="89.1522%" y="511.50"></text></g><g><title>ksys_write (6 samples, 0.18%)</title><rect x="88.9022%" y="485" width="0.1795%" height="15" fill="rgb(205,3,43)"/><text x="89.1522%" y="495.50"></text></g><g><title>vfs_write (6 samples, 0.18%)</title><rect x="88.9022%" y="469" width="0.1795%" height="15" fill="rgb(245,7,22)"/><text x="89.1522%" y="479.50"></text></g><g><title>new_sync_write (6 samples, 0.18%)</title><rect x="88.9022%" y="453" width="0.1795%" height="15" fill="rgb(239,132,32)"/><text x="89.1522%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (29 samples, 0.87%)</title><rect x="88.2740%" y="629" width="0.8675%" height="15" fill="rgb(228,202,34)"/><text x="88.5240%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (29 samples, 0.87%)</title><rect x="88.2740%" y="613" width="0.8675%" height="15" fill="rgb(254,200,22)"/><text x="88.5240%" y="623.50"></text></g><g><title>decor_mem::stats::print_stats (8 samples, 0.24%)</title><rect x="88.9022%" y="597" width="0.2393%" height="15" fill="rgb(219,10,39)"/><text x="89.1522%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (8 samples, 0.24%)</title><rect x="88.9022%" y="581" width="0.2393%" height="15" fill="rgb(226,210,39)"/><text x="89.1522%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (8 samples, 0.24%)</title><rect x="88.9022%" y="565" width="0.2393%" height="15" fill="rgb(208,219,16)"/><text x="89.1522%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (8 samples, 0.24%)</title><rect x="88.9022%" y="549" width="0.2393%" height="15" fill="rgb(216,158,51)"/><text x="89.1522%" y="559.50"></text></g><g><title>__libc_write (8 samples, 0.24%)</title><rect x="88.9022%" y="533" width="0.2393%" height="15" fill="rgb(233,14,44)"/><text x="89.1522%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.24%)</title><rect x="88.9022%" y="517" width="0.2393%" height="15" fill="rgb(237,97,39)"/><text x="89.1522%" y="527.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.12%)</title><rect x="89.4705%" y="341" width="0.1197%" height="15" fill="rgb(218,198,43)"/><text x="89.7205%" y="351.50"></text></g><g><title>__schedule (13 samples, 0.39%)</title><rect x="89.3808%" y="357" width="0.3889%" height="15" fill="rgb(231,104,20)"/><text x="89.6308%" y="367.50"></text></g><g><title>sk_wait_data (16 samples, 0.48%)</title><rect x="89.3210%" y="421" width="0.4786%" height="15" fill="rgb(254,36,13)"/><text x="89.5710%" y="431.50"></text></g><g><title>wait_woken (16 samples, 0.48%)</title><rect x="89.3210%" y="405" width="0.4786%" height="15" fill="rgb(248,14,50)"/><text x="89.5710%" y="415.50"></text></g><g><title>schedule_timeout (14 samples, 0.42%)</title><rect x="89.3808%" y="389" width="0.4188%" height="15" fill="rgb(217,107,29)"/><text x="89.6308%" y="399.50"></text></g><g><title>schedule (14 samples, 0.42%)</title><rect x="89.3808%" y="373" width="0.4188%" height="15" fill="rgb(251,169,33)"/><text x="89.6308%" y="383.50"></text></g><g><title>__x64_sys_recvfrom (22 samples, 0.66%)</title><rect x="89.1714%" y="485" width="0.6581%" height="15" fill="rgb(217,108,32)"/><text x="89.4214%" y="495.50"></text></g><g><title>__sys_recvfrom (22 samples, 0.66%)</title><rect x="89.1714%" y="469" width="0.6581%" height="15" fill="rgb(219,66,42)"/><text x="89.4214%" y="479.50"></text></g><g><title>inet_recvmsg (22 samples, 0.66%)</title><rect x="89.1714%" y="453" width="0.6581%" height="15" fill="rgb(206,180,7)"/><text x="89.4214%" y="463.50"></text></g><g><title>tcp_recvmsg (22 samples, 0.66%)</title><rect x="89.1714%" y="437" width="0.6581%" height="15" fill="rgb(208,226,31)"/><text x="89.4214%" y="447.50"></text></g><g><title>do_syscall_64 (24 samples, 0.72%)</title><rect x="89.1714%" y="501" width="0.7179%" height="15" fill="rgb(218,26,49)"/><text x="89.4214%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 0.81%)</title><rect x="89.1714%" y="517" width="0.8077%" height="15" fill="rgb(233,197,48)"/><text x="89.4214%" y="527.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (29 samples, 0.87%)</title><rect x="89.1415%" y="629" width="0.8675%" height="15" fill="rgb(252,181,51)"/><text x="89.3915%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.84%)</title><rect x="89.1714%" y="613" width="0.8376%" height="15" fill="rgb(253,90,19)"/><text x="89.4214%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.84%)</title><rect x="89.1714%" y="597" width="0.8376%" height="15" fill="rgb(215,171,30)"/><text x="89.4214%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.84%)</title><rect x="89.1714%" y="581" width="0.8376%" height="15" fill="rgb(214,222,9)"/><text x="89.4214%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 0.84%)</title><rect x="89.1714%" y="565" width="0.8376%" height="15" fill="rgb(223,3,22)"/><text x="89.4214%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 0.84%)</title><rect x="89.1714%" y="549" width="0.8376%" height="15" fill="rgb(225,196,46)"/><text x="89.4214%" y="559.50"></text></g><g><title>__libc_recv (28 samples, 0.84%)</title><rect x="89.1714%" y="533" width="0.8376%" height="15" fill="rgb(209,110,37)"/><text x="89.4214%" y="543.50"></text></g><g><title>psi_task_change (5 samples, 0.15%)</title><rect x="90.5773%" y="53" width="0.1496%" height="15" fill="rgb(249,89,12)"/><text x="90.8273%" y="63.50"></text></g><g><title>psi_group_change (5 samples, 0.15%)</title><rect x="90.5773%" y="37" width="0.1496%" height="15" fill="rgb(226,27,33)"/><text x="90.8273%" y="47.50"></text></g><g><title>enqueue_task (6 samples, 0.18%)</title><rect x="90.5773%" y="69" width="0.1795%" height="15" fill="rgb(213,82,22)"/><text x="90.8273%" y="79.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.18%)</title><rect x="90.7568%" y="69" width="0.1795%" height="15" fill="rgb(248,140,0)"/><text x="91.0068%" y="79.50"></text></g><g><title>enqueue_entity (5 samples, 0.15%)</title><rect x="90.7867%" y="53" width="0.1496%" height="15" fill="rgb(228,106,3)"/><text x="91.0367%" y="63.50"></text></g><g><title>__wake_up_common (16 samples, 0.48%)</title><rect x="90.5474%" y="101" width="0.4786%" height="15" fill="rgb(209,23,37)"/><text x="90.7974%" y="111.50"></text></g><g><title>try_to_wake_up (16 samples, 0.48%)</title><rect x="90.5474%" y="85" width="0.4786%" height="15" fill="rgb(241,93,50)"/><text x="90.7974%" y="95.50"></text></g><g><title>sock_def_readable (19 samples, 0.57%)</title><rect x="90.5474%" y="133" width="0.5684%" height="15" fill="rgb(253,46,43)"/><text x="90.7974%" y="143.50"></text></g><g><title>__wake_up_common_lock (19 samples, 0.57%)</title><rect x="90.5474%" y="117" width="0.5684%" height="15" fill="rgb(226,206,43)"/><text x="90.7974%" y="127.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 0.84%)</title><rect x="90.3679%" y="261" width="0.8376%" height="15" fill="rgb(217,54,7)"/><text x="90.6179%" y="271.50"></text></g><g><title>ip_rcv (25 samples, 0.75%)</title><rect x="90.4577%" y="245" width="0.7478%" height="15" fill="rgb(223,5,52)"/><text x="90.7077%" y="255.50"></text></g><g><title>ip_local_deliver (24 samples, 0.72%)</title><rect x="90.4876%" y="229" width="0.7179%" height="15" fill="rgb(206,52,46)"/><text x="90.7376%" y="239.50"></text></g><g><title>ip_local_deliver_finish (24 samples, 0.72%)</title><rect x="90.4876%" y="213" width="0.7179%" height="15" fill="rgb(253,136,11)"/><text x="90.7376%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (24 samples, 0.72%)</title><rect x="90.4876%" y="197" width="0.7179%" height="15" fill="rgb(208,106,33)"/><text x="90.7376%" y="207.50"></text></g><g><title>tcp_v4_rcv (23 samples, 0.69%)</title><rect x="90.5175%" y="181" width="0.6880%" height="15" fill="rgb(206,54,4)"/><text x="90.7675%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (22 samples, 0.66%)</title><rect x="90.5474%" y="165" width="0.6581%" height="15" fill="rgb(213,3,15)"/><text x="90.7974%" y="175.50"></text></g><g><title>tcp_rcv_established (22 samples, 0.66%)</title><rect x="90.5474%" y="149" width="0.6581%" height="15" fill="rgb(252,211,39)"/><text x="90.7974%" y="159.50"></text></g><g><title>ip_finish_output2 (36 samples, 1.08%)</title><rect x="90.1585%" y="373" width="1.0769%" height="15" fill="rgb(223,6,36)"/><text x="90.4085%" y="383.50"></text></g><g><title>__local_bh_enable_ip (33 samples, 0.99%)</title><rect x="90.2483%" y="357" width="0.9871%" height="15" fill="rgb(252,169,45)"/><text x="90.4983%" y="367.50"></text></g><g><title>do_softirq (33 samples, 0.99%)</title><rect x="90.2483%" y="341" width="0.9871%" height="15" fill="rgb(212,48,26)"/><text x="90.4983%" y="351.50"></text></g><g><title>do_softirq_own_stack (33 samples, 0.99%)</title><rect x="90.2483%" y="325" width="0.9871%" height="15" fill="rgb(251,102,48)"/><text x="90.4983%" y="335.50"></text></g><g><title>__do_softirq (33 samples, 0.99%)</title><rect x="90.2483%" y="309" width="0.9871%" height="15" fill="rgb(243,208,16)"/><text x="90.4983%" y="319.50"></text></g><g><title>net_rx_action (31 samples, 0.93%)</title><rect x="90.3081%" y="293" width="0.9273%" height="15" fill="rgb(219,96,24)"/><text x="90.5581%" y="303.50"></text></g><g><title>process_backlog (30 samples, 0.90%)</title><rect x="90.3380%" y="277" width="0.8974%" height="15" fill="rgb(219,33,29)"/><text x="90.5880%" y="287.50"></text></g><g><title>__tcp_transmit_skb (39 samples, 1.17%)</title><rect x="90.1286%" y="421" width="1.1666%" height="15" fill="rgb(223,176,5)"/><text x="90.3786%" y="431.50"></text></g><g><title>__ip_queue_xmit (39 samples, 1.17%)</title><rect x="90.1286%" y="405" width="1.1666%" height="15" fill="rgb(228,140,14)"/><text x="90.3786%" y="415.50"></text></g><g><title>ip_output (38 samples, 1.14%)</title><rect x="90.1585%" y="389" width="1.1367%" height="15" fill="rgb(217,179,31)"/><text x="90.4085%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (42 samples, 1.26%)</title><rect x="90.0688%" y="453" width="1.2564%" height="15" fill="rgb(230,9,30)"/><text x="90.3188%" y="463.50"></text></g><g><title>tcp_write_xmit (42 samples, 1.26%)</title><rect x="90.0688%" y="437" width="1.2564%" height="15" fill="rgb(230,136,20)"/><text x="90.3188%" y="447.50"></text></g><g><title>do_syscall_64 (48 samples, 1.44%)</title><rect x="90.0090%" y="549" width="1.4358%" height="15" fill="rgb(215,210,22)"/><text x="90.2590%" y="559.50"></text></g><g><title>__x64_sys_sendto (48 samples, 1.44%)</title><rect x="90.0090%" y="533" width="1.4358%" height="15" fill="rgb(218,43,5)"/><text x="90.2590%" y="543.50"></text></g><g><title>__sys_sendto (48 samples, 1.44%)</title><rect x="90.0090%" y="517" width="1.4358%" height="15" fill="rgb(216,11,5)"/><text x="90.2590%" y="527.50"></text></g><g><title>sock_sendmsg (47 samples, 1.41%)</title><rect x="90.0389%" y="501" width="1.4059%" height="15" fill="rgb(209,82,29)"/><text x="90.2889%" y="511.50"></text></g><g><title>tcp_sendmsg (47 samples, 1.41%)</title><rect x="90.0389%" y="485" width="1.4059%" height="15" fill="rgb(244,115,12)"/><text x="90.2889%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (46 samples, 1.38%)</title><rect x="90.0688%" y="469" width="1.3760%" height="15" fill="rgb(222,82,18)"/><text x="90.3188%" y="479.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (154 samples, 4.61%)</title><rect x="86.8980%" y="645" width="4.6066%" height="15" fill="rgb(249,227,8)"/><text x="87.1480%" y="655.50">msql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (50 samples, 1.50%)</title><rect x="90.0090%" y="629" width="1.4957%" height="15" fill="rgb(253,141,45)"/><text x="90.2590%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 1.50%)</title><rect x="90.0090%" y="613" width="1.4957%" height="15" fill="rgb(234,184,4)"/><text x="90.2590%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (50 samples, 1.50%)</title><rect x="90.0090%" y="597" width="1.4957%" height="15" fill="rgb(218,194,23)"/><text x="90.2590%" y="607.50"></text></g><g><title>__libc_send (50 samples, 1.50%)</title><rect x="90.0090%" y="581" width="1.4957%" height="15" fill="rgb(235,66,41)"/><text x="90.2590%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (50 samples, 1.50%)</title><rect x="90.0090%" y="565" width="1.4957%" height="15" fill="rgb(245,217,1)"/><text x="90.2590%" y="575.50"></text></g><g><title>__GI___clone (158 samples, 4.73%)</title><rect x="86.8382%" y="773" width="4.7263%" height="15" fill="rgb(229,91,1)"/><text x="87.0882%" y="783.50">__GI__..</text></g><g><title>start_thread (158 samples, 4.73%)</title><rect x="86.8382%" y="757" width="4.7263%" height="15" fill="rgb(207,101,30)"/><text x="87.0882%" y="767.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (156 samples, 4.67%)</title><rect x="86.8980%" y="741" width="4.6665%" height="15" fill="rgb(223,82,49)"/><text x="87.1480%" y="751.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (156 samples, 4.67%)</title><rect x="86.8980%" y="725" width="4.6665%" height="15" fill="rgb(218,167,17)"/><text x="87.1480%" y="735.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (156 samples, 4.67%)</title><rect x="86.8980%" y="709" width="4.6665%" height="15" fill="rgb(208,103,14)"/><text x="87.1480%" y="719.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (156 samples, 4.67%)</title><rect x="86.8980%" y="693" width="4.6665%" height="15" fill="rgb(238,20,8)"/><text x="87.1480%" y="703.50">core:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (156 samples, 4.67%)</title><rect x="86.8980%" y="677" width="4.6665%" height="15" fill="rgb(218,80,54)"/><text x="87.1480%" y="687.50">std::..</text></g><g><title>decor_mem::Shim::run_on_tcp (156 samples, 4.67%)</title><rect x="86.8980%" y="661" width="4.6665%" height="15" fill="rgb(240,144,17)"/><text x="87.1480%" y="671.50">decor..</text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 6.91%)</title><rect x="91.8935%" y="293" width="6.9100%" height="15" fill="rgb(245,27,50)"/><text x="92.1435%" y="303.50">__intel_p..</text></g><g><title>native_write_msr (231 samples, 6.91%)</title><rect x="91.8935%" y="277" width="6.9100%" height="15" fill="rgb(251,51,7)"/><text x="92.1435%" y="287.50">native_wr..</text></g><g><title>do_syscall_64 (235 samples, 7.03%)</title><rect x="91.8636%" y="469" width="7.0296%" height="15" fill="rgb(245,217,29)"/><text x="92.1136%" y="479.50">do_syscal..</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 7.03%)</title><rect x="91.8636%" y="453" width="7.0296%" height="15" fill="rgb(221,176,29)"/><text x="92.1136%" y="463.50">__x64_sys..</text></g><g><title>sched_setaffinity (235 samples, 7.03%)</title><rect x="91.8636%" y="437" width="7.0296%" height="15" fill="rgb(212,180,24)"/><text x="92.1136%" y="447.50">sched_set..</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 7.03%)</title><rect x="91.8636%" y="421" width="7.0296%" height="15" fill="rgb(254,24,2)"/><text x="92.1136%" y="431.50">__set_cpu..</text></g><g><title>stop_one_cpu (235 samples, 7.03%)</title><rect x="91.8636%" y="405" width="7.0296%" height="15" fill="rgb(230,100,2)"/><text x="92.1136%" y="415.50">stop_one_..</text></g><g><title>cpu_stop_queue_work (235 samples, 7.03%)</title><rect x="91.8636%" y="389" width="7.0296%" height="15" fill="rgb(219,142,25)"/><text x="92.1136%" y="399.50">cpu_stop_..</text></g><g><title>preempt_schedule_thunk (235 samples, 7.03%)</title><rect x="91.8636%" y="373" width="7.0296%" height="15" fill="rgb(240,73,43)"/><text x="92.1136%" y="383.50">preempt_s..</text></g><g><title>preempt_schedule_common (235 samples, 7.03%)</title><rect x="91.8636%" y="357" width="7.0296%" height="15" fill="rgb(214,114,15)"/><text x="92.1136%" y="367.50">preempt_s..</text></g><g><title>__schedule (235 samples, 7.03%)</title><rect x="91.8636%" y="341" width="7.0296%" height="15" fill="rgb(207,130,4)"/><text x="92.1136%" y="351.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 7.03%)</title><rect x="91.8636%" y="325" width="7.0296%" height="15" fill="rgb(221,25,40)"/><text x="92.1136%" y="335.50">finish_ta..</text></g><g><title>__perf_event_task_sched_in (234 samples, 7.00%)</title><rect x="91.8935%" y="309" width="6.9997%" height="15" fill="rgb(241,184,7)"/><text x="92.1435%" y="319.50">__perf_ev..</text></g><g><title>hwloc::Topology::new (240 samples, 7.18%)</title><rect x="91.7739%" y="597" width="7.1792%" height="15" fill="rgb(235,159,4)"/><text x="92.0239%" y="607.50">hwloc::Top..</text></g><g><title>hwloc_topology_load (240 samples, 7.18%)</title><rect x="91.7739%" y="581" width="7.1792%" height="15" fill="rgb(214,87,48)"/><text x="92.0239%" y="591.50">hwloc_topo..</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 7.18%)</title><rect x="91.7739%" y="565" width="7.1792%" height="15" fill="rgb(246,198,24)"/><text x="92.0239%" y="575.50">[libhwloc...</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 7.18%)</title><rect x="91.7739%" y="549" width="7.1792%" height="15" fill="rgb(209,66,40)"/><text x="92.0239%" y="559.50">[libhwloc...</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 7.18%)</title><rect x="91.7739%" y="533" width="7.1792%" height="15" fill="rgb(233,147,39)"/><text x="92.0239%" y="543.50">[libhwloc...</text></g><g><title>hwloc_linux_set_tid_cpubind (239 samples, 7.15%)</title><rect x="91.8038%" y="517" width="7.1493%" height="15" fill="rgb(231,145,52)"/><text x="92.0538%" y="527.50">hwloc_linu..</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 7.09%)</title><rect x="91.8636%" y="501" width="7.0894%" height="15" fill="rgb(206,20,26)"/><text x="92.1136%" y="511.50">__GI___sch..</text></g><g><title>entry_SYSCALL_64 (237 samples, 7.09%)</title><rect x="91.8636%" y="485" width="7.0894%" height="15" fill="rgb(238,220,4)"/><text x="92.1136%" y="495.50">entry_SYSC..</text></g><g><title>__libc_start_main (247 samples, 7.39%)</title><rect x="91.6841%" y="757" width="7.3886%" height="15" fill="rgb(252,195,42)"/><text x="91.9341%" y="767.50">__libc_sta..</text></g><g><title>main (247 samples, 7.39%)</title><rect x="91.6841%" y="741" width="7.3886%" height="15" fill="rgb(209,10,6)"/><text x="91.9341%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (247 samples, 7.39%)</title><rect x="91.6841%" y="725" width="7.3886%" height="15" fill="rgb(229,3,52)"/><text x="91.9341%" y="735.50">std::rt::l..</text></g><g><title>std::panic::catch_unwind (247 samples, 7.39%)</title><rect x="91.6841%" y="709" width="7.3886%" height="15" fill="rgb(253,49,37)"/><text x="91.9341%" y="719.50">std::panic..</text></g><g><title>std::panicking::try (247 samples, 7.39%)</title><rect x="91.6841%" y="693" width="7.3886%" height="15" fill="rgb(240,103,49)"/><text x="91.9341%" y="703.50">std::panic..</text></g><g><title>std::panicking::try::do_call (247 samples, 7.39%)</title><rect x="91.6841%" y="677" width="7.3886%" height="15" fill="rgb(250,182,30)"/><text x="91.9341%" y="687.50">std::panic..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (247 samples, 7.39%)</title><rect x="91.6841%" y="661" width="7.3886%" height="15" fill="rgb(248,8,30)"/><text x="91.9341%" y="671.50">core::ops:..</text></g><g><title>std::rt::lang_start::_{{closure}} (247 samples, 7.39%)</title><rect x="91.6841%" y="645" width="7.3886%" height="15" fill="rgb(237,120,30)"/><text x="91.9341%" y="655.50">std::rt::l..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (247 samples, 7.39%)</title><rect x="91.6841%" y="629" width="7.3886%" height="15" fill="rgb(221,146,34)"/><text x="91.9341%" y="639.50">std::sys_c..</text></g><g><title>lobsters_microbenchmarks::main (247 samples, 7.39%)</title><rect x="91.6841%" y="613" width="7.3886%" height="15" fill="rgb(242,55,13)"/><text x="91.9341%" y="623.50">lobsters_m..</text></g><g><title>_start (248 samples, 7.42%)</title><rect x="91.6841%" y="773" width="7.4185%" height="15" fill="rgb(242,112,31)"/><text x="91.9341%" y="783.50">_start</text></g><g><title>entry_SYSCALL_64 (7 samples, 0.21%)</title><rect x="99.3718%" y="773" width="0.2094%" height="15" fill="rgb(249,192,27)"/><text x="99.6218%" y="783.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="99.4616%" y="757" width="0.1197%" height="15" fill="rgb(208,204,44)"/><text x="99.7116%" y="767.50"></text></g><g><title>page_fault (6 samples, 0.18%)</title><rect x="99.6111%" y="773" width="0.1795%" height="15" fill="rgb(208,93,54)"/><text x="99.8611%" y="783.50"></text></g><g><title>lobsters-microb (3,337 samples, 99.82%)</title><rect x="0.0000%" y="789" width="99.8205%" height="15" fill="rgb(242,1,31)"/><text x="0.2500%" y="799.50">lobsters-microb</text></g><g><title>all (3,343 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(241,83,25)"/><text x="0.2500%" y="815.50"></text></g><g><title>perf (6 samples, 0.18%)</title><rect x="99.8205%" y="789" width="0.1795%" height="15" fill="rgb(205,169,50)"/><text x="100.0705%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.18%)</title><rect x="99.8205%" y="773" width="0.1795%" height="15" fill="rgb(239,186,37)"/><text x="100.0705%" y="783.50"></text></g><g><title>do_syscall_64 (6 samples, 0.18%)</title><rect x="99.8205%" y="757" width="0.1795%" height="15" fill="rgb(205,221,10)"/><text x="100.0705%" y="767.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.18%)</title><rect x="99.8205%" y="741" width="0.1795%" height="15" fill="rgb(218,196,15)"/><text x="100.0705%" y="751.50"></text></g><g><title>do_execve (6 samples, 0.18%)</title><rect x="99.8205%" y="725" width="0.1795%" height="15" fill="rgb(218,196,35)"/><text x="100.0705%" y="735.50"></text></g><g><title>__do_execve_file (6 samples, 0.18%)</title><rect x="99.8205%" y="709" width="0.1795%" height="15" fill="rgb(233,63,24)"/><text x="100.0705%" y="719.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.18%)</title><rect x="99.8205%" y="693" width="0.1795%" height="15" fill="rgb(225,8,4)"/><text x="100.0705%" y="703.50"></text></g><g><title>load_elf_binary (6 samples, 0.18%)</title><rect x="99.8205%" y="677" width="0.1795%" height="15" fill="rgb(234,105,35)"/><text x="100.0705%" y="687.50"></text></g><g><title>setup_new_exec (6 samples, 0.18%)</title><rect x="99.8205%" y="661" width="0.1795%" height="15" fill="rgb(236,21,32)"/><text x="100.0705%" y="671.50"></text></g><g><title>perf_event_exec (6 samples, 0.18%)</title><rect x="99.8205%" y="645" width="0.1795%" height="15" fill="rgb(228,109,6)"/><text x="100.0705%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.15%)</title><rect x="99.8504%" y="629" width="0.1496%" height="15" fill="rgb(229,215,31)"/><text x="100.1004%" y="639.50"></text></g><g><title>native_write_msr (5 samples, 0.15%)</title><rect x="99.8504%" y="613" width="0.1496%" height="15" fill="rgb(221,52,54)"/><text x="100.1004%" y="623.50"></text></g></svg></svg>