<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="0.0000%" y="869" width="0.1155%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.12%)</title><rect x="0.1155%" y="869" width="0.1155%" height="15" fill="rgb(217,0,24)"/><text x="0.3655%" y="879.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="0.2309%" y="869" width="0.1155%" height="15" fill="rgb(221,193,54)"/><text x="0.4809%" y="879.50"></text></g><g><title>[[heap]] (1 samples, 0.12%)</title><rect x="0.3464%" y="869" width="0.1155%" height="15" fill="rgb(248,212,6)"/><text x="0.5964%" y="879.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.12%)</title><rect x="0.3464%" y="853" width="0.1155%" height="15" fill="rgb(208,68,35)"/><text x="0.5964%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="0.4619%" y="853" width="0.1155%" height="15" fill="rgb(232,128,0)"/><text x="0.7119%" y="863.50"></text></g><g><title>[[stack]] (2 samples, 0.23%)</title><rect x="0.4619%" y="869" width="0.2309%" height="15" fill="rgb(207,160,47)"/><text x="0.7119%" y="879.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.12%)</title><rect x="0.5774%" y="853" width="0.1155%" height="15" fill="rgb(228,23,34)"/><text x="0.8274%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.12%)</title><rect x="0.6928%" y="853" width="0.1155%" height="15" fill="rgb(218,30,26)"/><text x="0.9428%" y="863.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.12%)</title><rect x="0.8083%" y="853" width="0.1155%" height="15" fill="rgb(220,122,19)"/><text x="1.0583%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="0.9238%" y="853" width="0.1155%" height="15" fill="rgb(250,228,42)"/><text x="1.1738%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.12%)</title><rect x="1.0393%" y="853" width="0.1155%" height="15" fill="rgb(240,193,28)"/><text x="1.2893%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="1.1547%" y="853" width="0.1155%" height="15" fill="rgb(216,20,37)"/><text x="1.4047%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="1.2702%" y="853" width="0.1155%" height="15" fill="rgb(206,188,39)"/><text x="1.5202%" y="863.50"></text></g><g><title>__libc_recv (3 samples, 0.35%)</title><rect x="1.3857%" y="853" width="0.3464%" height="15" fill="rgb(217,207,13)"/><text x="1.6357%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.35%)</title><rect x="1.3857%" y="837" width="0.3464%" height="15" fill="rgb(231,73,38)"/><text x="1.6357%" y="847.50"></text></g><g><title>__libc_send (5 samples, 0.58%)</title><rect x="1.7321%" y="853" width="0.5774%" height="15" fill="rgb(225,20,46)"/><text x="1.9821%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.58%)</title><rect x="1.7321%" y="837" width="0.5774%" height="15" fill="rgb(210,31,41)"/><text x="1.9821%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.46%)</title><rect x="2.3095%" y="853" width="0.4619%" height="15" fill="rgb(221,200,47)"/><text x="2.5595%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="2.7714%" y="853" width="0.1155%" height="15" fill="rgb(226,26,5)"/><text x="3.0214%" y="863.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.12%)</title><rect x="2.8868%" y="853" width="0.1155%" height="15" fill="rgb(249,33,26)"/><text x="3.1368%" y="863.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.12%)</title><rect x="3.0023%" y="853" width="0.1155%" height="15" fill="rgb(235,183,28)"/><text x="3.2523%" y="863.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.12%)</title><rect x="3.1178%" y="853" width="0.1155%" height="15" fill="rgb(221,5,38)"/><text x="3.3678%" y="863.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.23%)</title><rect x="3.2333%" y="853" width="0.2309%" height="15" fill="rgb(247,18,42)"/><text x="3.4833%" y="863.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.12%)</title><rect x="3.4642%" y="853" width="0.1155%" height="15" fill="rgb(241,131,45)"/><text x="3.7142%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.23%)</title><rect x="3.5797%" y="853" width="0.2309%" height="15" fill="rgb(249,31,29)"/><text x="3.8297%" y="863.50"></text></g><g><title>[anon] (30 samples, 3.46%)</title><rect x="0.6928%" y="869" width="3.4642%" height="15" fill="rgb(225,111,53)"/><text x="0.9428%" y="879.50">[an..</text></g><g><title>mysql_common::row::Row::unwrap (3 samples, 0.35%)</title><rect x="3.8106%" y="853" width="0.3464%" height="15" fill="rgb(238,160,17)"/><text x="4.0606%" y="863.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.12%)</title><rect x="4.1570%" y="869" width="0.1155%" height="15" fill="rgb(214,148,48)"/><text x="4.4070%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="4.1570%" y="853" width="0.1155%" height="15" fill="rgb(232,36,49)"/><text x="4.4070%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="4.2725%" y="853" width="0.1155%" height="15" fill="rgb(209,103,24)"/><text x="4.5225%" y="863.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.12%)</title><rect x="4.3880%" y="853" width="0.1155%" height="15" fill="rgb(229,88,8)"/><text x="4.6380%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="4.5035%" y="853" width="0.1155%" height="15" fill="rgb(213,181,19)"/><text x="4.7535%" y="863.50"></text></g><g><title>[lobsters] (1 samples, 0.12%)</title><rect x="4.6189%" y="853" width="0.1155%" height="15" fill="rgb(254,191,54)"/><text x="4.8689%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="4.6189%" y="837" width="0.1155%" height="15" fill="rgb(241,83,37)"/><text x="4.8689%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="4.7344%" y="853" width="0.1155%" height="15" fill="rgb(233,36,39)"/><text x="4.9844%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="4.8499%" y="693" width="0.2309%" height="15" fill="rgb(226,3,54)"/><text x="5.0999%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.23%)</title><rect x="4.8499%" y="677" width="0.2309%" height="15" fill="rgb(245,192,40)"/><text x="5.0999%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.23%)</title><rect x="4.8499%" y="661" width="0.2309%" height="15" fill="rgb(238,167,29)"/><text x="5.0999%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="4.8499%" y="645" width="0.2309%" height="15" fill="rgb(232,182,51)"/><text x="5.0999%" y="655.50"></text></g><g><title>__libc_start_main (3 samples, 0.35%)</title><rect x="4.8499%" y="853" width="0.3464%" height="15" fill="rgb(231,60,39)"/><text x="5.0999%" y="863.50"></text></g><g><title>main (3 samples, 0.35%)</title><rect x="4.8499%" y="837" width="0.3464%" height="15" fill="rgb(208,69,12)"/><text x="5.0999%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.35%)</title><rect x="4.8499%" y="821" width="0.3464%" height="15" fill="rgb(235,93,37)"/><text x="5.0999%" y="831.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.35%)</title><rect x="4.8499%" y="805" width="0.3464%" height="15" fill="rgb(213,116,39)"/><text x="5.0999%" y="815.50"></text></g><g><title>std::panicking::try (3 samples, 0.35%)</title><rect x="4.8499%" y="789" width="0.3464%" height="15" fill="rgb(222,207,29)"/><text x="5.0999%" y="799.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.35%)</title><rect x="4.8499%" y="773" width="0.3464%" height="15" fill="rgb(206,96,30)"/><text x="5.0999%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.35%)</title><rect x="4.8499%" y="757" width="0.3464%" height="15" fill="rgb(218,138,4)"/><text x="5.0999%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.35%)</title><rect x="4.8499%" y="741" width="0.3464%" height="15" fill="rgb(250,191,14)"/><text x="5.0999%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.35%)</title><rect x="4.8499%" y="725" width="0.3464%" height="15" fill="rgb(239,60,40)"/><text x="5.0999%" y="735.50"></text></g><g><title>lobsters::main (3 samples, 0.35%)</title><rect x="4.8499%" y="709" width="0.3464%" height="15" fill="rgb(206,27,48)"/><text x="5.0999%" y="719.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.12%)</title><rect x="5.0808%" y="693" width="0.1155%" height="15" fill="rgb(225,35,8)"/><text x="5.3308%" y="703.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.12%)</title><rect x="5.0808%" y="677" width="0.1155%" height="15" fill="rgb(250,213,24)"/><text x="5.3308%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="5.0808%" y="661" width="0.1155%" height="15" fill="rgb(247,123,22)"/><text x="5.3308%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="5.0808%" y="645" width="0.1155%" height="15" fill="rgb(231,138,38)"/><text x="5.3308%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="5.0808%" y="629" width="0.1155%" height="15" fill="rgb(231,145,46)"/><text x="5.3308%" y="639.50"></text></g><g><title>__libc_read (1 samples, 0.12%)</title><rect x="5.0808%" y="613" width="0.1155%" height="15" fill="rgb(251,118,11)"/><text x="5.3308%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="5.0808%" y="597" width="0.1155%" height="15" fill="rgb(217,147,25)"/><text x="5.3308%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="5.1963%" y="853" width="0.2309%" height="15" fill="rgb(247,81,37)"/><text x="5.4463%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.12%)</title><rect x="5.4273%" y="853" width="0.1155%" height="15" fill="rgb(209,12,38)"/><text x="5.6773%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.12%)</title><rect x="5.5427%" y="853" width="0.1155%" height="15" fill="rgb(227,1,9)"/><text x="5.7927%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.46%)</title><rect x="5.6582%" y="853" width="0.4619%" height="15" fill="rgb(248,47,43)"/><text x="5.9082%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.46%)</title><rect x="5.6582%" y="837" width="0.4619%" height="15" fill="rgb(221,10,30)"/><text x="5.9082%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (4 samples, 0.46%)</title><rect x="5.6582%" y="821" width="0.4619%" height="15" fill="rgb(210,229,1)"/><text x="5.9082%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.46%)</title><rect x="5.6582%" y="805" width="0.4619%" height="15" fill="rgb(222,148,37)"/><text x="5.9082%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.46%)</title><rect x="5.6582%" y="789" width="0.4619%" height="15" fill="rgb(234,67,33)"/><text x="5.9082%" y="799.50"></text></g><g><title>decor::helpers::answer_rows (4 samples, 0.46%)</title><rect x="5.6582%" y="773" width="0.4619%" height="15" fill="rgb(247,98,35)"/><text x="5.9082%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="5.6582%" y="757" width="0.4619%" height="15" fill="rgb(247,138,52)"/><text x="5.9082%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.46%)</title><rect x="5.6582%" y="741" width="0.4619%" height="15" fill="rgb(213,79,30)"/><text x="5.9082%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.46%)</title><rect x="5.6582%" y="725" width="0.4619%" height="15" fill="rgb(246,177,23)"/><text x="5.9082%" y="735.50"></text></g><g><title>mysql_common::value::read_text_values (4 samples, 0.46%)</title><rect x="5.6582%" y="709" width="0.4619%" height="15" fill="rgb(230,62,27)"/><text x="5.9082%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="5.8891%" y="693" width="0.2309%" height="15" fill="rgb(216,154,8)"/><text x="6.1391%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.12%)</title><rect x="6.0046%" y="677" width="0.1155%" height="15" fill="rgb(244,35,45)"/><text x="6.2546%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.12%)</title><rect x="6.1201%" y="805" width="0.1155%" height="15" fill="rgb(251,115,12)"/><text x="6.3701%" y="815.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="6.1201%" y="789" width="0.1155%" height="15" fill="rgb(240,54,50)"/><text x="6.3701%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="6.1201%" y="773" width="0.1155%" height="15" fill="rgb(233,84,52)"/><text x="6.3701%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="6.1201%" y="757" width="0.1155%" height="15" fill="rgb(207,117,47)"/><text x="6.3701%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="6.1201%" y="741" width="0.1155%" height="15" fill="rgb(249,43,39)"/><text x="6.3701%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="6.1201%" y="725" width="0.1155%" height="15" fill="rgb(209,38,44)"/><text x="6.3701%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="6.1201%" y="709" width="0.1155%" height="15" fill="rgb(236,212,23)"/><text x="6.3701%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="6.1201%" y="693" width="0.1155%" height="15" fill="rgb(242,79,21)"/><text x="6.3701%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="6.1201%" y="677" width="0.1155%" height="15" fill="rgb(211,96,35)"/><text x="6.3701%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="6.1201%" y="661" width="0.1155%" height="15" fill="rgb(253,215,40)"/><text x="6.3701%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="6.1201%" y="645" width="0.1155%" height="15" fill="rgb(211,81,21)"/><text x="6.3701%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="6.1201%" y="629" width="0.1155%" height="15" fill="rgb(208,190,38)"/><text x="6.3701%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="6.1201%" y="613" width="0.1155%" height="15" fill="rgb(235,213,38)"/><text x="6.3701%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="6.1201%" y="597" width="0.1155%" height="15" fill="rgb(237,122,38)"/><text x="6.3701%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="6.1201%" y="581" width="0.1155%" height="15" fill="rgb(244,218,35)"/><text x="6.3701%" y="591.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.23%)</title><rect x="6.1201%" y="853" width="0.2309%" height="15" fill="rgb(240,68,47)"/><text x="6.3701%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.23%)</title><rect x="6.1201%" y="837" width="0.2309%" height="15" fill="rgb(210,16,53)"/><text x="6.3701%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.23%)</title><rect x="6.1201%" y="821" width="0.2309%" height="15" fill="rgb(235,124,12)"/><text x="6.3701%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.12%)</title><rect x="6.2356%" y="805" width="0.1155%" height="15" fill="rgb(224,169,11)"/><text x="6.4856%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="6.2356%" y="789" width="0.1155%" height="15" fill="rgb(250,166,2)"/><text x="6.4856%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="6.2356%" y="773" width="0.1155%" height="15" fill="rgb(242,216,29)"/><text x="6.4856%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="6.2356%" y="757" width="0.1155%" height="15" fill="rgb(230,116,27)"/><text x="6.4856%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="6.2356%" y="741" width="0.1155%" height="15" fill="rgb(228,99,48)"/><text x="6.4856%" y="751.50"></text></g><g><title>filemap_map_pages (1 samples, 0.12%)</title><rect x="6.2356%" y="725" width="0.1155%" height="15" fill="rgb(253,11,6)"/><text x="6.4856%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="6.3510%" y="837" width="0.2309%" height="15" fill="rgb(247,143,39)"/><text x="6.6010%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.23%)</title><rect x="6.3510%" y="821" width="0.2309%" height="15" fill="rgb(236,97,10)"/><text x="6.6010%" y="831.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.23%)</title><rect x="6.3510%" y="805" width="0.2309%" height="15" fill="rgb(233,208,19)"/><text x="6.6010%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.23%)</title><rect x="6.3510%" y="789" width="0.2309%" height="15" fill="rgb(216,164,2)"/><text x="6.6010%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="6.3510%" y="773" width="0.2309%" height="15" fill="rgb(220,129,5)"/><text x="6.6010%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.23%)</title><rect x="6.3510%" y="757" width="0.2309%" height="15" fill="rgb(242,17,10)"/><text x="6.6010%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.23%)</title><rect x="6.3510%" y="741" width="0.2309%" height="15" fill="rgb(242,107,0)"/><text x="6.6010%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.23%)</title><rect x="6.3510%" y="725" width="0.2309%" height="15" fill="rgb(251,28,31)"/><text x="6.6010%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="6.4665%" y="709" width="0.1155%" height="15" fill="rgb(233,223,10)"/><text x="6.7165%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="6.5820%" y="821" width="0.1155%" height="15" fill="rgb(215,21,27)"/><text x="6.8320%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="6.5820%" y="805" width="0.1155%" height="15" fill="rgb(232,23,21)"/><text x="6.8320%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="6.5820%" y="789" width="0.1155%" height="15" fill="rgb(244,5,23)"/><text x="6.8320%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.12%)</title><rect x="6.5820%" y="773" width="0.1155%" height="15" fill="rgb(226,81,46)"/><text x="6.8320%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="6.5820%" y="757" width="0.1155%" height="15" fill="rgb(247,70,30)"/><text x="6.8320%" y="767.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.12%)</title><rect x="6.5820%" y="741" width="0.1155%" height="15" fill="rgb(212,68,19)"/><text x="6.8320%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="6.5820%" y="725" width="0.1155%" height="15" fill="rgb(240,187,13)"/><text x="6.8320%" y="735.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.12%)</title><rect x="6.5820%" y="709" width="0.1155%" height="15" fill="rgb(223,113,26)"/><text x="6.8320%" y="719.50"></text></g><g><title>_dl_open (1 samples, 0.12%)</title><rect x="6.5820%" y="693" width="0.1155%" height="15" fill="rgb(206,192,2)"/><text x="6.8320%" y="703.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.12%)</title><rect x="6.5820%" y="677" width="0.1155%" height="15" fill="rgb(241,108,4)"/><text x="6.8320%" y="687.50"></text></g><g><title>dl_open_worker (1 samples, 0.12%)</title><rect x="6.5820%" y="661" width="0.1155%" height="15" fill="rgb(247,173,49)"/><text x="6.8320%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.12%)</title><rect x="6.5820%" y="645" width="0.1155%" height="15" fill="rgb(224,114,35)"/><text x="6.8320%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.12%)</title><rect x="6.5820%" y="629" width="0.1155%" height="15" fill="rgb(245,159,27)"/><text x="6.8320%" y="639.50"></text></g><g><title>do_lookup_x (1 samples, 0.12%)</title><rect x="6.5820%" y="613" width="0.1155%" height="15" fill="rgb(245,172,44)"/><text x="6.8320%" y="623.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.23%)</title><rect x="6.5820%" y="837" width="0.2309%" height="15" fill="rgb(236,23,11)"/><text x="6.8320%" y="847.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.12%)</title><rect x="6.6975%" y="821" width="0.1155%" height="15" fill="rgb(205,117,38)"/><text x="6.9475%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="6.6975%" y="805" width="0.1155%" height="15" fill="rgb(237,72,25)"/><text x="6.9475%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="6.6975%" y="789" width="0.1155%" height="15" fill="rgb(244,70,9)"/><text x="6.9475%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="6.6975%" y="773" width="0.1155%" height="15" fill="rgb(217,125,39)"/><text x="6.9475%" y="783.50"></text></g><g><title>__GI___isoc99_sscanf (1 samples, 0.12%)</title><rect x="6.6975%" y="757" width="0.1155%" height="15" fill="rgb(235,36,10)"/><text x="6.9475%" y="767.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.12%)</title><rect x="6.6975%" y="741" width="0.1155%" height="15" fill="rgb(251,123,47)"/><text x="6.9475%" y="751.50"></text></g><g><title>lobsters::main (5 samples, 0.58%)</title><rect x="6.3510%" y="853" width="0.5774%" height="15" fill="rgb(221,13,13)"/><text x="6.6010%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.12%)</title><rect x="6.8129%" y="837" width="0.1155%" height="15" fill="rgb(238,131,9)"/><text x="7.0629%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.12%)</title><rect x="6.8129%" y="821" width="0.1155%" height="15" fill="rgb(211,50,8)"/><text x="7.0629%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="6.8129%" y="805" width="0.1155%" height="15" fill="rgb(245,182,24)"/><text x="7.0629%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="6.8129%" y="789" width="0.1155%" height="15" fill="rgb(242,14,37)"/><text x="7.0629%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="6.8129%" y="773" width="0.1155%" height="15" fill="rgb(246,228,12)"/><text x="7.0629%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.12%)</title><rect x="6.8129%" y="757" width="0.1155%" height="15" fill="rgb(213,55,15)"/><text x="7.0629%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="6.8129%" y="741" width="0.1155%" height="15" fill="rgb(209,9,3)"/><text x="7.0629%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="6.8129%" y="725" width="0.1155%" height="15" fill="rgb(230,59,30)"/><text x="7.0629%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="6.8129%" y="709" width="0.1155%" height="15" fill="rgb(209,121,21)"/><text x="7.0629%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.12%)</title><rect x="6.9284%" y="757" width="0.1155%" height="15" fill="rgb(220,109,13)"/><text x="7.1784%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="6.9284%" y="741" width="0.1155%" height="15" fill="rgb(232,18,1)"/><text x="7.1784%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="6.9284%" y="725" width="0.1155%" height="15" fill="rgb(215,41,42)"/><text x="7.1784%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="6.9284%" y="709" width="0.1155%" height="15" fill="rgb(224,123,36)"/><text x="7.1784%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="6.9284%" y="693" width="0.1155%" height="15" fill="rgb(240,125,3)"/><text x="7.1784%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.12%)</title><rect x="6.9284%" y="677" width="0.1155%" height="15" fill="rgb(205,98,50)"/><text x="7.1784%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.12%)</title><rect x="6.9284%" y="661" width="0.1155%" height="15" fill="rgb(205,185,37)"/><text x="7.1784%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.12%)</title><rect x="6.9284%" y="645" width="0.1155%" height="15" fill="rgb(238,207,15)"/><text x="7.1784%" y="655.50"></text></g><g><title>__libc_recv (1 samples, 0.12%)</title><rect x="6.9284%" y="629" width="0.1155%" height="15" fill="rgb(213,199,42)"/><text x="7.1784%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="6.9284%" y="613" width="0.1155%" height="15" fill="rgb(235,201,11)"/><text x="7.1784%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="6.9284%" y="597" width="0.1155%" height="15" fill="rgb(207,46,11)"/><text x="7.1784%" y="607.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.23%)</title><rect x="6.9284%" y="853" width="0.2309%" height="15" fill="rgb(241,35,35)"/><text x="7.1784%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.23%)</title><rect x="6.9284%" y="837" width="0.2309%" height="15" fill="rgb(243,32,47)"/><text x="7.1784%" y="847.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.23%)</title><rect x="6.9284%" y="821" width="0.2309%" height="15" fill="rgb(247,202,23)"/><text x="7.1784%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.23%)</title><rect x="6.9284%" y="805" width="0.2309%" height="15" fill="rgb(219,102,11)"/><text x="7.1784%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.23%)</title><rect x="6.9284%" y="789" width="0.2309%" height="15" fill="rgb(243,110,44)"/><text x="7.1784%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.23%)</title><rect x="6.9284%" y="773" width="0.2309%" height="15" fill="rgb(222,74,54)"/><text x="7.1784%" y="783.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.12%)</title><rect x="7.0439%" y="757" width="0.1155%" height="15" fill="rgb(216,99,12)"/><text x="7.2939%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.12%)</title><rect x="7.0439%" y="741" width="0.1155%" height="15" fill="rgb(226,22,26)"/><text x="7.2939%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="7.0439%" y="725" width="0.1155%" height="15" fill="rgb(217,163,10)"/><text x="7.2939%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.12%)</title><rect x="7.0439%" y="709" width="0.1155%" height="15" fill="rgb(213,25,53)"/><text x="7.2939%" y="719.50"></text></g><g><title>__libc_send (1 samples, 0.12%)</title><rect x="7.0439%" y="693" width="0.1155%" height="15" fill="rgb(252,105,26)"/><text x="7.2939%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="7.0439%" y="677" width="0.1155%" height="15" fill="rgb(220,39,43)"/><text x="7.2939%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="7.0439%" y="661" width="0.1155%" height="15" fill="rgb(229,68,48)"/><text x="7.2939%" y="671.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.12%)</title><rect x="7.0439%" y="645" width="0.1155%" height="15" fill="rgb(252,8,32)"/><text x="7.2939%" y="655.50"></text></g><g><title>__sys_sendto (1 samples, 0.12%)</title><rect x="7.0439%" y="629" width="0.1155%" height="15" fill="rgb(223,20,43)"/><text x="7.2939%" y="639.50"></text></g><g><title>sock_sendmsg (1 samples, 0.12%)</title><rect x="7.0439%" y="613" width="0.1155%" height="15" fill="rgb(229,81,49)"/><text x="7.2939%" y="623.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.12%)</title><rect x="7.0439%" y="597" width="0.1155%" height="15" fill="rgb(236,28,36)"/><text x="7.2939%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.12%)</title><rect x="7.0439%" y="581" width="0.1155%" height="15" fill="rgb(249,185,26)"/><text x="7.2939%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.12%)</title><rect x="7.0439%" y="565" width="0.1155%" height="15" fill="rgb(249,174,33)"/><text x="7.2939%" y="575.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.12%)</title><rect x="7.0439%" y="549" width="0.1155%" height="15" fill="rgb(233,201,37)"/><text x="7.2939%" y="559.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.12%)</title><rect x="7.0439%" y="533" width="0.1155%" height="15" fill="rgb(221,78,26)"/><text x="7.2939%" y="543.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.12%)</title><rect x="7.1594%" y="853" width="0.1155%" height="15" fill="rgb(250,127,30)"/><text x="7.4094%" y="863.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.12%)</title><rect x="7.2748%" y="853" width="0.1155%" height="15" fill="rgb(230,49,44)"/><text x="7.5248%" y="863.50"></text></g><g><title>mysql_common::packets::Column::table_str (2 samples, 0.23%)</title><rect x="7.3903%" y="853" width="0.2309%" height="15" fill="rgb(229,67,23)"/><text x="7.6403%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="7.6212%" y="853" width="0.1155%" height="15" fill="rgb(249,83,47)"/><text x="7.8712%" y="863.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="7.7367%" y="853" width="0.1155%" height="15" fill="rgb(215,43,3)"/><text x="7.9867%" y="863.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.12%)</title><rect x="7.8522%" y="853" width="0.1155%" height="15" fill="rgb(238,154,13)"/><text x="8.1022%" y="863.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.12%)</title><rect x="7.9677%" y="853" width="0.1155%" height="15" fill="rgb(219,56,2)"/><text x="8.2177%" y="863.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.12%)</title><rect x="8.0831%" y="853" width="0.1155%" height="15" fill="rgb(233,0,4)"/><text x="8.3331%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.12%)</title><rect x="8.0831%" y="837" width="0.1155%" height="15" fill="rgb(235,30,7)"/><text x="8.3331%" y="847.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.12%)</title><rect x="8.0831%" y="821" width="0.1155%" height="15" fill="rgb(250,79,13)"/><text x="8.3331%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.12%)</title><rect x="8.0831%" y="805" width="0.1155%" height="15" fill="rgb(211,146,34)"/><text x="8.3331%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.12%)</title><rect x="8.0831%" y="789" width="0.1155%" height="15" fill="rgb(228,22,38)"/><text x="8.3331%" y="799.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.12%)</title><rect x="8.0831%" y="773" width="0.1155%" height="15" fill="rgb(235,168,5)"/><text x="8.3331%" y="783.50"></text></g><g><title>regex::compile::SuffixCache::get (1 samples, 0.12%)</title><rect x="8.0831%" y="757" width="0.1155%" height="15" fill="rgb(221,155,16)"/><text x="8.3331%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="8.1986%" y="805" width="0.1155%" height="15" fill="rgb(215,215,53)"/><text x="8.4486%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="8.1986%" y="789" width="0.1155%" height="15" fill="rgb(223,4,10)"/><text x="8.4486%" y="799.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="8.1986%" y="773" width="0.1155%" height="15" fill="rgb(234,103,6)"/><text x="8.4486%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="8.1986%" y="757" width="0.1155%" height="15" fill="rgb(227,97,0)"/><text x="8.4486%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.23%)</title><rect x="8.1986%" y="853" width="0.2309%" height="15" fill="rgb(234,150,53)"/><text x="8.4486%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.23%)</title><rect x="8.1986%" y="837" width="0.2309%" height="15" fill="rgb(228,201,54)"/><text x="8.4486%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (2 samples, 0.23%)</title><rect x="8.1986%" y="821" width="0.2309%" height="15" fill="rgb(222,22,37)"/><text x="8.4486%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.12%)</title><rect x="8.3141%" y="805" width="0.1155%" height="15" fill="rgb(237,53,32)"/><text x="8.5641%" y="815.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="8.3141%" y="789" width="0.1155%" height="15" fill="rgb(233,25,53)"/><text x="8.5641%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="8.3141%" y="773" width="0.1155%" height="15" fill="rgb(210,40,34)"/><text x="8.5641%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="8.3141%" y="757" width="0.1155%" height="15" fill="rgb(241,220,44)"/><text x="8.5641%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="8.3141%" y="741" width="0.1155%" height="15" fill="rgb(235,28,35)"/><text x="8.5641%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="8.3141%" y="725" width="0.1155%" height="15" fill="rgb(210,56,17)"/><text x="8.5641%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (5 samples, 0.58%)</title><rect x="8.4296%" y="677" width="0.5774%" height="15" fill="rgb(224,130,29)"/><text x="8.6796%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (5 samples, 0.58%)</title><rect x="8.4296%" y="661" width="0.5774%" height="15" fill="rgb(235,212,8)"/><text x="8.6796%" y="671.50"></text></g><g><title>decor::helpers::answer_rows (6 samples, 0.69%)</title><rect x="8.4296%" y="709" width="0.6928%" height="15" fill="rgb(223,33,50)"/><text x="8.6796%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.69%)</title><rect x="8.4296%" y="693" width="0.6928%" height="15" fill="rgb(219,149,13)"/><text x="8.6796%" y="703.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.12%)</title><rect x="9.0069%" y="677" width="0.1155%" height="15" fill="rgb(250,156,29)"/><text x="9.2569%" y="687.50"></text></g><g><title>mysql::conn::Conn::more_results_exists (1 samples, 0.12%)</title><rect x="9.0069%" y="661" width="0.1155%" height="15" fill="rgb(216,193,19)"/><text x="9.2569%" y="671.50"></text></g><g><title>start_thread (8 samples, 0.92%)</title><rect x="8.4296%" y="853" width="0.9238%" height="15" fill="rgb(216,135,14)"/><text x="8.6796%" y="863.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.92%)</title><rect x="8.4296%" y="837" width="0.9238%" height="15" fill="rgb(241,47,5)"/><text x="8.6796%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (8 samples, 0.92%)</title><rect x="8.4296%" y="821" width="0.9238%" height="15" fill="rgb(233,42,35)"/><text x="8.6796%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (8 samples, 0.92%)</title><rect x="8.4296%" y="805" width="0.9238%" height="15" fill="rgb(231,13,6)"/><text x="8.6796%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (8 samples, 0.92%)</title><rect x="8.4296%" y="789" width="0.9238%" height="15" fill="rgb(207,181,40)"/><text x="8.6796%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.92%)</title><rect x="8.4296%" y="773" width="0.9238%" height="15" fill="rgb(254,173,49)"/><text x="8.6796%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (8 samples, 0.92%)</title><rect x="8.4296%" y="757" width="0.9238%" height="15" fill="rgb(221,1,38)"/><text x="8.6796%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (8 samples, 0.92%)</title><rect x="8.4296%" y="741" width="0.9238%" height="15" fill="rgb(206,124,46)"/><text x="8.6796%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.92%)</title><rect x="8.4296%" y="725" width="0.9238%" height="15" fill="rgb(249,21,11)"/><text x="8.6796%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.23%)</title><rect x="9.1224%" y="709" width="0.2309%" height="15" fill="rgb(222,201,40)"/><text x="9.3724%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.23%)</title><rect x="9.1224%" y="693" width="0.2309%" height="15" fill="rgb(235,61,29)"/><text x="9.3724%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.23%)</title><rect x="9.1224%" y="677" width="0.2309%" height="15" fill="rgb(219,207,3)"/><text x="9.3724%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="9.1224%" y="661" width="0.2309%" height="15" fill="rgb(222,56,46)"/><text x="9.3724%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.23%)</title><rect x="9.1224%" y="645" width="0.2309%" height="15" fill="rgb(239,76,54)"/><text x="9.3724%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.23%)</title><rect x="9.1224%" y="629" width="0.2309%" height="15" fill="rgb(231,124,27)"/><text x="9.3724%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.23%)</title><rect x="9.1224%" y="613" width="0.2309%" height="15" fill="rgb(249,195,6)"/><text x="9.3724%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="9.2379%" y="597" width="0.1155%" height="15" fill="rgb(237,174,47)"/><text x="9.4879%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="9.2379%" y="581" width="0.1155%" height="15" fill="rgb(206,201,31)"/><text x="9.4879%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.35%)</title><rect x="9.3533%" y="853" width="0.3464%" height="15" fill="rgb(231,57,52)"/><text x="9.6033%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="9.6998%" y="645" width="0.2309%" height="15" fill="rgb(248,177,22)"/><text x="9.9498%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.35%)</title><rect x="9.6998%" y="661" width="0.3464%" height="15" fill="rgb(215,211,37)"/><text x="9.9498%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="9.9307%" y="645" width="0.1155%" height="15" fill="rgb(241,128,51)"/><text x="10.1807%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.58%)</title><rect x="9.6998%" y="725" width="0.5774%" height="15" fill="rgb(227,165,31)"/><text x="9.9498%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (5 samples, 0.58%)</title><rect x="9.6998%" y="709" width="0.5774%" height="15" fill="rgb(228,167,24)"/><text x="9.9498%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (5 samples, 0.58%)</title><rect x="9.6998%" y="693" width="0.5774%" height="15" fill="rgb(228,143,12)"/><text x="9.9498%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.58%)</title><rect x="9.6998%" y="677" width="0.5774%" height="15" fill="rgb(249,149,8)"/><text x="9.9498%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="10.0462%" y="661" width="0.2309%" height="15" fill="rgb(243,35,44)"/><text x="10.2962%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="10.1617%" y="645" width="0.1155%" height="15" fill="rgb(246,89,9)"/><text x="10.4117%" y="655.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.12%)</title><rect x="10.2771%" y="725" width="0.1155%" height="15" fill="rgb(233,213,13)"/><text x="10.5271%" y="735.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.12%)</title><rect x="10.2771%" y="709" width="0.1155%" height="15" fill="rgb(233,141,41)"/><text x="10.5271%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="10.2771%" y="693" width="0.1155%" height="15" fill="rgb(239,167,4)"/><text x="10.5271%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="10.2771%" y="677" width="0.1155%" height="15" fill="rgb(209,217,16)"/><text x="10.5271%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.12%)</title><rect x="10.2771%" y="661" width="0.1155%" height="15" fill="rgb(219,88,35)"/><text x="10.5271%" y="671.50"></text></g><g><title>__GI___openat (1 samples, 0.12%)</title><rect x="10.2771%" y="645" width="0.1155%" height="15" fill="rgb(220,193,23)"/><text x="10.5271%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="10.2771%" y="629" width="0.1155%" height="15" fill="rgb(230,90,52)"/><text x="10.5271%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="10.2771%" y="613" width="0.1155%" height="15" fill="rgb(252,106,19)"/><text x="10.5271%" y="623.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.12%)</title><rect x="10.2771%" y="597" width="0.1155%" height="15" fill="rgb(206,74,20)"/><text x="10.5271%" y="607.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.12%)</title><rect x="10.2771%" y="581" width="0.1155%" height="15" fill="rgb(230,138,44)"/><text x="10.5271%" y="591.50"></text></g><g><title>do_filp_open (1 samples, 0.12%)</title><rect x="10.2771%" y="565" width="0.1155%" height="15" fill="rgb(235,182,43)"/><text x="10.5271%" y="575.50"></text></g><g><title>path_openat (1 samples, 0.12%)</title><rect x="10.2771%" y="549" width="0.1155%" height="15" fill="rgb(242,16,51)"/><text x="10.5271%" y="559.50"></text></g><g><title>alloc_empty_file (1 samples, 0.12%)</title><rect x="10.2771%" y="533" width="0.1155%" height="15" fill="rgb(248,9,4)"/><text x="10.5271%" y="543.50"></text></g><g><title>__alloc_file (1 samples, 0.12%)</title><rect x="10.2771%" y="517" width="0.1155%" height="15" fill="rgb(210,31,22)"/><text x="10.5271%" y="527.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.12%)</title><rect x="10.2771%" y="501" width="0.1155%" height="15" fill="rgb(239,54,39)"/><text x="10.5271%" y="511.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.12%)</title><rect x="10.2771%" y="485" width="0.1155%" height="15" fill="rgb(230,99,41)"/><text x="10.5271%" y="495.50"></text></g><g><title>___slab_alloc (1 samples, 0.12%)</title><rect x="10.2771%" y="469" width="0.1155%" height="15" fill="rgb(253,106,12)"/><text x="10.5271%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.12%)</title><rect x="10.6236%" y="357" width="0.1155%" height="15" fill="rgb(213,46,41)"/><text x="10.8736%" y="367.50"></text></g><g><title>update_min_vruntime (1 samples, 0.12%)</title><rect x="10.6236%" y="341" width="0.1155%" height="15" fill="rgb(215,133,35)"/><text x="10.8736%" y="351.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.23%)</title><rect x="10.6236%" y="389" width="0.2309%" height="15" fill="rgb(213,28,5)"/><text x="10.8736%" y="399.50"></text></g><g><title>dequeue_entity (2 samples, 0.23%)</title><rect x="10.6236%" y="373" width="0.2309%" height="15" fill="rgb(215,77,49)"/><text x="10.8736%" y="383.50"></text></g><g><title>update_load_avg (1 samples, 0.12%)</title><rect x="10.7390%" y="357" width="0.1155%" height="15" fill="rgb(248,100,22)"/><text x="10.9890%" y="367.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.12%)</title><rect x="10.7390%" y="341" width="0.1155%" height="15" fill="rgb(208,67,9)"/><text x="10.9890%" y="351.50"></text></g><g><title>finish_task_switch (2 samples, 0.23%)</title><rect x="10.8545%" y="389" width="0.2309%" height="15" fill="rgb(219,133,21)"/><text x="11.1045%" y="399.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.12%)</title><rect x="11.0855%" y="389" width="0.1155%" height="15" fill="rgb(246,46,29)"/><text x="11.3355%" y="399.50"></text></g><g><title>newidle_balance (1 samples, 0.12%)</title><rect x="11.0855%" y="373" width="0.1155%" height="15" fill="rgb(246,185,52)"/><text x="11.3355%" y="383.50"></text></g><g><title>psi_task_change (1 samples, 0.12%)</title><rect x="11.2009%" y="389" width="0.1155%" height="15" fill="rgb(252,136,11)"/><text x="11.4509%" y="399.50"></text></g><g><title>psi_group_change (1 samples, 0.12%)</title><rect x="11.2009%" y="373" width="0.1155%" height="15" fill="rgb(219,138,53)"/><text x="11.4509%" y="383.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.12%)</title><rect x="11.3164%" y="389" width="0.1155%" height="15" fill="rgb(211,51,23)"/><text x="11.5664%" y="399.50"></text></g><g><title>sk_wait_data (8 samples, 0.92%)</title><rect x="10.6236%" y="469" width="0.9238%" height="15" fill="rgb(247,221,28)"/><text x="10.8736%" y="479.50"></text></g><g><title>wait_woken (8 samples, 0.92%)</title><rect x="10.6236%" y="453" width="0.9238%" height="15" fill="rgb(251,222,45)"/><text x="10.8736%" y="463.50"></text></g><g><title>schedule_timeout (8 samples, 0.92%)</title><rect x="10.6236%" y="437" width="0.9238%" height="15" fill="rgb(217,162,53)"/><text x="10.8736%" y="447.50"></text></g><g><title>schedule (8 samples, 0.92%)</title><rect x="10.6236%" y="421" width="0.9238%" height="15" fill="rgb(229,93,14)"/><text x="10.8736%" y="431.50"></text></g><g><title>__schedule (8 samples, 0.92%)</title><rect x="10.6236%" y="405" width="0.9238%" height="15" fill="rgb(209,67,49)"/><text x="10.8736%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.12%)</title><rect x="11.4319%" y="389" width="0.1155%" height="15" fill="rgb(213,87,29)"/><text x="11.6819%" y="399.50"></text></g><g><title>std::rt::lang_start_internal (17 samples, 1.96%)</title><rect x="9.6998%" y="853" width="1.9630%" height="15" fill="rgb(205,151,52)"/><text x="9.9498%" y="863.50">s..</text></g><g><title>std::panic::catch_unwind (17 samples, 1.96%)</title><rect x="9.6998%" y="837" width="1.9630%" height="15" fill="rgb(253,215,39)"/><text x="9.9498%" y="847.50">s..</text></g><g><title>std::panicking::try (17 samples, 1.96%)</title><rect x="9.6998%" y="821" width="1.9630%" height="15" fill="rgb(221,220,41)"/><text x="9.9498%" y="831.50">s..</text></g><g><title>std::panicking::try::do_call (17 samples, 1.96%)</title><rect x="9.6998%" y="805" width="1.9630%" height="15" fill="rgb(218,133,21)"/><text x="9.9498%" y="815.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 1.96%)</title><rect x="9.6998%" y="789" width="1.9630%" height="15" fill="rgb(221,193,43)"/><text x="9.9498%" y="799.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (17 samples, 1.96%)</title><rect x="9.6998%" y="773" width="1.9630%" height="15" fill="rgb(240,128,52)"/><text x="9.9498%" y="783.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 1.96%)</title><rect x="9.6998%" y="757" width="1.9630%" height="15" fill="rgb(253,114,12)"/><text x="9.9498%" y="767.50">s..</text></g><g><title>lobsters::main (17 samples, 1.96%)</title><rect x="9.6998%" y="741" width="1.9630%" height="15" fill="rgb(215,223,47)"/><text x="9.9498%" y="751.50">l..</text></g><g><title>mysql::conn::Conn::_query (11 samples, 1.27%)</title><rect x="10.3926%" y="725" width="1.2702%" height="15" fill="rgb(248,225,23)"/><text x="10.6426%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (11 samples, 1.27%)</title><rect x="10.3926%" y="709" width="1.2702%" height="15" fill="rgb(250,108,0)"/><text x="10.6426%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 1.27%)</title><rect x="10.3926%" y="693" width="1.2702%" height="15" fill="rgb(228,208,7)"/><text x="10.6426%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.27%)</title><rect x="10.3926%" y="677" width="1.2702%" height="15" fill="rgb(244,45,10)"/><text x="10.6426%" y="687.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 1.27%)</title><rect x="10.3926%" y="661" width="1.2702%" height="15" fill="rgb(207,125,25)"/><text x="10.6426%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 1.27%)</title><rect x="10.3926%" y="645" width="1.2702%" height="15" fill="rgb(210,195,18)"/><text x="10.6426%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 1.27%)</title><rect x="10.3926%" y="629" width="1.2702%" height="15" fill="rgb(249,80,12)"/><text x="10.6426%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 1.27%)</title><rect x="10.3926%" y="613" width="1.2702%" height="15" fill="rgb(221,65,9)"/><text x="10.6426%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 1.27%)</title><rect x="10.3926%" y="597" width="1.2702%" height="15" fill="rgb(235,49,36)"/><text x="10.6426%" y="607.50"></text></g><g><title>__libc_recv (11 samples, 1.27%)</title><rect x="10.3926%" y="581" width="1.2702%" height="15" fill="rgb(225,32,20)"/><text x="10.6426%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 1.27%)</title><rect x="10.3926%" y="565" width="1.2702%" height="15" fill="rgb(215,141,46)"/><text x="10.6426%" y="575.50"></text></g><g><title>do_syscall_64 (11 samples, 1.27%)</title><rect x="10.3926%" y="549" width="1.2702%" height="15" fill="rgb(250,160,47)"/><text x="10.6426%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (11 samples, 1.27%)</title><rect x="10.3926%" y="533" width="1.2702%" height="15" fill="rgb(216,222,40)"/><text x="10.6426%" y="543.50"></text></g><g><title>__sys_recvfrom (10 samples, 1.15%)</title><rect x="10.5081%" y="517" width="1.1547%" height="15" fill="rgb(234,217,39)"/><text x="10.7581%" y="527.50"></text></g><g><title>inet_recvmsg (9 samples, 1.04%)</title><rect x="10.6236%" y="501" width="1.0393%" height="15" fill="rgb(207,178,40)"/><text x="10.8736%" y="511.50"></text></g><g><title>tcp_recvmsg (9 samples, 1.04%)</title><rect x="10.6236%" y="485" width="1.0393%" height="15" fill="rgb(221,136,13)"/><text x="10.8736%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.12%)</title><rect x="11.5473%" y="469" width="0.1155%" height="15" fill="rgb(249,199,10)"/><text x="11.7973%" y="479.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.12%)</title><rect x="11.5473%" y="453" width="0.1155%" height="15" fill="rgb(249,222,13)"/><text x="11.7973%" y="463.50"></text></g><g><title>_copy_to_iter (1 samples, 0.12%)</title><rect x="11.5473%" y="437" width="0.1155%" height="15" fill="rgb(244,185,38)"/><text x="11.7973%" y="447.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.12%)</title><rect x="11.5473%" y="421" width="0.1155%" height="15" fill="rgb(236,202,9)"/><text x="11.7973%" y="431.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="11.5473%" y="405" width="0.1155%" height="15" fill="rgb(250,229,37)"/><text x="11.7973%" y="415.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="11.5473%" y="389" width="0.1155%" height="15" fill="rgb(206,174,23)"/><text x="11.7973%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="11.5473%" y="373" width="0.1155%" height="15" fill="rgb(211,33,43)"/><text x="11.7973%" y="383.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="11.5473%" y="357" width="0.1155%" height="15" fill="rgb(245,58,50)"/><text x="11.7973%" y="367.50"></text></g><g><title>__lru_cache_add (1 samples, 0.12%)</title><rect x="11.5473%" y="341" width="0.1155%" height="15" fill="rgb(244,68,36)"/><text x="11.7973%" y="351.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.12%)</title><rect x="11.5473%" y="325" width="0.1155%" height="15" fill="rgb(232,229,15)"/><text x="11.7973%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.12%)</title><rect x="11.5473%" y="309" width="0.1155%" height="15" fill="rgb(254,30,23)"/><text x="11.7973%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.12%)</title><rect x="11.5473%" y="293" width="0.1155%" height="15" fill="rgb(235,160,14)"/><text x="11.7973%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (1 samples, 0.12%)</title><rect x="11.5473%" y="277" width="0.1155%" height="15" fill="rgb(212,155,44)"/><text x="11.7973%" y="287.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.12%)</title><rect x="11.6628%" y="853" width="0.1155%" height="15" fill="rgb(226,2,50)"/><text x="11.9128%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.12%)</title><rect x="11.6628%" y="837" width="0.1155%" height="15" fill="rgb(234,177,6)"/><text x="11.9128%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.12%)</title><rect x="11.6628%" y="821" width="0.1155%" height="15" fill="rgb(217,24,9)"/><text x="11.9128%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.12%)</title><rect x="11.6628%" y="805" width="0.1155%" height="15" fill="rgb(220,13,46)"/><text x="11.9128%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.12%)</title><rect x="11.6628%" y="789" width="0.1155%" height="15" fill="rgb(239,221,27)"/><text x="11.9128%" y="799.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.12%)</title><rect x="11.6628%" y="773" width="0.1155%" height="15" fill="rgb(222,198,25)"/><text x="11.9128%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.12%)</title><rect x="11.6628%" y="757" width="0.1155%" height="15" fill="rgb(211,99,13)"/><text x="11.9128%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.12%)</title><rect x="11.6628%" y="741" width="0.1155%" height="15" fill="rgb(232,111,31)"/><text x="11.9128%" y="751.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.12%)</title><rect x="11.6628%" y="725" width="0.1155%" height="15" fill="rgb(245,82,37)"/><text x="11.9128%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="11.6628%" y="709" width="0.1155%" height="15" fill="rgb(227,149,46)"/><text x="11.9128%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.12%)</title><rect x="11.6628%" y="693" width="0.1155%" height="15" fill="rgb(218,36,50)"/><text x="11.9128%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.12%)</title><rect x="11.6628%" y="677" width="0.1155%" height="15" fill="rgb(226,80,48)"/><text x="11.9128%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="11.6628%" y="661" width="0.1155%" height="15" fill="rgb(238,224,15)"/><text x="11.9128%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="12.1247%" y="693" width="0.1155%" height="15" fill="rgb(241,136,10)"/><text x="12.3747%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.46%)</title><rect x="12.0092%" y="709" width="0.4619%" height="15" fill="rgb(208,32,45)"/><text x="12.2592%" y="719.50"></text></g><g><title>__rdl_alloc (2 samples, 0.23%)</title><rect x="12.2402%" y="693" width="0.2309%" height="15" fill="rgb(207,135,9)"/><text x="12.4902%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.23%)</title><rect x="12.2402%" y="677" width="0.2309%" height="15" fill="rgb(206,86,44)"/><text x="12.4902%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.35%)</title><rect x="12.4711%" y="709" width="0.3464%" height="15" fill="rgb(245,177,15)"/><text x="12.7211%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.35%)</title><rect x="12.4711%" y="693" width="0.3464%" height="15" fill="rgb(206,64,50)"/><text x="12.7211%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.35%)</title><rect x="12.4711%" y="677" width="0.3464%" height="15" fill="rgb(234,36,40)"/><text x="12.7211%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.23%)</title><rect x="12.5866%" y="661" width="0.2309%" height="15" fill="rgb(213,64,8)"/><text x="12.8366%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="12.7021%" y="645" width="0.1155%" height="15" fill="rgb(210,75,36)"/><text x="12.9521%" y="655.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.12%)</title><rect x="12.8176%" y="709" width="0.1155%" height="15" fill="rgb(229,88,21)"/><text x="13.0676%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.12%)</title><rect x="12.8176%" y="693" width="0.1155%" height="15" fill="rgb(252,204,47)"/><text x="13.0676%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="12.9330%" y="709" width="0.2309%" height="15" fill="rgb(208,77,27)"/><text x="13.1830%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (14 samples, 1.62%)</title><rect x="11.7783%" y="725" width="1.6166%" height="15" fill="rgb(221,76,26)"/><text x="12.0283%" y="735.50"></text></g><g><title>std::io::error::Error::_new (2 samples, 0.23%)</title><rect x="13.1640%" y="709" width="0.2309%" height="15" fill="rgb(225,139,18)"/><text x="13.4140%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.23%)</title><rect x="13.1640%" y="693" width="0.2309%" height="15" fill="rgb(230,137,11)"/><text x="13.4140%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.12%)</title><rect x="13.2794%" y="677" width="0.1155%" height="15" fill="rgb(212,28,1)"/><text x="13.5294%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.12%)</title><rect x="13.2794%" y="661" width="0.1155%" height="15" fill="rgb(248,164,17)"/><text x="13.5294%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="13.2794%" y="645" width="0.1155%" height="15" fill="rgb(222,171,42)"/><text x="13.5294%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="13.2794%" y="629" width="0.1155%" height="15" fill="rgb(243,84,45)"/><text x="13.5294%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="13.2794%" y="613" width="0.1155%" height="15" fill="rgb(252,49,23)"/><text x="13.5294%" y="623.50"></text></g><g><title>decor::helpers::answer_rows (15 samples, 1.73%)</title><rect x="11.7783%" y="789" width="1.7321%" height="15" fill="rgb(215,19,7)"/><text x="12.0283%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.73%)</title><rect x="11.7783%" y="773" width="1.7321%" height="15" fill="rgb(238,81,41)"/><text x="12.0283%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (15 samples, 1.73%)</title><rect x="11.7783%" y="757" width="1.7321%" height="15" fill="rgb(210,199,37)"/><text x="12.0283%" y="767.50"></text></g><g><title>mysql::conn::Conn::next_text (15 samples, 1.73%)</title><rect x="11.7783%" y="741" width="1.7321%" height="15" fill="rgb(244,192,49)"/><text x="12.0283%" y="751.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.12%)</title><rect x="13.3949%" y="725" width="0.1155%" height="15" fill="rgb(226,211,11)"/><text x="13.6449%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="13.3949%" y="709" width="0.1155%" height="15" fill="rgb(236,162,54)"/><text x="13.6449%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="13.3949%" y="693" width="0.1155%" height="15" fill="rgb(220,229,9)"/><text x="13.6449%" y="703.50"></text></g><g><title>[unknown] (81 samples, 9.35%)</title><rect x="4.2725%" y="869" width="9.3533%" height="15" fill="rgb(250,87,22)"/><text x="4.5225%" y="879.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 1.85%)</title><rect x="11.7783%" y="853" width="1.8476%" height="15" fill="rgb(239,43,17)"/><text x="12.0283%" y="863.50">s..</text></g><g><title>decor::Shim::run_on_tcp (16 samples, 1.85%)</title><rect x="11.7783%" y="837" width="1.8476%" height="15" fill="rgb(231,177,25)"/><text x="12.0283%" y="847.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (16 samples, 1.85%)</title><rect x="11.7783%" y="821" width="1.8476%" height="15" fill="rgb(219,179,1)"/><text x="12.0283%" y="831.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (16 samples, 1.85%)</title><rect x="11.7783%" y="805" width="1.8476%" height="15" fill="rgb(238,219,53)"/><text x="12.0283%" y="815.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.12%)</title><rect x="13.5104%" y="789" width="0.1155%" height="15" fill="rgb(232,167,36)"/><text x="13.7604%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.12%)</title><rect x="13.5104%" y="773" width="0.1155%" height="15" fill="rgb(244,19,51)"/><text x="13.7604%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="13.5104%" y="757" width="0.1155%" height="15" fill="rgb(224,6,22)"/><text x="13.7604%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="13.5104%" y="741" width="0.1155%" height="15" fill="rgb(224,145,5)"/><text x="13.7604%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="13.5104%" y="725" width="0.1155%" height="15" fill="rgb(234,130,49)"/><text x="13.7604%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.12%)</title><rect x="13.5104%" y="709" width="0.1155%" height="15" fill="rgb(254,6,2)"/><text x="13.7604%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="13.5104%" y="693" width="0.1155%" height="15" fill="rgb(208,96,46)"/><text x="13.7604%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.12%)</title><rect x="13.5104%" y="677" width="0.1155%" height="15" fill="rgb(239,3,39)"/><text x="13.7604%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.12%)</title><rect x="13.5104%" y="661" width="0.1155%" height="15" fill="rgb(233,210,1)"/><text x="13.7604%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.12%)</title><rect x="13.8568%" y="725" width="0.1155%" height="15" fill="rgb(244,137,37)"/><text x="14.1068%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.12%)</title><rect x="13.8568%" y="709" width="0.1155%" height="15" fill="rgb(240,136,2)"/><text x="14.1068%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.12%)</title><rect x="13.8568%" y="693" width="0.1155%" height="15" fill="rgb(239,18,37)"/><text x="14.1068%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.12%)</title><rect x="13.8568%" y="677" width="0.1155%" height="15" fill="rgb(218,185,22)"/><text x="14.1068%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.12%)</title><rect x="13.8568%" y="661" width="0.1155%" height="15" fill="rgb(225,218,4)"/><text x="14.1068%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="13.8568%" y="645" width="0.1155%" height="15" fill="rgb(230,182,32)"/><text x="14.1068%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.12%)</title><rect x="13.8568%" y="629" width="0.1155%" height="15" fill="rgb(242,56,43)"/><text x="14.1068%" y="639.50"></text></g><g><title>__libc_send (1 samples, 0.12%)</title><rect x="13.8568%" y="613" width="0.1155%" height="15" fill="rgb(233,99,24)"/><text x="14.1068%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="13.8568%" y="597" width="0.1155%" height="15" fill="rgb(234,209,42)"/><text x="14.1068%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="13.8568%" y="581" width="0.1155%" height="15" fill="rgb(227,7,12)"/><text x="14.1068%" y="591.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.12%)</title><rect x="13.8568%" y="565" width="0.1155%" height="15" fill="rgb(245,203,43)"/><text x="14.1068%" y="575.50"></text></g><g><title>__sys_sendto (1 samples, 0.12%)</title><rect x="13.8568%" y="549" width="0.1155%" height="15" fill="rgb(238,205,33)"/><text x="14.1068%" y="559.50"></text></g><g><title>sock_sendmsg (1 samples, 0.12%)</title><rect x="13.8568%" y="533" width="0.1155%" height="15" fill="rgb(231,56,7)"/><text x="14.1068%" y="543.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.12%)</title><rect x="13.8568%" y="517" width="0.1155%" height="15" fill="rgb(244,186,29)"/><text x="14.1068%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.12%)</title><rect x="13.8568%" y="501" width="0.1155%" height="15" fill="rgb(234,111,31)"/><text x="14.1068%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.12%)</title><rect x="13.8568%" y="485" width="0.1155%" height="15" fill="rgb(241,149,10)"/><text x="14.1068%" y="495.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.12%)</title><rect x="13.8568%" y="469" width="0.1155%" height="15" fill="rgb(249,206,44)"/><text x="14.1068%" y="479.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.12%)</title><rect x="13.8568%" y="453" width="0.1155%" height="15" fill="rgb(251,153,30)"/><text x="14.1068%" y="463.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.12%)</title><rect x="13.8568%" y="437" width="0.1155%" height="15" fill="rgb(239,152,38)"/><text x="14.1068%" y="447.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="15.3580%" y="645" width="0.2309%" height="15" fill="rgb(249,139,47)"/><text x="15.6080%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.58%)</title><rect x="15.1270%" y="693" width="0.5774%" height="15" fill="rgb(244,64,35)"/><text x="15.3770%" y="703.50"></text></g><g><title>mysql_common::packets::Column::table_str (3 samples, 0.35%)</title><rect x="15.3580%" y="677" width="0.3464%" height="15" fill="rgb(216,46,15)"/><text x="15.6080%" y="687.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (3 samples, 0.35%)</title><rect x="15.3580%" y="661" width="0.3464%" height="15" fill="rgb(250,74,19)"/><text x="15.6080%" y="671.50"></text></g><g><title>core::str::lossy::Utf8Lossy::chunks (1 samples, 0.12%)</title><rect x="15.5889%" y="645" width="0.1155%" height="15" fill="rgb(249,42,33)"/><text x="15.8389%" y="655.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.12%)</title><rect x="16.1663%" y="677" width="0.1155%" height="15" fill="rgb(242,149,17)"/><text x="16.4163%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="16.2818%" y="677" width="0.1155%" height="15" fill="rgb(244,29,21)"/><text x="16.5318%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="16.6282%" y="661" width="0.1155%" height="15" fill="rgb(220,130,37)"/><text x="16.8782%" y="671.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.12%)</title><rect x="16.7436%" y="661" width="0.1155%" height="15" fill="rgb(211,67,2)"/><text x="16.9936%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.12%)</title><rect x="16.7436%" y="645" width="0.1155%" height="15" fill="rgb(235,68,52)"/><text x="16.9936%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.58%)</title><rect x="16.3972%" y="677" width="0.5774%" height="15" fill="rgb(246,142,3)"/><text x="16.6472%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="16.8591%" y="661" width="0.1155%" height="15" fill="rgb(241,25,7)"/><text x="17.1091%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.50%)</title><rect x="15.7044%" y="693" width="1.5012%" height="15" fill="rgb(242,119,39)"/><text x="15.9544%" y="703.50"></text></g><g><title>mysql_common::row::new_row (2 samples, 0.23%)</title><rect x="16.9746%" y="677" width="0.2309%" height="15" fill="rgb(241,98,45)"/><text x="17.2246%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="17.0901%" y="661" width="0.1155%" height="15" fill="rgb(254,28,30)"/><text x="17.3401%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="17.2055%" y="693" width="0.1155%" height="15" fill="rgb(241,142,54)"/><text x="17.4555%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="17.3210%" y="693" width="0.1155%" height="15" fill="rgb(222,85,15)"/><text x="17.5710%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.12%)</title><rect x="17.4365%" y="693" width="0.1155%" height="15" fill="rgb(210,85,47)"/><text x="17.6865%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.12%)</title><rect x="17.4365%" y="677" width="0.1155%" height="15" fill="rgb(224,206,25)"/><text x="17.6865%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.12%)</title><rect x="17.5520%" y="693" width="0.1155%" height="15" fill="rgb(243,201,19)"/><text x="17.8020%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="17.6674%" y="693" width="0.1155%" height="15" fill="rgb(236,59,4)"/><text x="17.9174%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="17.7829%" y="693" width="0.1155%" height="15" fill="rgb(254,179,45)"/><text x="18.0329%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="17.7829%" y="677" width="0.1155%" height="15" fill="rgb(226,14,10)"/><text x="18.0329%" y="687.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (2 samples, 0.23%)</title><rect x="17.8984%" y="661" width="0.2309%" height="15" fill="rgb(244,27,41)"/><text x="18.1484%" y="671.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.23%)</title><rect x="18.1293%" y="661" width="0.2309%" height="15" fill="rgb(235,35,32)"/><text x="18.3793%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="18.2448%" y="645" width="0.1155%" height="15" fill="rgb(218,68,31)"/><text x="18.4948%" y="655.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (5 samples, 0.58%)</title><rect x="17.8984%" y="693" width="0.5774%" height="15" fill="rgb(207,120,37)"/><text x="18.1484%" y="703.50"></text></g><g><title>msql_srv::writers::column_definitions (5 samples, 0.58%)</title><rect x="17.8984%" y="677" width="0.5774%" height="15" fill="rgb(227,98,0)"/><text x="18.1484%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="18.3603%" y="661" width="0.1155%" height="15" fill="rgb(207,7,3)"/><text x="18.6103%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="18.3603%" y="645" width="0.1155%" height="15" fill="rgb(206,98,19)"/><text x="18.6103%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="18.5912%" y="661" width="0.1155%" height="15" fill="rgb(217,5,26)"/><text x="18.8412%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::end_row (3 samples, 0.35%)</title><rect x="18.4758%" y="693" width="0.3464%" height="15" fill="rgb(235,190,38)"/><text x="18.7258%" y="703.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (3 samples, 0.35%)</title><rect x="18.4758%" y="677" width="0.3464%" height="15" fill="rgb(247,86,24)"/><text x="18.7258%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="18.7067%" y="661" width="0.1155%" height="15" fill="rgb(205,101,16)"/><text x="18.9567%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.23%)</title><rect x="18.8222%" y="693" width="0.2309%" height="15" fill="rgb(246,168,33)"/><text x="19.0722%" y="703.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.12%)</title><rect x="18.9376%" y="677" width="0.1155%" height="15" fill="rgb(231,114,1)"/><text x="19.1876%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="18.9376%" y="661" width="0.1155%" height="15" fill="rgb(207,184,53)"/><text x="19.1876%" y="671.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.23%)</title><rect x="19.2841%" y="661" width="0.2309%" height="15" fill="rgb(224,95,51)"/><text x="19.5341%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.23%)</title><rect x="19.2841%" y="645" width="0.2309%" height="15" fill="rgb(212,188,45)"/><text x="19.5341%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="19.3995%" y="629" width="0.1155%" height="15" fill="rgb(223,154,38)"/><text x="19.6495%" y="639.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (5 samples, 0.58%)</title><rect x="19.0531%" y="677" width="0.5774%" height="15" fill="rgb(251,22,52)"/><text x="19.3031%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="19.5150%" y="661" width="0.1155%" height="15" fill="rgb(229,209,22)"/><text x="19.7650%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="19.5150%" y="645" width="0.1155%" height="15" fill="rgb(234,138,34)"/><text x="19.7650%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="19.6305%" y="677" width="0.1155%" height="15" fill="rgb(212,95,11)"/><text x="19.8805%" y="687.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (8 samples, 0.92%)</title><rect x="19.0531%" y="693" width="0.9238%" height="15" fill="rgb(240,179,47)"/><text x="19.3031%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="19.7460%" y="677" width="0.2309%" height="15" fill="rgb(240,163,11)"/><text x="19.9960%" y="687.50"></text></g><g><title>mysql::conn::query_result::SetColumns::as_ref (1 samples, 0.12%)</title><rect x="19.9769%" y="693" width="0.1155%" height="15" fill="rgb(236,37,12)"/><text x="20.2269%" y="703.50"></text></g><g><title>decor::helpers::answer_rows (55 samples, 6.35%)</title><rect x="14.2032%" y="709" width="6.3510%" height="15" fill="rgb(232,164,16)"/><text x="14.4532%" y="719.50">decor::h..</text></g><g><title>mysql_common::row::Row::unwrap (4 samples, 0.46%)</title><rect x="20.0924%" y="693" width="0.4619%" height="15" fill="rgb(244,205,15)"/><text x="20.3424%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="20.3233%" y="677" width="0.2309%" height="15" fill="rgb(223,117,47)"/><text x="20.5733%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="20.6697%" y="693" width="0.2309%" height="15" fill="rgb(244,107,35)"/><text x="20.9197%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.12%)</title><rect x="21.2471%" y="661" width="0.1155%" height="15" fill="rgb(205,140,8)"/><text x="21.4971%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="21.2471%" y="645" width="0.1155%" height="15" fill="rgb(228,84,46)"/><text x="21.4971%" y="655.50"></text></g><g><title>fput_many (1 samples, 0.12%)</title><rect x="21.8245%" y="485" width="0.1155%" height="15" fill="rgb(254,188,9)"/><text x="22.0745%" y="495.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="21.9400%" y="437" width="0.1155%" height="15" fill="rgb(206,112,54)"/><text x="22.1900%" y="447.50"></text></g><g><title>dst_release (1 samples, 0.12%)</title><rect x="22.0554%" y="421" width="0.1155%" height="15" fill="rgb(216,84,49)"/><text x="22.3054%" y="431.50"></text></g><g><title>__kfree_skb (3 samples, 0.35%)</title><rect x="21.9400%" y="453" width="0.3464%" height="15" fill="rgb(214,194,35)"/><text x="22.1900%" y="463.50"></text></g><g><title>skb_release_head_state (2 samples, 0.23%)</title><rect x="22.0554%" y="437" width="0.2309%" height="15" fill="rgb(249,28,3)"/><text x="22.3054%" y="447.50"></text></g><g><title>sock_rfree (1 samples, 0.12%)</title><rect x="22.1709%" y="421" width="0.1155%" height="15" fill="rgb(222,56,52)"/><text x="22.4209%" y="431.50"></text></g><g><title>lock_sock_nested (1 samples, 0.12%)</title><rect x="22.2864%" y="453" width="0.1155%" height="15" fill="rgb(245,217,50)"/><text x="22.5364%" y="463.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="22.2864%" y="437" width="0.1155%" height="15" fill="rgb(213,201,24)"/><text x="22.5364%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="22.2864%" y="421" width="0.1155%" height="15" fill="rgb(248,116,28)"/><text x="22.5364%" y="431.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.12%)</title><rect x="22.4018%" y="453" width="0.1155%" height="15" fill="rgb(219,72,43)"/><text x="22.6518%" y="463.50"></text></g><g><title>release_sock (1 samples, 0.12%)</title><rect x="22.5173%" y="453" width="0.1155%" height="15" fill="rgb(209,138,14)"/><text x="22.7673%" y="463.50"></text></g><g><title>tcp_release_cb (1 samples, 0.12%)</title><rect x="22.5173%" y="437" width="0.1155%" height="15" fill="rgb(222,18,33)"/><text x="22.7673%" y="447.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.23%)</title><rect x="22.8637%" y="437" width="0.2309%" height="15" fill="rgb(213,199,7)"/><text x="23.1137%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="22.9792%" y="421" width="0.1155%" height="15" fill="rgb(250,110,10)"/><text x="23.2292%" y="431.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.23%)</title><rect x="23.0947%" y="437" width="0.2309%" height="15" fill="rgb(248,123,6)"/><text x="23.3447%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="23.2102%" y="421" width="0.1155%" height="15" fill="rgb(206,91,31)"/><text x="23.4602%" y="431.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.23%)</title><rect x="23.3256%" y="437" width="0.2309%" height="15" fill="rgb(211,154,13)"/><text x="23.5756%" y="447.50"></text></g><g><title>preempt_count_sub (2 samples, 0.23%)</title><rect x="23.3256%" y="421" width="0.2309%" height="15" fill="rgb(225,148,7)"/><text x="23.5756%" y="431.50"></text></g><g><title>release_sock (1 samples, 0.12%)</title><rect x="23.5566%" y="437" width="0.1155%" height="15" fill="rgb(220,160,43)"/><text x="23.8066%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="23.5566%" y="421" width="0.1155%" height="15" fill="rgb(213,52,39)"/><text x="23.8066%" y="431.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.12%)</title><rect x="24.0185%" y="341" width="0.1155%" height="15" fill="rgb(243,137,7)"/><text x="24.2685%" y="351.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.12%)</title><rect x="24.0185%" y="325" width="0.1155%" height="15" fill="rgb(230,79,13)"/><text x="24.2685%" y="335.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.35%)</title><rect x="23.9030%" y="373" width="0.3464%" height="15" fill="rgb(247,105,23)"/><text x="24.1530%" y="383.50"></text></g><g><title>ctx_sched_out (2 samples, 0.23%)</title><rect x="24.0185%" y="357" width="0.2309%" height="15" fill="rgb(223,179,41)"/><text x="24.2685%" y="367.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.12%)</title><rect x="24.1339%" y="341" width="0.1155%" height="15" fill="rgb(218,9,34)"/><text x="24.3839%" y="351.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.23%)</title><rect x="24.2494%" y="373" width="0.2309%" height="15" fill="rgb(222,106,8)"/><text x="24.4994%" y="383.50"></text></g><g><title>dequeue_entity (1 samples, 0.12%)</title><rect x="24.3649%" y="357" width="0.1155%" height="15" fill="rgb(211,220,0)"/><text x="24.6149%" y="367.50"></text></g><g><title>update_curr (1 samples, 0.12%)</title><rect x="24.3649%" y="341" width="0.1155%" height="15" fill="rgb(229,52,16)"/><text x="24.6149%" y="351.50"></text></g><g><title>finish_task_switch (2 samples, 0.23%)</title><rect x="24.4804%" y="373" width="0.2309%" height="15" fill="rgb(212,155,18)"/><text x="24.7304%" y="383.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.12%)</title><rect x="24.5958%" y="357" width="0.1155%" height="15" fill="rgb(242,21,14)"/><text x="24.8458%" y="367.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.12%)</title><rect x="24.7113%" y="373" width="0.1155%" height="15" fill="rgb(222,19,48)"/><text x="24.9613%" y="383.50"></text></g><g><title>newidle_balance (1 samples, 0.12%)</title><rect x="24.7113%" y="357" width="0.1155%" height="15" fill="rgb(232,45,27)"/><text x="24.9613%" y="367.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="24.7113%" y="341" width="0.1155%" height="15" fill="rgb(249,103,42)"/><text x="24.9613%" y="351.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.12%)</title><rect x="24.8268%" y="373" width="0.1155%" height="15" fill="rgb(246,81,33)"/><text x="25.0768%" y="383.50"></text></g><g><title>psi_task_change (2 samples, 0.23%)</title><rect x="24.9423%" y="373" width="0.2309%" height="15" fill="rgb(252,33,42)"/><text x="25.1923%" y="383.50"></text></g><g><title>psi_group_change (2 samples, 0.23%)</title><rect x="24.9423%" y="357" width="0.2309%" height="15" fill="rgb(209,212,41)"/><text x="25.1923%" y="367.50"></text></g><g><title>record_times (2 samples, 0.23%)</title><rect x="24.9423%" y="341" width="0.2309%" height="15" fill="rgb(207,154,6)"/><text x="25.1923%" y="351.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.12%)</title><rect x="25.1732%" y="373" width="0.1155%" height="15" fill="rgb(223,64,47)"/><text x="25.4232%" y="383.50"></text></g><g><title>__schedule (13 samples, 1.50%)</title><rect x="23.9030%" y="389" width="1.5012%" height="15" fill="rgb(211,161,38)"/><text x="24.1530%" y="399.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.12%)</title><rect x="25.2887%" y="373" width="0.1155%" height="15" fill="rgb(219,138,40)"/><text x="25.5387%" y="383.50"></text></g><g><title>sk_wait_data (25 samples, 2.89%)</title><rect x="22.6328%" y="453" width="2.8868%" height="15" fill="rgb(241,228,46)"/><text x="22.8828%" y="463.50">sk..</text></g><g><title>wait_woken (16 samples, 1.85%)</title><rect x="23.6721%" y="437" width="1.8476%" height="15" fill="rgb(223,209,38)"/><text x="23.9221%" y="447.50">w..</text></g><g><title>schedule_timeout (16 samples, 1.85%)</title><rect x="23.6721%" y="421" width="1.8476%" height="15" fill="rgb(236,164,45)"/><text x="23.9221%" y="431.50">s..</text></g><g><title>schedule (15 samples, 1.73%)</title><rect x="23.7875%" y="405" width="1.7321%" height="15" fill="rgb(231,15,5)"/><text x="24.0375%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="25.4042%" y="389" width="0.1155%" height="15" fill="rgb(252,35,15)"/><text x="25.6542%" y="399.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.58%)</title><rect x="25.5196%" y="453" width="0.5774%" height="15" fill="rgb(248,181,18)"/><text x="25.7696%" y="463.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.46%)</title><rect x="25.6351%" y="437" width="0.4619%" height="15" fill="rgb(233,39,42)"/><text x="25.8851%" y="447.50"></text></g><g><title>_copy_to_iter (4 samples, 0.46%)</title><rect x="25.6351%" y="421" width="0.4619%" height="15" fill="rgb(238,110,33)"/><text x="25.8851%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (3 samples, 0.35%)</title><rect x="25.7506%" y="405" width="0.3464%" height="15" fill="rgb(233,195,10)"/><text x="26.0006%" y="415.50"></text></g><g><title>page_fault (2 samples, 0.23%)</title><rect x="25.8661%" y="389" width="0.2309%" height="15" fill="rgb(254,105,3)"/><text x="26.1161%" y="399.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="25.9815%" y="373" width="0.1155%" height="15" fill="rgb(221,225,9)"/><text x="26.2315%" y="383.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="25.9815%" y="357" width="0.1155%" height="15" fill="rgb(224,227,45)"/><text x="26.2315%" y="367.50"></text></g><g><title>sync_mm_rss (1 samples, 0.12%)</title><rect x="25.9815%" y="341" width="0.1155%" height="15" fill="rgb(229,198,43)"/><text x="26.2315%" y="351.50"></text></g><g><title>do_syscall_64 (40 samples, 4.62%)</title><rect x="21.5935%" y="533" width="4.6189%" height="15" fill="rgb(206,209,35)"/><text x="21.8435%" y="543.50">do_sy..</text></g><g><title>__x64_sys_recvfrom (40 samples, 4.62%)</title><rect x="21.5935%" y="517" width="4.6189%" height="15" fill="rgb(245,195,53)"/><text x="21.8435%" y="527.50">__x64..</text></g><g><title>__sys_recvfrom (40 samples, 4.62%)</title><rect x="21.5935%" y="501" width="4.6189%" height="15" fill="rgb(240,92,26)"/><text x="21.8435%" y="511.50">__sys..</text></g><g><title>inet_recvmsg (37 samples, 4.27%)</title><rect x="21.9400%" y="485" width="4.2725%" height="15" fill="rgb(207,40,23)"/><text x="22.1900%" y="495.50">inet_..</text></g><g><title>tcp_recvmsg (37 samples, 4.27%)</title><rect x="21.9400%" y="469" width="4.2725%" height="15" fill="rgb(223,111,35)"/><text x="22.1900%" y="479.50">tcp_r..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.12%)</title><rect x="26.0970%" y="453" width="0.1155%" height="15" fill="rgb(229,147,28)"/><text x="26.3470%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (43 samples, 4.97%)</title><rect x="21.5935%" y="549" width="4.9654%" height="15" fill="rgb(211,29,28)"/><text x="21.8435%" y="559.50">entry_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.35%)</title><rect x="26.2125%" y="533" width="0.3464%" height="15" fill="rgb(228,72,33)"/><text x="26.4625%" y="543.50"></text></g><g><title>switch_fpu_return (1 samples, 0.12%)</title><rect x="26.4434%" y="517" width="0.1155%" height="15" fill="rgb(205,214,31)"/><text x="26.6934%" y="527.50"></text></g><g><title>__libc_recv (47 samples, 5.43%)</title><rect x="21.5935%" y="565" width="5.4273%" height="15" fill="rgb(224,111,15)"/><text x="21.8435%" y="575.50">__libc_..</text></g><g><title>syscall_return_via_sysret (4 samples, 0.46%)</title><rect x="26.5589%" y="549" width="0.4619%" height="15" fill="rgb(253,21,26)"/><text x="26.8089%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (48 samples, 5.54%)</title><rect x="21.5935%" y="645" width="5.5427%" height="15" fill="rgb(245,139,43)"/><text x="21.8435%" y="655.50">&lt;std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (48 samples, 5.54%)</title><rect x="21.5935%" y="629" width="5.5427%" height="15" fill="rgb(252,170,7)"/><text x="21.8435%" y="639.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (48 samples, 5.54%)</title><rect x="21.5935%" y="613" width="5.5427%" height="15" fill="rgb(231,118,14)"/><text x="21.8435%" y="623.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (48 samples, 5.54%)</title><rect x="21.5935%" y="597" width="5.5427%" height="15" fill="rgb(238,83,0)"/><text x="21.8435%" y="607.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (48 samples, 5.54%)</title><rect x="21.5935%" y="581" width="5.5427%" height="15" fill="rgb(221,39,39)"/><text x="21.8435%" y="591.50">std::sy..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.12%)</title><rect x="27.0208%" y="565" width="0.1155%" height="15" fill="rgb(222,119,46)"/><text x="27.2708%" y="575.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.12%)</title><rect x="27.0208%" y="549" width="0.1155%" height="15" fill="rgb(222,165,49)"/><text x="27.2708%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 5.89%)</title><rect x="21.3626%" y="661" width="5.8891%" height="15" fill="rgb(219,113,52)"/><text x="21.6126%" y="671.50">&lt;mysql_..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.12%)</title><rect x="27.1363%" y="645" width="0.1155%" height="15" fill="rgb(214,7,15)"/><text x="27.3863%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.12%)</title><rect x="27.1363%" y="629" width="0.1155%" height="15" fill="rgb(235,32,4)"/><text x="27.3863%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="27.2517%" y="661" width="0.1155%" height="15" fill="rgb(238,90,54)"/><text x="27.5017%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (56 samples, 6.47%)</title><rect x="21.2471%" y="677" width="6.4665%" height="15" fill="rgb(213,208,19)"/><text x="21.4971%" y="687.50">mysql::c..</text></g><g><title>_int_free (3 samples, 0.35%)</title><rect x="27.3672%" y="661" width="0.3464%" height="15" fill="rgb(233,156,4)"/><text x="27.6172%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (60 samples, 6.93%)</title><rect x="20.9007%" y="693" width="6.9284%" height="15" fill="rgb(207,194,5)"/><text x="21.1507%" y="703.50">mysql::co..</text></g><g><title>mysql_common::packets::column_from_payload (1 samples, 0.12%)</title><rect x="27.7136%" y="677" width="0.1155%" height="15" fill="rgb(206,111,30)"/><text x="27.9636%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.23%)</title><rect x="27.9446%" y="613" width="0.2309%" height="15" fill="rgb(243,70,54)"/><text x="28.1946%" y="623.50"></text></g><g><title>inet_sendmsg (1 samples, 0.12%)</title><rect x="28.1755%" y="533" width="0.1155%" height="15" fill="rgb(242,28,8)"/><text x="28.4255%" y="543.50"></text></g><g><title>inet_send_prepare (1 samples, 0.12%)</title><rect x="28.1755%" y="517" width="0.1155%" height="15" fill="rgb(219,106,18)"/><text x="28.4255%" y="527.50"></text></g><g><title>__ip_local_out (1 samples, 0.12%)</title><rect x="28.7529%" y="437" width="0.1155%" height="15" fill="rgb(244,222,10)"/><text x="29.0029%" y="447.50"></text></g><g><title>ip_send_check (1 samples, 0.12%)</title><rect x="28.7529%" y="421" width="0.1155%" height="15" fill="rgb(236,179,52)"/><text x="29.0029%" y="431.50"></text></g><g><title>__sk_dst_check (1 samples, 0.12%)</title><rect x="28.8684%" y="437" width="0.1155%" height="15" fill="rgb(213,23,39)"/><text x="29.1184%" y="447.50"></text></g><g><title>__ip_finish_output (1 samples, 0.12%)</title><rect x="28.9838%" y="421" width="0.1155%" height="15" fill="rgb(238,48,10)"/><text x="29.2338%" y="431.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="29.2148%" y="325" width="0.1155%" height="15" fill="rgb(251,196,23)"/><text x="29.4648%" y="335.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="29.2148%" y="389" width="0.2309%" height="15" fill="rgb(250,152,24)"/><text x="29.4648%" y="399.50"></text></g><g><title>loopback_xmit (2 samples, 0.23%)</title><rect x="29.2148%" y="373" width="0.2309%" height="15" fill="rgb(209,150,17)"/><text x="29.4648%" y="383.50"></text></g><g><title>netif_rx (2 samples, 0.23%)</title><rect x="29.2148%" y="357" width="0.2309%" height="15" fill="rgb(234,202,34)"/><text x="29.4648%" y="367.50"></text></g><g><title>netif_rx_internal (2 samples, 0.23%)</title><rect x="29.2148%" y="341" width="0.2309%" height="15" fill="rgb(253,148,53)"/><text x="29.4648%" y="351.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.12%)</title><rect x="29.3303%" y="325" width="0.1155%" height="15" fill="rgb(218,129,16)"/><text x="29.5803%" y="335.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.46%)</title><rect x="29.0993%" y="405" width="0.4619%" height="15" fill="rgb(216,85,19)"/><text x="29.3493%" y="415.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.12%)</title><rect x="29.4457%" y="389" width="0.1155%" height="15" fill="rgb(235,228,7)"/><text x="29.6957%" y="399.50"></text></g><g><title>netif_skb_features (1 samples, 0.12%)</title><rect x="29.4457%" y="373" width="0.1155%" height="15" fill="rgb(245,175,0)"/><text x="29.6957%" y="383.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.23%)</title><rect x="30.2540%" y="293" width="0.2309%" height="15" fill="rgb(208,168,36)"/><text x="30.5040%" y="303.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.23%)</title><rect x="30.8314%" y="213" width="0.2309%" height="15" fill="rgb(246,171,24)"/><text x="31.0814%" y="223.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="31.7552%" y="101" width="0.1155%" height="15" fill="rgb(215,142,24)"/><text x="32.0052%" y="111.50"></text></g><g><title>psi_task_change (2 samples, 0.23%)</title><rect x="31.8707%" y="85" width="0.2309%" height="15" fill="rgb(250,187,7)"/><text x="32.1207%" y="95.50"></text></g><g><title>psi_group_change (2 samples, 0.23%)</title><rect x="31.8707%" y="69" width="0.2309%" height="15" fill="rgb(228,66,33)"/><text x="32.1207%" y="79.50"></text></g><g><title>enqueue_task (4 samples, 0.46%)</title><rect x="31.8707%" y="101" width="0.4619%" height="15" fill="rgb(234,215,21)"/><text x="32.1207%" y="111.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.23%)</title><rect x="32.1016%" y="85" width="0.2309%" height="15" fill="rgb(222,191,20)"/><text x="32.3516%" y="95.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.12%)</title><rect x="32.4480%" y="69" width="0.1155%" height="15" fill="rgb(245,79,54)"/><text x="32.6980%" y="79.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.58%)</title><rect x="32.3326%" y="101" width="0.5774%" height="15" fill="rgb(240,10,37)"/><text x="32.5826%" y="111.50"></text></g><g><title>enqueue_entity (5 samples, 0.58%)</title><rect x="32.3326%" y="85" width="0.5774%" height="15" fill="rgb(214,192,32)"/><text x="32.5826%" y="95.50"></text></g><g><title>update_load_avg (3 samples, 0.35%)</title><rect x="32.5635%" y="69" width="0.3464%" height="15" fill="rgb(209,36,54)"/><text x="32.8135%" y="79.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.35%)</title><rect x="32.5635%" y="53" width="0.3464%" height="15" fill="rgb(220,10,11)"/><text x="32.8135%" y="63.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="32.9099%" y="101" width="0.1155%" height="15" fill="rgb(221,106,17)"/><text x="33.1599%" y="111.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.35%)</title><rect x="33.0254%" y="101" width="0.3464%" height="15" fill="rgb(251,142,44)"/><text x="33.2754%" y="111.50"></text></g><g><title>available_idle_cpu (1 samples, 0.12%)</title><rect x="33.2564%" y="85" width="0.1155%" height="15" fill="rgb(238,13,15)"/><text x="33.5064%" y="95.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.12%)</title><rect x="33.3718%" y="101" width="0.1155%" height="15" fill="rgb(208,107,27)"/><text x="33.6218%" y="111.50"></text></g><g><title>check_preempt_curr (1 samples, 0.12%)</title><rect x="33.3718%" y="85" width="0.1155%" height="15" fill="rgb(205,136,37)"/><text x="33.6218%" y="95.50"></text></g><g><title>resched_curr (1 samples, 0.12%)</title><rect x="33.3718%" y="69" width="0.1155%" height="15" fill="rgb(250,205,27)"/><text x="33.6218%" y="79.50"></text></g><g><title>__wake_up_common (19 samples, 2.19%)</title><rect x="31.4088%" y="149" width="2.1940%" height="15" fill="rgb(210,80,43)"/><text x="31.6588%" y="159.50">_..</text></g><g><title>pollwake (19 samples, 2.19%)</title><rect x="31.4088%" y="133" width="2.1940%" height="15" fill="rgb(247,160,36)"/><text x="31.6588%" y="143.50">p..</text></g><g><title>try_to_wake_up (19 samples, 2.19%)</title><rect x="31.4088%" y="117" width="2.1940%" height="15" fill="rgb(234,13,49)"/><text x="31.6588%" y="127.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.12%)</title><rect x="33.4873%" y="101" width="0.1155%" height="15" fill="rgb(234,122,0)"/><text x="33.7373%" y="111.50"></text></g><g><title>sock_def_readable (21 samples, 2.42%)</title><rect x="31.2933%" y="181" width="2.4249%" height="15" fill="rgb(207,146,38)"/><text x="31.5433%" y="191.50">so..</text></g><g><title>__wake_up_common_lock (20 samples, 2.31%)</title><rect x="31.4088%" y="165" width="2.3095%" height="15" fill="rgb(207,177,25)"/><text x="31.6588%" y="175.50">_..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="33.6028%" y="149" width="0.1155%" height="15" fill="rgb(211,178,42)"/><text x="33.8528%" y="159.50"></text></g><g><title>kfree (2 samples, 0.23%)</title><rect x="34.0647%" y="149" width="0.2309%" height="15" fill="rgb(230,69,54)"/><text x="34.3147%" y="159.50"></text></g><g><title>__kfree_skb (3 samples, 0.35%)</title><rect x="34.0647%" y="165" width="0.3464%" height="15" fill="rgb(214,135,41)"/><text x="34.3147%" y="175.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="34.2956%" y="149" width="0.1155%" height="15" fill="rgb(237,67,25)"/><text x="34.5456%" y="159.50"></text></g><g><title>kmem_cache_free (1 samples, 0.12%)</title><rect x="34.4111%" y="165" width="0.1155%" height="15" fill="rgb(222,189,50)"/><text x="34.6611%" y="175.50"></text></g><g><title>__slab_free (1 samples, 0.12%)</title><rect x="34.4111%" y="149" width="0.1155%" height="15" fill="rgb(245,148,34)"/><text x="34.6611%" y="159.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.23%)</title><rect x="34.5266%" y="165" width="0.2309%" height="15" fill="rgb(222,29,6)"/><text x="34.7766%" y="175.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="34.7575%" y="165" width="0.1155%" height="15" fill="rgb(221,189,43)"/><text x="35.0075%" y="175.50"></text></g><g><title>tcp_ack (11 samples, 1.27%)</title><rect x="33.7182%" y="181" width="1.2702%" height="15" fill="rgb(207,36,27)"/><text x="33.9682%" y="191.50"></text></g><g><title>tcp_xmit_recovery (1 samples, 0.12%)</title><rect x="34.8730%" y="165" width="0.1155%" height="15" fill="rgb(217,90,24)"/><text x="35.1230%" y="175.50"></text></g><g><title>tcp_check_space (1 samples, 0.12%)</title><rect x="34.9885%" y="181" width="0.1155%" height="15" fill="rgb(224,66,35)"/><text x="35.2385%" y="191.50"></text></g><g><title>tcp_data_queue (1 samples, 0.12%)</title><rect x="35.1039%" y="181" width="0.1155%" height="15" fill="rgb(221,13,50)"/><text x="35.3539%" y="191.50"></text></g><g><title>sock_def_readable (1 samples, 0.12%)</title><rect x="35.1039%" y="165" width="0.1155%" height="15" fill="rgb(236,68,49)"/><text x="35.3539%" y="175.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.12%)</title><rect x="35.1039%" y="149" width="0.1155%" height="15" fill="rgb(229,146,28)"/><text x="35.3539%" y="159.50"></text></g><g><title>__wake_up_common (1 samples, 0.12%)</title><rect x="35.1039%" y="133" width="0.1155%" height="15" fill="rgb(225,31,38)"/><text x="35.3539%" y="143.50"></text></g><g><title>pollwake (1 samples, 0.12%)</title><rect x="35.1039%" y="117" width="0.1155%" height="15" fill="rgb(250,208,3)"/><text x="35.3539%" y="127.50"></text></g><g><title>try_to_wake_up (1 samples, 0.12%)</title><rect x="35.1039%" y="101" width="0.1155%" height="15" fill="rgb(246,54,23)"/><text x="35.3539%" y="111.50"></text></g><g><title>enqueue_task (1 samples, 0.12%)</title><rect x="35.1039%" y="85" width="0.1155%" height="15" fill="rgb(243,76,11)"/><text x="35.3539%" y="95.50"></text></g><g><title>psi_task_change (1 samples, 0.12%)</title><rect x="35.1039%" y="69" width="0.1155%" height="15" fill="rgb(245,21,50)"/><text x="35.3539%" y="79.50"></text></g><g><title>psi_group_change (1 samples, 0.12%)</title><rect x="35.1039%" y="53" width="0.1155%" height="15" fill="rgb(228,9,43)"/><text x="35.3539%" y="63.50"></text></g><g><title>record_times (1 samples, 0.12%)</title><rect x="35.1039%" y="37" width="0.1155%" height="15" fill="rgb(208,100,47)"/><text x="35.3539%" y="47.50"></text></g><g><title>ip_local_deliver (42 samples, 4.85%)</title><rect x="30.4850%" y="277" width="4.8499%" height="15" fill="rgb(232,26,8)"/><text x="30.7350%" y="287.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (41 samples, 4.73%)</title><rect x="30.6005%" y="261" width="4.7344%" height="15" fill="rgb(216,166,38)"/><text x="30.8505%" y="271.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (39 samples, 4.50%)</title><rect x="30.8314%" y="245" width="4.5035%" height="15" fill="rgb(251,202,51)"/><text x="31.0814%" y="255.50">ip_pr..</text></g><g><title>tcp_v4_rcv (39 samples, 4.50%)</title><rect x="30.8314%" y="229" width="4.5035%" height="15" fill="rgb(254,216,34)"/><text x="31.0814%" y="239.50">tcp_v..</text></g><g><title>tcp_v4_do_rcv (37 samples, 4.27%)</title><rect x="31.0624%" y="213" width="4.2725%" height="15" fill="rgb(251,32,27)"/><text x="31.3124%" y="223.50">tcp_v..</text></g><g><title>tcp_rcv_established (37 samples, 4.27%)</title><rect x="31.0624%" y="197" width="4.2725%" height="15" fill="rgb(208,127,28)"/><text x="31.3124%" y="207.50">tcp_r..</text></g><g><title>tcp_event_data_recv (1 samples, 0.12%)</title><rect x="35.2194%" y="181" width="0.1155%" height="15" fill="rgb(224,137,22)"/><text x="35.4694%" y="191.50"></text></g><g><title>do_softirq (54 samples, 6.24%)</title><rect x="29.5612%" y="389" width="6.2356%" height="15" fill="rgb(254,70,32)"/><text x="29.8112%" y="399.50">do_softi..</text></g><g><title>do_softirq_own_stack (54 samples, 6.24%)</title><rect x="29.5612%" y="373" width="6.2356%" height="15" fill="rgb(229,75,37)"/><text x="29.8112%" y="383.50">do_softi..</text></g><g><title>__do_softirq (53 samples, 6.12%)</title><rect x="29.6767%" y="357" width="6.1201%" height="15" fill="rgb(252,64,23)"/><text x="29.9267%" y="367.50">__do_sof..</text></g><g><title>net_rx_action (53 samples, 6.12%)</title><rect x="29.6767%" y="341" width="6.1201%" height="15" fill="rgb(232,162,48)"/><text x="29.9267%" y="351.50">net_rx_a..</text></g><g><title>process_backlog (52 samples, 6.00%)</title><rect x="29.7921%" y="325" width="6.0046%" height="15" fill="rgb(246,160,12)"/><text x="30.0421%" y="335.50">process_..</text></g><g><title>__netif_receive_skb_one_core (50 samples, 5.77%)</title><rect x="30.0231%" y="309" width="5.7737%" height="15" fill="rgb(247,166,0)"/><text x="30.2731%" y="319.50">__netif..</text></g><g><title>ip_rcv (46 samples, 5.31%)</title><rect x="30.4850%" y="293" width="5.3118%" height="15" fill="rgb(249,219,21)"/><text x="30.7350%" y="303.50">ip_rcv</text></g><g><title>ip_rcv_core (4 samples, 0.46%)</title><rect x="35.3349%" y="277" width="0.4619%" height="15" fill="rgb(205,209,3)"/><text x="35.5849%" y="287.50"></text></g><g><title>ip_finish_output2 (59 samples, 6.81%)</title><rect x="29.0993%" y="421" width="6.8129%" height="15" fill="rgb(243,44,1)"/><text x="29.3493%" y="431.50">ip_finish..</text></g><g><title>__local_bh_enable_ip (55 samples, 6.35%)</title><rect x="29.5612%" y="405" width="6.3510%" height="15" fill="rgb(206,159,16)"/><text x="29.8112%" y="415.50">__local_..</text></g><g><title>preempt_schedule_thunk (1 samples, 0.12%)</title><rect x="35.7968%" y="389" width="0.1155%" height="15" fill="rgb(244,77,30)"/><text x="36.0468%" y="399.50"></text></g><g><title>preempt_schedule_common (1 samples, 0.12%)</title><rect x="35.7968%" y="373" width="0.1155%" height="15" fill="rgb(218,69,12)"/><text x="36.0468%" y="383.50"></text></g><g><title>__schedule (1 samples, 0.12%)</title><rect x="35.7968%" y="357" width="0.1155%" height="15" fill="rgb(212,87,7)"/><text x="36.0468%" y="367.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.12%)</title><rect x="35.7968%" y="341" width="0.1155%" height="15" fill="rgb(245,114,25)"/><text x="36.0468%" y="351.50"></text></g><g><title>set_next_entity (1 samples, 0.12%)</title><rect x="35.7968%" y="325" width="0.1155%" height="15" fill="rgb(210,61,42)"/><text x="36.0468%" y="335.50"></text></g><g><title>update_load_avg (1 samples, 0.12%)</title><rect x="35.7968%" y="309" width="0.1155%" height="15" fill="rgb(211,52,33)"/><text x="36.0468%" y="319.50"></text></g><g><title>__ip_queue_xmit (66 samples, 7.62%)</title><rect x="28.5219%" y="453" width="7.6212%" height="15" fill="rgb(234,58,33)"/><text x="28.7719%" y="463.50">__ip_queue..</text></g><g><title>ip_output (62 samples, 7.16%)</title><rect x="28.9838%" y="437" width="7.1594%" height="15" fill="rgb(220,115,36)"/><text x="29.2338%" y="447.50">ip_output</text></g><g><title>ip_finish_output (2 samples, 0.23%)</title><rect x="35.9122%" y="421" width="0.2309%" height="15" fill="rgb(243,153,54)"/><text x="36.1622%" y="431.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.23%)</title><rect x="35.9122%" y="405" width="0.2309%" height="15" fill="rgb(251,47,18)"/><text x="36.1622%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="36.0277%" y="389" width="0.1155%" height="15" fill="rgb(242,102,42)"/><text x="36.2777%" y="399.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.12%)</title><rect x="36.1432%" y="453" width="0.1155%" height="15" fill="rgb(234,31,38)"/><text x="36.3932%" y="463.50"></text></g><g><title>skb_clone (2 samples, 0.23%)</title><rect x="36.2587%" y="453" width="0.2309%" height="15" fill="rgb(221,117,51)"/><text x="36.5087%" y="463.50"></text></g><g><title>__copy_skb_header (1 samples, 0.12%)</title><rect x="36.3741%" y="437" width="0.1155%" height="15" fill="rgb(212,20,18)"/><text x="36.6241%" y="447.50"></text></g><g><title>__tcp_transmit_skb (71 samples, 8.20%)</title><rect x="28.4065%" y="469" width="8.1986%" height="15" fill="rgb(245,133,36)"/><text x="28.6565%" y="479.50">__tcp_trans..</text></g><g><title>tcp_v4_send_check (1 samples, 0.12%)</title><rect x="36.4896%" y="453" width="0.1155%" height="15" fill="rgb(212,6,19)"/><text x="36.7396%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (72 samples, 8.31%)</title><rect x="28.4065%" y="501" width="8.3141%" height="15" fill="rgb(218,1,36)"/><text x="28.6565%" y="511.50">__tcp_push_p..</text></g><g><title>tcp_write_xmit (72 samples, 8.31%)</title><rect x="28.4065%" y="485" width="8.3141%" height="15" fill="rgb(246,84,54)"/><text x="28.6565%" y="495.50">tcp_write_xm..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.12%)</title><rect x="36.6051%" y="469" width="0.1155%" height="15" fill="rgb(242,110,6)"/><text x="36.8551%" y="479.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.12%)</title><rect x="36.6051%" y="453" width="0.1155%" height="15" fill="rgb(214,47,5)"/><text x="36.8551%" y="463.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.12%)</title><rect x="36.7206%" y="501" width="0.1155%" height="15" fill="rgb(218,159,25)"/><text x="36.9706%" y="511.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.12%)</title><rect x="36.7206%" y="485" width="0.1155%" height="15" fill="rgb(215,211,28)"/><text x="36.9706%" y="495.50"></text></g><g><title>kmalloc_slab (1 samples, 0.12%)</title><rect x="36.9515%" y="453" width="0.1155%" height="15" fill="rgb(238,59,32)"/><text x="37.2015%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.35%)</title><rect x="36.8360%" y="469" width="0.3464%" height="15" fill="rgb(226,82,3)"/><text x="37.0860%" y="479.50"></text></g><g><title>memset_erms (1 samples, 0.12%)</title><rect x="37.0670%" y="453" width="0.1155%" height="15" fill="rgb(240,164,32)"/><text x="37.3170%" y="463.50"></text></g><g><title>__ksize (1 samples, 0.12%)</title><rect x="37.1824%" y="469" width="0.1155%" height="15" fill="rgb(232,46,7)"/><text x="37.4324%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.58%)</title><rect x="36.8360%" y="501" width="0.5774%" height="15" fill="rgb(229,129,53)"/><text x="37.0860%" y="511.50"></text></g><g><title>__alloc_skb (5 samples, 0.58%)</title><rect x="36.8360%" y="485" width="0.5774%" height="15" fill="rgb(234,188,29)"/><text x="37.0860%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="37.2979%" y="469" width="0.1155%" height="15" fill="rgb(246,141,4)"/><text x="37.5479%" y="479.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.12%)</title><rect x="37.2979%" y="453" width="0.1155%" height="15" fill="rgb(229,23,39)"/><text x="37.5479%" y="463.50"></text></g><g><title>___slab_alloc (1 samples, 0.12%)</title><rect x="37.2979%" y="437" width="0.1155%" height="15" fill="rgb(206,12,3)"/><text x="37.5479%" y="447.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.23%)</title><rect x="37.4134%" y="501" width="0.2309%" height="15" fill="rgb(252,226,20)"/><text x="37.6634%" y="511.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.23%)</title><rect x="37.4134%" y="485" width="0.2309%" height="15" fill="rgb(216,123,35)"/><text x="37.6634%" y="495.50"></text></g><g><title>iov_iter_advance (2 samples, 0.23%)</title><rect x="37.4134%" y="469" width="0.2309%" height="15" fill="rgb(212,68,40)"/><text x="37.6634%" y="479.50"></text></g><g><title>skb_entail (1 samples, 0.12%)</title><rect x="37.6443%" y="501" width="0.1155%" height="15" fill="rgb(254,125,32)"/><text x="37.8943%" y="511.50"></text></g><g><title>sock_sendmsg (85 samples, 9.82%)</title><rect x="28.1755%" y="549" width="9.8152%" height="15" fill="rgb(253,97,22)"/><text x="28.4255%" y="559.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (84 samples, 9.70%)</title><rect x="28.2910%" y="533" width="9.6998%" height="15" fill="rgb(241,101,14)"/><text x="28.5410%" y="543.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (84 samples, 9.70%)</title><rect x="28.2910%" y="517" width="9.6998%" height="15" fill="rgb(238,103,29)"/><text x="28.5410%" y="527.50">tcp_sendmsg_lo..</text></g><g><title>tcp_send_mss (2 samples, 0.23%)</title><rect x="37.7598%" y="501" width="0.2309%" height="15" fill="rgb(233,195,47)"/><text x="38.0098%" y="511.50"></text></g><g><title>tcp_current_mss (2 samples, 0.23%)</title><rect x="37.7598%" y="485" width="0.2309%" height="15" fill="rgb(246,218,30)"/><text x="38.0098%" y="495.50"></text></g><g><title>__x64_sys_sendto (88 samples, 10.16%)</title><rect x="28.1755%" y="581" width="10.1617%" height="15" fill="rgb(219,145,47)"/><text x="28.4255%" y="591.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (88 samples, 10.16%)</title><rect x="28.1755%" y="565" width="10.1617%" height="15" fill="rgb(243,12,26)"/><text x="28.4255%" y="575.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (3 samples, 0.35%)</title><rect x="37.9908%" y="549" width="0.3464%" height="15" fill="rgb(214,87,16)"/><text x="38.2408%" y="559.50"></text></g><g><title>__fget_light (2 samples, 0.23%)</title><rect x="38.1062%" y="533" width="0.2309%" height="15" fill="rgb(208,99,42)"/><text x="38.3562%" y="543.50"></text></g><g><title>__fget_files (2 samples, 0.23%)</title><rect x="38.1062%" y="517" width="0.2309%" height="15" fill="rgb(253,99,2)"/><text x="38.3562%" y="527.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="38.2217%" y="501" width="0.1155%" height="15" fill="rgb(220,168,23)"/><text x="38.4717%" y="511.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="38.3372%" y="581" width="0.1155%" height="15" fill="rgb(242,38,24)"/><text x="38.5872%" y="591.50"></text></g><g><title>do_syscall_64 (90 samples, 10.39%)</title><rect x="28.1755%" y="597" width="10.3926%" height="15" fill="rgb(225,182,9)"/><text x="28.4255%" y="607.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="38.4527%" y="581" width="0.1155%" height="15" fill="rgb(243,178,37)"/><text x="38.7027%" y="591.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="38.4527%" y="565" width="0.1155%" height="15" fill="rgb(232,139,19)"/><text x="38.7027%" y="575.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (96 samples, 11.09%)</title><rect x="27.9446%" y="661" width="11.0855%" height="15" fill="rgb(225,201,24)"/><text x="28.1946%" y="671.50">&lt;std::net::tcp::..</text></g><g><title>std::sys_common::net::TcpStream::write (96 samples, 11.09%)</title><rect x="27.9446%" y="645" width="11.0855%" height="15" fill="rgb(221,47,46)"/><text x="28.1946%" y="655.50">std::sys_common:..</text></g><g><title>__libc_send (96 samples, 11.09%)</title><rect x="27.9446%" y="629" width="11.0855%" height="15" fill="rgb(249,23,13)"/><text x="28.1946%" y="639.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (94 samples, 10.85%)</title><rect x="28.1755%" y="613" width="10.8545%" height="15" fill="rgb(219,9,5)"/><text x="28.4255%" y="623.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.46%)</title><rect x="38.5681%" y="597" width="0.4619%" height="15" fill="rgb(254,171,16)"/><text x="38.8181%" y="607.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (218 samples, 25.17%)</title><rect x="13.9723%" y="725" width="25.1732%" height="15" fill="rgb(230,171,20)"/><text x="14.2223%" y="735.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;:..</text></g><g><title>mysql::conn::Conn::_query (161 samples, 18.59%)</title><rect x="20.5543%" y="709" width="18.5912%" height="15" fill="rgb(210,71,41)"/><text x="20.8043%" y="719.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (98 samples, 11.32%)</title><rect x="27.8291%" y="693" width="11.3164%" height="15" fill="rgb(206,173,20)"/><text x="28.0791%" y="703.50">mysql_common::pro..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (98 samples, 11.32%)</title><rect x="27.8291%" y="677" width="11.3164%" height="15" fill="rgb(233,88,34)"/><text x="28.0791%" y="687.50">std::io::buffered..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.12%)</title><rect x="39.0300%" y="661" width="0.1155%" height="15" fill="rgb(223,209,46)"/><text x="39.2800%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.12%)</title><rect x="39.1455%" y="725" width="0.1155%" height="15" fill="rgb(250,43,18)"/><text x="39.3955%" y="735.50"></text></g><g><title>__libc_close (1 samples, 0.12%)</title><rect x="39.1455%" y="709" width="0.1155%" height="15" fill="rgb(208,13,10)"/><text x="39.3955%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="39.1455%" y="693" width="0.1155%" height="15" fill="rgb(212,200,36)"/><text x="39.3955%" y="703.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="39.1455%" y="677" width="0.1155%" height="15" fill="rgb(225,90,30)"/><text x="39.3955%" y="687.50"></text></g><g><title>task_work_run (1 samples, 0.12%)</title><rect x="39.1455%" y="661" width="0.1155%" height="15" fill="rgb(236,182,39)"/><text x="39.3955%" y="671.50"></text></g><g><title>__fput (1 samples, 0.12%)</title><rect x="39.1455%" y="645" width="0.1155%" height="15" fill="rgb(212,144,35)"/><text x="39.3955%" y="655.50"></text></g><g><title>sock_close (1 samples, 0.12%)</title><rect x="39.1455%" y="629" width="0.1155%" height="15" fill="rgb(228,63,44)"/><text x="39.3955%" y="639.50"></text></g><g><title>__sock_release (1 samples, 0.12%)</title><rect x="39.1455%" y="613" width="0.1155%" height="15" fill="rgb(228,109,6)"/><text x="39.3955%" y="623.50"></text></g><g><title>inet_release (1 samples, 0.12%)</title><rect x="39.1455%" y="597" width="0.1155%" height="15" fill="rgb(238,117,24)"/><text x="39.3955%" y="607.50"></text></g><g><title>tcp_close (1 samples, 0.12%)</title><rect x="39.1455%" y="581" width="0.1155%" height="15" fill="rgb(242,26,26)"/><text x="39.3955%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.12%)</title><rect x="39.1455%" y="565" width="0.1155%" height="15" fill="rgb(221,92,48)"/><text x="39.3955%" y="575.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.12%)</title><rect x="39.1455%" y="549" width="0.1155%" height="15" fill="rgb(209,209,32)"/><text x="39.3955%" y="559.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.12%)</title><rect x="39.1455%" y="533" width="0.1155%" height="15" fill="rgb(221,70,22)"/><text x="39.3955%" y="543.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.12%)</title><rect x="39.1455%" y="517" width="0.1155%" height="15" fill="rgb(248,145,5)"/><text x="39.3955%" y="527.50"></text></g><g><title>ip_output (1 samples, 0.12%)</title><rect x="39.1455%" y="501" width="0.1155%" height="15" fill="rgb(226,116,26)"/><text x="39.3955%" y="511.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.12%)</title><rect x="39.1455%" y="485" width="0.1155%" height="15" fill="rgb(244,5,17)"/><text x="39.3955%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="39.1455%" y="469" width="0.1155%" height="15" fill="rgb(252,159,33)"/><text x="39.3955%" y="479.50"></text></g><g><title>do_softirq (1 samples, 0.12%)</title><rect x="39.1455%" y="453" width="0.1155%" height="15" fill="rgb(206,71,0)"/><text x="39.3955%" y="463.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.12%)</title><rect x="39.1455%" y="437" width="0.1155%" height="15" fill="rgb(233,118,54)"/><text x="39.3955%" y="447.50"></text></g><g><title>__do_softirq (1 samples, 0.12%)</title><rect x="39.1455%" y="421" width="0.1155%" height="15" fill="rgb(234,83,48)"/><text x="39.3955%" y="431.50"></text></g><g><title>net_rx_action (1 samples, 0.12%)</title><rect x="39.1455%" y="405" width="0.1155%" height="15" fill="rgb(228,3,54)"/><text x="39.3955%" y="415.50"></text></g><g><title>process_backlog (1 samples, 0.12%)</title><rect x="39.1455%" y="389" width="0.1155%" height="15" fill="rgb(226,155,13)"/><text x="39.3955%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.12%)</title><rect x="39.1455%" y="373" width="0.1155%" height="15" fill="rgb(241,28,37)"/><text x="39.3955%" y="383.50"></text></g><g><title>ip_rcv (1 samples, 0.12%)</title><rect x="39.1455%" y="357" width="0.1155%" height="15" fill="rgb(233,93,10)"/><text x="39.3955%" y="367.50"></text></g><g><title>ip_local_deliver (1 samples, 0.12%)</title><rect x="39.1455%" y="341" width="0.1155%" height="15" fill="rgb(225,113,19)"/><text x="39.3955%" y="351.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.12%)</title><rect x="39.1455%" y="325" width="0.1155%" height="15" fill="rgb(241,2,18)"/><text x="39.3955%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.12%)</title><rect x="39.1455%" y="309" width="0.1155%" height="15" fill="rgb(228,207,21)"/><text x="39.3955%" y="319.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.12%)</title><rect x="39.1455%" y="293" width="0.1155%" height="15" fill="rgb(213,211,35)"/><text x="39.3955%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.12%)</title><rect x="39.1455%" y="277" width="0.1155%" height="15" fill="rgb(209,83,10)"/><text x="39.3955%" y="287.50"></text></g><g><title>tcp_rcv_state_process (1 samples, 0.12%)</title><rect x="39.1455%" y="261" width="0.1155%" height="15" fill="rgb(209,164,1)"/><text x="39.3955%" y="271.50"></text></g><g><title>tcp_ack (1 samples, 0.12%)</title><rect x="39.1455%" y="245" width="0.1155%" height="15" fill="rgb(213,184,43)"/><text x="39.3955%" y="255.50"></text></g><g><title>__kfree_skb (1 samples, 0.12%)</title><rect x="39.1455%" y="229" width="0.1155%" height="15" fill="rgb(231,61,34)"/><text x="39.3955%" y="239.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="39.1455%" y="213" width="0.1155%" height="15" fill="rgb(235,75,3)"/><text x="39.3955%" y="223.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.12%)</title><rect x="39.3764%" y="613" width="0.1155%" height="15" fill="rgb(220,106,47)"/><text x="39.6264%" y="623.50"></text></g><g><title>fput (1 samples, 0.12%)</title><rect x="39.8383%" y="549" width="0.1155%" height="15" fill="rgb(210,196,33)"/><text x="40.0883%" y="559.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="40.4157%" y="501" width="0.1155%" height="15" fill="rgb(229,154,42)"/><text x="40.6657%" y="511.50"></text></g><g><title>dst_release (5 samples, 0.58%)</title><rect x="40.5312%" y="485" width="0.5774%" height="15" fill="rgb(228,114,26)"/><text x="40.7812%" y="495.50"></text></g><g><title>__kfree_skb (7 samples, 0.81%)</title><rect x="40.4157%" y="517" width="0.8083%" height="15" fill="rgb(208,144,1)"/><text x="40.6657%" y="527.50"></text></g><g><title>skb_release_head_state (6 samples, 0.69%)</title><rect x="40.5312%" y="501" width="0.6928%" height="15" fill="rgb(239,112,37)"/><text x="40.7812%" y="511.50"></text></g><g><title>sock_rfree (1 samples, 0.12%)</title><rect x="41.1085%" y="485" width="0.1155%" height="15" fill="rgb(210,96,50)"/><text x="41.3585%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="41.2240%" y="517" width="0.1155%" height="15" fill="rgb(222,178,2)"/><text x="41.4740%" y="527.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="41.2240%" y="501" width="0.1155%" height="15" fill="rgb(226,74,18)"/><text x="41.4740%" y="511.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.12%)</title><rect x="41.3395%" y="517" width="0.1155%" height="15" fill="rgb(225,67,54)"/><text x="41.5895%" y="527.50"></text></g><g><title>__alloc_skb (1 samples, 0.12%)</title><rect x="41.3395%" y="501" width="0.1155%" height="15" fill="rgb(251,92,32)"/><text x="41.5895%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.12%)</title><rect x="41.3395%" y="485" width="0.1155%" height="15" fill="rgb(228,149,22)"/><text x="41.5895%" y="495.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.23%)</title><rect x="41.6859%" y="453" width="0.2309%" height="15" fill="rgb(243,54,13)"/><text x="41.9359%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="41.6859%" y="437" width="0.2309%" height="15" fill="rgb(243,180,28)"/><text x="41.9359%" y="447.50"></text></g><g><title>loopback_xmit (2 samples, 0.23%)</title><rect x="41.6859%" y="421" width="0.2309%" height="15" fill="rgb(208,167,24)"/><text x="41.9359%" y="431.50"></text></g><g><title>netif_rx (1 samples, 0.12%)</title><rect x="41.8014%" y="405" width="0.1155%" height="15" fill="rgb(245,73,45)"/><text x="42.0514%" y="415.50"></text></g><g><title>netif_rx_internal (1 samples, 0.12%)</title><rect x="41.8014%" y="389" width="0.1155%" height="15" fill="rgb(237,203,48)"/><text x="42.0514%" y="399.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.12%)</title><rect x="41.8014%" y="373" width="0.1155%" height="15" fill="rgb(211,197,16)"/><text x="42.0514%" y="383.50"></text></g><g><title>__kfree_skb (1 samples, 0.12%)</title><rect x="41.9169%" y="229" width="0.1155%" height="15" fill="rgb(243,99,51)"/><text x="42.1669%" y="239.50"></text></g><g><title>skb_release_head_state (1 samples, 0.12%)</title><rect x="41.9169%" y="213" width="0.1155%" height="15" fill="rgb(215,123,29)"/><text x="42.1669%" y="223.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.12%)</title><rect x="42.0323%" y="213" width="0.1155%" height="15" fill="rgb(239,186,37)"/><text x="42.2823%" y="223.50"></text></g><g><title>tcp_rack_advance (1 samples, 0.12%)</title><rect x="42.1478%" y="213" width="0.1155%" height="15" fill="rgb(252,136,39)"/><text x="42.3978%" y="223.50"></text></g><g><title>ip_local_deliver (4 samples, 0.46%)</title><rect x="41.9169%" y="325" width="0.4619%" height="15" fill="rgb(223,213,32)"/><text x="42.1669%" y="335.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.46%)</title><rect x="41.9169%" y="309" width="0.4619%" height="15" fill="rgb(233,115,5)"/><text x="42.1669%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.46%)</title><rect x="41.9169%" y="293" width="0.4619%" height="15" fill="rgb(207,226,44)"/><text x="42.1669%" y="303.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.46%)</title><rect x="41.9169%" y="277" width="0.4619%" height="15" fill="rgb(208,126,0)"/><text x="42.1669%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.46%)</title><rect x="41.9169%" y="261" width="0.4619%" height="15" fill="rgb(244,66,21)"/><text x="42.1669%" y="271.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.46%)</title><rect x="41.9169%" y="245" width="0.4619%" height="15" fill="rgb(222,97,12)"/><text x="42.1669%" y="255.50"></text></g><g><title>tcp_ack (3 samples, 0.35%)</title><rect x="42.0323%" y="229" width="0.3464%" height="15" fill="rgb(219,213,19)"/><text x="42.2823%" y="239.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="42.2633%" y="213" width="0.1155%" height="15" fill="rgb(252,169,30)"/><text x="42.5133%" y="223.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 1.04%)</title><rect x="41.4550%" y="517" width="1.0393%" height="15" fill="rgb(206,32,51)"/><text x="41.7050%" y="527.50"></text></g><g><title>__ip_queue_xmit (9 samples, 1.04%)</title><rect x="41.4550%" y="501" width="1.0393%" height="15" fill="rgb(250,172,42)"/><text x="41.7050%" y="511.50"></text></g><g><title>ip_output (8 samples, 0.92%)</title><rect x="41.5704%" y="485" width="0.9238%" height="15" fill="rgb(209,34,43)"/><text x="41.8204%" y="495.50"></text></g><g><title>ip_finish_output2 (8 samples, 0.92%)</title><rect x="41.5704%" y="469" width="0.9238%" height="15" fill="rgb(223,11,35)"/><text x="41.8204%" y="479.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.58%)</title><rect x="41.9169%" y="453" width="0.5774%" height="15" fill="rgb(251,219,26)"/><text x="42.1669%" y="463.50"></text></g><g><title>do_softirq (5 samples, 0.58%)</title><rect x="41.9169%" y="437" width="0.5774%" height="15" fill="rgb(231,119,3)"/><text x="42.1669%" y="447.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.58%)</title><rect x="41.9169%" y="421" width="0.5774%" height="15" fill="rgb(216,97,11)"/><text x="42.1669%" y="431.50"></text></g><g><title>__do_softirq (5 samples, 0.58%)</title><rect x="41.9169%" y="405" width="0.5774%" height="15" fill="rgb(223,59,9)"/><text x="42.1669%" y="415.50"></text></g><g><title>net_rx_action (5 samples, 0.58%)</title><rect x="41.9169%" y="389" width="0.5774%" height="15" fill="rgb(233,93,31)"/><text x="42.1669%" y="399.50"></text></g><g><title>process_backlog (5 samples, 0.58%)</title><rect x="41.9169%" y="373" width="0.5774%" height="15" fill="rgb(239,81,33)"/><text x="42.1669%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.58%)</title><rect x="41.9169%" y="357" width="0.5774%" height="15" fill="rgb(213,120,34)"/><text x="42.1669%" y="367.50"></text></g><g><title>ip_rcv (5 samples, 0.58%)</title><rect x="41.9169%" y="341" width="0.5774%" height="15" fill="rgb(243,49,53)"/><text x="42.1669%" y="351.50"></text></g><g><title>ip_rcv_core (1 samples, 0.12%)</title><rect x="42.3788%" y="325" width="0.1155%" height="15" fill="rgb(247,216,33)"/><text x="42.6288%" y="335.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.12%)</title><rect x="42.3788%" y="309" width="0.1155%" height="15" fill="rgb(226,26,14)"/><text x="42.6288%" y="319.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="42.7252%" y="501" width="0.1155%" height="15" fill="rgb(215,49,53)"/><text x="42.9752%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.35%)</title><rect x="42.8406%" y="501" width="0.3464%" height="15" fill="rgb(245,162,40)"/><text x="43.0906%" y="511.50"></text></g><g><title>add_wait_queue (1 samples, 0.12%)</title><rect x="43.1871%" y="501" width="0.1155%" height="15" fill="rgb(229,68,17)"/><text x="43.4371%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="43.1871%" y="485" width="0.1155%" height="15" fill="rgb(213,182,10)"/><text x="43.4371%" y="495.50"></text></g><g><title>remove_wait_queue (1 samples, 0.12%)</title><rect x="43.3025%" y="501" width="0.1155%" height="15" fill="rgb(245,125,30)"/><text x="43.5525%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="43.3025%" y="485" width="0.1155%" height="15" fill="rgb(232,202,2)"/><text x="43.5525%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.23%)</title><rect x="43.5335%" y="437" width="0.2309%" height="15" fill="rgb(237,140,51)"/><text x="43.7835%" y="447.50"></text></g><g><title>ctx_sched_out (2 samples, 0.23%)</title><rect x="43.5335%" y="421" width="0.2309%" height="15" fill="rgb(236,157,25)"/><text x="43.7835%" y="431.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.12%)</title><rect x="43.6490%" y="405" width="0.1155%" height="15" fill="rgb(219,209,0)"/><text x="43.8990%" y="415.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.12%)</title><rect x="44.1109%" y="389" width="0.1155%" height="15" fill="rgb(240,116,54)"/><text x="44.3609%" y="399.50"></text></g><g><title>update_curr (3 samples, 0.35%)</title><rect x="43.9954%" y="405" width="0.3464%" height="15" fill="rgb(216,10,36)"/><text x="44.2454%" y="415.50"></text></g><g><title>cpuacct_charge (1 samples, 0.12%)</title><rect x="44.2263%" y="389" width="0.1155%" height="15" fill="rgb(222,72,44)"/><text x="44.4763%" y="399.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="44.3418%" y="389" width="0.1155%" height="15" fill="rgb(232,159,9)"/><text x="44.5918%" y="399.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.81%)</title><rect x="43.7644%" y="437" width="0.8083%" height="15" fill="rgb(210,39,32)"/><text x="44.0144%" y="447.50"></text></g><g><title>dequeue_entity (5 samples, 0.58%)</title><rect x="43.9954%" y="421" width="0.5774%" height="15" fill="rgb(216,194,45)"/><text x="44.2454%" y="431.50"></text></g><g><title>update_load_avg (2 samples, 0.23%)</title><rect x="44.3418%" y="405" width="0.2309%" height="15" fill="rgb(218,18,35)"/><text x="44.5918%" y="415.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.12%)</title><rect x="44.4573%" y="389" width="0.1155%" height="15" fill="rgb(207,83,51)"/><text x="44.7073%" y="399.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (3 samples, 0.35%)</title><rect x="44.5727%" y="405" width="0.3464%" height="15" fill="rgb(225,63,43)"/><text x="44.8227%" y="415.50"></text></g><g><title>native_write_msr (1 samples, 0.12%)</title><rect x="44.8037%" y="389" width="0.1155%" height="15" fill="rgb(207,57,36)"/><text x="45.0537%" y="399.50"></text></g><g><title>finish_task_switch (4 samples, 0.46%)</title><rect x="44.5727%" y="437" width="0.4619%" height="15" fill="rgb(216,99,33)"/><text x="44.8227%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.46%)</title><rect x="44.5727%" y="421" width="0.4619%" height="15" fill="rgb(225,42,16)"/><text x="44.8227%" y="431.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="44.9192%" y="405" width="0.1155%" height="15" fill="rgb(220,201,45)"/><text x="45.1692%" y="415.50"></text></g><g><title>psi_task_change (7 samples, 0.81%)</title><rect x="45.0346%" y="437" width="0.8083%" height="15" fill="rgb(225,33,4)"/><text x="45.2846%" y="447.50"></text></g><g><title>psi_group_change (6 samples, 0.69%)</title><rect x="45.1501%" y="421" width="0.6928%" height="15" fill="rgb(224,33,50)"/><text x="45.4001%" y="431.50"></text></g><g><title>record_times (1 samples, 0.12%)</title><rect x="45.7275%" y="405" width="0.1155%" height="15" fill="rgb(246,198,51)"/><text x="45.9775%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.12%)</title><rect x="45.7275%" y="389" width="0.1155%" height="15" fill="rgb(205,22,4)"/><text x="45.9775%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.12%)</title><rect x="45.7275%" y="373" width="0.1155%" height="15" fill="rgb(206,3,8)"/><text x="45.9775%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.12%)</title><rect x="45.7275%" y="357" width="0.1155%" height="15" fill="rgb(251,23,15)"/><text x="45.9775%" y="367.50"></text></g><g><title>psi_task_switch (1 samples, 0.12%)</title><rect x="45.8430%" y="437" width="0.1155%" height="15" fill="rgb(252,88,28)"/><text x="46.0930%" y="447.50"></text></g><g><title>put_prev_task_fair (4 samples, 0.46%)</title><rect x="45.9584%" y="437" width="0.4619%" height="15" fill="rgb(212,127,14)"/><text x="46.2084%" y="447.50"></text></g><g><title>put_prev_entity (2 samples, 0.23%)</title><rect x="46.1894%" y="421" width="0.2309%" height="15" fill="rgb(247,145,37)"/><text x="46.4394%" y="431.50"></text></g><g><title>rcu_note_context_switch (2 samples, 0.23%)</title><rect x="46.4203%" y="437" width="0.2309%" height="15" fill="rgb(209,117,53)"/><text x="46.6703%" y="447.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.12%)</title><rect x="46.5358%" y="421" width="0.1155%" height="15" fill="rgb(212,90,42)"/><text x="46.7858%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.12%)</title><rect x="46.6513%" y="437" width="0.1155%" height="15" fill="rgb(218,164,37)"/><text x="46.9013%" y="447.50"></text></g><g><title>sk_wait_data (39 samples, 4.50%)</title><rect x="42.4942%" y="517" width="4.5035%" height="15" fill="rgb(246,65,34)"/><text x="42.7442%" y="527.50">sk_wa..</text></g><g><title>wait_woken (31 samples, 3.58%)</title><rect x="43.4180%" y="501" width="3.5797%" height="15" fill="rgb(231,100,33)"/><text x="43.6680%" y="511.50">wait..</text></g><g><title>schedule_timeout (31 samples, 3.58%)</title><rect x="43.4180%" y="485" width="3.5797%" height="15" fill="rgb(228,126,14)"/><text x="43.6680%" y="495.50">sche..</text></g><g><title>schedule (30 samples, 3.46%)</title><rect x="43.5335%" y="469" width="3.4642%" height="15" fill="rgb(215,173,21)"/><text x="43.7835%" y="479.50">sch..</text></g><g><title>__schedule (30 samples, 3.46%)</title><rect x="43.5335%" y="453" width="3.4642%" height="15" fill="rgb(210,6,40)"/><text x="43.7835%" y="463.50">__s..</text></g><g><title>update_rq_clock (2 samples, 0.23%)</title><rect x="46.7667%" y="437" width="0.2309%" height="15" fill="rgb(212,48,18)"/><text x="47.0167%" y="447.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.12%)</title><rect x="46.8822%" y="421" width="0.1155%" height="15" fill="rgb(230,214,11)"/><text x="47.1322%" y="431.50"></text></g><g><title>inet_recvmsg (62 samples, 7.16%)</title><rect x="39.9538%" y="549" width="7.1594%" height="15" fill="rgb(254,105,39)"/><text x="40.2038%" y="559.50">inet_recvm..</text></g><g><title>tcp_recvmsg (62 samples, 7.16%)</title><rect x="39.9538%" y="533" width="7.1594%" height="15" fill="rgb(245,158,5)"/><text x="40.2038%" y="543.50">tcp_recvmsg</text></g><g><title>skb_copy_datagram_iter (1 samples, 0.12%)</title><rect x="46.9977%" y="517" width="0.1155%" height="15" fill="rgb(249,208,11)"/><text x="47.2477%" y="527.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.12%)</title><rect x="46.9977%" y="501" width="0.1155%" height="15" fill="rgb(210,39,28)"/><text x="47.2477%" y="511.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.12%)</title><rect x="46.9977%" y="485" width="0.1155%" height="15" fill="rgb(211,56,53)"/><text x="47.2477%" y="495.50"></text></g><g><title>__check_object_size (1 samples, 0.12%)</title><rect x="46.9977%" y="469" width="0.1155%" height="15" fill="rgb(226,201,30)"/><text x="47.2477%" y="479.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.12%)</title><rect x="46.9977%" y="453" width="0.1155%" height="15" fill="rgb(239,101,34)"/><text x="47.2477%" y="463.50"></text></g><g><title>sock_recvmsg (1 samples, 0.12%)</title><rect x="47.1132%" y="549" width="0.1155%" height="15" fill="rgb(226,209,5)"/><text x="47.3632%" y="559.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.12%)</title><rect x="47.1132%" y="533" width="0.1155%" height="15" fill="rgb(250,105,47)"/><text x="47.3632%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (68 samples, 7.85%)</title><rect x="39.6074%" y="581" width="7.8522%" height="15" fill="rgb(230,72,3)"/><text x="39.8574%" y="591.50">__x64_sys_r..</text></g><g><title>__sys_recvfrom (67 samples, 7.74%)</title><rect x="39.7229%" y="565" width="7.7367%" height="15" fill="rgb(232,218,39)"/><text x="39.9729%" y="575.50">__sys_recvf..</text></g><g><title>sockfd_lookup_light (2 samples, 0.23%)</title><rect x="47.2286%" y="549" width="0.2309%" height="15" fill="rgb(248,166,6)"/><text x="47.4786%" y="559.50"></text></g><g><title>__fget_light (2 samples, 0.23%)</title><rect x="47.2286%" y="533" width="0.2309%" height="15" fill="rgb(247,89,20)"/><text x="47.4786%" y="543.50"></text></g><g><title>__fget_files (2 samples, 0.23%)</title><rect x="47.2286%" y="517" width="0.2309%" height="15" fill="rgb(248,130,54)"/><text x="47.4786%" y="527.50"></text></g><g><title>do_syscall_64 (69 samples, 7.97%)</title><rect x="39.6074%" y="597" width="7.9677%" height="15" fill="rgb(234,196,4)"/><text x="39.8574%" y="607.50">do_syscall_..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="47.4596%" y="581" width="0.1155%" height="15" fill="rgb(250,143,31)"/><text x="47.7096%" y="591.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="47.4596%" y="565" width="0.1155%" height="15" fill="rgb(211,110,34)"/><text x="47.7096%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (73 samples, 8.43%)</title><rect x="39.4919%" y="613" width="8.4296%" height="15" fill="rgb(215,124,48)"/><text x="39.7419%" y="623.50">entry_SYSCAL..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.35%)</title><rect x="47.5751%" y="597" width="0.3464%" height="15" fill="rgb(216,46,13)"/><text x="47.8251%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (75 samples, 8.66%)</title><rect x="39.3764%" y="693" width="8.6605%" height="15" fill="rgb(205,184,25)"/><text x="39.6264%" y="703.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::read (75 samples, 8.66%)</title><rect x="39.3764%" y="677" width="8.6605%" height="15" fill="rgb(228,1,10)"/><text x="39.6264%" y="687.50">std::sys_com..</text></g><g><title>std::sys::unix::net::Socket::read (75 samples, 8.66%)</title><rect x="39.3764%" y="661" width="8.6605%" height="15" fill="rgb(213,116,27)"/><text x="39.6264%" y="671.50">std::sys::un..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (75 samples, 8.66%)</title><rect x="39.3764%" y="645" width="8.6605%" height="15" fill="rgb(241,95,50)"/><text x="39.6264%" y="655.50">std::sys::un..</text></g><g><title>__libc_recv (75 samples, 8.66%)</title><rect x="39.3764%" y="629" width="8.6605%" height="15" fill="rgb(238,48,32)"/><text x="39.6264%" y="639.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="47.9215%" y="613" width="0.1155%" height="15" fill="rgb(235,113,49)"/><text x="48.1715%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (77 samples, 8.89%)</title><rect x="39.3764%" y="709" width="8.8915%" height="15" fill="rgb(205,127,43)"/><text x="39.6264%" y="719.50">&lt;std::io::buf..</text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (2 samples, 0.23%)</title><rect x="48.0370%" y="693" width="0.2309%" height="15" fill="rgb(250,162,2)"/><text x="48.2870%" y="703.50"></text></g><g><title>__libc_recv (2 samples, 0.23%)</title><rect x="48.0370%" y="677" width="0.2309%" height="15" fill="rgb(220,13,41)"/><text x="48.2870%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="48.0370%" y="661" width="0.2309%" height="15" fill="rgb(249,221,25)"/><text x="48.2870%" y="671.50"></text></g><g><title>__memset_avx2_erms (2 samples, 0.23%)</title><rect x="48.2679%" y="709" width="0.2309%" height="15" fill="rgb(215,208,19)"/><text x="48.5179%" y="719.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (81 samples, 9.35%)</title><rect x="39.2610%" y="725" width="9.3533%" height="15" fill="rgb(236,175,2)"/><text x="39.5110%" y="735.50">msql_srv::pac..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.12%)</title><rect x="48.4988%" y="709" width="0.1155%" height="15" fill="rgb(241,52,2)"/><text x="48.7488%" y="719.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.12%)</title><rect x="48.6143%" y="661" width="0.1155%" height="15" fill="rgb(248,140,14)"/><text x="48.8643%" y="671.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.12%)</title><rect x="49.3072%" y="549" width="0.1155%" height="15" fill="rgb(253,22,42)"/><text x="49.5572%" y="559.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.23%)</title><rect x="49.3072%" y="565" width="0.2309%" height="15" fill="rgb(234,61,47)"/><text x="49.5572%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="49.4226%" y="549" width="0.1155%" height="15" fill="rgb(208,226,15)"/><text x="49.6726%" y="559.50"></text></g><g><title>release_sock (1 samples, 0.12%)</title><rect x="49.5381%" y="565" width="0.1155%" height="15" fill="rgb(217,221,4)"/><text x="49.7881%" y="575.50"></text></g><g><title>tcp_release_cb (1 samples, 0.12%)</title><rect x="49.5381%" y="549" width="0.1155%" height="15" fill="rgb(212,174,34)"/><text x="49.7881%" y="559.50"></text></g><g><title>__ip_local_out (2 samples, 0.23%)</title><rect x="51.0393%" y="485" width="0.2309%" height="15" fill="rgb(253,83,4)"/><text x="51.2893%" y="495.50"></text></g><g><title>ip_send_check (2 samples, 0.23%)</title><rect x="51.0393%" y="469" width="0.2309%" height="15" fill="rgb(250,195,49)"/><text x="51.2893%" y="479.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.12%)</title><rect x="51.2702%" y="485" width="0.1155%" height="15" fill="rgb(241,192,25)"/><text x="51.5202%" y="495.50"></text></g><g><title>__sk_dst_check (1 samples, 0.12%)</title><rect x="51.3857%" y="485" width="0.1155%" height="15" fill="rgb(208,124,10)"/><text x="51.6357%" y="495.50"></text></g><g><title>ip_finish_output (1 samples, 0.12%)</title><rect x="51.6166%" y="469" width="0.1155%" height="15" fill="rgb(222,33,0)"/><text x="51.8666%" y="479.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="52.3095%" y="373" width="0.1155%" height="15" fill="rgb(234,209,28)"/><text x="52.5595%" y="383.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.35%)</title><rect x="52.1940%" y="437" width="0.3464%" height="15" fill="rgb(224,11,23)"/><text x="52.4440%" y="447.50"></text></g><g><title>loopback_xmit (3 samples, 0.35%)</title><rect x="52.1940%" y="421" width="0.3464%" height="15" fill="rgb(232,99,1)"/><text x="52.4440%" y="431.50"></text></g><g><title>netif_rx (3 samples, 0.35%)</title><rect x="52.1940%" y="405" width="0.3464%" height="15" fill="rgb(237,95,45)"/><text x="52.4440%" y="415.50"></text></g><g><title>netif_rx_internal (3 samples, 0.35%)</title><rect x="52.1940%" y="389" width="0.3464%" height="15" fill="rgb(208,109,11)"/><text x="52.4440%" y="399.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="52.4249%" y="373" width="0.1155%" height="15" fill="rgb(216,190,48)"/><text x="52.6749%" y="383.50"></text></g><g><title>netif_skb_features (1 samples, 0.12%)</title><rect x="52.5404%" y="421" width="0.1155%" height="15" fill="rgb(251,171,36)"/><text x="52.7904%" y="431.50"></text></g><g><title>skb_network_protocol (1 samples, 0.12%)</title><rect x="52.5404%" y="405" width="0.1155%" height="15" fill="rgb(230,62,22)"/><text x="52.7904%" y="415.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.69%)</title><rect x="52.0785%" y="453" width="0.6928%" height="15" fill="rgb(225,114,35)"/><text x="52.3285%" y="463.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.23%)</title><rect x="52.5404%" y="437" width="0.2309%" height="15" fill="rgb(215,118,42)"/><text x="52.7904%" y="447.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.12%)</title><rect x="52.6559%" y="421" width="0.1155%" height="15" fill="rgb(243,119,21)"/><text x="52.9059%" y="431.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.12%)</title><rect x="53.3487%" y="389" width="0.1155%" height="15" fill="rgb(252,177,53)"/><text x="53.5987%" y="399.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.12%)</title><rect x="53.3487%" y="373" width="0.1155%" height="15" fill="rgb(237,209,29)"/><text x="53.5987%" y="383.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.23%)</title><rect x="54.2725%" y="261" width="0.2309%" height="15" fill="rgb(212,65,23)"/><text x="54.5225%" y="271.50"></text></g><g><title>inet_ehashfn (1 samples, 0.12%)</title><rect x="54.3880%" y="245" width="0.1155%" height="15" fill="rgb(230,222,46)"/><text x="54.6380%" y="255.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.12%)</title><rect x="54.5035%" y="261" width="0.1155%" height="15" fill="rgb(215,135,32)"/><text x="54.7535%" y="271.50"></text></g><g><title>sock_put (1 samples, 0.12%)</title><rect x="54.6189%" y="261" width="0.1155%" height="15" fill="rgb(246,101,22)"/><text x="54.8689%" y="271.50"></text></g><g><title>sk_reset_timer (1 samples, 0.12%)</title><rect x="54.9654%" y="229" width="0.1155%" height="15" fill="rgb(206,107,13)"/><text x="55.2154%" y="239.50"></text></g><g><title>psi_flags_change (2 samples, 0.23%)</title><rect x="55.4273%" y="133" width="0.2309%" height="15" fill="rgb(250,100,44)"/><text x="55.6773%" y="143.50"></text></g><g><title>psi_task_change (13 samples, 1.50%)</title><rect x="55.3118%" y="149" width="1.5012%" height="15" fill="rgb(231,147,38)"/><text x="55.5618%" y="159.50"></text></g><g><title>psi_group_change (10 samples, 1.15%)</title><rect x="55.6582%" y="133" width="1.1547%" height="15" fill="rgb(229,8,40)"/><text x="55.9082%" y="143.50"></text></g><g><title>enqueue_task (15 samples, 1.73%)</title><rect x="55.3118%" y="165" width="1.7321%" height="15" fill="rgb(221,135,30)"/><text x="55.5618%" y="175.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.23%)</title><rect x="56.8129%" y="149" width="0.2309%" height="15" fill="rgb(249,193,18)"/><text x="57.0629%" y="159.50"></text></g><g><title>enqueue_task_fair (8 samples, 0.92%)</title><rect x="57.0439%" y="165" width="0.9238%" height="15" fill="rgb(209,133,39)"/><text x="57.2939%" y="175.50"></text></g><g><title>enqueue_entity (6 samples, 0.69%)</title><rect x="57.2748%" y="149" width="0.6928%" height="15" fill="rgb(232,100,14)"/><text x="57.5248%" y="159.50"></text></g><g><title>update_load_avg (4 samples, 0.46%)</title><rect x="57.5058%" y="133" width="0.4619%" height="15" fill="rgb(224,185,1)"/><text x="57.7558%" y="143.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.23%)</title><rect x="57.7367%" y="117" width="0.2309%" height="15" fill="rgb(223,139,8)"/><text x="57.9867%" y="127.50"></text></g><g><title>preempt_count_add (1 samples, 0.12%)</title><rect x="57.9677%" y="165" width="0.1155%" height="15" fill="rgb(232,213,38)"/><text x="58.2177%" y="175.50"></text></g><g><title>try_to_wake_up (27 samples, 3.12%)</title><rect x="55.0808%" y="181" width="3.1178%" height="15" fill="rgb(207,94,22)"/><text x="55.3308%" y="191.50">try..</text></g><g><title>ttwu_do_wakeup (1 samples, 0.12%)</title><rect x="58.0831%" y="165" width="0.1155%" height="15" fill="rgb(219,183,54)"/><text x="58.3331%" y="175.50"></text></g><g><title>check_preempt_curr (1 samples, 0.12%)</title><rect x="58.0831%" y="149" width="0.1155%" height="15" fill="rgb(216,185,54)"/><text x="58.3331%" y="159.50"></text></g><g><title>resched_curr (1 samples, 0.12%)</title><rect x="58.0831%" y="133" width="0.1155%" height="15" fill="rgb(254,217,39)"/><text x="58.3331%" y="143.50"></text></g><g><title>__wake_up_common (29 samples, 3.35%)</title><rect x="55.0808%" y="197" width="3.3487%" height="15" fill="rgb(240,178,23)"/><text x="55.3308%" y="207.50">__w..</text></g><g><title>woken_wake_function (2 samples, 0.23%)</title><rect x="58.1986%" y="181" width="0.2309%" height="15" fill="rgb(218,11,47)"/><text x="58.4486%" y="191.50"></text></g><g><title>sock_def_readable (30 samples, 3.46%)</title><rect x="55.0808%" y="229" width="3.4642%" height="15" fill="rgb(218,51,51)"/><text x="55.3308%" y="239.50">soc..</text></g><g><title>__wake_up_common_lock (30 samples, 3.46%)</title><rect x="55.0808%" y="213" width="3.4642%" height="15" fill="rgb(238,126,27)"/><text x="55.3308%" y="223.50">__w..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="58.4296%" y="197" width="0.1155%" height="15" fill="rgb(249,202,22)"/><text x="58.6796%" y="207.50"></text></g><g><title>kfree (1 samples, 0.12%)</title><rect x="59.1224%" y="197" width="0.1155%" height="15" fill="rgb(254,195,49)"/><text x="59.3724%" y="207.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.12%)</title><rect x="59.1224%" y="181" width="0.1155%" height="15" fill="rgb(208,123,14)"/><text x="59.3724%" y="191.50"></text></g><g><title>__kfree_skb (2 samples, 0.23%)</title><rect x="59.1224%" y="213" width="0.2309%" height="15" fill="rgb(224,200,8)"/><text x="59.3724%" y="223.50"></text></g><g><title>skb_release_data (1 samples, 0.12%)</title><rect x="59.2379%" y="197" width="0.1155%" height="15" fill="rgb(217,61,36)"/><text x="59.4879%" y="207.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.12%)</title><rect x="59.3533%" y="213" width="0.1155%" height="15" fill="rgb(206,35,45)"/><text x="59.6033%" y="223.50"></text></g><g><title>tcp_rack_update_reo_wnd (1 samples, 0.12%)</title><rect x="59.4688%" y="213" width="0.1155%" height="15" fill="rgb(217,65,33)"/><text x="59.7188%" y="223.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.12%)</title><rect x="59.5843%" y="213" width="0.1155%" height="15" fill="rgb(222,158,48)"/><text x="59.8343%" y="223.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="59.6998%" y="213" width="0.1155%" height="15" fill="rgb(254,2,54)"/><text x="59.9498%" y="223.50"></text></g><g><title>tcp_ack (12 samples, 1.39%)</title><rect x="58.5450%" y="229" width="1.3857%" height="15" fill="rgb(250,143,38)"/><text x="58.7950%" y="239.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.12%)</title><rect x="59.8152%" y="213" width="0.1155%" height="15" fill="rgb(248,25,0)"/><text x="60.0652%" y="223.50"></text></g><g><title>tcp_check_space (1 samples, 0.12%)</title><rect x="59.9307%" y="229" width="0.1155%" height="15" fill="rgb(206,152,27)"/><text x="60.1807%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (48 samples, 5.54%)</title><rect x="54.7344%" y="261" width="5.5427%" height="15" fill="rgb(240,77,30)"/><text x="54.9844%" y="271.50">tcp_v4_..</text></g><g><title>tcp_rcv_established (48 samples, 5.54%)</title><rect x="54.7344%" y="245" width="5.5427%" height="15" fill="rgb(231,5,3)"/><text x="54.9844%" y="255.50">tcp_rcv..</text></g><g><title>tcp_queue_rcv (2 samples, 0.23%)</title><rect x="60.0462%" y="229" width="0.2309%" height="15" fill="rgb(207,226,32)"/><text x="60.2962%" y="239.50"></text></g><g><title>ip_local_deliver (57 samples, 6.58%)</title><rect x="53.8106%" y="325" width="6.5820%" height="15" fill="rgb(222,207,47)"/><text x="54.0606%" y="335.50">ip_local_..</text></g><g><title>ip_local_deliver_finish (57 samples, 6.58%)</title><rect x="53.8106%" y="309" width="6.5820%" height="15" fill="rgb(229,115,45)"/><text x="54.0606%" y="319.50">ip_local_..</text></g><g><title>ip_protocol_deliver_rcu (57 samples, 6.58%)</title><rect x="53.8106%" y="293" width="6.5820%" height="15" fill="rgb(224,191,6)"/><text x="54.0606%" y="303.50">ip_protoc..</text></g><g><title>tcp_v4_rcv (55 samples, 6.35%)</title><rect x="54.0416%" y="277" width="6.3510%" height="15" fill="rgb(230,227,24)"/><text x="54.2916%" y="287.50">tcp_v4_r..</text></g><g><title>tcp_v4_fill_cb (1 samples, 0.12%)</title><rect x="60.2771%" y="261" width="0.1155%" height="15" fill="rgb(228,80,19)"/><text x="60.5271%" y="271.50"></text></g><g><title>ip_rcv_core (4 samples, 0.46%)</title><rect x="60.3926%" y="325" width="0.4619%" height="15" fill="rgb(247,229,0)"/><text x="60.6426%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (62 samples, 7.16%)</title><rect x="53.8106%" y="357" width="7.1594%" height="15" fill="rgb(237,194,15)"/><text x="54.0606%" y="367.50">__netif_re..</text></g><g><title>ip_rcv (62 samples, 7.16%)</title><rect x="53.8106%" y="341" width="7.1594%" height="15" fill="rgb(219,203,20)"/><text x="54.0606%" y="351.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.12%)</title><rect x="60.8545%" y="325" width="0.1155%" height="15" fill="rgb(234,128,8)"/><text x="61.1045%" y="335.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.12%)</title><rect x="60.8545%" y="309" width="0.1155%" height="15" fill="rgb(248,202,8)"/><text x="61.1045%" y="319.50"></text></g><g><title>do_softirq (71 samples, 8.20%)</title><rect x="52.8868%" y="437" width="8.1986%" height="15" fill="rgb(206,104,37)"/><text x="53.1368%" y="447.50">do_softirq</text></g><g><title>do_softirq_own_stack (69 samples, 7.97%)</title><rect x="53.1178%" y="421" width="7.9677%" height="15" fill="rgb(223,8,27)"/><text x="53.3678%" y="431.50">do_softirq_..</text></g><g><title>__do_softirq (69 samples, 7.97%)</title><rect x="53.1178%" y="405" width="7.9677%" height="15" fill="rgb(216,217,28)"/><text x="53.3678%" y="415.50">__do_softirq</text></g><g><title>net_rx_action (66 samples, 7.62%)</title><rect x="53.4642%" y="389" width="7.6212%" height="15" fill="rgb(249,199,1)"/><text x="53.7142%" y="399.50">net_rx_act..</text></g><g><title>process_backlog (63 samples, 7.27%)</title><rect x="53.8106%" y="373" width="7.2748%" height="15" fill="rgb(240,85,17)"/><text x="54.0606%" y="383.50">process_ba..</text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="60.9700%" y="357" width="0.1155%" height="15" fill="rgb(206,108,45)"/><text x="61.2200%" y="367.50"></text></g><g><title>ip_finish_output2 (82 samples, 9.47%)</title><rect x="51.7321%" y="469" width="9.4688%" height="15" fill="rgb(245,210,41)"/><text x="51.9821%" y="479.50">ip_finish_outp..</text></g><g><title>__local_bh_enable_ip (73 samples, 8.43%)</title><rect x="52.7714%" y="453" width="8.4296%" height="15" fill="rgb(206,13,37)"/><text x="53.0214%" y="463.50">__local_bh_e..</text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="61.0855%" y="437" width="0.1155%" height="15" fill="rgb(250,61,18)"/><text x="61.3355%" y="447.50"></text></g><g><title>__ip_queue_xmit (91 samples, 10.51%)</title><rect x="50.8083%" y="501" width="10.5081%" height="15" fill="rgb(235,172,48)"/><text x="51.0583%" y="511.50">__ip_queue_xmit</text></g><g><title>ip_output (85 samples, 9.82%)</title><rect x="51.5012%" y="485" width="9.8152%" height="15" fill="rgb(249,201,17)"/><text x="51.7512%" y="495.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.12%)</title><rect x="61.2009%" y="469" width="0.1155%" height="15" fill="rgb(219,208,6)"/><text x="61.4509%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="61.2009%" y="453" width="0.1155%" height="15" fill="rgb(248,31,23)"/><text x="61.4509%" y="463.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.12%)</title><rect x="61.3164%" y="501" width="0.1155%" height="15" fill="rgb(245,15,42)"/><text x="61.5664%" y="511.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.12%)</title><rect x="61.4319%" y="501" width="0.1155%" height="15" fill="rgb(222,217,39)"/><text x="61.6819%" y="511.50"></text></g><g><title>skb_clone (2 samples, 0.23%)</title><rect x="61.5473%" y="501" width="0.2309%" height="15" fill="rgb(210,219,27)"/><text x="61.7973%" y="511.50"></text></g><g><title>__copy_skb_header (1 samples, 0.12%)</title><rect x="61.6628%" y="485" width="0.1155%" height="15" fill="rgb(252,166,36)"/><text x="61.9128%" y="495.50"></text></g><g><title>__tcp_transmit_skb (99 samples, 11.43%)</title><rect x="50.5774%" y="517" width="11.4319%" height="15" fill="rgb(245,132,34)"/><text x="50.8274%" y="527.50">__tcp_transmit_skb</text></g><g><title>tcp_v4_send_check (2 samples, 0.23%)</title><rect x="61.7783%" y="501" width="0.2309%" height="15" fill="rgb(236,54,3)"/><text x="62.0283%" y="511.50"></text></g><g><title>ktime_get (1 samples, 0.12%)</title><rect x="62.0092%" y="517" width="0.1155%" height="15" fill="rgb(241,173,43)"/><text x="62.2592%" y="527.50"></text></g><g><title>read_tsc (1 samples, 0.12%)</title><rect x="62.0092%" y="501" width="0.1155%" height="15" fill="rgb(215,190,9)"/><text x="62.2592%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (102 samples, 11.78%)</title><rect x="50.4619%" y="549" width="11.7783%" height="15" fill="rgb(242,101,16)"/><text x="50.7119%" y="559.50">__tcp_push_pendin..</text></g><g><title>tcp_write_xmit (102 samples, 11.78%)</title><rect x="50.4619%" y="533" width="11.7783%" height="15" fill="rgb(223,190,21)"/><text x="50.7119%" y="543.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="62.1247%" y="517" width="0.1155%" height="15" fill="rgb(215,228,25)"/><text x="62.3747%" y="527.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.12%)</title><rect x="62.1247%" y="501" width="0.1155%" height="15" fill="rgb(225,36,22)"/><text x="62.3747%" y="511.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.12%)</title><rect x="62.2402%" y="549" width="0.1155%" height="15" fill="rgb(251,106,46)"/><text x="62.4902%" y="559.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.12%)</title><rect x="62.2402%" y="533" width="0.1155%" height="15" fill="rgb(208,90,1)"/><text x="62.4902%" y="543.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.12%)</title><rect x="62.5866%" y="517" width="0.1155%" height="15" fill="rgb(243,10,4)"/><text x="62.8366%" y="527.50"></text></g><g><title>__ksize (2 samples, 0.23%)</title><rect x="62.7021%" y="517" width="0.2309%" height="15" fill="rgb(212,137,27)"/><text x="62.9521%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.69%)</title><rect x="62.3557%" y="549" width="0.6928%" height="15" fill="rgb(231,220,49)"/><text x="62.6057%" y="559.50"></text></g><g><title>__alloc_skb (5 samples, 0.58%)</title><rect x="62.4711%" y="533" width="0.5774%" height="15" fill="rgb(237,96,20)"/><text x="62.7211%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="62.9330%" y="517" width="0.1155%" height="15" fill="rgb(239,229,30)"/><text x="63.1830%" y="527.50"></text></g><g><title>__check_object_size (3 samples, 0.35%)</title><rect x="63.0485%" y="533" width="0.3464%" height="15" fill="rgb(219,65,33)"/><text x="63.2985%" y="543.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.23%)</title><rect x="63.1640%" y="517" width="0.2309%" height="15" fill="rgb(243,134,7)"/><text x="63.4140%" y="527.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.46%)</title><rect x="63.0485%" y="549" width="0.4619%" height="15" fill="rgb(216,177,54)"/><text x="63.2985%" y="559.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.12%)</title><rect x="63.3949%" y="533" width="0.1155%" height="15" fill="rgb(211,160,20)"/><text x="63.6449%" y="543.50"></text></g><g><title>iov_iter_advance (1 samples, 0.12%)</title><rect x="63.3949%" y="517" width="0.1155%" height="15" fill="rgb(239,85,39)"/><text x="63.6449%" y="527.50"></text></g><g><title>sock_sendmsg (126 samples, 14.55%)</title><rect x="49.3072%" y="597" width="14.5497%" height="15" fill="rgb(232,125,22)"/><text x="49.5572%" y="607.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (126 samples, 14.55%)</title><rect x="49.3072%" y="581" width="14.5497%" height="15" fill="rgb(244,57,34)"/><text x="49.5572%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (123 samples, 14.20%)</title><rect x="49.6536%" y="565" width="14.2032%" height="15" fill="rgb(214,203,32)"/><text x="49.9036%" y="575.50">tcp_sendmsg_locked</text></g><g><title>skb_entail (3 samples, 0.35%)</title><rect x="63.5104%" y="549" width="0.3464%" height="15" fill="rgb(207,58,43)"/><text x="63.7604%" y="559.50"></text></g><g><title>__x64_sys_sendto (130 samples, 15.01%)</title><rect x="49.0762%" y="629" width="15.0115%" height="15" fill="rgb(215,193,15)"/><text x="49.3262%" y="639.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (130 samples, 15.01%)</title><rect x="49.0762%" y="613" width="15.0115%" height="15" fill="rgb(232,15,44)"/><text x="49.3262%" y="623.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.23%)</title><rect x="63.8568%" y="597" width="0.2309%" height="15" fill="rgb(212,3,48)"/><text x="64.1068%" y="607.50"></text></g><g><title>__fget_light (2 samples, 0.23%)</title><rect x="63.8568%" y="581" width="0.2309%" height="15" fill="rgb(218,128,7)"/><text x="64.1068%" y="591.50"></text></g><g><title>__fget_files (1 samples, 0.12%)</title><rect x="63.9723%" y="565" width="0.1155%" height="15" fill="rgb(226,216,39)"/><text x="64.2223%" y="575.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="64.0878%" y="629" width="0.1155%" height="15" fill="rgb(243,47,51)"/><text x="64.3378%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="64.0878%" y="613" width="0.1155%" height="15" fill="rgb(241,183,40)"/><text x="64.3378%" y="623.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.12%)</title><rect x="64.0878%" y="597" width="0.1155%" height="15" fill="rgb(231,217,32)"/><text x="64.3378%" y="607.50"></text></g><g><title>do_syscall_64 (134 samples, 15.47%)</title><rect x="48.8453%" y="645" width="15.4734%" height="15" fill="rgb(229,61,38)"/><text x="49.0953%" y="655.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="64.2032%" y="629" width="0.1155%" height="15" fill="rgb(225,210,5)"/><text x="64.4532%" y="639.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="64.2032%" y="613" width="0.1155%" height="15" fill="rgb(231,79,45)"/><text x="64.4532%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (141 samples, 16.28%)</title><rect x="48.7298%" y="661" width="16.2818%" height="15" fill="rgb(224,100,7)"/><text x="48.9798%" y="671.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.69%)</title><rect x="64.3187%" y="645" width="0.6928%" height="15" fill="rgb(241,198,18)"/><text x="64.5687%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (143 samples, 16.51%)</title><rect x="48.6143%" y="709" width="16.5127%" height="15" fill="rgb(252,97,53)"/><text x="48.8643%" y="719.50">&lt;std::net::tcp::TcpStream..</text></g><g><title>std::sys_common::net::TcpStream::write (143 samples, 16.51%)</title><rect x="48.6143%" y="693" width="16.5127%" height="15" fill="rgb(220,88,7)"/><text x="48.8643%" y="703.50">std::sys_common::net::Tcp..</text></g><g><title>__libc_send (143 samples, 16.51%)</title><rect x="48.6143%" y="677" width="16.5127%" height="15" fill="rgb(213,176,14)"/><text x="48.8643%" y="687.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.12%)</title><rect x="65.0115%" y="661" width="0.1155%" height="15" fill="rgb(246,73,7)"/><text x="65.2615%" y="671.50"></text></g><g><title>decor::Shim::run_on_tcp (447 samples, 51.62%)</title><rect x="13.6259%" y="757" width="51.6166%" height="15" fill="rgb(245,64,36)"/><text x="13.8759%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (447 samples, 51.62%)</title><rect x="13.6259%" y="741" width="51.6166%" height="15" fill="rgb(245,80,10)"/><text x="13.8759%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (144 samples, 16.63%)</title><rect x="48.6143%" y="725" width="16.6282%" height="15" fill="rgb(232,107,50)"/><text x="48.8643%" y="735.50">std::io::buffered::BufWrit..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.12%)</title><rect x="65.1270%" y="709" width="0.1155%" height="15" fill="rgb(253,3,0)"/><text x="65.3770%" y="719.50"></text></g><g><title>__GI___clone (448 samples, 51.73%)</title><rect x="13.6259%" y="869" width="51.7321%" height="15" fill="rgb(212,99,53)"/><text x="13.8759%" y="879.50">__GI___clone</text></g><g><title>start_thread (448 samples, 51.73%)</title><rect x="13.6259%" y="853" width="51.7321%" height="15" fill="rgb(249,111,54)"/><text x="13.8759%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (448 samples, 51.73%)</title><rect x="13.6259%" y="837" width="51.7321%" height="15" fill="rgb(249,55,30)"/><text x="13.8759%" y="847.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (448 samples, 51.73%)</title><rect x="13.6259%" y="821" width="51.7321%" height="15" fill="rgb(237,47,42)"/><text x="13.8759%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (448 samples, 51.73%)</title><rect x="13.6259%" y="805" width="51.7321%" height="15" fill="rgb(211,20,18)"/><text x="13.8759%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (448 samples, 51.73%)</title><rect x="13.6259%" y="789" width="51.7321%" height="15" fill="rgb(231,203,46)"/><text x="13.8759%" y="799.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (448 samples, 51.73%)</title><rect x="13.6259%" y="773" width="51.7321%" height="15" fill="rgb(237,142,3)"/><text x="13.8759%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.12%)</title><rect x="65.2425%" y="757" width="0.1155%" height="15" fill="rgb(241,107,1)"/><text x="65.4925%" y="767.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.12%)</title><rect x="65.2425%" y="741" width="0.1155%" height="15" fill="rgb(229,83,13)"/><text x="65.4925%" y="751.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.12%)</title><rect x="65.2425%" y="725" width="0.1155%" height="15" fill="rgb(241,91,40)"/><text x="65.4925%" y="735.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.12%)</title><rect x="65.2425%" y="709" width="0.1155%" height="15" fill="rgb(225,3,45)"/><text x="65.4925%" y="719.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.12%)</title><rect x="65.2425%" y="693" width="0.1155%" height="15" fill="rgb(244,223,14)"/><text x="65.4925%" y="703.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.12%)</title><rect x="65.2425%" y="677" width="0.1155%" height="15" fill="rgb(224,124,37)"/><text x="65.4925%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.12%)</title><rect x="65.2425%" y="661" width="0.1155%" height="15" fill="rgb(251,171,30)"/><text x="65.4925%" y="671.50"></text></g><g><title>unicode_normalization::lookups::composition_table (1 samples, 0.12%)</title><rect x="65.2425%" y="645" width="0.1155%" height="15" fill="rgb(236,46,54)"/><text x="65.4925%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="65.3580%" y="869" width="0.1155%" height="15" fill="rgb(245,213,5)"/><text x="65.6080%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.58%)</title><rect x="65.4734%" y="693" width="0.5774%" height="15" fill="rgb(230,144,27)"/><text x="65.7234%" y="703.50"></text></g><g><title>mysql_common::row::new_row (2 samples, 0.23%)</title><rect x="65.8199%" y="677" width="0.2309%" height="15" fill="rgb(220,86,6)"/><text x="66.0699%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="65.8199%" y="661" width="0.2309%" height="15" fill="rgb(240,20,13)"/><text x="66.0699%" y="671.50"></text></g><g><title>__rust_dealloc (1 samples, 0.12%)</title><rect x="66.0508%" y="693" width="0.1155%" height="15" fill="rgb(217,89,34)"/><text x="66.3008%" y="703.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.12%)</title><rect x="66.1663%" y="677" width="0.1155%" height="15" fill="rgb(229,13,5)"/><text x="66.4163%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.12%)</title><rect x="66.1663%" y="661" width="0.1155%" height="15" fill="rgb(244,67,35)"/><text x="66.4163%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.12%)</title><rect x="66.1663%" y="645" width="0.1155%" height="15" fill="rgb(221,40,2)"/><text x="66.4163%" y="655.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.23%)</title><rect x="66.1663%" y="693" width="0.2309%" height="15" fill="rgb(237,157,21)"/><text x="66.4163%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.12%)</title><rect x="66.2818%" y="677" width="0.1155%" height="15" fill="rgb(222,94,11)"/><text x="66.5318%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="66.2818%" y="661" width="0.1155%" height="15" fill="rgb(249,113,6)"/><text x="66.5318%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.12%)</title><rect x="66.2818%" y="645" width="0.1155%" height="15" fill="rgb(238,137,36)"/><text x="66.5318%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.12%)</title><rect x="66.2818%" y="629" width="0.1155%" height="15" fill="rgb(210,102,26)"/><text x="66.5318%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.12%)</title><rect x="66.2818%" y="613" width="0.1155%" height="15" fill="rgb(218,30,30)"/><text x="66.5318%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (8 samples, 0.92%)</title><rect x="66.3972%" y="613" width="0.9238%" height="15" fill="rgb(214,67,26)"/><text x="66.6472%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (8 samples, 0.92%)</title><rect x="66.3972%" y="597" width="0.9238%" height="15" fill="rgb(251,9,53)"/><text x="66.6472%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="67.2055%" y="581" width="0.1155%" height="15" fill="rgb(228,204,25)"/><text x="67.4555%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="67.2055%" y="565" width="0.1155%" height="15" fill="rgb(207,153,8)"/><text x="67.4555%" y="575.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 26.56%)</title><rect x="67.6674%" y="389" width="26.5589%" height="15" fill="rgb(242,9,16)"/><text x="67.9174%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 26.56%)</title><rect x="67.6674%" y="373" width="26.5589%" height="15" fill="rgb(217,211,10)"/><text x="67.9174%" y="383.50">native_write_msr</text></g><g><title>__perf_event_task_sched_in (232 samples, 26.79%)</title><rect x="67.5520%" y="405" width="26.7898%" height="15" fill="rgb(219,228,52)"/><text x="67.8020%" y="415.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.12%)</title><rect x="94.2263%" y="389" width="0.1155%" height="15" fill="rgb(231,92,29)"/><text x="94.4763%" y="399.50"></text></g><g><title>preempt_count_sub (1 samples, 0.12%)</title><rect x="94.2263%" y="373" width="0.1155%" height="15" fill="rgb(232,8,23)"/><text x="94.4763%" y="383.50"></text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 28.18%)</title><rect x="66.3972%" y="629" width="28.1755%" height="15" fill="rgb(216,211,34)"/><text x="66.6472%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (236 samples, 27.25%)</title><rect x="67.3210%" y="613" width="27.2517%" height="15" fill="rgb(236,151,0)"/><text x="67.5710%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (236 samples, 27.25%)</title><rect x="67.3210%" y="597" width="27.2517%" height="15" fill="rgb(209,168,3)"/><text x="67.5710%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (236 samples, 27.25%)</title><rect x="67.3210%" y="581" width="27.2517%" height="15" fill="rgb(208,129,28)"/><text x="67.5710%" y="591.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (235 samples, 27.14%)</title><rect x="67.4365%" y="565" width="27.1363%" height="15" fill="rgb(229,78,22)"/><text x="67.6865%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 27.14%)</title><rect x="67.4365%" y="549" width="27.1363%" height="15" fill="rgb(228,187,13)"/><text x="67.6865%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 27.14%)</title><rect x="67.4365%" y="533" width="27.1363%" height="15" fill="rgb(240,119,24)"/><text x="67.6865%" y="543.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 27.14%)</title><rect x="67.4365%" y="517" width="27.1363%" height="15" fill="rgb(209,194,42)"/><text x="67.6865%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 27.14%)</title><rect x="67.4365%" y="501" width="27.1363%" height="15" fill="rgb(247,200,46)"/><text x="67.6865%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 27.14%)</title><rect x="67.4365%" y="485" width="27.1363%" height="15" fill="rgb(218,76,16)"/><text x="67.6865%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 27.14%)</title><rect x="67.4365%" y="469" width="27.1363%" height="15" fill="rgb(225,21,48)"/><text x="67.6865%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 27.14%)</title><rect x="67.4365%" y="453" width="27.1363%" height="15" fill="rgb(239,223,50)"/><text x="67.6865%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 27.14%)</title><rect x="67.4365%" y="437" width="27.1363%" height="15" fill="rgb(244,45,21)"/><text x="67.6865%" y="447.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 27.14%)</title><rect x="67.4365%" y="421" width="27.1363%" height="15" fill="rgb(232,33,43)"/><text x="67.6865%" y="431.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (2 samples, 0.23%)</title><rect x="94.3418%" y="405" width="0.2309%" height="15" fill="rgb(209,8,3)"/><text x="94.5918%" y="415.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.12%)</title><rect x="94.4573%" y="389" width="0.1155%" height="15" fill="rgb(214,25,53)"/><text x="94.7073%" y="399.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="94.4573%" y="373" width="0.1155%" height="15" fill="rgb(254,186,54)"/><text x="94.7073%" y="383.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.12%)</title><rect x="94.4573%" y="357" width="0.1155%" height="15" fill="rgb(208,174,49)"/><text x="94.7073%" y="367.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.12%)</title><rect x="94.4573%" y="341" width="0.1155%" height="15" fill="rgb(233,191,51)"/><text x="94.7073%" y="351.50"></text></g><g><title>tick_sched_timer (1 samples, 0.12%)</title><rect x="94.4573%" y="325" width="0.1155%" height="15" fill="rgb(222,134,10)"/><text x="94.7073%" y="335.50"></text></g><g><title>hwloc::Topology::new (245 samples, 28.29%)</title><rect x="66.3972%" y="693" width="28.2910%" height="15" fill="rgb(230,226,20)"/><text x="66.6472%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (245 samples, 28.29%)</title><rect x="66.3972%" y="677" width="28.2910%" height="15" fill="rgb(251,111,25)"/><text x="66.6472%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 28.29%)</title><rect x="66.3972%" y="661" width="28.2910%" height="15" fill="rgb(224,40,46)"/><text x="66.6472%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 28.29%)</title><rect x="66.3972%" y="645" width="28.2910%" height="15" fill="rgb(236,108,47)"/><text x="66.6472%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.12%)</title><rect x="94.5727%" y="629" width="0.1155%" height="15" fill="rgb(234,93,0)"/><text x="94.8227%" y="639.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.12%)</title><rect x="94.5727%" y="613" width="0.1155%" height="15" fill="rgb(224,213,32)"/><text x="94.8227%" y="623.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.12%)</title><rect x="94.5727%" y="597" width="0.1155%" height="15" fill="rgb(251,11,48)"/><text x="94.8227%" y="607.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.12%)</title><rect x="94.5727%" y="581" width="0.1155%" height="15" fill="rgb(236,173,5)"/><text x="94.8227%" y="591.50"></text></g><g><title>__GI___read (1 samples, 0.12%)</title><rect x="94.5727%" y="565" width="0.1155%" height="15" fill="rgb(230,95,12)"/><text x="94.8227%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="94.5727%" y="549" width="0.1155%" height="15" fill="rgb(232,209,1)"/><text x="94.8227%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="94.5727%" y="533" width="0.1155%" height="15" fill="rgb(232,6,1)"/><text x="94.8227%" y="543.50"></text></g><g><title>ksys_read (1 samples, 0.12%)</title><rect x="94.5727%" y="517" width="0.1155%" height="15" fill="rgb(210,224,50)"/><text x="94.8227%" y="527.50"></text></g><g><title>vfs_read (1 samples, 0.12%)</title><rect x="94.5727%" y="501" width="0.1155%" height="15" fill="rgb(228,127,35)"/><text x="94.8227%" y="511.50"></text></g><g><title>seq_read (1 samples, 0.12%)</title><rect x="94.5727%" y="485" width="0.1155%" height="15" fill="rgb(245,102,45)"/><text x="94.8227%" y="495.50"></text></g><g><title>show_cpuinfo (1 samples, 0.12%)</title><rect x="94.5727%" y="469" width="0.1155%" height="15" fill="rgb(214,1,49)"/><text x="94.8227%" y="479.50"></text></g><g><title>seq_printf (1 samples, 0.12%)</title><rect x="94.5727%" y="453" width="0.1155%" height="15" fill="rgb(226,163,40)"/><text x="94.8227%" y="463.50"></text></g><g><title>vsnprintf (1 samples, 0.12%)</title><rect x="94.5727%" y="437" width="0.1155%" height="15" fill="rgb(239,212,28)"/><text x="94.8227%" y="447.50"></text></g><g><title>string (1 samples, 0.12%)</title><rect x="94.5727%" y="421" width="0.1155%" height="15" fill="rgb(220,20,13)"/><text x="94.8227%" y="431.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.12%)</title><rect x="94.8037%" y="661" width="0.1155%" height="15" fill="rgb(210,164,35)"/><text x="95.0537%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.12%)</title><rect x="94.8037%" y="645" width="0.1155%" height="15" fill="rgb(248,109,41)"/><text x="95.0537%" y="655.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.35%)</title><rect x="95.4965%" y="389" width="0.3464%" height="15" fill="rgb(238,23,50)"/><text x="95.7465%" y="399.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="95.6120%" y="373" width="0.2309%" height="15" fill="rgb(211,48,49)"/><text x="95.8620%" y="383.50"></text></g><g><title>loopback_xmit (2 samples, 0.23%)</title><rect x="95.6120%" y="357" width="0.2309%" height="15" fill="rgb(223,36,21)"/><text x="95.8620%" y="367.50"></text></g><g><title>netif_rx (1 samples, 0.12%)</title><rect x="95.7275%" y="341" width="0.1155%" height="15" fill="rgb(207,123,46)"/><text x="95.9775%" y="351.50"></text></g><g><title>netif_rx_internal (1 samples, 0.12%)</title><rect x="95.7275%" y="325" width="0.1155%" height="15" fill="rgb(240,218,32)"/><text x="95.9775%" y="335.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.12%)</title><rect x="95.7275%" y="309" width="0.1155%" height="15" fill="rgb(252,5,43)"/><text x="95.9775%" y="319.50"></text></g><g><title>read_tsc (1 samples, 0.12%)</title><rect x="95.7275%" y="293" width="0.1155%" height="15" fill="rgb(252,84,19)"/><text x="95.9775%" y="303.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.12%)</title><rect x="95.8430%" y="325" width="0.1155%" height="15" fill="rgb(243,152,39)"/><text x="96.0930%" y="335.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.35%)</title><rect x="96.0739%" y="101" width="0.3464%" height="15" fill="rgb(234,160,15)"/><text x="96.3239%" y="111.50"></text></g><g><title>enqueue_entity (3 samples, 0.35%)</title><rect x="96.0739%" y="85" width="0.3464%" height="15" fill="rgb(237,34,20)"/><text x="96.3239%" y="95.50"></text></g><g><title>sock_def_readable (4 samples, 0.46%)</title><rect x="96.0739%" y="165" width="0.4619%" height="15" fill="rgb(229,97,13)"/><text x="96.3239%" y="175.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.46%)</title><rect x="96.0739%" y="149" width="0.4619%" height="15" fill="rgb(234,71,50)"/><text x="96.3239%" y="159.50"></text></g><g><title>__wake_up_common (4 samples, 0.46%)</title><rect x="96.0739%" y="133" width="0.4619%" height="15" fill="rgb(253,155,4)"/><text x="96.3239%" y="143.50"></text></g><g><title>try_to_wake_up (4 samples, 0.46%)</title><rect x="96.0739%" y="117" width="0.4619%" height="15" fill="rgb(222,185,37)"/><text x="96.3239%" y="127.50"></text></g><g><title>update_rq_clock (1 samples, 0.12%)</title><rect x="96.4203%" y="101" width="0.1155%" height="15" fill="rgb(251,177,13)"/><text x="96.6703%" y="111.50"></text></g><g><title>tcp_ack (2 samples, 0.23%)</title><rect x="96.5358%" y="165" width="0.2309%" height="15" fill="rgb(250,179,40)"/><text x="96.7858%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.92%)</title><rect x="95.9584%" y="197" width="0.9238%" height="15" fill="rgb(242,44,2)"/><text x="96.2084%" y="207.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.92%)</title><rect x="95.9584%" y="181" width="0.9238%" height="15" fill="rgb(216,177,13)"/><text x="96.2084%" y="191.50"></text></g><g><title>tcp_data_queue (1 samples, 0.12%)</title><rect x="96.7667%" y="165" width="0.1155%" height="15" fill="rgb(216,106,43)"/><text x="97.0167%" y="175.50"></text></g><g><title>sock_def_readable (1 samples, 0.12%)</title><rect x="96.7667%" y="149" width="0.1155%" height="15" fill="rgb(216,183,2)"/><text x="97.0167%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.12%)</title><rect x="96.7667%" y="133" width="0.1155%" height="15" fill="rgb(249,75,3)"/><text x="97.0167%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.12%)</title><rect x="96.7667%" y="117" width="0.1155%" height="15" fill="rgb(219,67,39)"/><text x="97.0167%" y="127.50"></text></g><g><title>try_to_wake_up (1 samples, 0.12%)</title><rect x="96.7667%" y="101" width="0.1155%" height="15" fill="rgb(253,228,2)"/><text x="97.0167%" y="111.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.12%)</title><rect x="96.7667%" y="85" width="0.1155%" height="15" fill="rgb(235,138,27)"/><text x="97.0167%" y="95.50"></text></g><g><title>enqueue_entity (1 samples, 0.12%)</title><rect x="96.7667%" y="69" width="0.1155%" height="15" fill="rgb(236,97,51)"/><text x="97.0167%" y="79.50"></text></g><g><title>update_load_avg (1 samples, 0.12%)</title><rect x="96.7667%" y="53" width="0.1155%" height="15" fill="rgb(240,80,30)"/><text x="97.0167%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.12%)</title><rect x="96.7667%" y="37" width="0.1155%" height="15" fill="rgb(230,178,19)"/><text x="97.0167%" y="47.50"></text></g><g><title>ip_local_deliver (9 samples, 1.04%)</title><rect x="95.9584%" y="261" width="1.0393%" height="15" fill="rgb(210,190,27)"/><text x="96.2084%" y="271.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 1.04%)</title><rect x="95.9584%" y="245" width="1.0393%" height="15" fill="rgb(222,107,31)"/><text x="96.2084%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 1.04%)</title><rect x="95.9584%" y="229" width="1.0393%" height="15" fill="rgb(216,127,34)"/><text x="96.2084%" y="239.50"></text></g><g><title>tcp_v4_rcv (9 samples, 1.04%)</title><rect x="95.9584%" y="213" width="1.0393%" height="15" fill="rgb(234,116,52)"/><text x="96.2084%" y="223.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.12%)</title><rect x="96.8822%" y="197" width="0.1155%" height="15" fill="rgb(222,124,15)"/><text x="97.1322%" y="207.50"></text></g><g><title>__ip_queue_xmit (15 samples, 1.73%)</title><rect x="95.3811%" y="437" width="1.7321%" height="15" fill="rgb(231,179,28)"/><text x="95.6311%" y="447.50"></text></g><g><title>ip_output (15 samples, 1.73%)</title><rect x="95.3811%" y="421" width="1.7321%" height="15" fill="rgb(226,93,45)"/><text x="95.6311%" y="431.50"></text></g><g><title>ip_finish_output2 (15 samples, 1.73%)</title><rect x="95.3811%" y="405" width="1.7321%" height="15" fill="rgb(215,8,51)"/><text x="95.6311%" y="415.50"></text></g><g><title>__local_bh_enable_ip (11 samples, 1.27%)</title><rect x="95.8430%" y="389" width="1.2702%" height="15" fill="rgb(223,106,5)"/><text x="96.0930%" y="399.50"></text></g><g><title>do_softirq (11 samples, 1.27%)</title><rect x="95.8430%" y="373" width="1.2702%" height="15" fill="rgb(250,191,5)"/><text x="96.0930%" y="383.50"></text></g><g><title>do_softirq_own_stack (11 samples, 1.27%)</title><rect x="95.8430%" y="357" width="1.2702%" height="15" fill="rgb(242,132,44)"/><text x="96.0930%" y="367.50"></text></g><g><title>__do_softirq (11 samples, 1.27%)</title><rect x="95.8430%" y="341" width="1.2702%" height="15" fill="rgb(251,152,29)"/><text x="96.0930%" y="351.50"></text></g><g><title>net_rx_action (10 samples, 1.15%)</title><rect x="95.9584%" y="325" width="1.1547%" height="15" fill="rgb(218,179,5)"/><text x="96.2084%" y="335.50"></text></g><g><title>process_backlog (10 samples, 1.15%)</title><rect x="95.9584%" y="309" width="1.1547%" height="15" fill="rgb(227,67,19)"/><text x="96.2084%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (10 samples, 1.15%)</title><rect x="95.9584%" y="293" width="1.1547%" height="15" fill="rgb(233,119,31)"/><text x="96.2084%" y="303.50"></text></g><g><title>ip_rcv (10 samples, 1.15%)</title><rect x="95.9584%" y="277" width="1.1547%" height="15" fill="rgb(241,120,22)"/><text x="96.2084%" y="287.50"></text></g><g><title>ip_rcv_core (1 samples, 0.12%)</title><rect x="96.9977%" y="261" width="0.1155%" height="15" fill="rgb(224,102,30)"/><text x="97.2477%" y="271.50"></text></g><g><title>tcp_update_skb_after_send (1 samples, 0.12%)</title><rect x="97.1132%" y="437" width="0.1155%" height="15" fill="rgb(210,164,37)"/><text x="97.3632%" y="447.50"></text></g><g><title>__tcp_transmit_skb (17 samples, 1.96%)</title><rect x="95.3811%" y="453" width="1.9630%" height="15" fill="rgb(226,191,16)"/><text x="95.6311%" y="463.50">_..</text></g><g><title>tcp_v4_send_check (1 samples, 0.12%)</title><rect x="97.2286%" y="437" width="0.1155%" height="15" fill="rgb(214,40,45)"/><text x="97.4786%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (18 samples, 2.08%)</title><rect x="95.3811%" y="485" width="2.0785%" height="15" fill="rgb(244,29,26)"/><text x="95.6311%" y="495.50">_..</text></g><g><title>tcp_write_xmit (18 samples, 2.08%)</title><rect x="95.3811%" y="469" width="2.0785%" height="15" fill="rgb(216,16,5)"/><text x="95.6311%" y="479.50">t..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.12%)</title><rect x="97.3441%" y="453" width="0.1155%" height="15" fill="rgb(249,76,35)"/><text x="97.5941%" y="463.50"></text></g><g><title>sk_reset_timer (1 samples, 0.12%)</title><rect x="97.3441%" y="437" width="0.1155%" height="15" fill="rgb(207,11,44)"/><text x="97.5941%" y="447.50"></text></g><g><title>__mod_timer (1 samples, 0.12%)</title><rect x="97.3441%" y="421" width="0.1155%" height="15" fill="rgb(228,190,49)"/><text x="97.5941%" y="431.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.35%)</title><rect x="97.4596%" y="485" width="0.3464%" height="15" fill="rgb(214,173,12)"/><text x="97.7096%" y="495.50"></text></g><g><title>__alloc_skb (3 samples, 0.35%)</title><rect x="97.4596%" y="469" width="0.3464%" height="15" fill="rgb(218,26,35)"/><text x="97.7096%" y="479.50"></text></g><g><title>__ksize (2 samples, 0.23%)</title><rect x="97.5751%" y="453" width="0.2309%" height="15" fill="rgb(220,200,19)"/><text x="97.8251%" y="463.50"></text></g><g><title>__x64_sys_sendto (24 samples, 2.77%)</title><rect x="95.2656%" y="565" width="2.7714%" height="15" fill="rgb(239,95,49)"/><text x="95.5156%" y="575.50">__..</text></g><g><title>__sys_sendto (24 samples, 2.77%)</title><rect x="95.2656%" y="549" width="2.7714%" height="15" fill="rgb(235,85,53)"/><text x="95.5156%" y="559.50">__..</text></g><g><title>sock_sendmsg (24 samples, 2.77%)</title><rect x="95.2656%" y="533" width="2.7714%" height="15" fill="rgb(233,133,31)"/><text x="95.5156%" y="543.50">so..</text></g><g><title>tcp_sendmsg (24 samples, 2.77%)</title><rect x="95.2656%" y="517" width="2.7714%" height="15" fill="rgb(218,25,20)"/><text x="95.5156%" y="527.50">tc..</text></g><g><title>tcp_sendmsg_locked (23 samples, 2.66%)</title><rect x="95.3811%" y="501" width="2.6559%" height="15" fill="rgb(252,210,38)"/><text x="95.6311%" y="511.50">tc..</text></g><g><title>tcp_send_mss (2 samples, 0.23%)</title><rect x="97.8060%" y="485" width="0.2309%" height="15" fill="rgb(242,134,21)"/><text x="98.0560%" y="495.50"></text></g><g><title>tcp_current_mss (2 samples, 0.23%)</title><rect x="97.8060%" y="469" width="0.2309%" height="15" fill="rgb(213,28,48)"/><text x="98.0560%" y="479.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="98.0370%" y="565" width="0.1155%" height="15" fill="rgb(250,196,2)"/><text x="98.2870%" y="575.50"></text></g><g><title>do_syscall_64 (27 samples, 3.12%)</title><rect x="95.1501%" y="581" width="3.1178%" height="15" fill="rgb(227,5,17)"/><text x="95.4001%" y="591.50">do_..</text></g><g><title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="98.1524%" y="565" width="0.1155%" height="15" fill="rgb(221,226,24)"/><text x="98.4024%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (33 samples, 3.81%)</title><rect x="94.6882%" y="693" width="3.8106%" height="15" fill="rgb(211,5,48)"/><text x="94.9382%" y="703.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (32 samples, 3.70%)</title><rect x="94.8037%" y="677" width="3.6952%" height="15" fill="rgb(219,150,6)"/><text x="95.0537%" y="687.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (31 samples, 3.58%)</title><rect x="94.9192%" y="661" width="3.5797%" height="15" fill="rgb(251,46,16)"/><text x="95.1692%" y="671.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (31 samples, 3.58%)</title><rect x="94.9192%" y="645" width="3.5797%" height="15" fill="rgb(220,204,40)"/><text x="95.1692%" y="655.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (31 samples, 3.58%)</title><rect x="94.9192%" y="629" width="3.5797%" height="15" fill="rgb(211,85,2)"/><text x="95.1692%" y="639.50">std:..</text></g><g><title>__libc_send (31 samples, 3.58%)</title><rect x="94.9192%" y="613" width="3.5797%" height="15" fill="rgb(229,17,7)"/><text x="95.1692%" y="623.50">__li..</text></g><g><title>entry_SYSCALL_64 (31 samples, 3.58%)</title><rect x="94.9192%" y="597" width="3.5797%" height="15" fill="rgb(239,72,28)"/><text x="95.1692%" y="607.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.23%)</title><rect x="98.2679%" y="581" width="0.2309%" height="15" fill="rgb(230,47,54)"/><text x="98.5179%" y="591.50"></text></g><g><title>__libc_start_main (287 samples, 33.14%)</title><rect x="65.4734%" y="853" width="33.1409%" height="15" fill="rgb(214,50,8)"/><text x="65.7234%" y="863.50">__libc_start_main</text></g><g><title>main (287 samples, 33.14%)</title><rect x="65.4734%" y="837" width="33.1409%" height="15" fill="rgb(216,198,43)"/><text x="65.7234%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (287 samples, 33.14%)</title><rect x="65.4734%" y="821" width="33.1409%" height="15" fill="rgb(234,20,35)"/><text x="65.7234%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (287 samples, 33.14%)</title><rect x="65.4734%" y="805" width="33.1409%" height="15" fill="rgb(254,45,19)"/><text x="65.7234%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (287 samples, 33.14%)</title><rect x="65.4734%" y="789" width="33.1409%" height="15" fill="rgb(219,14,44)"/><text x="65.7234%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (287 samples, 33.14%)</title><rect x="65.4734%" y="773" width="33.1409%" height="15" fill="rgb(217,220,26)"/><text x="65.7234%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (287 samples, 33.14%)</title><rect x="65.4734%" y="757" width="33.1409%" height="15" fill="rgb(213,158,28)"/><text x="65.7234%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function:..</text></g><g><title>std::rt::lang_start::_{{closure}} (287 samples, 33.14%)</title><rect x="65.4734%" y="741" width="33.1409%" height="15" fill="rgb(252,51,52)"/><text x="65.7234%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (287 samples, 33.14%)</title><rect x="65.4734%" y="725" width="33.1409%" height="15" fill="rgb(246,89,16)"/><text x="65.7234%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtra..</text></g><g><title>lobsters::main (287 samples, 33.14%)</title><rect x="65.4734%" y="709" width="33.1409%" height="15" fill="rgb(216,158,49)"/><text x="65.7234%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.12%)</title><rect x="98.4988%" y="693" width="0.1155%" height="15" fill="rgb(236,107,19)"/><text x="98.7488%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.12%)</title><rect x="98.4988%" y="677" width="0.1155%" height="15" fill="rgb(228,185,30)"/><text x="98.7488%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.12%)</title><rect x="98.4988%" y="661" width="0.1155%" height="15" fill="rgb(246,134,8)"/><text x="98.7488%" y="671.50"></text></g><g><title>__GI___socket (1 samples, 0.12%)</title><rect x="98.4988%" y="645" width="0.1155%" height="15" fill="rgb(214,143,50)"/><text x="98.7488%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="98.4988%" y="629" width="0.1155%" height="15" fill="rgb(228,75,8)"/><text x="98.7488%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="98.4988%" y="613" width="0.1155%" height="15" fill="rgb(207,175,4)"/><text x="98.7488%" y="623.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.12%)</title><rect x="98.4988%" y="597" width="0.1155%" height="15" fill="rgb(205,108,24)"/><text x="98.7488%" y="607.50"></text></g><g><title>__sys_socket (1 samples, 0.12%)</title><rect x="98.4988%" y="581" width="0.1155%" height="15" fill="rgb(244,120,49)"/><text x="98.7488%" y="591.50"></text></g><g><title>__sock_create (1 samples, 0.12%)</title><rect x="98.4988%" y="565" width="0.1155%" height="15" fill="rgb(223,47,38)"/><text x="98.7488%" y="575.50"></text></g><g><title>sock_alloc (1 samples, 0.12%)</title><rect x="98.4988%" y="549" width="0.1155%" height="15" fill="rgb(229,179,11)"/><text x="98.7488%" y="559.50"></text></g><g><title>new_inode_pseudo (1 samples, 0.12%)</title><rect x="98.4988%" y="533" width="0.1155%" height="15" fill="rgb(231,122,1)"/><text x="98.7488%" y="543.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="98.4988%" y="517" width="0.1155%" height="15" fill="rgb(245,119,9)"/><text x="98.7488%" y="527.50"></text></g><g><title>_start (288 samples, 33.26%)</title><rect x="65.4734%" y="869" width="33.2564%" height="15" fill="rgb(241,163,25)"/><text x="65.7234%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.12%)</title><rect x="98.6143%" y="853" width="0.1155%" height="15" fill="rgb(217,214,3)"/><text x="98.8643%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.12%)</title><rect x="98.6143%" y="837" width="0.1155%" height="15" fill="rgb(240,86,28)"/><text x="98.8643%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.12%)</title><rect x="98.6143%" y="821" width="0.1155%" height="15" fill="rgb(215,47,9)"/><text x="98.8643%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.12%)</title><rect x="98.6143%" y="805" width="0.1155%" height="15" fill="rgb(252,25,45)"/><text x="98.8643%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.12%)</title><rect x="98.6143%" y="789" width="0.1155%" height="15" fill="rgb(251,164,9)"/><text x="98.8643%" y="799.50"></text></g><g><title>openaux (1 samples, 0.12%)</title><rect x="98.6143%" y="773" width="0.1155%" height="15" fill="rgb(233,194,0)"/><text x="98.8643%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.12%)</title><rect x="98.6143%" y="757" width="0.1155%" height="15" fill="rgb(249,111,24)"/><text x="98.8643%" y="767.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.12%)</title><rect x="98.6143%" y="741" width="0.1155%" height="15" fill="rgb(250,223,3)"/><text x="98.8643%" y="751.50"></text></g><g><title>__mmap (1 samples, 0.12%)</title><rect x="98.6143%" y="725" width="0.1155%" height="15" fill="rgb(236,178,37)"/><text x="98.8643%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.12%)</title><rect x="98.6143%" y="709" width="0.1155%" height="15" fill="rgb(241,158,50)"/><text x="98.8643%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.12%)</title><rect x="98.6143%" y="693" width="0.1155%" height="15" fill="rgb(213,121,41)"/><text x="98.8643%" y="703.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.12%)</title><rect x="98.6143%" y="677" width="0.1155%" height="15" fill="rgb(240,92,3)"/><text x="98.8643%" y="687.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.12%)</title><rect x="98.6143%" y="661" width="0.1155%" height="15" fill="rgb(205,123,3)"/><text x="98.8643%" y="671.50"></text></g><g><title>do_mmap (1 samples, 0.12%)</title><rect x="98.6143%" y="645" width="0.1155%" height="15" fill="rgb(205,97,47)"/><text x="98.8643%" y="655.50"></text></g><g><title>mmap_region (1 samples, 0.12%)</title><rect x="98.6143%" y="629" width="0.1155%" height="15" fill="rgb(247,152,14)"/><text x="98.8643%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="98.7298%" y="869" width="0.1155%" height="15" fill="rgb(248,195,53)"/><text x="98.9798%" y="879.50"></text></g><g><title>[vmlinux] (1 samples, 0.12%)</title><rect x="98.8453%" y="837" width="0.1155%" height="15" fill="rgb(226,201,16)"/><text x="99.0953%" y="847.50"></text></g><g><title>do_group_exit (1 samples, 0.12%)</title><rect x="98.8453%" y="821" width="0.1155%" height="15" fill="rgb(205,98,0)"/><text x="99.0953%" y="831.50"></text></g><g><title>do_exit (1 samples, 0.12%)</title><rect x="98.8453%" y="805" width="0.1155%" height="15" fill="rgb(214,191,48)"/><text x="99.0953%" y="815.50"></text></g><g><title>mmput (1 samples, 0.12%)</title><rect x="98.8453%" y="789" width="0.1155%" height="15" fill="rgb(237,112,39)"/><text x="99.0953%" y="799.50"></text></g><g><title>exit_mmap (1 samples, 0.12%)</title><rect x="98.8453%" y="773" width="0.1155%" height="15" fill="rgb(247,203,27)"/><text x="99.0953%" y="783.50"></text></g><g><title>unmap_vmas (1 samples, 0.12%)</title><rect x="98.8453%" y="757" width="0.1155%" height="15" fill="rgb(235,124,28)"/><text x="99.0953%" y="767.50"></text></g><g><title>unmap_page_range (1 samples, 0.12%)</title><rect x="98.8453%" y="741" width="0.1155%" height="15" fill="rgb(208,207,46)"/><text x="99.0953%" y="751.50"></text></g><g><title>mark_page_accessed (1 samples, 0.12%)</title><rect x="98.8453%" y="725" width="0.1155%" height="15" fill="rgb(234,176,4)"/><text x="99.0953%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="98.8453%" y="869" width="0.2309%" height="15" fill="rgb(230,133,28)"/><text x="99.0953%" y="879.50"></text></g><g><title>do_syscall_64 (2 samples, 0.23%)</title><rect x="98.8453%" y="853" width="0.2309%" height="15" fill="rgb(211,137,40)"/><text x="99.0953%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.12%)</title><rect x="98.9607%" y="837" width="0.1155%" height="15" fill="rgb(254,35,13)"/><text x="99.2107%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.12%)</title><rect x="98.9607%" y="821" width="0.1155%" height="15" fill="rgb(225,49,51)"/><text x="99.2107%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.12%)</title><rect x="98.9607%" y="805" width="0.1155%" height="15" fill="rgb(251,10,15)"/><text x="99.2107%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.12%)</title><rect x="98.9607%" y="789" width="0.1155%" height="15" fill="rgb(228,207,15)"/><text x="99.2107%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.12%)</title><rect x="98.9607%" y="773" width="0.1155%" height="15" fill="rgb(241,99,19)"/><text x="99.2107%" y="783.50"></text></g><g><title>__clear_user (1 samples, 0.12%)</title><rect x="98.9607%" y="757" width="0.1155%" height="15" fill="rgb(207,104,49)"/><text x="99.2107%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.12%)</title><rect x="98.9607%" y="741" width="0.1155%" height="15" fill="rgb(234,99,18)"/><text x="99.2107%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="98.9607%" y="725" width="0.1155%" height="15" fill="rgb(213,191,49)"/><text x="99.2107%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.12%)</title><rect x="98.9607%" y="709" width="0.1155%" height="15" fill="rgb(210,226,19)"/><text x="99.2107%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="98.9607%" y="693" width="0.1155%" height="15" fill="rgb(229,97,18)"/><text x="99.2107%" y="703.50"></text></g><g><title>copy_page (1 samples, 0.12%)</title><rect x="98.9607%" y="677" width="0.1155%" height="15" fill="rgb(211,167,15)"/><text x="99.2107%" y="687.50"></text></g><g><title>msql_srv::writers::column_definitions (1 samples, 0.12%)</title><rect x="99.0762%" y="869" width="0.1155%" height="15" fill="rgb(210,169,34)"/><text x="99.3262%" y="879.50"></text></g><g><title>lobsters (860 samples, 99.31%)</title><rect x="0.0000%" y="885" width="99.3072%" height="15" fill="rgb(241,121,31)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.12%)</title><rect x="99.1917%" y="869" width="0.1155%" height="15" fill="rgb(232,40,11)"/><text x="99.4417%" y="879.50"></text></g><g><title>all (866 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(205,86,26)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.69%)</title><rect x="99.3072%" y="885" width="0.6928%" height="15" fill="rgb(231,126,28)"/><text x="99.5572%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.69%)</title><rect x="99.3072%" y="869" width="0.6928%" height="15" fill="rgb(219,221,18)"/><text x="99.5572%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.69%)</title><rect x="99.3072%" y="853" width="0.6928%" height="15" fill="rgb(211,40,0)"/><text x="99.5572%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.69%)</title><rect x="99.3072%" y="837" width="0.6928%" height="15" fill="rgb(239,85,43)"/><text x="99.5572%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.69%)</title><rect x="99.3072%" y="821" width="0.6928%" height="15" fill="rgb(231,55,21)"/><text x="99.5572%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.69%)</title><rect x="99.3072%" y="805" width="0.6928%" height="15" fill="rgb(225,184,43)"/><text x="99.5572%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.69%)</title><rect x="99.3072%" y="789" width="0.6928%" height="15" fill="rgb(251,158,41)"/><text x="99.5572%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.69%)</title><rect x="99.3072%" y="773" width="0.6928%" height="15" fill="rgb(234,159,37)"/><text x="99.5572%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.69%)</title><rect x="99.3072%" y="757" width="0.6928%" height="15" fill="rgb(216,204,22)"/><text x="99.5572%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.69%)</title><rect x="99.3072%" y="741" width="0.6928%" height="15" fill="rgb(214,17,3)"/><text x="99.5572%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.58%)</title><rect x="99.4226%" y="725" width="0.5774%" height="15" fill="rgb(212,111,17)"/><text x="99.6726%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.58%)</title><rect x="99.4226%" y="709" width="0.5774%" height="15" fill="rgb(221,157,24)"/><text x="99.6726%" y="719.50"></text></g></svg></svg>