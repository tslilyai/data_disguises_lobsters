<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="885.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="885.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[stack]] (2 samples, 0.19%)</title><rect x="0.0944%" y="821" width="0.1889%" height="15" fill="rgb(227,0,7)"/><text x="0.3444%" y="831.50"></text></g><g><title>__libc_send (2 samples, 0.19%)</title><rect x="0.0944%" y="805" width="0.1889%" height="15" fill="rgb(217,0,24)"/><text x="0.3444%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.19%)</title><rect x="0.0944%" y="789" width="0.1889%" height="15" fill="rgb(221,193,54)"/><text x="0.3444%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.28%)</title><rect x="0.2833%" y="805" width="0.2833%" height="15" fill="rgb(248,212,6)"/><text x="0.5333%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="0.6610%" y="805" width="0.1889%" height="15" fill="rgb(208,68,35)"/><text x="0.9110%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.19%)</title><rect x="1.0387%" y="805" width="0.1889%" height="15" fill="rgb(232,128,0)"/><text x="1.2887%" y="815.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.28%)</title><rect x="1.2276%" y="805" width="0.2833%" height="15" fill="rgb(207,160,47)"/><text x="1.4776%" y="815.50"></text></g><g><title>__libc_send (2 samples, 0.19%)</title><rect x="1.5109%" y="805" width="0.1889%" height="15" fill="rgb(228,23,34)"/><text x="1.7609%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.19%)</title><rect x="1.5109%" y="789" width="0.1889%" height="15" fill="rgb(218,30,26)"/><text x="1.7609%" y="799.50"></text></g><g><title>__rdl_realloc (2 samples, 0.19%)</title><rect x="1.7941%" y="805" width="0.1889%" height="15" fill="rgb(220,122,19)"/><text x="2.0441%" y="815.50"></text></g><g><title>_int_free (2 samples, 0.19%)</title><rect x="1.9830%" y="805" width="0.1889%" height="15" fill="rgb(250,228,42)"/><text x="2.2330%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.47%)</title><rect x="2.1719%" y="805" width="0.4721%" height="15" fill="rgb(240,193,28)"/><text x="2.4219%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.38%)</title><rect x="2.6440%" y="805" width="0.3777%" height="15" fill="rgb(216,20,37)"/><text x="2.8940%" y="815.50"></text></g><g><title>core::fmt::write (3 samples, 0.28%)</title><rect x="3.0217%" y="805" width="0.2833%" height="15" fill="rgb(206,188,39)"/><text x="3.2717%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (2 samples, 0.19%)</title><rect x="3.4939%" y="805" width="0.1889%" height="15" fill="rgb(217,207,13)"/><text x="3.7439%" y="815.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.28%)</title><rect x="4.2493%" y="805" width="0.2833%" height="15" fill="rgb(231,73,38)"/><text x="4.4993%" y="815.50"></text></g><g><title>[anon] (47 samples, 4.44%)</title><rect x="0.2833%" y="821" width="4.4381%" height="15" fill="rgb(225,20,46)"/><text x="0.5333%" y="831.50">[anon]</text></g><g><title>[lobsters] (2 samples, 0.19%)</title><rect x="4.7214%" y="821" width="0.1889%" height="15" fill="rgb(210,31,41)"/><text x="4.9714%" y="831.50"></text></g><g><title>__GI___mprotect (2 samples, 0.19%)</title><rect x="5.4769%" y="677" width="0.1889%" height="15" fill="rgb(221,200,47)"/><text x="5.7269%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.19%)</title><rect x="5.4769%" y="661" width="0.1889%" height="15" fill="rgb(226,26,5)"/><text x="5.7269%" y="671.50"></text></g><g><title>do_syscall_64 (2 samples, 0.19%)</title><rect x="5.4769%" y="645" width="0.1889%" height="15" fill="rgb(249,33,26)"/><text x="5.7269%" y="655.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.19%)</title><rect x="5.4769%" y="629" width="0.1889%" height="15" fill="rgb(235,183,28)"/><text x="5.7269%" y="639.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.19%)</title><rect x="5.4769%" y="613" width="0.1889%" height="15" fill="rgb(221,5,38)"/><text x="5.7269%" y="623.50"></text></g><g><title>mprotect_fixup (2 samples, 0.19%)</title><rect x="5.4769%" y="597" width="0.1889%" height="15" fill="rgb(247,18,42)"/><text x="5.7269%" y="607.50"></text></g><g><title>perf_event_mmap (2 samples, 0.19%)</title><rect x="5.4769%" y="581" width="0.1889%" height="15" fill="rgb(241,131,45)"/><text x="5.7269%" y="591.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.19%)</title><rect x="5.4769%" y="565" width="0.1889%" height="15" fill="rgb(249,31,29)"/><text x="5.7269%" y="575.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.19%)</title><rect x="5.4769%" y="549" width="0.1889%" height="15" fill="rgb(225,111,53)"/><text x="5.7269%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.38%)</title><rect x="5.4769%" y="757" width="0.3777%" height="15" fill="rgb(238,160,17)"/><text x="5.7269%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.38%)</title><rect x="5.4769%" y="741" width="0.3777%" height="15" fill="rgb(214,148,48)"/><text x="5.7269%" y="751.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.38%)</title><rect x="5.4769%" y="725" width="0.3777%" height="15" fill="rgb(232,36,49)"/><text x="5.7269%" y="735.50"></text></g><g><title>_int_malloc (4 samples, 0.38%)</title><rect x="5.4769%" y="709" width="0.3777%" height="15" fill="rgb(209,103,24)"/><text x="5.7269%" y="719.50"></text></g><g><title>sysmalloc (4 samples, 0.38%)</title><rect x="5.4769%" y="693" width="0.3777%" height="15" fill="rgb(229,88,8)"/><text x="5.7269%" y="703.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (8 samples, 0.76%)</title><rect x="5.1936%" y="789" width="0.7554%" height="15" fill="rgb(213,181,19)"/><text x="5.4436%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (8 samples, 0.76%)</title><rect x="5.1936%" y="773" width="0.7554%" height="15" fill="rgb(254,191,54)"/><text x="5.4436%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.38%)</title><rect x="6.1379%" y="677" width="0.3777%" height="15" fill="rgb(241,83,37)"/><text x="6.3879%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.38%)</title><rect x="6.1379%" y="661" width="0.3777%" height="15" fill="rgb(233,36,39)"/><text x="6.3879%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.28%)</title><rect x="6.2323%" y="645" width="0.2833%" height="15" fill="rgb(226,3,54)"/><text x="6.4823%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.28%)</title><rect x="6.2323%" y="629" width="0.2833%" height="15" fill="rgb(245,192,40)"/><text x="6.4823%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.28%)</title><rect x="6.2323%" y="613" width="0.2833%" height="15" fill="rgb(238,167,29)"/><text x="6.4823%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.28%)</title><rect x="6.2323%" y="597" width="0.2833%" height="15" fill="rgb(232,182,51)"/><text x="6.4823%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.28%)</title><rect x="6.2323%" y="581" width="0.2833%" height="15" fill="rgb(231,60,39)"/><text x="6.4823%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.28%)</title><rect x="6.2323%" y="565" width="0.2833%" height="15" fill="rgb(208,69,12)"/><text x="6.4823%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.28%)</title><rect x="6.2323%" y="549" width="0.2833%" height="15" fill="rgb(235,93,37)"/><text x="6.4823%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.28%)</title><rect x="6.2323%" y="533" width="0.2833%" height="15" fill="rgb(213,116,39)"/><text x="6.4823%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.28%)</title><rect x="6.2323%" y="517" width="0.2833%" height="15" fill="rgb(222,207,29)"/><text x="6.4823%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.28%)</title><rect x="6.2323%" y="501" width="0.2833%" height="15" fill="rgb(206,96,30)"/><text x="6.4823%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.28%)</title><rect x="6.2323%" y="485" width="0.2833%" height="15" fill="rgb(218,138,4)"/><text x="6.4823%" y="495.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.28%)</title><rect x="6.2323%" y="469" width="0.2833%" height="15" fill="rgb(250,191,14)"/><text x="6.4823%" y="479.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.28%)</title><rect x="6.2323%" y="453" width="0.2833%" height="15" fill="rgb(239,60,40)"/><text x="6.4823%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.66%)</title><rect x="6.0434%" y="709" width="0.6610%" height="15" fill="rgb(206,27,48)"/><text x="6.2934%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.66%)</title><rect x="6.0434%" y="693" width="0.6610%" height="15" fill="rgb(225,35,8)"/><text x="6.2934%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="6.5156%" y="677" width="0.1889%" height="15" fill="rgb(250,213,24)"/><text x="6.7656%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="6.7044%" y="693" width="0.1889%" height="15" fill="rgb(247,123,22)"/><text x="6.9544%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.19%)</title><rect x="6.7044%" y="677" width="0.1889%" height="15" fill="rgb(231,138,38)"/><text x="6.9544%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 1.13%)</title><rect x="5.9490%" y="725" width="1.1331%" height="15" fill="rgb(231,145,46)"/><text x="6.1990%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.38%)</title><rect x="6.7044%" y="709" width="0.3777%" height="15" fill="rgb(251,118,11)"/><text x="6.9544%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.19%)</title><rect x="6.8933%" y="693" width="0.1889%" height="15" fill="rgb(217,147,25)"/><text x="7.1433%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="7.0822%" y="725" width="0.1889%" height="15" fill="rgb(247,81,37)"/><text x="7.3322%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (16 samples, 1.51%)</title><rect x="5.9490%" y="773" width="1.5109%" height="15" fill="rgb(209,12,38)"/><text x="6.1990%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (16 samples, 1.51%)</title><rect x="5.9490%" y="757" width="1.5109%" height="15" fill="rgb(227,1,9)"/><text x="6.1990%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (16 samples, 1.51%)</title><rect x="5.9490%" y="741" width="1.5109%" height="15" fill="rgb(248,47,43)"/><text x="6.1990%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.19%)</title><rect x="7.2710%" y="725" width="0.1889%" height="15" fill="rgb(221,10,30)"/><text x="7.5210%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="7.2710%" y="709" width="0.1889%" height="15" fill="rgb(210,229,1)"/><text x="7.5210%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="7.2710%" y="693" width="0.1889%" height="15" fill="rgb(222,148,37)"/><text x="7.5210%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="7.2710%" y="677" width="0.1889%" height="15" fill="rgb(234,67,33)"/><text x="7.5210%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="7.2710%" y="661" width="0.1889%" height="15" fill="rgb(247,98,35)"/><text x="7.5210%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.19%)</title><rect x="7.2710%" y="645" width="0.1889%" height="15" fill="rgb(247,138,52)"/><text x="7.5210%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.19%)</title><rect x="7.2710%" y="629" width="0.1889%" height="15" fill="rgb(213,79,30)"/><text x="7.5210%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.19%)</title><rect x="7.2710%" y="613" width="0.1889%" height="15" fill="rgb(246,177,23)"/><text x="7.5210%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.19%)</title><rect x="7.2710%" y="597" width="0.1889%" height="15" fill="rgb(230,62,27)"/><text x="7.5210%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.19%)</title><rect x="7.2710%" y="581" width="0.1889%" height="15" fill="rgb(216,154,8)"/><text x="7.5210%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.19%)</title><rect x="7.2710%" y="565" width="0.1889%" height="15" fill="rgb(244,35,45)"/><text x="7.5210%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.19%)</title><rect x="7.2710%" y="549" width="0.1889%" height="15" fill="rgb(251,115,12)"/><text x="7.5210%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.19%)</title><rect x="7.2710%" y="533" width="0.1889%" height="15" fill="rgb(240,54,50)"/><text x="7.5210%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.19%)</title><rect x="7.2710%" y="517" width="0.1889%" height="15" fill="rgb(233,84,52)"/><text x="7.5210%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.19%)</title><rect x="7.2710%" y="501" width="0.1889%" height="15" fill="rgb(207,117,47)"/><text x="7.5210%" y="511.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (27 samples, 2.55%)</title><rect x="5.1936%" y="805" width="2.5496%" height="15" fill="rgb(249,43,39)"/><text x="5.4436%" y="815.50">&lt;d..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (19 samples, 1.79%)</title><rect x="5.9490%" y="789" width="1.7941%" height="15" fill="rgb(209,38,44)"/><text x="6.1990%" y="799.50">d..</text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.28%)</title><rect x="7.4599%" y="773" width="0.2833%" height="15" fill="rgb(236,212,23)"/><text x="7.7099%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.28%)</title><rect x="7.4599%" y="757" width="0.2833%" height="15" fill="rgb(242,79,21)"/><text x="7.7099%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.28%)</title><rect x="7.4599%" y="741" width="0.2833%" height="15" fill="rgb(211,96,35)"/><text x="7.7099%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (3 samples, 0.28%)</title><rect x="7.4599%" y="725" width="0.2833%" height="15" fill="rgb(253,215,40)"/><text x="7.7099%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.19%)</title><rect x="7.5543%" y="709" width="0.1889%" height="15" fill="rgb(211,81,21)"/><text x="7.8043%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.19%)</title><rect x="7.9320%" y="805" width="0.1889%" height="15" fill="rgb(208,190,38)"/><text x="8.1820%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.19%)</title><rect x="7.9320%" y="789" width="0.1889%" height="15" fill="rgb(235,213,38)"/><text x="8.1820%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.19%)</title><rect x="7.9320%" y="773" width="0.1889%" height="15" fill="rgb(237,122,38)"/><text x="8.1820%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.19%)</title><rect x="7.9320%" y="757" width="0.1889%" height="15" fill="rgb(244,218,35)"/><text x="8.1820%" y="767.50"></text></g><g><title>__libc_recv (2 samples, 0.19%)</title><rect x="8.3097%" y="805" width="0.1889%" height="15" fill="rgb(240,68,47)"/><text x="8.5597%" y="815.50"></text></g><g><title>_int_free (3 samples, 0.28%)</title><rect x="8.8763%" y="805" width="0.2833%" height="15" fill="rgb(210,16,53)"/><text x="9.1263%" y="815.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.19%)</title><rect x="9.4429%" y="805" width="0.1889%" height="15" fill="rgb(235,124,12)"/><text x="9.6929%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="9.9150%" y="805" width="0.1889%" height="15" fill="rgb(224,169,11)"/><text x="10.1650%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.19%)</title><rect x="10.8593%" y="693" width="0.1889%" height="15" fill="rgb(250,166,2)"/><text x="11.1093%" y="703.50"></text></g><g><title>release_sock (3 samples, 0.28%)</title><rect x="11.8036%" y="533" width="0.2833%" height="15" fill="rgb(242,216,29)"/><text x="12.0536%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.28%)</title><rect x="11.8036%" y="517" width="0.2833%" height="15" fill="rgb(230,116,27)"/><text x="12.0536%" y="527.50"></text></g><g><title>preempt_count_add (2 samples, 0.19%)</title><rect x="11.8980%" y="501" width="0.1889%" height="15" fill="rgb(228,99,48)"/><text x="12.1480%" y="511.50"></text></g><g><title>__sk_dst_check (2 samples, 0.19%)</title><rect x="12.8423%" y="453" width="0.1889%" height="15" fill="rgb(253,11,6)"/><text x="13.0923%" y="463.50"></text></g><g><title>enqueue_to_backlog (3 samples, 0.28%)</title><rect x="13.5977%" y="341" width="0.2833%" height="15" fill="rgb(247,143,39)"/><text x="13.8477%" y="351.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.76%)</title><rect x="13.2200%" y="421" width="0.7554%" height="15" fill="rgb(236,97,10)"/><text x="13.4700%" y="431.50"></text></g><g><title>dev_hard_start_xmit (8 samples, 0.76%)</title><rect x="13.2200%" y="405" width="0.7554%" height="15" fill="rgb(233,208,19)"/><text x="13.4700%" y="415.50"></text></g><g><title>loopback_xmit (7 samples, 0.66%)</title><rect x="13.3144%" y="389" width="0.6610%" height="15" fill="rgb(216,164,2)"/><text x="13.5644%" y="399.50"></text></g><g><title>netif_rx (5 samples, 0.47%)</title><rect x="13.5033%" y="373" width="0.4721%" height="15" fill="rgb(220,129,5)"/><text x="13.7533%" y="383.50"></text></g><g><title>netif_rx_internal (5 samples, 0.47%)</title><rect x="13.5033%" y="357" width="0.4721%" height="15" fill="rgb(242,17,10)"/><text x="13.7533%" y="367.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.19%)</title><rect x="14.3532%" y="229" width="0.1889%" height="15" fill="rgb(242,107,0)"/><text x="14.6032%" y="239.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.19%)</title><rect x="14.5420%" y="213" width="0.1889%" height="15" fill="rgb(251,28,31)"/><text x="14.7920%" y="223.50"></text></g><g><title>sk_filter_trim_cap (3 samples, 0.28%)</title><rect x="14.5420%" y="229" width="0.2833%" height="15" fill="rgb(233,223,10)"/><text x="14.7920%" y="239.50"></text></g><g><title>psi_flags_change (3 samples, 0.28%)</title><rect x="15.3919%" y="85" width="0.2833%" height="15" fill="rgb(215,21,27)"/><text x="15.6419%" y="95.50"></text></g><g><title>psi_task_change (4 samples, 0.38%)</title><rect x="15.3919%" y="101" width="0.3777%" height="15" fill="rgb(232,23,21)"/><text x="15.6419%" y="111.50"></text></g><g><title>enqueue_task (5 samples, 0.47%)</title><rect x="15.3919%" y="117" width="0.4721%" height="15" fill="rgb(244,5,23)"/><text x="15.6419%" y="127.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.38%)</title><rect x="15.8640%" y="117" width="0.3777%" height="15" fill="rgb(226,81,46)"/><text x="16.1140%" y="127.50"></text></g><g><title>enqueue_entity (3 samples, 0.28%)</title><rect x="15.9585%" y="101" width="0.2833%" height="15" fill="rgb(247,70,30)"/><text x="16.2085%" y="111.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.19%)</title><rect x="16.2417%" y="117" width="0.1889%" height="15" fill="rgb(212,68,19)"/><text x="16.4917%" y="127.50"></text></g><g><title>__wake_up_common (17 samples, 1.61%)</title><rect x="15.0142%" y="165" width="1.6053%" height="15" fill="rgb(240,187,13)"/><text x="15.2642%" y="175.50"></text></g><g><title>pollwake (16 samples, 1.51%)</title><rect x="15.1086%" y="149" width="1.5109%" height="15" fill="rgb(223,113,26)"/><text x="15.3586%" y="159.50"></text></g><g><title>try_to_wake_up (15 samples, 1.42%)</title><rect x="15.2030%" y="133" width="1.4164%" height="15" fill="rgb(206,192,2)"/><text x="15.4530%" y="143.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.19%)</title><rect x="16.4306%" y="117" width="0.1889%" height="15" fill="rgb(241,108,4)"/><text x="16.6806%" y="127.50"></text></g><g><title>check_preempt_curr (2 samples, 0.19%)</title><rect x="16.4306%" y="101" width="0.1889%" height="15" fill="rgb(247,173,49)"/><text x="16.6806%" y="111.50"></text></g><g><title>sock_def_readable (18 samples, 1.70%)</title><rect x="15.0142%" y="197" width="1.6997%" height="15" fill="rgb(224,114,35)"/><text x="15.2642%" y="207.50"></text></g><g><title>__wake_up_common_lock (18 samples, 1.70%)</title><rect x="15.0142%" y="181" width="1.6997%" height="15" fill="rgb(245,159,27)"/><text x="15.2642%" y="191.50"></text></g><g><title>kfree (2 samples, 0.19%)</title><rect x="16.9972%" y="165" width="0.1889%" height="15" fill="rgb(245,172,44)"/><text x="17.2472%" y="175.50"></text></g><g><title>__kfree_skb (3 samples, 0.28%)</title><rect x="16.9972%" y="181" width="0.2833%" height="15" fill="rgb(236,23,11)"/><text x="17.2472%" y="191.50"></text></g><g><title>tcp_ack (8 samples, 0.76%)</title><rect x="16.7139%" y="197" width="0.7554%" height="15" fill="rgb(205,117,38)"/><text x="16.9639%" y="207.50"></text></g><g><title>tcp_check_space (2 samples, 0.19%)</title><rect x="17.4693%" y="197" width="0.1889%" height="15" fill="rgb(237,72,25)"/><text x="17.7193%" y="207.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.19%)</title><rect x="17.6582%" y="197" width="0.1889%" height="15" fill="rgb(244,70,9)"/><text x="17.9082%" y="207.50"></text></g><g><title>ip_local_deliver (40 samples, 3.78%)</title><rect x="14.1643%" y="293" width="3.7771%" height="15" fill="rgb(217,125,39)"/><text x="14.4143%" y="303.50">ip_l..</text></g><g><title>ip_local_deliver_finish (39 samples, 3.68%)</title><rect x="14.2587%" y="277" width="3.6827%" height="15" fill="rgb(235,36,10)"/><text x="14.5087%" y="287.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (39 samples, 3.68%)</title><rect x="14.2587%" y="261" width="3.6827%" height="15" fill="rgb(251,123,47)"/><text x="14.5087%" y="271.50">ip_p..</text></g><g><title>tcp_v4_rcv (39 samples, 3.68%)</title><rect x="14.2587%" y="245" width="3.6827%" height="15" fill="rgb(221,13,13)"/><text x="14.5087%" y="255.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (33 samples, 3.12%)</title><rect x="14.8253%" y="229" width="3.1161%" height="15" fill="rgb(238,131,9)"/><text x="15.0753%" y="239.50">tcp..</text></g><g><title>tcp_rcv_established (33 samples, 3.12%)</title><rect x="14.8253%" y="213" width="3.1161%" height="15" fill="rgb(211,50,8)"/><text x="15.0753%" y="223.50">tcp..</text></g><g><title>ip_rcv_core (2 samples, 0.19%)</title><rect x="17.9415%" y="293" width="0.1889%" height="15" fill="rgb(245,182,24)"/><text x="18.1915%" y="303.50"></text></g><g><title>net_rx_action (45 samples, 4.25%)</title><rect x="14.0699%" y="357" width="4.2493%" height="15" fill="rgb(242,14,37)"/><text x="14.3199%" y="367.50">net_r..</text></g><g><title>process_backlog (45 samples, 4.25%)</title><rect x="14.0699%" y="341" width="4.2493%" height="15" fill="rgb(246,228,12)"/><text x="14.3199%" y="351.50">proce..</text></g><g><title>__netif_receive_skb_one_core (45 samples, 4.25%)</title><rect x="14.0699%" y="325" width="4.2493%" height="15" fill="rgb(213,55,15)"/><text x="14.3199%" y="335.50">__net..</text></g><g><title>ip_rcv (45 samples, 4.25%)</title><rect x="14.0699%" y="309" width="4.2493%" height="15" fill="rgb(209,9,3)"/><text x="14.3199%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_finish (2 samples, 0.19%)</title><rect x="18.1303%" y="293" width="0.1889%" height="15" fill="rgb(230,59,30)"/><text x="18.3803%" y="303.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.19%)</title><rect x="18.1303%" y="277" width="0.1889%" height="15" fill="rgb(209,121,21)"/><text x="18.3803%" y="287.50"></text></g><g><title>__ip_queue_xmit (62 samples, 5.85%)</title><rect x="12.5590%" y="469" width="5.8546%" height="15" fill="rgb(220,109,13)"/><text x="12.8090%" y="479.50">__ip_qu..</text></g><g><title>ip_output (57 samples, 5.38%)</title><rect x="13.0312%" y="453" width="5.3824%" height="15" fill="rgb(232,18,1)"/><text x="13.2812%" y="463.50">ip_outp..</text></g><g><title>ip_finish_output2 (56 samples, 5.29%)</title><rect x="13.1256%" y="437" width="5.2880%" height="15" fill="rgb(215,41,42)"/><text x="13.3756%" y="447.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (47 samples, 4.44%)</title><rect x="13.9754%" y="421" width="4.4381%" height="15" fill="rgb(224,123,36)"/><text x="14.2254%" y="431.50">__loc..</text></g><g><title>do_softirq (47 samples, 4.44%)</title><rect x="13.9754%" y="405" width="4.4381%" height="15" fill="rgb(240,125,3)"/><text x="14.2254%" y="415.50">do_so..</text></g><g><title>do_softirq_own_stack (47 samples, 4.44%)</title><rect x="13.9754%" y="389" width="4.4381%" height="15" fill="rgb(205,98,50)"/><text x="14.2254%" y="399.50">do_so..</text></g><g><title>__do_softirq (47 samples, 4.44%)</title><rect x="13.9754%" y="373" width="4.4381%" height="15" fill="rgb(205,185,37)"/><text x="14.2254%" y="383.50">__do_..</text></g><g><title>__tcp_transmit_skb (66 samples, 6.23%)</title><rect x="12.5590%" y="485" width="6.2323%" height="15" fill="rgb(238,207,15)"/><text x="12.8090%" y="495.50">__tcp_tr..</text></g><g><title>skb_clone (3 samples, 0.28%)</title><rect x="18.5080%" y="469" width="0.2833%" height="15" fill="rgb(213,199,42)"/><text x="18.7580%" y="479.50"></text></g><g><title>__copy_skb_header (3 samples, 0.28%)</title><rect x="18.5080%" y="453" width="0.2833%" height="15" fill="rgb(235,201,11)"/><text x="18.7580%" y="463.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.19%)</title><rect x="18.8857%" y="485" width="0.1889%" height="15" fill="rgb(207,46,11)"/><text x="19.1357%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (71 samples, 6.70%)</title><rect x="12.4646%" y="517" width="6.7044%" height="15" fill="rgb(241,35,35)"/><text x="12.7146%" y="527.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (71 samples, 6.70%)</title><rect x="12.4646%" y="501" width="6.7044%" height="15" fill="rgb(243,32,47)"/><text x="12.7146%" y="511.50">tcp_write..</text></g><g><title>sk_page_frag_refill (3 samples, 0.28%)</title><rect x="19.1690%" y="517" width="0.2833%" height="15" fill="rgb(247,202,23)"/><text x="19.4190%" y="527.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.19%)</title><rect x="19.2635%" y="501" width="0.1889%" height="15" fill="rgb(219,102,11)"/><text x="19.5135%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.19%)</title><rect x="19.4523%" y="485" width="0.1889%" height="15" fill="rgb(243,110,44)"/><text x="19.7023%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.28%)</title><rect x="19.4523%" y="517" width="0.2833%" height="15" fill="rgb(222,74,54)"/><text x="19.7023%" y="527.50"></text></g><g><title>__alloc_skb (3 samples, 0.28%)</title><rect x="19.4523%" y="501" width="0.2833%" height="15" fill="rgb(216,99,12)"/><text x="19.7023%" y="511.50"></text></g><g><title>sock_sendmsg (89 samples, 8.40%)</title><rect x="11.6147%" y="565" width="8.4042%" height="15" fill="rgb(226,22,26)"/><text x="11.8647%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (88 samples, 8.31%)</title><rect x="11.7092%" y="549" width="8.3097%" height="15" fill="rgb(217,163,10)"/><text x="11.9592%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (84 samples, 7.93%)</title><rect x="12.0869%" y="533" width="7.9320%" height="15" fill="rgb(213,25,53)"/><text x="12.3369%" y="543.50">tcp_sendmsg..</text></g><g><title>do_syscall_64 (93 samples, 8.78%)</title><rect x="11.4259%" y="613" width="8.7819%" height="15" fill="rgb(252,105,26)"/><text x="11.6759%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (92 samples, 8.69%)</title><rect x="11.5203%" y="597" width="8.6874%" height="15" fill="rgb(220,39,43)"/><text x="11.7703%" y="607.50">__x64_sys_se..</text></g><g><title>__sys_sendto (92 samples, 8.69%)</title><rect x="11.5203%" y="581" width="8.6874%" height="15" fill="rgb(229,68,48)"/><text x="11.7703%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.19%)</title><rect x="20.0189%" y="565" width="0.1889%" height="15" fill="rgb(252,8,32)"/><text x="20.2689%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (112 samples, 10.58%)</title><rect x="10.1983%" y="741" width="10.5760%" height="15" fill="rgb(223,20,43)"/><text x="10.4483%" y="751.50">&lt;mysql::conn::C..</text></g><g><title>mysql::conn::Conn::_query (109 samples, 10.29%)</title><rect x="10.4816%" y="725" width="10.2927%" height="15" fill="rgb(229,81,49)"/><text x="10.7316%" y="735.50">mysql::conn::Co..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (107 samples, 10.10%)</title><rect x="10.6704%" y="709" width="10.1039%" height="15" fill="rgb(236,28,36)"/><text x="10.9204%" y="719.50">mysql_common::p..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (102 samples, 9.63%)</title><rect x="11.1426%" y="693" width="9.6317%" height="15" fill="rgb(249,185,26)"/><text x="11.3926%" y="703.50">std::io::buffe..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (102 samples, 9.63%)</title><rect x="11.1426%" y="677" width="9.6317%" height="15" fill="rgb(249,174,33)"/><text x="11.3926%" y="687.50">&lt;std::net::tcp..</text></g><g><title>std::sys_common::net::TcpStream::write (102 samples, 9.63%)</title><rect x="11.1426%" y="661" width="9.6317%" height="15" fill="rgb(233,201,37)"/><text x="11.3926%" y="671.50">std::sys_commo..</text></g><g><title>__libc_send (102 samples, 9.63%)</title><rect x="11.1426%" y="645" width="9.6317%" height="15" fill="rgb(221,78,26)"/><text x="11.3926%" y="655.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (101 samples, 9.54%)</title><rect x="11.2370%" y="629" width="9.5373%" height="15" fill="rgb(250,127,30)"/><text x="11.4870%" y="639.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.57%)</title><rect x="20.2077%" y="613" width="0.5666%" height="15" fill="rgb(230,49,44)"/><text x="20.4577%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.38%)</title><rect x="20.8687%" y="629" width="0.3777%" height="15" fill="rgb(229,67,23)"/><text x="21.1187%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.38%)</title><rect x="20.8687%" y="613" width="0.3777%" height="15" fill="rgb(249,83,47)"/><text x="21.1187%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.28%)</title><rect x="20.9632%" y="597" width="0.2833%" height="15" fill="rgb(215,43,3)"/><text x="21.2132%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.19%)</title><rect x="21.0576%" y="581" width="0.1889%" height="15" fill="rgb(238,154,13)"/><text x="21.3076%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.19%)</title><rect x="21.0576%" y="565" width="0.1889%" height="15" fill="rgb(219,56,2)"/><text x="21.3076%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.19%)</title><rect x="21.0576%" y="549" width="0.1889%" height="15" fill="rgb(233,0,4)"/><text x="21.3076%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.47%)</title><rect x="20.8687%" y="645" width="0.4721%" height="15" fill="rgb(235,30,7)"/><text x="21.1187%" y="655.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.19%)</title><rect x="21.4353%" y="597" width="0.1889%" height="15" fill="rgb(250,79,13)"/><text x="21.6853%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.19%)</title><rect x="21.4353%" y="581" width="0.1889%" height="15" fill="rgb(211,146,34)"/><text x="21.6853%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.66%)</title><rect x="21.4353%" y="613" width="0.6610%" height="15" fill="rgb(228,22,38)"/><text x="21.6853%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.47%)</title><rect x="21.6242%" y="597" width="0.4721%" height="15" fill="rgb(235,168,5)"/><text x="21.8742%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.47%)</title><rect x="21.6242%" y="581" width="0.4721%" height="15" fill="rgb(221,155,16)"/><text x="21.8742%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.47%)</title><rect x="21.6242%" y="565" width="0.4721%" height="15" fill="rgb(215,215,53)"/><text x="21.8742%" y="575.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.38%)</title><rect x="21.7186%" y="549" width="0.3777%" height="15" fill="rgb(223,4,10)"/><text x="21.9686%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.85%)</title><rect x="21.3409%" y="645" width="0.8499%" height="15" fill="rgb(234,103,6)"/><text x="21.5909%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.85%)</title><rect x="21.3409%" y="629" width="0.8499%" height="15" fill="rgb(227,97,0)"/><text x="21.5909%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.51%)</title><rect x="20.8687%" y="661" width="1.5109%" height="15" fill="rgb(234,150,53)"/><text x="21.1187%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.19%)</title><rect x="22.1907%" y="645" width="0.1889%" height="15" fill="rgb(228,201,54)"/><text x="22.4407%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.76%)</title><rect x="22.4740%" y="613" width="0.7554%" height="15" fill="rgb(222,22,37)"/><text x="22.7240%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.76%)</title><rect x="22.4740%" y="597" width="0.7554%" height="15" fill="rgb(237,53,32)"/><text x="22.7240%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.66%)</title><rect x="22.5685%" y="581" width="0.6610%" height="15" fill="rgb(233,25,53)"/><text x="22.8185%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.38%)</title><rect x="22.8517%" y="565" width="0.3777%" height="15" fill="rgb(210,40,34)"/><text x="23.1017%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.28%)</title><rect x="22.9462%" y="549" width="0.2833%" height="15" fill="rgb(241,220,44)"/><text x="23.1962%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.28%)</title><rect x="22.9462%" y="533" width="0.2833%" height="15" fill="rgb(235,28,35)"/><text x="23.1962%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 1.04%)</title><rect x="22.4740%" y="629" width="1.0387%" height="15" fill="rgb(210,56,17)"/><text x="22.7240%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.28%)</title><rect x="23.2295%" y="613" width="0.2833%" height="15" fill="rgb(224,130,29)"/><text x="23.4795%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.19%)</title><rect x="23.3239%" y="597" width="0.1889%" height="15" fill="rgb(235,212,8)"/><text x="23.5739%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.19%)</title><rect x="23.5127%" y="629" width="0.1889%" height="15" fill="rgb(223,33,50)"/><text x="23.7627%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.19%)</title><rect x="23.5127%" y="613" width="0.1889%" height="15" fill="rgb(219,149,13)"/><text x="23.7627%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.51%)</title><rect x="22.4740%" y="645" width="1.5109%" height="15" fill="rgb(250,156,29)"/><text x="22.7240%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.28%)</title><rect x="23.7016%" y="629" width="0.2833%" height="15" fill="rgb(216,193,19)"/><text x="23.9516%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.19%)</title><rect x="23.9849%" y="629" width="0.1889%" height="15" fill="rgb(216,135,14)"/><text x="24.2349%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.19%)</title><rect x="23.9849%" y="613" width="0.1889%" height="15" fill="rgb(241,47,5)"/><text x="24.2349%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.19%)</title><rect x="23.9849%" y="597" width="0.1889%" height="15" fill="rgb(233,42,35)"/><text x="24.2349%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.47%)</title><rect x="23.9849%" y="645" width="0.4721%" height="15" fill="rgb(231,13,6)"/><text x="24.2349%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.28%)</title><rect x="24.1737%" y="629" width="0.2833%" height="15" fill="rgb(207,181,40)"/><text x="24.4237%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.19%)</title><rect x="24.4570%" y="629" width="0.1889%" height="15" fill="rgb(254,173,49)"/><text x="24.7070%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (27 samples, 2.55%)</title><rect x="22.3796%" y="661" width="2.5496%" height="15" fill="rgb(221,1,38)"/><text x="22.6296%" y="671.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.47%)</title><rect x="24.4570%" y="645" width="0.4721%" height="15" fill="rgb(206,124,46)"/><text x="24.7070%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.19%)</title><rect x="24.7403%" y="629" width="0.1889%" height="15" fill="rgb(249,21,11)"/><text x="24.9903%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.19%)</title><rect x="24.7403%" y="613" width="0.1889%" height="15" fill="rgb(222,201,40)"/><text x="24.9903%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.38%)</title><rect x="24.9292%" y="661" width="0.3777%" height="15" fill="rgb(235,61,29)"/><text x="25.1792%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.38%)</title><rect x="24.9292%" y="645" width="0.3777%" height="15" fill="rgb(219,207,3)"/><text x="25.1792%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.38%)</title><rect x="24.9292%" y="629" width="0.3777%" height="15" fill="rgb(222,56,46)"/><text x="25.1792%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.38%)</title><rect x="24.9292%" y="613" width="0.3777%" height="15" fill="rgb(239,76,54)"/><text x="25.1792%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.28%)</title><rect x="25.0236%" y="597" width="0.2833%" height="15" fill="rgb(231,124,27)"/><text x="25.2736%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.19%)</title><rect x="25.1180%" y="581" width="0.1889%" height="15" fill="rgb(249,195,6)"/><text x="25.3680%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.19%)</title><rect x="25.1180%" y="565" width="0.1889%" height="15" fill="rgb(237,174,47)"/><text x="25.3680%" y="575.50"></text></g><g><title>_int_free (2 samples, 0.19%)</title><rect x="25.4013%" y="645" width="0.1889%" height="15" fill="rgb(206,201,31)"/><text x="25.6513%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.28%)</title><rect x="25.5902%" y="645" width="0.2833%" height="15" fill="rgb(231,57,52)"/><text x="25.8402%" y="655.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.19%)</title><rect x="25.6846%" y="629" width="0.1889%" height="15" fill="rgb(248,177,22)"/><text x="25.9346%" y="639.50"></text></g><g><title>core::fmt::write (58 samples, 5.48%)</title><rect x="20.7743%" y="741" width="5.4769%" height="15" fill="rgb(215,211,37)"/><text x="21.0243%" y="751.50">core::f..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (58 samples, 5.48%)</title><rect x="20.7743%" y="725" width="5.4769%" height="15" fill="rgb(241,128,51)"/><text x="21.0243%" y="735.50">&lt;sql_pa..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (57 samples, 5.38%)</title><rect x="20.8687%" y="709" width="5.3824%" height="15" fill="rgb(227,165,31)"/><text x="21.1187%" y="719.50">&lt;sql_pa..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (57 samples, 5.38%)</title><rect x="20.8687%" y="693" width="5.3824%" height="15" fill="rgb(228,167,24)"/><text x="21.1187%" y="703.50">&lt;sql_pa..</text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (57 samples, 5.38%)</title><rect x="20.8687%" y="677" width="5.3824%" height="15" fill="rgb(228,143,12)"/><text x="21.1187%" y="687.50">&lt;sql_pa..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.94%)</title><rect x="25.3069%" y="661" width="0.9443%" height="15" fill="rgb(249,149,8)"/><text x="25.5569%" y="671.50"></text></g><g><title>core::fmt::write (4 samples, 0.38%)</title><rect x="25.8735%" y="645" width="0.3777%" height="15" fill="rgb(243,35,44)"/><text x="26.1235%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.28%)</title><rect x="25.9679%" y="629" width="0.2833%" height="15" fill="rgb(246,89,9)"/><text x="26.2179%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.19%)</title><rect x="26.0623%" y="613" width="0.1889%" height="15" fill="rgb(233,213,13)"/><text x="26.3123%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="26.2512%" y="741" width="0.1889%" height="15" fill="rgb(233,141,41)"/><text x="26.5012%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="26.2512%" y="725" width="0.1889%" height="15" fill="rgb(239,167,4)"/><text x="26.5012%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="26.2512%" y="709" width="0.1889%" height="15" fill="rgb(209,217,16)"/><text x="26.5012%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.19%)</title><rect x="26.2512%" y="693" width="0.1889%" height="15" fill="rgb(219,88,35)"/><text x="26.5012%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="26.2512%" y="677" width="0.1889%" height="15" fill="rgb(220,193,23)"/><text x="26.5012%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="26.2512%" y="661" width="0.1889%" height="15" fill="rgb(230,90,52)"/><text x="26.5012%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.19%)</title><rect x="26.2512%" y="645" width="0.1889%" height="15" fill="rgb(252,106,19)"/><text x="26.5012%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.19%)</title><rect x="27.3843%" y="725" width="0.1889%" height="15" fill="rgb(206,74,20)"/><text x="27.6343%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.19%)</title><rect x="27.3843%" y="709" width="0.1889%" height="15" fill="rgb(230,138,44)"/><text x="27.6343%" y="719.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (5 samples, 0.47%)</title><rect x="27.8565%" y="693" width="0.4721%" height="15" fill="rgb(235,182,43)"/><text x="28.1065%" y="703.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.38%)</title><rect x="27.9509%" y="677" width="0.3777%" height="15" fill="rgb(242,16,51)"/><text x="28.2009%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.19%)</title><rect x="28.1398%" y="661" width="0.1889%" height="15" fill="rgb(248,9,4)"/><text x="28.3898%" y="671.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (9 samples, 0.85%)</title><rect x="27.5732%" y="725" width="0.8499%" height="15" fill="rgb(210,31,22)"/><text x="27.8232%" y="735.50"></text></g><g><title>msql_srv::writers::column_definitions (8 samples, 0.76%)</title><rect x="27.6676%" y="709" width="0.7554%" height="15" fill="rgb(239,54,39)"/><text x="27.9176%" y="719.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.19%)</title><rect x="28.4230%" y="725" width="0.1889%" height="15" fill="rgb(230,99,41)"/><text x="28.6730%" y="735.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (2 samples, 0.19%)</title><rect x="28.7063%" y="709" width="0.1889%" height="15" fill="rgb(253,106,12)"/><text x="28.9563%" y="719.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (5 samples, 0.47%)</title><rect x="28.6119%" y="725" width="0.4721%" height="15" fill="rgb(213,46,41)"/><text x="28.8619%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (203 samples, 19.17%)</title><rect x="10.1983%" y="757" width="19.1690%" height="15" fill="rgb(215,133,35)"/><text x="10.4483%" y="767.50">decor::query_transformer::Quer..</text></g><g><title>decor::helpers::answer_rows (31 samples, 2.93%)</title><rect x="26.4400%" y="741" width="2.9273%" height="15" fill="rgb(213,28,5)"/><text x="26.6900%" y="751.50">de..</text></g><g><title>mysql_common::row::Row::unwrap (3 samples, 0.28%)</title><rect x="29.0840%" y="725" width="0.2833%" height="15" fill="rgb(215,77,49)"/><text x="29.3340%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.19%)</title><rect x="29.1785%" y="709" width="0.1889%" height="15" fill="rgb(248,100,22)"/><text x="29.4285%" y="719.50"></text></g><g><title>decor::Shim::run_on_tcp (207 samples, 19.55%)</title><rect x="10.1983%" y="805" width="19.5467%" height="15" fill="rgb(208,67,9)"/><text x="10.4483%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (207 samples, 19.55%)</title><rect x="10.1983%" y="789" width="19.5467%" height="15" fill="rgb(219,133,21)"/><text x="10.4483%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (207 samples, 19.55%)</title><rect x="10.1983%" y="773" width="19.5467%" height="15" fill="rgb(246,46,29)"/><text x="10.4483%" y="783.50">&lt;decor::Shim as msql_srv::Mysql..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.38%)</title><rect x="29.3673%" y="757" width="0.3777%" height="15" fill="rgb(246,185,52)"/><text x="29.6173%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.28%)</title><rect x="29.4618%" y="741" width="0.2833%" height="15" fill="rgb(252,136,11)"/><text x="29.7118%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.19%)</title><rect x="29.5562%" y="725" width="0.1889%" height="15" fill="rgb(219,138,53)"/><text x="29.8062%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.19%)</title><rect x="30.2172%" y="677" width="0.1889%" height="15" fill="rgb(211,51,23)"/><text x="30.4672%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (3 samples, 0.28%)</title><rect x="30.2172%" y="693" width="0.2833%" height="15" fill="rgb(247,221,28)"/><text x="30.4672%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.47%)</title><rect x="30.1228%" y="725" width="0.4721%" height="15" fill="rgb(251,222,45)"/><text x="30.3728%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.47%)</title><rect x="30.1228%" y="709" width="0.4721%" height="15" fill="rgb(217,162,53)"/><text x="30.3728%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.76%)</title><rect x="30.0283%" y="741" width="0.7554%" height="15" fill="rgb(229,93,14)"/><text x="30.2783%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="30.7838%" y="725" width="0.1889%" height="15" fill="rgb(209,67,49)"/><text x="31.0338%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (12 samples, 1.13%)</title><rect x="29.9339%" y="773" width="1.1331%" height="15" fill="rgb(213,87,29)"/><text x="30.1839%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (11 samples, 1.04%)</title><rect x="30.0283%" y="757" width="1.0387%" height="15" fill="rgb(205,151,52)"/><text x="30.2783%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.28%)</title><rect x="30.7838%" y="741" width="0.2833%" height="15" fill="rgb(253,215,39)"/><text x="31.0338%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.19%)</title><rect x="31.2559%" y="725" width="0.1889%" height="15" fill="rgb(221,220,41)"/><text x="31.5059%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::cmp::PartialEq&gt;::eq (8 samples, 0.76%)</title><rect x="31.0670%" y="773" width="0.7554%" height="15" fill="rgb(218,133,21)"/><text x="31.3170%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::cmp::PartialEq&gt;::eq (7 samples, 0.66%)</title><rect x="31.1615%" y="757" width="0.6610%" height="15" fill="rgb(221,193,43)"/><text x="31.4115%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.57%)</title><rect x="31.2559%" y="741" width="0.5666%" height="15" fill="rgb(240,128,52)"/><text x="31.5059%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.19%)</title><rect x="31.6336%" y="725" width="0.1889%" height="15" fill="rgb(253,114,12)"/><text x="31.8836%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as core::hash::Hash&gt;::hash (5 samples, 0.47%)</title><rect x="31.8225%" y="757" width="0.4721%" height="15" fill="rgb(215,223,47)"/><text x="32.0725%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.28%)</title><rect x="32.0113%" y="741" width="0.2833%" height="15" fill="rgb(248,225,23)"/><text x="32.2613%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::hash::Hash&gt;::hash (6 samples, 0.57%)</title><rect x="31.8225%" y="773" width="0.5666%" height="15" fill="rgb(250,108,0)"/><text x="32.0725%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (30 samples, 2.83%)</title><rect x="29.8395%" y="805" width="2.8329%" height="15" fill="rgb(228,208,7)"/><text x="30.0895%" y="815.50">de..</text></g><g><title>decor::mv_transformer::MVTransformer::query_to_mv_query (29 samples, 2.74%)</title><rect x="29.9339%" y="789" width="2.7384%" height="15" fill="rgb(244,45,10)"/><text x="30.1839%" y="799.50">de..</text></g><g><title>decor::mv_transformer::MVTransformer::setexpr_to_mv_setexpr (3 samples, 0.28%)</title><rect x="32.3890%" y="773" width="0.2833%" height="15" fill="rgb(207,125,25)"/><text x="32.6390%" y="783.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (3 samples, 0.28%)</title><rect x="32.3890%" y="757" width="0.2833%" height="15" fill="rgb(210,195,18)"/><text x="32.6390%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (2 samples, 0.19%)</title><rect x="32.4835%" y="741" width="0.1889%" height="15" fill="rgb(249,80,12)"/><text x="32.7335%" y="751.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (2 samples, 0.19%)</title><rect x="32.4835%" y="725" width="0.1889%" height="15" fill="rgb(221,65,9)"/><text x="32.7335%" y="735.50"></text></g><g><title>decor::helpers::str_subset_of_idents (2 samples, 0.19%)</title><rect x="32.4835%" y="709" width="0.1889%" height="15" fill="rgb(235,49,36)"/><text x="32.7335%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.19%)</title><rect x="32.4835%" y="693" width="0.1889%" height="15" fill="rgb(225,32,20)"/><text x="32.7335%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="32.6723%" y="709" width="0.1889%" height="15" fill="rgb(215,141,46)"/><text x="32.9223%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="32.6723%" y="693" width="0.1889%" height="15" fill="rgb(250,160,47)"/><text x="32.9223%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="32.6723%" y="677" width="0.1889%" height="15" fill="rgb(216,222,40)"/><text x="32.9223%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.19%)</title><rect x="32.6723%" y="661" width="0.1889%" height="15" fill="rgb(234,217,39)"/><text x="32.9223%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.19%)</title><rect x="32.6723%" y="645" width="0.1889%" height="15" fill="rgb(207,178,40)"/><text x="32.9223%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.19%)</title><rect x="32.6723%" y="629" width="0.1889%" height="15" fill="rgb(221,136,13)"/><text x="32.9223%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.19%)</title><rect x="32.6723%" y="613" width="0.1889%" height="15" fill="rgb(249,199,10)"/><text x="32.9223%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.19%)</title><rect x="32.6723%" y="597" width="0.1889%" height="15" fill="rgb(249,222,13)"/><text x="32.9223%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.19%)</title><rect x="32.6723%" y="581" width="0.1889%" height="15" fill="rgb(244,185,38)"/><text x="32.9223%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.19%)</title><rect x="32.6723%" y="565" width="0.1889%" height="15" fill="rgb(236,202,9)"/><text x="32.9223%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.19%)</title><rect x="32.6723%" y="549" width="0.1889%" height="15" fill="rgb(250,229,37)"/><text x="32.9223%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.19%)</title><rect x="32.6723%" y="533" width="0.1889%" height="15" fill="rgb(206,174,23)"/><text x="32.9223%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.19%)</title><rect x="32.6723%" y="517" width="0.1889%" height="15" fill="rgb(211,33,43)"/><text x="32.9223%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 0.19%)</title><rect x="32.6723%" y="501" width="0.1889%" height="15" fill="rgb(245,58,50)"/><text x="32.9223%" y="511.50"></text></g><g><title>__GI___mprotect (2 samples, 0.19%)</title><rect x="32.9556%" y="661" width="0.1889%" height="15" fill="rgb(244,68,36)"/><text x="33.2056%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.19%)</title><rect x="32.9556%" y="645" width="0.1889%" height="15" fill="rgb(232,229,15)"/><text x="33.2056%" y="655.50"></text></g><g><title>do_syscall_64 (2 samples, 0.19%)</title><rect x="32.9556%" y="629" width="0.1889%" height="15" fill="rgb(254,30,23)"/><text x="33.2056%" y="639.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.19%)</title><rect x="32.9556%" y="613" width="0.1889%" height="15" fill="rgb(235,160,14)"/><text x="33.2056%" y="623.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.19%)</title><rect x="32.9556%" y="597" width="0.1889%" height="15" fill="rgb(212,155,44)"/><text x="33.2056%" y="607.50"></text></g><g><title>mprotect_fixup (2 samples, 0.19%)</title><rect x="32.9556%" y="581" width="0.1889%" height="15" fill="rgb(226,2,50)"/><text x="33.2056%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (8 samples, 0.76%)</title><rect x="32.6723%" y="773" width="0.7554%" height="15" fill="rgb(234,177,6)"/><text x="32.9223%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (8 samples, 0.76%)</title><rect x="32.6723%" y="757" width="0.7554%" height="15" fill="rgb(217,24,9)"/><text x="32.9223%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.76%)</title><rect x="32.6723%" y="741" width="0.7554%" height="15" fill="rgb(220,13,46)"/><text x="32.9223%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.76%)</title><rect x="32.6723%" y="725" width="0.7554%" height="15" fill="rgb(239,221,27)"/><text x="32.9223%" y="735.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.57%)</title><rect x="32.8612%" y="709" width="0.5666%" height="15" fill="rgb(222,198,25)"/><text x="33.1112%" y="719.50"></text></g><g><title>_int_malloc (6 samples, 0.57%)</title><rect x="32.8612%" y="693" width="0.5666%" height="15" fill="rgb(211,99,13)"/><text x="33.1112%" y="703.50"></text></g><g><title>sysmalloc (5 samples, 0.47%)</title><rect x="32.9556%" y="677" width="0.4721%" height="15" fill="rgb(232,111,31)"/><text x="33.2056%" y="687.50"></text></g><g><title>page_fault (3 samples, 0.28%)</title><rect x="33.1445%" y="661" width="0.2833%" height="15" fill="rgb(245,82,37)"/><text x="33.3945%" y="671.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.28%)</title><rect x="33.1445%" y="645" width="0.2833%" height="15" fill="rgb(227,149,46)"/><text x="33.3945%" y="655.50"></text></g><g><title>handle_mm_fault (3 samples, 0.28%)</title><rect x="33.1445%" y="629" width="0.2833%" height="15" fill="rgb(218,36,50)"/><text x="33.3945%" y="639.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.28%)</title><rect x="33.1445%" y="613" width="0.2833%" height="15" fill="rgb(226,80,48)"/><text x="33.3945%" y="623.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.28%)</title><rect x="33.1445%" y="597" width="0.2833%" height="15" fill="rgb(238,224,15)"/><text x="33.3945%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.28%)</title><rect x="33.1445%" y="581" width="0.2833%" height="15" fill="rgb(241,136,10)"/><text x="33.3945%" y="591.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.28%)</title><rect x="33.1445%" y="565" width="0.2833%" height="15" fill="rgb(208,32,45)"/><text x="33.3945%" y="575.50"></text></g><g><title>prep_new_page (3 samples, 0.28%)</title><rect x="33.1445%" y="549" width="0.2833%" height="15" fill="rgb(207,135,9)"/><text x="33.3945%" y="559.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.28%)</title><rect x="33.1445%" y="533" width="0.2833%" height="15" fill="rgb(206,86,44)"/><text x="33.3945%" y="543.50"></text></g><g><title>clear_page_erms (3 samples, 0.28%)</title><rect x="33.1445%" y="517" width="0.2833%" height="15" fill="rgb(245,177,15)"/><text x="33.3945%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="33.5222%" y="757" width="0.1889%" height="15" fill="rgb(206,64,50)"/><text x="33.7722%" y="767.50"></text></g><g><title>psi_task_change (2 samples, 0.19%)</title><rect x="34.0888%" y="421" width="0.1889%" height="15" fill="rgb(234,36,40)"/><text x="34.3388%" y="431.50"></text></g><g><title>psi_group_change (2 samples, 0.19%)</title><rect x="34.0888%" y="405" width="0.1889%" height="15" fill="rgb(213,64,8)"/><text x="34.3388%" y="415.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.57%)</title><rect x="33.8055%" y="709" width="0.5666%" height="15" fill="rgb(210,75,36)"/><text x="34.0555%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (6 samples, 0.57%)</title><rect x="33.8055%" y="693" width="0.5666%" height="15" fill="rgb(229,88,21)"/><text x="34.0555%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (6 samples, 0.57%)</title><rect x="33.8055%" y="677" width="0.5666%" height="15" fill="rgb(252,204,47)"/><text x="34.0555%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (6 samples, 0.57%)</title><rect x="33.8055%" y="661" width="0.5666%" height="15" fill="rgb(208,77,27)"/><text x="34.0555%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (6 samples, 0.57%)</title><rect x="33.8055%" y="645" width="0.5666%" height="15" fill="rgb(221,76,26)"/><text x="34.0555%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (6 samples, 0.57%)</title><rect x="33.8055%" y="629" width="0.5666%" height="15" fill="rgb(225,139,18)"/><text x="34.0555%" y="639.50"></text></g><g><title>__libc_recv (6 samples, 0.57%)</title><rect x="33.8055%" y="613" width="0.5666%" height="15" fill="rgb(230,137,11)"/><text x="34.0555%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.57%)</title><rect x="33.8055%" y="597" width="0.5666%" height="15" fill="rgb(212,28,1)"/><text x="34.0555%" y="607.50"></text></g><g><title>do_syscall_64 (6 samples, 0.57%)</title><rect x="33.8055%" y="581" width="0.5666%" height="15" fill="rgb(248,164,17)"/><text x="34.0555%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.57%)</title><rect x="33.8055%" y="565" width="0.5666%" height="15" fill="rgb(222,171,42)"/><text x="34.0555%" y="575.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.57%)</title><rect x="33.8055%" y="549" width="0.5666%" height="15" fill="rgb(243,84,45)"/><text x="34.0555%" y="559.50"></text></g><g><title>inet_recvmsg (6 samples, 0.57%)</title><rect x="33.8055%" y="533" width="0.5666%" height="15" fill="rgb(252,49,23)"/><text x="34.0555%" y="543.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.57%)</title><rect x="33.8055%" y="517" width="0.5666%" height="15" fill="rgb(215,19,7)"/><text x="34.0555%" y="527.50"></text></g><g><title>sk_wait_data (6 samples, 0.57%)</title><rect x="33.8055%" y="501" width="0.5666%" height="15" fill="rgb(238,81,41)"/><text x="34.0555%" y="511.50"></text></g><g><title>wait_woken (6 samples, 0.57%)</title><rect x="33.8055%" y="485" width="0.5666%" height="15" fill="rgb(210,199,37)"/><text x="34.0555%" y="495.50"></text></g><g><title>schedule_timeout (6 samples, 0.57%)</title><rect x="33.8055%" y="469" width="0.5666%" height="15" fill="rgb(244,192,49)"/><text x="34.0555%" y="479.50"></text></g><g><title>schedule (6 samples, 0.57%)</title><rect x="33.8055%" y="453" width="0.5666%" height="15" fill="rgb(226,211,11)"/><text x="34.0555%" y="463.50"></text></g><g><title>__schedule (6 samples, 0.57%)</title><rect x="33.8055%" y="437" width="0.5666%" height="15" fill="rgb(236,162,54)"/><text x="34.0555%" y="447.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (7 samples, 0.66%)</title><rect x="33.8055%" y="741" width="0.6610%" height="15" fill="rgb(220,229,9)"/><text x="34.0555%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (7 samples, 0.66%)</title><rect x="33.8055%" y="725" width="0.6610%" height="15" fill="rgb(250,87,22)"/><text x="34.0555%" y="735.50"></text></g><g><title>enqueue_task (2 samples, 0.19%)</title><rect x="34.5609%" y="149" width="0.1889%" height="15" fill="rgb(239,43,17)"/><text x="34.8109%" y="159.50"></text></g><g><title>sock_def_readable (3 samples, 0.28%)</title><rect x="34.5609%" y="229" width="0.2833%" height="15" fill="rgb(231,177,25)"/><text x="34.8109%" y="239.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.28%)</title><rect x="34.5609%" y="213" width="0.2833%" height="15" fill="rgb(219,179,1)"/><text x="34.8109%" y="223.50"></text></g><g><title>__wake_up_common (3 samples, 0.28%)</title><rect x="34.5609%" y="197" width="0.2833%" height="15" fill="rgb(238,219,53)"/><text x="34.8109%" y="207.50"></text></g><g><title>pollwake (3 samples, 0.28%)</title><rect x="34.5609%" y="181" width="0.2833%" height="15" fill="rgb(232,167,36)"/><text x="34.8109%" y="191.50"></text></g><g><title>try_to_wake_up (3 samples, 0.28%)</title><rect x="34.5609%" y="165" width="0.2833%" height="15" fill="rgb(244,19,51)"/><text x="34.8109%" y="175.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.57%)</title><rect x="34.4665%" y="517" width="0.5666%" height="15" fill="rgb(224,6,22)"/><text x="34.7165%" y="527.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.57%)</title><rect x="34.4665%" y="501" width="0.5666%" height="15" fill="rgb(224,145,5)"/><text x="34.7165%" y="511.50"></text></g><g><title>ip_output (6 samples, 0.57%)</title><rect x="34.4665%" y="485" width="0.5666%" height="15" fill="rgb(234,130,49)"/><text x="34.7165%" y="495.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.57%)</title><rect x="34.4665%" y="469" width="0.5666%" height="15" fill="rgb(254,6,2)"/><text x="34.7165%" y="479.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.47%)</title><rect x="34.5609%" y="453" width="0.4721%" height="15" fill="rgb(208,96,46)"/><text x="34.8109%" y="463.50"></text></g><g><title>do_softirq (5 samples, 0.47%)</title><rect x="34.5609%" y="437" width="0.4721%" height="15" fill="rgb(239,3,39)"/><text x="34.8109%" y="447.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.47%)</title><rect x="34.5609%" y="421" width="0.4721%" height="15" fill="rgb(233,210,1)"/><text x="34.8109%" y="431.50"></text></g><g><title>__do_softirq (5 samples, 0.47%)</title><rect x="34.5609%" y="405" width="0.4721%" height="15" fill="rgb(244,137,37)"/><text x="34.8109%" y="415.50"></text></g><g><title>net_rx_action (5 samples, 0.47%)</title><rect x="34.5609%" y="389" width="0.4721%" height="15" fill="rgb(240,136,2)"/><text x="34.8109%" y="399.50"></text></g><g><title>process_backlog (5 samples, 0.47%)</title><rect x="34.5609%" y="373" width="0.4721%" height="15" fill="rgb(239,18,37)"/><text x="34.8109%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.47%)</title><rect x="34.5609%" y="357" width="0.4721%" height="15" fill="rgb(218,185,22)"/><text x="34.8109%" y="367.50"></text></g><g><title>ip_rcv (5 samples, 0.47%)</title><rect x="34.5609%" y="341" width="0.4721%" height="15" fill="rgb(225,218,4)"/><text x="34.8109%" y="351.50"></text></g><g><title>ip_local_deliver (5 samples, 0.47%)</title><rect x="34.5609%" y="325" width="0.4721%" height="15" fill="rgb(230,182,32)"/><text x="34.8109%" y="335.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.47%)</title><rect x="34.5609%" y="309" width="0.4721%" height="15" fill="rgb(242,56,43)"/><text x="34.8109%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.47%)</title><rect x="34.5609%" y="293" width="0.4721%" height="15" fill="rgb(233,99,24)"/><text x="34.8109%" y="303.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.47%)</title><rect x="34.5609%" y="277" width="0.4721%" height="15" fill="rgb(234,209,42)"/><text x="34.8109%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.47%)</title><rect x="34.5609%" y="261" width="0.4721%" height="15" fill="rgb(227,7,12)"/><text x="34.8109%" y="271.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.47%)</title><rect x="34.5609%" y="245" width="0.4721%" height="15" fill="rgb(245,203,43)"/><text x="34.8109%" y="255.50"></text></g><g><title>tcp_ack (2 samples, 0.19%)</title><rect x="34.8442%" y="229" width="0.1889%" height="15" fill="rgb(238,205,33)"/><text x="35.0942%" y="239.50"></text></g><g><title>__tcp_push_pending_frames (7 samples, 0.66%)</title><rect x="34.4665%" y="549" width="0.6610%" height="15" fill="rgb(231,56,7)"/><text x="34.7165%" y="559.50"></text></g><g><title>tcp_write_xmit (7 samples, 0.66%)</title><rect x="34.4665%" y="533" width="0.6610%" height="15" fill="rgb(244,186,29)"/><text x="34.7165%" y="543.50"></text></g><g><title>do_syscall_64 (8 samples, 0.76%)</title><rect x="34.4665%" y="645" width="0.7554%" height="15" fill="rgb(234,111,31)"/><text x="34.7165%" y="655.50"></text></g><g><title>__x64_sys_sendto (8 samples, 0.76%)</title><rect x="34.4665%" y="629" width="0.7554%" height="15" fill="rgb(241,149,10)"/><text x="34.7165%" y="639.50"></text></g><g><title>__sys_sendto (8 samples, 0.76%)</title><rect x="34.4665%" y="613" width="0.7554%" height="15" fill="rgb(249,206,44)"/><text x="34.7165%" y="623.50"></text></g><g><title>sock_sendmsg (8 samples, 0.76%)</title><rect x="34.4665%" y="597" width="0.7554%" height="15" fill="rgb(251,153,30)"/><text x="34.7165%" y="607.50"></text></g><g><title>tcp_sendmsg (8 samples, 0.76%)</title><rect x="34.4665%" y="581" width="0.7554%" height="15" fill="rgb(239,152,38)"/><text x="34.7165%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (8 samples, 0.76%)</title><rect x="34.4665%" y="565" width="0.7554%" height="15" fill="rgb(249,139,47)"/><text x="34.7165%" y="575.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (20 samples, 1.89%)</title><rect x="33.4278%" y="773" width="1.8886%" height="15" fill="rgb(244,64,35)"/><text x="33.6778%" y="783.50">d..</text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.51%)</title><rect x="33.8055%" y="757" width="1.5109%" height="15" fill="rgb(216,46,15)"/><text x="34.0555%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (9 samples, 0.85%)</title><rect x="34.4665%" y="741" width="0.8499%" height="15" fill="rgb(250,74,19)"/><text x="34.7165%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (9 samples, 0.85%)</title><rect x="34.4665%" y="725" width="0.8499%" height="15" fill="rgb(249,42,33)"/><text x="34.7165%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (9 samples, 0.85%)</title><rect x="34.4665%" y="709" width="0.8499%" height="15" fill="rgb(242,149,17)"/><text x="34.7165%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (9 samples, 0.85%)</title><rect x="34.4665%" y="693" width="0.8499%" height="15" fill="rgb(244,29,21)"/><text x="34.7165%" y="703.50"></text></g><g><title>__libc_send (9 samples, 0.85%)</title><rect x="34.4665%" y="677" width="0.8499%" height="15" fill="rgb(220,130,37)"/><text x="34.7165%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.85%)</title><rect x="34.4665%" y="661" width="0.8499%" height="15" fill="rgb(211,67,2)"/><text x="34.7165%" y="671.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (29 samples, 2.74%)</title><rect x="32.6723%" y="805" width="2.7384%" height="15" fill="rgb(235,68,52)"/><text x="32.9223%" y="815.50">de..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (29 samples, 2.74%)</title><rect x="32.6723%" y="789" width="2.7384%" height="15" fill="rgb(246,142,3)"/><text x="32.9223%" y="799.50">de..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.28%)</title><rect x="35.5996%" y="789" width="0.2833%" height="15" fill="rgb(241,25,7)"/><text x="35.8496%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.28%)</title><rect x="35.5996%" y="773" width="0.2833%" height="15" fill="rgb(242,119,39)"/><text x="35.8496%" y="783.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.28%)</title><rect x="35.5996%" y="757" width="0.2833%" height="15" fill="rgb(241,98,45)"/><text x="35.8496%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.28%)</title><rect x="35.5996%" y="741" width="0.2833%" height="15" fill="rgb(254,28,30)"/><text x="35.8496%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.28%)</title><rect x="35.5996%" y="725" width="0.2833%" height="15" fill="rgb(241,142,54)"/><text x="35.8496%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.28%)</title><rect x="35.5996%" y="709" width="0.2833%" height="15" fill="rgb(222,85,15)"/><text x="35.8496%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.28%)</title><rect x="35.5996%" y="693" width="0.2833%" height="15" fill="rgb(210,85,47)"/><text x="35.8496%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.28%)</title><rect x="35.5996%" y="677" width="0.2833%" height="15" fill="rgb(224,206,25)"/><text x="35.8496%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.19%)</title><rect x="35.6941%" y="661" width="0.1889%" height="15" fill="rgb(243,201,19)"/><text x="35.9441%" y="671.50"></text></g><g><title>lobsters::main (4 samples, 0.38%)</title><rect x="35.5996%" y="805" width="0.3777%" height="15" fill="rgb(236,59,4)"/><text x="35.8496%" y="815.50"></text></g><g><title>__kfree_skb (2 samples, 0.19%)</title><rect x="37.1105%" y="485" width="0.1889%" height="15" fill="rgb(254,179,45)"/><text x="37.3605%" y="495.50"></text></g><g><title>skb_release_head_state (2 samples, 0.19%)</title><rect x="37.1105%" y="469" width="0.1889%" height="15" fill="rgb(226,14,10)"/><text x="37.3605%" y="479.50"></text></g><g><title>dst_release (2 samples, 0.19%)</title><rect x="37.1105%" y="453" width="0.1889%" height="15" fill="rgb(244,27,41)"/><text x="37.3605%" y="463.50"></text></g><g><title>add_wait_queue (2 samples, 0.19%)</title><rect x="37.6771%" y="469" width="0.1889%" height="15" fill="rgb(235,35,32)"/><text x="37.9271%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.28%)</title><rect x="38.0548%" y="405" width="0.2833%" height="15" fill="rgb(218,68,31)"/><text x="38.3048%" y="415.50"></text></g><g><title>update_curr (3 samples, 0.28%)</title><rect x="38.5269%" y="373" width="0.2833%" height="15" fill="rgb(207,120,37)"/><text x="38.7769%" y="383.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.66%)</title><rect x="38.3381%" y="405" width="0.6610%" height="15" fill="rgb(227,98,0)"/><text x="38.5881%" y="415.50"></text></g><g><title>dequeue_entity (6 samples, 0.57%)</title><rect x="38.4325%" y="389" width="0.5666%" height="15" fill="rgb(207,7,3)"/><text x="38.6825%" y="399.50"></text></g><g><title>update_load_avg (2 samples, 0.19%)</title><rect x="38.8102%" y="373" width="0.1889%" height="15" fill="rgb(206,98,19)"/><text x="39.0602%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.19%)</title><rect x="38.9991%" y="389" width="0.1889%" height="15" fill="rgb(217,5,26)"/><text x="39.2491%" y="399.50"></text></g><g><title>finish_task_switch (3 samples, 0.28%)</title><rect x="38.9991%" y="405" width="0.2833%" height="15" fill="rgb(235,190,38)"/><text x="39.2491%" y="415.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.19%)</title><rect x="39.2823%" y="405" width="0.1889%" height="15" fill="rgb(247,86,24)"/><text x="39.5323%" y="415.50"></text></g><g><title>newidle_balance (2 samples, 0.19%)</title><rect x="39.2823%" y="389" width="0.1889%" height="15" fill="rgb(205,101,16)"/><text x="39.5323%" y="399.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.19%)</title><rect x="39.4712%" y="405" width="0.1889%" height="15" fill="rgb(246,168,33)"/><text x="39.7212%" y="415.50"></text></g><g><title>__update_idle_core (2 samples, 0.19%)</title><rect x="39.4712%" y="389" width="0.1889%" height="15" fill="rgb(231,114,1)"/><text x="39.7212%" y="399.50"></text></g><g><title>psi_task_change (3 samples, 0.28%)</title><rect x="39.6601%" y="405" width="0.2833%" height="15" fill="rgb(207,184,53)"/><text x="39.9101%" y="415.50"></text></g><g><title>psi_group_change (3 samples, 0.28%)</title><rect x="39.6601%" y="389" width="0.2833%" height="15" fill="rgb(224,95,51)"/><text x="39.9101%" y="399.50"></text></g><g><title>put_prev_task_fair (3 samples, 0.28%)</title><rect x="39.9433%" y="405" width="0.2833%" height="15" fill="rgb(212,188,45)"/><text x="40.1933%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.19%)</title><rect x="40.2266%" y="405" width="0.1889%" height="15" fill="rgb(223,154,38)"/><text x="40.4766%" y="415.50"></text></g><g><title>__schedule (26 samples, 2.46%)</title><rect x="38.0548%" y="421" width="2.4551%" height="15" fill="rgb(251,22,52)"/><text x="38.3048%" y="431.50">__..</text></g><g><title>sk_wait_data (35 samples, 3.31%)</title><rect x="37.2993%" y="485" width="3.3050%" height="15" fill="rgb(229,209,22)"/><text x="37.5493%" y="495.50">sk_..</text></g><g><title>wait_woken (28 samples, 2.64%)</title><rect x="37.9603%" y="469" width="2.6440%" height="15" fill="rgb(234,138,34)"/><text x="38.2103%" y="479.50">wa..</text></g><g><title>schedule_timeout (27 samples, 2.55%)</title><rect x="38.0548%" y="453" width="2.5496%" height="15" fill="rgb(212,95,11)"/><text x="38.3048%" y="463.50">sc..</text></g><g><title>schedule (27 samples, 2.55%)</title><rect x="38.0548%" y="437" width="2.5496%" height="15" fill="rgb(240,179,47)"/><text x="38.3048%" y="447.50">sc..</text></g><g><title>_copy_to_iter (2 samples, 0.19%)</title><rect x="40.6988%" y="453" width="0.1889%" height="15" fill="rgb(240,163,11)"/><text x="40.9488%" y="463.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 0.19%)</title><rect x="40.6988%" y="437" width="0.1889%" height="15" fill="rgb(236,37,12)"/><text x="40.9488%" y="447.50"></text></g><g><title>page_fault (2 samples, 0.19%)</title><rect x="40.6988%" y="421" width="0.1889%" height="15" fill="rgb(232,164,16)"/><text x="40.9488%" y="431.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.19%)</title><rect x="40.6988%" y="405" width="0.1889%" height="15" fill="rgb(244,205,15)"/><text x="40.9488%" y="415.50"></text></g><g><title>handle_mm_fault (2 samples, 0.19%)</title><rect x="40.6988%" y="389" width="0.1889%" height="15" fill="rgb(223,117,47)"/><text x="40.9488%" y="399.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.19%)</title><rect x="40.6988%" y="373" width="0.1889%" height="15" fill="rgb(244,107,35)"/><text x="40.9488%" y="383.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.38%)</title><rect x="40.6043%" y="485" width="0.3777%" height="15" fill="rgb(205,140,8)"/><text x="40.8543%" y="495.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.38%)</title><rect x="40.6043%" y="469" width="0.3777%" height="15" fill="rgb(228,84,46)"/><text x="40.8543%" y="479.50"></text></g><g><title>inet_recvmsg (49 samples, 4.63%)</title><rect x="36.4495%" y="517" width="4.6270%" height="15" fill="rgb(254,188,9)"/><text x="36.6995%" y="527.50">inet_..</text></g><g><title>tcp_recvmsg (48 samples, 4.53%)</title><rect x="36.5439%" y="501" width="4.5326%" height="15" fill="rgb(206,112,54)"/><text x="36.7939%" y="511.50">tcp_r..</text></g><g><title>__x64_sys_recvfrom (51 samples, 4.82%)</title><rect x="36.3551%" y="549" width="4.8159%" height="15" fill="rgb(216,84,49)"/><text x="36.6051%" y="559.50">__x64_..</text></g><g><title>__sys_recvfrom (51 samples, 4.82%)</title><rect x="36.3551%" y="533" width="4.8159%" height="15" fill="rgb(214,194,35)"/><text x="36.6051%" y="543.50">__sys_..</text></g><g><title>do_syscall_64 (53 samples, 5.00%)</title><rect x="36.3551%" y="565" width="5.0047%" height="15" fill="rgb(249,28,3)"/><text x="36.6051%" y="575.50">do_sys..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.19%)</title><rect x="41.1709%" y="549" width="0.1889%" height="15" fill="rgb(222,56,52)"/><text x="41.4209%" y="559.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.19%)</title><rect x="41.1709%" y="533" width="0.1889%" height="15" fill="rgb(245,217,50)"/><text x="41.4209%" y="543.50"></text></g><g><title>unroll_tree_refs (2 samples, 0.19%)</title><rect x="41.1709%" y="517" width="0.1889%" height="15" fill="rgb(213,201,24)"/><text x="41.4209%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (54 samples, 5.10%)</title><rect x="36.3551%" y="581" width="5.0992%" height="15" fill="rgb(248,116,28)"/><text x="36.6051%" y="591.50">entry_..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (56 samples, 5.29%)</title><rect x="36.2606%" y="677" width="5.2880%" height="15" fill="rgb(219,72,43)"/><text x="36.5106%" y="687.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (55 samples, 5.19%)</title><rect x="36.3551%" y="661" width="5.1936%" height="15" fill="rgb(209,138,14)"/><text x="36.6051%" y="671.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (55 samples, 5.19%)</title><rect x="36.3551%" y="645" width="5.1936%" height="15" fill="rgb(222,18,33)"/><text x="36.6051%" y="655.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (55 samples, 5.19%)</title><rect x="36.3551%" y="629" width="5.1936%" height="15" fill="rgb(213,199,7)"/><text x="36.6051%" y="639.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (55 samples, 5.19%)</title><rect x="36.3551%" y="613" width="5.1936%" height="15" fill="rgb(250,110,10)"/><text x="36.6051%" y="623.50">std::s..</text></g><g><title>__libc_recv (55 samples, 5.19%)</title><rect x="36.3551%" y="597" width="5.1936%" height="15" fill="rgb(248,123,6)"/><text x="36.6051%" y="607.50">__libc..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.28%)</title><rect x="41.5486%" y="677" width="0.2833%" height="15" fill="rgb(206,91,31)"/><text x="41.7986%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.19%)</title><rect x="41.6431%" y="661" width="0.1889%" height="15" fill="rgb(211,154,13)"/><text x="41.8931%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.19%)</title><rect x="41.6431%" y="645" width="0.1889%" height="15" fill="rgb(225,148,7)"/><text x="41.8931%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 5.76%)</title><rect x="36.1662%" y="693" width="5.7602%" height="15" fill="rgb(220,160,43)"/><text x="36.4162%" y="703.50">&lt;mysql_..</text></g><g><title>mysql::conn::Conn::read_packet (63 samples, 5.95%)</title><rect x="36.1662%" y="709" width="5.9490%" height="15" fill="rgb(213,52,39)"/><text x="36.4162%" y="719.50">mysql::c..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (69 samples, 6.52%)</title><rect x="36.0718%" y="757" width="6.5156%" height="15" fill="rgb(243,137,7)"/><text x="36.3218%" y="767.50">&lt;mysql::c..</text></g><g><title>mysql::conn::Conn::_query (69 samples, 6.52%)</title><rect x="36.0718%" y="741" width="6.5156%" height="15" fill="rgb(230,79,13)"/><text x="36.3218%" y="751.50">mysql::co..</text></g><g><title>mysql::conn::Conn::handle_result_set (69 samples, 6.52%)</title><rect x="36.0718%" y="725" width="6.5156%" height="15" fill="rgb(247,105,23)"/><text x="36.3218%" y="735.50">mysql::co..</text></g><g><title>mysql_common::packets::column_from_payload (4 samples, 0.38%)</title><rect x="42.2096%" y="709" width="0.3777%" height="15" fill="rgb(223,179,41)"/><text x="42.4596%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.28%)</title><rect x="42.5873%" y="741" width="0.2833%" height="15" fill="rgb(218,9,34)"/><text x="42.8373%" y="751.50"></text></g><g><title>mysql_common::packets::Column::table_str (3 samples, 0.28%)</title><rect x="42.5873%" y="725" width="0.2833%" height="15" fill="rgb(222,106,8)"/><text x="42.8373%" y="735.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (3 samples, 0.28%)</title><rect x="42.5873%" y="709" width="0.2833%" height="15" fill="rgb(211,220,0)"/><text x="42.8373%" y="719.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.19%)</title><rect x="42.6818%" y="693" width="0.1889%" height="15" fill="rgb(229,52,16)"/><text x="42.9318%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.19%)</title><rect x="43.1539%" y="693" width="0.1889%" height="15" fill="rgb(212,155,18)"/><text x="43.4039%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.19%)</title><rect x="43.4372%" y="677" width="0.1889%" height="15" fill="rgb(242,21,14)"/><text x="43.6872%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.19%)</title><rect x="43.4372%" y="661" width="0.1889%" height="15" fill="rgb(222,19,48)"/><text x="43.6872%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.38%)</title><rect x="43.9093%" y="613" width="0.3777%" height="15" fill="rgb(232,45,27)"/><text x="44.1593%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.19%)</title><rect x="44.0982%" y="597" width="0.1889%" height="15" fill="rgb(249,103,42)"/><text x="44.3482%" y="607.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.76%)</title><rect x="43.6261%" y="677" width="0.7554%" height="15" fill="rgb(246,81,33)"/><text x="43.8761%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (8 samples, 0.76%)</title><rect x="43.6261%" y="661" width="0.7554%" height="15" fill="rgb(252,33,42)"/><text x="43.8761%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (7 samples, 0.66%)</title><rect x="43.7205%" y="645" width="0.6610%" height="15" fill="rgb(209,212,41)"/><text x="43.9705%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (6 samples, 0.57%)</title><rect x="43.8149%" y="629" width="0.5666%" height="15" fill="rgb(207,154,6)"/><text x="44.0649%" y="639.50"></text></g><g><title>__GI___libc_free (4 samples, 0.38%)</title><rect x="44.3815%" y="677" width="0.3777%" height="15" fill="rgb(223,64,47)"/><text x="44.6315%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (19 samples, 1.79%)</title><rect x="43.3428%" y="693" width="1.7941%" height="15" fill="rgb(211,161,38)"/><text x="43.5928%" y="703.50">m..</text></g><g><title>std::io::error::Error::_new (2 samples, 0.19%)</title><rect x="44.9481%" y="677" width="0.1889%" height="15" fill="rgb(219,138,40)"/><text x="45.1981%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.19%)</title><rect x="44.9481%" y="661" width="0.1889%" height="15" fill="rgb(241,228,46)"/><text x="45.1981%" y="671.50"></text></g><g><title>[lobsters] (2 samples, 0.19%)</title><rect x="45.4202%" y="677" width="0.1889%" height="15" fill="rgb(223,209,38)"/><text x="45.6702%" y="687.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.19%)</title><rect x="45.4202%" y="661" width="0.1889%" height="15" fill="rgb(236,164,45)"/><text x="45.6702%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.38%)</title><rect x="45.6091%" y="677" width="0.3777%" height="15" fill="rgb(231,15,5)"/><text x="45.8591%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (35 samples, 3.31%)</title><rect x="42.8706%" y="725" width="3.3050%" height="15" fill="rgb(252,35,15)"/><text x="43.1206%" y="735.50">&lt;my..</text></g><g><title>mysql::conn::Conn::next_text (35 samples, 3.31%)</title><rect x="42.8706%" y="709" width="3.3050%" height="15" fill="rgb(248,181,18)"/><text x="43.1206%" y="719.50">mys..</text></g><g><title>mysql_common::value::read_text_values (11 samples, 1.04%)</title><rect x="45.1369%" y="693" width="1.0387%" height="15" fill="rgb(233,39,42)"/><text x="45.3869%" y="703.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.19%)</title><rect x="45.9868%" y="677" width="0.1889%" height="15" fill="rgb(238,110,33)"/><text x="46.2368%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.19%)</title><rect x="46.2701%" y="725" width="0.1889%" height="15" fill="rgb(233,195,10)"/><text x="46.5201%" y="735.50"></text></g><g><title>mysql_common::row::new_row (3 samples, 0.28%)</title><rect x="46.4589%" y="725" width="0.2833%" height="15" fill="rgb(254,105,3)"/><text x="46.7089%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.19%)</title><rect x="46.5534%" y="709" width="0.1889%" height="15" fill="rgb(221,225,9)"/><text x="46.8034%" y="719.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (114 samples, 10.76%)</title><rect x="36.0718%" y="773" width="10.7649%" height="15" fill="rgb(224,227,45)"/><text x="36.3218%" y="783.50">decor::query_tra..</text></g><g><title>decor::helpers::answer_rows (45 samples, 4.25%)</title><rect x="42.5873%" y="757" width="4.2493%" height="15" fill="rgb(229,198,43)"/><text x="42.8373%" y="767.50">decor..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 3.97%)</title><rect x="42.8706%" y="741" width="3.9660%" height="15" fill="rgb(206,209,35)"/><text x="43.1206%" y="751.50">&lt;mys..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.19%)</title><rect x="46.8366%" y="741" width="0.1889%" height="15" fill="rgb(245,195,53)"/><text x="47.0866%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (4 samples, 0.38%)</title><rect x="46.8366%" y="757" width="0.3777%" height="15" fill="rgb(240,92,26)"/><text x="47.0866%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.19%)</title><rect x="47.0255%" y="741" width="0.1889%" height="15" fill="rgb(207,40,23)"/><text x="47.2755%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (124 samples, 11.71%)</title><rect x="35.9773%" y="805" width="11.7092%" height="15" fill="rgb(223,111,35)"/><text x="36.2273%" y="815.50">msql_srv::MysqlIn..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (123 samples, 11.61%)</title><rect x="36.0718%" y="789" width="11.6147%" height="15" fill="rgb(229,147,28)"/><text x="36.3218%" y="799.50">&lt;decor::Shim as m..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (9 samples, 0.85%)</title><rect x="46.8366%" y="773" width="0.8499%" height="15" fill="rgb(211,29,28)"/><text x="47.0866%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (5 samples, 0.47%)</title><rect x="47.2144%" y="757" width="0.4721%" height="15" fill="rgb(228,72,33)"/><text x="47.4644%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.38%)</title><rect x="47.3088%" y="741" width="0.3777%" height="15" fill="rgb(205,214,31)"/><text x="47.5588%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.19%)</title><rect x="47.4976%" y="725" width="0.1889%" height="15" fill="rgb(224,111,15)"/><text x="47.7476%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (18 samples, 1.70%)</title><rect x="47.9698%" y="773" width="1.6997%" height="15" fill="rgb(253,21,26)"/><text x="48.2198%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 1.70%)</title><rect x="47.9698%" y="757" width="1.6997%" height="15" fill="rgb(245,139,43)"/><text x="48.2198%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (18 samples, 1.70%)</title><rect x="47.9698%" y="741" width="1.6997%" height="15" fill="rgb(252,170,7)"/><text x="48.2198%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (17 samples, 1.61%)</title><rect x="48.0642%" y="725" width="1.6053%" height="15" fill="rgb(231,118,14)"/><text x="48.3142%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::expected (17 samples, 1.61%)</title><rect x="48.0642%" y="709" width="1.6053%" height="15" fill="rgb(238,83,0)"/><text x="48.3142%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 1.61%)</title><rect x="48.0642%" y="693" width="1.6053%" height="15" fill="rgb(221,39,39)"/><text x="48.3142%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 1.61%)</title><rect x="48.0642%" y="677" width="1.6053%" height="15" fill="rgb(222,119,46)"/><text x="48.3142%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 1.61%)</title><rect x="48.0642%" y="661" width="1.6053%" height="15" fill="rgb(222,165,49)"/><text x="48.3142%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 1.61%)</title><rect x="48.0642%" y="645" width="1.6053%" height="15" fill="rgb(219,113,52)"/><text x="48.3142%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (17 samples, 1.61%)</title><rect x="48.0642%" y="629" width="1.6053%" height="15" fill="rgb(214,7,15)"/><text x="48.3142%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 1.61%)</title><rect x="48.0642%" y="613" width="1.6053%" height="15" fill="rgb(235,32,4)"/><text x="48.3142%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (17 samples, 1.61%)</title><rect x="48.0642%" y="597" width="1.6053%" height="15" fill="rgb(238,90,54)"/><text x="48.3142%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 1.61%)</title><rect x="48.0642%" y="581" width="1.6053%" height="15" fill="rgb(213,208,19)"/><text x="48.3142%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 1.61%)</title><rect x="48.0642%" y="565" width="1.6053%" height="15" fill="rgb(233,156,4)"/><text x="48.3142%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (19 samples, 1.79%)</title><rect x="47.9698%" y="805" width="1.7941%" height="15" fill="rgb(207,194,5)"/><text x="48.2198%" y="815.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (19 samples, 1.79%)</title><rect x="47.9698%" y="789" width="1.7941%" height="15" fill="rgb(206,111,30)"/><text x="48.2198%" y="799.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.19%)</title><rect x="49.7639%" y="789" width="0.1889%" height="15" fill="rgb(243,70,54)"/><text x="50.0139%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.19%)</title><rect x="49.7639%" y="773" width="0.1889%" height="15" fill="rgb(242,28,8)"/><text x="50.0139%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.19%)</title><rect x="49.7639%" y="757" width="0.1889%" height="15" fill="rgb(219,106,18)"/><text x="50.0139%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.19%)</title><rect x="49.7639%" y="741" width="0.1889%" height="15" fill="rgb(244,222,10)"/><text x="50.0139%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.19%)</title><rect x="49.7639%" y="725" width="0.1889%" height="15" fill="rgb(236,179,52)"/><text x="50.0139%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.28%)</title><rect x="49.7639%" y="805" width="0.2833%" height="15" fill="rgb(213,23,39)"/><text x="50.0139%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.19%)</title><rect x="50.1416%" y="805" width="0.1889%" height="15" fill="rgb(238,48,10)"/><text x="50.3916%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.19%)</title><rect x="50.1416%" y="789" width="0.1889%" height="15" fill="rgb(251,196,23)"/><text x="50.3916%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.19%)</title><rect x="50.1416%" y="773" width="0.1889%" height="15" fill="rgb(250,152,24)"/><text x="50.3916%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.19%)</title><rect x="50.3305%" y="805" width="0.1889%" height="15" fill="rgb(209,150,17)"/><text x="50.5805%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.19%)</title><rect x="50.3305%" y="789" width="0.1889%" height="15" fill="rgb(234,202,34)"/><text x="50.5805%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.19%)</title><rect x="50.6138%" y="805" width="0.1889%" height="15" fill="rgb(253,148,53)"/><text x="50.8638%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.19%)</title><rect x="50.8971%" y="677" width="0.1889%" height="15" fill="rgb(218,129,16)"/><text x="51.1471%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.19%)</title><rect x="50.8971%" y="661" width="0.1889%" height="15" fill="rgb(216,85,19)"/><text x="51.1471%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.19%)</title><rect x="50.8971%" y="645" width="0.1889%" height="15" fill="rgb(235,228,7)"/><text x="51.1471%" y="655.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.28%)</title><rect x="51.0859%" y="677" width="0.2833%" height="15" fill="rgb(245,175,0)"/><text x="51.3359%" y="687.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.28%)</title><rect x="51.0859%" y="661" width="0.2833%" height="15" fill="rgb(208,168,36)"/><text x="51.3359%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.28%)</title><rect x="51.0859%" y="645" width="0.2833%" height="15" fill="rgb(246,171,24)"/><text x="51.3359%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.28%)</title><rect x="51.0859%" y="629" width="0.2833%" height="15" fill="rgb(215,142,24)"/><text x="51.3359%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.28%)</title><rect x="51.0859%" y="613" width="0.2833%" height="15" fill="rgb(250,187,7)"/><text x="51.3359%" y="623.50"></text></g><g><title>__GI___openat (3 samples, 0.28%)</title><rect x="51.0859%" y="597" width="0.2833%" height="15" fill="rgb(228,66,33)"/><text x="51.3359%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.19%)</title><rect x="51.1804%" y="581" width="0.1889%" height="15" fill="rgb(234,215,21)"/><text x="51.4304%" y="591.50"></text></g><g><title>do_syscall_64 (2 samples, 0.19%)</title><rect x="51.1804%" y="565" width="0.1889%" height="15" fill="rgb(222,191,20)"/><text x="51.4304%" y="575.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.19%)</title><rect x="51.1804%" y="549" width="0.1889%" height="15" fill="rgb(245,79,54)"/><text x="51.4304%" y="559.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.19%)</title><rect x="51.1804%" y="533" width="0.1889%" height="15" fill="rgb(240,10,37)"/><text x="51.4304%" y="543.50"></text></g><g><title>do_filp_open (2 samples, 0.19%)</title><rect x="51.1804%" y="517" width="0.1889%" height="15" fill="rgb(214,192,32)"/><text x="51.4304%" y="527.50"></text></g><g><title>do_syscall_64 (6 samples, 0.57%)</title><rect x="51.4636%" y="501" width="0.5666%" height="15" fill="rgb(209,36,54)"/><text x="51.7136%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (5 samples, 0.47%)</title><rect x="51.5581%" y="485" width="0.4721%" height="15" fill="rgb(220,10,11)"/><text x="51.8081%" y="495.50"></text></g><g><title>__sys_recvfrom (5 samples, 0.47%)</title><rect x="51.5581%" y="469" width="0.4721%" height="15" fill="rgb(221,106,17)"/><text x="51.8081%" y="479.50"></text></g><g><title>inet_recvmsg (5 samples, 0.47%)</title><rect x="51.5581%" y="453" width="0.4721%" height="15" fill="rgb(251,142,44)"/><text x="51.8081%" y="463.50"></text></g><g><title>tcp_recvmsg (5 samples, 0.47%)</title><rect x="51.5581%" y="437" width="0.4721%" height="15" fill="rgb(238,13,15)"/><text x="51.8081%" y="447.50"></text></g><g><title>sk_wait_data (4 samples, 0.38%)</title><rect x="51.6525%" y="421" width="0.3777%" height="15" fill="rgb(208,107,27)"/><text x="51.9025%" y="431.50"></text></g><g><title>wait_woken (4 samples, 0.38%)</title><rect x="51.6525%" y="405" width="0.3777%" height="15" fill="rgb(205,136,37)"/><text x="51.9025%" y="415.50"></text></g><g><title>schedule_timeout (4 samples, 0.38%)</title><rect x="51.6525%" y="389" width="0.3777%" height="15" fill="rgb(250,205,27)"/><text x="51.9025%" y="399.50"></text></g><g><title>schedule (4 samples, 0.38%)</title><rect x="51.6525%" y="373" width="0.3777%" height="15" fill="rgb(210,80,43)"/><text x="51.9025%" y="383.50"></text></g><g><title>__schedule (4 samples, 0.38%)</title><rect x="51.6525%" y="357" width="0.3777%" height="15" fill="rgb(247,160,36)"/><text x="51.9025%" y="367.50"></text></g><g><title>psi_task_change (2 samples, 0.19%)</title><rect x="51.8414%" y="341" width="0.1889%" height="15" fill="rgb(234,13,49)"/><text x="52.0914%" y="351.50"></text></g><g><title>psi_group_change (2 samples, 0.19%)</title><rect x="51.8414%" y="325" width="0.1889%" height="15" fill="rgb(234,122,0)"/><text x="52.0914%" y="335.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.85%)</title><rect x="51.3692%" y="629" width="0.8499%" height="15" fill="rgb(207,146,38)"/><text x="51.6192%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 0.85%)</title><rect x="51.3692%" y="613" width="0.8499%" height="15" fill="rgb(207,177,25)"/><text x="51.6192%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 0.85%)</title><rect x="51.3692%" y="597" width="0.8499%" height="15" fill="rgb(211,178,42)"/><text x="51.6192%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 0.85%)</title><rect x="51.3692%" y="581" width="0.8499%" height="15" fill="rgb(230,69,54)"/><text x="51.6192%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 0.85%)</title><rect x="51.3692%" y="565" width="0.8499%" height="15" fill="rgb(214,135,41)"/><text x="51.6192%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 0.85%)</title><rect x="51.3692%" y="549" width="0.8499%" height="15" fill="rgb(237,67,25)"/><text x="51.6192%" y="559.50"></text></g><g><title>__libc_recv (9 samples, 0.85%)</title><rect x="51.3692%" y="533" width="0.8499%" height="15" fill="rgb(222,189,50)"/><text x="51.6192%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.76%)</title><rect x="51.4636%" y="517" width="0.7554%" height="15" fill="rgb(245,148,34)"/><text x="51.7136%" y="527.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.19%)</title><rect x="52.0302%" y="501" width="0.1889%" height="15" fill="rgb(222,29,6)"/><text x="52.2802%" y="511.50"></text></g><g><title>std::rt::lang_start_internal (15 samples, 1.42%)</title><rect x="50.8971%" y="805" width="1.4164%" height="15" fill="rgb(221,189,43)"/><text x="51.1471%" y="815.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 1.42%)</title><rect x="50.8971%" y="789" width="1.4164%" height="15" fill="rgb(207,36,27)"/><text x="51.1471%" y="799.50"></text></g><g><title>std::panicking::try (15 samples, 1.42%)</title><rect x="50.8971%" y="773" width="1.4164%" height="15" fill="rgb(217,90,24)"/><text x="51.1471%" y="783.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 1.42%)</title><rect x="50.8971%" y="757" width="1.4164%" height="15" fill="rgb(224,66,35)"/><text x="51.1471%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (15 samples, 1.42%)</title><rect x="50.8971%" y="741" width="1.4164%" height="15" fill="rgb(221,13,50)"/><text x="51.1471%" y="751.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (15 samples, 1.42%)</title><rect x="50.8971%" y="725" width="1.4164%" height="15" fill="rgb(236,68,49)"/><text x="51.1471%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 1.42%)</title><rect x="50.8971%" y="709" width="1.4164%" height="15" fill="rgb(229,146,28)"/><text x="51.1471%" y="719.50"></text></g><g><title>lobsters::main (15 samples, 1.42%)</title><rect x="50.8971%" y="693" width="1.4164%" height="15" fill="rgb(225,31,38)"/><text x="51.1471%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (10 samples, 0.94%)</title><rect x="51.3692%" y="677" width="0.9443%" height="15" fill="rgb(250,208,3)"/><text x="51.6192%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (10 samples, 0.94%)</title><rect x="51.3692%" y="661" width="0.9443%" height="15" fill="rgb(246,54,23)"/><text x="51.6192%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (10 samples, 0.94%)</title><rect x="51.3692%" y="645" width="0.9443%" height="15" fill="rgb(243,76,11)"/><text x="51.6192%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.28%)</title><rect x="52.3135%" y="725" width="0.2833%" height="15" fill="rgb(245,21,50)"/><text x="52.5635%" y="735.50"></text></g><g><title>_int_free (2 samples, 0.19%)</title><rect x="52.6912%" y="709" width="0.1889%" height="15" fill="rgb(228,9,43)"/><text x="52.9412%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 1.04%)</title><rect x="52.3135%" y="805" width="1.0387%" height="15" fill="rgb(208,100,47)"/><text x="52.5635%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (11 samples, 1.04%)</title><rect x="52.3135%" y="789" width="1.0387%" height="15" fill="rgb(232,26,8)"/><text x="52.5635%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (11 samples, 1.04%)</title><rect x="52.3135%" y="773" width="1.0387%" height="15" fill="rgb(216,166,38)"/><text x="52.5635%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (11 samples, 1.04%)</title><rect x="52.3135%" y="757" width="1.0387%" height="15" fill="rgb(251,202,51)"/><text x="52.5635%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (11 samples, 1.04%)</title><rect x="52.3135%" y="741" width="1.0387%" height="15" fill="rgb(254,216,34)"/><text x="52.5635%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.66%)</title><rect x="52.6912%" y="725" width="0.6610%" height="15" fill="rgb(251,32,27)"/><text x="52.9412%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.47%)</title><rect x="52.8801%" y="709" width="0.4721%" height="15" fill="rgb(208,127,28)"/><text x="53.1301%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.38%)</title><rect x="52.9745%" y="693" width="0.3777%" height="15" fill="rgb(224,137,22)"/><text x="53.2245%" y="703.50"></text></g><g><title>[unknown] (514 samples, 48.54%)</title><rect x="4.9103%" y="821" width="48.5364%" height="15" fill="rgb(254,70,32)"/><text x="5.1603%" y="831.50">[unknown]</text></g><g><title>_int_free (2 samples, 0.19%)</title><rect x="54.0132%" y="597" width="0.1889%" height="15" fill="rgb(229,75,37)"/><text x="54.2632%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.28%)</title><rect x="54.0132%" y="613" width="0.2833%" height="15" fill="rgb(252,64,23)"/><text x="54.2632%" y="623.50"></text></g><g><title>__GI___libc_free (2 samples, 0.19%)</title><rect x="54.2965%" y="613" width="0.1889%" height="15" fill="rgb(232,162,48)"/><text x="54.5465%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.19%)</title><rect x="54.4854%" y="613" width="0.1889%" height="15" fill="rgb(246,160,12)"/><text x="54.7354%" y="623.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (13 samples, 1.23%)</title><rect x="53.6355%" y="677" width="1.2276%" height="15" fill="rgb(247,166,0)"/><text x="53.8855%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.04%)</title><rect x="53.8244%" y="661" width="1.0387%" height="15" fill="rgb(249,219,21)"/><text x="54.0744%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.94%)</title><rect x="53.9188%" y="645" width="0.9443%" height="15" fill="rgb(205,209,3)"/><text x="54.1688%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.85%)</title><rect x="54.0132%" y="629" width="0.8499%" height="15" fill="rgb(243,44,1)"/><text x="54.2632%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.19%)</title><rect x="54.6742%" y="613" width="0.1889%" height="15" fill="rgb(206,159,16)"/><text x="54.9242%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.28%)</title><rect x="54.8631%" y="677" width="0.2833%" height="15" fill="rgb(244,77,30)"/><text x="55.1131%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.28%)</title><rect x="54.8631%" y="661" width="0.2833%" height="15" fill="rgb(218,69,12)"/><text x="55.1131%" y="671.50"></text></g><g><title>msql_srv::commands::parse (2 samples, 0.19%)</title><rect x="55.1464%" y="677" width="0.1889%" height="15" fill="rgb(212,87,7)"/><text x="55.3964%" y="687.50"></text></g><g><title>skb_release_data (2 samples, 0.19%)</title><rect x="56.1851%" y="453" width="0.1889%" height="15" fill="rgb(245,114,25)"/><text x="56.4351%" y="463.50"></text></g><g><title>__kfree_skb (4 samples, 0.38%)</title><rect x="56.1851%" y="469" width="0.3777%" height="15" fill="rgb(210,61,42)"/><text x="56.4351%" y="479.50"></text></g><g><title>skb_release_head_state (2 samples, 0.19%)</title><rect x="56.3739%" y="453" width="0.1889%" height="15" fill="rgb(211,52,33)"/><text x="56.6239%" y="463.50"></text></g><g><title>dst_release (2 samples, 0.19%)</title><rect x="56.3739%" y="437" width="0.1889%" height="15" fill="rgb(234,58,33)"/><text x="56.6239%" y="447.50"></text></g><g><title>ctx_sched_out (2 samples, 0.19%)</title><rect x="57.6015%" y="373" width="0.1889%" height="15" fill="rgb(220,115,36)"/><text x="57.8515%" y="383.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.38%)</title><rect x="57.5071%" y="389" width="0.3777%" height="15" fill="rgb(243,153,54)"/><text x="57.7571%" y="399.50"></text></g><g><title>update_curr (5 samples, 0.47%)</title><rect x="58.1681%" y="357" width="0.4721%" height="15" fill="rgb(251,47,18)"/><text x="58.4181%" y="367.50"></text></g><g><title>dequeue_task_fair (9 samples, 0.85%)</title><rect x="57.8848%" y="389" width="0.8499%" height="15" fill="rgb(242,102,42)"/><text x="58.1348%" y="399.50"></text></g><g><title>dequeue_entity (9 samples, 0.85%)</title><rect x="57.8848%" y="373" width="0.8499%" height="15" fill="rgb(234,31,38)"/><text x="58.1348%" y="383.50"></text></g><g><title>psi_task_change (4 samples, 0.38%)</title><rect x="58.9235%" y="389" width="0.3777%" height="15" fill="rgb(221,117,51)"/><text x="59.1735%" y="399.50"></text></g><g><title>psi_group_change (2 samples, 0.19%)</title><rect x="59.1124%" y="373" width="0.1889%" height="15" fill="rgb(212,20,18)"/><text x="59.3624%" y="383.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.19%)</title><rect x="59.3012%" y="389" width="0.1889%" height="15" fill="rgb(245,133,36)"/><text x="59.5512%" y="399.50"></text></g><g><title>__schedule (24 samples, 2.27%)</title><rect x="57.3182%" y="405" width="2.2663%" height="15" fill="rgb(212,6,19)"/><text x="57.5682%" y="415.50">_..</text></g><g><title>sk_wait_data (31 samples, 2.93%)</title><rect x="56.7517%" y="469" width="2.9273%" height="15" fill="rgb(218,1,36)"/><text x="57.0017%" y="479.50">sk..</text></g><g><title>wait_woken (28 samples, 2.64%)</title><rect x="57.0349%" y="453" width="2.6440%" height="15" fill="rgb(246,84,54)"/><text x="57.2849%" y="463.50">wa..</text></g><g><title>schedule_timeout (26 samples, 2.46%)</title><rect x="57.2238%" y="437" width="2.4551%" height="15" fill="rgb(242,110,6)"/><text x="57.4738%" y="447.50">sc..</text></g><g><title>schedule (26 samples, 2.46%)</title><rect x="57.2238%" y="421" width="2.4551%" height="15" fill="rgb(214,47,5)"/><text x="57.4738%" y="431.50">sc..</text></g><g><title>inet_recvmsg (40 samples, 3.78%)</title><rect x="56.0907%" y="501" width="3.7771%" height="15" fill="rgb(218,159,25)"/><text x="56.3407%" y="511.50">inet..</text></g><g><title>tcp_recvmsg (40 samples, 3.78%)</title><rect x="56.0907%" y="485" width="3.7771%" height="15" fill="rgb(215,211,28)"/><text x="56.3407%" y="495.50">tcp_..</text></g><g><title>skb_copy_datagram_iter (2 samples, 0.19%)</title><rect x="59.6789%" y="469" width="0.1889%" height="15" fill="rgb(238,59,32)"/><text x="59.9289%" y="479.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.19%)</title><rect x="59.6789%" y="453" width="0.1889%" height="15" fill="rgb(226,82,3)"/><text x="59.9289%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (46 samples, 4.34%)</title><rect x="55.7129%" y="533" width="4.3437%" height="15" fill="rgb(240,164,32)"/><text x="55.9629%" y="543.50">__x64..</text></g><g><title>__sys_recvfrom (45 samples, 4.25%)</title><rect x="55.8074%" y="517" width="4.2493%" height="15" fill="rgb(232,46,7)"/><text x="56.0574%" y="527.50">__sys..</text></g><g><title>do_syscall_64 (48 samples, 4.53%)</title><rect x="55.7129%" y="549" width="4.5326%" height="15" fill="rgb(229,129,53)"/><text x="55.9629%" y="559.50">do_sy..</text></g><g><title>syscall_trace_enter (2 samples, 0.19%)</title><rect x="60.0567%" y="533" width="0.1889%" height="15" fill="rgb(234,188,29)"/><text x="60.3067%" y="543.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.19%)</title><rect x="60.0567%" y="517" width="0.1889%" height="15" fill="rgb(246,141,4)"/><text x="60.3067%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (49 samples, 4.63%)</title><rect x="55.7129%" y="565" width="4.6270%" height="15" fill="rgb(229,23,39)"/><text x="55.9629%" y="575.50">entry..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (52 samples, 4.91%)</title><rect x="55.5241%" y="645" width="4.9103%" height="15" fill="rgb(206,12,3)"/><text x="55.7741%" y="655.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (52 samples, 4.91%)</title><rect x="55.5241%" y="629" width="4.9103%" height="15" fill="rgb(252,226,20)"/><text x="55.7741%" y="639.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (52 samples, 4.91%)</title><rect x="55.5241%" y="613" width="4.9103%" height="15" fill="rgb(216,123,35)"/><text x="55.7741%" y="623.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (52 samples, 4.91%)</title><rect x="55.5241%" y="597" width="4.9103%" height="15" fill="rgb(212,68,40)"/><text x="55.7741%" y="607.50">std::s..</text></g><g><title>__libc_recv (52 samples, 4.91%)</title><rect x="55.5241%" y="581" width="4.9103%" height="15" fill="rgb(254,125,32)"/><text x="55.7741%" y="591.50">__libc..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (55 samples, 5.19%)</title><rect x="55.4297%" y="661" width="5.1936%" height="15" fill="rgb(253,97,22)"/><text x="55.6797%" y="671.50">&lt;std::..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.19%)</title><rect x="60.4344%" y="645" width="0.1889%" height="15" fill="rgb(241,101,14)"/><text x="60.6844%" y="655.50"></text></g><g><title>__memset_avx2_erms (3 samples, 0.28%)</title><rect x="60.6232%" y="661" width="0.2833%" height="15" fill="rgb(238,103,29)"/><text x="60.8732%" y="671.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (61 samples, 5.76%)</title><rect x="55.3352%" y="677" width="5.7602%" height="15" fill="rgb(233,195,47)"/><text x="55.5852%" y="687.50">msql_sr..</text></g><g><title>__local_bh_enable_ip (2 samples, 0.19%)</title><rect x="61.6619%" y="517" width="0.1889%" height="15" fill="rgb(246,218,30)"/><text x="61.9119%" y="527.50"></text></g><g><title>preempt_count_sub (2 samples, 0.19%)</title><rect x="61.6619%" y="501" width="0.1889%" height="15" fill="rgb(219,145,47)"/><text x="61.9119%" y="511.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.28%)</title><rect x="63.4561%" y="389" width="0.2833%" height="15" fill="rgb(243,12,26)"/><text x="63.7061%" y="399.50"></text></g><g><title>loopback_xmit (3 samples, 0.28%)</title><rect x="63.4561%" y="373" width="0.2833%" height="15" fill="rgb(214,87,16)"/><text x="63.7061%" y="383.50"></text></g><g><title>tcp_wfree (2 samples, 0.19%)</title><rect x="63.5505%" y="357" width="0.1889%" height="15" fill="rgb(208,99,42)"/><text x="63.8005%" y="367.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.19%)</title><rect x="63.8338%" y="389" width="0.1889%" height="15" fill="rgb(253,99,2)"/><text x="64.0838%" y="399.50"></text></g><g><title>__dev_queue_xmit (10 samples, 0.94%)</title><rect x="63.1728%" y="405" width="0.9443%" height="15" fill="rgb(220,168,23)"/><text x="63.4228%" y="415.50"></text></g><g><title>irqtime_account_irq (3 samples, 0.28%)</title><rect x="64.2115%" y="341" width="0.2833%" height="15" fill="rgb(242,38,24)"/><text x="64.4615%" y="351.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.19%)</title><rect x="64.3059%" y="325" width="0.1889%" height="15" fill="rgb(225,182,9)"/><text x="64.5559%" y="335.50"></text></g><g><title>sched_clock (2 samples, 0.19%)</title><rect x="64.3059%" y="309" width="0.1889%" height="15" fill="rgb(243,178,37)"/><text x="64.5559%" y="319.50"></text></g><g><title>native_sched_clock (2 samples, 0.19%)</title><rect x="64.3059%" y="293" width="0.1889%" height="15" fill="rgb(232,139,19)"/><text x="64.5559%" y="303.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.19%)</title><rect x="64.6837%" y="293" width="0.1889%" height="15" fill="rgb(225,201,24)"/><text x="64.9337%" y="303.50"></text></g><g><title>sk_filter_trim_cap (3 samples, 0.28%)</title><rect x="65.1558%" y="213" width="0.2833%" height="15" fill="rgb(221,47,46)"/><text x="65.4058%" y="223.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.19%)</title><rect x="65.2502%" y="197" width="0.1889%" height="15" fill="rgb(249,23,13)"/><text x="65.5002%" y="207.50"></text></g><g><title>psi_task_change (2 samples, 0.19%)</title><rect x="66.2890%" y="101" width="0.1889%" height="15" fill="rgb(219,9,5)"/><text x="66.5390%" y="111.50"></text></g><g><title>psi_group_change (2 samples, 0.19%)</title><rect x="66.2890%" y="85" width="0.1889%" height="15" fill="rgb(254,171,16)"/><text x="66.5390%" y="95.50"></text></g><g><title>enqueue_task (3 samples, 0.28%)</title><rect x="66.2890%" y="117" width="0.2833%" height="15" fill="rgb(230,171,20)"/><text x="66.5390%" y="127.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.38%)</title><rect x="66.5722%" y="117" width="0.3777%" height="15" fill="rgb(210,71,41)"/><text x="66.8222%" y="127.50"></text></g><g><title>enqueue_entity (3 samples, 0.28%)</title><rect x="66.6667%" y="101" width="0.2833%" height="15" fill="rgb(206,173,20)"/><text x="66.9167%" y="111.50"></text></g><g><title>update_load_avg (2 samples, 0.19%)</title><rect x="66.7611%" y="85" width="0.1889%" height="15" fill="rgb(233,88,34)"/><text x="67.0111%" y="95.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.19%)</title><rect x="66.7611%" y="69" width="0.1889%" height="15" fill="rgb(223,209,46)"/><text x="67.0111%" y="79.50"></text></g><g><title>sock_def_readable (14 samples, 1.32%)</title><rect x="66.0057%" y="181" width="1.3220%" height="15" fill="rgb(250,43,18)"/><text x="66.2557%" y="191.50"></text></g><g><title>__wake_up_common_lock (13 samples, 1.23%)</title><rect x="66.1001%" y="165" width="1.2276%" height="15" fill="rgb(208,13,10)"/><text x="66.3501%" y="175.50"></text></g><g><title>__wake_up_common (13 samples, 1.23%)</title><rect x="66.1001%" y="149" width="1.2276%" height="15" fill="rgb(212,200,36)"/><text x="66.3501%" y="159.50"></text></g><g><title>try_to_wake_up (13 samples, 1.23%)</title><rect x="66.1001%" y="133" width="1.2276%" height="15" fill="rgb(225,90,30)"/><text x="66.3501%" y="143.50"></text></g><g><title>ttwu_do_wakeup (4 samples, 0.38%)</title><rect x="66.9500%" y="117" width="0.3777%" height="15" fill="rgb(236,182,39)"/><text x="67.2000%" y="127.50"></text></g><g><title>check_preempt_curr (4 samples, 0.38%)</title><rect x="66.9500%" y="101" width="0.3777%" height="15" fill="rgb(212,144,35)"/><text x="67.2000%" y="111.50"></text></g><g><title>resched_curr (2 samples, 0.19%)</title><rect x="67.1388%" y="85" width="0.1889%" height="15" fill="rgb(228,63,44)"/><text x="67.3888%" y="95.50"></text></g><g><title>__kfree_skb (4 samples, 0.38%)</title><rect x="67.5165%" y="165" width="0.3777%" height="15" fill="rgb(228,109,6)"/><text x="67.7665%" y="175.50"></text></g><g><title>skb_release_data (4 samples, 0.38%)</title><rect x="67.5165%" y="149" width="0.3777%" height="15" fill="rgb(238,117,24)"/><text x="67.7665%" y="159.50"></text></g><g><title>tcp_ack (9 samples, 0.85%)</title><rect x="67.3277%" y="181" width="0.8499%" height="15" fill="rgb(242,26,26)"/><text x="67.5777%" y="191.50"></text></g><g><title>ip_local_deliver (37 samples, 3.49%)</title><rect x="64.8725%" y="277" width="3.4939%" height="15" fill="rgb(221,92,48)"/><text x="65.1225%" y="287.50">ip_..</text></g><g><title>ip_local_deliver_finish (36 samples, 3.40%)</title><rect x="64.9669%" y="261" width="3.3994%" height="15" fill="rgb(209,209,32)"/><text x="65.2169%" y="271.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (36 samples, 3.40%)</title><rect x="64.9669%" y="245" width="3.3994%" height="15" fill="rgb(221,70,22)"/><text x="65.2169%" y="255.50">ip_..</text></g><g><title>tcp_v4_rcv (35 samples, 3.31%)</title><rect x="65.0614%" y="229" width="3.3050%" height="15" fill="rgb(248,145,5)"/><text x="65.3114%" y="239.50">tcp..</text></g><g><title>tcp_v4_do_rcv (31 samples, 2.93%)</title><rect x="65.4391%" y="213" width="2.9273%" height="15" fill="rgb(226,116,26)"/><text x="65.6891%" y="223.50">tc..</text></g><g><title>tcp_rcv_established (31 samples, 2.93%)</title><rect x="65.4391%" y="197" width="2.9273%" height="15" fill="rgb(244,5,17)"/><text x="65.6891%" y="207.50">tc..</text></g><g><title>__netif_receive_skb_one_core (41 samples, 3.87%)</title><rect x="64.6837%" y="309" width="3.8716%" height="15" fill="rgb(252,159,33)"/><text x="64.9337%" y="319.50">__ne..</text></g><g><title>ip_rcv (39 samples, 3.68%)</title><rect x="64.8725%" y="293" width="3.6827%" height="15" fill="rgb(206,71,0)"/><text x="65.1225%" y="303.50">ip_r..</text></g><g><title>__local_bh_enable_ip (48 samples, 4.53%)</title><rect x="64.1171%" y="405" width="4.5326%" height="15" fill="rgb(233,118,54)"/><text x="64.3671%" y="415.50">__loc..</text></g><g><title>do_softirq (48 samples, 4.53%)</title><rect x="64.1171%" y="389" width="4.5326%" height="15" fill="rgb(234,83,48)"/><text x="64.3671%" y="399.50">do_so..</text></g><g><title>do_softirq_own_stack (47 samples, 4.44%)</title><rect x="64.2115%" y="373" width="4.4381%" height="15" fill="rgb(228,3,54)"/><text x="64.4615%" y="383.50">do_so..</text></g><g><title>__do_softirq (47 samples, 4.44%)</title><rect x="64.2115%" y="357" width="4.4381%" height="15" fill="rgb(226,155,13)"/><text x="64.4615%" y="367.50">__do_..</text></g><g><title>net_rx_action (44 samples, 4.15%)</title><rect x="64.4948%" y="341" width="4.1549%" height="15" fill="rgb(241,28,37)"/><text x="64.7448%" y="351.50">net_r..</text></g><g><title>process_backlog (44 samples, 4.15%)</title><rect x="64.4948%" y="325" width="4.1549%" height="15" fill="rgb(233,93,10)"/><text x="64.7448%" y="335.50">proce..</text></g><g><title>ip_finish_output2 (60 samples, 5.67%)</title><rect x="63.0784%" y="421" width="5.6657%" height="15" fill="rgb(225,113,19)"/><text x="63.3284%" y="431.50">ip_fini..</text></g><g><title>__ip_queue_xmit (65 samples, 6.14%)</title><rect x="62.7951%" y="453" width="6.1379%" height="15" fill="rgb(241,2,18)"/><text x="63.0451%" y="463.50">__ip_que..</text></g><g><title>ip_output (64 samples, 6.04%)</title><rect x="62.8895%" y="437" width="6.0434%" height="15" fill="rgb(228,207,21)"/><text x="63.1395%" y="447.50">ip_output</text></g><g><title>ip_finish_output (2 samples, 0.19%)</title><rect x="68.7441%" y="421" width="0.1889%" height="15" fill="rgb(213,211,35)"/><text x="68.9941%" y="431.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.19%)</title><rect x="68.7441%" y="405" width="0.1889%" height="15" fill="rgb(209,83,10)"/><text x="68.9941%" y="415.50"></text></g><g><title>__tcp_transmit_skb (71 samples, 6.70%)</title><rect x="62.5118%" y="469" width="6.7044%" height="15" fill="rgb(209,164,1)"/><text x="62.7618%" y="479.50">__tcp_tra..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.19%)</title><rect x="69.2162%" y="469" width="0.1889%" height="15" fill="rgb(213,184,43)"/><text x="69.4662%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (77 samples, 7.27%)</title><rect x="62.4174%" y="501" width="7.2710%" height="15" fill="rgb(231,61,34)"/><text x="62.6674%" y="511.50">__tcp_push..</text></g><g><title>tcp_write_xmit (77 samples, 7.27%)</title><rect x="62.4174%" y="485" width="7.2710%" height="15" fill="rgb(235,75,3)"/><text x="62.6674%" y="495.50">tcp_write_..</text></g><g><title>tcp_schedule_loss_probe.part.0 (3 samples, 0.28%)</title><rect x="69.4051%" y="469" width="0.2833%" height="15" fill="rgb(220,106,47)"/><text x="69.6551%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.19%)</title><rect x="69.6884%" y="469" width="0.1889%" height="15" fill="rgb(210,196,33)"/><text x="69.9384%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.47%)</title><rect x="69.6884%" y="501" width="0.4721%" height="15" fill="rgb(229,154,42)"/><text x="69.9384%" y="511.50"></text></g><g><title>__alloc_skb (5 samples, 0.47%)</title><rect x="69.6884%" y="485" width="0.4721%" height="15" fill="rgb(228,114,26)"/><text x="69.9384%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.28%)</title><rect x="69.8772%" y="469" width="0.2833%" height="15" fill="rgb(208,144,1)"/><text x="70.1272%" y="479.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.28%)</title><rect x="70.1605%" y="501" width="0.2833%" height="15" fill="rgb(239,112,37)"/><text x="70.4105%" y="511.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.19%)</title><rect x="70.2550%" y="485" width="0.1889%" height="15" fill="rgb(210,96,50)"/><text x="70.5050%" y="495.50"></text></g><g><title>__x64_sys_sendto (101 samples, 9.54%)</title><rect x="61.2842%" y="581" width="9.5373%" height="15" fill="rgb(222,178,2)"/><text x="61.5342%" y="591.50">__x64_sys_send..</text></g><g><title>__sys_sendto (101 samples, 9.54%)</title><rect x="61.2842%" y="565" width="9.5373%" height="15" fill="rgb(226,74,18)"/><text x="61.5342%" y="575.50">__sys_sendto</text></g><g><title>sock_sendmsg (97 samples, 9.16%)</title><rect x="61.6619%" y="549" width="9.1596%" height="15" fill="rgb(225,67,54)"/><text x="61.9119%" y="559.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (97 samples, 9.16%)</title><rect x="61.6619%" y="533" width="9.1596%" height="15" fill="rgb(251,92,32)"/><text x="61.9119%" y="543.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (92 samples, 8.69%)</title><rect x="62.1341%" y="517" width="8.6874%" height="15" fill="rgb(228,149,22)"/><text x="62.3841%" y="527.50">tcp_sendmsg_..</text></g><g><title>tcp_send_mss (3 samples, 0.28%)</title><rect x="70.5382%" y="501" width="0.2833%" height="15" fill="rgb(243,54,13)"/><text x="70.7882%" y="511.50"></text></g><g><title>do_syscall_64 (103 samples, 9.73%)</title><rect x="61.1898%" y="597" width="9.7262%" height="15" fill="rgb(243,180,28)"/><text x="61.4398%" y="607.50">do_syscall_64</text></g><g><title>decor::Shim::run_on_tcp (187 samples, 17.66%)</title><rect x="53.5411%" y="709" width="17.6582%" height="15" fill="rgb(208,167,24)"/><text x="53.7911%" y="719.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (187 samples, 17.66%)</title><rect x="53.5411%" y="693" width="17.6582%" height="15" fill="rgb(245,73,45)"/><text x="53.7911%" y="703.50">msql_srv::MysqlIntermediary..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (107 samples, 10.10%)</title><rect x="61.0954%" y="677" width="10.1039%" height="15" fill="rgb(237,203,48)"/><text x="61.3454%" y="687.50">std::io::buffer..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (107 samples, 10.10%)</title><rect x="61.0954%" y="661" width="10.1039%" height="15" fill="rgb(211,197,16)"/><text x="61.3454%" y="671.50">&lt;std::net::tcp:..</text></g><g><title>std::sys_common::net::TcpStream::write (107 samples, 10.10%)</title><rect x="61.0954%" y="645" width="10.1039%" height="15" fill="rgb(243,99,51)"/><text x="61.3454%" y="655.50">std::sys_common..</text></g><g><title>__libc_send (107 samples, 10.10%)</title><rect x="61.0954%" y="629" width="10.1039%" height="15" fill="rgb(215,123,29)"/><text x="61.3454%" y="639.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (106 samples, 10.01%)</title><rect x="61.1898%" y="613" width="10.0094%" height="15" fill="rgb(239,186,37)"/><text x="61.4398%" y="623.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.28%)</title><rect x="70.9160%" y="597" width="0.2833%" height="15" fill="rgb(252,136,39)"/><text x="71.1660%" y="607.50"></text></g><g><title>__GI___clone (189 samples, 17.85%)</title><rect x="53.4466%" y="821" width="17.8470%" height="15" fill="rgb(223,213,32)"/><text x="53.6966%" y="831.50">__GI___clone</text></g><g><title>start_thread (189 samples, 17.85%)</title><rect x="53.4466%" y="805" width="17.8470%" height="15" fill="rgb(233,115,5)"/><text x="53.6966%" y="815.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (188 samples, 17.75%)</title><rect x="53.5411%" y="789" width="17.7526%" height="15" fill="rgb(207,226,44)"/><text x="53.7911%" y="799.50">std::sys::unix::thread::Thre..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (188 samples, 17.75%)</title><rect x="53.5411%" y="773" width="17.7526%" height="15" fill="rgb(208,126,0)"/><text x="53.7911%" y="783.50">&lt;alloc::boxed::Box&lt;F&gt; as cor..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (188 samples, 17.75%)</title><rect x="53.5411%" y="757" width="17.7526%" height="15" fill="rgb(244,66,21)"/><text x="53.7911%" y="767.50">&lt;alloc::boxed::Box&lt;F&gt; as cor..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (188 samples, 17.75%)</title><rect x="53.5411%" y="741" width="17.7526%" height="15" fill="rgb(222,97,12)"/><text x="53.7911%" y="751.50">core::ops::function::FnOnce:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (188 samples, 17.75%)</title><rect x="53.5411%" y="725" width="17.7526%" height="15" fill="rgb(219,213,19)"/><text x="53.7911%" y="735.50">std::sys_common::backtrace::..</text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.28%)</title><rect x="71.5770%" y="629" width="0.2833%" height="15" fill="rgb(252,169,30)"/><text x="71.8270%" y="639.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.28%)</title><rect x="71.5770%" y="613" width="0.2833%" height="15" fill="rgb(206,32,51)"/><text x="71.8270%" y="623.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.47%)</title><rect x="71.4825%" y="645" width="0.4721%" height="15" fill="rgb(250,172,42)"/><text x="71.7325%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.38%)</title><rect x="71.9547%" y="565" width="0.3777%" height="15" fill="rgb(209,34,43)"/><text x="72.2047%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.38%)</title><rect x="71.9547%" y="549" width="0.3777%" height="15" fill="rgb(223,11,35)"/><text x="72.2047%" y="559.50"></text></g><g><title>__GI___sched_setaffinity_new (235 samples, 22.19%)</title><rect x="72.4268%" y="549" width="22.1907%" height="15" fill="rgb(251,219,26)"/><text x="72.6768%" y="559.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (234 samples, 22.10%)</title><rect x="72.5212%" y="533" width="22.0963%" height="15" fill="rgb(231,119,3)"/><text x="72.7712%" y="543.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (234 samples, 22.10%)</title><rect x="72.5212%" y="517" width="22.0963%" height="15" fill="rgb(216,97,11)"/><text x="72.7712%" y="527.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 22.10%)</title><rect x="72.5212%" y="501" width="22.0963%" height="15" fill="rgb(223,59,9)"/><text x="72.7712%" y="511.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 22.10%)</title><rect x="72.5212%" y="485" width="22.0963%" height="15" fill="rgb(233,93,31)"/><text x="72.7712%" y="495.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 22.10%)</title><rect x="72.5212%" y="469" width="22.0963%" height="15" fill="rgb(239,81,33)"/><text x="72.7712%" y="479.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 22.10%)</title><rect x="72.5212%" y="453" width="22.0963%" height="15" fill="rgb(213,120,34)"/><text x="72.7712%" y="463.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 22.10%)</title><rect x="72.5212%" y="437" width="22.0963%" height="15" fill="rgb(243,49,53)"/><text x="72.7712%" y="447.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 22.10%)</title><rect x="72.5212%" y="421" width="22.0963%" height="15" fill="rgb(247,216,33)"/><text x="72.7712%" y="431.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 22.10%)</title><rect x="72.5212%" y="405" width="22.0963%" height="15" fill="rgb(226,26,14)"/><text x="72.7712%" y="415.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 22.10%)</title><rect x="72.5212%" y="389" width="22.0963%" height="15" fill="rgb(215,49,53)"/><text x="72.7712%" y="399.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 22.10%)</title><rect x="72.5212%" y="373" width="22.0963%" height="15" fill="rgb(245,162,40)"/><text x="72.7712%" y="383.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 22.00%)</title><rect x="72.6157%" y="357" width="22.0019%" height="15" fill="rgb(229,68,17)"/><text x="72.8657%" y="367.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (233 samples, 22.00%)</title><rect x="72.6157%" y="341" width="22.0019%" height="15" fill="rgb(213,182,10)"/><text x="72.8657%" y="351.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (233 samples, 22.00%)</title><rect x="72.6157%" y="325" width="22.0019%" height="15" fill="rgb(245,125,30)"/><text x="72.8657%" y="335.50">native_write_msr</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 22.76%)</title><rect x="71.9547%" y="581" width="22.7573%" height="15" fill="rgb(232,202,2)"/><text x="72.2047%" y="591.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (237 samples, 22.38%)</title><rect x="72.3324%" y="565" width="22.3796%" height="15" fill="rgb(237,140,51)"/><text x="72.5824%" y="575.50">hwloc_linux_set_tid_cpubind</text></g><g><title>hwloc::Topology::new (242 samples, 22.85%)</title><rect x="71.9547%" y="645" width="22.8517%" height="15" fill="rgb(236,157,25)"/><text x="72.2047%" y="655.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 22.85%)</title><rect x="71.9547%" y="629" width="22.8517%" height="15" fill="rgb(219,209,0)"/><text x="72.2047%" y="639.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 22.85%)</title><rect x="71.9547%" y="613" width="22.8517%" height="15" fill="rgb(240,116,54)"/><text x="72.2047%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 22.85%)</title><rect x="71.9547%" y="597" width="22.8517%" height="15" fill="rgb(216,10,36)"/><text x="72.2047%" y="607.50">[libhwloc.so.15.2.0]</text></g><g><title>dev_hard_start_xmit (2 samples, 0.19%)</title><rect x="95.4674%" y="325" width="0.1889%" height="15" fill="rgb(222,72,44)"/><text x="95.7174%" y="335.50"></text></g><g><title>loopback_xmit (2 samples, 0.19%)</title><rect x="95.4674%" y="309" width="0.1889%" height="15" fill="rgb(232,159,9)"/><text x="95.7174%" y="319.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.47%)</title><rect x="95.3730%" y="341" width="0.4721%" height="15" fill="rgb(210,39,32)"/><text x="95.6230%" y="351.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.19%)</title><rect x="95.6563%" y="325" width="0.1889%" height="15" fill="rgb(216,194,45)"/><text x="95.9063%" y="335.50"></text></g><g><title>sock_def_readable (6 samples, 0.57%)</title><rect x="95.9396%" y="117" width="0.5666%" height="15" fill="rgb(218,18,35)"/><text x="96.1896%" y="127.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.57%)</title><rect x="95.9396%" y="101" width="0.5666%" height="15" fill="rgb(207,83,51)"/><text x="96.1896%" y="111.50"></text></g><g><title>__wake_up_common (6 samples, 0.57%)</title><rect x="95.9396%" y="85" width="0.5666%" height="15" fill="rgb(225,63,43)"/><text x="96.1896%" y="95.50"></text></g><g><title>try_to_wake_up (6 samples, 0.57%)</title><rect x="95.9396%" y="69" width="0.5666%" height="15" fill="rgb(207,57,36)"/><text x="96.1896%" y="79.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.19%)</title><rect x="96.3173%" y="53" width="0.1889%" height="15" fill="rgb(216,99,33)"/><text x="96.5673%" y="63.50"></text></g><g><title>enqueue_entity (2 samples, 0.19%)</title><rect x="96.3173%" y="37" width="0.1889%" height="15" fill="rgb(225,42,16)"/><text x="96.5673%" y="47.50"></text></g><g><title>tcp_ack (2 samples, 0.19%)</title><rect x="96.5061%" y="117" width="0.1889%" height="15" fill="rgb(220,201,45)"/><text x="96.7561%" y="127.50"></text></g><g><title>tcp_data_queue (3 samples, 0.28%)</title><rect x="96.6950%" y="117" width="0.2833%" height="15" fill="rgb(225,33,4)"/><text x="96.9450%" y="127.50"></text></g><g><title>sock_def_readable (3 samples, 0.28%)</title><rect x="96.6950%" y="101" width="0.2833%" height="15" fill="rgb(224,33,50)"/><text x="96.9450%" y="111.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.28%)</title><rect x="96.6950%" y="85" width="0.2833%" height="15" fill="rgb(246,198,51)"/><text x="96.9450%" y="95.50"></text></g><g><title>__wake_up_common (3 samples, 0.28%)</title><rect x="96.6950%" y="69" width="0.2833%" height="15" fill="rgb(205,22,4)"/><text x="96.9450%" y="79.50"></text></g><g><title>try_to_wake_up (2 samples, 0.19%)</title><rect x="96.7894%" y="53" width="0.1889%" height="15" fill="rgb(206,3,8)"/><text x="97.0394%" y="63.50"></text></g><g><title>__local_bh_enable_ip (14 samples, 1.32%)</title><rect x="95.8451%" y="341" width="1.3220%" height="15" fill="rgb(251,23,15)"/><text x="96.0951%" y="351.50"></text></g><g><title>do_softirq (14 samples, 1.32%)</title><rect x="95.8451%" y="325" width="1.3220%" height="15" fill="rgb(252,88,28)"/><text x="96.0951%" y="335.50"></text></g><g><title>do_softirq_own_stack (14 samples, 1.32%)</title><rect x="95.8451%" y="309" width="1.3220%" height="15" fill="rgb(212,127,14)"/><text x="96.0951%" y="319.50"></text></g><g><title>__do_softirq (14 samples, 1.32%)</title><rect x="95.8451%" y="293" width="1.3220%" height="15" fill="rgb(247,145,37)"/><text x="96.0951%" y="303.50"></text></g><g><title>net_rx_action (14 samples, 1.32%)</title><rect x="95.8451%" y="277" width="1.3220%" height="15" fill="rgb(209,117,53)"/><text x="96.0951%" y="287.50"></text></g><g><title>process_backlog (14 samples, 1.32%)</title><rect x="95.8451%" y="261" width="1.3220%" height="15" fill="rgb(212,90,42)"/><text x="96.0951%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (14 samples, 1.32%)</title><rect x="95.8451%" y="245" width="1.3220%" height="15" fill="rgb(218,164,37)"/><text x="96.0951%" y="255.50"></text></g><g><title>ip_rcv (14 samples, 1.32%)</title><rect x="95.8451%" y="229" width="1.3220%" height="15" fill="rgb(246,65,34)"/><text x="96.0951%" y="239.50"></text></g><g><title>ip_local_deliver (14 samples, 1.32%)</title><rect x="95.8451%" y="213" width="1.3220%" height="15" fill="rgb(231,100,33)"/><text x="96.0951%" y="223.50"></text></g><g><title>ip_local_deliver_finish (13 samples, 1.23%)</title><rect x="95.9396%" y="197" width="1.2276%" height="15" fill="rgb(228,126,14)"/><text x="96.1896%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (13 samples, 1.23%)</title><rect x="95.9396%" y="181" width="1.2276%" height="15" fill="rgb(215,173,21)"/><text x="96.1896%" y="191.50"></text></g><g><title>tcp_v4_rcv (13 samples, 1.23%)</title><rect x="95.9396%" y="165" width="1.2276%" height="15" fill="rgb(210,6,40)"/><text x="96.1896%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 1.23%)</title><rect x="95.9396%" y="149" width="1.2276%" height="15" fill="rgb(212,48,18)"/><text x="96.1896%" y="159.50"></text></g><g><title>tcp_rcv_established (13 samples, 1.23%)</title><rect x="95.9396%" y="133" width="1.2276%" height="15" fill="rgb(230,214,11)"/><text x="96.1896%" y="143.50"></text></g><g><title>ip_finish_output2 (21 samples, 1.98%)</title><rect x="95.3730%" y="357" width="1.9830%" height="15" fill="rgb(254,105,39)"/><text x="95.6230%" y="367.50">i..</text></g><g><title>__ip_queue_xmit (22 samples, 2.08%)</title><rect x="95.3730%" y="389" width="2.0774%" height="15" fill="rgb(245,158,5)"/><text x="95.6230%" y="399.50">_..</text></g><g><title>ip_output (22 samples, 2.08%)</title><rect x="95.3730%" y="373" width="2.0774%" height="15" fill="rgb(249,208,11)"/><text x="95.6230%" y="383.50">i..</text></g><g><title>__tcp_transmit_skb (23 samples, 2.17%)</title><rect x="95.3730%" y="405" width="2.1719%" height="15" fill="rgb(210,39,28)"/><text x="95.6230%" y="415.50">_..</text></g><g><title>__tcp_push_pending_frames (27 samples, 2.55%)</title><rect x="95.1841%" y="437" width="2.5496%" height="15" fill="rgb(211,56,53)"/><text x="95.4341%" y="447.50">__..</text></g><g><title>tcp_write_xmit (27 samples, 2.55%)</title><rect x="95.1841%" y="421" width="2.5496%" height="15" fill="rgb(226,201,30)"/><text x="95.4341%" y="431.50">tc..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.19%)</title><rect x="97.7337%" y="437" width="0.1889%" height="15" fill="rgb(239,101,34)"/><text x="97.9837%" y="447.50"></text></g><g><title>__alloc_skb (2 samples, 0.19%)</title><rect x="97.7337%" y="421" width="0.1889%" height="15" fill="rgb(226,209,5)"/><text x="97.9837%" y="431.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.19%)</title><rect x="97.7337%" y="405" width="0.1889%" height="15" fill="rgb(250,105,47)"/><text x="97.9837%" y="415.50"></text></g><g><title>memcg_kmem_put_cache (2 samples, 0.19%)</title><rect x="97.7337%" y="389" width="0.1889%" height="15" fill="rgb(230,72,3)"/><text x="97.9837%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (35 samples, 3.31%)</title><rect x="94.9953%" y="549" width="3.3050%" height="15" fill="rgb(232,218,39)"/><text x="95.2453%" y="559.50">ent..</text></g><g><title>do_syscall_64 (34 samples, 3.21%)</title><rect x="95.0897%" y="533" width="3.2106%" height="15" fill="rgb(248,166,6)"/><text x="95.3397%" y="543.50">do_..</text></g><g><title>__x64_sys_sendto (34 samples, 3.21%)</title><rect x="95.0897%" y="517" width="3.2106%" height="15" fill="rgb(247,89,20)"/><text x="95.3397%" y="527.50">__x..</text></g><g><title>__sys_sendto (34 samples, 3.21%)</title><rect x="95.0897%" y="501" width="3.2106%" height="15" fill="rgb(248,130,54)"/><text x="95.3397%" y="511.50">__s..</text></g><g><title>sock_sendmsg (34 samples, 3.21%)</title><rect x="95.0897%" y="485" width="3.2106%" height="15" fill="rgb(234,196,4)"/><text x="95.3397%" y="495.50">soc..</text></g><g><title>tcp_sendmsg (34 samples, 3.21%)</title><rect x="95.0897%" y="469" width="3.2106%" height="15" fill="rgb(250,143,31)"/><text x="95.3397%" y="479.50">tcp..</text></g><g><title>tcp_sendmsg_locked (33 samples, 3.12%)</title><rect x="95.1841%" y="453" width="3.1161%" height="15" fill="rgb(211,110,34)"/><text x="95.4341%" y="463.50">tcp..</text></g><g><title>tcp_send_mss (2 samples, 0.19%)</title><rect x="98.1114%" y="437" width="0.1889%" height="15" fill="rgb(215,124,48)"/><text x="98.3614%" y="447.50"></text></g><g><title>tcp_current_mss (2 samples, 0.19%)</title><rect x="98.1114%" y="421" width="0.1889%" height="15" fill="rgb(216,46,13)"/><text x="98.3614%" y="431.50"></text></g><g><title>mysql::conn::Conn::_query (39 samples, 3.68%)</title><rect x="94.8064%" y="645" width="3.6827%" height="15" fill="rgb(205,184,25)"/><text x="95.0564%" y="655.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (38 samples, 3.59%)</title><rect x="94.9008%" y="629" width="3.5883%" height="15" fill="rgb(228,1,10)"/><text x="95.1508%" y="639.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (38 samples, 3.59%)</title><rect x="94.9008%" y="613" width="3.5883%" height="15" fill="rgb(213,116,27)"/><text x="95.1508%" y="623.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (38 samples, 3.59%)</title><rect x="94.9008%" y="597" width="3.5883%" height="15" fill="rgb(241,95,50)"/><text x="95.1508%" y="607.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (38 samples, 3.59%)</title><rect x="94.9008%" y="581" width="3.5883%" height="15" fill="rgb(238,48,32)"/><text x="95.1508%" y="591.50">std:..</text></g><g><title>__libc_send (38 samples, 3.59%)</title><rect x="94.9008%" y="565" width="3.5883%" height="15" fill="rgb(235,113,49)"/><text x="95.1508%" y="575.50">__li..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.19%)</title><rect x="98.3003%" y="549" width="0.1889%" height="15" fill="rgb(205,127,43)"/><text x="98.5503%" y="559.50"></text></g><g><title>__libc_start_main (288 samples, 27.20%)</title><rect x="71.3881%" y="805" width="27.1955%" height="15" fill="rgb(250,162,2)"/><text x="71.6381%" y="815.50">__libc_start_main</text></g><g><title>main (288 samples, 27.20%)</title><rect x="71.3881%" y="789" width="27.1955%" height="15" fill="rgb(220,13,41)"/><text x="71.6381%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (288 samples, 27.20%)</title><rect x="71.3881%" y="773" width="27.1955%" height="15" fill="rgb(249,221,25)"/><text x="71.6381%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (288 samples, 27.20%)</title><rect x="71.3881%" y="757" width="27.1955%" height="15" fill="rgb(215,208,19)"/><text x="71.6381%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (288 samples, 27.20%)</title><rect x="71.3881%" y="741" width="27.1955%" height="15" fill="rgb(236,175,2)"/><text x="71.6381%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (288 samples, 27.20%)</title><rect x="71.3881%" y="725" width="27.1955%" height="15" fill="rgb(241,52,2)"/><text x="71.6381%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (288 samples, 27.20%)</title><rect x="71.3881%" y="709" width="27.1955%" height="15" fill="rgb(248,140,14)"/><text x="71.6381%" y="719.50">core::ops::function::impls::&lt;impl core::ops:..</text></g><g><title>std::rt::lang_start::_{{closure}} (288 samples, 27.20%)</title><rect x="71.3881%" y="693" width="27.1955%" height="15" fill="rgb(253,22,42)"/><text x="71.6381%" y="703.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (288 samples, 27.20%)</title><rect x="71.3881%" y="677" width="27.1955%" height="15" fill="rgb(234,61,47)"/><text x="71.6381%" y="687.50">std::sys_common::backtrace::__rust_begin_sho..</text></g><g><title>lobsters::main (288 samples, 27.20%)</title><rect x="71.3881%" y="661" width="27.1955%" height="15" fill="rgb(208,226,15)"/><text x="71.6381%" y="671.50">lobsters::main</text></g><g><title>_start (289 samples, 27.29%)</title><rect x="71.3881%" y="821" width="27.2899%" height="15" fill="rgb(217,221,4)"/><text x="71.6381%" y="831.50">_start</text></g><g><title>entry_SYSCALL_64 (2 samples, 0.19%)</title><rect x="98.9613%" y="821" width="0.1889%" height="15" fill="rgb(212,174,34)"/><text x="99.2113%" y="831.50"></text></g><g><title>do_syscall_64 (2 samples, 0.19%)</title><rect x="98.9613%" y="805" width="0.1889%" height="15" fill="rgb(253,83,4)"/><text x="99.2113%" y="815.50"></text></g><g><title>lobsters (1,053 samples, 99.43%)</title><rect x="0.0000%" y="837" width="99.4334%" height="15" fill="rgb(250,195,49)"/><text x="0.2500%" y="847.50">lobsters</text></g><g><title>page_fault (2 samples, 0.19%)</title><rect x="99.2446%" y="821" width="0.1889%" height="15" fill="rgb(241,192,25)"/><text x="99.4946%" y="831.50"></text></g><g><title>all (1,059 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(208,124,10)"/><text x="0.2500%" y="863.50"></text></g><g><title>perf (6 samples, 0.57%)</title><rect x="99.4334%" y="837" width="0.5666%" height="15" fill="rgb(222,33,0)"/><text x="99.6834%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.57%)</title><rect x="99.4334%" y="821" width="0.5666%" height="15" fill="rgb(234,209,28)"/><text x="99.6834%" y="831.50"></text></g><g><title>do_syscall_64 (6 samples, 0.57%)</title><rect x="99.4334%" y="805" width="0.5666%" height="15" fill="rgb(224,11,23)"/><text x="99.6834%" y="815.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.57%)</title><rect x="99.4334%" y="789" width="0.5666%" height="15" fill="rgb(232,99,1)"/><text x="99.6834%" y="799.50"></text></g><g><title>do_execve (6 samples, 0.57%)</title><rect x="99.4334%" y="773" width="0.5666%" height="15" fill="rgb(237,95,45)"/><text x="99.6834%" y="783.50"></text></g><g><title>__do_execve_file (6 samples, 0.57%)</title><rect x="99.4334%" y="757" width="0.5666%" height="15" fill="rgb(208,109,11)"/><text x="99.6834%" y="767.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.57%)</title><rect x="99.4334%" y="741" width="0.5666%" height="15" fill="rgb(216,190,48)"/><text x="99.6834%" y="751.50"></text></g><g><title>load_elf_binary (6 samples, 0.57%)</title><rect x="99.4334%" y="725" width="0.5666%" height="15" fill="rgb(251,171,36)"/><text x="99.6834%" y="735.50"></text></g><g><title>setup_new_exec (6 samples, 0.57%)</title><rect x="99.4334%" y="709" width="0.5666%" height="15" fill="rgb(230,62,22)"/><text x="99.6834%" y="719.50"></text></g><g><title>perf_event_exec (6 samples, 0.57%)</title><rect x="99.4334%" y="693" width="0.5666%" height="15" fill="rgb(225,114,35)"/><text x="99.6834%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.47%)</title><rect x="99.5279%" y="677" width="0.4721%" height="15" fill="rgb(215,118,42)"/><text x="99.7779%" y="687.50"></text></g><g><title>native_write_msr (5 samples, 0.47%)</title><rect x="99.5279%" y="661" width="0.4721%" height="15" fill="rgb(243,119,21)"/><text x="99.7779%" y="671.50"></text></g></svg></svg>