<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="0.0000%" y="853" width="0.1585%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="0.1585%" y="853" width="0.1585%" height="15" fill="rgb(217,0,24)"/><text x="0.4085%" y="863.50"></text></g><g><title>[[heap]] (3 samples, 0.48%)</title><rect x="0.0000%" y="869" width="0.4754%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="879.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.16%)</title><rect x="0.3170%" y="853" width="0.1585%" height="15" fill="rgb(248,212,6)"/><text x="0.5670%" y="863.50"></text></g><g><title>_fini (1 samples, 0.16%)</title><rect x="0.3170%" y="837" width="0.1585%" height="15" fill="rgb(208,68,35)"/><text x="0.5670%" y="847.50"></text></g><g><title>page_fault (1 samples, 0.16%)</title><rect x="0.3170%" y="821" width="0.1585%" height="15" fill="rgb(232,128,0)"/><text x="0.5670%" y="831.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="0.3170%" y="805" width="0.1585%" height="15" fill="rgb(207,160,47)"/><text x="0.5670%" y="815.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="0.3170%" y="789" width="0.1585%" height="15" fill="rgb(228,23,34)"/><text x="0.5670%" y="799.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="0.3170%" y="773" width="0.1585%" height="15" fill="rgb(218,30,26)"/><text x="0.5670%" y="783.50"></text></g><g><title>filemap_map_pages (1 samples, 0.16%)</title><rect x="0.3170%" y="757" width="0.1585%" height="15" fill="rgb(220,122,19)"/><text x="0.5670%" y="767.50"></text></g><g><title>alloc_set_pte (1 samples, 0.16%)</title><rect x="0.3170%" y="741" width="0.1585%" height="15" fill="rgb(250,228,42)"/><text x="0.5670%" y="751.50"></text></g><g><title>page_add_file_rmap (1 samples, 0.16%)</title><rect x="0.3170%" y="725" width="0.1585%" height="15" fill="rgb(240,193,28)"/><text x="0.5670%" y="735.50"></text></g><g><title>lock_page_memcg (1 samples, 0.16%)</title><rect x="0.3170%" y="709" width="0.1585%" height="15" fill="rgb(216,20,37)"/><text x="0.5670%" y="719.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.16%)</title><rect x="0.3170%" y="693" width="0.1585%" height="15" fill="rgb(206,188,39)"/><text x="0.5670%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="0.4754%" y="853" width="0.1585%" height="15" fill="rgb(217,207,13)"/><text x="0.7254%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.16%)</title><rect x="0.4754%" y="837" width="0.1585%" height="15" fill="rgb(231,73,38)"/><text x="0.7254%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.16%)</title><rect x="0.4754%" y="821" width="0.1585%" height="15" fill="rgb(225,20,46)"/><text x="0.7254%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.16%)</title><rect x="0.4754%" y="805" width="0.1585%" height="15" fill="rgb(210,31,41)"/><text x="0.7254%" y="815.50"></text></g><g><title>__libc_recv (1 samples, 0.16%)</title><rect x="0.4754%" y="789" width="0.1585%" height="15" fill="rgb(221,200,47)"/><text x="0.7254%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="0.4754%" y="773" width="0.1585%" height="15" fill="rgb(226,26,5)"/><text x="0.7254%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="0.6339%" y="853" width="0.1585%" height="15" fill="rgb(249,33,26)"/><text x="0.8839%" y="863.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="0.7924%" y="853" width="0.1585%" height="15" fill="rgb(235,183,28)"/><text x="1.0424%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="0.7924%" y="837" width="0.1585%" height="15" fill="rgb(221,5,38)"/><text x="1.0424%" y="847.50"></text></g><g><title>__rdl_realloc (1 samples, 0.16%)</title><rect x="0.9509%" y="853" width="0.1585%" height="15" fill="rgb(247,18,42)"/><text x="1.2009%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="1.1094%" y="853" width="0.1585%" height="15" fill="rgb(241,131,45)"/><text x="1.3594%" y="863.50"></text></g><g><title>[anon] (6 samples, 0.95%)</title><rect x="0.4754%" y="869" width="0.9509%" height="15" fill="rgb(249,31,29)"/><text x="0.7254%" y="879.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.16%)</title><rect x="1.2678%" y="853" width="0.1585%" height="15" fill="rgb(225,111,53)"/><text x="1.5178%" y="863.50"></text></g><g><title>[lobsters] (1 samples, 0.16%)</title><rect x="1.4263%" y="869" width="0.1585%" height="15" fill="rgb(238,160,17)"/><text x="1.6763%" y="879.50"></text></g><g><title>__rdl_alloc (1 samples, 0.16%)</title><rect x="1.4263%" y="853" width="0.1585%" height="15" fill="rgb(214,148,48)"/><text x="1.6763%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="1.4263%" y="837" width="0.1585%" height="15" fill="rgb(232,36,49)"/><text x="1.6763%" y="847.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="1.5848%" y="853" width="0.1585%" height="15" fill="rgb(209,103,24)"/><text x="1.8348%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.16%)</title><rect x="1.5848%" y="837" width="0.1585%" height="15" fill="rgb(229,88,8)"/><text x="1.8348%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.16%)</title><rect x="1.5848%" y="821" width="0.1585%" height="15" fill="rgb(213,181,19)"/><text x="1.8348%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.16%)</title><rect x="1.5848%" y="805" width="0.1585%" height="15" fill="rgb(254,191,54)"/><text x="1.8348%" y="815.50"></text></g><g><title>__GI___sched_setaffinity_new (1 samples, 0.16%)</title><rect x="1.7433%" y="853" width="0.1585%" height="15" fill="rgb(241,83,37)"/><text x="1.9933%" y="863.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.16%)</title><rect x="1.9017%" y="693" width="0.1585%" height="15" fill="rgb(233,36,39)"/><text x="2.1517%" y="703.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.16%)</title><rect x="1.9017%" y="677" width="0.1585%" height="15" fill="rgb(226,3,54)"/><text x="2.1517%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="1.9017%" y="661" width="0.1585%" height="15" fill="rgb(245,192,40)"/><text x="2.1517%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="1.9017%" y="645" width="0.1585%" height="15" fill="rgb(238,167,29)"/><text x="2.1517%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="1.9017%" y="629" width="0.1585%" height="15" fill="rgb(232,182,51)"/><text x="2.1517%" y="639.50"></text></g><g><title>__GI___openat (1 samples, 0.16%)</title><rect x="1.9017%" y="613" width="0.1585%" height="15" fill="rgb(231,60,39)"/><text x="2.1517%" y="623.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="1.9017%" y="597" width="0.1585%" height="15" fill="rgb(208,69,12)"/><text x="2.1517%" y="607.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="2.0602%" y="677" width="0.1585%" height="15" fill="rgb(235,93,37)"/><text x="2.3102%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.16%)</title><rect x="2.2187%" y="645" width="0.1585%" height="15" fill="rgb(213,116,39)"/><text x="2.4687%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.16%)</title><rect x="2.2187%" y="629" width="0.1585%" height="15" fill="rgb(222,207,29)"/><text x="2.4687%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="2.2187%" y="613" width="0.1585%" height="15" fill="rgb(206,96,30)"/><text x="2.4687%" y="623.50"></text></g><g><title>import_single_range (1 samples, 0.16%)</title><rect x="2.8526%" y="517" width="0.1585%" height="15" fill="rgb(218,138,4)"/><text x="3.1026%" y="527.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.16%)</title><rect x="3.0111%" y="501" width="0.1585%" height="15" fill="rgb(250,191,14)"/><text x="3.2611%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="3.1696%" y="469" width="0.1585%" height="15" fill="rgb(239,60,40)"/><text x="3.4196%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="3.1696%" y="453" width="0.1585%" height="15" fill="rgb(206,27,48)"/><text x="3.4196%" y="463.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="3.1696%" y="437" width="0.1585%" height="15" fill="rgb(225,35,8)"/><text x="3.4196%" y="447.50"></text></g><g><title>release_sock (2 samples, 0.32%)</title><rect x="3.1696%" y="485" width="0.3170%" height="15" fill="rgb(250,213,24)"/><text x="3.4196%" y="495.50"></text></g><g><title>tcp_release_cb (1 samples, 0.16%)</title><rect x="3.3281%" y="469" width="0.1585%" height="15" fill="rgb(247,123,22)"/><text x="3.5781%" y="479.50"></text></g><g><title>__ip_local_out (1 samples, 0.16%)</title><rect x="3.9620%" y="405" width="0.1585%" height="15" fill="rgb(231,138,38)"/><text x="4.2120%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="4.1204%" y="405" width="0.1585%" height="15" fill="rgb(231,145,46)"/><text x="4.3704%" y="415.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="4.4374%" y="357" width="0.1585%" height="15" fill="rgb(251,118,11)"/><text x="4.6874%" y="367.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="4.4374%" y="341" width="0.1585%" height="15" fill="rgb(217,147,25)"/><text x="4.6874%" y="351.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.16%)</title><rect x="4.5959%" y="357" width="0.1585%" height="15" fill="rgb(247,81,37)"/><text x="4.8459%" y="367.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="4.7544%" y="357" width="0.1585%" height="15" fill="rgb(209,12,38)"/><text x="5.0044%" y="367.50"></text></g><g><title>netif_rx (2 samples, 0.32%)</title><rect x="5.2298%" y="325" width="0.3170%" height="15" fill="rgb(227,1,9)"/><text x="5.4798%" y="335.50"></text></g><g><title>netif_rx_internal (2 samples, 0.32%)</title><rect x="5.2298%" y="309" width="0.3170%" height="15" fill="rgb(248,47,43)"/><text x="5.4798%" y="319.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="5.3883%" y="293" width="0.1585%" height="15" fill="rgb(221,10,30)"/><text x="5.6383%" y="303.50"></text></g><g><title>__dev_queue_xmit (9 samples, 1.43%)</title><rect x="4.4374%" y="373" width="1.4263%" height="15" fill="rgb(210,229,1)"/><text x="4.6874%" y="383.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.95%)</title><rect x="4.9128%" y="357" width="0.9509%" height="15" fill="rgb(222,148,37)"/><text x="5.1628%" y="367.50"></text></g><g><title>loopback_xmit (4 samples, 0.63%)</title><rect x="5.2298%" y="341" width="0.6339%" height="15" fill="rgb(234,67,33)"/><text x="5.4798%" y="351.50"></text></g><g><title>tcp_wfree (2 samples, 0.32%)</title><rect x="5.5468%" y="325" width="0.3170%" height="15" fill="rgb(247,98,35)"/><text x="5.7968%" y="335.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.16%)</title><rect x="6.3391%" y="309" width="0.1585%" height="15" fill="rgb(247,138,52)"/><text x="6.5891%" y="319.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="6.3391%" y="293" width="0.1585%" height="15" fill="rgb(213,79,30)"/><text x="6.5891%" y="303.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.16%)</title><rect x="6.6561%" y="293" width="0.1585%" height="15" fill="rgb(246,177,23)"/><text x="6.9061%" y="303.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.16%)</title><rect x="6.9731%" y="261" width="0.1585%" height="15" fill="rgb(230,62,27)"/><text x="7.2231%" y="271.50"></text></g><g><title>raw_local_deliver (1 samples, 0.16%)</title><rect x="7.1315%" y="197" width="0.1585%" height="15" fill="rgb(216,154,8)"/><text x="7.3815%" y="207.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.32%)</title><rect x="7.4485%" y="181" width="0.3170%" height="15" fill="rgb(244,35,45)"/><text x="7.6985%" y="191.50"></text></g><g><title>inet_ehashfn (1 samples, 0.16%)</title><rect x="7.6070%" y="165" width="0.1585%" height="15" fill="rgb(251,115,12)"/><text x="7.8570%" y="175.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.16%)</title><rect x="7.7655%" y="181" width="0.1585%" height="15" fill="rgb(240,54,50)"/><text x="8.0155%" y="191.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="7.7655%" y="165" width="0.1585%" height="15" fill="rgb(233,84,52)"/><text x="8.0155%" y="175.50"></text></g><g><title>sk_reset_timer (1 samples, 0.16%)</title><rect x="7.9239%" y="149" width="0.1585%" height="15" fill="rgb(207,117,47)"/><text x="8.1739%" y="159.50"></text></g><g><title>__mod_timer (1 samples, 0.16%)</title><rect x="7.9239%" y="133" width="0.1585%" height="15" fill="rgb(249,43,39)"/><text x="8.1739%" y="143.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.16%)</title><rect x="8.3994%" y="133" width="0.1585%" height="15" fill="rgb(209,38,44)"/><text x="8.6494%" y="143.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="8.7163%" y="85" width="0.1585%" height="15" fill="rgb(236,212,23)"/><text x="8.9663%" y="95.50"></text></g><g><title>enqueue_task (2 samples, 0.32%)</title><rect x="8.8748%" y="85" width="0.3170%" height="15" fill="rgb(242,79,21)"/><text x="9.1248%" y="95.50"></text></g><g><title>psi_task_change (2 samples, 0.32%)</title><rect x="8.8748%" y="69" width="0.3170%" height="15" fill="rgb(211,96,35)"/><text x="9.1248%" y="79.50"></text></g><g><title>psi_group_change (2 samples, 0.32%)</title><rect x="8.8748%" y="53" width="0.3170%" height="15" fill="rgb(253,215,40)"/><text x="9.1248%" y="63.50"></text></g><g><title>record_times (1 samples, 0.16%)</title><rect x="9.0333%" y="37" width="0.1585%" height="15" fill="rgb(211,81,21)"/><text x="9.2833%" y="47.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.95%)</title><rect x="9.1918%" y="85" width="0.9509%" height="15" fill="rgb(208,190,38)"/><text x="9.4418%" y="95.50"></text></g><g><title>enqueue_entity (5 samples, 0.79%)</title><rect x="9.3502%" y="69" width="0.7924%" height="15" fill="rgb(235,213,38)"/><text x="9.6002%" y="79.50"></text></g><g><title>update_cfs_group (1 samples, 0.16%)</title><rect x="9.9842%" y="53" width="0.1585%" height="15" fill="rgb(237,122,38)"/><text x="10.2342%" y="63.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.32%)</title><rect x="10.1426%" y="85" width="0.3170%" height="15" fill="rgb(244,218,35)"/><text x="10.3926%" y="95.50"></text></g><g><title>check_preempt_curr (2 samples, 0.32%)</title><rect x="10.1426%" y="69" width="0.3170%" height="15" fill="rgb(240,68,47)"/><text x="10.3926%" y="79.50"></text></g><g><title>resched_curr (2 samples, 0.32%)</title><rect x="10.1426%" y="53" width="0.3170%" height="15" fill="rgb(210,16,53)"/><text x="10.3926%" y="63.50"></text></g><g><title>sock_def_readable (18 samples, 2.85%)</title><rect x="8.0824%" y="149" width="2.8526%" height="15" fill="rgb(235,124,12)"/><text x="8.3324%" y="159.50">so..</text></g><g><title>__wake_up_common_lock (15 samples, 2.38%)</title><rect x="8.5578%" y="133" width="2.3772%" height="15" fill="rgb(224,169,11)"/><text x="8.8078%" y="143.50">__..</text></g><g><title>__wake_up_common (15 samples, 2.38%)</title><rect x="8.5578%" y="117" width="2.3772%" height="15" fill="rgb(250,166,2)"/><text x="8.8078%" y="127.50">__..</text></g><g><title>try_to_wake_up (15 samples, 2.38%)</title><rect x="8.5578%" y="101" width="2.3772%" height="15" fill="rgb(242,216,29)"/><text x="8.8078%" y="111.50">tr..</text></g><g><title>update_rq_clock (3 samples, 0.48%)</title><rect x="10.4596%" y="85" width="0.4754%" height="15" fill="rgb(230,116,27)"/><text x="10.7096%" y="95.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.16%)</title><rect x="10.7765%" y="69" width="0.1585%" height="15" fill="rgb(228,99,48)"/><text x="11.0265%" y="79.50"></text></g><g><title>kfree (3 samples, 0.48%)</title><rect x="11.2520%" y="117" width="0.4754%" height="15" fill="rgb(253,11,6)"/><text x="11.5020%" y="127.50"></text></g><g><title>__slab_free (1 samples, 0.16%)</title><rect x="11.5689%" y="101" width="0.1585%" height="15" fill="rgb(247,143,39)"/><text x="11.8189%" y="111.50"></text></g><g><title>__kfree_skb (5 samples, 0.79%)</title><rect x="11.2520%" y="133" width="0.7924%" height="15" fill="rgb(236,97,10)"/><text x="11.5020%" y="143.50"></text></g><g><title>skb_release_data (2 samples, 0.32%)</title><rect x="11.7274%" y="117" width="0.3170%" height="15" fill="rgb(233,208,19)"/><text x="11.9774%" y="127.50"></text></g><g><title>kmem_cache_free (1 samples, 0.16%)</title><rect x="12.0444%" y="133" width="0.1585%" height="15" fill="rgb(216,164,2)"/><text x="12.2944%" y="143.50"></text></g><g><title>__slab_free (1 samples, 0.16%)</title><rect x="12.0444%" y="117" width="0.1585%" height="15" fill="rgb(220,129,5)"/><text x="12.2944%" y="127.50"></text></g><g><title>ip_local_deliver (33 samples, 5.23%)</title><rect x="7.1315%" y="245" width="5.2298%" height="15" fill="rgb(242,17,10)"/><text x="7.3815%" y="255.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (33 samples, 5.23%)</title><rect x="7.1315%" y="229" width="5.2298%" height="15" fill="rgb(242,107,0)"/><text x="7.3815%" y="239.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (33 samples, 5.23%)</title><rect x="7.1315%" y="213" width="5.2298%" height="15" fill="rgb(251,28,31)"/><text x="7.3815%" y="223.50">ip_pro..</text></g><g><title>tcp_v4_rcv (32 samples, 5.07%)</title><rect x="7.2900%" y="197" width="5.0713%" height="15" fill="rgb(233,223,10)"/><text x="7.5400%" y="207.50">tcp_v4..</text></g><g><title>tcp_v4_do_rcv (28 samples, 4.44%)</title><rect x="7.9239%" y="181" width="4.4374%" height="15" fill="rgb(215,21,27)"/><text x="8.1739%" y="191.50">tcp_v..</text></g><g><title>tcp_rcv_established (28 samples, 4.44%)</title><rect x="7.9239%" y="165" width="4.4374%" height="15" fill="rgb(232,23,21)"/><text x="8.1739%" y="175.50">tcp_r..</text></g><g><title>tcp_ack (9 samples, 1.43%)</title><rect x="10.9350%" y="149" width="1.4263%" height="15" fill="rgb(244,5,23)"/><text x="11.1850%" y="159.50"></text></g><g><title>tcp_rack_advance (1 samples, 0.16%)</title><rect x="12.2029%" y="133" width="0.1585%" height="15" fill="rgb(226,81,46)"/><text x="12.4529%" y="143.50"></text></g><g><title>ip_rcv_core (2 samples, 0.32%)</title><rect x="12.3613%" y="245" width="0.3170%" height="15" fill="rgb(247,70,30)"/><text x="12.6113%" y="255.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.16%)</title><rect x="12.5198%" y="229" width="0.1585%" height="15" fill="rgb(212,68,19)"/><text x="12.7698%" y="239.50"></text></g><g><title>do_softirq (45 samples, 7.13%)</title><rect x="5.8637%" y="357" width="7.1315%" height="15" fill="rgb(240,187,13)"/><text x="6.1137%" y="367.50">do_softirq</text></g><g><title>do_softirq_own_stack (43 samples, 6.81%)</title><rect x="6.1807%" y="341" width="6.8146%" height="15" fill="rgb(223,113,26)"/><text x="6.4307%" y="351.50">do_softir..</text></g><g><title>__do_softirq (43 samples, 6.81%)</title><rect x="6.1807%" y="325" width="6.8146%" height="15" fill="rgb(206,192,2)"/><text x="6.4307%" y="335.50">__do_soft..</text></g><g><title>net_rx_action (41 samples, 6.50%)</title><rect x="6.4976%" y="309" width="6.4976%" height="15" fill="rgb(241,108,4)"/><text x="6.7476%" y="319.50">net_rx_ac..</text></g><g><title>process_backlog (39 samples, 6.18%)</title><rect x="6.8146%" y="293" width="6.1807%" height="15" fill="rgb(247,173,49)"/><text x="7.0646%" y="303.50">process_..</text></g><g><title>__netif_receive_skb_one_core (38 samples, 6.02%)</title><rect x="6.9731%" y="277" width="6.0222%" height="15" fill="rgb(224,114,35)"/><text x="7.2231%" y="287.50">__netif_..</text></g><g><title>ip_rcv (37 samples, 5.86%)</title><rect x="7.1315%" y="261" width="5.8637%" height="15" fill="rgb(245,159,27)"/><text x="7.3815%" y="271.50">ip_rcv</text></g><g><title>ip_rcv_finish (2 samples, 0.32%)</title><rect x="12.6783%" y="245" width="0.3170%" height="15" fill="rgb(245,172,44)"/><text x="12.9283%" y="255.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.16%)</title><rect x="12.8368%" y="229" width="0.1585%" height="15" fill="rgb(236,23,11)"/><text x="13.0868%" y="239.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="12.9952%" y="357" width="0.1585%" height="15" fill="rgb(205,117,38)"/><text x="13.2452%" y="367.50"></text></g><g><title>ip_finish_output2 (57 samples, 9.03%)</title><rect x="4.2789%" y="389" width="9.0333%" height="15" fill="rgb(237,72,25)"/><text x="4.5289%" y="399.50">ip_finish_out..</text></g><g><title>__local_bh_enable_ip (47 samples, 7.45%)</title><rect x="5.8637%" y="373" width="7.4485%" height="15" fill="rgb(244,70,9)"/><text x="6.1137%" y="383.50">__local_bh..</text></g><g><title>preempt_schedule_thunk (1 samples, 0.16%)</title><rect x="13.1537%" y="357" width="0.1585%" height="15" fill="rgb(217,125,39)"/><text x="13.4037%" y="367.50"></text></g><g><title>preempt_schedule_common (1 samples, 0.16%)</title><rect x="13.1537%" y="341" width="0.1585%" height="15" fill="rgb(235,36,10)"/><text x="13.4037%" y="351.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="13.1537%" y="325" width="0.1585%" height="15" fill="rgb(251,123,47)"/><text x="13.4037%" y="335.50"></text></g><g><title>__ip_queue_xmit (61 samples, 9.67%)</title><rect x="3.8035%" y="421" width="9.6672%" height="15" fill="rgb(221,13,13)"/><text x="4.0535%" y="431.50">__ip_queue_xmit</text></g><g><title>ip_output (58 samples, 9.19%)</title><rect x="4.2789%" y="405" width="9.1918%" height="15" fill="rgb(238,131,9)"/><text x="4.5289%" y="415.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.16%)</title><rect x="13.3122%" y="389" width="0.1585%" height="15" fill="rgb(211,50,8)"/><text x="13.5622%" y="399.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="13.3122%" y="373" width="0.1585%" height="15" fill="rgb(245,182,24)"/><text x="13.5622%" y="383.50"></text></g><g><title>__tcp_transmit_skb (62 samples, 9.83%)</title><rect x="3.8035%" y="437" width="9.8257%" height="15" fill="rgb(242,14,37)"/><text x="4.0535%" y="447.50">__tcp_transmit..</text></g><g><title>tcp_options_write (1 samples, 0.16%)</title><rect x="13.4707%" y="421" width="0.1585%" height="15" fill="rgb(246,228,12)"/><text x="13.7207%" y="431.50"></text></g><g><title>sk_reset_timer (1 samples, 0.16%)</title><rect x="13.6292%" y="421" width="0.1585%" height="15" fill="rgb(213,55,15)"/><text x="13.8792%" y="431.50"></text></g><g><title>__mod_timer (1 samples, 0.16%)</title><rect x="13.6292%" y="405" width="0.1585%" height="15" fill="rgb(209,9,3)"/><text x="13.8792%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (64 samples, 10.14%)</title><rect x="3.8035%" y="469" width="10.1426%" height="15" fill="rgb(230,59,30)"/><text x="4.0535%" y="479.50">__tcp_push_pend..</text></g><g><title>tcp_write_xmit (64 samples, 10.14%)</title><rect x="3.8035%" y="453" width="10.1426%" height="15" fill="rgb(209,121,21)"/><text x="4.0535%" y="463.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.32%)</title><rect x="13.6292%" y="437" width="0.3170%" height="15" fill="rgb(220,109,13)"/><text x="13.8792%" y="447.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.16%)</title><rect x="13.7876%" y="421" width="0.1585%" height="15" fill="rgb(232,18,1)"/><text x="14.0376%" y="431.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.48%)</title><rect x="13.9461%" y="469" width="0.4754%" height="15" fill="rgb(215,41,42)"/><text x="14.1961%" y="479.50"></text></g><g><title>__alloc_skb (3 samples, 0.48%)</title><rect x="13.9461%" y="453" width="0.4754%" height="15" fill="rgb(224,123,36)"/><text x="14.1961%" y="463.50"></text></g><g><title>__ksize (2 samples, 0.32%)</title><rect x="14.1046%" y="437" width="0.3170%" height="15" fill="rgb(240,125,3)"/><text x="14.3546%" y="447.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.32%)</title><rect x="14.4216%" y="469" width="0.3170%" height="15" fill="rgb(205,98,50)"/><text x="14.6716%" y="479.50"></text></g><g><title>tcp_push (2 samples, 0.32%)</title><rect x="14.7385%" y="469" width="0.3170%" height="15" fill="rgb(205,185,37)"/><text x="14.9885%" y="479.50"></text></g><g><title>do_syscall_64 (81 samples, 12.84%)</title><rect x="2.5357%" y="565" width="12.8368%" height="15" fill="rgb(238,207,15)"/><text x="2.7857%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (80 samples, 12.68%)</title><rect x="2.6941%" y="549" width="12.6783%" height="15" fill="rgb(213,199,42)"/><text x="2.9441%" y="559.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (80 samples, 12.68%)</title><rect x="2.6941%" y="533" width="12.6783%" height="15" fill="rgb(235,201,11)"/><text x="2.9441%" y="543.50">__sys_sendto</text></g><g><title>sock_sendmsg (78 samples, 12.36%)</title><rect x="3.0111%" y="517" width="12.3613%" height="15" fill="rgb(207,46,11)"/><text x="3.2611%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (77 samples, 12.20%)</title><rect x="3.1696%" y="501" width="12.2029%" height="15" fill="rgb(241,35,35)"/><text x="3.4196%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (75 samples, 11.89%)</title><rect x="3.4865%" y="485" width="11.8859%" height="15" fill="rgb(243,32,47)"/><text x="3.7365%" y="495.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (2 samples, 0.32%)</title><rect x="15.0555%" y="469" width="0.3170%" height="15" fill="rgb(247,202,23)"/><text x="15.3055%" y="479.50"></text></g><g><title>tcp_current_mss (2 samples, 0.32%)</title><rect x="15.0555%" y="453" width="0.3170%" height="15" fill="rgb(219,102,11)"/><text x="15.3055%" y="463.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (85 samples, 13.47%)</title><rect x="2.5357%" y="629" width="13.4707%" height="15" fill="rgb(243,110,44)"/><text x="2.7857%" y="639.50">&lt;std::net::tcp::TcpS..</text></g><g><title>std::sys_common::net::TcpStream::write (85 samples, 13.47%)</title><rect x="2.5357%" y="613" width="13.4707%" height="15" fill="rgb(222,74,54)"/><text x="2.7857%" y="623.50">std::sys_common::net..</text></g><g><title>__libc_send (85 samples, 13.47%)</title><rect x="2.5357%" y="597" width="13.4707%" height="15" fill="rgb(216,99,12)"/><text x="2.7857%" y="607.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (85 samples, 13.47%)</title><rect x="2.5357%" y="581" width="13.4707%" height="15" fill="rgb(226,22,26)"/><text x="2.7857%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.63%)</title><rect x="15.3724%" y="565" width="0.6339%" height="15" fill="rgb(217,163,10)"/><text x="15.6224%" y="575.50"></text></g><g><title>__libc_start_main (90 samples, 14.26%)</title><rect x="1.9017%" y="853" width="14.2631%" height="15" fill="rgb(213,25,53)"/><text x="2.1517%" y="863.50">__libc_start_main</text></g><g><title>main (90 samples, 14.26%)</title><rect x="1.9017%" y="837" width="14.2631%" height="15" fill="rgb(252,105,26)"/><text x="2.1517%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (90 samples, 14.26%)</title><rect x="1.9017%" y="821" width="14.2631%" height="15" fill="rgb(220,39,43)"/><text x="2.1517%" y="831.50">std::rt::lang_start_in..</text></g><g><title>std::panic::catch_unwind (90 samples, 14.26%)</title><rect x="1.9017%" y="805" width="14.2631%" height="15" fill="rgb(229,68,48)"/><text x="2.1517%" y="815.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (90 samples, 14.26%)</title><rect x="1.9017%" y="789" width="14.2631%" height="15" fill="rgb(252,8,32)"/><text x="2.1517%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (90 samples, 14.26%)</title><rect x="1.9017%" y="773" width="14.2631%" height="15" fill="rgb(223,20,43)"/><text x="2.1517%" y="783.50">std::panicking::try::d..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (90 samples, 14.26%)</title><rect x="1.9017%" y="757" width="14.2631%" height="15" fill="rgb(229,81,49)"/><text x="2.1517%" y="767.50">core::ops::function::i..</text></g><g><title>std::rt::lang_start::_{{closure}} (90 samples, 14.26%)</title><rect x="1.9017%" y="741" width="14.2631%" height="15" fill="rgb(236,28,36)"/><text x="2.1517%" y="751.50">std::rt::lang_start::_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (90 samples, 14.26%)</title><rect x="1.9017%" y="725" width="14.2631%" height="15" fill="rgb(249,185,26)"/><text x="2.1517%" y="735.50">std::sys_common::backt..</text></g><g><title>lobsters::main (90 samples, 14.26%)</title><rect x="1.9017%" y="709" width="14.2631%" height="15" fill="rgb(249,174,33)"/><text x="2.1517%" y="719.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (89 samples, 14.10%)</title><rect x="2.0602%" y="693" width="14.1046%" height="15" fill="rgb(233,201,37)"/><text x="2.3102%" y="703.50">mysql::conn::queryabl..</text></g><g><title>mysql::conn::Conn::_query (88 samples, 13.95%)</title><rect x="2.2187%" y="677" width="13.9461%" height="15" fill="rgb(221,78,26)"/><text x="2.4687%" y="687.50">mysql::conn::Conn::_q..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (88 samples, 13.95%)</title><rect x="2.2187%" y="661" width="13.9461%" height="15" fill="rgb(250,127,30)"/><text x="2.4687%" y="671.50">mysql_common::proto::..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (87 samples, 13.79%)</title><rect x="2.3772%" y="645" width="13.7876%" height="15" fill="rgb(230,49,44)"/><text x="2.6272%" y="655.50">std::io::buffered::Bu..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (1 samples, 0.16%)</title><rect x="16.0063%" y="629" width="0.1585%" height="15" fill="rgb(229,67,23)"/><text x="16.2563%" y="639.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.16%)</title><rect x="16.1648%" y="853" width="0.1585%" height="15" fill="rgb(249,83,47)"/><text x="16.4148%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="16.1648%" y="837" width="0.1585%" height="15" fill="rgb(215,43,3)"/><text x="16.4148%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="16.1648%" y="821" width="0.1585%" height="15" fill="rgb(238,154,13)"/><text x="16.4148%" y="831.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="16.1648%" y="805" width="0.1585%" height="15" fill="rgb(219,56,2)"/><text x="16.4148%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.16%)</title><rect x="16.1648%" y="789" width="0.1585%" height="15" fill="rgb(233,0,4)"/><text x="16.4148%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="16.1648%" y="773" width="0.1585%" height="15" fill="rgb(235,30,7)"/><text x="16.4148%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="16.1648%" y="757" width="0.1585%" height="15" fill="rgb(250,79,13)"/><text x="16.4148%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.16%)</title><rect x="16.1648%" y="741" width="0.1585%" height="15" fill="rgb(211,146,34)"/><text x="16.4148%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="16.1648%" y="725" width="0.1585%" height="15" fill="rgb(228,22,38)"/><text x="16.4148%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="16.1648%" y="709" width="0.1585%" height="15" fill="rgb(235,168,5)"/><text x="16.4148%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="16.1648%" y="693" width="0.1585%" height="15" fill="rgb(221,155,16)"/><text x="16.4148%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.16%)</title><rect x="16.1648%" y="677" width="0.1585%" height="15" fill="rgb(215,215,53)"/><text x="16.4148%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.16%)</title><rect x="16.1648%" y="661" width="0.1585%" height="15" fill="rgb(223,4,10)"/><text x="16.4148%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.16%)</title><rect x="16.1648%" y="645" width="0.1585%" height="15" fill="rgb(234,103,6)"/><text x="16.4148%" y="655.50"></text></g><g><title>__libc_recv (1 samples, 0.16%)</title><rect x="16.1648%" y="629" width="0.1585%" height="15" fill="rgb(227,97,0)"/><text x="16.4148%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="16.1648%" y="613" width="0.1585%" height="15" fill="rgb(234,150,53)"/><text x="16.4148%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="16.1648%" y="597" width="0.1585%" height="15" fill="rgb(228,201,54)"/><text x="16.4148%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.16%)</title><rect x="16.1648%" y="581" width="0.1585%" height="15" fill="rgb(222,22,37)"/><text x="16.4148%" y="591.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.16%)</title><rect x="16.1648%" y="565" width="0.1585%" height="15" fill="rgb(237,53,32)"/><text x="16.4148%" y="575.50"></text></g><g><title>inet_recvmsg (1 samples, 0.16%)</title><rect x="16.1648%" y="549" width="0.1585%" height="15" fill="rgb(233,25,53)"/><text x="16.4148%" y="559.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.16%)</title><rect x="16.1648%" y="533" width="0.1585%" height="15" fill="rgb(210,40,34)"/><text x="16.4148%" y="543.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="16.1648%" y="517" width="0.1585%" height="15" fill="rgb(241,220,44)"/><text x="16.4148%" y="527.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="16.1648%" y="501" width="0.1585%" height="15" fill="rgb(235,28,35)"/><text x="16.4148%" y="511.50"></text></g><g><title>dst_release (1 samples, 0.16%)</title><rect x="16.1648%" y="485" width="0.1585%" height="15" fill="rgb(210,56,17)"/><text x="16.4148%" y="495.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.16%)</title><rect x="16.3233%" y="853" width="0.1585%" height="15" fill="rgb(224,130,29)"/><text x="16.5733%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.16%)</title><rect x="16.3233%" y="837" width="0.1585%" height="15" fill="rgb(235,212,8)"/><text x="16.5733%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.16%)</title><rect x="16.3233%" y="821" width="0.1585%" height="15" fill="rgb(223,33,50)"/><text x="16.5733%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="16.3233%" y="805" width="0.1585%" height="15" fill="rgb(219,149,13)"/><text x="16.5733%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="16.3233%" y="789" width="0.1585%" height="15" fill="rgb(250,156,29)"/><text x="16.5733%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.16%)</title><rect x="16.3233%" y="773" width="0.1585%" height="15" fill="rgb(216,193,19)"/><text x="16.5733%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="16.3233%" y="757" width="0.1585%" height="15" fill="rgb(216,135,14)"/><text x="16.5733%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.16%)</title><rect x="16.3233%" y="741" width="0.1585%" height="15" fill="rgb(241,47,5)"/><text x="16.5733%" y="751.50"></text></g><g><title>__libc_send (1 samples, 0.16%)</title><rect x="16.3233%" y="725" width="0.1585%" height="15" fill="rgb(233,42,35)"/><text x="16.5733%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="16.3233%" y="709" width="0.1585%" height="15" fill="rgb(231,13,6)"/><text x="16.5733%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="16.3233%" y="693" width="0.1585%" height="15" fill="rgb(207,181,40)"/><text x="16.5733%" y="703.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.16%)</title><rect x="16.3233%" y="677" width="0.1585%" height="15" fill="rgb(254,173,49)"/><text x="16.5733%" y="687.50"></text></g><g><title>__sys_sendto (1 samples, 0.16%)</title><rect x="16.3233%" y="661" width="0.1585%" height="15" fill="rgb(221,1,38)"/><text x="16.5733%" y="671.50"></text></g><g><title>sock_sendmsg (1 samples, 0.16%)</title><rect x="16.3233%" y="645" width="0.1585%" height="15" fill="rgb(206,124,46)"/><text x="16.5733%" y="655.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.16%)</title><rect x="16.3233%" y="629" width="0.1585%" height="15" fill="rgb(249,21,11)"/><text x="16.5733%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.16%)</title><rect x="16.3233%" y="613" width="0.1585%" height="15" fill="rgb(222,201,40)"/><text x="16.5733%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.16%)</title><rect x="16.3233%" y="597" width="0.1585%" height="15" fill="rgb(235,61,29)"/><text x="16.5733%" y="607.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.16%)</title><rect x="16.3233%" y="581" width="0.1585%" height="15" fill="rgb(219,207,3)"/><text x="16.5733%" y="591.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.16%)</title><rect x="16.3233%" y="565" width="0.1585%" height="15" fill="rgb(222,56,46)"/><text x="16.5733%" y="575.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.16%)</title><rect x="16.3233%" y="549" width="0.1585%" height="15" fill="rgb(239,76,54)"/><text x="16.5733%" y="559.50"></text></g><g><title>ip_output (1 samples, 0.16%)</title><rect x="16.3233%" y="533" width="0.1585%" height="15" fill="rgb(231,124,27)"/><text x="16.5733%" y="543.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.16%)</title><rect x="16.3233%" y="517" width="0.1585%" height="15" fill="rgb(249,195,6)"/><text x="16.5733%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="16.3233%" y="501" width="0.1585%" height="15" fill="rgb(237,174,47)"/><text x="16.5733%" y="511.50"></text></g><g><title>do_softirq (1 samples, 0.16%)</title><rect x="16.3233%" y="485" width="0.1585%" height="15" fill="rgb(206,201,31)"/><text x="16.5733%" y="495.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.16%)</title><rect x="16.3233%" y="469" width="0.1585%" height="15" fill="rgb(231,57,52)"/><text x="16.5733%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.16%)</title><rect x="16.3233%" y="453" width="0.1585%" height="15" fill="rgb(248,177,22)"/><text x="16.5733%" y="463.50"></text></g><g><title>net_rx_action (1 samples, 0.16%)</title><rect x="16.3233%" y="437" width="0.1585%" height="15" fill="rgb(215,211,37)"/><text x="16.5733%" y="447.50"></text></g><g><title>process_backlog (1 samples, 0.16%)</title><rect x="16.3233%" y="421" width="0.1585%" height="15" fill="rgb(241,128,51)"/><text x="16.5733%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.16%)</title><rect x="16.3233%" y="405" width="0.1585%" height="15" fill="rgb(227,165,31)"/><text x="16.5733%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.16%)</title><rect x="16.3233%" y="389" width="0.1585%" height="15" fill="rgb(228,167,24)"/><text x="16.5733%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.16%)</title><rect x="16.3233%" y="373" width="0.1585%" height="15" fill="rgb(228,143,12)"/><text x="16.5733%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.16%)</title><rect x="16.3233%" y="357" width="0.1585%" height="15" fill="rgb(249,149,8)"/><text x="16.5733%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.16%)</title><rect x="16.3233%" y="341" width="0.1585%" height="15" fill="rgb(243,35,44)"/><text x="16.5733%" y="351.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.16%)</title><rect x="16.3233%" y="325" width="0.1585%" height="15" fill="rgb(246,89,9)"/><text x="16.5733%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.16%)</title><rect x="16.3233%" y="309" width="0.1585%" height="15" fill="rgb(233,213,13)"/><text x="16.5733%" y="319.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.16%)</title><rect x="16.3233%" y="293" width="0.1585%" height="15" fill="rgb(233,141,41)"/><text x="16.5733%" y="303.50"></text></g><g><title>sock_def_readable (1 samples, 0.16%)</title><rect x="16.3233%" y="277" width="0.1585%" height="15" fill="rgb(239,167,4)"/><text x="16.5733%" y="287.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.16%)</title><rect x="16.3233%" y="261" width="0.1585%" height="15" fill="rgb(209,217,16)"/><text x="16.5733%" y="271.50"></text></g><g><title>__wake_up_common (1 samples, 0.16%)</title><rect x="16.3233%" y="245" width="0.1585%" height="15" fill="rgb(219,88,35)"/><text x="16.5733%" y="255.50"></text></g><g><title>pollwake (1 samples, 0.16%)</title><rect x="16.3233%" y="229" width="0.1585%" height="15" fill="rgb(220,193,23)"/><text x="16.5733%" y="239.50"></text></g><g><title>try_to_wake_up (1 samples, 0.16%)</title><rect x="16.3233%" y="213" width="0.1585%" height="15" fill="rgb(230,90,52)"/><text x="16.5733%" y="223.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.16%)</title><rect x="16.3233%" y="197" width="0.1585%" height="15" fill="rgb(252,106,19)"/><text x="16.5733%" y="207.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.16%)</title><rect x="16.4818%" y="837" width="0.1585%" height="15" fill="rgb(206,74,20)"/><text x="16.7318%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="16.4818%" y="821" width="0.1585%" height="15" fill="rgb(230,138,44)"/><text x="16.7318%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="16.4818%" y="805" width="0.1585%" height="15" fill="rgb(235,182,43)"/><text x="16.7318%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="16.4818%" y="789" width="0.1585%" height="15" fill="rgb(242,16,51)"/><text x="16.7318%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.16%)</title><rect x="16.4818%" y="773" width="0.1585%" height="15" fill="rgb(248,9,4)"/><text x="16.7318%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.16%)</title><rect x="16.4818%" y="757" width="0.1585%" height="15" fill="rgb(210,31,22)"/><text x="16.7318%" y="767.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.16%)</title><rect x="16.4818%" y="741" width="0.1585%" height="15" fill="rgb(239,54,39)"/><text x="16.7318%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.16%)</title><rect x="16.4818%" y="725" width="0.1585%" height="15" fill="rgb(230,99,41)"/><text x="16.7318%" y="735.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.16%)</title><rect x="16.4818%" y="709" width="0.1585%" height="15" fill="rgb(253,106,12)"/><text x="16.7318%" y="719.50"></text></g><g><title>_dl_open (1 samples, 0.16%)</title><rect x="16.4818%" y="693" width="0.1585%" height="15" fill="rgb(213,46,41)"/><text x="16.7318%" y="703.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.16%)</title><rect x="16.4818%" y="677" width="0.1585%" height="15" fill="rgb(215,133,35)"/><text x="16.7318%" y="687.50"></text></g><g><title>dl_open_worker (1 samples, 0.16%)</title><rect x="16.4818%" y="661" width="0.1585%" height="15" fill="rgb(213,28,5)"/><text x="16.7318%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.16%)</title><rect x="16.4818%" y="645" width="0.1585%" height="15" fill="rgb(215,77,49)"/><text x="16.7318%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.16%)</title><rect x="16.4818%" y="629" width="0.1585%" height="15" fill="rgb(248,100,22)"/><text x="16.7318%" y="639.50"></text></g><g><title>page_fault (1 samples, 0.16%)</title><rect x="16.4818%" y="613" width="0.1585%" height="15" fill="rgb(208,67,9)"/><text x="16.7318%" y="623.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="16.4818%" y="597" width="0.1585%" height="15" fill="rgb(219,133,21)"/><text x="16.7318%" y="607.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="16.4818%" y="581" width="0.1585%" height="15" fill="rgb(246,46,29)"/><text x="16.7318%" y="591.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="16.4818%" y="565" width="0.1585%" height="15" fill="rgb(246,185,52)"/><text x="16.7318%" y="575.50"></text></g><g><title>filemap_map_pages (1 samples, 0.16%)</title><rect x="16.4818%" y="549" width="0.1585%" height="15" fill="rgb(252,136,11)"/><text x="16.7318%" y="559.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="18.2250%" y="565" width="0.1585%" height="15" fill="rgb(219,138,53)"/><text x="18.4750%" y="575.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="18.2250%" y="549" width="0.1585%" height="15" fill="rgb(211,51,23)"/><text x="18.4750%" y="559.50"></text></g><g><title>dst_release (1 samples, 0.16%)</title><rect x="18.2250%" y="533" width="0.1585%" height="15" fill="rgb(247,221,28)"/><text x="18.4750%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="18.3835%" y="565" width="0.1585%" height="15" fill="rgb(251,222,45)"/><text x="18.6335%" y="575.50"></text></g><g><title>lock_sock_nested (1 samples, 0.16%)</title><rect x="18.5420%" y="565" width="0.1585%" height="15" fill="rgb(217,162,53)"/><text x="18.7920%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="18.5420%" y="549" width="0.1585%" height="15" fill="rgb(229,93,14)"/><text x="18.7920%" y="559.50"></text></g><g><title>release_sock (1 samples, 0.16%)</title><rect x="18.7005%" y="565" width="0.1585%" height="15" fill="rgb(209,67,49)"/><text x="18.9505%" y="575.50"></text></g><g><title>tcp_release_cb (1 samples, 0.16%)</title><rect x="18.7005%" y="549" width="0.1585%" height="15" fill="rgb(213,87,29)"/><text x="18.9505%" y="559.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.32%)</title><rect x="19.0174%" y="549" width="0.3170%" height="15" fill="rgb(205,151,52)"/><text x="19.2674%" y="559.50"></text></g><g><title>preempt_count_sub (2 samples, 0.32%)</title><rect x="19.0174%" y="533" width="0.3170%" height="15" fill="rgb(253,215,39)"/><text x="19.2674%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="19.3344%" y="549" width="0.1585%" height="15" fill="rgb(221,220,41)"/><text x="19.5844%" y="559.50"></text></g><g><title>remove_wait_queue (1 samples, 0.16%)</title><rect x="19.4929%" y="549" width="0.1585%" height="15" fill="rgb(218,133,21)"/><text x="19.7429%" y="559.50"></text></g><g><title>reweight_entity (2 samples, 0.32%)</title><rect x="20.6022%" y="453" width="0.3170%" height="15" fill="rgb(221,193,43)"/><text x="20.8522%" y="463.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.63%)</title><rect x="20.4437%" y="485" width="0.6339%" height="15" fill="rgb(240,128,52)"/><text x="20.6937%" y="495.50"></text></g><g><title>dequeue_entity (3 samples, 0.48%)</title><rect x="20.6022%" y="469" width="0.4754%" height="15" fill="rgb(253,114,12)"/><text x="20.8522%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.16%)</title><rect x="20.9192%" y="453" width="0.1585%" height="15" fill="rgb(215,223,47)"/><text x="21.1692%" y="463.50"></text></g><g><title>finish_task_switch (1 samples, 0.16%)</title><rect x="21.0777%" y="485" width="0.1585%" height="15" fill="rgb(248,225,23)"/><text x="21.3277%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.16%)</title><rect x="21.0777%" y="469" width="0.1585%" height="15" fill="rgb(250,108,0)"/><text x="21.3277%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.16%)</title><rect x="21.0777%" y="453" width="0.1585%" height="15" fill="rgb(228,208,7)"/><text x="21.3277%" y="463.50"></text></g><g><title>native_write_msr (1 samples, 0.16%)</title><rect x="21.0777%" y="437" width="0.1585%" height="15" fill="rgb(244,45,10)"/><text x="21.3277%" y="447.50"></text></g><g><title>psi_task_change (3 samples, 0.48%)</title><rect x="21.2361%" y="485" width="0.4754%" height="15" fill="rgb(207,125,25)"/><text x="21.4861%" y="495.50"></text></g><g><title>psi_group_change (2 samples, 0.32%)</title><rect x="21.3946%" y="469" width="0.3170%" height="15" fill="rgb(210,195,18)"/><text x="21.6446%" y="479.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.32%)</title><rect x="21.7116%" y="485" width="0.3170%" height="15" fill="rgb(249,80,12)"/><text x="21.9616%" y="495.50"></text></g><g><title>put_prev_entity (2 samples, 0.32%)</title><rect x="21.7116%" y="469" width="0.3170%" height="15" fill="rgb(221,65,9)"/><text x="21.9616%" y="479.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.48%)</title><rect x="22.0285%" y="485" width="0.4754%" height="15" fill="rgb(235,49,36)"/><text x="22.2785%" y="495.50"></text></g><g><title>sk_wait_data (25 samples, 3.96%)</title><rect x="18.8590%" y="565" width="3.9620%" height="15" fill="rgb(225,32,20)"/><text x="19.1090%" y="575.50">sk_w..</text></g><g><title>wait_woken (20 samples, 3.17%)</title><rect x="19.6513%" y="549" width="3.1696%" height="15" fill="rgb(215,141,46)"/><text x="19.9013%" y="559.50">wai..</text></g><g><title>schedule_timeout (19 samples, 3.01%)</title><rect x="19.8098%" y="533" width="3.0111%" height="15" fill="rgb(250,160,47)"/><text x="20.0598%" y="543.50">sch..</text></g><g><title>schedule (19 samples, 3.01%)</title><rect x="19.8098%" y="517" width="3.0111%" height="15" fill="rgb(216,222,40)"/><text x="20.0598%" y="527.50">sch..</text></g><g><title>__schedule (18 samples, 2.85%)</title><rect x="19.9683%" y="501" width="2.8526%" height="15" fill="rgb(234,217,39)"/><text x="20.2183%" y="511.50">__..</text></g><g><title>update_rq_clock (2 samples, 0.32%)</title><rect x="22.5040%" y="485" width="0.3170%" height="15" fill="rgb(207,178,40)"/><text x="22.7540%" y="495.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.32%)</title><rect x="22.5040%" y="469" width="0.3170%" height="15" fill="rgb(221,136,13)"/><text x="22.7540%" y="479.50"></text></g><g><title>sched_clock (2 samples, 0.32%)</title><rect x="22.5040%" y="453" width="0.3170%" height="15" fill="rgb(249,199,10)"/><text x="22.7540%" y="463.50"></text></g><g><title>native_sched_clock (2 samples, 0.32%)</title><rect x="22.5040%" y="437" width="0.3170%" height="15" fill="rgb(249,222,13)"/><text x="22.7540%" y="447.50"></text></g><g><title>_copy_to_iter (1 samples, 0.16%)</title><rect x="22.8209%" y="533" width="0.1585%" height="15" fill="rgb(244,185,38)"/><text x="23.0709%" y="543.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.32%)</title><rect x="22.8209%" y="565" width="0.3170%" height="15" fill="rgb(236,202,9)"/><text x="23.0709%" y="575.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.32%)</title><rect x="22.8209%" y="549" width="0.3170%" height="15" fill="rgb(250,229,37)"/><text x="23.0709%" y="559.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.16%)</title><rect x="22.9794%" y="533" width="0.1585%" height="15" fill="rgb(206,174,23)"/><text x="23.2294%" y="543.50"></text></g><g><title>inet_recvmsg (35 samples, 5.55%)</title><rect x="17.7496%" y="597" width="5.5468%" height="15" fill="rgb(211,33,43)"/><text x="17.9996%" y="607.50">inet_re..</text></g><g><title>tcp_recvmsg (35 samples, 5.55%)</title><rect x="17.7496%" y="581" width="5.5468%" height="15" fill="rgb(245,58,50)"/><text x="17.9996%" y="591.50">tcp_rec..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.16%)</title><rect x="23.1379%" y="565" width="0.1585%" height="15" fill="rgb(244,68,36)"/><text x="23.3879%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (40 samples, 6.34%)</title><rect x="17.2742%" y="629" width="6.3391%" height="15" fill="rgb(232,229,15)"/><text x="17.5242%" y="639.50">__x64_sy..</text></g><g><title>__sys_recvfrom (40 samples, 6.34%)</title><rect x="17.2742%" y="613" width="6.3391%" height="15" fill="rgb(254,30,23)"/><text x="17.5242%" y="623.50">__sys_re..</text></g><g><title>sockfd_lookup_light (2 samples, 0.32%)</title><rect x="23.2964%" y="597" width="0.3170%" height="15" fill="rgb(235,160,14)"/><text x="23.5464%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.16%)</title><rect x="23.4548%" y="581" width="0.1585%" height="15" fill="rgb(212,155,44)"/><text x="23.7048%" y="591.50"></text></g><g><title>__fget_files (1 samples, 0.16%)</title><rect x="23.4548%" y="565" width="0.1585%" height="15" fill="rgb(226,2,50)"/><text x="23.7048%" y="575.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="23.4548%" y="549" width="0.1585%" height="15" fill="rgb(234,177,6)"/><text x="23.7048%" y="559.50"></text></g><g><title>do_syscall_64 (42 samples, 6.66%)</title><rect x="17.1157%" y="645" width="6.6561%" height="15" fill="rgb(217,24,9)"/><text x="17.3657%" y="655.50">do_syscal..</text></g><g><title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="23.6133%" y="629" width="0.1585%" height="15" fill="rgb(220,13,46)"/><text x="23.8633%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (50 samples, 7.92%)</title><rect x="16.9572%" y="661" width="7.9239%" height="15" fill="rgb(239,221,27)"/><text x="17.2072%" y="671.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (7 samples, 1.11%)</title><rect x="23.7718%" y="645" width="1.1094%" height="15" fill="rgb(222,198,25)"/><text x="24.0218%" y="655.50"></text></g><g><title>switch_fpu_return (1 samples, 0.16%)</title><rect x="24.7227%" y="629" width="0.1585%" height="15" fill="rgb(211,99,13)"/><text x="24.9727%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (52 samples, 8.24%)</title><rect x="16.7987%" y="757" width="8.2409%" height="15" fill="rgb(232,111,31)"/><text x="17.0487%" y="767.50">&lt;std::io::b..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (51 samples, 8.08%)</title><rect x="16.9572%" y="741" width="8.0824%" height="15" fill="rgb(245,82,37)"/><text x="17.2072%" y="751.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::read (51 samples, 8.08%)</title><rect x="16.9572%" y="725" width="8.0824%" height="15" fill="rgb(227,149,46)"/><text x="17.2072%" y="735.50">std::sys_co..</text></g><g><title>std::sys::unix::net::Socket::read (51 samples, 8.08%)</title><rect x="16.9572%" y="709" width="8.0824%" height="15" fill="rgb(218,36,50)"/><text x="17.2072%" y="719.50">std::sys::u..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (51 samples, 8.08%)</title><rect x="16.9572%" y="693" width="8.0824%" height="15" fill="rgb(226,80,48)"/><text x="17.2072%" y="703.50">std::sys::u..</text></g><g><title>__libc_recv (51 samples, 8.08%)</title><rect x="16.9572%" y="677" width="8.0824%" height="15" fill="rgb(238,224,15)"/><text x="17.2072%" y="687.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="24.8811%" y="661" width="0.1585%" height="15" fill="rgb(241,136,10)"/><text x="25.1311%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 8.56%)</title><rect x="16.7987%" y="773" width="8.5578%" height="15" fill="rgb(208,32,45)"/><text x="17.0487%" y="783.50">&lt;mysql_commo..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.32%)</title><rect x="25.0396%" y="757" width="0.3170%" height="15" fill="rgb(207,135,9)"/><text x="25.2896%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.32%)</title><rect x="25.0396%" y="741" width="0.3170%" height="15" fill="rgb(206,86,44)"/><text x="25.2896%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.32%)</title><rect x="25.0396%" y="725" width="0.3170%" height="15" fill="rgb(245,177,15)"/><text x="25.2896%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.32%)</title><rect x="25.0396%" y="709" width="0.3170%" height="15" fill="rgb(206,64,50)"/><text x="25.2896%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="25.1981%" y="693" width="0.1585%" height="15" fill="rgb(234,36,40)"/><text x="25.4481%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (56 samples, 8.87%)</title><rect x="16.6403%" y="789" width="8.8748%" height="15" fill="rgb(213,64,8)"/><text x="16.8903%" y="799.50">mysql::conn::..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.16%)</title><rect x="25.3566%" y="773" width="0.1585%" height="15" fill="rgb(210,75,36)"/><text x="25.6066%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="25.3566%" y="757" width="0.1585%" height="15" fill="rgb(229,88,21)"/><text x="25.6066%" y="767.50"></text></g><g><title>lobsters::main (58 samples, 9.19%)</title><rect x="16.4818%" y="853" width="9.1918%" height="15" fill="rgb(252,204,47)"/><text x="16.7318%" y="863.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (57 samples, 9.03%)</title><rect x="16.6403%" y="837" width="9.0333%" height="15" fill="rgb(208,77,27)"/><text x="16.8903%" y="847.50">mysql::conn::..</text></g><g><title>mysql::conn::Conn::_query (57 samples, 9.03%)</title><rect x="16.6403%" y="821" width="9.0333%" height="15" fill="rgb(221,76,26)"/><text x="16.8903%" y="831.50">mysql::conn::..</text></g><g><title>mysql::conn::Conn::handle_result_set (57 samples, 9.03%)</title><rect x="16.6403%" y="805" width="9.0333%" height="15" fill="rgb(225,139,18)"/><text x="16.8903%" y="815.50">mysql::conn::..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.16%)</title><rect x="25.5151%" y="789" width="0.1585%" height="15" fill="rgb(230,137,11)"/><text x="25.7651%" y="799.50"></text></g><g><title>main (1 samples, 0.16%)</title><rect x="25.6735%" y="853" width="0.1585%" height="15" fill="rgb(212,28,1)"/><text x="25.9235%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.16%)</title><rect x="25.6735%" y="837" width="0.1585%" height="15" fill="rgb(248,164,17)"/><text x="25.9235%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.16%)</title><rect x="25.6735%" y="821" width="0.1585%" height="15" fill="rgb(222,171,42)"/><text x="25.9235%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.16%)</title><rect x="25.6735%" y="805" width="0.1585%" height="15" fill="rgb(243,84,45)"/><text x="25.9235%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.16%)</title><rect x="25.6735%" y="789" width="0.1585%" height="15" fill="rgb(252,49,23)"/><text x="25.9235%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.16%)</title><rect x="25.6735%" y="773" width="0.1585%" height="15" fill="rgb(215,19,7)"/><text x="25.9235%" y="783.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.16%)</title><rect x="25.6735%" y="757" width="0.1585%" height="15" fill="rgb(238,81,41)"/><text x="25.9235%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.16%)</title><rect x="25.6735%" y="741" width="0.1585%" height="15" fill="rgb(210,199,37)"/><text x="25.9235%" y="751.50"></text></g><g><title>lobsters::main (1 samples, 0.16%)</title><rect x="25.6735%" y="725" width="0.1585%" height="15" fill="rgb(244,192,49)"/><text x="25.9235%" y="735.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.16%)</title><rect x="25.6735%" y="709" width="0.1585%" height="15" fill="rgb(226,211,11)"/><text x="25.9235%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="25.6735%" y="693" width="0.1585%" height="15" fill="rgb(236,162,54)"/><text x="25.9235%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="25.6735%" y="677" width="0.1585%" height="15" fill="rgb(220,229,9)"/><text x="25.9235%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="25.8320%" y="853" width="0.1585%" height="15" fill="rgb(250,87,22)"/><text x="26.0820%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="25.8320%" y="837" width="0.1585%" height="15" fill="rgb(239,43,17)"/><text x="26.0820%" y="847.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.16%)</title><rect x="25.8320%" y="821" width="0.1585%" height="15" fill="rgb(231,177,25)"/><text x="26.0820%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.16%)</title><rect x="25.8320%" y="805" width="0.1585%" height="15" fill="rgb(219,179,1)"/><text x="26.0820%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="25.8320%" y="789" width="0.1585%" height="15" fill="rgb(238,219,53)"/><text x="26.0820%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="25.8320%" y="773" width="0.1585%" height="15" fill="rgb(232,167,36)"/><text x="26.0820%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="25.8320%" y="757" width="0.1585%" height="15" fill="rgb(244,19,51)"/><text x="26.0820%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="25.9905%" y="853" width="0.1585%" height="15" fill="rgb(224,6,22)"/><text x="26.2405%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.16%)</title><rect x="26.1490%" y="853" width="0.1585%" height="15" fill="rgb(224,145,5)"/><text x="26.3990%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="26.3074%" y="853" width="0.1585%" height="15" fill="rgb(234,130,49)"/><text x="26.5574%" y="863.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.16%)</title><rect x="26.4659%" y="853" width="0.1585%" height="15" fill="rgb(254,6,2)"/><text x="26.7159%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.16%)</title><rect x="26.4659%" y="837" width="0.1585%" height="15" fill="rgb(208,96,46)"/><text x="26.7159%" y="847.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.16%)</title><rect x="26.4659%" y="821" width="0.1585%" height="15" fill="rgb(239,3,39)"/><text x="26.7159%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.16%)</title><rect x="26.4659%" y="805" width="0.1585%" height="15" fill="rgb(233,210,1)"/><text x="26.7159%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.16%)</title><rect x="26.4659%" y="789" width="0.1585%" height="15" fill="rgb(244,137,37)"/><text x="26.7159%" y="799.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.16%)</title><rect x="26.4659%" y="773" width="0.1585%" height="15" fill="rgb(240,136,2)"/><text x="26.7159%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="26.7829%" y="789" width="0.1585%" height="15" fill="rgb(239,18,37)"/><text x="27.0329%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="26.7829%" y="773" width="0.1585%" height="15" fill="rgb(218,185,22)"/><text x="27.0329%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="26.7829%" y="757" width="0.1585%" height="15" fill="rgb(225,218,4)"/><text x="27.0329%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.16%)</title><rect x="26.7829%" y="741" width="0.1585%" height="15" fill="rgb(230,182,32)"/><text x="27.0329%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="26.7829%" y="725" width="0.1585%" height="15" fill="rgb(242,56,43)"/><text x="27.0329%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="26.7829%" y="709" width="0.1585%" height="15" fill="rgb(233,99,24)"/><text x="27.0329%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="26.7829%" y="693" width="0.1585%" height="15" fill="rgb(234,209,42)"/><text x="27.0329%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="26.7829%" y="677" width="0.1585%" height="15" fill="rgb(227,7,12)"/><text x="27.0329%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="26.7829%" y="661" width="0.1585%" height="15" fill="rgb(245,203,43)"/><text x="27.0329%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.16%)</title><rect x="26.7829%" y="645" width="0.1585%" height="15" fill="rgb(238,205,33)"/><text x="27.0329%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="26.7829%" y="629" width="0.1585%" height="15" fill="rgb(231,56,7)"/><text x="27.0329%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="26.7829%" y="613" width="0.1585%" height="15" fill="rgb(244,186,29)"/><text x="27.0329%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="26.7829%" y="597" width="0.1585%" height="15" fill="rgb(234,111,31)"/><text x="27.0329%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="26.7829%" y="581" width="0.1585%" height="15" fill="rgb(241,149,10)"/><text x="27.0329%" y="591.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.48%)</title><rect x="26.6244%" y="853" width="0.4754%" height="15" fill="rgb(249,206,44)"/><text x="26.8744%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.48%)</title><rect x="26.6244%" y="837" width="0.4754%" height="15" fill="rgb(251,153,30)"/><text x="26.8744%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (3 samples, 0.48%)</title><rect x="26.6244%" y="821" width="0.4754%" height="15" fill="rgb(239,152,38)"/><text x="26.8744%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.32%)</title><rect x="26.7829%" y="805" width="0.3170%" height="15" fill="rgb(249,139,47)"/><text x="27.0329%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.16%)</title><rect x="26.9414%" y="789" width="0.1585%" height="15" fill="rgb(244,64,35)"/><text x="27.1914%" y="799.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.16%)</title><rect x="27.0998%" y="853" width="0.1585%" height="15" fill="rgb(216,46,15)"/><text x="27.3498%" y="863.50"></text></g><g><title>do_dentry_open (1 samples, 0.16%)</title><rect x="27.2583%" y="533" width="0.1585%" height="15" fill="rgb(250,74,19)"/><text x="27.5083%" y="543.50"></text></g><g><title>kernfs_fop_open (1 samples, 0.16%)</title><rect x="27.2583%" y="517" width="0.1585%" height="15" fill="rgb(249,42,33)"/><text x="27.5083%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.32%)</title><rect x="27.2583%" y="853" width="0.3170%" height="15" fill="rgb(242,149,17)"/><text x="27.5083%" y="863.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.32%)</title><rect x="27.2583%" y="837" width="0.3170%" height="15" fill="rgb(244,29,21)"/><text x="27.5083%" y="847.50"></text></g><g><title>std::panicking::try (2 samples, 0.32%)</title><rect x="27.2583%" y="821" width="0.3170%" height="15" fill="rgb(220,130,37)"/><text x="27.5083%" y="831.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.32%)</title><rect x="27.2583%" y="805" width="0.3170%" height="15" fill="rgb(211,67,2)"/><text x="27.5083%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.32%)</title><rect x="27.2583%" y="789" width="0.3170%" height="15" fill="rgb(235,68,52)"/><text x="27.5083%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.32%)</title><rect x="27.2583%" y="773" width="0.3170%" height="15" fill="rgb(246,142,3)"/><text x="27.5083%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.32%)</title><rect x="27.2583%" y="757" width="0.3170%" height="15" fill="rgb(241,25,7)"/><text x="27.5083%" y="767.50"></text></g><g><title>lobsters::main (2 samples, 0.32%)</title><rect x="27.2583%" y="741" width="0.3170%" height="15" fill="rgb(242,119,39)"/><text x="27.5083%" y="751.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.32%)</title><rect x="27.2583%" y="725" width="0.3170%" height="15" fill="rgb(241,98,45)"/><text x="27.5083%" y="735.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.32%)</title><rect x="27.2583%" y="709" width="0.3170%" height="15" fill="rgb(254,28,30)"/><text x="27.5083%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.32%)</title><rect x="27.2583%" y="693" width="0.3170%" height="15" fill="rgb(241,142,54)"/><text x="27.5083%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.32%)</title><rect x="27.2583%" y="677" width="0.3170%" height="15" fill="rgb(222,85,15)"/><text x="27.5083%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.32%)</title><rect x="27.2583%" y="661" width="0.3170%" height="15" fill="rgb(210,85,47)"/><text x="27.5083%" y="671.50"></text></g><g><title>__GI___openat (2 samples, 0.32%)</title><rect x="27.2583%" y="645" width="0.3170%" height="15" fill="rgb(224,206,25)"/><text x="27.5083%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.32%)</title><rect x="27.2583%" y="629" width="0.3170%" height="15" fill="rgb(243,201,19)"/><text x="27.5083%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.32%)</title><rect x="27.2583%" y="613" width="0.3170%" height="15" fill="rgb(236,59,4)"/><text x="27.5083%" y="623.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.32%)</title><rect x="27.2583%" y="597" width="0.3170%" height="15" fill="rgb(254,179,45)"/><text x="27.5083%" y="607.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.32%)</title><rect x="27.2583%" y="581" width="0.3170%" height="15" fill="rgb(226,14,10)"/><text x="27.5083%" y="591.50"></text></g><g><title>do_filp_open (2 samples, 0.32%)</title><rect x="27.2583%" y="565" width="0.3170%" height="15" fill="rgb(244,27,41)"/><text x="27.5083%" y="575.50"></text></g><g><title>path_openat (2 samples, 0.32%)</title><rect x="27.2583%" y="549" width="0.3170%" height="15" fill="rgb(235,35,32)"/><text x="27.5083%" y="559.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.16%)</title><rect x="27.4168%" y="533" width="0.1585%" height="15" fill="rgb(218,68,31)"/><text x="27.6668%" y="543.50"></text></g><g><title>kernfs_dop_revalidate (1 samples, 0.16%)</title><rect x="27.4168%" y="517" width="0.1585%" height="15" fill="rgb(207,120,37)"/><text x="27.6668%" y="527.50"></text></g><g><title>[unknown] (165 samples, 26.15%)</title><rect x="1.5848%" y="869" width="26.1490%" height="15" fill="rgb(227,98,0)"/><text x="1.8348%" y="879.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.16%)</title><rect x="27.5753%" y="853" width="0.1585%" height="15" fill="rgb(207,7,3)"/><text x="27.8253%" y="863.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.16%)</title><rect x="27.5753%" y="837" width="0.1585%" height="15" fill="rgb(206,98,19)"/><text x="27.8253%" y="847.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.16%)</title><rect x="27.5753%" y="821" width="0.1585%" height="15" fill="rgb(217,5,26)"/><text x="27.8253%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.16%)</title><rect x="27.5753%" y="805" width="0.1585%" height="15" fill="rgb(235,190,38)"/><text x="27.8253%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="27.5753%" y="789" width="0.1585%" height="15" fill="rgb(247,86,24)"/><text x="27.8253%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="27.5753%" y="773" width="0.1585%" height="15" fill="rgb(205,101,16)"/><text x="27.8253%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.16%)</title><rect x="27.5753%" y="757" width="0.1585%" height="15" fill="rgb(246,168,33)"/><text x="27.8253%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="27.5753%" y="741" width="0.1585%" height="15" fill="rgb(231,114,1)"/><text x="27.8253%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.16%)</title><rect x="27.5753%" y="725" width="0.1585%" height="15" fill="rgb(207,184,53)"/><text x="27.8253%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.16%)</title><rect x="27.5753%" y="709" width="0.1585%" height="15" fill="rgb(224,95,51)"/><text x="27.8253%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="27.5753%" y="693" width="0.1585%" height="15" fill="rgb(212,188,45)"/><text x="27.8253%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.16%)</title><rect x="27.5753%" y="677" width="0.1585%" height="15" fill="rgb(223,154,38)"/><text x="27.8253%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.16%)</title><rect x="27.5753%" y="661" width="0.1585%" height="15" fill="rgb(251,22,52)"/><text x="27.8253%" y="671.50"></text></g><g><title>__GI_madvise (1 samples, 0.16%)</title><rect x="27.7338%" y="837" width="0.1585%" height="15" fill="rgb(229,209,22)"/><text x="27.9838%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="27.7338%" y="821" width="0.1585%" height="15" fill="rgb(234,138,34)"/><text x="27.9838%" y="831.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="27.7338%" y="805" width="0.1585%" height="15" fill="rgb(212,95,11)"/><text x="27.9838%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.16%)</title><rect x="27.8922%" y="725" width="0.1585%" height="15" fill="rgb(240,179,47)"/><text x="28.1422%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.16%)</title><rect x="27.8922%" y="709" width="0.1585%" height="15" fill="rgb(240,163,11)"/><text x="28.1422%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.16%)</title><rect x="27.8922%" y="693" width="0.1585%" height="15" fill="rgb(236,37,12)"/><text x="28.1422%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.16%)</title><rect x="27.8922%" y="677" width="0.1585%" height="15" fill="rgb(232,164,16)"/><text x="28.1422%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.16%)</title><rect x="27.8922%" y="661" width="0.1585%" height="15" fill="rgb(244,205,15)"/><text x="28.1422%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="27.8922%" y="645" width="0.1585%" height="15" fill="rgb(223,117,47)"/><text x="28.1422%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="27.8922%" y="629" width="0.1585%" height="15" fill="rgb(244,107,35)"/><text x="28.1422%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.16%)</title><rect x="27.8922%" y="613" width="0.1585%" height="15" fill="rgb(205,140,8)"/><text x="28.1422%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.16%)</title><rect x="27.8922%" y="597" width="0.1585%" height="15" fill="rgb(228,84,46)"/><text x="28.1422%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.16%)</title><rect x="27.8922%" y="581" width="0.1585%" height="15" fill="rgb(254,188,9)"/><text x="28.1422%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.16%)</title><rect x="27.8922%" y="565" width="0.1585%" height="15" fill="rgb(206,112,54)"/><text x="28.1422%" y="575.50"></text></g><g><title>__libc_recv (1 samples, 0.16%)</title><rect x="27.8922%" y="549" width="0.1585%" height="15" fill="rgb(216,84,49)"/><text x="28.1422%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="27.8922%" y="533" width="0.1585%" height="15" fill="rgb(214,194,35)"/><text x="28.1422%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="27.8922%" y="517" width="0.1585%" height="15" fill="rgb(249,28,3)"/><text x="28.1422%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.16%)</title><rect x="27.8922%" y="501" width="0.1585%" height="15" fill="rgb(222,56,52)"/><text x="28.1422%" y="511.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.16%)</title><rect x="27.8922%" y="485" width="0.1585%" height="15" fill="rgb(245,217,50)"/><text x="28.1422%" y="495.50"></text></g><g><title>inet_recvmsg (1 samples, 0.16%)</title><rect x="27.8922%" y="469" width="0.1585%" height="15" fill="rgb(213,201,24)"/><text x="28.1422%" y="479.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.16%)</title><rect x="27.8922%" y="453" width="0.1585%" height="15" fill="rgb(248,116,28)"/><text x="28.1422%" y="463.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.16%)</title><rect x="27.8922%" y="437" width="0.1585%" height="15" fill="rgb(219,72,43)"/><text x="28.1422%" y="447.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.16%)</title><rect x="27.8922%" y="421" width="0.1585%" height="15" fill="rgb(209,138,14)"/><text x="28.1422%" y="431.50"></text></g><g><title>_copy_to_iter (1 samples, 0.16%)</title><rect x="27.8922%" y="405" width="0.1585%" height="15" fill="rgb(222,18,33)"/><text x="28.1422%" y="415.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.16%)</title><rect x="27.8922%" y="389" width="0.1585%" height="15" fill="rgb(213,199,7)"/><text x="28.1422%" y="399.50"></text></g><g><title>page_fault (1 samples, 0.16%)</title><rect x="27.8922%" y="373" width="0.1585%" height="15" fill="rgb(250,110,10)"/><text x="28.1422%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="27.8922%" y="357" width="0.1585%" height="15" fill="rgb(248,123,6)"/><text x="28.1422%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="27.8922%" y="341" width="0.1585%" height="15" fill="rgb(206,91,31)"/><text x="28.1422%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="27.8922%" y="325" width="0.1585%" height="15" fill="rgb(211,154,13)"/><text x="28.1422%" y="335.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.16%)</title><rect x="27.8922%" y="309" width="0.1585%" height="15" fill="rgb(225,148,7)"/><text x="28.1422%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.16%)</title><rect x="27.8922%" y="293" width="0.1585%" height="15" fill="rgb(220,160,43)"/><text x="28.1422%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.16%)</title><rect x="27.8922%" y="277" width="0.1585%" height="15" fill="rgb(213,52,39)"/><text x="28.1422%" y="287.50"></text></g><g><title>prep_new_page (1 samples, 0.16%)</title><rect x="27.8922%" y="261" width="0.1585%" height="15" fill="rgb(243,137,7)"/><text x="28.1422%" y="271.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.16%)</title><rect x="27.8922%" y="245" width="0.1585%" height="15" fill="rgb(230,79,13)"/><text x="28.1422%" y="255.50"></text></g><g><title>clear_page_erms (1 samples, 0.16%)</title><rect x="27.8922%" y="229" width="0.1585%" height="15" fill="rgb(247,105,23)"/><text x="28.1422%" y="239.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.16%)</title><rect x="28.2092%" y="661" width="0.1585%" height="15" fill="rgb(223,179,41)"/><text x="28.4592%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.16%)</title><rect x="28.2092%" y="645" width="0.1585%" height="15" fill="rgb(218,9,34)"/><text x="28.4592%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="28.2092%" y="629" width="0.1585%" height="15" fill="rgb(222,106,8)"/><text x="28.4592%" y="639.50"></text></g><g><title>decor::helpers::answer_rows (3 samples, 0.48%)</title><rect x="28.2092%" y="709" width="0.4754%" height="15" fill="rgb(211,220,0)"/><text x="28.4592%" y="719.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (3 samples, 0.48%)</title><rect x="28.2092%" y="693" width="0.4754%" height="15" fill="rgb(229,52,16)"/><text x="28.4592%" y="703.50"></text></g><g><title>msql_srv::writers::write_ok_packet (3 samples, 0.48%)</title><rect x="28.2092%" y="677" width="0.4754%" height="15" fill="rgb(212,155,18)"/><text x="28.4592%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.32%)</title><rect x="28.3677%" y="661" width="0.3170%" height="15" fill="rgb(242,21,14)"/><text x="28.6177%" y="671.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.16%)</title><rect x="28.5261%" y="645" width="0.1585%" height="15" fill="rgb(222,19,48)"/><text x="28.7761%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="28.5261%" y="629" width="0.1585%" height="15" fill="rgb(232,45,27)"/><text x="28.7761%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="28.6846%" y="693" width="0.1585%" height="15" fill="rgb(249,103,42)"/><text x="28.9346%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="29.0016%" y="677" width="0.1585%" height="15" fill="rgb(246,81,33)"/><text x="29.2516%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="29.4770%" y="549" width="0.1585%" height="15" fill="rgb(252,33,42)"/><text x="29.7270%" y="559.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="29.7940%" y="453" width="0.1585%" height="15" fill="rgb(209,212,41)"/><text x="30.0440%" y="463.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="29.7940%" y="437" width="0.1585%" height="15" fill="rgb(207,154,6)"/><text x="30.0440%" y="447.50"></text></g><g><title>sock_rfree (1 samples, 0.16%)</title><rect x="29.7940%" y="421" width="0.1585%" height="15" fill="rgb(223,64,47)"/><text x="30.0440%" y="431.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="29.9525%" y="453" width="0.1585%" height="15" fill="rgb(211,161,38)"/><text x="30.2025%" y="463.50"></text></g><g><title>release_sock (2 samples, 0.32%)</title><rect x="30.1109%" y="453" width="0.3170%" height="15" fill="rgb(219,138,40)"/><text x="30.3609%" y="463.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="30.2694%" y="437" width="0.1585%" height="15" fill="rgb(241,228,46)"/><text x="30.5194%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="30.2694%" y="421" width="0.1585%" height="15" fill="rgb(223,209,38)"/><text x="30.5194%" y="431.50"></text></g><g><title>remove_wait_queue (1 samples, 0.16%)</title><rect x="30.4279%" y="437" width="0.1585%" height="15" fill="rgb(236,164,45)"/><text x="30.6779%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="30.4279%" y="421" width="0.1585%" height="15" fill="rgb(231,15,5)"/><text x="30.6779%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.16%)</title><rect x="30.5864%" y="373" width="0.1585%" height="15" fill="rgb(252,35,15)"/><text x="30.8364%" y="383.50"></text></g><g><title>ctx_sched_out (1 samples, 0.16%)</title><rect x="30.5864%" y="357" width="0.1585%" height="15" fill="rgb(248,181,18)"/><text x="30.8364%" y="367.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.16%)</title><rect x="30.5864%" y="341" width="0.1585%" height="15" fill="rgb(233,39,42)"/><text x="30.8364%" y="351.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.16%)</title><rect x="30.7448%" y="373" width="0.1585%" height="15" fill="rgb(238,110,33)"/><text x="30.9948%" y="383.50"></text></g><g><title>dequeue_entity (1 samples, 0.16%)</title><rect x="30.7448%" y="357" width="0.1585%" height="15" fill="rgb(233,195,10)"/><text x="30.9948%" y="367.50"></text></g><g><title>update_load_avg (1 samples, 0.16%)</title><rect x="30.7448%" y="341" width="0.1585%" height="15" fill="rgb(254,105,3)"/><text x="30.9948%" y="351.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.16%)</title><rect x="30.7448%" y="325" width="0.1585%" height="15" fill="rgb(221,225,9)"/><text x="30.9948%" y="335.50"></text></g><g><title>finish_task_switch (1 samples, 0.16%)</title><rect x="30.9033%" y="373" width="0.1585%" height="15" fill="rgb(224,227,45)"/><text x="31.1533%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.16%)</title><rect x="30.9033%" y="357" width="0.1585%" height="15" fill="rgb(229,198,43)"/><text x="31.1533%" y="367.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="30.9033%" y="341" width="0.1585%" height="15" fill="rgb(206,209,35)"/><text x="31.1533%" y="351.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="30.9033%" y="325" width="0.1585%" height="15" fill="rgb(245,195,53)"/><text x="31.1533%" y="335.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.16%)</title><rect x="31.0618%" y="373" width="0.1585%" height="15" fill="rgb(240,92,26)"/><text x="31.3118%" y="383.50"></text></g><g><title>put_prev_entity (1 samples, 0.16%)</title><rect x="31.0618%" y="357" width="0.1585%" height="15" fill="rgb(207,40,23)"/><text x="31.3118%" y="367.50"></text></g><g><title>sk_wait_data (6 samples, 0.95%)</title><rect x="30.4279%" y="453" width="0.9509%" height="15" fill="rgb(223,111,35)"/><text x="30.6779%" y="463.50"></text></g><g><title>wait_woken (5 samples, 0.79%)</title><rect x="30.5864%" y="437" width="0.7924%" height="15" fill="rgb(229,147,28)"/><text x="30.8364%" y="447.50"></text></g><g><title>schedule_timeout (5 samples, 0.79%)</title><rect x="30.5864%" y="421" width="0.7924%" height="15" fill="rgb(211,29,28)"/><text x="30.8364%" y="431.50"></text></g><g><title>schedule (5 samples, 0.79%)</title><rect x="30.5864%" y="405" width="0.7924%" height="15" fill="rgb(228,72,33)"/><text x="30.8364%" y="415.50"></text></g><g><title>__schedule (5 samples, 0.79%)</title><rect x="30.5864%" y="389" width="0.7924%" height="15" fill="rgb(205,214,31)"/><text x="30.8364%" y="399.50"></text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="31.2203%" y="373" width="0.1585%" height="15" fill="rgb(224,111,15)"/><text x="31.4703%" y="383.50"></text></g><g><title>do_syscall_64 (14 samples, 2.22%)</title><rect x="29.6355%" y="533" width="2.2187%" height="15" fill="rgb(253,21,26)"/><text x="29.8855%" y="543.50">d..</text></g><g><title>__x64_sys_recvfrom (14 samples, 2.22%)</title><rect x="29.6355%" y="517" width="2.2187%" height="15" fill="rgb(245,139,43)"/><text x="29.8855%" y="527.50">_..</text></g><g><title>__sys_recvfrom (14 samples, 2.22%)</title><rect x="29.6355%" y="501" width="2.2187%" height="15" fill="rgb(252,170,7)"/><text x="29.8855%" y="511.50">_..</text></g><g><title>inet_recvmsg (14 samples, 2.22%)</title><rect x="29.6355%" y="485" width="2.2187%" height="15" fill="rgb(231,118,14)"/><text x="29.8855%" y="495.50">i..</text></g><g><title>tcp_recvmsg (14 samples, 2.22%)</title><rect x="29.6355%" y="469" width="2.2187%" height="15" fill="rgb(238,83,0)"/><text x="29.8855%" y="479.50">t..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.48%)</title><rect x="31.3788%" y="453" width="0.4754%" height="15" fill="rgb(221,39,39)"/><text x="31.6288%" y="463.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.48%)</title><rect x="31.3788%" y="437" width="0.4754%" height="15" fill="rgb(222,119,46)"/><text x="31.6288%" y="447.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.16%)</title><rect x="31.6957%" y="421" width="0.1585%" height="15" fill="rgb(222,165,49)"/><text x="31.9457%" y="431.50"></text></g><g><title>__check_object_size (1 samples, 0.16%)</title><rect x="31.6957%" y="405" width="0.1585%" height="15" fill="rgb(219,113,52)"/><text x="31.9457%" y="415.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 3.33%)</title><rect x="29.1601%" y="677" width="3.3281%" height="15" fill="rgb(214,7,15)"/><text x="29.4101%" y="687.50">mys..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 3.33%)</title><rect x="29.1601%" y="661" width="3.3281%" height="15" fill="rgb(235,32,4)"/><text x="29.4101%" y="671.50">&lt;my..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (19 samples, 3.01%)</title><rect x="29.4770%" y="645" width="3.0111%" height="15" fill="rgb(238,90,54)"/><text x="29.7270%" y="655.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 3.01%)</title><rect x="29.4770%" y="629" width="3.0111%" height="15" fill="rgb(213,208,19)"/><text x="29.7270%" y="639.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (19 samples, 3.01%)</title><rect x="29.4770%" y="613" width="3.0111%" height="15" fill="rgb(233,156,4)"/><text x="29.7270%" y="623.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (19 samples, 3.01%)</title><rect x="29.4770%" y="597" width="3.0111%" height="15" fill="rgb(207,194,5)"/><text x="29.7270%" y="607.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (19 samples, 3.01%)</title><rect x="29.4770%" y="581" width="3.0111%" height="15" fill="rgb(206,111,30)"/><text x="29.7270%" y="591.50">std..</text></g><g><title>__libc_recv (19 samples, 3.01%)</title><rect x="29.4770%" y="565" width="3.0111%" height="15" fill="rgb(243,70,54)"/><text x="29.7270%" y="575.50">__l..</text></g><g><title>entry_SYSCALL_64 (18 samples, 2.85%)</title><rect x="29.6355%" y="549" width="2.8526%" height="15" fill="rgb(242,28,8)"/><text x="29.8855%" y="559.50">en..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.63%)</title><rect x="31.8542%" y="533" width="0.6339%" height="15" fill="rgb(219,106,18)"/><text x="32.1042%" y="543.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (24 samples, 3.80%)</title><rect x="28.8431%" y="693" width="3.8035%" height="15" fill="rgb(244,222,10)"/><text x="29.0931%" y="703.50">mysq..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.16%)</title><rect x="32.4881%" y="677" width="0.1585%" height="15" fill="rgb(236,179,52)"/><text x="32.7381%" y="687.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.16%)</title><rect x="32.4881%" y="661" width="0.1585%" height="15" fill="rgb(213,23,39)"/><text x="32.7381%" y="671.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="32.6466%" y="613" width="0.1585%" height="15" fill="rgb(238,48,10)"/><text x="32.8966%" y="623.50"></text></g><g><title>import_single_range (1 samples, 0.16%)</title><rect x="32.8051%" y="549" width="0.1585%" height="15" fill="rgb(251,196,23)"/><text x="33.0551%" y="559.50"></text></g><g><title>release_sock (2 samples, 0.32%)</title><rect x="32.9635%" y="517" width="0.3170%" height="15" fill="rgb(250,152,24)"/><text x="33.2135%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="33.1220%" y="501" width="0.1585%" height="15" fill="rgb(209,150,17)"/><text x="33.3720%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="33.1220%" y="485" width="0.1585%" height="15" fill="rgb(234,202,34)"/><text x="33.3720%" y="495.50"></text></g><g><title>__ip_local_out (1 samples, 0.16%)</title><rect x="34.2314%" y="437" width="0.1585%" height="15" fill="rgb(253,148,53)"/><text x="34.4814%" y="447.50"></text></g><g><title>ip_send_check (1 samples, 0.16%)</title><rect x="34.2314%" y="421" width="0.1585%" height="15" fill="rgb(218,129,16)"/><text x="34.4814%" y="431.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.16%)</title><rect x="34.3899%" y="437" width="0.1585%" height="15" fill="rgb(216,85,19)"/><text x="34.6399%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.16%)</title><rect x="34.7068%" y="357" width="0.1585%" height="15" fill="rgb(235,228,7)"/><text x="34.9568%" y="367.50"></text></g><g><title>netif_rx (1 samples, 0.16%)</title><rect x="34.8653%" y="357" width="0.1585%" height="15" fill="rgb(245,175,0)"/><text x="35.1153%" y="367.50"></text></g><g><title>netif_rx_internal (1 samples, 0.16%)</title><rect x="34.8653%" y="341" width="0.1585%" height="15" fill="rgb(208,168,36)"/><text x="35.1153%" y="351.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.16%)</title><rect x="34.8653%" y="325" width="0.1585%" height="15" fill="rgb(246,171,24)"/><text x="35.1153%" y="335.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="34.8653%" y="309" width="0.1585%" height="15" fill="rgb(215,142,24)"/><text x="35.1153%" y="319.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.48%)</title><rect x="34.7068%" y="405" width="0.4754%" height="15" fill="rgb(250,187,7)"/><text x="34.9568%" y="415.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.48%)</title><rect x="34.7068%" y="389" width="0.4754%" height="15" fill="rgb(228,66,33)"/><text x="34.9568%" y="399.50"></text></g><g><title>loopback_xmit (3 samples, 0.48%)</title><rect x="34.7068%" y="373" width="0.4754%" height="15" fill="rgb(234,215,21)"/><text x="34.9568%" y="383.50"></text></g><g><title>tcp_wfree (1 samples, 0.16%)</title><rect x="35.0238%" y="357" width="0.1585%" height="15" fill="rgb(222,191,20)"/><text x="35.2738%" y="367.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.16%)</title><rect x="35.3407%" y="293" width="0.1585%" height="15" fill="rgb(245,79,54)"/><text x="35.5907%" y="303.50"></text></g><g><title>raw_local_deliver (1 samples, 0.16%)</title><rect x="35.4992%" y="229" width="0.1585%" height="15" fill="rgb(240,10,37)"/><text x="35.7492%" y="239.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.16%)</title><rect x="35.8162%" y="213" width="0.1585%" height="15" fill="rgb(214,192,32)"/><text x="36.0662%" y="223.50"></text></g><g><title>inet_ehashfn (1 samples, 0.16%)</title><rect x="35.8162%" y="197" width="0.1585%" height="15" fill="rgb(209,36,54)"/><text x="36.0662%" y="207.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.16%)</title><rect x="36.6086%" y="181" width="0.1585%" height="15" fill="rgb(220,10,11)"/><text x="36.8586%" y="191.50"></text></g><g><title>default_wake_function (1 samples, 0.16%)</title><rect x="37.0840%" y="117" width="0.1585%" height="15" fill="rgb(221,106,17)"/><text x="37.3340%" y="127.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.48%)</title><rect x="37.2425%" y="101" width="0.4754%" height="15" fill="rgb(251,142,44)"/><text x="37.4925%" y="111.50"></text></g><g><title>enqueue_entity (3 samples, 0.48%)</title><rect x="37.2425%" y="85" width="0.4754%" height="15" fill="rgb(238,13,15)"/><text x="37.4925%" y="95.50"></text></g><g><title>update_load_avg (1 samples, 0.16%)</title><rect x="37.5594%" y="69" width="0.1585%" height="15" fill="rgb(208,107,27)"/><text x="37.8094%" y="79.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.16%)</title><rect x="37.5594%" y="53" width="0.1585%" height="15" fill="rgb(205,136,37)"/><text x="37.8094%" y="63.50"></text></g><g><title>sock_def_readable (9 samples, 1.43%)</title><rect x="36.7670%" y="181" width="1.4263%" height="15" fill="rgb(250,205,27)"/><text x="37.0170%" y="191.50"></text></g><g><title>__wake_up_common_lock (9 samples, 1.43%)</title><rect x="36.7670%" y="165" width="1.4263%" height="15" fill="rgb(210,80,43)"/><text x="37.0170%" y="175.50"></text></g><g><title>__wake_up_common (8 samples, 1.27%)</title><rect x="36.9255%" y="149" width="1.2678%" height="15" fill="rgb(247,160,36)"/><text x="37.1755%" y="159.50"></text></g><g><title>pollwake (8 samples, 1.27%)</title><rect x="36.9255%" y="133" width="1.2678%" height="15" fill="rgb(234,13,49)"/><text x="37.1755%" y="143.50"></text></g><g><title>try_to_wake_up (6 samples, 0.95%)</title><rect x="37.2425%" y="117" width="0.9509%" height="15" fill="rgb(234,122,0)"/><text x="37.4925%" y="127.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.48%)</title><rect x="37.7179%" y="101" width="0.4754%" height="15" fill="rgb(207,146,38)"/><text x="37.9679%" y="111.50"></text></g><g><title>available_idle_cpu (2 samples, 0.32%)</title><rect x="37.8764%" y="85" width="0.3170%" height="15" fill="rgb(207,177,25)"/><text x="38.1264%" y="95.50"></text></g><g><title>kfree (1 samples, 0.16%)</title><rect x="38.1933%" y="149" width="0.1585%" height="15" fill="rgb(211,178,42)"/><text x="38.4433%" y="159.50"></text></g><g><title>__kfree_skb (3 samples, 0.48%)</title><rect x="38.1933%" y="165" width="0.4754%" height="15" fill="rgb(230,69,54)"/><text x="38.4433%" y="175.50"></text></g><g><title>skb_release_data (2 samples, 0.32%)</title><rect x="38.3518%" y="149" width="0.3170%" height="15" fill="rgb(214,135,41)"/><text x="38.6018%" y="159.50"></text></g><g><title>kmem_cache_free (2 samples, 0.32%)</title><rect x="38.6688%" y="165" width="0.3170%" height="15" fill="rgb(237,67,25)"/><text x="38.9188%" y="175.50"></text></g><g><title>__slab_free (1 samples, 0.16%)</title><rect x="38.8273%" y="149" width="0.1585%" height="15" fill="rgb(222,189,50)"/><text x="39.0773%" y="159.50"></text></g><g><title>tcp_ack (6 samples, 0.95%)</title><rect x="38.1933%" y="181" width="0.9509%" height="15" fill="rgb(245,148,34)"/><text x="38.4433%" y="191.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.16%)</title><rect x="38.9857%" y="165" width="0.1585%" height="15" fill="rgb(222,29,6)"/><text x="39.2357%" y="175.50"></text></g><g><title>tcp_check_space (1 samples, 0.16%)</title><rect x="39.1442%" y="181" width="0.1585%" height="15" fill="rgb(221,189,43)"/><text x="39.3942%" y="191.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.16%)</title><rect x="39.3027%" y="181" width="0.1585%" height="15" fill="rgb(207,36,27)"/><text x="39.5527%" y="191.50"></text></g><g><title>ip_local_deliver (27 samples, 4.28%)</title><rect x="35.4992%" y="277" width="4.2789%" height="15" fill="rgb(217,90,24)"/><text x="35.7492%" y="287.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (27 samples, 4.28%)</title><rect x="35.4992%" y="261" width="4.2789%" height="15" fill="rgb(224,66,35)"/><text x="35.7492%" y="271.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (27 samples, 4.28%)</title><rect x="35.4992%" y="245" width="4.2789%" height="15" fill="rgb(221,13,50)"/><text x="35.7492%" y="255.50">ip_pr..</text></g><g><title>tcp_v4_rcv (26 samples, 4.12%)</title><rect x="35.6577%" y="229" width="4.1204%" height="15" fill="rgb(236,68,49)"/><text x="35.9077%" y="239.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (24 samples, 3.80%)</title><rect x="35.9746%" y="213" width="3.8035%" height="15" fill="rgb(229,146,28)"/><text x="36.2246%" y="223.50">tcp_..</text></g><g><title>tcp_rcv_established (24 samples, 3.80%)</title><rect x="35.9746%" y="197" width="3.8035%" height="15" fill="rgb(225,31,38)"/><text x="36.2246%" y="207.50">tcp_..</text></g><g><title>tcp_queue_rcv (2 samples, 0.32%)</title><rect x="39.4612%" y="181" width="0.3170%" height="15" fill="rgb(250,208,3)"/><text x="39.7112%" y="191.50"></text></g><g><title>ip_finish_output2 (35 samples, 5.55%)</title><rect x="34.5483%" y="421" width="5.5468%" height="15" fill="rgb(246,54,23)"/><text x="34.7983%" y="431.50">ip_fini..</text></g><g><title>__local_bh_enable_ip (31 samples, 4.91%)</title><rect x="35.1823%" y="405" width="4.9128%" height="15" fill="rgb(243,76,11)"/><text x="35.4323%" y="415.50">__loca..</text></g><g><title>do_softirq (31 samples, 4.91%)</title><rect x="35.1823%" y="389" width="4.9128%" height="15" fill="rgb(245,21,50)"/><text x="35.4323%" y="399.50">do_sof..</text></g><g><title>do_softirq_own_stack (31 samples, 4.91%)</title><rect x="35.1823%" y="373" width="4.9128%" height="15" fill="rgb(228,9,43)"/><text x="35.4323%" y="383.50">do_sof..</text></g><g><title>__do_softirq (31 samples, 4.91%)</title><rect x="35.1823%" y="357" width="4.9128%" height="15" fill="rgb(208,100,47)"/><text x="35.4323%" y="367.50">__do_s..</text></g><g><title>net_rx_action (31 samples, 4.91%)</title><rect x="35.1823%" y="341" width="4.9128%" height="15" fill="rgb(232,26,8)"/><text x="35.4323%" y="351.50">net_rx..</text></g><g><title>process_backlog (31 samples, 4.91%)</title><rect x="35.1823%" y="325" width="4.9128%" height="15" fill="rgb(216,166,38)"/><text x="35.4323%" y="335.50">proces..</text></g><g><title>__netif_receive_skb_one_core (30 samples, 4.75%)</title><rect x="35.3407%" y="309" width="4.7544%" height="15" fill="rgb(251,202,51)"/><text x="35.5907%" y="319.50">__neti..</text></g><g><title>ip_rcv (29 samples, 4.60%)</title><rect x="35.4992%" y="293" width="4.5959%" height="15" fill="rgb(254,216,34)"/><text x="35.7492%" y="303.50">ip_rcv</text></g><g><title>ip_rcv_finish (2 samples, 0.32%)</title><rect x="39.7781%" y="277" width="0.3170%" height="15" fill="rgb(251,32,27)"/><text x="40.0281%" y="287.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.16%)</title><rect x="39.9366%" y="261" width="0.1585%" height="15" fill="rgb(208,127,28)"/><text x="40.1866%" y="271.50"></text></g><g><title>__ip_queue_xmit (40 samples, 6.34%)</title><rect x="33.9144%" y="453" width="6.3391%" height="15" fill="rgb(224,137,22)"/><text x="34.1644%" y="463.50">__ip_que..</text></g><g><title>ip_output (36 samples, 5.71%)</title><rect x="34.5483%" y="437" width="5.7052%" height="15" fill="rgb(254,70,32)"/><text x="34.7983%" y="447.50">ip_outp..</text></g><g><title>ip_finish_output (1 samples, 0.16%)</title><rect x="40.0951%" y="421" width="0.1585%" height="15" fill="rgb(229,75,37)"/><text x="40.3451%" y="431.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="40.0951%" y="405" width="0.1585%" height="15" fill="rgb(252,64,23)"/><text x="40.3451%" y="415.50"></text></g><g><title>__tcp_transmit_skb (44 samples, 6.97%)</title><rect x="33.4390%" y="469" width="6.9731%" height="15" fill="rgb(232,162,48)"/><text x="33.6890%" y="479.50">__tcp_tra..</text></g><g><title>skb_clone (1 samples, 0.16%)</title><rect x="40.2536%" y="453" width="0.1585%" height="15" fill="rgb(246,160,12)"/><text x="40.5036%" y="463.50"></text></g><g><title>ktime_get (1 samples, 0.16%)</title><rect x="40.4120%" y="469" width="0.1585%" height="15" fill="rgb(247,166,0)"/><text x="40.6620%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (47 samples, 7.45%)</title><rect x="33.2805%" y="501" width="7.4485%" height="15" fill="rgb(249,219,21)"/><text x="33.5305%" y="511.50">__tcp_push..</text></g><g><title>tcp_write_xmit (47 samples, 7.45%)</title><rect x="33.2805%" y="485" width="7.4485%" height="15" fill="rgb(205,209,3)"/><text x="33.5305%" y="495.50">tcp_write_..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.16%)</title><rect x="40.5705%" y="469" width="0.1585%" height="15" fill="rgb(243,44,1)"/><text x="40.8205%" y="479.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.16%)</title><rect x="40.5705%" y="453" width="0.1585%" height="15" fill="rgb(206,159,16)"/><text x="40.8205%" y="463.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.16%)</title><rect x="40.7290%" y="501" width="0.1585%" height="15" fill="rgb(244,77,30)"/><text x="40.9790%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.16%)</title><rect x="41.0460%" y="469" width="0.1585%" height="15" fill="rgb(218,69,12)"/><text x="41.2960%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.48%)</title><rect x="40.8875%" y="501" width="0.4754%" height="15" fill="rgb(212,87,7)"/><text x="41.1375%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.32%)</title><rect x="41.0460%" y="485" width="0.3170%" height="15" fill="rgb(245,114,25)"/><text x="41.2960%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.16%)</title><rect x="41.2044%" y="469" width="0.1585%" height="15" fill="rgb(210,61,42)"/><text x="41.4544%" y="479.50"></text></g><g><title>memcg_kmem_put_cache (1 samples, 0.16%)</title><rect x="41.2044%" y="453" width="0.1585%" height="15" fill="rgb(211,52,33)"/><text x="41.4544%" y="463.50"></text></g><g><title>sock_sendmsg (54 samples, 8.56%)</title><rect x="32.9635%" y="549" width="8.5578%" height="15" fill="rgb(234,58,33)"/><text x="33.2135%" y="559.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (54 samples, 8.56%)</title><rect x="32.9635%" y="533" width="8.5578%" height="15" fill="rgb(220,115,36)"/><text x="33.2135%" y="543.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (52 samples, 8.24%)</title><rect x="33.2805%" y="517" width="8.2409%" height="15" fill="rgb(243,153,54)"/><text x="33.5305%" y="527.50">tcp_sendmsg..</text></g><g><title>tcp_send_mss (1 samples, 0.16%)</title><rect x="41.3629%" y="501" width="0.1585%" height="15" fill="rgb(251,47,18)"/><text x="41.6129%" y="511.50"></text></g><g><title>tcp_current_mss (1 samples, 0.16%)</title><rect x="41.3629%" y="485" width="0.1585%" height="15" fill="rgb(242,102,42)"/><text x="41.6129%" y="495.50"></text></g><g><title>ipv4_mtu (1 samples, 0.16%)</title><rect x="41.3629%" y="469" width="0.1585%" height="15" fill="rgb(234,31,38)"/><text x="41.6129%" y="479.50"></text></g><g><title>do_syscall_64 (56 samples, 8.87%)</title><rect x="32.8051%" y="597" width="8.8748%" height="15" fill="rgb(221,117,51)"/><text x="33.0551%" y="607.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (56 samples, 8.87%)</title><rect x="32.8051%" y="581" width="8.8748%" height="15" fill="rgb(212,20,18)"/><text x="33.0551%" y="591.50">__x64_sys_sen..</text></g><g><title>__sys_sendto (56 samples, 8.87%)</title><rect x="32.8051%" y="565" width="8.8748%" height="15" fill="rgb(245,133,36)"/><text x="33.0551%" y="575.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="41.5214%" y="549" width="0.1585%" height="15" fill="rgb(212,6,19)"/><text x="41.7714%" y="559.50"></text></g><g><title>__fget_light (1 samples, 0.16%)</title><rect x="41.5214%" y="533" width="0.1585%" height="15" fill="rgb(218,1,36)"/><text x="41.7714%" y="543.50"></text></g><g><title>__fget_files (1 samples, 0.16%)</title><rect x="41.5214%" y="517" width="0.1585%" height="15" fill="rgb(246,84,54)"/><text x="41.7714%" y="527.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.16%)</title><rect x="41.5214%" y="501" width="0.1585%" height="15" fill="rgb(242,110,6)"/><text x="41.7714%" y="511.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (87 samples, 13.79%)</title><rect x="28.0507%" y="725" width="13.7876%" height="15" fill="rgb(214,47,5)"/><text x="28.3007%" y="735.50">&lt;decor::Shim as msql_..</text></g><g><title>mysql::conn::Conn::_query (83 samples, 13.15%)</title><rect x="28.6846%" y="709" width="13.1537%" height="15" fill="rgb(218,159,25)"/><text x="28.9346%" y="719.50">mysql::conn::Conn::_..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (58 samples, 9.19%)</title><rect x="32.6466%" y="693" width="9.1918%" height="15" fill="rgb(215,211,28)"/><text x="32.8966%" y="703.50">mysql_common:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (58 samples, 9.19%)</title><rect x="32.6466%" y="677" width="9.1918%" height="15" fill="rgb(238,59,32)"/><text x="32.8966%" y="687.50">std::io::buff..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 9.19%)</title><rect x="32.6466%" y="661" width="9.1918%" height="15" fill="rgb(226,82,3)"/><text x="32.8966%" y="671.50">&lt;std::net::tc..</text></g><g><title>std::sys_common::net::TcpStream::write (58 samples, 9.19%)</title><rect x="32.6466%" y="645" width="9.1918%" height="15" fill="rgb(240,164,32)"/><text x="32.8966%" y="655.50">std::sys_comm..</text></g><g><title>__libc_send (58 samples, 9.19%)</title><rect x="32.6466%" y="629" width="9.1918%" height="15" fill="rgb(232,46,7)"/><text x="32.8966%" y="639.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (57 samples, 9.03%)</title><rect x="32.8051%" y="613" width="9.0333%" height="15" fill="rgb(229,129,53)"/><text x="33.0551%" y="623.50">entry_SYSCALL..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="41.6799%" y="597" width="0.1585%" height="15" fill="rgb(234,188,29)"/><text x="41.9299%" y="607.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.16%)</title><rect x="41.8384%" y="725" width="0.1585%" height="15" fill="rgb(246,141,4)"/><text x="42.0884%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.16%)</title><rect x="41.8384%" y="709" width="0.1585%" height="15" fill="rgb(229,23,39)"/><text x="42.0884%" y="719.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="42.6307%" y="517" width="0.1585%" height="15" fill="rgb(206,12,3)"/><text x="42.8807%" y="527.50"></text></g><g><title>skb_release_head_state (1 samples, 0.16%)</title><rect x="42.6307%" y="501" width="0.1585%" height="15" fill="rgb(252,226,20)"/><text x="42.8807%" y="511.50"></text></g><g><title>dst_release (1 samples, 0.16%)</title><rect x="42.6307%" y="485" width="0.1585%" height="15" fill="rgb(216,123,35)"/><text x="42.8807%" y="495.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.16%)</title><rect x="42.7892%" y="485" width="0.1585%" height="15" fill="rgb(212,68,40)"/><text x="43.0392%" y="495.50"></text></g><g><title>should_failslab (1 samples, 0.16%)</title><rect x="42.7892%" y="469" width="0.1585%" height="15" fill="rgb(254,125,32)"/><text x="43.0392%" y="479.50"></text></g><g><title>__tcp_send_ack.part.0 (2 samples, 0.32%)</title><rect x="42.7892%" y="517" width="0.3170%" height="15" fill="rgb(253,97,22)"/><text x="43.0392%" y="527.50"></text></g><g><title>__alloc_skb (2 samples, 0.32%)</title><rect x="42.7892%" y="501" width="0.3170%" height="15" fill="rgb(241,101,14)"/><text x="43.0392%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.16%)</title><rect x="42.9477%" y="485" width="0.1585%" height="15" fill="rgb(238,103,29)"/><text x="43.1977%" y="495.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.16%)</title><rect x="43.1062%" y="453" width="0.1585%" height="15" fill="rgb(233,195,47)"/><text x="43.3562%" y="463.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.16%)</title><rect x="43.1062%" y="437" width="0.1585%" height="15" fill="rgb(246,218,30)"/><text x="43.3562%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.16%)</title><rect x="43.1062%" y="421" width="0.1585%" height="15" fill="rgb(219,145,47)"/><text x="43.3562%" y="431.50"></text></g><g><title>__sock_wfree (1 samples, 0.16%)</title><rect x="43.1062%" y="405" width="0.1585%" height="15" fill="rgb(243,12,26)"/><text x="43.3562%" y="415.50"></text></g><g><title>__kfree_skb (1 samples, 0.16%)</title><rect x="43.2647%" y="213" width="0.1585%" height="15" fill="rgb(214,87,16)"/><text x="43.5147%" y="223.50"></text></g><g><title>skb_release_data (1 samples, 0.16%)</title><rect x="43.2647%" y="197" width="0.1585%" height="15" fill="rgb(208,99,42)"/><text x="43.5147%" y="207.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.48%)</title><rect x="43.1062%" y="469" width="0.4754%" height="15" fill="rgb(253,99,2)"/><text x="43.3562%" y="479.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.32%)</title><rect x="43.2647%" y="453" width="0.3170%" height="15" fill="rgb(220,168,23)"/><text x="43.5147%" y="463.50"></text></g><g><title>do_softirq (2 samples, 0.32%)</title><rect x="43.2647%" y="437" width="0.3170%" height="15" fill="rgb(242,38,24)"/><text x="43.5147%" y="447.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.32%)</title><rect x="43.2647%" y="421" width="0.3170%" height="15" fill="rgb(225,182,9)"/><text x="43.5147%" y="431.50"></text></g><g><title>__do_softirq (2 samples, 0.32%)</title><rect x="43.2647%" y="405" width="0.3170%" height="15" fill="rgb(243,178,37)"/><text x="43.5147%" y="415.50"></text></g><g><title>net_rx_action (2 samples, 0.32%)</title><rect x="43.2647%" y="389" width="0.3170%" height="15" fill="rgb(232,139,19)"/><text x="43.5147%" y="399.50"></text></g><g><title>process_backlog (2 samples, 0.32%)</title><rect x="43.2647%" y="373" width="0.3170%" height="15" fill="rgb(225,201,24)"/><text x="43.5147%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.32%)</title><rect x="43.2647%" y="357" width="0.3170%" height="15" fill="rgb(221,47,46)"/><text x="43.5147%" y="367.50"></text></g><g><title>ip_rcv (2 samples, 0.32%)</title><rect x="43.2647%" y="341" width="0.3170%" height="15" fill="rgb(249,23,13)"/><text x="43.5147%" y="351.50"></text></g><g><title>ip_local_deliver (2 samples, 0.32%)</title><rect x="43.2647%" y="325" width="0.3170%" height="15" fill="rgb(219,9,5)"/><text x="43.5147%" y="335.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.32%)</title><rect x="43.2647%" y="309" width="0.3170%" height="15" fill="rgb(254,171,16)"/><text x="43.5147%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.32%)</title><rect x="43.2647%" y="293" width="0.3170%" height="15" fill="rgb(230,171,20)"/><text x="43.5147%" y="303.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.32%)</title><rect x="43.2647%" y="277" width="0.3170%" height="15" fill="rgb(210,71,41)"/><text x="43.5147%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.32%)</title><rect x="43.2647%" y="261" width="0.3170%" height="15" fill="rgb(206,173,20)"/><text x="43.5147%" y="271.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.32%)</title><rect x="43.2647%" y="245" width="0.3170%" height="15" fill="rgb(233,88,34)"/><text x="43.5147%" y="255.50"></text></g><g><title>tcp_ack (2 samples, 0.32%)</title><rect x="43.2647%" y="229" width="0.3170%" height="15" fill="rgb(223,209,46)"/><text x="43.5147%" y="239.50"></text></g><g><title>tcp_rack_update_reo_wnd (1 samples, 0.16%)</title><rect x="43.4231%" y="213" width="0.1585%" height="15" fill="rgb(250,43,18)"/><text x="43.6731%" y="223.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.63%)</title><rect x="43.1062%" y="517" width="0.6339%" height="15" fill="rgb(208,13,10)"/><text x="43.3562%" y="527.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.63%)</title><rect x="43.1062%" y="501" width="0.6339%" height="15" fill="rgb(212,200,36)"/><text x="43.3562%" y="511.50"></text></g><g><title>ip_output (4 samples, 0.63%)</title><rect x="43.1062%" y="485" width="0.6339%" height="15" fill="rgb(225,90,30)"/><text x="43.3562%" y="495.50"></text></g><g><title>ip_finish_output (1 samples, 0.16%)</title><rect x="43.5816%" y="469" width="0.1585%" height="15" fill="rgb(236,182,39)"/><text x="43.8316%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="43.5816%" y="453" width="0.1585%" height="15" fill="rgb(212,144,35)"/><text x="43.8316%" y="463.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="43.5816%" y="437" width="0.1585%" height="15" fill="rgb(228,63,44)"/><text x="43.8316%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.32%)</title><rect x="43.8986%" y="501" width="0.3170%" height="15" fill="rgb(228,109,6)"/><text x="44.1486%" y="511.50"></text></g><g><title>preempt_count_add (2 samples, 0.32%)</title><rect x="43.8986%" y="485" width="0.3170%" height="15" fill="rgb(238,117,24)"/><text x="44.1486%" y="495.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="44.0571%" y="469" width="0.1585%" height="15" fill="rgb(242,26,26)"/><text x="44.3071%" y="479.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.16%)</title><rect x="44.2155%" y="501" width="0.1585%" height="15" fill="rgb(221,92,48)"/><text x="44.4655%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="44.2155%" y="485" width="0.1585%" height="15" fill="rgb(209,209,32)"/><text x="44.4655%" y="495.50"></text></g><g><title>add_wait_queue (1 samples, 0.16%)</title><rect x="44.3740%" y="501" width="0.1585%" height="15" fill="rgb(221,70,22)"/><text x="44.6240%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="44.3740%" y="485" width="0.1585%" height="15" fill="rgb(248,145,5)"/><text x="44.6240%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="44.3740%" y="469" width="0.1585%" height="15" fill="rgb(226,116,26)"/><text x="44.6240%" y="479.50"></text></g><g><title>in_lock_functions (1 samples, 0.16%)</title><rect x="44.3740%" y="453" width="0.1585%" height="15" fill="rgb(244,5,17)"/><text x="44.6240%" y="463.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.16%)</title><rect x="44.6910%" y="437" width="0.1585%" height="15" fill="rgb(252,159,33)"/><text x="44.9410%" y="447.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="44.6910%" y="421" width="0.1585%" height="15" fill="rgb(206,71,0)"/><text x="44.9410%" y="431.50"></text></g><g><title>reweight_entity (1 samples, 0.16%)</title><rect x="45.0079%" y="405" width="0.1585%" height="15" fill="rgb(233,118,54)"/><text x="45.2579%" y="415.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.63%)</title><rect x="44.8494%" y="437" width="0.6339%" height="15" fill="rgb(234,83,48)"/><text x="45.0994%" y="447.50"></text></g><g><title>dequeue_entity (4 samples, 0.63%)</title><rect x="44.8494%" y="421" width="0.6339%" height="15" fill="rgb(228,3,54)"/><text x="45.0994%" y="431.50"></text></g><g><title>update_load_avg (2 samples, 0.32%)</title><rect x="45.1664%" y="405" width="0.3170%" height="15" fill="rgb(226,155,13)"/><text x="45.4164%" y="415.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.32%)</title><rect x="45.1664%" y="389" width="0.3170%" height="15" fill="rgb(241,28,37)"/><text x="45.4164%" y="399.50"></text></g><g><title>finish_task_switch (1 samples, 0.16%)</title><rect x="45.4834%" y="437" width="0.1585%" height="15" fill="rgb(233,93,10)"/><text x="45.7334%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.16%)</title><rect x="45.4834%" y="421" width="0.1585%" height="15" fill="rgb(225,113,19)"/><text x="45.7334%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.16%)</title><rect x="45.4834%" y="405" width="0.1585%" height="15" fill="rgb(241,2,18)"/><text x="45.7334%" y="415.50"></text></g><g><title>native_write_msr (1 samples, 0.16%)</title><rect x="45.4834%" y="389" width="0.1585%" height="15" fill="rgb(228,207,21)"/><text x="45.7334%" y="399.50"></text></g><g><title>psi_task_change (3 samples, 0.48%)</title><rect x="45.6418%" y="437" width="0.4754%" height="15" fill="rgb(213,211,35)"/><text x="45.8918%" y="447.50"></text></g><g><title>psi_group_change (2 samples, 0.32%)</title><rect x="45.8003%" y="421" width="0.3170%" height="15" fill="rgb(209,83,10)"/><text x="46.0503%" y="431.50"></text></g><g><title>record_times (1 samples, 0.16%)</title><rect x="45.9588%" y="405" width="0.1585%" height="15" fill="rgb(209,164,1)"/><text x="46.2088%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="45.9588%" y="389" width="0.1585%" height="15" fill="rgb(213,184,43)"/><text x="46.2088%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.16%)</title><rect x="45.9588%" y="373" width="0.1585%" height="15" fill="rgb(231,61,34)"/><text x="46.2088%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.16%)</title><rect x="45.9588%" y="357" width="0.1585%" height="15" fill="rgb(235,75,3)"/><text x="46.2088%" y="367.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.16%)</title><rect x="46.1173%" y="437" width="0.1585%" height="15" fill="rgb(220,106,47)"/><text x="46.3673%" y="447.50"></text></g><g><title>put_prev_entity (1 samples, 0.16%)</title><rect x="46.1173%" y="421" width="0.1585%" height="15" fill="rgb(210,196,33)"/><text x="46.3673%" y="431.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.16%)</title><rect x="46.2758%" y="437" width="0.1585%" height="15" fill="rgb(229,154,42)"/><text x="46.5258%" y="447.50"></text></g><g><title>sk_wait_data (18 samples, 2.85%)</title><rect x="43.7401%" y="517" width="2.8526%" height="15" fill="rgb(228,114,26)"/><text x="43.9901%" y="527.50">sk..</text></g><g><title>wait_woken (13 samples, 2.06%)</title><rect x="44.5325%" y="501" width="2.0602%" height="15" fill="rgb(208,144,1)"/><text x="44.7825%" y="511.50">w..</text></g><g><title>schedule_timeout (12 samples, 1.90%)</title><rect x="44.6910%" y="485" width="1.9017%" height="15" fill="rgb(239,112,37)"/><text x="44.9410%" y="495.50">s..</text></g><g><title>schedule (12 samples, 1.90%)</title><rect x="44.6910%" y="469" width="1.9017%" height="15" fill="rgb(210,96,50)"/><text x="44.9410%" y="479.50">s..</text></g><g><title>__schedule (12 samples, 1.90%)</title><rect x="44.6910%" y="453" width="1.9017%" height="15" fill="rgb(222,178,2)"/><text x="44.9410%" y="463.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.16%)</title><rect x="46.4342%" y="437" width="0.1585%" height="15" fill="rgb(226,74,18)"/><text x="46.6842%" y="447.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.16%)</title><rect x="46.4342%" y="421" width="0.1585%" height="15" fill="rgb(225,67,54)"/><text x="46.6842%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.32%)</title><rect x="46.5927%" y="517" width="0.3170%" height="15" fill="rgb(251,92,32)"/><text x="46.8427%" y="527.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.32%)</title><rect x="46.5927%" y="501" width="0.3170%" height="15" fill="rgb(228,149,22)"/><text x="46.8427%" y="511.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.32%)</title><rect x="46.5927%" y="485" width="0.3170%" height="15" fill="rgb(243,54,13)"/><text x="46.8427%" y="495.50"></text></g><g><title>__check_object_size (2 samples, 0.32%)</title><rect x="46.5927%" y="469" width="0.3170%" height="15" fill="rgb(243,180,28)"/><text x="46.8427%" y="479.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="46.7512%" y="453" width="0.1585%" height="15" fill="rgb(208,167,24)"/><text x="47.0012%" y="463.50"></text></g><g><title>do_syscall_64 (31 samples, 4.91%)</title><rect x="42.1553%" y="597" width="4.9128%" height="15" fill="rgb(245,73,45)"/><text x="42.4053%" y="607.50">do_sys..</text></g><g><title>__x64_sys_recvfrom (30 samples, 4.75%)</title><rect x="42.3138%" y="581" width="4.7544%" height="15" fill="rgb(237,203,48)"/><text x="42.5638%" y="591.50">__x64_..</text></g><g><title>__sys_recvfrom (30 samples, 4.75%)</title><rect x="42.3138%" y="565" width="4.7544%" height="15" fill="rgb(211,197,16)"/><text x="42.5638%" y="575.50">__sys_..</text></g><g><title>inet_recvmsg (30 samples, 4.75%)</title><rect x="42.3138%" y="549" width="4.7544%" height="15" fill="rgb(243,99,51)"/><text x="42.5638%" y="559.50">inet_r..</text></g><g><title>tcp_recvmsg (30 samples, 4.75%)</title><rect x="42.3138%" y="533" width="4.7544%" height="15" fill="rgb(215,123,29)"/><text x="42.5638%" y="543.50">tcp_re..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.16%)</title><rect x="46.9097%" y="517" width="0.1585%" height="15" fill="rgb(239,186,37)"/><text x="47.1597%" y="527.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.16%)</title><rect x="46.9097%" y="501" width="0.1585%" height="15" fill="rgb(252,136,39)"/><text x="47.1597%" y="511.50"></text></g><g><title>ktime_get (1 samples, 0.16%)</title><rect x="46.9097%" y="485" width="0.1585%" height="15" fill="rgb(223,213,32)"/><text x="47.1597%" y="495.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 5.39%)</title><rect x="42.1553%" y="693" width="5.3883%" height="15" fill="rgb(233,115,5)"/><text x="42.4053%" y="703.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 5.39%)</title><rect x="42.1553%" y="677" width="5.3883%" height="15" fill="rgb(207,226,44)"/><text x="42.4053%" y="687.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 5.39%)</title><rect x="42.1553%" y="661" width="5.3883%" height="15" fill="rgb(208,126,0)"/><text x="42.4053%" y="671.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 5.39%)</title><rect x="42.1553%" y="645" width="5.3883%" height="15" fill="rgb(244,66,21)"/><text x="42.4053%" y="655.50">std::sy..</text></g><g><title>__libc_recv (34 samples, 5.39%)</title><rect x="42.1553%" y="629" width="5.3883%" height="15" fill="rgb(222,97,12)"/><text x="42.4053%" y="639.50">__libc_..</text></g><g><title>entry_SYSCALL_64 (34 samples, 5.39%)</title><rect x="42.1553%" y="613" width="5.3883%" height="15" fill="rgb(219,213,19)"/><text x="42.4053%" y="623.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.48%)</title><rect x="47.0681%" y="597" width="0.4754%" height="15" fill="rgb(252,169,30)"/><text x="47.3181%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.48%)</title><rect x="47.5436%" y="693" width="0.4754%" height="15" fill="rgb(206,32,51)"/><text x="47.7936%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 6.18%)</title><rect x="42.1553%" y="709" width="6.1807%" height="15" fill="rgb(250,172,42)"/><text x="42.4053%" y="719.50">&lt;std::io..</text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (2 samples, 0.32%)</title><rect x="48.0190%" y="693" width="0.3170%" height="15" fill="rgb(209,34,43)"/><text x="48.2690%" y="703.50"></text></g><g><title>__libc_recv (2 samples, 0.32%)</title><rect x="48.0190%" y="677" width="0.3170%" height="15" fill="rgb(223,11,35)"/><text x="48.2690%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.32%)</title><rect x="48.0190%" y="661" width="0.3170%" height="15" fill="rgb(251,219,26)"/><text x="48.2690%" y="671.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.16%)</title><rect x="48.3360%" y="709" width="0.1585%" height="15" fill="rgb(231,119,3)"/><text x="48.5860%" y="719.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (43 samples, 6.81%)</title><rect x="41.9968%" y="725" width="6.8146%" height="15" fill="rgb(216,97,11)"/><text x="42.2468%" y="735.50">msql_srv:..</text></g><g><title>msql_srv::packet::packet (2 samples, 0.32%)</title><rect x="48.4945%" y="709" width="0.3170%" height="15" fill="rgb(223,59,9)"/><text x="48.7445%" y="719.50"></text></g><g><title>inet_sendmsg (1 samples, 0.16%)</title><rect x="48.9699%" y="581" width="0.1585%" height="15" fill="rgb(233,93,31)"/><text x="49.2199%" y="591.50"></text></g><g><title>inet_send_prepare (1 samples, 0.16%)</title><rect x="48.9699%" y="565" width="0.1585%" height="15" fill="rgb(239,81,33)"/><text x="49.2199%" y="575.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.16%)</title><rect x="49.1284%" y="581" width="0.1585%" height="15" fill="rgb(213,120,34)"/><text x="49.3784%" y="591.50"></text></g><g><title>__ip_finish_output (1 samples, 0.16%)</title><rect x="49.6038%" y="469" width="0.1585%" height="15" fill="rgb(243,49,53)"/><text x="49.8538%" y="479.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.48%)</title><rect x="49.9208%" y="453" width="0.4754%" height="15" fill="rgb(247,216,33)"/><text x="50.1708%" y="463.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.32%)</title><rect x="50.0792%" y="437" width="0.3170%" height="15" fill="rgb(226,26,14)"/><text x="50.3292%" y="447.50"></text></g><g><title>debug_smp_processor_id (2 samples, 0.32%)</title><rect x="50.5547%" y="373" width="0.3170%" height="15" fill="rgb(215,49,53)"/><text x="50.8047%" y="383.50"></text></g><g><title>irqtime_account_irq (4 samples, 0.63%)</title><rect x="50.5547%" y="389" width="0.6339%" height="15" fill="rgb(245,162,40)"/><text x="50.8047%" y="399.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.32%)</title><rect x="50.8716%" y="373" width="0.3170%" height="15" fill="rgb(229,68,17)"/><text x="51.1216%" y="383.50"></text></g><g><title>sched_clock (2 samples, 0.32%)</title><rect x="50.8716%" y="357" width="0.3170%" height="15" fill="rgb(213,182,10)"/><text x="51.1216%" y="367.50"></text></g><g><title>native_sched_clock (2 samples, 0.32%)</title><rect x="50.8716%" y="341" width="0.3170%" height="15" fill="rgb(245,125,30)"/><text x="51.1216%" y="351.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.16%)</title><rect x="51.1886%" y="341" width="0.1585%" height="15" fill="rgb(232,202,2)"/><text x="51.4386%" y="351.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.16%)</title><rect x="51.5055%" y="261" width="0.1585%" height="15" fill="rgb(237,140,51)"/><text x="51.7555%" y="271.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.16%)</title><rect x="51.6640%" y="261" width="0.1585%" height="15" fill="rgb(236,157,25)"/><text x="51.9140%" y="271.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="51.6640%" y="245" width="0.1585%" height="15" fill="rgb(219,209,0)"/><text x="51.9140%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.16%)</title><rect x="52.6149%" y="165" width="0.1585%" height="15" fill="rgb(240,116,54)"/><text x="52.8649%" y="175.50"></text></g><g><title>preempt_count_add (1 samples, 0.16%)</title><rect x="52.6149%" y="149" width="0.1585%" height="15" fill="rgb(216,10,36)"/><text x="52.8649%" y="159.50"></text></g><g><title>enqueue_task (1 samples, 0.16%)</title><rect x="52.7734%" y="165" width="0.1585%" height="15" fill="rgb(222,72,44)"/><text x="53.0234%" y="175.50"></text></g><g><title>psi_task_change (1 samples, 0.16%)</title><rect x="52.7734%" y="149" width="0.1585%" height="15" fill="rgb(232,159,9)"/><text x="53.0234%" y="159.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.63%)</title><rect x="52.9319%" y="165" width="0.6339%" height="15" fill="rgb(210,39,32)"/><text x="53.1819%" y="175.50"></text></g><g><title>enqueue_entity (4 samples, 0.63%)</title><rect x="52.9319%" y="149" width="0.6339%" height="15" fill="rgb(216,194,45)"/><text x="53.1819%" y="159.50"></text></g><g><title>update_load_avg (2 samples, 0.32%)</title><rect x="53.2488%" y="133" width="0.3170%" height="15" fill="rgb(218,18,35)"/><text x="53.4988%" y="143.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.32%)</title><rect x="53.2488%" y="117" width="0.3170%" height="15" fill="rgb(207,83,51)"/><text x="53.4988%" y="127.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.48%)</title><rect x="53.5658%" y="165" width="0.4754%" height="15" fill="rgb(225,63,43)"/><text x="53.8158%" y="175.50"></text></g><g><title>check_preempt_curr (3 samples, 0.48%)</title><rect x="53.5658%" y="149" width="0.4754%" height="15" fill="rgb(207,57,36)"/><text x="53.8158%" y="159.50"></text></g><g><title>resched_curr (3 samples, 0.48%)</title><rect x="53.5658%" y="133" width="0.4754%" height="15" fill="rgb(216,99,33)"/><text x="53.8158%" y="143.50"></text></g><g><title>sock_def_readable (17 samples, 2.69%)</title><rect x="51.9810%" y="229" width="2.6941%" height="15" fill="rgb(225,42,16)"/><text x="52.2310%" y="239.50">so..</text></g><g><title>__wake_up_common_lock (16 samples, 2.54%)</title><rect x="52.1395%" y="213" width="2.5357%" height="15" fill="rgb(220,201,45)"/><text x="52.3895%" y="223.50">__..</text></g><g><title>__wake_up_common (16 samples, 2.54%)</title><rect x="52.1395%" y="197" width="2.5357%" height="15" fill="rgb(225,33,4)"/><text x="52.3895%" y="207.50">__..</text></g><g><title>try_to_wake_up (16 samples, 2.54%)</title><rect x="52.1395%" y="181" width="2.5357%" height="15" fill="rgb(224,33,50)"/><text x="52.3895%" y="191.50">tr..</text></g><g><title>update_rq_clock (4 samples, 0.63%)</title><rect x="54.0412%" y="165" width="0.6339%" height="15" fill="rgb(246,198,51)"/><text x="54.2912%" y="175.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.32%)</title><rect x="54.3582%" y="149" width="0.3170%" height="15" fill="rgb(205,22,4)"/><text x="54.6082%" y="159.50"></text></g><g><title>sched_clock (1 samples, 0.16%)</title><rect x="54.5166%" y="133" width="0.1585%" height="15" fill="rgb(206,3,8)"/><text x="54.7666%" y="143.50"></text></g><g><title>native_sched_clock (1 samples, 0.16%)</title><rect x="54.5166%" y="117" width="0.1585%" height="15" fill="rgb(251,23,15)"/><text x="54.7666%" y="127.50"></text></g><g><title>kfree (1 samples, 0.16%)</title><rect x="54.9921%" y="197" width="0.1585%" height="15" fill="rgb(252,88,28)"/><text x="55.2421%" y="207.50"></text></g><g><title>__kfree_skb (3 samples, 0.48%)</title><rect x="54.9921%" y="213" width="0.4754%" height="15" fill="rgb(212,127,14)"/><text x="55.2421%" y="223.50"></text></g><g><title>skb_release_data (2 samples, 0.32%)</title><rect x="55.1506%" y="197" width="0.3170%" height="15" fill="rgb(247,145,37)"/><text x="55.4006%" y="207.50"></text></g><g><title>rb_first (1 samples, 0.16%)</title><rect x="55.4675%" y="213" width="0.1585%" height="15" fill="rgb(209,117,53)"/><text x="55.7175%" y="223.50"></text></g><g><title>tcp_ack (7 samples, 1.11%)</title><rect x="54.6751%" y="229" width="1.1094%" height="15" fill="rgb(212,90,42)"/><text x="54.9251%" y="239.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.16%)</title><rect x="55.6260%" y="213" width="0.1585%" height="15" fill="rgb(218,164,37)"/><text x="55.8760%" y="223.50"></text></g><g><title>ip_local_deliver (29 samples, 4.60%)</title><rect x="51.3471%" y="325" width="4.5959%" height="15" fill="rgb(246,65,34)"/><text x="51.5971%" y="335.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (29 samples, 4.60%)</title><rect x="51.3471%" y="309" width="4.5959%" height="15" fill="rgb(231,100,33)"/><text x="51.5971%" y="319.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (29 samples, 4.60%)</title><rect x="51.3471%" y="293" width="4.5959%" height="15" fill="rgb(228,126,14)"/><text x="51.5971%" y="303.50">ip_pr..</text></g><g><title>tcp_v4_rcv (29 samples, 4.60%)</title><rect x="51.3471%" y="277" width="4.5959%" height="15" fill="rgb(215,173,21)"/><text x="51.5971%" y="287.50">tcp_v..</text></g><g><title>tcp_v4_do_rcv (26 samples, 4.12%)</title><rect x="51.8225%" y="261" width="4.1204%" height="15" fill="rgb(210,6,40)"/><text x="52.0725%" y="271.50">tcp_..</text></g><g><title>tcp_rcv_established (26 samples, 4.12%)</title><rect x="51.8225%" y="245" width="4.1204%" height="15" fill="rgb(212,48,18)"/><text x="52.0725%" y="255.50">tcp_..</text></g><g><title>tcp_queue_rcv (1 samples, 0.16%)</title><rect x="55.7845%" y="229" width="0.1585%" height="15" fill="rgb(230,214,11)"/><text x="56.0345%" y="239.50"></text></g><g><title>do_softirq (36 samples, 5.71%)</title><rect x="50.3962%" y="437" width="5.7052%" height="15" fill="rgb(254,105,39)"/><text x="50.6462%" y="447.50">do_soft..</text></g><g><title>do_softirq_own_stack (36 samples, 5.71%)</title><rect x="50.3962%" y="421" width="5.7052%" height="15" fill="rgb(245,158,5)"/><text x="50.6462%" y="431.50">do_soft..</text></g><g><title>__do_softirq (35 samples, 5.55%)</title><rect x="50.5547%" y="405" width="5.5468%" height="15" fill="rgb(249,208,11)"/><text x="50.8047%" y="415.50">__do_so..</text></g><g><title>net_rx_action (31 samples, 4.91%)</title><rect x="51.1886%" y="389" width="4.9128%" height="15" fill="rgb(210,39,28)"/><text x="51.4386%" y="399.50">net_rx..</text></g><g><title>process_backlog (31 samples, 4.91%)</title><rect x="51.1886%" y="373" width="4.9128%" height="15" fill="rgb(211,56,53)"/><text x="51.4386%" y="383.50">proces..</text></g><g><title>__netif_receive_skb_one_core (31 samples, 4.91%)</title><rect x="51.1886%" y="357" width="4.9128%" height="15" fill="rgb(226,201,30)"/><text x="51.4386%" y="367.50">__neti..</text></g><g><title>ip_rcv (30 samples, 4.75%)</title><rect x="51.3471%" y="341" width="4.7544%" height="15" fill="rgb(239,101,34)"/><text x="51.5971%" y="351.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.16%)</title><rect x="55.9429%" y="325" width="0.1585%" height="15" fill="rgb(226,209,5)"/><text x="56.1929%" y="335.50"></text></g><g><title>ip_finish_output2 (41 samples, 6.50%)</title><rect x="49.7623%" y="469" width="6.4976%" height="15" fill="rgb(250,105,47)"/><text x="50.0123%" y="479.50">ip_finish..</text></g><g><title>__local_bh_enable_ip (37 samples, 5.86%)</title><rect x="50.3962%" y="453" width="5.8637%" height="15" fill="rgb(230,72,3)"/><text x="50.6462%" y="463.50">__local..</text></g><g><title>preempt_count_sub (1 samples, 0.16%)</title><rect x="56.1014%" y="437" width="0.1585%" height="15" fill="rgb(232,218,39)"/><text x="56.3514%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (43 samples, 6.81%)</title><rect x="49.6038%" y="549" width="6.8146%" height="15" fill="rgb(248,166,6)"/><text x="49.8538%" y="559.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (43 samples, 6.81%)</title><rect x="49.6038%" y="533" width="6.8146%" height="15" fill="rgb(247,89,20)"/><text x="49.8538%" y="543.50">tcp_write..</text></g><g><title>__tcp_transmit_skb (43 samples, 6.81%)</title><rect x="49.6038%" y="517" width="6.8146%" height="15" fill="rgb(248,130,54)"/><text x="49.8538%" y="527.50">__tcp_tra..</text></g><g><title>__ip_queue_xmit (43 samples, 6.81%)</title><rect x="49.6038%" y="501" width="6.8146%" height="15" fill="rgb(234,196,4)"/><text x="49.8538%" y="511.50">__ip_queu..</text></g><g><title>ip_output (43 samples, 6.81%)</title><rect x="49.6038%" y="485" width="6.8146%" height="15" fill="rgb(250,143,31)"/><text x="49.8538%" y="495.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.16%)</title><rect x="56.2599%" y="469" width="0.1585%" height="15" fill="rgb(211,110,34)"/><text x="56.5099%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="56.2599%" y="453" width="0.1585%" height="15" fill="rgb(215,124,48)"/><text x="56.5099%" y="463.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.16%)</title><rect x="56.2599%" y="437" width="0.1585%" height="15" fill="rgb(216,46,13)"/><text x="56.5099%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.32%)</title><rect x="56.4184%" y="549" width="0.3170%" height="15" fill="rgb(205,184,25)"/><text x="56.6684%" y="559.50"></text></g><g><title>__alloc_skb (2 samples, 0.32%)</title><rect x="56.4184%" y="533" width="0.3170%" height="15" fill="rgb(228,1,10)"/><text x="56.6684%" y="543.50"></text></g><g><title>__ksize (1 samples, 0.16%)</title><rect x="56.5769%" y="517" width="0.1585%" height="15" fill="rgb(213,116,27)"/><text x="56.8269%" y="527.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.32%)</title><rect x="56.7353%" y="549" width="0.3170%" height="15" fill="rgb(241,95,50)"/><text x="56.9853%" y="559.50"></text></g><g><title>skb_entail (1 samples, 0.16%)</title><rect x="57.0523%" y="549" width="0.1585%" height="15" fill="rgb(238,48,32)"/><text x="57.3023%" y="559.50"></text></g><g><title>tcp_send_mss (1 samples, 0.16%)</title><rect x="57.2108%" y="549" width="0.1585%" height="15" fill="rgb(235,113,49)"/><text x="57.4608%" y="559.50"></text></g><g><title>tcp_current_mss (1 samples, 0.16%)</title><rect x="57.2108%" y="533" width="0.1585%" height="15" fill="rgb(205,127,43)"/><text x="57.4608%" y="543.50"></text></g><g><title>do_syscall_64 (54 samples, 8.56%)</title><rect x="48.9699%" y="645" width="8.5578%" height="15" fill="rgb(250,162,2)"/><text x="49.2199%" y="655.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (54 samples, 8.56%)</title><rect x="48.9699%" y="629" width="8.5578%" height="15" fill="rgb(220,13,41)"/><text x="49.2199%" y="639.50">__x64_sys_se..</text></g><g><title>__sys_sendto (54 samples, 8.56%)</title><rect x="48.9699%" y="613" width="8.5578%" height="15" fill="rgb(249,221,25)"/><text x="49.2199%" y="623.50">__sys_sendto</text></g><g><title>sock_sendmsg (54 samples, 8.56%)</title><rect x="48.9699%" y="597" width="8.5578%" height="15" fill="rgb(215,208,19)"/><text x="49.2199%" y="607.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (52 samples, 8.24%)</title><rect x="49.2868%" y="581" width="8.2409%" height="15" fill="rgb(236,175,2)"/><text x="49.5368%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (52 samples, 8.24%)</title><rect x="49.2868%" y="565" width="8.2409%" height="15" fill="rgb(241,52,2)"/><text x="49.5368%" y="575.50">tcp_sendmsg..</text></g><g><title>tcp_tx_timestamp (1 samples, 0.16%)</title><rect x="57.3693%" y="549" width="0.1585%" height="15" fill="rgb(248,140,14)"/><text x="57.6193%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (58 samples, 9.19%)</title><rect x="48.9699%" y="661" width="9.1918%" height="15" fill="rgb(253,22,42)"/><text x="49.2199%" y="671.50">entry_SYSCALL..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.63%)</title><rect x="57.5277%" y="645" width="0.6339%" height="15" fill="rgb(234,61,47)"/><text x="57.7777%" y="655.50"></text></g><g><title>__libc_send (59 samples, 9.35%)</title><rect x="48.9699%" y="677" width="9.3502%" height="15" fill="rgb(208,226,15)"/><text x="49.2199%" y="687.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="58.1616%" y="661" width="0.1585%" height="15" fill="rgb(217,221,4)"/><text x="58.4116%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (60 samples, 9.51%)</title><rect x="48.9699%" y="709" width="9.5087%" height="15" fill="rgb(212,174,34)"/><text x="49.2199%" y="719.50">&lt;std::net::tcp..</text></g><g><title>std::sys_common::net::TcpStream::write (60 samples, 9.51%)</title><rect x="48.9699%" y="693" width="9.5087%" height="15" fill="rgb(253,83,4)"/><text x="49.2199%" y="703.50">std::sys_commo..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.16%)</title><rect x="58.3201%" y="677" width="0.1585%" height="15" fill="rgb(250,195,49)"/><text x="58.5701%" y="687.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.16%)</title><rect x="58.3201%" y="661" width="0.1585%" height="15" fill="rgb(241,192,25)"/><text x="58.5701%" y="671.50"></text></g><g><title>decor::Shim::run_on_tcp (194 samples, 30.74%)</title><rect x="27.8922%" y="757" width="30.7448%" height="15" fill="rgb(208,124,10)"/><text x="28.1422%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (194 samples, 30.74%)</title><rect x="27.8922%" y="741" width="30.7448%" height="15" fill="rgb(222,33,0)"/><text x="28.1422%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (62 samples, 9.83%)</title><rect x="48.8114%" y="725" width="9.8257%" height="15" fill="rgb(234,209,28)"/><text x="49.0614%" y="735.50">std::io::buffe..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::consume (1 samples, 0.16%)</title><rect x="58.4786%" y="709" width="0.1585%" height="15" fill="rgb(224,11,23)"/><text x="58.7286%" y="719.50"></text></g><g><title>__GI___clone (196 samples, 31.06%)</title><rect x="27.7338%" y="869" width="31.0618%" height="15" fill="rgb(232,99,1)"/><text x="27.9838%" y="879.50">__GI___clone</text></g><g><title>start_thread (196 samples, 31.06%)</title><rect x="27.7338%" y="853" width="31.0618%" height="15" fill="rgb(237,95,45)"/><text x="27.9838%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (195 samples, 30.90%)</title><rect x="27.8922%" y="837" width="30.9033%" height="15" fill="rgb(208,109,11)"/><text x="28.1422%" y="847.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (195 samples, 30.90%)</title><rect x="27.8922%" y="821" width="30.9033%" height="15" fill="rgb(216,190,48)"/><text x="28.1422%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOn..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (195 samples, 30.90%)</title><rect x="27.8922%" y="805" width="30.9033%" height="15" fill="rgb(251,171,36)"/><text x="28.1422%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOn..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (195 samples, 30.90%)</title><rect x="27.8922%" y="789" width="30.9033%" height="15" fill="rgb(230,62,22)"/><text x="28.1422%" y="799.50">core::ops::function::FnOnce::call_once{{vtable-shi..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (195 samples, 30.90%)</title><rect x="27.8922%" y="773" width="30.9033%" height="15" fill="rgb(225,114,35)"/><text x="28.1422%" y="783.50">std::sys_common::backtrace::__rust_begin_short_bac..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.16%)</title><rect x="58.6371%" y="757" width="0.1585%" height="15" fill="rgb(215,118,42)"/><text x="58.8871%" y="767.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.16%)</title><rect x="58.6371%" y="741" width="0.1585%" height="15" fill="rgb(243,119,21)"/><text x="58.8871%" y="751.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.16%)</title><rect x="58.6371%" y="725" width="0.1585%" height="15" fill="rgb(252,177,53)"/><text x="58.8871%" y="735.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.16%)</title><rect x="58.6371%" y="709" width="0.1585%" height="15" fill="rgb(237,209,29)"/><text x="58.8871%" y="719.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.16%)</title><rect x="58.6371%" y="693" width="0.1585%" height="15" fill="rgb(212,65,23)"/><text x="58.8871%" y="703.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.16%)</title><rect x="58.6371%" y="677" width="0.1585%" height="15" fill="rgb(230,222,46)"/><text x="58.8871%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="58.6371%" y="661" width="0.1585%" height="15" fill="rgb(215,135,32)"/><text x="58.8871%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="58.6371%" y="645" width="0.1585%" height="15" fill="rgb(246,101,22)"/><text x="58.8871%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="58.9540%" y="693" width="0.1585%" height="15" fill="rgb(206,107,13)"/><text x="59.2040%" y="703.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.32%)</title><rect x="59.1125%" y="677" width="0.3170%" height="15" fill="rgb(250,100,44)"/><text x="59.3625%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="59.2710%" y="661" width="0.1585%" height="15" fill="rgb(231,147,38)"/><text x="59.5210%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="59.2710%" y="645" width="0.1585%" height="15" fill="rgb(229,8,40)"/><text x="59.5210%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="59.2710%" y="629" width="0.1585%" height="15" fill="rgb(221,135,30)"/><text x="59.5210%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="59.2710%" y="613" width="0.1585%" height="15" fill="rgb(249,193,18)"/><text x="59.5210%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.16%)</title><rect x="59.2710%" y="597" width="0.1585%" height="15" fill="rgb(209,133,39)"/><text x="59.5210%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="59.2710%" y="581" width="0.1585%" height="15" fill="rgb(232,100,14)"/><text x="59.5210%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="59.2710%" y="565" width="0.1585%" height="15" fill="rgb(224,185,1)"/><text x="59.5210%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="59.2710%" y="549" width="0.1585%" height="15" fill="rgb(223,139,8)"/><text x="59.5210%" y="559.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.16%)</title><rect x="59.4295%" y="677" width="0.1585%" height="15" fill="rgb(232,213,38)"/><text x="59.6795%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.16%)</title><rect x="59.4295%" y="661" width="0.1585%" height="15" fill="rgb(207,94,22)"/><text x="59.6795%" y="671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.16%)</title><rect x="59.4295%" y="645" width="0.1585%" height="15" fill="rgb(219,183,54)"/><text x="59.6795%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.16%)</title><rect x="59.4295%" y="629" width="0.1585%" height="15" fill="rgb(216,185,54)"/><text x="59.6795%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="59.4295%" y="613" width="0.1585%" height="15" fill="rgb(254,217,39)"/><text x="59.6795%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="59.4295%" y="597" width="0.1585%" height="15" fill="rgb(240,178,23)"/><text x="59.6795%" y="607.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.79%)</title><rect x="59.1125%" y="693" width="0.7924%" height="15" fill="rgb(218,11,47)"/><text x="59.3625%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.32%)</title><rect x="59.5880%" y="677" width="0.3170%" height="15" fill="rgb(218,51,51)"/><text x="59.8380%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.32%)</title><rect x="59.5880%" y="661" width="0.3170%" height="15" fill="rgb(238,126,27)"/><text x="59.8380%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.32%)</title><rect x="59.5880%" y="645" width="0.3170%" height="15" fill="rgb(249,202,22)"/><text x="59.8380%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.32%)</title><rect x="59.5880%" y="629" width="0.3170%" height="15" fill="rgb(254,195,49)"/><text x="59.8380%" y="639.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.32%)</title><rect x="59.5880%" y="613" width="0.3170%" height="15" fill="rgb(208,123,14)"/><text x="59.8380%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.32%)</title><rect x="59.5880%" y="597" width="0.3170%" height="15" fill="rgb(224,200,8)"/><text x="59.8380%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.32%)</title><rect x="59.5880%" y="581" width="0.3170%" height="15" fill="rgb(217,61,36)"/><text x="59.8380%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.32%)</title><rect x="59.5880%" y="565" width="0.3170%" height="15" fill="rgb(206,35,45)"/><text x="59.8380%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.32%)</title><rect x="59.5880%" y="549" width="0.3170%" height="15" fill="rgb(217,65,33)"/><text x="59.8380%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.32%)</title><rect x="59.5880%" y="533" width="0.3170%" height="15" fill="rgb(222,158,48)"/><text x="59.8380%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="59.9049%" y="693" width="0.1585%" height="15" fill="rgb(254,2,54)"/><text x="60.1549%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.16%)</title><rect x="59.9049%" y="677" width="0.1585%" height="15" fill="rgb(250,143,38)"/><text x="60.1549%" y="687.50"></text></g><g><title>__libc_close (1 samples, 0.16%)</title><rect x="59.9049%" y="661" width="0.1585%" height="15" fill="rgb(248,25,0)"/><text x="60.1549%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="59.9049%" y="645" width="0.1585%" height="15" fill="rgb(206,152,27)"/><text x="60.1549%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="59.9049%" y="629" width="0.1585%" height="15" fill="rgb(240,77,30)"/><text x="60.1549%" y="639.50"></text></g><g><title>task_work_run (1 samples, 0.16%)</title><rect x="59.9049%" y="613" width="0.1585%" height="15" fill="rgb(231,5,3)"/><text x="60.1549%" y="623.50"></text></g><g><title>__fput (1 samples, 0.16%)</title><rect x="59.9049%" y="597" width="0.1585%" height="15" fill="rgb(207,226,32)"/><text x="60.1549%" y="607.50"></text></g><g><title>sock_close (1 samples, 0.16%)</title><rect x="59.9049%" y="581" width="0.1585%" height="15" fill="rgb(222,207,47)"/><text x="60.1549%" y="591.50"></text></g><g><title>__sock_release (1 samples, 0.16%)</title><rect x="59.9049%" y="565" width="0.1585%" height="15" fill="rgb(229,115,45)"/><text x="60.1549%" y="575.50"></text></g><g><title>inet_release (1 samples, 0.16%)</title><rect x="59.9049%" y="549" width="0.1585%" height="15" fill="rgb(224,191,6)"/><text x="60.1549%" y="559.50"></text></g><g><title>tcp_close (1 samples, 0.16%)</title><rect x="59.9049%" y="533" width="0.1585%" height="15" fill="rgb(230,227,24)"/><text x="60.1549%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.16%)</title><rect x="59.9049%" y="517" width="0.1585%" height="15" fill="rgb(228,80,19)"/><text x="60.1549%" y="527.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.16%)</title><rect x="59.9049%" y="501" width="0.1585%" height="15" fill="rgb(247,229,0)"/><text x="60.1549%" y="511.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.16%)</title><rect x="59.9049%" y="485" width="0.1585%" height="15" fill="rgb(237,194,15)"/><text x="60.1549%" y="495.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.16%)</title><rect x="59.9049%" y="469" width="0.1585%" height="15" fill="rgb(219,203,20)"/><text x="60.1549%" y="479.50"></text></g><g><title>ip_output (1 samples, 0.16%)</title><rect x="59.9049%" y="453" width="0.1585%" height="15" fill="rgb(234,128,8)"/><text x="60.1549%" y="463.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.16%)</title><rect x="59.9049%" y="437" width="0.1585%" height="15" fill="rgb(248,202,8)"/><text x="60.1549%" y="447.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="59.9049%" y="421" width="0.1585%" height="15" fill="rgb(206,104,37)"/><text x="60.1549%" y="431.50"></text></g><g><title>do_softirq (1 samples, 0.16%)</title><rect x="59.9049%" y="405" width="0.1585%" height="15" fill="rgb(223,8,27)"/><text x="60.1549%" y="415.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.16%)</title><rect x="59.9049%" y="389" width="0.1585%" height="15" fill="rgb(216,217,28)"/><text x="60.1549%" y="399.50"></text></g><g><title>__do_softirq (1 samples, 0.16%)</title><rect x="59.9049%" y="373" width="0.1585%" height="15" fill="rgb(249,199,1)"/><text x="60.1549%" y="383.50"></text></g><g><title>net_rx_action (1 samples, 0.16%)</title><rect x="59.9049%" y="357" width="0.1585%" height="15" fill="rgb(240,85,17)"/><text x="60.1549%" y="367.50"></text></g><g><title>process_backlog (1 samples, 0.16%)</title><rect x="59.9049%" y="341" width="0.1585%" height="15" fill="rgb(206,108,45)"/><text x="60.1549%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.16%)</title><rect x="59.9049%" y="325" width="0.1585%" height="15" fill="rgb(245,210,41)"/><text x="60.1549%" y="335.50"></text></g><g><title>ip_rcv (1 samples, 0.16%)</title><rect x="59.9049%" y="309" width="0.1585%" height="15" fill="rgb(206,13,37)"/><text x="60.1549%" y="319.50"></text></g><g><title>ip_local_deliver (1 samples, 0.16%)</title><rect x="59.9049%" y="293" width="0.1585%" height="15" fill="rgb(250,61,18)"/><text x="60.1549%" y="303.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.16%)</title><rect x="59.9049%" y="277" width="0.1585%" height="15" fill="rgb(235,172,48)"/><text x="60.1549%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.16%)</title><rect x="59.9049%" y="261" width="0.1585%" height="15" fill="rgb(249,201,17)"/><text x="60.1549%" y="271.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.16%)</title><rect x="59.9049%" y="245" width="0.1585%" height="15" fill="rgb(219,208,6)"/><text x="60.1549%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.16%)</title><rect x="59.9049%" y="229" width="0.1585%" height="15" fill="rgb(248,31,23)"/><text x="60.1549%" y="239.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.16%)</title><rect x="59.9049%" y="213" width="0.1585%" height="15" fill="rgb(245,15,42)"/><text x="60.1549%" y="223.50"></text></g><g><title>tcp_data_queue (1 samples, 0.16%)</title><rect x="59.9049%" y="197" width="0.1585%" height="15" fill="rgb(222,217,39)"/><text x="60.1549%" y="207.50"></text></g><g><title>tcp_fin (1 samples, 0.16%)</title><rect x="59.9049%" y="181" width="0.1585%" height="15" fill="rgb(210,219,27)"/><text x="60.1549%" y="191.50"></text></g><g><title>__sk_mem_reduce_allocated (1 samples, 0.16%)</title><rect x="59.9049%" y="165" width="0.1585%" height="15" fill="rgb(252,166,36)"/><text x="60.1549%" y="175.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.32%)</title><rect x="60.0634%" y="613" width="0.3170%" height="15" fill="rgb(245,132,34)"/><text x="60.3134%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.32%)</title><rect x="60.0634%" y="597" width="0.3170%" height="15" fill="rgb(236,54,3)"/><text x="60.3134%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="60.2219%" y="581" width="0.1585%" height="15" fill="rgb(241,173,43)"/><text x="60.4719%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.16%)</title><rect x="60.2219%" y="565" width="0.1585%" height="15" fill="rgb(215,190,9)"/><text x="60.4719%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="60.2219%" y="549" width="0.1585%" height="15" fill="rgb(242,101,16)"/><text x="60.4719%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="60.2219%" y="533" width="0.1585%" height="15" fill="rgb(223,190,21)"/><text x="60.4719%" y="543.50"></text></g><g><title>page_fault (1 samples, 0.16%)</title><rect x="60.2219%" y="517" width="0.1585%" height="15" fill="rgb(215,228,25)"/><text x="60.4719%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="60.2219%" y="501" width="0.1585%" height="15" fill="rgb(225,36,22)"/><text x="60.4719%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="60.2219%" y="485" width="0.1585%" height="15" fill="rgb(251,106,46)"/><text x="60.4719%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="60.2219%" y="469" width="0.1585%" height="15" fill="rgb(208,90,1)"/><text x="60.4719%" y="479.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.16%)</title><rect x="60.2219%" y="453" width="0.1585%" height="15" fill="rgb(243,10,4)"/><text x="60.4719%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.16%)</title><rect x="60.2219%" y="437" width="0.1585%" height="15" fill="rgb(212,137,27)"/><text x="60.4719%" y="447.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.16%)</title><rect x="60.2219%" y="421" width="0.1585%" height="15" fill="rgb(231,220,49)"/><text x="60.4719%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (233 samples, 36.93%)</title><rect x="60.6973%" y="389" width="36.9255%" height="15" fill="rgb(237,96,20)"/><text x="60.9473%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (233 samples, 36.93%)</title><rect x="60.6973%" y="373" width="36.9255%" height="15" fill="rgb(239,229,30)"/><text x="60.9473%" y="383.50">native_write_msr</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 37.72%)</title><rect x="60.0634%" y="629" width="37.7179%" height="15" fill="rgb(219,65,33)"/><text x="60.3134%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (236 samples, 37.40%)</title><rect x="60.3803%" y="613" width="37.4010%" height="15" fill="rgb(243,134,7)"/><text x="60.6303%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (236 samples, 37.40%)</title><rect x="60.3803%" y="597" width="37.4010%" height="15" fill="rgb(216,177,54)"/><text x="60.6303%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (236 samples, 37.40%)</title><rect x="60.3803%" y="581" width="37.4010%" height="15" fill="rgb(211,160,20)"/><text x="60.6303%" y="591.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (236 samples, 37.40%)</title><rect x="60.3803%" y="565" width="37.4010%" height="15" fill="rgb(239,85,39)"/><text x="60.6303%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 37.40%)</title><rect x="60.3803%" y="549" width="37.4010%" height="15" fill="rgb(232,125,22)"/><text x="60.6303%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 37.40%)</title><rect x="60.3803%" y="533" width="37.4010%" height="15" fill="rgb(244,57,34)"/><text x="60.6303%" y="543.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 37.24%)</title><rect x="60.5388%" y="517" width="37.2425%" height="15" fill="rgb(214,203,32)"/><text x="60.7888%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 37.24%)</title><rect x="60.5388%" y="501" width="37.2425%" height="15" fill="rgb(207,58,43)"/><text x="60.7888%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 37.24%)</title><rect x="60.5388%" y="485" width="37.2425%" height="15" fill="rgb(215,193,15)"/><text x="60.7888%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 37.24%)</title><rect x="60.5388%" y="469" width="37.2425%" height="15" fill="rgb(232,15,44)"/><text x="60.7888%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 37.24%)</title><rect x="60.5388%" y="453" width="37.2425%" height="15" fill="rgb(212,3,48)"/><text x="60.7888%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 37.24%)</title><rect x="60.5388%" y="437" width="37.2425%" height="15" fill="rgb(218,128,7)"/><text x="60.7888%" y="447.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 37.08%)</title><rect x="60.6973%" y="421" width="37.0840%" height="15" fill="rgb(226,216,39)"/><text x="60.9473%" y="431.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 37.08%)</title><rect x="60.6973%" y="405" width="37.0840%" height="15" fill="rgb(243,47,51)"/><text x="60.9473%" y="415.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.16%)</title><rect x="97.6228%" y="389" width="0.1585%" height="15" fill="rgb(241,183,40)"/><text x="97.8728%" y="399.50"></text></g><g><title>hwloc::Topology::new (239 samples, 37.88%)</title><rect x="60.0634%" y="693" width="37.8764%" height="15" fill="rgb(231,217,32)"/><text x="60.3134%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (239 samples, 37.88%)</title><rect x="60.0634%" y="677" width="37.8764%" height="15" fill="rgb(229,61,38)"/><text x="60.3134%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (239 samples, 37.88%)</title><rect x="60.0634%" y="661" width="37.8764%" height="15" fill="rgb(225,210,5)"/><text x="60.3134%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (239 samples, 37.88%)</title><rect x="60.0634%" y="645" width="37.8764%" height="15" fill="rgb(231,79,45)"/><text x="60.3134%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.16%)</title><rect x="97.7813%" y="629" width="0.1585%" height="15" fill="rgb(224,100,7)"/><text x="98.0313%" y="639.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.16%)</title><rect x="97.7813%" y="613" width="0.1585%" height="15" fill="rgb(241,198,18)"/><text x="98.0313%" y="623.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.16%)</title><rect x="97.7813%" y="597" width="0.1585%" height="15" fill="rgb(252,97,53)"/><text x="98.0313%" y="607.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.16%)</title><rect x="97.7813%" y="581" width="0.1585%" height="15" fill="rgb(220,88,7)"/><text x="98.0313%" y="591.50"></text></g><g><title>__GI___read (1 samples, 0.16%)</title><rect x="97.7813%" y="565" width="0.1585%" height="15" fill="rgb(213,176,14)"/><text x="98.0313%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="97.7813%" y="549" width="0.1585%" height="15" fill="rgb(246,73,7)"/><text x="98.0313%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="97.7813%" y="533" width="0.1585%" height="15" fill="rgb(245,64,36)"/><text x="98.0313%" y="543.50"></text></g><g><title>ksys_read (1 samples, 0.16%)</title><rect x="97.7813%" y="517" width="0.1585%" height="15" fill="rgb(245,80,10)"/><text x="98.0313%" y="527.50"></text></g><g><title>vfs_read (1 samples, 0.16%)</title><rect x="97.7813%" y="501" width="0.1585%" height="15" fill="rgb(232,107,50)"/><text x="98.0313%" y="511.50"></text></g><g><title>seq_read (1 samples, 0.16%)</title><rect x="97.7813%" y="485" width="0.1585%" height="15" fill="rgb(253,3,0)"/><text x="98.0313%" y="495.50"></text></g><g><title>show_cpuinfo (1 samples, 0.16%)</title><rect x="97.7813%" y="469" width="0.1585%" height="15" fill="rgb(212,99,53)"/><text x="98.0313%" y="479.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.48%)</title><rect x="97.9398%" y="693" width="0.4754%" height="15" fill="rgb(249,111,54)"/><text x="98.1898%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.32%)</title><rect x="98.0983%" y="677" width="0.3170%" height="15" fill="rgb(249,55,30)"/><text x="98.3483%" y="687.50"></text></g><g><title>__libc_start_main (251 samples, 39.78%)</title><rect x="58.7956%" y="853" width="39.7781%" height="15" fill="rgb(237,47,42)"/><text x="59.0456%" y="863.50">__libc_start_main</text></g><g><title>main (251 samples, 39.78%)</title><rect x="58.7956%" y="837" width="39.7781%" height="15" fill="rgb(211,20,18)"/><text x="59.0456%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (251 samples, 39.78%)</title><rect x="58.7956%" y="821" width="39.7781%" height="15" fill="rgb(231,203,46)"/><text x="59.0456%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (251 samples, 39.78%)</title><rect x="58.7956%" y="805" width="39.7781%" height="15" fill="rgb(237,142,3)"/><text x="59.0456%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (251 samples, 39.78%)</title><rect x="58.7956%" y="789" width="39.7781%" height="15" fill="rgb(241,107,1)"/><text x="59.0456%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (251 samples, 39.78%)</title><rect x="58.7956%" y="773" width="39.7781%" height="15" fill="rgb(229,83,13)"/><text x="59.0456%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (251 samples, 39.78%)</title><rect x="58.7956%" y="757" width="39.7781%" height="15" fill="rgb(241,91,40)"/><text x="59.0456%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; ..</text></g><g><title>std::rt::lang_start::_{{closure}} (251 samples, 39.78%)</title><rect x="58.7956%" y="741" width="39.7781%" height="15" fill="rgb(225,3,45)"/><text x="59.0456%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (251 samples, 39.78%)</title><rect x="58.7956%" y="725" width="39.7781%" height="15" fill="rgb(244,223,14)"/><text x="59.0456%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (251 samples, 39.78%)</title><rect x="58.7956%" y="709" width="39.7781%" height="15" fill="rgb(224,124,37)"/><text x="59.0456%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.16%)</title><rect x="98.4152%" y="693" width="0.1585%" height="15" fill="rgb(251,171,30)"/><text x="98.6652%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.16%)</title><rect x="98.4152%" y="677" width="0.1585%" height="15" fill="rgb(236,46,54)"/><text x="98.6652%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.16%)</title><rect x="98.4152%" y="661" width="0.1585%" height="15" fill="rgb(245,213,5)"/><text x="98.6652%" y="671.50"></text></g><g><title>__GI___socket (1 samples, 0.16%)</title><rect x="98.4152%" y="645" width="0.1585%" height="15" fill="rgb(230,144,27)"/><text x="98.6652%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="98.4152%" y="629" width="0.1585%" height="15" fill="rgb(220,86,6)"/><text x="98.6652%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="98.4152%" y="613" width="0.1585%" height="15" fill="rgb(240,20,13)"/><text x="98.6652%" y="623.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.16%)</title><rect x="98.4152%" y="597" width="0.1585%" height="15" fill="rgb(217,89,34)"/><text x="98.6652%" y="607.50"></text></g><g><title>__sys_socket (1 samples, 0.16%)</title><rect x="98.4152%" y="581" width="0.1585%" height="15" fill="rgb(229,13,5)"/><text x="98.6652%" y="591.50"></text></g><g><title>sock_alloc_file (1 samples, 0.16%)</title><rect x="98.4152%" y="565" width="0.1585%" height="15" fill="rgb(244,67,35)"/><text x="98.6652%" y="575.50"></text></g><g><title>alloc_file_pseudo (1 samples, 0.16%)</title><rect x="98.4152%" y="549" width="0.1585%" height="15" fill="rgb(221,40,2)"/><text x="98.6652%" y="559.50"></text></g><g><title>d_alloc_pseudo (1 samples, 0.16%)</title><rect x="98.4152%" y="533" width="0.1585%" height="15" fill="rgb(237,157,21)"/><text x="98.6652%" y="543.50"></text></g><g><title>__d_alloc (1 samples, 0.16%)</title><rect x="98.4152%" y="517" width="0.1585%" height="15" fill="rgb(222,94,11)"/><text x="98.6652%" y="527.50"></text></g><g><title>_start (252 samples, 39.94%)</title><rect x="58.7956%" y="869" width="39.9366%" height="15" fill="rgb(249,113,6)"/><text x="59.0456%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.16%)</title><rect x="98.5737%" y="853" width="0.1585%" height="15" fill="rgb(238,137,36)"/><text x="98.8237%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.16%)</title><rect x="98.5737%" y="837" width="0.1585%" height="15" fill="rgb(210,102,26)"/><text x="98.8237%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.16%)</title><rect x="98.5737%" y="821" width="0.1585%" height="15" fill="rgb(218,30,30)"/><text x="98.8237%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.16%)</title><rect x="98.5737%" y="805" width="0.1585%" height="15" fill="rgb(214,67,26)"/><text x="98.8237%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.16%)</title><rect x="98.5737%" y="789" width="0.1585%" height="15" fill="rgb(251,9,53)"/><text x="98.8237%" y="799.50"></text></g><g><title>openaux (1 samples, 0.16%)</title><rect x="98.5737%" y="773" width="0.1585%" height="15" fill="rgb(228,204,25)"/><text x="98.8237%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.16%)</title><rect x="98.5737%" y="757" width="0.1585%" height="15" fill="rgb(207,153,8)"/><text x="98.8237%" y="767.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.16%)</title><rect x="98.5737%" y="741" width="0.1585%" height="15" fill="rgb(242,9,16)"/><text x="98.8237%" y="751.50"></text></g><g><title>__mmap (1 samples, 0.16%)</title><rect x="98.5737%" y="725" width="0.1585%" height="15" fill="rgb(217,211,10)"/><text x="98.8237%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.16%)</title><rect x="98.5737%" y="709" width="0.1585%" height="15" fill="rgb(219,228,52)"/><text x="98.8237%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="98.5737%" y="693" width="0.1585%" height="15" fill="rgb(231,92,29)"/><text x="98.8237%" y="703.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.16%)</title><rect x="98.5737%" y="677" width="0.1585%" height="15" fill="rgb(232,8,23)"/><text x="98.8237%" y="687.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.16%)</title><rect x="98.5737%" y="661" width="0.1585%" height="15" fill="rgb(216,211,34)"/><text x="98.8237%" y="671.50"></text></g><g><title>do_mmap (1 samples, 0.16%)</title><rect x="98.5737%" y="645" width="0.1585%" height="15" fill="rgb(236,151,0)"/><text x="98.8237%" y="655.50"></text></g><g><title>mmap_region (1 samples, 0.16%)</title><rect x="98.5737%" y="629" width="0.1585%" height="15" fill="rgb(209,168,3)"/><text x="98.8237%" y="639.50"></text></g><g><title>__do_munmap (1 samples, 0.16%)</title><rect x="98.5737%" y="613" width="0.1585%" height="15" fill="rgb(208,129,28)"/><text x="98.8237%" y="623.50"></text></g><g><title>__split_vma (1 samples, 0.16%)</title><rect x="98.5737%" y="597" width="0.1585%" height="15" fill="rgb(229,78,22)"/><text x="98.8237%" y="607.50"></text></g><g><title>vm_area_dup (1 samples, 0.16%)</title><rect x="98.5737%" y="581" width="0.1585%" height="15" fill="rgb(228,187,13)"/><text x="98.8237%" y="591.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.16%)</title><rect x="98.5737%" y="565" width="0.1585%" height="15" fill="rgb(240,119,24)"/><text x="98.8237%" y="575.50"></text></g><g><title>[vmlinux] (1 samples, 0.16%)</title><rect x="98.7322%" y="837" width="0.1585%" height="15" fill="rgb(209,194,42)"/><text x="98.9822%" y="847.50"></text></g><g><title>do_group_exit (1 samples, 0.16%)</title><rect x="98.7322%" y="821" width="0.1585%" height="15" fill="rgb(247,200,46)"/><text x="98.9822%" y="831.50"></text></g><g><title>do_exit (1 samples, 0.16%)</title><rect x="98.7322%" y="805" width="0.1585%" height="15" fill="rgb(218,76,16)"/><text x="98.9822%" y="815.50"></text></g><g><title>mmput (1 samples, 0.16%)</title><rect x="98.7322%" y="789" width="0.1585%" height="15" fill="rgb(225,21,48)"/><text x="98.9822%" y="799.50"></text></g><g><title>exit_mmap (1 samples, 0.16%)</title><rect x="98.7322%" y="773" width="0.1585%" height="15" fill="rgb(239,223,50)"/><text x="98.9822%" y="783.50"></text></g><g><title>free_pgtables (1 samples, 0.16%)</title><rect x="98.7322%" y="757" width="0.1585%" height="15" fill="rgb(244,45,21)"/><text x="98.9822%" y="767.50"></text></g><g><title>unlink_anon_vmas (1 samples, 0.16%)</title><rect x="98.7322%" y="741" width="0.1585%" height="15" fill="rgb(232,33,43)"/><text x="98.9822%" y="751.50"></text></g><g><title>__put_anon_vma (1 samples, 0.16%)</title><rect x="98.7322%" y="725" width="0.1585%" height="15" fill="rgb(209,8,3)"/><text x="98.9822%" y="735.50"></text></g><g><title>kmem_cache_free (1 samples, 0.16%)</title><rect x="98.7322%" y="709" width="0.1585%" height="15" fill="rgb(214,25,53)"/><text x="98.9822%" y="719.50"></text></g><g><title>lobsters (625 samples, 99.05%)</title><rect x="0.0000%" y="885" width="99.0491%" height="15" fill="rgb(254,186,54)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>entry_SYSCALL_64 (2 samples, 0.32%)</title><rect x="98.7322%" y="869" width="0.3170%" height="15" fill="rgb(208,174,49)"/><text x="98.9822%" y="879.50"></text></g><g><title>do_syscall_64 (2 samples, 0.32%)</title><rect x="98.7322%" y="853" width="0.3170%" height="15" fill="rgb(233,191,51)"/><text x="98.9822%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.16%)</title><rect x="98.8906%" y="837" width="0.1585%" height="15" fill="rgb(222,134,10)"/><text x="99.1406%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.16%)</title><rect x="98.8906%" y="821" width="0.1585%" height="15" fill="rgb(230,226,20)"/><text x="99.1406%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.16%)</title><rect x="98.8906%" y="805" width="0.1585%" height="15" fill="rgb(251,111,25)"/><text x="99.1406%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.16%)</title><rect x="98.8906%" y="789" width="0.1585%" height="15" fill="rgb(224,40,46)"/><text x="99.1406%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.16%)</title><rect x="98.8906%" y="773" width="0.1585%" height="15" fill="rgb(236,108,47)"/><text x="99.1406%" y="783.50"></text></g><g><title>elf_map (1 samples, 0.16%)</title><rect x="98.8906%" y="757" width="0.1585%" height="15" fill="rgb(234,93,0)"/><text x="99.1406%" y="767.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.16%)</title><rect x="98.8906%" y="741" width="0.1585%" height="15" fill="rgb(224,213,32)"/><text x="99.1406%" y="751.50"></text></g><g><title>do_mmap (1 samples, 0.16%)</title><rect x="98.8906%" y="725" width="0.1585%" height="15" fill="rgb(251,11,48)"/><text x="99.1406%" y="735.50"></text></g><g><title>mmap_region (1 samples, 0.16%)</title><rect x="98.8906%" y="709" width="0.1585%" height="15" fill="rgb(236,173,5)"/><text x="99.1406%" y="719.50"></text></g><g><title>perf_event_mmap (1 samples, 0.16%)</title><rect x="98.8906%" y="693" width="0.1585%" height="15" fill="rgb(230,95,12)"/><text x="99.1406%" y="703.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.16%)</title><rect x="98.8906%" y="677" width="0.1585%" height="15" fill="rgb(232,209,1)"/><text x="99.1406%" y="687.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.16%)</title><rect x="98.8906%" y="661" width="0.1585%" height="15" fill="rgb(232,6,1)"/><text x="99.1406%" y="671.50"></text></g><g><title>all (631 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(210,224,50)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.95%)</title><rect x="99.0491%" y="885" width="0.9509%" height="15" fill="rgb(228,127,35)"/><text x="99.2991%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.95%)</title><rect x="99.0491%" y="869" width="0.9509%" height="15" fill="rgb(245,102,45)"/><text x="99.2991%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.95%)</title><rect x="99.0491%" y="853" width="0.9509%" height="15" fill="rgb(214,1,49)"/><text x="99.2991%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.95%)</title><rect x="99.0491%" y="837" width="0.9509%" height="15" fill="rgb(226,163,40)"/><text x="99.2991%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.95%)</title><rect x="99.0491%" y="821" width="0.9509%" height="15" fill="rgb(239,212,28)"/><text x="99.2991%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.95%)</title><rect x="99.0491%" y="805" width="0.9509%" height="15" fill="rgb(220,20,13)"/><text x="99.2991%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.95%)</title><rect x="99.0491%" y="789" width="0.9509%" height="15" fill="rgb(210,164,35)"/><text x="99.2991%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.95%)</title><rect x="99.0491%" y="773" width="0.9509%" height="15" fill="rgb(248,109,41)"/><text x="99.2991%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.95%)</title><rect x="99.0491%" y="757" width="0.9509%" height="15" fill="rgb(238,23,50)"/><text x="99.2991%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.95%)</title><rect x="99.0491%" y="741" width="0.9509%" height="15" fill="rgb(211,48,49)"/><text x="99.2991%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.79%)</title><rect x="99.2076%" y="725" width="0.7924%" height="15" fill="rgb(223,36,21)"/><text x="99.4576%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.79%)</title><rect x="99.2076%" y="709" width="0.7924%" height="15" fill="rgb(207,123,46)"/><text x="99.4576%" y="719.50"></text></g></svg></svg>