<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="901.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="901.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="0.0000%" y="837" width="0.1499%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="847.50"></text></g><g><title>[[heap]] (1 samples, 0.15%)</title><rect x="0.1499%" y="837" width="0.1499%" height="15" fill="rgb(217,0,24)"/><text x="0.3999%" y="847.50"></text></g><g><title>hwloc_linux_set_tid_cpubind (1 samples, 0.15%)</title><rect x="0.1499%" y="821" width="0.1499%" height="15" fill="rgb(221,193,54)"/><text x="0.3999%" y="831.50"></text></g><g><title>[[stack]] (1 samples, 0.15%)</title><rect x="0.2999%" y="837" width="0.1499%" height="15" fill="rgb(248,212,6)"/><text x="0.5499%" y="847.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="0.2999%" y="821" width="0.1499%" height="15" fill="rgb(208,68,35)"/><text x="0.5499%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="0.4498%" y="821" width="0.1499%" height="15" fill="rgb(232,128,0)"/><text x="0.6998%" y="831.50"></text></g><g><title>&lt;msql_srv::resultset::RowWriter&lt;W&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="0.5997%" y="821" width="0.1499%" height="15" fill="rgb(207,160,47)"/><text x="0.8497%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="0.7496%" y="821" width="0.1499%" height="15" fill="rgb(228,23,34)"/><text x="0.9996%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="0.8996%" y="821" width="0.1499%" height="15" fill="rgb(218,30,26)"/><text x="1.1496%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="1.0495%" y="821" width="0.1499%" height="15" fill="rgb(220,122,19)"/><text x="1.2995%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.45%)</title><rect x="1.1994%" y="821" width="0.4498%" height="15" fill="rgb(250,228,42)"/><text x="1.4494%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="1.6492%" y="821" width="0.1499%" height="15" fill="rgb(240,193,28)"/><text x="1.8992%" y="831.50"></text></g><g><title>__GI___mprotect (1 samples, 0.15%)</title><rect x="1.7991%" y="821" width="0.1499%" height="15" fill="rgb(216,20,37)"/><text x="2.0491%" y="831.50"></text></g><g><title>error_entry (1 samples, 0.15%)</title><rect x="1.7991%" y="805" width="0.1499%" height="15" fill="rgb(206,188,39)"/><text x="2.0491%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.30%)</title><rect x="1.9490%" y="821" width="0.2999%" height="15" fill="rgb(217,207,13)"/><text x="2.1990%" y="831.50"></text></g><g><title>__rdl_realloc (1 samples, 0.15%)</title><rect x="2.2489%" y="821" width="0.1499%" height="15" fill="rgb(231,73,38)"/><text x="2.4989%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.15%)</title><rect x="2.2489%" y="805" width="0.1499%" height="15" fill="rgb(225,20,46)"/><text x="2.4989%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="2.3988%" y="821" width="0.1499%" height="15" fill="rgb(210,31,41)"/><text x="2.6488%" y="831.50"></text></g><g><title>_int_malloc (2 samples, 0.30%)</title><rect x="2.5487%" y="821" width="0.2999%" height="15" fill="rgb(221,200,47)"/><text x="2.7987%" y="831.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="2.8486%" y="821" width="0.1499%" height="15" fill="rgb(226,26,5)"/><text x="3.0986%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.45%)</title><rect x="2.9985%" y="821" width="0.4498%" height="15" fill="rgb(249,33,26)"/><text x="3.2485%" y="831.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.15%)</title><rect x="3.2984%" y="805" width="0.1499%" height="15" fill="rgb(235,183,28)"/><text x="3.5484%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="3.2984%" y="789" width="0.1499%" height="15" fill="rgb(221,5,38)"/><text x="3.5484%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="3.2984%" y="773" width="0.1499%" height="15" fill="rgb(247,18,42)"/><text x="3.5484%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="3.2984%" y="757" width="0.1499%" height="15" fill="rgb(241,131,45)"/><text x="3.5484%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="3.2984%" y="741" width="0.1499%" height="15" fill="rgb(249,31,29)"/><text x="3.5484%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="3.2984%" y="725" width="0.1499%" height="15" fill="rgb(225,111,53)"/><text x="3.5484%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="3.2984%" y="709" width="0.1499%" height="15" fill="rgb(238,160,17)"/><text x="3.5484%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="3.2984%" y="693" width="0.1499%" height="15" fill="rgb(214,148,48)"/><text x="3.5484%" y="703.50"></text></g><g><title>alloc::string::String::push (5 samples, 0.75%)</title><rect x="3.4483%" y="821" width="0.7496%" height="15" fill="rgb(232,36,49)"/><text x="3.6983%" y="831.50"></text></g><g><title>decor_mem::helpers::plus_parser_vals (1 samples, 0.15%)</title><rect x="4.1979%" y="821" width="0.1499%" height="15" fill="rgb(209,103,24)"/><text x="4.4479%" y="831.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::selection_to_datatable_selection (1 samples, 0.15%)</title><rect x="4.3478%" y="821" width="0.1499%" height="15" fill="rgb(229,88,8)"/><text x="4.5978%" y="831.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="4.4978%" y="821" width="0.1499%" height="15" fill="rgb(213,181,19)"/><text x="4.7478%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.15%)</title><rect x="4.6477%" y="821" width="0.1499%" height="15" fill="rgb(254,191,54)"/><text x="4.8977%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.15%)</title><rect x="4.7976%" y="821" width="0.1499%" height="15" fill="rgb(241,83,37)"/><text x="5.0476%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (1 samples, 0.15%)</title><rect x="4.9475%" y="821" width="0.1499%" height="15" fill="rgb(233,36,39)"/><text x="5.1975%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.15%)</title><rect x="5.0975%" y="821" width="0.1499%" height="15" fill="rgb(226,3,54)"/><text x="5.3475%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.15%)</title><rect x="5.2474%" y="821" width="0.1499%" height="15" fill="rgb(245,192,40)"/><text x="5.4974%" y="831.50"></text></g><g><title>[anon] (34 samples, 5.10%)</title><rect x="0.4498%" y="837" width="5.0975%" height="15" fill="rgb(238,167,29)"/><text x="0.6998%" y="847.50">[anon]</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (1 samples, 0.15%)</title><rect x="5.3973%" y="821" width="0.1499%" height="15" fill="rgb(232,182,51)"/><text x="5.6473%" y="831.50"></text></g><g><title>[lobsters-microbenchmarks] (1 samples, 0.15%)</title><rect x="5.5472%" y="837" width="0.1499%" height="15" fill="rgb(231,60,39)"/><text x="5.7972%" y="847.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="5.5472%" y="821" width="0.1499%" height="15" fill="rgb(208,69,12)"/><text x="5.7972%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="5.6972%" y="821" width="0.1499%" height="15" fill="rgb(235,93,37)"/><text x="5.9472%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="5.8471%" y="709" width="0.1499%" height="15" fill="rgb(213,116,39)"/><text x="6.0971%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="5.8471%" y="693" width="0.1499%" height="15" fill="rgb(222,207,29)"/><text x="6.0971%" y="703.50"></text></g><g><title>perf_event_mmap (1 samples, 0.15%)</title><rect x="5.9970%" y="565" width="0.1499%" height="15" fill="rgb(206,96,30)"/><text x="6.2470%" y="575.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.15%)</title><rect x="5.9970%" y="549" width="0.1499%" height="15" fill="rgb(218,138,4)"/><text x="6.2470%" y="559.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.15%)</title><rect x="5.9970%" y="533" width="0.1499%" height="15" fill="rgb(250,191,14)"/><text x="6.2470%" y="543.50"></text></g><g><title>__GI___mprotect (2 samples, 0.30%)</title><rect x="5.9970%" y="661" width="0.2999%" height="15" fill="rgb(239,60,40)"/><text x="6.2470%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="5.9970%" y="645" width="0.2999%" height="15" fill="rgb(206,27,48)"/><text x="6.2470%" y="655.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="5.9970%" y="629" width="0.2999%" height="15" fill="rgb(225,35,8)"/><text x="6.2470%" y="639.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.30%)</title><rect x="5.9970%" y="613" width="0.2999%" height="15" fill="rgb(250,213,24)"/><text x="6.2470%" y="623.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.30%)</title><rect x="5.9970%" y="597" width="0.2999%" height="15" fill="rgb(247,123,22)"/><text x="6.2470%" y="607.50"></text></g><g><title>mprotect_fixup (2 samples, 0.30%)</title><rect x="5.9970%" y="581" width="0.2999%" height="15" fill="rgb(231,138,38)"/><text x="6.2470%" y="591.50"></text></g><g><title>vma_merge (1 samples, 0.15%)</title><rect x="6.1469%" y="565" width="0.1499%" height="15" fill="rgb(231,145,46)"/><text x="6.3969%" y="575.50"></text></g><g><title>__vma_adjust (1 samples, 0.15%)</title><rect x="6.1469%" y="549" width="0.1499%" height="15" fill="rgb(251,118,11)"/><text x="6.3969%" y="559.50"></text></g><g><title>anon_vma_interval_tree_remove (1 samples, 0.15%)</title><rect x="6.1469%" y="533" width="0.1499%" height="15" fill="rgb(217,147,25)"/><text x="6.3969%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (4 samples, 0.60%)</title><rect x="5.8471%" y="773" width="0.5997%" height="15" fill="rgb(247,81,37)"/><text x="6.0971%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (4 samples, 0.60%)</title><rect x="5.8471%" y="757" width="0.5997%" height="15" fill="rgb(209,12,38)"/><text x="6.0971%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.60%)</title><rect x="5.8471%" y="741" width="0.5997%" height="15" fill="rgb(227,1,9)"/><text x="6.0971%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.60%)</title><rect x="5.8471%" y="725" width="0.5997%" height="15" fill="rgb(248,47,43)"/><text x="6.0971%" y="735.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.45%)</title><rect x="5.9970%" y="709" width="0.4498%" height="15" fill="rgb(221,10,30)"/><text x="6.2470%" y="719.50"></text></g><g><title>_int_malloc (3 samples, 0.45%)</title><rect x="5.9970%" y="693" width="0.4498%" height="15" fill="rgb(210,229,1)"/><text x="6.2470%" y="703.50"></text></g><g><title>sysmalloc (3 samples, 0.45%)</title><rect x="5.9970%" y="677" width="0.4498%" height="15" fill="rgb(222,148,37)"/><text x="6.2470%" y="687.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.15%)</title><rect x="6.2969%" y="661" width="0.1499%" height="15" fill="rgb(234,67,33)"/><text x="6.5469%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.15%)</title><rect x="6.4468%" y="709" width="0.1499%" height="15" fill="rgb(247,98,35)"/><text x="6.6968%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="6.4468%" y="693" width="0.1499%" height="15" fill="rgb(247,138,52)"/><text x="6.6968%" y="703.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.15%)</title><rect x="6.8966%" y="501" width="0.1499%" height="15" fill="rgb(213,79,30)"/><text x="7.1466%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.15%)</title><rect x="6.8966%" y="485" width="0.1499%" height="15" fill="rgb(246,177,23)"/><text x="7.1466%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.15%)</title><rect x="6.8966%" y="469" width="0.1499%" height="15" fill="rgb(230,62,27)"/><text x="7.1466%" y="479.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.15%)</title><rect x="6.8966%" y="453" width="0.1499%" height="15" fill="rgb(216,154,8)"/><text x="7.1466%" y="463.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="6.8966%" y="437" width="0.1499%" height="15" fill="rgb(244,35,45)"/><text x="7.1466%" y="447.50"></text></g><g><title>do_softirq (1 samples, 0.15%)</title><rect x="6.8966%" y="421" width="0.1499%" height="15" fill="rgb(251,115,12)"/><text x="7.1466%" y="431.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.15%)</title><rect x="6.8966%" y="405" width="0.1499%" height="15" fill="rgb(240,54,50)"/><text x="7.1466%" y="415.50"></text></g><g><title>__do_softirq (1 samples, 0.15%)</title><rect x="6.8966%" y="389" width="0.1499%" height="15" fill="rgb(233,84,52)"/><text x="7.1466%" y="399.50"></text></g><g><title>net_rx_action (1 samples, 0.15%)</title><rect x="6.8966%" y="373" width="0.1499%" height="15" fill="rgb(207,117,47)"/><text x="7.1466%" y="383.50"></text></g><g><title>process_backlog (1 samples, 0.15%)</title><rect x="6.8966%" y="357" width="0.1499%" height="15" fill="rgb(249,43,39)"/><text x="7.1466%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.15%)</title><rect x="6.8966%" y="341" width="0.1499%" height="15" fill="rgb(209,38,44)"/><text x="7.1466%" y="351.50"></text></g><g><title>ip_rcv (1 samples, 0.15%)</title><rect x="6.8966%" y="325" width="0.1499%" height="15" fill="rgb(236,212,23)"/><text x="7.1466%" y="335.50"></text></g><g><title>ip_local_deliver (1 samples, 0.15%)</title><rect x="6.8966%" y="309" width="0.1499%" height="15" fill="rgb(242,79,21)"/><text x="7.1466%" y="319.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.15%)</title><rect x="6.8966%" y="293" width="0.1499%" height="15" fill="rgb(211,96,35)"/><text x="7.1466%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.15%)</title><rect x="6.8966%" y="277" width="0.1499%" height="15" fill="rgb(253,215,40)"/><text x="7.1466%" y="287.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.15%)</title><rect x="6.8966%" y="261" width="0.1499%" height="15" fill="rgb(211,81,21)"/><text x="7.1466%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.15%)</title><rect x="6.8966%" y="245" width="0.1499%" height="15" fill="rgb(208,190,38)"/><text x="7.1466%" y="255.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.15%)</title><rect x="6.8966%" y="229" width="0.1499%" height="15" fill="rgb(235,213,38)"/><text x="7.1466%" y="239.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="6.8966%" y="213" width="0.1499%" height="15" fill="rgb(237,122,38)"/><text x="7.1466%" y="223.50"></text></g><g><title>skb_release_head_state (1 samples, 0.15%)</title><rect x="6.8966%" y="197" width="0.1499%" height="15" fill="rgb(244,218,35)"/><text x="7.1466%" y="207.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (6 samples, 0.90%)</title><rect x="6.4468%" y="773" width="0.8996%" height="15" fill="rgb(240,68,47)"/><text x="6.6968%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (6 samples, 0.90%)</title><rect x="6.4468%" y="757" width="0.8996%" height="15" fill="rgb(210,16,53)"/><text x="6.6968%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (6 samples, 0.90%)</title><rect x="6.4468%" y="741" width="0.8996%" height="15" fill="rgb(235,124,12)"/><text x="6.6968%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (6 samples, 0.90%)</title><rect x="6.4468%" y="725" width="0.8996%" height="15" fill="rgb(224,169,11)"/><text x="6.6968%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.75%)</title><rect x="6.5967%" y="709" width="0.7496%" height="15" fill="rgb(250,166,2)"/><text x="6.8467%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.60%)</title><rect x="6.7466%" y="693" width="0.5997%" height="15" fill="rgb(242,216,29)"/><text x="6.9966%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.60%)</title><rect x="6.7466%" y="677" width="0.5997%" height="15" fill="rgb(230,116,27)"/><text x="6.9966%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.60%)</title><rect x="6.7466%" y="661" width="0.5997%" height="15" fill="rgb(228,99,48)"/><text x="6.9966%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (4 samples, 0.60%)</title><rect x="6.7466%" y="645" width="0.5997%" height="15" fill="rgb(253,11,6)"/><text x="6.9966%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.60%)</title><rect x="6.7466%" y="629" width="0.5997%" height="15" fill="rgb(247,143,39)"/><text x="6.9966%" y="639.50"></text></g><g><title>__libc_recv (4 samples, 0.60%)</title><rect x="6.7466%" y="613" width="0.5997%" height="15" fill="rgb(236,97,10)"/><text x="6.9966%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.45%)</title><rect x="6.8966%" y="597" width="0.4498%" height="15" fill="rgb(233,208,19)"/><text x="7.1466%" y="607.50"></text></g><g><title>do_syscall_64 (3 samples, 0.45%)</title><rect x="6.8966%" y="581" width="0.4498%" height="15" fill="rgb(216,164,2)"/><text x="7.1466%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (3 samples, 0.45%)</title><rect x="6.8966%" y="565" width="0.4498%" height="15" fill="rgb(220,129,5)"/><text x="7.1466%" y="575.50"></text></g><g><title>__sys_recvfrom (3 samples, 0.45%)</title><rect x="6.8966%" y="549" width="0.4498%" height="15" fill="rgb(242,17,10)"/><text x="7.1466%" y="559.50"></text></g><g><title>inet_recvmsg (3 samples, 0.45%)</title><rect x="6.8966%" y="533" width="0.4498%" height="15" fill="rgb(242,107,0)"/><text x="7.1466%" y="543.50"></text></g><g><title>tcp_recvmsg (3 samples, 0.45%)</title><rect x="6.8966%" y="517" width="0.4498%" height="15" fill="rgb(251,28,31)"/><text x="7.1466%" y="527.50"></text></g><g><title>sk_wait_data (2 samples, 0.30%)</title><rect x="7.0465%" y="501" width="0.2999%" height="15" fill="rgb(233,223,10)"/><text x="7.2965%" y="511.50"></text></g><g><title>wait_woken (2 samples, 0.30%)</title><rect x="7.0465%" y="485" width="0.2999%" height="15" fill="rgb(215,21,27)"/><text x="7.2965%" y="495.50"></text></g><g><title>schedule_timeout (1 samples, 0.15%)</title><rect x="7.1964%" y="469" width="0.1499%" height="15" fill="rgb(232,23,21)"/><text x="7.4464%" y="479.50"></text></g><g><title>schedule (1 samples, 0.15%)</title><rect x="7.1964%" y="453" width="0.1499%" height="15" fill="rgb(244,5,23)"/><text x="7.4464%" y="463.50"></text></g><g><title>__schedule (1 samples, 0.15%)</title><rect x="7.1964%" y="437" width="0.1499%" height="15" fill="rgb(226,81,46)"/><text x="7.4464%" y="447.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="7.1964%" y="421" width="0.1499%" height="15" fill="rgb(247,70,30)"/><text x="7.4464%" y="431.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="7.1964%" y="405" width="0.1499%" height="15" fill="rgb(212,68,19)"/><text x="7.4464%" y="415.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (12 samples, 1.80%)</title><rect x="5.8471%" y="805" width="1.7991%" height="15" fill="rgb(240,187,13)"/><text x="6.0971%" y="815.50">d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (12 samples, 1.80%)</title><rect x="5.8471%" y="789" width="1.7991%" height="15" fill="rgb(223,113,26)"/><text x="6.0971%" y="799.50">d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (2 samples, 0.30%)</title><rect x="7.3463%" y="773" width="0.2999%" height="15" fill="rgb(206,192,2)"/><text x="7.5963%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="7.4963%" y="757" width="0.1499%" height="15" fill="rgb(241,108,4)"/><text x="7.7463%" y="767.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.15%)</title><rect x="7.6462%" y="805" width="0.1499%" height="15" fill="rgb(247,173,49)"/><text x="7.8962%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.6462%" y="789" width="0.1499%" height="15" fill="rgb(224,114,35)"/><text x="7.8962%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.6462%" y="773" width="0.1499%" height="15" fill="rgb(245,159,27)"/><text x="7.8962%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.6462%" y="757" width="0.1499%" height="15" fill="rgb(245,172,44)"/><text x="7.8962%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.6462%" y="741" width="0.1499%" height="15" fill="rgb(236,23,11)"/><text x="7.8962%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.6462%" y="725" width="0.1499%" height="15" fill="rgb(205,117,38)"/><text x="7.8962%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.6462%" y="709" width="0.1499%" height="15" fill="rgb(237,72,25)"/><text x="7.8962%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.7961%" y="757" width="0.1499%" height="15" fill="rgb(244,70,9)"/><text x="8.0461%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.7961%" y="741" width="0.1499%" height="15" fill="rgb(217,125,39)"/><text x="8.0461%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="7.7961%" y="725" width="0.1499%" height="15" fill="rgb(235,36,10)"/><text x="8.0461%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="7.7961%" y="709" width="0.1499%" height="15" fill="rgb(251,123,47)"/><text x="8.0461%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="7.7961%" y="693" width="0.1499%" height="15" fill="rgb(221,13,13)"/><text x="8.0461%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="7.7961%" y="677" width="0.1499%" height="15" fill="rgb(238,131,9)"/><text x="8.0461%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="7.7961%" y="661" width="0.1499%" height="15" fill="rgb(211,50,8)"/><text x="8.0461%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="7.7961%" y="645" width="0.1499%" height="15" fill="rgb(245,182,24)"/><text x="8.0461%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="7.7961%" y="629" width="0.1499%" height="15" fill="rgb(242,14,37)"/><text x="8.0461%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="7.7961%" y="613" width="0.1499%" height="15" fill="rgb(246,228,12)"/><text x="8.0461%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="7.7961%" y="597" width="0.1499%" height="15" fill="rgb(213,55,15)"/><text x="8.0461%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="7.7961%" y="581" width="0.1499%" height="15" fill="rgb(209,9,3)"/><text x="8.0461%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.15%)</title><rect x="7.7961%" y="565" width="0.1499%" height="15" fill="rgb(230,59,30)"/><text x="8.0461%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.15%)</title><rect x="7.9460%" y="757" width="0.1499%" height="15" fill="rgb(209,121,21)"/><text x="8.1960%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="7.9460%" y="741" width="0.1499%" height="15" fill="rgb(220,109,13)"/><text x="8.1960%" y="751.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="8.3958%" y="741" width="0.1499%" height="15" fill="rgb(232,18,1)"/><text x="8.6458%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="8.3958%" y="725" width="0.1499%" height="15" fill="rgb(215,41,42)"/><text x="8.6458%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="8.3958%" y="709" width="0.1499%" height="15" fill="rgb(224,123,36)"/><text x="8.6458%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="8.3958%" y="693" width="0.1499%" height="15" fill="rgb(240,125,3)"/><text x="8.6458%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="8.3958%" y="677" width="0.1499%" height="15" fill="rgb(205,98,50)"/><text x="8.6458%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="8.3958%" y="661" width="0.1499%" height="15" fill="rgb(205,185,37)"/><text x="8.6458%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="8.3958%" y="645" width="0.1499%" height="15" fill="rgb(238,207,15)"/><text x="8.6458%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="8.3958%" y="629" width="0.1499%" height="15" fill="rgb(213,199,42)"/><text x="8.6458%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="8.3958%" y="613" width="0.1499%" height="15" fill="rgb(235,201,11)"/><text x="8.6458%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="8.3958%" y="597" width="0.1499%" height="15" fill="rgb(207,46,11)"/><text x="8.6458%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="8.3958%" y="581" width="0.1499%" height="15" fill="rgb(241,35,35)"/><text x="8.6458%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="8.3958%" y="565" width="0.1499%" height="15" fill="rgb(243,32,47)"/><text x="8.6458%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="8.3958%" y="549" width="0.1499%" height="15" fill="rgb(247,202,23)"/><text x="8.6458%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="8.3958%" y="533" width="0.1499%" height="15" fill="rgb(219,102,11)"/><text x="8.6458%" y="543.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (5 samples, 0.75%)</title><rect x="8.0960%" y="757" width="0.7496%" height="15" fill="rgb(243,110,44)"/><text x="8.3460%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.30%)</title><rect x="8.5457%" y="741" width="0.2999%" height="15" fill="rgb(222,74,54)"/><text x="8.7957%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="8.8456%" y="725" width="0.1499%" height="15" fill="rgb(216,99,12)"/><text x="9.0956%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="8.8456%" y="709" width="0.1499%" height="15" fill="rgb(226,22,26)"/><text x="9.0956%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="8.8456%" y="693" width="0.1499%" height="15" fill="rgb(217,163,10)"/><text x="9.0956%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="8.8456%" y="677" width="0.1499%" height="15" fill="rgb(213,25,53)"/><text x="9.0956%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="8.8456%" y="661" width="0.1499%" height="15" fill="rgb(252,105,26)"/><text x="9.0956%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="8.8456%" y="645" width="0.1499%" height="15" fill="rgb(220,39,43)"/><text x="9.0956%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="8.8456%" y="629" width="0.1499%" height="15" fill="rgb(229,68,48)"/><text x="9.0956%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="8.8456%" y="613" width="0.1499%" height="15" fill="rgb(252,8,32)"/><text x="9.0956%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="8.8456%" y="597" width="0.1499%" height="15" fill="rgb(223,20,43)"/><text x="9.0956%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="8.8456%" y="581" width="0.1499%" height="15" fill="rgb(229,81,49)"/><text x="9.0956%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="8.8456%" y="565" width="0.1499%" height="15" fill="rgb(236,28,36)"/><text x="9.0956%" y="575.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (22 samples, 3.30%)</title><rect x="5.8471%" y="821" width="3.2984%" height="15" fill="rgb(249,185,26)"/><text x="6.0971%" y="831.50">&lt;de..</text></g><g><title>decor_mem::stats::get_qtype (9 samples, 1.35%)</title><rect x="7.7961%" y="805" width="1.3493%" height="15" fill="rgb(249,174,33)"/><text x="8.0461%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (9 samples, 1.35%)</title><rect x="7.7961%" y="789" width="1.3493%" height="15" fill="rgb(233,201,37)"/><text x="8.0461%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (9 samples, 1.35%)</title><rect x="7.7961%" y="773" width="1.3493%" height="15" fill="rgb(221,78,26)"/><text x="8.0461%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (2 samples, 0.30%)</title><rect x="8.8456%" y="757" width="0.2999%" height="15" fill="rgb(250,127,30)"/><text x="9.0956%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.30%)</title><rect x="8.8456%" y="741" width="0.2999%" height="15" fill="rgb(230,49,44)"/><text x="9.0956%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="8.9955%" y="725" width="0.1499%" height="15" fill="rgb(229,67,23)"/><text x="9.2455%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.15%)</title><rect x="8.9955%" y="709" width="0.1499%" height="15" fill="rgb(249,83,47)"/><text x="9.2455%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="8.9955%" y="693" width="0.1499%" height="15" fill="rgb(215,43,3)"/><text x="9.2455%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="8.9955%" y="677" width="0.1499%" height="15" fill="rgb(238,154,13)"/><text x="9.2455%" y="687.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="8.9955%" y="661" width="0.1499%" height="15" fill="rgb(219,56,2)"/><text x="9.2455%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="9.1454%" y="821" width="0.1499%" height="15" fill="rgb(233,0,4)"/><text x="9.3954%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="9.2954%" y="821" width="0.1499%" height="15" fill="rgb(235,30,7)"/><text x="9.5454%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="9.4453%" y="821" width="0.1499%" height="15" fill="rgb(250,79,13)"/><text x="9.6953%" y="831.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.15%)</title><rect x="9.5952%" y="821" width="0.1499%" height="15" fill="rgb(211,146,34)"/><text x="9.8452%" y="831.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.15%)</title><rect x="9.5952%" y="805" width="0.1499%" height="15" fill="rgb(228,22,38)"/><text x="9.8452%" y="815.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.15%)</title><rect x="9.5952%" y="789" width="0.1499%" height="15" fill="rgb(235,168,5)"/><text x="9.8452%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.15%)</title><rect x="9.5952%" y="773" width="0.1499%" height="15" fill="rgb(221,155,16)"/><text x="9.8452%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="9.7451%" y="821" width="0.1499%" height="15" fill="rgb(215,215,53)"/><text x="9.9951%" y="831.50"></text></g><g><title>__GI___sched_setaffinity_new (1 samples, 0.15%)</title><rect x="9.8951%" y="821" width="0.1499%" height="15" fill="rgb(223,4,10)"/><text x="10.1451%" y="831.50"></text></g><g><title>hwloc::Topology::new (7 samples, 1.05%)</title><rect x="10.0450%" y="661" width="1.0495%" height="15" fill="rgb(234,103,6)"/><text x="10.2950%" y="671.50"></text></g><g><title>hwloc_topology_load (7 samples, 1.05%)</title><rect x="10.0450%" y="645" width="1.0495%" height="15" fill="rgb(227,97,0)"/><text x="10.2950%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 1.05%)</title><rect x="10.0450%" y="629" width="1.0495%" height="15" fill="rgb(234,150,53)"/><text x="10.2950%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 1.05%)</title><rect x="10.0450%" y="613" width="1.0495%" height="15" fill="rgb(228,201,54)"/><text x="10.2950%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 1.05%)</title><rect x="10.0450%" y="597" width="1.0495%" height="15" fill="rgb(222,22,37)"/><text x="10.2950%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 1.05%)</title><rect x="10.0450%" y="581" width="1.0495%" height="15" fill="rgb(237,53,32)"/><text x="10.2950%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 1.05%)</title><rect x="10.0450%" y="565" width="1.0495%" height="15" fill="rgb(233,25,53)"/><text x="10.2950%" y="575.50"></text></g><g><title>__libc_start_main (8 samples, 1.20%)</title><rect x="10.0450%" y="821" width="1.1994%" height="15" fill="rgb(210,40,34)"/><text x="10.2950%" y="831.50"></text></g><g><title>main (8 samples, 1.20%)</title><rect x="10.0450%" y="805" width="1.1994%" height="15" fill="rgb(241,220,44)"/><text x="10.2950%" y="815.50"></text></g><g><title>std::rt::lang_start_internal (8 samples, 1.20%)</title><rect x="10.0450%" y="789" width="1.1994%" height="15" fill="rgb(235,28,35)"/><text x="10.2950%" y="799.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 1.20%)</title><rect x="10.0450%" y="773" width="1.1994%" height="15" fill="rgb(210,56,17)"/><text x="10.2950%" y="783.50"></text></g><g><title>std::panicking::try (8 samples, 1.20%)</title><rect x="10.0450%" y="757" width="1.1994%" height="15" fill="rgb(224,130,29)"/><text x="10.2950%" y="767.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 1.20%)</title><rect x="10.0450%" y="741" width="1.1994%" height="15" fill="rgb(235,212,8)"/><text x="10.2950%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (8 samples, 1.20%)</title><rect x="10.0450%" y="725" width="1.1994%" height="15" fill="rgb(223,33,50)"/><text x="10.2950%" y="735.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (8 samples, 1.20%)</title><rect x="10.0450%" y="709" width="1.1994%" height="15" fill="rgb(219,149,13)"/><text x="10.2950%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 1.20%)</title><rect x="10.0450%" y="693" width="1.1994%" height="15" fill="rgb(250,156,29)"/><text x="10.2950%" y="703.50"></text></g><g><title>lobsters_microbenchmarks::main (8 samples, 1.20%)</title><rect x="10.0450%" y="677" width="1.1994%" height="15" fill="rgb(216,193,19)"/><text x="10.2950%" y="687.50"></text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (1 samples, 0.15%)</title><rect x="11.0945%" y="661" width="0.1499%" height="15" fill="rgb(216,135,14)"/><text x="11.3445%" y="671.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.15%)</title><rect x="11.0945%" y="645" width="0.1499%" height="15" fill="rgb(241,47,5)"/><text x="11.3445%" y="655.50"></text></g><g><title>_int_free (3 samples, 0.45%)</title><rect x="11.2444%" y="821" width="0.4498%" height="15" fill="rgb(233,42,35)"/><text x="11.4944%" y="831.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.15%)</title><rect x="11.6942%" y="821" width="0.1499%" height="15" fill="rgb(231,13,6)"/><text x="11.9442%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.15%)</title><rect x="11.8441%" y="821" width="0.1499%" height="15" fill="rgb(207,181,40)"/><text x="12.0941%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="11.9940%" y="821" width="0.1499%" height="15" fill="rgb(254,173,49)"/><text x="12.2440%" y="831.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.15%)</title><rect x="12.1439%" y="773" width="0.1499%" height="15" fill="rgb(221,1,38)"/><text x="12.3939%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="12.1439%" y="757" width="0.1499%" height="15" fill="rgb(206,124,46)"/><text x="12.3939%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="12.1439%" y="741" width="0.1499%" height="15" fill="rgb(249,21,11)"/><text x="12.3939%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="12.1439%" y="725" width="0.1499%" height="15" fill="rgb(222,201,40)"/><text x="12.3939%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="12.1439%" y="709" width="0.1499%" height="15" fill="rgb(235,61,29)"/><text x="12.3939%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="12.1439%" y="693" width="0.1499%" height="15" fill="rgb(219,207,3)"/><text x="12.3939%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="12.1439%" y="677" width="0.1499%" height="15" fill="rgb(222,56,46)"/><text x="12.3939%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="12.1439%" y="661" width="0.1499%" height="15" fill="rgb(239,76,54)"/><text x="12.3939%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="12.1439%" y="645" width="0.1499%" height="15" fill="rgb(231,124,27)"/><text x="12.3939%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="12.1439%" y="629" width="0.1499%" height="15" fill="rgb(249,195,6)"/><text x="12.3939%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="12.1439%" y="613" width="0.1499%" height="15" fill="rgb(237,174,47)"/><text x="12.3939%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="12.1439%" y="597" width="0.1499%" height="15" fill="rgb(206,201,31)"/><text x="12.3939%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="12.1439%" y="581" width="0.1499%" height="15" fill="rgb(231,57,52)"/><text x="12.3939%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="12.1439%" y="565" width="0.1499%" height="15" fill="rgb(248,177,22)"/><text x="12.3939%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="12.4438%" y="741" width="0.1499%" height="15" fill="rgb(215,211,37)"/><text x="12.6938%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="12.4438%" y="725" width="0.1499%" height="15" fill="rgb(241,128,51)"/><text x="12.6938%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="12.4438%" y="709" width="0.1499%" height="15" fill="rgb(227,165,31)"/><text x="12.6938%" y="719.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (4 samples, 0.60%)</title><rect x="12.1439%" y="821" width="0.5997%" height="15" fill="rgb(228,167,24)"/><text x="12.3939%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.60%)</title><rect x="12.1439%" y="805" width="0.5997%" height="15" fill="rgb(228,143,12)"/><text x="12.3939%" y="815.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.60%)</title><rect x="12.1439%" y="789" width="0.5997%" height="15" fill="rgb(249,149,8)"/><text x="12.3939%" y="799.50"></text></g><g><title>decor_mem::stats::get_qtype (3 samples, 0.45%)</title><rect x="12.2939%" y="773" width="0.4498%" height="15" fill="rgb(243,35,44)"/><text x="12.5439%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.45%)</title><rect x="12.2939%" y="757" width="0.4498%" height="15" fill="rgb(246,89,9)"/><text x="12.5439%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.15%)</title><rect x="12.5937%" y="741" width="0.1499%" height="15" fill="rgb(233,213,13)"/><text x="12.8437%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="12.5937%" y="725" width="0.1499%" height="15" fill="rgb(233,141,41)"/><text x="12.8437%" y="735.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="12.5937%" y="709" width="0.1499%" height="15" fill="rgb(239,167,4)"/><text x="12.8437%" y="719.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="12.5937%" y="693" width="0.1499%" height="15" fill="rgb(209,217,16)"/><text x="12.8437%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="12.5937%" y="677" width="0.1499%" height="15" fill="rgb(219,88,35)"/><text x="12.8437%" y="687.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.15%)</title><rect x="12.5937%" y="661" width="0.1499%" height="15" fill="rgb(220,193,23)"/><text x="12.8437%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="12.7436%" y="757" width="0.1499%" height="15" fill="rgb(230,90,52)"/><text x="12.9936%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="12.7436%" y="741" width="0.1499%" height="15" fill="rgb(252,106,19)"/><text x="12.9936%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="12.7436%" y="725" width="0.1499%" height="15" fill="rgb(206,74,20)"/><text x="12.9936%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="12.7436%" y="709" width="0.1499%" height="15" fill="rgb(230,138,44)"/><text x="12.9936%" y="719.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (2 samples, 0.30%)</title><rect x="12.7436%" y="805" width="0.2999%" height="15" fill="rgb(235,182,43)"/><text x="12.9936%" y="815.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::expr_to_value_expr (2 samples, 0.30%)</title><rect x="12.7436%" y="789" width="0.2999%" height="15" fill="rgb(242,16,51)"/><text x="12.9936%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="12.7436%" y="773" width="0.2999%" height="15" fill="rgb(248,9,4)"/><text x="12.9936%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="12.8936%" y="757" width="0.1499%" height="15" fill="rgb(210,31,22)"/><text x="13.1436%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="12.8936%" y="741" width="0.1499%" height="15" fill="rgb(239,54,39)"/><text x="13.1436%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="12.8936%" y="725" width="0.1499%" height="15" fill="rgb(230,99,41)"/><text x="13.1436%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="12.8936%" y="709" width="0.1499%" height="15" fill="rgb(253,106,12)"/><text x="13.1436%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="12.8936%" y="693" width="0.1499%" height="15" fill="rgb(213,46,41)"/><text x="13.1436%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="12.8936%" y="677" width="0.1499%" height="15" fill="rgb(215,133,35)"/><text x="13.1436%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="12.8936%" y="661" width="0.1499%" height="15" fill="rgb(213,28,5)"/><text x="13.1436%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="12.8936%" y="645" width="0.1499%" height="15" fill="rgb(215,77,49)"/><text x="13.1436%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="12.8936%" y="629" width="0.1499%" height="15" fill="rgb(248,100,22)"/><text x="13.1436%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="12.8936%" y="613" width="0.1499%" height="15" fill="rgb(208,67,9)"/><text x="13.1436%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="12.8936%" y="597" width="0.1499%" height="15" fill="rgb(219,133,21)"/><text x="13.1436%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="12.8936%" y="581" width="0.1499%" height="15" fill="rgb(246,46,29)"/><text x="13.1436%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.15%)</title><rect x="12.8936%" y="565" width="0.1499%" height="15" fill="rgb(246,185,52)"/><text x="13.1436%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="13.0435%" y="773" width="0.1499%" height="15" fill="rgb(252,136,11)"/><text x="13.2935%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="13.1934%" y="725" width="0.1499%" height="15" fill="rgb(219,138,53)"/><text x="13.4434%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="13.1934%" y="709" width="0.1499%" height="15" fill="rgb(211,51,23)"/><text x="13.4434%" y="719.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (8 samples, 1.20%)</title><rect x="12.7436%" y="821" width="1.1994%" height="15" fill="rgb(247,221,28)"/><text x="12.9936%" y="831.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::selection_to_datatable_selection (6 samples, 0.90%)</title><rect x="13.0435%" y="805" width="0.8996%" height="15" fill="rgb(251,222,45)"/><text x="13.2935%" y="815.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (6 samples, 0.90%)</title><rect x="13.0435%" y="789" width="0.8996%" height="15" fill="rgb(217,162,53)"/><text x="13.2935%" y="799.50"></text></g><g><title>decor_mem::helpers::expr_is_ucol (5 samples, 0.75%)</title><rect x="13.1934%" y="773" width="0.7496%" height="15" fill="rgb(229,93,14)"/><text x="13.4434%" y="783.50"></text></g><g><title>core::fmt::write (5 samples, 0.75%)</title><rect x="13.1934%" y="757" width="0.7496%" height="15" fill="rgb(209,67,49)"/><text x="13.4434%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (5 samples, 0.75%)</title><rect x="13.1934%" y="741" width="0.7496%" height="15" fill="rgb(213,87,29)"/><text x="13.4434%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.60%)</title><rect x="13.3433%" y="725" width="0.5997%" height="15" fill="rgb(205,151,52)"/><text x="13.5933%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.60%)</title><rect x="13.3433%" y="709" width="0.5997%" height="15" fill="rgb(253,215,39)"/><text x="13.5933%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.45%)</title><rect x="13.4933%" y="693" width="0.4498%" height="15" fill="rgb(221,220,41)"/><text x="13.7433%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="13.7931%" y="677" width="0.1499%" height="15" fill="rgb(218,133,21)"/><text x="14.0431%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="13.7931%" y="661" width="0.1499%" height="15" fill="rgb(221,193,43)"/><text x="14.0431%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="13.7931%" y="645" width="0.1499%" height="15" fill="rgb(240,128,52)"/><text x="14.0431%" y="655.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (1 samples, 0.15%)</title><rect x="13.9430%" y="821" width="0.1499%" height="15" fill="rgb(253,114,12)"/><text x="14.1930%" y="831.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="14.0930%" y="773" width="0.1499%" height="15" fill="rgb(215,223,47)"/><text x="14.3430%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.15%)</title><rect x="14.2429%" y="773" width="0.1499%" height="15" fill="rgb(248,225,23)"/><text x="14.4929%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="14.2429%" y="757" width="0.1499%" height="15" fill="rgb(250,108,0)"/><text x="14.4929%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="14.3928%" y="741" width="0.1499%" height="15" fill="rgb(228,208,7)"/><text x="14.6428%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="14.3928%" y="725" width="0.1499%" height="15" fill="rgb(244,45,10)"/><text x="14.6428%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="14.3928%" y="709" width="0.1499%" height="15" fill="rgb(207,125,25)"/><text x="14.6428%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="14.3928%" y="693" width="0.1499%" height="15" fill="rgb(210,195,18)"/><text x="14.6428%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="14.3928%" y="677" width="0.1499%" height="15" fill="rgb(249,80,12)"/><text x="14.6428%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="14.3928%" y="661" width="0.1499%" height="15" fill="rgb(221,65,9)"/><text x="14.6428%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="14.3928%" y="645" width="0.1499%" height="15" fill="rgb(235,49,36)"/><text x="14.6428%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="14.3928%" y="629" width="0.1499%" height="15" fill="rgb(225,32,20)"/><text x="14.6428%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="14.3928%" y="613" width="0.1499%" height="15" fill="rgb(215,141,46)"/><text x="14.6428%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="14.3928%" y="597" width="0.1499%" height="15" fill="rgb(250,160,47)"/><text x="14.6428%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="14.3928%" y="581" width="0.1499%" height="15" fill="rgb(216,222,40)"/><text x="14.6428%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="14.3928%" y="565" width="0.1499%" height="15" fill="rgb(234,217,39)"/><text x="14.6428%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="14.3928%" y="549" width="0.1499%" height="15" fill="rgb(207,178,40)"/><text x="14.6428%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="14.3928%" y="533" width="0.1499%" height="15" fill="rgb(221,136,13)"/><text x="14.6428%" y="543.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.60%)</title><rect x="14.0930%" y="821" width="0.5997%" height="15" fill="rgb(249,199,10)"/><text x="14.3430%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.60%)</title><rect x="14.0930%" y="805" width="0.5997%" height="15" fill="rgb(249,222,13)"/><text x="14.3430%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.60%)</title><rect x="14.0930%" y="789" width="0.5997%" height="15" fill="rgb(244,185,38)"/><text x="14.3430%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (2 samples, 0.30%)</title><rect x="14.3928%" y="773" width="0.2999%" height="15" fill="rgb(236,202,9)"/><text x="14.6428%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.30%)</title><rect x="14.3928%" y="757" width="0.2999%" height="15" fill="rgb(250,229,37)"/><text x="14.6428%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="14.5427%" y="741" width="0.1499%" height="15" fill="rgb(206,174,23)"/><text x="14.7927%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="14.5427%" y="725" width="0.1499%" height="15" fill="rgb(211,33,43)"/><text x="14.7927%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="14.6927%" y="789" width="0.1499%" height="15" fill="rgb(245,58,50)"/><text x="14.9427%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="14.6927%" y="773" width="0.1499%" height="15" fill="rgb(244,68,36)"/><text x="14.9427%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="14.6927%" y="757" width="0.1499%" height="15" fill="rgb(232,229,15)"/><text x="14.9427%" y="767.50"></text></g><g><title>dlopen (1 samples, 0.15%)</title><rect x="14.6927%" y="741" width="0.1499%" height="15" fill="rgb(254,30,23)"/><text x="14.9427%" y="751.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="14.6927%" y="725" width="0.1499%" height="15" fill="rgb(235,160,14)"/><text x="14.9427%" y="735.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.15%)</title><rect x="14.6927%" y="709" width="0.1499%" height="15" fill="rgb(212,155,44)"/><text x="14.9427%" y="719.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="14.6927%" y="693" width="0.1499%" height="15" fill="rgb(226,2,50)"/><text x="14.9427%" y="703.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.15%)</title><rect x="14.6927%" y="677" width="0.1499%" height="15" fill="rgb(234,177,6)"/><text x="14.9427%" y="687.50"></text></g><g><title>_dl_open (1 samples, 0.15%)</title><rect x="14.6927%" y="661" width="0.1499%" height="15" fill="rgb(217,24,9)"/><text x="14.9427%" y="671.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.15%)</title><rect x="14.6927%" y="645" width="0.1499%" height="15" fill="rgb(220,13,46)"/><text x="14.9427%" y="655.50"></text></g><g><title>dl_open_worker (1 samples, 0.15%)</title><rect x="14.6927%" y="629" width="0.1499%" height="15" fill="rgb(239,221,27)"/><text x="14.9427%" y="639.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.15%)</title><rect x="14.6927%" y="613" width="0.1499%" height="15" fill="rgb(222,198,25)"/><text x="14.9427%" y="623.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.30%)</title><rect x="14.6927%" y="805" width="0.2999%" height="15" fill="rgb(211,99,13)"/><text x="14.9427%" y="815.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.15%)</title><rect x="14.8426%" y="789" width="0.1499%" height="15" fill="rgb(232,111,31)"/><text x="15.0926%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="14.8426%" y="773" width="0.1499%" height="15" fill="rgb(245,82,37)"/><text x="15.0926%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="14.8426%" y="757" width="0.1499%" height="15" fill="rgb(227,149,46)"/><text x="15.0926%" y="767.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.15%)</title><rect x="14.8426%" y="741" width="0.1499%" height="15" fill="rgb(218,36,50)"/><text x="15.0926%" y="751.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.15%)</title><rect x="14.8426%" y="725" width="0.1499%" height="15" fill="rgb(226,80,48)"/><text x="15.0926%" y="735.50"></text></g><g><title>remove_wait_queue (1 samples, 0.15%)</title><rect x="15.1424%" y="501" width="0.1499%" height="15" fill="rgb(238,224,15)"/><text x="15.3924%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="15.1424%" y="485" width="0.1499%" height="15" fill="rgb(241,136,10)"/><text x="15.3924%" y="495.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.15%)</title><rect x="15.2924%" y="437" width="0.1499%" height="15" fill="rgb(208,32,45)"/><text x="15.5424%" y="447.50"></text></g><g><title>newidle_balance (1 samples, 0.15%)</title><rect x="15.2924%" y="421" width="0.1499%" height="15" fill="rgb(207,135,9)"/><text x="15.5424%" y="431.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.45%)</title><rect x="15.1424%" y="709" width="0.4498%" height="15" fill="rgb(206,86,44)"/><text x="15.3924%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.45%)</title><rect x="15.1424%" y="693" width="0.4498%" height="15" fill="rgb(245,177,15)"/><text x="15.3924%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.45%)</title><rect x="15.1424%" y="677" width="0.4498%" height="15" fill="rgb(206,64,50)"/><text x="15.3924%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (3 samples, 0.45%)</title><rect x="15.1424%" y="661" width="0.4498%" height="15" fill="rgb(234,36,40)"/><text x="15.3924%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.45%)</title><rect x="15.1424%" y="645" width="0.4498%" height="15" fill="rgb(213,64,8)"/><text x="15.3924%" y="655.50"></text></g><g><title>__libc_recv (3 samples, 0.45%)</title><rect x="15.1424%" y="629" width="0.4498%" height="15" fill="rgb(210,75,36)"/><text x="15.3924%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.45%)</title><rect x="15.1424%" y="613" width="0.4498%" height="15" fill="rgb(229,88,21)"/><text x="15.3924%" y="623.50"></text></g><g><title>do_syscall_64 (3 samples, 0.45%)</title><rect x="15.1424%" y="597" width="0.4498%" height="15" fill="rgb(252,204,47)"/><text x="15.3924%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (3 samples, 0.45%)</title><rect x="15.1424%" y="581" width="0.4498%" height="15" fill="rgb(208,77,27)"/><text x="15.3924%" y="591.50"></text></g><g><title>__sys_recvfrom (3 samples, 0.45%)</title><rect x="15.1424%" y="565" width="0.4498%" height="15" fill="rgb(221,76,26)"/><text x="15.3924%" y="575.50"></text></g><g><title>inet_recvmsg (3 samples, 0.45%)</title><rect x="15.1424%" y="549" width="0.4498%" height="15" fill="rgb(225,139,18)"/><text x="15.3924%" y="559.50"></text></g><g><title>tcp_recvmsg (3 samples, 0.45%)</title><rect x="15.1424%" y="533" width="0.4498%" height="15" fill="rgb(230,137,11)"/><text x="15.3924%" y="543.50"></text></g><g><title>sk_wait_data (3 samples, 0.45%)</title><rect x="15.1424%" y="517" width="0.4498%" height="15" fill="rgb(212,28,1)"/><text x="15.3924%" y="527.50"></text></g><g><title>wait_woken (2 samples, 0.30%)</title><rect x="15.2924%" y="501" width="0.2999%" height="15" fill="rgb(248,164,17)"/><text x="15.5424%" y="511.50"></text></g><g><title>schedule_timeout (2 samples, 0.30%)</title><rect x="15.2924%" y="485" width="0.2999%" height="15" fill="rgb(222,171,42)"/><text x="15.5424%" y="495.50"></text></g><g><title>schedule (2 samples, 0.30%)</title><rect x="15.2924%" y="469" width="0.2999%" height="15" fill="rgb(243,84,45)"/><text x="15.5424%" y="479.50"></text></g><g><title>__schedule (2 samples, 0.30%)</title><rect x="15.2924%" y="453" width="0.2999%" height="15" fill="rgb(252,49,23)"/><text x="15.5424%" y="463.50"></text></g><g><title>update_rq_clock (1 samples, 0.15%)</title><rect x="15.4423%" y="437" width="0.1499%" height="15" fill="rgb(215,19,7)"/><text x="15.6923%" y="447.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.15%)</title><rect x="15.4423%" y="421" width="0.1499%" height="15" fill="rgb(238,81,41)"/><text x="15.6923%" y="431.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (5 samples, 0.75%)</title><rect x="14.9925%" y="757" width="0.7496%" height="15" fill="rgb(210,199,37)"/><text x="15.2425%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.60%)</title><rect x="15.1424%" y="741" width="0.5997%" height="15" fill="rgb(244,192,49)"/><text x="15.3924%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.60%)</title><rect x="15.1424%" y="725" width="0.5997%" height="15" fill="rgb(226,211,11)"/><text x="15.3924%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.15%)</title><rect x="15.5922%" y="709" width="0.1499%" height="15" fill="rgb(236,162,54)"/><text x="15.8422%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.15%)</title><rect x="15.5922%" y="693" width="0.1499%" height="15" fill="rgb(220,229,9)"/><text x="15.8422%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="15.5922%" y="677" width="0.1499%" height="15" fill="rgb(250,87,22)"/><text x="15.8422%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="15.5922%" y="661" width="0.1499%" height="15" fill="rgb(239,43,17)"/><text x="15.8422%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="15.5922%" y="645" width="0.1499%" height="15" fill="rgb(231,177,25)"/><text x="15.8422%" y="655.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.15%)</title><rect x="15.7421%" y="405" width="0.1499%" height="15" fill="rgb(219,179,1)"/><text x="15.9921%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.15%)</title><rect x="15.7421%" y="389" width="0.1499%" height="15" fill="rgb(238,219,53)"/><text x="15.9921%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.15%)</title><rect x="15.7421%" y="373" width="0.1499%" height="15" fill="rgb(232,167,36)"/><text x="15.9921%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.15%)</title><rect x="15.7421%" y="357" width="0.1499%" height="15" fill="rgb(244,19,51)"/><text x="15.9921%" y="367.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="16.1919%" y="181" width="0.1499%" height="15" fill="rgb(224,6,22)"/><text x="16.4419%" y="191.50"></text></g><g><title>sock_def_readable (3 samples, 0.45%)</title><rect x="16.1919%" y="245" width="0.4498%" height="15" fill="rgb(224,145,5)"/><text x="16.4419%" y="255.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.45%)</title><rect x="16.1919%" y="229" width="0.4498%" height="15" fill="rgb(234,130,49)"/><text x="16.4419%" y="239.50"></text></g><g><title>__wake_up_common (3 samples, 0.45%)</title><rect x="16.1919%" y="213" width="0.4498%" height="15" fill="rgb(254,6,2)"/><text x="16.4419%" y="223.50"></text></g><g><title>try_to_wake_up (3 samples, 0.45%)</title><rect x="16.1919%" y="197" width="0.4498%" height="15" fill="rgb(208,96,46)"/><text x="16.4419%" y="207.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.30%)</title><rect x="16.3418%" y="181" width="0.2999%" height="15" fill="rgb(239,3,39)"/><text x="16.5918%" y="191.50"></text></g><g><title>enqueue_entity (2 samples, 0.30%)</title><rect x="16.3418%" y="165" width="0.2999%" height="15" fill="rgb(233,210,1)"/><text x="16.5918%" y="175.50"></text></g><g><title>update_load_avg (2 samples, 0.30%)</title><rect x="16.3418%" y="149" width="0.2999%" height="15" fill="rgb(244,137,37)"/><text x="16.5918%" y="159.50"></text></g><g><title>__tcp_push_pending_frames (7 samples, 1.05%)</title><rect x="15.7421%" y="565" width="1.0495%" height="15" fill="rgb(240,136,2)"/><text x="15.9921%" y="575.50"></text></g><g><title>tcp_write_xmit (7 samples, 1.05%)</title><rect x="15.7421%" y="549" width="1.0495%" height="15" fill="rgb(239,18,37)"/><text x="15.9921%" y="559.50"></text></g><g><title>__tcp_transmit_skb (7 samples, 1.05%)</title><rect x="15.7421%" y="533" width="1.0495%" height="15" fill="rgb(218,185,22)"/><text x="15.9921%" y="543.50"></text></g><g><title>__ip_queue_xmit (7 samples, 1.05%)</title><rect x="15.7421%" y="517" width="1.0495%" height="15" fill="rgb(225,218,4)"/><text x="15.9921%" y="527.50"></text></g><g><title>ip_output (7 samples, 1.05%)</title><rect x="15.7421%" y="501" width="1.0495%" height="15" fill="rgb(230,182,32)"/><text x="15.9921%" y="511.50"></text></g><g><title>ip_finish_output2 (7 samples, 1.05%)</title><rect x="15.7421%" y="485" width="1.0495%" height="15" fill="rgb(242,56,43)"/><text x="15.9921%" y="495.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 1.05%)</title><rect x="15.7421%" y="469" width="1.0495%" height="15" fill="rgb(233,99,24)"/><text x="15.9921%" y="479.50"></text></g><g><title>do_softirq (7 samples, 1.05%)</title><rect x="15.7421%" y="453" width="1.0495%" height="15" fill="rgb(234,209,42)"/><text x="15.9921%" y="463.50"></text></g><g><title>do_softirq_own_stack (7 samples, 1.05%)</title><rect x="15.7421%" y="437" width="1.0495%" height="15" fill="rgb(227,7,12)"/><text x="15.9921%" y="447.50"></text></g><g><title>__do_softirq (7 samples, 1.05%)</title><rect x="15.7421%" y="421" width="1.0495%" height="15" fill="rgb(245,203,43)"/><text x="15.9921%" y="431.50"></text></g><g><title>net_rx_action (6 samples, 0.90%)</title><rect x="15.8921%" y="405" width="0.8996%" height="15" fill="rgb(238,205,33)"/><text x="16.1421%" y="415.50"></text></g><g><title>process_backlog (6 samples, 0.90%)</title><rect x="15.8921%" y="389" width="0.8996%" height="15" fill="rgb(231,56,7)"/><text x="16.1421%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (6 samples, 0.90%)</title><rect x="15.8921%" y="373" width="0.8996%" height="15" fill="rgb(244,186,29)"/><text x="16.1421%" y="383.50"></text></g><g><title>ip_rcv (5 samples, 0.75%)</title><rect x="16.0420%" y="357" width="0.7496%" height="15" fill="rgb(234,111,31)"/><text x="16.2920%" y="367.50"></text></g><g><title>ip_local_deliver (5 samples, 0.75%)</title><rect x="16.0420%" y="341" width="0.7496%" height="15" fill="rgb(241,149,10)"/><text x="16.2920%" y="351.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.75%)</title><rect x="16.0420%" y="325" width="0.7496%" height="15" fill="rgb(249,206,44)"/><text x="16.2920%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.60%)</title><rect x="16.1919%" y="309" width="0.5997%" height="15" fill="rgb(251,153,30)"/><text x="16.4419%" y="319.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.60%)</title><rect x="16.1919%" y="293" width="0.5997%" height="15" fill="rgb(239,152,38)"/><text x="16.4419%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.60%)</title><rect x="16.1919%" y="277" width="0.5997%" height="15" fill="rgb(249,139,47)"/><text x="16.4419%" y="287.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.60%)</title><rect x="16.1919%" y="261" width="0.5997%" height="15" fill="rgb(244,64,35)"/><text x="16.4419%" y="271.50"></text></g><g><title>tcp_ack (1 samples, 0.15%)</title><rect x="16.6417%" y="245" width="0.1499%" height="15" fill="rgb(216,46,15)"/><text x="16.8917%" y="255.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.15%)</title><rect x="16.7916%" y="565" width="0.1499%" height="15" fill="rgb(250,74,19)"/><text x="17.0416%" y="575.50"></text></g><g><title>__alloc_skb (1 samples, 0.15%)</title><rect x="16.7916%" y="549" width="0.1499%" height="15" fill="rgb(249,42,33)"/><text x="17.0416%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.15%)</title><rect x="16.7916%" y="533" width="0.1499%" height="15" fill="rgb(242,149,17)"/><text x="17.0416%" y="543.50"></text></g><g><title>memset_erms (1 samples, 0.15%)</title><rect x="16.7916%" y="517" width="0.1499%" height="15" fill="rgb(244,29,21)"/><text x="17.0416%" y="527.50"></text></g><g><title>sock_sendmsg (10 samples, 1.50%)</title><rect x="15.7421%" y="613" width="1.4993%" height="15" fill="rgb(220,130,37)"/><text x="15.9921%" y="623.50"></text></g><g><title>tcp_sendmsg (10 samples, 1.50%)</title><rect x="15.7421%" y="597" width="1.4993%" height="15" fill="rgb(211,67,2)"/><text x="15.9921%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (10 samples, 1.50%)</title><rect x="15.7421%" y="581" width="1.4993%" height="15" fill="rgb(235,68,52)"/><text x="15.9921%" y="591.50"></text></g><g><title>skb_entail (2 samples, 0.30%)</title><rect x="16.9415%" y="565" width="0.2999%" height="15" fill="rgb(246,142,3)"/><text x="17.1915%" y="575.50"></text></g><g><title>lobsters_microbenchmarks::main (18 samples, 2.70%)</title><rect x="14.6927%" y="821" width="2.6987%" height="15" fill="rgb(241,25,7)"/><text x="14.9427%" y="831.50">lo..</text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (16 samples, 2.40%)</title><rect x="14.9925%" y="805" width="2.3988%" height="15" fill="rgb(242,119,39)"/><text x="15.2425%" y="815.50">lo..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (16 samples, 2.40%)</title><rect x="14.9925%" y="789" width="2.3988%" height="15" fill="rgb(241,98,45)"/><text x="15.2425%" y="799.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (16 samples, 2.40%)</title><rect x="14.9925%" y="773" width="2.3988%" height="15" fill="rgb(254,28,30)"/><text x="15.2425%" y="783.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (11 samples, 1.65%)</title><rect x="15.7421%" y="757" width="1.6492%" height="15" fill="rgb(241,142,54)"/><text x="15.9921%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (11 samples, 1.65%)</title><rect x="15.7421%" y="741" width="1.6492%" height="15" fill="rgb(222,85,15)"/><text x="15.9921%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (11 samples, 1.65%)</title><rect x="15.7421%" y="725" width="1.6492%" height="15" fill="rgb(210,85,47)"/><text x="15.9921%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (11 samples, 1.65%)</title><rect x="15.7421%" y="709" width="1.6492%" height="15" fill="rgb(224,206,25)"/><text x="15.9921%" y="719.50"></text></g><g><title>__libc_send (11 samples, 1.65%)</title><rect x="15.7421%" y="693" width="1.6492%" height="15" fill="rgb(243,201,19)"/><text x="15.9921%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 1.65%)</title><rect x="15.7421%" y="677" width="1.6492%" height="15" fill="rgb(236,59,4)"/><text x="15.9921%" y="687.50"></text></g><g><title>do_syscall_64 (11 samples, 1.65%)</title><rect x="15.7421%" y="661" width="1.6492%" height="15" fill="rgb(254,179,45)"/><text x="15.9921%" y="671.50"></text></g><g><title>__x64_sys_sendto (11 samples, 1.65%)</title><rect x="15.7421%" y="645" width="1.6492%" height="15" fill="rgb(226,14,10)"/><text x="15.9921%" y="655.50"></text></g><g><title>__sys_sendto (11 samples, 1.65%)</title><rect x="15.7421%" y="629" width="1.6492%" height="15" fill="rgb(244,27,41)"/><text x="15.9921%" y="639.50"></text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="17.2414%" y="613" width="0.1499%" height="15" fill="rgb(235,35,32)"/><text x="17.4914%" y="623.50"></text></g><g><title>__fget_light (1 samples, 0.15%)</title><rect x="17.2414%" y="597" width="0.1499%" height="15" fill="rgb(218,68,31)"/><text x="17.4914%" y="607.50"></text></g><g><title>__fget_files (1 samples, 0.15%)</title><rect x="17.2414%" y="581" width="0.1499%" height="15" fill="rgb(207,120,37)"/><text x="17.4914%" y="591.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (1 samples, 0.15%)</title><rect x="17.3913%" y="773" width="0.1499%" height="15" fill="rgb(227,98,0)"/><text x="17.6413%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.15%)</title><rect x="17.3913%" y="757" width="0.1499%" height="15" fill="rgb(207,7,3)"/><text x="17.6413%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="17.3913%" y="741" width="0.1499%" height="15" fill="rgb(206,98,19)"/><text x="17.6413%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.15%)</title><rect x="17.3913%" y="725" width="0.1499%" height="15" fill="rgb(217,5,26)"/><text x="17.6413%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.15%)</title><rect x="17.3913%" y="709" width="0.1499%" height="15" fill="rgb(235,190,38)"/><text x="17.6413%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="17.3913%" y="693" width="0.1499%" height="15" fill="rgb(247,86,24)"/><text x="17.6413%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.15%)</title><rect x="17.3913%" y="677" width="0.1499%" height="15" fill="rgb(205,101,16)"/><text x="17.6413%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.15%)</title><rect x="17.3913%" y="661" width="0.1499%" height="15" fill="rgb(246,168,33)"/><text x="17.6413%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="17.3913%" y="645" width="0.1499%" height="15" fill="rgb(231,114,1)"/><text x="17.6413%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="17.3913%" y="629" width="0.1499%" height="15" fill="rgb(207,184,53)"/><text x="17.6413%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="17.3913%" y="613" width="0.1499%" height="15" fill="rgb(224,95,51)"/><text x="17.6413%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.15%)</title><rect x="17.3913%" y="597" width="0.1499%" height="15" fill="rgb(212,188,45)"/><text x="17.6413%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.15%)</title><rect x="17.3913%" y="581" width="0.1499%" height="15" fill="rgb(223,154,38)"/><text x="17.6413%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.15%)</title><rect x="17.3913%" y="565" width="0.1499%" height="15" fill="rgb(251,22,52)"/><text x="17.6413%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.15%)</title><rect x="17.3913%" y="549" width="0.1499%" height="15" fill="rgb(229,209,22)"/><text x="17.6413%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.15%)</title><rect x="17.3913%" y="533" width="0.1499%" height="15" fill="rgb(234,138,34)"/><text x="17.6413%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.15%)</title><rect x="17.3913%" y="517" width="0.1499%" height="15" fill="rgb(212,95,11)"/><text x="17.6413%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.15%)</title><rect x="17.3913%" y="501" width="0.1499%" height="15" fill="rgb(240,179,47)"/><text x="17.6413%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.15%)</title><rect x="17.3913%" y="485" width="0.1499%" height="15" fill="rgb(240,163,11)"/><text x="17.6413%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.15%)</title><rect x="17.3913%" y="469" width="0.1499%" height="15" fill="rgb(236,37,12)"/><text x="17.6413%" y="479.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.15%)</title><rect x="17.3913%" y="453" width="0.1499%" height="15" fill="rgb(232,164,16)"/><text x="17.6413%" y="463.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="17.3913%" y="437" width="0.1499%" height="15" fill="rgb(244,205,15)"/><text x="17.6413%" y="447.50"></text></g><g><title>do_softirq (1 samples, 0.15%)</title><rect x="17.3913%" y="421" width="0.1499%" height="15" fill="rgb(223,117,47)"/><text x="17.6413%" y="431.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.15%)</title><rect x="17.3913%" y="405" width="0.1499%" height="15" fill="rgb(244,107,35)"/><text x="17.6413%" y="415.50"></text></g><g><title>__do_softirq (1 samples, 0.15%)</title><rect x="17.3913%" y="389" width="0.1499%" height="15" fill="rgb(205,140,8)"/><text x="17.6413%" y="399.50"></text></g><g><title>net_rx_action (1 samples, 0.15%)</title><rect x="17.3913%" y="373" width="0.1499%" height="15" fill="rgb(228,84,46)"/><text x="17.6413%" y="383.50"></text></g><g><title>process_backlog (1 samples, 0.15%)</title><rect x="17.3913%" y="357" width="0.1499%" height="15" fill="rgb(254,188,9)"/><text x="17.6413%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.15%)</title><rect x="17.3913%" y="341" width="0.1499%" height="15" fill="rgb(206,112,54)"/><text x="17.6413%" y="351.50"></text></g><g><title>ip_rcv (1 samples, 0.15%)</title><rect x="17.3913%" y="325" width="0.1499%" height="15" fill="rgb(216,84,49)"/><text x="17.6413%" y="335.50"></text></g><g><title>ip_local_deliver (1 samples, 0.15%)</title><rect x="17.3913%" y="309" width="0.1499%" height="15" fill="rgb(214,194,35)"/><text x="17.6413%" y="319.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.15%)</title><rect x="17.3913%" y="293" width="0.1499%" height="15" fill="rgb(249,28,3)"/><text x="17.6413%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.15%)</title><rect x="17.3913%" y="277" width="0.1499%" height="15" fill="rgb(222,56,52)"/><text x="17.6413%" y="287.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.15%)</title><rect x="17.3913%" y="261" width="0.1499%" height="15" fill="rgb(245,217,50)"/><text x="17.6413%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.15%)</title><rect x="17.3913%" y="245" width="0.1499%" height="15" fill="rgb(213,201,24)"/><text x="17.6413%" y="255.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.15%)</title><rect x="17.3913%" y="229" width="0.1499%" height="15" fill="rgb(248,116,28)"/><text x="17.6413%" y="239.50"></text></g><g><title>sock_def_readable (1 samples, 0.15%)</title><rect x="17.3913%" y="213" width="0.1499%" height="15" fill="rgb(219,72,43)"/><text x="17.6413%" y="223.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.15%)</title><rect x="17.3913%" y="197" width="0.1499%" height="15" fill="rgb(209,138,14)"/><text x="17.6413%" y="207.50"></text></g><g><title>__wake_up_common (1 samples, 0.15%)</title><rect x="17.3913%" y="181" width="0.1499%" height="15" fill="rgb(222,18,33)"/><text x="17.6413%" y="191.50"></text></g><g><title>pollwake (1 samples, 0.15%)</title><rect x="17.3913%" y="165" width="0.1499%" height="15" fill="rgb(213,199,7)"/><text x="17.6413%" y="175.50"></text></g><g><title>try_to_wake_up (1 samples, 0.15%)</title><rect x="17.3913%" y="149" width="0.1499%" height="15" fill="rgb(250,110,10)"/><text x="17.6413%" y="159.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.15%)</title><rect x="17.3913%" y="133" width="0.1499%" height="15" fill="rgb(248,123,6)"/><text x="17.6413%" y="143.50"></text></g><g><title>available_idle_cpu (1 samples, 0.15%)</title><rect x="17.3913%" y="117" width="0.1499%" height="15" fill="rgb(206,91,31)"/><text x="17.6413%" y="127.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="17.5412%" y="741" width="0.1499%" height="15" fill="rgb(211,154,13)"/><text x="17.7912%" y="751.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.45%)</title><rect x="17.3913%" y="805" width="0.4498%" height="15" fill="rgb(225,148,7)"/><text x="17.6413%" y="815.50"></text></g><g><title>decor_mem::Shim::create_schema (3 samples, 0.45%)</title><rect x="17.3913%" y="789" width="0.4498%" height="15" fill="rgb(220,160,43)"/><text x="17.6413%" y="799.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.30%)</title><rect x="17.5412%" y="773" width="0.2999%" height="15" fill="rgb(213,52,39)"/><text x="17.7912%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.30%)</title><rect x="17.5412%" y="757" width="0.2999%" height="15" fill="rgb(243,137,7)"/><text x="17.7912%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.15%)</title><rect x="17.6912%" y="741" width="0.1499%" height="15" fill="rgb(230,79,13)"/><text x="17.9412%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.15%)</title><rect x="17.6912%" y="725" width="0.1499%" height="15" fill="rgb(247,105,23)"/><text x="17.9412%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.15%)</title><rect x="17.6912%" y="709" width="0.1499%" height="15" fill="rgb(223,179,41)"/><text x="17.9412%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="17.6912%" y="693" width="0.1499%" height="15" fill="rgb(218,9,34)"/><text x="17.9412%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="17.6912%" y="677" width="0.1499%" height="15" fill="rgb(222,106,8)"/><text x="17.9412%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="17.6912%" y="661" width="0.1499%" height="15" fill="rgb(211,220,0)"/><text x="17.9412%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="17.8411%" y="709" width="0.1499%" height="15" fill="rgb(229,52,16)"/><text x="18.0911%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="17.8411%" y="693" width="0.1499%" height="15" fill="rgb(212,155,18)"/><text x="18.0911%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="17.8411%" y="677" width="0.1499%" height="15" fill="rgb(242,21,14)"/><text x="18.0911%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="17.8411%" y="661" width="0.1499%" height="15" fill="rgb(222,19,48)"/><text x="18.0911%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="17.8411%" y="645" width="0.1499%" height="15" fill="rgb(232,45,27)"/><text x="18.0911%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="17.8411%" y="629" width="0.1499%" height="15" fill="rgb(249,103,42)"/><text x="18.0911%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="17.8411%" y="613" width="0.1499%" height="15" fill="rgb(246,81,33)"/><text x="18.0911%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="17.8411%" y="597" width="0.1499%" height="15" fill="rgb(252,33,42)"/><text x="18.0911%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="17.8411%" y="581" width="0.1499%" height="15" fill="rgb(209,212,41)"/><text x="18.0911%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="17.8411%" y="565" width="0.1499%" height="15" fill="rgb(207,154,6)"/><text x="18.0911%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="17.8411%" y="549" width="0.1499%" height="15" fill="rgb(223,64,47)"/><text x="18.0911%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="17.8411%" y="533" width="0.1499%" height="15" fill="rgb(211,161,38)"/><text x="18.0911%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="17.8411%" y="517" width="0.1499%" height="15" fill="rgb(219,138,40)"/><text x="18.0911%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="17.8411%" y="757" width="0.2999%" height="15" fill="rgb(241,228,46)"/><text x="18.0911%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="17.8411%" y="741" width="0.2999%" height="15" fill="rgb(223,209,38)"/><text x="18.0911%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="17.8411%" y="725" width="0.2999%" height="15" fill="rgb(236,164,45)"/><text x="18.0911%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="17.9910%" y="709" width="0.1499%" height="15" fill="rgb(231,15,5)"/><text x="18.2410%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="17.9910%" y="693" width="0.1499%" height="15" fill="rgb(252,35,15)"/><text x="18.2410%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="17.9910%" y="677" width="0.1499%" height="15" fill="rgb(248,181,18)"/><text x="18.2410%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="17.9910%" y="661" width="0.1499%" height="15" fill="rgb(233,39,42)"/><text x="18.2410%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="17.9910%" y="645" width="0.1499%" height="15" fill="rgb(238,110,33)"/><text x="18.2410%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="17.9910%" y="629" width="0.1499%" height="15" fill="rgb(233,195,10)"/><text x="18.2410%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="17.9910%" y="613" width="0.1499%" height="15" fill="rgb(254,105,3)"/><text x="18.2410%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="17.9910%" y="597" width="0.1499%" height="15" fill="rgb(221,225,9)"/><text x="18.2410%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="17.9910%" y="581" width="0.1499%" height="15" fill="rgb(224,227,45)"/><text x="18.2410%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="17.9910%" y="565" width="0.1499%" height="15" fill="rgb(229,198,43)"/><text x="18.2410%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="17.9910%" y="549" width="0.1499%" height="15" fill="rgb(206,209,35)"/><text x="18.2410%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="17.9910%" y="533" width="0.1499%" height="15" fill="rgb(245,195,53)"/><text x="18.2410%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="17.9910%" y="517" width="0.1499%" height="15" fill="rgb(240,92,26)"/><text x="18.2410%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="17.9910%" y="501" width="0.1499%" height="15" fill="rgb(207,40,23)"/><text x="18.2410%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.15%)</title><rect x="18.1409%" y="693" width="0.1499%" height="15" fill="rgb(223,111,35)"/><text x="18.3909%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="18.1409%" y="677" width="0.1499%" height="15" fill="rgb(229,147,28)"/><text x="18.3909%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="18.1409%" y="661" width="0.1499%" height="15" fill="rgb(211,29,28)"/><text x="18.3909%" y="671.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.15%)</title><rect x="18.1409%" y="645" width="0.1499%" height="15" fill="rgb(228,72,33)"/><text x="18.3909%" y="655.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.15%)</title><rect x="18.2909%" y="485" width="0.1499%" height="15" fill="rgb(205,214,31)"/><text x="18.5409%" y="495.50"></text></g><g><title>__alloc_skb (1 samples, 0.15%)</title><rect x="18.2909%" y="469" width="0.1499%" height="15" fill="rgb(224,111,15)"/><text x="18.5409%" y="479.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.15%)</title><rect x="18.4408%" y="485" width="0.1499%" height="15" fill="rgb(253,21,26)"/><text x="18.6908%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.15%)</title><rect x="18.5907%" y="405" width="0.1499%" height="15" fill="rgb(245,139,43)"/><text x="18.8407%" y="415.50"></text></g><g><title>ctx_sched_out (1 samples, 0.15%)</title><rect x="18.5907%" y="389" width="0.1499%" height="15" fill="rgb(252,170,7)"/><text x="18.8407%" y="399.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.15%)</title><rect x="18.5907%" y="373" width="0.1499%" height="15" fill="rgb(231,118,14)"/><text x="18.8407%" y="383.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.75%)</title><rect x="18.2909%" y="677" width="0.7496%" height="15" fill="rgb(238,83,0)"/><text x="18.5409%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.75%)</title><rect x="18.2909%" y="661" width="0.7496%" height="15" fill="rgb(221,39,39)"/><text x="18.5409%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (5 samples, 0.75%)</title><rect x="18.2909%" y="645" width="0.7496%" height="15" fill="rgb(222,119,46)"/><text x="18.5409%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (5 samples, 0.75%)</title><rect x="18.2909%" y="629" width="0.7496%" height="15" fill="rgb(222,165,49)"/><text x="18.5409%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (5 samples, 0.75%)</title><rect x="18.2909%" y="613" width="0.7496%" height="15" fill="rgb(219,113,52)"/><text x="18.5409%" y="623.50"></text></g><g><title>__libc_recv (5 samples, 0.75%)</title><rect x="18.2909%" y="597" width="0.7496%" height="15" fill="rgb(214,7,15)"/><text x="18.5409%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.75%)</title><rect x="18.2909%" y="581" width="0.7496%" height="15" fill="rgb(235,32,4)"/><text x="18.5409%" y="591.50"></text></g><g><title>do_syscall_64 (5 samples, 0.75%)</title><rect x="18.2909%" y="565" width="0.7496%" height="15" fill="rgb(238,90,54)"/><text x="18.5409%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (5 samples, 0.75%)</title><rect x="18.2909%" y="549" width="0.7496%" height="15" fill="rgb(213,208,19)"/><text x="18.5409%" y="559.50"></text></g><g><title>__sys_recvfrom (5 samples, 0.75%)</title><rect x="18.2909%" y="533" width="0.7496%" height="15" fill="rgb(233,156,4)"/><text x="18.5409%" y="543.50"></text></g><g><title>inet_recvmsg (5 samples, 0.75%)</title><rect x="18.2909%" y="517" width="0.7496%" height="15" fill="rgb(207,194,5)"/><text x="18.5409%" y="527.50"></text></g><g><title>tcp_recvmsg (5 samples, 0.75%)</title><rect x="18.2909%" y="501" width="0.7496%" height="15" fill="rgb(206,111,30)"/><text x="18.5409%" y="511.50"></text></g><g><title>sk_wait_data (3 samples, 0.45%)</title><rect x="18.5907%" y="485" width="0.4498%" height="15" fill="rgb(243,70,54)"/><text x="18.8407%" y="495.50"></text></g><g><title>wait_woken (3 samples, 0.45%)</title><rect x="18.5907%" y="469" width="0.4498%" height="15" fill="rgb(242,28,8)"/><text x="18.8407%" y="479.50"></text></g><g><title>schedule_timeout (3 samples, 0.45%)</title><rect x="18.5907%" y="453" width="0.4498%" height="15" fill="rgb(219,106,18)"/><text x="18.8407%" y="463.50"></text></g><g><title>schedule (3 samples, 0.45%)</title><rect x="18.5907%" y="437" width="0.4498%" height="15" fill="rgb(244,222,10)"/><text x="18.8407%" y="447.50"></text></g><g><title>__schedule (3 samples, 0.45%)</title><rect x="18.5907%" y="421" width="0.4498%" height="15" fill="rgb(236,179,52)"/><text x="18.8407%" y="431.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.30%)</title><rect x="18.7406%" y="405" width="0.2999%" height="15" fill="rgb(213,23,39)"/><text x="18.9906%" y="415.50"></text></g><g><title>dequeue_entity (1 samples, 0.15%)</title><rect x="18.8906%" y="389" width="0.1499%" height="15" fill="rgb(238,48,10)"/><text x="19.1406%" y="399.50"></text></g><g><title>update_curr (1 samples, 0.15%)</title><rect x="18.8906%" y="373" width="0.1499%" height="15" fill="rgb(251,196,23)"/><text x="19.1406%" y="383.50"></text></g><g><title>cpuacct_charge (1 samples, 0.15%)</title><rect x="18.8906%" y="357" width="0.1499%" height="15" fill="rgb(250,152,24)"/><text x="19.1406%" y="367.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (7 samples, 1.05%)</title><rect x="18.1409%" y="725" width="1.0495%" height="15" fill="rgb(209,150,17)"/><text x="18.3909%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (7 samples, 1.05%)</title><rect x="18.1409%" y="709" width="1.0495%" height="15" fill="rgb(234,202,34)"/><text x="18.3909%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.90%)</title><rect x="18.2909%" y="693" width="0.8996%" height="15" fill="rgb(253,148,53)"/><text x="18.5409%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.15%)</title><rect x="19.0405%" y="677" width="0.1499%" height="15" fill="rgb(218,129,16)"/><text x="19.2905%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.15%)</title><rect x="19.0405%" y="661" width="0.1499%" height="15" fill="rgb(216,85,19)"/><text x="19.2905%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="19.0405%" y="645" width="0.1499%" height="15" fill="rgb(235,228,7)"/><text x="19.2905%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="19.0405%" y="629" width="0.1499%" height="15" fill="rgb(245,175,0)"/><text x="19.2905%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="19.0405%" y="613" width="0.1499%" height="15" fill="rgb(208,168,36)"/><text x="19.2905%" y="623.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.15%)</title><rect x="19.1904%" y="709" width="0.1499%" height="15" fill="rgb(246,171,24)"/><text x="19.4404%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.15%)</title><rect x="19.1904%" y="693" width="0.1499%" height="15" fill="rgb(215,142,24)"/><text x="19.4404%" y="703.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.15%)</title><rect x="19.1904%" y="677" width="0.1499%" height="15" fill="rgb(250,187,7)"/><text x="19.4404%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="19.1904%" y="661" width="0.1499%" height="15" fill="rgb(228,66,33)"/><text x="19.4404%" y="671.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.15%)</title><rect x="19.1904%" y="645" width="0.1499%" height="15" fill="rgb(234,215,21)"/><text x="19.4404%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="19.1904%" y="629" width="0.1499%" height="15" fill="rgb(222,191,20)"/><text x="19.4404%" y="639.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.15%)</title><rect x="19.3403%" y="645" width="0.1499%" height="15" fill="rgb(245,79,54)"/><text x="19.5903%" y="655.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.15%)</title><rect x="19.4903%" y="325" width="0.1499%" height="15" fill="rgb(240,10,37)"/><text x="19.7403%" y="335.50"></text></g><g><title>ktime_get_seconds (1 samples, 0.15%)</title><rect x="19.7901%" y="213" width="0.1499%" height="15" fill="rgb(214,192,32)"/><text x="20.0401%" y="223.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.15%)</title><rect x="19.9400%" y="133" width="0.1499%" height="15" fill="rgb(209,36,54)"/><text x="20.1900%" y="143.50"></text></g><g><title>enqueue_entity (1 samples, 0.15%)</title><rect x="19.9400%" y="117" width="0.1499%" height="15" fill="rgb(220,10,11)"/><text x="20.1900%" y="127.50"></text></g><g><title>sock_def_readable (3 samples, 0.45%)</title><rect x="19.9400%" y="213" width="0.4498%" height="15" fill="rgb(221,106,17)"/><text x="20.1900%" y="223.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.45%)</title><rect x="19.9400%" y="197" width="0.4498%" height="15" fill="rgb(251,142,44)"/><text x="20.1900%" y="207.50"></text></g><g><title>__wake_up_common (3 samples, 0.45%)</title><rect x="19.9400%" y="181" width="0.4498%" height="15" fill="rgb(238,13,15)"/><text x="20.1900%" y="191.50"></text></g><g><title>pollwake (3 samples, 0.45%)</title><rect x="19.9400%" y="165" width="0.4498%" height="15" fill="rgb(208,107,27)"/><text x="20.1900%" y="175.50"></text></g><g><title>try_to_wake_up (3 samples, 0.45%)</title><rect x="19.9400%" y="149" width="0.4498%" height="15" fill="rgb(205,136,37)"/><text x="20.1900%" y="159.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.30%)</title><rect x="20.0900%" y="133" width="0.2999%" height="15" fill="rgb(250,205,27)"/><text x="20.3400%" y="143.50"></text></g><g><title>sock_sendmsg (8 samples, 1.20%)</title><rect x="19.4903%" y="581" width="1.1994%" height="15" fill="rgb(210,80,43)"/><text x="19.7403%" y="591.50"></text></g><g><title>tcp_sendmsg (8 samples, 1.20%)</title><rect x="19.4903%" y="565" width="1.1994%" height="15" fill="rgb(247,160,36)"/><text x="19.7403%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (8 samples, 1.20%)</title><rect x="19.4903%" y="549" width="1.1994%" height="15" fill="rgb(234,13,49)"/><text x="19.7403%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (8 samples, 1.20%)</title><rect x="19.4903%" y="533" width="1.1994%" height="15" fill="rgb(234,122,0)"/><text x="19.7403%" y="543.50"></text></g><g><title>tcp_write_xmit (8 samples, 1.20%)</title><rect x="19.4903%" y="517" width="1.1994%" height="15" fill="rgb(207,146,38)"/><text x="19.7403%" y="527.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 1.20%)</title><rect x="19.4903%" y="501" width="1.1994%" height="15" fill="rgb(207,177,25)"/><text x="19.7403%" y="511.50"></text></g><g><title>__ip_queue_xmit (8 samples, 1.20%)</title><rect x="19.4903%" y="485" width="1.1994%" height="15" fill="rgb(211,178,42)"/><text x="19.7403%" y="495.50"></text></g><g><title>ip_output (8 samples, 1.20%)</title><rect x="19.4903%" y="469" width="1.1994%" height="15" fill="rgb(230,69,54)"/><text x="19.7403%" y="479.50"></text></g><g><title>ip_finish_output2 (8 samples, 1.20%)</title><rect x="19.4903%" y="453" width="1.1994%" height="15" fill="rgb(214,135,41)"/><text x="19.7403%" y="463.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 1.20%)</title><rect x="19.4903%" y="437" width="1.1994%" height="15" fill="rgb(237,67,25)"/><text x="19.7403%" y="447.50"></text></g><g><title>do_softirq (8 samples, 1.20%)</title><rect x="19.4903%" y="421" width="1.1994%" height="15" fill="rgb(222,189,50)"/><text x="19.7403%" y="431.50"></text></g><g><title>do_softirq_own_stack (8 samples, 1.20%)</title><rect x="19.4903%" y="405" width="1.1994%" height="15" fill="rgb(245,148,34)"/><text x="19.7403%" y="415.50"></text></g><g><title>__do_softirq (8 samples, 1.20%)</title><rect x="19.4903%" y="389" width="1.1994%" height="15" fill="rgb(222,29,6)"/><text x="19.7403%" y="399.50"></text></g><g><title>net_rx_action (8 samples, 1.20%)</title><rect x="19.4903%" y="373" width="1.1994%" height="15" fill="rgb(221,189,43)"/><text x="19.7403%" y="383.50"></text></g><g><title>process_backlog (8 samples, 1.20%)</title><rect x="19.4903%" y="357" width="1.1994%" height="15" fill="rgb(207,36,27)"/><text x="19.7403%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (8 samples, 1.20%)</title><rect x="19.4903%" y="341" width="1.1994%" height="15" fill="rgb(217,90,24)"/><text x="19.7403%" y="351.50"></text></g><g><title>ip_rcv (7 samples, 1.05%)</title><rect x="19.6402%" y="325" width="1.0495%" height="15" fill="rgb(224,66,35)"/><text x="19.8902%" y="335.50"></text></g><g><title>ip_local_deliver (7 samples, 1.05%)</title><rect x="19.6402%" y="309" width="1.0495%" height="15" fill="rgb(221,13,50)"/><text x="19.8902%" y="319.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 1.05%)</title><rect x="19.6402%" y="293" width="1.0495%" height="15" fill="rgb(236,68,49)"/><text x="19.8902%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 1.05%)</title><rect x="19.6402%" y="277" width="1.0495%" height="15" fill="rgb(229,146,28)"/><text x="19.8902%" y="287.50"></text></g><g><title>tcp_v4_rcv (7 samples, 1.05%)</title><rect x="19.6402%" y="261" width="1.0495%" height="15" fill="rgb(225,31,38)"/><text x="19.8902%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.90%)</title><rect x="19.7901%" y="245" width="0.8996%" height="15" fill="rgb(250,208,3)"/><text x="20.0401%" y="255.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.90%)</title><rect x="19.7901%" y="229" width="0.8996%" height="15" fill="rgb(246,54,23)"/><text x="20.0401%" y="239.50"></text></g><g><title>tcp_ack (2 samples, 0.30%)</title><rect x="20.3898%" y="213" width="0.2999%" height="15" fill="rgb(243,76,11)"/><text x="20.6398%" y="223.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.30%)</title><rect x="20.3898%" y="197" width="0.2999%" height="15" fill="rgb(245,21,50)"/><text x="20.6398%" y="207.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.15%)</title><rect x="20.5397%" y="181" width="0.1499%" height="15" fill="rgb(228,9,43)"/><text x="20.7897%" y="191.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (18 samples, 2.70%)</title><rect x="18.1409%" y="757" width="2.6987%" height="15" fill="rgb(208,100,47)"/><text x="18.3909%" y="767.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (18 samples, 2.70%)</title><rect x="18.1409%" y="741" width="2.6987%" height="15" fill="rgb(232,26,8)"/><text x="18.3909%" y="751.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (11 samples, 1.65%)</title><rect x="19.1904%" y="725" width="1.6492%" height="15" fill="rgb(216,166,38)"/><text x="19.4404%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (10 samples, 1.50%)</title><rect x="19.3403%" y="709" width="1.4993%" height="15" fill="rgb(251,202,51)"/><text x="19.5903%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (10 samples, 1.50%)</title><rect x="19.3403%" y="693" width="1.4993%" height="15" fill="rgb(254,216,34)"/><text x="19.5903%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (10 samples, 1.50%)</title><rect x="19.3403%" y="677" width="1.4993%" height="15" fill="rgb(251,32,27)"/><text x="19.5903%" y="687.50"></text></g><g><title>__libc_send (10 samples, 1.50%)</title><rect x="19.3403%" y="661" width="1.4993%" height="15" fill="rgb(208,127,28)"/><text x="19.5903%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 1.35%)</title><rect x="19.4903%" y="645" width="1.3493%" height="15" fill="rgb(224,137,22)"/><text x="19.7403%" y="655.50"></text></g><g><title>do_syscall_64 (9 samples, 1.35%)</title><rect x="19.4903%" y="629" width="1.3493%" height="15" fill="rgb(254,70,32)"/><text x="19.7403%" y="639.50"></text></g><g><title>__x64_sys_sendto (9 samples, 1.35%)</title><rect x="19.4903%" y="613" width="1.3493%" height="15" fill="rgb(229,75,37)"/><text x="19.7403%" y="623.50"></text></g><g><title>__sys_sendto (9 samples, 1.35%)</title><rect x="19.4903%" y="597" width="1.3493%" height="15" fill="rgb(252,64,23)"/><text x="19.7403%" y="607.50"></text></g><g><title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="20.6897%" y="581" width="0.1499%" height="15" fill="rgb(232,162,48)"/><text x="20.9397%" y="591.50"></text></g><g><title>__fdget (1 samples, 0.15%)</title><rect x="20.6897%" y="565" width="0.1499%" height="15" fill="rgb(246,160,12)"/><text x="20.9397%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="20.8396%" y="757" width="0.1499%" height="15" fill="rgb(247,166,0)"/><text x="21.0896%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="20.9895%" y="725" width="0.1499%" height="15" fill="rgb(249,219,21)"/><text x="21.2395%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="20.9895%" y="709" width="0.1499%" height="15" fill="rgb(205,209,3)"/><text x="21.2395%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="20.9895%" y="693" width="0.1499%" height="15" fill="rgb(243,44,1)"/><text x="21.2395%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="20.9895%" y="677" width="0.1499%" height="15" fill="rgb(206,159,16)"/><text x="21.2395%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.30%)</title><rect x="20.9895%" y="741" width="0.2999%" height="15" fill="rgb(244,77,30)"/><text x="21.2395%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="21.1394%" y="725" width="0.1499%" height="15" fill="rgb(218,69,12)"/><text x="21.3894%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="21.1394%" y="709" width="0.1499%" height="15" fill="rgb(212,87,7)"/><text x="21.3894%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="21.1394%" y="693" width="0.1499%" height="15" fill="rgb(245,114,25)"/><text x="21.3894%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="21.1394%" y="677" width="0.1499%" height="15" fill="rgb(210,61,42)"/><text x="21.3894%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="21.1394%" y="661" width="0.1499%" height="15" fill="rgb(211,52,33)"/><text x="21.3894%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="21.1394%" y="645" width="0.1499%" height="15" fill="rgb(234,58,33)"/><text x="21.3894%" y="655.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="21.1394%" y="629" width="0.1499%" height="15" fill="rgb(220,115,36)"/><text x="21.3894%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="21.2894%" y="725" width="0.1499%" height="15" fill="rgb(243,153,54)"/><text x="21.5394%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="21.2894%" y="709" width="0.1499%" height="15" fill="rgb(251,47,18)"/><text x="21.5394%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="21.2894%" y="693" width="0.1499%" height="15" fill="rgb(242,102,42)"/><text x="21.5394%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="21.4393%" y="725" width="0.1499%" height="15" fill="rgb(234,31,38)"/><text x="21.6893%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="21.4393%" y="709" width="0.1499%" height="15" fill="rgb(221,117,51)"/><text x="21.6893%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="21.4393%" y="693" width="0.1499%" height="15" fill="rgb(212,20,18)"/><text x="21.6893%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="21.4393%" y="677" width="0.1499%" height="15" fill="rgb(245,133,36)"/><text x="21.6893%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="21.4393%" y="661" width="0.1499%" height="15" fill="rgb(212,6,19)"/><text x="21.6893%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="21.4393%" y="645" width="0.1499%" height="15" fill="rgb(218,1,36)"/><text x="21.6893%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="21.4393%" y="629" width="0.1499%" height="15" fill="rgb(246,84,54)"/><text x="21.6893%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="21.4393%" y="613" width="0.1499%" height="15" fill="rgb(242,110,6)"/><text x="21.6893%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="21.5892%" y="725" width="0.2999%" height="15" fill="rgb(214,47,5)"/><text x="21.8392%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="21.5892%" y="709" width="0.2999%" height="15" fill="rgb(218,159,25)"/><text x="21.8392%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.30%)</title><rect x="21.5892%" y="693" width="0.2999%" height="15" fill="rgb(215,211,28)"/><text x="21.8392%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="21.7391%" y="677" width="0.1499%" height="15" fill="rgb(238,59,32)"/><text x="21.9891%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="21.7391%" y="661" width="0.1499%" height="15" fill="rgb(226,82,3)"/><text x="21.9891%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="21.7391%" y="645" width="0.1499%" height="15" fill="rgb(240,164,32)"/><text x="21.9891%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="21.7391%" y="629" width="0.1499%" height="15" fill="rgb(232,46,7)"/><text x="21.9891%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="22.0390%" y="677" width="0.1499%" height="15" fill="rgb(229,129,53)"/><text x="22.2890%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="22.0390%" y="661" width="0.1499%" height="15" fill="rgb(234,188,29)"/><text x="22.2890%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="22.0390%" y="645" width="0.1499%" height="15" fill="rgb(246,141,4)"/><text x="22.2890%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="22.0390%" y="629" width="0.1499%" height="15" fill="rgb(229,23,39)"/><text x="22.2890%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="22.0390%" y="693" width="0.2999%" height="15" fill="rgb(206,12,3)"/><text x="22.2890%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="22.1889%" y="677" width="0.1499%" height="15" fill="rgb(252,226,20)"/><text x="22.4389%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="22.1889%" y="661" width="0.1499%" height="15" fill="rgb(216,123,35)"/><text x="22.4389%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="22.1889%" y="645" width="0.1499%" height="15" fill="rgb(212,68,40)"/><text x="22.4389%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="22.1889%" y="629" width="0.1499%" height="15" fill="rgb(254,125,32)"/><text x="22.4389%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.60%)</title><rect x="21.8891%" y="709" width="0.5997%" height="15" fill="rgb(253,97,22)"/><text x="22.1391%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="22.3388%" y="693" width="0.1499%" height="15" fill="rgb(241,101,14)"/><text x="22.5888%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="22.3388%" y="677" width="0.1499%" height="15" fill="rgb(238,103,29)"/><text x="22.5888%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="22.3388%" y="661" width="0.1499%" height="15" fill="rgb(233,195,47)"/><text x="22.5888%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="22.3388%" y="645" width="0.1499%" height="15" fill="rgb(246,218,30)"/><text x="22.5888%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="22.3388%" y="629" width="0.1499%" height="15" fill="rgb(219,145,47)"/><text x="22.5888%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="22.3388%" y="613" width="0.1499%" height="15" fill="rgb(243,12,26)"/><text x="22.5888%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="22.4888%" y="709" width="0.2999%" height="15" fill="rgb(214,87,16)"/><text x="22.7388%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.30%)</title><rect x="22.4888%" y="693" width="0.2999%" height="15" fill="rgb(208,99,42)"/><text x="22.7388%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="22.6387%" y="677" width="0.1499%" height="15" fill="rgb(253,99,2)"/><text x="22.8887%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="22.6387%" y="661" width="0.1499%" height="15" fill="rgb(220,168,23)"/><text x="22.8887%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="22.6387%" y="645" width="0.1499%" height="15" fill="rgb(242,38,24)"/><text x="22.8887%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="22.6387%" y="629" width="0.1499%" height="15" fill="rgb(225,182,9)"/><text x="22.8887%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="22.6387%" y="613" width="0.1499%" height="15" fill="rgb(243,178,37)"/><text x="22.8887%" y="623.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="22.7886%" y="693" width="0.1499%" height="15" fill="rgb(232,139,19)"/><text x="23.0386%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.30%)</title><rect x="22.9385%" y="693" width="0.2999%" height="15" fill="rgb(225,201,24)"/><text x="23.1885%" y="703.50"></text></g><g><title>core::fmt::write (18 samples, 2.70%)</title><rect x="20.9895%" y="757" width="2.6987%" height="15" fill="rgb(221,47,46)"/><text x="21.2395%" y="767.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (16 samples, 2.40%)</title><rect x="21.2894%" y="741" width="2.3988%" height="15" fill="rgb(249,23,13)"/><text x="21.5394%" y="751.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 1.80%)</title><rect x="21.8891%" y="725" width="1.7991%" height="15" fill="rgb(219,9,5)"/><text x="22.1391%" y="735.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.90%)</title><rect x="22.7886%" y="709" width="0.8996%" height="15" fill="rgb(254,171,16)"/><text x="23.0386%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.45%)</title><rect x="23.2384%" y="693" width="0.4498%" height="15" fill="rgb(230,171,20)"/><text x="23.4884%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="23.5382%" y="677" width="0.1499%" height="15" fill="rgb(210,71,41)"/><text x="23.7882%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="23.5382%" y="661" width="0.1499%" height="15" fill="rgb(206,173,20)"/><text x="23.7882%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="23.5382%" y="645" width="0.1499%" height="15" fill="rgb(233,88,34)"/><text x="23.7882%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="23.6882%" y="741" width="0.1499%" height="15" fill="rgb(223,209,46)"/><text x="23.9382%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="23.8381%" y="741" width="0.1499%" height="15" fill="rgb(250,43,18)"/><text x="24.0881%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="23.6882%" y="757" width="0.4498%" height="15" fill="rgb(208,13,10)"/><text x="23.9382%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="23.9880%" y="741" width="0.1499%" height="15" fill="rgb(212,200,36)"/><text x="24.2380%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="23.9880%" y="725" width="0.1499%" height="15" fill="rgb(225,90,30)"/><text x="24.2380%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="23.9880%" y="709" width="0.1499%" height="15" fill="rgb(236,182,39)"/><text x="24.2380%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="24.4378%" y="741" width="0.1499%" height="15" fill="rgb(212,144,35)"/><text x="24.6878%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="24.4378%" y="725" width="0.1499%" height="15" fill="rgb(228,63,44)"/><text x="24.6878%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="24.4378%" y="709" width="0.1499%" height="15" fill="rgb(228,109,6)"/><text x="24.6878%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="24.4378%" y="693" width="0.1499%" height="15" fill="rgb(238,117,24)"/><text x="24.6878%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="24.4378%" y="677" width="0.1499%" height="15" fill="rgb(242,26,26)"/><text x="24.6878%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="24.4378%" y="661" width="0.1499%" height="15" fill="rgb(221,92,48)"/><text x="24.6878%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="24.4378%" y="645" width="0.1499%" height="15" fill="rgb(209,209,32)"/><text x="24.6878%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="24.4378%" y="629" width="0.1499%" height="15" fill="rgb(221,70,22)"/><text x="24.6878%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="24.4378%" y="613" width="0.1499%" height="15" fill="rgb(248,145,5)"/><text x="24.6878%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="24.4378%" y="597" width="0.1499%" height="15" fill="rgb(226,116,26)"/><text x="24.6878%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="24.4378%" y="581" width="0.1499%" height="15" fill="rgb(244,5,17)"/><text x="24.6878%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="24.4378%" y="565" width="0.1499%" height="15" fill="rgb(252,159,33)"/><text x="24.6878%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="24.4378%" y="549" width="0.1499%" height="15" fill="rgb(206,71,0)"/><text x="24.6878%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="24.5877%" y="725" width="0.1499%" height="15" fill="rgb(233,118,54)"/><text x="24.8377%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="24.5877%" y="709" width="0.1499%" height="15" fill="rgb(234,83,48)"/><text x="24.8377%" y="719.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="24.5877%" y="693" width="0.1499%" height="15" fill="rgb(228,3,54)"/><text x="24.8377%" y="703.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.15%)</title><rect x="24.5877%" y="677" width="0.1499%" height="15" fill="rgb(226,155,13)"/><text x="24.8377%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="24.5877%" y="661" width="0.1499%" height="15" fill="rgb(241,28,37)"/><text x="24.8377%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="24.8876%" y="645" width="0.1499%" height="15" fill="rgb(233,93,10)"/><text x="25.1376%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="24.8876%" y="629" width="0.1499%" height="15" fill="rgb(225,113,19)"/><text x="25.1376%" y="639.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.15%)</title><rect x="24.8876%" y="613" width="0.1499%" height="15" fill="rgb(241,2,18)"/><text x="25.1376%" y="623.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.15%)</title><rect x="24.8876%" y="597" width="0.1499%" height="15" fill="rgb(228,207,21)"/><text x="25.1376%" y="607.50"></text></g><g><title>mprotect_fixup (1 samples, 0.15%)</title><rect x="24.8876%" y="581" width="0.1499%" height="15" fill="rgb(213,211,35)"/><text x="25.1376%" y="591.50"></text></g><g><title>perf_event_mmap (1 samples, 0.15%)</title><rect x="24.8876%" y="565" width="0.1499%" height="15" fill="rgb(209,83,10)"/><text x="25.1376%" y="575.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.15%)</title><rect x="24.8876%" y="549" width="0.1499%" height="15" fill="rgb(209,164,1)"/><text x="25.1376%" y="559.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.15%)</title><rect x="24.8876%" y="533" width="0.1499%" height="15" fill="rgb(213,184,43)"/><text x="25.1376%" y="543.50"></text></g><g><title>error_entry (1 samples, 0.15%)</title><rect x="25.0375%" y="645" width="0.1499%" height="15" fill="rgb(231,61,34)"/><text x="25.2875%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.75%)</title><rect x="24.5877%" y="741" width="0.7496%" height="15" fill="rgb(235,75,3)"/><text x="24.8377%" y="751.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.60%)</title><rect x="24.7376%" y="725" width="0.5997%" height="15" fill="rgb(220,106,47)"/><text x="24.9876%" y="735.50"></text></g><g><title>_int_realloc (4 samples, 0.60%)</title><rect x="24.7376%" y="709" width="0.5997%" height="15" fill="rgb(210,196,33)"/><text x="24.9876%" y="719.50"></text></g><g><title>_int_malloc (4 samples, 0.60%)</title><rect x="24.7376%" y="693" width="0.5997%" height="15" fill="rgb(229,154,42)"/><text x="24.9876%" y="703.50"></text></g><g><title>sysmalloc (3 samples, 0.45%)</title><rect x="24.8876%" y="677" width="0.4498%" height="15" fill="rgb(228,114,26)"/><text x="25.1376%" y="687.50"></text></g><g><title>__GI___mprotect (3 samples, 0.45%)</title><rect x="24.8876%" y="661" width="0.4498%" height="15" fill="rgb(208,144,1)"/><text x="25.1376%" y="671.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="25.1874%" y="645" width="0.1499%" height="15" fill="rgb(239,112,37)"/><text x="25.4374%" y="655.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_into_caches (1 samples, 0.15%)</title><rect x="25.3373%" y="741" width="0.1499%" height="15" fill="rgb(210,96,50)"/><text x="25.5873%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="25.3373%" y="725" width="0.1499%" height="15" fill="rgb(222,178,2)"/><text x="25.5873%" y="735.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="25.3373%" y="709" width="0.1499%" height="15" fill="rgb(226,74,18)"/><text x="25.5873%" y="719.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="25.3373%" y="693" width="0.1499%" height="15" fill="rgb(225,67,54)"/><text x="25.5873%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="25.3373%" y="677" width="0.1499%" height="15" fill="rgb(251,92,32)"/><text x="25.5873%" y="687.50"></text></g><g><title>sysmalloc (1 samples, 0.15%)</title><rect x="25.3373%" y="661" width="0.1499%" height="15" fill="rgb(228,149,22)"/><text x="25.5873%" y="671.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="25.3373%" y="645" width="0.1499%" height="15" fill="rgb(243,54,13)"/><text x="25.5873%" y="655.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="25.3373%" y="629" width="0.1499%" height="15" fill="rgb(243,180,28)"/><text x="25.5873%" y="639.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="25.3373%" y="613" width="0.1499%" height="15" fill="rgb(208,167,24)"/><text x="25.5873%" y="623.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="25.3373%" y="597" width="0.1499%" height="15" fill="rgb(245,73,45)"/><text x="25.5873%" y="607.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.15%)</title><rect x="25.3373%" y="581" width="0.1499%" height="15" fill="rgb(237,203,48)"/><text x="25.5873%" y="591.50"></text></g><g><title>mem_cgroup_throttle_swaprate (1 samples, 0.15%)</title><rect x="25.3373%" y="565" width="0.1499%" height="15" fill="rgb(211,197,16)"/><text x="25.5873%" y="575.50"></text></g><g><title>kthread_blkcg (1 samples, 0.15%)</title><rect x="25.3373%" y="549" width="0.1499%" height="15" fill="rgb(243,99,51)"/><text x="25.5873%" y="559.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.15%)</title><rect x="25.4873%" y="709" width="0.1499%" height="15" fill="rgb(215,123,29)"/><text x="25.7373%" y="719.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.15%)</title><rect x="25.7871%" y="213" width="0.1499%" height="15" fill="rgb(239,186,37)"/><text x="26.0371%" y="223.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.15%)</title><rect x="25.9370%" y="133" width="0.1499%" height="15" fill="rgb(252,136,39)"/><text x="26.1870%" y="143.50"></text></g><g><title>enqueue_task (3 samples, 0.45%)</title><rect x="26.0870%" y="133" width="0.4498%" height="15" fill="rgb(223,213,32)"/><text x="26.3370%" y="143.50"></text></g><g><title>psi_task_change (3 samples, 0.45%)</title><rect x="26.0870%" y="117" width="0.4498%" height="15" fill="rgb(233,115,5)"/><text x="26.3370%" y="127.50"></text></g><g><title>psi_group_change (3 samples, 0.45%)</title><rect x="26.0870%" y="101" width="0.4498%" height="15" fill="rgb(207,226,44)"/><text x="26.3370%" y="111.50"></text></g><g><title>record_times (3 samples, 0.45%)</title><rect x="26.0870%" y="85" width="0.4498%" height="15" fill="rgb(208,126,0)"/><text x="26.3370%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.30%)</title><rect x="26.2369%" y="69" width="0.2999%" height="15" fill="rgb(244,66,21)"/><text x="26.4869%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.15%)</title><rect x="26.3868%" y="53" width="0.1499%" height="15" fill="rgb(222,97,12)"/><text x="26.6368%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.15%)</title><rect x="26.3868%" y="37" width="0.1499%" height="15" fill="rgb(219,213,19)"/><text x="26.6368%" y="47.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.45%)</title><rect x="26.5367%" y="133" width="0.4498%" height="15" fill="rgb(252,169,30)"/><text x="26.7867%" y="143.50"></text></g><g><title>enqueue_entity (1 samples, 0.15%)</title><rect x="26.8366%" y="117" width="0.1499%" height="15" fill="rgb(206,32,51)"/><text x="27.0866%" y="127.50"></text></g><g><title>sock_def_readable (10 samples, 1.50%)</title><rect x="25.9370%" y="213" width="1.4993%" height="15" fill="rgb(250,172,42)"/><text x="26.1870%" y="223.50"></text></g><g><title>__wake_up_common_lock (10 samples, 1.50%)</title><rect x="25.9370%" y="197" width="1.4993%" height="15" fill="rgb(209,34,43)"/><text x="26.1870%" y="207.50"></text></g><g><title>__wake_up_common (10 samples, 1.50%)</title><rect x="25.9370%" y="181" width="1.4993%" height="15" fill="rgb(223,11,35)"/><text x="26.1870%" y="191.50"></text></g><g><title>pollwake (10 samples, 1.50%)</title><rect x="25.9370%" y="165" width="1.4993%" height="15" fill="rgb(251,219,26)"/><text x="26.1870%" y="175.50"></text></g><g><title>try_to_wake_up (10 samples, 1.50%)</title><rect x="25.9370%" y="149" width="1.4993%" height="15" fill="rgb(231,119,3)"/><text x="26.1870%" y="159.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.45%)</title><rect x="26.9865%" y="133" width="0.4498%" height="15" fill="rgb(216,97,11)"/><text x="27.2365%" y="143.50"></text></g><g><title>check_preempt_curr (3 samples, 0.45%)</title><rect x="26.9865%" y="117" width="0.4498%" height="15" fill="rgb(223,59,9)"/><text x="27.2365%" y="127.50"></text></g><g><title>resched_curr (2 samples, 0.30%)</title><rect x="27.1364%" y="101" width="0.2999%" height="15" fill="rgb(233,93,31)"/><text x="27.3864%" y="111.50"></text></g><g><title>kfree (1 samples, 0.15%)</title><rect x="27.4363%" y="181" width="0.1499%" height="15" fill="rgb(239,81,33)"/><text x="27.6863%" y="191.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.15%)</title><rect x="27.4363%" y="165" width="0.1499%" height="15" fill="rgb(213,120,34)"/><text x="27.6863%" y="175.50"></text></g><g><title>tcp_ack (2 samples, 0.30%)</title><rect x="27.4363%" y="213" width="0.2999%" height="15" fill="rgb(243,49,53)"/><text x="27.6863%" y="223.50"></text></g><g><title>__kfree_skb (2 samples, 0.30%)</title><rect x="27.4363%" y="197" width="0.2999%" height="15" fill="rgb(247,216,33)"/><text x="27.6863%" y="207.50"></text></g><g><title>skb_release_data (1 samples, 0.15%)</title><rect x="27.5862%" y="181" width="0.1499%" height="15" fill="rgb(226,26,14)"/><text x="27.8362%" y="191.50"></text></g><g><title>tcp_check_space (1 samples, 0.15%)</title><rect x="27.7361%" y="213" width="0.1499%" height="15" fill="rgb(215,49,53)"/><text x="27.9861%" y="223.50"></text></g><g><title>ip_local_deliver (15 samples, 2.25%)</title><rect x="25.7871%" y="309" width="2.2489%" height="15" fill="rgb(245,162,40)"/><text x="26.0371%" y="319.50">i..</text></g><g><title>ip_local_deliver_finish (15 samples, 2.25%)</title><rect x="25.7871%" y="293" width="2.2489%" height="15" fill="rgb(229,68,17)"/><text x="26.0371%" y="303.50">i..</text></g><g><title>ip_protocol_deliver_rcu (15 samples, 2.25%)</title><rect x="25.7871%" y="277" width="2.2489%" height="15" fill="rgb(213,182,10)"/><text x="26.0371%" y="287.50">i..</text></g><g><title>tcp_v4_rcv (15 samples, 2.25%)</title><rect x="25.7871%" y="261" width="2.2489%" height="15" fill="rgb(245,125,30)"/><text x="26.0371%" y="271.50">t..</text></g><g><title>tcp_v4_do_rcv (15 samples, 2.25%)</title><rect x="25.7871%" y="245" width="2.2489%" height="15" fill="rgb(232,202,2)"/><text x="26.0371%" y="255.50">t..</text></g><g><title>tcp_rcv_established (15 samples, 2.25%)</title><rect x="25.7871%" y="229" width="2.2489%" height="15" fill="rgb(237,140,51)"/><text x="26.0371%" y="239.50">t..</text></g><g><title>tcp_queue_rcv (1 samples, 0.15%)</title><rect x="27.8861%" y="213" width="0.1499%" height="15" fill="rgb(236,157,25)"/><text x="28.1361%" y="223.50"></text></g><g><title>__ip_queue_xmit (18 samples, 2.70%)</title><rect x="25.6372%" y="485" width="2.6987%" height="15" fill="rgb(219,209,0)"/><text x="25.8872%" y="495.50">__..</text></g><g><title>ip_output (18 samples, 2.70%)</title><rect x="25.6372%" y="469" width="2.6987%" height="15" fill="rgb(240,116,54)"/><text x="25.8872%" y="479.50">ip..</text></g><g><title>ip_finish_output2 (17 samples, 2.55%)</title><rect x="25.7871%" y="453" width="2.5487%" height="15" fill="rgb(216,10,36)"/><text x="26.0371%" y="463.50">ip..</text></g><g><title>__local_bh_enable_ip (17 samples, 2.55%)</title><rect x="25.7871%" y="437" width="2.5487%" height="15" fill="rgb(222,72,44)"/><text x="26.0371%" y="447.50">__..</text></g><g><title>do_softirq (17 samples, 2.55%)</title><rect x="25.7871%" y="421" width="2.5487%" height="15" fill="rgb(232,159,9)"/><text x="26.0371%" y="431.50">do..</text></g><g><title>do_softirq_own_stack (17 samples, 2.55%)</title><rect x="25.7871%" y="405" width="2.5487%" height="15" fill="rgb(210,39,32)"/><text x="26.0371%" y="415.50">do..</text></g><g><title>__do_softirq (17 samples, 2.55%)</title><rect x="25.7871%" y="389" width="2.5487%" height="15" fill="rgb(216,194,45)"/><text x="26.0371%" y="399.50">__..</text></g><g><title>net_rx_action (17 samples, 2.55%)</title><rect x="25.7871%" y="373" width="2.5487%" height="15" fill="rgb(218,18,35)"/><text x="26.0371%" y="383.50">ne..</text></g><g><title>process_backlog (17 samples, 2.55%)</title><rect x="25.7871%" y="357" width="2.5487%" height="15" fill="rgb(207,83,51)"/><text x="26.0371%" y="367.50">pr..</text></g><g><title>__netif_receive_skb_one_core (17 samples, 2.55%)</title><rect x="25.7871%" y="341" width="2.5487%" height="15" fill="rgb(225,63,43)"/><text x="26.0371%" y="351.50">__..</text></g><g><title>ip_rcv (17 samples, 2.55%)</title><rect x="25.7871%" y="325" width="2.5487%" height="15" fill="rgb(207,57,36)"/><text x="26.0371%" y="335.50">ip..</text></g><g><title>ip_rcv_core (2 samples, 0.30%)</title><rect x="28.0360%" y="309" width="0.2999%" height="15" fill="rgb(216,99,33)"/><text x="28.2860%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (19 samples, 2.85%)</title><rect x="25.6372%" y="533" width="2.8486%" height="15" fill="rgb(225,42,16)"/><text x="25.8872%" y="543.50">__..</text></g><g><title>tcp_write_xmit (19 samples, 2.85%)</title><rect x="25.6372%" y="517" width="2.8486%" height="15" fill="rgb(220,201,45)"/><text x="25.8872%" y="527.50">tc..</text></g><g><title>__tcp_transmit_skb (19 samples, 2.85%)</title><rect x="25.6372%" y="501" width="2.8486%" height="15" fill="rgb(225,33,4)"/><text x="25.8872%" y="511.50">__..</text></g><g><title>skb_clone (1 samples, 0.15%)</title><rect x="28.3358%" y="485" width="0.1499%" height="15" fill="rgb(224,33,50)"/><text x="28.5858%" y="495.50"></text></g><g><title>__ksize (1 samples, 0.15%)</title><rect x="28.4858%" y="501" width="0.1499%" height="15" fill="rgb(246,198,51)"/><text x="28.7358%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.30%)</title><rect x="28.4858%" y="533" width="0.2999%" height="15" fill="rgb(205,22,4)"/><text x="28.7358%" y="543.50"></text></g><g><title>__alloc_skb (2 samples, 0.30%)</title><rect x="28.4858%" y="517" width="0.2999%" height="15" fill="rgb(206,3,8)"/><text x="28.7358%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.15%)</title><rect x="28.6357%" y="501" width="0.1499%" height="15" fill="rgb(251,23,15)"/><text x="28.8857%" y="511.50"></text></g><g><title>sock_sendmsg (22 samples, 3.30%)</title><rect x="25.6372%" y="581" width="3.2984%" height="15" fill="rgb(252,88,28)"/><text x="25.8872%" y="591.50">soc..</text></g><g><title>tcp_sendmsg (22 samples, 3.30%)</title><rect x="25.6372%" y="565" width="3.2984%" height="15" fill="rgb(212,127,14)"/><text x="25.8872%" y="575.50">tcp..</text></g><g><title>tcp_sendmsg_locked (22 samples, 3.30%)</title><rect x="25.6372%" y="549" width="3.2984%" height="15" fill="rgb(247,145,37)"/><text x="25.8872%" y="559.50">tcp..</text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.15%)</title><rect x="28.7856%" y="533" width="0.1499%" height="15" fill="rgb(209,117,53)"/><text x="29.0356%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.15%)</title><rect x="28.7856%" y="517" width="0.1499%" height="15" fill="rgb(212,90,42)"/><text x="29.0356%" y="527.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.15%)</title><rect x="28.7856%" y="501" width="0.1499%" height="15" fill="rgb(218,164,37)"/><text x="29.0356%" y="511.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (34 samples, 5.10%)</title><rect x="24.1379%" y="757" width="5.0975%" height="15" fill="rgb(246,65,34)"/><text x="24.3879%" y="767.50">decor_..</text></g><g><title>mysql::conn::Conn::_query (25 samples, 3.75%)</title><rect x="25.4873%" y="741" width="3.7481%" height="15" fill="rgb(231,100,33)"/><text x="25.7373%" y="751.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (25 samples, 3.75%)</title><rect x="25.4873%" y="725" width="3.7481%" height="15" fill="rgb(228,126,14)"/><text x="25.7373%" y="735.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (24 samples, 3.60%)</title><rect x="25.6372%" y="709" width="3.5982%" height="15" fill="rgb(215,173,21)"/><text x="25.8872%" y="719.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (24 samples, 3.60%)</title><rect x="25.6372%" y="693" width="3.5982%" height="15" fill="rgb(210,6,40)"/><text x="25.8872%" y="703.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (24 samples, 3.60%)</title><rect x="25.6372%" y="677" width="3.5982%" height="15" fill="rgb(212,48,18)"/><text x="25.8872%" y="687.50">std:..</text></g><g><title>__libc_send (24 samples, 3.60%)</title><rect x="25.6372%" y="661" width="3.5982%" height="15" fill="rgb(230,214,11)"/><text x="25.8872%" y="671.50">__li..</text></g><g><title>entry_SYSCALL_64 (24 samples, 3.60%)</title><rect x="25.6372%" y="645" width="3.5982%" height="15" fill="rgb(254,105,39)"/><text x="25.8872%" y="655.50">entr..</text></g><g><title>do_syscall_64 (24 samples, 3.60%)</title><rect x="25.6372%" y="629" width="3.5982%" height="15" fill="rgb(245,158,5)"/><text x="25.8872%" y="639.50">do_s..</text></g><g><title>__x64_sys_sendto (24 samples, 3.60%)</title><rect x="25.6372%" y="613" width="3.5982%" height="15" fill="rgb(249,208,11)"/><text x="25.8872%" y="623.50">__x6..</text></g><g><title>__sys_sendto (24 samples, 3.60%)</title><rect x="25.6372%" y="597" width="3.5982%" height="15" fill="rgb(210,39,28)"/><text x="25.8872%" y="607.50">__sy..</text></g><g><title>sockfd_lookup_light (2 samples, 0.30%)</title><rect x="28.9355%" y="581" width="0.2999%" height="15" fill="rgb(211,56,53)"/><text x="29.1855%" y="591.50"></text></g><g><title>__fdget (1 samples, 0.15%)</title><rect x="29.0855%" y="565" width="0.1499%" height="15" fill="rgb(226,201,30)"/><text x="29.3355%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.30%)</title><rect x="29.2354%" y="709" width="0.2999%" height="15" fill="rgb(239,101,34)"/><text x="29.4854%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.30%)</title><rect x="29.2354%" y="693" width="0.2999%" height="15" fill="rgb(226,209,5)"/><text x="29.4854%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.30%)</title><rect x="29.2354%" y="677" width="0.2999%" height="15" fill="rgb(250,105,47)"/><text x="29.4854%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="29.3853%" y="661" width="0.1499%" height="15" fill="rgb(230,72,3)"/><text x="29.6353%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="29.3853%" y="645" width="0.1499%" height="15" fill="rgb(232,218,39)"/><text x="29.6353%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="29.3853%" y="629" width="0.1499%" height="15" fill="rgb(248,166,6)"/><text x="29.6353%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="29.3853%" y="613" width="0.1499%" height="15" fill="rgb(247,89,20)"/><text x="29.6353%" y="623.50"></text></g><g><title>decor_mem::helpers::get_user_cols_of_datatable (3 samples, 0.45%)</title><rect x="29.2354%" y="757" width="0.4498%" height="15" fill="rgb(248,130,54)"/><text x="29.4854%" y="767.50"></text></g><g><title>core::fmt::write (3 samples, 0.45%)</title><rect x="29.2354%" y="741" width="0.4498%" height="15" fill="rgb(234,196,4)"/><text x="29.4854%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (3 samples, 0.45%)</title><rect x="29.2354%" y="725" width="0.4498%" height="15" fill="rgb(250,143,31)"/><text x="29.4854%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="29.5352%" y="709" width="0.1499%" height="15" fill="rgb(211,110,34)"/><text x="29.7852%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="29.5352%" y="693" width="0.1499%" height="15" fill="rgb(215,124,48)"/><text x="29.7852%" y="703.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="29.5352%" y="677" width="0.1499%" height="15" fill="rgb(216,46,13)"/><text x="29.7852%" y="687.50"></text></g><g><title>decor_mem::helpers::is_datatable (1 samples, 0.15%)</title><rect x="29.6852%" y="757" width="0.1499%" height="15" fill="rgb(205,184,25)"/><text x="29.9352%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="29.6852%" y="741" width="0.1499%" height="15" fill="rgb(228,1,10)"/><text x="29.9352%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="29.6852%" y="725" width="0.1499%" height="15" fill="rgb(213,116,27)"/><text x="29.9352%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="29.6852%" y="709" width="0.1499%" height="15" fill="rgb(241,95,50)"/><text x="29.9352%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="29.6852%" y="693" width="0.1499%" height="15" fill="rgb(238,48,32)"/><text x="29.9352%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="29.6852%" y="677" width="0.1499%" height="15" fill="rgb(235,113,49)"/><text x="29.9352%" y="687.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.15%)</title><rect x="29.6852%" y="661" width="0.1499%" height="15" fill="rgb(205,127,43)"/><text x="29.9352%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="29.6852%" y="645" width="0.1499%" height="15" fill="rgb(250,162,2)"/><text x="29.9352%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="29.6852%" y="629" width="0.1499%" height="15" fill="rgb(220,13,41)"/><text x="29.9352%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="29.6852%" y="613" width="0.1499%" height="15" fill="rgb(249,221,25)"/><text x="29.9352%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="29.6852%" y="597" width="0.1499%" height="15" fill="rgb(215,208,19)"/><text x="29.9352%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="29.6852%" y="581" width="0.1499%" height="15" fill="rgb(236,175,2)"/><text x="29.9352%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="29.6852%" y="565" width="0.1499%" height="15" fill="rgb(241,52,2)"/><text x="29.9352%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="29.6852%" y="549" width="0.1499%" height="15" fill="rgb(248,140,14)"/><text x="29.9352%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="29.6852%" y="533" width="0.1499%" height="15" fill="rgb(253,22,42)"/><text x="29.9352%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="29.6852%" y="517" width="0.1499%" height="15" fill="rgb(234,61,47)"/><text x="29.9352%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="30.2849%" y="725" width="0.1499%" height="15" fill="rgb(208,226,15)"/><text x="30.5349%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="30.4348%" y="709" width="0.1499%" height="15" fill="rgb(217,221,4)"/><text x="30.6848%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="30.4348%" y="693" width="0.1499%" height="15" fill="rgb(212,174,34)"/><text x="30.6848%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="30.7346%" y="645" width="0.1499%" height="15" fill="rgb(253,83,4)"/><text x="30.9846%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="30.7346%" y="629" width="0.1499%" height="15" fill="rgb(250,195,49)"/><text x="30.9846%" y="639.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.30%)</title><rect x="30.8846%" y="645" width="0.2999%" height="15" fill="rgb(241,192,25)"/><text x="31.1346%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="30.8846%" y="629" width="0.2999%" height="15" fill="rgb(208,124,10)"/><text x="31.1346%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (2 samples, 0.30%)</title><rect x="30.8846%" y="613" width="0.2999%" height="15" fill="rgb(222,33,0)"/><text x="31.1346%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 1.20%)</title><rect x="30.7346%" y="693" width="1.1994%" height="15" fill="rgb(234,209,28)"/><text x="30.9846%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 1.20%)</title><rect x="30.7346%" y="677" width="1.1994%" height="15" fill="rgb(224,11,23)"/><text x="30.9846%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 1.20%)</title><rect x="30.7346%" y="661" width="1.1994%" height="15" fill="rgb(232,99,1)"/><text x="30.9846%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.75%)</title><rect x="31.1844%" y="645" width="0.7496%" height="15" fill="rgb(237,95,45)"/><text x="31.4344%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.30%)</title><rect x="31.6342%" y="629" width="0.2999%" height="15" fill="rgb(208,109,11)"/><text x="31.8842%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.30%)</title><rect x="31.6342%" y="613" width="0.2999%" height="15" fill="rgb(216,190,48)"/><text x="31.8842%" y="623.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="31.7841%" y="597" width="0.1499%" height="15" fill="rgb(251,171,36)"/><text x="32.0341%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="31.9340%" y="693" width="0.1499%" height="15" fill="rgb(230,62,22)"/><text x="32.1840%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="32.0840%" y="677" width="0.1499%" height="15" fill="rgb(225,114,35)"/><text x="32.3340%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (12 samples, 1.80%)</title><rect x="30.5847%" y="709" width="1.7991%" height="15" fill="rgb(215,118,42)"/><text x="30.8347%" y="719.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.30%)</title><rect x="32.0840%" y="693" width="0.2999%" height="15" fill="rgb(243,119,21)"/><text x="32.3340%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="32.2339%" y="677" width="0.1499%" height="15" fill="rgb(252,177,53)"/><text x="32.4839%" y="687.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="32.2339%" y="661" width="0.1499%" height="15" fill="rgb(237,209,29)"/><text x="32.4839%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="32.3838%" y="693" width="0.1499%" height="15" fill="rgb(212,65,23)"/><text x="32.6338%" y="703.50"></text></g><g><title>core::fmt::write (15 samples, 2.25%)</title><rect x="30.4348%" y="725" width="2.2489%" height="15" fill="rgb(230,222,46)"/><text x="30.6848%" y="735.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.30%)</title><rect x="32.3838%" y="709" width="0.2999%" height="15" fill="rgb(215,135,32)"/><text x="32.6338%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="32.5337%" y="693" width="0.1499%" height="15" fill="rgb(246,101,22)"/><text x="32.7837%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="32.5337%" y="677" width="0.1499%" height="15" fill="rgb(206,107,13)"/><text x="32.7837%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.90%)</title><rect x="32.8336%" y="709" width="0.8996%" height="15" fill="rgb(250,100,44)"/><text x="33.0836%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.90%)</title><rect x="32.8336%" y="693" width="0.8996%" height="15" fill="rgb(231,147,38)"/><text x="33.0836%" y="703.50"></text></g><g><title>decor_mem::views::View::insert_into_index (29 samples, 4.35%)</title><rect x="30.1349%" y="741" width="4.3478%" height="15" fill="rgb(229,8,40)"/><text x="30.3849%" y="751.50">decor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 1.80%)</title><rect x="32.6837%" y="725" width="1.7991%" height="15" fill="rgb(221,135,30)"/><text x="32.9337%" y="735.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (5 samples, 0.75%)</title><rect x="33.7331%" y="709" width="0.7496%" height="15" fill="rgb(249,193,18)"/><text x="33.9831%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.75%)</title><rect x="33.7331%" y="693" width="0.7496%" height="15" fill="rgb(209,133,39)"/><text x="33.9831%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.75%)</title><rect x="33.7331%" y="677" width="0.7496%" height="15" fill="rgb(232,100,14)"/><text x="33.9831%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.60%)</title><rect x="33.8831%" y="661" width="0.5997%" height="15" fill="rgb(224,185,1)"/><text x="34.1331%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.60%)</title><rect x="33.8831%" y="645" width="0.5997%" height="15" fill="rgb(223,139,8)"/><text x="34.1331%" y="655.50"></text></g><g><title>decor_mem::views::Views::insert (32 samples, 4.80%)</title><rect x="29.8351%" y="757" width="4.7976%" height="15" fill="rgb(232,213,38)"/><text x="30.0851%" y="767.50">decor_..</text></g><g><title>decor_mem::views::View::insert_row (1 samples, 0.15%)</title><rect x="34.4828%" y="741" width="0.1499%" height="15" fill="rgb(207,94,22)"/><text x="34.7328%" y="751.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="34.6327%" y="741" width="0.1499%" height="15" fill="rgb(219,183,54)"/><text x="34.8827%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="34.7826%" y="741" width="0.1499%" height="15" fill="rgb(216,185,54)"/><text x="35.0326%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="34.7826%" y="725" width="0.1499%" height="15" fill="rgb(254,217,39)"/><text x="35.0326%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="34.9325%" y="741" width="0.1499%" height="15" fill="rgb(240,178,23)"/><text x="35.1825%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="34.9325%" y="725" width="0.1499%" height="15" fill="rgb(218,11,47)"/><text x="35.1825%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.15%)</title><rect x="34.9325%" y="709" width="0.1499%" height="15" fill="rgb(218,51,51)"/><text x="35.1825%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.15%)</title><rect x="34.9325%" y="693" width="0.1499%" height="15" fill="rgb(238,126,27)"/><text x="35.1825%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="34.9325%" y="677" width="0.1499%" height="15" fill="rgb(249,202,22)"/><text x="35.1825%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="34.9325%" y="661" width="0.1499%" height="15" fill="rgb(254,195,49)"/><text x="35.1825%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="34.9325%" y="645" width="0.1499%" height="15" fill="rgb(208,123,14)"/><text x="35.1825%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="34.9325%" y="629" width="0.1499%" height="15" fill="rgb(224,200,8)"/><text x="35.1825%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="34.9325%" y="613" width="0.1499%" height="15" fill="rgb(217,61,36)"/><text x="35.1825%" y="623.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (1 samples, 0.15%)</title><rect x="35.2324%" y="725" width="0.1499%" height="15" fill="rgb(206,35,45)"/><text x="35.4824%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="35.2324%" y="709" width="0.1499%" height="15" fill="rgb(217,65,33)"/><text x="35.4824%" y="719.50"></text></g><g><title>decor_mem::select::get_rptrs_matching_constraint (3 samples, 0.45%)</title><rect x="35.0825%" y="741" width="0.4498%" height="15" fill="rgb(222,158,48)"/><text x="35.3325%" y="751.50"></text></g><g><title>decor_mem::views::View::get_rptrs_of_col (1 samples, 0.15%)</title><rect x="35.3823%" y="725" width="0.1499%" height="15" fill="rgb(254,2,54)"/><text x="35.6323%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.15%)</title><rect x="35.3823%" y="709" width="0.1499%" height="15" fill="rgb(250,143,38)"/><text x="35.6323%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.15%)</title><rect x="35.3823%" y="693" width="0.1499%" height="15" fill="rgb(248,25,0)"/><text x="35.6323%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="35.3823%" y="677" width="0.1499%" height="15" fill="rgb(206,152,27)"/><text x="35.6323%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="35.8321%" y="629" width="0.1499%" height="15" fill="rgb(240,77,30)"/><text x="36.0821%" y="639.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.15%)</title><rect x="35.8321%" y="613" width="0.1499%" height="15" fill="rgb(231,5,3)"/><text x="36.0821%" y="623.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.30%)</title><rect x="35.9820%" y="629" width="0.2999%" height="15" fill="rgb(207,226,32)"/><text x="36.2320%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="36.1319%" y="613" width="0.1499%" height="15" fill="rgb(222,207,47)"/><text x="36.3819%" y="623.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.15%)</title><rect x="36.2819%" y="629" width="0.1499%" height="15" fill="rgb(229,115,45)"/><text x="36.5319%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="36.2819%" y="613" width="0.1499%" height="15" fill="rgb(224,191,6)"/><text x="36.5319%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="36.2819%" y="597" width="0.1499%" height="15" fill="rgb(230,227,24)"/><text x="36.5319%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="36.2819%" y="581" width="0.1499%" height="15" fill="rgb(228,80,19)"/><text x="36.5319%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="36.2819%" y="565" width="0.1499%" height="15" fill="rgb(247,229,0)"/><text x="36.5319%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="36.2819%" y="549" width="0.1499%" height="15" fill="rgb(237,194,15)"/><text x="36.5319%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="36.2819%" y="533" width="0.1499%" height="15" fill="rgb(219,203,20)"/><text x="36.5319%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="36.2819%" y="517" width="0.1499%" height="15" fill="rgb(234,128,8)"/><text x="36.5319%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="36.2819%" y="501" width="0.1499%" height="15" fill="rgb(248,202,8)"/><text x="36.5319%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 1.50%)</title><rect x="35.6822%" y="645" width="1.4993%" height="15" fill="rgb(206,104,37)"/><text x="35.9322%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.75%)</title><rect x="36.4318%" y="629" width="0.7496%" height="15" fill="rgb(223,8,27)"/><text x="36.6818%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.60%)</title><rect x="36.5817%" y="613" width="0.5997%" height="15" fill="rgb(216,217,28)"/><text x="36.8317%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.60%)</title><rect x="36.5817%" y="597" width="0.5997%" height="15" fill="rgb(249,199,1)"/><text x="36.8317%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.30%)</title><rect x="36.8816%" y="581" width="0.2999%" height="15" fill="rgb(240,85,17)"/><text x="37.1316%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.95%)</title><rect x="35.6822%" y="677" width="1.9490%" height="15" fill="rgb(206,108,45)"/><text x="35.9322%" y="687.50">&lt;..</text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 1.95%)</title><rect x="35.6822%" y="661" width="1.9490%" height="15" fill="rgb(245,210,41)"/><text x="35.9322%" y="671.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.45%)</title><rect x="37.1814%" y="645" width="0.4498%" height="15" fill="rgb(206,13,37)"/><text x="37.4314%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.45%)</title><rect x="37.1814%" y="629" width="0.4498%" height="15" fill="rgb(250,61,18)"/><text x="37.4314%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.30%)</title><rect x="37.3313%" y="613" width="0.2999%" height="15" fill="rgb(235,172,48)"/><text x="37.5813%" y="623.50"></text></g><g><title>core::fmt::write (14 samples, 2.10%)</title><rect x="35.6822%" y="709" width="2.0990%" height="15" fill="rgb(249,201,17)"/><text x="35.9322%" y="719.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (14 samples, 2.10%)</title><rect x="35.6822%" y="693" width="2.0990%" height="15" fill="rgb(219,208,6)"/><text x="35.9322%" y="703.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.15%)</title><rect x="37.6312%" y="677" width="0.1499%" height="15" fill="rgb(248,31,23)"/><text x="37.8812%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="37.6312%" y="661" width="0.1499%" height="15" fill="rgb(245,15,42)"/><text x="37.8812%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="37.7811%" y="645" width="0.1499%" height="15" fill="rgb(222,217,39)"/><text x="38.0311%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="37.7811%" y="629" width="0.1499%" height="15" fill="rgb(210,219,27)"/><text x="38.0311%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.15%)</title><rect x="37.7811%" y="613" width="0.1499%" height="15" fill="rgb(252,166,36)"/><text x="38.0311%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="37.7811%" y="597" width="0.1499%" height="15" fill="rgb(245,132,34)"/><text x="38.0311%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="37.7811%" y="581" width="0.1499%" height="15" fill="rgb(236,54,3)"/><text x="38.0311%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="37.7811%" y="565" width="0.1499%" height="15" fill="rgb(241,173,43)"/><text x="38.0311%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="37.7811%" y="549" width="0.1499%" height="15" fill="rgb(215,190,9)"/><text x="38.0311%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="37.7811%" y="533" width="0.1499%" height="15" fill="rgb(242,101,16)"/><text x="38.0311%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="37.7811%" y="517" width="0.1499%" height="15" fill="rgb(223,190,21)"/><text x="38.0311%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="37.7811%" y="501" width="0.1499%" height="15" fill="rgb(215,228,25)"/><text x="38.0311%" y="511.50"></text></g><g><title>core::cmp::max (1 samples, 0.15%)</title><rect x="37.7811%" y="485" width="0.1499%" height="15" fill="rgb(225,36,22)"/><text x="38.0311%" y="495.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.15%)</title><rect x="37.7811%" y="469" width="0.1499%" height="15" fill="rgb(251,106,46)"/><text x="38.0311%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="37.7811%" y="453" width="0.1499%" height="15" fill="rgb(208,90,1)"/><text x="38.0311%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="37.9310%" y="581" width="0.1499%" height="15" fill="rgb(243,10,4)"/><text x="38.1810%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="37.9310%" y="565" width="0.1499%" height="15" fill="rgb(212,137,27)"/><text x="38.1810%" y="575.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.30%)</title><rect x="38.0810%" y="581" width="0.2999%" height="15" fill="rgb(231,220,49)"/><text x="38.3310%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.30%)</title><rect x="38.0810%" y="565" width="0.2999%" height="15" fill="rgb(237,96,20)"/><text x="38.3310%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (2 samples, 0.30%)</title><rect x="38.0810%" y="549" width="0.2999%" height="15" fill="rgb(239,229,30)"/><text x="38.3310%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.60%)</title><rect x="37.9310%" y="597" width="0.5997%" height="15" fill="rgb(219,65,33)"/><text x="38.1810%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.15%)</title><rect x="38.3808%" y="581" width="0.1499%" height="15" fill="rgb(243,134,7)"/><text x="38.6308%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.75%)</title><rect x="37.9310%" y="629" width="0.7496%" height="15" fill="rgb(216,177,54)"/><text x="38.1810%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.75%)</title><rect x="37.9310%" y="613" width="0.7496%" height="15" fill="rgb(211,160,20)"/><text x="38.1810%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.15%)</title><rect x="38.5307%" y="597" width="0.1499%" height="15" fill="rgb(239,85,39)"/><text x="38.7807%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="38.5307%" y="581" width="0.1499%" height="15" fill="rgb(232,125,22)"/><text x="38.7807%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="38.6807%" y="629" width="0.1499%" height="15" fill="rgb(244,57,34)"/><text x="38.9307%" y="639.50"></text></g><g><title>decor_mem::select::get_value_for_row_closure (24 samples, 3.60%)</title><rect x="35.5322%" y="741" width="3.5982%" height="15" fill="rgb(214,203,32)"/><text x="35.7822%" y="751.50">deco..</text></g><g><title>decor_mem::select::tablecolumn_matches_col (23 samples, 3.45%)</title><rect x="35.6822%" y="725" width="3.4483%" height="15" fill="rgb(207,58,43)"/><text x="35.9322%" y="735.50">dec..</text></g><g><title>decor_mem::views::TableColumnDef::name (9 samples, 1.35%)</title><rect x="37.7811%" y="709" width="1.3493%" height="15" fill="rgb(215,193,15)"/><text x="38.0311%" y="719.50"></text></g><g><title>alloc::fmt::format (9 samples, 1.35%)</title><rect x="37.7811%" y="693" width="1.3493%" height="15" fill="rgb(232,15,44)"/><text x="38.0311%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 1.35%)</title><rect x="37.7811%" y="677" width="1.3493%" height="15" fill="rgb(212,3,48)"/><text x="38.0311%" y="687.50"></text></g><g><title>core::fmt::write (9 samples, 1.35%)</title><rect x="37.7811%" y="661" width="1.3493%" height="15" fill="rgb(218,128,7)"/><text x="38.0311%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 1.20%)</title><rect x="37.9310%" y="645" width="1.1994%" height="15" fill="rgb(226,216,39)"/><text x="38.1810%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.30%)</title><rect x="38.8306%" y="629" width="0.2999%" height="15" fill="rgb(243,47,51)"/><text x="39.0806%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.30%)</title><rect x="38.8306%" y="613" width="0.2999%" height="15" fill="rgb(241,183,40)"/><text x="39.0806%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="39.1304%" y="693" width="0.1499%" height="15" fill="rgb(231,217,32)"/><text x="39.3804%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="39.1304%" y="677" width="0.1499%" height="15" fill="rgb(229,61,38)"/><text x="39.3804%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="39.1304%" y="661" width="0.1499%" height="15" fill="rgb(225,210,5)"/><text x="39.3804%" y="671.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="39.2804%" y="645" width="0.1499%" height="15" fill="rgb(231,79,45)"/><text x="39.5304%" y="655.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.15%)</title><rect x="39.2804%" y="629" width="0.1499%" height="15" fill="rgb(224,100,7)"/><text x="39.5304%" y="639.50"></text></g><g><title>core::fmt::write (5 samples, 0.75%)</title><rect x="39.1304%" y="725" width="0.7496%" height="15" fill="rgb(241,198,18)"/><text x="39.3804%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.75%)</title><rect x="39.1304%" y="709" width="0.7496%" height="15" fill="rgb(252,97,53)"/><text x="39.3804%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.60%)</title><rect x="39.2804%" y="693" width="0.5997%" height="15" fill="rgb(220,88,7)"/><text x="39.5304%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.60%)</title><rect x="39.2804%" y="677" width="0.5997%" height="15" fill="rgb(213,176,14)"/><text x="39.5304%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.60%)</title><rect x="39.2804%" y="661" width="0.5997%" height="15" fill="rgb(246,73,7)"/><text x="39.5304%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.45%)</title><rect x="39.4303%" y="645" width="0.4498%" height="15" fill="rgb(245,64,36)"/><text x="39.6803%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.30%)</title><rect x="39.5802%" y="629" width="0.2999%" height="15" fill="rgb(245,80,10)"/><text x="39.8302%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.30%)</title><rect x="39.5802%" y="613" width="0.2999%" height="15" fill="rgb(232,107,50)"/><text x="39.8302%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.30%)</title><rect x="39.8801%" y="725" width="0.2999%" height="15" fill="rgb(253,3,0)"/><text x="40.1301%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (2 samples, 0.30%)</title><rect x="39.8801%" y="709" width="0.2999%" height="15" fill="rgb(212,99,53)"/><text x="40.1301%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.30%)</title><rect x="39.8801%" y="693" width="0.2999%" height="15" fill="rgb(249,111,54)"/><text x="40.1301%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.30%)</title><rect x="39.8801%" y="677" width="0.2999%" height="15" fill="rgb(249,55,30)"/><text x="40.1301%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.30%)</title><rect x="39.8801%" y="661" width="0.2999%" height="15" fill="rgb(237,47,42)"/><text x="40.1301%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.30%)</title><rect x="39.8801%" y="645" width="0.2999%" height="15" fill="rgb(211,20,18)"/><text x="40.1301%" y="655.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (150 samples, 22.49%)</title><rect x="17.8411%" y="789" width="22.4888%" height="15" fill="rgb(231,203,46)"/><text x="18.0911%" y="799.50">decor_mem::query_transformer::QueryT..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (150 samples, 22.49%)</title><rect x="17.8411%" y="773" width="22.4888%" height="15" fill="rgb(237,142,3)"/><text x="18.0911%" y="783.50">decor_mem::query_transformer::QueryT..</text></g><g><title>decor_mem::views::Views::update (38 samples, 5.70%)</title><rect x="34.6327%" y="757" width="5.6972%" height="15" fill="rgb(241,107,1)"/><text x="34.8827%" y="767.50">decor_m..</text></g><g><title>decor_mem::views::View::update_index (8 samples, 1.20%)</title><rect x="39.1304%" y="741" width="1.1994%" height="15" fill="rgb(229,83,13)"/><text x="39.3804%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.15%)</title><rect x="40.1799%" y="725" width="0.1499%" height="15" fill="rgb(241,91,40)"/><text x="40.4299%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.15%)</title><rect x="40.1799%" y="709" width="0.1499%" height="15" fill="rgb(225,3,45)"/><text x="40.4299%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="40.1799%" y="693" width="0.1499%" height="15" fill="rgb(244,223,14)"/><text x="40.4299%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="40.3298%" y="757" width="0.1499%" height="15" fill="rgb(224,124,37)"/><text x="40.5798%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="40.3298%" y="741" width="0.1499%" height="15" fill="rgb(251,171,30)"/><text x="40.5798%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="40.3298%" y="725" width="0.1499%" height="15" fill="rgb(236,46,54)"/><text x="40.5798%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="40.3298%" y="709" width="0.1499%" height="15" fill="rgb(245,213,5)"/><text x="40.5798%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="40.3298%" y="693" width="0.1499%" height="15" fill="rgb(230,144,27)"/><text x="40.5798%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="40.3298%" y="677" width="0.1499%" height="15" fill="rgb(220,86,6)"/><text x="40.5798%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="40.3298%" y="661" width="0.1499%" height="15" fill="rgb(240,20,13)"/><text x="40.5798%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="40.3298%" y="645" width="0.1499%" height="15" fill="rgb(217,89,34)"/><text x="40.5798%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="40.3298%" y="629" width="0.1499%" height="15" fill="rgb(229,13,5)"/><text x="40.5798%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="40.3298%" y="613" width="0.1499%" height="15" fill="rgb(244,67,35)"/><text x="40.5798%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="40.3298%" y="597" width="0.1499%" height="15" fill="rgb(221,40,2)"/><text x="40.5798%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="40.3298%" y="581" width="0.1499%" height="15" fill="rgb(237,157,21)"/><text x="40.5798%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.30%)</title><rect x="40.3298%" y="773" width="0.2999%" height="15" fill="rgb(222,94,11)"/><text x="40.5798%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="40.4798%" y="757" width="0.1499%" height="15" fill="rgb(249,113,6)"/><text x="40.7298%" y="767.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="40.4798%" y="741" width="0.1499%" height="15" fill="rgb(238,137,36)"/><text x="40.7298%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="40.7796%" y="757" width="0.1499%" height="15" fill="rgb(210,102,26)"/><text x="41.0296%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.45%)</title><rect x="40.6297%" y="773" width="0.4498%" height="15" fill="rgb(218,30,30)"/><text x="40.8797%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.15%)</title><rect x="40.9295%" y="757" width="0.1499%" height="15" fill="rgb(214,67,26)"/><text x="41.1795%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.15%)</title><rect x="40.9295%" y="741" width="0.1499%" height="15" fill="rgb(251,9,53)"/><text x="41.1795%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.15%)</title><rect x="40.9295%" y="725" width="0.1499%" height="15" fill="rgb(228,204,25)"/><text x="41.1795%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.15%)</title><rect x="40.9295%" y="709" width="0.1499%" height="15" fill="rgb(207,153,8)"/><text x="41.1795%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="41.0795%" y="757" width="0.1499%" height="15" fill="rgb(242,9,16)"/><text x="41.3295%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="41.0795%" y="741" width="0.1499%" height="15" fill="rgb(217,211,10)"/><text x="41.3295%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="41.0795%" y="725" width="0.1499%" height="15" fill="rgb(219,228,52)"/><text x="41.3295%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="41.0795%" y="709" width="0.1499%" height="15" fill="rgb(231,92,29)"/><text x="41.3295%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="41.0795%" y="693" width="0.1499%" height="15" fill="rgb(232,8,23)"/><text x="41.3295%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="41.3793%" y="741" width="0.1499%" height="15" fill="rgb(216,211,34)"/><text x="41.6293%" y="751.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="41.3793%" y="725" width="0.1499%" height="15" fill="rgb(236,151,0)"/><text x="41.6293%" y="735.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="41.3793%" y="709" width="0.1499%" height="15" fill="rgb(209,168,3)"/><text x="41.6293%" y="719.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="41.3793%" y="693" width="0.1499%" height="15" fill="rgb(208,129,28)"/><text x="41.6293%" y="703.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="41.3793%" y="677" width="0.1499%" height="15" fill="rgb(229,78,22)"/><text x="41.6293%" y="687.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="41.3793%" y="661" width="0.1499%" height="15" fill="rgb(228,187,13)"/><text x="41.6293%" y="671.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="41.3793%" y="645" width="0.1499%" height="15" fill="rgb(240,119,24)"/><text x="41.6293%" y="655.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.15%)</title><rect x="41.3793%" y="629" width="0.1499%" height="15" fill="rgb(209,194,42)"/><text x="41.6293%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="41.3793%" y="613" width="0.1499%" height="15" fill="rgb(247,200,46)"/><text x="41.6293%" y="623.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="41.3793%" y="597" width="0.1499%" height="15" fill="rgb(218,76,16)"/><text x="41.6293%" y="607.50"></text></g><g><title>prep_new_page (1 samples, 0.15%)</title><rect x="41.3793%" y="581" width="0.1499%" height="15" fill="rgb(225,21,48)"/><text x="41.6293%" y="591.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.15%)</title><rect x="41.3793%" y="565" width="0.1499%" height="15" fill="rgb(239,223,50)"/><text x="41.6293%" y="575.50"></text></g><g><title>clear_page_erms (1 samples, 0.15%)</title><rect x="41.3793%" y="549" width="0.1499%" height="15" fill="rgb(244,45,21)"/><text x="41.6293%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.60%)</title><rect x="42.1289%" y="709" width="0.5997%" height="15" fill="rgb(232,33,43)"/><text x="42.3789%" y="719.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="42.7286%" y="693" width="0.1499%" height="15" fill="rgb(209,8,3)"/><text x="42.9786%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.15%)</title><rect x="42.7286%" y="677" width="0.1499%" height="15" fill="rgb(214,25,53)"/><text x="42.9786%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (12 samples, 1.80%)</title><rect x="41.5292%" y="725" width="1.7991%" height="15" fill="rgb(254,186,54)"/><text x="41.7792%" y="735.50">s..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.60%)</title><rect x="42.7286%" y="709" width="0.5997%" height="15" fill="rgb(208,174,49)"/><text x="42.9786%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.45%)</title><rect x="42.8786%" y="693" width="0.4498%" height="15" fill="rgb(233,191,51)"/><text x="43.1286%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="43.1784%" y="677" width="0.1499%" height="15" fill="rgb(222,134,10)"/><text x="43.4284%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="43.1784%" y="661" width="0.1499%" height="15" fill="rgb(230,226,20)"/><text x="43.4284%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="43.1784%" y="645" width="0.1499%" height="15" fill="rgb(251,111,25)"/><text x="43.4284%" y="655.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (22 samples, 3.30%)</title><rect x="40.3298%" y="789" width="3.2984%" height="15" fill="rgb(224,40,46)"/><text x="40.5798%" y="799.50">dec..</text></g><g><title>sql_parser::parser::parse_statements (17 samples, 2.55%)</title><rect x="41.0795%" y="773" width="2.5487%" height="15" fill="rgb(236,108,47)"/><text x="41.3295%" y="783.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (16 samples, 2.40%)</title><rect x="41.2294%" y="757" width="2.3988%" height="15" fill="rgb(234,93,0)"/><text x="41.4794%" y="767.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (14 samples, 2.10%)</title><rect x="41.5292%" y="741" width="2.0990%" height="15" fill="rgb(224,213,32)"/><text x="41.7792%" y="751.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (2 samples, 0.30%)</title><rect x="43.3283%" y="725" width="0.2999%" height="15" fill="rgb(251,11,48)"/><text x="43.5783%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="43.4783%" y="709" width="0.1499%" height="15" fill="rgb(236,173,5)"/><text x="43.7283%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="43.4783%" y="693" width="0.1499%" height="15" fill="rgb(230,95,12)"/><text x="43.7283%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="43.6282%" y="741" width="0.1499%" height="15" fill="rgb(232,209,1)"/><text x="43.8782%" y="751.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="43.6282%" y="725" width="0.1499%" height="15" fill="rgb(232,6,1)"/><text x="43.8782%" y="735.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="43.6282%" y="709" width="0.1499%" height="15" fill="rgb(210,224,50)"/><text x="43.8782%" y="719.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="43.6282%" y="693" width="0.1499%" height="15" fill="rgb(228,127,35)"/><text x="43.8782%" y="703.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="43.6282%" y="677" width="0.1499%" height="15" fill="rgb(245,102,45)"/><text x="43.8782%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.75%)</title><rect x="44.8276%" y="709" width="0.7496%" height="15" fill="rgb(214,1,49)"/><text x="45.0776%" y="719.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.15%)</title><rect x="45.7271%" y="693" width="0.1499%" height="15" fill="rgb(226,163,40)"/><text x="45.9771%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="45.7271%" y="677" width="0.1499%" height="15" fill="rgb(239,212,28)"/><text x="45.9771%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (15 samples, 2.25%)</title><rect x="44.0780%" y="725" width="2.2489%" height="15" fill="rgb(220,20,13)"/><text x="44.3280%" y="735.50">s..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.75%)</title><rect x="45.5772%" y="709" width="0.7496%" height="15" fill="rgb(210,164,35)"/><text x="45.8272%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.45%)</title><rect x="45.8771%" y="693" width="0.4498%" height="15" fill="rgb(248,109,41)"/><text x="46.1271%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.45%)</title><rect x="45.8771%" y="677" width="0.4498%" height="15" fill="rgb(238,23,50)"/><text x="46.1271%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.45%)</title><rect x="45.8771%" y="661" width="0.4498%" height="15" fill="rgb(211,48,49)"/><text x="46.1271%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.30%)</title><rect x="46.0270%" y="645" width="0.2999%" height="15" fill="rgb(223,36,21)"/><text x="46.2770%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (195 samples, 29.24%)</title><rect x="17.3913%" y="821" width="29.2354%" height="15" fill="rgb(207,123,46)"/><text x="17.6413%" y="831.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (192 samples, 28.79%)</title><rect x="17.8411%" y="805" width="28.7856%" height="15" fill="rgb(240,218,32)"/><text x="18.0911%" y="815.50">&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::o..</text></g><g><title>decor_mem::stats::get_qtype (20 samples, 3.00%)</title><rect x="43.6282%" y="789" width="2.9985%" height="15" fill="rgb(252,5,43)"/><text x="43.8782%" y="799.50">dec..</text></g><g><title>sql_parser::parser::parse_statements (20 samples, 3.00%)</title><rect x="43.6282%" y="773" width="2.9985%" height="15" fill="rgb(252,84,19)"/><text x="43.8782%" y="783.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (20 samples, 3.00%)</title><rect x="43.6282%" y="757" width="2.9985%" height="15" fill="rgb(243,152,39)"/><text x="43.8782%" y="767.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (19 samples, 2.85%)</title><rect x="43.7781%" y="741" width="2.8486%" height="15" fill="rgb(234,160,15)"/><text x="44.0281%" y="751.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (2 samples, 0.30%)</title><rect x="46.3268%" y="725" width="0.2999%" height="15" fill="rgb(237,34,20)"/><text x="46.5768%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="46.4768%" y="709" width="0.1499%" height="15" fill="rgb(229,97,13)"/><text x="46.7268%" y="719.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="46.4768%" y="693" width="0.1499%" height="15" fill="rgb(234,71,50)"/><text x="46.7268%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.15%)</title><rect x="46.6267%" y="821" width="0.1499%" height="15" fill="rgb(253,155,4)"/><text x="46.8767%" y="831.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.15%)</title><rect x="46.7766%" y="821" width="0.1499%" height="15" fill="rgb(222,185,37)"/><text x="47.0266%" y="831.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.15%)</title><rect x="46.7766%" y="805" width="0.1499%" height="15" fill="rgb(251,177,13)"/><text x="47.0266%" y="815.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.15%)</title><rect x="46.7766%" y="789" width="0.1499%" height="15" fill="rgb(250,179,40)"/><text x="47.0266%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.15%)</title><rect x="46.7766%" y="773" width="0.1499%" height="15" fill="rgb(242,44,2)"/><text x="47.0266%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="46.7766%" y="757" width="0.1499%" height="15" fill="rgb(216,177,13)"/><text x="47.0266%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="46.7766%" y="741" width="0.1499%" height="15" fill="rgb(216,106,43)"/><text x="47.0266%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="46.7766%" y="725" width="0.1499%" height="15" fill="rgb(216,183,2)"/><text x="47.0266%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="46.7766%" y="709" width="0.1499%" height="15" fill="rgb(249,75,3)"/><text x="47.0266%" y="719.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.15%)</title><rect x="46.7766%" y="693" width="0.1499%" height="15" fill="rgb(219,67,39)"/><text x="47.0266%" y="703.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.15%)</title><rect x="46.7766%" y="677" width="0.1499%" height="15" fill="rgb(253,228,2)"/><text x="47.0266%" y="687.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.15%)</title><rect x="46.7766%" y="661" width="0.1499%" height="15" fill="rgb(235,138,27)"/><text x="47.0266%" y="671.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.15%)</title><rect x="46.7766%" y="645" width="0.1499%" height="15" fill="rgb(236,97,51)"/><text x="47.0266%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="46.9265%" y="581" width="0.1499%" height="15" fill="rgb(240,80,30)"/><text x="47.1765%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="46.9265%" y="565" width="0.1499%" height="15" fill="rgb(230,178,19)"/><text x="47.1765%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="46.9265%" y="549" width="0.1499%" height="15" fill="rgb(210,190,27)"/><text x="47.1765%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="46.9265%" y="533" width="0.1499%" height="15" fill="rgb(222,107,31)"/><text x="47.1765%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="46.9265%" y="517" width="0.1499%" height="15" fill="rgb(216,127,34)"/><text x="47.1765%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="46.9265%" y="501" width="0.1499%" height="15" fill="rgb(234,116,52)"/><text x="47.1765%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="46.9265%" y="485" width="0.1499%" height="15" fill="rgb(222,124,15)"/><text x="47.1765%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="46.9265%" y="469" width="0.1499%" height="15" fill="rgb(231,179,28)"/><text x="47.1765%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="46.9265%" y="453" width="0.1499%" height="15" fill="rgb(226,93,45)"/><text x="47.1765%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="46.9265%" y="437" width="0.1499%" height="15" fill="rgb(215,8,51)"/><text x="47.1765%" y="447.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (2 samples, 0.30%)</title><rect x="46.9265%" y="805" width="0.2999%" height="15" fill="rgb(223,106,5)"/><text x="47.1765%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.30%)</title><rect x="46.9265%" y="789" width="0.2999%" height="15" fill="rgb(250,191,5)"/><text x="47.1765%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.30%)</title><rect x="46.9265%" y="773" width="0.2999%" height="15" fill="rgb(242,132,44)"/><text x="47.1765%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.30%)</title><rect x="46.9265%" y="757" width="0.2999%" height="15" fill="rgb(251,152,29)"/><text x="47.1765%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.30%)</title><rect x="46.9265%" y="741" width="0.2999%" height="15" fill="rgb(218,179,5)"/><text x="47.1765%" y="751.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.30%)</title><rect x="46.9265%" y="725" width="0.2999%" height="15" fill="rgb(227,67,19)"/><text x="47.1765%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.30%)</title><rect x="46.9265%" y="709" width="0.2999%" height="15" fill="rgb(233,119,31)"/><text x="47.1765%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.30%)</title><rect x="46.9265%" y="693" width="0.2999%" height="15" fill="rgb(241,120,22)"/><text x="47.1765%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.30%)</title><rect x="46.9265%" y="677" width="0.2999%" height="15" fill="rgb(224,102,30)"/><text x="47.1765%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.30%)</title><rect x="46.9265%" y="661" width="0.2999%" height="15" fill="rgb(210,164,37)"/><text x="47.1765%" y="671.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.30%)</title><rect x="46.9265%" y="645" width="0.2999%" height="15" fill="rgb(226,191,16)"/><text x="47.1765%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.30%)</title><rect x="46.9265%" y="629" width="0.2999%" height="15" fill="rgb(214,40,45)"/><text x="47.1765%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.30%)</title><rect x="46.9265%" y="613" width="0.2999%" height="15" fill="rgb(244,29,26)"/><text x="47.1765%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.30%)</title><rect x="46.9265%" y="597" width="0.2999%" height="15" fill="rgb(216,16,5)"/><text x="47.1765%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="47.0765%" y="581" width="0.1499%" height="15" fill="rgb(249,76,35)"/><text x="47.3265%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="47.0765%" y="565" width="0.1499%" height="15" fill="rgb(207,11,44)"/><text x="47.3265%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="47.2264%" y="741" width="0.1499%" height="15" fill="rgb(228,190,49)"/><text x="47.4764%" y="751.50"></text></g><g><title>_int_free (2 samples, 0.30%)</title><rect x="47.3763%" y="741" width="0.2999%" height="15" fill="rgb(214,173,12)"/><text x="47.6263%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (31 samples, 4.65%)</title><rect x="48.1259%" y="709" width="4.6477%" height="15" fill="rgb(218,26,35)"/><text x="48.3759%" y="719.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 4.65%)</title><rect x="48.1259%" y="693" width="4.6477%" height="15" fill="rgb(220,200,19)"/><text x="48.3759%" y="703.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 4.65%)</title><rect x="48.1259%" y="677" width="4.6477%" height="15" fill="rgb(239,95,49)"/><text x="48.3759%" y="687.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (31 samples, 4.65%)</title><rect x="48.1259%" y="661" width="4.6477%" height="15" fill="rgb(235,85,53)"/><text x="48.3759%" y="671.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (31 samples, 4.65%)</title><rect x="48.1259%" y="645" width="4.6477%" height="15" fill="rgb(233,133,31)"/><text x="48.3759%" y="655.50">alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 4.65%)</title><rect x="48.1259%" y="629" width="4.6477%" height="15" fill="rgb(218,25,20)"/><text x="48.3759%" y="639.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (31 samples, 4.65%)</title><rect x="48.1259%" y="613" width="4.6477%" height="15" fill="rgb(252,210,38)"/><text x="48.3759%" y="623.50">alloc..</text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 4.65%)</title><rect x="48.1259%" y="597" width="4.6477%" height="15" fill="rgb(242,134,21)"/><text x="48.3759%" y="607.50">core:..</text></g><g><title>__memmove_avx_unaligned_erms (31 samples, 4.65%)</title><rect x="48.1259%" y="581" width="4.6477%" height="15" fill="rgb(213,28,48)"/><text x="48.3759%" y="591.50">__mem..</text></g><g><title>sql_parser::parser::Parser::check_descent (40 samples, 6.00%)</title><rect x="46.9265%" y="821" width="5.9970%" height="15" fill="rgb(250,196,2)"/><text x="47.1765%" y="831.50">sql_pars..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (38 samples, 5.70%)</title><rect x="47.2264%" y="805" width="5.6972%" height="15" fill="rgb(227,5,17)"/><text x="47.4764%" y="815.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (38 samples, 5.70%)</title><rect x="47.2264%" y="789" width="5.6972%" height="15" fill="rgb(221,226,24)"/><text x="47.4764%" y="799.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::check_descent (38 samples, 5.70%)</title><rect x="47.2264%" y="773" width="5.6972%" height="15" fill="rgb(211,5,48)"/><text x="47.4764%" y="783.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (38 samples, 5.70%)</title><rect x="47.2264%" y="757" width="5.6972%" height="15" fill="rgb(219,150,6)"/><text x="47.4764%" y="767.50">sql_par..</text></g><g><title>sql_parser::parser::Parser::parse_data_type (35 samples, 5.25%)</title><rect x="47.6762%" y="741" width="5.2474%" height="15" fill="rgb(251,46,16)"/><text x="47.9262%" y="751.50">sql_pa..</text></g><g><title>sql_parser::parser::Parser::expected (35 samples, 5.25%)</title><rect x="47.6762%" y="725" width="5.2474%" height="15" fill="rgb(220,204,40)"/><text x="47.9262%" y="735.50">sql_pa..</text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="52.7736%" y="709" width="0.1499%" height="15" fill="rgb(211,85,2)"/><text x="53.0236%" y="719.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.15%)</title><rect x="52.7736%" y="693" width="0.1499%" height="15" fill="rgb(229,17,7)"/><text x="53.0236%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (1 samples, 0.15%)</title><rect x="52.9235%" y="821" width="0.1499%" height="15" fill="rgb(239,72,28)"/><text x="53.1735%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.15%)</title><rect x="52.9235%" y="805" width="0.1499%" height="15" fill="rgb(230,47,54)"/><text x="53.1735%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.15%)</title><rect x="52.9235%" y="789" width="0.1499%" height="15" fill="rgb(214,50,8)"/><text x="53.1735%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.15%)</title><rect x="52.9235%" y="773" width="0.1499%" height="15" fill="rgb(216,198,43)"/><text x="53.1735%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.15%)</title><rect x="52.9235%" y="757" width="0.1499%" height="15" fill="rgb(234,20,35)"/><text x="53.1735%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.15%)</title><rect x="52.9235%" y="741" width="0.1499%" height="15" fill="rgb(254,45,19)"/><text x="53.1735%" y="751.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.15%)</title><rect x="52.9235%" y="725" width="0.1499%" height="15" fill="rgb(219,14,44)"/><text x="53.1735%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.15%)</title><rect x="52.9235%" y="709" width="0.1499%" height="15" fill="rgb(217,220,26)"/><text x="53.1735%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="52.9235%" y="693" width="0.1499%" height="15" fill="rgb(213,158,28)"/><text x="53.1735%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="52.9235%" y="677" width="0.1499%" height="15" fill="rgb(252,51,52)"/><text x="53.1735%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.15%)</title><rect x="52.9235%" y="661" width="0.1499%" height="15" fill="rgb(246,89,16)"/><text x="53.1735%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="52.9235%" y="645" width="0.1499%" height="15" fill="rgb(216,158,49)"/><text x="53.1735%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="52.9235%" y="629" width="0.1499%" height="15" fill="rgb(236,107,19)"/><text x="53.1735%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="52.9235%" y="613" width="0.1499%" height="15" fill="rgb(228,185,30)"/><text x="53.1735%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.15%)</title><rect x="52.9235%" y="597" width="0.1499%" height="15" fill="rgb(246,134,8)"/><text x="53.1735%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="52.9235%" y="581" width="0.1499%" height="15" fill="rgb(214,143,50)"/><text x="53.1735%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="52.9235%" y="565" width="0.1499%" height="15" fill="rgb(228,75,8)"/><text x="53.1735%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="52.9235%" y="549" width="0.1499%" height="15" fill="rgb(207,175,4)"/><text x="53.1735%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.15%)</title><rect x="52.9235%" y="533" width="0.1499%" height="15" fill="rgb(205,108,24)"/><text x="53.1735%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="52.9235%" y="517" width="0.1499%" height="15" fill="rgb(244,120,49)"/><text x="53.1735%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.15%)</title><rect x="52.9235%" y="501" width="0.1499%" height="15" fill="rgb(223,47,38)"/><text x="53.1735%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.15%)</title><rect x="52.9235%" y="485" width="0.1499%" height="15" fill="rgb(229,179,11)"/><text x="53.1735%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.15%)</title><rect x="52.9235%" y="469" width="0.1499%" height="15" fill="rgb(231,122,1)"/><text x="53.1735%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.15%)</title><rect x="52.9235%" y="453" width="0.1499%" height="15" fill="rgb(245,119,9)"/><text x="53.1735%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="52.9235%" y="437" width="0.1499%" height="15" fill="rgb(241,163,25)"/><text x="53.1735%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.15%)</title><rect x="52.9235%" y="421" width="0.1499%" height="15" fill="rgb(217,214,3)"/><text x="53.1735%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="52.9235%" y="405" width="0.1499%" height="15" fill="rgb(240,86,28)"/><text x="53.1735%" y="415.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (2 samples, 0.30%)</title><rect x="53.0735%" y="789" width="0.2999%" height="15" fill="rgb(215,47,9)"/><text x="53.3235%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.30%)</title><rect x="53.0735%" y="773" width="0.2999%" height="15" fill="rgb(252,25,45)"/><text x="53.3235%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.30%)</title><rect x="53.0735%" y="757" width="0.2999%" height="15" fill="rgb(251,164,9)"/><text x="53.3235%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.15%)</title><rect x="53.2234%" y="741" width="0.1499%" height="15" fill="rgb(233,194,0)"/><text x="53.4734%" y="751.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="53.2234%" y="725" width="0.1499%" height="15" fill="rgb(249,111,24)"/><text x="53.4734%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="53.3733%" y="773" width="0.1499%" height="15" fill="rgb(250,223,3)"/><text x="53.6233%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.15%)</title><rect x="53.5232%" y="773" width="0.1499%" height="15" fill="rgb(236,178,37)"/><text x="53.7732%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.15%)</title><rect x="53.5232%" y="757" width="0.1499%" height="15" fill="rgb(241,158,50)"/><text x="53.7732%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.15%)</title><rect x="53.5232%" y="741" width="0.1499%" height="15" fill="rgb(213,121,41)"/><text x="53.7732%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="53.5232%" y="725" width="0.1499%" height="15" fill="rgb(240,92,3)"/><text x="53.7732%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="53.6732%" y="773" width="0.1499%" height="15" fill="rgb(205,123,3)"/><text x="53.9232%" y="783.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.15%)</title><rect x="53.6732%" y="757" width="0.1499%" height="15" fill="rgb(205,97,47)"/><text x="53.9232%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.15%)</title><rect x="53.6732%" y="741" width="0.1499%" height="15" fill="rgb(247,152,14)"/><text x="53.9232%" y="751.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="53.8231%" y="757" width="0.1499%" height="15" fill="rgb(248,195,53)"/><text x="54.0731%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.15%)</title><rect x="53.9730%" y="693" width="0.1499%" height="15" fill="rgb(226,201,16)"/><text x="54.2230%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.15%)</title><rect x="53.9730%" y="677" width="0.1499%" height="15" fill="rgb(205,98,0)"/><text x="54.2230%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (6 samples, 0.90%)</title><rect x="53.3733%" y="789" width="0.8996%" height="15" fill="rgb(214,191,48)"/><text x="53.6233%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (3 samples, 0.45%)</title><rect x="53.8231%" y="773" width="0.4498%" height="15" fill="rgb(237,112,39)"/><text x="54.0731%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.30%)</title><rect x="53.9730%" y="757" width="0.2999%" height="15" fill="rgb(247,203,27)"/><text x="54.2230%" y="767.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.30%)</title><rect x="53.9730%" y="741" width="0.2999%" height="15" fill="rgb(235,124,28)"/><text x="54.2230%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.30%)</title><rect x="53.9730%" y="725" width="0.2999%" height="15" fill="rgb(208,207,46)"/><text x="54.2230%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.30%)</title><rect x="53.9730%" y="709" width="0.2999%" height="15" fill="rgb(234,176,4)"/><text x="54.2230%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (1 samples, 0.15%)</title><rect x="54.1229%" y="693" width="0.1499%" height="15" fill="rgb(230,133,28)"/><text x="54.3729%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.15%)</title><rect x="54.1229%" y="677" width="0.1499%" height="15" fill="rgb(211,137,40)"/><text x="54.3729%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="54.1229%" y="661" width="0.1499%" height="15" fill="rgb(254,35,13)"/><text x="54.3729%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="54.1229%" y="645" width="0.1499%" height="15" fill="rgb(225,49,51)"/><text x="54.3729%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="54.1229%" y="629" width="0.1499%" height="15" fill="rgb(251,10,15)"/><text x="54.3729%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.15%)</title><rect x="54.1229%" y="613" width="0.1499%" height="15" fill="rgb(228,207,15)"/><text x="54.3729%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.15%)</title><rect x="54.1229%" y="597" width="0.1499%" height="15" fill="rgb(241,99,19)"/><text x="54.3729%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.15%)</title><rect x="54.1229%" y="581" width="0.1499%" height="15" fill="rgb(207,104,49)"/><text x="54.3729%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.15%)</title><rect x="54.1229%" y="565" width="0.1499%" height="15" fill="rgb(234,99,18)"/><text x="54.3729%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.15%)</title><rect x="54.1229%" y="549" width="0.1499%" height="15" fill="rgb(213,191,49)"/><text x="54.3729%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="54.1229%" y="533" width="0.1499%" height="15" fill="rgb(210,226,19)"/><text x="54.3729%" y="543.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (9 samples, 1.35%)</title><rect x="53.0735%" y="821" width="1.3493%" height="15" fill="rgb(229,97,18)"/><text x="53.3235%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (9 samples, 1.35%)</title><rect x="53.0735%" y="805" width="1.3493%" height="15" fill="rgb(211,167,15)"/><text x="53.3235%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (1 samples, 0.15%)</title><rect x="54.2729%" y="789" width="0.1499%" height="15" fill="rgb(210,169,34)"/><text x="54.5229%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.15%)</title><rect x="54.2729%" y="773" width="0.1499%" height="15" fill="rgb(241,121,31)"/><text x="54.5229%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="54.2729%" y="757" width="0.1499%" height="15" fill="rgb(232,40,11)"/><text x="54.5229%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.15%)</title><rect x="54.4228%" y="821" width="0.1499%" height="15" fill="rgb(205,86,26)"/><text x="54.6728%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="54.4228%" y="805" width="0.1499%" height="15" fill="rgb(231,126,28)"/><text x="54.6728%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (5 samples, 0.75%)</title><rect x="54.5727%" y="773" width="0.7496%" height="15" fill="rgb(219,221,18)"/><text x="54.8227%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (5 samples, 0.75%)</title><rect x="54.5727%" y="757" width="0.7496%" height="15" fill="rgb(211,40,0)"/><text x="54.8227%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="55.1724%" y="741" width="0.1499%" height="15" fill="rgb(239,85,43)"/><text x="55.4224%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="55.3223%" y="757" width="0.1499%" height="15" fill="rgb(231,55,21)"/><text x="55.5723%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.15%)</title><rect x="55.3223%" y="741" width="0.1499%" height="15" fill="rgb(225,184,43)"/><text x="55.5723%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.15%)</title><rect x="55.3223%" y="725" width="0.1499%" height="15" fill="rgb(251,158,41)"/><text x="55.5723%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.15%)</title><rect x="55.3223%" y="709" width="0.1499%" height="15" fill="rgb(234,159,37)"/><text x="55.5723%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="55.3223%" y="693" width="0.1499%" height="15" fill="rgb(216,204,22)"/><text x="55.5723%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.15%)</title><rect x="55.3223%" y="677" width="0.1499%" height="15" fill="rgb(214,17,3)"/><text x="55.5723%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.15%)</title><rect x="55.3223%" y="661" width="0.1499%" height="15" fill="rgb(212,111,17)"/><text x="55.5723%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.15%)</title><rect x="55.3223%" y="645" width="0.1499%" height="15" fill="rgb(221,157,24)"/><text x="55.5723%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.15%)</title><rect x="55.3223%" y="629" width="0.1499%" height="15" fill="rgb(252,16,13)"/><text x="55.5723%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.15%)</title><rect x="55.3223%" y="613" width="0.1499%" height="15" fill="rgb(221,62,2)"/><text x="55.5723%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.15%)</title><rect x="55.3223%" y="597" width="0.1499%" height="15" fill="rgb(247,87,22)"/><text x="55.5723%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="55.3223%" y="581" width="0.1499%" height="15" fill="rgb(215,73,9)"/><text x="55.5723%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="55.4723%" y="757" width="0.1499%" height="15" fill="rgb(207,175,33)"/><text x="55.7223%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 1.20%)</title><rect x="54.5727%" y="789" width="1.1994%" height="15" fill="rgb(243,129,54)"/><text x="54.8227%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.45%)</title><rect x="55.3223%" y="773" width="0.4498%" height="15" fill="rgb(227,119,45)"/><text x="55.5723%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="55.6222%" y="757" width="0.1499%" height="15" fill="rgb(205,109,36)"/><text x="55.8722%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.15%)</title><rect x="55.6222%" y="741" width="0.1499%" height="15" fill="rgb(205,6,39)"/><text x="55.8722%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.15%)</title><rect x="55.7721%" y="773" width="0.1499%" height="15" fill="rgb(221,32,16)"/><text x="56.0221%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="55.7721%" y="757" width="0.1499%" height="15" fill="rgb(228,144,50)"/><text x="56.0221%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (10 samples, 1.50%)</title><rect x="54.5727%" y="821" width="1.4993%" height="15" fill="rgb(229,201,53)"/><text x="54.8227%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (10 samples, 1.50%)</title><rect x="54.5727%" y="805" width="1.4993%" height="15" fill="rgb(249,153,27)"/><text x="54.8227%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (2 samples, 0.30%)</title><rect x="55.7721%" y="789" width="0.2999%" height="15" fill="rgb(227,106,25)"/><text x="56.0221%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.15%)</title><rect x="55.9220%" y="773" width="0.1499%" height="15" fill="rgb(230,65,29)"/><text x="56.1720%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.15%)</title><rect x="55.9220%" y="757" width="0.1499%" height="15" fill="rgb(221,57,46)"/><text x="56.1720%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.15%)</title><rect x="55.9220%" y="741" width="0.1499%" height="15" fill="rgb(229,161,17)"/><text x="56.1720%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.15%)</title><rect x="55.9220%" y="725" width="0.1499%" height="15" fill="rgb(222,213,11)"/><text x="56.1720%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.15%)</title><rect x="55.9220%" y="709" width="0.1499%" height="15" fill="rgb(235,35,13)"/><text x="56.1720%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.15%)</title><rect x="55.9220%" y="693" width="0.1499%" height="15" fill="rgb(233,158,34)"/><text x="56.1720%" y="703.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.15%)</title><rect x="55.9220%" y="677" width="0.1499%" height="15" fill="rgb(215,151,48)"/><text x="56.1720%" y="687.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.15%)</title><rect x="56.0720%" y="821" width="0.1499%" height="15" fill="rgb(229,84,14)"/><text x="56.3220%" y="831.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="56.2219%" y="581" width="0.1499%" height="15" fill="rgb(229,68,14)"/><text x="56.4719%" y="591.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.15%)</title><rect x="56.2219%" y="565" width="0.1499%" height="15" fill="rgb(243,106,26)"/><text x="56.4719%" y="575.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.15%)</title><rect x="56.2219%" y="549" width="0.1499%" height="15" fill="rgb(206,45,38)"/><text x="56.4719%" y="559.50"></text></g><g><title>do_filp_open (1 samples, 0.15%)</title><rect x="56.2219%" y="533" width="0.1499%" height="15" fill="rgb(226,6,15)"/><text x="56.4719%" y="543.50"></text></g><g><title>path_openat (1 samples, 0.15%)</title><rect x="56.2219%" y="517" width="0.1499%" height="15" fill="rgb(232,22,54)"/><text x="56.4719%" y="527.50"></text></g><g><title>link_path_walk (1 samples, 0.15%)</title><rect x="56.2219%" y="501" width="0.1499%" height="15" fill="rgb(229,222,32)"/><text x="56.4719%" y="511.50"></text></g><g><title>walk_component (1 samples, 0.15%)</title><rect x="56.2219%" y="485" width="0.1499%" height="15" fill="rgb(228,62,29)"/><text x="56.4719%" y="495.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.15%)</title><rect x="56.2219%" y="469" width="0.1499%" height="15" fill="rgb(251,103,34)"/><text x="56.4719%" y="479.50"></text></g><g><title>__d_lookup (1 samples, 0.15%)</title><rect x="56.2219%" y="453" width="0.1499%" height="15" fill="rgb(233,12,30)"/><text x="56.4719%" y="463.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="56.2219%" y="437" width="0.1499%" height="15" fill="rgb(238,52,0)"/><text x="56.4719%" y="447.50"></text></g><g><title>__GI___openat (2 samples, 0.30%)</title><rect x="56.2219%" y="613" width="0.2999%" height="15" fill="rgb(223,98,5)"/><text x="56.4719%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="56.2219%" y="597" width="0.2999%" height="15" fill="rgb(228,75,37)"/><text x="56.4719%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="56.3718%" y="581" width="0.1499%" height="15" fill="rgb(205,115,49)"/><text x="56.6218%" y="591.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.45%)</title><rect x="56.2219%" y="693" width="0.4498%" height="15" fill="rgb(250,154,43)"/><text x="56.4719%" y="703.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.45%)</title><rect x="56.2219%" y="677" width="0.4498%" height="15" fill="rgb(226,43,29)"/><text x="56.4719%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.45%)</title><rect x="56.2219%" y="661" width="0.4498%" height="15" fill="rgb(249,228,39)"/><text x="56.4719%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.45%)</title><rect x="56.2219%" y="645" width="0.4498%" height="15" fill="rgb(216,79,43)"/><text x="56.4719%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.45%)</title><rect x="56.2219%" y="629" width="0.4498%" height="15" fill="rgb(228,95,12)"/><text x="56.4719%" y="639.50"></text></g><g><title>__libc_close (1 samples, 0.15%)</title><rect x="56.5217%" y="613" width="0.1499%" height="15" fill="rgb(249,221,15)"/><text x="56.7717%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="56.5217%" y="597" width="0.1499%" height="15" fill="rgb(233,34,13)"/><text x="56.7717%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="56.5217%" y="581" width="0.1499%" height="15" fill="rgb(214,103,39)"/><text x="56.7717%" y="591.50"></text></g><g><title>__x64_sys_close (1 samples, 0.15%)</title><rect x="56.5217%" y="565" width="0.1499%" height="15" fill="rgb(251,126,39)"/><text x="56.7717%" y="575.50"></text></g><g><title>__close_fd (1 samples, 0.15%)</title><rect x="56.5217%" y="549" width="0.1499%" height="15" fill="rgb(214,216,36)"/><text x="56.7717%" y="559.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="56.5217%" y="533" width="0.1499%" height="15" fill="rgb(220,221,8)"/><text x="56.7717%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="56.5217%" y="517" width="0.1499%" height="15" fill="rgb(240,216,3)"/><text x="56.7717%" y="527.50"></text></g><g><title>[unknown] (341 samples, 51.12%)</title><rect x="5.6972%" y="837" width="51.1244%" height="15" fill="rgb(232,218,17)"/><text x="5.9472%" y="847.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (4 samples, 0.60%)</title><rect x="56.2219%" y="821" width="0.5997%" height="15" fill="rgb(229,163,45)"/><text x="56.4719%" y="831.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.60%)</title><rect x="56.2219%" y="805" width="0.5997%" height="15" fill="rgb(231,110,42)"/><text x="56.4719%" y="815.50"></text></g><g><title>std::panicking::try (4 samples, 0.60%)</title><rect x="56.2219%" y="789" width="0.5997%" height="15" fill="rgb(208,170,48)"/><text x="56.4719%" y="799.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.60%)</title><rect x="56.2219%" y="773" width="0.5997%" height="15" fill="rgb(239,116,25)"/><text x="56.4719%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.60%)</title><rect x="56.2219%" y="757" width="0.5997%" height="15" fill="rgb(219,200,50)"/><text x="56.4719%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.60%)</title><rect x="56.2219%" y="741" width="0.5997%" height="15" fill="rgb(245,200,0)"/><text x="56.4719%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.60%)</title><rect x="56.2219%" y="725" width="0.5997%" height="15" fill="rgb(245,119,33)"/><text x="56.4719%" y="735.50"></text></g><g><title>lobsters_microbenchmarks::main (4 samples, 0.60%)</title><rect x="56.2219%" y="709" width="0.5997%" height="15" fill="rgb(231,125,12)"/><text x="56.4719%" y="719.50"></text></g><g><title>lobsters_microbenchmarks::init_database (1 samples, 0.15%)</title><rect x="56.6717%" y="693" width="0.1499%" height="15" fill="rgb(216,96,41)"/><text x="56.9217%" y="703.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.15%)</title><rect x="56.6717%" y="677" width="0.1499%" height="15" fill="rgb(248,43,45)"/><text x="56.9217%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.15%)</title><rect x="56.6717%" y="661" width="0.1499%" height="15" fill="rgb(217,222,7)"/><text x="56.9217%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="56.6717%" y="645" width="0.1499%" height="15" fill="rgb(233,28,6)"/><text x="56.9217%" y="655.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="56.6717%" y="629" width="0.1499%" height="15" fill="rgb(231,218,15)"/><text x="56.9217%" y="639.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="56.6717%" y="613" width="0.1499%" height="15" fill="rgb(226,171,48)"/><text x="56.9217%" y="623.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="56.6717%" y="597" width="0.1499%" height="15" fill="rgb(235,201,9)"/><text x="56.9217%" y="607.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="56.6717%" y="581" width="0.1499%" height="15" fill="rgb(217,80,15)"/><text x="56.9217%" y="591.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.15%)</title><rect x="56.6717%" y="565" width="0.1499%" height="15" fill="rgb(219,152,8)"/><text x="56.9217%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="56.6717%" y="549" width="0.1499%" height="15" fill="rgb(243,107,38)"/><text x="56.9217%" y="559.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="56.6717%" y="533" width="0.1499%" height="15" fill="rgb(231,17,5)"/><text x="56.9217%" y="543.50"></text></g><g><title>prep_new_page (1 samples, 0.15%)</title><rect x="56.6717%" y="517" width="0.1499%" height="15" fill="rgb(209,25,54)"/><text x="56.9217%" y="527.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.15%)</title><rect x="56.6717%" y="501" width="0.1499%" height="15" fill="rgb(219,0,2)"/><text x="56.9217%" y="511.50"></text></g><g><title>clear_page_erms (1 samples, 0.15%)</title><rect x="56.6717%" y="485" width="0.1499%" height="15" fill="rgb(246,9,5)"/><text x="56.9217%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="56.8216%" y="677" width="0.1499%" height="15" fill="rgb(226,159,4)"/><text x="57.0716%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (1 samples, 0.15%)</title><rect x="56.9715%" y="677" width="0.1499%" height="15" fill="rgb(219,175,34)"/><text x="57.2215%" y="687.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (1 samples, 0.15%)</title><rect x="56.9715%" y="661" width="0.1499%" height="15" fill="rgb(236,10,46)"/><text x="57.2215%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.15%)</title><rect x="56.9715%" y="645" width="0.1499%" height="15" fill="rgb(240,211,16)"/><text x="57.2215%" y="655.50"></text></g><g><title>decor_mem::stats::get_qtype (1 samples, 0.15%)</title><rect x="57.1214%" y="677" width="0.1499%" height="15" fill="rgb(205,3,43)"/><text x="57.3714%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="57.1214%" y="661" width="0.1499%" height="15" fill="rgb(245,7,22)"/><text x="57.3714%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="57.1214%" y="645" width="0.1499%" height="15" fill="rgb(239,132,32)"/><text x="57.3714%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.60%)</title><rect x="56.8216%" y="693" width="0.5997%" height="15" fill="rgb(228,202,34)"/><text x="57.0716%" y="703.50"></text></g><g><title>log::__private_api_log (1 samples, 0.15%)</title><rect x="57.2714%" y="677" width="0.1499%" height="15" fill="rgb(254,200,22)"/><text x="57.5214%" y="687.50"></text></g><g><title>&lt;env_logger::Logger as log::Log&gt;::log (1 samples, 0.15%)</title><rect x="57.2714%" y="661" width="0.1499%" height="15" fill="rgb(219,10,39)"/><text x="57.5214%" y="671.50"></text></g><g><title>&lt;env_logger::Logger as log::Log&gt;::log::{{closure}} (1 samples, 0.15%)</title><rect x="57.2714%" y="645" width="0.1499%" height="15" fill="rgb(226,210,39)"/><text x="57.5214%" y="655.50"></text></g><g><title>env_logger::fmt::writer::termcolor::imp::BufferWriter::print (1 samples, 0.15%)</title><rect x="57.2714%" y="629" width="0.1499%" height="15" fill="rgb(208,219,16)"/><text x="57.5214%" y="639.50"></text></g><g><title>std::io::stdio::_eprint (1 samples, 0.15%)</title><rect x="57.2714%" y="613" width="0.1499%" height="15" fill="rgb(216,158,51)"/><text x="57.5214%" y="623.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.15%)</title><rect x="57.2714%" y="597" width="0.1499%" height="15" fill="rgb(233,14,44)"/><text x="57.5214%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.15%)</title><rect x="57.2714%" y="581" width="0.1499%" height="15" fill="rgb(237,97,39)"/><text x="57.5214%" y="591.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.15%)</title><rect x="57.2714%" y="565" width="0.1499%" height="15" fill="rgb(218,198,43)"/><text x="57.5214%" y="575.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.15%)</title><rect x="57.2714%" y="549" width="0.1499%" height="15" fill="rgb(231,104,20)"/><text x="57.5214%" y="559.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.15%)</title><rect x="57.2714%" y="533" width="0.1499%" height="15" fill="rgb(254,36,13)"/><text x="57.5214%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.15%)</title><rect x="57.2714%" y="517" width="0.1499%" height="15" fill="rgb(248,14,50)"/><text x="57.5214%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.15%)</title><rect x="57.2714%" y="501" width="0.1499%" height="15" fill="rgb(217,107,29)"/><text x="57.5214%" y="511.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.15%)</title><rect x="57.2714%" y="485" width="0.1499%" height="15" fill="rgb(251,169,33)"/><text x="57.5214%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.15%)</title><rect x="57.2714%" y="469" width="0.1499%" height="15" fill="rgb(217,108,32)"/><text x="57.5214%" y="479.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.15%)</title><rect x="57.2714%" y="453" width="0.1499%" height="15" fill="rgb(219,66,42)"/><text x="57.5214%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.15%)</title><rect x="57.2714%" y="437" width="0.1499%" height="15" fill="rgb(206,180,7)"/><text x="57.5214%" y="447.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (1 samples, 0.15%)</title><rect x="57.2714%" y="421" width="0.1499%" height="15" fill="rgb(208,226,31)"/><text x="57.5214%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.15%)</title><rect x="57.2714%" y="405" width="0.1499%" height="15" fill="rgb(218,26,49)"/><text x="57.5214%" y="415.50"></text></g><g><title>__libc_write (1 samples, 0.15%)</title><rect x="57.2714%" y="389" width="0.1499%" height="15" fill="rgb(233,197,48)"/><text x="57.5214%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="57.2714%" y="373" width="0.1499%" height="15" fill="rgb(252,181,51)"/><text x="57.5214%" y="383.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="57.2714%" y="357" width="0.1499%" height="15" fill="rgb(253,90,19)"/><text x="57.5214%" y="367.50"></text></g><g><title>ksys_write (1 samples, 0.15%)</title><rect x="57.2714%" y="341" width="0.1499%" height="15" fill="rgb(215,171,30)"/><text x="57.5214%" y="351.50"></text></g><g><title>vfs_write (1 samples, 0.15%)</title><rect x="57.2714%" y="325" width="0.1499%" height="15" fill="rgb(214,222,9)"/><text x="57.5214%" y="335.50"></text></g><g><title>tty_write (1 samples, 0.15%)</title><rect x="57.2714%" y="309" width="0.1499%" height="15" fill="rgb(223,3,22)"/><text x="57.5214%" y="319.50"></text></g><g><title>n_tty_write (1 samples, 0.15%)</title><rect x="57.2714%" y="293" width="0.1499%" height="15" fill="rgb(225,196,46)"/><text x="57.5214%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="57.4213%" y="661" width="0.1499%" height="15" fill="rgb(209,110,37)"/><text x="57.6713%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="57.4213%" y="645" width="0.1499%" height="15" fill="rgb(249,89,12)"/><text x="57.6713%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="57.4213%" y="629" width="0.1499%" height="15" fill="rgb(226,27,33)"/><text x="57.6713%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.15%)</title><rect x="57.4213%" y="613" width="0.1499%" height="15" fill="rgb(213,82,22)"/><text x="57.6713%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="57.5712%" y="661" width="0.1499%" height="15" fill="rgb(248,140,0)"/><text x="57.8212%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="57.5712%" y="645" width="0.1499%" height="15" fill="rgb(228,106,3)"/><text x="57.8212%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="57.5712%" y="629" width="0.1499%" height="15" fill="rgb(209,23,37)"/><text x="57.8212%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="57.5712%" y="613" width="0.1499%" height="15" fill="rgb(241,93,50)"/><text x="57.8212%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="57.5712%" y="597" width="0.1499%" height="15" fill="rgb(253,46,43)"/><text x="57.8212%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.15%)</title><rect x="57.5712%" y="581" width="0.1499%" height="15" fill="rgb(226,206,43)"/><text x="57.8212%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.15%)</title><rect x="57.5712%" y="565" width="0.1499%" height="15" fill="rgb(217,54,7)"/><text x="57.8212%" y="575.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="57.8711%" y="565" width="0.1499%" height="15" fill="rgb(223,5,52)"/><text x="58.1211%" y="575.50"></text></g><g><title>ksys_write (1 samples, 0.15%)</title><rect x="57.8711%" y="549" width="0.1499%" height="15" fill="rgb(206,52,46)"/><text x="58.1211%" y="559.50"></text></g><g><title>vfs_write (1 samples, 0.15%)</title><rect x="57.8711%" y="533" width="0.1499%" height="15" fill="rgb(253,136,11)"/><text x="58.1211%" y="543.50"></text></g><g><title>new_sync_write (1 samples, 0.15%)</title><rect x="57.8711%" y="517" width="0.1499%" height="15" fill="rgb(208,106,33)"/><text x="58.1211%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.15%)</title><rect x="57.8711%" y="501" width="0.1499%" height="15" fill="rgb(206,54,4)"/><text x="58.1211%" y="511.50"></text></g><g><title>generic_perform_write (1 samples, 0.15%)</title><rect x="57.8711%" y="485" width="0.1499%" height="15" fill="rgb(213,3,15)"/><text x="58.1211%" y="495.50"></text></g><g><title>[[ext4]] (1 samples, 0.15%)</title><rect x="57.8711%" y="469" width="0.1499%" height="15" fill="rgb(252,211,39)"/><text x="58.1211%" y="479.50"></text></g><g><title>grab_cache_page_write_begin (1 samples, 0.15%)</title><rect x="57.8711%" y="453" width="0.1499%" height="15" fill="rgb(223,6,36)"/><text x="58.1211%" y="463.50"></text></g><g><title>pagecache_get_page (1 samples, 0.15%)</title><rect x="57.8711%" y="437" width="0.1499%" height="15" fill="rgb(252,169,45)"/><text x="58.1211%" y="447.50"></text></g><g><title>find_get_entry (1 samples, 0.15%)</title><rect x="57.8711%" y="421" width="0.1499%" height="15" fill="rgb(212,48,26)"/><text x="58.1211%" y="431.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.75%)</title><rect x="57.4213%" y="693" width="0.7496%" height="15" fill="rgb(251,102,48)"/><text x="57.6713%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.75%)</title><rect x="57.4213%" y="677" width="0.7496%" height="15" fill="rgb(243,208,16)"/><text x="57.6713%" y="687.50"></text></g><g><title>decor_mem::stats::print_stats (3 samples, 0.45%)</title><rect x="57.7211%" y="661" width="0.4498%" height="15" fill="rgb(219,96,24)"/><text x="57.9711%" y="671.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.30%)</title><rect x="57.8711%" y="645" width="0.2999%" height="15" fill="rgb(219,33,29)"/><text x="58.1211%" y="655.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.30%)</title><rect x="57.8711%" y="629" width="0.2999%" height="15" fill="rgb(223,176,5)"/><text x="58.1211%" y="639.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.30%)</title><rect x="57.8711%" y="613" width="0.2999%" height="15" fill="rgb(228,140,14)"/><text x="58.1211%" y="623.50"></text></g><g><title>__libc_write (2 samples, 0.30%)</title><rect x="57.8711%" y="597" width="0.2999%" height="15" fill="rgb(217,179,31)"/><text x="58.1211%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="57.8711%" y="581" width="0.2999%" height="15" fill="rgb(230,9,30)"/><text x="58.1211%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="58.0210%" y="565" width="0.1499%" height="15" fill="rgb(230,136,20)"/><text x="58.2710%" y="575.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="58.1709%" y="229" width="0.1499%" height="15" fill="rgb(215,210,22)"/><text x="58.4209%" y="239.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.45%)</title><rect x="58.1709%" y="485" width="0.4498%" height="15" fill="rgb(218,43,5)"/><text x="58.4209%" y="495.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.45%)</title><rect x="58.1709%" y="469" width="0.4498%" height="15" fill="rgb(216,11,5)"/><text x="58.4209%" y="479.50"></text></g><g><title>ip_output (3 samples, 0.45%)</title><rect x="58.1709%" y="453" width="0.4498%" height="15" fill="rgb(209,82,29)"/><text x="58.4209%" y="463.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.45%)</title><rect x="58.1709%" y="437" width="0.4498%" height="15" fill="rgb(244,115,12)"/><text x="58.4209%" y="447.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.45%)</title><rect x="58.1709%" y="421" width="0.4498%" height="15" fill="rgb(222,82,18)"/><text x="58.4209%" y="431.50"></text></g><g><title>do_softirq (3 samples, 0.45%)</title><rect x="58.1709%" y="405" width="0.4498%" height="15" fill="rgb(249,227,8)"/><text x="58.4209%" y="415.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.45%)</title><rect x="58.1709%" y="389" width="0.4498%" height="15" fill="rgb(253,141,45)"/><text x="58.4209%" y="399.50"></text></g><g><title>__do_softirq (3 samples, 0.45%)</title><rect x="58.1709%" y="373" width="0.4498%" height="15" fill="rgb(234,184,4)"/><text x="58.4209%" y="383.50"></text></g><g><title>net_rx_action (3 samples, 0.45%)</title><rect x="58.1709%" y="357" width="0.4498%" height="15" fill="rgb(218,194,23)"/><text x="58.4209%" y="367.50"></text></g><g><title>process_backlog (3 samples, 0.45%)</title><rect x="58.1709%" y="341" width="0.4498%" height="15" fill="rgb(235,66,41)"/><text x="58.4209%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.45%)</title><rect x="58.1709%" y="325" width="0.4498%" height="15" fill="rgb(245,217,1)"/><text x="58.4209%" y="335.50"></text></g><g><title>ip_rcv (3 samples, 0.45%)</title><rect x="58.1709%" y="309" width="0.4498%" height="15" fill="rgb(229,91,1)"/><text x="58.4209%" y="319.50"></text></g><g><title>ip_local_deliver (3 samples, 0.45%)</title><rect x="58.1709%" y="293" width="0.4498%" height="15" fill="rgb(207,101,30)"/><text x="58.4209%" y="303.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.45%)</title><rect x="58.1709%" y="277" width="0.4498%" height="15" fill="rgb(223,82,49)"/><text x="58.4209%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.45%)</title><rect x="58.1709%" y="261" width="0.4498%" height="15" fill="rgb(218,167,17)"/><text x="58.4209%" y="271.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.45%)</title><rect x="58.1709%" y="245" width="0.4498%" height="15" fill="rgb(208,103,14)"/><text x="58.4209%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.30%)</title><rect x="58.3208%" y="229" width="0.2999%" height="15" fill="rgb(238,20,8)"/><text x="58.5708%" y="239.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.30%)</title><rect x="58.3208%" y="213" width="0.2999%" height="15" fill="rgb(218,80,54)"/><text x="58.5708%" y="223.50"></text></g><g><title>tcp_ack (1 samples, 0.15%)</title><rect x="58.4708%" y="197" width="0.1499%" height="15" fill="rgb(240,144,17)"/><text x="58.7208%" y="207.50"></text></g><g><title>__kfree_skb (1 samples, 0.15%)</title><rect x="58.4708%" y="181" width="0.1499%" height="15" fill="rgb(245,27,50)"/><text x="58.7208%" y="191.50"></text></g><g><title>skb_release_data (1 samples, 0.15%)</title><rect x="58.4708%" y="165" width="0.1499%" height="15" fill="rgb(251,51,7)"/><text x="58.7208%" y="175.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.15%)</title><rect x="58.6207%" y="405" width="0.1499%" height="15" fill="rgb(245,217,29)"/><text x="58.8707%" y="415.50"></text></g><g><title>dequeue_entity (1 samples, 0.15%)</title><rect x="58.6207%" y="389" width="0.1499%" height="15" fill="rgb(221,176,29)"/><text x="58.8707%" y="399.50"></text></g><g><title>finish_task_switch (1 samples, 0.15%)</title><rect x="58.7706%" y="405" width="0.1499%" height="15" fill="rgb(212,180,24)"/><text x="59.0206%" y="415.50"></text></g><g><title>sk_wait_data (3 samples, 0.45%)</title><rect x="58.6207%" y="485" width="0.4498%" height="15" fill="rgb(254,24,2)"/><text x="58.8707%" y="495.50"></text></g><g><title>wait_woken (3 samples, 0.45%)</title><rect x="58.6207%" y="469" width="0.4498%" height="15" fill="rgb(230,100,2)"/><text x="58.8707%" y="479.50"></text></g><g><title>schedule_timeout (3 samples, 0.45%)</title><rect x="58.6207%" y="453" width="0.4498%" height="15" fill="rgb(219,142,25)"/><text x="58.8707%" y="463.50"></text></g><g><title>schedule (3 samples, 0.45%)</title><rect x="58.6207%" y="437" width="0.4498%" height="15" fill="rgb(240,73,43)"/><text x="58.8707%" y="447.50"></text></g><g><title>__schedule (3 samples, 0.45%)</title><rect x="58.6207%" y="421" width="0.4498%" height="15" fill="rgb(214,114,15)"/><text x="58.8707%" y="431.50"></text></g><g><title>psi_task_change (1 samples, 0.15%)</title><rect x="58.9205%" y="405" width="0.1499%" height="15" fill="rgb(207,130,4)"/><text x="59.1705%" y="415.50"></text></g><g><title>psi_group_change (1 samples, 0.15%)</title><rect x="58.9205%" y="389" width="0.1499%" height="15" fill="rgb(221,25,40)"/><text x="59.1705%" y="399.50"></text></g><g><title>record_times (1 samples, 0.15%)</title><rect x="58.9205%" y="373" width="0.1499%" height="15" fill="rgb(241,184,7)"/><text x="59.1705%" y="383.50"></text></g><g><title>do_syscall_64 (7 samples, 1.05%)</title><rect x="58.1709%" y="565" width="1.0495%" height="15" fill="rgb(235,159,4)"/><text x="58.4209%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 1.05%)</title><rect x="58.1709%" y="549" width="1.0495%" height="15" fill="rgb(214,87,48)"/><text x="58.4209%" y="559.50"></text></g><g><title>__sys_recvfrom (7 samples, 1.05%)</title><rect x="58.1709%" y="533" width="1.0495%" height="15" fill="rgb(246,198,24)"/><text x="58.4209%" y="543.50"></text></g><g><title>inet_recvmsg (7 samples, 1.05%)</title><rect x="58.1709%" y="517" width="1.0495%" height="15" fill="rgb(209,66,40)"/><text x="58.4209%" y="527.50"></text></g><g><title>tcp_recvmsg (7 samples, 1.05%)</title><rect x="58.1709%" y="501" width="1.0495%" height="15" fill="rgb(233,147,39)"/><text x="58.4209%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.15%)</title><rect x="59.0705%" y="485" width="0.1499%" height="15" fill="rgb(231,145,52)"/><text x="59.3205%" y="495.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.15%)</title><rect x="59.0705%" y="469" width="0.1499%" height="15" fill="rgb(206,20,26)"/><text x="59.3205%" y="479.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 1.20%)</title><rect x="58.1709%" y="677" width="1.1994%" height="15" fill="rgb(238,220,4)"/><text x="58.4209%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 1.20%)</title><rect x="58.1709%" y="661" width="1.1994%" height="15" fill="rgb(252,195,42)"/><text x="58.4209%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 1.20%)</title><rect x="58.1709%" y="645" width="1.1994%" height="15" fill="rgb(209,10,6)"/><text x="58.4209%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 1.20%)</title><rect x="58.1709%" y="629" width="1.1994%" height="15" fill="rgb(229,3,52)"/><text x="58.4209%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 1.20%)</title><rect x="58.1709%" y="613" width="1.1994%" height="15" fill="rgb(253,49,37)"/><text x="58.4209%" y="623.50"></text></g><g><title>__libc_recv (8 samples, 1.20%)</title><rect x="58.1709%" y="597" width="1.1994%" height="15" fill="rgb(240,103,49)"/><text x="58.4209%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 1.20%)</title><rect x="58.1709%" y="581" width="1.1994%" height="15" fill="rgb(250,182,30)"/><text x="58.4209%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.15%)</title><rect x="59.2204%" y="565" width="0.1499%" height="15" fill="rgb(248,8,30)"/><text x="59.4704%" y="575.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (9 samples, 1.35%)</title><rect x="58.1709%" y="693" width="1.3493%" height="15" fill="rgb(237,120,30)"/><text x="58.4209%" y="703.50"></text></g><g><title>msql_srv::packet::packet (1 samples, 0.15%)</title><rect x="59.3703%" y="677" width="0.1499%" height="15" fill="rgb(221,146,34)"/><text x="59.6203%" y="687.50"></text></g><g><title>fput_many (1 samples, 0.15%)</title><rect x="59.5202%" y="565" width="0.1499%" height="15" fill="rgb(242,55,13)"/><text x="59.7702%" y="575.50"></text></g><g><title>__ip_local_out (1 samples, 0.15%)</title><rect x="59.8201%" y="453" width="0.1499%" height="15" fill="rgb(242,112,31)"/><text x="60.0701%" y="463.50"></text></g><g><title>__sk_dst_check (1 samples, 0.15%)</title><rect x="59.9700%" y="453" width="0.1499%" height="15" fill="rgb(249,192,27)"/><text x="60.2200%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="59.9700%" y="437" width="0.1499%" height="15" fill="rgb(208,204,44)"/><text x="60.2200%" y="447.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.15%)</title><rect x="60.4198%" y="133" width="0.1499%" height="15" fill="rgb(208,93,54)"/><text x="60.6698%" y="143.50"></text></g><g><title>enqueue_entity (1 samples, 0.15%)</title><rect x="60.4198%" y="117" width="0.1499%" height="15" fill="rgb(242,1,31)"/><text x="60.6698%" y="127.50"></text></g><g><title>sock_def_readable (2 samples, 0.30%)</title><rect x="60.4198%" y="197" width="0.2999%" height="15" fill="rgb(241,83,25)"/><text x="60.6698%" y="207.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.30%)</title><rect x="60.4198%" y="181" width="0.2999%" height="15" fill="rgb(205,169,50)"/><text x="60.6698%" y="191.50"></text></g><g><title>__wake_up_common (2 samples, 0.30%)</title><rect x="60.4198%" y="165" width="0.2999%" height="15" fill="rgb(239,186,37)"/><text x="60.6698%" y="175.50"></text></g><g><title>try_to_wake_up (2 samples, 0.30%)</title><rect x="60.4198%" y="149" width="0.2999%" height="15" fill="rgb(205,221,10)"/><text x="60.6698%" y="159.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="60.5697%" y="133" width="0.1499%" height="15" fill="rgb(218,196,15)"/><text x="60.8197%" y="143.50"></text></g><g><title>__ip_queue_xmit (8 samples, 1.20%)</title><rect x="59.6702%" y="469" width="1.1994%" height="15" fill="rgb(218,196,35)"/><text x="59.9202%" y="479.50"></text></g><g><title>ip_output (5 samples, 0.75%)</title><rect x="60.1199%" y="453" width="0.7496%" height="15" fill="rgb(233,63,24)"/><text x="60.3699%" y="463.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.75%)</title><rect x="60.1199%" y="437" width="0.7496%" height="15" fill="rgb(225,8,4)"/><text x="60.3699%" y="447.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.60%)</title><rect x="60.2699%" y="421" width="0.5997%" height="15" fill="rgb(234,105,35)"/><text x="60.5199%" y="431.50"></text></g><g><title>do_softirq (4 samples, 0.60%)</title><rect x="60.2699%" y="405" width="0.5997%" height="15" fill="rgb(236,21,32)"/><text x="60.5199%" y="415.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.60%)</title><rect x="60.2699%" y="389" width="0.5997%" height="15" fill="rgb(228,109,6)"/><text x="60.5199%" y="399.50"></text></g><g><title>__do_softirq (3 samples, 0.45%)</title><rect x="60.4198%" y="373" width="0.4498%" height="15" fill="rgb(229,215,31)"/><text x="60.6698%" y="383.50"></text></g><g><title>net_rx_action (3 samples, 0.45%)</title><rect x="60.4198%" y="357" width="0.4498%" height="15" fill="rgb(221,52,54)"/><text x="60.6698%" y="367.50"></text></g><g><title>process_backlog (3 samples, 0.45%)</title><rect x="60.4198%" y="341" width="0.4498%" height="15" fill="rgb(252,129,43)"/><text x="60.6698%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.45%)</title><rect x="60.4198%" y="325" width="0.4498%" height="15" fill="rgb(248,183,27)"/><text x="60.6698%" y="335.50"></text></g><g><title>ip_rcv (3 samples, 0.45%)</title><rect x="60.4198%" y="309" width="0.4498%" height="15" fill="rgb(250,0,22)"/><text x="60.6698%" y="319.50"></text></g><g><title>ip_local_deliver (3 samples, 0.45%)</title><rect x="60.4198%" y="293" width="0.4498%" height="15" fill="rgb(213,166,10)"/><text x="60.6698%" y="303.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.45%)</title><rect x="60.4198%" y="277" width="0.4498%" height="15" fill="rgb(207,163,36)"/><text x="60.6698%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.45%)</title><rect x="60.4198%" y="261" width="0.4498%" height="15" fill="rgb(208,122,22)"/><text x="60.6698%" y="271.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.45%)</title><rect x="60.4198%" y="245" width="0.4498%" height="15" fill="rgb(207,104,49)"/><text x="60.6698%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.45%)</title><rect x="60.4198%" y="229" width="0.4498%" height="15" fill="rgb(248,211,50)"/><text x="60.6698%" y="239.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.45%)</title><rect x="60.4198%" y="213" width="0.4498%" height="15" fill="rgb(217,13,45)"/><text x="60.6698%" y="223.50"></text></g><g><title>tcp_ack (1 samples, 0.15%)</title><rect x="60.7196%" y="197" width="0.1499%" height="15" fill="rgb(211,216,49)"/><text x="60.9696%" y="207.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.15%)</title><rect x="60.7196%" y="181" width="0.1499%" height="15" fill="rgb(221,58,53)"/><text x="60.9696%" y="191.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 1.50%)</title><rect x="59.6702%" y="485" width="1.4993%" height="15" fill="rgb(220,112,41)"/><text x="59.9202%" y="495.50"></text></g><g><title>skb_clone (2 samples, 0.30%)</title><rect x="60.8696%" y="469" width="0.2999%" height="15" fill="rgb(236,38,28)"/><text x="61.1196%" y="479.50"></text></g><g><title>__copy_skb_header (1 samples, 0.15%)</title><rect x="61.0195%" y="453" width="0.1499%" height="15" fill="rgb(227,195,22)"/><text x="61.2695%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (11 samples, 1.65%)</title><rect x="59.6702%" y="517" width="1.6492%" height="15" fill="rgb(214,55,33)"/><text x="59.9202%" y="527.50"></text></g><g><title>tcp_write_xmit (11 samples, 1.65%)</title><rect x="59.6702%" y="501" width="1.6492%" height="15" fill="rgb(248,80,13)"/><text x="59.9202%" y="511.50"></text></g><g><title>ktime_get (1 samples, 0.15%)</title><rect x="61.1694%" y="485" width="0.1499%" height="15" fill="rgb(238,52,6)"/><text x="61.4194%" y="495.50"></text></g><g><title>read_tsc (1 samples, 0.15%)</title><rect x="61.1694%" y="469" width="0.1499%" height="15" fill="rgb(224,198,47)"/><text x="61.4194%" y="479.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (31 samples, 4.65%)</title><rect x="56.8216%" y="709" width="4.6477%" height="15" fill="rgb(233,171,20)"/><text x="57.0716%" y="719.50">msql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 1.95%)</title><rect x="59.5202%" y="693" width="1.9490%" height="15" fill="rgb(241,30,25)"/><text x="59.7702%" y="703.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (13 samples, 1.95%)</title><rect x="59.5202%" y="677" width="1.9490%" height="15" fill="rgb(207,171,38)"/><text x="59.7702%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (13 samples, 1.95%)</title><rect x="59.5202%" y="661" width="1.9490%" height="15" fill="rgb(234,70,1)"/><text x="59.7702%" y="671.50">s..</text></g><g><title>__libc_send (13 samples, 1.95%)</title><rect x="59.5202%" y="645" width="1.9490%" height="15" fill="rgb(232,178,18)"/><text x="59.7702%" y="655.50">_..</text></g><g><title>entry_SYSCALL_64 (13 samples, 1.95%)</title><rect x="59.5202%" y="629" width="1.9490%" height="15" fill="rgb(241,78,40)"/><text x="59.7702%" y="639.50">e..</text></g><g><title>do_syscall_64 (13 samples, 1.95%)</title><rect x="59.5202%" y="613" width="1.9490%" height="15" fill="rgb(222,35,25)"/><text x="59.7702%" y="623.50">d..</text></g><g><title>__x64_sys_sendto (13 samples, 1.95%)</title><rect x="59.5202%" y="597" width="1.9490%" height="15" fill="rgb(207,92,16)"/><text x="59.7702%" y="607.50">_..</text></g><g><title>__sys_sendto (13 samples, 1.95%)</title><rect x="59.5202%" y="581" width="1.9490%" height="15" fill="rgb(216,59,51)"/><text x="59.7702%" y="591.50">_..</text></g><g><title>sock_sendmsg (12 samples, 1.80%)</title><rect x="59.6702%" y="565" width="1.7991%" height="15" fill="rgb(213,80,28)"/><text x="59.9202%" y="575.50">s..</text></g><g><title>tcp_sendmsg (12 samples, 1.80%)</title><rect x="59.6702%" y="549" width="1.7991%" height="15" fill="rgb(220,93,7)"/><text x="59.9202%" y="559.50">t..</text></g><g><title>tcp_sendmsg_locked (12 samples, 1.80%)</title><rect x="59.6702%" y="533" width="1.7991%" height="15" fill="rgb(225,24,44)"/><text x="59.9202%" y="543.50">t..</text></g><g><title>sk_page_frag_refill (1 samples, 0.15%)</title><rect x="61.3193%" y="517" width="0.1499%" height="15" fill="rgb(243,74,40)"/><text x="61.5693%" y="527.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.15%)</title><rect x="61.3193%" y="501" width="0.1499%" height="15" fill="rgb(228,39,7)"/><text x="61.5693%" y="511.50"></text></g><g><title>__GI___clone (32 samples, 4.80%)</title><rect x="56.8216%" y="837" width="4.7976%" height="15" fill="rgb(227,79,8)"/><text x="57.0716%" y="847.50">__GI__..</text></g><g><title>start_thread (32 samples, 4.80%)</title><rect x="56.8216%" y="821" width="4.7976%" height="15" fill="rgb(236,58,11)"/><text x="57.0716%" y="831.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (32 samples, 4.80%)</title><rect x="56.8216%" y="805" width="4.7976%" height="15" fill="rgb(249,63,35)"/><text x="57.0716%" y="815.50">std::s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (32 samples, 4.80%)</title><rect x="56.8216%" y="789" width="4.7976%" height="15" fill="rgb(252,114,16)"/><text x="57.0716%" y="799.50">&lt;alloc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (32 samples, 4.80%)</title><rect x="56.8216%" y="773" width="4.7976%" height="15" fill="rgb(254,151,24)"/><text x="57.0716%" y="783.50">&lt;alloc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (32 samples, 4.80%)</title><rect x="56.8216%" y="757" width="4.7976%" height="15" fill="rgb(253,54,39)"/><text x="57.0716%" y="767.50">core::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (32 samples, 4.80%)</title><rect x="56.8216%" y="741" width="4.7976%" height="15" fill="rgb(243,25,45)"/><text x="57.0716%" y="751.50">std::s..</text></g><g><title>decor_mem::Shim::run_on_tcp (32 samples, 4.80%)</title><rect x="56.8216%" y="725" width="4.7976%" height="15" fill="rgb(234,134,9)"/><text x="57.0716%" y="735.50">decor_..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.15%)</title><rect x="61.4693%" y="709" width="0.1499%" height="15" fill="rgb(227,166,31)"/><text x="61.7193%" y="719.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="61.4693%" y="693" width="0.1499%" height="15" fill="rgb(245,143,41)"/><text x="61.7193%" y="703.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="61.4693%" y="677" width="0.1499%" height="15" fill="rgb(238,181,32)"/><text x="61.7193%" y="687.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="61.4693%" y="661" width="0.1499%" height="15" fill="rgb(224,113,18)"/><text x="61.7193%" y="671.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="61.4693%" y="645" width="0.1499%" height="15" fill="rgb(240,229,28)"/><text x="61.7193%" y="655.50"></text></g><g><title>filemap_map_pages (1 samples, 0.15%)</title><rect x="61.4693%" y="629" width="0.1499%" height="15" fill="rgb(250,185,3)"/><text x="61.7193%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="61.9190%" y="581" width="0.1499%" height="15" fill="rgb(212,59,25)"/><text x="62.1690%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="61.9190%" y="565" width="0.1499%" height="15" fill="rgb(221,87,20)"/><text x="62.1690%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="61.9190%" y="549" width="0.1499%" height="15" fill="rgb(213,74,28)"/><text x="62.1690%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.15%)</title><rect x="61.9190%" y="533" width="0.1499%" height="15" fill="rgb(224,132,34)"/><text x="62.1690%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.15%)</title><rect x="61.9190%" y="517" width="0.1499%" height="15" fill="rgb(222,101,24)"/><text x="62.1690%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.15%)</title><rect x="61.9190%" y="501" width="0.1499%" height="15" fill="rgb(254,142,4)"/><text x="62.1690%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.15%)</title><rect x="62.0690%" y="565" width="0.1499%" height="15" fill="rgb(230,229,49)"/><text x="62.3190%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.15%)</title><rect x="62.2189%" y="565" width="0.1499%" height="15" fill="rgb(238,70,47)"/><text x="62.4689%" y="575.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 34.63%)</title><rect x="62.8186%" y="357" width="34.6327%" height="15" fill="rgb(231,160,17)"/><text x="63.0686%" y="367.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (231 samples, 34.63%)</title><rect x="62.8186%" y="341" width="34.6327%" height="15" fill="rgb(218,68,53)"/><text x="63.0686%" y="351.50">native_write_msr</text></g><g><title>cpu_stop_queue_work (234 samples, 35.08%)</title><rect x="62.5187%" y="453" width="35.0825%" height="15" fill="rgb(236,111,10)"/><text x="62.7687%" y="463.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 35.08%)</title><rect x="62.5187%" y="437" width="35.0825%" height="15" fill="rgb(224,34,41)"/><text x="62.7687%" y="447.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 35.08%)</title><rect x="62.5187%" y="421" width="35.0825%" height="15" fill="rgb(241,118,19)"/><text x="62.7687%" y="431.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 35.08%)</title><rect x="62.5187%" y="405" width="35.0825%" height="15" fill="rgb(238,129,25)"/><text x="62.7687%" y="415.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 35.08%)</title><rect x="62.5187%" y="389" width="35.0825%" height="15" fill="rgb(238,22,31)"/><text x="62.7687%" y="399.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (232 samples, 34.78%)</title><rect x="62.8186%" y="373" width="34.7826%" height="15" fill="rgb(222,174,48)"/><text x="63.0686%" y="383.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.15%)</title><rect x="97.4513%" y="357" width="0.1499%" height="15" fill="rgb(206,152,40)"/><text x="97.7013%" y="367.50"></text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 35.23%)</title><rect x="62.5187%" y="517" width="35.2324%" height="15" fill="rgb(218,99,54)"/><text x="62.7687%" y="527.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 35.23%)</title><rect x="62.5187%" y="501" width="35.2324%" height="15" fill="rgb(220,174,26)"/><text x="62.7687%" y="511.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 35.23%)</title><rect x="62.5187%" y="485" width="35.2324%" height="15" fill="rgb(245,116,9)"/><text x="62.7687%" y="495.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 35.23%)</title><rect x="62.5187%" y="469" width="35.2324%" height="15" fill="rgb(209,72,35)"/><text x="62.7687%" y="479.50">stop_one_cpu</text></g><g><title>wait_for_completion (1 samples, 0.15%)</title><rect x="97.6012%" y="453" width="0.1499%" height="15" fill="rgb(226,126,21)"/><text x="97.8512%" y="463.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.15%)</title><rect x="97.6012%" y="437" width="0.1499%" height="15" fill="rgb(227,192,1)"/><text x="97.8512%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.15%)</title><rect x="97.6012%" y="421" width="0.1499%" height="15" fill="rgb(237,180,29)"/><text x="97.8512%" y="431.50"></text></g><g><title>do_syscall_64 (236 samples, 35.38%)</title><rect x="62.5187%" y="533" width="35.3823%" height="15" fill="rgb(230,197,35)"/><text x="62.7687%" y="543.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.15%)</title><rect x="97.7511%" y="517" width="0.1499%" height="15" fill="rgb(246,193,31)"/><text x="98.0011%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (238 samples, 35.68%)</title><rect x="62.5187%" y="549" width="35.6822%" height="15" fill="rgb(241,36,4)"/><text x="62.7687%" y="559.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.30%)</title><rect x="97.9010%" y="533" width="0.2999%" height="15" fill="rgb(241,130,17)"/><text x="98.1510%" y="543.50"></text></g><g><title>switch_fpu_return (1 samples, 0.15%)</title><rect x="98.0510%" y="517" width="0.1499%" height="15" fill="rgb(206,137,32)"/><text x="98.3010%" y="527.50"></text></g><g><title>copy_kernel_to_fpregs (1 samples, 0.15%)</title><rect x="98.0510%" y="501" width="0.1499%" height="15" fill="rgb(237,228,51)"/><text x="98.3010%" y="511.50"></text></g><g><title>__libc_start_main (245 samples, 36.73%)</title><rect x="61.6192%" y="821" width="36.7316%" height="15" fill="rgb(243,6,42)"/><text x="61.8692%" y="831.50">__libc_start_main</text></g><g><title>main (245 samples, 36.73%)</title><rect x="61.6192%" y="805" width="36.7316%" height="15" fill="rgb(251,74,28)"/><text x="61.8692%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (245 samples, 36.73%)</title><rect x="61.6192%" y="789" width="36.7316%" height="15" fill="rgb(218,20,49)"/><text x="61.8692%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (245 samples, 36.73%)</title><rect x="61.6192%" y="773" width="36.7316%" height="15" fill="rgb(238,28,14)"/><text x="61.8692%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (245 samples, 36.73%)</title><rect x="61.6192%" y="757" width="36.7316%" height="15" fill="rgb(229,40,46)"/><text x="61.8692%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (245 samples, 36.73%)</title><rect x="61.6192%" y="741" width="36.7316%" height="15" fill="rgb(244,195,20)"/><text x="61.8692%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (245 samples, 36.73%)</title><rect x="61.6192%" y="725" width="36.7316%" height="15" fill="rgb(253,56,35)"/><text x="61.8692%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnc..</text></g><g><title>std::rt::lang_start::_{{closure}} (245 samples, 36.73%)</title><rect x="61.6192%" y="709" width="36.7316%" height="15" fill="rgb(210,149,44)"/><text x="61.8692%" y="719.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (245 samples, 36.73%)</title><rect x="61.6192%" y="693" width="36.7316%" height="15" fill="rgb(240,135,12)"/><text x="61.8692%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters_microbenchmarks::main (245 samples, 36.73%)</title><rect x="61.6192%" y="677" width="36.7316%" height="15" fill="rgb(251,24,50)"/><text x="61.8692%" y="687.50">lobsters_microbenchmarks::main</text></g><g><title>hwloc::Topology::new (243 samples, 36.43%)</title><rect x="61.9190%" y="661" width="36.4318%" height="15" fill="rgb(243,200,47)"/><text x="62.1690%" y="671.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (243 samples, 36.43%)</title><rect x="61.9190%" y="645" width="36.4318%" height="15" fill="rgb(224,166,26)"/><text x="62.1690%" y="655.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 36.43%)</title><rect x="61.9190%" y="629" width="36.4318%" height="15" fill="rgb(233,0,47)"/><text x="62.1690%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 36.43%)</title><rect x="61.9190%" y="613" width="36.4318%" height="15" fill="rgb(253,80,5)"/><text x="62.1690%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 36.43%)</title><rect x="61.9190%" y="597" width="36.4318%" height="15" fill="rgb(214,133,25)"/><text x="62.1690%" y="607.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (242 samples, 36.28%)</title><rect x="62.0690%" y="581" width="36.2819%" height="15" fill="rgb(209,27,14)"/><text x="62.3190%" y="591.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 35.98%)</title><rect x="62.3688%" y="565" width="35.9820%" height="15" fill="rgb(219,102,51)"/><text x="62.6188%" y="575.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="98.2009%" y="549" width="0.1499%" height="15" fill="rgb(237,18,16)"/><text x="98.4509%" y="559.50"></text></g><g><title>_start (246 samples, 36.88%)</title><rect x="61.6192%" y="837" width="36.8816%" height="15" fill="rgb(241,85,17)"/><text x="61.8692%" y="847.50">_start</text></g><g><title>_dl_start (1 samples, 0.15%)</title><rect x="98.3508%" y="821" width="0.1499%" height="15" fill="rgb(236,90,42)"/><text x="98.6008%" y="831.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="98.3508%" y="805" width="0.1499%" height="15" fill="rgb(249,57,21)"/><text x="98.6008%" y="815.50"></text></g><g><title>dl_main (1 samples, 0.15%)</title><rect x="98.3508%" y="789" width="0.1499%" height="15" fill="rgb(243,12,36)"/><text x="98.6008%" y="799.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.15%)</title><rect x="98.3508%" y="773" width="0.1499%" height="15" fill="rgb(253,128,47)"/><text x="98.6008%" y="783.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.15%)</title><rect x="98.3508%" y="757" width="0.1499%" height="15" fill="rgb(207,33,20)"/><text x="98.6008%" y="767.50"></text></g><g><title>openaux (1 samples, 0.15%)</title><rect x="98.3508%" y="741" width="0.1499%" height="15" fill="rgb(233,215,35)"/><text x="98.6008%" y="751.50"></text></g><g><title>_dl_map_object (1 samples, 0.15%)</title><rect x="98.3508%" y="725" width="0.1499%" height="15" fill="rgb(249,188,52)"/><text x="98.6008%" y="735.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.15%)</title><rect x="98.3508%" y="709" width="0.1499%" height="15" fill="rgb(225,12,32)"/><text x="98.6008%" y="719.50"></text></g><g><title>__mmap (1 samples, 0.15%)</title><rect x="98.3508%" y="693" width="0.1499%" height="15" fill="rgb(247,98,14)"/><text x="98.6008%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="98.3508%" y="677" width="0.1499%" height="15" fill="rgb(247,219,48)"/><text x="98.6008%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.15%)</title><rect x="98.3508%" y="661" width="0.1499%" height="15" fill="rgb(253,60,48)"/><text x="98.6008%" y="671.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.15%)</title><rect x="98.3508%" y="645" width="0.1499%" height="15" fill="rgb(245,15,52)"/><text x="98.6008%" y="655.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.15%)</title><rect x="98.3508%" y="629" width="0.1499%" height="15" fill="rgb(220,133,28)"/><text x="98.6008%" y="639.50"></text></g><g><title>do_mmap (1 samples, 0.15%)</title><rect x="98.3508%" y="613" width="0.1499%" height="15" fill="rgb(217,180,4)"/><text x="98.6008%" y="623.50"></text></g><g><title>mmap_region (1 samples, 0.15%)</title><rect x="98.3508%" y="597" width="0.1499%" height="15" fill="rgb(251,24,1)"/><text x="98.6008%" y="607.50"></text></g><g><title>__do_munmap (1 samples, 0.15%)</title><rect x="98.3508%" y="581" width="0.1499%" height="15" fill="rgb(212,185,49)"/><text x="98.6008%" y="591.50"></text></g><g><title>__split_vma (1 samples, 0.15%)</title><rect x="98.3508%" y="565" width="0.1499%" height="15" fill="rgb(215,175,22)"/><text x="98.6008%" y="575.50"></text></g><g><title>__vma_adjust (1 samples, 0.15%)</title><rect x="98.3508%" y="549" width="0.1499%" height="15" fill="rgb(250,205,14)"/><text x="98.6008%" y="559.50"></text></g><g><title>vma_interval_tree_insert (1 samples, 0.15%)</title><rect x="98.3508%" y="533" width="0.1499%" height="15" fill="rgb(225,211,22)"/><text x="98.6008%" y="543.50"></text></g><g><title>[vmlinux] (1 samples, 0.15%)</title><rect x="98.5007%" y="805" width="0.1499%" height="15" fill="rgb(251,179,42)"/><text x="98.7507%" y="815.50"></text></g><g><title>do_group_exit (1 samples, 0.15%)</title><rect x="98.5007%" y="789" width="0.1499%" height="15" fill="rgb(208,216,51)"/><text x="98.7507%" y="799.50"></text></g><g><title>do_exit (1 samples, 0.15%)</title><rect x="98.5007%" y="773" width="0.1499%" height="15" fill="rgb(235,36,11)"/><text x="98.7507%" y="783.50"></text></g><g><title>mmput (1 samples, 0.15%)</title><rect x="98.5007%" y="757" width="0.1499%" height="15" fill="rgb(213,189,28)"/><text x="98.7507%" y="767.50"></text></g><g><title>exit_mmap (1 samples, 0.15%)</title><rect x="98.5007%" y="741" width="0.1499%" height="15" fill="rgb(227,203,42)"/><text x="98.7507%" y="751.50"></text></g><g><title>unmap_vmas (1 samples, 0.15%)</title><rect x="98.5007%" y="725" width="0.1499%" height="15" fill="rgb(244,72,36)"/><text x="98.7507%" y="735.50"></text></g><g><title>unmap_page_range (1 samples, 0.15%)</title><rect x="98.5007%" y="709" width="0.1499%" height="15" fill="rgb(213,53,17)"/><text x="98.7507%" y="719.50"></text></g><g><title>page_remove_file_rmap (1 samples, 0.15%)</title><rect x="98.5007%" y="693" width="0.1499%" height="15" fill="rgb(207,167,3)"/><text x="98.7507%" y="703.50"></text></g><g><title>lock_page_memcg (1 samples, 0.15%)</title><rect x="98.5007%" y="677" width="0.1499%" height="15" fill="rgb(216,98,30)"/><text x="98.7507%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.30%)</title><rect x="98.5007%" y="837" width="0.2999%" height="15" fill="rgb(236,123,15)"/><text x="98.7507%" y="847.50"></text></g><g><title>do_syscall_64 (2 samples, 0.30%)</title><rect x="98.5007%" y="821" width="0.2999%" height="15" fill="rgb(248,81,50)"/><text x="98.7507%" y="831.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.15%)</title><rect x="98.6507%" y="805" width="0.1499%" height="15" fill="rgb(214,120,4)"/><text x="98.9007%" y="815.50"></text></g><g><title>do_execve (1 samples, 0.15%)</title><rect x="98.6507%" y="789" width="0.1499%" height="15" fill="rgb(208,179,34)"/><text x="98.9007%" y="799.50"></text></g><g><title>__do_execve_file (1 samples, 0.15%)</title><rect x="98.6507%" y="773" width="0.1499%" height="15" fill="rgb(227,140,7)"/><text x="98.9007%" y="783.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.15%)</title><rect x="98.6507%" y="757" width="0.1499%" height="15" fill="rgb(214,22,6)"/><text x="98.9007%" y="767.50"></text></g><g><title>load_elf_binary (1 samples, 0.15%)</title><rect x="98.6507%" y="741" width="0.1499%" height="15" fill="rgb(207,137,27)"/><text x="98.9007%" y="751.50"></text></g><g><title>__clear_user (1 samples, 0.15%)</title><rect x="98.6507%" y="725" width="0.1499%" height="15" fill="rgb(210,8,46)"/><text x="98.9007%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="98.6507%" y="709" width="0.1499%" height="15" fill="rgb(240,16,54)"/><text x="98.9007%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="98.6507%" y="693" width="0.1499%" height="15" fill="rgb(211,209,29)"/><text x="98.9007%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.15%)</title><rect x="98.6507%" y="677" width="0.1499%" height="15" fill="rgb(226,228,24)"/><text x="98.9007%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="98.6507%" y="661" width="0.1499%" height="15" fill="rgb(222,84,9)"/><text x="98.9007%" y="671.50"></text></g><g><title>__pud_alloc (1 samples, 0.15%)</title><rect x="98.6507%" y="645" width="0.1499%" height="15" fill="rgb(234,203,30)"/><text x="98.9007%" y="655.50"></text></g><g><title>get_zeroed_page (1 samples, 0.15%)</title><rect x="98.6507%" y="629" width="0.1499%" height="15" fill="rgb(238,109,14)"/><text x="98.9007%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="98.6507%" y="613" width="0.1499%" height="15" fill="rgb(233,206,34)"/><text x="98.9007%" y="623.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="98.6507%" y="597" width="0.1499%" height="15" fill="rgb(220,167,47)"/><text x="98.9007%" y="607.50"></text></g><g><title>__inc_numa_state (1 samples, 0.15%)</title><rect x="98.6507%" y="581" width="0.1499%" height="15" fill="rgb(238,105,10)"/><text x="98.9007%" y="591.50"></text></g><g><title>malloc_consolidate (1 samples, 0.15%)</title><rect x="98.8006%" y="837" width="0.1499%" height="15" fill="rgb(213,227,17)"/><text x="99.0506%" y="847.50"></text></g><g><title>lobsters-microb (661 samples, 99.10%)</title><rect x="0.0000%" y="853" width="99.1004%" height="15" fill="rgb(217,132,38)"/><text x="0.2500%" y="863.50">lobsters-microb</text></g><g><title>page_fault (1 samples, 0.15%)</title><rect x="98.9505%" y="837" width="0.1499%" height="15" fill="rgb(242,146,4)"/><text x="99.2005%" y="847.50"></text></g><g><title>all (667 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(212,61,9)"/><text x="0.2500%" y="879.50"></text></g><g><title>perf (6 samples, 0.90%)</title><rect x="99.1004%" y="853" width="0.8996%" height="15" fill="rgb(247,126,22)"/><text x="99.3504%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.90%)</title><rect x="99.1004%" y="837" width="0.8996%" height="15" fill="rgb(220,196,2)"/><text x="99.3504%" y="847.50"></text></g><g><title>do_syscall_64 (6 samples, 0.90%)</title><rect x="99.1004%" y="821" width="0.8996%" height="15" fill="rgb(208,46,4)"/><text x="99.3504%" y="831.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.90%)</title><rect x="99.1004%" y="805" width="0.8996%" height="15" fill="rgb(252,104,46)"/><text x="99.3504%" y="815.50"></text></g><g><title>do_execve (6 samples, 0.90%)</title><rect x="99.1004%" y="789" width="0.8996%" height="15" fill="rgb(237,152,48)"/><text x="99.3504%" y="799.50"></text></g><g><title>__do_execve_file (6 samples, 0.90%)</title><rect x="99.1004%" y="773" width="0.8996%" height="15" fill="rgb(221,59,37)"/><text x="99.3504%" y="783.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.90%)</title><rect x="99.1004%" y="757" width="0.8996%" height="15" fill="rgb(209,202,51)"/><text x="99.3504%" y="767.50"></text></g><g><title>load_elf_binary (6 samples, 0.90%)</title><rect x="99.1004%" y="741" width="0.8996%" height="15" fill="rgb(228,81,30)"/><text x="99.3504%" y="751.50"></text></g><g><title>setup_new_exec (6 samples, 0.90%)</title><rect x="99.1004%" y="725" width="0.8996%" height="15" fill="rgb(227,42,39)"/><text x="99.3504%" y="735.50"></text></g><g><title>perf_event_exec (6 samples, 0.90%)</title><rect x="99.1004%" y="709" width="0.8996%" height="15" fill="rgb(221,26,2)"/><text x="99.3504%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.75%)</title><rect x="99.2504%" y="693" width="0.7496%" height="15" fill="rgb(254,61,31)"/><text x="99.5004%" y="703.50"></text></g><g><title>native_write_msr (5 samples, 0.75%)</title><rect x="99.2504%" y="677" width="0.7496%" height="15" fill="rgb(222,173,38)"/><text x="99.5004%" y="687.50"></text></g></svg></svg>