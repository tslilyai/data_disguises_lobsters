<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.30%)</title><rect x="0.2054%" y="741" width="0.3021%" height="15" fill="rgb(227,0,7)"/><text x="0.4554%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (29 samples, 0.35%)</title><rect x="0.5679%" y="741" width="0.3504%" height="15" fill="rgb(217,0,24)"/><text x="0.8179%" y="751.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.24%)</title><rect x="1.7037%" y="741" width="0.2417%" height="15" fill="rgb(221,193,54)"/><text x="1.9537%" y="751.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.13%)</title><rect x="1.9454%" y="741" width="0.1329%" height="15" fill="rgb(248,212,6)"/><text x="2.1954%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.14%)</title><rect x="2.1991%" y="741" width="0.1450%" height="15" fill="rgb(208,68,35)"/><text x="2.4491%" y="751.50"></text></g><g><title>_int_free (35 samples, 0.42%)</title><rect x="2.5012%" y="741" width="0.4229%" height="15" fill="rgb(232,128,0)"/><text x="2.7512%" y="751.50"></text></g><g><title>_int_malloc (13 samples, 0.16%)</title><rect x="2.9241%" y="741" width="0.1571%" height="15" fill="rgb(207,160,47)"/><text x="3.1741%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.43%)</title><rect x="3.1416%" y="741" width="0.4350%" height="15" fill="rgb(228,23,34)"/><text x="3.3916%" y="751.50"></text></g><g><title>core::fmt::write (19 samples, 0.23%)</title><rect x="3.7095%" y="741" width="0.2296%" height="15" fill="rgb(218,30,26)"/><text x="3.9595%" y="751.50"></text></g><g><title>decor_mem::helpers::str_ident_match (28 samples, 0.34%)</title><rect x="4.1445%" y="741" width="0.3383%" height="15" fill="rgb(220,122,19)"/><text x="4.3945%" y="751.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (28 samples, 0.34%)</title><rect x="4.1445%" y="725" width="0.3383%" height="15" fill="rgb(250,228,42)"/><text x="4.3945%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (11 samples, 0.13%)</title><rect x="4.5553%" y="741" width="0.1329%" height="15" fill="rgb(240,193,28)"/><text x="4.8053%" y="751.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (34 samples, 0.41%)</title><rect x="4.7970%" y="741" width="0.4108%" height="15" fill="rgb(216,20,37)"/><text x="5.0470%" y="751.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (74 samples, 0.89%)</title><rect x="5.3287%" y="741" width="0.8942%" height="15" fill="rgb(206,188,39)"/><text x="5.5787%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (17 samples, 0.21%)</title><rect x="6.7907%" y="741" width="0.2054%" height="15" fill="rgb(217,207,13)"/><text x="7.0407%" y="751.50"></text></g><g><title>[anon] (582 samples, 7.03%)</title><rect x="0.2054%" y="757" width="7.0324%" height="15" fill="rgb(231,73,38)"/><text x="0.4554%" y="767.50">[anon]</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="7.5640%" y="741" width="0.1087%" height="15" fill="rgb(225,20,46)"/><text x="7.8140%" y="751.50"></text></g><g><title>[lobsters-microbenchmarks] (42 samples, 0.51%)</title><rect x="7.2740%" y="757" width="0.5075%" height="15" fill="rgb(210,31,41)"/><text x="7.5240%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="7.8782%" y="741" width="0.1692%" height="15" fill="rgb(221,200,47)"/><text x="8.1282%" y="751.50"></text></g><g><title>do_syscall_64 (9 samples, 0.11%)</title><rect x="8.2649%" y="501" width="0.1087%" height="15" fill="rgb(226,26,5)"/><text x="8.5149%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 0.11%)</title><rect x="8.2649%" y="485" width="0.1087%" height="15" fill="rgb(249,33,26)"/><text x="8.5149%" y="495.50"></text></g><g><title>__sys_recvfrom (9 samples, 0.11%)</title><rect x="8.2649%" y="469" width="0.1087%" height="15" fill="rgb(235,183,28)"/><text x="8.5149%" y="479.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (16 samples, 0.19%)</title><rect x="8.2044%" y="741" width="0.1933%" height="15" fill="rgb(221,5,38)"/><text x="8.4544%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (16 samples, 0.19%)</title><rect x="8.2044%" y="725" width="0.1933%" height="15" fill="rgb(247,18,42)"/><text x="8.4544%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (16 samples, 0.19%)</title><rect x="8.2044%" y="709" width="0.1933%" height="15" fill="rgb(241,131,45)"/><text x="8.4544%" y="719.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (12 samples, 0.14%)</title><rect x="8.2528%" y="693" width="0.1450%" height="15" fill="rgb(249,31,29)"/><text x="8.5028%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (12 samples, 0.14%)</title><rect x="8.2528%" y="677" width="0.1450%" height="15" fill="rgb(225,111,53)"/><text x="8.5028%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (12 samples, 0.14%)</title><rect x="8.2528%" y="661" width="0.1450%" height="15" fill="rgb(238,160,17)"/><text x="8.5028%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (12 samples, 0.14%)</title><rect x="8.2528%" y="645" width="0.1450%" height="15" fill="rgb(214,148,48)"/><text x="8.5028%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="8.2649%" y="629" width="0.1329%" height="15" fill="rgb(232,36,49)"/><text x="8.5149%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 0.13%)</title><rect x="8.2649%" y="613" width="0.1329%" height="15" fill="rgb(209,103,24)"/><text x="8.5149%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.13%)</title><rect x="8.2649%" y="597" width="0.1329%" height="15" fill="rgb(229,88,8)"/><text x="8.5149%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 0.13%)</title><rect x="8.2649%" y="581" width="0.1329%" height="15" fill="rgb(213,181,19)"/><text x="8.5149%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.13%)</title><rect x="8.2649%" y="565" width="0.1329%" height="15" fill="rgb(254,191,54)"/><text x="8.5149%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.13%)</title><rect x="8.2649%" y="549" width="0.1329%" height="15" fill="rgb(241,83,37)"/><text x="8.5149%" y="559.50"></text></g><g><title>__libc_recv (11 samples, 0.13%)</title><rect x="8.2649%" y="533" width="0.1329%" height="15" fill="rgb(233,36,39)"/><text x="8.5149%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.13%)</title><rect x="8.2649%" y="517" width="0.1329%" height="15" fill="rgb(226,3,54)"/><text x="8.5149%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="8.4582%" y="741" width="0.1087%" height="15" fill="rgb(245,192,40)"/><text x="8.7082%" y="751.50"></text></g><g><title>__GI___libc_free (16 samples, 0.19%)</title><rect x="8.7724%" y="741" width="0.1933%" height="15" fill="rgb(238,167,29)"/><text x="9.0224%" y="751.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.18%)</title><rect x="8.9657%" y="741" width="0.1812%" height="15" fill="rgb(232,182,51)"/><text x="9.2157%" y="751.50"></text></g><g><title>alloc::fmt::format (16 samples, 0.19%)</title><rect x="9.2436%" y="565" width="0.1933%" height="15" fill="rgb(231,60,39)"/><text x="9.4936%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 0.14%)</title><rect x="9.2919%" y="549" width="0.1450%" height="15" fill="rgb(208,69,12)"/><text x="9.5419%" y="559.50"></text></g><g><title>core::fmt::write (12 samples, 0.14%)</title><rect x="9.2919%" y="533" width="0.1450%" height="15" fill="rgb(235,93,37)"/><text x="9.5419%" y="543.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (17 samples, 0.21%)</title><rect x="9.2436%" y="581" width="0.2054%" height="15" fill="rgb(213,116,39)"/><text x="9.4936%" y="591.50"></text></g><g><title>__libc_start_main (19 samples, 0.23%)</title><rect x="9.2436%" y="741" width="0.2296%" height="15" fill="rgb(222,207,29)"/><text x="9.4936%" y="751.50"></text></g><g><title>main (19 samples, 0.23%)</title><rect x="9.2436%" y="725" width="0.2296%" height="15" fill="rgb(206,96,30)"/><text x="9.4936%" y="735.50"></text></g><g><title>std::rt::lang_start_internal (19 samples, 0.23%)</title><rect x="9.2436%" y="709" width="0.2296%" height="15" fill="rgb(218,138,4)"/><text x="9.4936%" y="719.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.23%)</title><rect x="9.2436%" y="693" width="0.2296%" height="15" fill="rgb(250,191,14)"/><text x="9.4936%" y="703.50"></text></g><g><title>std::panicking::try (19 samples, 0.23%)</title><rect x="9.2436%" y="677" width="0.2296%" height="15" fill="rgb(239,60,40)"/><text x="9.4936%" y="687.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.23%)</title><rect x="9.2436%" y="661" width="0.2296%" height="15" fill="rgb(206,27,48)"/><text x="9.4936%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19 samples, 0.23%)</title><rect x="9.2436%" y="645" width="0.2296%" height="15" fill="rgb(225,35,8)"/><text x="9.4936%" y="655.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (19 samples, 0.23%)</title><rect x="9.2436%" y="629" width="0.2296%" height="15" fill="rgb(250,213,24)"/><text x="9.4936%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.23%)</title><rect x="9.2436%" y="613" width="0.2296%" height="15" fill="rgb(247,123,22)"/><text x="9.4936%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::main (19 samples, 0.23%)</title><rect x="9.2436%" y="597" width="0.2296%" height="15" fill="rgb(231,138,38)"/><text x="9.4936%" y="607.50"></text></g><g><title>_int_free (34 samples, 0.41%)</title><rect x="9.6423%" y="741" width="0.4108%" height="15" fill="rgb(231,145,46)"/><text x="9.8923%" y="751.50"></text></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="10.0532%" y="741" width="0.1329%" height="15" fill="rgb(251,118,11)"/><text x="10.3032%" y="751.50"></text></g><g><title>_int_realloc (13 samples, 0.16%)</title><rect x="10.1861%" y="741" width="0.1571%" height="15" fill="rgb(217,147,25)"/><text x="10.4361%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.24%)</title><rect x="10.3673%" y="741" width="0.2417%" height="15" fill="rgb(247,81,37)"/><text x="10.6173%" y="751.50"></text></g><g><title>core::fmt::write (15 samples, 0.18%)</title><rect x="10.7902%" y="741" width="0.1812%" height="15" fill="rgb(209,12,38)"/><text x="11.0402%" y="751.50"></text></g><g><title>crypto::digest::Digest::result_str (25 samples, 0.30%)</title><rect x="11.1769%" y="629" width="0.3021%" height="15" fill="rgb(227,1,9)"/><text x="11.4269%" y="639.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (25 samples, 0.30%)</title><rect x="11.1769%" y="613" width="0.3021%" height="15" fill="rgb(248,47,43)"/><text x="11.4269%" y="623.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (25 samples, 0.30%)</title><rect x="11.1769%" y="597" width="0.3021%" height="15" fill="rgb(221,10,30)"/><text x="11.4269%" y="607.50"></text></g><g><title>crypto::sha3::keccak_f (25 samples, 0.30%)</title><rect x="11.1769%" y="581" width="0.3021%" height="15" fill="rgb(210,229,1)"/><text x="11.4269%" y="591.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (25 samples, 0.30%)</title><rect x="11.5877%" y="629" width="0.3021%" height="15" fill="rgb(222,148,37)"/><text x="11.8377%" y="639.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (41 samples, 0.50%)</title><rect x="11.8898%" y="581" width="0.4954%" height="15" fill="rgb(234,67,33)"/><text x="12.1398%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (37 samples, 0.45%)</title><rect x="11.9381%" y="565" width="0.4471%" height="15" fill="rgb(247,98,35)"/><text x="12.1881%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (128 samples, 1.55%)</title><rect x="10.9715%" y="741" width="1.5466%" height="15" fill="rgb(247,138,52)"/><text x="11.2215%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (128 samples, 1.55%)</title><rect x="10.9715%" y="725" width="1.5466%" height="15" fill="rgb(213,79,30)"/><text x="11.2215%" y="735.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (128 samples, 1.55%)</title><rect x="10.9715%" y="709" width="1.5466%" height="15" fill="rgb(246,177,23)"/><text x="11.2215%" y="719.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (128 samples, 1.55%)</title><rect x="10.9715%" y="693" width="1.5466%" height="15" fill="rgb(230,62,27)"/><text x="11.2215%" y="703.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (128 samples, 1.55%)</title><rect x="10.9715%" y="677" width="1.5466%" height="15" fill="rgb(216,154,8)"/><text x="11.2215%" y="687.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (123 samples, 1.49%)</title><rect x="11.0319%" y="661" width="1.4862%" height="15" fill="rgb(244,35,45)"/><text x="11.2819%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (123 samples, 1.49%)</title><rect x="11.0319%" y="645" width="1.4862%" height="15" fill="rgb(251,115,12)"/><text x="11.2819%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (52 samples, 0.63%)</title><rect x="11.8898%" y="629" width="0.6283%" height="15" fill="rgb(240,54,50)"/><text x="12.1398%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (52 samples, 0.63%)</title><rect x="11.8898%" y="613" width="0.6283%" height="15" fill="rgb(233,84,52)"/><text x="12.1398%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (52 samples, 0.63%)</title><rect x="11.8898%" y="597" width="0.6283%" height="15" fill="rgb(207,117,47)"/><text x="12.1398%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.11%)</title><rect x="12.5181%" y="741" width="0.1087%" height="15" fill="rgb(249,43,39)"/><text x="12.7681%" y="751.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.11%)</title><rect x="13.0014%" y="325" width="0.1087%" height="15" fill="rgb(209,38,44)"/><text x="13.2514%" y="335.50"></text></g><g><title>sock_def_readable (15 samples, 0.18%)</title><rect x="13.2189%" y="101" width="0.1812%" height="15" fill="rgb(236,212,23)"/><text x="13.4689%" y="111.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.18%)</title><rect x="13.2189%" y="85" width="0.1812%" height="15" fill="rgb(242,79,21)"/><text x="13.4689%" y="95.50"></text></g><g><title>__wake_up_common (15 samples, 0.18%)</title><rect x="13.2189%" y="69" width="0.1812%" height="15" fill="rgb(211,96,35)"/><text x="13.4689%" y="79.50"></text></g><g><title>pollwake (14 samples, 0.17%)</title><rect x="13.2310%" y="53" width="0.1692%" height="15" fill="rgb(253,215,40)"/><text x="13.4810%" y="63.50"></text></g><g><title>try_to_wake_up (14 samples, 0.17%)</title><rect x="13.2310%" y="37" width="0.1692%" height="15" fill="rgb(211,81,21)"/><text x="13.4810%" y="47.50"></text></g><g><title>__local_bh_enable_ip (31 samples, 0.37%)</title><rect x="13.1102%" y="325" width="0.3746%" height="15" fill="rgb(208,190,38)"/><text x="13.3602%" y="335.50"></text></g><g><title>do_softirq (31 samples, 0.37%)</title><rect x="13.1102%" y="309" width="0.3746%" height="15" fill="rgb(235,213,38)"/><text x="13.3602%" y="319.50"></text></g><g><title>do_softirq_own_stack (31 samples, 0.37%)</title><rect x="13.1102%" y="293" width="0.3746%" height="15" fill="rgb(237,122,38)"/><text x="13.3602%" y="303.50"></text></g><g><title>__do_softirq (31 samples, 0.37%)</title><rect x="13.1102%" y="277" width="0.3746%" height="15" fill="rgb(244,218,35)"/><text x="13.3602%" y="287.50"></text></g><g><title>net_rx_action (30 samples, 0.36%)</title><rect x="13.1223%" y="261" width="0.3625%" height="15" fill="rgb(240,68,47)"/><text x="13.3723%" y="271.50"></text></g><g><title>process_backlog (30 samples, 0.36%)</title><rect x="13.1223%" y="245" width="0.3625%" height="15" fill="rgb(210,16,53)"/><text x="13.3723%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (30 samples, 0.36%)</title><rect x="13.1223%" y="229" width="0.3625%" height="15" fill="rgb(235,124,12)"/><text x="13.3723%" y="239.50"></text></g><g><title>ip_rcv (30 samples, 0.36%)</title><rect x="13.1223%" y="213" width="0.3625%" height="15" fill="rgb(224,169,11)"/><text x="13.3723%" y="223.50"></text></g><g><title>ip_local_deliver (30 samples, 0.36%)</title><rect x="13.1223%" y="197" width="0.3625%" height="15" fill="rgb(250,166,2)"/><text x="13.3723%" y="207.50"></text></g><g><title>ip_local_deliver_finish (29 samples, 0.35%)</title><rect x="13.1344%" y="181" width="0.3504%" height="15" fill="rgb(242,216,29)"/><text x="13.3844%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (29 samples, 0.35%)</title><rect x="13.1344%" y="165" width="0.3504%" height="15" fill="rgb(230,116,27)"/><text x="13.3844%" y="175.50"></text></g><g><title>tcp_v4_rcv (27 samples, 0.33%)</title><rect x="13.1585%" y="149" width="0.3262%" height="15" fill="rgb(228,99,48)"/><text x="13.4085%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (25 samples, 0.30%)</title><rect x="13.1827%" y="133" width="0.3021%" height="15" fill="rgb(253,11,6)"/><text x="13.4327%" y="143.50"></text></g><g><title>tcp_rcv_established (25 samples, 0.30%)</title><rect x="13.1827%" y="117" width="0.3021%" height="15" fill="rgb(247,143,39)"/><text x="13.4327%" y="127.50"></text></g><g><title>__ip_queue_xmit (50 samples, 0.60%)</title><rect x="12.8927%" y="373" width="0.6042%" height="15" fill="rgb(236,97,10)"/><text x="13.1427%" y="383.50"></text></g><g><title>ip_output (48 samples, 0.58%)</title><rect x="12.9169%" y="357" width="0.5800%" height="15" fill="rgb(233,208,19)"/><text x="13.1669%" y="367.50"></text></g><g><title>ip_finish_output2 (45 samples, 0.54%)</title><rect x="12.9531%" y="341" width="0.5437%" height="15" fill="rgb(216,164,2)"/><text x="13.2031%" y="351.50"></text></g><g><title>__tcp_transmit_skb (52 samples, 0.63%)</title><rect x="12.8806%" y="389" width="0.6283%" height="15" fill="rgb(220,129,5)"/><text x="13.1306%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (57 samples, 0.69%)</title><rect x="12.8565%" y="421" width="0.6887%" height="15" fill="rgb(242,17,10)"/><text x="13.1065%" y="431.50"></text></g><g><title>tcp_write_xmit (56 samples, 0.68%)</title><rect x="12.8685%" y="405" width="0.6767%" height="15" fill="rgb(242,107,0)"/><text x="13.1185%" y="415.50"></text></g><g><title>sock_sendmsg (63 samples, 0.76%)</title><rect x="12.8081%" y="469" width="0.7612%" height="15" fill="rgb(251,28,31)"/><text x="13.0581%" y="479.50"></text></g><g><title>tcp_sendmsg (63 samples, 0.76%)</title><rect x="12.8081%" y="453" width="0.7612%" height="15" fill="rgb(233,223,10)"/><text x="13.0581%" y="463.50"></text></g><g><title>tcp_sendmsg_locked (60 samples, 0.72%)</title><rect x="12.8444%" y="437" width="0.7250%" height="15" fill="rgb(215,21,27)"/><text x="13.0944%" y="447.50"></text></g><g><title>__x64_sys_sendto (64 samples, 0.77%)</title><rect x="12.8081%" y="501" width="0.7733%" height="15" fill="rgb(232,23,21)"/><text x="13.0581%" y="511.50"></text></g><g><title>__sys_sendto (64 samples, 0.77%)</title><rect x="12.8081%" y="485" width="0.7733%" height="15" fill="rgb(244,5,23)"/><text x="13.0581%" y="495.50"></text></g><g><title>do_syscall_64 (67 samples, 0.81%)</title><rect x="12.8081%" y="517" width="0.8096%" height="15" fill="rgb(226,81,46)"/><text x="13.0581%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (78 samples, 0.94%)</title><rect x="12.6994%" y="645" width="0.9425%" height="15" fill="rgb(247,70,30)"/><text x="12.9494%" y="655.50"></text></g><g><title>mysql::conn::Conn::_query (78 samples, 0.94%)</title><rect x="12.6994%" y="629" width="0.9425%" height="15" fill="rgb(212,68,19)"/><text x="12.9494%" y="639.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (73 samples, 0.88%)</title><rect x="12.7598%" y="613" width="0.8821%" height="15" fill="rgb(240,187,13)"/><text x="13.0098%" y="623.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (70 samples, 0.85%)</title><rect x="12.7960%" y="597" width="0.8458%" height="15" fill="rgb(223,113,26)"/><text x="13.0460%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (70 samples, 0.85%)</title><rect x="12.7960%" y="581" width="0.8458%" height="15" fill="rgb(206,192,2)"/><text x="13.0460%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (70 samples, 0.85%)</title><rect x="12.7960%" y="565" width="0.8458%" height="15" fill="rgb(241,108,4)"/><text x="13.0460%" y="575.50"></text></g><g><title>__libc_send (70 samples, 0.85%)</title><rect x="12.7960%" y="549" width="0.8458%" height="15" fill="rgb(247,173,49)"/><text x="13.0460%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (70 samples, 0.85%)</title><rect x="12.7960%" y="533" width="0.8458%" height="15" fill="rgb(224,114,35)"/><text x="13.0460%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.17%)</title><rect x="13.6419%" y="613" width="0.1692%" height="15" fill="rgb(245,159,27)"/><text x="13.8919%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.17%)</title><rect x="13.6419%" y="597" width="0.1692%" height="15" fill="rgb(245,172,44)"/><text x="13.8919%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.11%)</title><rect x="13.7023%" y="581" width="0.1087%" height="15" fill="rgb(236,23,11)"/><text x="13.9523%" y="591.50"></text></g><g><title>core::fmt::write (19 samples, 0.23%)</title><rect x="13.6419%" y="645" width="0.2296%" height="15" fill="rgb(205,117,38)"/><text x="13.8919%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (19 samples, 0.23%)</title><rect x="13.6419%" y="629" width="0.2296%" height="15" fill="rgb(237,72,25)"/><text x="13.8919%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (10 samples, 0.12%)</title><rect x="13.8835%" y="629" width="0.1208%" height="15" fill="rgb(244,70,9)"/><text x="14.1335%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (111 samples, 1.34%)</title><rect x="12.6994%" y="661" width="1.3412%" height="15" fill="rgb(217,125,39)"/><text x="12.9494%" y="671.50"></text></g><g><title>decor_mem::views::Views::insert (14 samples, 0.17%)</title><rect x="13.8714%" y="645" width="0.1692%" height="15" fill="rgb(235,36,10)"/><text x="14.1214%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.14%)</title><rect x="14.0406%" y="645" width="0.1450%" height="15" fill="rgb(251,123,47)"/><text x="14.2906%" y="655.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.22%)</title><rect x="14.4031%" y="437" width="0.2175%" height="15" fill="rgb(221,13,13)"/><text x="14.6531%" y="447.50"></text></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="14.5118%" y="421" width="0.1087%" height="15" fill="rgb(238,131,9)"/><text x="14.7618%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (41 samples, 0.50%)</title><rect x="14.1856%" y="629" width="0.4954%" height="15" fill="rgb(211,50,8)"/><text x="14.4356%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 0.34%)</title><rect x="14.3427%" y="613" width="0.3383%" height="15" fill="rgb(245,182,24)"/><text x="14.5927%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.31%)</title><rect x="14.3668%" y="597" width="0.3142%" height="15" fill="rgb(242,14,37)"/><text x="14.6168%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26 samples, 0.31%)</title><rect x="14.3668%" y="581" width="0.3142%" height="15" fill="rgb(246,228,12)"/><text x="14.6168%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.31%)</title><rect x="14.3668%" y="565" width="0.3142%" height="15" fill="rgb(213,55,15)"/><text x="14.6168%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (24 samples, 0.29%)</title><rect x="14.3910%" y="549" width="0.2900%" height="15" fill="rgb(209,9,3)"/><text x="14.6410%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (24 samples, 0.29%)</title><rect x="14.3910%" y="533" width="0.2900%" height="15" fill="rgb(230,59,30)"/><text x="14.6410%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.29%)</title><rect x="14.3910%" y="517" width="0.2900%" height="15" fill="rgb(209,121,21)"/><text x="14.6410%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.29%)</title><rect x="14.3910%" y="501" width="0.2900%" height="15" fill="rgb(220,109,13)"/><text x="14.6410%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (24 samples, 0.29%)</title><rect x="14.3910%" y="485" width="0.2900%" height="15" fill="rgb(232,18,1)"/><text x="14.6410%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.29%)</title><rect x="14.3910%" y="469" width="0.2900%" height="15" fill="rgb(215,41,42)"/><text x="14.6410%" y="479.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.29%)</title><rect x="14.3910%" y="453" width="0.2900%" height="15" fill="rgb(224,123,36)"/><text x="14.6410%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (81 samples, 0.98%)</title><rect x="14.1856%" y="645" width="0.9787%" height="15" fill="rgb(240,125,3)"/><text x="14.4356%" y="655.50"></text></g><g><title>__GI___libc_malloc (40 samples, 0.48%)</title><rect x="14.6810%" y="629" width="0.4833%" height="15" fill="rgb(205,98,50)"/><text x="14.9310%" y="639.50"></text></g><g><title>_int_malloc (40 samples, 0.48%)</title><rect x="14.6810%" y="613" width="0.4833%" height="15" fill="rgb(205,185,37)"/><text x="14.9310%" y="623.50"></text></g><g><title>malloc_consolidate (23 samples, 0.28%)</title><rect x="14.8864%" y="597" width="0.2779%" height="15" fill="rgb(238,207,15)"/><text x="15.1364%" y="607.50"></text></g><g><title>sock_def_readable (21 samples, 0.25%)</title><rect x="15.5268%" y="101" width="0.2537%" height="15" fill="rgb(213,199,42)"/><text x="15.7768%" y="111.50"></text></g><g><title>__wake_up_common_lock (21 samples, 0.25%)</title><rect x="15.5268%" y="85" width="0.2537%" height="15" fill="rgb(235,201,11)"/><text x="15.7768%" y="95.50"></text></g><g><title>__wake_up_common (21 samples, 0.25%)</title><rect x="15.5268%" y="69" width="0.2537%" height="15" fill="rgb(207,46,11)"/><text x="15.7768%" y="79.50"></text></g><g><title>pollwake (21 samples, 0.25%)</title><rect x="15.5268%" y="53" width="0.2537%" height="15" fill="rgb(241,35,35)"/><text x="15.7768%" y="63.50"></text></g><g><title>try_to_wake_up (19 samples, 0.23%)</title><rect x="15.5510%" y="37" width="0.2296%" height="15" fill="rgb(243,32,47)"/><text x="15.8010%" y="47.50"></text></g><g><title>tcp_ack (15 samples, 0.18%)</title><rect x="15.7806%" y="101" width="0.1812%" height="15" fill="rgb(247,202,23)"/><text x="16.0306%" y="111.50"></text></g><g><title>tcp_v4_do_rcv (40 samples, 0.48%)</title><rect x="15.5027%" y="133" width="0.4833%" height="15" fill="rgb(219,102,11)"/><text x="15.7527%" y="143.50"></text></g><g><title>tcp_rcv_established (40 samples, 0.48%)</title><rect x="15.5027%" y="117" width="0.4833%" height="15" fill="rgb(243,110,44)"/><text x="15.7527%" y="127.50"></text></g><g><title>ip_local_deliver (42 samples, 0.51%)</title><rect x="15.4906%" y="197" width="0.5075%" height="15" fill="rgb(222,74,54)"/><text x="15.7406%" y="207.50"></text></g><g><title>ip_local_deliver_finish (42 samples, 0.51%)</title><rect x="15.4906%" y="181" width="0.5075%" height="15" fill="rgb(216,99,12)"/><text x="15.7406%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (42 samples, 0.51%)</title><rect x="15.4906%" y="165" width="0.5075%" height="15" fill="rgb(226,22,26)"/><text x="15.7406%" y="175.50"></text></g><g><title>tcp_v4_rcv (42 samples, 0.51%)</title><rect x="15.4906%" y="149" width="0.5075%" height="15" fill="rgb(217,163,10)"/><text x="15.7406%" y="159.50"></text></g><g><title>ip_finish_output2 (51 samples, 0.62%)</title><rect x="15.3939%" y="341" width="0.6162%" height="15" fill="rgb(213,25,53)"/><text x="15.6439%" y="351.50"></text></g><g><title>__local_bh_enable_ip (46 samples, 0.56%)</title><rect x="15.4543%" y="325" width="0.5558%" height="15" fill="rgb(252,105,26)"/><text x="15.7043%" y="335.50"></text></g><g><title>do_softirq (46 samples, 0.56%)</title><rect x="15.4543%" y="309" width="0.5558%" height="15" fill="rgb(220,39,43)"/><text x="15.7043%" y="319.50"></text></g><g><title>do_softirq_own_stack (45 samples, 0.54%)</title><rect x="15.4664%" y="293" width="0.5437%" height="15" fill="rgb(229,68,48)"/><text x="15.7164%" y="303.50"></text></g><g><title>__do_softirq (45 samples, 0.54%)</title><rect x="15.4664%" y="277" width="0.5437%" height="15" fill="rgb(252,8,32)"/><text x="15.7164%" y="287.50"></text></g><g><title>net_rx_action (45 samples, 0.54%)</title><rect x="15.4664%" y="261" width="0.5437%" height="15" fill="rgb(223,20,43)"/><text x="15.7164%" y="271.50"></text></g><g><title>process_backlog (44 samples, 0.53%)</title><rect x="15.4785%" y="245" width="0.5317%" height="15" fill="rgb(229,81,49)"/><text x="15.7285%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (44 samples, 0.53%)</title><rect x="15.4785%" y="229" width="0.5317%" height="15" fill="rgb(236,28,36)"/><text x="15.7285%" y="239.50"></text></g><g><title>ip_rcv (44 samples, 0.53%)</title><rect x="15.4785%" y="213" width="0.5317%" height="15" fill="rgb(249,185,26)"/><text x="15.7285%" y="223.50"></text></g><g><title>__ip_queue_xmit (53 samples, 0.64%)</title><rect x="15.3818%" y="373" width="0.6404%" height="15" fill="rgb(249,174,33)"/><text x="15.6318%" y="383.50"></text></g><g><title>ip_output (52 samples, 0.63%)</title><rect x="15.3939%" y="357" width="0.6283%" height="15" fill="rgb(233,201,37)"/><text x="15.6439%" y="367.50"></text></g><g><title>__tcp_transmit_skb (58 samples, 0.70%)</title><rect x="15.3697%" y="389" width="0.7008%" height="15" fill="rgb(221,78,26)"/><text x="15.6197%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (60 samples, 0.72%)</title><rect x="15.3577%" y="421" width="0.7250%" height="15" fill="rgb(250,127,30)"/><text x="15.6077%" y="431.50"></text></g><g><title>tcp_write_xmit (60 samples, 0.72%)</title><rect x="15.3577%" y="405" width="0.7250%" height="15" fill="rgb(230,49,44)"/><text x="15.6077%" y="415.50"></text></g><g><title>sock_sendmsg (70 samples, 0.85%)</title><rect x="15.2972%" y="469" width="0.8458%" height="15" fill="rgb(229,67,23)"/><text x="15.5472%" y="479.50"></text></g><g><title>tcp_sendmsg (69 samples, 0.83%)</title><rect x="15.3093%" y="453" width="0.8337%" height="15" fill="rgb(249,83,47)"/><text x="15.5593%" y="463.50"></text></g><g><title>tcp_sendmsg_locked (69 samples, 0.83%)</title><rect x="15.3093%" y="437" width="0.8337%" height="15" fill="rgb(215,43,3)"/><text x="15.5593%" y="447.50"></text></g><g><title>do_syscall_64 (72 samples, 0.87%)</title><rect x="15.2972%" y="517" width="0.8700%" height="15" fill="rgb(238,154,13)"/><text x="15.5472%" y="527.50"></text></g><g><title>__x64_sys_sendto (72 samples, 0.87%)</title><rect x="15.2972%" y="501" width="0.8700%" height="15" fill="rgb(219,56,2)"/><text x="15.5472%" y="511.50"></text></g><g><title>__sys_sendto (72 samples, 0.87%)</title><rect x="15.2972%" y="485" width="0.8700%" height="15" fill="rgb(233,0,4)"/><text x="15.5472%" y="495.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (76 samples, 0.92%)</title><rect x="15.2610%" y="645" width="0.9183%" height="15" fill="rgb(235,30,7)"/><text x="15.5110%" y="655.50"></text></g><g><title>mysql::conn::Conn::_query (75 samples, 0.91%)</title><rect x="15.2731%" y="629" width="0.9062%" height="15" fill="rgb(250,79,13)"/><text x="15.5231%" y="639.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (74 samples, 0.89%)</title><rect x="15.2852%" y="613" width="0.8942%" height="15" fill="rgb(211,146,34)"/><text x="15.5352%" y="623.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (74 samples, 0.89%)</title><rect x="15.2852%" y="597" width="0.8942%" height="15" fill="rgb(228,22,38)"/><text x="15.5352%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (74 samples, 0.89%)</title><rect x="15.2852%" y="581" width="0.8942%" height="15" fill="rgb(235,168,5)"/><text x="15.5352%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (74 samples, 0.89%)</title><rect x="15.2852%" y="565" width="0.8942%" height="15" fill="rgb(221,155,16)"/><text x="15.5352%" y="575.50"></text></g><g><title>__libc_send (74 samples, 0.89%)</title><rect x="15.2852%" y="549" width="0.8942%" height="15" fill="rgb(215,215,53)"/><text x="15.5352%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (73 samples, 0.88%)</title><rect x="15.2972%" y="533" width="0.8821%" height="15" fill="rgb(223,4,10)"/><text x="15.5472%" y="543.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.28%)</title><rect x="16.2397%" y="613" width="0.2779%" height="15" fill="rgb(234,103,6)"/><text x="16.4897%" y="623.50"></text></g><g><title>_int_malloc (23 samples, 0.28%)</title><rect x="16.2397%" y="597" width="0.2779%" height="15" fill="rgb(227,97,0)"/><text x="16.4897%" y="607.50"></text></g><g><title>malloc_consolidate (15 samples, 0.18%)</title><rect x="16.3364%" y="581" width="0.1812%" height="15" fill="rgb(234,150,53)"/><text x="16.5864%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (31 samples, 0.37%)</title><rect x="16.1793%" y="645" width="0.3746%" height="15" fill="rgb(228,201,54)"/><text x="16.4293%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.37%)</title><rect x="16.1793%" y="629" width="0.3746%" height="15" fill="rgb(222,22,37)"/><text x="16.4293%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (28 samples, 0.34%)</title><rect x="16.6506%" y="613" width="0.3383%" height="15" fill="rgb(237,53,32)"/><text x="16.9006%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (25 samples, 0.30%)</title><rect x="16.6868%" y="597" width="0.3021%" height="15" fill="rgb(233,25,53)"/><text x="16.9368%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (33 samples, 0.40%)</title><rect x="16.6506%" y="629" width="0.3987%" height="15" fill="rgb(210,40,34)"/><text x="16.9006%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.11%)</title><rect x="17.3272%" y="581" width="0.1087%" height="15" fill="rgb(241,220,44)"/><text x="17.5772%" y="591.50"></text></g><g><title>core::fmt::write (69 samples, 0.83%)</title><rect x="16.6506%" y="645" width="0.8337%" height="15" fill="rgb(235,28,35)"/><text x="16.9006%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (36 samples, 0.43%)</title><rect x="17.0493%" y="629" width="0.4350%" height="15" fill="rgb(210,56,17)"/><text x="17.2993%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (34 samples, 0.41%)</title><rect x="17.0735%" y="613" width="0.4108%" height="15" fill="rgb(224,130,29)"/><text x="17.3235%" y="623.50"></text></g><g><title>core::fmt::write (16 samples, 0.19%)</title><rect x="17.2910%" y="597" width="0.1933%" height="15" fill="rgb(235,212,8)"/><text x="17.5410%" y="607.50"></text></g><g><title>alloc::fmt::format (17 samples, 0.21%)</title><rect x="17.6172%" y="629" width="0.2054%" height="15" fill="rgb(223,33,50)"/><text x="17.8672%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (15 samples, 0.18%)</title><rect x="17.6414%" y="613" width="0.1812%" height="15" fill="rgb(219,149,13)"/><text x="17.8914%" y="623.50"></text></g><g><title>core::fmt::write (13 samples, 0.16%)</title><rect x="17.6655%" y="597" width="0.1571%" height="15" fill="rgb(250,156,29)"/><text x="17.9155%" y="607.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (40 samples, 0.48%)</title><rect x="17.5085%" y="645" width="0.4833%" height="15" fill="rgb(216,193,19)"/><text x="17.7585%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.12%)</title><rect x="17.9918%" y="629" width="0.1208%" height="15" fill="rgb(216,135,14)"/><text x="18.2418%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.11%)</title><rect x="18.0039%" y="613" width="0.1087%" height="15" fill="rgb(241,47,5)"/><text x="18.2539%" y="623.50"></text></g><g><title>_int_free (9 samples, 0.11%)</title><rect x="18.0039%" y="597" width="0.1087%" height="15" fill="rgb(233,42,35)"/><text x="18.2539%" y="607.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="18.3664%" y="389" width="0.1087%" height="15" fill="rgb(231,13,6)"/><text x="18.6164%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.25%)</title><rect x="18.2334%" y="581" width="0.2537%" height="15" fill="rgb(207,181,40)"/><text x="18.4834%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="18.3059%" y="565" width="0.1812%" height="15" fill="rgb(254,173,49)"/><text x="18.5559%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="18.3059%" y="549" width="0.1812%" height="15" fill="rgb(221,1,38)"/><text x="18.5559%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.17%)</title><rect x="18.3180%" y="533" width="0.1692%" height="15" fill="rgb(206,124,46)"/><text x="18.5680%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.17%)</title><rect x="18.3180%" y="517" width="0.1692%" height="15" fill="rgb(249,21,11)"/><text x="18.5680%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.12%)</title><rect x="18.3664%" y="501" width="0.1208%" height="15" fill="rgb(222,201,40)"/><text x="18.6164%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (10 samples, 0.12%)</title><rect x="18.3664%" y="485" width="0.1208%" height="15" fill="rgb(235,61,29)"/><text x="18.6164%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.12%)</title><rect x="18.3664%" y="469" width="0.1208%" height="15" fill="rgb(219,207,3)"/><text x="18.6164%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.12%)</title><rect x="18.3664%" y="453" width="0.1208%" height="15" fill="rgb(222,56,46)"/><text x="18.6164%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (10 samples, 0.12%)</title><rect x="18.3664%" y="437" width="0.1208%" height="15" fill="rgb(239,76,54)"/><text x="18.6164%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.12%)</title><rect x="18.3664%" y="421" width="0.1208%" height="15" fill="rgb(231,124,27)"/><text x="18.6164%" y="431.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.12%)</title><rect x="18.3664%" y="405" width="0.1208%" height="15" fill="rgb(249,195,6)"/><text x="18.6164%" y="415.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (33 samples, 0.40%)</title><rect x="18.2334%" y="597" width="0.3987%" height="15" fill="rgb(237,174,47)"/><text x="18.4834%" y="607.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (45 samples, 0.54%)</title><rect x="18.1247%" y="613" width="0.5437%" height="15" fill="rgb(206,201,31)"/><text x="18.3747%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (51 samples, 0.62%)</title><rect x="18.1126%" y="629" width="0.6162%" height="15" fill="rgb(231,57,52)"/><text x="18.3626%" y="639.50"></text></g><g><title>_int_free (10 samples, 0.12%)</title><rect x="18.9826%" y="597" width="0.1208%" height="15" fill="rgb(248,177,22)"/><text x="19.2326%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (20 samples, 0.24%)</title><rect x="18.8980%" y="613" width="0.2417%" height="15" fill="rgb(215,211,37)"/><text x="19.1480%" y="623.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.30%)</title><rect x="19.2968%" y="389" width="0.3021%" height="15" fill="rgb(241,128,51)"/><text x="19.5468%" y="399.50"></text></g><g><title>_int_malloc (17 samples, 0.21%)</title><rect x="19.3934%" y="373" width="0.2054%" height="15" fill="rgb(227,165,31)"/><text x="19.6434%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.47%)</title><rect x="19.1638%" y="581" width="0.4712%" height="15" fill="rgb(228,167,24)"/><text x="19.4138%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (30 samples, 0.36%)</title><rect x="19.2726%" y="565" width="0.3625%" height="15" fill="rgb(228,143,12)"/><text x="19.5226%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.36%)</title><rect x="19.2726%" y="549" width="0.3625%" height="15" fill="rgb(249,149,8)"/><text x="19.5226%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.36%)</title><rect x="19.2726%" y="533" width="0.3625%" height="15" fill="rgb(243,35,44)"/><text x="19.5226%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.36%)</title><rect x="19.2726%" y="517" width="0.3625%" height="15" fill="rgb(246,89,9)"/><text x="19.5226%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.35%)</title><rect x="19.2847%" y="501" width="0.3504%" height="15" fill="rgb(233,213,13)"/><text x="19.5347%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (29 samples, 0.35%)</title><rect x="19.2847%" y="485" width="0.3504%" height="15" fill="rgb(233,141,41)"/><text x="19.5347%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.35%)</title><rect x="19.2847%" y="469" width="0.3504%" height="15" fill="rgb(239,167,4)"/><text x="19.5347%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.35%)</title><rect x="19.2847%" y="453" width="0.3504%" height="15" fill="rgb(209,217,16)"/><text x="19.5347%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (29 samples, 0.35%)</title><rect x="19.2847%" y="437" width="0.3504%" height="15" fill="rgb(219,88,35)"/><text x="19.5347%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.35%)</title><rect x="19.2847%" y="421" width="0.3504%" height="15" fill="rgb(220,193,23)"/><text x="19.5347%" y="431.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.35%)</title><rect x="19.2847%" y="405" width="0.3504%" height="15" fill="rgb(230,90,52)"/><text x="19.5347%" y="415.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (43 samples, 0.52%)</title><rect x="19.1397%" y="613" width="0.5196%" height="15" fill="rgb(252,106,19)"/><text x="19.3897%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 0.50%)</title><rect x="19.1638%" y="597" width="0.4954%" height="15" fill="rgb(206,74,20)"/><text x="19.4138%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (20 samples, 0.24%)</title><rect x="19.7076%" y="597" width="0.2417%" height="15" fill="rgb(230,138,44)"/><text x="19.9576%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.22%)</title><rect x="19.7318%" y="581" width="0.2175%" height="15" fill="rgb(235,182,43)"/><text x="19.9818%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.22%)</title><rect x="19.7318%" y="565" width="0.2175%" height="15" fill="rgb(242,16,51)"/><text x="19.9818%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (97 samples, 1.17%)</title><rect x="20.2272%" y="597" width="1.1721%" height="15" fill="rgb(248,9,4)"/><text x="20.4772%" y="607.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (148 samples, 1.79%)</title><rect x="19.6593%" y="613" width="1.7883%" height="15" fill="rgb(210,31,22)"/><text x="19.9093%" y="623.50">d..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (288 samples, 3.48%)</title><rect x="17.9918%" y="645" width="3.4799%" height="15" fill="rgb(239,54,39)"/><text x="18.2418%" y="655.50">dec..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (227 samples, 2.74%)</title><rect x="18.7289%" y="629" width="2.7429%" height="15" fill="rgb(230,99,41)"/><text x="18.9789%" y="639.50">de..</text></g><g><title>core::fmt::write (21 samples, 0.25%)</title><rect x="21.7013%" y="629" width="0.2537%" height="15" fill="rgb(253,106,12)"/><text x="21.9513%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (17 samples, 0.21%)</title><rect x="21.7496%" y="613" width="0.2054%" height="15" fill="rgb(213,46,41)"/><text x="21.9996%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.13%)</title><rect x="21.8221%" y="597" width="0.1329%" height="15" fill="rgb(215,133,35)"/><text x="22.0721%" y="607.50"></text></g><g><title>std::time::Instant::elapsed (13 samples, 0.16%)</title><rect x="22.1605%" y="629" width="0.1571%" height="15" fill="rgb(213,28,5)"/><text x="22.4105%" y="639.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (76 samples, 0.92%)</title><rect x="21.4717%" y="645" width="0.9183%" height="15" fill="rgb(215,77,49)"/><text x="21.7217%" y="655.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (14 samples, 0.17%)</title><rect x="22.4746%" y="629" width="0.1692%" height="15" fill="rgb(248,100,22)"/><text x="22.7246%" y="639.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.12%)</title><rect x="22.9338%" y="613" width="0.1208%" height="15" fill="rgb(208,67,9)"/><text x="23.1838%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (34 samples, 0.41%)</title><rect x="23.3084%" y="565" width="0.4108%" height="15" fill="rgb(219,133,21)"/><text x="23.5584%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (30 samples, 0.36%)</title><rect x="23.3567%" y="549" width="0.3625%" height="15" fill="rgb(246,46,29)"/><text x="23.6067%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (47 samples, 0.57%)</title><rect x="23.2721%" y="581" width="0.5679%" height="15" fill="rgb(246,185,52)"/><text x="23.5221%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.12%)</title><rect x="23.7192%" y="565" width="0.1208%" height="15" fill="rgb(252,136,11)"/><text x="23.9692%" y="575.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.16%)</title><rect x="23.9609%" y="565" width="0.1571%" height="15" fill="rgb(219,138,53)"/><text x="24.2109%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.17%)</title><rect x="24.2267%" y="549" width="0.1692%" height="15" fill="rgb(211,51,23)"/><text x="24.4767%" y="559.50"></text></g><g><title>core::fmt::write (107 samples, 1.29%)</title><rect x="23.1392%" y="613" width="1.2929%" height="15" fill="rgb(247,221,28)"/><text x="23.3892%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (102 samples, 1.23%)</title><rect x="23.1996%" y="597" width="1.2325%" height="15" fill="rgb(251,222,45)"/><text x="23.4496%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (44 samples, 0.53%)</title><rect x="23.9004%" y="581" width="0.5317%" height="15" fill="rgb(217,162,53)"/><text x="24.1504%" y="591.50"></text></g><g><title>core::fmt::write (20 samples, 0.24%)</title><rect x="24.1904%" y="565" width="0.2417%" height="15" fill="rgb(229,93,14)"/><text x="24.4404%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (38 samples, 0.46%)</title><rect x="24.4321%" y="613" width="0.4592%" height="15" fill="rgb(209,67,49)"/><text x="24.6821%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.14%)</title><rect x="24.8913%" y="613" width="0.1450%" height="15" fill="rgb(213,87,29)"/><text x="25.1413%" y="623.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (1,036 samples, 12.52%)</title><rect x="12.6994%" y="693" width="12.5181%" height="15" fill="rgb(205,151,52)"/><text x="12.9494%" y="703.50">&lt;decor_mem::Shim as..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (1,036 samples, 12.52%)</title><rect x="12.6994%" y="677" width="12.5181%" height="15" fill="rgb(253,215,39)"/><text x="12.9494%" y="687.50">decor_mem::query_tr..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (925 samples, 11.18%)</title><rect x="14.0406%" y="661" width="11.1769%" height="15" fill="rgb(221,220,41)"/><text x="14.2906%" y="671.50">decor_mem::query..</text></g><g><title>decor_mem::views::Views::delete (234 samples, 2.83%)</title><rect x="22.3900%" y="645" width="2.8275%" height="15" fill="rgb(218,133,21)"/><text x="22.6400%" y="655.50">de..</text></g><g><title>decor_mem::views::View::update_index_and_row (213 samples, 2.57%)</title><rect x="22.6438%" y="629" width="2.5737%" height="15" fill="rgb(221,193,43)"/><text x="22.8938%" y="639.50">de..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.17%)</title><rect x="25.2537%" y="645" width="0.1692%" height="15" fill="rgb(240,128,52)"/><text x="25.5037%" y="655.50"></text></g><g><title>__wake_up_common (13 samples, 0.16%)</title><rect x="25.7733%" y="69" width="0.1571%" height="15" fill="rgb(253,114,12)"/><text x="26.0233%" y="79.50"></text></g><g><title>pollwake (13 samples, 0.16%)</title><rect x="25.7733%" y="53" width="0.1571%" height="15" fill="rgb(215,223,47)"/><text x="26.0233%" y="63.50"></text></g><g><title>try_to_wake_up (13 samples, 0.16%)</title><rect x="25.7733%" y="37" width="0.1571%" height="15" fill="rgb(248,225,23)"/><text x="26.0233%" y="47.50"></text></g><g><title>sock_def_readable (14 samples, 0.17%)</title><rect x="25.7733%" y="101" width="0.1692%" height="15" fill="rgb(250,108,0)"/><text x="26.0233%" y="111.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.17%)</title><rect x="25.7733%" y="85" width="0.1692%" height="15" fill="rgb(228,208,7)"/><text x="26.0233%" y="95.50"></text></g><g><title>__ip_queue_xmit (36 samples, 0.43%)</title><rect x="25.5679%" y="373" width="0.4350%" height="15" fill="rgb(244,45,10)"/><text x="25.8179%" y="383.50"></text></g><g><title>ip_output (34 samples, 0.41%)</title><rect x="25.5921%" y="357" width="0.4108%" height="15" fill="rgb(207,125,25)"/><text x="25.8421%" y="367.50"></text></g><g><title>ip_finish_output2 (33 samples, 0.40%)</title><rect x="25.6042%" y="341" width="0.3987%" height="15" fill="rgb(210,195,18)"/><text x="25.8542%" y="351.50"></text></g><g><title>__local_bh_enable_ip (28 samples, 0.34%)</title><rect x="25.6646%" y="325" width="0.3383%" height="15" fill="rgb(249,80,12)"/><text x="25.9146%" y="335.50"></text></g><g><title>do_softirq (28 samples, 0.34%)</title><rect x="25.6646%" y="309" width="0.3383%" height="15" fill="rgb(221,65,9)"/><text x="25.9146%" y="319.50"></text></g><g><title>do_softirq_own_stack (27 samples, 0.33%)</title><rect x="25.6767%" y="293" width="0.3262%" height="15" fill="rgb(235,49,36)"/><text x="25.9267%" y="303.50"></text></g><g><title>__do_softirq (27 samples, 0.33%)</title><rect x="25.6767%" y="277" width="0.3262%" height="15" fill="rgb(225,32,20)"/><text x="25.9267%" y="287.50"></text></g><g><title>net_rx_action (26 samples, 0.31%)</title><rect x="25.6887%" y="261" width="0.3142%" height="15" fill="rgb(215,141,46)"/><text x="25.9387%" y="271.50"></text></g><g><title>process_backlog (26 samples, 0.31%)</title><rect x="25.6887%" y="245" width="0.3142%" height="15" fill="rgb(250,160,47)"/><text x="25.9387%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (25 samples, 0.30%)</title><rect x="25.7008%" y="229" width="0.3021%" height="15" fill="rgb(216,222,40)"/><text x="25.9508%" y="239.50"></text></g><g><title>ip_rcv (24 samples, 0.29%)</title><rect x="25.7129%" y="213" width="0.2900%" height="15" fill="rgb(234,217,39)"/><text x="25.9629%" y="223.50"></text></g><g><title>ip_local_deliver (24 samples, 0.29%)</title><rect x="25.7129%" y="197" width="0.2900%" height="15" fill="rgb(207,178,40)"/><text x="25.9629%" y="207.50"></text></g><g><title>ip_local_deliver_finish (24 samples, 0.29%)</title><rect x="25.7129%" y="181" width="0.2900%" height="15" fill="rgb(221,136,13)"/><text x="25.9629%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (24 samples, 0.29%)</title><rect x="25.7129%" y="165" width="0.2900%" height="15" fill="rgb(249,199,10)"/><text x="25.9629%" y="175.50"></text></g><g><title>tcp_v4_rcv (22 samples, 0.27%)</title><rect x="25.7371%" y="149" width="0.2658%" height="15" fill="rgb(249,222,13)"/><text x="25.9871%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 0.23%)</title><rect x="25.7733%" y="133" width="0.2296%" height="15" fill="rgb(244,185,38)"/><text x="26.0233%" y="143.50"></text></g><g><title>tcp_rcv_established (19 samples, 0.23%)</title><rect x="25.7733%" y="117" width="0.2296%" height="15" fill="rgb(236,202,9)"/><text x="26.0233%" y="127.50"></text></g><g><title>__tcp_transmit_skb (38 samples, 0.46%)</title><rect x="25.5679%" y="389" width="0.4592%" height="15" fill="rgb(250,229,37)"/><text x="25.8179%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (41 samples, 0.50%)</title><rect x="25.5558%" y="421" width="0.4954%" height="15" fill="rgb(206,174,23)"/><text x="25.8058%" y="431.50"></text></g><g><title>tcp_write_xmit (41 samples, 0.50%)</title><rect x="25.5558%" y="405" width="0.4954%" height="15" fill="rgb(211,33,43)"/><text x="25.8058%" y="415.50"></text></g><g><title>__x64_sys_sendto (57 samples, 0.69%)</title><rect x="25.4954%" y="501" width="0.6887%" height="15" fill="rgb(245,58,50)"/><text x="25.7454%" y="511.50"></text></g><g><title>__sys_sendto (57 samples, 0.69%)</title><rect x="25.4954%" y="485" width="0.6887%" height="15" fill="rgb(244,68,36)"/><text x="25.7454%" y="495.50"></text></g><g><title>sock_sendmsg (55 samples, 0.66%)</title><rect x="25.5196%" y="469" width="0.6646%" height="15" fill="rgb(232,229,15)"/><text x="25.7696%" y="479.50"></text></g><g><title>tcp_sendmsg (54 samples, 0.65%)</title><rect x="25.5317%" y="453" width="0.6525%" height="15" fill="rgb(254,30,23)"/><text x="25.7817%" y="463.50"></text></g><g><title>tcp_sendmsg_locked (53 samples, 0.64%)</title><rect x="25.5437%" y="437" width="0.6404%" height="15" fill="rgb(235,160,14)"/><text x="25.7937%" y="447.50"></text></g><g><title>do_syscall_64 (60 samples, 0.72%)</title><rect x="25.4954%" y="517" width="0.7250%" height="15" fill="rgb(212,155,44)"/><text x="25.7454%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (62 samples, 0.75%)</title><rect x="25.4954%" y="533" width="0.7492%" height="15" fill="rgb(226,2,50)"/><text x="25.7454%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (69 samples, 0.83%)</title><rect x="25.4229%" y="645" width="0.8337%" height="15" fill="rgb(234,177,6)"/><text x="25.6729%" y="655.50"></text></g><g><title>mysql::conn::Conn::_query (68 samples, 0.82%)</title><rect x="25.4350%" y="629" width="0.8217%" height="15" fill="rgb(217,24,9)"/><text x="25.6850%" y="639.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (67 samples, 0.81%)</title><rect x="25.4471%" y="613" width="0.8096%" height="15" fill="rgb(220,13,46)"/><text x="25.6971%" y="623.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (64 samples, 0.77%)</title><rect x="25.4833%" y="597" width="0.7733%" height="15" fill="rgb(239,221,27)"/><text x="25.7333%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (64 samples, 0.77%)</title><rect x="25.4833%" y="581" width="0.7733%" height="15" fill="rgb(222,198,25)"/><text x="25.7333%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (64 samples, 0.77%)</title><rect x="25.4833%" y="565" width="0.7733%" height="15" fill="rgb(211,99,13)"/><text x="25.7333%" y="575.50"></text></g><g><title>__libc_send (64 samples, 0.77%)</title><rect x="25.4833%" y="549" width="0.7733%" height="15" fill="rgb(232,111,31)"/><text x="25.7333%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.13%)</title><rect x="26.2566%" y="581" width="0.1329%" height="15" fill="rgb(245,82,37)"/><text x="26.5066%" y="591.50"></text></g><g><title>alloc::fmt::format (20 samples, 0.24%)</title><rect x="26.2566%" y="645" width="0.2417%" height="15" fill="rgb(227,149,46)"/><text x="26.5066%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (20 samples, 0.24%)</title><rect x="26.2566%" y="629" width="0.2417%" height="15" fill="rgb(218,36,50)"/><text x="26.5066%" y="639.50"></text></g><g><title>core::fmt::write (20 samples, 0.24%)</title><rect x="26.2566%" y="613" width="0.2417%" height="15" fill="rgb(226,80,48)"/><text x="26.5066%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (20 samples, 0.24%)</title><rect x="26.2566%" y="597" width="0.2417%" height="15" fill="rgb(238,224,15)"/><text x="26.5066%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.11%)</title><rect x="26.3896%" y="581" width="0.1087%" height="15" fill="rgb(241,136,10)"/><text x="26.6396%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.40%)</title><rect x="26.4983%" y="645" width="0.3987%" height="15" fill="rgb(208,32,45)"/><text x="26.7483%" y="655.50"></text></g><g><title>__GI___libc_malloc (33 samples, 0.40%)</title><rect x="26.4983%" y="629" width="0.3987%" height="15" fill="rgb(207,135,9)"/><text x="26.7483%" y="639.50"></text></g><g><title>_int_malloc (33 samples, 0.40%)</title><rect x="26.4983%" y="613" width="0.3987%" height="15" fill="rgb(206,86,44)"/><text x="26.7483%" y="623.50"></text></g><g><title>malloc_consolidate (23 samples, 0.28%)</title><rect x="26.6191%" y="597" width="0.2779%" height="15" fill="rgb(245,177,15)"/><text x="26.8691%" y="607.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (159 samples, 1.92%)</title><rect x="25.2175%" y="661" width="1.9212%" height="15" fill="rgb(206,64,50)"/><text x="25.4675%" y="671.50">d..</text></g><g><title>core::fmt::write (11 samples, 0.13%)</title><rect x="27.5979%" y="629" width="0.1329%" height="15" fill="rgb(234,36,40)"/><text x="27.8479%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (10 samples, 0.12%)</title><rect x="27.6100%" y="613" width="0.1208%" height="15" fill="rgb(213,64,8)"/><text x="27.8600%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.33%)</title><rect x="27.4166%" y="645" width="0.3262%" height="15" fill="rgb(210,75,36)"/><text x="27.6666%" y="655.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="27.9483%" y="629" width="0.1450%" height="15" fill="rgb(229,88,21)"/><text x="28.1983%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.22%)</title><rect x="27.9362%" y="645" width="0.2175%" height="15" fill="rgb(252,204,47)"/><text x="28.1862%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 0.22%)</title><rect x="28.2745%" y="565" width="0.2175%" height="15" fill="rgb(208,77,27)"/><text x="28.5245%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (16 samples, 0.19%)</title><rect x="28.2987%" y="549" width="0.1933%" height="15" fill="rgb(221,76,26)"/><text x="28.5487%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (25 samples, 0.30%)</title><rect x="28.2745%" y="581" width="0.3021%" height="15" fill="rgb(225,139,18)"/><text x="28.5245%" y="591.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.13%)</title><rect x="28.6974%" y="565" width="0.1329%" height="15" fill="rgb(230,137,11)"/><text x="28.9474%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.17%)</title><rect x="29.0116%" y="549" width="0.1692%" height="15" fill="rgb(212,28,1)"/><text x="29.2616%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="29.0720%" y="533" width="0.1087%" height="15" fill="rgb(248,164,17)"/><text x="29.3220%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (80 samples, 0.97%)</title><rect x="28.2745%" y="613" width="0.9667%" height="15" fill="rgb(222,171,42)"/><text x="28.5245%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (80 samples, 0.97%)</title><rect x="28.2745%" y="597" width="0.9667%" height="15" fill="rgb(243,84,45)"/><text x="28.5245%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (55 samples, 0.66%)</title><rect x="28.5766%" y="581" width="0.6646%" height="15" fill="rgb(252,49,23)"/><text x="28.8266%" y="591.50"></text></g><g><title>core::fmt::write (23 samples, 0.28%)</title><rect x="28.9633%" y="565" width="0.2779%" height="15" fill="rgb(215,19,7)"/><text x="29.2133%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.12%)</title><rect x="29.2653%" y="565" width="0.1208%" height="15" fill="rgb(238,81,41)"/><text x="29.5153%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.16%)</title><rect x="29.2412%" y="597" width="0.1571%" height="15" fill="rgb(210,199,37)"/><text x="29.4912%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 0.16%)</title><rect x="29.2412%" y="581" width="0.1571%" height="15" fill="rgb(244,192,49)"/><text x="29.4912%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (24 samples, 0.29%)</title><rect x="29.2412%" y="613" width="0.2900%" height="15" fill="rgb(226,211,11)"/><text x="29.4912%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.13%)</title><rect x="29.3983%" y="597" width="0.1329%" height="15" fill="rgb(236,162,54)"/><text x="29.6483%" y="607.50"></text></g><g><title>core::fmt::write (113 samples, 1.37%)</title><rect x="28.1779%" y="645" width="1.3654%" height="15" fill="rgb(220,229,9)"/><text x="28.4279%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (106 samples, 1.28%)</title><rect x="28.2624%" y="629" width="1.2808%" height="15" fill="rgb(250,87,22)"/><text x="28.5124%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 0.19%)</title><rect x="29.5433%" y="645" width="0.1933%" height="15" fill="rgb(239,43,17)"/><text x="29.7933%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.17%)</title><rect x="29.5674%" y="629" width="0.1692%" height="15" fill="rgb(231,177,25)"/><text x="29.8174%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.17%)</title><rect x="29.5674%" y="613" width="0.1692%" height="15" fill="rgb(219,179,1)"/><text x="29.8174%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.17%)</title><rect x="29.5674%" y="597" width="0.1692%" height="15" fill="rgb(238,219,53)"/><text x="29.8174%" y="607.50"></text></g><g><title>decor_mem::helpers::get_random_parser_val_from (12 samples, 0.14%)</title><rect x="29.8091%" y="645" width="0.1450%" height="15" fill="rgb(232,167,36)"/><text x="30.0591%" y="655.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="29.8453%" y="629" width="0.1087%" height="15" fill="rgb(244,19,51)"/><text x="30.0953%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (9 samples, 0.11%)</title><rect x="29.8453%" y="613" width="0.1087%" height="15" fill="rgb(224,6,22)"/><text x="30.0953%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (9 samples, 0.11%)</title><rect x="29.8453%" y="597" width="0.1087%" height="15" fill="rgb(224,145,5)"/><text x="30.0953%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="30.1112%" y="629" width="0.1812%" height="15" fill="rgb(234,130,49)"/><text x="30.3612%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="30.1112%" y="613" width="0.1812%" height="15" fill="rgb(254,6,2)"/><text x="30.3612%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.18%)</title><rect x="30.1112%" y="597" width="0.1812%" height="15" fill="rgb(208,96,46)"/><text x="30.3612%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.17%)</title><rect x="30.1232%" y="581" width="0.1692%" height="15" fill="rgb(239,3,39)"/><text x="30.3732%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.14%)</title><rect x="30.1474%" y="565" width="0.1450%" height="15" fill="rgb(233,210,1)"/><text x="30.3974%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.14%)</title><rect x="30.1474%" y="549" width="0.1450%" height="15" fill="rgb(244,137,37)"/><text x="30.3974%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="30.1474%" y="533" width="0.1450%" height="15" fill="rgb(240,136,2)"/><text x="30.3974%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.14%)</title><rect x="30.1474%" y="517" width="0.1450%" height="15" fill="rgb(239,18,37)"/><text x="30.3974%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (12 samples, 0.14%)</title><rect x="30.1474%" y="501" width="0.1450%" height="15" fill="rgb(218,185,22)"/><text x="30.3974%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.14%)</title><rect x="30.1474%" y="485" width="0.1450%" height="15" fill="rgb(225,218,4)"/><text x="30.3974%" y="495.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.14%)</title><rect x="30.1474%" y="469" width="0.1450%" height="15" fill="rgb(230,182,32)"/><text x="30.3974%" y="479.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="30.1474%" y="453" width="0.1450%" height="15" fill="rgb(242,56,43)"/><text x="30.3974%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.12%)</title><rect x="30.3528%" y="629" width="0.1208%" height="15" fill="rgb(233,99,24)"/><text x="30.6028%" y="639.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="30.3528%" y="613" width="0.1208%" height="15" fill="rgb(234,209,42)"/><text x="30.6028%" y="623.50"></text></g><g><title>alloc_pages_vma (25 samples, 0.30%)</title><rect x="31.2711%" y="517" width="0.3021%" height="15" fill="rgb(227,7,12)"/><text x="31.5211%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (25 samples, 0.30%)</title><rect x="31.2711%" y="501" width="0.3021%" height="15" fill="rgb(245,203,43)"/><text x="31.5211%" y="511.50"></text></g><g><title>get_page_from_freelist (25 samples, 0.30%)</title><rect x="31.2711%" y="485" width="0.3021%" height="15" fill="rgb(238,205,33)"/><text x="31.5211%" y="495.50"></text></g><g><title>prep_new_page (18 samples, 0.22%)</title><rect x="31.3557%" y="469" width="0.2175%" height="15" fill="rgb(231,56,7)"/><text x="31.6057%" y="479.50"></text></g><g><title>kernel_init_free_pages (18 samples, 0.22%)</title><rect x="31.3557%" y="453" width="0.2175%" height="15" fill="rgb(244,186,29)"/><text x="31.6057%" y="463.50"></text></g><g><title>clear_page_erms (18 samples, 0.22%)</title><rect x="31.3557%" y="437" width="0.2175%" height="15" fill="rgb(234,111,31)"/><text x="31.6057%" y="447.50"></text></g><g><title>__handle_mm_fault (44 samples, 0.53%)</title><rect x="31.1503%" y="533" width="0.5317%" height="15" fill="rgb(241,149,10)"/><text x="31.4003%" y="543.50"></text></g><g><title>page_fault (51 samples, 0.62%)</title><rect x="31.0778%" y="581" width="0.6162%" height="15" fill="rgb(249,206,44)"/><text x="31.3278%" y="591.50"></text></g><g><title>do_user_addr_fault (51 samples, 0.62%)</title><rect x="31.0778%" y="565" width="0.6162%" height="15" fill="rgb(251,153,30)"/><text x="31.3278%" y="575.50"></text></g><g><title>handle_mm_fault (47 samples, 0.57%)</title><rect x="31.1261%" y="549" width="0.5679%" height="15" fill="rgb(239,152,38)"/><text x="31.3761%" y="559.50"></text></g><g><title>__memset_avx2_erms (76 samples, 0.92%)</title><rect x="30.9207%" y="597" width="0.9183%" height="15" fill="rgb(249,139,47)"/><text x="31.1707%" y="607.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (12 samples, 0.14%)</title><rect x="31.6941%" y="581" width="0.1450%" height="15" fill="rgb(244,64,35)"/><text x="31.9441%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (10 samples, 0.12%)</title><rect x="31.7182%" y="565" width="0.1208%" height="15" fill="rgb(216,46,15)"/><text x="31.9682%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (84 samples, 1.01%)</title><rect x="30.8482%" y="613" width="1.0150%" height="15" fill="rgb(250,74,19)"/><text x="31.0982%" y="623.50"></text></g><g><title>decor_mem::views::View::insert_into_index (118 samples, 1.43%)</title><rect x="30.5462%" y="629" width="1.4258%" height="15" fill="rgb(249,42,33)"/><text x="30.7962%" y="639.50"></text></g><g><title>std::time::Instant::elapsed (9 samples, 0.11%)</title><rect x="31.8632%" y="613" width="0.1087%" height="15" fill="rgb(242,149,17)"/><text x="32.1132%" y="623.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="31.9841%" y="613" width="0.1087%" height="15" fill="rgb(244,29,21)"/><text x="32.2341%" y="623.50"></text></g><g><title>decor_mem::views::Views::insert (186 samples, 2.25%)</title><rect x="29.9541%" y="645" width="2.2475%" height="15" fill="rgb(220,130,37)"/><text x="30.2041%" y="655.50">d..</text></g><g><title>decor_mem::views::View::insert_row (19 samples, 0.23%)</title><rect x="31.9720%" y="629" width="0.2296%" height="15" fill="rgb(211,67,2)"/><text x="32.2220%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.11%)</title><rect x="32.0928%" y="613" width="0.1087%" height="15" fill="rgb(235,68,52)"/><text x="32.3428%" y="623.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::generate_new_entities_from (420 samples, 5.07%)</title><rect x="27.1387%" y="661" width="5.0749%" height="15" fill="rgb(246,142,3)"/><text x="27.3887%" y="671.50">decor_..</text></g><g><title>core::fmt::write (13 samples, 0.16%)</title><rect x="32.3586%" y="645" width="0.1571%" height="15" fill="rgb(241,25,7)"/><text x="32.6086%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (13 samples, 0.16%)</title><rect x="32.3586%" y="629" width="0.1571%" height="15" fill="rgb(242,119,39)"/><text x="32.6086%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (30 samples, 0.36%)</title><rect x="32.2136%" y="661" width="0.3625%" height="15" fill="rgb(241,98,45)"/><text x="32.4636%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe_child_parent_edges (29 samples, 0.35%)</title><rect x="32.5761%" y="661" width="0.3504%" height="15" fill="rgb(254,28,30)"/><text x="32.8261%" y="671.50"></text></g><g><title>decor_mem::helpers::expr_to_col (11 samples, 0.13%)</title><rect x="32.9507%" y="581" width="0.1329%" height="15" fill="rgb(241,142,54)"/><text x="33.2007%" y="591.50"></text></g><g><title>core::fmt::write (11 samples, 0.13%)</title><rect x="32.9507%" y="565" width="0.1329%" height="15" fill="rgb(222,85,15)"/><text x="33.2007%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (11 samples, 0.13%)</title><rect x="32.9507%" y="549" width="0.1329%" height="15" fill="rgb(210,85,47)"/><text x="33.2007%" y="559.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (14 samples, 0.17%)</title><rect x="32.9265%" y="613" width="0.1692%" height="15" fill="rgb(224,206,25)"/><text x="33.1765%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (14 samples, 0.17%)</title><rect x="32.9265%" y="597" width="0.1692%" height="15" fill="rgb(243,201,19)"/><text x="33.1765%" y="607.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="33.2165%" y="405" width="0.1208%" height="15" fill="rgb(236,59,4)"/><text x="33.4665%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.22%)</title><rect x="33.1440%" y="597" width="0.2175%" height="15" fill="rgb(254,179,45)"/><text x="33.3940%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="33.2165%" y="581" width="0.1450%" height="15" fill="rgb(226,14,10)"/><text x="33.4665%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="33.2165%" y="565" width="0.1450%" height="15" fill="rgb(244,27,41)"/><text x="33.4665%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.14%)</title><rect x="33.2165%" y="549" width="0.1450%" height="15" fill="rgb(235,35,32)"/><text x="33.4665%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.14%)</title><rect x="33.2165%" y="533" width="0.1450%" height="15" fill="rgb(218,68,31)"/><text x="33.4665%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.14%)</title><rect x="33.2165%" y="517" width="0.1450%" height="15" fill="rgb(207,120,37)"/><text x="33.4665%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.14%)</title><rect x="33.2165%" y="501" width="0.1450%" height="15" fill="rgb(227,98,0)"/><text x="33.4665%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="33.2165%" y="485" width="0.1450%" height="15" fill="rgb(207,7,3)"/><text x="33.4665%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.14%)</title><rect x="33.2165%" y="469" width="0.1450%" height="15" fill="rgb(206,98,19)"/><text x="33.4665%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (12 samples, 0.14%)</title><rect x="33.2165%" y="453" width="0.1450%" height="15" fill="rgb(217,5,26)"/><text x="33.4665%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.14%)</title><rect x="33.2165%" y="437" width="0.1450%" height="15" fill="rgb(235,190,38)"/><text x="33.4665%" y="447.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.14%)</title><rect x="33.2165%" y="421" width="0.1450%" height="15" fill="rgb(247,86,24)"/><text x="33.4665%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (22 samples, 0.27%)</title><rect x="33.4703%" y="517" width="0.2658%" height="15" fill="rgb(205,101,16)"/><text x="33.7203%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (14 samples, 0.17%)</title><rect x="33.5669%" y="501" width="0.1692%" height="15" fill="rgb(246,168,33)"/><text x="33.8169%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (27 samples, 0.33%)</title><rect x="33.4461%" y="549" width="0.3262%" height="15" fill="rgb(231,114,1)"/><text x="33.6961%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (27 samples, 0.33%)</title><rect x="33.4461%" y="533" width="0.3262%" height="15" fill="rgb(207,184,53)"/><text x="33.6961%" y="543.50"></text></g><g><title>decor_mem::helpers::expr_to_col (42 samples, 0.51%)</title><rect x="33.4340%" y="597" width="0.5075%" height="15" fill="rgb(224,95,51)"/><text x="33.6840%" y="607.50"></text></g><g><title>core::fmt::write (42 samples, 0.51%)</title><rect x="33.4340%" y="581" width="0.5075%" height="15" fill="rgb(212,188,45)"/><text x="33.6840%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (42 samples, 0.51%)</title><rect x="33.4340%" y="565" width="0.5075%" height="15" fill="rgb(223,154,38)"/><text x="33.6840%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.13%)</title><rect x="33.8086%" y="549" width="0.1329%" height="15" fill="rgb(251,22,52)"/><text x="34.0586%" y="559.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (92 samples, 1.11%)</title><rect x="32.9265%" y="629" width="1.1116%" height="15" fill="rgb(229,209,22)"/><text x="33.1765%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (78 samples, 0.94%)</title><rect x="33.0957%" y="613" width="0.9425%" height="15" fill="rgb(234,138,34)"/><text x="33.3457%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (98 samples, 1.18%)</title><rect x="32.9265%" y="645" width="1.1841%" height="15" fill="rgb(212,95,11)"/><text x="33.1765%" y="655.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (18 samples, 0.22%)</title><rect x="34.1953%" y="629" width="0.2175%" height="15" fill="rgb(240,179,47)"/><text x="34.4453%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="34.2436%" y="613" width="0.1692%" height="15" fill="rgb(240,163,11)"/><text x="34.4936%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.17%)</title><rect x="34.2436%" y="597" width="0.1692%" height="15" fill="rgb(236,37,12)"/><text x="34.4936%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="34.2798%" y="581" width="0.1329%" height="15" fill="rgb(232,164,16)"/><text x="34.5298%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="34.2798%" y="565" width="0.1329%" height="15" fill="rgb(244,205,15)"/><text x="34.5298%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.13%)</title><rect x="34.2798%" y="549" width="0.1329%" height="15" fill="rgb(223,117,47)"/><text x="34.5298%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.13%)</title><rect x="34.2798%" y="533" width="0.1329%" height="15" fill="rgb(244,107,35)"/><text x="34.5298%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.12%)</title><rect x="34.2919%" y="517" width="0.1208%" height="15" fill="rgb(205,140,8)"/><text x="34.5419%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (10 samples, 0.12%)</title><rect x="34.2919%" y="501" width="0.1208%" height="15" fill="rgb(228,84,46)"/><text x="34.5419%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.12%)</title><rect x="34.2919%" y="485" width="0.1208%" height="15" fill="rgb(254,188,9)"/><text x="34.5419%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.12%)</title><rect x="34.2919%" y="469" width="0.1208%" height="15" fill="rgb(206,112,54)"/><text x="34.5419%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (10 samples, 0.12%)</title><rect x="34.2919%" y="453" width="0.1208%" height="15" fill="rgb(216,84,49)"/><text x="34.5419%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.12%)</title><rect x="34.2919%" y="437" width="0.1208%" height="15" fill="rgb(214,194,35)"/><text x="34.5419%" y="447.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.12%)</title><rect x="34.2919%" y="421" width="0.1208%" height="15" fill="rgb(249,28,3)"/><text x="34.5419%" y="431.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="34.2919%" y="405" width="0.1208%" height="15" fill="rgb(222,56,52)"/><text x="34.5419%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.17%)</title><rect x="34.4853%" y="597" width="0.1692%" height="15" fill="rgb(245,217,50)"/><text x="34.7353%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (15 samples, 0.18%)</title><rect x="34.4853%" y="613" width="0.1812%" height="15" fill="rgb(213,201,24)"/><text x="34.7353%" y="623.50"></text></g><g><title>core::fmt::write (21 samples, 0.25%)</title><rect x="34.8357%" y="613" width="0.2537%" height="15" fill="rgb(248,116,28)"/><text x="35.0857%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (20 samples, 0.24%)</title><rect x="34.8478%" y="597" width="0.2417%" height="15" fill="rgb(219,72,43)"/><text x="35.0978%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.18%)</title><rect x="34.9082%" y="581" width="0.1812%" height="15" fill="rgb(209,138,14)"/><text x="35.1582%" y="591.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (227 samples, 2.74%)</title><rect x="42.0855%" y="581" width="2.7429%" height="15" fill="rgb(222,18,33)"/><text x="42.3355%" y="591.50">de..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (808 samples, 9.76%)</title><rect x="35.1377%" y="613" width="9.7632%" height="15" fill="rgb(213,199,7)"/><text x="35.3877%" y="623.50">decor_mem::sel..</text></g><g><title>decor_mem::select::predicates::pred_matches_row (445 samples, 5.38%)</title><rect x="39.5239%" y="597" width="5.3770%" height="15" fill="rgb(250,110,10)"/><text x="39.7739%" y="607.50">decor_m..</text></g><g><title>malloc_consolidate (14 samples, 0.17%)</title><rect x="45.4326%" y="549" width="0.1692%" height="15" fill="rgb(248,123,6)"/><text x="45.6826%" y="559.50"></text></g><g><title>perf_event_mmap (20 samples, 0.24%)</title><rect x="45.6622%" y="437" width="0.2417%" height="15" fill="rgb(206,91,31)"/><text x="45.9122%" y="447.50"></text></g><g><title>perf_iterate_sb (18 samples, 0.22%)</title><rect x="45.6863%" y="421" width="0.2175%" height="15" fill="rgb(211,154,13)"/><text x="45.9363%" y="431.50"></text></g><g><title>perf_iterate_ctx (16 samples, 0.19%)</title><rect x="45.7105%" y="405" width="0.1933%" height="15" fill="rgb(225,148,7)"/><text x="45.9605%" y="415.50"></text></g><g><title>perf_event_mmap_output (12 samples, 0.14%)</title><rect x="45.7588%" y="389" width="0.1450%" height="15" fill="rgb(220,160,43)"/><text x="46.0088%" y="399.50"></text></g><g><title>__GI___mprotect (28 samples, 0.34%)</title><rect x="45.6138%" y="533" width="0.3383%" height="15" fill="rgb(213,52,39)"/><text x="45.8638%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 0.34%)</title><rect x="45.6138%" y="517" width="0.3383%" height="15" fill="rgb(243,137,7)"/><text x="45.8638%" y="527.50"></text></g><g><title>do_syscall_64 (28 samples, 0.34%)</title><rect x="45.6138%" y="501" width="0.3383%" height="15" fill="rgb(230,79,13)"/><text x="45.8638%" y="511.50"></text></g><g><title>__x64_sys_mprotect (28 samples, 0.34%)</title><rect x="45.6138%" y="485" width="0.3383%" height="15" fill="rgb(247,105,23)"/><text x="45.8638%" y="495.50"></text></g><g><title>do_mprotect_pkey (28 samples, 0.34%)</title><rect x="45.6138%" y="469" width="0.3383%" height="15" fill="rgb(223,179,41)"/><text x="45.8638%" y="479.50"></text></g><g><title>mprotect_fixup (27 samples, 0.33%)</title><rect x="45.6259%" y="453" width="0.3262%" height="15" fill="rgb(218,9,34)"/><text x="45.8759%" y="463.50"></text></g><g><title>page_fault (15 samples, 0.18%)</title><rect x="45.9763%" y="533" width="0.1812%" height="15" fill="rgb(222,106,8)"/><text x="46.2263%" y="543.50"></text></g><g><title>do_user_addr_fault (14 samples, 0.17%)</title><rect x="45.9884%" y="517" width="0.1692%" height="15" fill="rgb(211,220,0)"/><text x="46.2384%" y="527.50"></text></g><g><title>handle_mm_fault (14 samples, 0.17%)</title><rect x="45.9884%" y="501" width="0.1692%" height="15" fill="rgb(229,52,16)"/><text x="46.2384%" y="511.50"></text></g><g><title>__handle_mm_fault (13 samples, 0.16%)</title><rect x="46.0005%" y="485" width="0.1571%" height="15" fill="rgb(212,155,18)"/><text x="46.2505%" y="495.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.92%)</title><rect x="45.2634%" y="581" width="0.9183%" height="15" fill="rgb(242,21,14)"/><text x="45.5134%" y="591.50"></text></g><g><title>_int_malloc (75 samples, 0.91%)</title><rect x="45.2755%" y="565" width="0.9062%" height="15" fill="rgb(222,19,48)"/><text x="45.5255%" y="575.50"></text></g><g><title>sysmalloc (48 samples, 0.58%)</title><rect x="45.6017%" y="549" width="0.5800%" height="15" fill="rgb(232,45,27)"/><text x="45.8517%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.22%)</title><rect x="46.1817%" y="581" width="0.2175%" height="15" fill="rgb(249,103,42)"/><text x="46.4317%" y="591.50"></text></g><g><title>clear_page_erms (15 samples, 0.18%)</title><rect x="46.8705%" y="437" width="0.1812%" height="15" fill="rgb(246,81,33)"/><text x="47.1205%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (26 samples, 0.31%)</title><rect x="46.7496%" y="501" width="0.3142%" height="15" fill="rgb(252,33,42)"/><text x="46.9996%" y="511.50"></text></g><g><title>get_page_from_freelist (25 samples, 0.30%)</title><rect x="46.7617%" y="485" width="0.3021%" height="15" fill="rgb(209,212,41)"/><text x="47.0117%" y="495.50"></text></g><g><title>prep_new_page (17 samples, 0.21%)</title><rect x="46.8584%" y="469" width="0.2054%" height="15" fill="rgb(207,154,6)"/><text x="47.1084%" y="479.50"></text></g><g><title>kernel_init_free_pages (17 samples, 0.21%)</title><rect x="46.8584%" y="453" width="0.2054%" height="15" fill="rgb(223,64,47)"/><text x="47.1084%" y="463.50"></text></g><g><title>alloc_pages_vma (29 samples, 0.35%)</title><rect x="46.7255%" y="517" width="0.3504%" height="15" fill="rgb(211,161,38)"/><text x="46.9755%" y="527.50"></text></g><g><title>mem_cgroup_try_charge_delay (19 samples, 0.23%)</title><rect x="47.1000%" y="517" width="0.2296%" height="15" fill="rgb(219,138,40)"/><text x="47.3500%" y="527.50"></text></g><g><title>mem_cgroup_try_charge (14 samples, 0.17%)</title><rect x="47.1605%" y="501" width="0.1692%" height="15" fill="rgb(241,228,46)"/><text x="47.4105%" y="511.50"></text></g><g><title>__handle_mm_fault (64 samples, 0.77%)</title><rect x="46.5805%" y="533" width="0.7733%" height="15" fill="rgb(223,209,38)"/><text x="46.8305%" y="543.50"></text></g><g><title>page_fault (75 samples, 0.91%)</title><rect x="46.4838%" y="581" width="0.9062%" height="15" fill="rgb(236,164,45)"/><text x="46.7338%" y="591.50"></text></g><g><title>do_user_addr_fault (74 samples, 0.89%)</title><rect x="46.4959%" y="565" width="0.8942%" height="15" fill="rgb(231,15,5)"/><text x="46.7459%" y="575.50"></text></g><g><title>handle_mm_fault (71 samples, 0.86%)</title><rect x="46.5321%" y="549" width="0.8579%" height="15" fill="rgb(252,35,15)"/><text x="46.7821%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (209 samples, 2.53%)</title><rect x="45.0459%" y="597" width="2.5254%" height="15" fill="rgb(248,181,18)"/><text x="45.2959%" y="607.50">&lt;h..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (15 samples, 0.18%)</title><rect x="47.3900%" y="581" width="0.1812%" height="15" fill="rgb(233,39,42)"/><text x="47.6400%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (14 samples, 0.17%)</title><rect x="47.4021%" y="565" width="0.1692%" height="15" fill="rgb(238,110,33)"/><text x="47.6521%" y="575.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (241 samples, 2.91%)</title><rect x="44.9009%" y="613" width="2.9120%" height="15" fill="rgb(233,195,10)"/><text x="45.1509%" y="623.50">de..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (1,239 samples, 14.97%)</title><rect x="32.9265%" y="661" width="14.9710%" height="15" fill="rgb(254,105,3)"/><text x="33.1765%" y="671.50">decor_mem::select::sele..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (1,141 samples, 13.79%)</title><rect x="34.1107%" y="645" width="13.7869%" height="15" fill="rgb(221,225,9)"/><text x="34.3607%" y="655.50">decor_mem::select::pr..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (1,116 samples, 13.48%)</title><rect x="34.4128%" y="629" width="13.4848%" height="15" fill="rgb(224,227,45)"/><text x="34.6628%" y="639.50">decor_mem::select::p..</text></g><g><title>decor_mem::Shim::run_on_tcp (2,918 samples, 35.26%)</title><rect x="12.6994%" y="741" width="35.2586%" height="15" fill="rgb(229,198,43)"/><text x="12.9494%" y="751.50">decor_mem::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2,918 samples, 35.26%)</title><rect x="12.6994%" y="725" width="35.2586%" height="15" fill="rgb(206,209,35)"/><text x="12.9494%" y="735.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (2,918 samples, 35.26%)</title><rect x="12.6994%" y="709" width="35.2586%" height="15" fill="rgb(245,195,53)"/><text x="12.9494%" y="719.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (1,882 samples, 22.74%)</title><rect x="25.2175%" y="693" width="22.7405%" height="15" fill="rgb(240,92,26)"/><text x="25.4675%" y="703.50">&lt;decor_mem::Shim as msql_srv::MysqlS..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (1,882 samples, 22.74%)</title><rect x="25.2175%" y="677" width="22.7405%" height="15" fill="rgb(207,40,23)"/><text x="25.4675%" y="687.50">decor_mem::query_transformer::QueryT..</text></g><g><title>decor_mem::helpers::parser_vals_cmp (51 samples, 0.62%)</title><rect x="48.0304%" y="741" width="0.6162%" height="15" fill="rgb(223,111,35)"/><text x="48.2804%" y="751.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (45 samples, 0.54%)</title><rect x="48.8279%" y="741" width="0.5437%" height="15" fill="rgb(229,147,28)"/><text x="49.0779%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (10 samples, 0.12%)</title><rect x="49.6013%" y="741" width="0.1208%" height="15" fill="rgb(211,29,28)"/><text x="49.8513%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.12%)</title><rect x="49.6013%" y="725" width="0.1208%" height="15" fill="rgb(228,72,33)"/><text x="49.8513%" y="735.50"></text></g><g><title>sk_wait_data (14 samples, 0.17%)</title><rect x="49.8913%" y="437" width="0.1692%" height="15" fill="rgb(205,214,31)"/><text x="50.1413%" y="447.50"></text></g><g><title>wait_woken (13 samples, 0.16%)</title><rect x="49.9033%" y="421" width="0.1571%" height="15" fill="rgb(224,111,15)"/><text x="50.1533%" y="431.50"></text></g><g><title>schedule_timeout (12 samples, 0.14%)</title><rect x="49.9154%" y="405" width="0.1450%" height="15" fill="rgb(253,21,26)"/><text x="50.1654%" y="415.50"></text></g><g><title>schedule (12 samples, 0.14%)</title><rect x="49.9154%" y="389" width="0.1450%" height="15" fill="rgb(245,139,43)"/><text x="50.1654%" y="399.50"></text></g><g><title>__schedule (12 samples, 0.14%)</title><rect x="49.9154%" y="373" width="0.1450%" height="15" fill="rgb(252,170,7)"/><text x="50.1654%" y="383.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.24%)</title><rect x="49.8308%" y="533" width="0.2417%" height="15" fill="rgb(231,118,14)"/><text x="50.0808%" y="543.50"></text></g><g><title>do_syscall_64 (19 samples, 0.23%)</title><rect x="49.8429%" y="517" width="0.2296%" height="15" fill="rgb(238,83,0)"/><text x="50.0929%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 0.23%)</title><rect x="49.8429%" y="501" width="0.2296%" height="15" fill="rgb(221,39,39)"/><text x="50.0929%" y="511.50"></text></g><g><title>__sys_recvfrom (19 samples, 0.23%)</title><rect x="49.8429%" y="485" width="0.2296%" height="15" fill="rgb(222,119,46)"/><text x="50.0929%" y="495.50"></text></g><g><title>inet_recvmsg (18 samples, 0.22%)</title><rect x="49.8550%" y="469" width="0.2175%" height="15" fill="rgb(222,165,49)"/><text x="50.1050%" y="479.50"></text></g><g><title>tcp_recvmsg (17 samples, 0.21%)</title><rect x="49.8671%" y="453" width="0.2054%" height="15" fill="rgb(219,113,52)"/><text x="50.1171%" y="463.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (24 samples, 0.29%)</title><rect x="49.7946%" y="677" width="0.2900%" height="15" fill="rgb(214,7,15)"/><text x="50.0446%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (23 samples, 0.28%)</title><rect x="49.8067%" y="661" width="0.2779%" height="15" fill="rgb(235,32,4)"/><text x="50.0567%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.27%)</title><rect x="49.8188%" y="645" width="0.2658%" height="15" fill="rgb(238,90,54)"/><text x="50.0688%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 0.27%)</title><rect x="49.8188%" y="629" width="0.2658%" height="15" fill="rgb(213,208,19)"/><text x="50.0688%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 0.27%)</title><rect x="49.8188%" y="613" width="0.2658%" height="15" fill="rgb(233,156,4)"/><text x="50.0688%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 0.27%)</title><rect x="49.8188%" y="597" width="0.2658%" height="15" fill="rgb(207,194,5)"/><text x="50.0688%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 0.27%)</title><rect x="49.8188%" y="581" width="0.2658%" height="15" fill="rgb(206,111,30)"/><text x="50.0688%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 0.27%)</title><rect x="49.8188%" y="565" width="0.2658%" height="15" fill="rgb(243,70,54)"/><text x="50.0688%" y="575.50"></text></g><g><title>__libc_recv (22 samples, 0.27%)</title><rect x="49.8188%" y="549" width="0.2658%" height="15" fill="rgb(242,28,8)"/><text x="50.0688%" y="559.50"></text></g><g><title>tcp_v4_do_rcv (22 samples, 0.27%)</title><rect x="50.3383%" y="197" width="0.2658%" height="15" fill="rgb(219,106,18)"/><text x="50.5883%" y="207.50"></text></g><g><title>tcp_rcv_established (22 samples, 0.27%)</title><rect x="50.3383%" y="181" width="0.2658%" height="15" fill="rgb(244,222,10)"/><text x="50.5883%" y="191.50"></text></g><g><title>ip_local_deliver (28 samples, 0.34%)</title><rect x="50.2779%" y="261" width="0.3383%" height="15" fill="rgb(236,179,52)"/><text x="50.5279%" y="271.50"></text></g><g><title>ip_local_deliver_finish (28 samples, 0.34%)</title><rect x="50.2779%" y="245" width="0.3383%" height="15" fill="rgb(213,23,39)"/><text x="50.5279%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (28 samples, 0.34%)</title><rect x="50.2779%" y="229" width="0.3383%" height="15" fill="rgb(238,48,10)"/><text x="50.5279%" y="239.50"></text></g><g><title>tcp_v4_rcv (28 samples, 0.34%)</title><rect x="50.2779%" y="213" width="0.3383%" height="15" fill="rgb(251,196,23)"/><text x="50.5279%" y="223.50"></text></g><g><title>__ip_queue_xmit (39 samples, 0.47%)</title><rect x="50.1571%" y="437" width="0.4712%" height="15" fill="rgb(250,152,24)"/><text x="50.4071%" y="447.50"></text></g><g><title>ip_output (35 samples, 0.42%)</title><rect x="50.2054%" y="421" width="0.4229%" height="15" fill="rgb(209,150,17)"/><text x="50.4554%" y="431.50"></text></g><g><title>ip_finish_output2 (35 samples, 0.42%)</title><rect x="50.2054%" y="405" width="0.4229%" height="15" fill="rgb(234,202,34)"/><text x="50.4554%" y="415.50"></text></g><g><title>__local_bh_enable_ip (33 samples, 0.40%)</title><rect x="50.2296%" y="389" width="0.3987%" height="15" fill="rgb(253,148,53)"/><text x="50.4796%" y="399.50"></text></g><g><title>do_softirq (33 samples, 0.40%)</title><rect x="50.2296%" y="373" width="0.3987%" height="15" fill="rgb(218,129,16)"/><text x="50.4796%" y="383.50"></text></g><g><title>do_softirq_own_stack (33 samples, 0.40%)</title><rect x="50.2296%" y="357" width="0.3987%" height="15" fill="rgb(216,85,19)"/><text x="50.4796%" y="367.50"></text></g><g><title>__do_softirq (33 samples, 0.40%)</title><rect x="50.2296%" y="341" width="0.3987%" height="15" fill="rgb(235,228,7)"/><text x="50.4796%" y="351.50"></text></g><g><title>net_rx_action (32 samples, 0.39%)</title><rect x="50.2417%" y="325" width="0.3867%" height="15" fill="rgb(245,175,0)"/><text x="50.4917%" y="335.50"></text></g><g><title>process_backlog (32 samples, 0.39%)</title><rect x="50.2417%" y="309" width="0.3867%" height="15" fill="rgb(208,168,36)"/><text x="50.4917%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (30 samples, 0.36%)</title><rect x="50.2658%" y="293" width="0.3625%" height="15" fill="rgb(246,171,24)"/><text x="50.5158%" y="303.50"></text></g><g><title>ip_rcv (29 samples, 0.35%)</title><rect x="50.2779%" y="277" width="0.3504%" height="15" fill="rgb(215,142,24)"/><text x="50.5279%" y="287.50"></text></g><g><title>__tcp_transmit_skb (44 samples, 0.53%)</title><rect x="50.1087%" y="453" width="0.5317%" height="15" fill="rgb(250,187,7)"/><text x="50.3587%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (45 samples, 0.54%)</title><rect x="50.1087%" y="485" width="0.5437%" height="15" fill="rgb(228,66,33)"/><text x="50.3587%" y="495.50"></text></g><g><title>tcp_write_xmit (45 samples, 0.54%)</title><rect x="50.1087%" y="469" width="0.5437%" height="15" fill="rgb(234,215,21)"/><text x="50.3587%" y="479.50"></text></g><g><title>sock_sendmsg (51 samples, 0.62%)</title><rect x="50.1087%" y="533" width="0.6162%" height="15" fill="rgb(222,191,20)"/><text x="50.3587%" y="543.50"></text></g><g><title>tcp_sendmsg (51 samples, 0.62%)</title><rect x="50.1087%" y="517" width="0.6162%" height="15" fill="rgb(245,79,54)"/><text x="50.3587%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (51 samples, 0.62%)</title><rect x="50.1087%" y="501" width="0.6162%" height="15" fill="rgb(240,10,37)"/><text x="50.3587%" y="511.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (78 samples, 0.94%)</title><rect x="49.7946%" y="725" width="0.9425%" height="15" fill="rgb(214,192,32)"/><text x="50.0446%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (78 samples, 0.94%)</title><rect x="49.7946%" y="709" width="0.9425%" height="15" fill="rgb(209,36,54)"/><text x="50.0446%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (78 samples, 0.94%)</title><rect x="49.7946%" y="693" width="0.9425%" height="15" fill="rgb(220,10,11)"/><text x="50.0446%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (54 samples, 0.65%)</title><rect x="50.0846%" y="677" width="0.6525%" height="15" fill="rgb(221,106,17)"/><text x="50.3346%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (54 samples, 0.65%)</title><rect x="50.0846%" y="661" width="0.6525%" height="15" fill="rgb(251,142,44)"/><text x="50.3346%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (53 samples, 0.64%)</title><rect x="50.0967%" y="645" width="0.6404%" height="15" fill="rgb(238,13,15)"/><text x="50.3467%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (53 samples, 0.64%)</title><rect x="50.0967%" y="629" width="0.6404%" height="15" fill="rgb(208,107,27)"/><text x="50.3467%" y="639.50"></text></g><g><title>__libc_send (53 samples, 0.64%)</title><rect x="50.0967%" y="613" width="0.6404%" height="15" fill="rgb(205,136,37)"/><text x="50.3467%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (53 samples, 0.64%)</title><rect x="50.0967%" y="597" width="0.6404%" height="15" fill="rgb(250,205,27)"/><text x="50.3467%" y="607.50"></text></g><g><title>do_syscall_64 (53 samples, 0.64%)</title><rect x="50.0967%" y="581" width="0.6404%" height="15" fill="rgb(210,80,43)"/><text x="50.3467%" y="591.50"></text></g><g><title>__x64_sys_sendto (53 samples, 0.64%)</title><rect x="50.0967%" y="565" width="0.6404%" height="15" fill="rgb(247,160,36)"/><text x="50.3467%" y="575.50"></text></g><g><title>__sys_sendto (53 samples, 0.64%)</title><rect x="50.0967%" y="549" width="0.6404%" height="15" fill="rgb(234,13,49)"/><text x="50.3467%" y="559.50"></text></g><g><title>sk_wait_data (13 samples, 0.16%)</title><rect x="50.8458%" y="437" width="0.1571%" height="15" fill="rgb(234,122,0)"/><text x="51.0958%" y="447.50"></text></g><g><title>wait_woken (12 samples, 0.14%)</title><rect x="50.8579%" y="421" width="0.1450%" height="15" fill="rgb(207,146,38)"/><text x="51.1079%" y="431.50"></text></g><g><title>schedule_timeout (12 samples, 0.14%)</title><rect x="50.8579%" y="405" width="0.1450%" height="15" fill="rgb(207,177,25)"/><text x="51.1079%" y="415.50"></text></g><g><title>schedule (12 samples, 0.14%)</title><rect x="50.8579%" y="389" width="0.1450%" height="15" fill="rgb(211,178,42)"/><text x="51.1079%" y="399.50"></text></g><g><title>__schedule (12 samples, 0.14%)</title><rect x="50.8579%" y="373" width="0.1450%" height="15" fill="rgb(230,69,54)"/><text x="51.1079%" y="383.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 0.24%)</title><rect x="50.8217%" y="501" width="0.2417%" height="15" fill="rgb(214,135,41)"/><text x="51.0717%" y="511.50"></text></g><g><title>__sys_recvfrom (20 samples, 0.24%)</title><rect x="50.8217%" y="485" width="0.2417%" height="15" fill="rgb(237,67,25)"/><text x="51.0717%" y="495.50"></text></g><g><title>inet_recvmsg (20 samples, 0.24%)</title><rect x="50.8217%" y="469" width="0.2417%" height="15" fill="rgb(222,189,50)"/><text x="51.0717%" y="479.50"></text></g><g><title>tcp_recvmsg (20 samples, 0.24%)</title><rect x="50.8217%" y="453" width="0.2417%" height="15" fill="rgb(245,148,34)"/><text x="51.0717%" y="463.50"></text></g><g><title>do_syscall_64 (21 samples, 0.25%)</title><rect x="50.8217%" y="517" width="0.2537%" height="15" fill="rgb(222,29,6)"/><text x="51.0717%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (24 samples, 0.29%)</title><rect x="50.7975%" y="629" width="0.2900%" height="15" fill="rgb(221,189,43)"/><text x="51.0475%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (24 samples, 0.29%)</title><rect x="50.7975%" y="613" width="0.2900%" height="15" fill="rgb(207,36,27)"/><text x="51.0475%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (24 samples, 0.29%)</title><rect x="50.7975%" y="597" width="0.2900%" height="15" fill="rgb(217,90,24)"/><text x="51.0475%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (24 samples, 0.29%)</title><rect x="50.7975%" y="581" width="0.2900%" height="15" fill="rgb(224,66,35)"/><text x="51.0475%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (24 samples, 0.29%)</title><rect x="50.7975%" y="565" width="0.2900%" height="15" fill="rgb(221,13,50)"/><text x="51.0475%" y="575.50"></text></g><g><title>__libc_recv (23 samples, 0.28%)</title><rect x="50.8096%" y="549" width="0.2779%" height="15" fill="rgb(236,68,49)"/><text x="51.0596%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (22 samples, 0.27%)</title><rect x="50.8217%" y="533" width="0.2658%" height="15" fill="rgb(229,146,28)"/><text x="51.0717%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.31%)</title><rect x="50.7854%" y="645" width="0.3142%" height="15" fill="rgb(225,31,38)"/><text x="51.0354%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (33 samples, 0.40%)</title><rect x="50.7371%" y="677" width="0.3987%" height="15" fill="rgb(250,208,3)"/><text x="50.9871%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (32 samples, 0.39%)</title><rect x="50.7492%" y="661" width="0.3867%" height="15" fill="rgb(246,54,23)"/><text x="50.9992%" y="671.50"></text></g><g><title>__netif_receive_skb_one_core (22 samples, 0.27%)</title><rect x="51.3654%" y="293" width="0.2658%" height="15" fill="rgb(243,76,11)"/><text x="51.6154%" y="303.50"></text></g><g><title>ip_rcv (21 samples, 0.25%)</title><rect x="51.3775%" y="277" width="0.2537%" height="15" fill="rgb(245,21,50)"/><text x="51.6275%" y="287.50"></text></g><g><title>ip_local_deliver (20 samples, 0.24%)</title><rect x="51.3896%" y="261" width="0.2417%" height="15" fill="rgb(228,9,43)"/><text x="51.6396%" y="271.50"></text></g><g><title>ip_local_deliver_finish (20 samples, 0.24%)</title><rect x="51.3896%" y="245" width="0.2417%" height="15" fill="rgb(208,100,47)"/><text x="51.6396%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (20 samples, 0.24%)</title><rect x="51.3896%" y="229" width="0.2417%" height="15" fill="rgb(232,26,8)"/><text x="51.6396%" y="239.50"></text></g><g><title>tcp_v4_rcv (19 samples, 0.23%)</title><rect x="51.4016%" y="213" width="0.2296%" height="15" fill="rgb(216,166,38)"/><text x="51.6516%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (16 samples, 0.19%)</title><rect x="51.4379%" y="197" width="0.1933%" height="15" fill="rgb(251,202,51)"/><text x="51.6879%" y="207.50"></text></g><g><title>tcp_rcv_established (16 samples, 0.19%)</title><rect x="51.4379%" y="181" width="0.1933%" height="15" fill="rgb(254,216,34)"/><text x="51.6879%" y="191.50"></text></g><g><title>__ip_queue_xmit (35 samples, 0.42%)</title><rect x="51.2204%" y="437" width="0.4229%" height="15" fill="rgb(251,32,27)"/><text x="51.4704%" y="447.50"></text></g><g><title>ip_output (33 samples, 0.40%)</title><rect x="51.2446%" y="421" width="0.3987%" height="15" fill="rgb(208,127,28)"/><text x="51.4946%" y="431.50"></text></g><g><title>ip_finish_output2 (32 samples, 0.39%)</title><rect x="51.2566%" y="405" width="0.3867%" height="15" fill="rgb(224,137,22)"/><text x="51.5066%" y="415.50"></text></g><g><title>__local_bh_enable_ip (26 samples, 0.31%)</title><rect x="51.3291%" y="389" width="0.3142%" height="15" fill="rgb(254,70,32)"/><text x="51.5791%" y="399.50"></text></g><g><title>do_softirq (26 samples, 0.31%)</title><rect x="51.3291%" y="373" width="0.3142%" height="15" fill="rgb(229,75,37)"/><text x="51.5791%" y="383.50"></text></g><g><title>do_softirq_own_stack (25 samples, 0.30%)</title><rect x="51.3412%" y="357" width="0.3021%" height="15" fill="rgb(252,64,23)"/><text x="51.5912%" y="367.50"></text></g><g><title>__do_softirq (25 samples, 0.30%)</title><rect x="51.3412%" y="341" width="0.3021%" height="15" fill="rgb(232,162,48)"/><text x="51.5912%" y="351.50"></text></g><g><title>net_rx_action (23 samples, 0.28%)</title><rect x="51.3654%" y="325" width="0.2779%" height="15" fill="rgb(246,160,12)"/><text x="51.6154%" y="335.50"></text></g><g><title>process_backlog (23 samples, 0.28%)</title><rect x="51.3654%" y="309" width="0.2779%" height="15" fill="rgb(247,166,0)"/><text x="51.6154%" y="319.50"></text></g><g><title>__tcp_transmit_skb (36 samples, 0.43%)</title><rect x="51.2204%" y="453" width="0.4350%" height="15" fill="rgb(249,219,21)"/><text x="51.4704%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (38 samples, 0.46%)</title><rect x="51.2204%" y="485" width="0.4592%" height="15" fill="rgb(205,209,3)"/><text x="51.4704%" y="495.50"></text></g><g><title>tcp_write_xmit (38 samples, 0.46%)</title><rect x="51.2204%" y="469" width="0.4592%" height="15" fill="rgb(243,44,1)"/><text x="51.4704%" y="479.50"></text></g><g><title>__x64_sys_sendto (46 samples, 0.56%)</title><rect x="51.1721%" y="565" width="0.5558%" height="15" fill="rgb(206,159,16)"/><text x="51.4221%" y="575.50"></text></g><g><title>__sys_sendto (46 samples, 0.56%)</title><rect x="51.1721%" y="549" width="0.5558%" height="15" fill="rgb(244,77,30)"/><text x="51.4221%" y="559.50"></text></g><g><title>sock_sendmsg (44 samples, 0.53%)</title><rect x="51.1962%" y="533" width="0.5317%" height="15" fill="rgb(218,69,12)"/><text x="51.4462%" y="543.50"></text></g><g><title>tcp_sendmsg (44 samples, 0.53%)</title><rect x="51.1962%" y="517" width="0.5317%" height="15" fill="rgb(212,87,7)"/><text x="51.4462%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (43 samples, 0.52%)</title><rect x="51.2083%" y="501" width="0.5196%" height="15" fill="rgb(245,114,25)"/><text x="51.4583%" y="511.50"></text></g><g><title>do_syscall_64 (47 samples, 0.57%)</title><rect x="51.1721%" y="581" width="0.5679%" height="15" fill="rgb(210,61,42)"/><text x="51.4221%" y="591.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (85 samples, 1.03%)</title><rect x="50.7371%" y="709" width="1.0271%" height="15" fill="rgb(211,52,33)"/><text x="50.9871%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (85 samples, 1.03%)</title><rect x="50.7371%" y="693" width="1.0271%" height="15" fill="rgb(234,58,33)"/><text x="50.9871%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (52 samples, 0.63%)</title><rect x="51.1358%" y="677" width="0.6283%" height="15" fill="rgb(220,115,36)"/><text x="51.3858%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 0.63%)</title><rect x="51.1358%" y="661" width="0.6283%" height="15" fill="rgb(243,153,54)"/><text x="51.3858%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 0.60%)</title><rect x="51.1600%" y="645" width="0.6042%" height="15" fill="rgb(251,47,18)"/><text x="51.4100%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (50 samples, 0.60%)</title><rect x="51.1600%" y="629" width="0.6042%" height="15" fill="rgb(242,102,42)"/><text x="51.4100%" y="639.50"></text></g><g><title>__libc_send (50 samples, 0.60%)</title><rect x="51.1600%" y="613" width="0.6042%" height="15" fill="rgb(234,31,38)"/><text x="51.4100%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (50 samples, 0.60%)</title><rect x="51.1600%" y="597" width="0.6042%" height="15" fill="rgb(221,117,51)"/><text x="51.4100%" y="607.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.14%)</title><rect x="51.7641%" y="661" width="0.1450%" height="15" fill="rgb(212,20,18)"/><text x="52.0141%" y="671.50"></text></g><g><title>lobsters_microbenchmarks::main (179 samples, 2.16%)</title><rect x="49.7583%" y="741" width="2.1629%" height="15" fill="rgb(245,133,36)"/><text x="50.0083%" y="751.50">l..</text></g><g><title>lobsters_microbenchmarks::queriers::user::unsubscribe_user (98 samples, 1.18%)</title><rect x="50.7371%" y="725" width="1.1841%" height="15" fill="rgb(212,6,19)"/><text x="50.9871%" y="735.50"></text></g><g><title>serde_json::de::from_str (13 samples, 0.16%)</title><rect x="51.7641%" y="709" width="0.1571%" height="15" fill="rgb(218,1,36)"/><text x="52.0141%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (13 samples, 0.16%)</title><rect x="51.7641%" y="693" width="0.1571%" height="15" fill="rgb(246,84,54)"/><text x="52.0141%" y="703.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (13 samples, 0.16%)</title><rect x="51.7641%" y="677" width="0.1571%" height="15" fill="rgb(242,110,6)"/><text x="52.0141%" y="687.50"></text></g><g><title>__netif_receive_skb_one_core (11 samples, 0.13%)</title><rect x="52.1025%" y="261" width="0.1329%" height="15" fill="rgb(214,47,5)"/><text x="52.3525%" y="271.50"></text></g><g><title>ip_rcv (11 samples, 0.13%)</title><rect x="52.1025%" y="245" width="0.1329%" height="15" fill="rgb(218,159,25)"/><text x="52.3525%" y="255.50"></text></g><g><title>ip_local_deliver (11 samples, 0.13%)</title><rect x="52.1025%" y="229" width="0.1329%" height="15" fill="rgb(215,211,28)"/><text x="52.3525%" y="239.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.13%)</title><rect x="52.1025%" y="213" width="0.1329%" height="15" fill="rgb(238,59,32)"/><text x="52.3525%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.13%)</title><rect x="52.1025%" y="197" width="0.1329%" height="15" fill="rgb(226,82,3)"/><text x="52.3525%" y="207.50"></text></g><g><title>tcp_v4_rcv (10 samples, 0.12%)</title><rect x="52.1145%" y="181" width="0.1208%" height="15" fill="rgb(240,164,32)"/><text x="52.3645%" y="191.50"></text></g><g><title>__tcp_transmit_skb (17 samples, 0.21%)</title><rect x="52.0420%" y="421" width="0.2054%" height="15" fill="rgb(232,46,7)"/><text x="52.2920%" y="431.50"></text></g><g><title>__ip_queue_xmit (17 samples, 0.21%)</title><rect x="52.0420%" y="405" width="0.2054%" height="15" fill="rgb(229,129,53)"/><text x="52.2920%" y="415.50"></text></g><g><title>ip_output (17 samples, 0.21%)</title><rect x="52.0420%" y="389" width="0.2054%" height="15" fill="rgb(234,188,29)"/><text x="52.2920%" y="399.50"></text></g><g><title>ip_finish_output2 (16 samples, 0.19%)</title><rect x="52.0541%" y="373" width="0.1933%" height="15" fill="rgb(246,141,4)"/><text x="52.3041%" y="383.50"></text></g><g><title>__local_bh_enable_ip (13 samples, 0.16%)</title><rect x="52.0904%" y="357" width="0.1571%" height="15" fill="rgb(229,23,39)"/><text x="52.3404%" y="367.50"></text></g><g><title>do_softirq (13 samples, 0.16%)</title><rect x="52.0904%" y="341" width="0.1571%" height="15" fill="rgb(206,12,3)"/><text x="52.3404%" y="351.50"></text></g><g><title>do_softirq_own_stack (13 samples, 0.16%)</title><rect x="52.0904%" y="325" width="0.1571%" height="15" fill="rgb(252,226,20)"/><text x="52.3404%" y="335.50"></text></g><g><title>__do_softirq (13 samples, 0.16%)</title><rect x="52.0904%" y="309" width="0.1571%" height="15" fill="rgb(216,123,35)"/><text x="52.3404%" y="319.50"></text></g><g><title>net_rx_action (12 samples, 0.14%)</title><rect x="52.1025%" y="293" width="0.1450%" height="15" fill="rgb(212,68,40)"/><text x="52.3525%" y="303.50"></text></g><g><title>process_backlog (12 samples, 0.14%)</title><rect x="52.1025%" y="277" width="0.1450%" height="15" fill="rgb(254,125,32)"/><text x="52.3525%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (19 samples, 0.23%)</title><rect x="52.0300%" y="453" width="0.2296%" height="15" fill="rgb(253,97,22)"/><text x="52.2800%" y="463.50"></text></g><g><title>tcp_write_xmit (19 samples, 0.23%)</title><rect x="52.0300%" y="437" width="0.2296%" height="15" fill="rgb(241,101,14)"/><text x="52.2800%" y="447.50"></text></g><g><title>__x64_sys_sendto (23 samples, 0.28%)</title><rect x="52.0179%" y="533" width="0.2779%" height="15" fill="rgb(238,103,29)"/><text x="52.2679%" y="543.50"></text></g><g><title>__sys_sendto (23 samples, 0.28%)</title><rect x="52.0179%" y="517" width="0.2779%" height="15" fill="rgb(233,195,47)"/><text x="52.2679%" y="527.50"></text></g><g><title>sock_sendmsg (23 samples, 0.28%)</title><rect x="52.0179%" y="501" width="0.2779%" height="15" fill="rgb(246,218,30)"/><text x="52.2679%" y="511.50"></text></g><g><title>tcp_sendmsg (23 samples, 0.28%)</title><rect x="52.0179%" y="485" width="0.2779%" height="15" fill="rgb(219,145,47)"/><text x="52.2679%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (22 samples, 0.27%)</title><rect x="52.0300%" y="469" width="0.2658%" height="15" fill="rgb(243,12,26)"/><text x="52.2800%" y="479.50"></text></g><g><title>do_syscall_64 (25 samples, 0.30%)</title><rect x="52.0058%" y="549" width="0.3021%" height="15" fill="rgb(214,87,16)"/><text x="52.2558%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (26 samples, 0.31%)</title><rect x="52.0058%" y="565" width="0.3142%" height="15" fill="rgb(208,99,42)"/><text x="52.2558%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (28 samples, 0.34%)</title><rect x="51.9937%" y="661" width="0.3383%" height="15" fill="rgb(253,99,2)"/><text x="52.2437%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (28 samples, 0.34%)</title><rect x="51.9937%" y="645" width="0.3383%" height="15" fill="rgb(220,168,23)"/><text x="52.2437%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (27 samples, 0.33%)</title><rect x="52.0058%" y="629" width="0.3262%" height="15" fill="rgb(242,38,24)"/><text x="52.2558%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (27 samples, 0.33%)</title><rect x="52.0058%" y="613" width="0.3262%" height="15" fill="rgb(225,182,9)"/><text x="52.2558%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (27 samples, 0.33%)</title><rect x="52.0058%" y="597" width="0.3262%" height="15" fill="rgb(243,178,37)"/><text x="52.2558%" y="607.50"></text></g><g><title>__libc_send (27 samples, 0.33%)</title><rect x="52.0058%" y="581" width="0.3262%" height="15" fill="rgb(232,139,19)"/><text x="52.2558%" y="591.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (29 samples, 0.35%)</title><rect x="51.9937%" y="677" width="0.3504%" height="15" fill="rgb(225,201,24)"/><text x="52.2437%" y="687.50"></text></g><g><title>__x64_sys_mprotect (9 samples, 0.11%)</title><rect x="52.5254%" y="533" width="0.1087%" height="15" fill="rgb(221,47,46)"/><text x="52.7754%" y="543.50"></text></g><g><title>do_mprotect_pkey (9 samples, 0.11%)</title><rect x="52.5254%" y="517" width="0.1087%" height="15" fill="rgb(249,23,13)"/><text x="52.7754%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.12%)</title><rect x="52.5254%" y="565" width="0.1208%" height="15" fill="rgb(219,9,5)"/><text x="52.7754%" y="575.50"></text></g><g><title>do_syscall_64 (10 samples, 0.12%)</title><rect x="52.5254%" y="549" width="0.1208%" height="15" fill="rgb(254,171,16)"/><text x="52.7754%" y="559.50"></text></g><g><title>__GI___mprotect (11 samples, 0.13%)</title><rect x="52.5254%" y="581" width="0.1329%" height="15" fill="rgb(230,171,20)"/><text x="52.7754%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (13 samples, 0.16%)</title><rect x="52.5254%" y="645" width="0.1571%" height="15" fill="rgb(210,71,41)"/><text x="52.7754%" y="655.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.16%)</title><rect x="52.5254%" y="629" width="0.1571%" height="15" fill="rgb(206,173,20)"/><text x="52.7754%" y="639.50"></text></g><g><title>_int_malloc (13 samples, 0.16%)</title><rect x="52.5254%" y="613" width="0.1571%" height="15" fill="rgb(233,88,34)"/><text x="52.7754%" y="623.50"></text></g><g><title>sysmalloc (13 samples, 0.16%)</title><rect x="52.5254%" y="597" width="0.1571%" height="15" fill="rgb(223,209,46)"/><text x="52.7754%" y="607.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (63 samples, 0.76%)</title><rect x="51.9333%" y="741" width="0.7612%" height="15" fill="rgb(250,43,18)"/><text x="52.1833%" y="751.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (60 samples, 0.72%)</title><rect x="51.9696%" y="725" width="0.7250%" height="15" fill="rgb(208,13,10)"/><text x="52.2196%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (60 samples, 0.72%)</title><rect x="51.9696%" y="709" width="0.7250%" height="15" fill="rgb(212,200,36)"/><text x="52.2196%" y="719.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (60 samples, 0.72%)</title><rect x="51.9696%" y="693" width="0.7250%" height="15" fill="rgb(225,90,30)"/><text x="52.2196%" y="703.50"></text></g><g><title>decor_mem::views::Views::insert (29 samples, 0.35%)</title><rect x="52.3441%" y="677" width="0.3504%" height="15" fill="rgb(236,182,39)"/><text x="52.5941%" y="687.50"></text></g><g><title>decor_mem::views::View::insert_into_index (29 samples, 0.35%)</title><rect x="52.3441%" y="661" width="0.3504%" height="15" fill="rgb(212,144,35)"/><text x="52.5941%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (20 samples, 0.24%)</title><rect x="52.7429%" y="693" width="0.2417%" height="15" fill="rgb(228,63,44)"/><text x="52.9929%" y="703.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (20 samples, 0.24%)</title><rect x="52.7429%" y="677" width="0.2417%" height="15" fill="rgb(228,109,6)"/><text x="52.9929%" y="687.50"></text></g><g><title>decor_mem::views::Views::insert (11 samples, 0.13%)</title><rect x="52.8516%" y="661" width="0.1329%" height="15" fill="rgb(238,117,24)"/><text x="53.1016%" y="671.50"></text></g><g><title>decor_mem::views::View::insert_into_index (10 samples, 0.12%)</title><rect x="52.8637%" y="645" width="0.1208%" height="15" fill="rgb(242,26,26)"/><text x="53.1137%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (26 samples, 0.31%)</title><rect x="52.7429%" y="709" width="0.3142%" height="15" fill="rgb(221,92,48)"/><text x="52.9929%" y="719.50"></text></g><g><title>sk_wait_data (16 samples, 0.19%)</title><rect x="53.1174%" y="389" width="0.1933%" height="15" fill="rgb(209,209,32)"/><text x="53.3674%" y="399.50"></text></g><g><title>wait_woken (15 samples, 0.18%)</title><rect x="53.1295%" y="373" width="0.1812%" height="15" fill="rgb(221,70,22)"/><text x="53.3795%" y="383.50"></text></g><g><title>schedule_timeout (15 samples, 0.18%)</title><rect x="53.1295%" y="357" width="0.1812%" height="15" fill="rgb(248,145,5)"/><text x="53.3795%" y="367.50"></text></g><g><title>schedule (15 samples, 0.18%)</title><rect x="53.1295%" y="341" width="0.1812%" height="15" fill="rgb(226,116,26)"/><text x="53.3795%" y="351.50"></text></g><g><title>__schedule (15 samples, 0.18%)</title><rect x="53.1295%" y="325" width="0.1812%" height="15" fill="rgb(244,5,17)"/><text x="53.3795%" y="335.50"></text></g><g><title>inet_recvmsg (22 samples, 0.27%)</title><rect x="53.0691%" y="421" width="0.2658%" height="15" fill="rgb(252,159,33)"/><text x="53.3191%" y="431.50"></text></g><g><title>tcp_recvmsg (22 samples, 0.27%)</title><rect x="53.0691%" y="405" width="0.2658%" height="15" fill="rgb(206,71,0)"/><text x="53.3191%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (24 samples, 0.29%)</title><rect x="53.0570%" y="453" width="0.2900%" height="15" fill="rgb(233,118,54)"/><text x="53.3070%" y="463.50"></text></g><g><title>__sys_recvfrom (24 samples, 0.29%)</title><rect x="53.0570%" y="437" width="0.2900%" height="15" fill="rgb(234,83,48)"/><text x="53.3070%" y="447.50"></text></g><g><title>do_syscall_64 (25 samples, 0.30%)</title><rect x="53.0570%" y="469" width="0.3021%" height="15" fill="rgb(228,3,54)"/><text x="53.3070%" y="479.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (26 samples, 0.31%)</title><rect x="53.0570%" y="581" width="0.3142%" height="15" fill="rgb(226,155,13)"/><text x="53.3070%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (26 samples, 0.31%)</title><rect x="53.0570%" y="565" width="0.3142%" height="15" fill="rgb(241,28,37)"/><text x="53.3070%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (26 samples, 0.31%)</title><rect x="53.0570%" y="549" width="0.3142%" height="15" fill="rgb(233,93,10)"/><text x="53.3070%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (26 samples, 0.31%)</title><rect x="53.0570%" y="533" width="0.3142%" height="15" fill="rgb(225,113,19)"/><text x="53.3070%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (26 samples, 0.31%)</title><rect x="53.0570%" y="517" width="0.3142%" height="15" fill="rgb(241,2,18)"/><text x="53.3070%" y="527.50"></text></g><g><title>__libc_recv (26 samples, 0.31%)</title><rect x="53.0570%" y="501" width="0.3142%" height="15" fill="rgb(228,207,21)"/><text x="53.3070%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (26 samples, 0.31%)</title><rect x="53.0570%" y="485" width="0.3142%" height="15" fill="rgb(213,211,35)"/><text x="53.3070%" y="495.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (29 samples, 0.35%)</title><rect x="53.0570%" y="677" width="0.3504%" height="15" fill="rgb(209,83,10)"/><text x="53.3070%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (29 samples, 0.35%)</title><rect x="53.0570%" y="661" width="0.3504%" height="15" fill="rgb(209,164,1)"/><text x="53.3070%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (29 samples, 0.35%)</title><rect x="53.0570%" y="645" width="0.3504%" height="15" fill="rgb(213,184,43)"/><text x="53.3070%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (29 samples, 0.35%)</title><rect x="53.0570%" y="629" width="0.3504%" height="15" fill="rgb(231,61,34)"/><text x="53.3070%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (29 samples, 0.35%)</title><rect x="53.0570%" y="613" width="0.3504%" height="15" fill="rgb(235,75,3)"/><text x="53.3070%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.35%)</title><rect x="53.0570%" y="597" width="0.3504%" height="15" fill="rgb(220,106,47)"/><text x="53.3070%" y="607.50"></text></g><g><title>sk_wait_data (18 samples, 0.22%)</title><rect x="53.5524%" y="389" width="0.2175%" height="15" fill="rgb(210,196,33)"/><text x="53.8024%" y="399.50"></text></g><g><title>wait_woken (16 samples, 0.19%)</title><rect x="53.5766%" y="373" width="0.1933%" height="15" fill="rgb(229,154,42)"/><text x="53.8266%" y="383.50"></text></g><g><title>schedule_timeout (16 samples, 0.19%)</title><rect x="53.5766%" y="357" width="0.1933%" height="15" fill="rgb(228,114,26)"/><text x="53.8266%" y="367.50"></text></g><g><title>schedule (16 samples, 0.19%)</title><rect x="53.5766%" y="341" width="0.1933%" height="15" fill="rgb(208,144,1)"/><text x="53.8266%" y="351.50"></text></g><g><title>__schedule (15 samples, 0.18%)</title><rect x="53.5887%" y="325" width="0.1812%" height="15" fill="rgb(239,112,37)"/><text x="53.8387%" y="335.50"></text></g><g><title>__x64_sys_recvfrom (27 samples, 0.33%)</title><rect x="53.4679%" y="453" width="0.3262%" height="15" fill="rgb(210,96,50)"/><text x="53.7179%" y="463.50"></text></g><g><title>__sys_recvfrom (27 samples, 0.33%)</title><rect x="53.4679%" y="437" width="0.3262%" height="15" fill="rgb(222,178,2)"/><text x="53.7179%" y="447.50"></text></g><g><title>inet_recvmsg (26 samples, 0.31%)</title><rect x="53.4799%" y="421" width="0.3142%" height="15" fill="rgb(226,74,18)"/><text x="53.7299%" y="431.50"></text></g><g><title>tcp_recvmsg (26 samples, 0.31%)</title><rect x="53.4799%" y="405" width="0.3142%" height="15" fill="rgb(225,67,54)"/><text x="53.7299%" y="415.50"></text></g><g><title>do_syscall_64 (28 samples, 0.34%)</title><rect x="53.4679%" y="469" width="0.3383%" height="15" fill="rgb(251,92,32)"/><text x="53.7179%" y="479.50"></text></g><g><title>__libc_recv (31 samples, 0.37%)</title><rect x="53.4437%" y="501" width="0.3746%" height="15" fill="rgb(228,149,22)"/><text x="53.6937%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (29 samples, 0.35%)</title><rect x="53.4679%" y="485" width="0.3504%" height="15" fill="rgb(243,54,13)"/><text x="53.7179%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (32 samples, 0.39%)</title><rect x="53.4437%" y="581" width="0.3867%" height="15" fill="rgb(243,180,28)"/><text x="53.6937%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 0.39%)</title><rect x="53.4437%" y="565" width="0.3867%" height="15" fill="rgb(208,167,24)"/><text x="53.6937%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 0.39%)</title><rect x="53.4437%" y="549" width="0.3867%" height="15" fill="rgb(245,73,45)"/><text x="53.6937%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 0.39%)</title><rect x="53.4437%" y="533" width="0.3867%" height="15" fill="rgb(237,203,48)"/><text x="53.6937%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 0.39%)</title><rect x="53.4437%" y="517" width="0.3867%" height="15" fill="rgb(211,197,16)"/><text x="53.6937%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (36 samples, 0.43%)</title><rect x="53.4074%" y="613" width="0.4350%" height="15" fill="rgb(243,99,51)"/><text x="53.6574%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.41%)</title><rect x="53.4316%" y="597" width="0.4108%" height="15" fill="rgb(215,123,29)"/><text x="53.6816%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (37 samples, 0.45%)</title><rect x="53.4074%" y="661" width="0.4471%" height="15" fill="rgb(239,186,37)"/><text x="53.6574%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (37 samples, 0.45%)</title><rect x="53.4074%" y="645" width="0.4471%" height="15" fill="rgb(252,136,39)"/><text x="53.6574%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (37 samples, 0.45%)</title><rect x="53.4074%" y="629" width="0.4471%" height="15" fill="rgb(223,213,32)"/><text x="53.6574%" y="639.50"></text></g><g><title>sk_wait_data (15 samples, 0.18%)</title><rect x="53.9633%" y="389" width="0.1812%" height="15" fill="rgb(233,115,5)"/><text x="54.2133%" y="399.50"></text></g><g><title>wait_woken (14 samples, 0.17%)</title><rect x="53.9754%" y="373" width="0.1692%" height="15" fill="rgb(207,226,44)"/><text x="54.2254%" y="383.50"></text></g><g><title>schedule_timeout (14 samples, 0.17%)</title><rect x="53.9754%" y="357" width="0.1692%" height="15" fill="rgb(208,126,0)"/><text x="54.2254%" y="367.50"></text></g><g><title>schedule (14 samples, 0.17%)</title><rect x="53.9754%" y="341" width="0.1692%" height="15" fill="rgb(244,66,21)"/><text x="54.2254%" y="351.50"></text></g><g><title>__schedule (14 samples, 0.17%)</title><rect x="53.9754%" y="325" width="0.1692%" height="15" fill="rgb(222,97,12)"/><text x="54.2254%" y="335.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 0.28%)</title><rect x="53.9149%" y="453" width="0.2779%" height="15" fill="rgb(219,213,19)"/><text x="54.1649%" y="463.50"></text></g><g><title>__sys_recvfrom (23 samples, 0.28%)</title><rect x="53.9149%" y="437" width="0.2779%" height="15" fill="rgb(252,169,30)"/><text x="54.1649%" y="447.50"></text></g><g><title>inet_recvmsg (22 samples, 0.27%)</title><rect x="53.9270%" y="421" width="0.2658%" height="15" fill="rgb(206,32,51)"/><text x="54.1770%" y="431.50"></text></g><g><title>tcp_recvmsg (22 samples, 0.27%)</title><rect x="53.9270%" y="405" width="0.2658%" height="15" fill="rgb(250,172,42)"/><text x="54.1770%" y="415.50"></text></g><g><title>do_syscall_64 (24 samples, 0.29%)</title><rect x="53.9149%" y="469" width="0.2900%" height="15" fill="rgb(209,34,43)"/><text x="54.1649%" y="479.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.34%)</title><rect x="53.8908%" y="581" width="0.3383%" height="15" fill="rgb(223,11,35)"/><text x="54.1408%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.34%)</title><rect x="53.8908%" y="565" width="0.3383%" height="15" fill="rgb(251,219,26)"/><text x="54.1408%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.34%)</title><rect x="53.8908%" y="549" width="0.3383%" height="15" fill="rgb(231,119,3)"/><text x="54.1408%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 0.34%)</title><rect x="53.8908%" y="533" width="0.3383%" height="15" fill="rgb(216,97,11)"/><text x="54.1408%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 0.34%)</title><rect x="53.8908%" y="517" width="0.3383%" height="15" fill="rgb(223,59,9)"/><text x="54.1408%" y="527.50"></text></g><g><title>__libc_recv (28 samples, 0.34%)</title><rect x="53.8908%" y="501" width="0.3383%" height="15" fill="rgb(233,93,31)"/><text x="54.1408%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (26 samples, 0.31%)</title><rect x="53.9149%" y="485" width="0.3142%" height="15" fill="rgb(239,81,33)"/><text x="54.1649%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (32 samples, 0.39%)</title><rect x="53.8545%" y="629" width="0.3867%" height="15" fill="rgb(213,120,34)"/><text x="54.1045%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 0.37%)</title><rect x="53.8666%" y="613" width="0.3746%" height="15" fill="rgb(243,49,53)"/><text x="54.1166%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.36%)</title><rect x="53.8787%" y="597" width="0.3625%" height="15" fill="rgb(247,216,33)"/><text x="54.1287%" y="607.50"></text></g><g><title>__wake_up_common (10 samples, 0.12%)</title><rect x="54.4224%" y="85" width="0.1208%" height="15" fill="rgb(226,26,14)"/><text x="54.6724%" y="95.50"></text></g><g><title>pollwake (10 samples, 0.12%)</title><rect x="54.4224%" y="69" width="0.1208%" height="15" fill="rgb(215,49,53)"/><text x="54.6724%" y="79.50"></text></g><g><title>try_to_wake_up (10 samples, 0.12%)</title><rect x="54.4224%" y="53" width="0.1208%" height="15" fill="rgb(245,162,40)"/><text x="54.6724%" y="63.50"></text></g><g><title>sock_def_readable (11 samples, 0.13%)</title><rect x="54.4224%" y="117" width="0.1329%" height="15" fill="rgb(229,68,17)"/><text x="54.6724%" y="127.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.13%)</title><rect x="54.4224%" y="101" width="0.1329%" height="15" fill="rgb(213,182,10)"/><text x="54.6724%" y="111.50"></text></g><g><title>ip_local_deliver (21 samples, 0.25%)</title><rect x="54.3862%" y="213" width="0.2537%" height="15" fill="rgb(245,125,30)"/><text x="54.6362%" y="223.50"></text></g><g><title>ip_local_deliver_finish (20 samples, 0.24%)</title><rect x="54.3983%" y="197" width="0.2417%" height="15" fill="rgb(232,202,2)"/><text x="54.6483%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (20 samples, 0.24%)</title><rect x="54.3983%" y="181" width="0.2417%" height="15" fill="rgb(237,140,51)"/><text x="54.6483%" y="191.50"></text></g><g><title>tcp_v4_rcv (20 samples, 0.24%)</title><rect x="54.3983%" y="165" width="0.2417%" height="15" fill="rgb(236,157,25)"/><text x="54.6483%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 0.23%)</title><rect x="54.4103%" y="149" width="0.2296%" height="15" fill="rgb(219,209,0)"/><text x="54.6603%" y="159.50"></text></g><g><title>tcp_rcv_established (19 samples, 0.23%)</title><rect x="54.4103%" y="133" width="0.2296%" height="15" fill="rgb(240,116,54)"/><text x="54.6603%" y="143.50"></text></g><g><title>__local_bh_enable_ip (25 samples, 0.30%)</title><rect x="54.3499%" y="341" width="0.3021%" height="15" fill="rgb(216,10,36)"/><text x="54.5999%" y="351.50"></text></g><g><title>do_softirq (25 samples, 0.30%)</title><rect x="54.3499%" y="325" width="0.3021%" height="15" fill="rgb(222,72,44)"/><text x="54.5999%" y="335.50"></text></g><g><title>do_softirq_own_stack (25 samples, 0.30%)</title><rect x="54.3499%" y="309" width="0.3021%" height="15" fill="rgb(232,159,9)"/><text x="54.5999%" y="319.50"></text></g><g><title>__do_softirq (25 samples, 0.30%)</title><rect x="54.3499%" y="293" width="0.3021%" height="15" fill="rgb(210,39,32)"/><text x="54.5999%" y="303.50"></text></g><g><title>net_rx_action (24 samples, 0.29%)</title><rect x="54.3620%" y="277" width="0.2900%" height="15" fill="rgb(216,194,45)"/><text x="54.6120%" y="287.50"></text></g><g><title>process_backlog (24 samples, 0.29%)</title><rect x="54.3620%" y="261" width="0.2900%" height="15" fill="rgb(218,18,35)"/><text x="54.6120%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (23 samples, 0.28%)</title><rect x="54.3741%" y="245" width="0.2779%" height="15" fill="rgb(207,83,51)"/><text x="54.6241%" y="255.50"></text></g><g><title>ip_rcv (22 samples, 0.27%)</title><rect x="54.3862%" y="229" width="0.2658%" height="15" fill="rgb(225,63,43)"/><text x="54.6362%" y="239.50"></text></g><g><title>__ip_queue_xmit (31 samples, 0.37%)</title><rect x="54.2895%" y="389" width="0.3746%" height="15" fill="rgb(207,57,36)"/><text x="54.5395%" y="399.50"></text></g><g><title>ip_output (30 samples, 0.36%)</title><rect x="54.3016%" y="373" width="0.3625%" height="15" fill="rgb(216,99,33)"/><text x="54.5516%" y="383.50"></text></g><g><title>ip_finish_output2 (30 samples, 0.36%)</title><rect x="54.3016%" y="357" width="0.3625%" height="15" fill="rgb(225,42,16)"/><text x="54.5516%" y="367.50"></text></g><g><title>__tcp_transmit_skb (35 samples, 0.42%)</title><rect x="54.2774%" y="405" width="0.4229%" height="15" fill="rgb(220,201,45)"/><text x="54.5274%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (39 samples, 0.47%)</title><rect x="54.2774%" y="437" width="0.4712%" height="15" fill="rgb(225,33,4)"/><text x="54.5274%" y="447.50"></text></g><g><title>tcp_write_xmit (39 samples, 0.47%)</title><rect x="54.2774%" y="421" width="0.4712%" height="15" fill="rgb(224,33,50)"/><text x="54.5274%" y="431.50"></text></g><g><title>sock_sendmsg (44 samples, 0.53%)</title><rect x="54.2412%" y="485" width="0.5317%" height="15" fill="rgb(246,198,51)"/><text x="54.4912%" y="495.50"></text></g><g><title>tcp_sendmsg (43 samples, 0.52%)</title><rect x="54.2533%" y="469" width="0.5196%" height="15" fill="rgb(205,22,4)"/><text x="54.5033%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (41 samples, 0.50%)</title><rect x="54.2774%" y="453" width="0.4954%" height="15" fill="rgb(206,3,8)"/><text x="54.5274%" y="463.50"></text></g><g><title>__x64_sys_sendto (45 samples, 0.54%)</title><rect x="54.2412%" y="517" width="0.5437%" height="15" fill="rgb(251,23,15)"/><text x="54.4912%" y="527.50"></text></g><g><title>__sys_sendto (45 samples, 0.54%)</title><rect x="54.2412%" y="501" width="0.5437%" height="15" fill="rgb(252,88,28)"/><text x="54.4912%" y="511.50"></text></g><g><title>do_syscall_64 (46 samples, 0.56%)</title><rect x="54.2412%" y="533" width="0.5558%" height="15" fill="rgb(212,127,14)"/><text x="54.4912%" y="543.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (79 samples, 0.95%)</title><rect x="53.8545%" y="661" width="0.9546%" height="15" fill="rgb(247,145,37)"/><text x="54.1045%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (79 samples, 0.95%)</title><rect x="53.8545%" y="645" width="0.9546%" height="15" fill="rgb(209,117,53)"/><text x="54.1045%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (47 samples, 0.57%)</title><rect x="54.2412%" y="629" width="0.5679%" height="15" fill="rgb(212,90,42)"/><text x="54.4912%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (47 samples, 0.57%)</title><rect x="54.2412%" y="613" width="0.5679%" height="15" fill="rgb(218,164,37)"/><text x="54.4912%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (47 samples, 0.57%)</title><rect x="54.2412%" y="597" width="0.5679%" height="15" fill="rgb(246,65,34)"/><text x="54.4912%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (47 samples, 0.57%)</title><rect x="54.2412%" y="581" width="0.5679%" height="15" fill="rgb(231,100,33)"/><text x="54.4912%" y="591.50"></text></g><g><title>__libc_send (47 samples, 0.57%)</title><rect x="54.2412%" y="565" width="0.5679%" height="15" fill="rgb(228,126,14)"/><text x="54.4912%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (47 samples, 0.57%)</title><rect x="54.2412%" y="549" width="0.5679%" height="15" fill="rgb(215,173,21)"/><text x="54.4912%" y="559.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (16 samples, 0.19%)</title><rect x="54.8091%" y="613" width="0.1933%" height="15" fill="rgb(210,6,40)"/><text x="55.0591%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (16 samples, 0.19%)</title><rect x="54.8091%" y="597" width="0.1933%" height="15" fill="rgb(212,48,18)"/><text x="55.0591%" y="607.50"></text></g><g><title>decor_mem::helpers::expr_to_col (9 samples, 0.11%)</title><rect x="54.8937%" y="581" width="0.1087%" height="15" fill="rgb(230,214,11)"/><text x="55.1437%" y="591.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="54.8937%" y="565" width="0.1087%" height="15" fill="rgb(254,105,39)"/><text x="55.1437%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.11%)</title><rect x="54.8937%" y="549" width="0.1087%" height="15" fill="rgb(245,158,5)"/><text x="55.1437%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (15 samples, 0.18%)</title><rect x="55.0628%" y="517" width="0.1812%" height="15" fill="rgb(249,208,11)"/><text x="55.3128%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 0.12%)</title><rect x="55.1232%" y="501" width="0.1208%" height="15" fill="rgb(210,39,28)"/><text x="55.3732%" y="511.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (9 samples, 0.11%)</title><rect x="55.1353%" y="485" width="0.1087%" height="15" fill="rgb(211,56,53)"/><text x="55.3853%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 0.11%)</title><rect x="55.1353%" y="469" width="0.1087%" height="15" fill="rgb(226,201,30)"/><text x="55.3853%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 0.19%)</title><rect x="55.0628%" y="549" width="0.1933%" height="15" fill="rgb(239,101,34)"/><text x="55.3128%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (16 samples, 0.19%)</title><rect x="55.0628%" y="533" width="0.1933%" height="15" fill="rgb(226,209,5)"/><text x="55.3128%" y="543.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (46 samples, 0.56%)</title><rect x="54.8091%" y="645" width="0.5558%" height="15" fill="rgb(250,105,47)"/><text x="55.0591%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (46 samples, 0.56%)</title><rect x="54.8091%" y="629" width="0.5558%" height="15" fill="rgb(230,72,3)"/><text x="55.0591%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (30 samples, 0.36%)</title><rect x="55.0024%" y="613" width="0.3625%" height="15" fill="rgb(232,218,39)"/><text x="55.2524%" y="623.50"></text></g><g><title>decor_mem::helpers::expr_to_col (26 samples, 0.31%)</title><rect x="55.0507%" y="597" width="0.3142%" height="15" fill="rgb(248,166,6)"/><text x="55.3007%" y="607.50"></text></g><g><title>core::fmt::write (26 samples, 0.31%)</title><rect x="55.0507%" y="581" width="0.3142%" height="15" fill="rgb(247,89,20)"/><text x="55.3007%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (26 samples, 0.31%)</title><rect x="55.0507%" y="565" width="0.3142%" height="15" fill="rgb(248,130,54)"/><text x="55.3007%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="55.4616%" y="565" width="0.1329%" height="15" fill="rgb(234,196,4)"/><text x="55.7116%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.24%)</title><rect x="55.3649%" y="597" width="0.2417%" height="15" fill="rgb(250,143,31)"/><text x="55.6149%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.17%)</title><rect x="55.4374%" y="581" width="0.1692%" height="15" fill="rgb(211,110,34)"/><text x="55.6874%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (27 samples, 0.33%)</title><rect x="55.3649%" y="613" width="0.3262%" height="15" fill="rgb(215,124,48)"/><text x="55.6149%" y="623.50"></text></g><g><title>core::fmt::write (25 samples, 0.30%)</title><rect x="55.6912%" y="613" width="0.3021%" height="15" fill="rgb(216,46,13)"/><text x="55.9412%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (25 samples, 0.30%)</title><rect x="55.6912%" y="597" width="0.3021%" height="15" fill="rgb(205,184,25)"/><text x="55.9412%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (24 samples, 0.29%)</title><rect x="55.7032%" y="581" width="0.2900%" height="15" fill="rgb(228,1,10)"/><text x="55.9532%" y="591.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="55.8845%" y="565" width="0.1087%" height="15" fill="rgb(213,116,27)"/><text x="56.1345%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (17 samples, 0.21%)</title><rect x="55.9932%" y="613" width="0.2054%" height="15" fill="rgb(241,95,50)"/><text x="56.2432%" y="623.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (17 samples, 0.21%)</title><rect x="55.9932%" y="597" width="0.2054%" height="15" fill="rgb(238,48,32)"/><text x="56.2432%" y="607.50"></text></g><g><title>perf_event_mmap (16 samples, 0.19%)</title><rect x="56.7424%" y="437" width="0.1933%" height="15" fill="rgb(235,113,49)"/><text x="56.9924%" y="447.50"></text></g><g><title>perf_iterate_sb (15 samples, 0.18%)</title><rect x="56.7545%" y="421" width="0.1812%" height="15" fill="rgb(205,127,43)"/><text x="57.0045%" y="431.50"></text></g><g><title>perf_iterate_ctx (14 samples, 0.17%)</title><rect x="56.7666%" y="405" width="0.1692%" height="15" fill="rgb(250,162,2)"/><text x="57.0166%" y="415.50"></text></g><g><title>do_syscall_64 (23 samples, 0.28%)</title><rect x="56.6699%" y="501" width="0.2779%" height="15" fill="rgb(220,13,41)"/><text x="56.9199%" y="511.50"></text></g><g><title>__x64_sys_mprotect (23 samples, 0.28%)</title><rect x="56.6699%" y="485" width="0.2779%" height="15" fill="rgb(249,221,25)"/><text x="56.9199%" y="495.50"></text></g><g><title>do_mprotect_pkey (23 samples, 0.28%)</title><rect x="56.6699%" y="469" width="0.2779%" height="15" fill="rgb(215,208,19)"/><text x="56.9199%" y="479.50"></text></g><g><title>mprotect_fixup (20 samples, 0.24%)</title><rect x="56.7061%" y="453" width="0.2417%" height="15" fill="rgb(236,175,2)"/><text x="56.9561%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.29%)</title><rect x="56.6699%" y="517" width="0.2900%" height="15" fill="rgb(241,52,2)"/><text x="56.9199%" y="527.50"></text></g><g><title>__GI___mprotect (25 samples, 0.30%)</title><rect x="56.6699%" y="533" width="0.3021%" height="15" fill="rgb(248,140,14)"/><text x="56.9199%" y="543.50"></text></g><g><title>page_fault (15 samples, 0.18%)</title><rect x="56.9841%" y="533" width="0.1812%" height="15" fill="rgb(253,22,42)"/><text x="57.2341%" y="543.50"></text></g><g><title>do_user_addr_fault (14 samples, 0.17%)</title><rect x="56.9961%" y="517" width="0.1692%" height="15" fill="rgb(234,61,47)"/><text x="57.2461%" y="527.50"></text></g><g><title>handle_mm_fault (14 samples, 0.17%)</title><rect x="56.9961%" y="501" width="0.1692%" height="15" fill="rgb(208,226,15)"/><text x="57.2461%" y="511.50"></text></g><g><title>__handle_mm_fault (13 samples, 0.16%)</title><rect x="57.0082%" y="485" width="0.1571%" height="15" fill="rgb(217,221,4)"/><text x="57.2582%" y="495.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.60%)</title><rect x="56.5853%" y="581" width="0.6042%" height="15" fill="rgb(212,174,34)"/><text x="56.8353%" y="591.50"></text></g><g><title>_int_malloc (47 samples, 0.57%)</title><rect x="56.6216%" y="565" width="0.5679%" height="15" fill="rgb(253,83,4)"/><text x="56.8716%" y="575.50"></text></g><g><title>sysmalloc (44 samples, 0.53%)</title><rect x="56.6578%" y="549" width="0.5317%" height="15" fill="rgb(250,195,49)"/><text x="56.9078%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.36%)</title><rect x="57.1895%" y="581" width="0.3625%" height="15" fill="rgb(241,192,25)"/><text x="57.4395%" y="591.50"></text></g><g><title>page_fault (9 samples, 0.11%)</title><rect x="57.5520%" y="581" width="0.1087%" height="15" fill="rgb(208,124,10)"/><text x="57.8020%" y="591.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.11%)</title><rect x="57.5520%" y="565" width="0.1087%" height="15" fill="rgb(222,33,0)"/><text x="57.8020%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (107 samples, 1.29%)</title><rect x="56.3920%" y="597" width="1.2929%" height="15" fill="rgb(234,209,28)"/><text x="56.6420%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.21%)</title><rect x="57.7815%" y="597" width="0.2054%" height="15" fill="rgb(224,11,23)"/><text x="58.0315%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.14%)</title><rect x="57.8420%" y="581" width="0.1450%" height="15" fill="rgb(232,99,1)"/><text x="58.0920%" y="591.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (153 samples, 1.85%)</title><rect x="56.1986%" y="613" width="1.8487%" height="15" fill="rgb(237,95,45)"/><text x="56.4486%" y="623.50">d..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (270 samples, 3.26%)</title><rect x="54.8091%" y="661" width="3.2624%" height="15" fill="rgb(208,109,11)"/><text x="55.0591%" y="671.50">dec..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (224 samples, 2.71%)</title><rect x="55.3649%" y="645" width="2.7066%" height="15" fill="rgb(216,190,48)"/><text x="55.6149%" y="655.50">de..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (224 samples, 2.71%)</title><rect x="55.3649%" y="629" width="2.7066%" height="15" fill="rgb(251,171,36)"/><text x="55.6149%" y="639.50">de..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17 samples, 0.21%)</title><rect x="58.1924%" y="597" width="0.2054%" height="15" fill="rgb(230,62,22)"/><text x="58.4424%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (10 samples, 0.12%)</title><rect x="58.2769%" y="581" width="0.1208%" height="15" fill="rgb(225,114,35)"/><text x="58.5269%" y="591.50"></text></g><g><title>core::fmt::write (18 samples, 0.22%)</title><rect x="58.4582%" y="597" width="0.2175%" height="15" fill="rgb(215,118,42)"/><text x="58.7082%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (16 samples, 0.19%)</title><rect x="58.4824%" y="581" width="0.1933%" height="15" fill="rgb(243,119,21)"/><text x="58.7324%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 0.14%)</title><rect x="58.5307%" y="565" width="0.1450%" height="15" fill="rgb(252,177,53)"/><text x="58.7807%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.18%)</title><rect x="58.8449%" y="581" width="0.1812%" height="15" fill="rgb(237,209,29)"/><text x="59.0949%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (10 samples, 0.12%)</title><rect x="58.9053%" y="565" width="0.1208%" height="15" fill="rgb(212,65,23)"/><text x="59.1553%" y="575.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (497 samples, 6.01%)</title><rect x="53.0570%" y="709" width="6.0053%" height="15" fill="rgb(230,222,46)"/><text x="53.3070%" y="719.50">&lt;decor_m..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (497 samples, 6.01%)</title><rect x="53.0570%" y="693" width="6.0053%" height="15" fill="rgb(215,135,32)"/><text x="53.3070%" y="703.50">decor_me..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (468 samples, 5.65%)</title><rect x="53.4074%" y="677" width="5.6549%" height="15" fill="rgb(246,101,22)"/><text x="53.6574%" y="687.50">decor_m..</text></g><g><title>decor_mem::views::Views::delete (82 samples, 0.99%)</title><rect x="58.0715%" y="661" width="0.9908%" height="15" fill="rgb(206,107,13)"/><text x="58.3215%" y="671.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (82 samples, 0.99%)</title><rect x="58.0715%" y="645" width="0.9908%" height="15" fill="rgb(250,100,44)"/><text x="58.3215%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (78 samples, 0.94%)</title><rect x="58.1199%" y="629" width="0.9425%" height="15" fill="rgb(231,147,38)"/><text x="58.3699%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (72 samples, 0.87%)</title><rect x="58.1924%" y="613" width="0.8700%" height="15" fill="rgb(229,8,40)"/><text x="58.4424%" y="623.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (29 samples, 0.35%)</title><rect x="58.7119%" y="597" width="0.3504%" height="15" fill="rgb(221,135,30)"/><text x="58.9619%" y="607.50"></text></g><g><title>sk_wait_data (12 samples, 0.14%)</title><rect x="59.1228%" y="389" width="0.1450%" height="15" fill="rgb(249,193,18)"/><text x="59.3728%" y="399.50"></text></g><g><title>wait_woken (12 samples, 0.14%)</title><rect x="59.1228%" y="373" width="0.1450%" height="15" fill="rgb(209,133,39)"/><text x="59.3728%" y="383.50"></text></g><g><title>schedule_timeout (11 samples, 0.13%)</title><rect x="59.1348%" y="357" width="0.1329%" height="15" fill="rgb(232,100,14)"/><text x="59.3848%" y="367.50"></text></g><g><title>schedule (10 samples, 0.12%)</title><rect x="59.1469%" y="341" width="0.1208%" height="15" fill="rgb(224,185,1)"/><text x="59.3969%" y="351.50"></text></g><g><title>__schedule (10 samples, 0.12%)</title><rect x="59.1469%" y="325" width="0.1208%" height="15" fill="rgb(223,139,8)"/><text x="59.3969%" y="335.50"></text></g><g><title>do_syscall_64 (17 samples, 0.21%)</title><rect x="59.0986%" y="469" width="0.2054%" height="15" fill="rgb(232,213,38)"/><text x="59.3486%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (17 samples, 0.21%)</title><rect x="59.0986%" y="453" width="0.2054%" height="15" fill="rgb(207,94,22)"/><text x="59.3486%" y="463.50"></text></g><g><title>__sys_recvfrom (17 samples, 0.21%)</title><rect x="59.0986%" y="437" width="0.2054%" height="15" fill="rgb(219,183,54)"/><text x="59.3486%" y="447.50"></text></g><g><title>inet_recvmsg (15 samples, 0.18%)</title><rect x="59.1228%" y="421" width="0.1812%" height="15" fill="rgb(216,185,54)"/><text x="59.3728%" y="431.50"></text></g><g><title>tcp_recvmsg (15 samples, 0.18%)</title><rect x="59.1228%" y="405" width="0.1812%" height="15" fill="rgb(254,217,39)"/><text x="59.3728%" y="415.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.24%)</title><rect x="59.0865%" y="597" width="0.2417%" height="15" fill="rgb(240,178,23)"/><text x="59.3365%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (20 samples, 0.24%)</title><rect x="59.0865%" y="581" width="0.2417%" height="15" fill="rgb(218,11,47)"/><text x="59.3365%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (20 samples, 0.24%)</title><rect x="59.0865%" y="565" width="0.2417%" height="15" fill="rgb(218,51,51)"/><text x="59.3365%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (20 samples, 0.24%)</title><rect x="59.0865%" y="549" width="0.2417%" height="15" fill="rgb(238,126,27)"/><text x="59.3365%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (20 samples, 0.24%)</title><rect x="59.0865%" y="533" width="0.2417%" height="15" fill="rgb(249,202,22)"/><text x="59.3365%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (20 samples, 0.24%)</title><rect x="59.0865%" y="517" width="0.2417%" height="15" fill="rgb(254,195,49)"/><text x="59.3365%" y="527.50"></text></g><g><title>__libc_recv (20 samples, 0.24%)</title><rect x="59.0865%" y="501" width="0.2417%" height="15" fill="rgb(208,123,14)"/><text x="59.3365%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.23%)</title><rect x="59.0986%" y="485" width="0.2296%" height="15" fill="rgb(224,200,8)"/><text x="59.3486%" y="495.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (23 samples, 0.28%)</title><rect x="59.0623%" y="677" width="0.2779%" height="15" fill="rgb(217,61,36)"/><text x="59.3123%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (23 samples, 0.28%)</title><rect x="59.0623%" y="661" width="0.2779%" height="15" fill="rgb(206,35,45)"/><text x="59.3123%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (23 samples, 0.28%)</title><rect x="59.0623%" y="645" width="0.2779%" height="15" fill="rgb(217,65,33)"/><text x="59.3123%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (23 samples, 0.28%)</title><rect x="59.0623%" y="629" width="0.2779%" height="15" fill="rgb(222,158,48)"/><text x="59.3123%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 0.25%)</title><rect x="59.0865%" y="613" width="0.2537%" height="15" fill="rgb(254,2,54)"/><text x="59.3365%" y="623.50"></text></g><g><title>sk_wait_data (23 samples, 0.28%)</title><rect x="59.5094%" y="389" width="0.2779%" height="15" fill="rgb(250,143,38)"/><text x="59.7594%" y="399.50"></text></g><g><title>wait_woken (16 samples, 0.19%)</title><rect x="59.5940%" y="373" width="0.1933%" height="15" fill="rgb(248,25,0)"/><text x="59.8440%" y="383.50"></text></g><g><title>schedule_timeout (16 samples, 0.19%)</title><rect x="59.5940%" y="357" width="0.1933%" height="15" fill="rgb(206,152,27)"/><text x="59.8440%" y="367.50"></text></g><g><title>schedule (16 samples, 0.19%)</title><rect x="59.5940%" y="341" width="0.1933%" height="15" fill="rgb(240,77,30)"/><text x="59.8440%" y="351.50"></text></g><g><title>__schedule (15 samples, 0.18%)</title><rect x="59.6061%" y="325" width="0.1812%" height="15" fill="rgb(231,5,3)"/><text x="59.8561%" y="335.50"></text></g><g><title>inet_recvmsg (30 samples, 0.36%)</title><rect x="59.4611%" y="421" width="0.3625%" height="15" fill="rgb(207,226,32)"/><text x="59.7111%" y="431.50"></text></g><g><title>tcp_recvmsg (29 samples, 0.35%)</title><rect x="59.4732%" y="405" width="0.3504%" height="15" fill="rgb(222,207,47)"/><text x="59.7232%" y="415.50"></text></g><g><title>do_syscall_64 (33 samples, 0.40%)</title><rect x="59.4369%" y="469" width="0.3987%" height="15" fill="rgb(229,115,45)"/><text x="59.6869%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (32 samples, 0.39%)</title><rect x="59.4490%" y="453" width="0.3867%" height="15" fill="rgb(224,191,6)"/><text x="59.6990%" y="463.50"></text></g><g><title>__sys_recvfrom (31 samples, 0.37%)</title><rect x="59.4611%" y="437" width="0.3746%" height="15" fill="rgb(230,227,24)"/><text x="59.7111%" y="447.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 0.47%)</title><rect x="59.4007%" y="581" width="0.4712%" height="15" fill="rgb(228,80,19)"/><text x="59.6507%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (39 samples, 0.47%)</title><rect x="59.4007%" y="565" width="0.4712%" height="15" fill="rgb(247,229,0)"/><text x="59.6507%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (39 samples, 0.47%)</title><rect x="59.4007%" y="549" width="0.4712%" height="15" fill="rgb(237,194,15)"/><text x="59.6507%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (39 samples, 0.47%)</title><rect x="59.4007%" y="533" width="0.4712%" height="15" fill="rgb(219,203,20)"/><text x="59.6507%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (39 samples, 0.47%)</title><rect x="59.4007%" y="517" width="0.4712%" height="15" fill="rgb(234,128,8)"/><text x="59.6507%" y="527.50"></text></g><g><title>__libc_recv (38 samples, 0.46%)</title><rect x="59.4128%" y="501" width="0.4592%" height="15" fill="rgb(248,202,8)"/><text x="59.6628%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (36 samples, 0.43%)</title><rect x="59.4369%" y="485" width="0.4350%" height="15" fill="rgb(206,104,37)"/><text x="59.6869%" y="495.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.51%)</title><rect x="59.3886%" y="597" width="0.5075%" height="15" fill="rgb(223,8,27)"/><text x="59.6386%" y="607.50"></text></g><g><title>mysql::conn::Conn::read_packet (47 samples, 0.57%)</title><rect x="59.3765%" y="613" width="0.5679%" height="15" fill="rgb(216,217,28)"/><text x="59.6265%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (51 samples, 0.62%)</title><rect x="59.3403%" y="629" width="0.6162%" height="15" fill="rgb(249,199,1)"/><text x="59.5903%" y="639.50"></text></g><g><title>sock_def_readable (12 samples, 0.14%)</title><rect x="60.3915%" y="117" width="0.1450%" height="15" fill="rgb(240,85,17)"/><text x="60.6415%" y="127.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.14%)</title><rect x="60.3915%" y="101" width="0.1450%" height="15" fill="rgb(206,108,45)"/><text x="60.6415%" y="111.50"></text></g><g><title>__wake_up_common (12 samples, 0.14%)</title><rect x="60.3915%" y="85" width="0.1450%" height="15" fill="rgb(245,210,41)"/><text x="60.6415%" y="95.50"></text></g><g><title>pollwake (12 samples, 0.14%)</title><rect x="60.3915%" y="69" width="0.1450%" height="15" fill="rgb(206,13,37)"/><text x="60.6415%" y="79.50"></text></g><g><title>try_to_wake_up (11 samples, 0.13%)</title><rect x="60.4036%" y="53" width="0.1329%" height="15" fill="rgb(250,61,18)"/><text x="60.6536%" y="63.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 0.25%)</title><rect x="60.3673%" y="149" width="0.2537%" height="15" fill="rgb(235,172,48)"/><text x="60.6173%" y="159.50"></text></g><g><title>tcp_rcv_established (21 samples, 0.25%)</title><rect x="60.3673%" y="133" width="0.2537%" height="15" fill="rgb(249,201,17)"/><text x="60.6173%" y="143.50"></text></g><g><title>__ip_queue_xmit (41 samples, 0.50%)</title><rect x="60.1377%" y="389" width="0.4954%" height="15" fill="rgb(219,208,6)"/><text x="60.3877%" y="399.50"></text></g><g><title>ip_output (40 samples, 0.48%)</title><rect x="60.1498%" y="373" width="0.4833%" height="15" fill="rgb(248,31,23)"/><text x="60.3998%" y="383.50"></text></g><g><title>ip_finish_output2 (40 samples, 0.48%)</title><rect x="60.1498%" y="357" width="0.4833%" height="15" fill="rgb(245,15,42)"/><text x="60.3998%" y="367.50"></text></g><g><title>__local_bh_enable_ip (30 samples, 0.36%)</title><rect x="60.2707%" y="341" width="0.3625%" height="15" fill="rgb(222,217,39)"/><text x="60.5207%" y="351.50"></text></g><g><title>do_softirq (29 samples, 0.35%)</title><rect x="60.2827%" y="325" width="0.3504%" height="15" fill="rgb(210,219,27)"/><text x="60.5327%" y="335.50"></text></g><g><title>do_softirq_own_stack (29 samples, 0.35%)</title><rect x="60.2827%" y="309" width="0.3504%" height="15" fill="rgb(252,166,36)"/><text x="60.5327%" y="319.50"></text></g><g><title>__do_softirq (29 samples, 0.35%)</title><rect x="60.2827%" y="293" width="0.3504%" height="15" fill="rgb(245,132,34)"/><text x="60.5327%" y="303.50"></text></g><g><title>net_rx_action (29 samples, 0.35%)</title><rect x="60.2827%" y="277" width="0.3504%" height="15" fill="rgb(236,54,3)"/><text x="60.5327%" y="287.50"></text></g><g><title>process_backlog (28 samples, 0.34%)</title><rect x="60.2948%" y="261" width="0.3383%" height="15" fill="rgb(241,173,43)"/><text x="60.5448%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 0.34%)</title><rect x="60.2948%" y="245" width="0.3383%" height="15" fill="rgb(215,190,9)"/><text x="60.5448%" y="255.50"></text></g><g><title>ip_rcv (27 samples, 0.33%)</title><rect x="60.3069%" y="229" width="0.3262%" height="15" fill="rgb(242,101,16)"/><text x="60.5569%" y="239.50"></text></g><g><title>ip_local_deliver (26 samples, 0.31%)</title><rect x="60.3190%" y="213" width="0.3142%" height="15" fill="rgb(223,190,21)"/><text x="60.5690%" y="223.50"></text></g><g><title>ip_local_deliver_finish (26 samples, 0.31%)</title><rect x="60.3190%" y="197" width="0.3142%" height="15" fill="rgb(215,228,25)"/><text x="60.5690%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (26 samples, 0.31%)</title><rect x="60.3190%" y="181" width="0.3142%" height="15" fill="rgb(225,36,22)"/><text x="60.5690%" y="191.50"></text></g><g><title>tcp_v4_rcv (26 samples, 0.31%)</title><rect x="60.3190%" y="165" width="0.3142%" height="15" fill="rgb(251,106,46)"/><text x="60.5690%" y="175.50"></text></g><g><title>__tcp_transmit_skb (46 samples, 0.56%)</title><rect x="60.1257%" y="405" width="0.5558%" height="15" fill="rgb(208,90,1)"/><text x="60.3757%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (50 samples, 0.60%)</title><rect x="60.1015%" y="437" width="0.6042%" height="15" fill="rgb(243,10,4)"/><text x="60.3515%" y="447.50"></text></g><g><title>tcp_write_xmit (49 samples, 0.59%)</title><rect x="60.1136%" y="421" width="0.5921%" height="15" fill="rgb(212,137,27)"/><text x="60.3636%" y="431.50"></text></g><g><title>sock_sendmsg (65 samples, 0.79%)</title><rect x="60.0290%" y="485" width="0.7854%" height="15" fill="rgb(231,220,49)"/><text x="60.2790%" y="495.50"></text></g><g><title>tcp_sendmsg (65 samples, 0.79%)</title><rect x="60.0290%" y="469" width="0.7854%" height="15" fill="rgb(237,96,20)"/><text x="60.2790%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (63 samples, 0.76%)</title><rect x="60.0532%" y="453" width="0.7612%" height="15" fill="rgb(239,229,30)"/><text x="60.3032%" y="463.50"></text></g><g><title>do_syscall_64 (71 samples, 0.86%)</title><rect x="59.9807%" y="533" width="0.8579%" height="15" fill="rgb(219,65,33)"/><text x="60.2307%" y="543.50"></text></g><g><title>__x64_sys_sendto (71 samples, 0.86%)</title><rect x="59.9807%" y="517" width="0.8579%" height="15" fill="rgb(243,134,7)"/><text x="60.2307%" y="527.50"></text></g><g><title>__sys_sendto (71 samples, 0.86%)</title><rect x="59.9807%" y="501" width="0.8579%" height="15" fill="rgb(216,177,54)"/><text x="60.2307%" y="511.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (127 samples, 1.53%)</title><rect x="59.3403%" y="661" width="1.5346%" height="15" fill="rgb(211,160,20)"/><text x="59.5903%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (127 samples, 1.53%)</title><rect x="59.3403%" y="645" width="1.5346%" height="15" fill="rgb(239,85,39)"/><text x="59.5903%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (76 samples, 0.92%)</title><rect x="59.9565%" y="629" width="0.9183%" height="15" fill="rgb(232,125,22)"/><text x="60.2065%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (74 samples, 0.89%)</title><rect x="59.9807%" y="613" width="0.8942%" height="15" fill="rgb(244,57,34)"/><text x="60.2307%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (74 samples, 0.89%)</title><rect x="59.9807%" y="597" width="0.8942%" height="15" fill="rgb(214,203,32)"/><text x="60.2307%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (74 samples, 0.89%)</title><rect x="59.9807%" y="581" width="0.8942%" height="15" fill="rgb(207,58,43)"/><text x="60.2307%" y="591.50"></text></g><g><title>__libc_send (74 samples, 0.89%)</title><rect x="59.9807%" y="565" width="0.8942%" height="15" fill="rgb(215,193,15)"/><text x="60.2307%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (74 samples, 0.89%)</title><rect x="59.9807%" y="549" width="0.8942%" height="15" fill="rgb(232,15,44)"/><text x="60.2307%" y="559.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="61.1286%" y="549" width="0.1329%" height="15" fill="rgb(212,3,48)"/><text x="61.3786%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (41 samples, 0.50%)</title><rect x="60.9594%" y="581" width="0.4954%" height="15" fill="rgb(218,128,7)"/><text x="61.2094%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (40 samples, 0.48%)</title><rect x="60.9715%" y="565" width="0.4833%" height="15" fill="rgb(226,216,39)"/><text x="61.2215%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (67 samples, 0.81%)</title><rect x="60.9594%" y="597" width="0.8096%" height="15" fill="rgb(243,47,51)"/><text x="61.2094%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (26 samples, 0.31%)</title><rect x="61.4548%" y="581" width="0.3142%" height="15" fill="rgb(241,183,40)"/><text x="61.7048%" y="591.50"></text></g><g><title>core::fmt::write (11 samples, 0.13%)</title><rect x="61.6361%" y="565" width="0.1329%" height="15" fill="rgb(231,217,32)"/><text x="61.8861%" y="575.50"></text></g><g><title>core::fmt::write (83 samples, 1.00%)</title><rect x="60.9111%" y="629" width="1.0029%" height="15" fill="rgb(229,61,38)"/><text x="61.1611%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (81 samples, 0.98%)</title><rect x="60.9352%" y="613" width="0.9787%" height="15" fill="rgb(225,210,5)"/><text x="61.1852%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.12%)</title><rect x="61.7931%" y="597" width="0.1208%" height="15" fill="rgb(231,79,45)"/><text x="62.0431%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.12%)</title><rect x="62.3127%" y="581" width="0.1208%" height="15" fill="rgb(224,100,7)"/><text x="62.5627%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (19 samples, 0.23%)</title><rect x="62.2644%" y="597" width="0.2296%" height="15" fill="rgb(241,198,18)"/><text x="62.5144%" y="607.50"></text></g><g><title>__lru_cache_add (9 samples, 0.11%)</title><rect x="62.6994%" y="533" width="0.1087%" height="15" fill="rgb(252,97,53)"/><text x="62.9494%" y="543.50"></text></g><g><title>clear_page_erms (37 samples, 0.45%)</title><rect x="63.0377%" y="453" width="0.4471%" height="15" fill="rgb(220,88,7)"/><text x="63.2877%" y="463.50"></text></g><g><title>alloc_pages_vma (52 samples, 0.63%)</title><rect x="62.8685%" y="533" width="0.6283%" height="15" fill="rgb(213,176,14)"/><text x="63.1185%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (50 samples, 0.60%)</title><rect x="62.8927%" y="517" width="0.6042%" height="15" fill="rgb(246,73,7)"/><text x="63.1427%" y="527.50"></text></g><g><title>get_page_from_freelist (47 samples, 0.57%)</title><rect x="62.9290%" y="501" width="0.5679%" height="15" fill="rgb(245,64,36)"/><text x="63.1790%" y="511.50"></text></g><g><title>prep_new_page (38 samples, 0.46%)</title><rect x="63.0377%" y="485" width="0.4592%" height="15" fill="rgb(245,80,10)"/><text x="63.2877%" y="495.50"></text></g><g><title>kernel_init_free_pages (38 samples, 0.46%)</title><rect x="63.0377%" y="469" width="0.4592%" height="15" fill="rgb(232,107,50)"/><text x="63.2877%" y="479.50"></text></g><g><title>mem_cgroup_try_charge_delay (21 samples, 0.25%)</title><rect x="63.5210%" y="533" width="0.2537%" height="15" fill="rgb(253,3,0)"/><text x="63.7710%" y="543.50"></text></g><g><title>mem_cgroup_try_charge (20 samples, 0.24%)</title><rect x="63.5331%" y="517" width="0.2417%" height="15" fill="rgb(212,99,53)"/><text x="63.7831%" y="527.50"></text></g><g><title>page_fault (106 samples, 1.28%)</title><rect x="62.5060%" y="597" width="1.2808%" height="15" fill="rgb(249,111,54)"/><text x="62.7560%" y="607.50"></text></g><g><title>do_user_addr_fault (105 samples, 1.27%)</title><rect x="62.5181%" y="581" width="1.2687%" height="15" fill="rgb(249,55,30)"/><text x="62.7681%" y="591.50"></text></g><g><title>handle_mm_fault (101 samples, 1.22%)</title><rect x="62.5665%" y="565" width="1.2204%" height="15" fill="rgb(237,47,42)"/><text x="62.8165%" y="575.50"></text></g><g><title>__handle_mm_fault (98 samples, 1.18%)</title><rect x="62.6027%" y="549" width="1.1841%" height="15" fill="rgb(211,20,18)"/><text x="62.8527%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (180 samples, 2.17%)</title><rect x="61.9140%" y="629" width="2.1750%" height="15" fill="rgb(231,203,46)"/><text x="62.1640%" y="639.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (167 samples, 2.02%)</title><rect x="62.0710%" y="613" width="2.0179%" height="15" fill="rgb(237,142,3)"/><text x="62.3210%" y="623.50">h..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (25 samples, 0.30%)</title><rect x="63.7869%" y="597" width="0.3021%" height="15" fill="rgb(241,107,1)"/><text x="64.0369%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (18 samples, 0.22%)</title><rect x="63.8714%" y="581" width="0.2175%" height="15" fill="rgb(229,83,13)"/><text x="64.1214%" y="591.50"></text></g><g><title>change_protection (14 samples, 0.17%)</title><rect x="64.6689%" y="469" width="0.1692%" height="15" fill="rgb(241,91,40)"/><text x="64.9189%" y="479.50"></text></g><g><title>debug_smp_processor_id (15 samples, 0.18%)</title><rect x="65.5993%" y="421" width="0.1812%" height="15" fill="rgb(225,3,45)"/><text x="65.8493%" y="431.50"></text></g><g><title>perf_output_begin (9 samples, 0.11%)</title><rect x="65.9981%" y="405" width="0.1087%" height="15" fill="rgb(244,223,14)"/><text x="66.2481%" y="415.50"></text></g><g><title>perf_output_copy (12 samples, 0.14%)</title><rect x="66.1068%" y="405" width="0.1450%" height="15" fill="rgb(224,124,37)"/><text x="66.3568%" y="415.50"></text></g><g><title>perf_iterate_sb (114 samples, 1.38%)</title><rect x="64.8985%" y="453" width="1.3775%" height="15" fill="rgb(251,171,30)"/><text x="65.1485%" y="463.50"></text></g><g><title>perf_iterate_ctx (95 samples, 1.15%)</title><rect x="65.1281%" y="437" width="1.1479%" height="15" fill="rgb(236,46,54)"/><text x="65.3781%" y="447.50"></text></g><g><title>perf_event_mmap_output (41 samples, 0.50%)</title><rect x="65.7806%" y="421" width="0.4954%" height="15" fill="rgb(245,213,5)"/><text x="66.0306%" y="431.50"></text></g><g><title>perf_event_mmap (120 samples, 1.45%)</title><rect x="64.8502%" y="469" width="1.4500%" height="15" fill="rgb(230,144,27)"/><text x="65.1002%" y="479.50"></text></g><g><title>__vma_adjust (10 samples, 0.12%)</title><rect x="66.3243%" y="453" width="0.1208%" height="15" fill="rgb(220,86,6)"/><text x="66.5743%" y="463.50"></text></g><g><title>mprotect_fixup (151 samples, 1.82%)</title><rect x="64.6568%" y="485" width="1.8246%" height="15" fill="rgb(240,20,13)"/><text x="64.9068%" y="495.50">m..</text></g><g><title>vma_merge (15 samples, 0.18%)</title><rect x="66.3001%" y="469" width="0.1812%" height="15" fill="rgb(217,89,34)"/><text x="66.5501%" y="479.50"></text></g><g><title>__x64_sys_mprotect (163 samples, 1.97%)</title><rect x="64.5360%" y="517" width="1.9696%" height="15" fill="rgb(229,13,5)"/><text x="64.7860%" y="527.50">_..</text></g><g><title>do_mprotect_pkey (163 samples, 1.97%)</title><rect x="64.5360%" y="501" width="1.9696%" height="15" fill="rgb(244,67,35)"/><text x="64.7860%" y="511.50">d..</text></g><g><title>do_syscall_64 (173 samples, 2.09%)</title><rect x="64.5360%" y="533" width="2.0904%" height="15" fill="rgb(221,40,2)"/><text x="64.7860%" y="543.50">d..</text></g><g><title>entry_SYSCALL_64 (192 samples, 2.32%)</title><rect x="64.5360%" y="549" width="2.3200%" height="15" fill="rgb(237,157,21)"/><text x="64.7860%" y="559.50">e..</text></g><g><title>prepare_exit_to_usermode (19 samples, 0.23%)</title><rect x="66.6264%" y="533" width="0.2296%" height="15" fill="rgb(222,94,11)"/><text x="66.8764%" y="543.50"></text></g><g><title>__GI___mprotect (203 samples, 2.45%)</title><rect x="64.5239%" y="565" width="2.4529%" height="15" fill="rgb(249,113,6)"/><text x="64.7739%" y="575.50">__..</text></g><g><title>pagevec_lru_move_fn (12 samples, 0.14%)</title><rect x="67.4239%" y="485" width="0.1450%" height="15" fill="rgb(238,137,36)"/><text x="67.6739%" y="495.50"></text></g><g><title>__lru_cache_add (15 samples, 0.18%)</title><rect x="67.3997%" y="501" width="0.1812%" height="15" fill="rgb(210,102,26)"/><text x="67.6497%" y="511.50"></text></g><g><title>clear_page_erms (38 samples, 0.46%)</title><rect x="67.8468%" y="421" width="0.4592%" height="15" fill="rgb(218,30,30)"/><text x="68.0968%" y="431.50"></text></g><g><title>alloc_pages_vma (54 samples, 0.65%)</title><rect x="67.6776%" y="501" width="0.6525%" height="15" fill="rgb(214,67,26)"/><text x="67.9276%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (53 samples, 0.64%)</title><rect x="67.6897%" y="485" width="0.6404%" height="15" fill="rgb(251,9,53)"/><text x="67.9397%" y="495.50"></text></g><g><title>get_page_from_freelist (51 samples, 0.62%)</title><rect x="67.7139%" y="469" width="0.6162%" height="15" fill="rgb(228,204,25)"/><text x="67.9639%" y="479.50"></text></g><g><title>prep_new_page (40 samples, 0.48%)</title><rect x="67.8468%" y="453" width="0.4833%" height="15" fill="rgb(207,153,8)"/><text x="68.0968%" y="463.50"></text></g><g><title>kernel_init_free_pages (40 samples, 0.48%)</title><rect x="67.8468%" y="437" width="0.4833%" height="15" fill="rgb(242,9,16)"/><text x="68.0968%" y="447.50"></text></g><g><title>get_mem_cgroup_from_mm (10 samples, 0.12%)</title><rect x="68.4147%" y="469" width="0.1208%" height="15" fill="rgb(217,211,10)"/><text x="68.6647%" y="479.50"></text></g><g><title>mem_cgroup_try_charge_delay (25 samples, 0.30%)</title><rect x="68.3664%" y="501" width="0.3021%" height="15" fill="rgb(219,228,52)"/><text x="68.6164%" y="511.50"></text></g><g><title>mem_cgroup_try_charge (23 samples, 0.28%)</title><rect x="68.3905%" y="485" width="0.2779%" height="15" fill="rgb(231,92,29)"/><text x="68.6405%" y="495.50"></text></g><g><title>try_charge (11 samples, 0.13%)</title><rect x="68.5355%" y="469" width="0.1329%" height="15" fill="rgb(232,8,23)"/><text x="68.7855%" y="479.50"></text></g><g><title>__handle_mm_fault (117 samples, 1.41%)</title><rect x="67.3151%" y="517" width="1.4137%" height="15" fill="rgb(216,211,34)"/><text x="67.5651%" y="527.50"></text></g><g><title>page_fault (142 samples, 1.72%)</title><rect x="67.0976%" y="565" width="1.7158%" height="15" fill="rgb(236,151,0)"/><text x="67.3476%" y="575.50"></text></g><g><title>do_user_addr_fault (139 samples, 1.68%)</title><rect x="67.1339%" y="549" width="1.6796%" height="15" fill="rgb(209,168,3)"/><text x="67.3839%" y="559.50"></text></g><g><title>handle_mm_fault (131 samples, 1.58%)</title><rect x="67.2305%" y="533" width="1.5829%" height="15" fill="rgb(208,129,28)"/><text x="67.4805%" y="543.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (27 samples, 0.33%)</title><rect x="68.8134%" y="565" width="0.3262%" height="15" fill="rgb(229,78,22)"/><text x="69.0634%" y="575.50"></text></g><g><title>prepare_exit_to_usermode (20 samples, 0.24%)</title><rect x="68.8980%" y="549" width="0.2417%" height="15" fill="rgb(228,187,13)"/><text x="69.1480%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (414 samples, 5.00%)</title><rect x="64.1493%" y="629" width="5.0024%" height="15" fill="rgb(240,119,24)"/><text x="64.3993%" y="639.50">hashbr..</text></g><g><title>__GI___libc_malloc (414 samples, 5.00%)</title><rect x="64.1493%" y="613" width="5.0024%" height="15" fill="rgb(209,194,42)"/><text x="64.3993%" y="623.50">__GI__..</text></g><g><title>_int_malloc (414 samples, 5.00%)</title><rect x="64.1493%" y="597" width="5.0024%" height="15" fill="rgb(247,200,46)"/><text x="64.3993%" y="607.50">_int_m..</text></g><g><title>sysmalloc (403 samples, 4.87%)</title><rect x="64.2823%" y="581" width="4.8695%" height="15" fill="rgb(218,76,16)"/><text x="64.5323%" y="591.50">sysmal..</text></g><g><title>std::time::Instant::elapsed (11 samples, 0.13%)</title><rect x="69.1518%" y="629" width="0.1329%" height="15" fill="rgb(225,21,48)"/><text x="69.4018%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (697 samples, 8.42%)</title><rect x="60.8748%" y="645" width="8.4219%" height="15" fill="rgb(239,223,50)"/><text x="61.1248%" y="655.50">decor_mem::v..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::generate_new_entities_from (848 samples, 10.25%)</title><rect x="59.3403%" y="677" width="10.2465%" height="15" fill="rgb(244,45,21)"/><text x="59.5903%" y="687.50">decor_mem::quer..</text></g><g><title>decor_mem::views::Views::insert (721 samples, 8.71%)</title><rect x="60.8748%" y="661" width="8.7119%" height="15" fill="rgb(232,33,43)"/><text x="61.1248%" y="671.50">decor_mem::v..</text></g><g><title>decor_mem::views::View::insert_row (24 samples, 0.29%)</title><rect x="69.2968%" y="645" width="0.2900%" height="15" fill="rgb(209,8,3)"/><text x="69.5468%" y="655.50"></text></g><g><title>core::fmt::write (24 samples, 0.29%)</title><rect x="69.2968%" y="629" width="0.2900%" height="15" fill="rgb(214,25,53)"/><text x="69.5468%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (24 samples, 0.29%)</title><rect x="69.2968%" y="613" width="0.2900%" height="15" fill="rgb(254,186,54)"/><text x="69.5468%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (23 samples, 0.28%)</title><rect x="69.3088%" y="597" width="0.2779%" height="15" fill="rgb(208,174,49)"/><text x="69.5588%" y="607.50"></text></g><g><title>core::fmt::write (13 samples, 0.16%)</title><rect x="69.4297%" y="581" width="0.1571%" height="15" fill="rgb(233,191,51)"/><text x="69.6797%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.14%)</title><rect x="69.4418%" y="565" width="0.1450%" height="15" fill="rgb(222,134,10)"/><text x="69.6918%" y="575.50"></text></g><g><title>sk_wait_data (13 samples, 0.16%)</title><rect x="69.8163%" y="389" width="0.1571%" height="15" fill="rgb(230,226,20)"/><text x="70.0663%" y="399.50"></text></g><g><title>wait_woken (12 samples, 0.14%)</title><rect x="69.8284%" y="373" width="0.1450%" height="15" fill="rgb(251,111,25)"/><text x="70.0784%" y="383.50"></text></g><g><title>schedule_timeout (11 samples, 0.13%)</title><rect x="69.8405%" y="357" width="0.1329%" height="15" fill="rgb(224,40,46)"/><text x="70.0905%" y="367.50"></text></g><g><title>schedule (11 samples, 0.13%)</title><rect x="69.8405%" y="341" width="0.1329%" height="15" fill="rgb(236,108,47)"/><text x="70.0905%" y="351.50"></text></g><g><title>__schedule (11 samples, 0.13%)</title><rect x="69.8405%" y="325" width="0.1329%" height="15" fill="rgb(234,93,0)"/><text x="70.0905%" y="335.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (21 samples, 0.25%)</title><rect x="69.7438%" y="581" width="0.2537%" height="15" fill="rgb(224,213,32)"/><text x="69.9938%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 0.25%)</title><rect x="69.7438%" y="565" width="0.2537%" height="15" fill="rgb(251,11,48)"/><text x="69.9938%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 0.25%)</title><rect x="69.7438%" y="549" width="0.2537%" height="15" fill="rgb(236,173,5)"/><text x="69.9938%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (21 samples, 0.25%)</title><rect x="69.7438%" y="533" width="0.2537%" height="15" fill="rgb(230,95,12)"/><text x="69.9938%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (21 samples, 0.25%)</title><rect x="69.7438%" y="517" width="0.2537%" height="15" fill="rgb(232,209,1)"/><text x="69.9938%" y="527.50"></text></g><g><title>__libc_recv (21 samples, 0.25%)</title><rect x="69.7438%" y="501" width="0.2537%" height="15" fill="rgb(232,6,1)"/><text x="69.9938%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.23%)</title><rect x="69.7680%" y="485" width="0.2296%" height="15" fill="rgb(210,224,50)"/><text x="70.0180%" y="495.50"></text></g><g><title>do_syscall_64 (19 samples, 0.23%)</title><rect x="69.7680%" y="469" width="0.2296%" height="15" fill="rgb(228,127,35)"/><text x="70.0180%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 0.23%)</title><rect x="69.7680%" y="453" width="0.2296%" height="15" fill="rgb(245,102,45)"/><text x="70.0180%" y="463.50"></text></g><g><title>__sys_recvfrom (18 samples, 0.22%)</title><rect x="69.7801%" y="437" width="0.2175%" height="15" fill="rgb(214,1,49)"/><text x="70.0301%" y="447.50"></text></g><g><title>inet_recvmsg (18 samples, 0.22%)</title><rect x="69.7801%" y="421" width="0.2175%" height="15" fill="rgb(226,163,40)"/><text x="70.0301%" y="431.50"></text></g><g><title>tcp_recvmsg (18 samples, 0.22%)</title><rect x="69.7801%" y="405" width="0.2175%" height="15" fill="rgb(239,212,28)"/><text x="70.0301%" y="415.50"></text></g><g><title>mysql::conn::Conn::read_packet (34 samples, 0.41%)</title><rect x="69.6109%" y="613" width="0.4108%" height="15" fill="rgb(220,20,13)"/><text x="69.8609%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.29%)</title><rect x="69.7318%" y="597" width="0.2900%" height="15" fill="rgb(210,164,35)"/><text x="69.9818%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (38 samples, 0.46%)</title><rect x="69.5868%" y="629" width="0.4592%" height="15" fill="rgb(248,109,41)"/><text x="69.8368%" y="639.50"></text></g><g><title>__wake_up_common (21 samples, 0.25%)</title><rect x="70.4567%" y="85" width="0.2537%" height="15" fill="rgb(238,23,50)"/><text x="70.7067%" y="95.50"></text></g><g><title>pollwake (21 samples, 0.25%)</title><rect x="70.4567%" y="69" width="0.2537%" height="15" fill="rgb(211,48,49)"/><text x="70.7067%" y="79.50"></text></g><g><title>try_to_wake_up (21 samples, 0.25%)</title><rect x="70.4567%" y="53" width="0.2537%" height="15" fill="rgb(223,36,21)"/><text x="70.7067%" y="63.50"></text></g><g><title>sock_def_readable (25 samples, 0.30%)</title><rect x="70.4326%" y="117" width="0.3021%" height="15" fill="rgb(207,123,46)"/><text x="70.6826%" y="127.50"></text></g><g><title>__wake_up_common_lock (23 samples, 0.28%)</title><rect x="70.4567%" y="101" width="0.2779%" height="15" fill="rgb(240,218,32)"/><text x="70.7067%" y="111.50"></text></g><g><title>tcp_ack (14 samples, 0.17%)</title><rect x="70.7347%" y="117" width="0.1692%" height="15" fill="rgb(252,5,43)"/><text x="70.9847%" y="127.50"></text></g><g><title>ip_local_deliver (45 samples, 0.54%)</title><rect x="70.3722%" y="213" width="0.5437%" height="15" fill="rgb(252,84,19)"/><text x="70.6222%" y="223.50"></text></g><g><title>ip_local_deliver_finish (45 samples, 0.54%)</title><rect x="70.3722%" y="197" width="0.5437%" height="15" fill="rgb(243,152,39)"/><text x="70.6222%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (45 samples, 0.54%)</title><rect x="70.3722%" y="181" width="0.5437%" height="15" fill="rgb(234,160,15)"/><text x="70.6222%" y="191.50"></text></g><g><title>tcp_v4_rcv (45 samples, 0.54%)</title><rect x="70.3722%" y="165" width="0.5437%" height="15" fill="rgb(237,34,20)"/><text x="70.6222%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (44 samples, 0.53%)</title><rect x="70.3842%" y="149" width="0.5317%" height="15" fill="rgb(229,97,13)"/><text x="70.6342%" y="159.50"></text></g><g><title>tcp_rcv_established (44 samples, 0.53%)</title><rect x="70.3842%" y="133" width="0.5317%" height="15" fill="rgb(234,71,50)"/><text x="70.6342%" y="143.50"></text></g><g><title>__netif_receive_skb_one_core (50 samples, 0.60%)</title><rect x="70.3359%" y="245" width="0.6042%" height="15" fill="rgb(253,155,4)"/><text x="70.5859%" y="255.50"></text></g><g><title>ip_rcv (48 samples, 0.58%)</title><rect x="70.3601%" y="229" width="0.5800%" height="15" fill="rgb(222,185,37)"/><text x="70.6101%" y="239.50"></text></g><g><title>__ip_queue_xmit (70 samples, 0.85%)</title><rect x="70.1063%" y="389" width="0.8458%" height="15" fill="rgb(251,177,13)"/><text x="70.3563%" y="399.50"></text></g><g><title>ip_output (63 samples, 0.76%)</title><rect x="70.1909%" y="373" width="0.7612%" height="15" fill="rgb(250,179,40)"/><text x="70.4409%" y="383.50"></text></g><g><title>ip_finish_output2 (62 samples, 0.75%)</title><rect x="70.2030%" y="357" width="0.7492%" height="15" fill="rgb(242,44,2)"/><text x="70.4530%" y="367.50"></text></g><g><title>__local_bh_enable_ip (56 samples, 0.68%)</title><rect x="70.2755%" y="341" width="0.6767%" height="15" fill="rgb(216,177,13)"/><text x="70.5255%" y="351.50"></text></g><g><title>do_softirq (55 samples, 0.66%)</title><rect x="70.2876%" y="325" width="0.6646%" height="15" fill="rgb(216,106,43)"/><text x="70.5376%" y="335.50"></text></g><g><title>do_softirq_own_stack (54 samples, 0.65%)</title><rect x="70.2997%" y="309" width="0.6525%" height="15" fill="rgb(216,183,2)"/><text x="70.5497%" y="319.50"></text></g><g><title>__do_softirq (53 samples, 0.64%)</title><rect x="70.3117%" y="293" width="0.6404%" height="15" fill="rgb(249,75,3)"/><text x="70.5617%" y="303.50"></text></g><g><title>net_rx_action (53 samples, 0.64%)</title><rect x="70.3117%" y="277" width="0.6404%" height="15" fill="rgb(219,67,39)"/><text x="70.5617%" y="287.50"></text></g><g><title>process_backlog (53 samples, 0.64%)</title><rect x="70.3117%" y="261" width="0.6404%" height="15" fill="rgb(253,228,2)"/><text x="70.5617%" y="271.50"></text></g><g><title>__tcp_transmit_skb (73 samples, 0.88%)</title><rect x="70.1063%" y="405" width="0.8821%" height="15" fill="rgb(235,138,27)"/><text x="70.3563%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (77 samples, 0.93%)</title><rect x="70.0942%" y="437" width="0.9304%" height="15" fill="rgb(236,97,51)"/><text x="70.3442%" y="447.50"></text></g><g><title>tcp_write_xmit (76 samples, 0.92%)</title><rect x="70.1063%" y="421" width="0.9183%" height="15" fill="rgb(240,80,30)"/><text x="70.3563%" y="431.50"></text></g><g><title>sock_sendmsg (88 samples, 1.06%)</title><rect x="70.0822%" y="485" width="1.0633%" height="15" fill="rgb(230,178,19)"/><text x="70.3322%" y="495.50"></text></g><g><title>tcp_sendmsg (88 samples, 1.06%)</title><rect x="70.0822%" y="469" width="1.0633%" height="15" fill="rgb(210,190,27)"/><text x="70.3322%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (87 samples, 1.05%)</title><rect x="70.0942%" y="453" width="1.0512%" height="15" fill="rgb(222,107,31)"/><text x="70.3442%" y="463.50"></text></g><g><title>do_syscall_64 (90 samples, 1.09%)</title><rect x="70.0701%" y="533" width="1.0875%" height="15" fill="rgb(216,127,34)"/><text x="70.3201%" y="543.50"></text></g><g><title>__x64_sys_sendto (90 samples, 1.09%)</title><rect x="70.0701%" y="517" width="1.0875%" height="15" fill="rgb(234,116,52)"/><text x="70.3201%" y="527.50"></text></g><g><title>__sys_sendto (90 samples, 1.09%)</title><rect x="70.0701%" y="501" width="1.0875%" height="15" fill="rgb(222,124,15)"/><text x="70.3201%" y="511.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (131 samples, 1.58%)</title><rect x="69.5868%" y="661" width="1.5829%" height="15" fill="rgb(231,179,28)"/><text x="69.8368%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (131 samples, 1.58%)</title><rect x="69.5868%" y="645" width="1.5829%" height="15" fill="rgb(226,93,45)"/><text x="69.8368%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (93 samples, 1.12%)</title><rect x="70.0459%" y="629" width="1.1237%" height="15" fill="rgb(215,8,51)"/><text x="70.2959%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (92 samples, 1.11%)</title><rect x="70.0580%" y="613" width="1.1116%" height="15" fill="rgb(223,106,5)"/><text x="70.3080%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (92 samples, 1.11%)</title><rect x="70.0580%" y="597" width="1.1116%" height="15" fill="rgb(250,191,5)"/><text x="70.3080%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (92 samples, 1.11%)</title><rect x="70.0580%" y="581" width="1.1116%" height="15" fill="rgb(242,132,44)"/><text x="70.3080%" y="591.50"></text></g><g><title>__libc_send (92 samples, 1.11%)</title><rect x="70.0580%" y="565" width="1.1116%" height="15" fill="rgb(251,152,29)"/><text x="70.3080%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (91 samples, 1.10%)</title><rect x="70.0701%" y="549" width="1.0996%" height="15" fill="rgb(218,179,5)"/><text x="70.3201%" y="559.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (9 samples, 0.11%)</title><rect x="71.1817%" y="645" width="0.1087%" height="15" fill="rgb(227,67,19)"/><text x="71.4317%" y="655.50"></text></g><g><title>core::fmt::write (10 samples, 0.12%)</title><rect x="71.3026%" y="629" width="0.1208%" height="15" fill="rgb(233,119,31)"/><text x="71.5526%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.12%)</title><rect x="71.3026%" y="613" width="0.1208%" height="15" fill="rgb(241,120,22)"/><text x="71.5526%" y="623.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,556 samples, 18.80%)</title><rect x="52.6945%" y="741" width="18.8014%" height="15" fill="rgb(224,102,30)"/><text x="52.9445%" y="751.50">msql_srv::MysqlIntermediary&lt;B..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (1,556 samples, 18.80%)</title><rect x="52.6945%" y="725" width="18.8014%" height="15" fill="rgb(210,164,37)"/><text x="52.9445%" y="735.50">msql_srv::MysqlIntermediary&lt;B..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (1,029 samples, 12.43%)</title><rect x="59.0623%" y="709" width="12.4335%" height="15" fill="rgb(226,191,16)"/><text x="59.3123%" y="719.50">&lt;decor_mem::Shim as..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (1,029 samples, 12.43%)</title><rect x="59.0623%" y="693" width="12.4335%" height="15" fill="rgb(214,40,45)"/><text x="59.3123%" y="703.50">decor_mem::query_tr..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (158 samples, 1.91%)</title><rect x="69.5868%" y="677" width="1.9091%" height="15" fill="rgb(244,29,26)"/><text x="69.8368%" y="687.50">d..</text></g><g><title>decor_mem::views::Views::delete (26 samples, 0.31%)</title><rect x="71.1817%" y="661" width="0.3142%" height="15" fill="rgb(216,16,5)"/><text x="71.4317%" y="671.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (17 samples, 0.21%)</title><rect x="71.2905%" y="645" width="0.2054%" height="15" fill="rgb(249,76,35)"/><text x="71.5405%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (25 samples, 0.30%)</title><rect x="71.7376%" y="661" width="0.3021%" height="15" fill="rgb(207,11,44)"/><text x="71.9876%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::expected (24 samples, 0.29%)</title><rect x="71.7496%" y="645" width="0.2900%" height="15" fill="rgb(228,190,49)"/><text x="71.9996%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="71.7496%" y="629" width="0.2900%" height="15" fill="rgb(214,173,12)"/><text x="71.9996%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="71.7496%" y="613" width="0.2900%" height="15" fill="rgb(218,26,35)"/><text x="71.9996%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.29%)</title><rect x="71.7496%" y="597" width="0.2900%" height="15" fill="rgb(220,200,19)"/><text x="71.9996%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.29%)</title><rect x="71.7496%" y="581" width="0.2900%" height="15" fill="rgb(239,95,49)"/><text x="71.9996%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 0.29%)</title><rect x="71.7496%" y="565" width="0.2900%" height="15" fill="rgb(235,85,53)"/><text x="71.9996%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.29%)</title><rect x="71.7496%" y="549" width="0.2900%" height="15" fill="rgb(233,133,31)"/><text x="71.9996%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (24 samples, 0.29%)</title><rect x="71.7496%" y="533" width="0.2900%" height="15" fill="rgb(218,25,20)"/><text x="71.9996%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.29%)</title><rect x="71.7496%" y="517" width="0.2900%" height="15" fill="rgb(252,210,38)"/><text x="71.9996%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.29%)</title><rect x="71.7496%" y="501" width="0.2900%" height="15" fill="rgb(242,134,21)"/><text x="71.9996%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 0.40%)</title><rect x="71.6651%" y="741" width="0.3987%" height="15" fill="rgb(213,28,48)"/><text x="71.9151%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (33 samples, 0.40%)</title><rect x="71.6651%" y="725" width="0.3987%" height="15" fill="rgb(250,196,2)"/><text x="71.9151%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (33 samples, 0.40%)</title><rect x="71.6651%" y="709" width="0.3987%" height="15" fill="rgb(227,5,17)"/><text x="71.9151%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 0.40%)</title><rect x="71.6651%" y="693" width="0.3987%" height="15" fill="rgb(221,226,24)"/><text x="71.9151%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (33 samples, 0.40%)</title><rect x="71.6651%" y="677" width="0.3987%" height="15" fill="rgb(211,5,48)"/><text x="71.9151%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.12%)</title><rect x="72.1846%" y="565" width="0.1208%" height="15" fill="rgb(219,150,6)"/><text x="72.4346%" y="575.50"></text></g><g><title>core::fmt::write (12 samples, 0.14%)</title><rect x="72.3417%" y="549" width="0.1450%" height="15" fill="rgb(251,46,16)"/><text x="72.5917%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.23%)</title><rect x="72.3055%" y="565" width="0.2296%" height="15" fill="rgb(220,204,40)"/><text x="72.5555%" y="575.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (23 samples, 0.28%)</title><rect x="72.5350%" y="565" width="0.2779%" height="15" fill="rgb(211,85,2)"/><text x="72.7850%" y="575.50"></text></g><g><title>crypto::sha3::keccak_f (23 samples, 0.28%)</title><rect x="72.5350%" y="549" width="0.2779%" height="15" fill="rgb(229,17,7)"/><text x="72.7850%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (18 samples, 0.22%)</title><rect x="72.9096%" y="469" width="0.2175%" height="15" fill="rgb(239,72,28)"/><text x="73.1596%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.22%)</title><rect x="72.9096%" y="453" width="0.2175%" height="15" fill="rgb(230,47,54)"/><text x="73.1596%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (18 samples, 0.22%)</title><rect x="72.9096%" y="437" width="0.2175%" height="15" fill="rgb(214,50,8)"/><text x="73.1596%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.22%)</title><rect x="72.9096%" y="421" width="0.2175%" height="15" fill="rgb(216,198,43)"/><text x="73.1596%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.21%)</title><rect x="72.9217%" y="405" width="0.2054%" height="15" fill="rgb(234,20,35)"/><text x="73.1717%" y="415.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.27%)</title><rect x="73.1634%" y="357" width="0.2658%" height="15" fill="rgb(254,45,19)"/><text x="73.4134%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (53 samples, 0.64%)</title><rect x="72.8734%" y="533" width="0.6404%" height="15" fill="rgb(219,14,44)"/><text x="73.1234%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.64%)</title><rect x="72.8734%" y="517" width="0.6404%" height="15" fill="rgb(217,220,26)"/><text x="73.1234%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (52 samples, 0.63%)</title><rect x="72.8855%" y="501" width="0.6283%" height="15" fill="rgb(213,158,28)"/><text x="73.1355%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.60%)</title><rect x="72.9096%" y="485" width="0.6042%" height="15" fill="rgb(252,51,52)"/><text x="73.1596%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (32 samples, 0.39%)</title><rect x="73.1271%" y="469" width="0.3867%" height="15" fill="rgb(246,89,16)"/><text x="73.3771%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (32 samples, 0.39%)</title><rect x="73.1271%" y="453" width="0.3867%" height="15" fill="rgb(216,158,49)"/><text x="73.3771%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.39%)</title><rect x="73.1271%" y="437" width="0.3867%" height="15" fill="rgb(236,107,19)"/><text x="73.3771%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.39%)</title><rect x="73.1271%" y="421" width="0.3867%" height="15" fill="rgb(228,185,30)"/><text x="73.3771%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (32 samples, 0.39%)</title><rect x="73.1271%" y="405" width="0.3867%" height="15" fill="rgb(246,134,8)"/><text x="73.3771%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.39%)</title><rect x="73.1271%" y="389" width="0.3867%" height="15" fill="rgb(214,143,50)"/><text x="73.3771%" y="399.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.39%)</title><rect x="73.1271%" y="373" width="0.3867%" height="15" fill="rgb(228,75,8)"/><text x="73.3771%" y="383.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (62 samples, 0.75%)</title><rect x="72.8130%" y="565" width="0.7492%" height="15" fill="rgb(207,175,4)"/><text x="73.0630%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 0.69%)</title><rect x="72.8734%" y="549" width="0.6887%" height="15" fill="rgb(205,108,24)"/><text x="73.1234%" y="559.50"></text></g><g><title>core::fmt::write (19 samples, 0.23%)</title><rect x="73.6709%" y="565" width="0.2296%" height="15" fill="rgb(244,120,49)"/><text x="73.9209%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (19 samples, 0.23%)</title><rect x="73.6709%" y="549" width="0.2296%" height="15" fill="rgb(223,47,38)"/><text x="73.9209%" y="559.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (18 samples, 0.22%)</title><rect x="73.6829%" y="533" width="0.2175%" height="15" fill="rgb(229,179,11)"/><text x="73.9329%" y="543.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (23 samples, 0.28%)</title><rect x="73.9850%" y="565" width="0.2779%" height="15" fill="rgb(231,122,1)"/><text x="74.2350%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (15 samples, 0.18%)</title><rect x="74.0817%" y="549" width="0.1812%" height="15" fill="rgb(245,119,9)"/><text x="74.3317%" y="559.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (47 samples, 0.57%)</title><rect x="74.2629%" y="549" width="0.5679%" height="15" fill="rgb(241,163,25)"/><text x="74.5129%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (41 samples, 0.50%)</title><rect x="74.3354%" y="533" width="0.4954%" height="15" fill="rgb(217,214,3)"/><text x="74.5854%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (55 samples, 0.66%)</title><rect x="74.2629%" y="565" width="0.6646%" height="15" fill="rgb(240,86,28)"/><text x="74.5129%" y="575.50"></text></g><g><title>start_thread (229 samples, 2.77%)</title><rect x="72.1846%" y="741" width="2.7670%" height="15" fill="rgb(215,47,9)"/><text x="72.4346%" y="751.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (229 samples, 2.77%)</title><rect x="72.1846%" y="725" width="2.7670%" height="15" fill="rgb(252,25,45)"/><text x="72.4346%" y="735.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (229 samples, 2.77%)</title><rect x="72.1846%" y="709" width="2.7670%" height="15" fill="rgb(251,164,9)"/><text x="72.4346%" y="719.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (229 samples, 2.77%)</title><rect x="72.1846%" y="693" width="2.7670%" height="15" fill="rgb(233,194,0)"/><text x="72.4346%" y="703.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (229 samples, 2.77%)</title><rect x="72.1846%" y="677" width="2.7670%" height="15" fill="rgb(249,111,24)"/><text x="72.4346%" y="687.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (229 samples, 2.77%)</title><rect x="72.1846%" y="661" width="2.7670%" height="15" fill="rgb(250,223,3)"/><text x="72.4346%" y="671.50">st..</text></g><g><title>decor_mem::Shim::run_on_tcp (229 samples, 2.77%)</title><rect x="72.1846%" y="645" width="2.7670%" height="15" fill="rgb(236,178,37)"/><text x="72.4346%" y="655.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (229 samples, 2.77%)</title><rect x="72.1846%" y="629" width="2.7670%" height="15" fill="rgb(241,158,50)"/><text x="72.4346%" y="639.50">ms..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (229 samples, 2.77%)</title><rect x="72.1846%" y="613" width="2.7670%" height="15" fill="rgb(213,121,41)"/><text x="72.4346%" y="623.50">ms..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (229 samples, 2.77%)</title><rect x="72.1846%" y="597" width="2.7670%" height="15" fill="rgb(240,92,3)"/><text x="72.4346%" y="607.50">&lt;d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (229 samples, 2.77%)</title><rect x="72.1846%" y="581" width="2.7670%" height="15" fill="rgb(205,123,3)"/><text x="72.4346%" y="591.50">de..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="75.1692%" y="581" width="0.1087%" height="15" fill="rgb(205,97,47)"/><text x="75.4192%" y="591.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (26 samples, 0.31%)</title><rect x="75.3504%" y="581" width="0.3142%" height="15" fill="rgb(247,152,14)"/><text x="75.6004%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.31%)</title><rect x="75.3504%" y="565" width="0.3142%" height="15" fill="rgb(248,195,53)"/><text x="75.6004%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (26 samples, 0.31%)</title><rect x="75.3504%" y="549" width="0.3142%" height="15" fill="rgb(226,201,16)"/><text x="75.6004%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.31%)</title><rect x="75.3504%" y="533" width="0.3142%" height="15" fill="rgb(205,98,0)"/><text x="75.6004%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26 samples, 0.31%)</title><rect x="75.3504%" y="517" width="0.3142%" height="15" fill="rgb(214,191,48)"/><text x="75.6004%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.31%)</title><rect x="75.3504%" y="501" width="0.3142%" height="15" fill="rgb(237,112,39)"/><text x="75.6004%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.31%)</title><rect x="75.3504%" y="485" width="0.3142%" height="15" fill="rgb(247,203,27)"/><text x="75.6004%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (26 samples, 0.31%)</title><rect x="75.3504%" y="469" width="0.3142%" height="15" fill="rgb(235,124,28)"/><text x="75.6004%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.31%)</title><rect x="75.3504%" y="453" width="0.3142%" height="15" fill="rgb(208,207,46)"/><text x="75.6004%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.31%)</title><rect x="75.3504%" y="437" width="0.3142%" height="15" fill="rgb(234,176,4)"/><text x="75.6004%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (26 samples, 0.31%)</title><rect x="75.3504%" y="421" width="0.3142%" height="15" fill="rgb(230,133,28)"/><text x="75.6004%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.31%)</title><rect x="75.3504%" y="405" width="0.3142%" height="15" fill="rgb(211,137,40)"/><text x="75.6004%" y="415.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.31%)</title><rect x="75.3504%" y="389" width="0.3142%" height="15" fill="rgb(254,35,13)"/><text x="75.6004%" y="399.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.31%)</title><rect x="75.3504%" y="373" width="0.3142%" height="15" fill="rgb(225,49,51)"/><text x="75.6004%" y="383.50"></text></g><g><title>_int_malloc (26 samples, 0.31%)</title><rect x="75.3504%" y="357" width="0.3142%" height="15" fill="rgb(251,10,15)"/><text x="75.6004%" y="367.50"></text></g><g><title>core::fmt::write (15 samples, 0.18%)</title><rect x="75.6646%" y="581" width="0.1812%" height="15" fill="rgb(228,207,15)"/><text x="75.9146%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (15 samples, 0.18%)</title><rect x="75.6646%" y="565" width="0.1812%" height="15" fill="rgb(241,99,19)"/><text x="75.9146%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (13 samples, 0.16%)</title><rect x="75.6887%" y="549" width="0.1571%" height="15" fill="rgb(207,104,49)"/><text x="75.9387%" y="559.50"></text></g><g><title>core::fmt::write (11 samples, 0.13%)</title><rect x="75.7129%" y="533" width="0.1329%" height="15" fill="rgb(234,99,18)"/><text x="75.9629%" y="543.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (20 samples, 0.24%)</title><rect x="75.9787%" y="581" width="0.2417%" height="15" fill="rgb(213,191,49)"/><text x="76.2287%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (100 samples, 1.21%)</title><rect x="75.1208%" y="741" width="1.2083%" height="15" fill="rgb(210,226,19)"/><text x="75.3708%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (100 samples, 1.21%)</title><rect x="75.1208%" y="725" width="1.2083%" height="15" fill="rgb(229,97,18)"/><text x="75.3708%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (100 samples, 1.21%)</title><rect x="75.1208%" y="709" width="1.2083%" height="15" fill="rgb(211,167,15)"/><text x="75.3708%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (100 samples, 1.21%)</title><rect x="75.1208%" y="693" width="1.2083%" height="15" fill="rgb(210,169,34)"/><text x="75.3708%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (100 samples, 1.21%)</title><rect x="75.1208%" y="677" width="1.2083%" height="15" fill="rgb(241,121,31)"/><text x="75.3708%" y="687.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (100 samples, 1.21%)</title><rect x="75.1208%" y="661" width="1.2083%" height="15" fill="rgb(232,40,11)"/><text x="75.3708%" y="671.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (100 samples, 1.21%)</title><rect x="75.1208%" y="645" width="1.2083%" height="15" fill="rgb(205,86,26)"/><text x="75.3708%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (100 samples, 1.21%)</title><rect x="75.1208%" y="629" width="1.2083%" height="15" fill="rgb(231,126,28)"/><text x="75.3708%" y="639.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (97 samples, 1.17%)</title><rect x="75.1571%" y="613" width="1.1721%" height="15" fill="rgb(219,221,18)"/><text x="75.4071%" y="623.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (97 samples, 1.17%)</title><rect x="75.1571%" y="597" width="1.1721%" height="15" fill="rgb(211,40,0)"/><text x="75.4071%" y="607.50"></text></g><g><title>core::fmt::write (19 samples, 0.23%)</title><rect x="76.4741%" y="629" width="0.2296%" height="15" fill="rgb(239,85,43)"/><text x="76.7241%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (16 samples, 0.19%)</title><rect x="76.5104%" y="613" width="0.1933%" height="15" fill="rgb(231,55,21)"/><text x="76.7604%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.14%)</title><rect x="76.5587%" y="597" width="0.1450%" height="15" fill="rgb(225,184,43)"/><text x="76.8087%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (36 samples, 0.43%)</title><rect x="76.3896%" y="645" width="0.4350%" height="15" fill="rgb(251,158,41)"/><text x="76.6396%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.22%)</title><rect x="77.0300%" y="629" width="0.2175%" height="15" fill="rgb(234,159,37)"/><text x="77.2800%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.14%)</title><rect x="77.1025%" y="613" width="0.1450%" height="15" fill="rgb(216,204,22)"/><text x="77.3525%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.11%)</title><rect x="77.2475%" y="629" width="0.1087%" height="15" fill="rgb(214,17,3)"/><text x="77.4975%" y="639.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.18%)</title><rect x="77.3683%" y="629" width="0.1812%" height="15" fill="rgb(212,111,17)"/><text x="77.6183%" y="639.50"></text></g><g><title>malloc_consolidate (53 samples, 0.64%)</title><rect x="77.9604%" y="581" width="0.6404%" height="15" fill="rgb(221,157,24)"/><text x="78.2104%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.85%)</title><rect x="77.7670%" y="629" width="0.8458%" height="15" fill="rgb(252,16,13)"/><text x="78.0170%" y="639.50"></text></g><g><title>__GI___libc_malloc (69 samples, 0.83%)</title><rect x="77.7791%" y="613" width="0.8337%" height="15" fill="rgb(221,62,2)"/><text x="78.0291%" y="623.50"></text></g><g><title>_int_malloc (68 samples, 0.82%)</title><rect x="77.7912%" y="597" width="0.8217%" height="15" fill="rgb(247,87,22)"/><text x="78.0412%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.13%)</title><rect x="78.7579%" y="613" width="0.1329%" height="15" fill="rgb(215,73,9)"/><text x="79.0079%" y="623.50"></text></g><g><title>core::fmt::write (35 samples, 0.42%)</title><rect x="78.6129%" y="629" width="0.4229%" height="15" fill="rgb(207,175,33)"/><text x="78.8629%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (12 samples, 0.14%)</title><rect x="78.8908%" y="613" width="0.1450%" height="15" fill="rgb(243,129,54)"/><text x="79.1408%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (11 samples, 0.13%)</title><rect x="78.9029%" y="597" width="0.1329%" height="15" fill="rgb(227,119,45)"/><text x="79.1529%" y="607.50"></text></g><g><title>_int_free (10 samples, 0.12%)</title><rect x="79.3016%" y="597" width="0.1208%" height="15" fill="rgb(205,109,36)"/><text x="79.5516%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (38 samples, 0.46%)</title><rect x="79.0358%" y="629" width="0.4592%" height="15" fill="rgb(205,6,39)"/><text x="79.2858%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (21 samples, 0.25%)</title><rect x="79.2412%" y="613" width="0.2537%" height="15" fill="rgb(221,32,16)"/><text x="79.4912%" y="623.50"></text></g><g><title>__GI___libc_free (9 samples, 0.11%)</title><rect x="79.5433%" y="581" width="0.1087%" height="15" fill="rgb(228,144,50)"/><text x="79.7933%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.17%)</title><rect x="79.5433%" y="613" width="0.1692%" height="15" fill="rgb(229,201,53)"/><text x="79.7933%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.17%)</title><rect x="79.5433%" y="597" width="0.1692%" height="15" fill="rgb(249,153,27)"/><text x="79.7933%" y="607.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (15 samples, 0.18%)</title><rect x="79.5433%" y="629" width="0.1812%" height="15" fill="rgb(227,106,25)"/><text x="79.7933%" y="639.50"></text></g><g><title>decor_mem::views::Views::get_view (9 samples, 0.11%)</title><rect x="79.7849%" y="629" width="0.1087%" height="15" fill="rgb(230,65,29)"/><text x="80.0349%" y="639.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (293 samples, 3.54%)</title><rect x="76.3896%" y="677" width="3.5404%" height="15" fill="rgb(221,57,46)"/><text x="76.6396%" y="687.50">&lt;dec..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (293 samples, 3.54%)</title><rect x="76.3896%" y="661" width="3.5404%" height="15" fill="rgb(229,161,17)"/><text x="76.6396%" y="671.50">deco..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (257 samples, 3.11%)</title><rect x="76.8246%" y="645" width="3.1054%" height="15" fill="rgb(222,213,11)"/><text x="77.0746%" y="655.50">dec..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.14%)</title><rect x="80.3649%" y="613" width="0.1450%" height="15" fill="rgb(235,35,13)"/><text x="80.6149%" y="623.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (10 samples, 0.12%)</title><rect x="80.7153%" y="613" width="0.1208%" height="15" fill="rgb(233,158,34)"/><text x="80.9653%" y="623.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (62 samples, 0.75%)</title><rect x="80.1595%" y="645" width="0.7492%" height="15" fill="rgb(215,151,48)"/><text x="80.4095%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (55 samples, 0.66%)</title><rect x="80.2441%" y="629" width="0.6646%" height="15" fill="rgb(229,84,14)"/><text x="80.4941%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (16 samples, 0.19%)</title><rect x="80.9449%" y="613" width="0.1933%" height="15" fill="rgb(229,68,14)"/><text x="81.1949%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (13 samples, 0.16%)</title><rect x="80.9812%" y="597" width="0.1571%" height="15" fill="rgb(243,106,26)"/><text x="81.2312%" y="607.50"></text></g><g><title>core::fmt::write (19 samples, 0.23%)</title><rect x="80.9207%" y="629" width="0.2296%" height="15" fill="rgb(206,45,38)"/><text x="81.1707%" y="639.50"></text></g><g><title>handle_mm_fault (14 samples, 0.17%)</title><rect x="81.3799%" y="565" width="0.1692%" height="15" fill="rgb(226,6,15)"/><text x="81.6299%" y="575.50"></text></g><g><title>__handle_mm_fault (14 samples, 0.17%)</title><rect x="81.3799%" y="549" width="0.1692%" height="15" fill="rgb(232,22,54)"/><text x="81.6299%" y="559.50"></text></g><g><title>page_fault (18 samples, 0.22%)</title><rect x="81.3436%" y="597" width="0.2175%" height="15" fill="rgb(229,222,32)"/><text x="81.5936%" y="607.50"></text></g><g><title>do_user_addr_fault (18 samples, 0.22%)</title><rect x="81.3436%" y="581" width="0.2175%" height="15" fill="rgb(228,62,29)"/><text x="81.5936%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (40 samples, 0.48%)</title><rect x="81.1503%" y="629" width="0.4833%" height="15" fill="rgb(251,103,34)"/><text x="81.4003%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (32 samples, 0.39%)</title><rect x="81.2470%" y="613" width="0.3867%" height="15" fill="rgb(233,12,30)"/><text x="81.4970%" y="623.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (79 samples, 0.95%)</title><rect x="80.9087%" y="645" width="0.9546%" height="15" fill="rgb(238,52,0)"/><text x="81.1587%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (460 samples, 5.56%)</title><rect x="76.3896%" y="741" width="5.5582%" height="15" fill="rgb(223,98,5)"/><text x="76.6396%" y="751.50">std::sy..</text></g><g><title>decor_mem::Shim::run_on_tcp (460 samples, 5.56%)</title><rect x="76.3896%" y="725" width="5.5582%" height="15" fill="rgb(228,75,37)"/><text x="76.6396%" y="735.50">decor_m..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (460 samples, 5.56%)</title><rect x="76.3896%" y="709" width="5.5582%" height="15" fill="rgb(205,115,49)"/><text x="76.6396%" y="719.50">msql_sr..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (460 samples, 5.56%)</title><rect x="76.3896%" y="693" width="5.5582%" height="15" fill="rgb(250,154,43)"/><text x="76.6396%" y="703.50">msql_sr..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (167 samples, 2.02%)</title><rect x="79.9299%" y="677" width="2.0179%" height="15" fill="rgb(226,43,29)"/><text x="80.1799%" y="687.50">&lt;..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (167 samples, 2.02%)</title><rect x="79.9299%" y="661" width="2.0179%" height="15" fill="rgb(249,228,39)"/><text x="80.1799%" y="671.50">d..</text></g><g><title>[unknown] (6,144 samples, 74.24%)</title><rect x="7.7815%" y="757" width="74.2388%" height="15" fill="rgb(216,79,43)"/><text x="8.0315%" y="767.50">[unknown]</text></g><g><title>free_pcppages_bulk (16 samples, 0.19%)</title><rect x="82.2015%" y="533" width="0.1933%" height="15" fill="rgb(228,95,12)"/><text x="82.4515%" y="543.50"></text></g><g><title>__free_one_page (12 samples, 0.14%)</title><rect x="82.2499%" y="517" width="0.1450%" height="15" fill="rgb(249,221,15)"/><text x="82.4999%" y="527.50"></text></g><g><title>free_unref_page_list (19 samples, 0.23%)</title><rect x="82.1774%" y="549" width="0.2296%" height="15" fill="rgb(233,34,13)"/><text x="82.4274%" y="559.50"></text></g><g><title>tlb_finish_mmu (31 samples, 0.37%)</title><rect x="82.0686%" y="581" width="0.3746%" height="15" fill="rgb(214,103,39)"/><text x="82.3186%" y="591.50"></text></g><g><title>release_pages (30 samples, 0.36%)</title><rect x="82.0807%" y="565" width="0.3625%" height="15" fill="rgb(251,126,39)"/><text x="82.3307%" y="575.50"></text></g><g><title>__malloc_arena_thread_freeres (60 samples, 0.72%)</title><rect x="82.0203%" y="725" width="0.7250%" height="15" fill="rgb(214,216,36)"/><text x="82.2703%" y="735.50"></text></g><g><title>_int_free (60 samples, 0.72%)</title><rect x="82.0203%" y="709" width="0.7250%" height="15" fill="rgb(220,221,8)"/><text x="82.2703%" y="719.50"></text></g><g><title>__GI_munmap (56 samples, 0.68%)</title><rect x="82.0686%" y="693" width="0.6767%" height="15" fill="rgb(240,216,3)"/><text x="82.3186%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (56 samples, 0.68%)</title><rect x="82.0686%" y="677" width="0.6767%" height="15" fill="rgb(232,218,17)"/><text x="82.3186%" y="687.50"></text></g><g><title>do_syscall_64 (56 samples, 0.68%)</title><rect x="82.0686%" y="661" width="0.6767%" height="15" fill="rgb(229,163,45)"/><text x="82.3186%" y="671.50"></text></g><g><title>__x64_sys_munmap (56 samples, 0.68%)</title><rect x="82.0686%" y="645" width="0.6767%" height="15" fill="rgb(231,110,42)"/><text x="82.3186%" y="655.50"></text></g><g><title>__vm_munmap (56 samples, 0.68%)</title><rect x="82.0686%" y="629" width="0.6767%" height="15" fill="rgb(208,170,48)"/><text x="82.3186%" y="639.50"></text></g><g><title>__do_munmap (56 samples, 0.68%)</title><rect x="82.0686%" y="613" width="0.6767%" height="15" fill="rgb(239,116,25)"/><text x="82.3186%" y="623.50"></text></g><g><title>unmap_region (56 samples, 0.68%)</title><rect x="82.0686%" y="597" width="0.6767%" height="15" fill="rgb(219,200,50)"/><text x="82.3186%" y="607.50"></text></g><g><title>unmap_vmas (25 samples, 0.30%)</title><rect x="82.4432%" y="581" width="0.3021%" height="15" fill="rgb(245,200,0)"/><text x="82.6932%" y="591.50"></text></g><g><title>unmap_page_range (25 samples, 0.30%)</title><rect x="82.4432%" y="565" width="0.3021%" height="15" fill="rgb(245,119,33)"/><text x="82.6932%" y="575.50"></text></g><g><title>page_remove_rmap.part.0 (9 samples, 0.11%)</title><rect x="82.6365%" y="549" width="0.1087%" height="15" fill="rgb(231,125,12)"/><text x="82.8865%" y="559.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="82.9386%" y="581" width="0.1571%" height="15" fill="rgb(216,96,41)"/><text x="83.1886%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.21%)</title><rect x="83.1561%" y="581" width="0.2054%" height="15" fill="rgb(248,43,45)"/><text x="83.4061%" y="591.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.19%)</title><rect x="83.1682%" y="565" width="0.1933%" height="15" fill="rgb(217,222,7)"/><text x="83.4182%" y="575.50"></text></g><g><title>_int_realloc (15 samples, 0.18%)</title><rect x="83.1803%" y="549" width="0.1812%" height="15" fill="rgb(233,28,6)"/><text x="83.4303%" y="559.50"></text></g><g><title>_int_malloc (14 samples, 0.17%)</title><rect x="83.1924%" y="533" width="0.1692%" height="15" fill="rgb(231,218,15)"/><text x="83.4424%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.51%)</title><rect x="82.8661%" y="597" width="0.5075%" height="15" fill="rgb(226,171,48)"/><text x="83.1161%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="83.4944%" y="565" width="0.1087%" height="15" fill="rgb(235,201,9)"/><text x="83.7444%" y="575.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (21 samples, 0.25%)</title><rect x="83.6032%" y="565" width="0.2537%" height="15" fill="rgb(217,80,15)"/><text x="83.8532%" y="575.50"></text></g><g><title>crypto::sha3::keccak_f (18 samples, 0.22%)</title><rect x="83.6394%" y="549" width="0.2175%" height="15" fill="rgb(219,152,8)"/><text x="83.8894%" y="559.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (23 samples, 0.28%)</title><rect x="84.0503%" y="533" width="0.2779%" height="15" fill="rgb(243,107,38)"/><text x="84.3003%" y="543.50"></text></g><g><title>crypto::sha3::keccak_f (19 samples, 0.23%)</title><rect x="84.0986%" y="517" width="0.2296%" height="15" fill="rgb(231,17,5)"/><text x="84.3486%" y="527.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (28 samples, 0.34%)</title><rect x="84.0140%" y="549" width="0.3383%" height="15" fill="rgb(209,25,54)"/><text x="84.2640%" y="559.50"></text></g><g><title>crypto::digest::Digest::result_str (30 samples, 0.36%)</title><rect x="84.0019%" y="565" width="0.3625%" height="15" fill="rgb(219,0,2)"/><text x="84.2519%" y="575.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (89 samples, 1.08%)</title><rect x="83.4461%" y="581" width="1.0754%" height="15" fill="rgb(246,9,5)"/><text x="83.6961%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (13 samples, 0.16%)</title><rect x="84.3644%" y="565" width="0.1571%" height="15" fill="rgb(226,159,4)"/><text x="84.6144%" y="575.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (100 samples, 1.21%)</title><rect x="83.3736%" y="597" width="1.2083%" height="15" fill="rgb(219,175,34)"/><text x="83.6236%" y="607.50"></text></g><g><title>__GI___libc_malloc (99 samples, 1.20%)</title><rect x="85.2465%" y="389" width="1.1962%" height="15" fill="rgb(236,10,46)"/><text x="85.4965%" y="399.50"></text></g><g><title>_int_malloc (53 samples, 0.64%)</title><rect x="85.8023%" y="373" width="0.6404%" height="15" fill="rgb(240,211,16)"/><text x="86.0523%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (119 samples, 1.44%)</title><rect x="85.0773%" y="565" width="1.4379%" height="15" fill="rgb(205,3,43)"/><text x="85.3273%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (116 samples, 1.40%)</title><rect x="85.1136%" y="549" width="1.4016%" height="15" fill="rgb(245,7,22)"/><text x="85.3636%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (116 samples, 1.40%)</title><rect x="85.1136%" y="533" width="1.4016%" height="15" fill="rgb(239,132,32)"/><text x="85.3636%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (114 samples, 1.38%)</title><rect x="85.1377%" y="517" width="1.3775%" height="15" fill="rgb(228,202,34)"/><text x="85.3877%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (106 samples, 1.28%)</title><rect x="85.2344%" y="501" width="1.2808%" height="15" fill="rgb(254,200,22)"/><text x="85.4844%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (106 samples, 1.28%)</title><rect x="85.2344%" y="485" width="1.2808%" height="15" fill="rgb(219,10,39)"/><text x="85.4844%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (106 samples, 1.28%)</title><rect x="85.2344%" y="469" width="1.2808%" height="15" fill="rgb(226,210,39)"/><text x="85.4844%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (106 samples, 1.28%)</title><rect x="85.2344%" y="453" width="1.2808%" height="15" fill="rgb(208,219,16)"/><text x="85.4844%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (106 samples, 1.28%)</title><rect x="85.2344%" y="437" width="1.2808%" height="15" fill="rgb(216,158,51)"/><text x="85.4844%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (106 samples, 1.28%)</title><rect x="85.2344%" y="421" width="1.2808%" height="15" fill="rgb(233,14,44)"/><text x="85.4844%" y="431.50"></text></g><g><title>alloc::alloc::alloc (105 samples, 1.27%)</title><rect x="85.2465%" y="405" width="1.2687%" height="15" fill="rgb(237,97,39)"/><text x="85.4965%" y="415.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (17 samples, 0.21%)</title><rect x="86.6481%" y="565" width="0.2054%" height="15" fill="rgb(218,198,43)"/><text x="86.8981%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="86.7206%" y="549" width="0.1329%" height="15" fill="rgb(231,104,20)"/><text x="86.9706%" y="559.50"></text></g><g><title>__GI___libc_free (9 samples, 0.11%)</title><rect x="86.9986%" y="533" width="0.1087%" height="15" fill="rgb(254,36,13)"/><text x="87.2486%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.58%)</title><rect x="86.8777%" y="565" width="0.5800%" height="15" fill="rgb(248,14,50)"/><text x="87.1277%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (42 samples, 0.51%)</title><rect x="86.9502%" y="549" width="0.5075%" height="15" fill="rgb(217,107,29)"/><text x="87.2002%" y="559.50"></text></g><g><title>_int_free (26 samples, 0.31%)</title><rect x="87.1435%" y="533" width="0.3142%" height="15" fill="rgb(251,169,33)"/><text x="87.3935%" y="543.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.14%)</title><rect x="87.5785%" y="565" width="0.1450%" height="15" fill="rgb(217,108,32)"/><text x="87.8285%" y="575.50"></text></g><g><title>_int_free (9 samples, 0.11%)</title><rect x="87.8081%" y="565" width="0.1087%" height="15" fill="rgb(219,66,42)"/><text x="88.0581%" y="575.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.18%)</title><rect x="87.9531%" y="549" width="0.1812%" height="15" fill="rgb(206,180,7)"/><text x="88.2031%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.27%)</title><rect x="87.9169%" y="565" width="0.2658%" height="15" fill="rgb(208,226,31)"/><text x="88.1669%" y="575.50"></text></g><g><title>core::fmt::write (18 samples, 0.22%)</title><rect x="88.1948%" y="565" width="0.2175%" height="15" fill="rgb(218,26,49)"/><text x="88.4448%" y="575.50"></text></g><g><title>_int_free (31 samples, 0.37%)</title><rect x="88.6298%" y="549" width="0.3746%" height="15" fill="rgb(233,197,48)"/><text x="88.8798%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (66 samples, 0.80%)</title><rect x="88.4123%" y="565" width="0.7975%" height="15" fill="rgb(252,181,51)"/><text x="88.6623%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.21%)</title><rect x="89.0043%" y="549" width="0.2054%" height="15" fill="rgb(253,90,19)"/><text x="89.2543%" y="559.50"></text></g><g><title>crypto::digest::Digest::result_str (14 samples, 0.17%)</title><rect x="89.2823%" y="565" width="0.1692%" height="15" fill="rgb(215,171,30)"/><text x="89.5323%" y="575.50"></text></g><g><title>decor_mem::helpers::get_col_index (13 samples, 0.16%)</title><rect x="89.4514%" y="565" width="0.1571%" height="15" fill="rgb(214,222,9)"/><text x="89.7014%" y="575.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (10 samples, 0.12%)</title><rect x="89.6689%" y="565" width="0.1208%" height="15" fill="rgb(223,3,22)"/><text x="89.9189%" y="575.50"></text></g><g><title>decor_mem::views::Views::get_view (14 samples, 0.17%)</title><rect x="89.7898%" y="565" width="0.1692%" height="15" fill="rgb(225,196,46)"/><text x="90.0398%" y="575.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (37 samples, 0.45%)</title><rect x="90.0072%" y="549" width="0.4471%" height="15" fill="rgb(209,110,37)"/><text x="90.2572%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.37%)</title><rect x="90.0797%" y="533" width="0.3746%" height="15" fill="rgb(249,89,12)"/><text x="90.3297%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (47 samples, 0.57%)</title><rect x="89.9589%" y="565" width="0.5679%" height="15" fill="rgb(226,27,33)"/><text x="90.2089%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (18 samples, 0.22%)</title><rect x="90.5268%" y="565" width="0.2175%" height="15" fill="rgb(213,82,22)"/><text x="90.7768%" y="575.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (521 samples, 6.30%)</title><rect x="84.6303%" y="581" width="6.2953%" height="15" fill="rgb(248,140,0)"/><text x="84.8803%" y="591.50">decor_me..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (530 samples, 6.40%)</title><rect x="84.5819%" y="597" width="6.4041%" height="15" fill="rgb(228,106,3)"/><text x="84.8319%" y="607.50">&lt;decor_m..</text></g><g><title>__GI___libc_free (18 samples, 0.22%)</title><rect x="91.1914%" y="485" width="0.2175%" height="15" fill="rgb(209,23,37)"/><text x="91.4414%" y="495.50"></text></g><g><title>malloc_consolidate (12 samples, 0.14%)</title><rect x="91.6506%" y="469" width="0.1450%" height="15" fill="rgb(241,93,50)"/><text x="91.9006%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.86%)</title><rect x="91.0826%" y="501" width="0.8579%" height="15" fill="rgb(253,46,43)"/><text x="91.3326%" y="511.50"></text></g><g><title>_int_free (43 samples, 0.52%)</title><rect x="91.4210%" y="485" width="0.5196%" height="15" fill="rgb(226,206,43)"/><text x="91.6710%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (72 samples, 0.87%)</title><rect x="91.0826%" y="565" width="0.8700%" height="15" fill="rgb(217,54,7)"/><text x="91.3326%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.87%)</title><rect x="91.0826%" y="549" width="0.8700%" height="15" fill="rgb(223,5,52)"/><text x="91.3326%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.87%)</title><rect x="91.0826%" y="533" width="0.8700%" height="15" fill="rgb(206,52,46)"/><text x="91.3326%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.87%)</title><rect x="91.0826%" y="517" width="0.8700%" height="15" fill="rgb(253,136,11)"/><text x="91.3326%" y="527.50"></text></g><g><title>do_syscall_64 (11 samples, 0.13%)</title><rect x="91.9768%" y="469" width="0.1329%" height="15" fill="rgb(208,106,33)"/><text x="92.2268%" y="479.50"></text></g><g><title>ksys_write (11 samples, 0.13%)</title><rect x="91.9768%" y="453" width="0.1329%" height="15" fill="rgb(206,54,4)"/><text x="92.2268%" y="463.50"></text></g><g><title>vfs_write (11 samples, 0.13%)</title><rect x="91.9768%" y="437" width="0.1329%" height="15" fill="rgb(213,3,15)"/><text x="92.2268%" y="447.50"></text></g><g><title>new_sync_write (10 samples, 0.12%)</title><rect x="91.9889%" y="421" width="0.1208%" height="15" fill="rgb(252,211,39)"/><text x="92.2389%" y="431.50"></text></g><g><title>ext4_buffered_write_iter (10 samples, 0.12%)</title><rect x="91.9889%" y="405" width="0.1208%" height="15" fill="rgb(223,6,36)"/><text x="92.2389%" y="415.50"></text></g><g><title>generic_perform_write (9 samples, 0.11%)</title><rect x="92.0010%" y="389" width="0.1087%" height="15" fill="rgb(252,169,45)"/><text x="92.2510%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 0.18%)</title><rect x="91.9647%" y="485" width="0.1812%" height="15" fill="rgb(212,48,26)"/><text x="92.2147%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (90 samples, 1.09%)</title><rect x="91.0826%" y="597" width="1.0875%" height="15" fill="rgb(251,102,48)"/><text x="91.3326%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (90 samples, 1.09%)</title><rect x="91.0826%" y="581" width="1.0875%" height="15" fill="rgb(243,208,16)"/><text x="91.3326%" y="591.50"></text></g><g><title>decor_mem::stats::print_stats (18 samples, 0.22%)</title><rect x="91.9526%" y="565" width="0.2175%" height="15" fill="rgb(219,96,24)"/><text x="92.2026%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (18 samples, 0.22%)</title><rect x="91.9526%" y="549" width="0.2175%" height="15" fill="rgb(219,33,29)"/><text x="92.2026%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::write (18 samples, 0.22%)</title><rect x="91.9526%" y="533" width="0.2175%" height="15" fill="rgb(223,176,5)"/><text x="92.2026%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (18 samples, 0.22%)</title><rect x="91.9526%" y="517" width="0.2175%" height="15" fill="rgb(228,140,14)"/><text x="92.2026%" y="527.50"></text></g><g><title>__libc_write (18 samples, 0.22%)</title><rect x="91.9526%" y="501" width="0.2175%" height="15" fill="rgb(217,179,31)"/><text x="92.2026%" y="511.50"></text></g><g><title>dequeue_task_fair (10 samples, 0.12%)</title><rect x="92.5447%" y="309" width="0.1208%" height="15" fill="rgb(230,9,30)"/><text x="92.7947%" y="319.50"></text></g><g><title>psi_task_change (9 samples, 0.11%)</title><rect x="92.7139%" y="309" width="0.1087%" height="15" fill="rgb(230,136,20)"/><text x="92.9639%" y="319.50"></text></g><g><title>psi_group_change (9 samples, 0.11%)</title><rect x="92.7139%" y="293" width="0.1087%" height="15" fill="rgb(215,210,22)"/><text x="92.9639%" y="303.50"></text></g><g><title>sk_wait_data (42 samples, 0.51%)</title><rect x="92.3997%" y="389" width="0.5075%" height="15" fill="rgb(218,43,5)"/><text x="92.6497%" y="399.50"></text></g><g><title>wait_woken (36 samples, 0.43%)</title><rect x="92.4722%" y="373" width="0.4350%" height="15" fill="rgb(216,11,5)"/><text x="92.7222%" y="383.50"></text></g><g><title>schedule_timeout (35 samples, 0.42%)</title><rect x="92.4843%" y="357" width="0.4229%" height="15" fill="rgb(209,82,29)"/><text x="92.7343%" y="367.50"></text></g><g><title>schedule (35 samples, 0.42%)</title><rect x="92.4843%" y="341" width="0.4229%" height="15" fill="rgb(244,115,12)"/><text x="92.7343%" y="351.50"></text></g><g><title>__schedule (35 samples, 0.42%)</title><rect x="92.4843%" y="325" width="0.4229%" height="15" fill="rgb(222,82,18)"/><text x="92.7343%" y="335.50"></text></g><g><title>inet_recvmsg (54 samples, 0.65%)</title><rect x="92.3030%" y="421" width="0.6525%" height="15" fill="rgb(249,227,8)"/><text x="92.5530%" y="431.50"></text></g><g><title>tcp_recvmsg (54 samples, 0.65%)</title><rect x="92.3030%" y="405" width="0.6525%" height="15" fill="rgb(253,141,45)"/><text x="92.5530%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (55 samples, 0.66%)</title><rect x="92.3030%" y="453" width="0.6646%" height="15" fill="rgb(234,184,4)"/><text x="92.5530%" y="463.50"></text></g><g><title>__sys_recvfrom (55 samples, 0.66%)</title><rect x="92.3030%" y="437" width="0.6646%" height="15" fill="rgb(218,194,23)"/><text x="92.5530%" y="447.50"></text></g><g><title>do_syscall_64 (56 samples, 0.68%)</title><rect x="92.3030%" y="469" width="0.6767%" height="15" fill="rgb(235,66,41)"/><text x="92.5530%" y="479.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (59 samples, 0.71%)</title><rect x="92.2910%" y="565" width="0.7129%" height="15" fill="rgb(245,217,1)"/><text x="92.5410%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (59 samples, 0.71%)</title><rect x="92.2910%" y="549" width="0.7129%" height="15" fill="rgb(229,91,1)"/><text x="92.5410%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (59 samples, 0.71%)</title><rect x="92.2910%" y="533" width="0.7129%" height="15" fill="rgb(207,101,30)"/><text x="92.5410%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (59 samples, 0.71%)</title><rect x="92.2910%" y="517" width="0.7129%" height="15" fill="rgb(223,82,49)"/><text x="92.5410%" y="527.50"></text></g><g><title>__libc_recv (59 samples, 0.71%)</title><rect x="92.2910%" y="501" width="0.7129%" height="15" fill="rgb(218,167,17)"/><text x="92.5410%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (58 samples, 0.70%)</title><rect x="92.3030%" y="485" width="0.7008%" height="15" fill="rgb(208,103,14)"/><text x="92.5530%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (61 samples, 0.74%)</title><rect x="92.2910%" y="581" width="0.7371%" height="15" fill="rgb(238,20,8)"/><text x="92.5410%" y="591.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (67 samples, 0.81%)</title><rect x="92.2789%" y="597" width="0.8096%" height="15" fill="rgb(218,80,54)"/><text x="92.5289%" y="607.50"></text></g><g><title>try_to_wake_up (20 samples, 0.24%)</title><rect x="93.8134%" y="53" width="0.2417%" height="15" fill="rgb(240,144,17)"/><text x="94.0634%" y="63.50"></text></g><g><title>__wake_up_common (23 samples, 0.28%)</title><rect x="93.7893%" y="69" width="0.2779%" height="15" fill="rgb(245,27,50)"/><text x="94.0393%" y="79.50"></text></g><g><title>sock_def_readable (25 samples, 0.30%)</title><rect x="93.7772%" y="101" width="0.3021%" height="15" fill="rgb(251,51,7)"/><text x="94.0272%" y="111.50"></text></g><g><title>__wake_up_common_lock (24 samples, 0.29%)</title><rect x="93.7893%" y="85" width="0.2900%" height="15" fill="rgb(245,217,29)"/><text x="94.0393%" y="95.50"></text></g><g><title>tcp_ack (14 samples, 0.17%)</title><rect x="94.0793%" y="101" width="0.1692%" height="15" fill="rgb(221,176,29)"/><text x="94.3293%" y="111.50"></text></g><g><title>ip_local_deliver (53 samples, 0.64%)</title><rect x="93.6322%" y="197" width="0.6404%" height="15" fill="rgb(212,180,24)"/><text x="93.8822%" y="207.50"></text></g><g><title>ip_local_deliver_finish (53 samples, 0.64%)</title><rect x="93.6322%" y="181" width="0.6404%" height="15" fill="rgb(254,24,2)"/><text x="93.8822%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (53 samples, 0.64%)</title><rect x="93.6322%" y="165" width="0.6404%" height="15" fill="rgb(230,100,2)"/><text x="93.8822%" y="175.50"></text></g><g><title>tcp_v4_rcv (51 samples, 0.62%)</title><rect x="93.6564%" y="149" width="0.6162%" height="15" fill="rgb(219,142,25)"/><text x="93.9064%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (46 samples, 0.56%)</title><rect x="93.7168%" y="133" width="0.5558%" height="15" fill="rgb(240,73,43)"/><text x="93.9668%" y="143.50"></text></g><g><title>tcp_rcv_established (46 samples, 0.56%)</title><rect x="93.7168%" y="117" width="0.5558%" height="15" fill="rgb(214,114,15)"/><text x="93.9668%" y="127.50"></text></g><g><title>__netif_receive_skb_one_core (57 samples, 0.69%)</title><rect x="93.6080%" y="229" width="0.6887%" height="15" fill="rgb(207,130,4)"/><text x="93.8580%" y="239.50"></text></g><g><title>ip_rcv (55 samples, 0.66%)</title><rect x="93.6322%" y="213" width="0.6646%" height="15" fill="rgb(221,25,40)"/><text x="93.8822%" y="223.50"></text></g><g><title>net_rx_action (61 samples, 0.74%)</title><rect x="93.5718%" y="261" width="0.7371%" height="15" fill="rgb(241,184,7)"/><text x="93.8218%" y="271.50"></text></g><g><title>process_backlog (60 samples, 0.72%)</title><rect x="93.5839%" y="245" width="0.7250%" height="15" fill="rgb(235,159,4)"/><text x="93.8339%" y="255.50"></text></g><g><title>__local_bh_enable_ip (66 samples, 0.80%)</title><rect x="93.5234%" y="325" width="0.7975%" height="15" fill="rgb(214,87,48)"/><text x="93.7734%" y="335.50"></text></g><g><title>do_softirq (66 samples, 0.80%)</title><rect x="93.5234%" y="309" width="0.7975%" height="15" fill="rgb(246,198,24)"/><text x="93.7734%" y="319.50"></text></g><g><title>do_softirq_own_stack (66 samples, 0.80%)</title><rect x="93.5234%" y="293" width="0.7975%" height="15" fill="rgb(209,66,40)"/><text x="93.7734%" y="303.50"></text></g><g><title>__do_softirq (66 samples, 0.80%)</title><rect x="93.5234%" y="277" width="0.7975%" height="15" fill="rgb(233,147,39)"/><text x="93.7734%" y="287.50"></text></g><g><title>ip_finish_output2 (74 samples, 0.89%)</title><rect x="93.4389%" y="341" width="0.8942%" height="15" fill="rgb(231,145,52)"/><text x="93.6889%" y="351.50"></text></g><g><title>__ip_queue_xmit (82 samples, 0.99%)</title><rect x="93.4026%" y="373" width="0.9908%" height="15" fill="rgb(206,20,26)"/><text x="93.6526%" y="383.50"></text></g><g><title>ip_output (81 samples, 0.98%)</title><rect x="93.4147%" y="357" width="0.9787%" height="15" fill="rgb(238,220,4)"/><text x="93.6647%" y="367.50"></text></g><g><title>__tcp_transmit_skb (91 samples, 1.10%)</title><rect x="93.3784%" y="389" width="1.0996%" height="15" fill="rgb(252,195,42)"/><text x="93.6284%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (105 samples, 1.27%)</title><rect x="93.2939%" y="421" width="1.2687%" height="15" fill="rgb(209,10,6)"/><text x="93.5439%" y="431.50"></text></g><g><title>tcp_write_xmit (105 samples, 1.27%)</title><rect x="93.2939%" y="405" width="1.2687%" height="15" fill="rgb(229,3,52)"/><text x="93.5439%" y="415.50"></text></g><g><title>sk_stream_alloc_skb (11 samples, 0.13%)</title><rect x="94.5868%" y="421" width="0.1329%" height="15" fill="rgb(253,49,37)"/><text x="94.8368%" y="431.50"></text></g><g><title>__alloc_skb (9 samples, 0.11%)</title><rect x="94.6109%" y="405" width="0.1087%" height="15" fill="rgb(240,103,49)"/><text x="94.8609%" y="415.50"></text></g><g><title>sock_sendmsg (133 samples, 1.61%)</title><rect x="93.1851%" y="469" width="1.6071%" height="15" fill="rgb(250,182,30)"/><text x="93.4351%" y="479.50"></text></g><g><title>tcp_sendmsg (132 samples, 1.59%)</title><rect x="93.1972%" y="453" width="1.5950%" height="15" fill="rgb(248,8,30)"/><text x="93.4472%" y="463.50"></text></g><g><title>tcp_sendmsg_locked (126 samples, 1.52%)</title><rect x="93.2697%" y="437" width="1.5225%" height="15" fill="rgb(237,120,30)"/><text x="93.5197%" y="447.50"></text></g><g><title>__x64_sys_sendto (139 samples, 1.68%)</title><rect x="93.1247%" y="501" width="1.6796%" height="15" fill="rgb(221,146,34)"/><text x="93.3747%" y="511.50"></text></g><g><title>__sys_sendto (138 samples, 1.67%)</title><rect x="93.1368%" y="485" width="1.6675%" height="15" fill="rgb(242,55,13)"/><text x="93.3868%" y="495.50"></text></g><g><title>do_syscall_64 (143 samples, 1.73%)</title><rect x="93.1247%" y="517" width="1.7279%" height="15" fill="rgb(242,112,31)"/><text x="93.3747%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (150 samples, 1.81%)</title><rect x="93.1247%" y="533" width="1.8125%" height="15" fill="rgb(249,192,27)"/><text x="93.3747%" y="543.50">e..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (154 samples, 1.86%)</title><rect x="93.0884%" y="581" width="1.8608%" height="15" fill="rgb(208,204,44)"/><text x="93.3384%" y="591.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (154 samples, 1.86%)</title><rect x="93.0884%" y="565" width="1.8608%" height="15" fill="rgb(208,93,54)"/><text x="93.3384%" y="575.50">s..</text></g><g><title>__libc_send (154 samples, 1.86%)</title><rect x="93.0884%" y="549" width="1.8608%" height="15" fill="rgb(242,1,31)"/><text x="93.3384%" y="559.50">_..</text></g><g><title>decor_mem::Shim::run_on_tcp (1,011 samples, 12.22%)</title><rect x="82.7453%" y="645" width="12.2160%" height="15" fill="rgb(241,83,25)"/><text x="82.9953%" y="655.50">decor_mem::Shim::r..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,010 samples, 12.20%)</title><rect x="82.7574%" y="629" width="12.2040%" height="15" fill="rgb(205,169,50)"/><text x="83.0074%" y="639.50">msql_srv::MysqlInt..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (1,010 samples, 12.20%)</title><rect x="82.7574%" y="613" width="12.2040%" height="15" fill="rgb(239,186,37)"/><text x="83.0074%" y="623.50">msql_srv::MysqlInt..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (155 samples, 1.87%)</title><rect x="93.0884%" y="597" width="1.8729%" height="15" fill="rgb(205,221,10)"/><text x="93.3384%" y="607.50">s..</text></g><g><title>__GI___clone (1,072 samples, 12.95%)</title><rect x="82.0203%" y="757" width="12.9531%" height="15" fill="rgb(218,196,15)"/><text x="82.2703%" y="767.50">__GI___clone</text></g><g><title>start_thread (1,072 samples, 12.95%)</title><rect x="82.0203%" y="741" width="12.9531%" height="15" fill="rgb(218,196,35)"/><text x="82.2703%" y="751.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,012 samples, 12.23%)</title><rect x="82.7453%" y="725" width="12.2281%" height="15" fill="rgb(233,63,24)"/><text x="82.9953%" y="735.50">std::sys::unix::th..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,012 samples, 12.23%)</title><rect x="82.7453%" y="709" width="12.2281%" height="15" fill="rgb(225,8,4)"/><text x="82.9953%" y="719.50">&lt;alloc::boxed::Box..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,012 samples, 12.23%)</title><rect x="82.7453%" y="693" width="12.2281%" height="15" fill="rgb(234,105,35)"/><text x="82.9953%" y="703.50">&lt;alloc::boxed::Box..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,012 samples, 12.23%)</title><rect x="82.7453%" y="677" width="12.2281%" height="15" fill="rgb(236,21,32)"/><text x="82.9953%" y="687.50">core::ops::functio..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,012 samples, 12.23%)</title><rect x="82.7453%" y="661" width="12.2281%" height="15" fill="rgb(228,109,6)"/><text x="82.9953%" y="671.50">std::sys_common::b..</text></g><g><title>__vdso_clock_gettime (11 samples, 0.13%)</title><rect x="95.0701%" y="757" width="0.1329%" height="15" fill="rgb(229,215,31)"/><text x="95.3201%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 2.80%)</title><rect x="95.4205%" y="277" width="2.8033%" height="15" fill="rgb(221,52,54)"/><text x="95.6705%" y="287.50">__..</text></g><g><title>native_write_msr (231 samples, 2.79%)</title><rect x="95.4326%" y="261" width="2.7912%" height="15" fill="rgb(252,129,43)"/><text x="95.6826%" y="271.50">na..</text></g><g><title>entry_SYSCALL_64 (234 samples, 2.83%)</title><rect x="95.4084%" y="469" width="2.8275%" height="15" fill="rgb(248,183,27)"/><text x="95.6584%" y="479.50">en..</text></g><g><title>do_syscall_64 (234 samples, 2.83%)</title><rect x="95.4084%" y="453" width="2.8275%" height="15" fill="rgb(250,0,22)"/><text x="95.6584%" y="463.50">do..</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 2.83%)</title><rect x="95.4084%" y="437" width="2.8275%" height="15" fill="rgb(213,166,10)"/><text x="95.6584%" y="447.50">__..</text></g><g><title>sched_setaffinity (234 samples, 2.83%)</title><rect x="95.4084%" y="421" width="2.8275%" height="15" fill="rgb(207,163,36)"/><text x="95.6584%" y="431.50">sc..</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 2.83%)</title><rect x="95.4084%" y="405" width="2.8275%" height="15" fill="rgb(208,122,22)"/><text x="95.6584%" y="415.50">__..</text></g><g><title>stop_one_cpu (234 samples, 2.83%)</title><rect x="95.4084%" y="389" width="2.8275%" height="15" fill="rgb(207,104,49)"/><text x="95.6584%" y="399.50">st..</text></g><g><title>cpu_stop_queue_work (234 samples, 2.83%)</title><rect x="95.4084%" y="373" width="2.8275%" height="15" fill="rgb(248,211,50)"/><text x="95.6584%" y="383.50">cp..</text></g><g><title>preempt_schedule_thunk (234 samples, 2.83%)</title><rect x="95.4084%" y="357" width="2.8275%" height="15" fill="rgb(217,13,45)"/><text x="95.6584%" y="367.50">pr..</text></g><g><title>preempt_schedule_common (234 samples, 2.83%)</title><rect x="95.4084%" y="341" width="2.8275%" height="15" fill="rgb(211,216,49)"/><text x="95.6584%" y="351.50">pr..</text></g><g><title>__schedule (234 samples, 2.83%)</title><rect x="95.4084%" y="325" width="2.8275%" height="15" fill="rgb(221,58,53)"/><text x="95.6584%" y="335.50">__..</text></g><g><title>finish_task_switch (234 samples, 2.83%)</title><rect x="95.4084%" y="309" width="2.8275%" height="15" fill="rgb(220,112,41)"/><text x="95.6584%" y="319.50">fi..</text></g><g><title>__perf_event_task_sched_in (234 samples, 2.83%)</title><rect x="95.4084%" y="293" width="2.8275%" height="15" fill="rgb(236,38,28)"/><text x="95.6584%" y="303.50">__..</text></g><g><title>hwloc::Topology::new (236 samples, 2.85%)</title><rect x="95.3963%" y="581" width="2.8516%" height="15" fill="rgb(227,195,22)"/><text x="95.6463%" y="591.50">hw..</text></g><g><title>hwloc_topology_load (236 samples, 2.85%)</title><rect x="95.3963%" y="565" width="2.8516%" height="15" fill="rgb(214,55,33)"/><text x="95.6463%" y="575.50">hw..</text></g><g><title>[libhwloc.so.15.2.0] (236 samples, 2.85%)</title><rect x="95.3963%" y="549" width="2.8516%" height="15" fill="rgb(248,80,13)"/><text x="95.6463%" y="559.50">[l..</text></g><g><title>[libhwloc.so.15.2.0] (236 samples, 2.85%)</title><rect x="95.3963%" y="533" width="2.8516%" height="15" fill="rgb(238,52,6)"/><text x="95.6463%" y="543.50">[l..</text></g><g><title>[libhwloc.so.15.2.0] (236 samples, 2.85%)</title><rect x="95.3963%" y="517" width="2.8516%" height="15" fill="rgb(224,198,47)"/><text x="95.6463%" y="527.50">[l..</text></g><g><title>hwloc_linux_set_tid_cpubind (235 samples, 2.84%)</title><rect x="95.4084%" y="501" width="2.8395%" height="15" fill="rgb(233,171,20)"/><text x="95.6584%" y="511.50">hw..</text></g><g><title>__GI___sched_setaffinity_new (235 samples, 2.84%)</title><rect x="95.4084%" y="485" width="2.8395%" height="15" fill="rgb(241,30,25)"/><text x="95.6584%" y="495.50">__..</text></g><g><title>__libc_start_main (253 samples, 3.06%)</title><rect x="95.3117%" y="741" width="3.0570%" height="15" fill="rgb(207,171,38)"/><text x="95.5617%" y="751.50">__l..</text></g><g><title>main (253 samples, 3.06%)</title><rect x="95.3117%" y="725" width="3.0570%" height="15" fill="rgb(234,70,1)"/><text x="95.5617%" y="735.50">main</text></g><g><title>std::rt::lang_start_internal (253 samples, 3.06%)</title><rect x="95.3117%" y="709" width="3.0570%" height="15" fill="rgb(232,178,18)"/><text x="95.5617%" y="719.50">std..</text></g><g><title>std::panic::catch_unwind (253 samples, 3.06%)</title><rect x="95.3117%" y="693" width="3.0570%" height="15" fill="rgb(241,78,40)"/><text x="95.5617%" y="703.50">std..</text></g><g><title>std::panicking::try (253 samples, 3.06%)</title><rect x="95.3117%" y="677" width="3.0570%" height="15" fill="rgb(222,35,25)"/><text x="95.5617%" y="687.50">std..</text></g><g><title>std::panicking::try::do_call (253 samples, 3.06%)</title><rect x="95.3117%" y="661" width="3.0570%" height="15" fill="rgb(207,92,16)"/><text x="95.5617%" y="671.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (253 samples, 3.06%)</title><rect x="95.3117%" y="645" width="3.0570%" height="15" fill="rgb(216,59,51)"/><text x="95.5617%" y="655.50">cor..</text></g><g><title>std::rt::lang_start::_{{closure}} (253 samples, 3.06%)</title><rect x="95.3117%" y="629" width="3.0570%" height="15" fill="rgb(213,80,28)"/><text x="95.5617%" y="639.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (253 samples, 3.06%)</title><rect x="95.3117%" y="613" width="3.0570%" height="15" fill="rgb(220,93,7)"/><text x="95.5617%" y="623.50">std..</text></g><g><title>lobsters_microbenchmarks::main (253 samples, 3.06%)</title><rect x="95.3117%" y="597" width="3.0570%" height="15" fill="rgb(225,24,44)"/><text x="95.5617%" y="607.50">lob..</text></g><g><title>_start (254 samples, 3.07%)</title><rect x="95.3117%" y="757" width="3.0691%" height="15" fill="rgb(243,74,40)"/><text x="95.5617%" y="767.50">_st..</text></g><g><title>page_fault (97 samples, 1.17%)</title><rect x="98.6950%" y="757" width="1.1721%" height="15" fill="rgb(228,39,7)"/><text x="98.9450%" y="767.50"></text></g><g><title>lobsters-microb (8,270 samples, 99.93%)</title><rect x="0.0000%" y="773" width="99.9275%" height="15" fill="rgb(227,79,8)"/><text x="0.2500%" y="783.50">lobsters-microb</text></g><g><title>all (8,276 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(236,58,11)"/><text x="0.2500%" y="799.50"></text></g></svg></svg>