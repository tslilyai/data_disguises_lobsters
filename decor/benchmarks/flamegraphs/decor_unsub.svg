<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="853.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (8 samples, 0.16%)</title><rect x="0.0801%" y="789" width="0.1601%" height="15" fill="rgb(227,0,7)"/><text x="0.3301%" y="799.50"></text></g><g><title>[[stack]] (5 samples, 0.10%)</title><rect x="0.2402%" y="789" width="0.1001%" height="15" fill="rgb(217,0,24)"/><text x="0.4902%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.36%)</title><rect x="0.3403%" y="773" width="0.3603%" height="15" fill="rgb(221,193,54)"/><text x="0.5903%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.44%)</title><rect x="0.7406%" y="773" width="0.4404%" height="15" fill="rgb(248,212,6)"/><text x="0.9906%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.14%)</title><rect x="1.3211%" y="773" width="0.1401%" height="15" fill="rgb(208,68,35)"/><text x="1.5711%" y="783.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.12%)</title><rect x="1.4612%" y="773" width="0.1201%" height="15" fill="rgb(232,128,0)"/><text x="1.7112%" y="783.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.24%)</title><rect x="2.1617%" y="773" width="0.2402%" height="15" fill="rgb(207,160,47)"/><text x="2.4117%" y="783.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.26%)</title><rect x="2.4019%" y="773" width="0.2602%" height="15" fill="rgb(228,23,34)"/><text x="2.6519%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.12%)</title><rect x="2.8022%" y="773" width="0.1201%" height="15" fill="rgb(218,30,26)"/><text x="3.0522%" y="783.50"></text></g><g><title>_int_free (46 samples, 0.92%)</title><rect x="3.0424%" y="773" width="0.9207%" height="15" fill="rgb(220,122,19)"/><text x="3.2924%" y="783.50"></text></g><g><title>_int_malloc (10 samples, 0.20%)</title><rect x="3.9632%" y="773" width="0.2002%" height="15" fill="rgb(250,228,42)"/><text x="4.2132%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.56%)</title><rect x="4.2234%" y="773" width="0.5604%" height="15" fill="rgb(240,193,28)"/><text x="4.4734%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.12%)</title><rect x="4.7838%" y="773" width="0.1201%" height="15" fill="rgb(216,20,37)"/><text x="5.0338%" y="783.50"></text></g><g><title>core::fmt::write (14 samples, 0.28%)</title><rect x="5.0240%" y="773" width="0.2802%" height="15" fill="rgb(206,188,39)"/><text x="5.2740%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.12%)</title><rect x="5.3042%" y="773" width="0.1201%" height="15" fill="rgb(217,207,13)"/><text x="5.5542%" y="783.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (5 samples, 0.10%)</title><rect x="5.7246%" y="773" width="0.1001%" height="15" fill="rgb(231,73,38)"/><text x="5.9746%" y="783.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (18 samples, 0.36%)</title><rect x="5.8647%" y="773" width="0.3603%" height="15" fill="rgb(225,20,46)"/><text x="6.1147%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (17 samples, 0.34%)</title><rect x="6.8054%" y="773" width="0.3403%" height="15" fill="rgb(210,31,41)"/><text x="7.0554%" y="783.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (8 samples, 0.16%)</title><rect x="7.2458%" y="757" width="0.1601%" height="15" fill="rgb(221,200,47)"/><text x="7.4958%" y="767.50"></text></g><g><title>std::time::Instant::duration_since (8 samples, 0.16%)</title><rect x="7.2458%" y="741" width="0.1601%" height="15" fill="rgb(226,26,5)"/><text x="7.4958%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (8 samples, 0.16%)</title><rect x="7.2458%" y="725" width="0.1601%" height="15" fill="rgb(249,33,26)"/><text x="7.4958%" y="735.50"></text></g><g><title>std::time::Instant::elapsed (10 samples, 0.20%)</title><rect x="7.2258%" y="773" width="0.2002%" height="15" fill="rgb(235,183,28)"/><text x="7.4758%" y="783.50"></text></g><g><title>[anon] (355 samples, 7.11%)</title><rect x="0.3403%" y="789" width="7.1057%" height="15" fill="rgb(221,5,38)"/><text x="0.5903%" y="799.50">[anon]</text></g><g><title>[libc-2.31.so] (5 samples, 0.10%)</title><rect x="7.4460%" y="789" width="0.1001%" height="15" fill="rgb(247,18,42)"/><text x="7.6960%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.22%)</title><rect x="7.8663%" y="773" width="0.2202%" height="15" fill="rgb(241,131,45)"/><text x="8.1163%" y="783.50"></text></g><g><title>[lobsters-microbenchmarks] (37 samples, 0.74%)</title><rect x="7.5460%" y="789" width="0.7406%" height="15" fill="rgb(249,31,29)"/><text x="7.7960%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="8.3066%" y="773" width="0.1201%" height="15" fill="rgb(225,111,53)"/><text x="8.5566%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.20%)</title><rect x="8.4267%" y="773" width="0.2002%" height="15" fill="rgb(238,160,17)"/><text x="8.6767%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (6 samples, 0.12%)</title><rect x="8.7670%" y="725" width="0.1201%" height="15" fill="rgb(214,148,48)"/><text x="9.0170%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (6 samples, 0.12%)</title><rect x="8.7670%" y="709" width="0.1201%" height="15" fill="rgb(232,36,49)"/><text x="9.0170%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.12%)</title><rect x="8.7670%" y="693" width="0.1201%" height="15" fill="rgb(209,103,24)"/><text x="9.0170%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.12%)</title><rect x="8.7670%" y="677" width="0.1201%" height="15" fill="rgb(229,88,8)"/><text x="9.0170%" y="687.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.10%)</title><rect x="8.7870%" y="661" width="0.1001%" height="15" fill="rgb(213,181,19)"/><text x="9.0370%" y="671.50"></text></g><g><title>_int_malloc (5 samples, 0.10%)</title><rect x="8.7870%" y="645" width="0.1001%" height="15" fill="rgb(254,191,54)"/><text x="9.0370%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.10%)</title><rect x="8.8871%" y="693" width="0.1001%" height="15" fill="rgb(241,83,37)"/><text x="9.1371%" y="703.50"></text></g><g><title>__wake_up_common (9 samples, 0.18%)</title><rect x="9.2874%" y="117" width="0.1801%" height="15" fill="rgb(233,36,39)"/><text x="9.5374%" y="127.50"></text></g><g><title>pollwake (9 samples, 0.18%)</title><rect x="9.2874%" y="101" width="0.1801%" height="15" fill="rgb(226,3,54)"/><text x="9.5374%" y="111.50"></text></g><g><title>try_to_wake_up (9 samples, 0.18%)</title><rect x="9.2874%" y="85" width="0.1801%" height="15" fill="rgb(245,192,40)"/><text x="9.5374%" y="95.50"></text></g><g><title>sock_def_readable (10 samples, 0.20%)</title><rect x="9.2874%" y="149" width="0.2002%" height="15" fill="rgb(238,167,29)"/><text x="9.5374%" y="159.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.20%)</title><rect x="9.2874%" y="133" width="0.2002%" height="15" fill="rgb(232,182,51)"/><text x="9.5374%" y="143.50"></text></g><g><title>__tcp_push_pending_frames (22 samples, 0.44%)</title><rect x="9.1073%" y="469" width="0.4404%" height="15" fill="rgb(231,60,39)"/><text x="9.3573%" y="479.50"></text></g><g><title>tcp_write_xmit (22 samples, 0.44%)</title><rect x="9.1073%" y="453" width="0.4404%" height="15" fill="rgb(208,69,12)"/><text x="9.3573%" y="463.50"></text></g><g><title>__tcp_transmit_skb (21 samples, 0.42%)</title><rect x="9.1273%" y="437" width="0.4203%" height="15" fill="rgb(235,93,37)"/><text x="9.3773%" y="447.50"></text></g><g><title>__ip_queue_xmit (19 samples, 0.38%)</title><rect x="9.1673%" y="421" width="0.3803%" height="15" fill="rgb(213,116,39)"/><text x="9.4173%" y="431.50"></text></g><g><title>ip_output (19 samples, 0.38%)</title><rect x="9.1673%" y="405" width="0.3803%" height="15" fill="rgb(222,207,29)"/><text x="9.4173%" y="415.50"></text></g><g><title>ip_finish_output2 (18 samples, 0.36%)</title><rect x="9.1873%" y="389" width="0.3603%" height="15" fill="rgb(206,96,30)"/><text x="9.4373%" y="399.50"></text></g><g><title>__local_bh_enable_ip (16 samples, 0.32%)</title><rect x="9.2274%" y="373" width="0.3203%" height="15" fill="rgb(218,138,4)"/><text x="9.4774%" y="383.50"></text></g><g><title>do_softirq (16 samples, 0.32%)</title><rect x="9.2274%" y="357" width="0.3203%" height="15" fill="rgb(250,191,14)"/><text x="9.4774%" y="367.50"></text></g><g><title>do_softirq_own_stack (16 samples, 0.32%)</title><rect x="9.2274%" y="341" width="0.3203%" height="15" fill="rgb(239,60,40)"/><text x="9.4774%" y="351.50"></text></g><g><title>__do_softirq (16 samples, 0.32%)</title><rect x="9.2274%" y="325" width="0.3203%" height="15" fill="rgb(206,27,48)"/><text x="9.4774%" y="335.50"></text></g><g><title>net_rx_action (14 samples, 0.28%)</title><rect x="9.2674%" y="309" width="0.2802%" height="15" fill="rgb(225,35,8)"/><text x="9.5174%" y="319.50"></text></g><g><title>process_backlog (14 samples, 0.28%)</title><rect x="9.2674%" y="293" width="0.2802%" height="15" fill="rgb(250,213,24)"/><text x="9.5174%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (14 samples, 0.28%)</title><rect x="9.2674%" y="277" width="0.2802%" height="15" fill="rgb(247,123,22)"/><text x="9.5174%" y="287.50"></text></g><g><title>ip_rcv (14 samples, 0.28%)</title><rect x="9.2674%" y="261" width="0.2802%" height="15" fill="rgb(231,138,38)"/><text x="9.5174%" y="271.50"></text></g><g><title>ip_local_deliver (14 samples, 0.28%)</title><rect x="9.2674%" y="245" width="0.2802%" height="15" fill="rgb(231,145,46)"/><text x="9.5174%" y="255.50"></text></g><g><title>ip_local_deliver_finish (14 samples, 0.28%)</title><rect x="9.2674%" y="229" width="0.2802%" height="15" fill="rgb(251,118,11)"/><text x="9.5174%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 0.28%)</title><rect x="9.2674%" y="213" width="0.2802%" height="15" fill="rgb(217,147,25)"/><text x="9.5174%" y="223.50"></text></g><g><title>tcp_v4_rcv (14 samples, 0.28%)</title><rect x="9.2674%" y="197" width="0.2802%" height="15" fill="rgb(247,81,37)"/><text x="9.5174%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 0.28%)</title><rect x="9.2674%" y="181" width="0.2802%" height="15" fill="rgb(209,12,38)"/><text x="9.5174%" y="191.50"></text></g><g><title>tcp_rcv_established (14 samples, 0.28%)</title><rect x="9.2674%" y="165" width="0.2802%" height="15" fill="rgb(227,1,9)"/><text x="9.5174%" y="175.50"></text></g><g><title>__x64_sys_sendto (25 samples, 0.50%)</title><rect x="9.0873%" y="549" width="0.5004%" height="15" fill="rgb(248,47,43)"/><text x="9.3373%" y="559.50"></text></g><g><title>__sys_sendto (25 samples, 0.50%)</title><rect x="9.0873%" y="533" width="0.5004%" height="15" fill="rgb(221,10,30)"/><text x="9.3373%" y="543.50"></text></g><g><title>sock_sendmsg (25 samples, 0.50%)</title><rect x="9.0873%" y="517" width="0.5004%" height="15" fill="rgb(210,229,1)"/><text x="9.3373%" y="527.50"></text></g><g><title>tcp_sendmsg (25 samples, 0.50%)</title><rect x="9.0873%" y="501" width="0.5004%" height="15" fill="rgb(222,148,37)"/><text x="9.3373%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (24 samples, 0.48%)</title><rect x="9.1073%" y="485" width="0.4804%" height="15" fill="rgb(234,67,33)"/><text x="9.3573%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (26 samples, 0.52%)</title><rect x="9.0873%" y="581" width="0.5204%" height="15" fill="rgb(247,98,35)"/><text x="9.3373%" y="591.50"></text></g><g><title>do_syscall_64 (26 samples, 0.52%)</title><rect x="9.0873%" y="565" width="0.5204%" height="15" fill="rgb(247,138,52)"/><text x="9.3373%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (32 samples, 0.64%)</title><rect x="8.9872%" y="693" width="0.6405%" height="15" fill="rgb(213,79,30)"/><text x="9.2372%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (30 samples, 0.60%)</title><rect x="9.0272%" y="677" width="0.6005%" height="15" fill="rgb(246,177,23)"/><text x="9.2772%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (27 samples, 0.54%)</title><rect x="9.0873%" y="661" width="0.5404%" height="15" fill="rgb(230,62,27)"/><text x="9.3373%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (27 samples, 0.54%)</title><rect x="9.0873%" y="645" width="0.5404%" height="15" fill="rgb(216,154,8)"/><text x="9.3373%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (27 samples, 0.54%)</title><rect x="9.0873%" y="629" width="0.5404%" height="15" fill="rgb(244,35,45)"/><text x="9.3373%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (27 samples, 0.54%)</title><rect x="9.0873%" y="613" width="0.5404%" height="15" fill="rgb(251,115,12)"/><text x="9.3373%" y="623.50"></text></g><g><title>__libc_send (27 samples, 0.54%)</title><rect x="9.0873%" y="597" width="0.5404%" height="15" fill="rgb(240,54,50)"/><text x="9.3373%" y="607.50"></text></g><g><title>decor_mem::policy::generate_new_entities_from (51 samples, 1.02%)</title><rect x="8.8871%" y="709" width="1.0208%" height="15" fill="rgb(233,84,52)"/><text x="9.1371%" y="719.50"></text></g><g><title>core::fmt::write (7 samples, 0.14%)</title><rect x="9.7678%" y="693" width="0.1401%" height="15" fill="rgb(207,117,47)"/><text x="10.0178%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (6 samples, 0.12%)</title><rect x="9.7878%" y="677" width="0.1201%" height="15" fill="rgb(249,43,39)"/><text x="10.0378%" y="687.50"></text></g><g><title>do_syscall_64 (6 samples, 0.12%)</title><rect x="9.9480%" y="533" width="0.1201%" height="15" fill="rgb(209,38,44)"/><text x="10.1980%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.12%)</title><rect x="9.9480%" y="517" width="0.1201%" height="15" fill="rgb(236,212,23)"/><text x="10.1980%" y="527.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.12%)</title><rect x="9.9480%" y="501" width="0.1201%" height="15" fill="rgb(242,79,21)"/><text x="10.1980%" y="511.50"></text></g><g><title>inet_recvmsg (6 samples, 0.12%)</title><rect x="9.9480%" y="485" width="0.1201%" height="15" fill="rgb(211,96,35)"/><text x="10.1980%" y="495.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.12%)</title><rect x="9.9480%" y="469" width="0.1201%" height="15" fill="rgb(253,215,40)"/><text x="10.1980%" y="479.50"></text></g><g><title>sk_wait_data (6 samples, 0.12%)</title><rect x="9.9480%" y="453" width="0.1201%" height="15" fill="rgb(211,81,21)"/><text x="10.1980%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.16%)</title><rect x="9.9480%" y="549" width="0.1601%" height="15" fill="rgb(208,190,38)"/><text x="10.1980%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 0.18%)</title><rect x="9.9480%" y="645" width="0.1801%" height="15" fill="rgb(235,213,38)"/><text x="10.1980%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 0.18%)</title><rect x="9.9480%" y="629" width="0.1801%" height="15" fill="rgb(237,122,38)"/><text x="10.1980%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 0.18%)</title><rect x="9.9480%" y="613" width="0.1801%" height="15" fill="rgb(244,218,35)"/><text x="10.1980%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 0.18%)</title><rect x="9.9480%" y="597" width="0.1801%" height="15" fill="rgb(240,68,47)"/><text x="10.1980%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 0.18%)</title><rect x="9.9480%" y="581" width="0.1801%" height="15" fill="rgb(210,16,53)"/><text x="10.1980%" y="591.50"></text></g><g><title>__libc_recv (9 samples, 0.18%)</title><rect x="9.9480%" y="565" width="0.1801%" height="15" fill="rgb(235,124,12)"/><text x="10.1980%" y="575.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (64 samples, 1.28%)</title><rect x="8.8871%" y="725" width="1.2810%" height="15" fill="rgb(224,169,11)"/><text x="9.1371%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (13 samples, 0.26%)</title><rect x="9.9079%" y="709" width="0.2602%" height="15" fill="rgb(250,166,2)"/><text x="10.1579%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (13 samples, 0.26%)</title><rect x="9.9079%" y="693" width="0.2602%" height="15" fill="rgb(242,216,29)"/><text x="10.1579%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (13 samples, 0.26%)</title><rect x="9.9079%" y="677" width="0.2602%" height="15" fill="rgb(230,116,27)"/><text x="10.1579%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.24%)</title><rect x="9.9279%" y="661" width="0.2402%" height="15" fill="rgb(228,99,48)"/><text x="10.1779%" y="671.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (71 samples, 1.42%)</title><rect x="8.7670%" y="773" width="1.4211%" height="15" fill="rgb(253,11,6)"/><text x="9.0170%" y="783.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (71 samples, 1.42%)</title><rect x="8.7670%" y="757" width="1.4211%" height="15" fill="rgb(247,143,39)"/><text x="9.0170%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (71 samples, 1.42%)</title><rect x="8.7670%" y="741" width="1.4211%" height="15" fill="rgb(236,97,10)"/><text x="9.0170%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.10%)</title><rect x="10.5084%" y="773" width="0.1001%" height="15" fill="rgb(233,208,19)"/><text x="10.7584%" y="783.50"></text></g><g><title>__GI___libc_free (10 samples, 0.20%)</title><rect x="10.6685%" y="773" width="0.2002%" height="15" fill="rgb(216,164,2)"/><text x="10.9185%" y="783.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.36%)</title><rect x="10.8687%" y="773" width="0.3603%" height="15" fill="rgb(220,129,5)"/><text x="11.1187%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 0.14%)</title><rect x="11.3291%" y="549" width="0.1401%" height="15" fill="rgb(242,17,10)"/><text x="11.5791%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 0.14%)</title><rect x="11.3291%" y="533" width="0.1401%" height="15" fill="rgb(242,107,0)"/><text x="11.5791%" y="543.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 0.14%)</title><rect x="11.3291%" y="517" width="0.1401%" height="15" fill="rgb(251,28,31)"/><text x="11.5791%" y="527.50"></text></g><g><title>hwloc::Topology::new (8 samples, 0.16%)</title><rect x="11.3291%" y="613" width="0.1601%" height="15" fill="rgb(233,223,10)"/><text x="11.5791%" y="623.50"></text></g><g><title>hwloc_topology_load (8 samples, 0.16%)</title><rect x="11.3291%" y="597" width="0.1601%" height="15" fill="rgb(215,21,27)"/><text x="11.5791%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (8 samples, 0.16%)</title><rect x="11.3291%" y="581" width="0.1601%" height="15" fill="rgb(232,23,21)"/><text x="11.5791%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (8 samples, 0.16%)</title><rect x="11.3291%" y="565" width="0.1601%" height="15" fill="rgb(244,5,23)"/><text x="11.5791%" y="575.50"></text></g><g><title>alloc::fmt::format (11 samples, 0.22%)</title><rect x="11.4892%" y="597" width="0.2202%" height="15" fill="rgb(226,81,46)"/><text x="11.7392%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.20%)</title><rect x="11.5092%" y="581" width="0.2002%" height="15" fill="rgb(247,70,30)"/><text x="11.7592%" y="591.50"></text></g><g><title>core::fmt::write (10 samples, 0.20%)</title><rect x="11.5092%" y="565" width="0.2002%" height="15" fill="rgb(212,68,19)"/><text x="11.7592%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (6 samples, 0.12%)</title><rect x="11.5893%" y="549" width="0.1201%" height="15" fill="rgb(240,187,13)"/><text x="11.8393%" y="559.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (6 samples, 0.12%)</title><rect x="11.5893%" y="533" width="0.1201%" height="15" fill="rgb(223,113,26)"/><text x="11.8393%" y="543.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (13 samples, 0.26%)</title><rect x="11.4892%" y="613" width="0.2602%" height="15" fill="rgb(206,192,2)"/><text x="11.7392%" y="623.50"></text></g><g><title>__libc_start_main (24 samples, 0.48%)</title><rect x="11.3291%" y="773" width="0.4804%" height="15" fill="rgb(241,108,4)"/><text x="11.5791%" y="783.50"></text></g><g><title>main (24 samples, 0.48%)</title><rect x="11.3291%" y="757" width="0.4804%" height="15" fill="rgb(247,173,49)"/><text x="11.5791%" y="767.50"></text></g><g><title>std::rt::lang_start_internal (24 samples, 0.48%)</title><rect x="11.3291%" y="741" width="0.4804%" height="15" fill="rgb(224,114,35)"/><text x="11.5791%" y="751.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.48%)</title><rect x="11.3291%" y="725" width="0.4804%" height="15" fill="rgb(245,159,27)"/><text x="11.5791%" y="735.50"></text></g><g><title>std::panicking::try (24 samples, 0.48%)</title><rect x="11.3291%" y="709" width="0.4804%" height="15" fill="rgb(245,172,44)"/><text x="11.5791%" y="719.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.48%)</title><rect x="11.3291%" y="693" width="0.4804%" height="15" fill="rgb(236,23,11)"/><text x="11.5791%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (24 samples, 0.48%)</title><rect x="11.3291%" y="677" width="0.4804%" height="15" fill="rgb(205,117,38)"/><text x="11.5791%" y="687.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (24 samples, 0.48%)</title><rect x="11.3291%" y="661" width="0.4804%" height="15" fill="rgb(237,72,25)"/><text x="11.5791%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 0.48%)</title><rect x="11.3291%" y="645" width="0.4804%" height="15" fill="rgb(244,70,9)"/><text x="11.5791%" y="655.50"></text></g><g><title>lobsters_microbenchmarks::main (24 samples, 0.48%)</title><rect x="11.3291%" y="629" width="0.4804%" height="15" fill="rgb(217,125,39)"/><text x="11.5791%" y="639.50"></text></g><g><title>_int_free (18 samples, 0.36%)</title><rect x="11.9896%" y="773" width="0.3603%" height="15" fill="rgb(235,36,10)"/><text x="12.2396%" y="783.50"></text></g><g><title>_int_malloc (8 samples, 0.16%)</title><rect x="12.3499%" y="773" width="0.1601%" height="15" fill="rgb(251,123,47)"/><text x="12.5999%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.14%)</title><rect x="12.5300%" y="773" width="0.1401%" height="15" fill="rgb(221,13,13)"/><text x="12.7800%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.10%)</title><rect x="12.8503%" y="773" width="0.1001%" height="15" fill="rgb(238,131,9)"/><text x="13.1003%" y="783.50"></text></g><g><title>core::fmt::write (7 samples, 0.14%)</title><rect x="13.0705%" y="773" width="0.1401%" height="15" fill="rgb(211,50,8)"/><text x="13.3205%" y="783.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (13 samples, 0.26%)</title><rect x="13.2506%" y="661" width="0.2602%" height="15" fill="rgb(245,182,24)"/><text x="13.5006%" y="671.50"></text></g><g><title>core::fmt::write (13 samples, 0.26%)</title><rect x="13.2506%" y="645" width="0.2602%" height="15" fill="rgb(242,14,37)"/><text x="13.5006%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (13 samples, 0.26%)</title><rect x="13.2506%" y="629" width="0.2602%" height="15" fill="rgb(246,228,12)"/><text x="13.5006%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.22%)</title><rect x="13.2906%" y="613" width="0.2202%" height="15" fill="rgb(213,55,15)"/><text x="13.5406%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.12%)</title><rect x="13.6109%" y="629" width="0.1201%" height="15" fill="rgb(209,9,3)"/><text x="13.8609%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.12%)</title><rect x="13.6109%" y="613" width="0.1201%" height="15" fill="rgb(230,59,30)"/><text x="13.8609%" y="623.50"></text></g><g><title>std::time::Instant::elapsed (5 samples, 0.10%)</title><rect x="13.7310%" y="629" width="0.1001%" height="15" fill="rgb(209,121,21)"/><text x="13.9810%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (18 samples, 0.36%)</title><rect x="13.5108%" y="645" width="0.3603%" height="15" fill="rgb(220,109,13)"/><text x="13.7608%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (34 samples, 0.68%)</title><rect x="13.2106%" y="773" width="0.6805%" height="15" fill="rgb(232,18,1)"/><text x="13.4606%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 0.68%)</title><rect x="13.2106%" y="757" width="0.6805%" height="15" fill="rgb(215,41,42)"/><text x="13.4606%" y="767.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (34 samples, 0.68%)</title><rect x="13.2106%" y="741" width="0.6805%" height="15" fill="rgb(224,123,36)"/><text x="13.4606%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (34 samples, 0.68%)</title><rect x="13.2106%" y="725" width="0.6805%" height="15" fill="rgb(240,125,3)"/><text x="13.4606%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (34 samples, 0.68%)</title><rect x="13.2106%" y="709" width="0.6805%" height="15" fill="rgb(205,98,50)"/><text x="13.4606%" y="719.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (34 samples, 0.68%)</title><rect x="13.2106%" y="693" width="0.6805%" height="15" fill="rgb(205,185,37)"/><text x="13.4606%" y="703.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (34 samples, 0.68%)</title><rect x="13.2106%" y="677" width="0.6805%" height="15" fill="rgb(238,207,15)"/><text x="13.4606%" y="687.50"></text></g><g><title>decor_mem::views::Views::insert (19 samples, 0.38%)</title><rect x="13.5108%" y="661" width="0.3803%" height="15" fill="rgb(213,199,42)"/><text x="13.7608%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.12%)</title><rect x="13.8911%" y="773" width="0.1201%" height="15" fill="rgb(235,201,11)"/><text x="14.1411%" y="783.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.12%)</title><rect x="14.4115%" y="357" width="0.1201%" height="15" fill="rgb(207,46,11)"/><text x="14.6615%" y="367.50"></text></g><g><title>enqueue_task (5 samples, 0.10%)</title><rect x="14.7318%" y="53" width="0.1001%" height="15" fill="rgb(241,35,35)"/><text x="14.9818%" y="63.50"></text></g><g><title>__wake_up_common (11 samples, 0.22%)</title><rect x="14.6918%" y="101" width="0.2202%" height="15" fill="rgb(243,32,47)"/><text x="14.9418%" y="111.50"></text></g><g><title>pollwake (9 samples, 0.18%)</title><rect x="14.7318%" y="85" width="0.1801%" height="15" fill="rgb(247,202,23)"/><text x="14.9818%" y="95.50"></text></g><g><title>try_to_wake_up (9 samples, 0.18%)</title><rect x="14.7318%" y="69" width="0.1801%" height="15" fill="rgb(219,102,11)"/><text x="14.9818%" y="79.50"></text></g><g><title>sock_def_readable (14 samples, 0.28%)</title><rect x="14.6717%" y="133" width="0.2802%" height="15" fill="rgb(243,110,44)"/><text x="14.9217%" y="143.50"></text></g><g><title>__wake_up_common_lock (13 samples, 0.26%)</title><rect x="14.6918%" y="117" width="0.2602%" height="15" fill="rgb(222,74,54)"/><text x="14.9418%" y="127.50"></text></g><g><title>tcp_ack (5 samples, 0.10%)</title><rect x="14.9520%" y="133" width="0.1001%" height="15" fill="rgb(216,99,12)"/><text x="15.2020%" y="143.50"></text></g><g><title>ip_local_deliver (27 samples, 0.54%)</title><rect x="14.6117%" y="229" width="0.5404%" height="15" fill="rgb(226,22,26)"/><text x="14.8617%" y="239.50"></text></g><g><title>ip_local_deliver_finish (27 samples, 0.54%)</title><rect x="14.6117%" y="213" width="0.5404%" height="15" fill="rgb(217,163,10)"/><text x="14.8617%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (27 samples, 0.54%)</title><rect x="14.6117%" y="197" width="0.5404%" height="15" fill="rgb(213,25,53)"/><text x="14.8617%" y="207.50"></text></g><g><title>tcp_v4_rcv (27 samples, 0.54%)</title><rect x="14.6117%" y="181" width="0.5404%" height="15" fill="rgb(252,105,26)"/><text x="14.8617%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (24 samples, 0.48%)</title><rect x="14.6717%" y="165" width="0.4804%" height="15" fill="rgb(220,39,43)"/><text x="14.9217%" y="175.50"></text></g><g><title>tcp_rcv_established (24 samples, 0.48%)</title><rect x="14.6717%" y="149" width="0.4804%" height="15" fill="rgb(229,68,48)"/><text x="14.9217%" y="159.50"></text></g><g><title>ip_finish_output2 (39 samples, 0.78%)</title><rect x="14.3915%" y="373" width="0.7806%" height="15" fill="rgb(252,8,32)"/><text x="14.6415%" y="383.50"></text></g><g><title>__local_bh_enable_ip (32 samples, 0.64%)</title><rect x="14.5316%" y="357" width="0.6405%" height="15" fill="rgb(223,20,43)"/><text x="14.7816%" y="367.50"></text></g><g><title>do_softirq (32 samples, 0.64%)</title><rect x="14.5316%" y="341" width="0.6405%" height="15" fill="rgb(229,81,49)"/><text x="14.7816%" y="351.50"></text></g><g><title>do_softirq_own_stack (31 samples, 0.62%)</title><rect x="14.5516%" y="325" width="0.6205%" height="15" fill="rgb(236,28,36)"/><text x="14.8016%" y="335.50"></text></g><g><title>__do_softirq (31 samples, 0.62%)</title><rect x="14.5516%" y="309" width="0.6205%" height="15" fill="rgb(249,185,26)"/><text x="14.8016%" y="319.50"></text></g><g><title>net_rx_action (31 samples, 0.62%)</title><rect x="14.5516%" y="293" width="0.6205%" height="15" fill="rgb(249,174,33)"/><text x="14.8016%" y="303.50"></text></g><g><title>process_backlog (30 samples, 0.60%)</title><rect x="14.5717%" y="277" width="0.6005%" height="15" fill="rgb(233,201,37)"/><text x="14.8217%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (30 samples, 0.60%)</title><rect x="14.5717%" y="261" width="0.6005%" height="15" fill="rgb(221,78,26)"/><text x="14.8217%" y="271.50"></text></g><g><title>ip_rcv (29 samples, 0.58%)</title><rect x="14.5917%" y="245" width="0.5805%" height="15" fill="rgb(250,127,30)"/><text x="14.8417%" y="255.50"></text></g><g><title>__ip_queue_xmit (42 samples, 0.84%)</title><rect x="14.3515%" y="405" width="0.8407%" height="15" fill="rgb(230,49,44)"/><text x="14.6015%" y="415.50"></text></g><g><title>ip_output (40 samples, 0.80%)</title><rect x="14.3915%" y="389" width="0.8006%" height="15" fill="rgb(229,67,23)"/><text x="14.6415%" y="399.50"></text></g><g><title>__tcp_transmit_skb (44 samples, 0.88%)</title><rect x="14.3315%" y="421" width="0.8807%" height="15" fill="rgb(249,83,47)"/><text x="14.5815%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (48 samples, 0.96%)</title><rect x="14.3114%" y="453" width="0.9608%" height="15" fill="rgb(215,43,3)"/><text x="14.5614%" y="463.50"></text></g><g><title>tcp_write_xmit (48 samples, 0.96%)</title><rect x="14.3114%" y="437" width="0.9608%" height="15" fill="rgb(238,154,13)"/><text x="14.5614%" y="447.50"></text></g><g><title>__x64_sys_sendto (57 samples, 1.14%)</title><rect x="14.2514%" y="533" width="1.1409%" height="15" fill="rgb(219,56,2)"/><text x="14.5014%" y="543.50"></text></g><g><title>__sys_sendto (57 samples, 1.14%)</title><rect x="14.2514%" y="517" width="1.1409%" height="15" fill="rgb(233,0,4)"/><text x="14.5014%" y="527.50"></text></g><g><title>sock_sendmsg (57 samples, 1.14%)</title><rect x="14.2514%" y="501" width="1.1409%" height="15" fill="rgb(235,30,7)"/><text x="14.5014%" y="511.50"></text></g><g><title>tcp_sendmsg (57 samples, 1.14%)</title><rect x="14.2514%" y="485" width="1.1409%" height="15" fill="rgb(250,79,13)"/><text x="14.5014%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (56 samples, 1.12%)</title><rect x="14.2714%" y="469" width="1.1209%" height="15" fill="rgb(211,146,34)"/><text x="14.5214%" y="479.50"></text></g><g><title>do_syscall_64 (58 samples, 1.16%)</title><rect x="14.2514%" y="549" width="1.1609%" height="15" fill="rgb(228,22,38)"/><text x="14.5014%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (67 samples, 1.34%)</title><rect x="14.0913%" y="677" width="1.3411%" height="15" fill="rgb(235,168,5)"/><text x="14.3413%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (65 samples, 1.30%)</title><rect x="14.1313%" y="661" width="1.3010%" height="15" fill="rgb(221,155,16)"/><text x="14.3813%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (62 samples, 1.24%)</title><rect x="14.1914%" y="645" width="1.2410%" height="15" fill="rgb(215,215,53)"/><text x="14.4414%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (60 samples, 1.20%)</title><rect x="14.2314%" y="629" width="1.2010%" height="15" fill="rgb(223,4,10)"/><text x="14.4814%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (60 samples, 1.20%)</title><rect x="14.2314%" y="613" width="1.2010%" height="15" fill="rgb(234,103,6)"/><text x="14.4814%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (60 samples, 1.20%)</title><rect x="14.2314%" y="597" width="1.2010%" height="15" fill="rgb(227,97,0)"/><text x="14.4814%" y="607.50"></text></g><g><title>__libc_send (60 samples, 1.20%)</title><rect x="14.2314%" y="581" width="1.2010%" height="15" fill="rgb(234,150,53)"/><text x="14.4814%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (59 samples, 1.18%)</title><rect x="14.2514%" y="565" width="1.1809%" height="15" fill="rgb(228,201,54)"/><text x="14.5014%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.18%)</title><rect x="15.4524%" y="645" width="0.1801%" height="15" fill="rgb(222,22,37)"/><text x="15.7024%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.18%)</title><rect x="15.4524%" y="629" width="0.1801%" height="15" fill="rgb(237,53,32)"/><text x="15.7024%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.14%)</title><rect x="15.4924%" y="613" width="0.1401%" height="15" fill="rgb(233,25,53)"/><text x="15.7424%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.14%)</title><rect x="15.6325%" y="597" width="0.1401%" height="15" fill="rgb(210,40,34)"/><text x="15.8825%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.12%)</title><rect x="15.6525%" y="581" width="0.1201%" height="15" fill="rgb(241,220,44)"/><text x="15.9025%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.12%)</title><rect x="15.6525%" y="565" width="0.1201%" height="15" fill="rgb(235,28,35)"/><text x="15.9025%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.12%)</title><rect x="15.6525%" y="549" width="0.1201%" height="15" fill="rgb(210,56,17)"/><text x="15.9025%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.20%)</title><rect x="15.6325%" y="629" width="0.2002%" height="15" fill="rgb(224,130,29)"/><text x="15.8825%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 0.20%)</title><rect x="15.6325%" y="613" width="0.2002%" height="15" fill="rgb(235,212,8)"/><text x="15.8825%" y="623.50"></text></g><g><title>core::fmt::write (23 samples, 0.46%)</title><rect x="15.4524%" y="677" width="0.4604%" height="15" fill="rgb(223,33,50)"/><text x="15.7024%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (23 samples, 0.46%)</title><rect x="15.4524%" y="661" width="0.4604%" height="15" fill="rgb(219,149,13)"/><text x="15.7024%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.28%)</title><rect x="15.6325%" y="645" width="0.2802%" height="15" fill="rgb(250,156,29)"/><text x="15.8825%" y="655.50"></text></g><g><title>core::fmt::write (6 samples, 0.12%)</title><rect x="16.0128%" y="645" width="0.1201%" height="15" fill="rgb(216,193,19)"/><text x="16.2628%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.10%)</title><rect x="16.0328%" y="629" width="0.1001%" height="15" fill="rgb(216,135,14)"/><text x="16.2828%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (11 samples, 0.22%)</title><rect x="15.9528%" y="661" width="0.2202%" height="15" fill="rgb(241,47,5)"/><text x="16.2028%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (111 samples, 2.22%)</title><rect x="14.0512%" y="693" width="2.2218%" height="15" fill="rgb(233,42,35)"/><text x="14.3012%" y="703.50">d..</text></g><g><title>decor_mem::views::Views::insert (18 samples, 0.36%)</title><rect x="15.9127%" y="677" width="0.3603%" height="15" fill="rgb(231,13,6)"/><text x="16.1627%" y="687.50"></text></g><g><title>decor_mem::views::View::insert_row (5 samples, 0.10%)</title><rect x="16.1729%" y="661" width="0.1001%" height="15" fill="rgb(207,181,40)"/><text x="16.4229%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.14%)</title><rect x="16.2730%" y="677" width="0.1401%" height="15" fill="rgb(254,173,49)"/><text x="16.5230%" y="687.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.52%)</title><rect x="16.6934%" y="469" width="0.5204%" height="15" fill="rgb(221,1,38)"/><text x="16.9434%" y="479.50"></text></g><g><title>_int_malloc (19 samples, 0.38%)</title><rect x="16.8335%" y="453" width="0.3803%" height="15" fill="rgb(206,124,46)"/><text x="17.0835%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (43 samples, 0.86%)</title><rect x="16.4331%" y="661" width="0.8607%" height="15" fill="rgb(249,21,11)"/><text x="16.6831%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (33 samples, 0.66%)</title><rect x="16.6333%" y="645" width="0.6605%" height="15" fill="rgb(222,201,40)"/><text x="16.8833%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (33 samples, 0.66%)</title><rect x="16.6333%" y="629" width="0.6605%" height="15" fill="rgb(235,61,29)"/><text x="16.8833%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (33 samples, 0.66%)</title><rect x="16.6333%" y="613" width="0.6605%" height="15" fill="rgb(219,207,3)"/><text x="16.8833%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.66%)</title><rect x="16.6333%" y="597" width="0.6605%" height="15" fill="rgb(222,56,46)"/><text x="16.8833%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30 samples, 0.60%)</title><rect x="16.6934%" y="581" width="0.6005%" height="15" fill="rgb(239,76,54)"/><text x="16.9434%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (30 samples, 0.60%)</title><rect x="16.6934%" y="565" width="0.6005%" height="15" fill="rgb(231,124,27)"/><text x="16.9434%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.60%)</title><rect x="16.6934%" y="549" width="0.6005%" height="15" fill="rgb(249,195,6)"/><text x="16.9434%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.60%)</title><rect x="16.6934%" y="533" width="0.6005%" height="15" fill="rgb(237,174,47)"/><text x="16.9434%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (30 samples, 0.60%)</title><rect x="16.6934%" y="517" width="0.6005%" height="15" fill="rgb(206,201,31)"/><text x="16.9434%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.60%)</title><rect x="16.6934%" y="501" width="0.6005%" height="15" fill="rgb(231,57,52)"/><text x="16.9434%" y="511.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.60%)</title><rect x="16.6934%" y="485" width="0.6005%" height="15" fill="rgb(248,177,22)"/><text x="16.9434%" y="495.50"></text></g><g><title>malloc_consolidate (25 samples, 0.50%)</title><rect x="17.7142%" y="629" width="0.5004%" height="15" fill="rgb(215,211,37)"/><text x="17.9642%" y="639.50"></text></g><g><title>__GI___libc_malloc (48 samples, 0.96%)</title><rect x="17.2938%" y="661" width="0.9608%" height="15" fill="rgb(241,128,51)"/><text x="17.5438%" y="671.50"></text></g><g><title>_int_malloc (46 samples, 0.92%)</title><rect x="17.3339%" y="645" width="0.9207%" height="15" fill="rgb(227,165,31)"/><text x="17.5839%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (103 samples, 2.06%)</title><rect x="16.4131%" y="677" width="2.0616%" height="15" fill="rgb(228,167,24)"/><text x="16.6631%" y="687.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.22%)</title><rect x="18.2546%" y="661" width="0.2202%" height="15" fill="rgb(228,143,12)"/><text x="18.5046%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.14%)</title><rect x="18.4748%" y="677" width="0.1401%" height="15" fill="rgb(249,149,8)"/><text x="18.7248%" y="687.50"></text></g><g><title>core::fmt::write (6 samples, 0.12%)</title><rect x="18.4948%" y="661" width="0.1201%" height="15" fill="rgb(243,35,44)"/><text x="18.7448%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (81 samples, 1.62%)</title><rect x="18.6149%" y="677" width="1.6213%" height="15" fill="rgb(246,89,9)"/><text x="18.8649%" y="687.50"></text></g><g><title>__GI___libc_malloc (81 samples, 1.62%)</title><rect x="18.6149%" y="661" width="1.6213%" height="15" fill="rgb(233,213,13)"/><text x="18.8649%" y="671.50"></text></g><g><title>_int_malloc (81 samples, 1.62%)</title><rect x="18.6149%" y="645" width="1.6213%" height="15" fill="rgb(233,141,41)"/><text x="18.8649%" y="655.50"></text></g><g><title>malloc_consolidate (63 samples, 1.26%)</title><rect x="18.9752%" y="629" width="1.2610%" height="15" fill="rgb(239,167,4)"/><text x="19.2252%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.10%)</title><rect x="20.2562%" y="645" width="0.1001%" height="15" fill="rgb(209,217,16)"/><text x="20.5062%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.10%)</title><rect x="20.2562%" y="629" width="0.1001%" height="15" fill="rgb(219,88,35)"/><text x="20.5062%" y="639.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.18%)</title><rect x="20.5965%" y="629" width="0.1801%" height="15" fill="rgb(220,193,23)"/><text x="20.8465%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.10%)</title><rect x="20.8367%" y="629" width="0.1001%" height="15" fill="rgb(230,90,52)"/><text x="21.0867%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.20%)</title><rect x="21.0168%" y="613" width="0.2002%" height="15" fill="rgb(252,106,19)"/><text x="21.2668%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (51 samples, 1.02%)</title><rect x="20.2362%" y="661" width="1.0208%" height="15" fill="rgb(206,74,20)"/><text x="20.4862%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (41 samples, 0.82%)</title><rect x="20.4363%" y="645" width="0.8207%" height="15" fill="rgb(230,138,44)"/><text x="20.6863%" y="655.50"></text></g><g><title>core::fmt::write (16 samples, 0.32%)</title><rect x="20.9367%" y="629" width="0.3203%" height="15" fill="rgb(235,182,43)"/><text x="21.1867%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.20%)</title><rect x="21.2570%" y="629" width="0.2002%" height="15" fill="rgb(242,16,51)"/><text x="21.5070%" y="639.50"></text></g><g><title>core::fmt::write (62 samples, 1.24%)</title><rect x="20.2362%" y="677" width="1.2410%" height="15" fill="rgb(248,9,4)"/><text x="20.4862%" y="687.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (11 samples, 0.22%)</title><rect x="21.2570%" y="661" width="0.2202%" height="15" fill="rgb(210,31,22)"/><text x="21.5070%" y="671.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (11 samples, 0.22%)</title><rect x="21.2570%" y="645" width="0.2202%" height="15" fill="rgb(239,54,39)"/><text x="21.5070%" y="655.50"></text></g><g><title>_int_free (7 samples, 0.14%)</title><rect x="21.4972%" y="645" width="0.1401%" height="15" fill="rgb(230,99,41)"/><text x="21.7472%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.30%)</title><rect x="21.4772%" y="677" width="0.3002%" height="15" fill="rgb(253,106,12)"/><text x="21.7272%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.28%)</title><rect x="21.4972%" y="661" width="0.2802%" height="15" fill="rgb(213,46,41)"/><text x="21.7472%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.14%)</title><rect x="21.6373%" y="645" width="0.1401%" height="15" fill="rgb(215,133,35)"/><text x="21.8873%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.14%)</title><rect x="22.1577%" y="613" width="0.1401%" height="15" fill="rgb(213,28,5)"/><text x="22.4077%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.12%)</title><rect x="22.1777%" y="597" width="0.1201%" height="15" fill="rgb(215,77,49)"/><text x="22.4277%" y="607.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.12%)</title><rect x="22.1777%" y="581" width="0.1201%" height="15" fill="rgb(248,100,22)"/><text x="22.4277%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.12%)</title><rect x="22.1777%" y="565" width="0.1201%" height="15" fill="rgb(208,67,9)"/><text x="22.4277%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.12%)</title><rect x="22.1777%" y="549" width="0.1201%" height="15" fill="rgb(219,133,21)"/><text x="22.4277%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (6 samples, 0.12%)</title><rect x="22.1777%" y="533" width="0.1201%" height="15" fill="rgb(246,46,29)"/><text x="22.4277%" y="543.50"></text></g><g><title>alloc::fmt::format (17 samples, 0.34%)</title><rect x="22.0576%" y="661" width="0.3403%" height="15" fill="rgb(246,185,52)"/><text x="22.3076%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.28%)</title><rect x="22.1177%" y="645" width="0.2802%" height="15" fill="rgb(252,136,11)"/><text x="22.3677%" y="655.50"></text></g><g><title>core::fmt::write (13 samples, 0.26%)</title><rect x="22.1377%" y="629" width="0.2602%" height="15" fill="rgb(219,138,53)"/><text x="22.3877%" y="639.50"></text></g><g><title>alloc::str::join_generic_copy (5 samples, 0.10%)</title><rect x="22.4780%" y="661" width="0.1001%" height="15" fill="rgb(211,51,23)"/><text x="22.7280%" y="671.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (47 samples, 0.94%)</title><rect x="21.7774%" y="677" width="0.9408%" height="15" fill="rgb(247,221,28)"/><text x="22.0274%" y="687.50"></text></g><g><title>_int_free (5 samples, 0.10%)</title><rect x="22.8983%" y="629" width="0.1001%" height="15" fill="rgb(251,222,45)"/><text x="23.1483%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.32%)</title><rect x="22.7182%" y="661" width="0.3203%" height="15" fill="rgb(217,162,53)"/><text x="22.9682%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.26%)</title><rect x="22.7782%" y="645" width="0.2602%" height="15" fill="rgb(229,93,14)"/><text x="23.0282%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (6 samples, 0.12%)</title><rect x="23.2186%" y="613" width="0.1201%" height="15" fill="rgb(209,67,49)"/><text x="23.4686%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (7 samples, 0.14%)</title><rect x="23.2186%" y="629" width="0.1401%" height="15" fill="rgb(213,87,29)"/><text x="23.4686%" y="639.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.12%)</title><rect x="23.5388%" y="421" width="0.1201%" height="15" fill="rgb(205,151,52)"/><text x="23.7888%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.30%)</title><rect x="23.3987%" y="613" width="0.3002%" height="15" fill="rgb(253,215,39)"/><text x="23.6487%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.22%)</title><rect x="23.4788%" y="597" width="0.2202%" height="15" fill="rgb(221,220,41)"/><text x="23.7288%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.22%)</title><rect x="23.4788%" y="581" width="0.2202%" height="15" fill="rgb(218,133,21)"/><text x="23.7288%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.22%)</title><rect x="23.4788%" y="565" width="0.2202%" height="15" fill="rgb(221,193,43)"/><text x="23.7288%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.20%)</title><rect x="23.4988%" y="549" width="0.2002%" height="15" fill="rgb(240,128,52)"/><text x="23.7488%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.16%)</title><rect x="23.5388%" y="533" width="0.1601%" height="15" fill="rgb(253,114,12)"/><text x="23.7888%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.16%)</title><rect x="23.5388%" y="517" width="0.1601%" height="15" fill="rgb(215,223,47)"/><text x="23.7888%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.16%)</title><rect x="23.5388%" y="501" width="0.1601%" height="15" fill="rgb(248,225,23)"/><text x="23.7888%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.16%)</title><rect x="23.5388%" y="485" width="0.1601%" height="15" fill="rgb(250,108,0)"/><text x="23.7888%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (8 samples, 0.16%)</title><rect x="23.5388%" y="469" width="0.1601%" height="15" fill="rgb(228,208,7)"/><text x="23.7888%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.16%)</title><rect x="23.5388%" y="453" width="0.1601%" height="15" fill="rgb(244,45,10)"/><text x="23.7888%" y="463.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.16%)</title><rect x="23.5388%" y="437" width="0.1601%" height="15" fill="rgb(207,125,25)"/><text x="23.7888%" y="447.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (28 samples, 0.56%)</title><rect x="23.3587%" y="629" width="0.5604%" height="15" fill="rgb(210,195,18)"/><text x="23.6087%" y="639.50"></text></g><g><title>std::time::Instant::elapsed (8 samples, 0.16%)</title><rect x="23.7590%" y="613" width="0.1601%" height="15" fill="rgb(249,80,12)"/><text x="24.0090%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (39 samples, 0.78%)</title><rect x="23.1785%" y="645" width="0.7806%" height="15" fill="rgb(221,65,9)"/><text x="23.4285%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.12%)</title><rect x="23.9592%" y="629" width="0.1201%" height="15" fill="rgb(235,49,36)"/><text x="24.2092%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (8 samples, 0.16%)</title><rect x="23.9592%" y="645" width="0.1601%" height="15" fill="rgb(225,32,20)"/><text x="24.2092%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (59 samples, 1.18%)</title><rect x="23.0384%" y="661" width="1.1809%" height="15" fill="rgb(215,141,46)"/><text x="23.2884%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.26%)</title><rect x="24.3795%" y="629" width="0.2602%" height="15" fill="rgb(250,160,47)"/><text x="24.6295%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.24%)</title><rect x="24.3995%" y="613" width="0.2402%" height="15" fill="rgb(216,222,40)"/><text x="24.6495%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 0.36%)</title><rect x="24.3395%" y="645" width="0.3603%" height="15" fill="rgb(234,217,39)"/><text x="24.5895%" y="655.50"></text></g><g><title>_int_free (10 samples, 0.20%)</title><rect x="24.7998%" y="629" width="0.2002%" height="15" fill="rgb(207,178,40)"/><text x="25.0498%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.30%)</title><rect x="24.7598%" y="645" width="0.3002%" height="15" fill="rgb(221,136,13)"/><text x="25.0098%" y="655.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.46%)</title><rect x="25.3603%" y="421" width="0.4604%" height="15" fill="rgb(249,199,10)"/><text x="25.6103%" y="431.50"></text></g><g><title>_int_malloc (15 samples, 0.30%)</title><rect x="25.5204%" y="405" width="0.3002%" height="15" fill="rgb(249,222,13)"/><text x="25.7704%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 0.72%)</title><rect x="25.1201%" y="613" width="0.7206%" height="15" fill="rgb(244,185,38)"/><text x="25.3701%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 0.56%)</title><rect x="25.2802%" y="597" width="0.5604%" height="15" fill="rgb(236,202,9)"/><text x="25.5302%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.56%)</title><rect x="25.2802%" y="581" width="0.5604%" height="15" fill="rgb(250,229,37)"/><text x="25.5302%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.54%)</title><rect x="25.3002%" y="565" width="0.5404%" height="15" fill="rgb(206,174,23)"/><text x="25.5502%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.54%)</title><rect x="25.3002%" y="549" width="0.5404%" height="15" fill="rgb(211,33,43)"/><text x="25.5502%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (24 samples, 0.48%)</title><rect x="25.3603%" y="533" width="0.4804%" height="15" fill="rgb(245,58,50)"/><text x="25.6103%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (24 samples, 0.48%)</title><rect x="25.3603%" y="517" width="0.4804%" height="15" fill="rgb(244,68,36)"/><text x="25.6103%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.48%)</title><rect x="25.3603%" y="501" width="0.4804%" height="15" fill="rgb(232,229,15)"/><text x="25.6103%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.48%)</title><rect x="25.3603%" y="485" width="0.4804%" height="15" fill="rgb(254,30,23)"/><text x="25.6103%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (24 samples, 0.48%)</title><rect x="25.3603%" y="469" width="0.4804%" height="15" fill="rgb(235,160,14)"/><text x="25.6103%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.48%)</title><rect x="25.3603%" y="453" width="0.4804%" height="15" fill="rgb(212,155,44)"/><text x="25.6103%" y="463.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.48%)</title><rect x="25.3603%" y="437" width="0.4804%" height="15" fill="rgb(226,2,50)"/><text x="25.6103%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (39 samples, 0.78%)</title><rect x="25.1001%" y="629" width="0.7806%" height="15" fill="rgb(234,177,6)"/><text x="25.3501%" y="639.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (46 samples, 0.92%)</title><rect x="25.0600%" y="645" width="0.9207%" height="15" fill="rgb(217,24,9)"/><text x="25.3100%" y="655.50"></text></g><g><title>decor_mem::helpers::tablecolumn_matches_col (5 samples, 0.10%)</title><rect x="25.8807%" y="629" width="0.1001%" height="15" fill="rgb(220,13,46)"/><text x="26.1307%" y="639.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.14%)</title><rect x="26.3411%" y="629" width="0.1401%" height="15" fill="rgb(239,221,27)"/><text x="26.5911%" y="639.50"></text></g><g><title>_int_free (5 samples, 0.10%)</title><rect x="26.5212%" y="629" width="0.1001%" height="15" fill="rgb(222,198,25)"/><text x="26.7712%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (110 samples, 2.20%)</title><rect x="26.7014%" y="629" width="2.2018%" height="15" fill="rgb(211,99,13)"/><text x="26.9514%" y="639.50">d..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (152 samples, 3.04%)</title><rect x="25.9808%" y="645" width="3.0424%" height="15" fill="rgb(232,111,31)"/><text x="26.2308%" y="655.50">dec..</text></g><g><title>decor_mem::views::View::is_indexed_col (6 samples, 0.12%)</title><rect x="28.9031%" y="629" width="0.1201%" height="15" fill="rgb(245,82,37)"/><text x="29.1531%" y="639.50"></text></g><g><title>std::time::Instant::elapsed (5 samples, 0.10%)</title><rect x="29.0232%" y="645" width="0.1001%" height="15" fill="rgb(227,149,46)"/><text x="29.2732%" y="655.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (321 samples, 6.43%)</title><rect x="22.7182%" y="677" width="6.4251%" height="15" fill="rgb(218,36,50)"/><text x="22.9682%" y="687.50">decor_me..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (246 samples, 4.92%)</title><rect x="24.2194%" y="661" width="4.9239%" height="15" fill="rgb(226,80,48)"/><text x="24.4694%" y="671.50">decor_..</text></g><g><title>__GI___libc_realloc (5 samples, 0.10%)</title><rect x="29.4636%" y="661" width="0.1001%" height="15" fill="rgb(238,224,15)"/><text x="29.7136%" y="671.50"></text></g><g><title>core::fmt::write (21 samples, 0.42%)</title><rect x="29.7038%" y="661" width="0.4203%" height="15" fill="rgb(241,136,10)"/><text x="29.9538%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (19 samples, 0.38%)</title><rect x="29.7438%" y="645" width="0.3803%" height="15" fill="rgb(208,32,45)"/><text x="29.9938%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (17 samples, 0.34%)</title><rect x="29.7838%" y="629" width="0.3403%" height="15" fill="rgb(207,135,9)"/><text x="30.0338%" y="639.50"></text></g><g><title>core::fmt::write (7 samples, 0.14%)</title><rect x="29.9840%" y="613" width="0.1401%" height="15" fill="rgb(206,86,44)"/><text x="30.2340%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.16%)</title><rect x="30.1241%" y="661" width="0.1601%" height="15" fill="rgb(245,177,15)"/><text x="30.3741%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (7 samples, 0.14%)</title><rect x="30.2842%" y="661" width="0.1401%" height="15" fill="rgb(206,64,50)"/><text x="30.5342%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.12%)</title><rect x="30.4243%" y="661" width="0.1201%" height="15" fill="rgb(234,36,40)"/><text x="30.6743%" y="671.50"></text></g><g><title>std::time::Instant::elapsed (5 samples, 0.10%)</title><rect x="30.5444%" y="661" width="0.1001%" height="15" fill="rgb(213,64,8)"/><text x="30.7944%" y="671.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (80 samples, 1.60%)</title><rect x="29.1433%" y="677" width="1.6013%" height="15" fill="rgb(210,75,36)"/><text x="29.3933%" y="687.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.10%)</title><rect x="30.6445%" y="661" width="0.1001%" height="15" fill="rgb(229,88,21)"/><text x="30.8945%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.10%)</title><rect x="30.6445%" y="645" width="0.1001%" height="15" fill="rgb(252,204,47)"/><text x="30.8945%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.10%)</title><rect x="30.6445%" y="629" width="0.1001%" height="15" fill="rgb(208,77,27)"/><text x="30.8945%" y="639.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (9 samples, 0.18%)</title><rect x="30.8447%" y="661" width="0.1801%" height="15" fill="rgb(221,76,26)"/><text x="31.0947%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (6 samples, 0.12%)</title><rect x="30.9047%" y="645" width="0.1201%" height="15" fill="rgb(225,139,18)"/><text x="31.1547%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.10%)</title><rect x="30.9247%" y="629" width="0.1001%" height="15" fill="rgb(230,137,11)"/><text x="31.1747%" y="639.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.14%)</title><rect x="31.4852%" y="645" width="0.1401%" height="15" fill="rgb(212,28,1)"/><text x="31.7352%" y="655.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.10%)</title><rect x="32.0456%" y="581" width="0.1001%" height="15" fill="rgb(248,164,17)"/><text x="32.2956%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.22%)</title><rect x="31.9456%" y="613" width="0.2202%" height="15" fill="rgb(222,171,42)"/><text x="32.1956%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.16%)</title><rect x="32.0056%" y="597" width="0.1601%" height="15" fill="rgb(243,84,45)"/><text x="32.2556%" y="607.50"></text></g><g><title>_int_free (7 samples, 0.14%)</title><rect x="32.5060%" y="565" width="0.1401%" height="15" fill="rgb(252,49,23)"/><text x="32.7560%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (28 samples, 0.56%)</title><rect x="32.1857%" y="597" width="0.5604%" height="15" fill="rgb(215,19,7)"/><text x="32.4357%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (26 samples, 0.52%)</title><rect x="32.2258%" y="581" width="0.5204%" height="15" fill="rgb(238,81,41)"/><text x="32.4758%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.10%)</title><rect x="32.6461%" y="565" width="0.1001%" height="15" fill="rgb(210,199,37)"/><text x="32.8961%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (34 samples, 0.68%)</title><rect x="32.1657%" y="613" width="0.6805%" height="15" fill="rgb(244,192,49)"/><text x="32.4157%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.10%)</title><rect x="32.7462%" y="597" width="0.1001%" height="15" fill="rgb(226,211,11)"/><text x="32.9962%" y="607.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.18%)</title><rect x="32.9864%" y="597" width="0.1801%" height="15" fill="rgb(236,162,54)"/><text x="33.2364%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.10%)</title><rect x="33.2666%" y="597" width="0.1001%" height="15" fill="rgb(220,229,9)"/><text x="33.5166%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.14%)</title><rect x="33.4668%" y="581" width="0.1401%" height="15" fill="rgb(250,87,22)"/><text x="33.7168%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (90 samples, 1.80%)</title><rect x="31.8655%" y="629" width="1.8014%" height="15" fill="rgb(239,43,17)"/><text x="32.1155%" y="639.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (38 samples, 0.76%)</title><rect x="32.9063%" y="613" width="0.7606%" height="15" fill="rgb(231,177,25)"/><text x="33.1563%" y="623.50"></text></g><g><title>core::fmt::write (14 samples, 0.28%)</title><rect x="33.3867%" y="597" width="0.2802%" height="15" fill="rgb(219,179,1)"/><text x="33.6367%" y="607.50"></text></g><g><title>core::fmt::write (96 samples, 1.92%)</title><rect x="31.7854%" y="645" width="1.9215%" height="15" fill="rgb(238,219,53)"/><text x="32.0354%" y="655.50">c..</text></g><g><title>&lt;decor_mem::views::HashedRowPtr as core::cmp::PartialEq&gt;::eq (6 samples, 0.12%)</title><rect x="34.0272%" y="629" width="0.1201%" height="15" fill="rgb(232,167,36)"/><text x="34.2772%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (35 samples, 0.70%)</title><rect x="33.7070%" y="645" width="0.7006%" height="15" fill="rgb(244,19,51)"/><text x="33.9570%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.16%)</title><rect x="34.4075%" y="645" width="0.1601%" height="15" fill="rgb(224,6,22)"/><text x="34.6575%" y="655.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (6 samples, 0.12%)</title><rect x="34.5677%" y="629" width="0.1201%" height="15" fill="rgb(224,145,5)"/><text x="34.8177%" y="639.50"></text></g><g><title>std::time::Instant::duration_since (6 samples, 0.12%)</title><rect x="34.5677%" y="613" width="0.1201%" height="15" fill="rgb(234,130,49)"/><text x="34.8177%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (6 samples, 0.12%)</title><rect x="34.5677%" y="597" width="0.1201%" height="15" fill="rgb(254,6,2)"/><text x="34.8177%" y="607.50"></text></g><g><title>std::time::Instant::elapsed (9 samples, 0.18%)</title><rect x="34.5677%" y="645" width="0.1801%" height="15" fill="rgb(208,96,46)"/><text x="34.8177%" y="655.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (192 samples, 3.84%)</title><rect x="31.0248%" y="661" width="3.8431%" height="15" fill="rgb(239,3,39)"/><text x="31.2748%" y="671.50">deco..</text></g><g><title>std::time::Instant::now (6 samples, 0.12%)</title><rect x="34.7478%" y="645" width="0.1201%" height="15" fill="rgb(233,210,1)"/><text x="34.9978%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (6 samples, 0.12%)</title><rect x="34.7478%" y="629" width="0.1201%" height="15" fill="rgb(244,137,37)"/><text x="34.9978%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::now (6 samples, 0.12%)</title><rect x="34.7478%" y="613" width="0.1201%" height="15" fill="rgb(240,136,2)"/><text x="34.9978%" y="623.50"></text></g><g><title>__clock_gettime_2 (6 samples, 0.12%)</title><rect x="34.7478%" y="597" width="0.1201%" height="15" fill="rgb(239,18,37)"/><text x="34.9978%" y="607.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.12%)</title><rect x="34.7478%" y="581" width="0.1201%" height="15" fill="rgb(218,185,22)"/><text x="34.9978%" y="591.50"></text></g><g><title>decor_mem::views::Views::delete (208 samples, 4.16%)</title><rect x="30.7446%" y="677" width="4.1633%" height="15" fill="rgb(225,218,4)"/><text x="30.9946%" y="687.50">decor..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (1,045 samples, 20.92%)</title><rect x="14.0512%" y="725" width="20.9167%" height="15" fill="rgb(230,182,32)"/><text x="14.3012%" y="735.50">&lt;decor_mem::Shim as msql_srv::Mys..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (1,045 samples, 20.92%)</title><rect x="14.0512%" y="709" width="20.9167%" height="15" fill="rgb(242,56,43)"/><text x="14.3012%" y="719.50">decor_mem::query_transformer::Que..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (934 samples, 18.69%)</title><rect x="16.2730%" y="693" width="18.6950%" height="15" fill="rgb(233,99,24)"/><text x="16.5230%" y="703.50">decor_mem::query_transformer:..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.16%)</title><rect x="35.0080%" y="677" width="0.1601%" height="15" fill="rgb(234,209,42)"/><text x="35.2580%" y="687.50"></text></g><g><title>core::fmt::write (7 samples, 0.14%)</title><rect x="35.0280%" y="661" width="0.1401%" height="15" fill="rgb(227,7,12)"/><text x="35.2780%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (5 samples, 0.10%)</title><rect x="35.0681%" y="645" width="0.1001%" height="15" fill="rgb(245,203,43)"/><text x="35.3181%" y="655.50"></text></g><g><title>enqueue_task (7 samples, 0.14%)</title><rect x="35.7686%" y="53" width="0.1401%" height="15" fill="rgb(238,205,33)"/><text x="36.0186%" y="63.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.12%)</title><rect x="35.9087%" y="53" width="0.1201%" height="15" fill="rgb(231,56,7)"/><text x="36.1587%" y="63.50"></text></g><g><title>enqueue_entity (5 samples, 0.10%)</title><rect x="35.9287%" y="37" width="0.1001%" height="15" fill="rgb(244,186,29)"/><text x="36.1787%" y="47.50"></text></g><g><title>__wake_up_common (19 samples, 0.38%)</title><rect x="35.7086%" y="101" width="0.3803%" height="15" fill="rgb(234,111,31)"/><text x="35.9586%" y="111.50"></text></g><g><title>pollwake (19 samples, 0.38%)</title><rect x="35.7086%" y="85" width="0.3803%" height="15" fill="rgb(241,149,10)"/><text x="35.9586%" y="95.50"></text></g><g><title>try_to_wake_up (18 samples, 0.36%)</title><rect x="35.7286%" y="69" width="0.3603%" height="15" fill="rgb(249,206,44)"/><text x="35.9786%" y="79.50"></text></g><g><title>sock_def_readable (20 samples, 0.40%)</title><rect x="35.7086%" y="133" width="0.4003%" height="15" fill="rgb(251,153,30)"/><text x="35.9586%" y="143.50"></text></g><g><title>__wake_up_common_lock (20 samples, 0.40%)</title><rect x="35.7086%" y="117" width="0.4003%" height="15" fill="rgb(239,152,38)"/><text x="35.9586%" y="127.50"></text></g><g><title>kfree (5 samples, 0.10%)</title><rect x="36.1689%" y="101" width="0.1001%" height="15" fill="rgb(249,139,47)"/><text x="36.4189%" y="111.50"></text></g><g><title>__kfree_skb (7 samples, 0.14%)</title><rect x="36.1689%" y="117" width="0.1401%" height="15" fill="rgb(244,64,35)"/><text x="36.4189%" y="127.50"></text></g><g><title>tcp_ack (11 samples, 0.22%)</title><rect x="36.1089%" y="133" width="0.2202%" height="15" fill="rgb(216,46,15)"/><text x="36.3589%" y="143.50"></text></g><g><title>ip_local_deliver (37 samples, 0.74%)</title><rect x="35.6485%" y="229" width="0.7406%" height="15" fill="rgb(250,74,19)"/><text x="35.8985%" y="239.50"></text></g><g><title>ip_local_deliver_finish (37 samples, 0.74%)</title><rect x="35.6485%" y="213" width="0.7406%" height="15" fill="rgb(249,42,33)"/><text x="35.8985%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (37 samples, 0.74%)</title><rect x="35.6485%" y="197" width="0.7406%" height="15" fill="rgb(242,149,17)"/><text x="35.8985%" y="207.50"></text></g><g><title>tcp_v4_rcv (35 samples, 0.70%)</title><rect x="35.6886%" y="181" width="0.7006%" height="15" fill="rgb(244,29,21)"/><text x="35.9386%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (34 samples, 0.68%)</title><rect x="35.7086%" y="165" width="0.6805%" height="15" fill="rgb(220,130,37)"/><text x="35.9586%" y="175.50"></text></g><g><title>tcp_rcv_established (34 samples, 0.68%)</title><rect x="35.7086%" y="149" width="0.6805%" height="15" fill="rgb(211,67,2)"/><text x="35.9586%" y="159.50"></text></g><g><title>__local_bh_enable_ip (41 samples, 0.82%)</title><rect x="35.5885%" y="357" width="0.8207%" height="15" fill="rgb(235,68,52)"/><text x="35.8385%" y="367.50"></text></g><g><title>do_softirq (41 samples, 0.82%)</title><rect x="35.5885%" y="341" width="0.8207%" height="15" fill="rgb(246,142,3)"/><text x="35.8385%" y="351.50"></text></g><g><title>do_softirq_own_stack (40 samples, 0.80%)</title><rect x="35.6085%" y="325" width="0.8006%" height="15" fill="rgb(241,25,7)"/><text x="35.8585%" y="335.50"></text></g><g><title>__do_softirq (40 samples, 0.80%)</title><rect x="35.6085%" y="309" width="0.8006%" height="15" fill="rgb(242,119,39)"/><text x="35.8585%" y="319.50"></text></g><g><title>net_rx_action (40 samples, 0.80%)</title><rect x="35.6085%" y="293" width="0.8006%" height="15" fill="rgb(241,98,45)"/><text x="35.8585%" y="303.50"></text></g><g><title>process_backlog (40 samples, 0.80%)</title><rect x="35.6085%" y="277" width="0.8006%" height="15" fill="rgb(254,28,30)"/><text x="35.8585%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (40 samples, 0.80%)</title><rect x="35.6085%" y="261" width="0.8006%" height="15" fill="rgb(241,142,54)"/><text x="35.8585%" y="271.50"></text></g><g><title>ip_rcv (40 samples, 0.80%)</title><rect x="35.6085%" y="245" width="0.8006%" height="15" fill="rgb(222,85,15)"/><text x="35.8585%" y="255.50"></text></g><g><title>__ip_queue_xmit (49 samples, 0.98%)</title><rect x="35.4484%" y="405" width="0.9808%" height="15" fill="rgb(210,85,47)"/><text x="35.6984%" y="415.50"></text></g><g><title>ip_output (47 samples, 0.94%)</title><rect x="35.4884%" y="389" width="0.9408%" height="15" fill="rgb(224,206,25)"/><text x="35.7384%" y="399.50"></text></g><g><title>ip_finish_output2 (47 samples, 0.94%)</title><rect x="35.4884%" y="373" width="0.9408%" height="15" fill="rgb(243,201,19)"/><text x="35.7384%" y="383.50"></text></g><g><title>__tcp_transmit_skb (54 samples, 1.08%)</title><rect x="35.3883%" y="421" width="1.0809%" height="15" fill="rgb(236,59,4)"/><text x="35.6383%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (57 samples, 1.14%)</title><rect x="35.3683%" y="453" width="1.1409%" height="15" fill="rgb(254,179,45)"/><text x="35.6183%" y="463.50"></text></g><g><title>tcp_write_xmit (57 samples, 1.14%)</title><rect x="35.3683%" y="437" width="1.1409%" height="15" fill="rgb(226,14,10)"/><text x="35.6183%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.10%)</title><rect x="36.5092%" y="453" width="0.1001%" height="15" fill="rgb(244,27,41)"/><text x="36.7592%" y="463.50"></text></g><g><title>__alloc_skb (5 samples, 0.10%)</title><rect x="36.5092%" y="437" width="0.1001%" height="15" fill="rgb(235,35,32)"/><text x="36.7592%" y="447.50"></text></g><g><title>__x64_sys_sendto (69 samples, 1.38%)</title><rect x="35.3283%" y="533" width="1.3811%" height="15" fill="rgb(218,68,31)"/><text x="35.5783%" y="543.50"></text></g><g><title>__sys_sendto (69 samples, 1.38%)</title><rect x="35.3283%" y="517" width="1.3811%" height="15" fill="rgb(207,120,37)"/><text x="35.5783%" y="527.50"></text></g><g><title>sock_sendmsg (68 samples, 1.36%)</title><rect x="35.3483%" y="501" width="1.3611%" height="15" fill="rgb(227,98,0)"/><text x="35.5983%" y="511.50"></text></g><g><title>tcp_sendmsg (68 samples, 1.36%)</title><rect x="35.3483%" y="485" width="1.3611%" height="15" fill="rgb(207,7,3)"/><text x="35.5983%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (68 samples, 1.36%)</title><rect x="35.3483%" y="469" width="1.3611%" height="15" fill="rgb(206,98,19)"/><text x="35.5983%" y="479.50"></text></g><g><title>do_syscall_64 (71 samples, 1.42%)</title><rect x="35.3082%" y="549" width="1.4211%" height="15" fill="rgb(217,5,26)"/><text x="35.5582%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (80 samples, 1.60%)</title><rect x="35.1681%" y="677" width="1.6013%" height="15" fill="rgb(235,190,38)"/><text x="35.4181%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (78 samples, 1.56%)</title><rect x="35.2082%" y="661" width="1.5612%" height="15" fill="rgb(247,86,24)"/><text x="35.4582%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (75 samples, 1.50%)</title><rect x="35.2682%" y="645" width="1.5012%" height="15" fill="rgb(205,101,16)"/><text x="35.5182%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (73 samples, 1.46%)</title><rect x="35.3082%" y="629" width="1.4612%" height="15" fill="rgb(246,168,33)"/><text x="35.5582%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (73 samples, 1.46%)</title><rect x="35.3082%" y="613" width="1.4612%" height="15" fill="rgb(231,114,1)"/><text x="35.5582%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (73 samples, 1.46%)</title><rect x="35.3082%" y="597" width="1.4612%" height="15" fill="rgb(207,184,53)"/><text x="35.5582%" y="607.50"></text></g><g><title>__libc_send (73 samples, 1.46%)</title><rect x="35.3082%" y="581" width="1.4612%" height="15" fill="rgb(224,95,51)"/><text x="35.5582%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (73 samples, 1.46%)</title><rect x="35.3082%" y="565" width="1.4612%" height="15" fill="rgb(212,188,45)"/><text x="35.5582%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.14%)</title><rect x="36.9896%" y="581" width="0.1401%" height="15" fill="rgb(223,154,38)"/><text x="37.2396%" y="591.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.14%)</title><rect x="36.9896%" y="565" width="0.1401%" height="15" fill="rgb(251,22,52)"/><text x="37.2396%" y="575.50"></text></g><g><title>_int_realloc (5 samples, 0.10%)</title><rect x="37.0296%" y="549" width="0.1001%" height="15" fill="rgb(229,209,22)"/><text x="37.2796%" y="559.50"></text></g><g><title>_int_malloc (5 samples, 0.10%)</title><rect x="37.0296%" y="533" width="0.1001%" height="15" fill="rgb(234,138,34)"/><text x="37.2796%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (24 samples, 0.48%)</title><rect x="36.7894%" y="613" width="0.4804%" height="15" fill="rgb(212,95,11)"/><text x="37.0394%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (22 samples, 0.44%)</title><rect x="36.8295%" y="597" width="0.4404%" height="15" fill="rgb(240,179,47)"/><text x="37.0795%" y="607.50"></text></g><g><title>core::fmt::write (7 samples, 0.14%)</title><rect x="37.1297%" y="581" width="0.1401%" height="15" fill="rgb(240,163,11)"/><text x="37.3797%" y="591.50"></text></g><g><title>alloc::fmt::format (35 samples, 0.70%)</title><rect x="36.7694%" y="677" width="0.7006%" height="15" fill="rgb(236,37,12)"/><text x="37.0194%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (35 samples, 0.70%)</title><rect x="36.7694%" y="661" width="0.7006%" height="15" fill="rgb(232,164,16)"/><text x="37.0194%" y="671.50"></text></g><g><title>core::fmt::write (35 samples, 0.70%)</title><rect x="36.7694%" y="645" width="0.7006%" height="15" fill="rgb(244,205,15)"/><text x="37.0194%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (34 samples, 0.68%)</title><rect x="36.7894%" y="629" width="0.6805%" height="15" fill="rgb(223,117,47)"/><text x="37.0394%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.20%)</title><rect x="37.2698%" y="613" width="0.2002%" height="15" fill="rgb(244,107,35)"/><text x="37.5198%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.12%)</title><rect x="37.3499%" y="597" width="0.1201%" height="15" fill="rgb(205,140,8)"/><text x="37.5999%" y="607.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.36%)</title><rect x="37.4700%" y="661" width="0.3603%" height="15" fill="rgb(228,84,46)"/><text x="37.7200%" y="671.50"></text></g><g><title>_int_malloc (18 samples, 0.36%)</title><rect x="37.4700%" y="645" width="0.3603%" height="15" fill="rgb(254,188,9)"/><text x="37.7200%" y="655.50"></text></g><g><title>malloc_consolidate (17 samples, 0.34%)</title><rect x="37.4900%" y="629" width="0.3403%" height="15" fill="rgb(206,112,54)"/><text x="37.7400%" y="639.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (144 samples, 2.88%)</title><rect x="34.9680%" y="693" width="2.8823%" height="15" fill="rgb(216,84,49)"/><text x="35.2180%" y="703.50">de..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.38%)</title><rect x="37.4700%" y="677" width="0.3803%" height="15" fill="rgb(214,194,35)"/><text x="37.7200%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.10%)</title><rect x="37.8503%" y="677" width="0.1001%" height="15" fill="rgb(249,28,3)"/><text x="38.1003%" y="687.50"></text></g><g><title>psi_task_change (5 samples, 0.10%)</title><rect x="38.7310%" y="37" width="0.1001%" height="15" fill="rgb(222,56,52)"/><text x="38.9810%" y="47.50"></text></g><g><title>enqueue_task (6 samples, 0.12%)</title><rect x="38.7310%" y="53" width="0.1201%" height="15" fill="rgb(245,217,50)"/><text x="38.9810%" y="63.50"></text></g><g><title>__wake_up_common (18 samples, 0.36%)</title><rect x="38.6109%" y="101" width="0.3603%" height="15" fill="rgb(213,201,24)"/><text x="38.8609%" y="111.50"></text></g><g><title>pollwake (16 samples, 0.32%)</title><rect x="38.6509%" y="85" width="0.3203%" height="15" fill="rgb(248,116,28)"/><text x="38.9009%" y="95.50"></text></g><g><title>try_to_wake_up (14 samples, 0.28%)</title><rect x="38.6910%" y="69" width="0.2802%" height="15" fill="rgb(219,72,43)"/><text x="38.9410%" y="79.50"></text></g><g><title>sock_def_readable (20 samples, 0.40%)</title><rect x="38.6109%" y="133" width="0.4003%" height="15" fill="rgb(209,138,14)"/><text x="38.8609%" y="143.50"></text></g><g><title>__wake_up_common_lock (20 samples, 0.40%)</title><rect x="38.6109%" y="117" width="0.4003%" height="15" fill="rgb(222,18,33)"/><text x="38.8609%" y="127.50"></text></g><g><title>tcp_ack (6 samples, 0.12%)</title><rect x="39.0112%" y="133" width="0.1201%" height="15" fill="rgb(213,199,7)"/><text x="39.2612%" y="143.50"></text></g><g><title>do_softirq (40 samples, 0.80%)</title><rect x="38.3507%" y="341" width="0.8006%" height="15" fill="rgb(250,110,10)"/><text x="38.6007%" y="351.50"></text></g><g><title>do_softirq_own_stack (40 samples, 0.80%)</title><rect x="38.3507%" y="325" width="0.8006%" height="15" fill="rgb(248,123,6)"/><text x="38.6007%" y="335.50"></text></g><g><title>__do_softirq (40 samples, 0.80%)</title><rect x="38.3507%" y="309" width="0.8006%" height="15" fill="rgb(206,91,31)"/><text x="38.6007%" y="319.50"></text></g><g><title>net_rx_action (38 samples, 0.76%)</title><rect x="38.3907%" y="293" width="0.7606%" height="15" fill="rgb(211,154,13)"/><text x="38.6407%" y="303.50"></text></g><g><title>process_backlog (37 samples, 0.74%)</title><rect x="38.4107%" y="277" width="0.7406%" height="15" fill="rgb(225,148,7)"/><text x="38.6607%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (37 samples, 0.74%)</title><rect x="38.4107%" y="261" width="0.7406%" height="15" fill="rgb(220,160,43)"/><text x="38.6607%" y="271.50"></text></g><g><title>ip_rcv (35 samples, 0.70%)</title><rect x="38.4508%" y="245" width="0.7006%" height="15" fill="rgb(213,52,39)"/><text x="38.7008%" y="255.50"></text></g><g><title>ip_local_deliver (34 samples, 0.68%)</title><rect x="38.4708%" y="229" width="0.6805%" height="15" fill="rgb(243,137,7)"/><text x="38.7208%" y="239.50"></text></g><g><title>ip_local_deliver_finish (34 samples, 0.68%)</title><rect x="38.4708%" y="213" width="0.6805%" height="15" fill="rgb(230,79,13)"/><text x="38.7208%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (34 samples, 0.68%)</title><rect x="38.4708%" y="197" width="0.6805%" height="15" fill="rgb(247,105,23)"/><text x="38.7208%" y="207.50"></text></g><g><title>tcp_v4_rcv (33 samples, 0.66%)</title><rect x="38.4908%" y="181" width="0.6605%" height="15" fill="rgb(223,179,41)"/><text x="38.7408%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (28 samples, 0.56%)</title><rect x="38.5909%" y="165" width="0.5604%" height="15" fill="rgb(218,9,34)"/><text x="38.8409%" y="175.50"></text></g><g><title>tcp_rcv_established (28 samples, 0.56%)</title><rect x="38.5909%" y="149" width="0.5604%" height="15" fill="rgb(222,106,8)"/><text x="38.8409%" y="159.50"></text></g><g><title>__ip_queue_xmit (49 samples, 0.98%)</title><rect x="38.1906%" y="405" width="0.9808%" height="15" fill="rgb(211,220,0)"/><text x="38.4406%" y="415.50"></text></g><g><title>ip_output (47 samples, 0.94%)</title><rect x="38.2306%" y="389" width="0.9408%" height="15" fill="rgb(229,52,16)"/><text x="38.4806%" y="399.50"></text></g><g><title>ip_finish_output2 (46 samples, 0.92%)</title><rect x="38.2506%" y="373" width="0.9207%" height="15" fill="rgb(212,155,18)"/><text x="38.5006%" y="383.50"></text></g><g><title>__local_bh_enable_ip (41 samples, 0.82%)</title><rect x="38.3507%" y="357" width="0.8207%" height="15" fill="rgb(242,21,14)"/><text x="38.6007%" y="367.50"></text></g><g><title>__tcp_transmit_skb (53 samples, 1.06%)</title><rect x="38.1505%" y="421" width="1.0608%" height="15" fill="rgb(222,19,48)"/><text x="38.4005%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (55 samples, 1.10%)</title><rect x="38.1505%" y="453" width="1.1009%" height="15" fill="rgb(232,45,27)"/><text x="38.4005%" y="463.50"></text></g><g><title>tcp_write_xmit (55 samples, 1.10%)</title><rect x="38.1505%" y="437" width="1.1009%" height="15" fill="rgb(249,103,42)"/><text x="38.4005%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.12%)</title><rect x="39.2714%" y="453" width="0.1201%" height="15" fill="rgb(246,81,33)"/><text x="39.5214%" y="463.50"></text></g><g><title>__alloc_skb (5 samples, 0.10%)</title><rect x="39.2914%" y="437" width="0.1001%" height="15" fill="rgb(252,33,42)"/><text x="39.5414%" y="447.50"></text></g><g><title>sock_sendmsg (72 samples, 1.44%)</title><rect x="38.0104%" y="501" width="1.4412%" height="15" fill="rgb(209,212,41)"/><text x="38.2604%" y="511.50"></text></g><g><title>tcp_sendmsg (71 samples, 1.42%)</title><rect x="38.0304%" y="485" width="1.4211%" height="15" fill="rgb(207,154,6)"/><text x="38.2804%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (67 samples, 1.34%)</title><rect x="38.1105%" y="469" width="1.3411%" height="15" fill="rgb(223,64,47)"/><text x="38.3605%" y="479.50"></text></g><g><title>__x64_sys_sendto (73 samples, 1.46%)</title><rect x="38.0104%" y="533" width="1.4612%" height="15" fill="rgb(211,161,38)"/><text x="38.2604%" y="543.50"></text></g><g><title>__sys_sendto (73 samples, 1.46%)</title><rect x="38.0104%" y="517" width="1.4612%" height="15" fill="rgb(219,138,40)"/><text x="38.2604%" y="527.50"></text></g><g><title>do_syscall_64 (77 samples, 1.54%)</title><rect x="38.0104%" y="549" width="1.5412%" height="15" fill="rgb(241,228,46)"/><text x="38.2604%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (80 samples, 1.60%)</title><rect x="38.0104%" y="565" width="1.6013%" height="15" fill="rgb(223,209,38)"/><text x="38.2604%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (84 samples, 1.68%)</title><rect x="37.9504%" y="677" width="1.6813%" height="15" fill="rgb(236,164,45)"/><text x="38.2004%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (83 samples, 1.66%)</title><rect x="37.9704%" y="661" width="1.6613%" height="15" fill="rgb(231,15,5)"/><text x="38.2204%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (83 samples, 1.66%)</title><rect x="37.9704%" y="645" width="1.6613%" height="15" fill="rgb(252,35,15)"/><text x="38.2204%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (81 samples, 1.62%)</title><rect x="38.0104%" y="629" width="1.6213%" height="15" fill="rgb(248,181,18)"/><text x="38.2604%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (81 samples, 1.62%)</title><rect x="38.0104%" y="613" width="1.6213%" height="15" fill="rgb(233,39,42)"/><text x="38.2604%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (81 samples, 1.62%)</title><rect x="38.0104%" y="597" width="1.6213%" height="15" fill="rgb(238,110,33)"/><text x="38.2604%" y="607.50"></text></g><g><title>__libc_send (81 samples, 1.62%)</title><rect x="38.0104%" y="581" width="1.6213%" height="15" fill="rgb(233,195,10)"/><text x="38.2604%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.14%)</title><rect x="39.7718%" y="645" width="0.1401%" height="15" fill="rgb(254,105,3)"/><text x="40.0218%" y="655.50"></text></g><g><title>core::fmt::write (11 samples, 0.22%)</title><rect x="39.7318%" y="677" width="0.2202%" height="15" fill="rgb(221,225,9)"/><text x="39.9818%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (9 samples, 0.18%)</title><rect x="39.7718%" y="661" width="0.1801%" height="15" fill="rgb(224,227,45)"/><text x="40.0218%" y="671.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (5 samples, 0.10%)</title><rect x="40.0520%" y="661" width="0.1001%" height="15" fill="rgb(229,198,43)"/><text x="40.3020%" y="671.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (11 samples, 0.22%)</title><rect x="40.1521%" y="661" width="0.2202%" height="15" fill="rgb(206,209,35)"/><text x="40.4021%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (127 samples, 2.54%)</title><rect x="37.8503%" y="693" width="2.5420%" height="15" fill="rgb(245,195,53)"/><text x="38.1003%" y="703.50">de..</text></g><g><title>decor_mem::views::Views::delete (18 samples, 0.36%)</title><rect x="40.0320%" y="677" width="0.3603%" height="15" fill="rgb(240,92,26)"/><text x="40.2820%" y="687.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (1,328 samples, 26.58%)</title><rect x="14.0512%" y="773" width="26.5813%" height="15" fill="rgb(207,40,23)"/><text x="14.3012%" y="783.50">decor_mem::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,328 samples, 26.58%)</title><rect x="14.0512%" y="757" width="26.5813%" height="15" fill="rgb(223,111,35)"/><text x="14.3012%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (1,328 samples, 26.58%)</title><rect x="14.0512%" y="741" width="26.5813%" height="15" fill="rgb(229,147,28)"/><text x="14.3012%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (283 samples, 5.66%)</title><rect x="34.9680%" y="725" width="5.6645%" height="15" fill="rgb(211,29,28)"/><text x="35.2180%" y="735.50">&lt;decor_..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (283 samples, 5.66%)</title><rect x="34.9680%" y="709" width="5.6645%" height="15" fill="rgb(228,72,33)"/><text x="35.2180%" y="719.50">decor_m..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (8 samples, 0.16%)</title><rect x="40.4724%" y="693" width="0.1601%" height="15" fill="rgb(205,214,31)"/><text x="40.7224%" y="703.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (7 samples, 0.14%)</title><rect x="40.4924%" y="677" width="0.1401%" height="15" fill="rgb(224,111,15)"/><text x="40.7424%" y="687.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (7 samples, 0.14%)</title><rect x="40.4924%" y="661" width="0.1401%" height="15" fill="rgb(253,21,26)"/><text x="40.7424%" y="671.50"></text></g><g><title>sk_wait_data (9 samples, 0.18%)</title><rect x="40.7726%" y="453" width="0.1801%" height="15" fill="rgb(245,139,43)"/><text x="41.0226%" y="463.50"></text></g><g><title>wait_woken (8 samples, 0.16%)</title><rect x="40.7926%" y="437" width="0.1601%" height="15" fill="rgb(252,170,7)"/><text x="41.0426%" y="447.50"></text></g><g><title>schedule_timeout (8 samples, 0.16%)</title><rect x="40.7926%" y="421" width="0.1601%" height="15" fill="rgb(231,118,14)"/><text x="41.0426%" y="431.50"></text></g><g><title>schedule (8 samples, 0.16%)</title><rect x="40.7926%" y="405" width="0.1601%" height="15" fill="rgb(238,83,0)"/><text x="41.0426%" y="415.50"></text></g><g><title>__schedule (8 samples, 0.16%)</title><rect x="40.7926%" y="389" width="0.1601%" height="15" fill="rgb(221,39,39)"/><text x="41.0426%" y="399.50"></text></g><g><title>inet_recvmsg (11 samples, 0.22%)</title><rect x="40.7526%" y="485" width="0.2202%" height="15" fill="rgb(222,119,46)"/><text x="41.0026%" y="495.50"></text></g><g><title>tcp_recvmsg (11 samples, 0.22%)</title><rect x="40.7526%" y="469" width="0.2202%" height="15" fill="rgb(222,165,49)"/><text x="41.0026%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (12 samples, 0.24%)</title><rect x="40.7526%" y="517" width="0.2402%" height="15" fill="rgb(219,113,52)"/><text x="41.0026%" y="527.50"></text></g><g><title>__sys_recvfrom (12 samples, 0.24%)</title><rect x="40.7526%" y="501" width="0.2402%" height="15" fill="rgb(214,7,15)"/><text x="41.0026%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (14 samples, 0.28%)</title><rect x="40.7326%" y="645" width="0.2802%" height="15" fill="rgb(235,32,4)"/><text x="40.9826%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (14 samples, 0.28%)</title><rect x="40.7326%" y="629" width="0.2802%" height="15" fill="rgb(238,90,54)"/><text x="40.9826%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (14 samples, 0.28%)</title><rect x="40.7326%" y="613" width="0.2802%" height="15" fill="rgb(213,208,19)"/><text x="40.9826%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (14 samples, 0.28%)</title><rect x="40.7326%" y="597" width="0.2802%" height="15" fill="rgb(233,156,4)"/><text x="40.9826%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (14 samples, 0.28%)</title><rect x="40.7326%" y="581" width="0.2802%" height="15" fill="rgb(207,194,5)"/><text x="40.9826%" y="591.50"></text></g><g><title>__libc_recv (14 samples, 0.28%)</title><rect x="40.7326%" y="565" width="0.2802%" height="15" fill="rgb(206,111,30)"/><text x="40.9826%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.26%)</title><rect x="40.7526%" y="549" width="0.2602%" height="15" fill="rgb(243,70,54)"/><text x="41.0026%" y="559.50"></text></g><g><title>do_syscall_64 (13 samples, 0.26%)</title><rect x="40.7526%" y="533" width="0.2602%" height="15" fill="rgb(242,28,8)"/><text x="41.0026%" y="543.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (17 samples, 0.34%)</title><rect x="40.7326%" y="773" width="0.3403%" height="15" fill="rgb(219,106,18)"/><text x="40.9826%" y="783.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (17 samples, 0.34%)</title><rect x="40.7326%" y="757" width="0.3403%" height="15" fill="rgb(244,222,10)"/><text x="40.9826%" y="767.50"></text></g><g><title>decor_mem::policy::generate_new_entities_from (17 samples, 0.34%)</title><rect x="40.7326%" y="741" width="0.3403%" height="15" fill="rgb(236,179,52)"/><text x="40.9826%" y="751.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (17 samples, 0.34%)</title><rect x="40.7326%" y="725" width="0.3403%" height="15" fill="rgb(213,23,39)"/><text x="40.9826%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (17 samples, 0.34%)</title><rect x="40.7326%" y="709" width="0.3403%" height="15" fill="rgb(238,48,10)"/><text x="40.9826%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (17 samples, 0.34%)</title><rect x="40.7326%" y="693" width="0.3403%" height="15" fill="rgb(251,196,23)"/><text x="40.9826%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (17 samples, 0.34%)</title><rect x="40.7326%" y="677" width="0.3403%" height="15" fill="rgb(250,152,24)"/><text x="40.9826%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.34%)</title><rect x="40.7326%" y="661" width="0.3403%" height="15" fill="rgb(209,150,17)"/><text x="40.9826%" y="671.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (5 samples, 0.10%)</title><rect x="41.1129%" y="773" width="0.1001%" height="15" fill="rgb(234,202,34)"/><text x="41.3629%" y="783.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (12 samples, 0.24%)</title><rect x="41.2330%" y="773" width="0.2402%" height="15" fill="rgb(253,148,53)"/><text x="41.4830%" y="783.50"></text></g><g><title>sk_wait_data (14 samples, 0.28%)</title><rect x="42.1737%" y="469" width="0.2802%" height="15" fill="rgb(218,129,16)"/><text x="42.4237%" y="479.50"></text></g><g><title>wait_woken (14 samples, 0.28%)</title><rect x="42.1737%" y="453" width="0.2802%" height="15" fill="rgb(216,85,19)"/><text x="42.4237%" y="463.50"></text></g><g><title>schedule_timeout (14 samples, 0.28%)</title><rect x="42.1737%" y="437" width="0.2802%" height="15" fill="rgb(235,228,7)"/><text x="42.4237%" y="447.50"></text></g><g><title>schedule (14 samples, 0.28%)</title><rect x="42.1737%" y="421" width="0.2802%" height="15" fill="rgb(245,175,0)"/><text x="42.4237%" y="431.50"></text></g><g><title>__schedule (13 samples, 0.26%)</title><rect x="42.1938%" y="405" width="0.2602%" height="15" fill="rgb(208,168,36)"/><text x="42.4438%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 0.40%)</title><rect x="42.1337%" y="533" width="0.4003%" height="15" fill="rgb(246,171,24)"/><text x="42.3837%" y="543.50"></text></g><g><title>__sys_recvfrom (20 samples, 0.40%)</title><rect x="42.1337%" y="517" width="0.4003%" height="15" fill="rgb(215,142,24)"/><text x="42.3837%" y="527.50"></text></g><g><title>inet_recvmsg (19 samples, 0.38%)</title><rect x="42.1537%" y="501" width="0.3803%" height="15" fill="rgb(250,187,7)"/><text x="42.4037%" y="511.50"></text></g><g><title>tcp_recvmsg (18 samples, 0.36%)</title><rect x="42.1737%" y="485" width="0.3603%" height="15" fill="rgb(228,66,33)"/><text x="42.4237%" y="495.50"></text></g><g><title>do_syscall_64 (21 samples, 0.42%)</title><rect x="42.1337%" y="549" width="0.4203%" height="15" fill="rgb(234,215,21)"/><text x="42.3837%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.56%)</title><rect x="42.0737%" y="661" width="0.5604%" height="15" fill="rgb(222,191,20)"/><text x="42.3237%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.56%)</title><rect x="42.0737%" y="645" width="0.5604%" height="15" fill="rgb(245,79,54)"/><text x="42.3237%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.56%)</title><rect x="42.0737%" y="629" width="0.5604%" height="15" fill="rgb(240,10,37)"/><text x="42.3237%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 0.56%)</title><rect x="42.0737%" y="613" width="0.5604%" height="15" fill="rgb(214,192,32)"/><text x="42.3237%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 0.56%)</title><rect x="42.0737%" y="597" width="0.5604%" height="15" fill="rgb(209,36,54)"/><text x="42.3237%" y="607.50"></text></g><g><title>__libc_recv (28 samples, 0.56%)</title><rect x="42.0737%" y="581" width="0.5604%" height="15" fill="rgb(220,10,11)"/><text x="42.3237%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.50%)</title><rect x="42.1337%" y="565" width="0.5004%" height="15" fill="rgb(221,106,17)"/><text x="42.3837%" y="575.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.64%)</title><rect x="42.0536%" y="677" width="0.6405%" height="15" fill="rgb(251,142,44)"/><text x="42.3036%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (35 samples, 0.70%)</title><rect x="42.0136%" y="693" width="0.7006%" height="15" fill="rgb(238,13,15)"/><text x="42.2636%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (38 samples, 0.76%)</title><rect x="41.9736%" y="709" width="0.7606%" height="15" fill="rgb(208,107,27)"/><text x="42.2236%" y="719.50"></text></g><g><title>enqueue_task (5 samples, 0.10%)</title><rect x="43.2946%" y="133" width="0.1001%" height="15" fill="rgb(205,136,37)"/><text x="43.5446%" y="143.50"></text></g><g><title>sock_def_readable (7 samples, 0.14%)</title><rect x="43.2946%" y="197" width="0.1401%" height="15" fill="rgb(250,205,27)"/><text x="43.5446%" y="207.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.14%)</title><rect x="43.2946%" y="181" width="0.1401%" height="15" fill="rgb(210,80,43)"/><text x="43.5446%" y="191.50"></text></g><g><title>__wake_up_common (7 samples, 0.14%)</title><rect x="43.2946%" y="165" width="0.1401%" height="15" fill="rgb(247,160,36)"/><text x="43.5446%" y="175.50"></text></g><g><title>try_to_wake_up (7 samples, 0.14%)</title><rect x="43.2946%" y="149" width="0.1401%" height="15" fill="rgb(234,13,49)"/><text x="43.5446%" y="159.50"></text></g><g><title>tcp_data_queue (5 samples, 0.10%)</title><rect x="43.5148%" y="197" width="0.1001%" height="15" fill="rgb(234,122,0)"/><text x="43.7648%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (27 samples, 0.54%)</title><rect x="43.0945%" y="325" width="0.5404%" height="15" fill="rgb(207,146,38)"/><text x="43.3445%" y="335.50"></text></g><g><title>ip_rcv (25 samples, 0.50%)</title><rect x="43.1345%" y="309" width="0.5004%" height="15" fill="rgb(207,177,25)"/><text x="43.3845%" y="319.50"></text></g><g><title>ip_local_deliver (24 samples, 0.48%)</title><rect x="43.1545%" y="293" width="0.4804%" height="15" fill="rgb(211,178,42)"/><text x="43.4045%" y="303.50"></text></g><g><title>ip_local_deliver_finish (24 samples, 0.48%)</title><rect x="43.1545%" y="277" width="0.4804%" height="15" fill="rgb(230,69,54)"/><text x="43.4045%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (24 samples, 0.48%)</title><rect x="43.1545%" y="261" width="0.4804%" height="15" fill="rgb(214,135,41)"/><text x="43.4045%" y="271.50"></text></g><g><title>tcp_v4_rcv (21 samples, 0.42%)</title><rect x="43.2146%" y="245" width="0.4203%" height="15" fill="rgb(237,67,25)"/><text x="43.4646%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 0.36%)</title><rect x="43.2746%" y="229" width="0.3603%" height="15" fill="rgb(222,189,50)"/><text x="43.5246%" y="239.50"></text></g><g><title>tcp_rcv_established (18 samples, 0.36%)</title><rect x="43.2746%" y="213" width="0.3603%" height="15" fill="rgb(245,148,34)"/><text x="43.5246%" y="223.50"></text></g><g><title>do_softirq (33 samples, 0.66%)</title><rect x="43.0144%" y="405" width="0.6605%" height="15" fill="rgb(222,29,6)"/><text x="43.2644%" y="415.50"></text></g><g><title>do_softirq_own_stack (32 samples, 0.64%)</title><rect x="43.0344%" y="389" width="0.6405%" height="15" fill="rgb(221,189,43)"/><text x="43.2844%" y="399.50"></text></g><g><title>__do_softirq (32 samples, 0.64%)</title><rect x="43.0344%" y="373" width="0.6405%" height="15" fill="rgb(207,36,27)"/><text x="43.2844%" y="383.50"></text></g><g><title>net_rx_action (29 samples, 0.58%)</title><rect x="43.0945%" y="357" width="0.5805%" height="15" fill="rgb(217,90,24)"/><text x="43.3445%" y="367.50"></text></g><g><title>process_backlog (29 samples, 0.58%)</title><rect x="43.0945%" y="341" width="0.5805%" height="15" fill="rgb(224,66,35)"/><text x="43.3445%" y="351.50"></text></g><g><title>__ip_queue_xmit (42 samples, 0.84%)</title><rect x="42.8543%" y="469" width="0.8407%" height="15" fill="rgb(221,13,50)"/><text x="43.1043%" y="479.50"></text></g><g><title>ip_output (41 samples, 0.82%)</title><rect x="42.8743%" y="453" width="0.8207%" height="15" fill="rgb(236,68,49)"/><text x="43.1243%" y="463.50"></text></g><g><title>ip_finish_output2 (41 samples, 0.82%)</title><rect x="42.8743%" y="437" width="0.8207%" height="15" fill="rgb(229,146,28)"/><text x="43.1243%" y="447.50"></text></g><g><title>__local_bh_enable_ip (34 samples, 0.68%)</title><rect x="43.0144%" y="421" width="0.6805%" height="15" fill="rgb(225,31,38)"/><text x="43.2644%" y="431.50"></text></g><g><title>__tcp_transmit_skb (43 samples, 0.86%)</title><rect x="42.8543%" y="485" width="0.8607%" height="15" fill="rgb(250,208,3)"/><text x="43.1043%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (46 samples, 0.92%)</title><rect x="42.8143%" y="517" width="0.9207%" height="15" fill="rgb(246,54,23)"/><text x="43.0643%" y="527.50"></text></g><g><title>tcp_write_xmit (45 samples, 0.90%)</title><rect x="42.8343%" y="501" width="0.9007%" height="15" fill="rgb(243,76,11)"/><text x="43.0843%" y="511.50"></text></g><g><title>sock_sendmsg (52 samples, 1.04%)</title><rect x="42.7742%" y="565" width="1.0408%" height="15" fill="rgb(245,21,50)"/><text x="43.0242%" y="575.50"></text></g><g><title>tcp_sendmsg (52 samples, 1.04%)</title><rect x="42.7742%" y="549" width="1.0408%" height="15" fill="rgb(228,9,43)"/><text x="43.0242%" y="559.50"></text></g><g><title>tcp_sendmsg_locked (52 samples, 1.04%)</title><rect x="42.7742%" y="533" width="1.0408%" height="15" fill="rgb(208,100,47)"/><text x="43.0242%" y="543.50"></text></g><g><title>__x64_sys_sendto (54 samples, 1.08%)</title><rect x="42.7742%" y="597" width="1.0809%" height="15" fill="rgb(232,26,8)"/><text x="43.0242%" y="607.50"></text></g><g><title>__sys_sendto (54 samples, 1.08%)</title><rect x="42.7742%" y="581" width="1.0809%" height="15" fill="rgb(216,166,38)"/><text x="43.0242%" y="591.50"></text></g><g><title>do_syscall_64 (55 samples, 1.10%)</title><rect x="42.7742%" y="613" width="1.1009%" height="15" fill="rgb(251,202,51)"/><text x="43.0242%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (96 samples, 1.92%)</title><rect x="41.9736%" y="757" width="1.9215%" height="15" fill="rgb(254,216,34)"/><text x="42.2236%" y="767.50">l..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (96 samples, 1.92%)</title><rect x="41.9736%" y="741" width="1.9215%" height="15" fill="rgb(251,32,27)"/><text x="42.2236%" y="751.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (96 samples, 1.92%)</title><rect x="41.9736%" y="725" width="1.9215%" height="15" fill="rgb(208,127,28)"/><text x="42.2236%" y="735.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (58 samples, 1.16%)</title><rect x="42.7342%" y="709" width="1.1609%" height="15" fill="rgb(224,137,22)"/><text x="42.9842%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (57 samples, 1.14%)</title><rect x="42.7542%" y="693" width="1.1409%" height="15" fill="rgb(254,70,32)"/><text x="43.0042%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (57 samples, 1.14%)</title><rect x="42.7542%" y="677" width="1.1409%" height="15" fill="rgb(229,75,37)"/><text x="43.0042%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (57 samples, 1.14%)</title><rect x="42.7542%" y="661" width="1.1409%" height="15" fill="rgb(252,64,23)"/><text x="43.0042%" y="671.50"></text></g><g><title>__libc_send (57 samples, 1.14%)</title><rect x="42.7542%" y="645" width="1.1409%" height="15" fill="rgb(232,162,48)"/><text x="43.0042%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (57 samples, 1.14%)</title><rect x="42.7542%" y="629" width="1.1409%" height="15" fill="rgb(246,160,12)"/><text x="43.0042%" y="639.50"></text></g><g><title>sk_wait_data (12 samples, 0.24%)</title><rect x="43.9952%" y="469" width="0.2402%" height="15" fill="rgb(247,166,0)"/><text x="44.2452%" y="479.50"></text></g><g><title>wait_woken (11 samples, 0.22%)</title><rect x="44.0152%" y="453" width="0.2202%" height="15" fill="rgb(249,219,21)"/><text x="44.2652%" y="463.50"></text></g><g><title>schedule_timeout (11 samples, 0.22%)</title><rect x="44.0152%" y="437" width="0.2202%" height="15" fill="rgb(205,209,3)"/><text x="44.2652%" y="447.50"></text></g><g><title>schedule (11 samples, 0.22%)</title><rect x="44.0152%" y="421" width="0.2202%" height="15" fill="rgb(243,44,1)"/><text x="44.2652%" y="431.50"></text></g><g><title>__schedule (11 samples, 0.22%)</title><rect x="44.0152%" y="405" width="0.2202%" height="15" fill="rgb(206,159,16)"/><text x="44.2652%" y="415.50"></text></g><g><title>inet_recvmsg (19 samples, 0.38%)</title><rect x="43.9552%" y="501" width="0.3803%" height="15" fill="rgb(244,77,30)"/><text x="44.2052%" y="511.50"></text></g><g><title>tcp_recvmsg (19 samples, 0.38%)</title><rect x="43.9552%" y="485" width="0.3803%" height="15" fill="rgb(218,69,12)"/><text x="44.2052%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.10%)</title><rect x="44.2354%" y="469" width="0.1001%" height="15" fill="rgb(212,87,7)"/><text x="44.4854%" y="479.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.10%)</title><rect x="44.2354%" y="453" width="0.1001%" height="15" fill="rgb(245,114,25)"/><text x="44.4854%" y="463.50"></text></g><g><title>do_syscall_64 (22 samples, 0.44%)</title><rect x="43.9552%" y="549" width="0.4404%" height="15" fill="rgb(210,61,42)"/><text x="44.2052%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (22 samples, 0.44%)</title><rect x="43.9552%" y="533" width="0.4404%" height="15" fill="rgb(211,52,33)"/><text x="44.2052%" y="543.50"></text></g><g><title>__sys_recvfrom (22 samples, 0.44%)</title><rect x="43.9552%" y="517" width="0.4404%" height="15" fill="rgb(234,58,33)"/><text x="44.2052%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.50%)</title><rect x="43.9552%" y="565" width="0.5004%" height="15" fill="rgb(220,115,36)"/><text x="44.2052%" y="575.50"></text></g><g><title>__libc_recv (27 samples, 0.54%)</title><rect x="43.9552%" y="581" width="0.5404%" height="15" fill="rgb(243,153,54)"/><text x="44.2052%" y="591.50"></text></g><g><title>mysql::conn::Conn::read_packet (29 samples, 0.58%)</title><rect x="43.9351%" y="693" width="0.5805%" height="15" fill="rgb(251,47,18)"/><text x="44.1851%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.58%)</title><rect x="43.9351%" y="677" width="0.5805%" height="15" fill="rgb(242,102,42)"/><text x="44.1851%" y="687.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.56%)</title><rect x="43.9552%" y="661" width="0.5604%" height="15" fill="rgb(234,31,38)"/><text x="44.2052%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.56%)</title><rect x="43.9552%" y="645" width="0.5604%" height="15" fill="rgb(221,117,51)"/><text x="44.2052%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.56%)</title><rect x="43.9552%" y="629" width="0.5604%" height="15" fill="rgb(212,20,18)"/><text x="44.2052%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 0.56%)</title><rect x="43.9552%" y="613" width="0.5604%" height="15" fill="rgb(245,133,36)"/><text x="44.2052%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 0.56%)</title><rect x="43.9552%" y="597" width="0.5604%" height="15" fill="rgb(212,6,19)"/><text x="44.2052%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (32 samples, 0.64%)</title><rect x="43.9151%" y="709" width="0.6405%" height="15" fill="rgb(218,1,36)"/><text x="44.1651%" y="719.50"></text></g><g><title>sock_def_readable (6 samples, 0.12%)</title><rect x="44.8759%" y="197" width="0.1201%" height="15" fill="rgb(246,84,54)"/><text x="45.1259%" y="207.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.12%)</title><rect x="44.8759%" y="181" width="0.1201%" height="15" fill="rgb(242,110,6)"/><text x="45.1259%" y="191.50"></text></g><g><title>__wake_up_common (6 samples, 0.12%)</title><rect x="44.8759%" y="165" width="0.1201%" height="15" fill="rgb(214,47,5)"/><text x="45.1259%" y="175.50"></text></g><g><title>try_to_wake_up (6 samples, 0.12%)</title><rect x="44.8759%" y="149" width="0.1201%" height="15" fill="rgb(218,159,25)"/><text x="45.1259%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 0.30%)</title><rect x="44.7758%" y="325" width="0.3002%" height="15" fill="rgb(215,211,28)"/><text x="45.0258%" y="335.50"></text></g><g><title>ip_rcv (15 samples, 0.30%)</title><rect x="44.7758%" y="309" width="0.3002%" height="15" fill="rgb(238,59,32)"/><text x="45.0258%" y="319.50"></text></g><g><title>ip_local_deliver (15 samples, 0.30%)</title><rect x="44.7758%" y="293" width="0.3002%" height="15" fill="rgb(226,82,3)"/><text x="45.0258%" y="303.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 0.30%)</title><rect x="44.7758%" y="277" width="0.3002%" height="15" fill="rgb(240,164,32)"/><text x="45.0258%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (15 samples, 0.30%)</title><rect x="44.7758%" y="261" width="0.3002%" height="15" fill="rgb(232,46,7)"/><text x="45.0258%" y="271.50"></text></g><g><title>tcp_v4_rcv (15 samples, 0.30%)</title><rect x="44.7758%" y="245" width="0.3002%" height="15" fill="rgb(229,129,53)"/><text x="45.0258%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.22%)</title><rect x="44.8559%" y="229" width="0.2202%" height="15" fill="rgb(234,188,29)"/><text x="45.1059%" y="239.50"></text></g><g><title>tcp_rcv_established (10 samples, 0.20%)</title><rect x="44.8759%" y="213" width="0.2002%" height="15" fill="rgb(246,141,4)"/><text x="45.1259%" y="223.50"></text></g><g><title>__ip_queue_xmit (22 samples, 0.44%)</title><rect x="44.6557%" y="469" width="0.4404%" height="15" fill="rgb(229,23,39)"/><text x="44.9057%" y="479.50"></text></g><g><title>ip_output (22 samples, 0.44%)</title><rect x="44.6557%" y="453" width="0.4404%" height="15" fill="rgb(206,12,3)"/><text x="44.9057%" y="463.50"></text></g><g><title>ip_finish_output2 (21 samples, 0.42%)</title><rect x="44.6757%" y="437" width="0.4203%" height="15" fill="rgb(252,226,20)"/><text x="44.9257%" y="447.50"></text></g><g><title>__local_bh_enable_ip (19 samples, 0.38%)</title><rect x="44.7158%" y="421" width="0.3803%" height="15" fill="rgb(216,123,35)"/><text x="44.9658%" y="431.50"></text></g><g><title>do_softirq (19 samples, 0.38%)</title><rect x="44.7158%" y="405" width="0.3803%" height="15" fill="rgb(212,68,40)"/><text x="44.9658%" y="415.50"></text></g><g><title>do_softirq_own_stack (18 samples, 0.36%)</title><rect x="44.7358%" y="389" width="0.3603%" height="15" fill="rgb(254,125,32)"/><text x="44.9858%" y="399.50"></text></g><g><title>__do_softirq (18 samples, 0.36%)</title><rect x="44.7358%" y="373" width="0.3603%" height="15" fill="rgb(253,97,22)"/><text x="44.9858%" y="383.50"></text></g><g><title>net_rx_action (17 samples, 0.34%)</title><rect x="44.7558%" y="357" width="0.3403%" height="15" fill="rgb(241,101,14)"/><text x="45.0058%" y="367.50"></text></g><g><title>process_backlog (16 samples, 0.32%)</title><rect x="44.7758%" y="341" width="0.3203%" height="15" fill="rgb(238,103,29)"/><text x="45.0258%" y="351.50"></text></g><g><title>__tcp_transmit_skb (25 samples, 0.50%)</title><rect x="44.6357%" y="485" width="0.5004%" height="15" fill="rgb(233,195,47)"/><text x="44.8857%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (29 samples, 0.58%)</title><rect x="44.6357%" y="517" width="0.5805%" height="15" fill="rgb(246,218,30)"/><text x="44.8857%" y="527.50"></text></g><g><title>tcp_write_xmit (29 samples, 0.58%)</title><rect x="44.6357%" y="501" width="0.5805%" height="15" fill="rgb(219,145,47)"/><text x="44.8857%" y="511.50"></text></g><g><title>__x64_sys_sendto (35 samples, 0.70%)</title><rect x="44.5957%" y="597" width="0.7006%" height="15" fill="rgb(243,12,26)"/><text x="44.8457%" y="607.50"></text></g><g><title>__sys_sendto (35 samples, 0.70%)</title><rect x="44.5957%" y="581" width="0.7006%" height="15" fill="rgb(214,87,16)"/><text x="44.8457%" y="591.50"></text></g><g><title>sock_sendmsg (35 samples, 0.70%)</title><rect x="44.5957%" y="565" width="0.7006%" height="15" fill="rgb(208,99,42)"/><text x="44.8457%" y="575.50"></text></g><g><title>tcp_sendmsg (35 samples, 0.70%)</title><rect x="44.5957%" y="549" width="0.7006%" height="15" fill="rgb(253,99,2)"/><text x="44.8457%" y="559.50"></text></g><g><title>tcp_sendmsg_locked (35 samples, 0.70%)</title><rect x="44.5957%" y="533" width="0.7006%" height="15" fill="rgb(220,168,23)"/><text x="44.8457%" y="543.50"></text></g><g><title>do_syscall_64 (38 samples, 0.76%)</title><rect x="44.5957%" y="613" width="0.7606%" height="15" fill="rgb(242,38,24)"/><text x="44.8457%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (40 samples, 0.80%)</title><rect x="44.5757%" y="629" width="0.8006%" height="15" fill="rgb(225,182,9)"/><text x="44.8257%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (76 samples, 1.52%)</title><rect x="43.8951%" y="741" width="1.5212%" height="15" fill="rgb(243,178,37)"/><text x="44.1451%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (76 samples, 1.52%)</title><rect x="43.8951%" y="725" width="1.5212%" height="15" fill="rgb(232,139,19)"/><text x="44.1451%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (43 samples, 0.86%)</title><rect x="44.5556%" y="709" width="0.8607%" height="15" fill="rgb(225,201,24)"/><text x="44.8056%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (42 samples, 0.84%)</title><rect x="44.5757%" y="693" width="0.8407%" height="15" fill="rgb(221,47,46)"/><text x="44.8257%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (42 samples, 0.84%)</title><rect x="44.5757%" y="677" width="0.8407%" height="15" fill="rgb(249,23,13)"/><text x="44.8257%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (42 samples, 0.84%)</title><rect x="44.5757%" y="661" width="0.8407%" height="15" fill="rgb(219,9,5)"/><text x="44.8257%" y="671.50"></text></g><g><title>__libc_send (42 samples, 0.84%)</title><rect x="44.5757%" y="645" width="0.8407%" height="15" fill="rgb(254,171,16)"/><text x="44.8257%" y="655.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.14%)</title><rect x="45.5164%" y="677" width="0.1401%" height="15" fill="rgb(230,171,20)"/><text x="45.7664%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (7 samples, 0.14%)</title><rect x="45.5164%" y="661" width="0.1401%" height="15" fill="rgb(210,71,41)"/><text x="45.7664%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.10%)</title><rect x="45.5564%" y="645" width="0.1001%" height="15" fill="rgb(206,173,20)"/><text x="45.8064%" y="655.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.10%)</title><rect x="45.5564%" y="629" width="0.1001%" height="15" fill="rgb(233,88,34)"/><text x="45.8064%" y="639.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14 samples, 0.28%)</title><rect x="45.4363%" y="693" width="0.2802%" height="15" fill="rgb(223,209,46)"/><text x="45.6863%" y="703.50"></text></g><g><title>lobsters_microbenchmarks::main (191 samples, 3.82%)</title><rect x="41.9335%" y="773" width="3.8231%" height="15" fill="rgb(250,43,18)"/><text x="42.1835%" y="783.50">lobs..</text></g><g><title>lobsters_microbenchmarks::queriers::user::unsubscribe_user (93 samples, 1.86%)</title><rect x="43.8951%" y="757" width="1.8615%" height="15" fill="rgb(208,13,10)"/><text x="44.1451%" y="767.50">l..</text></g><g><title>serde_json::de::from_str (16 samples, 0.32%)</title><rect x="45.4363%" y="741" width="0.3203%" height="15" fill="rgb(212,200,36)"/><text x="45.6863%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (16 samples, 0.32%)</title><rect x="45.4363%" y="725" width="0.3203%" height="15" fill="rgb(225,90,30)"/><text x="45.6863%" y="735.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (16 samples, 0.32%)</title><rect x="45.4363%" y="709" width="0.3203%" height="15" fill="rgb(236,182,39)"/><text x="45.6863%" y="719.50"></text></g><g><title>ip_local_deliver (8 samples, 0.16%)</title><rect x="46.0568%" y="261" width="0.1601%" height="15" fill="rgb(212,144,35)"/><text x="46.3068%" y="271.50"></text></g><g><title>ip_local_deliver_finish (8 samples, 0.16%)</title><rect x="46.0568%" y="245" width="0.1601%" height="15" fill="rgb(228,63,44)"/><text x="46.3068%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (8 samples, 0.16%)</title><rect x="46.0568%" y="229" width="0.1601%" height="15" fill="rgb(228,109,6)"/><text x="46.3068%" y="239.50"></text></g><g><title>tcp_v4_rcv (8 samples, 0.16%)</title><rect x="46.0568%" y="213" width="0.1601%" height="15" fill="rgb(238,117,24)"/><text x="46.3068%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.16%)</title><rect x="46.0568%" y="197" width="0.1601%" height="15" fill="rgb(242,26,26)"/><text x="46.3068%" y="207.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.16%)</title><rect x="46.0568%" y="181" width="0.1601%" height="15" fill="rgb(221,92,48)"/><text x="46.3068%" y="191.50"></text></g><g><title>ip_finish_output2 (11 samples, 0.22%)</title><rect x="46.0168%" y="405" width="0.2202%" height="15" fill="rgb(209,209,32)"/><text x="46.2668%" y="415.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.18%)</title><rect x="46.0568%" y="389" width="0.1801%" height="15" fill="rgb(221,70,22)"/><text x="46.3068%" y="399.50"></text></g><g><title>do_softirq (9 samples, 0.18%)</title><rect x="46.0568%" y="373" width="0.1801%" height="15" fill="rgb(248,145,5)"/><text x="46.3068%" y="383.50"></text></g><g><title>do_softirq_own_stack (9 samples, 0.18%)</title><rect x="46.0568%" y="357" width="0.1801%" height="15" fill="rgb(226,116,26)"/><text x="46.3068%" y="367.50"></text></g><g><title>__do_softirq (9 samples, 0.18%)</title><rect x="46.0568%" y="341" width="0.1801%" height="15" fill="rgb(244,5,17)"/><text x="46.3068%" y="351.50"></text></g><g><title>net_rx_action (9 samples, 0.18%)</title><rect x="46.0568%" y="325" width="0.1801%" height="15" fill="rgb(252,159,33)"/><text x="46.3068%" y="335.50"></text></g><g><title>process_backlog (9 samples, 0.18%)</title><rect x="46.0568%" y="309" width="0.1801%" height="15" fill="rgb(206,71,0)"/><text x="46.3068%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (9 samples, 0.18%)</title><rect x="46.0568%" y="293" width="0.1801%" height="15" fill="rgb(233,118,54)"/><text x="46.3068%" y="303.50"></text></g><g><title>ip_rcv (9 samples, 0.18%)</title><rect x="46.0568%" y="277" width="0.1801%" height="15" fill="rgb(234,83,48)"/><text x="46.3068%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (17 samples, 0.34%)</title><rect x="45.9167%" y="485" width="0.3403%" height="15" fill="rgb(228,3,54)"/><text x="46.1667%" y="495.50"></text></g><g><title>tcp_write_xmit (17 samples, 0.34%)</title><rect x="45.9167%" y="469" width="0.3403%" height="15" fill="rgb(226,155,13)"/><text x="46.1667%" y="479.50"></text></g><g><title>__tcp_transmit_skb (16 samples, 0.32%)</title><rect x="45.9367%" y="453" width="0.3203%" height="15" fill="rgb(241,28,37)"/><text x="46.1867%" y="463.50"></text></g><g><title>__ip_queue_xmit (16 samples, 0.32%)</title><rect x="45.9367%" y="437" width="0.3203%" height="15" fill="rgb(233,93,10)"/><text x="46.1867%" y="447.50"></text></g><g><title>ip_output (13 samples, 0.26%)</title><rect x="45.9968%" y="421" width="0.2602%" height="15" fill="rgb(225,113,19)"/><text x="46.2468%" y="431.50"></text></g><g><title>__x64_sys_sendto (21 samples, 0.42%)</title><rect x="45.8967%" y="565" width="0.4203%" height="15" fill="rgb(241,2,18)"/><text x="46.1467%" y="575.50"></text></g><g><title>__sys_sendto (21 samples, 0.42%)</title><rect x="45.8967%" y="549" width="0.4203%" height="15" fill="rgb(228,207,21)"/><text x="46.1467%" y="559.50"></text></g><g><title>sock_sendmsg (20 samples, 0.40%)</title><rect x="45.9167%" y="533" width="0.4003%" height="15" fill="rgb(213,211,35)"/><text x="46.1667%" y="543.50"></text></g><g><title>tcp_sendmsg (20 samples, 0.40%)</title><rect x="45.9167%" y="517" width="0.4003%" height="15" fill="rgb(209,83,10)"/><text x="46.1667%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (20 samples, 0.40%)</title><rect x="45.9167%" y="501" width="0.4003%" height="15" fill="rgb(209,164,1)"/><text x="46.1667%" y="511.50"></text></g><g><title>do_syscall_64 (22 samples, 0.44%)</title><rect x="45.8967%" y="581" width="0.4404%" height="15" fill="rgb(213,184,43)"/><text x="46.1467%" y="591.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (27 samples, 0.54%)</title><rect x="45.8167%" y="709" width="0.5404%" height="15" fill="rgb(231,61,34)"/><text x="46.0667%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (24 samples, 0.48%)</title><rect x="45.8767%" y="693" width="0.4804%" height="15" fill="rgb(235,75,3)"/><text x="46.1267%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (23 samples, 0.46%)</title><rect x="45.8967%" y="677" width="0.4604%" height="15" fill="rgb(220,106,47)"/><text x="46.1467%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (23 samples, 0.46%)</title><rect x="45.8967%" y="661" width="0.4604%" height="15" fill="rgb(210,196,33)"/><text x="46.1467%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (23 samples, 0.46%)</title><rect x="45.8967%" y="645" width="0.4604%" height="15" fill="rgb(229,154,42)"/><text x="46.1467%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (23 samples, 0.46%)</title><rect x="45.8967%" y="629" width="0.4604%" height="15" fill="rgb(228,114,26)"/><text x="46.1467%" y="639.50"></text></g><g><title>__libc_send (23 samples, 0.46%)</title><rect x="45.8967%" y="613" width="0.4604%" height="15" fill="rgb(208,144,1)"/><text x="46.1467%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 0.46%)</title><rect x="45.8967%" y="597" width="0.4604%" height="15" fill="rgb(239,112,37)"/><text x="46.1467%" y="607.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (7 samples, 0.14%)</title><rect x="46.3571%" y="709" width="0.1401%" height="15" fill="rgb(210,96,50)"/><text x="46.6071%" y="719.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (6 samples, 0.12%)</title><rect x="46.3771%" y="693" width="0.1201%" height="15" fill="rgb(222,178,2)"/><text x="46.6271%" y="703.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (6 samples, 0.12%)</title><rect x="46.3771%" y="677" width="0.1201%" height="15" fill="rgb(226,74,18)"/><text x="46.6271%" y="687.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.10%)</title><rect x="46.5973%" y="581" width="0.1001%" height="15" fill="rgb(225,67,54)"/><text x="46.8473%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (5 samples, 0.10%)</title><rect x="46.5973%" y="565" width="0.1001%" height="15" fill="rgb(251,92,32)"/><text x="46.8473%" y="575.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.10%)</title><rect x="46.5973%" y="549" width="0.1001%" height="15" fill="rgb(228,149,22)"/><text x="46.8473%" y="559.50"></text></g><g><title>page_fault (7 samples, 0.14%)</title><rect x="46.5773%" y="645" width="0.1401%" height="15" fill="rgb(243,54,13)"/><text x="46.8273%" y="655.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.14%)</title><rect x="46.5773%" y="629" width="0.1401%" height="15" fill="rgb(243,180,28)"/><text x="46.8273%" y="639.50"></text></g><g><title>handle_mm_fault (7 samples, 0.14%)</title><rect x="46.5773%" y="613" width="0.1401%" height="15" fill="rgb(208,167,24)"/><text x="46.8273%" y="623.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.14%)</title><rect x="46.5773%" y="597" width="0.1401%" height="15" fill="rgb(245,73,45)"/><text x="46.8273%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.18%)</title><rect x="46.5572%" y="677" width="0.1801%" height="15" fill="rgb(237,203,48)"/><text x="46.8072%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (8 samples, 0.16%)</title><rect x="46.5773%" y="661" width="0.1601%" height="15" fill="rgb(211,197,16)"/><text x="46.8273%" y="671.50"></text></g><g><title>__x64_sys_mprotect (5 samples, 0.10%)</title><rect x="46.7774%" y="565" width="0.1001%" height="15" fill="rgb(243,99,51)"/><text x="47.0274%" y="575.50"></text></g><g><title>do_mprotect_pkey (5 samples, 0.10%)</title><rect x="46.7774%" y="549" width="0.1001%" height="15" fill="rgb(215,123,29)"/><text x="47.0274%" y="559.50"></text></g><g><title>do_syscall_64 (6 samples, 0.12%)</title><rect x="46.7774%" y="581" width="0.1201%" height="15" fill="rgb(239,186,37)"/><text x="47.0274%" y="591.50"></text></g><g><title>__GI___mprotect (7 samples, 0.14%)</title><rect x="46.7774%" y="613" width="0.1401%" height="15" fill="rgb(252,136,39)"/><text x="47.0274%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.14%)</title><rect x="46.7774%" y="597" width="0.1401%" height="15" fill="rgb(223,213,32)"/><text x="47.0274%" y="607.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (62 samples, 1.24%)</title><rect x="45.7566%" y="773" width="1.2410%" height="15" fill="rgb(233,115,5)"/><text x="46.0066%" y="783.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (59 samples, 1.18%)</title><rect x="45.8167%" y="757" width="1.1809%" height="15" fill="rgb(207,226,44)"/><text x="46.0667%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (59 samples, 1.18%)</title><rect x="45.8167%" y="741" width="1.1809%" height="15" fill="rgb(208,126,0)"/><text x="46.0667%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (59 samples, 1.18%)</title><rect x="45.8167%" y="725" width="1.1809%" height="15" fill="rgb(244,66,21)"/><text x="46.0667%" y="735.50"></text></g><g><title>decor_mem::views::Views::insert (25 samples, 0.50%)</title><rect x="46.4972%" y="709" width="0.5004%" height="15" fill="rgb(222,97,12)"/><text x="46.7472%" y="719.50"></text></g><g><title>decor_mem::views::View::insert_into_index (25 samples, 0.50%)</title><rect x="46.4972%" y="693" width="0.5004%" height="15" fill="rgb(219,213,19)"/><text x="46.7472%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (13 samples, 0.26%)</title><rect x="46.7374%" y="677" width="0.2602%" height="15" fill="rgb(252,169,30)"/><text x="46.9874%" y="687.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.26%)</title><rect x="46.7374%" y="661" width="0.2602%" height="15" fill="rgb(206,32,51)"/><text x="46.9874%" y="671.50"></text></g><g><title>_int_malloc (13 samples, 0.26%)</title><rect x="46.7374%" y="645" width="0.2602%" height="15" fill="rgb(250,172,42)"/><text x="46.9874%" y="655.50"></text></g><g><title>sysmalloc (12 samples, 0.24%)</title><rect x="46.7574%" y="629" width="0.2402%" height="15" fill="rgb(209,34,43)"/><text x="47.0074%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.14%)</title><rect x="47.0977%" y="693" width="0.1401%" height="15" fill="rgb(223,11,35)"/><text x="47.3477%" y="703.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.14%)</title><rect x="47.0977%" y="677" width="0.1401%" height="15" fill="rgb(251,219,26)"/><text x="47.3477%" y="687.50"></text></g><g><title>_int_realloc (7 samples, 0.14%)</title><rect x="47.0977%" y="661" width="0.1401%" height="15" fill="rgb(231,119,3)"/><text x="47.3477%" y="671.50"></text></g><g><title>_int_malloc (7 samples, 0.14%)</title><rect x="47.0977%" y="645" width="0.1401%" height="15" fill="rgb(216,97,11)"/><text x="47.3477%" y="655.50"></text></g><g><title>sysmalloc (6 samples, 0.12%)</title><rect x="47.1177%" y="629" width="0.1201%" height="15" fill="rgb(223,59,9)"/><text x="47.3677%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (15 samples, 0.30%)</title><rect x="47.4179%" y="677" width="0.3002%" height="15" fill="rgb(233,93,31)"/><text x="47.6679%" y="687.50"></text></g><g><title>decor_mem::views::Views::insert (20 samples, 0.40%)</title><rect x="47.3379%" y="693" width="0.4003%" height="15" fill="rgb(239,81,33)"/><text x="47.5879%" y="703.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (35 samples, 0.70%)</title><rect x="47.0576%" y="725" width="0.7006%" height="15" fill="rgb(213,120,34)"/><text x="47.3076%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (35 samples, 0.70%)</title><rect x="47.0576%" y="709" width="0.7006%" height="15" fill="rgb(243,49,53)"/><text x="47.3076%" y="719.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (40 samples, 0.80%)</title><rect x="47.0576%" y="741" width="0.8006%" height="15" fill="rgb(247,216,33)"/><text x="47.3076%" y="751.50"></text></g><g><title>sk_wait_data (13 samples, 0.26%)</title><rect x="47.9784%" y="421" width="0.2602%" height="15" fill="rgb(226,26,14)"/><text x="48.2284%" y="431.50"></text></g><g><title>wait_woken (13 samples, 0.26%)</title><rect x="47.9784%" y="405" width="0.2602%" height="15" fill="rgb(215,49,53)"/><text x="48.2284%" y="415.50"></text></g><g><title>schedule_timeout (12 samples, 0.24%)</title><rect x="47.9984%" y="389" width="0.2402%" height="15" fill="rgb(245,162,40)"/><text x="48.2484%" y="399.50"></text></g><g><title>schedule (12 samples, 0.24%)</title><rect x="47.9984%" y="373" width="0.2402%" height="15" fill="rgb(229,68,17)"/><text x="48.2484%" y="383.50"></text></g><g><title>__schedule (12 samples, 0.24%)</title><rect x="47.9984%" y="357" width="0.2402%" height="15" fill="rgb(213,182,10)"/><text x="48.2484%" y="367.50"></text></g><g><title>do_syscall_64 (21 samples, 0.42%)</title><rect x="47.8583%" y="501" width="0.4203%" height="15" fill="rgb(245,125,30)"/><text x="48.1083%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (21 samples, 0.42%)</title><rect x="47.8583%" y="485" width="0.4203%" height="15" fill="rgb(232,202,2)"/><text x="48.1083%" y="495.50"></text></g><g><title>__sys_recvfrom (21 samples, 0.42%)</title><rect x="47.8583%" y="469" width="0.4203%" height="15" fill="rgb(237,140,51)"/><text x="48.1083%" y="479.50"></text></g><g><title>inet_recvmsg (21 samples, 0.42%)</title><rect x="47.8583%" y="453" width="0.4203%" height="15" fill="rgb(236,157,25)"/><text x="48.1083%" y="463.50"></text></g><g><title>tcp_recvmsg (21 samples, 0.42%)</title><rect x="47.8583%" y="437" width="0.4203%" height="15" fill="rgb(219,209,0)"/><text x="48.1083%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 0.46%)</title><rect x="47.8583%" y="517" width="0.4604%" height="15" fill="rgb(240,116,54)"/><text x="48.1083%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 0.50%)</title><rect x="47.8583%" y="613" width="0.5004%" height="15" fill="rgb(216,10,36)"/><text x="48.1083%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 0.50%)</title><rect x="47.8583%" y="597" width="0.5004%" height="15" fill="rgb(222,72,44)"/><text x="48.1083%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 0.50%)</title><rect x="47.8583%" y="581" width="0.5004%" height="15" fill="rgb(232,159,9)"/><text x="48.1083%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 0.50%)</title><rect x="47.8583%" y="565" width="0.5004%" height="15" fill="rgb(210,39,32)"/><text x="48.1083%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 0.50%)</title><rect x="47.8583%" y="549" width="0.5004%" height="15" fill="rgb(216,194,45)"/><text x="48.1083%" y="559.50"></text></g><g><title>__libc_recv (25 samples, 0.50%)</title><rect x="47.8583%" y="533" width="0.5004%" height="15" fill="rgb(218,18,35)"/><text x="48.1083%" y="543.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (27 samples, 0.54%)</title><rect x="47.8583%" y="709" width="0.5404%" height="15" fill="rgb(207,83,51)"/><text x="48.1083%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (27 samples, 0.54%)</title><rect x="47.8583%" y="693" width="0.5404%" height="15" fill="rgb(225,63,43)"/><text x="48.1083%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (27 samples, 0.54%)</title><rect x="47.8583%" y="677" width="0.5404%" height="15" fill="rgb(207,57,36)"/><text x="48.1083%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (27 samples, 0.54%)</title><rect x="47.8583%" y="661" width="0.5404%" height="15" fill="rgb(216,99,33)"/><text x="48.1083%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (27 samples, 0.54%)</title><rect x="47.8583%" y="645" width="0.5404%" height="15" fill="rgb(225,42,16)"/><text x="48.1083%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.54%)</title><rect x="47.8583%" y="629" width="0.5404%" height="15" fill="rgb(220,201,45)"/><text x="48.1083%" y="639.50"></text></g><g><title>__schedule (13 samples, 0.26%)</title><rect x="48.6990%" y="357" width="0.2602%" height="15" fill="rgb(225,33,4)"/><text x="48.9490%" y="367.50"></text></g><g><title>sk_wait_data (17 samples, 0.34%)</title><rect x="48.6389%" y="421" width="0.3403%" height="15" fill="rgb(224,33,50)"/><text x="48.8889%" y="431.50"></text></g><g><title>wait_woken (15 samples, 0.30%)</title><rect x="48.6789%" y="405" width="0.3002%" height="15" fill="rgb(246,198,51)"/><text x="48.9289%" y="415.50"></text></g><g><title>schedule_timeout (15 samples, 0.30%)</title><rect x="48.6789%" y="389" width="0.3002%" height="15" fill="rgb(205,22,4)"/><text x="48.9289%" y="399.50"></text></g><g><title>schedule (15 samples, 0.30%)</title><rect x="48.6789%" y="373" width="0.3002%" height="15" fill="rgb(206,3,8)"/><text x="48.9289%" y="383.50"></text></g><g><title>do_syscall_64 (27 samples, 0.54%)</title><rect x="48.4988%" y="501" width="0.5404%" height="15" fill="rgb(251,23,15)"/><text x="48.7488%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (27 samples, 0.54%)</title><rect x="48.4988%" y="485" width="0.5404%" height="15" fill="rgb(252,88,28)"/><text x="48.7488%" y="495.50"></text></g><g><title>__sys_recvfrom (27 samples, 0.54%)</title><rect x="48.4988%" y="469" width="0.5404%" height="15" fill="rgb(212,127,14)"/><text x="48.7488%" y="479.50"></text></g><g><title>inet_recvmsg (26 samples, 0.52%)</title><rect x="48.5188%" y="453" width="0.5204%" height="15" fill="rgb(247,145,37)"/><text x="48.7688%" y="463.50"></text></g><g><title>tcp_recvmsg (25 samples, 0.50%)</title><rect x="48.5388%" y="437" width="0.5004%" height="15" fill="rgb(209,117,53)"/><text x="48.7888%" y="447.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 0.56%)</title><rect x="48.4988%" y="613" width="0.5604%" height="15" fill="rgb(212,90,42)"/><text x="48.7488%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.56%)</title><rect x="48.4988%" y="597" width="0.5604%" height="15" fill="rgb(218,164,37)"/><text x="48.7488%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.56%)</title><rect x="48.4988%" y="581" width="0.5604%" height="15" fill="rgb(246,65,34)"/><text x="48.7488%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 0.56%)</title><rect x="48.4988%" y="565" width="0.5604%" height="15" fill="rgb(231,100,33)"/><text x="48.7488%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 0.56%)</title><rect x="48.4988%" y="549" width="0.5604%" height="15" fill="rgb(228,126,14)"/><text x="48.7488%" y="559.50"></text></g><g><title>__libc_recv (28 samples, 0.56%)</title><rect x="48.4988%" y="533" width="0.5604%" height="15" fill="rgb(215,173,21)"/><text x="48.7488%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 0.56%)</title><rect x="48.4988%" y="517" width="0.5604%" height="15" fill="rgb(210,6,40)"/><text x="48.7488%" y="527.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.60%)</title><rect x="48.4988%" y="629" width="0.6005%" height="15" fill="rgb(212,48,18)"/><text x="48.7488%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 0.62%)</title><rect x="48.4988%" y="645" width="0.6205%" height="15" fill="rgb(230,214,11)"/><text x="48.7488%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (34 samples, 0.68%)</title><rect x="48.4788%" y="661" width="0.6805%" height="15" fill="rgb(254,105,39)"/><text x="48.7288%" y="671.50"></text></g><g><title>sock_def_readable (8 samples, 0.16%)</title><rect x="49.7398%" y="149" width="0.1601%" height="15" fill="rgb(245,158,5)"/><text x="49.9898%" y="159.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.16%)</title><rect x="49.7398%" y="133" width="0.1601%" height="15" fill="rgb(249,208,11)"/><text x="49.9898%" y="143.50"></text></g><g><title>__wake_up_common (8 samples, 0.16%)</title><rect x="49.7398%" y="117" width="0.1601%" height="15" fill="rgb(210,39,28)"/><text x="49.9898%" y="127.50"></text></g><g><title>pollwake (8 samples, 0.16%)</title><rect x="49.7398%" y="101" width="0.1601%" height="15" fill="rgb(211,56,53)"/><text x="49.9898%" y="111.50"></text></g><g><title>try_to_wake_up (8 samples, 0.16%)</title><rect x="49.7398%" y="85" width="0.1601%" height="15" fill="rgb(226,201,30)"/><text x="49.9898%" y="95.50"></text></g><g><title>tcp_ack (6 samples, 0.12%)</title><rect x="49.8999%" y="149" width="0.1201%" height="15" fill="rgb(239,101,34)"/><text x="50.1499%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (24 samples, 0.48%)</title><rect x="49.5797%" y="277" width="0.4804%" height="15" fill="rgb(226,209,5)"/><text x="49.8297%" y="287.50"></text></g><g><title>ip_rcv (22 samples, 0.44%)</title><rect x="49.6197%" y="261" width="0.4404%" height="15" fill="rgb(250,105,47)"/><text x="49.8697%" y="271.50"></text></g><g><title>ip_local_deliver (22 samples, 0.44%)</title><rect x="49.6197%" y="245" width="0.4404%" height="15" fill="rgb(230,72,3)"/><text x="49.8697%" y="255.50"></text></g><g><title>ip_local_deliver_finish (22 samples, 0.44%)</title><rect x="49.6197%" y="229" width="0.4404%" height="15" fill="rgb(232,218,39)"/><text x="49.8697%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (22 samples, 0.44%)</title><rect x="49.6197%" y="213" width="0.4404%" height="15" fill="rgb(248,166,6)"/><text x="49.8697%" y="223.50"></text></g><g><title>tcp_v4_rcv (21 samples, 0.42%)</title><rect x="49.6397%" y="197" width="0.4203%" height="15" fill="rgb(247,89,20)"/><text x="49.8897%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 0.36%)</title><rect x="49.6998%" y="181" width="0.3603%" height="15" fill="rgb(248,130,54)"/><text x="49.9498%" y="191.50"></text></g><g><title>tcp_rcv_established (18 samples, 0.36%)</title><rect x="49.6998%" y="165" width="0.3603%" height="15" fill="rgb(234,196,4)"/><text x="49.9498%" y="175.50"></text></g><g><title>do_softirq (30 samples, 0.60%)</title><rect x="49.4796%" y="357" width="0.6005%" height="15" fill="rgb(250,143,31)"/><text x="49.7296%" y="367.50"></text></g><g><title>do_softirq_own_stack (30 samples, 0.60%)</title><rect x="49.4796%" y="341" width="0.6005%" height="15" fill="rgb(211,110,34)"/><text x="49.7296%" y="351.50"></text></g><g><title>__do_softirq (30 samples, 0.60%)</title><rect x="49.4796%" y="325" width="0.6005%" height="15" fill="rgb(215,124,48)"/><text x="49.7296%" y="335.50"></text></g><g><title>net_rx_action (29 samples, 0.58%)</title><rect x="49.4996%" y="309" width="0.5805%" height="15" fill="rgb(216,46,13)"/><text x="49.7496%" y="319.50"></text></g><g><title>process_backlog (27 samples, 0.54%)</title><rect x="49.5396%" y="293" width="0.5404%" height="15" fill="rgb(205,184,25)"/><text x="49.7896%" y="303.50"></text></g><g><title>__local_bh_enable_ip (32 samples, 0.64%)</title><rect x="49.4796%" y="373" width="0.6405%" height="15" fill="rgb(228,1,10)"/><text x="49.7296%" y="383.50"></text></g><g><title>__ip_queue_xmit (38 samples, 0.76%)</title><rect x="49.3795%" y="421" width="0.7606%" height="15" fill="rgb(213,116,27)"/><text x="49.6295%" y="431.50"></text></g><g><title>ip_output (38 samples, 0.76%)</title><rect x="49.3795%" y="405" width="0.7606%" height="15" fill="rgb(241,95,50)"/><text x="49.6295%" y="415.50"></text></g><g><title>ip_finish_output2 (37 samples, 0.74%)</title><rect x="49.3995%" y="389" width="0.7406%" height="15" fill="rgb(238,48,32)"/><text x="49.6495%" y="399.50"></text></g><g><title>__tcp_transmit_skb (41 samples, 0.82%)</title><rect x="49.3795%" y="437" width="0.8207%" height="15" fill="rgb(235,113,49)"/><text x="49.6295%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (42 samples, 0.84%)</title><rect x="49.3795%" y="469" width="0.8407%" height="15" fill="rgb(205,127,43)"/><text x="49.6295%" y="479.50"></text></g><g><title>tcp_write_xmit (42 samples, 0.84%)</title><rect x="49.3795%" y="453" width="0.8407%" height="15" fill="rgb(250,162,2)"/><text x="49.6295%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (5 samples, 0.10%)</title><rect x="50.2402%" y="437" width="0.1001%" height="15" fill="rgb(220,13,41)"/><text x="50.4902%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (8 samples, 0.16%)</title><rect x="50.2402%" y="469" width="0.1601%" height="15" fill="rgb(249,221,25)"/><text x="50.4902%" y="479.50"></text></g><g><title>__alloc_skb (8 samples, 0.16%)</title><rect x="50.2402%" y="453" width="0.1601%" height="15" fill="rgb(215,208,19)"/><text x="50.4902%" y="463.50"></text></g><g><title>__x64_sys_sendto (62 samples, 1.24%)</title><rect x="49.2394%" y="549" width="1.2410%" height="15" fill="rgb(236,175,2)"/><text x="49.4894%" y="559.50"></text></g><g><title>__sys_sendto (62 samples, 1.24%)</title><rect x="49.2394%" y="533" width="1.2410%" height="15" fill="rgb(241,52,2)"/><text x="49.4894%" y="543.50"></text></g><g><title>sock_sendmsg (59 samples, 1.18%)</title><rect x="49.2994%" y="517" width="1.1809%" height="15" fill="rgb(248,140,14)"/><text x="49.5494%" y="527.50"></text></g><g><title>tcp_sendmsg (58 samples, 1.16%)</title><rect x="49.3195%" y="501" width="1.1609%" height="15" fill="rgb(253,22,42)"/><text x="49.5695%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (57 samples, 1.14%)</title><rect x="49.3395%" y="485" width="1.1409%" height="15" fill="rgb(234,61,47)"/><text x="49.5895%" y="495.50"></text></g><g><title>do_syscall_64 (65 samples, 1.30%)</title><rect x="49.2394%" y="565" width="1.3010%" height="15" fill="rgb(208,226,15)"/><text x="49.4894%" y="575.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (110 samples, 2.20%)</title><rect x="48.3987%" y="693" width="2.2018%" height="15" fill="rgb(217,221,4)"/><text x="48.6487%" y="703.50">d..</text></g><g><title>mysql::conn::Conn::_query (106 samples, 2.12%)</title><rect x="48.4788%" y="677" width="2.1217%" height="15" fill="rgb(212,174,34)"/><text x="48.7288%" y="687.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (72 samples, 1.44%)</title><rect x="49.1593%" y="661" width="1.4412%" height="15" fill="rgb(253,83,4)"/><text x="49.4093%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (71 samples, 1.42%)</title><rect x="49.1793%" y="645" width="1.4211%" height="15" fill="rgb(250,195,49)"/><text x="49.4293%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (71 samples, 1.42%)</title><rect x="49.1793%" y="629" width="1.4211%" height="15" fill="rgb(241,192,25)"/><text x="49.4293%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (70 samples, 1.40%)</title><rect x="49.1994%" y="613" width="1.4011%" height="15" fill="rgb(208,124,10)"/><text x="49.4494%" y="623.50"></text></g><g><title>__libc_send (70 samples, 1.40%)</title><rect x="49.1994%" y="597" width="1.4011%" height="15" fill="rgb(222,33,0)"/><text x="49.4494%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (69 samples, 1.38%)</title><rect x="49.2194%" y="581" width="1.3811%" height="15" fill="rgb(234,209,28)"/><text x="49.4694%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.16%)</title><rect x="50.6005%" y="613" width="0.1601%" height="15" fill="rgb(224,11,23)"/><text x="50.8505%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.10%)</title><rect x="50.6605%" y="597" width="0.1001%" height="15" fill="rgb(232,99,1)"/><text x="50.9105%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.10%)</title><rect x="50.7606%" y="565" width="0.1001%" height="15" fill="rgb(237,95,45)"/><text x="51.0106%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.10%)</title><rect x="50.7606%" y="549" width="0.1001%" height="15" fill="rgb(208,109,11)"/><text x="51.0106%" y="559.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (17 samples, 0.34%)</title><rect x="50.6005%" y="645" width="0.3403%" height="15" fill="rgb(216,190,48)"/><text x="50.8505%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (17 samples, 0.34%)</title><rect x="50.6005%" y="629" width="0.3403%" height="15" fill="rgb(251,171,36)"/><text x="50.8505%" y="639.50"></text></g><g><title>decor_mem::helpers::expr_to_col (9 samples, 0.18%)</title><rect x="50.7606%" y="613" width="0.1801%" height="15" fill="rgb(230,62,22)"/><text x="51.0106%" y="623.50"></text></g><g><title>core::fmt::write (9 samples, 0.18%)</title><rect x="50.7606%" y="597" width="0.1801%" height="15" fill="rgb(225,114,35)"/><text x="51.0106%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.18%)</title><rect x="50.7606%" y="581" width="0.1801%" height="15" fill="rgb(215,118,42)"/><text x="51.0106%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.14%)</title><rect x="50.9408%" y="629" width="0.1401%" height="15" fill="rgb(243,119,21)"/><text x="51.1908%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.14%)</title><rect x="50.9408%" y="613" width="0.1401%" height="15" fill="rgb(252,177,53)"/><text x="51.1908%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.14%)</title><rect x="50.9408%" y="597" width="0.1401%" height="15" fill="rgb(237,209,29)"/><text x="51.1908%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.14%)</title><rect x="50.9408%" y="581" width="0.1401%" height="15" fill="rgb(212,65,23)"/><text x="51.1908%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.14%)</title><rect x="50.9408%" y="565" width="0.1401%" height="15" fill="rgb(230,222,46)"/><text x="51.1908%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.14%)</title><rect x="50.9408%" y="549" width="0.1401%" height="15" fill="rgb(215,135,32)"/><text x="51.1908%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.14%)</title><rect x="50.9408%" y="533" width="0.1401%" height="15" fill="rgb(246,101,22)"/><text x="51.1908%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.14%)</title><rect x="50.9408%" y="517" width="0.1401%" height="15" fill="rgb(206,107,13)"/><text x="51.1908%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.14%)</title><rect x="50.9408%" y="501" width="0.1401%" height="15" fill="rgb(250,100,44)"/><text x="51.1908%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.14%)</title><rect x="50.9408%" y="485" width="0.1401%" height="15" fill="rgb(231,147,38)"/><text x="51.1908%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.14%)</title><rect x="50.9408%" y="469" width="0.1401%" height="15" fill="rgb(229,8,40)"/><text x="51.1908%" y="479.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.14%)</title><rect x="50.9408%" y="453" width="0.1401%" height="15" fill="rgb(221,135,30)"/><text x="51.1908%" y="463.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.14%)</title><rect x="50.9408%" y="437" width="0.1401%" height="15" fill="rgb(249,193,18)"/><text x="51.1908%" y="447.50"></text></g><g><title>_int_malloc (7 samples, 0.14%)</title><rect x="50.9408%" y="421" width="0.1401%" height="15" fill="rgb(209,133,39)"/><text x="51.1908%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.26%)</title><rect x="51.1009%" y="581" width="0.2602%" height="15" fill="rgb(232,100,14)"/><text x="51.3509%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 0.26%)</title><rect x="51.1009%" y="565" width="0.2602%" height="15" fill="rgb(224,185,1)"/><text x="51.3509%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.22%)</title><rect x="51.1409%" y="549" width="0.2202%" height="15" fill="rgb(223,139,8)"/><text x="51.3909%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.14%)</title><rect x="51.2210%" y="533" width="0.1401%" height="15" fill="rgb(232,213,38)"/><text x="51.4710%" y="543.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (43 samples, 0.86%)</title><rect x="50.6005%" y="661" width="0.8607%" height="15" fill="rgb(207,94,22)"/><text x="50.8505%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (26 samples, 0.52%)</title><rect x="50.9408%" y="645" width="0.5204%" height="15" fill="rgb(219,183,54)"/><text x="51.1908%" y="655.50"></text></g><g><title>decor_mem::helpers::expr_to_col (19 samples, 0.38%)</title><rect x="51.0809%" y="629" width="0.3803%" height="15" fill="rgb(216,185,54)"/><text x="51.3309%" y="639.50"></text></g><g><title>core::fmt::write (19 samples, 0.38%)</title><rect x="51.0809%" y="613" width="0.3803%" height="15" fill="rgb(254,217,39)"/><text x="51.3309%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (19 samples, 0.38%)</title><rect x="51.0809%" y="597" width="0.3803%" height="15" fill="rgb(240,178,23)"/><text x="51.3309%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.10%)</title><rect x="51.3611%" y="581" width="0.1001%" height="15" fill="rgb(218,11,47)"/><text x="51.6111%" y="591.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (48 samples, 0.96%)</title><rect x="50.6005%" y="677" width="0.9608%" height="15" fill="rgb(218,51,51)"/><text x="50.8505%" y="687.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (5 samples, 0.10%)</title><rect x="51.4612%" y="661" width="0.1001%" height="15" fill="rgb(238,126,27)"/><text x="51.7112%" y="671.50"></text></g><g><title>decor_mem::helpers::expr_to_col (5 samples, 0.10%)</title><rect x="51.4612%" y="645" width="0.1001%" height="15" fill="rgb(249,202,22)"/><text x="51.7112%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.10%)</title><rect x="51.4612%" y="629" width="0.1001%" height="15" fill="rgb(254,195,49)"/><text x="51.7112%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.10%)</title><rect x="51.4612%" y="613" width="0.1001%" height="15" fill="rgb(208,123,14)"/><text x="51.7112%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 1.02%)</title><rect x="51.5612%" y="613" width="1.0208%" height="15" fill="rgb(224,200,8)"/><text x="51.8112%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (62 samples, 1.24%)</title><rect x="51.5612%" y="629" width="1.2410%" height="15" fill="rgb(217,61,36)"/><text x="51.8112%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.14%)</title><rect x="52.6621%" y="613" width="0.1401%" height="15" fill="rgb(206,35,45)"/><text x="52.9121%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (6 samples, 0.12%)</title><rect x="52.6821%" y="597" width="0.1201%" height="15" fill="rgb(217,65,33)"/><text x="52.9321%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.14%)</title><rect x="52.9624%" y="613" width="0.1401%" height="15" fill="rgb(222,158,48)"/><text x="53.2124%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (7 samples, 0.14%)</title><rect x="52.9624%" y="597" width="0.1401%" height="15" fill="rgb(254,2,54)"/><text x="53.2124%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.14%)</title><rect x="52.9624%" y="581" width="0.1401%" height="15" fill="rgb(250,143,38)"/><text x="53.2124%" y="591.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (81 samples, 1.62%)</title><rect x="51.5612%" y="645" width="1.6213%" height="15" fill="rgb(248,25,0)"/><text x="51.8112%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (19 samples, 0.38%)</title><rect x="52.8022%" y="629" width="0.3803%" height="15" fill="rgb(206,152,27)"/><text x="53.0522%" y="639.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.24%)</title><rect x="53.4227%" y="597" width="0.2402%" height="15" fill="rgb(240,77,30)"/><text x="53.6727%" y="607.50"></text></g><g><title>core::fmt::write (36 samples, 0.72%)</title><rect x="53.1825%" y="645" width="0.7206%" height="15" fill="rgb(231,5,3)"/><text x="53.4325%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (36 samples, 0.72%)</title><rect x="53.1825%" y="629" width="0.7206%" height="15" fill="rgb(207,226,32)"/><text x="53.4325%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (30 samples, 0.60%)</title><rect x="53.3026%" y="613" width="0.6005%" height="15" fill="rgb(222,207,47)"/><text x="53.5526%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (19 samples, 0.38%)</title><rect x="53.9031%" y="645" width="0.3803%" height="15" fill="rgb(229,115,45)"/><text x="54.1531%" y="655.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (19 samples, 0.38%)</title><rect x="53.9031%" y="629" width="0.3803%" height="15" fill="rgb(224,191,6)"/><text x="54.1531%" y="639.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.32%)</title><rect x="55.3643%" y="613" width="0.3203%" height="15" fill="rgb(230,227,24)"/><text x="55.6143%" y="623.50"></text></g><g><title>_int_malloc (13 samples, 0.26%)</title><rect x="55.4243%" y="597" width="0.2602%" height="15" fill="rgb(228,80,19)"/><text x="55.6743%" y="607.50"></text></g><g><title>sysmalloc (6 samples, 0.12%)</title><rect x="55.5645%" y="581" width="0.1201%" height="15" fill="rgb(247,229,0)"/><text x="55.8145%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (39 samples, 0.78%)</title><rect x="55.6845%" y="613" width="0.7806%" height="15" fill="rgb(237,194,15)"/><text x="55.9345%" y="623.50"></text></g><g><title>page_fault (7 samples, 0.14%)</title><rect x="56.5052%" y="613" width="0.1401%" height="15" fill="rgb(219,203,20)"/><text x="56.7552%" y="623.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.14%)</title><rect x="56.5052%" y="597" width="0.1401%" height="15" fill="rgb(234,128,8)"/><text x="56.7552%" y="607.50"></text></g><g><title>handle_mm_fault (7 samples, 0.14%)</title><rect x="56.5052%" y="581" width="0.1401%" height="15" fill="rgb(248,202,8)"/><text x="56.7552%" y="591.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.12%)</title><rect x="56.5252%" y="565" width="0.1201%" height="15" fill="rgb(206,104,37)"/><text x="56.7752%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (90 samples, 1.80%)</title><rect x="54.8639%" y="629" width="1.8014%" height="15" fill="rgb(223,8,27)"/><text x="55.1139%" y="639.50">&lt;..</text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.18%)</title><rect x="56.7054%" y="629" width="0.1801%" height="15" fill="rgb(216,217,28)"/><text x="56.9554%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.22%)</title><rect x="56.9456%" y="629" width="0.2202%" height="15" fill="rgb(249,199,1)"/><text x="57.1956%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (5 samples, 0.10%)</title><rect x="57.0657%" y="613" width="0.1001%" height="15" fill="rgb(240,85,17)"/><text x="57.3157%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.20%)</title><rect x="57.1657%" y="629" width="0.2002%" height="15" fill="rgb(206,108,45)"/><text x="57.4157%" y="639.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.10%)</title><rect x="57.4660%" y="613" width="0.1001%" height="15" fill="rgb(245,210,41)"/><text x="57.7160%" y="623.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (167 samples, 3.34%)</title><rect x="54.2834%" y="645" width="3.3427%" height="15" fill="rgb(206,13,37)"/><text x="54.5334%" y="655.50">dec..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (13 samples, 0.26%)</title><rect x="57.3659%" y="629" width="0.2602%" height="15" fill="rgb(250,61,18)"/><text x="57.6159%" y="639.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (352 samples, 7.05%)</title><rect x="50.6005%" y="693" width="7.0456%" height="15" fill="rgb(235,172,48)"/><text x="50.8505%" y="703.50">decor_mem..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (304 samples, 6.08%)</title><rect x="51.5612%" y="677" width="6.0849%" height="15" fill="rgb(249,201,17)"/><text x="51.8112%" y="687.50">decor_me..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (304 samples, 6.08%)</title><rect x="51.5612%" y="661" width="6.0849%" height="15" fill="rgb(219,208,6)"/><text x="51.8112%" y="671.50">decor_me..</text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (10 samples, 0.20%)</title><rect x="57.6461%" y="661" width="0.2002%" height="15" fill="rgb(248,31,23)"/><text x="57.8961%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (10 samples, 0.20%)</title><rect x="57.6461%" y="645" width="0.2002%" height="15" fill="rgb(245,15,42)"/><text x="57.8961%" y="655.50"></text></g><g><title>decor_mem::helpers::expr_to_col (6 samples, 0.12%)</title><rect x="57.7262%" y="629" width="0.1201%" height="15" fill="rgb(222,217,39)"/><text x="57.9762%" y="639.50"></text></g><g><title>core::fmt::write (5 samples, 0.10%)</title><rect x="57.7462%" y="613" width="0.1001%" height="15" fill="rgb(210,219,27)"/><text x="57.9962%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.10%)</title><rect x="57.7462%" y="597" width="0.1001%" height="15" fill="rgb(252,166,36)"/><text x="57.9962%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.10%)</title><rect x="57.7462%" y="581" width="0.1001%" height="15" fill="rgb(245,132,34)"/><text x="57.9962%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.10%)</title><rect x="57.7462%" y="565" width="0.1001%" height="15" fill="rgb(236,54,3)"/><text x="57.9962%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.10%)</title><rect x="57.9864%" y="613" width="0.1001%" height="15" fill="rgb(241,173,43)"/><text x="58.2364%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.28%)</title><rect x="57.9864%" y="629" width="0.2802%" height="15" fill="rgb(215,190,9)"/><text x="58.2364%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (8 samples, 0.16%)</title><rect x="58.1065%" y="613" width="0.1601%" height="15" fill="rgb(242,101,16)"/><text x="58.3565%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.16%)</title><rect x="58.1065%" y="597" width="0.1601%" height="15" fill="rgb(223,190,21)"/><text x="58.3565%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (5 samples, 0.10%)</title><rect x="58.1665%" y="581" width="0.1001%" height="15" fill="rgb(215,228,25)"/><text x="58.4165%" y="591.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.10%)</title><rect x="58.3467%" y="629" width="0.1001%" height="15" fill="rgb(225,36,22)"/><text x="58.5967%" y="639.50"></text></g><g><title>core::fmt::write (12 samples, 0.24%)</title><rect x="58.4668%" y="629" width="0.2402%" height="15" fill="rgb(251,106,46)"/><text x="58.7168%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.24%)</title><rect x="58.4668%" y="613" width="0.2402%" height="15" fill="rgb(208,90,1)"/><text x="58.7168%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (8 samples, 0.16%)</title><rect x="58.5468%" y="597" width="0.1601%" height="15" fill="rgb(243,10,4)"/><text x="58.7968%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.12%)</title><rect x="58.9071%" y="613" width="0.1201%" height="15" fill="rgb(212,137,27)"/><text x="59.1571%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (6 samples, 0.12%)</title><rect x="58.9071%" y="597" width="0.1201%" height="15" fill="rgb(231,220,49)"/><text x="59.1571%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.12%)</title><rect x="58.9071%" y="581" width="0.1201%" height="15" fill="rgb(237,96,20)"/><text x="59.1571%" y="591.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (19 samples, 0.38%)</title><rect x="58.7270%" y="629" width="0.3803%" height="15" fill="rgb(239,229,30)"/><text x="58.9770%" y="639.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (74 samples, 1.48%)</title><rect x="57.6461%" y="677" width="1.4812%" height="15" fill="rgb(219,65,33)"/><text x="57.8961%" y="687.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (64 samples, 1.28%)</title><rect x="57.8463%" y="661" width="1.2810%" height="15" fill="rgb(243,134,7)"/><text x="58.0963%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (58 samples, 1.16%)</title><rect x="57.9664%" y="645" width="1.1609%" height="15" fill="rgb(216,177,54)"/><text x="58.2164%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (564 samples, 11.29%)</title><rect x="47.8583%" y="741" width="11.2890%" height="15" fill="rgb(211,160,20)"/><text x="48.1083%" y="751.50">&lt;decor_mem::Shim ..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (564 samples, 11.29%)</title><rect x="47.8583%" y="725" width="11.2890%" height="15" fill="rgb(239,85,39)"/><text x="48.1083%" y="735.50">decor_mem::query_..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (537 samples, 10.75%)</title><rect x="48.3987%" y="709" width="10.7486%" height="15" fill="rgb(232,125,22)"/><text x="48.6487%" y="719.50">decor_mem::query..</text></g><g><title>decor_mem::views::Views::delete (75 samples, 1.50%)</title><rect x="57.6461%" y="693" width="1.5012%" height="15" fill="rgb(244,57,34)"/><text x="57.8961%" y="703.50"></text></g><g><title>sk_wait_data (15 samples, 0.30%)</title><rect x="59.2874%" y="421" width="0.3002%" height="15" fill="rgb(214,203,32)"/><text x="59.5374%" y="431.50"></text></g><g><title>wait_woken (14 samples, 0.28%)</title><rect x="59.3074%" y="405" width="0.2802%" height="15" fill="rgb(207,58,43)"/><text x="59.5574%" y="415.50"></text></g><g><title>schedule_timeout (14 samples, 0.28%)</title><rect x="59.3074%" y="389" width="0.2802%" height="15" fill="rgb(215,193,15)"/><text x="59.5574%" y="399.50"></text></g><g><title>schedule (13 samples, 0.26%)</title><rect x="59.3275%" y="373" width="0.2602%" height="15" fill="rgb(232,15,44)"/><text x="59.5775%" y="383.50"></text></g><g><title>__schedule (12 samples, 0.24%)</title><rect x="59.3475%" y="357" width="0.2402%" height="15" fill="rgb(212,3,48)"/><text x="59.5975%" y="367.50"></text></g><g><title>do_syscall_64 (26 samples, 0.52%)</title><rect x="59.1873%" y="501" width="0.5204%" height="15" fill="rgb(218,128,7)"/><text x="59.4373%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (26 samples, 0.52%)</title><rect x="59.1873%" y="485" width="0.5204%" height="15" fill="rgb(226,216,39)"/><text x="59.4373%" y="495.50"></text></g><g><title>__sys_recvfrom (25 samples, 0.50%)</title><rect x="59.2074%" y="469" width="0.5004%" height="15" fill="rgb(243,47,51)"/><text x="59.4574%" y="479.50"></text></g><g><title>inet_recvmsg (24 samples, 0.48%)</title><rect x="59.2274%" y="453" width="0.4804%" height="15" fill="rgb(241,183,40)"/><text x="59.4774%" y="463.50"></text></g><g><title>tcp_recvmsg (24 samples, 0.48%)</title><rect x="59.2274%" y="437" width="0.4804%" height="15" fill="rgb(231,217,32)"/><text x="59.4774%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (29 samples, 0.58%)</title><rect x="59.1873%" y="517" width="0.5805%" height="15" fill="rgb(229,61,38)"/><text x="59.4373%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 0.62%)</title><rect x="59.1673%" y="613" width="0.6205%" height="15" fill="rgb(225,210,5)"/><text x="59.4173%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (31 samples, 0.62%)</title><rect x="59.1673%" y="597" width="0.6205%" height="15" fill="rgb(231,79,45)"/><text x="59.4173%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (31 samples, 0.62%)</title><rect x="59.1673%" y="581" width="0.6205%" height="15" fill="rgb(224,100,7)"/><text x="59.4173%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (31 samples, 0.62%)</title><rect x="59.1673%" y="565" width="0.6205%" height="15" fill="rgb(241,198,18)"/><text x="59.4173%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (31 samples, 0.62%)</title><rect x="59.1673%" y="549" width="0.6205%" height="15" fill="rgb(252,97,53)"/><text x="59.4173%" y="559.50"></text></g><g><title>__libc_recv (31 samples, 0.62%)</title><rect x="59.1673%" y="533" width="0.6205%" height="15" fill="rgb(220,88,7)"/><text x="59.4173%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.66%)</title><rect x="59.1673%" y="629" width="0.6605%" height="15" fill="rgb(213,176,14)"/><text x="59.4173%" y="639.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (35 samples, 0.70%)</title><rect x="59.1473%" y="709" width="0.7006%" height="15" fill="rgb(246,73,7)"/><text x="59.3973%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (35 samples, 0.70%)</title><rect x="59.1473%" y="693" width="0.7006%" height="15" fill="rgb(245,64,36)"/><text x="59.3973%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (35 samples, 0.70%)</title><rect x="59.1473%" y="677" width="0.7006%" height="15" fill="rgb(245,80,10)"/><text x="59.3973%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (35 samples, 0.70%)</title><rect x="59.1473%" y="661" width="0.7006%" height="15" fill="rgb(232,107,50)"/><text x="59.3973%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (34 samples, 0.68%)</title><rect x="59.1673%" y="645" width="0.6805%" height="15" fill="rgb(253,3,0)"/><text x="59.4173%" y="655.50"></text></g><g><title>sk_wait_data (18 samples, 0.36%)</title><rect x="60.1081%" y="421" width="0.3603%" height="15" fill="rgb(212,99,53)"/><text x="60.3581%" y="431.50"></text></g><g><title>wait_woken (17 samples, 0.34%)</title><rect x="60.1281%" y="405" width="0.3403%" height="15" fill="rgb(249,111,54)"/><text x="60.3781%" y="415.50"></text></g><g><title>schedule_timeout (16 samples, 0.32%)</title><rect x="60.1481%" y="389" width="0.3203%" height="15" fill="rgb(249,55,30)"/><text x="60.3981%" y="399.50"></text></g><g><title>schedule (16 samples, 0.32%)</title><rect x="60.1481%" y="373" width="0.3203%" height="15" fill="rgb(237,47,42)"/><text x="60.3981%" y="383.50"></text></g><g><title>__schedule (16 samples, 0.32%)</title><rect x="60.1481%" y="357" width="0.3203%" height="15" fill="rgb(211,20,18)"/><text x="60.3981%" y="367.50"></text></g><g><title>do_syscall_64 (27 samples, 0.54%)</title><rect x="60.0280%" y="501" width="0.5404%" height="15" fill="rgb(231,203,46)"/><text x="60.2780%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (27 samples, 0.54%)</title><rect x="60.0280%" y="485" width="0.5404%" height="15" fill="rgb(237,142,3)"/><text x="60.2780%" y="495.50"></text></g><g><title>__sys_recvfrom (27 samples, 0.54%)</title><rect x="60.0280%" y="469" width="0.5404%" height="15" fill="rgb(241,107,1)"/><text x="60.2780%" y="479.50"></text></g><g><title>inet_recvmsg (27 samples, 0.54%)</title><rect x="60.0280%" y="453" width="0.5404%" height="15" fill="rgb(229,83,13)"/><text x="60.2780%" y="463.50"></text></g><g><title>tcp_recvmsg (27 samples, 0.54%)</title><rect x="60.0280%" y="437" width="0.5404%" height="15" fill="rgb(241,91,40)"/><text x="60.2780%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 0.64%)</title><rect x="60.0080%" y="517" width="0.6405%" height="15" fill="rgb(225,3,45)"/><text x="60.2580%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 0.70%)</title><rect x="59.9680%" y="613" width="0.7006%" height="15" fill="rgb(244,223,14)"/><text x="60.2180%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 0.68%)</title><rect x="59.9880%" y="597" width="0.6805%" height="15" fill="rgb(224,124,37)"/><text x="60.2380%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 0.68%)</title><rect x="59.9880%" y="581" width="0.6805%" height="15" fill="rgb(251,171,30)"/><text x="60.2380%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 0.68%)</title><rect x="59.9880%" y="565" width="0.6805%" height="15" fill="rgb(236,46,54)"/><text x="60.2380%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 0.68%)</title><rect x="59.9880%" y="549" width="0.6805%" height="15" fill="rgb(245,213,5)"/><text x="60.2380%" y="559.50"></text></g><g><title>__libc_recv (34 samples, 0.68%)</title><rect x="59.9880%" y="533" width="0.6805%" height="15" fill="rgb(230,144,27)"/><text x="60.2380%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.72%)</title><rect x="59.9680%" y="629" width="0.7206%" height="15" fill="rgb(220,86,6)"/><text x="60.2180%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (44 samples, 0.88%)</title><rect x="59.8479%" y="693" width="0.8807%" height="15" fill="rgb(240,20,13)"/><text x="60.0979%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (44 samples, 0.88%)</title><rect x="59.8479%" y="677" width="0.8807%" height="15" fill="rgb(217,89,34)"/><text x="60.0979%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (44 samples, 0.88%)</title><rect x="59.8479%" y="661" width="0.8807%" height="15" fill="rgb(229,13,5)"/><text x="60.0979%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (41 samples, 0.82%)</title><rect x="59.9079%" y="645" width="0.8207%" height="15" fill="rgb(244,67,35)"/><text x="60.1579%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.10%)</title><rect x="60.7686%" y="581" width="0.1001%" height="15" fill="rgb(221,40,2)"/><text x="61.0186%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.10%)</title><rect x="60.7686%" y="565" width="0.1001%" height="15" fill="rgb(237,157,21)"/><text x="61.0186%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (10 samples, 0.20%)</title><rect x="60.7286%" y="661" width="0.2002%" height="15" fill="rgb(222,94,11)"/><text x="60.9786%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (10 samples, 0.20%)</title><rect x="60.7286%" y="645" width="0.2002%" height="15" fill="rgb(249,113,6)"/><text x="60.9786%" y="655.50"></text></g><g><title>decor_mem::helpers::expr_to_col (9 samples, 0.18%)</title><rect x="60.7486%" y="629" width="0.1801%" height="15" fill="rgb(238,137,36)"/><text x="60.9986%" y="639.50"></text></g><g><title>core::fmt::write (8 samples, 0.16%)</title><rect x="60.7686%" y="613" width="0.1601%" height="15" fill="rgb(210,102,26)"/><text x="61.0186%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.16%)</title><rect x="60.7686%" y="597" width="0.1601%" height="15" fill="rgb(218,30,30)"/><text x="61.0186%" y="607.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (21 samples, 0.42%)</title><rect x="60.7286%" y="677" width="0.4203%" height="15" fill="rgb(214,67,26)"/><text x="60.9786%" y="687.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (11 samples, 0.22%)</title><rect x="60.9287%" y="661" width="0.2202%" height="15" fill="rgb(251,9,53)"/><text x="61.1787%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (8 samples, 0.16%)</title><rect x="60.9888%" y="645" width="0.1601%" height="15" fill="rgb(228,204,25)"/><text x="61.2388%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (709 samples, 14.19%)</title><rect x="46.9976%" y="773" width="14.1914%" height="15" fill="rgb(207,153,8)"/><text x="47.2476%" y="783.50">msql_srv::MysqlInterme..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (709 samples, 14.19%)</title><rect x="46.9976%" y="757" width="14.1914%" height="15" fill="rgb(242,9,16)"/><text x="47.2476%" y="767.50">msql_srv::MysqlInterme..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (102 samples, 2.04%)</title><rect x="59.1473%" y="741" width="2.0416%" height="15" fill="rgb(217,211,10)"/><text x="59.3973%" y="751.50">&lt;..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (102 samples, 2.04%)</title><rect x="59.1473%" y="725" width="2.0416%" height="15" fill="rgb(219,228,52)"/><text x="59.3973%" y="735.50">d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (67 samples, 1.34%)</title><rect x="59.8479%" y="709" width="1.3411%" height="15" fill="rgb(231,92,29)"/><text x="60.0979%" y="719.50"></text></g><g><title>decor_mem::views::Views::delete (23 samples, 0.46%)</title><rect x="60.7286%" y="693" width="0.4604%" height="15" fill="rgb(232,8,23)"/><text x="60.9786%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (32 samples, 0.64%)</title><rect x="61.4892%" y="661" width="0.6405%" height="15" fill="rgb(216,211,34)"/><text x="61.7392%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.64%)</title><rect x="61.4892%" y="645" width="0.6405%" height="15" fill="rgb(236,151,0)"/><text x="61.7392%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (32 samples, 0.64%)</title><rect x="61.4892%" y="629" width="0.6405%" height="15" fill="rgb(209,168,3)"/><text x="61.7392%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.64%)</title><rect x="61.4892%" y="613" width="0.6405%" height="15" fill="rgb(208,129,28)"/><text x="61.7392%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (32 samples, 0.64%)</title><rect x="61.4892%" y="597" width="0.6405%" height="15" fill="rgb(229,78,22)"/><text x="61.7392%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.64%)</title><rect x="61.4892%" y="581" width="0.6405%" height="15" fill="rgb(228,187,13)"/><text x="61.7392%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (32 samples, 0.64%)</title><rect x="61.4892%" y="565" width="0.6405%" height="15" fill="rgb(240,119,24)"/><text x="61.7392%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.64%)</title><rect x="61.4892%" y="549" width="0.6405%" height="15" fill="rgb(209,194,42)"/><text x="61.7392%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (32 samples, 0.64%)</title><rect x="61.4892%" y="533" width="0.6405%" height="15" fill="rgb(247,200,46)"/><text x="61.7392%" y="543.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (35 samples, 0.70%)</title><rect x="61.4492%" y="773" width="0.7006%" height="15" fill="rgb(218,76,16)"/><text x="61.6992%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (35 samples, 0.70%)</title><rect x="61.4492%" y="757" width="0.7006%" height="15" fill="rgb(225,21,48)"/><text x="61.6992%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (35 samples, 0.70%)</title><rect x="61.4492%" y="741" width="0.7006%" height="15" fill="rgb(239,223,50)"/><text x="61.6992%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (35 samples, 0.70%)</title><rect x="61.4492%" y="725" width="0.7006%" height="15" fill="rgb(244,45,21)"/><text x="61.6992%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (35 samples, 0.70%)</title><rect x="61.4492%" y="709" width="0.7006%" height="15" fill="rgb(232,33,43)"/><text x="61.6992%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (34 samples, 0.68%)</title><rect x="61.4692%" y="693" width="0.6805%" height="15" fill="rgb(209,8,3)"/><text x="61.7192%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (34 samples, 0.68%)</title><rect x="61.4692%" y="677" width="0.6805%" height="15" fill="rgb(214,25,53)"/><text x="61.7192%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (6 samples, 0.12%)</title><rect x="62.1697%" y="773" width="0.1201%" height="15" fill="rgb(254,186,54)"/><text x="62.4197%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (6 samples, 0.12%)</title><rect x="62.1697%" y="757" width="0.1201%" height="15" fill="rgb(208,174,49)"/><text x="62.4197%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (6 samples, 0.12%)</title><rect x="62.1697%" y="741" width="0.1201%" height="15" fill="rgb(233,191,51)"/><text x="62.4197%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (6 samples, 0.12%)</title><rect x="62.1697%" y="725" width="0.1201%" height="15" fill="rgb(222,134,10)"/><text x="62.4197%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (6 samples, 0.12%)</title><rect x="62.1697%" y="709" width="0.1201%" height="15" fill="rgb(230,226,20)"/><text x="62.4197%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (6 samples, 0.12%)</title><rect x="62.1697%" y="693" width="0.1201%" height="15" fill="rgb(251,111,25)"/><text x="62.4197%" y="703.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (10 samples, 0.20%)</title><rect x="62.3899%" y="581" width="0.2002%" height="15" fill="rgb(224,40,46)"/><text x="62.6399%" y="591.50"></text></g><g><title>msql_srv::writers::column_definitions (10 samples, 0.20%)</title><rect x="62.3899%" y="565" width="0.2002%" height="15" fill="rgb(236,108,47)"/><text x="62.6399%" y="575.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.10%)</title><rect x="62.4900%" y="549" width="0.1001%" height="15" fill="rgb(234,93,0)"/><text x="62.7400%" y="559.50"></text></g><g><title>decor_mem::ghosts_map::answer_rows (11 samples, 0.22%)</title><rect x="62.3899%" y="597" width="0.2202%" height="15" fill="rgb(224,213,32)"/><text x="62.6399%" y="607.50"></text></g><g><title>core::fmt::write (6 samples, 0.12%)</title><rect x="62.6501%" y="581" width="0.1201%" height="15" fill="rgb(251,11,48)"/><text x="62.9001%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.12%)</title><rect x="62.6501%" y="565" width="0.1201%" height="15" fill="rgb(236,173,5)"/><text x="62.9001%" y="575.50"></text></g><g><title>__lru_cache_add (5 samples, 0.10%)</title><rect x="63.2906%" y="485" width="0.1001%" height="15" fill="rgb(230,95,12)"/><text x="63.5406%" y="495.50"></text></g><g><title>pagevec_lru_move_fn (5 samples, 0.10%)</title><rect x="63.2906%" y="469" width="0.1001%" height="15" fill="rgb(232,209,1)"/><text x="63.5406%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (7 samples, 0.14%)</title><rect x="63.4708%" y="469" width="0.1401%" height="15" fill="rgb(232,6,1)"/><text x="63.7208%" y="479.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.14%)</title><rect x="63.4708%" y="453" width="0.1401%" height="15" fill="rgb(210,224,50)"/><text x="63.7208%" y="463.50"></text></g><g><title>prep_new_page (7 samples, 0.14%)</title><rect x="63.4708%" y="437" width="0.1401%" height="15" fill="rgb(228,127,35)"/><text x="63.7208%" y="447.50"></text></g><g><title>kernel_init_free_pages (7 samples, 0.14%)</title><rect x="63.4708%" y="421" width="0.1401%" height="15" fill="rgb(245,102,45)"/><text x="63.7208%" y="431.50"></text></g><g><title>clear_page_erms (7 samples, 0.14%)</title><rect x="63.4708%" y="405" width="0.1401%" height="15" fill="rgb(214,1,49)"/><text x="63.7208%" y="415.50"></text></g><g><title>alloc_pages_vma (10 samples, 0.20%)</title><rect x="63.4307%" y="485" width="0.2002%" height="15" fill="rgb(226,163,40)"/><text x="63.6807%" y="495.50"></text></g><g><title>page_fault (32 samples, 0.64%)</title><rect x="63.0705%" y="549" width="0.6405%" height="15" fill="rgb(239,212,28)"/><text x="63.3205%" y="559.50"></text></g><g><title>do_user_addr_fault (31 samples, 0.62%)</title><rect x="63.0905%" y="533" width="0.6205%" height="15" fill="rgb(220,20,13)"/><text x="63.3405%" y="543.50"></text></g><g><title>handle_mm_fault (28 samples, 0.56%)</title><rect x="63.1505%" y="517" width="0.5604%" height="15" fill="rgb(210,164,35)"/><text x="63.4005%" y="527.50"></text></g><g><title>__handle_mm_fault (25 samples, 0.50%)</title><rect x="63.2106%" y="501" width="0.5004%" height="15" fill="rgb(248,109,41)"/><text x="63.4606%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (53 samples, 1.06%)</title><rect x="62.7702%" y="581" width="1.0608%" height="15" fill="rgb(238,23,50)"/><text x="63.0202%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (43 samples, 0.86%)</title><rect x="62.9704%" y="565" width="0.8607%" height="15" fill="rgb(211,48,49)"/><text x="63.2204%" y="575.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.12%)</title><rect x="63.7110%" y="549" width="0.1201%" height="15" fill="rgb(223,36,21)"/><text x="63.9610%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (8 samples, 0.16%)</title><rect x="63.8311%" y="581" width="0.1601%" height="15" fill="rgb(207,123,46)"/><text x="64.0811%" y="591.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (70 samples, 1.40%)</title><rect x="62.6301%" y="597" width="1.4011%" height="15" fill="rgb(240,218,32)"/><text x="62.8801%" y="607.50"></text></g><g><title>decor_mem::views::View::insert_into_index (10 samples, 0.20%)</title><rect x="64.0512%" y="581" width="0.2002%" height="15" fill="rgb(252,5,43)"/><text x="64.3012%" y="591.50"></text></g><g><title>decor_mem::views::Views::insert (22 samples, 0.44%)</title><rect x="64.0312%" y="597" width="0.4404%" height="15" fill="rgb(252,84,19)"/><text x="64.2812%" y="607.50"></text></g><g><title>decor_mem::views::View::insert_row (11 samples, 0.22%)</title><rect x="64.2514%" y="581" width="0.2202%" height="15" fill="rgb(243,152,39)"/><text x="64.5014%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.14%)</title><rect x="64.3315%" y="565" width="0.1401%" height="15" fill="rgb(234,160,15)"/><text x="64.5815%" y="575.50"></text></g><g><title>start_thread (108 samples, 2.16%)</title><rect x="62.3699%" y="773" width="2.1617%" height="15" fill="rgb(237,34,20)"/><text x="62.6199%" y="783.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (108 samples, 2.16%)</title><rect x="62.3699%" y="757" width="2.1617%" height="15" fill="rgb(229,97,13)"/><text x="62.6199%" y="767.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (108 samples, 2.16%)</title><rect x="62.3699%" y="741" width="2.1617%" height="15" fill="rgb(234,71,50)"/><text x="62.6199%" y="751.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (108 samples, 2.16%)</title><rect x="62.3699%" y="725" width="2.1617%" height="15" fill="rgb(253,155,4)"/><text x="62.6199%" y="735.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (108 samples, 2.16%)</title><rect x="62.3699%" y="709" width="2.1617%" height="15" fill="rgb(222,185,37)"/><text x="62.6199%" y="719.50">c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (108 samples, 2.16%)</title><rect x="62.3699%" y="693" width="2.1617%" height="15" fill="rgb(251,177,13)"/><text x="62.6199%" y="703.50">s..</text></g><g><title>decor_mem::Shim::run_on_tcp (108 samples, 2.16%)</title><rect x="62.3699%" y="677" width="2.1617%" height="15" fill="rgb(250,179,40)"/><text x="62.6199%" y="687.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (108 samples, 2.16%)</title><rect x="62.3699%" y="661" width="2.1617%" height="15" fill="rgb(242,44,2)"/><text x="62.6199%" y="671.50">m..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (108 samples, 2.16%)</title><rect x="62.3699%" y="645" width="2.1617%" height="15" fill="rgb(216,177,13)"/><text x="62.6199%" y="655.50">m..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (108 samples, 2.16%)</title><rect x="62.3699%" y="629" width="2.1617%" height="15" fill="rgb(216,106,43)"/><text x="62.6199%" y="639.50">&lt;..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (108 samples, 2.16%)</title><rect x="62.3699%" y="613" width="2.1617%" height="15" fill="rgb(216,183,2)"/><text x="62.6199%" y="623.50">d..</text></g><g><title>std::rt::lang_start_internal (8 samples, 0.16%)</title><rect x="64.6517%" y="773" width="0.1601%" height="15" fill="rgb(249,75,3)"/><text x="64.9017%" y="783.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.16%)</title><rect x="64.6517%" y="757" width="0.1601%" height="15" fill="rgb(219,67,39)"/><text x="64.9017%" y="767.50"></text></g><g><title>std::panicking::try (8 samples, 0.16%)</title><rect x="64.6517%" y="741" width="0.1601%" height="15" fill="rgb(253,228,2)"/><text x="64.9017%" y="751.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.16%)</title><rect x="64.6517%" y="725" width="0.1601%" height="15" fill="rgb(235,138,27)"/><text x="64.9017%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (8 samples, 0.16%)</title><rect x="64.6517%" y="709" width="0.1601%" height="15" fill="rgb(236,97,51)"/><text x="64.9017%" y="719.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (8 samples, 0.16%)</title><rect x="64.6517%" y="693" width="0.1601%" height="15" fill="rgb(240,80,30)"/><text x="64.9017%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.16%)</title><rect x="64.6517%" y="677" width="0.1601%" height="15" fill="rgb(230,178,19)"/><text x="64.9017%" y="687.50"></text></g><g><title>lobsters_microbenchmarks::main (8 samples, 0.16%)</title><rect x="64.6517%" y="661" width="0.1601%" height="15" fill="rgb(210,190,27)"/><text x="64.9017%" y="671.50"></text></g><g><title>core::fmt::write (6 samples, 0.12%)</title><rect x="64.8519%" y="597" width="0.1201%" height="15" fill="rgb(222,107,31)"/><text x="65.1019%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.12%)</title><rect x="64.8519%" y="581" width="0.1201%" height="15" fill="rgb(216,127,34)"/><text x="65.1019%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.12%)</title><rect x="64.8519%" y="565" width="0.1201%" height="15" fill="rgb(234,116,52)"/><text x="65.1019%" y="575.50"></text></g><g><title>perf_event_mmap (6 samples, 0.12%)</title><rect x="65.0120%" y="437" width="0.1201%" height="15" fill="rgb(222,124,15)"/><text x="65.2620%" y="447.50"></text></g><g><title>perf_iterate_sb (5 samples, 0.10%)</title><rect x="65.0320%" y="421" width="0.1001%" height="15" fill="rgb(231,179,28)"/><text x="65.2820%" y="431.50"></text></g><g><title>perf_iterate_ctx (5 samples, 0.10%)</title><rect x="65.0320%" y="405" width="0.1001%" height="15" fill="rgb(226,93,45)"/><text x="65.2820%" y="415.50"></text></g><g><title>__GI___mprotect (9 samples, 0.18%)</title><rect x="64.9920%" y="533" width="0.1801%" height="15" fill="rgb(215,8,51)"/><text x="65.2420%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.18%)</title><rect x="64.9920%" y="517" width="0.1801%" height="15" fill="rgb(223,106,5)"/><text x="65.2420%" y="527.50"></text></g><g><title>do_syscall_64 (9 samples, 0.18%)</title><rect x="64.9920%" y="501" width="0.1801%" height="15" fill="rgb(250,191,5)"/><text x="65.2420%" y="511.50"></text></g><g><title>__x64_sys_mprotect (9 samples, 0.18%)</title><rect x="64.9920%" y="485" width="0.1801%" height="15" fill="rgb(242,132,44)"/><text x="65.2420%" y="495.50"></text></g><g><title>do_mprotect_pkey (9 samples, 0.18%)</title><rect x="64.9920%" y="469" width="0.1801%" height="15" fill="rgb(251,152,29)"/><text x="65.2420%" y="479.50"></text></g><g><title>mprotect_fixup (9 samples, 0.18%)</title><rect x="64.9920%" y="453" width="0.1801%" height="15" fill="rgb(218,179,5)"/><text x="65.2420%" y="463.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (22 samples, 0.44%)</title><rect x="64.8519%" y="613" width="0.4404%" height="15" fill="rgb(227,67,19)"/><text x="65.1019%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (16 samples, 0.32%)</title><rect x="64.9720%" y="597" width="0.3203%" height="15" fill="rgb(233,119,31)"/><text x="65.2220%" y="607.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.32%)</title><rect x="64.9720%" y="581" width="0.3203%" height="15" fill="rgb(241,120,22)"/><text x="65.2220%" y="591.50"></text></g><g><title>_int_malloc (16 samples, 0.32%)</title><rect x="64.9720%" y="565" width="0.3203%" height="15" fill="rgb(224,102,30)"/><text x="65.2220%" y="575.50"></text></g><g><title>sysmalloc (15 samples, 0.30%)</title><rect x="64.9920%" y="549" width="0.3002%" height="15" fill="rgb(210,164,37)"/><text x="65.2420%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.10%)</title><rect x="65.3923%" y="581" width="0.1001%" height="15" fill="rgb(226,191,16)"/><text x="65.6423%" y="591.50"></text></g><g><title>decor_mem::views::View::insert_into_index (16 samples, 0.32%)</title><rect x="65.2922%" y="597" width="0.3203%" height="15" fill="rgb(214,40,45)"/><text x="65.5422%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42 samples, 0.84%)</title><rect x="64.8118%" y="773" width="0.8407%" height="15" fill="rgb(244,29,26)"/><text x="65.0618%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (42 samples, 0.84%)</title><rect x="64.8118%" y="757" width="0.8407%" height="15" fill="rgb(216,16,5)"/><text x="65.0618%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (42 samples, 0.84%)</title><rect x="64.8118%" y="741" width="0.8407%" height="15" fill="rgb(249,76,35)"/><text x="65.0618%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (42 samples, 0.84%)</title><rect x="64.8118%" y="725" width="0.8407%" height="15" fill="rgb(207,11,44)"/><text x="65.0618%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42 samples, 0.84%)</title><rect x="64.8118%" y="709" width="0.8407%" height="15" fill="rgb(228,190,49)"/><text x="65.0618%" y="719.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (42 samples, 0.84%)</title><rect x="64.8118%" y="693" width="0.8407%" height="15" fill="rgb(214,173,12)"/><text x="65.0618%" y="703.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (42 samples, 0.84%)</title><rect x="64.8118%" y="677" width="0.8407%" height="15" fill="rgb(218,26,35)"/><text x="65.0618%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (42 samples, 0.84%)</title><rect x="64.8118%" y="661" width="0.8407%" height="15" fill="rgb(220,200,19)"/><text x="65.0618%" y="671.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (42 samples, 0.84%)</title><rect x="64.8118%" y="645" width="0.8407%" height="15" fill="rgb(239,95,49)"/><text x="65.0618%" y="655.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (42 samples, 0.84%)</title><rect x="64.8118%" y="629" width="0.8407%" height="15" fill="rgb(235,85,53)"/><text x="65.0618%" y="639.50"></text></g><g><title>decor_mem::views::Views::insert (18 samples, 0.36%)</title><rect x="65.2922%" y="613" width="0.3603%" height="15" fill="rgb(233,133,31)"/><text x="65.5422%" y="623.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (26 samples, 0.52%)</title><rect x="65.6725%" y="677" width="0.5204%" height="15" fill="rgb(218,25,20)"/><text x="65.9225%" y="687.50"></text></g><g><title>decor_mem::views::Views::insert (6 samples, 0.12%)</title><rect x="66.0729%" y="661" width="0.1201%" height="15" fill="rgb(252,210,38)"/><text x="66.3229%" y="671.50"></text></g><g><title>__GI___libc_free (8 samples, 0.16%)</title><rect x="66.7134%" y="661" width="0.1601%" height="15" fill="rgb(242,134,21)"/><text x="66.9634%" y="671.50"></text></g><g><title>__GI___libc_realloc (24 samples, 0.48%)</title><rect x="66.9135%" y="661" width="0.4804%" height="15" fill="rgb(213,28,48)"/><text x="67.1635%" y="671.50"></text></g><g><title>_int_realloc (8 samples, 0.16%)</title><rect x="67.2338%" y="645" width="0.1601%" height="15" fill="rgb(250,196,2)"/><text x="67.4838%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (7 samples, 0.14%)</title><rect x="67.8943%" y="645" width="0.1401%" height="15" fill="rgb(227,5,17)"/><text x="68.1443%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (6 samples, 0.12%)</title><rect x="67.9143%" y="629" width="0.1201%" height="15" fill="rgb(221,226,24)"/><text x="68.1643%" y="639.50"></text></g><g><title>core::fmt::write (18 samples, 0.36%)</title><rect x="67.6942%" y="661" width="0.3603%" height="15" fill="rgb(211,5,48)"/><text x="67.9442%" y="671.50"></text></g><g><title>__GI___libc_free (5 samples, 0.10%)</title><rect x="68.3147%" y="629" width="0.1001%" height="15" fill="rgb(219,150,6)"/><text x="68.5647%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (21 samples, 0.42%)</title><rect x="68.0544%" y="661" width="0.4203%" height="15" fill="rgb(251,46,16)"/><text x="68.3044%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.22%)</title><rect x="68.2546%" y="645" width="0.2202%" height="15" fill="rgb(220,204,40)"/><text x="68.5046%" y="655.50"></text></g><g><title>core::str::pattern::StrSearcher::new (7 samples, 0.14%)</title><rect x="68.4748%" y="661" width="0.1401%" height="15" fill="rgb(211,85,2)"/><text x="68.7248%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (5 samples, 0.10%)</title><rect x="68.5148%" y="645" width="0.1001%" height="15" fill="rgb(229,17,7)"/><text x="68.7648%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (152 samples, 3.04%)</title><rect x="65.6725%" y="709" width="3.0424%" height="15" fill="rgb(239,72,28)"/><text x="65.9225%" y="719.50">&lt;de..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (152 samples, 3.04%)</title><rect x="65.6725%" y="693" width="3.0424%" height="15" fill="rgb(230,47,54)"/><text x="65.9225%" y="703.50">dec..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (126 samples, 2.52%)</title><rect x="66.1930%" y="677" width="2.5220%" height="15" fill="rgb(214,50,8)"/><text x="66.4430%" y="687.50">de..</text></g><g><title>decor_mem::views::Views::get_view (5 samples, 0.10%)</title><rect x="68.6149%" y="661" width="0.1001%" height="15" fill="rgb(216,198,43)"/><text x="68.8649%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (10 samples, 0.20%)</title><rect x="68.9151%" y="661" width="0.2002%" height="15" fill="rgb(234,20,35)"/><text x="69.1651%" y="671.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (23 samples, 0.46%)</title><rect x="68.7150%" y="677" width="0.4604%" height="15" fill="rgb(254,45,19)"/><text x="68.9650%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe_child_parent_edges (7 samples, 0.14%)</title><rect x="69.1753%" y="677" width="0.1401%" height="15" fill="rgb(219,14,44)"/><text x="69.4253%" y="687.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (5 samples, 0.10%)</title><rect x="69.3155%" y="677" width="0.1001%" height="15" fill="rgb(217,220,26)"/><text x="69.5655%" y="687.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.12%)</title><rect x="69.5757%" y="565" width="0.1201%" height="15" fill="rgb(213,158,28)"/><text x="69.8257%" y="575.50"></text></g><g><title>_int_malloc (5 samples, 0.10%)</title><rect x="69.5957%" y="549" width="0.1001%" height="15" fill="rgb(252,51,52)"/><text x="69.8457%" y="559.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (15 samples, 0.30%)</title><rect x="69.4155%" y="677" width="0.3002%" height="15" fill="rgb(246,89,16)"/><text x="69.6655%" y="687.50"></text></g><g><title>core::fmt::write (15 samples, 0.30%)</title><rect x="69.4155%" y="661" width="0.3002%" height="15" fill="rgb(216,158,49)"/><text x="69.6655%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (15 samples, 0.30%)</title><rect x="69.4155%" y="645" width="0.3002%" height="15" fill="rgb(236,107,19)"/><text x="69.6655%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.28%)</title><rect x="69.4355%" y="629" width="0.2802%" height="15" fill="rgb(228,185,30)"/><text x="69.6855%" y="639.50"></text></g><g><title>core::fmt::write (11 samples, 0.22%)</title><rect x="69.4956%" y="613" width="0.2202%" height="15" fill="rgb(246,134,8)"/><text x="69.7456%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.22%)</title><rect x="69.4956%" y="597" width="0.2202%" height="15" fill="rgb(214,143,50)"/><text x="69.7456%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.22%)</title><rect x="69.4956%" y="581" width="0.2202%" height="15" fill="rgb(228,75,8)"/><text x="69.7456%" y="591.50"></text></g><g><title>_int_free (6 samples, 0.12%)</title><rect x="70.0560%" y="565" width="0.1201%" height="15" fill="rgb(207,175,4)"/><text x="70.3060%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.38%)</title><rect x="69.8559%" y="597" width="0.3803%" height="15" fill="rgb(205,108,24)"/><text x="70.1059%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (19 samples, 0.38%)</title><rect x="69.8559%" y="581" width="0.3803%" height="15" fill="rgb(244,120,49)"/><text x="70.1059%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (24 samples, 0.48%)</title><rect x="69.8359%" y="613" width="0.4804%" height="15" fill="rgb(223,47,38)"/><text x="70.0859%" y="623.50"></text></g><g><title>core::fmt::write (36 samples, 0.72%)</title><rect x="69.7158%" y="645" width="0.7206%" height="15" fill="rgb(229,179,11)"/><text x="69.9658%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (36 samples, 0.72%)</title><rect x="69.7158%" y="629" width="0.7206%" height="15" fill="rgb(231,122,1)"/><text x="69.9658%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.22%)</title><rect x="70.4363%" y="645" width="0.2202%" height="15" fill="rgb(245,119,9)"/><text x="70.6863%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (6 samples, 0.12%)</title><rect x="70.5364%" y="629" width="0.1201%" height="15" fill="rgb(241,163,25)"/><text x="70.7864%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (55 samples, 1.10%)</title><rect x="69.7158%" y="661" width="1.1009%" height="15" fill="rgb(217,214,3)"/><text x="69.9658%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (8 samples, 0.16%)</title><rect x="70.6565%" y="645" width="0.1601%" height="15" fill="rgb(240,86,28)"/><text x="70.9065%" y="655.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.16%)</title><rect x="70.6565%" y="629" width="0.1601%" height="15" fill="rgb(215,47,9)"/><text x="70.9065%" y="639.50"></text></g><g><title>_int_malloc (8 samples, 0.16%)</title><rect x="70.6565%" y="613" width="0.1601%" height="15" fill="rgb(252,25,45)"/><text x="70.9065%" y="623.50"></text></g><g><title>sysmalloc (8 samples, 0.16%)</title><rect x="70.6565%" y="597" width="0.1601%" height="15" fill="rgb(251,164,9)"/><text x="70.9065%" y="607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (265 samples, 5.30%)</title><rect x="65.6525%" y="773" width="5.3042%" height="15" fill="rgb(233,194,0)"/><text x="65.9025%" y="783.50">std::s..</text></g><g><title>decor_mem::Shim::run_on_tcp (265 samples, 5.30%)</title><rect x="65.6525%" y="757" width="5.3042%" height="15" fill="rgb(249,111,24)"/><text x="65.9025%" y="767.50">decor_..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (265 samples, 5.30%)</title><rect x="65.6525%" y="741" width="5.3042%" height="15" fill="rgb(250,223,3)"/><text x="65.9025%" y="751.50">msql_s..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (265 samples, 5.30%)</title><rect x="65.6525%" y="725" width="5.3042%" height="15" fill="rgb(236,178,37)"/><text x="65.9025%" y="735.50">msql_s..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (112 samples, 2.24%)</title><rect x="68.7150%" y="709" width="2.2418%" height="15" fill="rgb(241,158,50)"/><text x="68.9650%" y="719.50">&lt;..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (112 samples, 2.24%)</title><rect x="68.7150%" y="693" width="2.2418%" height="15" fill="rgb(213,121,41)"/><text x="68.9650%" y="703.50">d..</text></g><g><title>decor_mem::views::Views::insert (62 samples, 1.24%)</title><rect x="69.7158%" y="677" width="1.2410%" height="15" fill="rgb(240,92,3)"/><text x="69.9658%" y="687.50"></text></g><g><title>decor_mem::views::View::insert_row (7 samples, 0.14%)</title><rect x="70.8167%" y="661" width="0.1401%" height="15" fill="rgb(205,123,3)"/><text x="71.0667%" y="671.50"></text></g><g><title>core::fmt::write (7 samples, 0.14%)</title><rect x="70.8167%" y="645" width="0.1401%" height="15" fill="rgb(205,97,47)"/><text x="71.0667%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (7 samples, 0.14%)</title><rect x="70.8167%" y="629" width="0.1401%" height="15" fill="rgb(247,152,14)"/><text x="71.0667%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.14%)</title><rect x="70.8167%" y="613" width="0.1401%" height="15" fill="rgb(248,195,53)"/><text x="71.0667%" y="623.50"></text></g><g><title>[unknown] (3,135 samples, 62.75%)</title><rect x="8.2866%" y="789" width="62.7502%" height="15" fill="rgb(226,201,16)"/><text x="8.5366%" y="799.50">[unknown]</text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.28%)</title><rect x="71.2770%" y="613" width="0.2802%" height="15" fill="rgb(205,98,0)"/><text x="71.5270%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (8 samples, 0.16%)</title><rect x="71.3971%" y="597" width="0.1601%" height="15" fill="rgb(214,191,48)"/><text x="71.6471%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.20%)</title><rect x="71.6173%" y="613" width="0.2002%" height="15" fill="rgb(237,112,39)"/><text x="71.8673%" y="623.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.18%)</title><rect x="71.6373%" y="597" width="0.1801%" height="15" fill="rgb(247,203,27)"/><text x="71.8873%" y="607.50"></text></g><g><title>_int_realloc (7 samples, 0.14%)</title><rect x="71.6773%" y="581" width="0.1401%" height="15" fill="rgb(235,124,28)"/><text x="71.9273%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.66%)</title><rect x="71.1970%" y="629" width="0.6605%" height="15" fill="rgb(208,207,46)"/><text x="71.4470%" y="639.50"></text></g><g><title>_int_free (5 samples, 0.10%)</title><rect x="71.8975%" y="613" width="0.1001%" height="15" fill="rgb(234,176,4)"/><text x="72.1475%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.14%)</title><rect x="72.0576%" y="597" width="0.1401%" height="15" fill="rgb(230,133,28)"/><text x="72.3076%" y="607.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (33 samples, 0.66%)</title><rect x="72.1978%" y="597" width="0.6605%" height="15" fill="rgb(211,137,40)"/><text x="72.4478%" y="607.50"></text></g><g><title>crypto::sha3::keccak_f (32 samples, 0.64%)</title><rect x="72.2178%" y="581" width="0.6405%" height="15" fill="rgb(254,35,13)"/><text x="72.4678%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (18 samples, 0.36%)</title><rect x="73.1185%" y="565" width="0.3603%" height="15" fill="rgb(225,49,51)"/><text x="73.3685%" y="575.50"></text></g><g><title>crypto::sha3::keccak_f (17 samples, 0.34%)</title><rect x="73.1385%" y="549" width="0.3403%" height="15" fill="rgb(251,10,15)"/><text x="73.3885%" y="559.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (21 samples, 0.42%)</title><rect x="73.0985%" y="581" width="0.4203%" height="15" fill="rgb(228,207,15)"/><text x="73.3485%" y="591.50"></text></g><g><title>crypto::digest::Digest::result_str (26 samples, 0.52%)</title><rect x="73.0184%" y="597" width="0.5204%" height="15" fill="rgb(241,99,19)"/><text x="73.2684%" y="607.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (84 samples, 1.68%)</title><rect x="72.0376%" y="613" width="1.6813%" height="15" fill="rgb(207,104,49)"/><text x="72.2876%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.12%)</title><rect x="73.5989%" y="597" width="0.1201%" height="15" fill="rgb(234,99,18)"/><text x="73.8489%" y="607.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::completed (5 samples, 0.10%)</title><rect x="73.7190%" y="613" width="0.1001%" height="15" fill="rgb(213,191,49)"/><text x="73.9690%" y="623.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (101 samples, 2.02%)</title><rect x="71.8575%" y="629" width="2.0216%" height="15" fill="rgb(210,226,19)"/><text x="72.1075%" y="639.50">&lt;..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect x="74.3595%" y="597" width="0.1401%" height="15" fill="rgb(229,97,18)"/><text x="74.6095%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.32%)</title><rect x="74.4996%" y="597" width="0.3203%" height="15" fill="rgb(211,167,15)"/><text x="74.7496%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.32%)</title><rect x="74.4996%" y="581" width="0.3203%" height="15" fill="rgb(210,169,34)"/><text x="74.7496%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.30%)</title><rect x="74.5196%" y="565" width="0.3002%" height="15" fill="rgb(241,121,31)"/><text x="74.7696%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.30%)</title><rect x="74.5196%" y="549" width="0.3002%" height="15" fill="rgb(232,40,11)"/><text x="74.7696%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.26%)</title><rect x="74.5596%" y="533" width="0.2602%" height="15" fill="rgb(205,86,26)"/><text x="74.8096%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.26%)</title><rect x="74.5596%" y="517" width="0.2602%" height="15" fill="rgb(231,126,28)"/><text x="74.8096%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.26%)</title><rect x="74.5596%" y="501" width="0.2602%" height="15" fill="rgb(219,221,18)"/><text x="74.8096%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.26%)</title><rect x="74.5596%" y="485" width="0.2602%" height="15" fill="rgb(211,40,0)"/><text x="74.8096%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (13 samples, 0.26%)</title><rect x="74.5596%" y="469" width="0.2602%" height="15" fill="rgb(239,85,43)"/><text x="74.8096%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.26%)</title><rect x="74.5596%" y="453" width="0.2602%" height="15" fill="rgb(231,55,21)"/><text x="74.8096%" y="463.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.26%)</title><rect x="74.5596%" y="437" width="0.2602%" height="15" fill="rgb(225,184,43)"/><text x="74.8096%" y="447.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.26%)</title><rect x="74.5596%" y="421" width="0.2602%" height="15" fill="rgb(251,158,41)"/><text x="74.8096%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.20%)</title><rect x="75.0801%" y="517" width="0.2002%" height="15" fill="rgb(234,159,37)"/><text x="75.3301%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.20%)</title><rect x="75.0801%" y="501" width="0.2002%" height="15" fill="rgb(216,204,22)"/><text x="75.3301%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (10 samples, 0.20%)</title><rect x="75.0801%" y="485" width="0.2002%" height="15" fill="rgb(214,17,3)"/><text x="75.3301%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.20%)</title><rect x="75.0801%" y="469" width="0.2002%" height="15" fill="rgb(212,111,17)"/><text x="75.3301%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.16%)</title><rect x="75.1201%" y="453" width="0.1601%" height="15" fill="rgb(221,157,24)"/><text x="75.3701%" y="463.50"></text></g><g><title>__GI___libc_malloc (74 samples, 1.48%)</title><rect x="75.3002%" y="405" width="1.4812%" height="15" fill="rgb(252,16,13)"/><text x="75.5502%" y="415.50"></text></g><g><title>_int_malloc (50 samples, 1.00%)</title><rect x="75.7806%" y="389" width="1.0008%" height="15" fill="rgb(221,62,2)"/><text x="76.0306%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (93 samples, 1.86%)</title><rect x="75.0000%" y="581" width="1.8615%" height="15" fill="rgb(247,87,22)"/><text x="75.2500%" y="591.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (90 samples, 1.80%)</title><rect x="75.0600%" y="565" width="1.8014%" height="15" fill="rgb(215,73,9)"/><text x="75.3100%" y="575.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (90 samples, 1.80%)</title><rect x="75.0600%" y="549" width="1.8014%" height="15" fill="rgb(207,175,33)"/><text x="75.3100%" y="559.50">a..</text></g><g><title>alloc::slice::hack::to_vec (89 samples, 1.78%)</title><rect x="75.0801%" y="533" width="1.7814%" height="15" fill="rgb(243,129,54)"/><text x="75.3301%" y="543.50">a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (79 samples, 1.58%)</title><rect x="75.2802%" y="517" width="1.5813%" height="15" fill="rgb(227,119,45)"/><text x="75.5302%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (79 samples, 1.58%)</title><rect x="75.2802%" y="501" width="1.5813%" height="15" fill="rgb(205,109,36)"/><text x="75.5302%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79 samples, 1.58%)</title><rect x="75.2802%" y="485" width="1.5813%" height="15" fill="rgb(205,6,39)"/><text x="75.5302%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (79 samples, 1.58%)</title><rect x="75.2802%" y="469" width="1.5813%" height="15" fill="rgb(221,32,16)"/><text x="75.5302%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (79 samples, 1.58%)</title><rect x="75.2802%" y="453" width="1.5813%" height="15" fill="rgb(228,144,50)"/><text x="75.5302%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 1.58%)</title><rect x="75.2802%" y="437" width="1.5813%" height="15" fill="rgb(229,201,53)"/><text x="75.5302%" y="447.50"></text></g><g><title>alloc::alloc::alloc (79 samples, 1.58%)</title><rect x="75.2802%" y="421" width="1.5813%" height="15" fill="rgb(249,153,27)"/><text x="75.5302%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (102 samples, 2.04%)</title><rect x="74.8399%" y="597" width="2.0416%" height="15" fill="rgb(227,106,25)"/><text x="75.0899%" y="607.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.26%)</title><rect x="76.8815%" y="597" width="0.2602%" height="15" fill="rgb(230,65,29)"/><text x="77.1315%" y="607.50"></text></g><g><title>core::fmt::write (10 samples, 0.20%)</title><rect x="76.9416%" y="581" width="0.2002%" height="15" fill="rgb(221,57,46)"/><text x="77.1916%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (28 samples, 0.56%)</title><rect x="77.1417%" y="597" width="0.5604%" height="15" fill="rgb(229,161,17)"/><text x="77.3917%" y="607.50"></text></g><g><title>crypto::sha3::keccak_f (21 samples, 0.42%)</title><rect x="77.2818%" y="581" width="0.4203%" height="15" fill="rgb(222,213,11)"/><text x="77.5318%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.10%)</title><rect x="77.8022%" y="501" width="0.1001%" height="15" fill="rgb(235,35,13)"/><text x="78.0522%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.10%)</title><rect x="77.8022%" y="485" width="0.1001%" height="15" fill="rgb(233,158,34)"/><text x="78.0522%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.10%)</title><rect x="77.8022%" y="469" width="0.1001%" height="15" fill="rgb(215,151,48)"/><text x="78.0522%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.10%)</title><rect x="77.8022%" y="453" width="0.1001%" height="15" fill="rgb(229,84,14)"/><text x="78.0522%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="77.8022%" y="437" width="0.1001%" height="15" fill="rgb(229,68,14)"/><text x="78.0522%" y="447.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.20%)</title><rect x="77.9023%" y="389" width="0.2002%" height="15" fill="rgb(243,106,26)"/><text x="78.1523%" y="399.50"></text></g><g><title>_int_malloc (6 samples, 0.12%)</title><rect x="77.9824%" y="373" width="0.1201%" height="15" fill="rgb(206,45,38)"/><text x="78.2324%" y="383.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (23 samples, 0.46%)</title><rect x="77.7022%" y="597" width="0.4604%" height="15" fill="rgb(226,6,15)"/><text x="77.9522%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.46%)</title><rect x="77.7022%" y="581" width="0.4604%" height="15" fill="rgb(232,22,54)"/><text x="77.9522%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.40%)</title><rect x="77.7622%" y="565" width="0.4003%" height="15" fill="rgb(229,222,32)"/><text x="78.0122%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.36%)</title><rect x="77.8022%" y="549" width="0.3603%" height="15" fill="rgb(228,62,29)"/><text x="78.0522%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.36%)</title><rect x="77.8022%" y="533" width="0.3603%" height="15" fill="rgb(251,103,34)"/><text x="78.0522%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.36%)</title><rect x="77.8022%" y="517" width="0.3603%" height="15" fill="rgb(233,12,30)"/><text x="78.0522%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.26%)</title><rect x="77.9023%" y="501" width="0.2602%" height="15" fill="rgb(238,52,0)"/><text x="78.1523%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.26%)</title><rect x="77.9023%" y="485" width="0.2602%" height="15" fill="rgb(223,98,5)"/><text x="78.1523%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.26%)</title><rect x="77.9023%" y="469" width="0.2602%" height="15" fill="rgb(228,75,37)"/><text x="78.1523%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.26%)</title><rect x="77.9023%" y="453" width="0.2602%" height="15" fill="rgb(205,115,49)"/><text x="78.1523%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (13 samples, 0.26%)</title><rect x="77.9023%" y="437" width="0.2602%" height="15" fill="rgb(250,154,43)"/><text x="78.1523%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.26%)</title><rect x="77.9023%" y="421" width="0.2602%" height="15" fill="rgb(226,43,29)"/><text x="78.1523%" y="431.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.26%)</title><rect x="77.9023%" y="405" width="0.2602%" height="15" fill="rgb(249,228,39)"/><text x="78.1523%" y="415.50"></text></g><g><title>_int_free (14 samples, 0.28%)</title><rect x="78.3827%" y="597" width="0.2802%" height="15" fill="rgb(216,79,43)"/><text x="78.6327%" y="607.50"></text></g><g><title>malloc_consolidate (5 samples, 0.10%)</title><rect x="79.0633%" y="533" width="0.1001%" height="15" fill="rgb(228,95,12)"/><text x="79.3133%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.52%)</title><rect x="78.6629%" y="597" width="0.5204%" height="15" fill="rgb(249,221,15)"/><text x="78.9129%" y="607.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.50%)</title><rect x="78.6829%" y="581" width="0.5004%" height="15" fill="rgb(233,34,13)"/><text x="78.9329%" y="591.50"></text></g><g><title>_int_realloc (24 samples, 0.48%)</title><rect x="78.7030%" y="565" width="0.4804%" height="15" fill="rgb(214,103,39)"/><text x="78.9530%" y="575.50"></text></g><g><title>_int_malloc (22 samples, 0.44%)</title><rect x="78.7430%" y="549" width="0.4404%" height="15" fill="rgb(251,126,39)"/><text x="78.9930%" y="559.50"></text></g><g><title>core::fmt::write (5 samples, 0.10%)</title><rect x="79.2434%" y="597" width="0.1001%" height="15" fill="rgb(214,216,36)"/><text x="79.4934%" y="607.50"></text></g><g><title>__GI___libc_free (7 samples, 0.14%)</title><rect x="79.5436%" y="581" width="0.1401%" height="15" fill="rgb(220,221,8)"/><text x="79.7936%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (69 samples, 1.38%)</title><rect x="79.3435%" y="597" width="1.3811%" height="15" fill="rgb(240,216,3)"/><text x="79.5935%" y="607.50"></text></g><g><title>_int_free (47 samples, 0.94%)</title><rect x="79.7838%" y="581" width="0.9408%" height="15" fill="rgb(232,218,17)"/><text x="80.0338%" y="591.50"></text></g><g><title>&lt;[u8] as rustc_serialize::hex::ToHex&gt;::to_hex (5 samples, 0.10%)</title><rect x="80.7246%" y="581" width="0.1001%" height="15" fill="rgb(229,163,45)"/><text x="80.9746%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (22 samples, 0.44%)</title><rect x="80.8647%" y="565" width="0.4404%" height="15" fill="rgb(231,110,42)"/><text x="81.1147%" y="575.50"></text></g><g><title>crypto::sha3::keccak_f (22 samples, 0.44%)</title><rect x="80.8647%" y="549" width="0.4404%" height="15" fill="rgb(208,170,48)"/><text x="81.1147%" y="559.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (28 samples, 0.56%)</title><rect x="80.8447%" y="581" width="0.5604%" height="15" fill="rgb(239,116,25)"/><text x="81.0947%" y="591.50"></text></g><g><title>crypto::digest::Digest::result_str (35 samples, 0.70%)</title><rect x="80.7246%" y="597" width="0.7006%" height="15" fill="rgb(219,200,50)"/><text x="80.9746%" y="607.50"></text></g><g><title>decor_mem::ghosts_map::answer_rows (5 samples, 0.10%)</title><rect x="81.4251%" y="597" width="0.1001%" height="15" fill="rgb(245,200,0)"/><text x="81.6751%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.18%)</title><rect x="81.6653%" y="565" width="0.1801%" height="15" fill="rgb(245,119,33)"/><text x="81.9153%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.32%)</title><rect x="81.5452%" y="581" width="0.3203%" height="15" fill="rgb(231,125,12)"/><text x="81.7952%" y="591.50"></text></g><g><title>decor_mem::graph::EntityGraph::get_children_of_parent (20 samples, 0.40%)</title><rect x="81.5252%" y="597" width="0.4003%" height="15" fill="rgb(216,96,41)"/><text x="81.7752%" y="607.50"></text></g><g><title>decor_mem::helpers::get_ghosted_col_indices_of (7 samples, 0.14%)</title><rect x="81.9255%" y="597" width="0.1401%" height="15" fill="rgb(248,43,45)"/><text x="82.1755%" y="607.50"></text></g><g><title>decor_mem::helpers::get_sensitive_col_indices_of (14 samples, 0.28%)</title><rect x="82.0657%" y="597" width="0.2802%" height="15" fill="rgb(217,222,7)"/><text x="82.3157%" y="607.50"></text></g><g><title>decor_mem::helpers::parser_val_to_u64 (5 samples, 0.10%)</title><rect x="82.3459%" y="597" width="0.1001%" height="15" fill="rgb(233,28,6)"/><text x="82.5959%" y="607.50"></text></g><g><title>_int_free (8 samples, 0.16%)</title><rect x="83.0264%" y="581" width="0.1601%" height="15" fill="rgb(231,218,15)"/><text x="83.2764%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.24%)</title><rect x="83.2066%" y="581" width="0.2402%" height="15" fill="rgb(226,171,48)"/><text x="83.4566%" y="591.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (7 samples, 0.14%)</title><rect x="83.5068%" y="565" width="0.1401%" height="15" fill="rgb(235,201,9)"/><text x="83.7568%" y="575.50"></text></g><g><title>std::time::Instant::duration_since (7 samples, 0.14%)</title><rect x="83.5068%" y="549" width="0.1401%" height="15" fill="rgb(217,80,15)"/><text x="83.7568%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (7 samples, 0.14%)</title><rect x="83.5068%" y="533" width="0.1401%" height="15" fill="rgb(219,152,8)"/><text x="83.7568%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.10%)</title><rect x="83.5468%" y="517" width="0.1001%" height="15" fill="rgb(243,107,38)"/><text x="83.7968%" y="527.50"></text></g><g><title>std::time::Instant::elapsed (15 samples, 0.30%)</title><rect x="83.5068%" y="581" width="0.3002%" height="15" fill="rgb(231,17,5)"/><text x="83.7568%" y="591.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.16%)</title><rect x="83.6469%" y="565" width="0.1601%" height="15" fill="rgb(209,25,54)"/><text x="83.8969%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (8 samples, 0.16%)</title><rect x="83.6469%" y="549" width="0.1601%" height="15" fill="rgb(219,0,2)"/><text x="83.8969%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::now (8 samples, 0.16%)</title><rect x="83.6469%" y="533" width="0.1601%" height="15" fill="rgb(246,9,5)"/><text x="83.8969%" y="543.50"></text></g><g><title>__clock_gettime_2 (5 samples, 0.10%)</title><rect x="83.7070%" y="517" width="0.1001%" height="15" fill="rgb(226,159,4)"/><text x="83.9570%" y="527.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.10%)</title><rect x="83.7070%" y="501" width="0.1001%" height="15" fill="rgb(219,175,34)"/><text x="83.9570%" y="511.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (73 samples, 1.46%)</title><rect x="82.4860%" y="597" width="1.4612%" height="15" fill="rgb(236,10,46)"/><text x="82.7360%" y="607.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.14%)</title><rect x="83.8070%" y="581" width="0.1401%" height="15" fill="rgb(240,211,16)"/><text x="84.0570%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.14%)</title><rect x="83.8070%" y="565" width="0.1401%" height="15" fill="rgb(205,3,43)"/><text x="84.0570%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (7 samples, 0.14%)</title><rect x="83.8070%" y="549" width="0.1401%" height="15" fill="rgb(245,7,22)"/><text x="84.0570%" y="559.50"></text></g><g><title>__clock_gettime_2 (6 samples, 0.12%)</title><rect x="83.8271%" y="533" width="0.1201%" height="15" fill="rgb(239,132,32)"/><text x="84.0771%" y="543.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.12%)</title><rect x="83.8271%" y="517" width="0.1201%" height="15" fill="rgb(228,202,34)"/><text x="84.0771%" y="527.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.26%)</title><rect x="84.0873%" y="405" width="0.2602%" height="15" fill="rgb(254,200,22)"/><text x="84.3373%" y="415.50"></text></g><g><title>_int_malloc (8 samples, 0.16%)</title><rect x="84.1873%" y="389" width="0.1601%" height="15" fill="rgb(219,10,39)"/><text x="84.4373%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 0.32%)</title><rect x="84.0472%" y="581" width="0.3203%" height="15" fill="rgb(226,210,39)"/><text x="84.2972%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.30%)</title><rect x="84.0673%" y="565" width="0.3002%" height="15" fill="rgb(208,219,16)"/><text x="84.3173%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.30%)</title><rect x="84.0673%" y="549" width="0.3002%" height="15" fill="rgb(216,158,51)"/><text x="84.3173%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.30%)</title><rect x="84.0673%" y="533" width="0.3002%" height="15" fill="rgb(233,14,44)"/><text x="84.3173%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.28%)</title><rect x="84.0873%" y="517" width="0.2802%" height="15" fill="rgb(237,97,39)"/><text x="84.3373%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (14 samples, 0.28%)</title><rect x="84.0873%" y="501" width="0.2802%" height="15" fill="rgb(218,198,43)"/><text x="84.3373%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.28%)</title><rect x="84.0873%" y="485" width="0.2802%" height="15" fill="rgb(231,104,20)"/><text x="84.3373%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.28%)</title><rect x="84.0873%" y="469" width="0.2802%" height="15" fill="rgb(254,36,13)"/><text x="84.3373%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (14 samples, 0.28%)</title><rect x="84.0873%" y="453" width="0.2802%" height="15" fill="rgb(248,14,50)"/><text x="84.3373%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.28%)</title><rect x="84.0873%" y="437" width="0.2802%" height="15" fill="rgb(217,107,29)"/><text x="84.3373%" y="447.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.28%)</title><rect x="84.0873%" y="421" width="0.2802%" height="15" fill="rgb(251,169,33)"/><text x="84.3373%" y="431.50"></text></g><g><title>decor_mem::views::Views::get_view_columns (24 samples, 0.48%)</title><rect x="84.0272%" y="597" width="0.4804%" height="15" fill="rgb(217,108,32)"/><text x="84.2772%" y="607.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.16%)</title><rect x="84.7478%" y="405" width="0.1601%" height="15" fill="rgb(219,66,42)"/><text x="84.9978%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.20%)</title><rect x="84.7278%" y="581" width="0.2002%" height="15" fill="rgb(206,180,7)"/><text x="84.9778%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.20%)</title><rect x="84.7278%" y="565" width="0.2002%" height="15" fill="rgb(208,226,31)"/><text x="84.9778%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.20%)</title><rect x="84.7278%" y="549" width="0.2002%" height="15" fill="rgb(218,26,49)"/><text x="84.9778%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.20%)</title><rect x="84.7278%" y="533" width="0.2002%" height="15" fill="rgb(233,197,48)"/><text x="84.9778%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.20%)</title><rect x="84.7278%" y="517" width="0.2002%" height="15" fill="rgb(252,181,51)"/><text x="84.9778%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (10 samples, 0.20%)</title><rect x="84.7278%" y="501" width="0.2002%" height="15" fill="rgb(253,90,19)"/><text x="84.9778%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.20%)</title><rect x="84.7278%" y="485" width="0.2002%" height="15" fill="rgb(215,171,30)"/><text x="84.9778%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.20%)</title><rect x="84.7278%" y="469" width="0.2002%" height="15" fill="rgb(214,222,9)"/><text x="84.9778%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (10 samples, 0.20%)</title><rect x="84.7278%" y="453" width="0.2002%" height="15" fill="rgb(223,3,22)"/><text x="84.9778%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.20%)</title><rect x="84.7278%" y="437" width="0.2002%" height="15" fill="rgb(225,196,46)"/><text x="84.9778%" y="447.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.18%)</title><rect x="84.7478%" y="421" width="0.1801%" height="15" fill="rgb(209,110,37)"/><text x="84.9978%" y="431.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (8 samples, 0.16%)</title><rect x="85.1281%" y="581" width="0.1601%" height="15" fill="rgb(249,89,12)"/><text x="85.3781%" y="591.50"></text></g><g><title>core::num::from_str_radix (8 samples, 0.16%)</title><rect x="85.1281%" y="565" width="0.1601%" height="15" fill="rgb(226,27,33)"/><text x="85.3781%" y="575.50"></text></g><g><title>decor_mem::views::Views::insert (44 samples, 0.88%)</title><rect x="84.5076%" y="597" width="0.8807%" height="15" fill="rgb(213,82,22)"/><text x="84.7576%" y="607.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (16 samples, 0.32%)</title><rect x="85.4484%" y="581" width="0.3203%" height="15" fill="rgb(248,140,0)"/><text x="85.6984%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.26%)</title><rect x="85.5084%" y="565" width="0.2602%" height="15" fill="rgb(228,106,3)"/><text x="85.7584%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (32 samples, 0.64%)</title><rect x="85.3883%" y="597" width="0.6405%" height="15" fill="rgb(209,23,37)"/><text x="85.6383%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.24%)</title><rect x="85.7886%" y="581" width="0.2402%" height="15" fill="rgb(241,93,50)"/><text x="86.0386%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.24%)</title><rect x="86.3291%" y="565" width="0.2402%" height="15" fill="rgb(253,46,43)"/><text x="86.5791%" y="575.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (17 samples, 0.34%)</title><rect x="86.2490%" y="581" width="0.3403%" height="15" fill="rgb(226,206,43)"/><text x="86.4990%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.10%)</title><rect x="86.5893%" y="581" width="0.1001%" height="15" fill="rgb(217,54,7)"/><text x="86.8393%" y="591.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (7 samples, 0.14%)</title><rect x="86.9295%" y="549" width="0.1401%" height="15" fill="rgb(223,5,52)"/><text x="87.1795%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.10%)</title><rect x="86.9696%" y="533" width="0.1001%" height="15" fill="rgb(206,52,46)"/><text x="87.2196%" y="543.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.12%)</title><rect x="87.0697%" y="549" width="0.1201%" height="15" fill="rgb(253,136,11)"/><text x="87.3197%" y="559.50"></text></g><g><title>_int_malloc (5 samples, 0.10%)</title><rect x="87.0897%" y="533" width="0.1001%" height="15" fill="rgb(208,106,33)"/><text x="87.3397%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.16%)</title><rect x="87.1898%" y="549" width="0.1601%" height="15" fill="rgb(206,54,4)"/><text x="87.4398%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (66 samples, 1.32%)</title><rect x="86.0889%" y="597" width="1.3211%" height="15" fill="rgb(213,3,15)"/><text x="86.3389%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (35 samples, 0.70%)</title><rect x="86.7094%" y="581" width="0.7006%" height="15" fill="rgb(252,211,39)"/><text x="86.9594%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (29 samples, 0.58%)</title><rect x="86.8295%" y="565" width="0.5805%" height="15" fill="rgb(223,6,36)"/><text x="87.0795%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (13 samples, 0.26%)</title><rect x="87.4099%" y="597" width="0.2602%" height="15" fill="rgb(252,169,45)"/><text x="87.6599%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (6 samples, 0.12%)</title><rect x="87.5500%" y="581" width="0.1201%" height="15" fill="rgb(212,48,26)"/><text x="87.8000%" y="591.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (690 samples, 13.81%)</title><rect x="73.8991%" y="613" width="13.8110%" height="15" fill="rgb(251,102,48)"/><text x="74.1491%" y="623.50">decor_mem::query_tran..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (692 samples, 13.85%)</title><rect x="73.8791%" y="629" width="13.8511%" height="15" fill="rgb(243,208,16)"/><text x="74.1291%" y="639.50">&lt;decor_mem::Shim as m..</text></g><g><title>_int_free (6 samples, 0.12%)</title><rect x="88.0104%" y="597" width="0.1201%" height="15" fill="rgb(219,96,24)"/><text x="88.2604%" y="607.50"></text></g><g><title>__GI_munmap (5 samples, 0.10%)</title><rect x="88.0304%" y="581" width="0.1001%" height="15" fill="rgb(219,33,29)"/><text x="88.2804%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.10%)</title><rect x="88.0304%" y="565" width="0.1001%" height="15" fill="rgb(223,176,5)"/><text x="88.2804%" y="575.50"></text></g><g><title>do_syscall_64 (5 samples, 0.10%)</title><rect x="88.0304%" y="549" width="0.1001%" height="15" fill="rgb(228,140,14)"/><text x="88.2804%" y="559.50"></text></g><g><title>__x64_sys_munmap (5 samples, 0.10%)</title><rect x="88.0304%" y="533" width="0.1001%" height="15" fill="rgb(217,179,31)"/><text x="88.2804%" y="543.50"></text></g><g><title>__vm_munmap (5 samples, 0.10%)</title><rect x="88.0304%" y="517" width="0.1001%" height="15" fill="rgb(230,9,30)"/><text x="88.2804%" y="527.50"></text></g><g><title>__do_munmap (5 samples, 0.10%)</title><rect x="88.0304%" y="501" width="0.1001%" height="15" fill="rgb(230,136,20)"/><text x="88.2804%" y="511.50"></text></g><g><title>unmap_region (5 samples, 0.10%)</title><rect x="88.0304%" y="485" width="0.1001%" height="15" fill="rgb(215,210,22)"/><text x="88.2804%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.36%)</title><rect x="88.1305%" y="533" width="0.3603%" height="15" fill="rgb(218,43,5)"/><text x="88.3805%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.38%)</title><rect x="88.1305%" y="565" width="0.3803%" height="15" fill="rgb(216,11,5)"/><text x="88.3805%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.38%)</title><rect x="88.1305%" y="549" width="0.3803%" height="15" fill="rgb(209,82,29)"/><text x="88.3805%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (20 samples, 0.40%)</title><rect x="88.1305%" y="597" width="0.4003%" height="15" fill="rgb(244,115,12)"/><text x="88.3805%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.40%)</title><rect x="88.1305%" y="581" width="0.4003%" height="15" fill="rgb(222,82,18)"/><text x="88.3805%" y="591.50"></text></g><g><title>ksys_write (7 samples, 0.14%)</title><rect x="88.6109%" y="485" width="0.1401%" height="15" fill="rgb(249,227,8)"/><text x="88.8609%" y="495.50"></text></g><g><title>vfs_write (6 samples, 0.12%)</title><rect x="88.6309%" y="469" width="0.1201%" height="15" fill="rgb(253,141,45)"/><text x="88.8809%" y="479.50"></text></g><g><title>new_sync_write (6 samples, 0.12%)</title><rect x="88.6309%" y="453" width="0.1201%" height="15" fill="rgb(234,184,4)"/><text x="88.8809%" y="463.50"></text></g><g><title>ext4_buffered_write_iter (6 samples, 0.12%)</title><rect x="88.6309%" y="437" width="0.1201%" height="15" fill="rgb(218,194,23)"/><text x="88.8809%" y="447.50"></text></g><g><title>generic_perform_write (6 samples, 0.12%)</title><rect x="88.6309%" y="421" width="0.1201%" height="15" fill="rgb(235,66,41)"/><text x="88.8809%" y="431.50"></text></g><g><title>do_syscall_64 (9 samples, 0.18%)</title><rect x="88.6109%" y="501" width="0.1801%" height="15" fill="rgb(245,217,1)"/><text x="88.8609%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (16 samples, 0.32%)</title><rect x="88.5508%" y="517" width="0.3203%" height="15" fill="rgb(229,91,1)"/><text x="88.8008%" y="527.50"></text></g><g><title>__libc_write (18 samples, 0.36%)</title><rect x="88.5308%" y="533" width="0.3603%" height="15" fill="rgb(207,101,30)"/><text x="88.7808%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (45 samples, 0.90%)</title><rect x="88.0104%" y="629" width="0.9007%" height="15" fill="rgb(223,82,49)"/><text x="88.2604%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (45 samples, 0.90%)</title><rect x="88.0104%" y="613" width="0.9007%" height="15" fill="rgb(218,167,17)"/><text x="88.2604%" y="623.50"></text></g><g><title>decor_mem::stats::print_stats (19 samples, 0.38%)</title><rect x="88.5308%" y="597" width="0.3803%" height="15" fill="rgb(208,103,14)"/><text x="88.7808%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (19 samples, 0.38%)</title><rect x="88.5308%" y="581" width="0.3803%" height="15" fill="rgb(238,20,8)"/><text x="88.7808%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (19 samples, 0.38%)</title><rect x="88.5308%" y="565" width="0.3803%" height="15" fill="rgb(218,80,54)"/><text x="88.7808%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (19 samples, 0.38%)</title><rect x="88.5308%" y="549" width="0.3803%" height="15" fill="rgb(240,144,17)"/><text x="88.7808%" y="559.50"></text></g><g><title>core::str::pattern::StrSearcher::new (6 samples, 0.12%)</title><rect x="89.0512%" y="629" width="0.1201%" height="15" fill="rgb(245,27,50)"/><text x="89.3012%" y="639.50"></text></g><g><title>__kfree_skb (5 samples, 0.10%)</title><rect x="89.4115%" y="421" width="0.1001%" height="15" fill="rgb(251,51,7)"/><text x="89.6615%" y="431.50"></text></g><g><title>sk_wait_data (29 samples, 0.58%)</title><rect x="89.5717%" y="421" width="0.5805%" height="15" fill="rgb(245,217,29)"/><text x="89.8217%" y="431.50"></text></g><g><title>wait_woken (27 samples, 0.54%)</title><rect x="89.6117%" y="405" width="0.5404%" height="15" fill="rgb(221,176,29)"/><text x="89.8617%" y="415.50"></text></g><g><title>schedule_timeout (26 samples, 0.52%)</title><rect x="89.6317%" y="389" width="0.5204%" height="15" fill="rgb(212,180,24)"/><text x="89.8817%" y="399.50"></text></g><g><title>schedule (26 samples, 0.52%)</title><rect x="89.6317%" y="373" width="0.5204%" height="15" fill="rgb(254,24,2)"/><text x="89.8817%" y="383.50"></text></g><g><title>__schedule (24 samples, 0.48%)</title><rect x="89.6717%" y="357" width="0.4804%" height="15" fill="rgb(230,100,2)"/><text x="89.9217%" y="367.50"></text></g><g><title>inet_recvmsg (44 samples, 0.88%)</title><rect x="89.3915%" y="453" width="0.8807%" height="15" fill="rgb(219,142,25)"/><text x="89.6415%" y="463.50"></text></g><g><title>tcp_recvmsg (44 samples, 0.88%)</title><rect x="89.3915%" y="437" width="0.8807%" height="15" fill="rgb(240,73,43)"/><text x="89.6415%" y="447.50"></text></g><g><title>__x64_sys_recvfrom (50 samples, 1.00%)</title><rect x="89.2914%" y="485" width="1.0008%" height="15" fill="rgb(214,114,15)"/><text x="89.5414%" y="495.50"></text></g><g><title>__sys_recvfrom (50 samples, 1.00%)</title><rect x="89.2914%" y="469" width="1.0008%" height="15" fill="rgb(207,130,4)"/><text x="89.5414%" y="479.50"></text></g><g><title>do_syscall_64 (52 samples, 1.04%)</title><rect x="89.2914%" y="501" width="1.0408%" height="15" fill="rgb(221,25,40)"/><text x="89.5414%" y="511.50"></text></g><g><title>__libc_recv (56 samples, 1.12%)</title><rect x="89.2514%" y="533" width="1.1209%" height="15" fill="rgb(241,184,7)"/><text x="89.5014%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (54 samples, 1.08%)</title><rect x="89.2914%" y="517" width="1.0809%" height="15" fill="rgb(235,159,4)"/><text x="89.5414%" y="527.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (57 samples, 1.14%)</title><rect x="89.2514%" y="597" width="1.1409%" height="15" fill="rgb(214,87,48)"/><text x="89.5014%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (57 samples, 1.14%)</title><rect x="89.2514%" y="581" width="1.1409%" height="15" fill="rgb(246,198,24)"/><text x="89.5014%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (57 samples, 1.14%)</title><rect x="89.2514%" y="565" width="1.1409%" height="15" fill="rgb(209,66,40)"/><text x="89.5014%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (57 samples, 1.14%)</title><rect x="89.2514%" y="549" width="1.1409%" height="15" fill="rgb(233,147,39)"/><text x="89.5014%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (58 samples, 1.16%)</title><rect x="89.2514%" y="613" width="1.1609%" height="15" fill="rgb(231,145,52)"/><text x="89.5014%" y="623.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (63 samples, 1.26%)</title><rect x="89.2114%" y="629" width="1.2610%" height="15" fill="rgb(206,20,26)"/><text x="89.4614%" y="639.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.18%)</title><rect x="90.9327%" y="357" width="0.1801%" height="15" fill="rgb(238,220,4)"/><text x="91.1827%" y="367.50"></text></g><g><title>dev_hard_start_xmit (7 samples, 0.14%)</title><rect x="90.9728%" y="341" width="0.1401%" height="15" fill="rgb(252,195,42)"/><text x="91.2228%" y="351.50"></text></g><g><title>loopback_xmit (7 samples, 0.14%)</title><rect x="90.9728%" y="325" width="0.1401%" height="15" fill="rgb(209,10,6)"/><text x="91.2228%" y="335.50"></text></g><g><title>psi_task_change (8 samples, 0.16%)</title><rect x="91.6733%" y="53" width="0.1601%" height="15" fill="rgb(229,3,52)"/><text x="91.9233%" y="63.50"></text></g><g><title>psi_group_change (5 samples, 0.10%)</title><rect x="91.7334%" y="37" width="0.1001%" height="15" fill="rgb(253,49,37)"/><text x="91.9834%" y="47.50"></text></g><g><title>enqueue_task (11 samples, 0.22%)</title><rect x="91.6733%" y="69" width="0.2202%" height="15" fill="rgb(240,103,49)"/><text x="91.9233%" y="79.50"></text></g><g><title>enqueue_task_fair (10 samples, 0.20%)</title><rect x="91.8935%" y="69" width="0.2002%" height="15" fill="rgb(250,182,30)"/><text x="92.1435%" y="79.50"></text></g><g><title>enqueue_entity (10 samples, 0.20%)</title><rect x="91.8935%" y="53" width="0.2002%" height="15" fill="rgb(248,8,30)"/><text x="92.1435%" y="63.50"></text></g><g><title>update_load_avg (5 samples, 0.10%)</title><rect x="91.9936%" y="37" width="0.1001%" height="15" fill="rgb(237,120,30)"/><text x="92.2436%" y="47.50"></text></g><g><title>sock_def_readable (27 samples, 0.54%)</title><rect x="91.6133%" y="133" width="0.5404%" height="15" fill="rgb(221,146,34)"/><text x="91.8633%" y="143.50"></text></g><g><title>__wake_up_common_lock (27 samples, 0.54%)</title><rect x="91.6133%" y="117" width="0.5404%" height="15" fill="rgb(242,55,13)"/><text x="91.8633%" y="127.50"></text></g><g><title>__wake_up_common (26 samples, 0.52%)</title><rect x="91.6333%" y="101" width="0.5204%" height="15" fill="rgb(242,112,31)"/><text x="91.8833%" y="111.50"></text></g><g><title>try_to_wake_up (25 samples, 0.50%)</title><rect x="91.6533%" y="85" width="0.5004%" height="15" fill="rgb(249,192,27)"/><text x="91.9033%" y="95.50"></text></g><g><title>__kfree_skb (7 samples, 0.14%)</title><rect x="92.2938%" y="117" width="0.1401%" height="15" fill="rgb(208,204,44)"/><text x="92.5438%" y="127.50"></text></g><g><title>skb_release_data (5 samples, 0.10%)</title><rect x="92.3339%" y="101" width="0.1001%" height="15" fill="rgb(208,93,54)"/><text x="92.5839%" y="111.50"></text></g><g><title>tcp_ack (23 samples, 0.46%)</title><rect x="92.1537%" y="133" width="0.4604%" height="15" fill="rgb(242,1,31)"/><text x="92.4037%" y="143.50"></text></g><g><title>tcp_v4_do_rcv (55 samples, 1.10%)</title><rect x="91.5532%" y="165" width="1.1009%" height="15" fill="rgb(241,83,25)"/><text x="91.8032%" y="175.50"></text></g><g><title>tcp_rcv_established (55 samples, 1.10%)</title><rect x="91.5532%" y="149" width="1.1009%" height="15" fill="rgb(205,169,50)"/><text x="91.8032%" y="159.50"></text></g><g><title>ip_local_deliver (62 samples, 1.24%)</title><rect x="91.4331%" y="229" width="1.2410%" height="15" fill="rgb(239,186,37)"/><text x="91.6831%" y="239.50"></text></g><g><title>ip_local_deliver_finish (62 samples, 1.24%)</title><rect x="91.4331%" y="213" width="1.2410%" height="15" fill="rgb(205,221,10)"/><text x="91.6831%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (62 samples, 1.24%)</title><rect x="91.4331%" y="197" width="1.2410%" height="15" fill="rgb(218,196,15)"/><text x="91.6831%" y="207.50"></text></g><g><title>tcp_v4_rcv (61 samples, 1.22%)</title><rect x="91.4532%" y="181" width="1.2210%" height="15" fill="rgb(218,196,35)"/><text x="91.7032%" y="191.50"></text></g><g><title>ip_finish_output2 (91 samples, 1.82%)</title><rect x="90.8927%" y="373" width="1.8215%" height="15" fill="rgb(233,63,24)"/><text x="91.1427%" y="383.50">i..</text></g><g><title>__local_bh_enable_ip (80 samples, 1.60%)</title><rect x="91.1129%" y="357" width="1.6013%" height="15" fill="rgb(225,8,4)"/><text x="91.3629%" y="367.50"></text></g><g><title>do_softirq (79 samples, 1.58%)</title><rect x="91.1329%" y="341" width="1.5813%" height="15" fill="rgb(234,105,35)"/><text x="91.3829%" y="351.50"></text></g><g><title>do_softirq_own_stack (78 samples, 1.56%)</title><rect x="91.1529%" y="325" width="1.5612%" height="15" fill="rgb(236,21,32)"/><text x="91.4029%" y="335.50"></text></g><g><title>__do_softirq (78 samples, 1.56%)</title><rect x="91.1529%" y="309" width="1.5612%" height="15" fill="rgb(228,109,6)"/><text x="91.4029%" y="319.50"></text></g><g><title>net_rx_action (74 samples, 1.48%)</title><rect x="91.2330%" y="293" width="1.4812%" height="15" fill="rgb(229,215,31)"/><text x="91.4830%" y="303.50"></text></g><g><title>process_backlog (73 samples, 1.46%)</title><rect x="91.2530%" y="277" width="1.4612%" height="15" fill="rgb(221,52,54)"/><text x="91.5030%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (70 samples, 1.40%)</title><rect x="91.3131%" y="261" width="1.4011%" height="15" fill="rgb(252,129,43)"/><text x="91.5631%" y="271.50"></text></g><g><title>ip_rcv (65 samples, 1.30%)</title><rect x="91.4131%" y="245" width="1.3010%" height="15" fill="rgb(248,183,27)"/><text x="91.6631%" y="255.50"></text></g><g><title>__ip_queue_xmit (97 samples, 1.94%)</title><rect x="90.8127%" y="405" width="1.9416%" height="15" fill="rgb(250,0,22)"/><text x="91.0627%" y="415.50">_..</text></g><g><title>ip_output (95 samples, 1.90%)</title><rect x="90.8527%" y="389" width="1.9015%" height="15" fill="rgb(213,166,10)"/><text x="91.1027%" y="399.50">i..</text></g><g><title>__tcp_transmit_skb (101 samples, 2.02%)</title><rect x="90.7926%" y="421" width="2.0216%" height="15" fill="rgb(207,163,36)"/><text x="91.0426%" y="431.50">_..</text></g><g><title>__tcp_push_pending_frames (109 samples, 2.18%)</title><rect x="90.7526%" y="453" width="2.1817%" height="15" fill="rgb(208,122,22)"/><text x="91.0026%" y="463.50">_..</text></g><g><title>tcp_write_xmit (109 samples, 2.18%)</title><rect x="90.7526%" y="437" width="2.1817%" height="15" fill="rgb(207,104,49)"/><text x="91.0026%" y="447.50">t..</text></g><g><title>__kmalloc_node_track_caller (5 samples, 0.10%)</title><rect x="92.9944%" y="421" width="0.1001%" height="15" fill="rgb(248,211,50)"/><text x="93.2444%" y="431.50"></text></g><g><title>sk_stream_alloc_skb (8 samples, 0.16%)</title><rect x="92.9544%" y="453" width="0.1601%" height="15" fill="rgb(217,13,45)"/><text x="93.2044%" y="463.50"></text></g><g><title>__alloc_skb (8 samples, 0.16%)</title><rect x="92.9544%" y="437" width="0.1601%" height="15" fill="rgb(211,216,49)"/><text x="93.2044%" y="447.50"></text></g><g><title>sock_sendmsg (132 samples, 2.64%)</title><rect x="90.5725%" y="501" width="2.6421%" height="15" fill="rgb(221,58,53)"/><text x="90.8225%" y="511.50">so..</text></g><g><title>tcp_sendmsg (131 samples, 2.62%)</title><rect x="90.5925%" y="485" width="2.6221%" height="15" fill="rgb(220,112,41)"/><text x="90.8425%" y="495.50">tc..</text></g><g><title>tcp_sendmsg_locked (127 samples, 2.54%)</title><rect x="90.6725%" y="469" width="2.5420%" height="15" fill="rgb(236,38,28)"/><text x="90.9225%" y="479.50">tc..</text></g><g><title>__x64_sys_sendto (134 samples, 2.68%)</title><rect x="90.5524%" y="533" width="2.6821%" height="15" fill="rgb(227,195,22)"/><text x="90.8024%" y="543.50">__..</text></g><g><title>__sys_sendto (134 samples, 2.68%)</title><rect x="90.5524%" y="517" width="2.6821%" height="15" fill="rgb(214,55,33)"/><text x="90.8024%" y="527.50">__..</text></g><g><title>do_syscall_64 (137 samples, 2.74%)</title><rect x="90.5524%" y="549" width="2.7422%" height="15" fill="rgb(248,80,13)"/><text x="90.8024%" y="559.50">do..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,111 samples, 22.24%)</title><rect x="71.0969%" y="741" width="22.2378%" height="15" fill="rgb(238,52,6)"/><text x="71.3469%" y="751.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,111 samples, 22.24%)</title><rect x="71.0969%" y="725" width="22.2378%" height="15" fill="rgb(224,198,47)"/><text x="71.3469%" y="735.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,111 samples, 22.24%)</title><rect x="71.0969%" y="709" width="22.2378%" height="15" fill="rgb(233,171,20)"/><text x="71.3469%" y="719.50">core::ops::function::FnOnce::call_o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,111 samples, 22.24%)</title><rect x="71.0969%" y="693" width="22.2378%" height="15" fill="rgb(241,30,25)"/><text x="71.3469%" y="703.50">std::sys_common::backtrace::__rust_..</text></g><g><title>decor_mem::Shim::run_on_tcp (1,110 samples, 22.22%)</title><rect x="71.1169%" y="677" width="22.2178%" height="15" fill="rgb(207,171,38)"/><text x="71.3669%" y="687.50">decor_mem::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,110 samples, 22.22%)</title><rect x="71.1169%" y="661" width="22.2178%" height="15" fill="rgb(234,70,1)"/><text x="71.3669%" y="671.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;:..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (1,110 samples, 22.22%)</title><rect x="71.1169%" y="645" width="22.2178%" height="15" fill="rgb(232,178,18)"/><text x="71.3669%" y="655.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (143 samples, 2.86%)</title><rect x="90.4724%" y="629" width="2.8623%" height="15" fill="rgb(241,78,40)"/><text x="90.7224%" y="639.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (143 samples, 2.86%)</title><rect x="90.4724%" y="613" width="2.8623%" height="15" fill="rgb(222,35,25)"/><text x="90.7224%" y="623.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (143 samples, 2.86%)</title><rect x="90.4724%" y="597" width="2.8623%" height="15" fill="rgb(207,92,16)"/><text x="90.7224%" y="607.50">st..</text></g><g><title>__libc_send (143 samples, 2.86%)</title><rect x="90.4724%" y="581" width="2.8623%" height="15" fill="rgb(216,59,51)"/><text x="90.7224%" y="591.50">__..</text></g><g><title>entry_SYSCALL_64 (140 samples, 2.80%)</title><rect x="90.5324%" y="565" width="2.8022%" height="15" fill="rgb(213,80,28)"/><text x="90.7824%" y="575.50">en..</text></g><g><title>__GI___clone (1,115 samples, 22.32%)</title><rect x="71.0368%" y="789" width="22.3179%" height="15" fill="rgb(220,93,7)"/><text x="71.2868%" y="799.50">__GI___clone</text></g><g><title>start_thread (1,115 samples, 22.32%)</title><rect x="71.0368%" y="773" width="22.3179%" height="15" fill="rgb(225,24,44)"/><text x="71.2868%" y="783.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,112 samples, 22.26%)</title><rect x="71.0969%" y="757" width="22.2578%" height="15" fill="rgb(243,74,40)"/><text x="71.3469%" y="767.50">std::sys::unix::thread::Thread::new..</text></g><g><title>__GI___libc_realloc (10 samples, 0.20%)</title><rect x="93.4147%" y="789" width="0.2002%" height="15" fill="rgb(228,39,7)"/><text x="93.6647%" y="799.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.12%)</title><rect x="93.6749%" y="789" width="0.1201%" height="15" fill="rgb(227,79,8)"/><text x="93.9249%" y="799.50"></text></g><g><title>__perf_event_task_sched_in (230 samples, 4.60%)</title><rect x="94.1153%" y="325" width="4.6037%" height="15" fill="rgb(236,58,11)"/><text x="94.3653%" y="335.50">__per..</text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 4.60%)</title><rect x="94.1153%" y="309" width="4.6037%" height="15" fill="rgb(249,63,35)"/><text x="94.3653%" y="319.50">__int..</text></g><g><title>native_write_msr (230 samples, 4.60%)</title><rect x="94.1153%" y="293" width="4.6037%" height="15" fill="rgb(252,114,16)"/><text x="94.3653%" y="303.50">nativ..</text></g><g><title>finish_task_switch (235 samples, 4.70%)</title><rect x="94.0352%" y="341" width="4.7038%" height="15" fill="rgb(254,151,24)"/><text x="94.2852%" y="351.50">finis..</text></g><g><title>__x64_sys_sched_setaffinity (237 samples, 4.74%)</title><rect x="94.0152%" y="469" width="4.7438%" height="15" fill="rgb(253,54,39)"/><text x="94.2652%" y="479.50">__x64_..</text></g><g><title>sched_setaffinity (237 samples, 4.74%)</title><rect x="94.0152%" y="453" width="4.7438%" height="15" fill="rgb(243,25,45)"/><text x="94.2652%" y="463.50">sched_..</text></g><g><title>__set_cpus_allowed_ptr (236 samples, 4.72%)</title><rect x="94.0352%" y="437" width="4.7238%" height="15" fill="rgb(234,134,9)"/><text x="94.2852%" y="447.50">__set_..</text></g><g><title>stop_one_cpu (236 samples, 4.72%)</title><rect x="94.0352%" y="421" width="4.7238%" height="15" fill="rgb(227,166,31)"/><text x="94.2852%" y="431.50">stop_o..</text></g><g><title>cpu_stop_queue_work (236 samples, 4.72%)</title><rect x="94.0352%" y="405" width="4.7238%" height="15" fill="rgb(245,143,41)"/><text x="94.2852%" y="415.50">cpu_st..</text></g><g><title>preempt_schedule_thunk (236 samples, 4.72%)</title><rect x="94.0352%" y="389" width="4.7238%" height="15" fill="rgb(238,181,32)"/><text x="94.2852%" y="399.50">preemp..</text></g><g><title>preempt_schedule_common (236 samples, 4.72%)</title><rect x="94.0352%" y="373" width="4.7238%" height="15" fill="rgb(224,113,18)"/><text x="94.2852%" y="383.50">preemp..</text></g><g><title>__schedule (236 samples, 4.72%)</title><rect x="94.0352%" y="357" width="4.7238%" height="15" fill="rgb(240,229,28)"/><text x="94.2852%" y="367.50">__sche..</text></g><g><title>hwloc::Topology::new (242 samples, 4.84%)</title><rect x="93.9351%" y="613" width="4.8439%" height="15" fill="rgb(250,185,3)"/><text x="94.1851%" y="623.50">hwloc:..</text></g><g><title>hwloc_topology_load (242 samples, 4.84%)</title><rect x="93.9351%" y="597" width="4.8439%" height="15" fill="rgb(212,59,25)"/><text x="94.1851%" y="607.50">hwloc_..</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 4.84%)</title><rect x="93.9351%" y="581" width="4.8439%" height="15" fill="rgb(221,87,20)"/><text x="94.1851%" y="591.50">[libhw..</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 4.84%)</title><rect x="93.9351%" y="565" width="4.8439%" height="15" fill="rgb(213,74,28)"/><text x="94.1851%" y="575.50">[libhw..</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 4.84%)</title><rect x="93.9351%" y="549" width="4.8439%" height="15" fill="rgb(224,132,34)"/><text x="94.1851%" y="559.50">[libhw..</text></g><g><title>hwloc_linux_set_tid_cpubind (242 samples, 4.84%)</title><rect x="93.9351%" y="533" width="4.8439%" height="15" fill="rgb(222,101,24)"/><text x="94.1851%" y="543.50">hwloc_..</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 4.80%)</title><rect x="93.9752%" y="517" width="4.8038%" height="15" fill="rgb(254,142,4)"/><text x="94.2252%" y="527.50">__GI__..</text></g><g><title>entry_SYSCALL_64 (238 samples, 4.76%)</title><rect x="94.0152%" y="501" width="4.7638%" height="15" fill="rgb(230,229,49)"/><text x="94.2652%" y="511.50">entry_..</text></g><g><title>do_syscall_64 (238 samples, 4.76%)</title><rect x="94.0152%" y="485" width="4.7638%" height="15" fill="rgb(238,70,47)"/><text x="94.2652%" y="495.50">do_sys..</text></g><g><title>__libc_start_main (254 samples, 5.08%)</title><rect x="93.8551%" y="773" width="5.0841%" height="15" fill="rgb(231,160,17)"/><text x="94.1051%" y="783.50">__libc..</text></g><g><title>main (254 samples, 5.08%)</title><rect x="93.8551%" y="757" width="5.0841%" height="15" fill="rgb(218,68,53)"/><text x="94.1051%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (254 samples, 5.08%)</title><rect x="93.8551%" y="741" width="5.0841%" height="15" fill="rgb(236,111,10)"/><text x="94.1051%" y="751.50">std::r..</text></g><g><title>std::panic::catch_unwind (254 samples, 5.08%)</title><rect x="93.8551%" y="725" width="5.0841%" height="15" fill="rgb(224,34,41)"/><text x="94.1051%" y="735.50">std::p..</text></g><g><title>std::panicking::try (254 samples, 5.08%)</title><rect x="93.8551%" y="709" width="5.0841%" height="15" fill="rgb(241,118,19)"/><text x="94.1051%" y="719.50">std::p..</text></g><g><title>std::panicking::try::do_call (254 samples, 5.08%)</title><rect x="93.8551%" y="693" width="5.0841%" height="15" fill="rgb(238,129,25)"/><text x="94.1051%" y="703.50">std::p..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (254 samples, 5.08%)</title><rect x="93.8551%" y="677" width="5.0841%" height="15" fill="rgb(238,22,31)"/><text x="94.1051%" y="687.50">core::..</text></g><g><title>std::rt::lang_start::_{{closure}} (254 samples, 5.08%)</title><rect x="93.8551%" y="661" width="5.0841%" height="15" fill="rgb(222,174,48)"/><text x="94.1051%" y="671.50">std::r..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (254 samples, 5.08%)</title><rect x="93.8551%" y="645" width="5.0841%" height="15" fill="rgb(206,152,40)"/><text x="94.1051%" y="655.50">std::s..</text></g><g><title>lobsters_microbenchmarks::main (254 samples, 5.08%)</title><rect x="93.8551%" y="629" width="5.0841%" height="15" fill="rgb(218,99,54)"/><text x="94.1051%" y="639.50">lobste..</text></g><g><title>_start (255 samples, 5.10%)</title><rect x="93.8551%" y="789" width="5.1041%" height="15" fill="rgb(220,174,26)"/><text x="94.1051%" y="799.50">_start</text></g><g><title>anon.960a13ca7ab009bec3b8abcb1d4e7596.8.llvm.1955666761421357642 (10 samples, 0.20%)</title><rect x="99.0192%" y="789" width="0.2002%" height="15" fill="rgb(245,116,9)"/><text x="99.2692%" y="799.50"></text></g><g><title>_int_realloc (10 samples, 0.20%)</title><rect x="99.0192%" y="773" width="0.2002%" height="15" fill="rgb(209,72,35)"/><text x="99.2692%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.10%)</title><rect x="99.3595%" y="789" width="0.1001%" height="15" fill="rgb(226,126,21)"/><text x="99.6095%" y="799.50"></text></g><g><title>page_fault (19 samples, 0.38%)</title><rect x="99.4796%" y="789" width="0.3803%" height="15" fill="rgb(227,192,1)"/><text x="99.7296%" y="799.50"></text></g><g><title>lobsters-microb (4,990 samples, 99.88%)</title><rect x="0.0000%" y="805" width="99.8799%" height="15" fill="rgb(237,180,29)"/><text x="0.2500%" y="815.50">lobsters-microb</text></g><g><title>all (4,996 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(230,197,35)"/><text x="0.2500%" y="831.50"></text></g><g><title>perf (6 samples, 0.12%)</title><rect x="99.8799%" y="805" width="0.1201%" height="15" fill="rgb(246,193,31)"/><text x="100.1299%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.12%)</title><rect x="99.8799%" y="789" width="0.1201%" height="15" fill="rgb(241,36,4)"/><text x="100.1299%" y="799.50"></text></g><g><title>do_syscall_64 (6 samples, 0.12%)</title><rect x="99.8799%" y="773" width="0.1201%" height="15" fill="rgb(241,130,17)"/><text x="100.1299%" y="783.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.12%)</title><rect x="99.8799%" y="757" width="0.1201%" height="15" fill="rgb(206,137,32)"/><text x="100.1299%" y="767.50"></text></g><g><title>do_execve (6 samples, 0.12%)</title><rect x="99.8799%" y="741" width="0.1201%" height="15" fill="rgb(237,228,51)"/><text x="100.1299%" y="751.50"></text></g><g><title>__do_execve_file (6 samples, 0.12%)</title><rect x="99.8799%" y="725" width="0.1201%" height="15" fill="rgb(243,6,42)"/><text x="100.1299%" y="735.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.12%)</title><rect x="99.8799%" y="709" width="0.1201%" height="15" fill="rgb(251,74,28)"/><text x="100.1299%" y="719.50"></text></g><g><title>load_elf_binary (6 samples, 0.12%)</title><rect x="99.8799%" y="693" width="0.1201%" height="15" fill="rgb(218,20,49)"/><text x="100.1299%" y="703.50"></text></g><g><title>setup_new_exec (6 samples, 0.12%)</title><rect x="99.8799%" y="677" width="0.1201%" height="15" fill="rgb(238,28,14)"/><text x="100.1299%" y="687.50"></text></g><g><title>perf_event_exec (6 samples, 0.12%)</title><rect x="99.8799%" y="661" width="0.1201%" height="15" fill="rgb(229,40,46)"/><text x="100.1299%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.10%)</title><rect x="99.8999%" y="645" width="0.1001%" height="15" fill="rgb(244,195,20)"/><text x="100.1499%" y="655.50"></text></g><g><title>native_write_msr (5 samples, 0.10%)</title><rect x="99.8999%" y="629" width="0.1001%" height="15" fill="rgb(253,56,35)"/><text x="100.1499%" y="639.50"></text></g></svg></svg>