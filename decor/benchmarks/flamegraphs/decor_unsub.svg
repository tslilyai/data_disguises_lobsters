<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (9 samples, 0.11%)</title><rect x="0.0607%" y="773" width="0.1093%" height="15" fill="rgb(227,0,7)"/><text x="0.3107%" y="783.50"></text></g><g><title>[[stack]] (11 samples, 0.13%)</title><rect x="0.1701%" y="773" width="0.1336%" height="15" fill="rgb(217,0,24)"/><text x="0.4201%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (30 samples, 0.36%)</title><rect x="0.3037%" y="757" width="0.3644%" height="15" fill="rgb(221,193,54)"/><text x="0.5537%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (38 samples, 0.46%)</title><rect x="0.7167%" y="757" width="0.4616%" height="15" fill="rgb(248,212,6)"/><text x="0.9667%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="1.0690%" y="741" width="0.1093%" height="15" fill="rgb(208,68,35)"/><text x="1.3190%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.11%)</title><rect x="1.0690%" y="725" width="0.1093%" height="15" fill="rgb(232,128,0)"/><text x="1.3190%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="1.0690%" y="709" width="0.1093%" height="15" fill="rgb(207,160,47)"/><text x="1.3190%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="1.6399%" y="757" width="0.1093%" height="15" fill="rgb(228,23,34)"/><text x="1.8899%" y="767.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.32%)</title><rect x="1.9679%" y="757" width="0.3158%" height="15" fill="rgb(218,30,26)"/><text x="2.2179%" y="767.50"></text></g><g><title>__GI___libc_realloc (23 samples, 0.28%)</title><rect x="2.2838%" y="757" width="0.2794%" height="15" fill="rgb(220,122,19)"/><text x="2.5338%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.24%)</title><rect x="2.6968%" y="757" width="0.2430%" height="15" fill="rgb(250,228,42)"/><text x="2.9468%" y="767.50"></text></g><g><title>_int_free (53 samples, 0.64%)</title><rect x="3.0005%" y="757" width="0.6438%" height="15" fill="rgb(240,193,28)"/><text x="3.2505%" y="767.50"></text></g><g><title>_int_malloc (15 samples, 0.18%)</title><rect x="3.6443%" y="757" width="0.1822%" height="15" fill="rgb(216,20,37)"/><text x="3.8943%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.47%)</title><rect x="3.8508%" y="757" width="0.4738%" height="15" fill="rgb(206,188,39)"/><text x="4.1008%" y="767.50"></text></g><g><title>core::fmt::write (22 samples, 0.27%)</title><rect x="4.5432%" y="757" width="0.2672%" height="15" fill="rgb(217,207,13)"/><text x="4.7932%" y="767.50"></text></g><g><title>decor_mem::helpers::str_ident_match (18 samples, 0.22%)</title><rect x="5.0413%" y="757" width="0.2187%" height="15" fill="rgb(231,73,38)"/><text x="5.2913%" y="767.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (18 samples, 0.22%)</title><rect x="5.0413%" y="741" width="0.2187%" height="15" fill="rgb(225,20,46)"/><text x="5.2913%" y="751.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (30 samples, 0.36%)</title><rect x="5.4786%" y="757" width="0.3644%" height="15" fill="rgb(210,31,41)"/><text x="5.7286%" y="767.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (68 samples, 0.83%)</title><rect x="5.9402%" y="757" width="0.8260%" height="15" fill="rgb(221,200,47)"/><text x="6.1902%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (22 samples, 0.27%)</title><rect x="7.3737%" y="757" width="0.2672%" height="15" fill="rgb(226,26,5)"/><text x="7.6237%" y="767.50"></text></g><g><title>[anon] (624 samples, 7.58%)</title><rect x="0.3037%" y="773" width="7.5802%" height="15" fill="rgb(249,33,26)"/><text x="0.5537%" y="783.50">[anon]</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.18%)</title><rect x="8.2847%" y="757" width="0.1822%" height="15" fill="rgb(235,183,28)"/><text x="8.5347%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (54 samples, 0.66%)</title><rect x="7.9203%" y="773" width="0.6560%" height="15" fill="rgb(221,5,38)"/><text x="8.1703%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.21%)</title><rect x="8.6856%" y="757" width="0.2065%" height="15" fill="rgb(247,18,42)"/><text x="8.9356%" y="767.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 0.11%)</title><rect x="9.0865%" y="501" width="0.1093%" height="15" fill="rgb(241,131,45)"/><text x="9.3365%" y="511.50"></text></g><g><title>__sys_recvfrom (9 samples, 0.11%)</title><rect x="9.0865%" y="485" width="0.1093%" height="15" fill="rgb(249,31,29)"/><text x="9.3365%" y="495.50"></text></g><g><title>inet_recvmsg (9 samples, 0.11%)</title><rect x="9.0865%" y="469" width="0.1093%" height="15" fill="rgb(225,111,53)"/><text x="9.3365%" y="479.50"></text></g><g><title>tcp_recvmsg (9 samples, 0.11%)</title><rect x="9.0865%" y="453" width="0.1093%" height="15" fill="rgb(238,160,17)"/><text x="9.3365%" y="463.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 0.12%)</title><rect x="9.0865%" y="629" width="0.1215%" height="15" fill="rgb(214,148,48)"/><text x="9.3365%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 0.12%)</title><rect x="9.0865%" y="613" width="0.1215%" height="15" fill="rgb(232,36,49)"/><text x="9.3365%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 0.12%)</title><rect x="9.0865%" y="597" width="0.1215%" height="15" fill="rgb(209,103,24)"/><text x="9.3365%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 0.12%)</title><rect x="9.0865%" y="581" width="0.1215%" height="15" fill="rgb(229,88,8)"/><text x="9.3365%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 0.12%)</title><rect x="9.0865%" y="565" width="0.1215%" height="15" fill="rgb(213,181,19)"/><text x="9.3365%" y="575.50"></text></g><g><title>__libc_recv (10 samples, 0.12%)</title><rect x="9.0865%" y="549" width="0.1215%" height="15" fill="rgb(254,191,54)"/><text x="9.3365%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.12%)</title><rect x="9.0865%" y="533" width="0.1215%" height="15" fill="rgb(241,83,37)"/><text x="9.3365%" y="543.50"></text></g><g><title>do_syscall_64 (10 samples, 0.12%)</title><rect x="9.0865%" y="517" width="0.1215%" height="15" fill="rgb(233,36,39)"/><text x="9.3365%" y="527.50"></text></g><g><title>mysql::conn::Conn::read_packet (12 samples, 0.15%)</title><rect x="9.0865%" y="661" width="0.1458%" height="15" fill="rgb(226,3,54)"/><text x="9.3365%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.15%)</title><rect x="9.0865%" y="645" width="0.1458%" height="15" fill="rgb(245,192,40)"/><text x="9.3365%" y="655.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (13 samples, 0.16%)</title><rect x="9.0865%" y="709" width="0.1579%" height="15" fill="rgb(238,167,29)"/><text x="9.3365%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (13 samples, 0.16%)</title><rect x="9.0865%" y="693" width="0.1579%" height="15" fill="rgb(232,182,51)"/><text x="9.3365%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (13 samples, 0.16%)</title><rect x="9.0865%" y="677" width="0.1579%" height="15" fill="rgb(231,60,39)"/><text x="9.3365%" y="687.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (20 samples, 0.24%)</title><rect x="9.0136%" y="757" width="0.2430%" height="15" fill="rgb(208,69,12)"/><text x="9.2636%" y="767.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (20 samples, 0.24%)</title><rect x="9.0136%" y="741" width="0.2430%" height="15" fill="rgb(235,93,37)"/><text x="9.2636%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (20 samples, 0.24%)</title><rect x="9.0136%" y="725" width="0.2430%" height="15" fill="rgb(213,116,39)"/><text x="9.2636%" y="735.50"></text></g><g><title>__GI___libc_free (12 samples, 0.15%)</title><rect x="9.5603%" y="757" width="0.1458%" height="15" fill="rgb(222,207,29)"/><text x="9.8103%" y="767.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.26%)</title><rect x="9.7060%" y="757" width="0.2551%" height="15" fill="rgb(206,96,30)"/><text x="9.9560%" y="767.50"></text></g><g><title>__libc_start_main (10 samples, 0.12%)</title><rect x="10.0948%" y="757" width="0.1215%" height="15" fill="rgb(218,138,4)"/><text x="10.3448%" y="767.50"></text></g><g><title>main (10 samples, 0.12%)</title><rect x="10.0948%" y="741" width="0.1215%" height="15" fill="rgb(250,191,14)"/><text x="10.3448%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (10 samples, 0.12%)</title><rect x="10.0948%" y="725" width="0.1215%" height="15" fill="rgb(239,60,40)"/><text x="10.3448%" y="735.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.12%)</title><rect x="10.0948%" y="709" width="0.1215%" height="15" fill="rgb(206,27,48)"/><text x="10.3448%" y="719.50"></text></g><g><title>std::panicking::try (10 samples, 0.12%)</title><rect x="10.0948%" y="693" width="0.1215%" height="15" fill="rgb(225,35,8)"/><text x="10.3448%" y="703.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.12%)</title><rect x="10.0948%" y="677" width="0.1215%" height="15" fill="rgb(250,213,24)"/><text x="10.3448%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10 samples, 0.12%)</title><rect x="10.0948%" y="661" width="0.1215%" height="15" fill="rgb(247,123,22)"/><text x="10.3448%" y="671.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (10 samples, 0.12%)</title><rect x="10.0948%" y="645" width="0.1215%" height="15" fill="rgb(231,138,38)"/><text x="10.3448%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.12%)</title><rect x="10.0948%" y="629" width="0.1215%" height="15" fill="rgb(231,145,46)"/><text x="10.3448%" y="639.50"></text></g><g><title>lobsters_microbenchmarks::main (10 samples, 0.12%)</title><rect x="10.0948%" y="613" width="0.1215%" height="15" fill="rgb(251,118,11)"/><text x="10.3448%" y="623.50"></text></g><g><title>_int_free (27 samples, 0.33%)</title><rect x="10.3134%" y="757" width="0.3280%" height="15" fill="rgb(217,147,25)"/><text x="10.5634%" y="767.50"></text></g><g><title>_int_malloc (13 samples, 0.16%)</title><rect x="10.6414%" y="757" width="0.1579%" height="15" fill="rgb(247,81,37)"/><text x="10.8914%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.15%)</title><rect x="10.8844%" y="757" width="0.1458%" height="15" fill="rgb(209,12,38)"/><text x="11.1344%" y="767.50"></text></g><g><title>core::fmt::write (13 samples, 0.16%)</title><rect x="11.2002%" y="757" width="0.1579%" height="15" fill="rgb(227,1,9)"/><text x="11.4502%" y="767.50"></text></g><g><title>crypto::digest::Digest::result_str (27 samples, 0.33%)</title><rect x="11.6011%" y="645" width="0.3280%" height="15" fill="rgb(248,47,43)"/><text x="11.8511%" y="655.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (27 samples, 0.33%)</title><rect x="11.6011%" y="629" width="0.3280%" height="15" fill="rgb(221,10,30)"/><text x="11.8511%" y="639.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (27 samples, 0.33%)</title><rect x="11.6011%" y="613" width="0.3280%" height="15" fill="rgb(210,229,1)"/><text x="11.8511%" y="623.50"></text></g><g><title>crypto::sha3::keccak_f (27 samples, 0.33%)</title><rect x="11.6011%" y="597" width="0.3280%" height="15" fill="rgb(222,148,37)"/><text x="11.8511%" y="607.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (10 samples, 0.12%)</title><rect x="11.9534%" y="645" width="0.1215%" height="15" fill="rgb(234,67,33)"/><text x="12.2034%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (10 samples, 0.12%)</title><rect x="11.9534%" y="629" width="0.1215%" height="15" fill="rgb(247,98,35)"/><text x="12.2034%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (10 samples, 0.12%)</title><rect x="11.9534%" y="613" width="0.1215%" height="15" fill="rgb(247,138,52)"/><text x="12.2034%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.11%)</title><rect x="12.0991%" y="629" width="0.1093%" height="15" fill="rgb(213,79,30)"/><text x="12.3491%" y="639.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (20 samples, 0.24%)</title><rect x="12.0748%" y="645" width="0.2430%" height="15" fill="rgb(246,177,23)"/><text x="12.3248%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (49 samples, 0.60%)</title><rect x="12.3907%" y="581" width="0.5952%" height="15" fill="rgb(230,62,27)"/><text x="12.6407%" y="591.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (56 samples, 0.68%)</title><rect x="12.3178%" y="597" width="0.6803%" height="15" fill="rgb(216,154,8)"/><text x="12.5678%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (139 samples, 1.69%)</title><rect x="11.3581%" y="757" width="1.6885%" height="15" fill="rgb(244,35,45)"/><text x="11.6081%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (139 samples, 1.69%)</title><rect x="11.3581%" y="741" width="1.6885%" height="15" fill="rgb(251,115,12)"/><text x="11.6081%" y="751.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (139 samples, 1.69%)</title><rect x="11.3581%" y="725" width="1.6885%" height="15" fill="rgb(240,54,50)"/><text x="11.6081%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (139 samples, 1.69%)</title><rect x="11.3581%" y="709" width="1.6885%" height="15" fill="rgb(233,84,52)"/><text x="11.6081%" y="719.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (139 samples, 1.69%)</title><rect x="11.3581%" y="693" width="1.6885%" height="15" fill="rgb(207,117,47)"/><text x="11.6081%" y="703.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (135 samples, 1.64%)</title><rect x="11.4067%" y="677" width="1.6399%" height="15" fill="rgb(249,43,39)"/><text x="11.6567%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (135 samples, 1.64%)</title><rect x="11.4067%" y="661" width="1.6399%" height="15" fill="rgb(209,38,44)"/><text x="11.6567%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (60 samples, 0.73%)</title><rect x="12.3178%" y="645" width="0.7289%" height="15" fill="rgb(236,212,23)"/><text x="12.5678%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (60 samples, 0.73%)</title><rect x="12.3178%" y="629" width="0.7289%" height="15" fill="rgb(242,79,21)"/><text x="12.5678%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (60 samples, 0.73%)</title><rect x="12.3178%" y="613" width="0.7289%" height="15" fill="rgb(211,96,35)"/><text x="12.5678%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (21 samples, 0.26%)</title><rect x="13.0466%" y="757" width="0.2551%" height="15" fill="rgb(253,215,40)"/><text x="13.2966%" y="767.50"></text></g><g><title>sock_def_readable (17 samples, 0.21%)</title><rect x="13.8605%" y="117" width="0.2065%" height="15" fill="rgb(211,81,21)"/><text x="14.1105%" y="127.50"></text></g><g><title>__wake_up_common_lock (17 samples, 0.21%)</title><rect x="13.8605%" y="101" width="0.2065%" height="15" fill="rgb(208,190,38)"/><text x="14.1105%" y="111.50"></text></g><g><title>__wake_up_common (17 samples, 0.21%)</title><rect x="13.8605%" y="85" width="0.2065%" height="15" fill="rgb(235,213,38)"/><text x="14.1105%" y="95.50"></text></g><g><title>pollwake (17 samples, 0.21%)</title><rect x="13.8605%" y="69" width="0.2065%" height="15" fill="rgb(237,122,38)"/><text x="14.1105%" y="79.50"></text></g><g><title>try_to_wake_up (16 samples, 0.19%)</title><rect x="13.8727%" y="53" width="0.1944%" height="15" fill="rgb(244,218,35)"/><text x="14.1227%" y="63.50"></text></g><g><title>__netif_receive_skb_one_core (36 samples, 0.44%)</title><rect x="13.7269%" y="245" width="0.4373%" height="15" fill="rgb(240,68,47)"/><text x="13.9769%" y="255.50"></text></g><g><title>ip_rcv (35 samples, 0.43%)</title><rect x="13.7391%" y="229" width="0.4252%" height="15" fill="rgb(210,16,53)"/><text x="13.9891%" y="239.50"></text></g><g><title>ip_local_deliver (35 samples, 0.43%)</title><rect x="13.7391%" y="213" width="0.4252%" height="15" fill="rgb(235,124,12)"/><text x="13.9891%" y="223.50"></text></g><g><title>ip_local_deliver_finish (35 samples, 0.43%)</title><rect x="13.7391%" y="197" width="0.4252%" height="15" fill="rgb(224,169,11)"/><text x="13.9891%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (35 samples, 0.43%)</title><rect x="13.7391%" y="181" width="0.4252%" height="15" fill="rgb(250,166,2)"/><text x="13.9891%" y="191.50"></text></g><g><title>tcp_v4_rcv (35 samples, 0.43%)</title><rect x="13.7391%" y="165" width="0.4252%" height="15" fill="rgb(242,216,29)"/><text x="13.9891%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (28 samples, 0.34%)</title><rect x="13.8241%" y="149" width="0.3401%" height="15" fill="rgb(230,116,27)"/><text x="14.0741%" y="159.50"></text></g><g><title>tcp_rcv_established (28 samples, 0.34%)</title><rect x="13.8241%" y="133" width="0.3401%" height="15" fill="rgb(228,99,48)"/><text x="14.0741%" y="143.50"></text></g><g><title>do_softirq (41 samples, 0.50%)</title><rect x="13.6783%" y="325" width="0.4981%" height="15" fill="rgb(253,11,6)"/><text x="13.9283%" y="335.50"></text></g><g><title>do_softirq_own_stack (41 samples, 0.50%)</title><rect x="13.6783%" y="309" width="0.4981%" height="15" fill="rgb(247,143,39)"/><text x="13.9283%" y="319.50"></text></g><g><title>__do_softirq (40 samples, 0.49%)</title><rect x="13.6905%" y="293" width="0.4859%" height="15" fill="rgb(236,97,10)"/><text x="13.9405%" y="303.50"></text></g><g><title>net_rx_action (38 samples, 0.46%)</title><rect x="13.7148%" y="277" width="0.4616%" height="15" fill="rgb(233,208,19)"/><text x="13.9648%" y="287.50"></text></g><g><title>process_backlog (37 samples, 0.45%)</title><rect x="13.7269%" y="261" width="0.4495%" height="15" fill="rgb(216,164,2)"/><text x="13.9769%" y="271.50"></text></g><g><title>ip_finish_output2 (49 samples, 0.60%)</title><rect x="13.5933%" y="357" width="0.5952%" height="15" fill="rgb(220,129,5)"/><text x="13.8433%" y="367.50"></text></g><g><title>__local_bh_enable_ip (42 samples, 0.51%)</title><rect x="13.6783%" y="341" width="0.5102%" height="15" fill="rgb(242,17,10)"/><text x="13.9283%" y="351.50"></text></g><g><title>__ip_queue_xmit (55 samples, 0.67%)</title><rect x="13.5326%" y="389" width="0.6681%" height="15" fill="rgb(242,107,0)"/><text x="13.7826%" y="399.50"></text></g><g><title>ip_output (52 samples, 0.63%)</title><rect x="13.5690%" y="373" width="0.6317%" height="15" fill="rgb(251,28,31)"/><text x="13.8190%" y="383.50"></text></g><g><title>__tcp_push_pending_frames (61 samples, 0.74%)</title><rect x="13.4840%" y="437" width="0.7410%" height="15" fill="rgb(233,223,10)"/><text x="13.7340%" y="447.50"></text></g><g><title>tcp_write_xmit (61 samples, 0.74%)</title><rect x="13.4840%" y="421" width="0.7410%" height="15" fill="rgb(215,21,27)"/><text x="13.7340%" y="431.50"></text></g><g><title>__tcp_transmit_skb (57 samples, 0.69%)</title><rect x="13.5326%" y="405" width="0.6924%" height="15" fill="rgb(232,23,21)"/><text x="13.7826%" y="415.50"></text></g><g><title>do_syscall_64 (70 samples, 0.85%)</title><rect x="13.4475%" y="533" width="0.8503%" height="15" fill="rgb(244,5,23)"/><text x="13.6975%" y="543.50"></text></g><g><title>__x64_sys_sendto (70 samples, 0.85%)</title><rect x="13.4475%" y="517" width="0.8503%" height="15" fill="rgb(226,81,46)"/><text x="13.6975%" y="527.50"></text></g><g><title>__sys_sendto (70 samples, 0.85%)</title><rect x="13.4475%" y="501" width="0.8503%" height="15" fill="rgb(247,70,30)"/><text x="13.6975%" y="511.50"></text></g><g><title>sock_sendmsg (70 samples, 0.85%)</title><rect x="13.4475%" y="485" width="0.8503%" height="15" fill="rgb(212,68,19)"/><text x="13.6975%" y="495.50"></text></g><g><title>tcp_sendmsg (68 samples, 0.83%)</title><rect x="13.4718%" y="469" width="0.8260%" height="15" fill="rgb(240,187,13)"/><text x="13.7218%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (67 samples, 0.81%)</title><rect x="13.4840%" y="453" width="0.8139%" height="15" fill="rgb(223,113,26)"/><text x="13.7340%" y="463.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (80 samples, 0.97%)</title><rect x="13.3382%" y="661" width="0.9718%" height="15" fill="rgb(206,192,2)"/><text x="13.5882%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (80 samples, 0.97%)</title><rect x="13.3382%" y="645" width="0.9718%" height="15" fill="rgb(241,108,4)"/><text x="13.5882%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (75 samples, 0.91%)</title><rect x="13.3989%" y="629" width="0.9111%" height="15" fill="rgb(247,173,49)"/><text x="13.6489%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (74 samples, 0.90%)</title><rect x="13.4111%" y="613" width="0.8989%" height="15" fill="rgb(224,114,35)"/><text x="13.6611%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (74 samples, 0.90%)</title><rect x="13.4111%" y="597" width="0.8989%" height="15" fill="rgb(245,159,27)"/><text x="13.6611%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (74 samples, 0.90%)</title><rect x="13.4111%" y="581" width="0.8989%" height="15" fill="rgb(245,172,44)"/><text x="13.6611%" y="591.50"></text></g><g><title>__libc_send (74 samples, 0.90%)</title><rect x="13.4111%" y="565" width="0.8989%" height="15" fill="rgb(236,23,11)"/><text x="13.6611%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (72 samples, 0.87%)</title><rect x="13.4354%" y="549" width="0.8746%" height="15" fill="rgb(205,117,38)"/><text x="13.6854%" y="559.50"></text></g><g><title>decor_mem::views::View::insert_into_index (11 samples, 0.13%)</title><rect x="14.3829%" y="645" width="0.1336%" height="15" fill="rgb(237,72,25)"/><text x="14.6329%" y="655.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (100 samples, 1.21%)</title><rect x="13.3382%" y="677" width="1.2148%" height="15" fill="rgb(244,70,9)"/><text x="13.5882%" y="687.50"></text></g><g><title>decor_mem::views::Views::insert (15 samples, 0.18%)</title><rect x="14.3707%" y="661" width="0.1822%" height="15" fill="rgb(217,125,39)"/><text x="14.6207%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.16%)</title><rect x="14.5530%" y="661" width="0.1579%" height="15" fill="rgb(235,36,10)"/><text x="14.8030%" y="671.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.24%)</title><rect x="14.9174%" y="453" width="0.2430%" height="15" fill="rgb(251,123,47)"/><text x="15.1674%" y="463.50"></text></g><g><title>_int_malloc (13 samples, 0.16%)</title><rect x="15.0024%" y="437" width="0.1579%" height="15" fill="rgb(221,13,13)"/><text x="15.2524%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (39 samples, 0.47%)</title><rect x="14.7109%" y="645" width="0.4738%" height="15" fill="rgb(238,131,9)"/><text x="14.9609%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (26 samples, 0.32%)</title><rect x="14.8688%" y="629" width="0.3158%" height="15" fill="rgb(211,50,8)"/><text x="15.1188%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.32%)</title><rect x="14.8688%" y="613" width="0.3158%" height="15" fill="rgb(245,182,24)"/><text x="15.1188%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (25 samples, 0.30%)</title><rect x="14.8810%" y="597" width="0.3037%" height="15" fill="rgb(242,14,37)"/><text x="15.1310%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.29%)</title><rect x="14.8931%" y="581" width="0.2915%" height="15" fill="rgb(246,228,12)"/><text x="15.1431%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 0.28%)</title><rect x="14.9052%" y="565" width="0.2794%" height="15" fill="rgb(213,55,15)"/><text x="15.1552%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (23 samples, 0.28%)</title><rect x="14.9052%" y="549" width="0.2794%" height="15" fill="rgb(209,9,3)"/><text x="15.1552%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.28%)</title><rect x="14.9052%" y="533" width="0.2794%" height="15" fill="rgb(230,59,30)"/><text x="15.1552%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.28%)</title><rect x="14.9052%" y="517" width="0.2794%" height="15" fill="rgb(209,121,21)"/><text x="15.1552%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (23 samples, 0.28%)</title><rect x="14.9052%" y="501" width="0.2794%" height="15" fill="rgb(220,109,13)"/><text x="15.1552%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.28%)</title><rect x="14.9052%" y="485" width="0.2794%" height="15" fill="rgb(232,18,1)"/><text x="15.1552%" y="495.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.28%)</title><rect x="14.9052%" y="469" width="0.2794%" height="15" fill="rgb(215,41,42)"/><text x="15.1552%" y="479.50"></text></g><g><title>malloc_consolidate (13 samples, 0.16%)</title><rect x="15.4033%" y="613" width="0.1579%" height="15" fill="rgb(224,123,36)"/><text x="15.6533%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (71 samples, 0.86%)</title><rect x="14.7109%" y="661" width="0.8625%" height="15" fill="rgb(240,125,3)"/><text x="14.9609%" y="671.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.39%)</title><rect x="15.1846%" y="645" width="0.3887%" height="15" fill="rgb(205,98,50)"/><text x="15.4346%" y="655.50"></text></g><g><title>_int_malloc (32 samples, 0.39%)</title><rect x="15.1846%" y="629" width="0.3887%" height="15" fill="rgb(205,185,37)"/><text x="15.4346%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.22%)</title><rect x="15.5734%" y="661" width="0.2187%" height="15" fill="rgb(238,207,15)"/><text x="15.8234%" y="671.50"></text></g><g><title>core::fmt::write (12 samples, 0.15%)</title><rect x="15.6463%" y="645" width="0.1458%" height="15" fill="rgb(213,199,42)"/><text x="15.8963%" y="655.50"></text></g><g><title>sock_def_readable (16 samples, 0.19%)</title><rect x="16.1322%" y="117" width="0.1944%" height="15" fill="rgb(235,201,11)"/><text x="16.3822%" y="127.50"></text></g><g><title>__wake_up_common_lock (16 samples, 0.19%)</title><rect x="16.1322%" y="101" width="0.1944%" height="15" fill="rgb(207,46,11)"/><text x="16.3822%" y="111.50"></text></g><g><title>__wake_up_common (15 samples, 0.18%)</title><rect x="16.1443%" y="85" width="0.1822%" height="15" fill="rgb(241,35,35)"/><text x="16.3943%" y="95.50"></text></g><g><title>pollwake (13 samples, 0.16%)</title><rect x="16.1686%" y="69" width="0.1579%" height="15" fill="rgb(243,32,47)"/><text x="16.4186%" y="79.50"></text></g><g><title>try_to_wake_up (12 samples, 0.15%)</title><rect x="16.1808%" y="53" width="0.1458%" height="15" fill="rgb(247,202,23)"/><text x="16.4308%" y="63.50"></text></g><g><title>ip_local_deliver (27 samples, 0.33%)</title><rect x="16.0714%" y="213" width="0.3280%" height="15" fill="rgb(219,102,11)"/><text x="16.3214%" y="223.50"></text></g><g><title>ip_local_deliver_finish (27 samples, 0.33%)</title><rect x="16.0714%" y="197" width="0.3280%" height="15" fill="rgb(243,110,44)"/><text x="16.3214%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (27 samples, 0.33%)</title><rect x="16.0714%" y="181" width="0.3280%" height="15" fill="rgb(222,74,54)"/><text x="16.3214%" y="191.50"></text></g><g><title>tcp_v4_rcv (26 samples, 0.32%)</title><rect x="16.0836%" y="165" width="0.3158%" height="15" fill="rgb(216,99,12)"/><text x="16.3336%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 0.28%)</title><rect x="16.1200%" y="149" width="0.2794%" height="15" fill="rgb(226,22,26)"/><text x="16.3700%" y="159.50"></text></g><g><title>tcp_rcv_established (23 samples, 0.28%)</title><rect x="16.1200%" y="133" width="0.2794%" height="15" fill="rgb(217,163,10)"/><text x="16.3700%" y="143.50"></text></g><g><title>do_softirq (29 samples, 0.35%)</title><rect x="16.0593%" y="325" width="0.3523%" height="15" fill="rgb(213,25,53)"/><text x="16.3093%" y="335.50"></text></g><g><title>do_softirq_own_stack (29 samples, 0.35%)</title><rect x="16.0593%" y="309" width="0.3523%" height="15" fill="rgb(252,105,26)"/><text x="16.3093%" y="319.50"></text></g><g><title>__do_softirq (29 samples, 0.35%)</title><rect x="16.0593%" y="293" width="0.3523%" height="15" fill="rgb(220,39,43)"/><text x="16.3093%" y="303.50"></text></g><g><title>net_rx_action (29 samples, 0.35%)</title><rect x="16.0593%" y="277" width="0.3523%" height="15" fill="rgb(229,68,48)"/><text x="16.3093%" y="287.50"></text></g><g><title>process_backlog (29 samples, 0.35%)</title><rect x="16.0593%" y="261" width="0.3523%" height="15" fill="rgb(252,8,32)"/><text x="16.3093%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (29 samples, 0.35%)</title><rect x="16.0593%" y="245" width="0.3523%" height="15" fill="rgb(223,20,43)"/><text x="16.3093%" y="255.50"></text></g><g><title>ip_rcv (28 samples, 0.34%)</title><rect x="16.0714%" y="229" width="0.3401%" height="15" fill="rgb(229,81,49)"/><text x="16.3214%" y="239.50"></text></g><g><title>__ip_queue_xmit (36 samples, 0.44%)</title><rect x="15.9864%" y="389" width="0.4373%" height="15" fill="rgb(236,28,36)"/><text x="16.2364%" y="399.50"></text></g><g><title>ip_output (34 samples, 0.41%)</title><rect x="16.0107%" y="373" width="0.4130%" height="15" fill="rgb(249,185,26)"/><text x="16.2607%" y="383.50"></text></g><g><title>ip_finish_output2 (34 samples, 0.41%)</title><rect x="16.0107%" y="357" width="0.4130%" height="15" fill="rgb(249,174,33)"/><text x="16.2607%" y="367.50"></text></g><g><title>__local_bh_enable_ip (30 samples, 0.36%)</title><rect x="16.0593%" y="341" width="0.3644%" height="15" fill="rgb(233,201,37)"/><text x="16.3093%" y="351.50"></text></g><g><title>__tcp_transmit_skb (40 samples, 0.49%)</title><rect x="15.9500%" y="405" width="0.4859%" height="15" fill="rgb(221,78,26)"/><text x="16.2000%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (42 samples, 0.51%)</title><rect x="15.9378%" y="437" width="0.5102%" height="15" fill="rgb(250,127,30)"/><text x="16.1878%" y="447.50"></text></g><g><title>tcp_write_xmit (42 samples, 0.51%)</title><rect x="15.9378%" y="421" width="0.5102%" height="15" fill="rgb(230,49,44)"/><text x="16.1878%" y="431.50"></text></g><g><title>sock_sendmsg (50 samples, 0.61%)</title><rect x="15.9135%" y="485" width="0.6074%" height="15" fill="rgb(229,67,23)"/><text x="16.1635%" y="495.50"></text></g><g><title>tcp_sendmsg (50 samples, 0.61%)</title><rect x="15.9135%" y="469" width="0.6074%" height="15" fill="rgb(249,83,47)"/><text x="16.1635%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (49 samples, 0.60%)</title><rect x="15.9257%" y="453" width="0.5952%" height="15" fill="rgb(215,43,3)"/><text x="16.1757%" y="463.50"></text></g><g><title>__x64_sys_sendto (51 samples, 0.62%)</title><rect x="15.9135%" y="517" width="0.6195%" height="15" fill="rgb(238,154,13)"/><text x="16.1635%" y="527.50"></text></g><g><title>__sys_sendto (51 samples, 0.62%)</title><rect x="15.9135%" y="501" width="0.6195%" height="15" fill="rgb(219,56,2)"/><text x="16.1635%" y="511.50"></text></g><g><title>do_syscall_64 (55 samples, 0.67%)</title><rect x="15.9014%" y="533" width="0.6681%" height="15" fill="rgb(233,0,4)"/><text x="16.1514%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (66 samples, 0.80%)</title><rect x="15.7920%" y="661" width="0.8017%" height="15" fill="rgb(235,30,7)"/><text x="16.0420%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (65 samples, 0.79%)</title><rect x="15.8042%" y="645" width="0.7896%" height="15" fill="rgb(250,79,13)"/><text x="16.0542%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (60 samples, 0.73%)</title><rect x="15.8649%" y="629" width="0.7289%" height="15" fill="rgb(211,146,34)"/><text x="16.1149%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (59 samples, 0.72%)</title><rect x="15.8771%" y="613" width="0.7167%" height="15" fill="rgb(228,22,38)"/><text x="16.1271%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (59 samples, 0.72%)</title><rect x="15.8771%" y="597" width="0.7167%" height="15" fill="rgb(235,168,5)"/><text x="16.1271%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (59 samples, 0.72%)</title><rect x="15.8771%" y="581" width="0.7167%" height="15" fill="rgb(221,155,16)"/><text x="16.1271%" y="591.50"></text></g><g><title>__libc_send (59 samples, 0.72%)</title><rect x="15.8771%" y="565" width="0.7167%" height="15" fill="rgb(215,215,53)"/><text x="16.1271%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (57 samples, 0.69%)</title><rect x="15.9014%" y="549" width="0.6924%" height="15" fill="rgb(223,4,10)"/><text x="16.1514%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (18 samples, 0.22%)</title><rect x="16.5938%" y="661" width="0.2187%" height="15" fill="rgb(234,103,6)"/><text x="16.8438%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.22%)</title><rect x="16.5938%" y="645" width="0.2187%" height="15" fill="rgb(227,97,0)"/><text x="16.8438%" y="655.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="16.6424%" y="629" width="0.1701%" height="15" fill="rgb(234,150,53)"/><text x="16.8924%" y="639.50"></text></g><g><title>_int_malloc (14 samples, 0.17%)</title><rect x="16.6424%" y="613" width="0.1701%" height="15" fill="rgb(228,201,54)"/><text x="16.8924%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.15%)</title><rect x="16.8124%" y="661" width="0.1458%" height="15" fill="rgb(222,22,37)"/><text x="17.0624%" y="671.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.15%)</title><rect x="16.8124%" y="645" width="0.1458%" height="15" fill="rgb(237,53,32)"/><text x="17.0624%" y="655.50"></text></g><g><title>_int_malloc (12 samples, 0.15%)</title><rect x="16.8124%" y="629" width="0.1458%" height="15" fill="rgb(233,25,53)"/><text x="17.0624%" y="639.50"></text></g><g><title>malloc_consolidate (12 samples, 0.15%)</title><rect x="16.8124%" y="613" width="0.1458%" height="15" fill="rgb(210,40,34)"/><text x="17.0624%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (12 samples, 0.15%)</title><rect x="16.8124%" y="597" width="0.1458%" height="15" fill="rgb(241,220,44)"/><text x="17.0624%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.11%)</title><rect x="16.9582%" y="629" width="0.1093%" height="15" fill="rgb(235,28,35)"/><text x="17.2082%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (14 samples, 0.17%)</title><rect x="16.9582%" y="645" width="0.1701%" height="15" fill="rgb(210,56,17)"/><text x="17.2082%" y="655.50"></text></g><g><title>core::fmt::write (50 samples, 0.61%)</title><rect x="16.9582%" y="661" width="0.6074%" height="15" fill="rgb(224,130,29)"/><text x="17.2082%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (36 samples, 0.44%)</title><rect x="17.1283%" y="645" width="0.4373%" height="15" fill="rgb(235,212,8)"/><text x="17.3783%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (33 samples, 0.40%)</title><rect x="17.1647%" y="629" width="0.4009%" height="15" fill="rgb(223,33,50)"/><text x="17.4147%" y="639.50"></text></g><g><title>core::fmt::write (10 samples, 0.12%)</title><rect x="17.4441%" y="613" width="0.1215%" height="15" fill="rgb(219,149,13)"/><text x="17.6941%" y="623.50"></text></g><g><title>alloc::fmt::format (13 samples, 0.16%)</title><rect x="17.6749%" y="645" width="0.1579%" height="15" fill="rgb(250,156,29)"/><text x="17.9249%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.12%)</title><rect x="17.7114%" y="629" width="0.1215%" height="15" fill="rgb(216,193,19)"/><text x="17.9614%" y="639.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="17.7235%" y="613" width="0.1093%" height="15" fill="rgb(216,135,14)"/><text x="17.9735%" y="623.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (27 samples, 0.33%)</title><rect x="17.6142%" y="661" width="0.3280%" height="15" fill="rgb(241,47,5)"/><text x="17.8642%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.11%)</title><rect x="17.9422%" y="645" width="0.1093%" height="15" fill="rgb(233,42,35)"/><text x="18.1922%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.18%)</title><rect x="18.1851%" y="597" width="0.1822%" height="15" fill="rgb(231,13,6)"/><text x="18.4351%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="18.2337%" y="581" width="0.1336%" height="15" fill="rgb(207,181,40)"/><text x="18.4837%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="18.2459%" y="565" width="0.1215%" height="15" fill="rgb(254,173,49)"/><text x="18.4959%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (29 samples, 0.35%)</title><rect x="18.1851%" y="613" width="0.3523%" height="15" fill="rgb(221,1,38)"/><text x="18.4351%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (43 samples, 0.52%)</title><rect x="18.0758%" y="629" width="0.5224%" height="15" fill="rgb(206,124,46)"/><text x="18.3258%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (48 samples, 0.58%)</title><rect x="18.0515%" y="645" width="0.5831%" height="15" fill="rgb(249,21,11)"/><text x="18.3015%" y="655.50"></text></g><g><title>_int_free (12 samples, 0.15%)</title><rect x="18.7925%" y="613" width="0.1458%" height="15" fill="rgb(222,201,40)"/><text x="19.0425%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 0.23%)</title><rect x="18.7561%" y="629" width="0.2308%" height="15" fill="rgb(235,61,29)"/><text x="19.0061%" y="639.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="19.2420%" y="405" width="0.1336%" height="15" fill="rgb(219,207,3)"/><text x="19.4920%" y="415.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (33 samples, 0.40%)</title><rect x="18.9869%" y="629" width="0.4009%" height="15" fill="rgb(222,56,46)"/><text x="19.2369%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.38%)</title><rect x="19.0112%" y="613" width="0.3766%" height="15" fill="rgb(239,76,54)"/><text x="19.2612%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.35%)</title><rect x="19.0355%" y="597" width="0.3523%" height="15" fill="rgb(231,124,27)"/><text x="19.2855%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.22%)</title><rect x="19.1691%" y="581" width="0.2187%" height="15" fill="rgb(249,195,6)"/><text x="19.4191%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.22%)</title><rect x="19.1691%" y="565" width="0.2187%" height="15" fill="rgb(237,174,47)"/><text x="19.4191%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.22%)</title><rect x="19.1691%" y="549" width="0.2187%" height="15" fill="rgb(206,201,31)"/><text x="19.4191%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.22%)</title><rect x="19.1691%" y="533" width="0.2187%" height="15" fill="rgb(231,57,52)"/><text x="19.4191%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.16%)</title><rect x="19.2298%" y="517" width="0.1579%" height="15" fill="rgb(248,177,22)"/><text x="19.4798%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.16%)</title><rect x="19.2298%" y="501" width="0.1579%" height="15" fill="rgb(215,211,37)"/><text x="19.4798%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.16%)</title><rect x="19.2298%" y="485" width="0.1579%" height="15" fill="rgb(241,128,51)"/><text x="19.4798%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.16%)</title><rect x="19.2298%" y="469" width="0.1579%" height="15" fill="rgb(227,165,31)"/><text x="19.4798%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (13 samples, 0.16%)</title><rect x="19.2298%" y="453" width="0.1579%" height="15" fill="rgb(228,167,24)"/><text x="19.4798%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.16%)</title><rect x="19.2298%" y="437" width="0.1579%" height="15" fill="rgb(228,143,12)"/><text x="19.4798%" y="447.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.16%)</title><rect x="19.2298%" y="421" width="0.1579%" height="15" fill="rgb(249,149,8)"/><text x="19.4798%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (29 samples, 0.35%)</title><rect x="19.4606%" y="613" width="0.3523%" height="15" fill="rgb(243,35,44)"/><text x="19.7106%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.34%)</title><rect x="19.4728%" y="597" width="0.3401%" height="15" fill="rgb(246,89,9)"/><text x="19.7228%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.33%)</title><rect x="19.4849%" y="581" width="0.3280%" height="15" fill="rgb(233,213,13)"/><text x="19.7349%" y="591.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (112 samples, 1.36%)</title><rect x="19.9466%" y="613" width="1.3605%" height="15" fill="rgb(233,141,41)"/><text x="20.1966%" y="623.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (168 samples, 2.04%)</title><rect x="19.3878%" y="629" width="2.0408%" height="15" fill="rgb(239,167,4)"/><text x="19.6378%" y="639.50">d..</text></g><g><title>decor_mem::views::View::is_indexed_col (10 samples, 0.12%)</title><rect x="21.3071%" y="613" width="0.1215%" height="15" fill="rgb(209,217,16)"/><text x="21.5571%" y="623.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (291 samples, 3.53%)</title><rect x="17.9422%" y="661" width="3.5350%" height="15" fill="rgb(219,88,35)"/><text x="18.1922%" y="671.50">dec..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (234 samples, 2.84%)</title><rect x="18.6346%" y="645" width="2.8426%" height="15" fill="rgb(220,193,23)"/><text x="18.8846%" y="655.50">de..</text></g><g><title>core::fmt::write (15 samples, 0.18%)</title><rect x="21.7201%" y="645" width="0.1822%" height="15" fill="rgb(230,90,52)"/><text x="21.9701%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (14 samples, 0.17%)</title><rect x="21.7323%" y="629" width="0.1701%" height="15" fill="rgb(252,106,19)"/><text x="21.9823%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.12%)</title><rect x="21.7809%" y="613" width="0.1215%" height="15" fill="rgb(206,74,20)"/><text x="22.0309%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.13%)</title><rect x="21.9145%" y="645" width="0.1336%" height="15" fill="rgb(230,138,44)"/><text x="22.1645%" y="655.50"></text></g><g><title>std::time::Instant::elapsed (14 samples, 0.17%)</title><rect x="22.2060%" y="645" width="0.1701%" height="15" fill="rgb(235,182,43)"/><text x="22.4560%" y="655.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.11%)</title><rect x="22.2668%" y="629" width="0.1093%" height="15" fill="rgb(242,16,51)"/><text x="22.5168%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (9 samples, 0.11%)</title><rect x="22.2668%" y="613" width="0.1093%" height="15" fill="rgb(248,9,4)"/><text x="22.5168%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (9 samples, 0.11%)</title><rect x="22.2668%" y="597" width="0.1093%" height="15" fill="rgb(210,31,22)"/><text x="22.5168%" y="607.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (78 samples, 0.95%)</title><rect x="21.4772%" y="661" width="0.9475%" height="15" fill="rgb(239,54,39)"/><text x="21.7272%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.18%)</title><rect x="22.4247%" y="645" width="0.1822%" height="15" fill="rgb(230,99,41)"/><text x="22.6747%" y="655.50"></text></g><g><title>_int_free (9 samples, 0.11%)</title><rect x="22.4976%" y="629" width="0.1093%" height="15" fill="rgb(253,106,12)"/><text x="22.7476%" y="639.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (22 samples, 0.27%)</title><rect x="22.6312%" y="645" width="0.2672%" height="15" fill="rgb(213,46,41)"/><text x="22.8812%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (10 samples, 0.12%)</title><rect x="22.7770%" y="629" width="0.1215%" height="15" fill="rgb(215,133,35)"/><text x="23.0270%" y="639.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.11%)</title><rect x="23.1171%" y="629" width="0.1093%" height="15" fill="rgb(213,28,5)"/><text x="23.3671%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.38%)</title><rect x="23.5301%" y="581" width="0.3766%" height="15" fill="rgb(215,77,49)"/><text x="23.7801%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (25 samples, 0.30%)</title><rect x="23.6030%" y="565" width="0.3037%" height="15" fill="rgb(248,100,22)"/><text x="23.8530%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (43 samples, 0.52%)</title><rect x="23.4815%" y="597" width="0.5224%" height="15" fill="rgb(208,67,9)"/><text x="23.7315%" y="607.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.13%)</title><rect x="24.1740%" y="581" width="0.1336%" height="15" fill="rgb(219,133,21)"/><text x="24.4240%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.13%)</title><rect x="24.4048%" y="565" width="0.1336%" height="15" fill="rgb(246,46,29)"/><text x="24.6548%" y="575.50"></text></g><g><title>core::fmt::write (101 samples, 1.23%)</title><rect x="23.3601%" y="629" width="1.2269%" height="15" fill="rgb(246,185,52)"/><text x="23.6101%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (99 samples, 1.20%)</title><rect x="23.3844%" y="613" width="1.2026%" height="15" fill="rgb(252,136,11)"/><text x="23.6344%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (41 samples, 0.50%)</title><rect x="24.0889%" y="597" width="0.4981%" height="15" fill="rgb(219,138,53)"/><text x="24.3389%" y="607.50"></text></g><g><title>core::fmt::write (17 samples, 0.21%)</title><rect x="24.3805%" y="581" width="0.2065%" height="15" fill="rgb(211,51,23)"/><text x="24.6305%" y="591.50"></text></g><g><title>&lt;decor_mem::views::HashedRowPtr as core::cmp::PartialEq&gt;::eq (9 samples, 0.11%)</title><rect x="24.9028%" y="613" width="0.1093%" height="15" fill="rgb(247,221,28)"/><text x="25.1528%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (55 samples, 0.67%)</title><rect x="24.5870%" y="629" width="0.6681%" height="15" fill="rgb(251,222,45)"/><text x="24.8370%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.16%)</title><rect x="25.2551%" y="629" width="0.1579%" height="15" fill="rgb(217,162,53)"/><text x="25.5051%" y="639.50"></text></g><g><title>std::time::Instant::elapsed (9 samples, 0.11%)</title><rect x="25.4130%" y="629" width="0.1093%" height="15" fill="rgb(229,93,14)"/><text x="25.6630%" y="639.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (1,011 samples, 12.28%)</title><rect x="13.3382%" y="709" width="12.2813%" height="15" fill="rgb(209,67,49)"/><text x="13.5882%" y="719.50">&lt;decor_mem::Shim a..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (1,011 samples, 12.28%)</title><rect x="13.3382%" y="693" width="12.2813%" height="15" fill="rgb(213,87,29)"/><text x="13.5882%" y="703.50">decor_mem::query_t..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (911 samples, 11.07%)</title><rect x="14.5530%" y="677" width="11.0666%" height="15" fill="rgb(205,151,52)"/><text x="14.8030%" y="687.50">decor_mem::query..</text></g><g><title>decor_mem::views::Views::delete (263 samples, 3.19%)</title><rect x="22.4247%" y="661" width="3.1948%" height="15" fill="rgb(253,215,39)"/><text x="22.6747%" y="671.50">dec..</text></g><g><title>decor_mem::views::View::update_index_and_row (224 samples, 2.72%)</title><rect x="22.8984%" y="645" width="2.7211%" height="15" fill="rgb(221,220,41)"/><text x="23.1484%" y="655.50">de..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.12%)</title><rect x="25.6438%" y="661" width="0.1215%" height="15" fill="rgb(218,133,21)"/><text x="25.8938%" y="671.50"></text></g><g><title>sock_def_readable (14 samples, 0.17%)</title><rect x="26.0326%" y="117" width="0.1701%" height="15" fill="rgb(221,193,43)"/><text x="26.2826%" y="127.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.17%)</title><rect x="26.0326%" y="101" width="0.1701%" height="15" fill="rgb(240,128,52)"/><text x="26.2826%" y="111.50"></text></g><g><title>__wake_up_common (13 samples, 0.16%)</title><rect x="26.0447%" y="85" width="0.1579%" height="15" fill="rgb(253,114,12)"/><text x="26.2947%" y="95.50"></text></g><g><title>pollwake (12 samples, 0.15%)</title><rect x="26.0569%" y="69" width="0.1458%" height="15" fill="rgb(215,223,47)"/><text x="26.3069%" y="79.50"></text></g><g><title>try_to_wake_up (12 samples, 0.15%)</title><rect x="26.0569%" y="53" width="0.1458%" height="15" fill="rgb(248,225,23)"/><text x="26.3069%" y="63.50"></text></g><g><title>ip_local_deliver (25 samples, 0.30%)</title><rect x="25.9718%" y="213" width="0.3037%" height="15" fill="rgb(250,108,0)"/><text x="26.2218%" y="223.50"></text></g><g><title>ip_local_deliver_finish (25 samples, 0.30%)</title><rect x="25.9718%" y="197" width="0.3037%" height="15" fill="rgb(228,208,7)"/><text x="26.2218%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (25 samples, 0.30%)</title><rect x="25.9718%" y="181" width="0.3037%" height="15" fill="rgb(244,45,10)"/><text x="26.2218%" y="191.50"></text></g><g><title>tcp_v4_rcv (24 samples, 0.29%)</title><rect x="25.9840%" y="165" width="0.2915%" height="15" fill="rgb(207,125,25)"/><text x="26.2340%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 0.28%)</title><rect x="25.9961%" y="149" width="0.2794%" height="15" fill="rgb(210,195,18)"/><text x="26.2461%" y="159.50"></text></g><g><title>tcp_rcv_established (23 samples, 0.28%)</title><rect x="25.9961%" y="133" width="0.2794%" height="15" fill="rgb(249,80,12)"/><text x="26.2461%" y="143.50"></text></g><g><title>__netif_receive_skb_one_core (27 samples, 0.33%)</title><rect x="25.9597%" y="245" width="0.3280%" height="15" fill="rgb(221,65,9)"/><text x="26.2097%" y="255.50"></text></g><g><title>ip_rcv (27 samples, 0.33%)</title><rect x="25.9597%" y="229" width="0.3280%" height="15" fill="rgb(235,49,36)"/><text x="26.2097%" y="239.50"></text></g><g><title>do_softirq (30 samples, 0.36%)</title><rect x="25.9354%" y="325" width="0.3644%" height="15" fill="rgb(225,32,20)"/><text x="26.1854%" y="335.50"></text></g><g><title>do_softirq_own_stack (30 samples, 0.36%)</title><rect x="25.9354%" y="309" width="0.3644%" height="15" fill="rgb(215,141,46)"/><text x="26.1854%" y="319.50"></text></g><g><title>__do_softirq (30 samples, 0.36%)</title><rect x="25.9354%" y="293" width="0.3644%" height="15" fill="rgb(250,160,47)"/><text x="26.1854%" y="303.50"></text></g><g><title>net_rx_action (28 samples, 0.34%)</title><rect x="25.9597%" y="277" width="0.3401%" height="15" fill="rgb(216,222,40)"/><text x="26.2097%" y="287.50"></text></g><g><title>process_backlog (28 samples, 0.34%)</title><rect x="25.9597%" y="261" width="0.3401%" height="15" fill="rgb(234,217,39)"/><text x="26.2097%" y="271.50"></text></g><g><title>__ip_queue_xmit (37 samples, 0.45%)</title><rect x="25.8625%" y="389" width="0.4495%" height="15" fill="rgb(207,178,40)"/><text x="26.1125%" y="399.50"></text></g><g><title>ip_output (35 samples, 0.43%)</title><rect x="25.8868%" y="373" width="0.4252%" height="15" fill="rgb(221,136,13)"/><text x="26.1368%" y="383.50"></text></g><g><title>ip_finish_output2 (33 samples, 0.40%)</title><rect x="25.9111%" y="357" width="0.4009%" height="15" fill="rgb(249,199,10)"/><text x="26.1611%" y="367.50"></text></g><g><title>__local_bh_enable_ip (31 samples, 0.38%)</title><rect x="25.9354%" y="341" width="0.3766%" height="15" fill="rgb(249,222,13)"/><text x="26.1854%" y="351.50"></text></g><g><title>__tcp_push_pending_frames (41 samples, 0.50%)</title><rect x="25.8382%" y="437" width="0.4981%" height="15" fill="rgb(244,185,38)"/><text x="26.0882%" y="447.50"></text></g><g><title>tcp_write_xmit (41 samples, 0.50%)</title><rect x="25.8382%" y="421" width="0.4981%" height="15" fill="rgb(236,202,9)"/><text x="26.0882%" y="431.50"></text></g><g><title>__tcp_transmit_skb (41 samples, 0.50%)</title><rect x="25.8382%" y="405" width="0.4981%" height="15" fill="rgb(250,229,37)"/><text x="26.0882%" y="415.50"></text></g><g><title>__x64_sys_sendto (48 samples, 0.58%)</title><rect x="25.8260%" y="517" width="0.5831%" height="15" fill="rgb(206,174,23)"/><text x="26.0760%" y="527.50"></text></g><g><title>__sys_sendto (48 samples, 0.58%)</title><rect x="25.8260%" y="501" width="0.5831%" height="15" fill="rgb(211,33,43)"/><text x="26.0760%" y="511.50"></text></g><g><title>sock_sendmsg (48 samples, 0.58%)</title><rect x="25.8260%" y="485" width="0.5831%" height="15" fill="rgb(245,58,50)"/><text x="26.0760%" y="495.50"></text></g><g><title>tcp_sendmsg (48 samples, 0.58%)</title><rect x="25.8260%" y="469" width="0.5831%" height="15" fill="rgb(244,68,36)"/><text x="26.0760%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (47 samples, 0.57%)</title><rect x="25.8382%" y="453" width="0.5709%" height="15" fill="rgb(232,229,15)"/><text x="26.0882%" y="463.50"></text></g><g><title>do_syscall_64 (50 samples, 0.61%)</title><rect x="25.8260%" y="533" width="0.6074%" height="15" fill="rgb(254,30,23)"/><text x="26.0760%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (51 samples, 0.62%)</title><rect x="25.8260%" y="549" width="0.6195%" height="15" fill="rgb(235,160,14)"/><text x="26.0760%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (57 samples, 0.69%)</title><rect x="25.7653%" y="661" width="0.6924%" height="15" fill="rgb(212,155,44)"/><text x="26.0153%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (56 samples, 0.68%)</title><rect x="25.7775%" y="645" width="0.6803%" height="15" fill="rgb(226,2,50)"/><text x="26.0275%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (55 samples, 0.67%)</title><rect x="25.7896%" y="629" width="0.6681%" height="15" fill="rgb(234,177,6)"/><text x="26.0396%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 0.63%)</title><rect x="25.8260%" y="613" width="0.6317%" height="15" fill="rgb(217,24,9)"/><text x="26.0760%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (52 samples, 0.63%)</title><rect x="25.8260%" y="597" width="0.6317%" height="15" fill="rgb(220,13,46)"/><text x="26.0760%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (52 samples, 0.63%)</title><rect x="25.8260%" y="581" width="0.6317%" height="15" fill="rgb(239,221,27)"/><text x="26.0760%" y="591.50"></text></g><g><title>__libc_send (52 samples, 0.63%)</title><rect x="25.8260%" y="565" width="0.6317%" height="15" fill="rgb(222,198,25)"/><text x="26.0760%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (20 samples, 0.24%)</title><rect x="26.4820%" y="597" width="0.2430%" height="15" fill="rgb(211,99,13)"/><text x="26.7320%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (18 samples, 0.22%)</title><rect x="26.5063%" y="581" width="0.2187%" height="15" fill="rgb(232,111,31)"/><text x="26.7563%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.11%)</title><rect x="26.7250%" y="597" width="0.1093%" height="15" fill="rgb(245,82,37)"/><text x="26.9750%" y="607.50"></text></g><g><title>alloc::fmt::format (30 samples, 0.36%)</title><rect x="26.4820%" y="661" width="0.3644%" height="15" fill="rgb(227,149,46)"/><text x="26.7320%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (30 samples, 0.36%)</title><rect x="26.4820%" y="645" width="0.3644%" height="15" fill="rgb(218,36,50)"/><text x="26.7320%" y="655.50"></text></g><g><title>core::fmt::write (30 samples, 0.36%)</title><rect x="26.4820%" y="629" width="0.3644%" height="15" fill="rgb(226,80,48)"/><text x="26.7320%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (30 samples, 0.36%)</title><rect x="26.4820%" y="613" width="0.3644%" height="15" fill="rgb(238,224,15)"/><text x="26.7320%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.39%)</title><rect x="26.8465%" y="661" width="0.3887%" height="15" fill="rgb(241,136,10)"/><text x="27.0965%" y="671.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.39%)</title><rect x="26.8465%" y="645" width="0.3887%" height="15" fill="rgb(208,32,45)"/><text x="27.0965%" y="655.50"></text></g><g><title>_int_malloc (31 samples, 0.38%)</title><rect x="26.8586%" y="629" width="0.3766%" height="15" fill="rgb(207,135,9)"/><text x="27.1086%" y="639.50"></text></g><g><title>malloc_consolidate (22 samples, 0.27%)</title><rect x="26.9679%" y="613" width="0.2672%" height="15" fill="rgb(206,86,44)"/><text x="27.2179%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (11 samples, 0.13%)</title><rect x="27.2716%" y="661" width="0.1336%" height="15" fill="rgb(245,177,15)"/><text x="27.5216%" y="671.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (152 samples, 1.85%)</title><rect x="25.6195%" y="677" width="1.8465%" height="15" fill="rgb(206,64,50)"/><text x="25.8695%" y="687.50">d..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.17%)</title><rect x="27.8547%" y="613" width="0.1701%" height="15" fill="rgb(234,36,40)"/><text x="28.1047%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (14 samples, 0.17%)</title><rect x="27.8547%" y="597" width="0.1701%" height="15" fill="rgb(213,64,8)"/><text x="28.1047%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.11%)</title><rect x="27.9155%" y="581" width="0.1093%" height="15" fill="rgb(210,75,36)"/><text x="28.1655%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.40%)</title><rect x="27.6725%" y="661" width="0.4009%" height="15" fill="rgb(229,88,21)"/><text x="27.9225%" y="671.50"></text></g><g><title>core::fmt::write (18 samples, 0.22%)</title><rect x="27.8547%" y="645" width="0.2187%" height="15" fill="rgb(252,204,47)"/><text x="28.1047%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (18 samples, 0.22%)</title><rect x="27.8547%" y="629" width="0.2187%" height="15" fill="rgb(208,77,27)"/><text x="28.1047%" y="639.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.18%)</title><rect x="28.3042%" y="645" width="0.1822%" height="15" fill="rgb(221,76,26)"/><text x="28.5542%" y="655.50"></text></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="28.3528%" y="629" width="0.1336%" height="15" fill="rgb(225,139,18)"/><text x="28.6028%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.24%)</title><rect x="28.2920%" y="661" width="0.2430%" height="15" fill="rgb(230,137,11)"/><text x="28.5420%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 0.22%)</title><rect x="28.6929%" y="581" width="0.2187%" height="15" fill="rgb(212,28,1)"/><text x="28.9429%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (17 samples, 0.21%)</title><rect x="28.7051%" y="565" width="0.2065%" height="15" fill="rgb(248,164,17)"/><text x="28.9551%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (26 samples, 0.32%)</title><rect x="28.6565%" y="597" width="0.3158%" height="15" fill="rgb(222,171,42)"/><text x="28.9065%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.13%)</title><rect x="29.4461%" y="565" width="0.1336%" height="15" fill="rgb(243,84,45)"/><text x="29.6961%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (79 samples, 0.96%)</title><rect x="28.6443%" y="629" width="0.9597%" height="15" fill="rgb(252,49,23)"/><text x="28.8943%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (78 samples, 0.95%)</title><rect x="28.6565%" y="613" width="0.9475%" height="15" fill="rgb(215,19,7)"/><text x="28.9065%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (52 samples, 0.63%)</title><rect x="28.9723%" y="597" width="0.6317%" height="15" fill="rgb(238,81,41)"/><text x="29.2223%" y="607.50"></text></g><g><title>core::fmt::write (19 samples, 0.23%)</title><rect x="29.3732%" y="581" width="0.2308%" height="15" fill="rgb(210,199,37)"/><text x="29.6232%" y="591.50"></text></g><g><title>core::fmt::write (102 samples, 1.24%)</title><rect x="28.5593%" y="661" width="1.2391%" height="15" fill="rgb(244,192,49)"/><text x="28.8093%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (96 samples, 1.17%)</title><rect x="28.6322%" y="645" width="1.1662%" height="15" fill="rgb(226,211,11)"/><text x="28.8822%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 0.19%)</title><rect x="29.6040%" y="629" width="0.1944%" height="15" fill="rgb(236,162,54)"/><text x="29.8540%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (11 samples, 0.13%)</title><rect x="29.6647%" y="613" width="0.1336%" height="15" fill="rgb(220,229,9)"/><text x="29.9147%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (20 samples, 0.24%)</title><rect x="29.7983%" y="661" width="0.2430%" height="15" fill="rgb(250,87,22)"/><text x="30.0483%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.16%)</title><rect x="29.8834%" y="645" width="0.1579%" height="15" fill="rgb(239,43,17)"/><text x="30.1334%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.16%)</title><rect x="29.8834%" y="629" width="0.1579%" height="15" fill="rgb(231,177,25)"/><text x="30.1334%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.16%)</title><rect x="29.8834%" y="613" width="0.1579%" height="15" fill="rgb(219,179,1)"/><text x="30.1334%" y="623.50"></text></g><g><title>clear_page_erms (16 samples, 0.19%)</title><rect x="31.4747%" y="453" width="0.1944%" height="15" fill="rgb(238,219,53)"/><text x="31.7247%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (28 samples, 0.34%)</title><rect x="31.3654%" y="517" width="0.3401%" height="15" fill="rgb(232,167,36)"/><text x="31.6154%" y="527.50"></text></g><g><title>get_page_from_freelist (27 samples, 0.33%)</title><rect x="31.3776%" y="501" width="0.3280%" height="15" fill="rgb(244,19,51)"/><text x="31.6276%" y="511.50"></text></g><g><title>prep_new_page (19 samples, 0.23%)</title><rect x="31.4747%" y="485" width="0.2308%" height="15" fill="rgb(224,6,22)"/><text x="31.7247%" y="495.50"></text></g><g><title>kernel_init_free_pages (19 samples, 0.23%)</title><rect x="31.4747%" y="469" width="0.2308%" height="15" fill="rgb(224,145,5)"/><text x="31.7247%" y="479.50"></text></g><g><title>alloc_pages_vma (29 samples, 0.35%)</title><rect x="31.3654%" y="533" width="0.3523%" height="15" fill="rgb(234,130,49)"/><text x="31.6154%" y="543.50"></text></g><g><title>mem_cgroup_try_charge_delay (10 samples, 0.12%)</title><rect x="31.7420%" y="533" width="0.1215%" height="15" fill="rgb(254,6,2)"/><text x="31.9920%" y="543.50"></text></g><g><title>mem_cgroup_try_charge (9 samples, 0.11%)</title><rect x="31.7541%" y="517" width="0.1093%" height="15" fill="rgb(208,96,46)"/><text x="32.0041%" y="527.50"></text></g><g><title>__handle_mm_fault (52 samples, 0.63%)</title><rect x="31.2439%" y="549" width="0.6317%" height="15" fill="rgb(239,3,39)"/><text x="31.4939%" y="559.50"></text></g><g><title>page_fault (57 samples, 0.69%)</title><rect x="31.1953%" y="597" width="0.6924%" height="15" fill="rgb(233,210,1)"/><text x="31.4453%" y="607.50"></text></g><g><title>do_user_addr_fault (57 samples, 0.69%)</title><rect x="31.1953%" y="581" width="0.6924%" height="15" fill="rgb(244,137,37)"/><text x="31.4453%" y="591.50"></text></g><g><title>handle_mm_fault (55 samples, 0.67%)</title><rect x="31.2196%" y="565" width="0.6681%" height="15" fill="rgb(240,136,2)"/><text x="31.4696%" y="575.50"></text></g><g><title>__memset_avx2_erms (84 samples, 1.02%)</title><rect x="30.9281%" y="613" width="1.0204%" height="15" fill="rgb(239,18,37)"/><text x="31.1781%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (90 samples, 1.09%)</title><rect x="30.8673%" y="629" width="1.0933%" height="15" fill="rgb(218,185,22)"/><text x="31.1173%" y="639.50"></text></g><g><title>decor_mem::views::View::insert_into_index (120 samples, 1.46%)</title><rect x="30.6001%" y="645" width="1.4577%" height="15" fill="rgb(225,218,4)"/><text x="30.8501%" y="655.50"></text></g><g><title>decor_mem::views::Views::insert (178 samples, 2.16%)</title><rect x="30.1628%" y="661" width="2.1623%" height="15" fill="rgb(230,182,32)"/><text x="30.4128%" y="671.50">d..</text></g><g><title>decor_mem::views::View::insert_row (22 samples, 0.27%)</title><rect x="32.0578%" y="645" width="0.2672%" height="15" fill="rgb(242,56,43)"/><text x="32.3078%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.13%)</title><rect x="32.1914%" y="629" width="0.1336%" height="15" fill="rgb(233,99,24)"/><text x="32.4414%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::generate_new_entities_from (403 samples, 4.90%)</title><rect x="27.4660%" y="677" width="4.8955%" height="15" fill="rgb(234,209,42)"/><text x="27.7160%" y="687.50">decor_..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (16 samples, 0.19%)</title><rect x="32.3615%" y="677" width="0.1944%" height="15" fill="rgb(227,7,12)"/><text x="32.6115%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe_child_parent_edges (21 samples, 0.26%)</title><rect x="32.5559%" y="677" width="0.2551%" height="15" fill="rgb(245,203,43)"/><text x="32.8059%" y="687.50"></text></g><g><title>decor_mem::helpers::expr_to_col (9 samples, 0.11%)</title><rect x="32.8110%" y="597" width="0.1093%" height="15" fill="rgb(238,205,33)"/><text x="33.0610%" y="607.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="32.8110%" y="581" width="0.1093%" height="15" fill="rgb(231,56,7)"/><text x="33.0610%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.11%)</title><rect x="32.8110%" y="565" width="0.1093%" height="15" fill="rgb(244,186,29)"/><text x="33.0610%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (10 samples, 0.12%)</title><rect x="32.8110%" y="629" width="0.1215%" height="15" fill="rgb(234,111,31)"/><text x="33.0610%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (10 samples, 0.12%)</title><rect x="32.8110%" y="613" width="0.1215%" height="15" fill="rgb(241,149,10)"/><text x="33.0610%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.17%)</title><rect x="32.9568%" y="613" width="0.1701%" height="15" fill="rgb(249,206,44)"/><text x="33.2068%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="33.0053%" y="597" width="0.1215%" height="15" fill="rgb(251,153,30)"/><text x="33.2553%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="33.0053%" y="581" width="0.1215%" height="15" fill="rgb(239,152,38)"/><text x="33.2553%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.12%)</title><rect x="33.0053%" y="565" width="0.1215%" height="15" fill="rgb(249,139,47)"/><text x="33.2553%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="33.0175%" y="549" width="0.1093%" height="15" fill="rgb(244,64,35)"/><text x="33.2675%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.11%)</title><rect x="33.0175%" y="533" width="0.1093%" height="15" fill="rgb(216,46,15)"/><text x="33.2675%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.11%)</title><rect x="33.0175%" y="517" width="0.1093%" height="15" fill="rgb(250,74,19)"/><text x="33.2675%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="33.0175%" y="501" width="0.1093%" height="15" fill="rgb(249,42,33)"/><text x="33.2675%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.11%)</title><rect x="33.0175%" y="485" width="0.1093%" height="15" fill="rgb(242,149,17)"/><text x="33.2675%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.11%)</title><rect x="33.0175%" y="469" width="0.1093%" height="15" fill="rgb(244,29,21)"/><text x="33.2675%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.11%)</title><rect x="33.0175%" y="453" width="0.1093%" height="15" fill="rgb(220,130,37)"/><text x="33.2675%" y="463.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.11%)</title><rect x="33.0175%" y="437" width="0.1093%" height="15" fill="rgb(211,67,2)"/><text x="33.2675%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (29 samples, 0.35%)</title><rect x="33.3090%" y="533" width="0.3523%" height="15" fill="rgb(235,68,52)"/><text x="33.5590%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (21 samples, 0.26%)</title><rect x="33.4062%" y="517" width="0.2551%" height="15" fill="rgb(246,142,3)"/><text x="33.6562%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (18 samples, 0.22%)</title><rect x="33.4427%" y="501" width="0.2187%" height="15" fill="rgb(241,25,7)"/><text x="33.6927%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (18 samples, 0.22%)</title><rect x="33.4427%" y="485" width="0.2187%" height="15" fill="rgb(242,119,39)"/><text x="33.6927%" y="495.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (10 samples, 0.12%)</title><rect x="33.5398%" y="469" width="0.1215%" height="15" fill="rgb(241,98,45)"/><text x="33.7898%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (37 samples, 0.45%)</title><rect x="33.2604%" y="565" width="0.4495%" height="15" fill="rgb(254,28,30)"/><text x="33.5104%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (37 samples, 0.45%)</title><rect x="33.2604%" y="549" width="0.4495%" height="15" fill="rgb(241,142,54)"/><text x="33.5104%" y="559.50"></text></g><g><title>decor_mem::helpers::expr_to_col (55 samples, 0.67%)</title><rect x="33.2240%" y="613" width="0.6681%" height="15" fill="rgb(222,85,15)"/><text x="33.4740%" y="623.50"></text></g><g><title>core::fmt::write (55 samples, 0.67%)</title><rect x="33.2240%" y="597" width="0.6681%" height="15" fill="rgb(210,85,47)"/><text x="33.4740%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (53 samples, 0.64%)</title><rect x="33.2483%" y="581" width="0.6438%" height="15" fill="rgb(224,206,25)"/><text x="33.4983%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.17%)</title><rect x="33.7221%" y="565" width="0.1701%" height="15" fill="rgb(243,201,19)"/><text x="33.9721%" y="575.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (97 samples, 1.18%)</title><rect x="32.8110%" y="645" width="1.1783%" height="15" fill="rgb(236,59,4)"/><text x="33.0610%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (87 samples, 1.06%)</title><rect x="32.9325%" y="629" width="1.0569%" height="15" fill="rgb(254,179,45)"/><text x="33.1825%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (101 samples, 1.23%)</title><rect x="32.8110%" y="661" width="1.2269%" height="15" fill="rgb(226,14,10)"/><text x="33.0610%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.16%)</title><rect x="34.0379%" y="629" width="0.1579%" height="15" fill="rgb(244,27,41)"/><text x="34.2879%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.16%)</title><rect x="34.0379%" y="613" width="0.1579%" height="15" fill="rgb(235,35,32)"/><text x="34.2879%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (15 samples, 0.18%)</title><rect x="34.0379%" y="645" width="0.1822%" height="15" fill="rgb(218,68,31)"/><text x="34.2879%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.17%)</title><rect x="34.2444%" y="613" width="0.1701%" height="15" fill="rgb(207,120,37)"/><text x="34.4944%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="34.2809%" y="597" width="0.1336%" height="15" fill="rgb(227,98,0)"/><text x="34.5309%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="34.2809%" y="581" width="0.1336%" height="15" fill="rgb(207,7,3)"/><text x="34.5309%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.13%)</title><rect x="34.2809%" y="565" width="0.1336%" height="15" fill="rgb(206,98,19)"/><text x="34.5309%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.12%)</title><rect x="34.2930%" y="549" width="0.1215%" height="15" fill="rgb(217,5,26)"/><text x="34.5430%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.11%)</title><rect x="34.3052%" y="533" width="0.1093%" height="15" fill="rgb(235,190,38)"/><text x="34.5552%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.11%)</title><rect x="34.3052%" y="517" width="0.1093%" height="15" fill="rgb(247,86,24)"/><text x="34.5552%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="34.3052%" y="501" width="0.1093%" height="15" fill="rgb(205,101,16)"/><text x="34.5552%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.11%)</title><rect x="34.3052%" y="485" width="0.1093%" height="15" fill="rgb(246,168,33)"/><text x="34.5552%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.11%)</title><rect x="34.3052%" y="469" width="0.1093%" height="15" fill="rgb(231,114,1)"/><text x="34.5552%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.11%)</title><rect x="34.3052%" y="453" width="0.1093%" height="15" fill="rgb(207,184,53)"/><text x="34.5552%" y="463.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.11%)</title><rect x="34.3052%" y="437" width="0.1093%" height="15" fill="rgb(224,95,51)"/><text x="34.5552%" y="447.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="34.3052%" y="421" width="0.1093%" height="15" fill="rgb(212,188,45)"/><text x="34.5552%" y="431.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (18 samples, 0.22%)</title><rect x="34.2201%" y="645" width="0.2187%" height="15" fill="rgb(223,154,38)"/><text x="34.4701%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.19%)</title><rect x="34.2444%" y="629" width="0.1944%" height="15" fill="rgb(251,22,52)"/><text x="34.4944%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="34.5724%" y="597" width="0.1701%" height="15" fill="rgb(229,209,22)"/><text x="34.8224%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (28 samples, 0.34%)</title><rect x="34.5603%" y="629" width="0.3401%" height="15" fill="rgb(234,138,34)"/><text x="34.8103%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.33%)</title><rect x="34.5724%" y="613" width="0.3280%" height="15" fill="rgb(212,95,11)"/><text x="34.8224%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.12%)</title><rect x="34.7789%" y="597" width="0.1215%" height="15" fill="rgb(240,179,47)"/><text x="35.0289%" y="607.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.15%)</title><rect x="35.2041%" y="565" width="0.1458%" height="15" fill="rgb(240,163,11)"/><text x="35.4541%" y="575.50"></text></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="35.2284%" y="549" width="0.1215%" height="15" fill="rgb(236,37,12)"/><text x="35.4784%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="35.1919%" y="581" width="0.1701%" height="15" fill="rgb(232,164,16)"/><text x="35.4419%" y="591.50"></text></g><g><title>core::fmt::write (26 samples, 0.32%)</title><rect x="35.0826%" y="629" width="0.3158%" height="15" fill="rgb(244,205,15)"/><text x="35.3326%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (25 samples, 0.30%)</title><rect x="35.0948%" y="613" width="0.3037%" height="15" fill="rgb(223,117,47)"/><text x="35.3448%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (21 samples, 0.26%)</title><rect x="35.1433%" y="597" width="0.2551%" height="15" fill="rgb(244,107,35)"/><text x="35.3933%" y="607.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_matching (12 samples, 0.15%)</title><rect x="35.3984%" y="629" width="0.1458%" height="15" fill="rgb(205,140,8)"/><text x="35.6484%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::retain (11 samples, 0.13%)</title><rect x="35.4106%" y="613" width="0.1336%" height="15" fill="rgb(228,84,46)"/><text x="35.6606%" y="623.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (217 samples, 2.64%)</title><rect x="42.4563%" y="597" width="2.6361%" height="15" fill="rgb(254,188,9)"/><text x="42.7063%" y="607.50">de..</text></g><g><title>decor_mem::select::predicates::pred_matches_row (450 samples, 5.47%)</title><rect x="39.7595%" y="613" width="5.4665%" height="15" fill="rgb(206,112,54)"/><text x="40.0095%" y="623.50">decor_m..</text></g><g><title>decor_mem::helpers::str_ident_match (11 samples, 0.13%)</title><rect x="45.0923%" y="597" width="0.1336%" height="15" fill="rgb(216,84,49)"/><text x="45.3423%" y="607.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (11 samples, 0.13%)</title><rect x="45.0923%" y="581" width="0.1336%" height="15" fill="rgb(214,194,35)"/><text x="45.3423%" y="591.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (800 samples, 9.72%)</title><rect x="35.5442%" y="629" width="9.7182%" height="15" fill="rgb(249,28,3)"/><text x="35.7942%" y="639.50">decor_mem::sel..</text></g><g><title>malloc_consolidate (13 samples, 0.16%)</title><rect x="45.8455%" y="565" width="0.1579%" height="15" fill="rgb(222,56,52)"/><text x="46.0955%" y="575.50"></text></g><g><title>perf_iterate_ctx (13 samples, 0.16%)</title><rect x="46.0884%" y="421" width="0.1579%" height="15" fill="rgb(245,217,50)"/><text x="46.3384%" y="431.50"></text></g><g><title>perf_iterate_sb (16 samples, 0.19%)</title><rect x="46.0641%" y="437" width="0.1944%" height="15" fill="rgb(213,201,24)"/><text x="46.3141%" y="447.50"></text></g><g><title>perf_event_mmap (17 samples, 0.21%)</title><rect x="46.0641%" y="453" width="0.2065%" height="15" fill="rgb(248,116,28)"/><text x="46.3141%" y="463.50"></text></g><g><title>do_syscall_64 (27 samples, 0.33%)</title><rect x="46.0034%" y="517" width="0.3280%" height="15" fill="rgb(219,72,43)"/><text x="46.2534%" y="527.50"></text></g><g><title>__x64_sys_mprotect (27 samples, 0.33%)</title><rect x="46.0034%" y="501" width="0.3280%" height="15" fill="rgb(209,138,14)"/><text x="46.2534%" y="511.50"></text></g><g><title>do_mprotect_pkey (27 samples, 0.33%)</title><rect x="46.0034%" y="485" width="0.3280%" height="15" fill="rgb(222,18,33)"/><text x="46.2534%" y="495.50"></text></g><g><title>mprotect_fixup (26 samples, 0.32%)</title><rect x="46.0155%" y="469" width="0.3158%" height="15" fill="rgb(213,199,7)"/><text x="46.2655%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (30 samples, 0.36%)</title><rect x="46.0034%" y="533" width="0.3644%" height="15" fill="rgb(250,110,10)"/><text x="46.2534%" y="543.50"></text></g><g><title>__GI___mprotect (33 samples, 0.40%)</title><rect x="46.0034%" y="549" width="0.4009%" height="15" fill="rgb(248,123,6)"/><text x="46.2534%" y="559.50"></text></g><g><title>alloc_pages_vma (10 samples, 0.12%)</title><rect x="46.5258%" y="485" width="0.1215%" height="15" fill="rgb(206,91,31)"/><text x="46.7758%" y="495.50"></text></g><g><title>page_fault (25 samples, 0.30%)</title><rect x="46.4164%" y="549" width="0.3037%" height="15" fill="rgb(211,154,13)"/><text x="46.6664%" y="559.50"></text></g><g><title>do_user_addr_fault (25 samples, 0.30%)</title><rect x="46.4164%" y="533" width="0.3037%" height="15" fill="rgb(225,148,7)"/><text x="46.6664%" y="543.50"></text></g><g><title>handle_mm_fault (25 samples, 0.30%)</title><rect x="46.4164%" y="517" width="0.3037%" height="15" fill="rgb(220,160,43)"/><text x="46.6664%" y="527.50"></text></g><g><title>__handle_mm_fault (24 samples, 0.29%)</title><rect x="46.4286%" y="501" width="0.2915%" height="15" fill="rgb(213,52,39)"/><text x="46.6786%" y="511.50"></text></g><g><title>__GI___libc_malloc (79 samples, 0.96%)</title><rect x="45.7969%" y="597" width="0.9597%" height="15" fill="rgb(243,137,7)"/><text x="46.0469%" y="607.50"></text></g><g><title>_int_malloc (77 samples, 0.94%)</title><rect x="45.8212%" y="581" width="0.9354%" height="15" fill="rgb(230,79,13)"/><text x="46.0712%" y="591.50"></text></g><g><title>sysmalloc (62 samples, 0.75%)</title><rect x="46.0034%" y="565" width="0.7532%" height="15" fill="rgb(247,105,23)"/><text x="46.2534%" y="575.50"></text></g><g><title>page_fault (11 samples, 0.13%)</title><rect x="46.9509%" y="581" width="0.1336%" height="15" fill="rgb(223,179,41)"/><text x="47.2009%" y="591.50"></text></g><g><title>do_user_addr_fault (11 samples, 0.13%)</title><rect x="46.9509%" y="565" width="0.1336%" height="15" fill="rgb(218,9,34)"/><text x="47.2009%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.36%)</title><rect x="46.7566%" y="597" width="0.3644%" height="15" fill="rgb(222,106,8)"/><text x="47.0066%" y="607.50"></text></g><g><title>alloc_pages_vma (28 samples, 0.34%)</title><rect x="47.3882%" y="533" width="0.3401%" height="15" fill="rgb(211,220,0)"/><text x="47.6382%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (28 samples, 0.34%)</title><rect x="47.3882%" y="517" width="0.3401%" height="15" fill="rgb(229,52,16)"/><text x="47.6382%" y="527.50"></text></g><g><title>get_page_from_freelist (26 samples, 0.32%)</title><rect x="47.4125%" y="501" width="0.3158%" height="15" fill="rgb(212,155,18)"/><text x="47.6625%" y="511.50"></text></g><g><title>prep_new_page (20 samples, 0.24%)</title><rect x="47.4854%" y="485" width="0.2430%" height="15" fill="rgb(242,21,14)"/><text x="47.7354%" y="495.50"></text></g><g><title>kernel_init_free_pages (20 samples, 0.24%)</title><rect x="47.4854%" y="469" width="0.2430%" height="15" fill="rgb(222,19,48)"/><text x="47.7354%" y="479.50"></text></g><g><title>clear_page_erms (20 samples, 0.24%)</title><rect x="47.4854%" y="453" width="0.2430%" height="15" fill="rgb(232,45,27)"/><text x="47.7354%" y="463.50"></text></g><g><title>mem_cgroup_try_charge_delay (14 samples, 0.17%)</title><rect x="47.7648%" y="533" width="0.1701%" height="15" fill="rgb(249,103,42)"/><text x="48.0148%" y="543.50"></text></g><g><title>mem_cgroup_try_charge (14 samples, 0.17%)</title><rect x="47.7648%" y="517" width="0.1701%" height="15" fill="rgb(246,81,33)"/><text x="48.0148%" y="527.50"></text></g><g><title>__handle_mm_fault (59 samples, 0.72%)</title><rect x="47.2303%" y="549" width="0.7167%" height="15" fill="rgb(252,33,42)"/><text x="47.4803%" y="559.50"></text></g><g><title>page_fault (66 samples, 0.80%)</title><rect x="47.1574%" y="597" width="0.8017%" height="15" fill="rgb(209,212,41)"/><text x="47.4074%" y="607.50"></text></g><g><title>do_user_addr_fault (66 samples, 0.80%)</title><rect x="47.1574%" y="581" width="0.8017%" height="15" fill="rgb(207,154,6)"/><text x="47.4074%" y="591.50"></text></g><g><title>handle_mm_fault (62 samples, 0.75%)</title><rect x="47.2060%" y="565" width="0.7532%" height="15" fill="rgb(223,64,47)"/><text x="47.4560%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (223 samples, 2.71%)</title><rect x="45.4689%" y="613" width="2.7089%" height="15" fill="rgb(211,161,38)"/><text x="45.7189%" y="623.50">&lt;h..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (18 samples, 0.22%)</title><rect x="47.9592%" y="597" width="0.2187%" height="15" fill="rgb(219,138,40)"/><text x="48.2092%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (12 samples, 0.15%)</title><rect x="48.0321%" y="581" width="0.1458%" height="15" fill="rgb(241,228,46)"/><text x="48.2821%" y="591.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (257 samples, 3.12%)</title><rect x="45.2624%" y="629" width="3.1220%" height="15" fill="rgb(223,209,38)"/><text x="45.5124%" y="639.50">dec..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (1,289 samples, 15.66%)</title><rect x="32.8110%" y="677" width="15.6584%" height="15" fill="rgb(236,164,45)"/><text x="33.0610%" y="687.50">decor_mem::select::selec..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (1,188 samples, 14.43%)</title><rect x="34.0379%" y="661" width="14.4315%" height="15" fill="rgb(231,15,5)"/><text x="34.2879%" y="671.50">decor_mem::select::pre..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (1,155 samples, 14.03%)</title><rect x="34.4388%" y="645" width="14.0306%" height="15" fill="rgb(252,35,15)"/><text x="34.6888%" y="655.50">decor_mem::select::pr..</text></g><g><title>decor_mem::Shim::run_on_tcp (2,897 samples, 35.19%)</title><rect x="13.3382%" y="757" width="35.1919%" height="15" fill="rgb(248,181,18)"/><text x="13.5882%" y="767.50">decor_mem::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2,897 samples, 35.19%)</title><rect x="13.3382%" y="741" width="35.1919%" height="15" fill="rgb(233,39,42)"/><text x="13.5882%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (2,897 samples, 35.19%)</title><rect x="13.3382%" y="725" width="35.1919%" height="15" fill="rgb(238,110,33)"/><text x="13.5882%" y="735.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (1,886 samples, 22.91%)</title><rect x="25.6195%" y="709" width="22.9106%" height="15" fill="rgb(233,195,10)"/><text x="25.8695%" y="719.50">&lt;decor_mem::Shim as msql_srv::MysqlS..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (1,886 samples, 22.91%)</title><rect x="25.6195%" y="693" width="22.9106%" height="15" fill="rgb(254,105,3)"/><text x="25.8695%" y="703.50">decor_mem::query_transformer::QueryT..</text></g><g><title>decor_mem::helpers::parser_vals_cmp (70 samples, 0.85%)</title><rect x="48.5909%" y="757" width="0.8503%" height="15" fill="rgb(221,225,9)"/><text x="48.8409%" y="767.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (68 samples, 0.83%)</title><rect x="49.6113%" y="757" width="0.8260%" height="15" fill="rgb(224,227,45)"/><text x="49.8613%" y="767.50"></text></g><g><title>sk_wait_data (12 samples, 0.15%)</title><rect x="50.8625%" y="453" width="0.1458%" height="15" fill="rgb(229,198,43)"/><text x="51.1125%" y="463.50"></text></g><g><title>wait_woken (10 samples, 0.12%)</title><rect x="50.8868%" y="437" width="0.1215%" height="15" fill="rgb(206,209,35)"/><text x="51.1368%" y="447.50"></text></g><g><title>schedule_timeout (10 samples, 0.12%)</title><rect x="50.8868%" y="421" width="0.1215%" height="15" fill="rgb(245,195,53)"/><text x="51.1368%" y="431.50"></text></g><g><title>schedule (10 samples, 0.12%)</title><rect x="50.8868%" y="405" width="0.1215%" height="15" fill="rgb(240,92,26)"/><text x="51.1368%" y="415.50"></text></g><g><title>__schedule (10 samples, 0.12%)</title><rect x="50.8868%" y="389" width="0.1215%" height="15" fill="rgb(207,40,23)"/><text x="51.1368%" y="399.50"></text></g><g><title>__x64_sys_recvfrom (17 samples, 0.21%)</title><rect x="50.8260%" y="517" width="0.2065%" height="15" fill="rgb(223,111,35)"/><text x="51.0760%" y="527.50"></text></g><g><title>__sys_recvfrom (17 samples, 0.21%)</title><rect x="50.8260%" y="501" width="0.2065%" height="15" fill="rgb(229,147,28)"/><text x="51.0760%" y="511.50"></text></g><g><title>inet_recvmsg (17 samples, 0.21%)</title><rect x="50.8260%" y="485" width="0.2065%" height="15" fill="rgb(211,29,28)"/><text x="51.0760%" y="495.50"></text></g><g><title>tcp_recvmsg (16 samples, 0.19%)</title><rect x="50.8382%" y="469" width="0.1944%" height="15" fill="rgb(228,72,33)"/><text x="51.0882%" y="479.50"></text></g><g><title>do_syscall_64 (18 samples, 0.22%)</title><rect x="50.8260%" y="533" width="0.2187%" height="15" fill="rgb(205,214,31)"/><text x="51.0760%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (20 samples, 0.24%)</title><rect x="50.8260%" y="645" width="0.2430%" height="15" fill="rgb(224,111,15)"/><text x="51.0760%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (20 samples, 0.24%)</title><rect x="50.8260%" y="629" width="0.2430%" height="15" fill="rgb(253,21,26)"/><text x="51.0760%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (20 samples, 0.24%)</title><rect x="50.8260%" y="613" width="0.2430%" height="15" fill="rgb(245,139,43)"/><text x="51.0760%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (20 samples, 0.24%)</title><rect x="50.8260%" y="597" width="0.2430%" height="15" fill="rgb(252,170,7)"/><text x="51.0760%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (20 samples, 0.24%)</title><rect x="50.8260%" y="581" width="0.2430%" height="15" fill="rgb(231,118,14)"/><text x="51.0760%" y="591.50"></text></g><g><title>__libc_recv (20 samples, 0.24%)</title><rect x="50.8260%" y="565" width="0.2430%" height="15" fill="rgb(238,83,0)"/><text x="51.0760%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.24%)</title><rect x="50.8260%" y="549" width="0.2430%" height="15" fill="rgb(221,39,39)"/><text x="51.0760%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.26%)</title><rect x="50.8260%" y="661" width="0.2551%" height="15" fill="rgb(222,119,46)"/><text x="51.0760%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (27 samples, 0.33%)</title><rect x="50.7896%" y="693" width="0.3280%" height="15" fill="rgb(222,165,49)"/><text x="51.0396%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (25 samples, 0.30%)</title><rect x="50.8139%" y="677" width="0.3037%" height="15" fill="rgb(219,113,52)"/><text x="51.0639%" y="687.50"></text></g><g><title>ip_local_deliver (14 samples, 0.17%)</title><rect x="51.3605%" y="277" width="0.1701%" height="15" fill="rgb(214,7,15)"/><text x="51.6105%" y="287.50"></text></g><g><title>ip_local_deliver_finish (14 samples, 0.17%)</title><rect x="51.3605%" y="261" width="0.1701%" height="15" fill="rgb(235,32,4)"/><text x="51.6105%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 0.17%)</title><rect x="51.3605%" y="245" width="0.1701%" height="15" fill="rgb(238,90,54)"/><text x="51.6105%" y="255.50"></text></g><g><title>tcp_v4_rcv (14 samples, 0.17%)</title><rect x="51.3605%" y="229" width="0.1701%" height="15" fill="rgb(213,208,19)"/><text x="51.6105%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 0.17%)</title><rect x="51.3605%" y="213" width="0.1701%" height="15" fill="rgb(233,156,4)"/><text x="51.6105%" y="223.50"></text></g><g><title>tcp_rcv_established (14 samples, 0.17%)</title><rect x="51.3605%" y="197" width="0.1701%" height="15" fill="rgb(207,194,5)"/><text x="51.6105%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (16 samples, 0.19%)</title><rect x="51.3484%" y="309" width="0.1944%" height="15" fill="rgb(206,111,30)"/><text x="51.5984%" y="319.50"></text></g><g><title>ip_rcv (15 samples, 0.18%)</title><rect x="51.3605%" y="293" width="0.1822%" height="15" fill="rgb(243,70,54)"/><text x="51.6105%" y="303.50"></text></g><g><title>ip_finish_output2 (22 samples, 0.27%)</title><rect x="51.2877%" y="421" width="0.2672%" height="15" fill="rgb(242,28,8)"/><text x="51.5377%" y="431.50"></text></g><g><title>__local_bh_enable_ip (17 samples, 0.21%)</title><rect x="51.3484%" y="405" width="0.2065%" height="15" fill="rgb(219,106,18)"/><text x="51.5984%" y="415.50"></text></g><g><title>do_softirq (17 samples, 0.21%)</title><rect x="51.3484%" y="389" width="0.2065%" height="15" fill="rgb(244,222,10)"/><text x="51.5984%" y="399.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.21%)</title><rect x="51.3484%" y="373" width="0.2065%" height="15" fill="rgb(236,179,52)"/><text x="51.5984%" y="383.50"></text></g><g><title>__do_softirq (17 samples, 0.21%)</title><rect x="51.3484%" y="357" width="0.2065%" height="15" fill="rgb(213,23,39)"/><text x="51.5984%" y="367.50"></text></g><g><title>net_rx_action (17 samples, 0.21%)</title><rect x="51.3484%" y="341" width="0.2065%" height="15" fill="rgb(238,48,10)"/><text x="51.5984%" y="351.50"></text></g><g><title>process_backlog (17 samples, 0.21%)</title><rect x="51.3484%" y="325" width="0.2065%" height="15" fill="rgb(251,196,23)"/><text x="51.5984%" y="335.50"></text></g><g><title>__ip_queue_xmit (26 samples, 0.32%)</title><rect x="51.2512%" y="453" width="0.3158%" height="15" fill="rgb(250,152,24)"/><text x="51.5012%" y="463.50"></text></g><g><title>ip_output (24 samples, 0.29%)</title><rect x="51.2755%" y="437" width="0.2915%" height="15" fill="rgb(209,150,17)"/><text x="51.5255%" y="447.50"></text></g><g><title>__tcp_transmit_skb (29 samples, 0.35%)</title><rect x="51.2391%" y="469" width="0.3523%" height="15" fill="rgb(234,202,34)"/><text x="51.4891%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (31 samples, 0.38%)</title><rect x="51.2269%" y="501" width="0.3766%" height="15" fill="rgb(253,148,53)"/><text x="51.4769%" y="511.50"></text></g><g><title>tcp_write_xmit (31 samples, 0.38%)</title><rect x="51.2269%" y="485" width="0.3766%" height="15" fill="rgb(218,129,16)"/><text x="51.4769%" y="495.50"></text></g><g><title>sock_sendmsg (38 samples, 0.46%)</title><rect x="51.1662%" y="549" width="0.4616%" height="15" fill="rgb(216,85,19)"/><text x="51.4162%" y="559.50"></text></g><g><title>tcp_sendmsg (38 samples, 0.46%)</title><rect x="51.1662%" y="533" width="0.4616%" height="15" fill="rgb(235,228,7)"/><text x="51.4162%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (38 samples, 0.46%)</title><rect x="51.1662%" y="517" width="0.4616%" height="15" fill="rgb(245,175,0)"/><text x="51.4162%" y="527.50"></text></g><g><title>do_syscall_64 (39 samples, 0.47%)</title><rect x="51.1662%" y="597" width="0.4738%" height="15" fill="rgb(208,168,36)"/><text x="51.4162%" y="607.50"></text></g><g><title>__x64_sys_sendto (39 samples, 0.47%)</title><rect x="51.1662%" y="581" width="0.4738%" height="15" fill="rgb(246,171,24)"/><text x="51.4162%" y="591.50"></text></g><g><title>__sys_sendto (39 samples, 0.47%)</title><rect x="51.1662%" y="565" width="0.4738%" height="15" fill="rgb(215,142,24)"/><text x="51.4162%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (41 samples, 0.50%)</title><rect x="51.1540%" y="613" width="0.4981%" height="15" fill="rgb(250,187,7)"/><text x="51.4040%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::resubscribe_user (72 samples, 0.87%)</title><rect x="50.7896%" y="741" width="0.8746%" height="15" fill="rgb(228,66,33)"/><text x="51.0396%" y="751.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (72 samples, 0.87%)</title><rect x="50.7896%" y="725" width="0.8746%" height="15" fill="rgb(234,215,21)"/><text x="51.0396%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (72 samples, 0.87%)</title><rect x="50.7896%" y="709" width="0.8746%" height="15" fill="rgb(222,191,20)"/><text x="51.0396%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (45 samples, 0.55%)</title><rect x="51.1176%" y="693" width="0.5466%" height="15" fill="rgb(245,79,54)"/><text x="51.3676%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (44 samples, 0.53%)</title><rect x="51.1297%" y="677" width="0.5345%" height="15" fill="rgb(240,10,37)"/><text x="51.3797%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (43 samples, 0.52%)</title><rect x="51.1419%" y="661" width="0.5224%" height="15" fill="rgb(214,192,32)"/><text x="51.3919%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (43 samples, 0.52%)</title><rect x="51.1419%" y="645" width="0.5224%" height="15" fill="rgb(209,36,54)"/><text x="51.3919%" y="655.50"></text></g><g><title>__libc_send (43 samples, 0.52%)</title><rect x="51.1419%" y="629" width="0.5224%" height="15" fill="rgb(220,10,11)"/><text x="51.3919%" y="639.50"></text></g><g><title>__schedule (11 samples, 0.13%)</title><rect x="51.7857%" y="389" width="0.1336%" height="15" fill="rgb(221,106,17)"/><text x="52.0357%" y="399.50"></text></g><g><title>sk_wait_data (13 samples, 0.16%)</title><rect x="51.7736%" y="453" width="0.1579%" height="15" fill="rgb(251,142,44)"/><text x="52.0236%" y="463.50"></text></g><g><title>wait_woken (13 samples, 0.16%)</title><rect x="51.7736%" y="437" width="0.1579%" height="15" fill="rgb(238,13,15)"/><text x="52.0236%" y="447.50"></text></g><g><title>schedule_timeout (12 samples, 0.15%)</title><rect x="51.7857%" y="421" width="0.1458%" height="15" fill="rgb(208,107,27)"/><text x="52.0357%" y="431.50"></text></g><g><title>schedule (12 samples, 0.15%)</title><rect x="51.7857%" y="405" width="0.1458%" height="15" fill="rgb(205,136,37)"/><text x="52.0357%" y="415.50"></text></g><g><title>inet_recvmsg (19 samples, 0.23%)</title><rect x="51.7371%" y="485" width="0.2308%" height="15" fill="rgb(250,205,27)"/><text x="51.9871%" y="495.50"></text></g><g><title>tcp_recvmsg (19 samples, 0.23%)</title><rect x="51.7371%" y="469" width="0.2308%" height="15" fill="rgb(210,80,43)"/><text x="51.9871%" y="479.50"></text></g><g><title>do_syscall_64 (21 samples, 0.26%)</title><rect x="51.7250%" y="533" width="0.2551%" height="15" fill="rgb(247,160,36)"/><text x="51.9750%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (21 samples, 0.26%)</title><rect x="51.7250%" y="517" width="0.2551%" height="15" fill="rgb(234,13,49)"/><text x="51.9750%" y="527.50"></text></g><g><title>__sys_recvfrom (21 samples, 0.26%)</title><rect x="51.7250%" y="501" width="0.2551%" height="15" fill="rgb(234,122,0)"/><text x="51.9750%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (23 samples, 0.28%)</title><rect x="51.7250%" y="645" width="0.2794%" height="15" fill="rgb(207,146,38)"/><text x="51.9750%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (23 samples, 0.28%)</title><rect x="51.7250%" y="629" width="0.2794%" height="15" fill="rgb(207,177,25)"/><text x="51.9750%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (23 samples, 0.28%)</title><rect x="51.7250%" y="613" width="0.2794%" height="15" fill="rgb(211,178,42)"/><text x="51.9750%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (23 samples, 0.28%)</title><rect x="51.7250%" y="597" width="0.2794%" height="15" fill="rgb(230,69,54)"/><text x="51.9750%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (23 samples, 0.28%)</title><rect x="51.7250%" y="581" width="0.2794%" height="15" fill="rgb(214,135,41)"/><text x="51.9750%" y="591.50"></text></g><g><title>__libc_recv (23 samples, 0.28%)</title><rect x="51.7250%" y="565" width="0.2794%" height="15" fill="rgb(237,67,25)"/><text x="51.9750%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 0.28%)</title><rect x="51.7250%" y="549" width="0.2794%" height="15" fill="rgb(222,189,50)"/><text x="51.9750%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.36%)</title><rect x="51.7007%" y="661" width="0.3644%" height="15" fill="rgb(245,148,34)"/><text x="51.9507%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (32 samples, 0.39%)</title><rect x="51.6885%" y="677" width="0.3887%" height="15" fill="rgb(222,29,6)"/><text x="51.9385%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (35 samples, 0.43%)</title><rect x="51.6642%" y="693" width="0.4252%" height="15" fill="rgb(221,189,43)"/><text x="51.9142%" y="703.50"></text></g><g><title>__ip_queue_xmit (23 samples, 0.28%)</title><rect x="52.1744%" y="453" width="0.2794%" height="15" fill="rgb(207,36,27)"/><text x="52.4244%" y="463.50"></text></g><g><title>ip_output (23 samples, 0.28%)</title><rect x="52.1744%" y="437" width="0.2794%" height="15" fill="rgb(217,90,24)"/><text x="52.4244%" y="447.50"></text></g><g><title>ip_finish_output2 (21 samples, 0.26%)</title><rect x="52.1987%" y="421" width="0.2551%" height="15" fill="rgb(224,66,35)"/><text x="52.4487%" y="431.50"></text></g><g><title>__local_bh_enable_ip (18 samples, 0.22%)</title><rect x="52.2352%" y="405" width="0.2187%" height="15" fill="rgb(221,13,50)"/><text x="52.4852%" y="415.50"></text></g><g><title>do_softirq (18 samples, 0.22%)</title><rect x="52.2352%" y="389" width="0.2187%" height="15" fill="rgb(236,68,49)"/><text x="52.4852%" y="399.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.21%)</title><rect x="52.2473%" y="373" width="0.2065%" height="15" fill="rgb(229,146,28)"/><text x="52.4973%" y="383.50"></text></g><g><title>__do_softirq (17 samples, 0.21%)</title><rect x="52.2473%" y="357" width="0.2065%" height="15" fill="rgb(225,31,38)"/><text x="52.4973%" y="367.50"></text></g><g><title>net_rx_action (17 samples, 0.21%)</title><rect x="52.2473%" y="341" width="0.2065%" height="15" fill="rgb(250,208,3)"/><text x="52.4973%" y="351.50"></text></g><g><title>process_backlog (16 samples, 0.19%)</title><rect x="52.2595%" y="325" width="0.1944%" height="15" fill="rgb(246,54,23)"/><text x="52.5095%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (16 samples, 0.19%)</title><rect x="52.2595%" y="309" width="0.1944%" height="15" fill="rgb(243,76,11)"/><text x="52.5095%" y="319.50"></text></g><g><title>ip_rcv (15 samples, 0.18%)</title><rect x="52.2716%" y="293" width="0.1822%" height="15" fill="rgb(245,21,50)"/><text x="52.5216%" y="303.50"></text></g><g><title>ip_local_deliver (15 samples, 0.18%)</title><rect x="52.2716%" y="277" width="0.1822%" height="15" fill="rgb(228,9,43)"/><text x="52.5216%" y="287.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 0.18%)</title><rect x="52.2716%" y="261" width="0.1822%" height="15" fill="rgb(208,100,47)"/><text x="52.5216%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 0.17%)</title><rect x="52.2838%" y="245" width="0.1701%" height="15" fill="rgb(232,26,8)"/><text x="52.5338%" y="255.50"></text></g><g><title>tcp_v4_rcv (14 samples, 0.17%)</title><rect x="52.2838%" y="229" width="0.1701%" height="15" fill="rgb(216,166,38)"/><text x="52.5338%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 0.16%)</title><rect x="52.2959%" y="213" width="0.1579%" height="15" fill="rgb(251,202,51)"/><text x="52.5459%" y="223.50"></text></g><g><title>tcp_rcv_established (13 samples, 0.16%)</title><rect x="52.2959%" y="197" width="0.1579%" height="15" fill="rgb(254,216,34)"/><text x="52.5459%" y="207.50"></text></g><g><title>__tcp_transmit_skb (26 samples, 0.32%)</title><rect x="52.1623%" y="469" width="0.3158%" height="15" fill="rgb(251,32,27)"/><text x="52.4123%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (27 samples, 0.33%)</title><rect x="52.1623%" y="501" width="0.3280%" height="15" fill="rgb(208,127,28)"/><text x="52.4123%" y="511.50"></text></g><g><title>tcp_write_xmit (27 samples, 0.33%)</title><rect x="52.1623%" y="485" width="0.3280%" height="15" fill="rgb(224,137,22)"/><text x="52.4123%" y="495.50"></text></g><g><title>__x64_sys_sendto (34 samples, 0.41%)</title><rect x="52.1137%" y="581" width="0.4130%" height="15" fill="rgb(254,70,32)"/><text x="52.3637%" y="591.50"></text></g><g><title>__sys_sendto (34 samples, 0.41%)</title><rect x="52.1137%" y="565" width="0.4130%" height="15" fill="rgb(229,75,37)"/><text x="52.3637%" y="575.50"></text></g><g><title>sock_sendmsg (33 samples, 0.40%)</title><rect x="52.1259%" y="549" width="0.4009%" height="15" fill="rgb(252,64,23)"/><text x="52.3759%" y="559.50"></text></g><g><title>tcp_sendmsg (32 samples, 0.39%)</title><rect x="52.1380%" y="533" width="0.3887%" height="15" fill="rgb(232,162,48)"/><text x="52.3880%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (31 samples, 0.38%)</title><rect x="52.1501%" y="517" width="0.3766%" height="15" fill="rgb(246,160,12)"/><text x="52.4001%" y="527.50"></text></g><g><title>do_syscall_64 (37 samples, 0.45%)</title><rect x="52.1137%" y="597" width="0.4495%" height="15" fill="rgb(247,166,0)"/><text x="52.3637%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (40 samples, 0.49%)</title><rect x="52.1016%" y="613" width="0.4859%" height="15" fill="rgb(249,219,21)"/><text x="52.3516%" y="623.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (77 samples, 0.94%)</title><rect x="51.6642%" y="725" width="0.9354%" height="15" fill="rgb(205,209,3)"/><text x="51.9142%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (77 samples, 0.94%)</title><rect x="51.6642%" y="709" width="0.9354%" height="15" fill="rgb(243,44,1)"/><text x="51.9142%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (42 samples, 0.51%)</title><rect x="52.0894%" y="693" width="0.5102%" height="15" fill="rgb(206,159,16)"/><text x="52.3394%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (41 samples, 0.50%)</title><rect x="52.1016%" y="677" width="0.4981%" height="15" fill="rgb(244,77,30)"/><text x="52.3516%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (41 samples, 0.50%)</title><rect x="52.1016%" y="661" width="0.4981%" height="15" fill="rgb(218,69,12)"/><text x="52.3516%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (41 samples, 0.50%)</title><rect x="52.1016%" y="645" width="0.4981%" height="15" fill="rgb(212,87,7)"/><text x="52.3516%" y="655.50"></text></g><g><title>__libc_send (41 samples, 0.50%)</title><rect x="52.1016%" y="629" width="0.4981%" height="15" fill="rgb(245,114,25)"/><text x="52.3516%" y="639.50"></text></g><g><title>lobsters_microbenchmarks::main (166 samples, 2.02%)</title><rect x="50.7532%" y="757" width="2.0165%" height="15" fill="rgb(210,61,42)"/><text x="51.0032%" y="767.50">l..</text></g><g><title>lobsters_microbenchmarks::queriers::user::unsubscribe_user (91 samples, 1.11%)</title><rect x="51.6642%" y="741" width="1.1054%" height="15" fill="rgb(211,52,33)"/><text x="51.9142%" y="751.50"></text></g><g><title>serde_json::de::from_str (9 samples, 0.11%)</title><rect x="52.6603%" y="725" width="0.1093%" height="15" fill="rgb(234,58,33)"/><text x="52.9103%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (9 samples, 0.11%)</title><rect x="52.6603%" y="709" width="0.1093%" height="15" fill="rgb(220,115,36)"/><text x="52.9103%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (9 samples, 0.11%)</title><rect x="52.6603%" y="693" width="0.1093%" height="15" fill="rgb(243,153,54)"/><text x="52.9103%" y="703.50"></text></g><g><title>ip_finish_output2 (13 samples, 0.16%)</title><rect x="52.9519%" y="389" width="0.1579%" height="15" fill="rgb(251,47,18)"/><text x="53.2019%" y="399.50"></text></g><g><title>__local_bh_enable_ip (12 samples, 0.15%)</title><rect x="52.9640%" y="373" width="0.1458%" height="15" fill="rgb(242,102,42)"/><text x="53.2140%" y="383.50"></text></g><g><title>do_softirq (12 samples, 0.15%)</title><rect x="52.9640%" y="357" width="0.1458%" height="15" fill="rgb(234,31,38)"/><text x="53.2140%" y="367.50"></text></g><g><title>do_softirq_own_stack (11 samples, 0.13%)</title><rect x="52.9762%" y="341" width="0.1336%" height="15" fill="rgb(221,117,51)"/><text x="53.2262%" y="351.50"></text></g><g><title>__do_softirq (11 samples, 0.13%)</title><rect x="52.9762%" y="325" width="0.1336%" height="15" fill="rgb(212,20,18)"/><text x="53.2262%" y="335.50"></text></g><g><title>net_rx_action (10 samples, 0.12%)</title><rect x="52.9883%" y="309" width="0.1215%" height="15" fill="rgb(245,133,36)"/><text x="53.2383%" y="319.50"></text></g><g><title>process_backlog (10 samples, 0.12%)</title><rect x="52.9883%" y="293" width="0.1215%" height="15" fill="rgb(212,6,19)"/><text x="53.2383%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (10 samples, 0.12%)</title><rect x="52.9883%" y="277" width="0.1215%" height="15" fill="rgb(218,1,36)"/><text x="53.2383%" y="287.50"></text></g><g><title>ip_rcv (9 samples, 0.11%)</title><rect x="53.0005%" y="261" width="0.1093%" height="15" fill="rgb(246,84,54)"/><text x="53.2505%" y="271.50"></text></g><g><title>__ip_queue_xmit (15 samples, 0.18%)</title><rect x="52.9397%" y="421" width="0.1822%" height="15" fill="rgb(242,110,6)"/><text x="53.1897%" y="431.50"></text></g><g><title>ip_output (14 samples, 0.17%)</title><rect x="52.9519%" y="405" width="0.1701%" height="15" fill="rgb(214,47,5)"/><text x="53.2019%" y="415.50"></text></g><g><title>__x64_sys_sendto (18 samples, 0.22%)</title><rect x="52.9155%" y="549" width="0.2187%" height="15" fill="rgb(218,159,25)"/><text x="53.1655%" y="559.50"></text></g><g><title>__sys_sendto (18 samples, 0.22%)</title><rect x="52.9155%" y="533" width="0.2187%" height="15" fill="rgb(215,211,28)"/><text x="53.1655%" y="543.50"></text></g><g><title>sock_sendmsg (18 samples, 0.22%)</title><rect x="52.9155%" y="517" width="0.2187%" height="15" fill="rgb(238,59,32)"/><text x="53.1655%" y="527.50"></text></g><g><title>tcp_sendmsg (18 samples, 0.22%)</title><rect x="52.9155%" y="501" width="0.2187%" height="15" fill="rgb(226,82,3)"/><text x="53.1655%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (16 samples, 0.19%)</title><rect x="52.9397%" y="485" width="0.1944%" height="15" fill="rgb(240,164,32)"/><text x="53.1897%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (16 samples, 0.19%)</title><rect x="52.9397%" y="469" width="0.1944%" height="15" fill="rgb(232,46,7)"/><text x="53.1897%" y="479.50"></text></g><g><title>tcp_write_xmit (16 samples, 0.19%)</title><rect x="52.9397%" y="453" width="0.1944%" height="15" fill="rgb(229,129,53)"/><text x="53.1897%" y="463.50"></text></g><g><title>__tcp_transmit_skb (16 samples, 0.19%)</title><rect x="52.9397%" y="437" width="0.1944%" height="15" fill="rgb(234,188,29)"/><text x="53.1897%" y="447.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_gid_for_eid (22 samples, 0.27%)</title><rect x="52.8790%" y="693" width="0.2672%" height="15" fill="rgb(246,141,4)"/><text x="53.1290%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (21 samples, 0.26%)</title><rect x="52.8912%" y="677" width="0.2551%" height="15" fill="rgb(229,23,39)"/><text x="53.1412%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (21 samples, 0.26%)</title><rect x="52.8912%" y="661" width="0.2551%" height="15" fill="rgb(206,12,3)"/><text x="53.1412%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (21 samples, 0.26%)</title><rect x="52.8912%" y="645" width="0.2551%" height="15" fill="rgb(252,226,20)"/><text x="53.1412%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (21 samples, 0.26%)</title><rect x="52.8912%" y="629" width="0.2551%" height="15" fill="rgb(216,123,35)"/><text x="53.1412%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (21 samples, 0.26%)</title><rect x="52.8912%" y="613" width="0.2551%" height="15" fill="rgb(212,68,40)"/><text x="53.1412%" y="623.50"></text></g><g><title>__libc_send (21 samples, 0.26%)</title><rect x="52.8912%" y="597" width="0.2551%" height="15" fill="rgb(254,125,32)"/><text x="53.1412%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.24%)</title><rect x="52.9033%" y="581" width="0.2430%" height="15" fill="rgb(253,97,22)"/><text x="53.1533%" y="591.50"></text></g><g><title>do_syscall_64 (19 samples, 0.23%)</title><rect x="52.9155%" y="565" width="0.2308%" height="15" fill="rgb(241,101,14)"/><text x="53.1655%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.15%)</title><rect x="53.1827%" y="661" width="0.1458%" height="15" fill="rgb(238,103,29)"/><text x="53.4327%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (12 samples, 0.15%)</title><rect x="53.1827%" y="645" width="0.1458%" height="15" fill="rgb(233,195,47)"/><text x="53.4327%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (17 samples, 0.21%)</title><rect x="53.3406%" y="661" width="0.2065%" height="15" fill="rgb(246,218,30)"/><text x="53.5906%" y="671.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.21%)</title><rect x="53.3406%" y="645" width="0.2065%" height="15" fill="rgb(219,145,47)"/><text x="53.5906%" y="655.50"></text></g><g><title>_int_malloc (17 samples, 0.21%)</title><rect x="53.3406%" y="629" width="0.2065%" height="15" fill="rgb(243,12,26)"/><text x="53.5906%" y="639.50"></text></g><g><title>sysmalloc (17 samples, 0.21%)</title><rect x="53.3406%" y="613" width="0.2065%" height="15" fill="rgb(214,87,16)"/><text x="53.5906%" y="623.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (61 samples, 0.74%)</title><rect x="52.8183%" y="757" width="0.7410%" height="15" fill="rgb(208,99,42)"/><text x="53.0683%" y="767.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (56 samples, 0.68%)</title><rect x="52.8790%" y="741" width="0.6803%" height="15" fill="rgb(253,99,2)"/><text x="53.1290%" y="751.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (56 samples, 0.68%)</title><rect x="52.8790%" y="725" width="0.6803%" height="15" fill="rgb(220,168,23)"/><text x="53.1290%" y="735.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (56 samples, 0.68%)</title><rect x="52.8790%" y="709" width="0.6803%" height="15" fill="rgb(242,38,24)"/><text x="53.1290%" y="719.50"></text></g><g><title>decor_mem::views::Views::insert (34 samples, 0.41%)</title><rect x="53.1463%" y="693" width="0.4130%" height="15" fill="rgb(225,182,9)"/><text x="53.3963%" y="703.50"></text></g><g><title>decor_mem::views::View::insert_into_index (34 samples, 0.41%)</title><rect x="53.1463%" y="677" width="0.4130%" height="15" fill="rgb(243,178,37)"/><text x="53.3963%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (18 samples, 0.22%)</title><rect x="53.5714%" y="709" width="0.2187%" height="15" fill="rgb(232,139,19)"/><text x="53.8214%" y="719.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (18 samples, 0.22%)</title><rect x="53.5714%" y="693" width="0.2187%" height="15" fill="rgb(225,201,24)"/><text x="53.8214%" y="703.50"></text></g><g><title>decor_mem::views::Views::insert (9 samples, 0.11%)</title><rect x="53.6808%" y="677" width="0.1093%" height="15" fill="rgb(221,47,46)"/><text x="53.9308%" y="687.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (23 samples, 0.28%)</title><rect x="53.5714%" y="725" width="0.2794%" height="15" fill="rgb(249,23,13)"/><text x="53.8214%" y="735.50"></text></g><g><title>__schedule (9 samples, 0.11%)</title><rect x="53.9237%" y="341" width="0.1093%" height="15" fill="rgb(219,9,5)"/><text x="54.1737%" y="351.50"></text></g><g><title>sk_wait_data (11 samples, 0.13%)</title><rect x="53.9116%" y="405" width="0.1336%" height="15" fill="rgb(254,171,16)"/><text x="54.1616%" y="415.50"></text></g><g><title>wait_woken (10 samples, 0.12%)</title><rect x="53.9237%" y="389" width="0.1215%" height="15" fill="rgb(230,171,20)"/><text x="54.1737%" y="399.50"></text></g><g><title>schedule_timeout (10 samples, 0.12%)</title><rect x="53.9237%" y="373" width="0.1215%" height="15" fill="rgb(210,71,41)"/><text x="54.1737%" y="383.50"></text></g><g><title>schedule (10 samples, 0.12%)</title><rect x="53.9237%" y="357" width="0.1215%" height="15" fill="rgb(206,173,20)"/><text x="54.1737%" y="367.50"></text></g><g><title>do_syscall_64 (21 samples, 0.26%)</title><rect x="53.8508%" y="485" width="0.2551%" height="15" fill="rgb(233,88,34)"/><text x="54.1008%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (21 samples, 0.26%)</title><rect x="53.8508%" y="469" width="0.2551%" height="15" fill="rgb(223,209,46)"/><text x="54.1008%" y="479.50"></text></g><g><title>__sys_recvfrom (21 samples, 0.26%)</title><rect x="53.8508%" y="453" width="0.2551%" height="15" fill="rgb(250,43,18)"/><text x="54.1008%" y="463.50"></text></g><g><title>inet_recvmsg (20 samples, 0.24%)</title><rect x="53.8630%" y="437" width="0.2430%" height="15" fill="rgb(208,13,10)"/><text x="54.1130%" y="447.50"></text></g><g><title>tcp_recvmsg (20 samples, 0.24%)</title><rect x="53.8630%" y="421" width="0.2430%" height="15" fill="rgb(212,200,36)"/><text x="54.1130%" y="431.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 0.30%)</title><rect x="53.8508%" y="597" width="0.3037%" height="15" fill="rgb(225,90,30)"/><text x="54.1008%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 0.30%)</title><rect x="53.8508%" y="581" width="0.3037%" height="15" fill="rgb(236,182,39)"/><text x="54.1008%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 0.30%)</title><rect x="53.8508%" y="565" width="0.3037%" height="15" fill="rgb(212,144,35)"/><text x="54.1008%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 0.30%)</title><rect x="53.8508%" y="549" width="0.3037%" height="15" fill="rgb(228,63,44)"/><text x="54.1008%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 0.30%)</title><rect x="53.8508%" y="533" width="0.3037%" height="15" fill="rgb(228,109,6)"/><text x="54.1008%" y="543.50"></text></g><g><title>__libc_recv (25 samples, 0.30%)</title><rect x="53.8508%" y="517" width="0.3037%" height="15" fill="rgb(238,117,24)"/><text x="54.1008%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 0.30%)</title><rect x="53.8508%" y="501" width="0.3037%" height="15" fill="rgb(242,26,26)"/><text x="54.1008%" y="511.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (26 samples, 0.32%)</title><rect x="53.8508%" y="693" width="0.3158%" height="15" fill="rgb(221,92,48)"/><text x="54.1008%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (26 samples, 0.32%)</title><rect x="53.8508%" y="677" width="0.3158%" height="15" fill="rgb(209,209,32)"/><text x="54.1008%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (26 samples, 0.32%)</title><rect x="53.8508%" y="661" width="0.3158%" height="15" fill="rgb(221,70,22)"/><text x="54.1008%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (26 samples, 0.32%)</title><rect x="53.8508%" y="645" width="0.3158%" height="15" fill="rgb(248,145,5)"/><text x="54.1008%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (26 samples, 0.32%)</title><rect x="53.8508%" y="629" width="0.3158%" height="15" fill="rgb(226,116,26)"/><text x="54.1008%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.32%)</title><rect x="53.8508%" y="613" width="0.3158%" height="15" fill="rgb(244,5,17)"/><text x="54.1008%" y="623.50"></text></g><g><title>sk_wait_data (18 samples, 0.22%)</title><rect x="54.2396%" y="405" width="0.2187%" height="15" fill="rgb(252,159,33)"/><text x="54.4896%" y="415.50"></text></g><g><title>wait_woken (12 samples, 0.15%)</title><rect x="54.3124%" y="389" width="0.1458%" height="15" fill="rgb(206,71,0)"/><text x="54.5624%" y="399.50"></text></g><g><title>schedule_timeout (12 samples, 0.15%)</title><rect x="54.3124%" y="373" width="0.1458%" height="15" fill="rgb(233,118,54)"/><text x="54.5624%" y="383.50"></text></g><g><title>schedule (12 samples, 0.15%)</title><rect x="54.3124%" y="357" width="0.1458%" height="15" fill="rgb(234,83,48)"/><text x="54.5624%" y="367.50"></text></g><g><title>__schedule (12 samples, 0.15%)</title><rect x="54.3124%" y="341" width="0.1458%" height="15" fill="rgb(228,3,54)"/><text x="54.5624%" y="351.50"></text></g><g><title>__x64_sys_recvfrom (26 samples, 0.32%)</title><rect x="54.1667%" y="469" width="0.3158%" height="15" fill="rgb(226,155,13)"/><text x="54.4167%" y="479.50"></text></g><g><title>__sys_recvfrom (26 samples, 0.32%)</title><rect x="54.1667%" y="453" width="0.3158%" height="15" fill="rgb(241,28,37)"/><text x="54.4167%" y="463.50"></text></g><g><title>inet_recvmsg (26 samples, 0.32%)</title><rect x="54.1667%" y="437" width="0.3158%" height="15" fill="rgb(233,93,10)"/><text x="54.4167%" y="447.50"></text></g><g><title>tcp_recvmsg (26 samples, 0.32%)</title><rect x="54.1667%" y="421" width="0.3158%" height="15" fill="rgb(225,113,19)"/><text x="54.4167%" y="431.50"></text></g><g><title>do_syscall_64 (29 samples, 0.35%)</title><rect x="54.1667%" y="485" width="0.3523%" height="15" fill="rgb(241,2,18)"/><text x="54.4167%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 0.36%)</title><rect x="54.1667%" y="597" width="0.3644%" height="15" fill="rgb(228,207,21)"/><text x="54.4167%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 0.36%)</title><rect x="54.1667%" y="581" width="0.3644%" height="15" fill="rgb(213,211,35)"/><text x="54.4167%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 0.36%)</title><rect x="54.1667%" y="565" width="0.3644%" height="15" fill="rgb(209,83,10)"/><text x="54.4167%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 0.36%)</title><rect x="54.1667%" y="549" width="0.3644%" height="15" fill="rgb(209,164,1)"/><text x="54.4167%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 0.36%)</title><rect x="54.1667%" y="533" width="0.3644%" height="15" fill="rgb(213,184,43)"/><text x="54.4167%" y="543.50"></text></g><g><title>__libc_recv (30 samples, 0.36%)</title><rect x="54.1667%" y="517" width="0.3644%" height="15" fill="rgb(231,61,34)"/><text x="54.4167%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (30 samples, 0.36%)</title><rect x="54.1667%" y="501" width="0.3644%" height="15" fill="rgb(235,75,3)"/><text x="54.4167%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.39%)</title><rect x="54.1667%" y="613" width="0.3887%" height="15" fill="rgb(220,106,47)"/><text x="54.4167%" y="623.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (33 samples, 0.40%)</title><rect x="54.1667%" y="677" width="0.4009%" height="15" fill="rgb(210,196,33)"/><text x="54.4167%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (33 samples, 0.40%)</title><rect x="54.1667%" y="661" width="0.4009%" height="15" fill="rgb(229,154,42)"/><text x="54.4167%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (33 samples, 0.40%)</title><rect x="54.1667%" y="645" width="0.4009%" height="15" fill="rgb(228,114,26)"/><text x="54.4167%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (33 samples, 0.40%)</title><rect x="54.1667%" y="629" width="0.4009%" height="15" fill="rgb(208,144,1)"/><text x="54.4167%" y="639.50"></text></g><g><title>sk_wait_data (15 samples, 0.18%)</title><rect x="54.6647%" y="405" width="0.1822%" height="15" fill="rgb(239,112,37)"/><text x="54.9147%" y="415.50"></text></g><g><title>wait_woken (12 samples, 0.15%)</title><rect x="54.7012%" y="389" width="0.1458%" height="15" fill="rgb(210,96,50)"/><text x="54.9512%" y="399.50"></text></g><g><title>schedule_timeout (11 samples, 0.13%)</title><rect x="54.7133%" y="373" width="0.1336%" height="15" fill="rgb(222,178,2)"/><text x="54.9633%" y="383.50"></text></g><g><title>schedule (11 samples, 0.13%)</title><rect x="54.7133%" y="357" width="0.1336%" height="15" fill="rgb(226,74,18)"/><text x="54.9633%" y="367.50"></text></g><g><title>__schedule (11 samples, 0.13%)</title><rect x="54.7133%" y="341" width="0.1336%" height="15" fill="rgb(225,67,54)"/><text x="54.9633%" y="351.50"></text></g><g><title>inet_recvmsg (17 samples, 0.21%)</title><rect x="54.6526%" y="437" width="0.2065%" height="15" fill="rgb(251,92,32)"/><text x="54.9026%" y="447.50"></text></g><g><title>tcp_recvmsg (17 samples, 0.21%)</title><rect x="54.6526%" y="421" width="0.2065%" height="15" fill="rgb(228,149,22)"/><text x="54.9026%" y="431.50"></text></g><g><title>do_syscall_64 (19 samples, 0.23%)</title><rect x="54.6404%" y="485" width="0.2308%" height="15" fill="rgb(243,54,13)"/><text x="54.8904%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 0.23%)</title><rect x="54.6404%" y="469" width="0.2308%" height="15" fill="rgb(243,180,28)"/><text x="54.8904%" y="479.50"></text></g><g><title>__sys_recvfrom (19 samples, 0.23%)</title><rect x="54.6404%" y="453" width="0.2308%" height="15" fill="rgb(208,167,24)"/><text x="54.8904%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 0.26%)</title><rect x="54.6404%" y="501" width="0.2551%" height="15" fill="rgb(245,73,45)"/><text x="54.8904%" y="511.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (25 samples, 0.30%)</title><rect x="54.6040%" y="645" width="0.3037%" height="15" fill="rgb(237,203,48)"/><text x="54.8540%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (23 samples, 0.28%)</title><rect x="54.6283%" y="629" width="0.2794%" height="15" fill="rgb(211,197,16)"/><text x="54.8783%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.28%)</title><rect x="54.6283%" y="613" width="0.2794%" height="15" fill="rgb(243,99,51)"/><text x="54.8783%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 0.27%)</title><rect x="54.6404%" y="597" width="0.2672%" height="15" fill="rgb(215,123,29)"/><text x="54.8904%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 0.27%)</title><rect x="54.6404%" y="581" width="0.2672%" height="15" fill="rgb(239,186,37)"/><text x="54.8904%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 0.27%)</title><rect x="54.6404%" y="565" width="0.2672%" height="15" fill="rgb(252,136,39)"/><text x="54.8904%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 0.27%)</title><rect x="54.6404%" y="549" width="0.2672%" height="15" fill="rgb(223,213,32)"/><text x="54.8904%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 0.27%)</title><rect x="54.6404%" y="533" width="0.2672%" height="15" fill="rgb(233,115,5)"/><text x="54.8904%" y="543.50"></text></g><g><title>__libc_recv (22 samples, 0.27%)</title><rect x="54.6404%" y="517" width="0.2672%" height="15" fill="rgb(207,226,44)"/><text x="54.8904%" y="527.50"></text></g><g><title>sock_def_readable (11 samples, 0.13%)</title><rect x="55.1628%" y="133" width="0.1336%" height="15" fill="rgb(208,126,0)"/><text x="55.4128%" y="143.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.13%)</title><rect x="55.1628%" y="117" width="0.1336%" height="15" fill="rgb(244,66,21)"/><text x="55.4128%" y="127.50"></text></g><g><title>__wake_up_common (9 samples, 0.11%)</title><rect x="55.1871%" y="101" width="0.1093%" height="15" fill="rgb(222,97,12)"/><text x="55.4371%" y="111.50"></text></g><g><title>pollwake (9 samples, 0.11%)</title><rect x="55.1871%" y="85" width="0.1093%" height="15" fill="rgb(219,213,19)"/><text x="55.4371%" y="95.50"></text></g><g><title>do_softirq (28 samples, 0.34%)</title><rect x="55.0656%" y="341" width="0.3401%" height="15" fill="rgb(252,169,30)"/><text x="55.3156%" y="351.50"></text></g><g><title>do_softirq_own_stack (28 samples, 0.34%)</title><rect x="55.0656%" y="325" width="0.3401%" height="15" fill="rgb(206,32,51)"/><text x="55.3156%" y="335.50"></text></g><g><title>__do_softirq (28 samples, 0.34%)</title><rect x="55.0656%" y="309" width="0.3401%" height="15" fill="rgb(250,172,42)"/><text x="55.3156%" y="319.50"></text></g><g><title>net_rx_action (27 samples, 0.33%)</title><rect x="55.0777%" y="293" width="0.3280%" height="15" fill="rgb(209,34,43)"/><text x="55.3277%" y="303.50"></text></g><g><title>process_backlog (27 samples, 0.33%)</title><rect x="55.0777%" y="277" width="0.3280%" height="15" fill="rgb(223,11,35)"/><text x="55.3277%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (27 samples, 0.33%)</title><rect x="55.0777%" y="261" width="0.3280%" height="15" fill="rgb(251,219,26)"/><text x="55.3277%" y="271.50"></text></g><g><title>ip_rcv (27 samples, 0.33%)</title><rect x="55.0777%" y="245" width="0.3280%" height="15" fill="rgb(231,119,3)"/><text x="55.3277%" y="255.50"></text></g><g><title>ip_local_deliver (27 samples, 0.33%)</title><rect x="55.0777%" y="229" width="0.3280%" height="15" fill="rgb(216,97,11)"/><text x="55.3277%" y="239.50"></text></g><g><title>ip_local_deliver_finish (27 samples, 0.33%)</title><rect x="55.0777%" y="213" width="0.3280%" height="15" fill="rgb(223,59,9)"/><text x="55.3277%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (25 samples, 0.30%)</title><rect x="55.1020%" y="197" width="0.3037%" height="15" fill="rgb(233,93,31)"/><text x="55.3520%" y="207.50"></text></g><g><title>tcp_v4_rcv (25 samples, 0.30%)</title><rect x="55.1020%" y="181" width="0.3037%" height="15" fill="rgb(239,81,33)"/><text x="55.3520%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 0.28%)</title><rect x="55.1263%" y="165" width="0.2794%" height="15" fill="rgb(213,120,34)"/><text x="55.3763%" y="175.50"></text></g><g><title>tcp_rcv_established (23 samples, 0.28%)</title><rect x="55.1263%" y="149" width="0.2794%" height="15" fill="rgb(243,49,53)"/><text x="55.3763%" y="159.50"></text></g><g><title>ip_finish_output2 (34 samples, 0.41%)</title><rect x="55.0049%" y="373" width="0.4130%" height="15" fill="rgb(247,216,33)"/><text x="55.2549%" y="383.50"></text></g><g><title>__local_bh_enable_ip (29 samples, 0.35%)</title><rect x="55.0656%" y="357" width="0.3523%" height="15" fill="rgb(226,26,14)"/><text x="55.3156%" y="367.50"></text></g><g><title>__ip_queue_xmit (37 samples, 0.45%)</title><rect x="54.9806%" y="405" width="0.4495%" height="15" fill="rgb(215,49,53)"/><text x="55.2306%" y="415.50"></text></g><g><title>ip_output (35 samples, 0.43%)</title><rect x="55.0049%" y="389" width="0.4252%" height="15" fill="rgb(245,162,40)"/><text x="55.2549%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (43 samples, 0.52%)</title><rect x="54.9684%" y="453" width="0.5224%" height="15" fill="rgb(229,68,17)"/><text x="55.2184%" y="463.50"></text></g><g><title>tcp_write_xmit (43 samples, 0.52%)</title><rect x="54.9684%" y="437" width="0.5224%" height="15" fill="rgb(213,182,10)"/><text x="55.2184%" y="447.50"></text></g><g><title>__tcp_transmit_skb (43 samples, 0.52%)</title><rect x="54.9684%" y="421" width="0.5224%" height="15" fill="rgb(245,125,30)"/><text x="55.2184%" y="431.50"></text></g><g><title>sock_sendmsg (48 samples, 0.58%)</title><rect x="54.9198%" y="501" width="0.5831%" height="15" fill="rgb(232,202,2)"/><text x="55.1698%" y="511.50"></text></g><g><title>tcp_sendmsg (48 samples, 0.58%)</title><rect x="54.9198%" y="485" width="0.5831%" height="15" fill="rgb(237,140,51)"/><text x="55.1698%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (44 samples, 0.53%)</title><rect x="54.9684%" y="469" width="0.5345%" height="15" fill="rgb(236,157,25)"/><text x="55.2184%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (49 samples, 0.60%)</title><rect x="54.9198%" y="565" width="0.5952%" height="15" fill="rgb(219,209,0)"/><text x="55.1698%" y="575.50"></text></g><g><title>do_syscall_64 (49 samples, 0.60%)</title><rect x="54.9198%" y="549" width="0.5952%" height="15" fill="rgb(240,116,54)"/><text x="55.1698%" y="559.50"></text></g><g><title>__x64_sys_sendto (49 samples, 0.60%)</title><rect x="54.9198%" y="533" width="0.5952%" height="15" fill="rgb(216,10,36)"/><text x="55.1698%" y="543.50"></text></g><g><title>__sys_sendto (49 samples, 0.60%)</title><rect x="54.9198%" y="517" width="0.5952%" height="15" fill="rgb(222,72,44)"/><text x="55.1698%" y="527.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::resubscribe (79 samples, 0.96%)</title><rect x="54.5675%" y="677" width="0.9597%" height="15" fill="rgb(232,159,9)"/><text x="54.8175%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (76 samples, 0.92%)</title><rect x="54.6040%" y="661" width="0.9232%" height="15" fill="rgb(210,39,32)"/><text x="54.8540%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (51 samples, 0.62%)</title><rect x="54.9077%" y="645" width="0.6195%" height="15" fill="rgb(216,194,45)"/><text x="55.1577%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (51 samples, 0.62%)</title><rect x="54.9077%" y="629" width="0.6195%" height="15" fill="rgb(218,18,35)"/><text x="55.1577%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (51 samples, 0.62%)</title><rect x="54.9077%" y="613" width="0.6195%" height="15" fill="rgb(207,83,51)"/><text x="55.1577%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (51 samples, 0.62%)</title><rect x="54.9077%" y="597" width="0.6195%" height="15" fill="rgb(225,63,43)"/><text x="55.1577%" y="607.50"></text></g><g><title>__libc_send (51 samples, 0.62%)</title><rect x="54.9077%" y="581" width="0.6195%" height="15" fill="rgb(207,57,36)"/><text x="55.1577%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.11%)</title><rect x="55.5879%" y="549" width="0.1093%" height="15" fill="rgb(216,99,33)"/><text x="55.8379%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.11%)</title><rect x="55.5879%" y="533" width="0.1093%" height="15" fill="rgb(225,42,16)"/><text x="55.8379%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.11%)</title><rect x="55.5879%" y="517" width="0.1093%" height="15" fill="rgb(220,201,45)"/><text x="55.8379%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (9 samples, 0.11%)</title><rect x="55.5879%" y="501" width="0.1093%" height="15" fill="rgb(225,33,4)"/><text x="55.8379%" y="511.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (16 samples, 0.19%)</title><rect x="55.5272%" y="629" width="0.1944%" height="15" fill="rgb(224,33,50)"/><text x="55.7772%" y="639.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (16 samples, 0.19%)</title><rect x="55.5272%" y="613" width="0.1944%" height="15" fill="rgb(246,198,51)"/><text x="55.7772%" y="623.50"></text></g><g><title>decor_mem::helpers::expr_to_col (11 samples, 0.13%)</title><rect x="55.5879%" y="597" width="0.1336%" height="15" fill="rgb(205,22,4)"/><text x="55.8379%" y="607.50"></text></g><g><title>core::fmt::write (11 samples, 0.13%)</title><rect x="55.5879%" y="581" width="0.1336%" height="15" fill="rgb(206,3,8)"/><text x="55.8379%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (11 samples, 0.13%)</title><rect x="55.5879%" y="565" width="0.1336%" height="15" fill="rgb(251,23,15)"/><text x="55.8379%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.13%)</title><rect x="55.9159%" y="533" width="0.1336%" height="15" fill="rgb(252,88,28)"/><text x="56.1659%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.23%)</title><rect x="55.8309%" y="565" width="0.2308%" height="15" fill="rgb(212,127,14)"/><text x="56.0809%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (19 samples, 0.23%)</title><rect x="55.8309%" y="549" width="0.2308%" height="15" fill="rgb(247,145,37)"/><text x="56.0809%" y="559.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (48 samples, 0.58%)</title><rect x="55.5272%" y="661" width="0.5831%" height="15" fill="rgb(209,117,53)"/><text x="55.7772%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (48 samples, 0.58%)</title><rect x="55.5272%" y="645" width="0.5831%" height="15" fill="rgb(212,90,42)"/><text x="55.7772%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicates_of_constraint (32 samples, 0.39%)</title><rect x="55.7216%" y="629" width="0.3887%" height="15" fill="rgb(218,164,37)"/><text x="55.9716%" y="639.50"></text></g><g><title>decor_mem::helpers::expr_to_col (25 samples, 0.30%)</title><rect x="55.8066%" y="613" width="0.3037%" height="15" fill="rgb(246,65,34)"/><text x="56.0566%" y="623.50"></text></g><g><title>core::fmt::write (25 samples, 0.30%)</title><rect x="55.8066%" y="597" width="0.3037%" height="15" fill="rgb(231,100,33)"/><text x="56.0566%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (25 samples, 0.30%)</title><rect x="55.8066%" y="581" width="0.3037%" height="15" fill="rgb(228,126,14)"/><text x="56.0566%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (14 samples, 0.17%)</title><rect x="56.2804%" y="581" width="0.1701%" height="15" fill="rgb(215,173,21)"/><text x="56.5304%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="56.3411%" y="565" width="0.1093%" height="15" fill="rgb(210,6,40)"/><text x="56.5911%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.35%)</title><rect x="56.1103%" y="613" width="0.3523%" height="15" fill="rgb(212,48,18)"/><text x="56.3603%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (23 samples, 0.28%)</title><rect x="56.1832%" y="597" width="0.2794%" height="15" fill="rgb(230,214,11)"/><text x="56.4332%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (34 samples, 0.41%)</title><rect x="56.1103%" y="629" width="0.4130%" height="15" fill="rgb(254,105,39)"/><text x="56.3603%" y="639.50"></text></g><g><title>core::fmt::write (30 samples, 0.36%)</title><rect x="56.5233%" y="629" width="0.3644%" height="15" fill="rgb(245,158,5)"/><text x="56.7733%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (30 samples, 0.36%)</title><rect x="56.5233%" y="613" width="0.3644%" height="15" fill="rgb(249,208,11)"/><text x="56.7733%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (25 samples, 0.30%)</title><rect x="56.5841%" y="597" width="0.3037%" height="15" fill="rgb(210,39,28)"/><text x="56.8341%" y="607.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs_from_view (24 samples, 0.29%)</title><rect x="56.8878%" y="629" width="0.2915%" height="15" fill="rgb(211,56,53)"/><text x="57.1378%" y="639.50"></text></g><g><title>decor_mem::select::predicates::pred_matches_row (24 samples, 0.29%)</title><rect x="56.8878%" y="613" width="0.2915%" height="15" fill="rgb(226,201,30)"/><text x="57.1378%" y="623.50"></text></g><g><title>__x64_sys_mprotect (21 samples, 0.26%)</title><rect x="57.6774%" y="501" width="0.2551%" height="15" fill="rgb(239,101,34)"/><text x="57.9274%" y="511.50"></text></g><g><title>do_mprotect_pkey (21 samples, 0.26%)</title><rect x="57.6774%" y="485" width="0.2551%" height="15" fill="rgb(226,209,5)"/><text x="57.9274%" y="495.50"></text></g><g><title>mprotect_fixup (18 samples, 0.22%)</title><rect x="57.7138%" y="469" width="0.2187%" height="15" fill="rgb(250,105,47)"/><text x="57.9638%" y="479.50"></text></g><g><title>do_syscall_64 (23 samples, 0.28%)</title><rect x="57.6774%" y="517" width="0.2794%" height="15" fill="rgb(230,72,3)"/><text x="57.9274%" y="527.50"></text></g><g><title>__GI___mprotect (24 samples, 0.29%)</title><rect x="57.6774%" y="549" width="0.2915%" height="15" fill="rgb(232,218,39)"/><text x="57.9274%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.29%)</title><rect x="57.6774%" y="533" width="0.2915%" height="15" fill="rgb(248,166,6)"/><text x="57.9274%" y="543.50"></text></g><g><title>page_fault (18 samples, 0.22%)</title><rect x="57.9932%" y="549" width="0.2187%" height="15" fill="rgb(247,89,20)"/><text x="58.2432%" y="559.50"></text></g><g><title>do_user_addr_fault (18 samples, 0.22%)</title><rect x="57.9932%" y="533" width="0.2187%" height="15" fill="rgb(248,130,54)"/><text x="58.2432%" y="543.50"></text></g><g><title>handle_mm_fault (17 samples, 0.21%)</title><rect x="58.0053%" y="517" width="0.2065%" height="15" fill="rgb(234,196,4)"/><text x="58.2553%" y="527.50"></text></g><g><title>__handle_mm_fault (14 samples, 0.17%)</title><rect x="58.0418%" y="501" width="0.1701%" height="15" fill="rgb(250,143,31)"/><text x="58.2918%" y="511.50"></text></g><g><title>__GI___libc_malloc (53 samples, 0.64%)</title><rect x="57.5923%" y="597" width="0.6438%" height="15" fill="rgb(211,110,34)"/><text x="57.8423%" y="607.50"></text></g><g><title>_int_malloc (48 samples, 0.58%)</title><rect x="57.6531%" y="581" width="0.5831%" height="15" fill="rgb(215,124,48)"/><text x="57.9031%" y="591.50"></text></g><g><title>sysmalloc (46 samples, 0.56%)</title><rect x="57.6774%" y="565" width="0.5588%" height="15" fill="rgb(216,46,13)"/><text x="57.9274%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.36%)</title><rect x="58.2362%" y="597" width="0.3644%" height="15" fill="rgb(205,184,25)"/><text x="58.4862%" y="607.50"></text></g><g><title>page_fault (10 samples, 0.12%)</title><rect x="58.6249%" y="597" width="0.1215%" height="15" fill="rgb(228,1,10)"/><text x="58.8749%" y="607.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.11%)</title><rect x="58.6370%" y="581" width="0.1093%" height="15" fill="rgb(213,116,27)"/><text x="58.8870%" y="591.50"></text></g><g><title>handle_mm_fault (9 samples, 0.11%)</title><rect x="58.6370%" y="565" width="0.1093%" height="15" fill="rgb(241,95,50)"/><text x="58.8870%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (116 samples, 1.41%)</title><rect x="57.3858%" y="613" width="1.4091%" height="15" fill="rgb(238,48,32)"/><text x="57.6358%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.12%)</title><rect x="58.9164%" y="613" width="0.1215%" height="15" fill="rgb(235,113,49)"/><text x="59.1664%" y="623.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (159 samples, 1.93%)</title><rect x="57.1793%" y="629" width="1.9315%" height="15" fill="rgb(205,127,43)"/><text x="57.4293%" y="639.50">d..</text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (296 samples, 3.60%)</title><rect x="55.5272%" y="677" width="3.5957%" height="15" fill="rgb(250,162,2)"/><text x="55.7772%" y="687.50">deco..</text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (248 samples, 3.01%)</title><rect x="56.1103%" y="661" width="3.0126%" height="15" fill="rgb(220,13,41)"/><text x="56.3603%" y="671.50">dec..</text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (248 samples, 3.01%)</title><rect x="56.1103%" y="645" width="3.0126%" height="15" fill="rgb(249,221,25)"/><text x="56.3603%" y="655.50">dec..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.11%)</title><rect x="59.2809%" y="597" width="0.1093%" height="15" fill="rgb(215,208,19)"/><text x="59.5309%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.11%)</title><rect x="59.4145%" y="581" width="0.1093%" height="15" fill="rgb(236,175,2)"/><text x="59.6645%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (23 samples, 0.28%)</title><rect x="59.2566%" y="613" width="0.2794%" height="15" fill="rgb(241,52,2)"/><text x="59.5066%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (12 samples, 0.15%)</title><rect x="59.3902%" y="597" width="0.1458%" height="15" fill="rgb(248,140,14)"/><text x="59.6402%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.12%)</title><rect x="59.8882%" y="597" width="0.1215%" height="15" fill="rgb(253,22,42)"/><text x="60.1382%" y="607.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (510 samples, 6.20%)</title><rect x="53.8508%" y="725" width="6.1953%" height="15" fill="rgb(234,61,47)"/><text x="54.1008%" y="735.50">&lt;decor_m..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (510 samples, 6.20%)</title><rect x="53.8508%" y="709" width="6.1953%" height="15" fill="rgb(208,226,15)"/><text x="54.1008%" y="719.50">decor_me..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (484 samples, 5.88%)</title><rect x="54.1667%" y="693" width="5.8795%" height="15" fill="rgb(217,221,4)"/><text x="54.4167%" y="703.50">decor_m..</text></g><g><title>decor_mem::views::Views::delete (76 samples, 0.92%)</title><rect x="59.1229%" y="677" width="0.9232%" height="15" fill="rgb(212,174,34)"/><text x="59.3729%" y="687.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (76 samples, 0.92%)</title><rect x="59.1229%" y="661" width="0.9232%" height="15" fill="rgb(253,83,4)"/><text x="59.3729%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (68 samples, 0.83%)</title><rect x="59.2201%" y="645" width="0.8260%" height="15" fill="rgb(250,195,49)"/><text x="59.4701%" y="655.50"></text></g><g><title>decor_mem::select::predicates::get_predicated_rptrs (65 samples, 0.79%)</title><rect x="59.2566%" y="629" width="0.7896%" height="15" fill="rgb(241,192,25)"/><text x="59.5066%" y="639.50"></text></g><g><title>decor_mem::views::View::get_indexed_rptrs_of_col (30 samples, 0.36%)</title><rect x="59.6817%" y="613" width="0.3644%" height="15" fill="rgb(208,124,10)"/><text x="59.9317%" y="623.50"></text></g><g><title>inet_recvmsg (14 samples, 0.17%)</title><rect x="60.1555%" y="437" width="0.1701%" height="15" fill="rgb(222,33,0)"/><text x="60.4055%" y="447.50"></text></g><g><title>tcp_recvmsg (14 samples, 0.17%)</title><rect x="60.1555%" y="421" width="0.1701%" height="15" fill="rgb(234,209,28)"/><text x="60.4055%" y="431.50"></text></g><g><title>sk_wait_data (11 samples, 0.13%)</title><rect x="60.1919%" y="405" width="0.1336%" height="15" fill="rgb(224,11,23)"/><text x="60.4419%" y="415.50"></text></g><g><title>wait_woken (11 samples, 0.13%)</title><rect x="60.1919%" y="389" width="0.1336%" height="15" fill="rgb(232,99,1)"/><text x="60.4419%" y="399.50"></text></g><g><title>schedule_timeout (11 samples, 0.13%)</title><rect x="60.1919%" y="373" width="0.1336%" height="15" fill="rgb(237,95,45)"/><text x="60.4419%" y="383.50"></text></g><g><title>schedule (11 samples, 0.13%)</title><rect x="60.1919%" y="357" width="0.1336%" height="15" fill="rgb(208,109,11)"/><text x="60.4419%" y="367.50"></text></g><g><title>__schedule (10 samples, 0.12%)</title><rect x="60.2041%" y="341" width="0.1215%" height="15" fill="rgb(216,190,48)"/><text x="60.4541%" y="351.50"></text></g><g><title>do_syscall_64 (16 samples, 0.19%)</title><rect x="60.1433%" y="485" width="0.1944%" height="15" fill="rgb(251,171,36)"/><text x="60.3933%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (16 samples, 0.19%)</title><rect x="60.1433%" y="469" width="0.1944%" height="15" fill="rgb(230,62,22)"/><text x="60.3933%" y="479.50"></text></g><g><title>__sys_recvfrom (16 samples, 0.19%)</title><rect x="60.1433%" y="453" width="0.1944%" height="15" fill="rgb(225,114,35)"/><text x="60.3933%" y="463.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (18 samples, 0.22%)</title><rect x="60.1433%" y="597" width="0.2187%" height="15" fill="rgb(215,118,42)"/><text x="60.3933%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (18 samples, 0.22%)</title><rect x="60.1433%" y="581" width="0.2187%" height="15" fill="rgb(243,119,21)"/><text x="60.3933%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (18 samples, 0.22%)</title><rect x="60.1433%" y="565" width="0.2187%" height="15" fill="rgb(252,177,53)"/><text x="60.3933%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (18 samples, 0.22%)</title><rect x="60.1433%" y="549" width="0.2187%" height="15" fill="rgb(237,209,29)"/><text x="60.3933%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (18 samples, 0.22%)</title><rect x="60.1433%" y="533" width="0.2187%" height="15" fill="rgb(212,65,23)"/><text x="60.3933%" y="543.50"></text></g><g><title>__libc_recv (18 samples, 0.22%)</title><rect x="60.1433%" y="517" width="0.2187%" height="15" fill="rgb(230,222,46)"/><text x="60.3933%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.22%)</title><rect x="60.1433%" y="501" width="0.2187%" height="15" fill="rgb(215,135,32)"/><text x="60.3933%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.26%)</title><rect x="60.1190%" y="613" width="0.2551%" height="15" fill="rgb(246,101,22)"/><text x="60.3690%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (25 samples, 0.30%)</title><rect x="60.0948%" y="629" width="0.3037%" height="15" fill="rgb(206,107,13)"/><text x="60.3448%" y="639.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::unsubscribe (31 samples, 0.38%)</title><rect x="60.0462%" y="693" width="0.3766%" height="15" fill="rgb(250,100,44)"/><text x="60.2962%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (31 samples, 0.38%)</title><rect x="60.0462%" y="677" width="0.3766%" height="15" fill="rgb(231,147,38)"/><text x="60.2962%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (31 samples, 0.38%)</title><rect x="60.0462%" y="661" width="0.3766%" height="15" fill="rgb(229,8,40)"/><text x="60.2962%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (31 samples, 0.38%)</title><rect x="60.0462%" y="645" width="0.3766%" height="15" fill="rgb(221,135,30)"/><text x="60.2962%" y="655.50"></text></g><g><title>sk_wait_data (15 samples, 0.18%)</title><rect x="60.5685%" y="405" width="0.1822%" height="15" fill="rgb(249,193,18)"/><text x="60.8185%" y="415.50"></text></g><g><title>wait_woken (14 samples, 0.17%)</title><rect x="60.5807%" y="389" width="0.1701%" height="15" fill="rgb(209,133,39)"/><text x="60.8307%" y="399.50"></text></g><g><title>schedule_timeout (13 samples, 0.16%)</title><rect x="60.5928%" y="373" width="0.1579%" height="15" fill="rgb(232,100,14)"/><text x="60.8428%" y="383.50"></text></g><g><title>schedule (12 samples, 0.15%)</title><rect x="60.6050%" y="357" width="0.1458%" height="15" fill="rgb(224,185,1)"/><text x="60.8550%" y="367.50"></text></g><g><title>__schedule (12 samples, 0.15%)</title><rect x="60.6050%" y="341" width="0.1458%" height="15" fill="rgb(223,139,8)"/><text x="60.8550%" y="351.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 0.23%)</title><rect x="60.5442%" y="469" width="0.2308%" height="15" fill="rgb(232,213,38)"/><text x="60.7942%" y="479.50"></text></g><g><title>__sys_recvfrom (19 samples, 0.23%)</title><rect x="60.5442%" y="453" width="0.2308%" height="15" fill="rgb(207,94,22)"/><text x="60.7942%" y="463.50"></text></g><g><title>inet_recvmsg (18 samples, 0.22%)</title><rect x="60.5564%" y="437" width="0.2187%" height="15" fill="rgb(219,183,54)"/><text x="60.8064%" y="447.50"></text></g><g><title>tcp_recvmsg (18 samples, 0.22%)</title><rect x="60.5564%" y="421" width="0.2187%" height="15" fill="rgb(216,185,54)"/><text x="60.8064%" y="431.50"></text></g><g><title>do_syscall_64 (20 samples, 0.24%)</title><rect x="60.5442%" y="485" width="0.2430%" height="15" fill="rgb(254,217,39)"/><text x="60.7942%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (23 samples, 0.28%)</title><rect x="60.5321%" y="597" width="0.2794%" height="15" fill="rgb(240,178,23)"/><text x="60.7821%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (23 samples, 0.28%)</title><rect x="60.5321%" y="581" width="0.2794%" height="15" fill="rgb(218,11,47)"/><text x="60.7821%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (23 samples, 0.28%)</title><rect x="60.5321%" y="565" width="0.2794%" height="15" fill="rgb(218,51,51)"/><text x="60.7821%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (23 samples, 0.28%)</title><rect x="60.5321%" y="549" width="0.2794%" height="15" fill="rgb(238,126,27)"/><text x="60.7821%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (23 samples, 0.28%)</title><rect x="60.5321%" y="533" width="0.2794%" height="15" fill="rgb(249,202,22)"/><text x="60.7821%" y="543.50"></text></g><g><title>__libc_recv (23 samples, 0.28%)</title><rect x="60.5321%" y="517" width="0.2794%" height="15" fill="rgb(254,195,49)"/><text x="60.7821%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (22 samples, 0.27%)</title><rect x="60.5442%" y="501" width="0.2672%" height="15" fill="rgb(208,123,14)"/><text x="60.7942%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.34%)</title><rect x="60.5321%" y="613" width="0.3401%" height="15" fill="rgb(224,200,8)"/><text x="60.7821%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (38 samples, 0.46%)</title><rect x="60.4227%" y="645" width="0.4616%" height="15" fill="rgb(217,61,36)"/><text x="60.6727%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (33 samples, 0.40%)</title><rect x="60.4835%" y="629" width="0.4009%" height="15" fill="rgb(206,35,45)"/><text x="60.7335%" y="639.50"></text></g><g><title>sock_def_readable (21 samples, 0.26%)</title><rect x="61.2609%" y="133" width="0.2551%" height="15" fill="rgb(217,65,33)"/><text x="61.5109%" y="143.50"></text></g><g><title>__wake_up_common_lock (21 samples, 0.26%)</title><rect x="61.2609%" y="117" width="0.2551%" height="15" fill="rgb(222,158,48)"/><text x="61.5109%" y="127.50"></text></g><g><title>__wake_up_common (21 samples, 0.26%)</title><rect x="61.2609%" y="101" width="0.2551%" height="15" fill="rgb(254,2,54)"/><text x="61.5109%" y="111.50"></text></g><g><title>pollwake (21 samples, 0.26%)</title><rect x="61.2609%" y="85" width="0.2551%" height="15" fill="rgb(250,143,38)"/><text x="61.5109%" y="95.50"></text></g><g><title>try_to_wake_up (20 samples, 0.24%)</title><rect x="61.2731%" y="69" width="0.2430%" height="15" fill="rgb(248,25,0)"/><text x="61.5231%" y="79.50"></text></g><g><title>tcp_ack (9 samples, 0.11%)</title><rect x="61.5160%" y="133" width="0.1093%" height="15" fill="rgb(206,152,27)"/><text x="61.7660%" y="143.50"></text></g><g><title>ip_local_deliver (46 samples, 0.56%)</title><rect x="61.0909%" y="229" width="0.5588%" height="15" fill="rgb(240,77,30)"/><text x="61.3409%" y="239.50"></text></g><g><title>ip_local_deliver_finish (45 samples, 0.55%)</title><rect x="61.1030%" y="213" width="0.5466%" height="15" fill="rgb(231,5,3)"/><text x="61.3530%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (45 samples, 0.55%)</title><rect x="61.1030%" y="197" width="0.5466%" height="15" fill="rgb(207,226,32)"/><text x="61.3530%" y="207.50"></text></g><g><title>tcp_v4_rcv (45 samples, 0.55%)</title><rect x="61.1030%" y="181" width="0.5466%" height="15" fill="rgb(222,207,47)"/><text x="61.3530%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (39 samples, 0.47%)</title><rect x="61.1759%" y="165" width="0.4738%" height="15" fill="rgb(229,115,45)"/><text x="61.4259%" y="175.50"></text></g><g><title>tcp_rcv_established (39 samples, 0.47%)</title><rect x="61.1759%" y="149" width="0.4738%" height="15" fill="rgb(224,191,6)"/><text x="61.4259%" y="159.50"></text></g><g><title>__ip_queue_xmit (56 samples, 0.68%)</title><rect x="60.9815%" y="405" width="0.6803%" height="15" fill="rgb(230,227,24)"/><text x="61.2315%" y="415.50"></text></g><g><title>ip_output (55 samples, 0.67%)</title><rect x="60.9937%" y="389" width="0.6681%" height="15" fill="rgb(228,80,19)"/><text x="61.2437%" y="399.50"></text></g><g><title>ip_finish_output2 (55 samples, 0.67%)</title><rect x="60.9937%" y="373" width="0.6681%" height="15" fill="rgb(247,229,0)"/><text x="61.2437%" y="383.50"></text></g><g><title>__local_bh_enable_ip (52 samples, 0.63%)</title><rect x="61.0301%" y="357" width="0.6317%" height="15" fill="rgb(237,194,15)"/><text x="61.2801%" y="367.50"></text></g><g><title>do_softirq (52 samples, 0.63%)</title><rect x="61.0301%" y="341" width="0.6317%" height="15" fill="rgb(219,203,20)"/><text x="61.2801%" y="351.50"></text></g><g><title>do_softirq_own_stack (52 samples, 0.63%)</title><rect x="61.0301%" y="325" width="0.6317%" height="15" fill="rgb(234,128,8)"/><text x="61.2801%" y="335.50"></text></g><g><title>__do_softirq (52 samples, 0.63%)</title><rect x="61.0301%" y="309" width="0.6317%" height="15" fill="rgb(248,202,8)"/><text x="61.2801%" y="319.50"></text></g><g><title>net_rx_action (51 samples, 0.62%)</title><rect x="61.0423%" y="293" width="0.6195%" height="15" fill="rgb(206,104,37)"/><text x="61.2923%" y="303.50"></text></g><g><title>process_backlog (50 samples, 0.61%)</title><rect x="61.0544%" y="277" width="0.6074%" height="15" fill="rgb(223,8,27)"/><text x="61.3044%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (49 samples, 0.60%)</title><rect x="61.0666%" y="261" width="0.5952%" height="15" fill="rgb(216,217,28)"/><text x="61.3166%" y="271.50"></text></g><g><title>ip_rcv (48 samples, 0.58%)</title><rect x="61.0787%" y="245" width="0.5831%" height="15" fill="rgb(249,199,1)"/><text x="61.3287%" y="255.50"></text></g><g><title>__tcp_transmit_skb (59 samples, 0.72%)</title><rect x="60.9572%" y="421" width="0.7167%" height="15" fill="rgb(240,85,17)"/><text x="61.2072%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (63 samples, 0.77%)</title><rect x="60.9451%" y="453" width="0.7653%" height="15" fill="rgb(206,108,45)"/><text x="61.1951%" y="463.50"></text></g><g><title>tcp_write_xmit (63 samples, 0.77%)</title><rect x="60.9451%" y="437" width="0.7653%" height="15" fill="rgb(245,210,41)"/><text x="61.1951%" y="447.50"></text></g><g><title>sock_sendmsg (71 samples, 0.86%)</title><rect x="60.9329%" y="501" width="0.8625%" height="15" fill="rgb(206,13,37)"/><text x="61.1829%" y="511.50"></text></g><g><title>tcp_sendmsg (71 samples, 0.86%)</title><rect x="60.9329%" y="485" width="0.8625%" height="15" fill="rgb(250,61,18)"/><text x="61.1829%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (71 samples, 0.86%)</title><rect x="60.9329%" y="469" width="0.8625%" height="15" fill="rgb(235,172,48)"/><text x="61.1829%" y="479.50"></text></g><g><title>__x64_sys_sendto (74 samples, 0.90%)</title><rect x="60.9086%" y="533" width="0.8989%" height="15" fill="rgb(249,201,17)"/><text x="61.1586%" y="543.50"></text></g><g><title>__sys_sendto (73 samples, 0.89%)</title><rect x="60.9208%" y="517" width="0.8868%" height="15" fill="rgb(219,208,6)"/><text x="61.1708%" y="527.50"></text></g><g><title>do_syscall_64 (75 samples, 0.91%)</title><rect x="60.9086%" y="549" width="0.9111%" height="15" fill="rgb(248,31,23)"/><text x="61.1586%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (118 samples, 1.43%)</title><rect x="60.4227%" y="677" width="1.4334%" height="15" fill="rgb(245,15,42)"/><text x="60.6727%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (118 samples, 1.43%)</title><rect x="60.4227%" y="661" width="1.4334%" height="15" fill="rgb(222,217,39)"/><text x="60.6727%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (80 samples, 0.97%)</title><rect x="60.8844%" y="645" width="0.9718%" height="15" fill="rgb(210,219,27)"/><text x="61.1344%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (79 samples, 0.96%)</title><rect x="60.8965%" y="629" width="0.9597%" height="15" fill="rgb(252,166,36)"/><text x="61.1465%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (79 samples, 0.96%)</title><rect x="60.8965%" y="613" width="0.9597%" height="15" fill="rgb(245,132,34)"/><text x="61.1465%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (79 samples, 0.96%)</title><rect x="60.8965%" y="597" width="0.9597%" height="15" fill="rgb(236,54,3)"/><text x="61.1465%" y="607.50"></text></g><g><title>__libc_send (79 samples, 0.96%)</title><rect x="60.8965%" y="581" width="0.9597%" height="15" fill="rgb(241,173,43)"/><text x="61.1465%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (78 samples, 0.95%)</title><rect x="60.9086%" y="565" width="0.9475%" height="15" fill="rgb(215,190,9)"/><text x="61.1586%" y="575.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.16%)</title><rect x="62.0262%" y="565" width="0.1579%" height="15" fill="rgb(242,101,16)"/><text x="62.2762%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (43 samples, 0.52%)</title><rect x="61.9169%" y="597" width="0.5224%" height="15" fill="rgb(223,190,21)"/><text x="62.1669%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (43 samples, 0.52%)</title><rect x="61.9169%" y="581" width="0.5224%" height="15" fill="rgb(215,228,25)"/><text x="62.1669%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (63 samples, 0.77%)</title><rect x="61.8926%" y="613" width="0.7653%" height="15" fill="rgb(225,36,22)"/><text x="62.1426%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (18 samples, 0.22%)</title><rect x="62.4393%" y="597" width="0.2187%" height="15" fill="rgb(251,106,46)"/><text x="62.6893%" y="607.50"></text></g><g><title>core::fmt::write (71 samples, 0.86%)</title><rect x="61.8683%" y="645" width="0.8625%" height="15" fill="rgb(208,90,1)"/><text x="62.1183%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (69 samples, 0.84%)</title><rect x="61.8926%" y="629" width="0.8382%" height="15" fill="rgb(243,10,4)"/><text x="62.1426%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (23 samples, 0.28%)</title><rect x="63.0224%" y="613" width="0.2794%" height="15" fill="rgb(212,137,27)"/><text x="63.2724%" y="623.50"></text></g><g><title>pagevec_lru_move_fn (10 samples, 0.12%)</title><rect x="63.4354%" y="533" width="0.1215%" height="15" fill="rgb(231,220,49)"/><text x="63.6854%" y="543.50"></text></g><g><title>__lru_cache_add (11 samples, 0.13%)</title><rect x="63.4354%" y="549" width="0.1336%" height="15" fill="rgb(237,96,20)"/><text x="63.6854%" y="559.50"></text></g><g><title>clear_page_erms (28 samples, 0.34%)</title><rect x="63.7998%" y="469" width="0.3401%" height="15" fill="rgb(239,229,30)"/><text x="64.0498%" y="479.50"></text></g><g><title>alloc_pages_vma (48 samples, 0.58%)</title><rect x="63.5811%" y="549" width="0.5831%" height="15" fill="rgb(219,65,33)"/><text x="63.8311%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (48 samples, 0.58%)</title><rect x="63.5811%" y="533" width="0.5831%" height="15" fill="rgb(243,134,7)"/><text x="63.8311%" y="543.50"></text></g><g><title>get_page_from_freelist (47 samples, 0.57%)</title><rect x="63.5933%" y="517" width="0.5709%" height="15" fill="rgb(216,177,54)"/><text x="63.8433%" y="527.50"></text></g><g><title>prep_new_page (33 samples, 0.40%)</title><rect x="63.7634%" y="501" width="0.4009%" height="15" fill="rgb(211,160,20)"/><text x="64.0134%" y="511.50"></text></g><g><title>kernel_init_free_pages (32 samples, 0.39%)</title><rect x="63.7755%" y="485" width="0.3887%" height="15" fill="rgb(239,85,39)"/><text x="64.0255%" y="495.50"></text></g><g><title>get_mem_cgroup_from_mm (9 samples, 0.11%)</title><rect x="64.1885%" y="517" width="0.1093%" height="15" fill="rgb(232,125,22)"/><text x="64.4385%" y="527.50"></text></g><g><title>__handle_mm_fault (91 samples, 1.11%)</title><rect x="63.3746%" y="565" width="1.1054%" height="15" fill="rgb(244,57,34)"/><text x="63.6246%" y="575.50"></text></g><g><title>mem_cgroup_try_charge_delay (25 samples, 0.30%)</title><rect x="64.1764%" y="549" width="0.3037%" height="15" fill="rgb(214,203,32)"/><text x="64.4264%" y="559.50"></text></g><g><title>mem_cgroup_try_charge (24 samples, 0.29%)</title><rect x="64.1885%" y="533" width="0.2915%" height="15" fill="rgb(207,58,43)"/><text x="64.4385%" y="543.50"></text></g><g><title>try_charge (15 samples, 0.18%)</title><rect x="64.2979%" y="517" width="0.1822%" height="15" fill="rgb(215,193,15)"/><text x="64.5479%" y="527.50"></text></g><g><title>handle_mm_fault (95 samples, 1.15%)</title><rect x="63.3503%" y="581" width="1.1540%" height="15" fill="rgb(232,15,44)"/><text x="63.6003%" y="591.50"></text></g><g><title>page_fault (100 samples, 1.21%)</title><rect x="63.3017%" y="613" width="1.2148%" height="15" fill="rgb(212,3,48)"/><text x="63.5517%" y="623.50"></text></g><g><title>do_user_addr_fault (100 samples, 1.21%)</title><rect x="63.3017%" y="597" width="1.2148%" height="15" fill="rgb(218,128,7)"/><text x="63.5517%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (172 samples, 2.09%)</title><rect x="62.7308%" y="645" width="2.0894%" height="15" fill="rgb(226,216,39)"/><text x="62.9808%" y="655.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (163 samples, 1.98%)</title><rect x="62.8401%" y="629" width="1.9801%" height="15" fill="rgb(243,47,51)"/><text x="63.0901%" y="639.50">h..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (25 samples, 0.30%)</title><rect x="64.5165%" y="613" width="0.3037%" height="15" fill="rgb(241,183,40)"/><text x="64.7665%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (18 samples, 0.22%)</title><rect x="64.6016%" y="597" width="0.2187%" height="15" fill="rgb(231,217,32)"/><text x="64.8516%" y="607.50"></text></g><g><title>debug_smp_processor_id (11 samples, 0.13%)</title><rect x="66.1565%" y="437" width="0.1336%" height="15" fill="rgb(229,61,38)"/><text x="66.4065%" y="447.50"></text></g><g><title>__perf_event_header__init_id (9 samples, 0.11%)</title><rect x="66.4359%" y="421" width="0.1093%" height="15" fill="rgb(225,210,5)"/><text x="66.6859%" y="431.50"></text></g><g><title>perf_output_copy (13 samples, 0.16%)</title><rect x="66.6181%" y="421" width="0.1579%" height="15" fill="rgb(231,79,45)"/><text x="66.8681%" y="431.50"></text></g><g><title>memcpy_erms (9 samples, 0.11%)</title><rect x="66.6667%" y="405" width="0.1093%" height="15" fill="rgb(224,100,7)"/><text x="66.9167%" y="415.50"></text></g><g><title>perf_iterate_ctx (93 samples, 1.13%)</title><rect x="65.6948%" y="453" width="1.1297%" height="15" fill="rgb(241,198,18)"/><text x="65.9448%" y="463.50"></text></g><g><title>perf_event_mmap_output (44 samples, 0.53%)</title><rect x="66.2901%" y="437" width="0.5345%" height="15" fill="rgb(252,97,53)"/><text x="66.5401%" y="447.50"></text></g><g><title>perf_iterate_sb (96 samples, 1.17%)</title><rect x="65.6706%" y="469" width="1.1662%" height="15" fill="rgb(220,88,7)"/><text x="65.9206%" y="479.50"></text></g><g><title>perf_event_mmap (109 samples, 1.32%)</title><rect x="65.5248%" y="485" width="1.3241%" height="15" fill="rgb(213,176,14)"/><text x="65.7748%" y="495.50"></text></g><g><title>__vma_adjust (10 samples, 0.12%)</title><rect x="66.8489%" y="469" width="0.1215%" height="15" fill="rgb(246,73,7)"/><text x="67.0989%" y="479.50"></text></g><g><title>vma_merge (11 samples, 0.13%)</title><rect x="66.8489%" y="485" width="0.1336%" height="15" fill="rgb(245,64,36)"/><text x="67.0989%" y="495.50"></text></g><g><title>__x64_sys_mprotect (144 samples, 1.75%)</title><rect x="65.2697%" y="533" width="1.7493%" height="15" fill="rgb(245,80,10)"/><text x="65.5197%" y="543.50"></text></g><g><title>do_mprotect_pkey (143 samples, 1.74%)</title><rect x="65.2818%" y="517" width="1.7371%" height="15" fill="rgb(232,107,50)"/><text x="65.5318%" y="527.50"></text></g><g><title>mprotect_fixup (132 samples, 1.60%)</title><rect x="65.4155%" y="501" width="1.6035%" height="15" fill="rgb(253,3,0)"/><text x="65.6655%" y="511.50"></text></g><g><title>do_syscall_64 (155 samples, 1.88%)</title><rect x="65.2575%" y="549" width="1.8829%" height="15" fill="rgb(212,99,53)"/><text x="65.5075%" y="559.50">d..</text></g><g><title>entry_SYSCALL_64 (184 samples, 2.24%)</title><rect x="65.1968%" y="565" width="2.2352%" height="15" fill="rgb(249,111,54)"/><text x="65.4468%" y="575.50">e..</text></g><g><title>prepare_exit_to_usermode (24 samples, 0.29%)</title><rect x="67.1404%" y="549" width="0.2915%" height="15" fill="rgb(249,55,30)"/><text x="67.3904%" y="559.50"></text></g><g><title>__GI___mprotect (199 samples, 2.42%)</title><rect x="65.1846%" y="581" width="2.4174%" height="15" fill="rgb(237,47,42)"/><text x="65.4346%" y="591.50">__..</text></g><g><title>pagevec_lru_move_fn (9 samples, 0.11%)</title><rect x="67.9057%" y="501" width="0.1093%" height="15" fill="rgb(211,20,18)"/><text x="68.1557%" y="511.50"></text></g><g><title>__lru_cache_add (11 samples, 0.13%)</title><rect x="67.8936%" y="517" width="0.1336%" height="15" fill="rgb(231,203,46)"/><text x="68.1436%" y="527.50"></text></g><g><title>clear_page_erms (33 samples, 0.40%)</title><rect x="68.3552%" y="437" width="0.4009%" height="15" fill="rgb(237,142,3)"/><text x="68.6052%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (55 samples, 0.67%)</title><rect x="68.1001%" y="501" width="0.6681%" height="15" fill="rgb(241,107,1)"/><text x="68.3501%" y="511.50"></text></g><g><title>get_page_from_freelist (55 samples, 0.67%)</title><rect x="68.1001%" y="485" width="0.6681%" height="15" fill="rgb(229,83,13)"/><text x="68.3501%" y="495.50"></text></g><g><title>prep_new_page (36 samples, 0.44%)</title><rect x="68.3309%" y="469" width="0.4373%" height="15" fill="rgb(241,91,40)"/><text x="68.5809%" y="479.50"></text></g><g><title>kernel_init_free_pages (35 samples, 0.43%)</title><rect x="68.3431%" y="453" width="0.4252%" height="15" fill="rgb(225,3,45)"/><text x="68.5931%" y="463.50"></text></g><g><title>alloc_pages_vma (58 samples, 0.70%)</title><rect x="68.0758%" y="517" width="0.7046%" height="15" fill="rgb(244,223,14)"/><text x="68.3258%" y="527.50"></text></g><g><title>get_mem_cgroup_from_mm (14 samples, 0.17%)</title><rect x="69.0112%" y="485" width="0.1701%" height="15" fill="rgb(224,124,37)"/><text x="69.2612%" y="495.50"></text></g><g><title>mem_cgroup_try_charge_delay (40 samples, 0.49%)</title><rect x="68.8776%" y="517" width="0.4859%" height="15" fill="rgb(251,171,30)"/><text x="69.1276%" y="527.50"></text></g><g><title>mem_cgroup_try_charge (35 samples, 0.43%)</title><rect x="68.9383%" y="501" width="0.4252%" height="15" fill="rgb(236,46,54)"/><text x="69.1883%" y="511.50"></text></g><g><title>try_charge (15 samples, 0.18%)</title><rect x="69.1812%" y="485" width="0.1822%" height="15" fill="rgb(245,213,5)"/><text x="69.4312%" y="495.50"></text></g><g><title>__handle_mm_fault (132 samples, 1.60%)</title><rect x="67.7843%" y="533" width="1.6035%" height="15" fill="rgb(230,144,27)"/><text x="68.0343%" y="543.50"></text></g><g><title>handle_mm_fault (135 samples, 1.64%)</title><rect x="67.7600%" y="549" width="1.6399%" height="15" fill="rgb(220,86,6)"/><text x="68.0100%" y="559.50"></text></g><g><title>page_fault (144 samples, 1.75%)</title><rect x="67.6628%" y="581" width="1.7493%" height="15" fill="rgb(240,20,13)"/><text x="67.9128%" y="591.50"></text></g><g><title>do_user_addr_fault (144 samples, 1.75%)</title><rect x="67.6628%" y="565" width="1.7493%" height="15" fill="rgb(217,89,34)"/><text x="67.9128%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (398 samples, 4.83%)</title><rect x="64.8688%" y="645" width="4.8348%" height="15" fill="rgb(229,13,5)"/><text x="65.1188%" y="655.50">hashbr..</text></g><g><title>__GI___libc_malloc (398 samples, 4.83%)</title><rect x="64.8688%" y="629" width="4.8348%" height="15" fill="rgb(244,67,35)"/><text x="65.1188%" y="639.50">__GI__..</text></g><g><title>_int_malloc (398 samples, 4.83%)</title><rect x="64.8688%" y="613" width="4.8348%" height="15" fill="rgb(221,40,2)"/><text x="65.1188%" y="623.50">_int_m..</text></g><g><title>sysmalloc (390 samples, 4.74%)</title><rect x="64.9660%" y="597" width="4.7376%" height="15" fill="rgb(237,157,21)"/><text x="65.2160%" y="607.50">sysmal..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (24 samples, 0.29%)</title><rect x="69.4121%" y="581" width="0.2915%" height="15" fill="rgb(222,94,11)"/><text x="69.6621%" y="591.50"></text></g><g><title>prepare_exit_to_usermode (19 samples, 0.23%)</title><rect x="69.4728%" y="565" width="0.2308%" height="15" fill="rgb(249,113,6)"/><text x="69.7228%" y="575.50"></text></g><g><title>std::time::Instant::elapsed (14 samples, 0.17%)</title><rect x="69.7036%" y="645" width="0.1701%" height="15" fill="rgb(238,137,36)"/><text x="69.9536%" y="655.50"></text></g><g><title>decor_mem::views::View::insert_into_index (663 samples, 8.05%)</title><rect x="61.8562%" y="661" width="8.0539%" height="15" fill="rgb(210,102,26)"/><text x="62.1062%" y="671.50">decor_mem::..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::generate_new_entities_from (796 samples, 9.67%)</title><rect x="60.4227%" y="693" width="9.6696%" height="15" fill="rgb(218,30,30)"/><text x="60.6727%" y="703.50">decor_mem::que..</text></g><g><title>decor_mem::views::Views::insert (678 samples, 8.24%)</title><rect x="61.8562%" y="677" width="8.2362%" height="15" fill="rgb(214,67,26)"/><text x="62.1062%" y="687.50">decor_mem::..</text></g><g><title>decor_mem::views::View::insert_row (15 samples, 0.18%)</title><rect x="69.9101%" y="661" width="0.1822%" height="15" fill="rgb(251,9,53)"/><text x="70.1601%" y="671.50"></text></g><g><title>core::fmt::write (15 samples, 0.18%)</title><rect x="69.9101%" y="645" width="0.1822%" height="15" fill="rgb(228,204,25)"/><text x="70.1601%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (15 samples, 0.18%)</title><rect x="69.9101%" y="629" width="0.1822%" height="15" fill="rgb(207,153,8)"/><text x="70.1601%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.17%)</title><rect x="69.9223%" y="613" width="0.1701%" height="15" fill="rgb(242,9,16)"/><text x="70.1723%" y="623.50"></text></g><g><title>sk_wait_data (17 samples, 0.21%)</title><rect x="70.3474%" y="405" width="0.2065%" height="15" fill="rgb(217,211,10)"/><text x="70.5974%" y="415.50"></text></g><g><title>wait_woken (14 samples, 0.17%)</title><rect x="70.3839%" y="389" width="0.1701%" height="15" fill="rgb(219,228,52)"/><text x="70.6339%" y="399.50"></text></g><g><title>schedule_timeout (14 samples, 0.17%)</title><rect x="70.3839%" y="373" width="0.1701%" height="15" fill="rgb(231,92,29)"/><text x="70.6339%" y="383.50"></text></g><g><title>schedule (14 samples, 0.17%)</title><rect x="70.3839%" y="357" width="0.1701%" height="15" fill="rgb(232,8,23)"/><text x="70.6339%" y="367.50"></text></g><g><title>__schedule (13 samples, 0.16%)</title><rect x="70.3960%" y="341" width="0.1579%" height="15" fill="rgb(216,211,34)"/><text x="70.6460%" y="351.50"></text></g><g><title>do_syscall_64 (34 samples, 0.41%)</title><rect x="70.2259%" y="485" width="0.4130%" height="15" fill="rgb(236,151,0)"/><text x="70.4759%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (34 samples, 0.41%)</title><rect x="70.2259%" y="469" width="0.4130%" height="15" fill="rgb(209,168,3)"/><text x="70.4759%" y="479.50"></text></g><g><title>__sys_recvfrom (34 samples, 0.41%)</title><rect x="70.2259%" y="453" width="0.4130%" height="15" fill="rgb(208,129,28)"/><text x="70.4759%" y="463.50"></text></g><g><title>inet_recvmsg (31 samples, 0.38%)</title><rect x="70.2624%" y="437" width="0.3766%" height="15" fill="rgb(229,78,22)"/><text x="70.5124%" y="447.50"></text></g><g><title>tcp_recvmsg (31 samples, 0.38%)</title><rect x="70.2624%" y="421" width="0.3766%" height="15" fill="rgb(228,187,13)"/><text x="70.5124%" y="431.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 0.47%)</title><rect x="70.1895%" y="597" width="0.4738%" height="15" fill="rgb(240,119,24)"/><text x="70.4395%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (37 samples, 0.45%)</title><rect x="70.2138%" y="581" width="0.4495%" height="15" fill="rgb(209,194,42)"/><text x="70.4638%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (37 samples, 0.45%)</title><rect x="70.2138%" y="565" width="0.4495%" height="15" fill="rgb(247,200,46)"/><text x="70.4638%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (37 samples, 0.45%)</title><rect x="70.2138%" y="549" width="0.4495%" height="15" fill="rgb(218,76,16)"/><text x="70.4638%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (37 samples, 0.45%)</title><rect x="70.2138%" y="533" width="0.4495%" height="15" fill="rgb(225,21,48)"/><text x="70.4638%" y="543.50"></text></g><g><title>__libc_recv (37 samples, 0.45%)</title><rect x="70.2138%" y="517" width="0.4495%" height="15" fill="rgb(239,223,50)"/><text x="70.4638%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (37 samples, 0.45%)</title><rect x="70.2138%" y="501" width="0.4495%" height="15" fill="rgb(244,45,21)"/><text x="70.4638%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.50%)</title><rect x="70.1774%" y="613" width="0.4981%" height="15" fill="rgb(232,33,43)"/><text x="70.4274%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (45 samples, 0.55%)</title><rect x="70.1409%" y="629" width="0.5466%" height="15" fill="rgb(209,8,3)"/><text x="70.3909%" y="639.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (51 samples, 0.62%)</title><rect x="70.0923%" y="645" width="0.6195%" height="15" fill="rgb(214,25,53)"/><text x="70.3423%" y="655.50"></text></g><g><title>sock_def_readable (14 samples, 0.17%)</title><rect x="71.0155%" y="133" width="0.1701%" height="15" fill="rgb(254,186,54)"/><text x="71.2655%" y="143.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.17%)</title><rect x="71.0155%" y="117" width="0.1701%" height="15" fill="rgb(208,174,49)"/><text x="71.2655%" y="127.50"></text></g><g><title>__wake_up_common (14 samples, 0.17%)</title><rect x="71.0155%" y="101" width="0.1701%" height="15" fill="rgb(233,191,51)"/><text x="71.2655%" y="111.50"></text></g><g><title>pollwake (14 samples, 0.17%)</title><rect x="71.0155%" y="85" width="0.1701%" height="15" fill="rgb(222,134,10)"/><text x="71.2655%" y="95.50"></text></g><g><title>try_to_wake_up (11 samples, 0.13%)</title><rect x="71.0520%" y="69" width="0.1336%" height="15" fill="rgb(230,226,20)"/><text x="71.3020%" y="79.50"></text></g><g><title>ip_local_deliver (30 samples, 0.36%)</title><rect x="70.9305%" y="229" width="0.3644%" height="15" fill="rgb(251,111,25)"/><text x="71.1805%" y="239.50"></text></g><g><title>ip_local_deliver_finish (28 samples, 0.34%)</title><rect x="70.9548%" y="213" width="0.3401%" height="15" fill="rgb(224,40,46)"/><text x="71.2048%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (28 samples, 0.34%)</title><rect x="70.9548%" y="197" width="0.3401%" height="15" fill="rgb(236,108,47)"/><text x="71.2048%" y="207.50"></text></g><g><title>tcp_v4_rcv (28 samples, 0.34%)</title><rect x="70.9548%" y="181" width="0.3401%" height="15" fill="rgb(234,93,0)"/><text x="71.2048%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (24 samples, 0.29%)</title><rect x="71.0034%" y="165" width="0.2915%" height="15" fill="rgb(224,213,32)"/><text x="71.2534%" y="175.50"></text></g><g><title>tcp_rcv_established (24 samples, 0.29%)</title><rect x="71.0034%" y="149" width="0.2915%" height="15" fill="rgb(251,11,48)"/><text x="71.2534%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (34 samples, 0.41%)</title><rect x="70.8941%" y="261" width="0.4130%" height="15" fill="rgb(236,173,5)"/><text x="71.1441%" y="271.50"></text></g><g><title>ip_rcv (31 samples, 0.38%)</title><rect x="70.9305%" y="245" width="0.3766%" height="15" fill="rgb(230,95,12)"/><text x="71.1805%" y="255.50"></text></g><g><title>__ip_queue_xmit (41 samples, 0.50%)</title><rect x="70.8212%" y="405" width="0.4981%" height="15" fill="rgb(232,209,1)"/><text x="71.0712%" y="415.50"></text></g><g><title>ip_output (41 samples, 0.50%)</title><rect x="70.8212%" y="389" width="0.4981%" height="15" fill="rgb(232,6,1)"/><text x="71.0712%" y="399.50"></text></g><g><title>ip_finish_output2 (41 samples, 0.50%)</title><rect x="70.8212%" y="373" width="0.4981%" height="15" fill="rgb(210,224,50)"/><text x="71.0712%" y="383.50"></text></g><g><title>__local_bh_enable_ip (36 samples, 0.44%)</title><rect x="70.8819%" y="357" width="0.4373%" height="15" fill="rgb(228,127,35)"/><text x="71.1319%" y="367.50"></text></g><g><title>do_softirq (36 samples, 0.44%)</title><rect x="70.8819%" y="341" width="0.4373%" height="15" fill="rgb(245,102,45)"/><text x="71.1319%" y="351.50"></text></g><g><title>do_softirq_own_stack (35 samples, 0.43%)</title><rect x="70.8941%" y="325" width="0.4252%" height="15" fill="rgb(214,1,49)"/><text x="71.1441%" y="335.50"></text></g><g><title>__do_softirq (35 samples, 0.43%)</title><rect x="70.8941%" y="309" width="0.4252%" height="15" fill="rgb(226,163,40)"/><text x="71.1441%" y="319.50"></text></g><g><title>net_rx_action (35 samples, 0.43%)</title><rect x="70.8941%" y="293" width="0.4252%" height="15" fill="rgb(239,212,28)"/><text x="71.1441%" y="303.50"></text></g><g><title>process_backlog (35 samples, 0.43%)</title><rect x="70.8941%" y="277" width="0.4252%" height="15" fill="rgb(220,20,13)"/><text x="71.1441%" y="287.50"></text></g><g><title>__tcp_transmit_skb (46 samples, 0.56%)</title><rect x="70.8090%" y="421" width="0.5588%" height="15" fill="rgb(210,164,35)"/><text x="71.0590%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (48 samples, 0.58%)</title><rect x="70.7969%" y="453" width="0.5831%" height="15" fill="rgb(248,109,41)"/><text x="71.0469%" y="463.50"></text></g><g><title>tcp_write_xmit (48 samples, 0.58%)</title><rect x="70.7969%" y="437" width="0.5831%" height="15" fill="rgb(238,23,50)"/><text x="71.0469%" y="447.50"></text></g><g><title>sock_sendmsg (63 samples, 0.77%)</title><rect x="70.7726%" y="501" width="0.7653%" height="15" fill="rgb(211,48,49)"/><text x="71.0226%" y="511.50"></text></g><g><title>tcp_sendmsg (63 samples, 0.77%)</title><rect x="70.7726%" y="485" width="0.7653%" height="15" fill="rgb(223,36,21)"/><text x="71.0226%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (61 samples, 0.74%)</title><rect x="70.7969%" y="469" width="0.7410%" height="15" fill="rgb(207,123,46)"/><text x="71.0469%" y="479.50"></text></g><g><title>__x64_sys_sendto (66 samples, 0.80%)</title><rect x="70.7726%" y="533" width="0.8017%" height="15" fill="rgb(240,218,32)"/><text x="71.0226%" y="543.50"></text></g><g><title>__sys_sendto (66 samples, 0.80%)</title><rect x="70.7726%" y="517" width="0.8017%" height="15" fill="rgb(252,5,43)"/><text x="71.0226%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (123 samples, 1.49%)</title><rect x="70.0923%" y="677" width="1.4942%" height="15" fill="rgb(252,84,19)"/><text x="70.3423%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (123 samples, 1.49%)</title><rect x="70.0923%" y="661" width="1.4942%" height="15" fill="rgb(243,152,39)"/><text x="70.3423%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (72 samples, 0.87%)</title><rect x="70.7119%" y="645" width="0.8746%" height="15" fill="rgb(234,160,15)"/><text x="70.9619%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (68 samples, 0.83%)</title><rect x="70.7604%" y="629" width="0.8260%" height="15" fill="rgb(237,34,20)"/><text x="71.0104%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (68 samples, 0.83%)</title><rect x="70.7604%" y="613" width="0.8260%" height="15" fill="rgb(229,97,13)"/><text x="71.0104%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (68 samples, 0.83%)</title><rect x="70.7604%" y="597" width="0.8260%" height="15" fill="rgb(234,71,50)"/><text x="71.0104%" y="607.50"></text></g><g><title>__libc_send (68 samples, 0.83%)</title><rect x="70.7604%" y="581" width="0.8260%" height="15" fill="rgb(253,155,4)"/><text x="71.0104%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (67 samples, 0.81%)</title><rect x="70.7726%" y="565" width="0.8139%" height="15" fill="rgb(222,185,37)"/><text x="71.0226%" y="575.50"></text></g><g><title>do_syscall_64 (67 samples, 0.81%)</title><rect x="70.7726%" y="549" width="0.8139%" height="15" fill="rgb(251,177,13)"/><text x="71.0226%" y="559.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (17 samples, 0.21%)</title><rect x="71.5986%" y="661" width="0.2065%" height="15" fill="rgb(250,179,40)"/><text x="71.8486%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (13 samples, 0.16%)</title><rect x="71.6472%" y="645" width="0.1579%" height="15" fill="rgb(242,44,2)"/><text x="71.8972%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,513 samples, 18.38%)</title><rect x="53.5593%" y="757" width="18.3795%" height="15" fill="rgb(216,177,13)"/><text x="53.8093%" y="767.50">msql_srv::MysqlIntermediary&lt;B..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (1,513 samples, 18.38%)</title><rect x="53.5593%" y="741" width="18.3795%" height="15" fill="rgb(216,106,43)"/><text x="53.8093%" y="751.50">msql_srv::MysqlIntermediary&lt;B..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (979 samples, 11.89%)</title><rect x="60.0462%" y="725" width="11.8926%" height="15" fill="rgb(216,183,2)"/><text x="60.2962%" y="735.50">&lt;decor_mem::Shim a..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (979 samples, 11.89%)</title><rect x="60.0462%" y="709" width="11.8926%" height="15" fill="rgb(249,75,3)"/><text x="60.2962%" y="719.50">decor_mem::query_t..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::remove_entities (152 samples, 1.85%)</title><rect x="70.0923%" y="693" width="1.8465%" height="15" fill="rgb(219,67,39)"/><text x="70.3423%" y="703.50">d..</text></g><g><title>decor_mem::views::Views::delete (28 samples, 0.34%)</title><rect x="71.5986%" y="677" width="0.3401%" height="15" fill="rgb(253,228,2)"/><text x="71.8486%" y="687.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (11 samples, 0.13%)</title><rect x="71.8052%" y="661" width="0.1336%" height="15" fill="rgb(235,138,27)"/><text x="72.0552%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 0.34%)</title><rect x="72.1817%" y="645" width="0.3401%" height="15" fill="rgb(236,97,51)"/><text x="72.4317%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.34%)</title><rect x="72.1817%" y="629" width="0.3401%" height="15" fill="rgb(240,80,30)"/><text x="72.4317%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.34%)</title><rect x="72.1817%" y="613" width="0.3401%" height="15" fill="rgb(230,178,19)"/><text x="72.4317%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.34%)</title><rect x="72.1817%" y="597" width="0.3401%" height="15" fill="rgb(210,190,27)"/><text x="72.4317%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (28 samples, 0.34%)</title><rect x="72.1817%" y="581" width="0.3401%" height="15" fill="rgb(222,107,31)"/><text x="72.4317%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28 samples, 0.34%)</title><rect x="72.1817%" y="565" width="0.3401%" height="15" fill="rgb(216,127,34)"/><text x="72.4317%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (28 samples, 0.34%)</title><rect x="72.1817%" y="549" width="0.3401%" height="15" fill="rgb(234,116,52)"/><text x="72.4317%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.34%)</title><rect x="72.1817%" y="533" width="0.3401%" height="15" fill="rgb(222,124,15)"/><text x="72.4317%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (28 samples, 0.34%)</title><rect x="72.1817%" y="517" width="0.3401%" height="15" fill="rgb(231,179,28)"/><text x="72.4317%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (30 samples, 0.36%)</title><rect x="72.1817%" y="677" width="0.3644%" height="15" fill="rgb(226,93,45)"/><text x="72.4317%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (30 samples, 0.36%)</title><rect x="72.1817%" y="661" width="0.3644%" height="15" fill="rgb(215,8,51)"/><text x="72.4317%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (35 samples, 0.43%)</title><rect x="72.1453%" y="757" width="0.4252%" height="15" fill="rgb(223,106,5)"/><text x="72.3953%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (35 samples, 0.43%)</title><rect x="72.1453%" y="741" width="0.4252%" height="15" fill="rgb(250,191,5)"/><text x="72.3953%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (35 samples, 0.43%)</title><rect x="72.1453%" y="725" width="0.4252%" height="15" fill="rgb(242,132,44)"/><text x="72.3953%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (35 samples, 0.43%)</title><rect x="72.1453%" y="709" width="0.4252%" height="15" fill="rgb(251,152,29)"/><text x="72.3953%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (35 samples, 0.43%)</title><rect x="72.1453%" y="693" width="0.4252%" height="15" fill="rgb(218,179,5)"/><text x="72.3953%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.12%)</title><rect x="72.6798%" y="581" width="0.1215%" height="15" fill="rgb(227,67,19)"/><text x="72.9298%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.17%)</title><rect x="72.8134%" y="581" width="0.1701%" height="15" fill="rgb(233,119,31)"/><text x="73.0634%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (25 samples, 0.30%)</title><rect x="72.9835%" y="581" width="0.3037%" height="15" fill="rgb(241,120,22)"/><text x="73.2335%" y="591.50"></text></g><g><title>crypto::sha3::keccak_f (25 samples, 0.30%)</title><rect x="72.9835%" y="565" width="0.3037%" height="15" fill="rgb(224,102,30)"/><text x="73.2335%" y="575.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.28%)</title><rect x="73.4572%" y="373" width="0.2794%" height="15" fill="rgb(210,164,37)"/><text x="73.7072%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (41 samples, 0.50%)</title><rect x="73.3115%" y="549" width="0.4981%" height="15" fill="rgb(226,191,16)"/><text x="73.5615%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (38 samples, 0.46%)</title><rect x="73.3479%" y="533" width="0.4616%" height="15" fill="rgb(214,40,45)"/><text x="73.5979%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (37 samples, 0.45%)</title><rect x="73.3601%" y="517" width="0.4495%" height="15" fill="rgb(244,29,26)"/><text x="73.6101%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.45%)</title><rect x="73.3601%" y="501" width="0.4495%" height="15" fill="rgb(216,16,5)"/><text x="73.6101%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31 samples, 0.38%)</title><rect x="73.4329%" y="485" width="0.3766%" height="15" fill="rgb(249,76,35)"/><text x="73.6829%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (31 samples, 0.38%)</title><rect x="73.4329%" y="469" width="0.3766%" height="15" fill="rgb(207,11,44)"/><text x="73.6829%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.38%)</title><rect x="73.4329%" y="453" width="0.3766%" height="15" fill="rgb(228,190,49)"/><text x="73.6829%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.38%)</title><rect x="73.4329%" y="437" width="0.3766%" height="15" fill="rgb(214,173,12)"/><text x="73.6829%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (31 samples, 0.38%)</title><rect x="73.4329%" y="421" width="0.3766%" height="15" fill="rgb(218,26,35)"/><text x="73.6829%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.38%)</title><rect x="73.4329%" y="405" width="0.3766%" height="15" fill="rgb(220,200,19)"/><text x="73.6829%" y="415.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.38%)</title><rect x="73.4329%" y="389" width="0.3766%" height="15" fill="rgb(239,95,49)"/><text x="73.6829%" y="399.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (48 samples, 0.58%)</title><rect x="73.2872%" y="581" width="0.5831%" height="15" fill="rgb(235,85,53)"/><text x="73.5372%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (46 samples, 0.56%)</title><rect x="73.3115%" y="565" width="0.5588%" height="15" fill="rgb(233,133,31)"/><text x="73.5615%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.23%)</title><rect x="73.8703%" y="581" width="0.2308%" height="15" fill="rgb(218,25,20)"/><text x="74.1203%" y="591.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.19%)</title><rect x="73.9067%" y="565" width="0.1944%" height="15" fill="rgb(252,210,38)"/><text x="74.1567%" y="575.50"></text></g><g><title>_int_realloc (16 samples, 0.19%)</title><rect x="73.9067%" y="549" width="0.1944%" height="15" fill="rgb(242,134,21)"/><text x="74.1567%" y="559.50"></text></g><g><title>_int_malloc (14 samples, 0.17%)</title><rect x="73.9310%" y="533" width="0.1701%" height="15" fill="rgb(213,28,48)"/><text x="74.1810%" y="543.50"></text></g><g><title>core::fmt::write (22 samples, 0.27%)</title><rect x="74.1011%" y="581" width="0.2672%" height="15" fill="rgb(250,196,2)"/><text x="74.3511%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (22 samples, 0.27%)</title><rect x="74.1011%" y="565" width="0.2672%" height="15" fill="rgb(227,5,17)"/><text x="74.3511%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (20 samples, 0.24%)</title><rect x="74.1254%" y="549" width="0.2430%" height="15" fill="rgb(221,226,24)"/><text x="74.3754%" y="559.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (18 samples, 0.22%)</title><rect x="74.3926%" y="581" width="0.2187%" height="15" fill="rgb(211,5,48)"/><text x="74.6426%" y="591.50"></text></g><g><title>decor_mem::select::predicates::get_predicate_sets_of_constraint (11 samples, 0.13%)</title><rect x="74.4776%" y="565" width="0.1336%" height="15" fill="rgb(219,150,6)"/><text x="74.7276%" y="575.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (42 samples, 0.51%)</title><rect x="74.6113%" y="565" width="0.5102%" height="15" fill="rgb(251,46,16)"/><text x="74.8613%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (37 samples, 0.45%)</title><rect x="74.6720%" y="549" width="0.4495%" height="15" fill="rgb(220,204,40)"/><text x="74.9220%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (55 samples, 0.67%)</title><rect x="74.6113%" y="581" width="0.6681%" height="15" fill="rgb(211,85,2)"/><text x="74.8613%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (11 samples, 0.13%)</title><rect x="75.1458%" y="565" width="0.1336%" height="15" fill="rgb(229,17,7)"/><text x="75.3958%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (9 samples, 0.11%)</title><rect x="75.1701%" y="549" width="0.1093%" height="15" fill="rgb(239,72,28)"/><text x="75.4201%" y="559.50"></text></g><g><title>start_thread (215 samples, 2.61%)</title><rect x="72.6798%" y="757" width="2.6118%" height="15" fill="rgb(230,47,54)"/><text x="72.9298%" y="767.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (215 samples, 2.61%)</title><rect x="72.6798%" y="741" width="2.6118%" height="15" fill="rgb(214,50,8)"/><text x="72.9298%" y="751.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (215 samples, 2.61%)</title><rect x="72.6798%" y="725" width="2.6118%" height="15" fill="rgb(216,198,43)"/><text x="72.9298%" y="735.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (215 samples, 2.61%)</title><rect x="72.6798%" y="709" width="2.6118%" height="15" fill="rgb(234,20,35)"/><text x="72.9298%" y="719.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (215 samples, 2.61%)</title><rect x="72.6798%" y="693" width="2.6118%" height="15" fill="rgb(254,45,19)"/><text x="72.9298%" y="703.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (215 samples, 2.61%)</title><rect x="72.6798%" y="677" width="2.6118%" height="15" fill="rgb(219,14,44)"/><text x="72.9298%" y="687.50">st..</text></g><g><title>decor_mem::Shim::run_on_tcp (215 samples, 2.61%)</title><rect x="72.6798%" y="661" width="2.6118%" height="15" fill="rgb(217,220,26)"/><text x="72.9298%" y="671.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (215 samples, 2.61%)</title><rect x="72.6798%" y="645" width="2.6118%" height="15" fill="rgb(213,158,28)"/><text x="72.9298%" y="655.50">ms..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (215 samples, 2.61%)</title><rect x="72.6798%" y="629" width="2.6118%" height="15" fill="rgb(252,51,52)"/><text x="72.9298%" y="639.50">ms..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (215 samples, 2.61%)</title><rect x="72.6798%" y="613" width="2.6118%" height="15" fill="rgb(246,89,16)"/><text x="72.9298%" y="623.50">&lt;d..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (215 samples, 2.61%)</title><rect x="72.6798%" y="597" width="2.6118%" height="15" fill="rgb(216,158,49)"/><text x="72.9298%" y="607.50">de..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (33 samples, 0.40%)</title><rect x="75.6317%" y="565" width="0.4009%" height="15" fill="rgb(236,107,19)"/><text x="75.8817%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (33 samples, 0.40%)</title><rect x="75.6317%" y="549" width="0.4009%" height="15" fill="rgb(228,185,30)"/><text x="75.8817%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (33 samples, 0.40%)</title><rect x="75.6317%" y="533" width="0.4009%" height="15" fill="rgb(246,134,8)"/><text x="75.8817%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.40%)</title><rect x="75.6317%" y="517" width="0.4009%" height="15" fill="rgb(214,143,50)"/><text x="75.8817%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (33 samples, 0.40%)</title><rect x="75.6317%" y="501" width="0.4009%" height="15" fill="rgb(228,75,8)"/><text x="75.8817%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (33 samples, 0.40%)</title><rect x="75.6317%" y="485" width="0.4009%" height="15" fill="rgb(207,175,4)"/><text x="75.8817%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 0.40%)</title><rect x="75.6317%" y="469" width="0.4009%" height="15" fill="rgb(205,108,24)"/><text x="75.8817%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (33 samples, 0.40%)</title><rect x="75.6317%" y="453" width="0.4009%" height="15" fill="rgb(244,120,49)"/><text x="75.8817%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (33 samples, 0.40%)</title><rect x="75.6317%" y="437" width="0.4009%" height="15" fill="rgb(223,47,38)"/><text x="75.8817%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.40%)</title><rect x="75.6317%" y="421" width="0.4009%" height="15" fill="rgb(229,179,11)"/><text x="75.8817%" y="431.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.40%)</title><rect x="75.6317%" y="405" width="0.4009%" height="15" fill="rgb(231,122,1)"/><text x="75.8817%" y="415.50"></text></g><g><title>__GI___libc_malloc (33 samples, 0.40%)</title><rect x="75.6317%" y="389" width="0.4009%" height="15" fill="rgb(245,119,9)"/><text x="75.8817%" y="399.50"></text></g><g><title>_int_malloc (33 samples, 0.40%)</title><rect x="75.6317%" y="373" width="0.4009%" height="15" fill="rgb(241,163,25)"/><text x="75.8817%" y="383.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (34 samples, 0.41%)</title><rect x="75.6317%" y="597" width="0.4130%" height="15" fill="rgb(217,214,3)"/><text x="75.8817%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.41%)</title><rect x="75.6317%" y="581" width="0.4130%" height="15" fill="rgb(240,86,28)"/><text x="75.8817%" y="591.50"></text></g><g><title>core::fmt::write (10 samples, 0.12%)</title><rect x="76.0447%" y="597" width="0.1215%" height="15" fill="rgb(215,47,9)"/><text x="76.2947%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.12%)</title><rect x="76.0447%" y="581" width="0.1215%" height="15" fill="rgb(252,25,45)"/><text x="76.2947%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.12%)</title><rect x="76.0447%" y="565" width="0.1215%" height="15" fill="rgb(251,164,9)"/><text x="76.2947%" y="575.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (21 samples, 0.26%)</title><rect x="76.2148%" y="597" width="0.2551%" height="15" fill="rgb(233,194,0)"/><text x="76.4648%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (90 samples, 1.09%)</title><rect x="75.4495%" y="757" width="1.0933%" height="15" fill="rgb(249,111,24)"/><text x="75.6995%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (90 samples, 1.09%)</title><rect x="75.4495%" y="741" width="1.0933%" height="15" fill="rgb(250,223,3)"/><text x="75.6995%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (90 samples, 1.09%)</title><rect x="75.4495%" y="725" width="1.0933%" height="15" fill="rgb(236,178,37)"/><text x="75.6995%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (90 samples, 1.09%)</title><rect x="75.4495%" y="709" width="1.0933%" height="15" fill="rgb(241,158,50)"/><text x="75.6995%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (90 samples, 1.09%)</title><rect x="75.4495%" y="693" width="1.0933%" height="15" fill="rgb(213,121,41)"/><text x="75.6995%" y="703.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (90 samples, 1.09%)</title><rect x="75.4495%" y="677" width="1.0933%" height="15" fill="rgb(240,92,3)"/><text x="75.6995%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (90 samples, 1.09%)</title><rect x="75.4495%" y="661" width="1.0933%" height="15" fill="rgb(205,123,3)"/><text x="75.6995%" y="671.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (90 samples, 1.09%)</title><rect x="75.4495%" y="645" width="1.0933%" height="15" fill="rgb(205,97,47)"/><text x="75.6995%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (89 samples, 1.08%)</title><rect x="75.4616%" y="629" width="1.0811%" height="15" fill="rgb(247,152,14)"/><text x="75.7116%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (89 samples, 1.08%)</title><rect x="75.4616%" y="613" width="1.0811%" height="15" fill="rgb(248,195,53)"/><text x="75.7116%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.11%)</title><rect x="76.7250%" y="597" width="0.1093%" height="15" fill="rgb(226,201,16)"/><text x="76.9750%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.11%)</title><rect x="76.7250%" y="581" width="0.1093%" height="15" fill="rgb(205,98,0)"/><text x="76.9750%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 0.18%)</title><rect x="76.7250%" y="613" width="0.1822%" height="15" fill="rgb(214,191,48)"/><text x="76.9750%" y="623.50"></text></g><g><title>core::fmt::write (19 samples, 0.23%)</title><rect x="76.6885%" y="645" width="0.2308%" height="15" fill="rgb(237,112,39)"/><text x="76.9385%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (19 samples, 0.23%)</title><rect x="76.6885%" y="629" width="0.2308%" height="15" fill="rgb(247,203,27)"/><text x="76.9385%" y="639.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::reinsert_with_vals (37 samples, 0.45%)</title><rect x="76.5792%" y="661" width="0.4495%" height="15" fill="rgb(235,124,28)"/><text x="76.8292%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.27%)</title><rect x="77.2838%" y="645" width="0.2672%" height="15" fill="rgb(208,207,46)"/><text x="77.5338%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.24%)</title><rect x="77.3081%" y="629" width="0.2430%" height="15" fill="rgb(234,176,4)"/><text x="77.5581%" y="639.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.13%)</title><rect x="77.6482%" y="645" width="0.1336%" height="15" fill="rgb(230,133,28)"/><text x="77.8982%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (66 samples, 0.80%)</title><rect x="77.9640%" y="645" width="0.8017%" height="15" fill="rgb(211,137,40)"/><text x="78.2140%" y="655.50"></text></g><g><title>__GI___libc_malloc (66 samples, 0.80%)</title><rect x="77.9640%" y="629" width="0.8017%" height="15" fill="rgb(254,35,13)"/><text x="78.2140%" y="639.50"></text></g><g><title>_int_malloc (65 samples, 0.79%)</title><rect x="77.9762%" y="613" width="0.7896%" height="15" fill="rgb(225,49,51)"/><text x="78.2262%" y="623.50"></text></g><g><title>malloc_consolidate (56 samples, 0.68%)</title><rect x="78.0855%" y="597" width="0.6803%" height="15" fill="rgb(251,10,15)"/><text x="78.3355%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.12%)</title><rect x="78.8873%" y="629" width="0.1215%" height="15" fill="rgb(228,207,15)"/><text x="79.1373%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (13 samples, 0.16%)</title><rect x="79.0087%" y="629" width="0.1579%" height="15" fill="rgb(241,99,19)"/><text x="79.2587%" y="639.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (13 samples, 0.16%)</title><rect x="79.0087%" y="613" width="0.1579%" height="15" fill="rgb(207,104,49)"/><text x="79.2587%" y="623.50"></text></g><g><title>core::fmt::write (34 samples, 0.41%)</title><rect x="78.7658%" y="645" width="0.4130%" height="15" fill="rgb(234,99,18)"/><text x="79.0158%" y="655.50"></text></g><g><title>_int_free (12 samples, 0.15%)</title><rect x="79.3489%" y="613" width="0.1458%" height="15" fill="rgb(213,191,49)"/><text x="79.5989%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (35 samples, 0.43%)</title><rect x="79.1788%" y="645" width="0.4252%" height="15" fill="rgb(210,226,19)"/><text x="79.4288%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (28 samples, 0.34%)</title><rect x="79.2638%" y="629" width="0.3401%" height="15" fill="rgb(229,97,18)"/><text x="79.5138%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.11%)</title><rect x="79.4947%" y="613" width="0.1093%" height="15" fill="rgb(211,167,15)"/><text x="79.7447%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.11%)</title><rect x="79.6404%" y="629" width="0.1093%" height="15" fill="rgb(210,169,34)"/><text x="79.8904%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.11%)</title><rect x="79.6404%" y="613" width="0.1093%" height="15" fill="rgb(241,121,31)"/><text x="79.8904%" y="623.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (11 samples, 0.13%)</title><rect x="79.6404%" y="645" width="0.1336%" height="15" fill="rgb(232,40,11)"/><text x="79.8904%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (272 samples, 3.30%)</title><rect x="76.5792%" y="693" width="3.3042%" height="15" fill="rgb(205,86,26)"/><text x="76.8292%" y="703.50">&lt;de..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (272 samples, 3.30%)</title><rect x="76.5792%" y="677" width="3.3042%" height="15" fill="rgb(231,126,28)"/><text x="76.8292%" y="687.50">dec..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe_with_gids (235 samples, 2.85%)</title><rect x="77.0287%" y="661" width="2.8547%" height="15" fill="rgb(219,221,18)"/><text x="77.2787%" y="671.50">de..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.13%)</title><rect x="79.9320%" y="661" width="0.1336%" height="15" fill="rgb(211,40,0)"/><text x="80.1820%" y="671.50"></text></g><g><title>core::fmt::write (11 samples, 0.13%)</title><rect x="79.9320%" y="645" width="0.1336%" height="15" fill="rgb(239,85,43)"/><text x="80.1820%" y="655.50"></text></g><g><title>decor_mem::select::predicates::NamedPredicate::to_indexed_predicate (9 samples, 0.11%)</title><rect x="80.4908%" y="629" width="0.1093%" height="15" fill="rgb(231,55,21)"/><text x="80.7408%" y="639.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (45 samples, 0.55%)</title><rect x="80.1385%" y="661" width="0.5466%" height="15" fill="rgb(225,184,43)"/><text x="80.3885%" y="671.50"></text></g><g><title>decor_mem::select::predicates::get_rptrs_matching_preds (40 samples, 0.49%)</title><rect x="80.1992%" y="645" width="0.4859%" height="15" fill="rgb(251,158,41)"/><text x="80.4492%" y="655.50"></text></g><g><title>core::fmt::write (28 samples, 0.34%)</title><rect x="80.7337%" y="645" width="0.3401%" height="15" fill="rgb(234,159,37)"/><text x="80.9837%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (27 samples, 0.33%)</title><rect x="80.7459%" y="629" width="0.3280%" height="15" fill="rgb(216,204,22)"/><text x="80.9959%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (20 samples, 0.24%)</title><rect x="80.8309%" y="613" width="0.2430%" height="15" fill="rgb(214,17,3)"/><text x="81.0809%" y="623.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="80.9645%" y="597" width="0.1093%" height="15" fill="rgb(212,111,17)"/><text x="81.2145%" y="607.50"></text></g><g><title>handle_mm_fault (10 samples, 0.12%)</title><rect x="81.2439%" y="581" width="0.1215%" height="15" fill="rgb(221,157,24)"/><text x="81.4939%" y="591.50"></text></g><g><title>__handle_mm_fault (10 samples, 0.12%)</title><rect x="81.2439%" y="565" width="0.1215%" height="15" fill="rgb(252,16,13)"/><text x="81.4939%" y="575.50"></text></g><g><title>page_fault (13 samples, 0.16%)</title><rect x="81.2196%" y="613" width="0.1579%" height="15" fill="rgb(221,62,2)"/><text x="81.4696%" y="623.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.15%)</title><rect x="81.2318%" y="597" width="0.1458%" height="15" fill="rgb(247,87,22)"/><text x="81.4818%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (29 samples, 0.35%)</title><rect x="81.0739%" y="645" width="0.3523%" height="15" fill="rgb(215,73,9)"/><text x="81.3239%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (24 samples, 0.29%)</title><rect x="81.1346%" y="629" width="0.2915%" height="15" fill="rgb(207,175,33)"/><text x="81.3846%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (14 samples, 0.17%)</title><rect x="81.4261%" y="645" width="0.1701%" height="15" fill="rgb(243,129,54)"/><text x="81.6761%" y="655.50"></text></g><g><title>decor_mem::views::View::update_index_and_row (89 samples, 1.08%)</title><rect x="80.6851%" y="661" width="1.0811%" height="15" fill="rgb(227,119,45)"/><text x="80.9351%" y="671.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (433 samples, 5.26%)</title><rect x="76.5671%" y="741" width="5.2600%" height="15" fill="rgb(205,109,36)"/><text x="76.8171%" y="751.50">decor_..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (433 samples, 5.26%)</title><rect x="76.5671%" y="725" width="5.2600%" height="15" fill="rgb(205,6,39)"/><text x="76.8171%" y="735.50">msql_s..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (433 samples, 5.26%)</title><rect x="76.5671%" y="709" width="5.2600%" height="15" fill="rgb(221,32,16)"/><text x="76.8171%" y="719.50">msql_s..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (160 samples, 1.94%)</title><rect x="79.8834%" y="693" width="1.9436%" height="15" fill="rgb(228,144,50)"/><text x="80.1334%" y="703.50">&lt;..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (160 samples, 1.94%)</title><rect x="79.8834%" y="677" width="1.9436%" height="15" fill="rgb(229,201,53)"/><text x="80.1334%" y="687.50">d..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (434 samples, 5.27%)</title><rect x="76.5671%" y="757" width="5.2721%" height="15" fill="rgb(249,153,27)"/><text x="76.8171%" y="767.50">std::s..</text></g><g><title>[unknown] (6,037 samples, 73.34%)</title><rect x="8.5763%" y="773" width="73.3358%" height="15" fill="rgb(227,106,25)"/><text x="8.8263%" y="783.50">[unknown]</text></g><g><title>free_pcppages_bulk (15 samples, 0.18%)</title><rect x="82.2157%" y="549" width="0.1822%" height="15" fill="rgb(230,65,29)"/><text x="82.4657%" y="559.50"></text></g><g><title>__free_one_page (11 samples, 0.13%)</title><rect x="82.2643%" y="533" width="0.1336%" height="15" fill="rgb(221,57,46)"/><text x="82.5143%" y="543.50"></text></g><g><title>free_unref_page_list (21 samples, 0.26%)</title><rect x="82.1672%" y="565" width="0.2551%" height="15" fill="rgb(229,161,17)"/><text x="82.4172%" y="575.50"></text></g><g><title>tlb_finish_mmu (39 samples, 0.47%)</title><rect x="81.9728%" y="597" width="0.4738%" height="15" fill="rgb(222,213,11)"/><text x="82.2228%" y="607.50"></text></g><g><title>release_pages (38 samples, 0.46%)</title><rect x="81.9849%" y="581" width="0.4616%" height="15" fill="rgb(235,35,13)"/><text x="82.2349%" y="591.50"></text></g><g><title>__malloc_arena_thread_freeres (60 samples, 0.73%)</title><rect x="81.9121%" y="741" width="0.7289%" height="15" fill="rgb(233,158,34)"/><text x="82.1621%" y="751.50"></text></g><g><title>_int_free (60 samples, 0.73%)</title><rect x="81.9121%" y="725" width="0.7289%" height="15" fill="rgb(215,151,48)"/><text x="82.1621%" y="735.50"></text></g><g><title>__GI_munmap (55 samples, 0.67%)</title><rect x="81.9728%" y="709" width="0.6681%" height="15" fill="rgb(229,84,14)"/><text x="82.2228%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (55 samples, 0.67%)</title><rect x="81.9728%" y="693" width="0.6681%" height="15" fill="rgb(229,68,14)"/><text x="82.2228%" y="703.50"></text></g><g><title>do_syscall_64 (55 samples, 0.67%)</title><rect x="81.9728%" y="677" width="0.6681%" height="15" fill="rgb(243,106,26)"/><text x="82.2228%" y="687.50"></text></g><g><title>__x64_sys_munmap (55 samples, 0.67%)</title><rect x="81.9728%" y="661" width="0.6681%" height="15" fill="rgb(206,45,38)"/><text x="82.2228%" y="671.50"></text></g><g><title>__vm_munmap (55 samples, 0.67%)</title><rect x="81.9728%" y="645" width="0.6681%" height="15" fill="rgb(226,6,15)"/><text x="82.2228%" y="655.50"></text></g><g><title>__do_munmap (55 samples, 0.67%)</title><rect x="81.9728%" y="629" width="0.6681%" height="15" fill="rgb(232,22,54)"/><text x="82.2228%" y="639.50"></text></g><g><title>unmap_region (55 samples, 0.67%)</title><rect x="81.9728%" y="613" width="0.6681%" height="15" fill="rgb(229,222,32)"/><text x="82.2228%" y="623.50"></text></g><g><title>unmap_vmas (16 samples, 0.19%)</title><rect x="82.4466%" y="597" width="0.1944%" height="15" fill="rgb(228,62,29)"/><text x="82.6966%" y="607.50"></text></g><g><title>unmap_page_range (16 samples, 0.19%)</title><rect x="82.4466%" y="581" width="0.1944%" height="15" fill="rgb(251,103,34)"/><text x="82.6966%" y="591.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="82.7624%" y="597" width="0.1579%" height="15" fill="rgb(233,12,30)"/><text x="83.0124%" y="607.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.17%)</title><rect x="82.9810%" y="581" width="0.1701%" height="15" fill="rgb(238,52,0)"/><text x="83.2310%" y="591.50"></text></g><g><title>_int_realloc (9 samples, 0.11%)</title><rect x="83.0418%" y="565" width="0.1093%" height="15" fill="rgb(223,98,5)"/><text x="83.2918%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.21%)</title><rect x="82.9568%" y="597" width="0.2065%" height="15" fill="rgb(228,75,37)"/><text x="83.2068%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.57%)</title><rect x="82.6895%" y="613" width="0.5709%" height="15" fill="rgb(205,115,49)"/><text x="82.9395%" y="623.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (23 samples, 0.28%)</title><rect x="83.4791%" y="581" width="0.2794%" height="15" fill="rgb(250,154,43)"/><text x="83.7291%" y="591.50"></text></g><g><title>crypto::sha3::keccak_f (19 samples, 0.23%)</title><rect x="83.5277%" y="565" width="0.2308%" height="15" fill="rgb(226,43,29)"/><text x="83.7777%" y="575.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::input (25 samples, 0.30%)</title><rect x="83.8921%" y="549" width="0.3037%" height="15" fill="rgb(249,228,39)"/><text x="84.1421%" y="559.50"></text></g><g><title>crypto::sha3::keccak_f (24 samples, 0.29%)</title><rect x="83.9043%" y="533" width="0.2915%" height="15" fill="rgb(216,79,43)"/><text x="84.1543%" y="543.50"></text></g><g><title>crypto::digest::Digest::result_str (29 samples, 0.35%)</title><rect x="83.8678%" y="581" width="0.3523%" height="15" fill="rgb(228,95,12)"/><text x="84.1178%" y="591.50"></text></g><g><title>&lt;crypto::sha3::Sha3 as crypto::digest::Digest&gt;::result (27 samples, 0.33%)</title><rect x="83.8921%" y="565" width="0.3280%" height="15" fill="rgb(249,221,15)"/><text x="84.1421%" y="575.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::resubscribe (76 samples, 0.92%)</title><rect x="83.3576%" y="597" width="0.9232%" height="15" fill="rgb(233,34,13)"/><text x="83.6076%" y="607.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_resubscribe (90 samples, 1.09%)</title><rect x="83.2604%" y="613" width="1.0933%" height="15" fill="rgb(214,103,39)"/><text x="83.5104%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 0.13%)</title><rect x="85.0462%" y="517" width="0.1336%" height="15" fill="rgb(251,126,39)"/><text x="85.2962%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.13%)</title><rect x="85.0462%" y="501" width="0.1336%" height="15" fill="rgb(214,216,36)"/><text x="85.2962%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (11 samples, 0.13%)</title><rect x="85.0462%" y="485" width="0.1336%" height="15" fill="rgb(220,221,8)"/><text x="85.2962%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.11%)</title><rect x="85.0705%" y="469" width="0.1093%" height="15" fill="rgb(240,216,3)"/><text x="85.3205%" y="479.50"></text></g><g><title>__GI___libc_malloc (107 samples, 1.30%)</title><rect x="85.2041%" y="405" width="1.2998%" height="15" fill="rgb(232,218,17)"/><text x="85.4541%" y="415.50"></text></g><g><title>_int_malloc (63 samples, 0.77%)</title><rect x="85.7386%" y="389" width="0.7653%" height="15" fill="rgb(229,163,45)"/><text x="85.9886%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (135 samples, 1.64%)</title><rect x="84.9490%" y="581" width="1.6399%" height="15" fill="rgb(231,110,42)"/><text x="85.1990%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (132 samples, 1.60%)</title><rect x="84.9854%" y="565" width="1.6035%" height="15" fill="rgb(208,170,48)"/><text x="85.2354%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (129 samples, 1.57%)</title><rect x="85.0219%" y="549" width="1.5671%" height="15" fill="rgb(239,116,25)"/><text x="85.2719%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (127 samples, 1.54%)</title><rect x="85.0462%" y="533" width="1.5428%" height="15" fill="rgb(219,200,50)"/><text x="85.2962%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (116 samples, 1.41%)</title><rect x="85.1798%" y="517" width="1.4091%" height="15" fill="rgb(245,200,0)"/><text x="85.4298%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (116 samples, 1.41%)</title><rect x="85.1798%" y="501" width="1.4091%" height="15" fill="rgb(245,119,33)"/><text x="85.4298%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (116 samples, 1.41%)</title><rect x="85.1798%" y="485" width="1.4091%" height="15" fill="rgb(231,125,12)"/><text x="85.4298%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (116 samples, 1.41%)</title><rect x="85.1798%" y="469" width="1.4091%" height="15" fill="rgb(216,96,41)"/><text x="85.4298%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (116 samples, 1.41%)</title><rect x="85.1798%" y="453" width="1.4091%" height="15" fill="rgb(248,43,45)"/><text x="85.4298%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (116 samples, 1.41%)</title><rect x="85.1798%" y="437" width="1.4091%" height="15" fill="rgb(217,222,7)"/><text x="85.4298%" y="447.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 1.38%)</title><rect x="85.2041%" y="421" width="1.3848%" height="15" fill="rgb(233,28,6)"/><text x="85.4541%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.11%)</title><rect x="86.6375%" y="581" width="0.1093%" height="15" fill="rgb(231,218,15)"/><text x="86.8875%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="86.8562%" y="565" width="0.1093%" height="15" fill="rgb(226,171,48)"/><text x="87.1062%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="86.8562%" y="549" width="0.1093%" height="15" fill="rgb(235,201,9)"/><text x="87.1062%" y="559.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::clone::Clone&gt;::clone (21 samples, 0.26%)</title><rect x="86.8197%" y="581" width="0.2551%" height="15" fill="rgb(217,80,15)"/><text x="87.0697%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="86.9655%" y="565" width="0.1093%" height="15" fill="rgb(219,152,8)"/><text x="87.2155%" y="575.50"></text></g><g><title>__GI___libc_free (12 samples, 0.15%)</title><rect x="87.2935%" y="549" width="0.1458%" height="15" fill="rgb(243,107,38)"/><text x="87.5435%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.61%)</title><rect x="87.0870%" y="581" width="0.6074%" height="15" fill="rgb(231,17,5)"/><text x="87.3370%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (37 samples, 0.45%)</title><rect x="87.2449%" y="565" width="0.4495%" height="15" fill="rgb(209,25,54)"/><text x="87.4949%" y="575.50"></text></g><g><title>_int_free (20 samples, 0.24%)</title><rect x="87.4514%" y="549" width="0.2430%" height="15" fill="rgb(219,0,2)"/><text x="87.7014%" y="559.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="87.7915%" y="581" width="0.1215%" height="15" fill="rgb(246,9,5)"/><text x="88.0415%" y="591.50"></text></g><g><title>_int_free (16 samples, 0.19%)</title><rect x="88.1317%" y="581" width="0.1944%" height="15" fill="rgb(226,159,4)"/><text x="88.3817%" y="591.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.16%)</title><rect x="88.3868%" y="565" width="0.1579%" height="15" fill="rgb(219,175,34)"/><text x="88.6368%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.26%)</title><rect x="88.3260%" y="581" width="0.2551%" height="15" fill="rgb(236,10,46)"/><text x="88.5760%" y="591.50"></text></g><g><title>core::fmt::write (10 samples, 0.12%)</title><rect x="88.5811%" y="581" width="0.1215%" height="15" fill="rgb(240,211,16)"/><text x="88.8311%" y="591.50"></text></g><g><title>__GI___libc_free (10 samples, 0.12%)</title><rect x="88.7998%" y="565" width="0.1215%" height="15" fill="rgb(205,3,43)"/><text x="89.0498%" y="575.50"></text></g><g><title>_int_free (43 samples, 0.52%)</title><rect x="88.9577%" y="565" width="0.5224%" height="15" fill="rgb(245,7,22)"/><text x="89.2077%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (80 samples, 0.97%)</title><rect x="88.7026%" y="581" width="0.9718%" height="15" fill="rgb(239,132,32)"/><text x="88.9526%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 0.19%)</title><rect x="89.4801%" y="565" width="0.1944%" height="15" fill="rgb(228,202,34)"/><text x="89.7301%" y="575.50"></text></g><g><title>crypto::digest::Digest::result_str (11 samples, 0.13%)</title><rect x="89.7352%" y="581" width="0.1336%" height="15" fill="rgb(254,200,22)"/><text x="89.9852%" y="591.50"></text></g><g><title>decor_mem::helpers::get_col_index (16 samples, 0.19%)</title><rect x="89.8688%" y="581" width="0.1944%" height="15" fill="rgb(219,10,39)"/><text x="90.1188%" y="591.50"></text></g><g><title>decor_mem::select::select::get_rptrs_matching_constraint (9 samples, 0.11%)</title><rect x="90.1118%" y="581" width="0.1093%" height="15" fill="rgb(226,210,39)"/><text x="90.3618%" y="591.50"></text></g><g><title>decor_mem::views::Views::get_view (13 samples, 0.16%)</title><rect x="90.2211%" y="581" width="0.1579%" height="15" fill="rgb(208,219,16)"/><text x="90.4711%" y="591.50"></text></g><g><title>&lt;decor_mem::query_transformer::TraversedEntity as core::hash::Hash&gt;::hash (35 samples, 0.43%)</title><rect x="90.3790%" y="565" width="0.4252%" height="15" fill="rgb(216,158,51)"/><text x="90.6290%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 0.39%)</title><rect x="90.4155%" y="549" width="0.3887%" height="15" fill="rgb(233,14,44)"/><text x="90.6655%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (41 samples, 0.50%)</title><rect x="90.3790%" y="581" width="0.4981%" height="15" fill="rgb(237,97,39)"/><text x="90.6290%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.17%)</title><rect x="90.8771%" y="581" width="0.1701%" height="15" fill="rgb(218,198,43)"/><text x="91.1271%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.12%)</title><rect x="91.0471%" y="581" width="0.1215%" height="15" fill="rgb(231,104,20)"/><text x="91.2971%" y="591.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_unsubscribe (570 samples, 6.92%)</title><rect x="84.3537%" y="613" width="6.9242%" height="15" fill="rgb(254,36,13)"/><text x="84.6037%" y="623.50">&lt;decor_me..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::unsubscribe (566 samples, 6.88%)</title><rect x="84.4023%" y="597" width="6.8756%" height="15" fill="rgb(248,14,50)"/><text x="84.6523%" y="607.50">decor_mem..</text></g><g><title>__GI___libc_free (20 samples, 0.24%)</title><rect x="91.4966%" y="501" width="0.2430%" height="15" fill="rgb(217,107,29)"/><text x="91.7466%" y="511.50"></text></g><g><title>_int_free (36 samples, 0.44%)</title><rect x="91.7396%" y="501" width="0.4373%" height="15" fill="rgb(251,169,33)"/><text x="91.9896%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.81%)</title><rect x="91.3873%" y="517" width="0.8139%" height="15" fill="rgb(217,108,32)"/><text x="91.6373%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.83%)</title><rect x="91.3873%" y="533" width="0.8260%" height="15" fill="rgb(219,66,42)"/><text x="91.6373%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.84%)</title><rect x="91.3873%" y="565" width="0.8382%" height="15" fill="rgb(206,180,7)"/><text x="91.6373%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.84%)</title><rect x="91.3873%" y="549" width="0.8382%" height="15" fill="rgb(208,226,31)"/><text x="91.6373%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (70 samples, 0.85%)</title><rect x="91.3873%" y="581" width="0.8503%" height="15" fill="rgb(218,26,49)"/><text x="91.6373%" y="591.50"></text></g><g><title>ksys_write (10 samples, 0.12%)</title><rect x="92.2376%" y="469" width="0.1215%" height="15" fill="rgb(233,197,48)"/><text x="92.4876%" y="479.50"></text></g><g><title>vfs_write (9 samples, 0.11%)</title><rect x="92.2498%" y="453" width="0.1093%" height="15" fill="rgb(252,181,51)"/><text x="92.4998%" y="463.50"></text></g><g><title>new_sync_write (9 samples, 0.11%)</title><rect x="92.2498%" y="437" width="0.1093%" height="15" fill="rgb(253,90,19)"/><text x="92.4998%" y="447.50"></text></g><g><title>ext4_buffered_write_iter (9 samples, 0.11%)</title><rect x="92.2498%" y="421" width="0.1093%" height="15" fill="rgb(215,171,30)"/><text x="92.4998%" y="431.50"></text></g><g><title>do_syscall_64 (11 samples, 0.13%)</title><rect x="92.2376%" y="485" width="0.1336%" height="15" fill="rgb(214,222,9)"/><text x="92.4876%" y="495.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (16 samples, 0.19%)</title><rect x="92.2376%" y="565" width="0.1944%" height="15" fill="rgb(223,3,22)"/><text x="92.4876%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::write (16 samples, 0.19%)</title><rect x="92.2376%" y="549" width="0.1944%" height="15" fill="rgb(225,196,46)"/><text x="92.4876%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (16 samples, 0.19%)</title><rect x="92.2376%" y="533" width="0.1944%" height="15" fill="rgb(209,110,37)"/><text x="92.4876%" y="543.50"></text></g><g><title>__libc_write (16 samples, 0.19%)</title><rect x="92.2376%" y="517" width="0.1944%" height="15" fill="rgb(249,89,12)"/><text x="92.4876%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (16 samples, 0.19%)</title><rect x="92.2376%" y="501" width="0.1944%" height="15" fill="rgb(226,27,33)"/><text x="92.4876%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (87 samples, 1.06%)</title><rect x="91.3873%" y="613" width="1.0569%" height="15" fill="rgb(213,82,22)"/><text x="91.6373%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (87 samples, 1.06%)</title><rect x="91.3873%" y="597" width="1.0569%" height="15" fill="rgb(248,140,0)"/><text x="91.6373%" y="607.50"></text></g><g><title>decor_mem::stats::print_stats (17 samples, 0.21%)</title><rect x="92.2376%" y="581" width="0.2065%" height="15" fill="rgb(228,106,3)"/><text x="92.4876%" y="591.50"></text></g><g><title>dequeue_task_fair (10 samples, 0.12%)</title><rect x="92.9908%" y="325" width="0.1215%" height="15" fill="rgb(209,23,37)"/><text x="93.2408%" y="335.50"></text></g><g><title>dequeue_entity (10 samples, 0.12%)</title><rect x="92.9908%" y="309" width="0.1215%" height="15" fill="rgb(241,93,50)"/><text x="93.2408%" y="319.50"></text></g><g><title>sk_wait_data (38 samples, 0.46%)</title><rect x="92.8571%" y="405" width="0.4616%" height="15" fill="rgb(253,46,43)"/><text x="93.1071%" y="415.50"></text></g><g><title>wait_woken (34 samples, 0.41%)</title><rect x="92.9057%" y="389" width="0.4130%" height="15" fill="rgb(226,206,43)"/><text x="93.1557%" y="399.50"></text></g><g><title>schedule_timeout (34 samples, 0.41%)</title><rect x="92.9057%" y="373" width="0.4130%" height="15" fill="rgb(217,54,7)"/><text x="93.1557%" y="383.50"></text></g><g><title>schedule (33 samples, 0.40%)</title><rect x="92.9179%" y="357" width="0.4009%" height="15" fill="rgb(223,5,52)"/><text x="93.1679%" y="367.50"></text></g><g><title>__schedule (32 samples, 0.39%)</title><rect x="92.9300%" y="341" width="0.3887%" height="15" fill="rgb(206,52,46)"/><text x="93.1800%" y="351.50"></text></g><g><title>inet_recvmsg (48 samples, 0.58%)</title><rect x="92.7843%" y="437" width="0.5831%" height="15" fill="rgb(253,136,11)"/><text x="93.0343%" y="447.50"></text></g><g><title>tcp_recvmsg (48 samples, 0.58%)</title><rect x="92.7843%" y="421" width="0.5831%" height="15" fill="rgb(208,106,33)"/><text x="93.0343%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (52 samples, 0.63%)</title><rect x="92.7478%" y="469" width="0.6317%" height="15" fill="rgb(206,54,4)"/><text x="92.9978%" y="479.50"></text></g><g><title>__sys_recvfrom (52 samples, 0.63%)</title><rect x="92.7478%" y="453" width="0.6317%" height="15" fill="rgb(213,3,15)"/><text x="92.9978%" y="463.50"></text></g><g><title>do_syscall_64 (53 samples, 0.64%)</title><rect x="92.7478%" y="485" width="0.6438%" height="15" fill="rgb(252,211,39)"/><text x="92.9978%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (59 samples, 0.72%)</title><rect x="92.7235%" y="501" width="0.7167%" height="15" fill="rgb(223,6,36)"/><text x="92.9735%" y="511.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (62 samples, 0.75%)</title><rect x="92.6992%" y="581" width="0.7532%" height="15" fill="rgb(252,169,45)"/><text x="92.9492%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (62 samples, 0.75%)</title><rect x="92.6992%" y="565" width="0.7532%" height="15" fill="rgb(212,48,26)"/><text x="92.9492%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (62 samples, 0.75%)</title><rect x="92.6992%" y="549" width="0.7532%" height="15" fill="rgb(251,102,48)"/><text x="92.9492%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (62 samples, 0.75%)</title><rect x="92.6992%" y="533" width="0.7532%" height="15" fill="rgb(243,208,16)"/><text x="92.9492%" y="543.50"></text></g><g><title>__libc_recv (62 samples, 0.75%)</title><rect x="92.6992%" y="517" width="0.7532%" height="15" fill="rgb(219,96,24)"/><text x="92.9492%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (65 samples, 0.79%)</title><rect x="92.6871%" y="597" width="0.7896%" height="15" fill="rgb(219,33,29)"/><text x="92.9371%" y="607.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (73 samples, 0.89%)</title><rect x="92.6628%" y="613" width="0.8868%" height="15" fill="rgb(223,176,5)"/><text x="92.9128%" y="623.50"></text></g><g><title>enqueue_task_fair (11 samples, 0.13%)</title><rect x="94.2784%" y="53" width="0.1336%" height="15" fill="rgb(228,140,14)"/><text x="94.5284%" y="63.50"></text></g><g><title>enqueue_entity (11 samples, 0.13%)</title><rect x="94.2784%" y="37" width="0.1336%" height="15" fill="rgb(217,179,31)"/><text x="94.5284%" y="47.50"></text></g><g><title>try_to_wake_up (20 samples, 0.24%)</title><rect x="94.2055%" y="69" width="0.2430%" height="15" fill="rgb(230,9,30)"/><text x="94.4555%" y="79.50"></text></g><g><title>sock_def_readable (25 samples, 0.30%)</title><rect x="94.1569%" y="117" width="0.3037%" height="15" fill="rgb(230,136,20)"/><text x="94.4069%" y="127.50"></text></g><g><title>__wake_up_common_lock (24 samples, 0.29%)</title><rect x="94.1691%" y="101" width="0.2915%" height="15" fill="rgb(215,210,22)"/><text x="94.4191%" y="111.50"></text></g><g><title>__wake_up_common (24 samples, 0.29%)</title><rect x="94.1691%" y="85" width="0.2915%" height="15" fill="rgb(218,43,5)"/><text x="94.4191%" y="95.50"></text></g><g><title>tcp_ack (18 samples, 0.22%)</title><rect x="94.4606%" y="117" width="0.2187%" height="15" fill="rgb(216,11,5)"/><text x="94.7106%" y="127.50"></text></g><g><title>ip_local_deliver (58 samples, 0.70%)</title><rect x="94.0112%" y="213" width="0.7046%" height="15" fill="rgb(209,82,29)"/><text x="94.2612%" y="223.50"></text></g><g><title>ip_local_deliver_finish (56 samples, 0.68%)</title><rect x="94.0355%" y="197" width="0.6803%" height="15" fill="rgb(244,115,12)"/><text x="94.2855%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (56 samples, 0.68%)</title><rect x="94.0355%" y="181" width="0.6803%" height="15" fill="rgb(222,82,18)"/><text x="94.2855%" y="191.50"></text></g><g><title>tcp_v4_rcv (55 samples, 0.67%)</title><rect x="94.0476%" y="165" width="0.6681%" height="15" fill="rgb(249,227,8)"/><text x="94.2976%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (51 samples, 0.62%)</title><rect x="94.0962%" y="149" width="0.6195%" height="15" fill="rgb(253,141,45)"/><text x="94.3462%" y="159.50"></text></g><g><title>tcp_rcv_established (51 samples, 0.62%)</title><rect x="94.0962%" y="133" width="0.6195%" height="15" fill="rgb(234,184,4)"/><text x="94.3462%" y="143.50"></text></g><g><title>__netif_receive_skb_one_core (62 samples, 0.75%)</title><rect x="93.9747%" y="245" width="0.7532%" height="15" fill="rgb(218,194,23)"/><text x="94.2247%" y="255.50"></text></g><g><title>ip_rcv (60 samples, 0.73%)</title><rect x="93.9990%" y="229" width="0.7289%" height="15" fill="rgb(235,66,41)"/><text x="94.2490%" y="239.50"></text></g><g><title>__local_bh_enable_ip (69 samples, 0.84%)</title><rect x="93.9018%" y="341" width="0.8382%" height="15" fill="rgb(245,217,1)"/><text x="94.1518%" y="351.50"></text></g><g><title>do_softirq (69 samples, 0.84%)</title><rect x="93.9018%" y="325" width="0.8382%" height="15" fill="rgb(229,91,1)"/><text x="94.1518%" y="335.50"></text></g><g><title>do_softirq_own_stack (68 samples, 0.83%)</title><rect x="93.9140%" y="309" width="0.8260%" height="15" fill="rgb(207,101,30)"/><text x="94.1640%" y="319.50"></text></g><g><title>__do_softirq (68 samples, 0.83%)</title><rect x="93.9140%" y="293" width="0.8260%" height="15" fill="rgb(223,82,49)"/><text x="94.1640%" y="303.50"></text></g><g><title>net_rx_action (67 samples, 0.81%)</title><rect x="93.9261%" y="277" width="0.8139%" height="15" fill="rgb(218,167,17)"/><text x="94.1761%" y="287.50"></text></g><g><title>process_backlog (64 samples, 0.78%)</title><rect x="93.9626%" y="261" width="0.7775%" height="15" fill="rgb(208,103,14)"/><text x="94.2126%" y="271.50"></text></g><g><title>__ip_queue_xmit (85 samples, 1.03%)</title><rect x="93.7196%" y="389" width="1.0326%" height="15" fill="rgb(238,20,8)"/><text x="93.9696%" y="399.50"></text></g><g><title>ip_output (80 samples, 0.97%)</title><rect x="93.7804%" y="373" width="0.9718%" height="15" fill="rgb(218,80,54)"/><text x="94.0304%" y="383.50"></text></g><g><title>ip_finish_output2 (78 samples, 0.95%)</title><rect x="93.8047%" y="357" width="0.9475%" height="15" fill="rgb(240,144,17)"/><text x="94.0547%" y="367.50"></text></g><g><title>__tcp_transmit_skb (95 samples, 1.15%)</title><rect x="93.6589%" y="405" width="1.1540%" height="15" fill="rgb(245,27,50)"/><text x="93.9089%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (99 samples, 1.20%)</title><rect x="93.6589%" y="437" width="1.2026%" height="15" fill="rgb(251,51,7)"/><text x="93.9089%" y="447.50"></text></g><g><title>tcp_write_xmit (99 samples, 1.20%)</title><rect x="93.6589%" y="421" width="1.2026%" height="15" fill="rgb(245,217,29)"/><text x="93.9089%" y="431.50"></text></g><g><title>sock_sendmsg (116 samples, 1.41%)</title><rect x="93.6224%" y="485" width="1.4091%" height="15" fill="rgb(221,176,29)"/><text x="93.8724%" y="495.50"></text></g><g><title>tcp_sendmsg (114 samples, 1.38%)</title><rect x="93.6467%" y="469" width="1.3848%" height="15" fill="rgb(212,180,24)"/><text x="93.8967%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (113 samples, 1.37%)</title><rect x="93.6589%" y="453" width="1.3727%" height="15" fill="rgb(254,24,2)"/><text x="93.9089%" y="463.50"></text></g><g><title>__x64_sys_sendto (120 samples, 1.46%)</title><rect x="93.5982%" y="517" width="1.4577%" height="15" fill="rgb(230,100,2)"/><text x="93.8482%" y="527.50"></text></g><g><title>__sys_sendto (119 samples, 1.45%)</title><rect x="93.6103%" y="501" width="1.4456%" height="15" fill="rgb(219,142,25)"/><text x="93.8603%" y="511.50"></text></g><g><title>do_syscall_64 (122 samples, 1.48%)</title><rect x="93.5982%" y="533" width="1.4820%" height="15" fill="rgb(240,73,43)"/><text x="93.8482%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (127 samples, 1.54%)</title><rect x="93.5982%" y="549" width="1.5428%" height="15" fill="rgb(214,114,15)"/><text x="93.8482%" y="559.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,030 samples, 12.51%)</title><rect x="82.6409%" y="645" width="12.5121%" height="15" fill="rgb(207,130,4)"/><text x="82.8909%" y="655.50">msql_srv::MysqlInte..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run (1,030 samples, 12.51%)</title><rect x="82.6409%" y="629" width="12.5121%" height="15" fill="rgb(221,25,40)"/><text x="82.8909%" y="639.50">msql_srv::MysqlInte..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (132 samples, 1.60%)</title><rect x="93.5496%" y="613" width="1.6035%" height="15" fill="rgb(241,184,7)"/><text x="93.7996%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (131 samples, 1.59%)</title><rect x="93.5617%" y="597" width="1.5914%" height="15" fill="rgb(235,159,4)"/><text x="93.8117%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (131 samples, 1.59%)</title><rect x="93.5617%" y="581" width="1.5914%" height="15" fill="rgb(214,87,48)"/><text x="93.8117%" y="591.50"></text></g><g><title>__libc_send (131 samples, 1.59%)</title><rect x="93.5617%" y="565" width="1.5914%" height="15" fill="rgb(246,198,24)"/><text x="93.8117%" y="575.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (1,031 samples, 12.52%)</title><rect x="82.6409%" y="661" width="12.5243%" height="15" fill="rgb(209,66,40)"/><text x="82.8909%" y="671.50">decor_mem::Shim::ru..</text></g><g><title>__GI___clone (1,092 samples, 13.27%)</title><rect x="81.9121%" y="773" width="13.2653%" height="15" fill="rgb(233,147,39)"/><text x="82.1621%" y="783.50">__GI___clone</text></g><g><title>start_thread (1,092 samples, 13.27%)</title><rect x="81.9121%" y="757" width="13.2653%" height="15" fill="rgb(231,145,52)"/><text x="82.1621%" y="767.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,032 samples, 12.54%)</title><rect x="82.6409%" y="741" width="12.5364%" height="15" fill="rgb(206,20,26)"/><text x="82.8909%" y="751.50">std::sys::unix::thr..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,032 samples, 12.54%)</title><rect x="82.6409%" y="725" width="12.5364%" height="15" fill="rgb(238,220,4)"/><text x="82.8909%" y="735.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,032 samples, 12.54%)</title><rect x="82.6409%" y="709" width="12.5364%" height="15" fill="rgb(252,195,42)"/><text x="82.8909%" y="719.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,032 samples, 12.54%)</title><rect x="82.6409%" y="693" width="12.5364%" height="15" fill="rgb(209,10,6)"/><text x="82.8909%" y="703.50">core::ops::function..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,032 samples, 12.54%)</title><rect x="82.6409%" y="677" width="12.5364%" height="15" fill="rgb(229,3,52)"/><text x="82.8909%" y="687.50">std::sys_common::ba..</text></g><g><title>__vdso_clock_gettime (9 samples, 0.11%)</title><rect x="95.2988%" y="773" width="0.1093%" height="15" fill="rgb(253,49,37)"/><text x="95.5488%" y="783.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (229 samples, 2.78%)</title><rect x="95.5782%" y="293" width="2.7818%" height="15" fill="rgb(240,103,49)"/><text x="95.8282%" y="303.50">__..</text></g><g><title>native_write_msr (229 samples, 2.78%)</title><rect x="95.5782%" y="277" width="2.7818%" height="15" fill="rgb(250,182,30)"/><text x="95.8282%" y="287.50">na..</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 2.84%)</title><rect x="95.5296%" y="421" width="2.8426%" height="15" fill="rgb(248,8,30)"/><text x="95.7796%" y="431.50">__..</text></g><g><title>stop_one_cpu (234 samples, 2.84%)</title><rect x="95.5296%" y="405" width="2.8426%" height="15" fill="rgb(237,120,30)"/><text x="95.7796%" y="415.50">st..</text></g><g><title>cpu_stop_queue_work (233 samples, 2.83%)</title><rect x="95.5418%" y="389" width="2.8304%" height="15" fill="rgb(221,146,34)"/><text x="95.7918%" y="399.50">cp..</text></g><g><title>preempt_schedule_thunk (233 samples, 2.83%)</title><rect x="95.5418%" y="373" width="2.8304%" height="15" fill="rgb(242,55,13)"/><text x="95.7918%" y="383.50">pr..</text></g><g><title>preempt_schedule_common (233 samples, 2.83%)</title><rect x="95.5418%" y="357" width="2.8304%" height="15" fill="rgb(242,112,31)"/><text x="95.7918%" y="367.50">pr..</text></g><g><title>__schedule (233 samples, 2.83%)</title><rect x="95.5418%" y="341" width="2.8304%" height="15" fill="rgb(249,192,27)"/><text x="95.7918%" y="351.50">__..</text></g><g><title>finish_task_switch (233 samples, 2.83%)</title><rect x="95.5418%" y="325" width="2.8304%" height="15" fill="rgb(208,204,44)"/><text x="95.7918%" y="335.50">fi..</text></g><g><title>__perf_event_task_sched_in (233 samples, 2.83%)</title><rect x="95.5418%" y="309" width="2.8304%" height="15" fill="rgb(208,93,54)"/><text x="95.7918%" y="319.50">__..</text></g><g><title>do_syscall_64 (235 samples, 2.85%)</title><rect x="95.5296%" y="469" width="2.8547%" height="15" fill="rgb(242,1,31)"/><text x="95.7796%" y="479.50">do..</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 2.85%)</title><rect x="95.5296%" y="453" width="2.8547%" height="15" fill="rgb(241,83,25)"/><text x="95.7796%" y="463.50">__..</text></g><g><title>sched_setaffinity (235 samples, 2.85%)</title><rect x="95.5296%" y="437" width="2.8547%" height="15" fill="rgb(205,169,50)"/><text x="95.7796%" y="447.50">sc..</text></g><g><title>entry_SYSCALL_64 (237 samples, 2.88%)</title><rect x="95.5296%" y="485" width="2.8790%" height="15" fill="rgb(239,186,37)"/><text x="95.7796%" y="495.50">en..</text></g><g><title>hwloc::Topology::new (241 samples, 2.93%)</title><rect x="95.4932%" y="597" width="2.9276%" height="15" fill="rgb(205,221,10)"/><text x="95.7432%" y="607.50">hw..</text></g><g><title>hwloc_topology_load (241 samples, 2.93%)</title><rect x="95.4932%" y="581" width="2.9276%" height="15" fill="rgb(218,196,15)"/><text x="95.7432%" y="591.50">hw..</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 2.93%)</title><rect x="95.4932%" y="565" width="2.9276%" height="15" fill="rgb(218,196,35)"/><text x="95.7432%" y="575.50">[l..</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 2.93%)</title><rect x="95.4932%" y="549" width="2.9276%" height="15" fill="rgb(233,63,24)"/><text x="95.7432%" y="559.50">[l..</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 2.93%)</title><rect x="95.4932%" y="533" width="2.9276%" height="15" fill="rgb(225,8,4)"/><text x="95.7432%" y="543.50">[l..</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 2.92%)</title><rect x="95.5053%" y="517" width="2.9155%" height="15" fill="rgb(234,105,35)"/><text x="95.7553%" y="527.50">hw..</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 2.92%)</title><rect x="95.5053%" y="501" width="2.9155%" height="15" fill="rgb(236,21,32)"/><text x="95.7553%" y="511.50">__..</text></g><g><title>__libc_start_main (256 samples, 3.11%)</title><rect x="95.4325%" y="757" width="3.1098%" height="15" fill="rgb(228,109,6)"/><text x="95.6825%" y="767.50">__l..</text></g><g><title>main (256 samples, 3.11%)</title><rect x="95.4325%" y="741" width="3.1098%" height="15" fill="rgb(229,215,31)"/><text x="95.6825%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (256 samples, 3.11%)</title><rect x="95.4325%" y="725" width="3.1098%" height="15" fill="rgb(221,52,54)"/><text x="95.6825%" y="735.50">std..</text></g><g><title>std::panic::catch_unwind (256 samples, 3.11%)</title><rect x="95.4325%" y="709" width="3.1098%" height="15" fill="rgb(252,129,43)"/><text x="95.6825%" y="719.50">std..</text></g><g><title>std::panicking::try (256 samples, 3.11%)</title><rect x="95.4325%" y="693" width="3.1098%" height="15" fill="rgb(248,183,27)"/><text x="95.6825%" y="703.50">std..</text></g><g><title>std::panicking::try::do_call (256 samples, 3.11%)</title><rect x="95.4325%" y="677" width="3.1098%" height="15" fill="rgb(250,0,22)"/><text x="95.6825%" y="687.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (256 samples, 3.11%)</title><rect x="95.4325%" y="661" width="3.1098%" height="15" fill="rgb(213,166,10)"/><text x="95.6825%" y="671.50">cor..</text></g><g><title>std::rt::lang_start::_{{closure}} (256 samples, 3.11%)</title><rect x="95.4325%" y="645" width="3.1098%" height="15" fill="rgb(207,163,36)"/><text x="95.6825%" y="655.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (256 samples, 3.11%)</title><rect x="95.4325%" y="629" width="3.1098%" height="15" fill="rgb(208,122,22)"/><text x="95.6825%" y="639.50">std..</text></g><g><title>lobsters_microbenchmarks::main (256 samples, 3.11%)</title><rect x="95.4325%" y="613" width="3.1098%" height="15" fill="rgb(207,104,49)"/><text x="95.6825%" y="623.50">lob..</text></g><g><title>_start (257 samples, 3.12%)</title><rect x="95.4325%" y="773" width="3.1220%" height="15" fill="rgb(248,211,50)"/><text x="95.6825%" y="783.50">_st..</text></g><g><title>page_fault (76 samples, 0.92%)</title><rect x="98.9310%" y="773" width="0.9232%" height="15" fill="rgb(217,13,45)"/><text x="99.1810%" y="783.50"></text></g><g><title>lobsters-microb (8,226 samples, 99.93%)</title><rect x="0.0000%" y="789" width="99.9271%" height="15" fill="rgb(211,216,49)"/><text x="0.2500%" y="799.50">lobsters-microb</text></g><g><title>all (8,232 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(221,58,53)"/><text x="0.2500%" y="815.50"></text></g></svg></svg>