<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="837.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="837.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (7 samples, 0.16%)</title><rect x="0.0444%" y="773" width="0.1553%" height="15" fill="rgb(227,0,7)"/><text x="0.2944%" y="783.50"></text></g><g><title>[[stack]] (6 samples, 0.13%)</title><rect x="0.1996%" y="773" width="0.1331%" height="15" fill="rgb(217,0,24)"/><text x="0.4496%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.27%)</title><rect x="0.3327%" y="757" width="0.2662%" height="15" fill="rgb(221,193,54)"/><text x="0.5827%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.11%)</title><rect x="1.2201%" y="693" width="0.1109%" height="15" fill="rgb(248,212,6)"/><text x="1.4701%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.11%)</title><rect x="1.2201%" y="677" width="0.1109%" height="15" fill="rgb(208,68,35)"/><text x="1.4701%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.11%)</title><rect x="1.2201%" y="661" width="0.1109%" height="15" fill="rgb(232,128,0)"/><text x="1.4701%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.11%)</title><rect x="1.2201%" y="645" width="0.1109%" height="15" fill="rgb(207,160,47)"/><text x="1.4701%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (42 samples, 0.93%)</title><rect x="0.5989%" y="757" width="0.9317%" height="15" fill="rgb(228,23,34)"/><text x="0.8489%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.31%)</title><rect x="1.2201%" y="741" width="0.3106%" height="15" fill="rgb(218,30,26)"/><text x="1.4701%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.31%)</title><rect x="1.2201%" y="725" width="0.3106%" height="15" fill="rgb(220,122,19)"/><text x="1.4701%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.31%)</title><rect x="1.2201%" y="709" width="0.3106%" height="15" fill="rgb(250,228,42)"/><text x="1.4701%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.20%)</title><rect x="1.3310%" y="693" width="0.1996%" height="15" fill="rgb(240,193,28)"/><text x="1.5810%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.20%)</title><rect x="1.3310%" y="677" width="0.1996%" height="15" fill="rgb(216,20,37)"/><text x="1.5810%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.20%)</title><rect x="1.3310%" y="661" width="0.1996%" height="15" fill="rgb(206,188,39)"/><text x="1.5810%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.20%)</title><rect x="1.3310%" y="645" width="0.1996%" height="15" fill="rgb(217,207,13)"/><text x="1.5810%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.20%)</title><rect x="1.3310%" y="629" width="0.1996%" height="15" fill="rgb(231,73,38)"/><text x="1.5810%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.20%)</title><rect x="1.3310%" y="613" width="0.1996%" height="15" fill="rgb(225,20,46)"/><text x="1.5810%" y="623.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.20%)</title><rect x="1.3310%" y="597" width="0.1996%" height="15" fill="rgb(210,31,41)"/><text x="1.5810%" y="607.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="1.8190%" y="757" width="0.1109%" height="15" fill="rgb(221,200,47)"/><text x="2.0690%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="1.9299%" y="757" width="0.1775%" height="15" fill="rgb(226,26,5)"/><text x="2.1799%" y="767.50"></text></g><g><title>__GI___libc_free (5 samples, 0.11%)</title><rect x="2.1739%" y="757" width="0.1109%" height="15" fill="rgb(249,33,26)"/><text x="2.4239%" y="767.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.33%)</title><rect x="2.2848%" y="757" width="0.3327%" height="15" fill="rgb(235,183,28)"/><text x="2.5348%" y="767.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.11%)</title><rect x="2.6176%" y="757" width="0.1109%" height="15" fill="rgb(221,5,38)"/><text x="2.8676%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.24%)</title><rect x="2.7507%" y="757" width="0.2440%" height="15" fill="rgb(247,18,42)"/><text x="3.0007%" y="767.50"></text></g><g><title>_int_free (29 samples, 0.64%)</title><rect x="3.1056%" y="757" width="0.6433%" height="15" fill="rgb(241,131,45)"/><text x="3.3556%" y="767.50"></text></g><g><title>_int_malloc (16 samples, 0.35%)</title><rect x="3.7489%" y="757" width="0.3549%" height="15" fill="rgb(249,31,29)"/><text x="3.9989%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.40%)</title><rect x="4.1704%" y="757" width="0.3993%" height="15" fill="rgb(225,111,53)"/><text x="4.4204%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (17 samples, 0.38%)</title><rect x="4.6140%" y="757" width="0.3771%" height="15" fill="rgb(238,160,17)"/><text x="4.8640%" y="767.50"></text></g><g><title>alloc::string::String::push (8 samples, 0.18%)</title><rect x="4.9911%" y="757" width="0.1775%" height="15" fill="rgb(214,148,48)"/><text x="5.2411%" y="767.50"></text></g><g><title>core::fmt::write (5 samples, 0.11%)</title><rect x="5.2351%" y="757" width="0.1109%" height="15" fill="rgb(232,36,49)"/><text x="5.4851%" y="767.50"></text></g><g><title>core::num::dec2flt::dec2flt (8 samples, 0.18%)</title><rect x="5.3461%" y="757" width="0.1775%" height="15" fill="rgb(209,103,24)"/><text x="5.5961%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.13%)</title><rect x="5.6122%" y="757" width="0.1331%" height="15" fill="rgb(229,88,8)"/><text x="5.8622%" y="767.50"></text></g><g><title>decor_mem::select::get_ris_matching_constraint (5 samples, 0.11%)</title><rect x="5.8563%" y="757" width="0.1109%" height="15" fill="rgb(213,181,19)"/><text x="6.1063%" y="767.50"></text></g><g><title>decor_mem::select::get_setexpr_results (5 samples, 0.11%)</title><rect x="5.9672%" y="757" width="0.1109%" height="15" fill="rgb(254,191,54)"/><text x="6.2172%" y="767.50"></text></g><g><title>decor_mem::select::get_value_for_row::{{closure}} (6 samples, 0.13%)</title><rect x="6.0781%" y="757" width="0.1331%" height="15" fill="rgb(241,83,37)"/><text x="6.3281%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (10 samples, 0.22%)</title><rect x="6.9654%" y="757" width="0.2218%" height="15" fill="rgb(233,36,39)"/><text x="7.2154%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (5 samples, 0.11%)</title><rect x="7.1872%" y="757" width="0.1109%" height="15" fill="rgb(226,3,54)"/><text x="7.4372%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (7 samples, 0.16%)</title><rect x="7.4091%" y="757" width="0.1553%" height="15" fill="rgb(245,192,40)"/><text x="7.6591%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (13 samples, 0.29%)</title><rect x="7.5643%" y="757" width="0.2884%" height="15" fill="rgb(238,167,29)"/><text x="7.8143%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (7 samples, 0.16%)</title><rect x="7.8527%" y="757" width="0.1553%" height="15" fill="rgb(232,182,51)"/><text x="8.1027%" y="767.50"></text></g><g><title>[anon] (360 samples, 7.99%)</title><rect x="0.3327%" y="773" width="7.9858%" height="15" fill="rgb(231,60,39)"/><text x="0.5827%" y="783.50">[anon]</text></g><g><title>unlink_chunk.constprop.0 (10 samples, 0.22%)</title><rect x="8.0967%" y="757" width="0.2218%" height="15" fill="rgb(208,69,12)"/><text x="8.3467%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.13%)</title><rect x="8.3629%" y="757" width="0.1331%" height="15" fill="rgb(235,93,37)"/><text x="8.6129%" y="767.50"></text></g><g><title>_int_free (11 samples, 0.24%)</title><rect x="8.6069%" y="757" width="0.2440%" height="15" fill="rgb(213,116,39)"/><text x="8.8569%" y="767.50"></text></g><g><title>[lobsters-microbenchmarks] (34 samples, 0.75%)</title><rect x="8.3629%" y="773" width="0.7542%" height="15" fill="rgb(222,207,29)"/><text x="8.6129%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="9.2059%" y="757" width="0.2218%" height="15" fill="rgb(206,96,30)"/><text x="9.4559%" y="767.50"></text></g><g><title>do_syscall_64 (11 samples, 0.24%)</title><rect x="9.5164%" y="501" width="0.2440%" height="15" fill="rgb(218,138,4)"/><text x="9.7664%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (10 samples, 0.22%)</title><rect x="9.5386%" y="485" width="0.2218%" height="15" fill="rgb(250,191,14)"/><text x="9.7886%" y="495.50"></text></g><g><title>__sys_recvfrom (10 samples, 0.22%)</title><rect x="9.5386%" y="469" width="0.2218%" height="15" fill="rgb(239,60,40)"/><text x="9.7886%" y="479.50"></text></g><g><title>inet_recvmsg (10 samples, 0.22%)</title><rect x="9.5386%" y="453" width="0.2218%" height="15" fill="rgb(206,27,48)"/><text x="9.7886%" y="463.50"></text></g><g><title>tcp_recvmsg (10 samples, 0.22%)</title><rect x="9.5386%" y="437" width="0.2218%" height="15" fill="rgb(225,35,8)"/><text x="9.7886%" y="447.50"></text></g><g><title>sk_wait_data (7 samples, 0.16%)</title><rect x="9.6051%" y="421" width="0.1553%" height="15" fill="rgb(250,213,24)"/><text x="9.8551%" y="431.50"></text></g><g><title>wait_woken (5 samples, 0.11%)</title><rect x="9.6495%" y="405" width="0.1109%" height="15" fill="rgb(247,123,22)"/><text x="9.8995%" y="415.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.31%)</title><rect x="9.5164%" y="517" width="0.3106%" height="15" fill="rgb(231,138,38)"/><text x="9.7664%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (15 samples, 0.33%)</title><rect x="9.5164%" y="613" width="0.3327%" height="15" fill="rgb(231,145,46)"/><text x="9.7664%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (15 samples, 0.33%)</title><rect x="9.5164%" y="597" width="0.3327%" height="15" fill="rgb(251,118,11)"/><text x="9.7664%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (15 samples, 0.33%)</title><rect x="9.5164%" y="581" width="0.3327%" height="15" fill="rgb(217,147,25)"/><text x="9.7664%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (15 samples, 0.33%)</title><rect x="9.5164%" y="565" width="0.3327%" height="15" fill="rgb(247,81,37)"/><text x="9.7664%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (15 samples, 0.33%)</title><rect x="9.5164%" y="549" width="0.3327%" height="15" fill="rgb(209,12,38)"/><text x="9.7664%" y="559.50"></text></g><g><title>__libc_recv (15 samples, 0.33%)</title><rect x="9.5164%" y="533" width="0.3327%" height="15" fill="rgb(227,1,9)"/><text x="9.7664%" y="543.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (16 samples, 0.35%)</title><rect x="9.5164%" y="709" width="0.3549%" height="15" fill="rgb(248,47,43)"/><text x="9.7664%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (16 samples, 0.35%)</title><rect x="9.5164%" y="693" width="0.3549%" height="15" fill="rgb(221,10,30)"/><text x="9.7664%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (16 samples, 0.35%)</title><rect x="9.5164%" y="677" width="0.3549%" height="15" fill="rgb(210,229,1)"/><text x="9.7664%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (16 samples, 0.35%)</title><rect x="9.5164%" y="661" width="0.3549%" height="15" fill="rgb(222,148,37)"/><text x="9.7664%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (16 samples, 0.35%)</title><rect x="9.5164%" y="645" width="0.3549%" height="15" fill="rgb(234,67,33)"/><text x="9.7664%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.35%)</title><rect x="9.5164%" y="629" width="0.3549%" height="15" fill="rgb(247,98,35)"/><text x="9.7664%" y="639.50"></text></g><g><title>core::num::dec2flt::parse::eat_digits (6 samples, 0.13%)</title><rect x="10.2484%" y="597" width="0.1331%" height="15" fill="rgb(247,138,52)"/><text x="10.4984%" y="607.50"></text></g><g><title>alloc::slice::insert_head (21 samples, 0.47%)</title><rect x="9.9601%" y="661" width="0.4658%" height="15" fill="rgb(213,79,30)"/><text x="10.2101%" y="671.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (21 samples, 0.47%)</title><rect x="9.9601%" y="645" width="0.4658%" height="15" fill="rgb(246,177,23)"/><text x="10.2101%" y="655.50"></text></g><g><title>core::num::dec2flt::dec2flt (21 samples, 0.47%)</title><rect x="9.9601%" y="629" width="0.4658%" height="15" fill="rgb(230,62,27)"/><text x="10.2101%" y="639.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (11 samples, 0.24%)</title><rect x="10.1819%" y="613" width="0.2440%" height="15" fill="rgb(216,154,8)"/><text x="10.4319%" y="623.50"></text></g><g><title>core::num::dec2flt::parse::eat_digits (8 samples, 0.18%)</title><rect x="11.2910%" y="613" width="0.1775%" height="15" fill="rgb(244,35,45)"/><text x="11.5410%" y="623.50"></text></g><g><title>alloc::slice::merge_sort (71 samples, 1.57%)</title><rect x="9.9601%" y="677" width="1.5750%" height="15" fill="rgb(251,115,12)"/><text x="10.2101%" y="687.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (50 samples, 1.11%)</title><rect x="10.4259%" y="661" width="1.1091%" height="15" fill="rgb(240,54,50)"/><text x="10.6759%" y="671.50"></text></g><g><title>core::num::dec2flt::dec2flt (50 samples, 1.11%)</title><rect x="10.4259%" y="645" width="1.1091%" height="15" fill="rgb(233,84,52)"/><text x="10.6759%" y="655.50"></text></g><g><title>core::num::dec2flt::parse::parse_decimal (11 samples, 0.24%)</title><rect x="11.2910%" y="629" width="0.2440%" height="15" fill="rgb(207,117,47)"/><text x="11.5410%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.16%)</title><rect x="11.5794%" y="661" width="0.1553%" height="15" fill="rgb(249,43,39)"/><text x="11.8294%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="11.6238%" y="645" width="0.1109%" height="15" fill="rgb(209,38,44)"/><text x="11.8738%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="11.6238%" y="629" width="0.1109%" height="15" fill="rgb(236,212,23)"/><text x="11.8738%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.11%)</title><rect x="11.6238%" y="613" width="0.1109%" height="15" fill="rgb(242,79,21)"/><text x="11.8738%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.11%)</title><rect x="11.6238%" y="597" width="0.1109%" height="15" fill="rgb(211,96,35)"/><text x="11.8738%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="11.6238%" y="581" width="0.1109%" height="15" fill="rgb(253,215,40)"/><text x="11.8738%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="11.6238%" y="565" width="0.1109%" height="15" fill="rgb(211,81,21)"/><text x="11.8738%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.11%)</title><rect x="11.6238%" y="549" width="0.1109%" height="15" fill="rgb(208,190,38)"/><text x="11.8738%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.11%)</title><rect x="11.6238%" y="533" width="0.1109%" height="15" fill="rgb(235,213,38)"/><text x="11.8738%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.11%)</title><rect x="11.6238%" y="517" width="0.1109%" height="15" fill="rgb(237,122,38)"/><text x="11.8738%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.11%)</title><rect x="11.6238%" y="501" width="0.1109%" height="15" fill="rgb(244,218,35)"/><text x="11.8738%" y="511.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.11%)</title><rect x="11.6238%" y="485" width="0.1109%" height="15" fill="rgb(240,68,47)"/><text x="11.8738%" y="495.50"></text></g><g><title>decor_mem::select::expr_to_col (5 samples, 0.11%)</title><rect x="11.7347%" y="661" width="0.1109%" height="15" fill="rgb(210,16,53)"/><text x="11.9847%" y="671.50"></text></g><g><title>_int_free (5 samples, 0.11%)</title><rect x="12.0896%" y="645" width="0.1109%" height="15" fill="rgb(235,124,12)"/><text x="12.3396%" y="655.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (15 samples, 0.33%)</title><rect x="12.2227%" y="645" width="0.3327%" height="15" fill="rgb(224,169,11)"/><text x="12.4727%" y="655.50"></text></g><g><title>core::num::dec2flt::dec2flt (13 samples, 0.29%)</title><rect x="12.2671%" y="629" width="0.2884%" height="15" fill="rgb(250,166,2)"/><text x="12.5171%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.16%)</title><rect x="12.5776%" y="597" width="0.1553%" height="15" fill="rgb(242,216,29)"/><text x="12.8276%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.16%)</title><rect x="12.5776%" y="581" width="0.1553%" height="15" fill="rgb(230,116,27)"/><text x="12.8276%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.13%)</title><rect x="12.5998%" y="565" width="0.1331%" height="15" fill="rgb(228,99,48)"/><text x="12.8498%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.11%)</title><rect x="12.6220%" y="549" width="0.1109%" height="15" fill="rgb(253,11,6)"/><text x="12.8720%" y="559.50"></text></g><g><title>decor_mem::select::expr_to_col (9 samples, 0.20%)</title><rect x="12.5555%" y="645" width="0.1996%" height="15" fill="rgb(247,143,39)"/><text x="12.8055%" y="655.50"></text></g><g><title>core::fmt::write (8 samples, 0.18%)</title><rect x="12.5776%" y="629" width="0.1775%" height="15" fill="rgb(236,97,10)"/><text x="12.8276%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.18%)</title><rect x="12.5776%" y="613" width="0.1775%" height="15" fill="rgb(233,208,19)"/><text x="12.8276%" y="623.50"></text></g><g><title>decor_mem::select::expr_to_col (6 samples, 0.13%)</title><rect x="12.7995%" y="629" width="0.1331%" height="15" fill="rgb(216,164,2)"/><text x="13.0495%" y="639.50"></text></g><g><title>core::fmt::write (5 samples, 0.11%)</title><rect x="12.8217%" y="613" width="0.1109%" height="15" fill="rgb(220,129,5)"/><text x="13.0717%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.20%)</title><rect x="12.9547%" y="581" width="0.1996%" height="15" fill="rgb(242,17,10)"/><text x="13.2047%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.20%)</title><rect x="12.9547%" y="565" width="0.1996%" height="15" fill="rgb(242,107,0)"/><text x="13.2047%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.16%)</title><rect x="12.9991%" y="549" width="0.1553%" height="15" fill="rgb(251,28,31)"/><text x="13.2491%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.11%)</title><rect x="13.0435%" y="533" width="0.1109%" height="15" fill="rgb(233,223,10)"/><text x="13.2935%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.11%)</title><rect x="13.0435%" y="517" width="0.1109%" height="15" fill="rgb(215,21,27)"/><text x="13.2935%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.11%)</title><rect x="13.0435%" y="501" width="0.1109%" height="15" fill="rgb(232,23,21)"/><text x="13.2935%" y="511.50"></text></g><g><title>core::fmt::write (10 samples, 0.22%)</title><rect x="12.9547%" y="613" width="0.2218%" height="15" fill="rgb(244,5,23)"/><text x="13.2047%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (10 samples, 0.22%)</title><rect x="12.9547%" y="597" width="0.2218%" height="15" fill="rgb(226,81,46)"/><text x="13.2047%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.20%)</title><rect x="13.2431%" y="501" width="0.1996%" height="15" fill="rgb(247,70,30)"/><text x="13.4931%" y="511.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.18%)</title><rect x="13.2653%" y="485" width="0.1775%" height="15" fill="rgb(212,68,19)"/><text x="13.5153%" y="495.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.16%)</title><rect x="13.2875%" y="469" width="0.1553%" height="15" fill="rgb(240,187,13)"/><text x="13.5375%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.16%)</title><rect x="13.2875%" y="453" width="0.1553%" height="15" fill="rgb(223,113,26)"/><text x="13.5375%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.22%)</title><rect x="13.2431%" y="533" width="0.2218%" height="15" fill="rgb(206,192,2)"/><text x="13.4931%" y="543.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 0.22%)</title><rect x="13.2431%" y="517" width="0.2218%" height="15" fill="rgb(241,108,4)"/><text x="13.4931%" y="527.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (25 samples, 0.55%)</title><rect x="12.9326%" y="629" width="0.5546%" height="15" fill="rgb(247,173,49)"/><text x="13.1826%" y="639.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (14 samples, 0.31%)</title><rect x="13.1766%" y="613" width="0.3106%" height="15" fill="rgb(224,114,35)"/><text x="13.4266%" y="623.50"></text></g><g><title>alloc::fmt::format (14 samples, 0.31%)</title><rect x="13.1766%" y="597" width="0.3106%" height="15" fill="rgb(245,159,27)"/><text x="13.4266%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.31%)</title><rect x="13.1766%" y="581" width="0.3106%" height="15" fill="rgb(245,172,44)"/><text x="13.4266%" y="591.50"></text></g><g><title>core::fmt::write (14 samples, 0.31%)</title><rect x="13.1766%" y="565" width="0.3106%" height="15" fill="rgb(236,23,11)"/><text x="13.4266%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (14 samples, 0.31%)</title><rect x="13.1766%" y="549" width="0.3106%" height="15" fill="rgb(205,117,38)"/><text x="13.4266%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.16%)</title><rect x="13.6424%" y="581" width="0.1553%" height="15" fill="rgb(237,72,25)"/><text x="13.8924%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.16%)</title><rect x="13.6424%" y="565" width="0.1553%" height="15" fill="rgb(244,70,9)"/><text x="13.8924%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.16%)</title><rect x="13.6424%" y="549" width="0.1553%" height="15" fill="rgb(217,125,39)"/><text x="13.8924%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.18%)</title><rect x="13.6424%" y="597" width="0.1775%" height="15" fill="rgb(235,36,10)"/><text x="13.8924%" y="607.50"></text></g><g><title>core::fmt::write (15 samples, 0.33%)</title><rect x="13.6424%" y="613" width="0.3327%" height="15" fill="rgb(251,123,47)"/><text x="13.8924%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (7 samples, 0.16%)</title><rect x="13.8199%" y="597" width="0.1553%" height="15" fill="rgb(221,13,13)"/><text x="14.0699%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.16%)</title><rect x="13.8199%" y="581" width="0.1553%" height="15" fill="rgb(238,131,9)"/><text x="14.0699%" y="591.50"></text></g><g><title>decor_mem::views::View::get_ris_of_col (25 samples, 0.55%)</title><rect x="13.4871%" y="629" width="0.5546%" height="15" fill="rgb(211,50,8)"/><text x="13.7371%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.38%)</title><rect x="14.6850%" y="581" width="0.3771%" height="15" fill="rgb(245,182,24)"/><text x="14.9350%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.20%)</title><rect x="14.8625%" y="565" width="0.1996%" height="15" fill="rgb(242,14,37)"/><text x="15.1125%" y="575.50"></text></g><g><title>decor_mem::select::get_ris_matching_constraint (107 samples, 2.37%)</title><rect x="12.7551%" y="645" width="2.3736%" height="15" fill="rgb(246,228,12)"/><text x="13.0051%" y="655.50">de..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (49 samples, 1.09%)</title><rect x="14.0417%" y="629" width="1.0870%" height="15" fill="rgb(213,55,15)"/><text x="14.2917%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (34 samples, 0.75%)</title><rect x="14.3744%" y="613" width="0.7542%" height="15" fill="rgb(209,9,3)"/><text x="14.6244%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (32 samples, 0.71%)</title><rect x="14.4188%" y="597" width="0.7098%" height="15" fill="rgb(230,59,30)"/><text x="14.6688%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="15.1952%" y="629" width="0.1109%" height="15" fill="rgb(209,121,21)"/><text x="15.4452%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="15.1952%" y="613" width="0.1109%" height="15" fill="rgb(220,109,13)"/><text x="15.4452%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.11%)</title><rect x="15.1952%" y="597" width="0.1109%" height="15" fill="rgb(232,18,1)"/><text x="15.4452%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.11%)</title><rect x="15.1952%" y="581" width="0.1109%" height="15" fill="rgb(215,41,42)"/><text x="15.4452%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="15.1952%" y="565" width="0.1109%" height="15" fill="rgb(224,123,36)"/><text x="15.4452%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="15.1952%" y="549" width="0.1109%" height="15" fill="rgb(240,125,3)"/><text x="15.4452%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.11%)</title><rect x="15.1952%" y="533" width="0.1109%" height="15" fill="rgb(205,98,50)"/><text x="15.4452%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.11%)</title><rect x="15.1952%" y="517" width="0.1109%" height="15" fill="rgb(205,185,37)"/><text x="15.4452%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.11%)</title><rect x="15.1952%" y="501" width="0.1109%" height="15" fill="rgb(238,207,15)"/><text x="15.4452%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.11%)</title><rect x="15.1952%" y="485" width="0.1109%" height="15" fill="rgb(213,199,42)"/><text x="15.4452%" y="495.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.11%)</title><rect x="15.1952%" y="469" width="0.1109%" height="15" fill="rgb(235,201,11)"/><text x="15.4452%" y="479.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.11%)</title><rect x="15.1952%" y="453" width="0.1109%" height="15" fill="rgb(207,46,11)"/><text x="15.4452%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (5 samples, 0.11%)</title><rect x="15.5280%" y="581" width="0.1109%" height="15" fill="rgb(241,35,35)"/><text x="15.7780%" y="591.50"></text></g><g><title>core::fmt::write (8 samples, 0.18%)</title><rect x="15.5280%" y="613" width="0.1775%" height="15" fill="rgb(243,32,47)"/><text x="15.7780%" y="623.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (8 samples, 0.18%)</title><rect x="15.5280%" y="597" width="0.1775%" height="15" fill="rgb(247,202,23)"/><text x="15.7780%" y="607.50"></text></g><g><title>decor_mem::helpers::minus_parser_vals (30 samples, 0.67%)</title><rect x="15.3949%" y="629" width="0.6655%" height="15" fill="rgb(219,102,11)"/><text x="15.6449%" y="639.50"></text></g><g><title>core::num::dec2flt::dec2flt (16 samples, 0.35%)</title><rect x="15.7054%" y="613" width="0.3549%" height="15" fill="rgb(243,110,44)"/><text x="15.9554%" y="623.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.22%)</title><rect x="16.3043%" y="437" width="0.2218%" height="15" fill="rgb(222,74,54)"/><text x="16.5543%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.38%)</title><rect x="16.2156%" y="613" width="0.3771%" height="15" fill="rgb(216,99,12)"/><text x="16.4656%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.35%)</title><rect x="16.2378%" y="597" width="0.3549%" height="15" fill="rgb(226,22,26)"/><text x="16.4878%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.33%)</title><rect x="16.2600%" y="581" width="0.3327%" height="15" fill="rgb(217,163,10)"/><text x="16.5100%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.33%)</title><rect x="16.2600%" y="565" width="0.3327%" height="15" fill="rgb(213,25,53)"/><text x="16.5100%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.29%)</title><rect x="16.3043%" y="549" width="0.2884%" height="15" fill="rgb(252,105,26)"/><text x="16.5543%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.29%)</title><rect x="16.3043%" y="533" width="0.2884%" height="15" fill="rgb(220,39,43)"/><text x="16.5543%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.29%)</title><rect x="16.3043%" y="517" width="0.2884%" height="15" fill="rgb(229,68,48)"/><text x="16.5543%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.29%)</title><rect x="16.3043%" y="501" width="0.2884%" height="15" fill="rgb(252,8,32)"/><text x="16.5543%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (13 samples, 0.29%)</title><rect x="16.3043%" y="485" width="0.2884%" height="15" fill="rgb(223,20,43)"/><text x="16.5543%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.29%)</title><rect x="16.3043%" y="469" width="0.2884%" height="15" fill="rgb(229,81,49)"/><text x="16.5543%" y="479.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.29%)</title><rect x="16.3043%" y="453" width="0.2884%" height="15" fill="rgb(236,28,36)"/><text x="16.5543%" y="463.50"></text></g><g><title>decor_mem::select::get_value_for_row::{{closure}} (68 samples, 1.51%)</title><rect x="15.1287%" y="645" width="1.5084%" height="15" fill="rgb(249,185,26)"/><text x="15.3787%" y="655.50"></text></g><g><title>decor_mem::select::get_value_for_row::{{closure}} (26 samples, 0.58%)</title><rect x="16.0603%" y="629" width="0.5768%" height="15" fill="rgb(249,174,33)"/><text x="16.3103%" y="639.50"></text></g><g><title>core::fmt::write (5 samples, 0.11%)</title><rect x="16.6815%" y="613" width="0.1109%" height="15" fill="rgb(233,201,37)"/><text x="16.9315%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.11%)</title><rect x="16.6815%" y="597" width="0.1109%" height="15" fill="rgb(221,78,26)"/><text x="16.9315%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.11%)</title><rect x="16.6815%" y="581" width="0.1109%" height="15" fill="rgb(250,127,30)"/><text x="16.9315%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.11%)</title><rect x="16.6815%" y="565" width="0.1109%" height="15" fill="rgb(230,49,44)"/><text x="16.9315%" y="575.50"></text></g><g><title>decor_mem::select::get_value_for_row (13 samples, 0.29%)</title><rect x="16.6371%" y="645" width="0.2884%" height="15" fill="rgb(229,67,23)"/><text x="16.8871%" y="655.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (12 samples, 0.27%)</title><rect x="16.6593%" y="629" width="0.2662%" height="15" fill="rgb(249,83,47)"/><text x="16.9093%" y="639.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (6 samples, 0.13%)</title><rect x="16.7924%" y="613" width="0.1331%" height="15" fill="rgb(215,43,3)"/><text x="17.0424%" y="623.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.11%)</title><rect x="16.8146%" y="597" width="0.1109%" height="15" fill="rgb(238,154,13)"/><text x="17.0646%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.11%)</title><rect x="16.8146%" y="581" width="0.1109%" height="15" fill="rgb(219,56,2)"/><text x="17.0646%" y="591.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (11 samples, 0.24%)</title><rect x="16.9255%" y="645" width="0.2440%" height="15" fill="rgb(233,0,4)"/><text x="17.1755%" y="655.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (7 samples, 0.16%)</title><rect x="17.0142%" y="629" width="0.1553%" height="15" fill="rgb(235,30,7)"/><text x="17.2642%" y="639.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.13%)</title><rect x="17.0364%" y="613" width="0.1331%" height="15" fill="rgb(250,79,13)"/><text x="17.2864%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.13%)</title><rect x="17.0364%" y="597" width="0.1331%" height="15" fill="rgb(211,146,34)"/><text x="17.2864%" y="607.50"></text></g><g><title>core::fmt::write (6 samples, 0.13%)</title><rect x="17.0364%" y="581" width="0.1331%" height="15" fill="rgb(228,22,38)"/><text x="17.2864%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.11%)</title><rect x="17.0586%" y="565" width="0.1109%" height="15" fill="rgb(235,168,5)"/><text x="17.3086%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.11%)</title><rect x="17.0586%" y="549" width="0.1109%" height="15" fill="rgb(221,155,16)"/><text x="17.3086%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.11%)</title><rect x="17.0586%" y="533" width="0.1109%" height="15" fill="rgb(215,215,53)"/><text x="17.3086%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.11%)</title><rect x="17.0586%" y="517" width="0.1109%" height="15" fill="rgb(223,4,10)"/><text x="17.3086%" y="527.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (23 samples, 0.51%)</title><rect x="17.4357%" y="565" width="0.5102%" height="15" fill="rgb(234,103,6)"/><text x="17.6857%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (16 samples, 0.35%)</title><rect x="17.5909%" y="549" width="0.3549%" height="15" fill="rgb(227,97,0)"/><text x="17.8409%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (12 samples, 0.27%)</title><rect x="17.6797%" y="533" width="0.2662%" height="15" fill="rgb(234,150,53)"/><text x="17.9297%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (12 samples, 0.27%)</title><rect x="17.6797%" y="517" width="0.2662%" height="15" fill="rgb(228,201,54)"/><text x="17.9297%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (27 samples, 0.60%)</title><rect x="17.3691%" y="597" width="0.5989%" height="15" fill="rgb(222,22,37)"/><text x="17.6191%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (27 samples, 0.60%)</title><rect x="17.3691%" y="581" width="0.5989%" height="15" fill="rgb(237,53,32)"/><text x="17.6191%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (35 samples, 0.78%)</title><rect x="17.3026%" y="613" width="0.7764%" height="15" fill="rgb(233,25,53)"/><text x="17.5526%" y="623.50"></text></g><g><title>core::fmt::write (41 samples, 0.91%)</title><rect x="17.2804%" y="629" width="0.9095%" height="15" fill="rgb(210,40,34)"/><text x="17.5304%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.11%)</title><rect x="18.0790%" y="613" width="0.1109%" height="15" fill="rgb(241,220,44)"/><text x="18.3290%" y="623.50"></text></g><g><title>decor_mem::views::View::get_ris_of_col (52 samples, 1.15%)</title><rect x="17.1695%" y="645" width="1.1535%" height="15" fill="rgb(235,28,35)"/><text x="17.4195%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.13%)</title><rect x="18.1899%" y="629" width="0.1331%" height="15" fill="rgb(210,56,17)"/><text x="18.4399%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (7 samples, 0.16%)</title><rect x="18.3230%" y="645" width="0.1553%" height="15" fill="rgb(224,130,29)"/><text x="18.5730%" y="655.50"></text></g><g><title>decor_mem::select::get_ris_matching_constraint (351 samples, 7.79%)</title><rect x="11.8456%" y="661" width="7.7862%" height="15" fill="rgb(235,212,8)"/><text x="12.0956%" y="671.50">decor_mem::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (52 samples, 1.15%)</title><rect x="18.4783%" y="645" width="1.1535%" height="15" fill="rgb(223,33,50)"/><text x="18.7283%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (43 samples, 0.95%)</title><rect x="18.6779%" y="629" width="0.9539%" height="15" fill="rgb(219,149,13)"/><text x="18.9279%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (38 samples, 0.84%)</title><rect x="18.7888%" y="613" width="0.8429%" height="15" fill="rgb(250,156,29)"/><text x="19.0388%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.62%)</title><rect x="19.0106%" y="597" width="0.6211%" height="15" fill="rgb(216,193,19)"/><text x="19.2606%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.24%)</title><rect x="19.3878%" y="581" width="0.2440%" height="15" fill="rgb(216,135,14)"/><text x="19.6378%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.16%)</title><rect x="19.6539%" y="613" width="0.1553%" height="15" fill="rgb(241,47,5)"/><text x="19.9039%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.16%)</title><rect x="19.6539%" y="597" width="0.1553%" height="15" fill="rgb(233,42,35)"/><text x="19.9039%" y="607.50"></text></g><g><title>core::fmt::write (8 samples, 0.18%)</title><rect x="19.6539%" y="645" width="0.1775%" height="15" fill="rgb(231,13,6)"/><text x="19.9039%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.18%)</title><rect x="19.6539%" y="629" width="0.1775%" height="15" fill="rgb(207,181,40)"/><text x="19.9039%" y="639.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (15 samples, 0.33%)</title><rect x="19.6318%" y="661" width="0.3327%" height="15" fill="rgb(254,173,49)"/><text x="19.8818%" y="671.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (6 samples, 0.13%)</title><rect x="19.8314%" y="645" width="0.1331%" height="15" fill="rgb(221,1,38)"/><text x="20.0814%" y="655.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.13%)</title><rect x="19.8314%" y="629" width="0.1331%" height="15" fill="rgb(206,124,46)"/><text x="20.0814%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.13%)</title><rect x="19.8314%" y="613" width="0.1331%" height="15" fill="rgb(249,21,11)"/><text x="20.0814%" y="623.50"></text></g><g><title>core::fmt::write (6 samples, 0.13%)</title><rect x="19.8314%" y="597" width="0.1331%" height="15" fill="rgb(222,201,40)"/><text x="20.0814%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.13%)</title><rect x="19.8314%" y="581" width="0.1331%" height="15" fill="rgb(235,61,29)"/><text x="20.0814%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (32 samples, 0.71%)</title><rect x="20.4969%" y="581" width="0.7098%" height="15" fill="rgb(219,207,3)"/><text x="20.7469%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (20 samples, 0.44%)</title><rect x="20.7631%" y="565" width="0.4437%" height="15" fill="rgb(222,56,46)"/><text x="21.0131%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (17 samples, 0.38%)</title><rect x="20.8296%" y="549" width="0.3771%" height="15" fill="rgb(239,76,54)"/><text x="21.0796%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (17 samples, 0.38%)</title><rect x="20.8296%" y="533" width="0.3771%" height="15" fill="rgb(231,124,27)"/><text x="21.0796%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (40 samples, 0.89%)</title><rect x="20.3860%" y="613" width="0.8873%" height="15" fill="rgb(249,195,6)"/><text x="20.6360%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (40 samples, 0.89%)</title><rect x="20.3860%" y="597" width="0.8873%" height="15" fill="rgb(237,174,47)"/><text x="20.6360%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (51 samples, 1.13%)</title><rect x="20.2972%" y="629" width="1.1313%" height="15" fill="rgb(206,201,31)"/><text x="20.5472%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.16%)</title><rect x="21.2733%" y="613" width="0.1553%" height="15" fill="rgb(231,57,52)"/><text x="21.5233%" y="623.50"></text></g><g><title>core::fmt::write (61 samples, 1.35%)</title><rect x="20.2751%" y="645" width="1.3531%" height="15" fill="rgb(248,177,22)"/><text x="20.5251%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.20%)</title><rect x="21.4286%" y="629" width="0.1996%" height="15" fill="rgb(215,211,37)"/><text x="21.6786%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.16%)</title><rect x="21.4729%" y="613" width="0.1553%" height="15" fill="rgb(241,128,51)"/><text x="21.7229%" y="623.50"></text></g><g><title>decor_mem::views::View::get_ris_of_col (82 samples, 1.82%)</title><rect x="19.9645%" y="661" width="1.8190%" height="15" fill="rgb(227,165,31)"/><text x="20.2145%" y="671.50">d..</text></g><g><title>hashbrown::map::make_hash (7 samples, 0.16%)</title><rect x="21.6282%" y="645" width="0.1553%" height="15" fill="rgb(228,167,24)"/><text x="21.8782%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.13%)</title><rect x="22.0497%" y="613" width="0.1331%" height="15" fill="rgb(228,143,12)"/><text x="22.2997%" y="623.50"></text></g><g><title>decor_mem::select::get_ris_matching_constraint (480 samples, 10.65%)</title><rect x="11.5794%" y="677" width="10.6477%" height="15" fill="rgb(249,149,8)"/><text x="11.8294%" y="687.50">decor_mem::selec..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.44%)</title><rect x="21.7835%" y="661" width="0.4437%" height="15" fill="rgb(243,35,44)"/><text x="22.0335%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (20 samples, 0.44%)</title><rect x="21.7835%" y="645" width="0.4437%" height="15" fill="rgb(246,89,9)"/><text x="22.0335%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (17 samples, 0.38%)</title><rect x="21.8500%" y="629" width="0.3771%" height="15" fill="rgb(233,213,13)"/><text x="22.1000%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.22%)</title><rect x="22.3381%" y="549" width="0.2218%" height="15" fill="rgb(233,141,41)"/><text x="22.5881%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.16%)</title><rect x="22.4046%" y="533" width="0.1553%" height="15" fill="rgb(239,167,4)"/><text x="22.6546%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 0.35%)</title><rect x="22.2715%" y="581" width="0.3549%" height="15" fill="rgb(209,217,16)"/><text x="22.5215%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (16 samples, 0.35%)</title><rect x="22.2715%" y="565" width="0.3549%" height="15" fill="rgb(219,88,35)"/><text x="22.5215%" y="575.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (17 samples, 0.38%)</title><rect x="22.2715%" y="677" width="0.3771%" height="15" fill="rgb(220,193,23)"/><text x="22.5215%" y="687.50"></text></g><g><title>decor_mem::views::TableColumnDef::name (17 samples, 0.38%)</title><rect x="22.2715%" y="661" width="0.3771%" height="15" fill="rgb(230,90,52)"/><text x="22.5215%" y="671.50"></text></g><g><title>alloc::fmt::format (17 samples, 0.38%)</title><rect x="22.2715%" y="645" width="0.3771%" height="15" fill="rgb(252,106,19)"/><text x="22.5215%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (17 samples, 0.38%)</title><rect x="22.2715%" y="629" width="0.3771%" height="15" fill="rgb(206,74,20)"/><text x="22.5215%" y="639.50"></text></g><g><title>core::fmt::write (17 samples, 0.38%)</title><rect x="22.2715%" y="613" width="0.3771%" height="15" fill="rgb(230,138,44)"/><text x="22.5215%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (17 samples, 0.38%)</title><rect x="22.2715%" y="597" width="0.3771%" height="15" fill="rgb(235,182,43)"/><text x="22.5215%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.11%)</title><rect x="22.6486%" y="629" width="0.1109%" height="15" fill="rgb(242,16,51)"/><text x="22.8986%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.11%)</title><rect x="22.6486%" y="613" width="0.1109%" height="15" fill="rgb(248,9,4)"/><text x="22.8986%" y="623.50"></text></g><g><title>decor_mem::select::tablefactor_to_view (9 samples, 0.20%)</title><rect x="22.6486%" y="677" width="0.1996%" height="15" fill="rgb(210,31,22)"/><text x="22.8986%" y="687.50"></text></g><g><title>core::fmt::write (9 samples, 0.20%)</title><rect x="22.6486%" y="661" width="0.1996%" height="15" fill="rgb(239,54,39)"/><text x="22.8986%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (9 samples, 0.20%)</title><rect x="22.6486%" y="645" width="0.1996%" height="15" fill="rgb(230,99,41)"/><text x="22.8986%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.20%)</title><rect x="22.8483%" y="661" width="0.1996%" height="15" fill="rgb(253,106,12)"/><text x="23.0983%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.22%)</title><rect x="24.1127%" y="549" width="0.2218%" height="15" fill="rgb(213,46,41)"/><text x="24.3627%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.22%)</title><rect x="24.1127%" y="533" width="0.2218%" height="15" fill="rgb(215,133,35)"/><text x="24.3627%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (10 samples, 0.22%)</title><rect x="24.1127%" y="517" width="0.2218%" height="15" fill="rgb(213,28,5)"/><text x="24.3627%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.22%)</title><rect x="24.1127%" y="501" width="0.2218%" height="15" fill="rgb(215,77,49)"/><text x="24.3627%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.16%)</title><rect x="24.1792%" y="485" width="0.1553%" height="15" fill="rgb(248,100,22)"/><text x="24.4292%" y="495.50"></text></g><g><title>__GI___libc_malloc (102 samples, 2.26%)</title><rect x="24.3345%" y="437" width="2.2626%" height="15" fill="rgb(208,67,9)"/><text x="24.5845%" y="447.50">_..</text></g><g><title>_int_malloc (65 samples, 1.44%)</title><rect x="25.1553%" y="421" width="1.4419%" height="15" fill="rgb(219,133,21)"/><text x="25.4053%" y="431.50"></text></g><g><title>__rdl_alloc (5 samples, 0.11%)</title><rect x="26.5972%" y="437" width="0.1109%" height="15" fill="rgb(246,46,29)"/><text x="26.8472%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.11%)</title><rect x="26.5972%" y="421" width="0.1109%" height="15" fill="rgb(246,185,52)"/><text x="26.8472%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (127 samples, 2.82%)</title><rect x="23.9352%" y="613" width="2.8172%" height="15" fill="rgb(252,136,11)"/><text x="24.1852%" y="623.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (123 samples, 2.73%)</title><rect x="24.0240%" y="597" width="2.7285%" height="15" fill="rgb(219,138,53)"/><text x="24.2740%" y="607.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (122 samples, 2.71%)</title><rect x="24.0461%" y="581" width="2.7063%" height="15" fill="rgb(211,51,23)"/><text x="24.2961%" y="591.50">al..</text></g><g><title>alloc::slice::hack::to_vec (119 samples, 2.64%)</title><rect x="24.1127%" y="565" width="2.6398%" height="15" fill="rgb(247,221,28)"/><text x="24.3627%" y="575.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (109 samples, 2.42%)</title><rect x="24.3345%" y="549" width="2.4179%" height="15" fill="rgb(251,222,45)"/><text x="24.5845%" y="559.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (109 samples, 2.42%)</title><rect x="24.3345%" y="533" width="2.4179%" height="15" fill="rgb(217,162,53)"/><text x="24.5845%" y="543.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (109 samples, 2.42%)</title><rect x="24.3345%" y="517" width="2.4179%" height="15" fill="rgb(229,93,14)"/><text x="24.5845%" y="527.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (109 samples, 2.42%)</title><rect x="24.3345%" y="501" width="2.4179%" height="15" fill="rgb(209,67,49)"/><text x="24.5845%" y="511.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (109 samples, 2.42%)</title><rect x="24.3345%" y="485" width="2.4179%" height="15" fill="rgb(213,87,29)"/><text x="24.5845%" y="495.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (109 samples, 2.42%)</title><rect x="24.3345%" y="469" width="2.4179%" height="15" fill="rgb(205,151,52)"/><text x="24.5845%" y="479.50">al..</text></g><g><title>alloc::alloc::alloc (109 samples, 2.42%)</title><rect x="24.3345%" y="453" width="2.4179%" height="15" fill="rgb(253,215,39)"/><text x="24.5845%" y="463.50">al..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.68%)</title><rect x="23.0923%" y="629" width="3.6823%" height="15" fill="rgb(221,220,41)"/><text x="23.3423%" y="639.50">&lt;cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (183 samples, 4.06%)</title><rect x="23.0701%" y="645" width="4.0594%" height="15" fill="rgb(218,133,21)"/><text x="23.3201%" y="655.50">&lt;all..</text></g><g><title>__GI___libc_malloc (16 samples, 0.35%)</title><rect x="26.7746%" y="629" width="0.3549%" height="15" fill="rgb(221,193,43)"/><text x="27.0246%" y="639.50"></text></g><g><title>_int_malloc (9 samples, 0.20%)</title><rect x="26.9299%" y="613" width="0.1996%" height="15" fill="rgb(240,128,52)"/><text x="27.1799%" y="623.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.58%)</title><rect x="27.6176%" y="453" width="0.5768%" height="15" fill="rgb(253,114,12)"/><text x="27.8676%" y="463.50"></text></g><g><title>_int_malloc (19 samples, 0.42%)</title><rect x="27.7728%" y="437" width="0.4215%" height="15" fill="rgb(215,223,47)"/><text x="28.0228%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (36 samples, 0.80%)</title><rect x="27.4845%" y="629" width="0.7986%" height="15" fill="rgb(248,225,23)"/><text x="27.7345%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.80%)</title><rect x="27.4845%" y="613" width="0.7986%" height="15" fill="rgb(250,108,0)"/><text x="27.7345%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (33 samples, 0.73%)</title><rect x="27.5510%" y="597" width="0.7320%" height="15" fill="rgb(228,208,7)"/><text x="27.8010%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.71%)</title><rect x="27.5732%" y="581" width="0.7098%" height="15" fill="rgb(244,45,10)"/><text x="27.8232%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30 samples, 0.67%)</title><rect x="27.6176%" y="565" width="0.6655%" height="15" fill="rgb(207,125,25)"/><text x="27.8676%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (30 samples, 0.67%)</title><rect x="27.6176%" y="549" width="0.6655%" height="15" fill="rgb(210,195,18)"/><text x="27.8676%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.67%)</title><rect x="27.6176%" y="533" width="0.6655%" height="15" fill="rgb(249,80,12)"/><text x="27.8676%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.67%)</title><rect x="27.6176%" y="517" width="0.6655%" height="15" fill="rgb(221,65,9)"/><text x="27.8676%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (30 samples, 0.67%)</title><rect x="27.6176%" y="501" width="0.6655%" height="15" fill="rgb(235,49,36)"/><text x="27.8676%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.67%)</title><rect x="27.6176%" y="485" width="0.6655%" height="15" fill="rgb(225,32,20)"/><text x="27.8676%" y="495.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.67%)</title><rect x="27.6176%" y="469" width="0.6655%" height="15" fill="rgb(215,141,46)"/><text x="27.8676%" y="479.50"></text></g><g><title>__GI___mprotect (6 samples, 0.13%)</title><rect x="29.0151%" y="565" width="0.1331%" height="15" fill="rgb(250,160,47)"/><text x="29.2651%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.13%)</title><rect x="29.0151%" y="549" width="0.1331%" height="15" fill="rgb(216,222,40)"/><text x="29.2651%" y="559.50"></text></g><g><title>sysmalloc (8 samples, 0.18%)</title><rect x="29.0151%" y="581" width="0.1775%" height="15" fill="rgb(234,217,39)"/><text x="29.2651%" y="591.50"></text></g><g><title>__GI___libc_malloc (36 samples, 0.80%)</title><rect x="28.4161%" y="613" width="0.7986%" height="15" fill="rgb(207,178,40)"/><text x="28.6661%" y="623.50"></text></g><g><title>_int_malloc (28 samples, 0.62%)</title><rect x="28.5936%" y="597" width="0.6211%" height="15" fill="rgb(221,136,13)"/><text x="28.8436%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.13%)</title><rect x="29.2147%" y="613" width="0.1331%" height="15" fill="rgb(249,199,10)"/><text x="29.4647%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 1.11%)</title><rect x="28.2831%" y="629" width="1.1091%" height="15" fill="rgb(249,222,13)"/><text x="28.5331%" y="639.50"></text></g><g><title>alloc_pages_vma (6 samples, 0.13%)</title><rect x="29.5031%" y="565" width="0.1331%" height="15" fill="rgb(244,185,38)"/><text x="29.7531%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (6 samples, 0.13%)</title><rect x="29.5031%" y="549" width="0.1331%" height="15" fill="rgb(236,202,9)"/><text x="29.7531%" y="559.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.13%)</title><rect x="29.5031%" y="533" width="0.1331%" height="15" fill="rgb(250,229,37)"/><text x="29.7531%" y="543.50"></text></g><g><title>prep_new_page (5 samples, 0.11%)</title><rect x="29.5253%" y="517" width="0.1109%" height="15" fill="rgb(206,174,23)"/><text x="29.7753%" y="527.50"></text></g><g><title>kernel_init_free_pages (5 samples, 0.11%)</title><rect x="29.5253%" y="501" width="0.1109%" height="15" fill="rgb(211,33,43)"/><text x="29.7753%" y="511.50"></text></g><g><title>clear_page_erms (5 samples, 0.11%)</title><rect x="29.5253%" y="485" width="0.1109%" height="15" fill="rgb(245,58,50)"/><text x="29.7753%" y="495.50"></text></g><g><title>__handle_mm_fault (11 samples, 0.24%)</title><rect x="29.4366%" y="581" width="0.2440%" height="15" fill="rgb(244,68,36)"/><text x="29.6866%" y="591.50"></text></g><g><title>page_fault (12 samples, 0.27%)</title><rect x="29.4366%" y="629" width="0.2662%" height="15" fill="rgb(232,229,15)"/><text x="29.6866%" y="639.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.27%)</title><rect x="29.4366%" y="613" width="0.2662%" height="15" fill="rgb(254,30,23)"/><text x="29.6866%" y="623.50"></text></g><g><title>handle_mm_fault (12 samples, 0.27%)</title><rect x="29.4366%" y="597" width="0.2662%" height="15" fill="rgb(235,160,14)"/><text x="29.6866%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (305 samples, 6.77%)</title><rect x="23.0479%" y="661" width="6.7657%" height="15" fill="rgb(212,155,44)"/><text x="23.2979%" y="671.50">&lt;hashbrow..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (121 samples, 2.68%)</title><rect x="27.1295%" y="645" width="2.6841%" height="15" fill="rgb(226,2,50)"/><text x="27.3795%" y="655.50">&lt;h..</text></g><g><title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.11%)</title><rect x="29.7028%" y="629" width="0.1109%" height="15" fill="rgb(234,177,6)"/><text x="29.9528%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.69%)</title><rect x="29.8137%" y="645" width="0.6877%" height="15" fill="rgb(217,24,9)"/><text x="30.0637%" y="655.50"></text></g><g><title>_int_free (22 samples, 0.49%)</title><rect x="30.0133%" y="629" width="0.4880%" height="15" fill="rgb(220,13,46)"/><text x="30.2633%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.98%)</title><rect x="29.8137%" y="661" width="0.9760%" height="15" fill="rgb(239,221,27)"/><text x="30.0637%" y="671.50"></text></g><g><title>_int_free (13 samples, 0.29%)</title><rect x="30.5013%" y="645" width="0.2884%" height="15" fill="rgb(222,198,25)"/><text x="30.7513%" y="655.50"></text></g><g><title>malloc_consolidate (13 samples, 0.29%)</title><rect x="30.5013%" y="629" width="0.2884%" height="15" fill="rgb(211,99,13)"/><text x="30.7513%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (6 samples, 0.13%)</title><rect x="30.6566%" y="613" width="0.1331%" height="15" fill="rgb(232,111,31)"/><text x="30.9066%" y="623.50"></text></g><g><title>__GI___libc_free (7 samples, 0.16%)</title><rect x="30.9228%" y="629" width="0.1553%" height="15" fill="rgb(245,82,37)"/><text x="31.1728%" y="639.50"></text></g><g><title>_int_free (27 samples, 0.60%)</title><rect x="31.1003%" y="629" width="0.5989%" height="15" fill="rgb(227,149,46)"/><text x="31.3503%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 1.11%)</title><rect x="30.8119%" y="645" width="1.1091%" height="15" fill="rgb(218,36,50)"/><text x="31.0619%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.22%)</title><rect x="31.6992%" y="629" width="0.2218%" height="15" fill="rgb(226,80,48)"/><text x="31.9492%" y="639.50"></text></g><g><title>_int_free (22 samples, 0.49%)</title><rect x="31.9210%" y="645" width="0.4880%" height="15" fill="rgb(238,224,15)"/><text x="32.1710%" y="655.50"></text></g><g><title>malloc_consolidate (22 samples, 0.49%)</title><rect x="31.9210%" y="629" width="0.4880%" height="15" fill="rgb(241,136,10)"/><text x="32.1710%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (5 samples, 0.11%)</title><rect x="32.2981%" y="613" width="0.1109%" height="15" fill="rgb(208,32,45)"/><text x="32.5481%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (73 samples, 1.62%)</title><rect x="30.8119%" y="661" width="1.6193%" height="15" fill="rgb(207,135,9)"/><text x="31.0619%" y="671.50"></text></g><g><title>decor_mem::select::get_join_on_col_indices (5 samples, 0.11%)</title><rect x="32.4312%" y="661" width="0.1109%" height="15" fill="rgb(206,86,44)"/><text x="32.6812%" y="671.50"></text></g><g><title>decor_mem::select::get_binop_indices (5 samples, 0.11%)</title><rect x="32.4312%" y="645" width="0.1109%" height="15" fill="rgb(245,177,15)"/><text x="32.6812%" y="655.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.20%)</title><rect x="32.7418%" y="645" width="0.1996%" height="15" fill="rgb(206,64,50)"/><text x="32.9918%" y="655.50"></text></g><g><title>alloc::string::String::push (7 samples, 0.16%)</title><rect x="33.3407%" y="565" width="0.1553%" height="15" fill="rgb(234,36,40)"/><text x="33.5907%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (40 samples, 0.89%)</title><rect x="33.1854%" y="581" width="0.8873%" height="15" fill="rgb(213,64,8)"/><text x="33.4354%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (25 samples, 0.55%)</title><rect x="33.5182%" y="565" width="0.5546%" height="15" fill="rgb(210,75,36)"/><text x="33.7682%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (16 samples, 0.35%)</title><rect x="33.7178%" y="549" width="0.3549%" height="15" fill="rgb(229,88,21)"/><text x="33.9678%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (16 samples, 0.35%)</title><rect x="33.7178%" y="533" width="0.3549%" height="15" fill="rgb(252,204,47)"/><text x="33.9678%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (5 samples, 0.11%)</title><rect x="33.9618%" y="517" width="0.1109%" height="15" fill="rgb(208,77,27)"/><text x="34.2118%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (50 samples, 1.11%)</title><rect x="33.1411%" y="613" width="1.1091%" height="15" fill="rgb(221,76,26)"/><text x="33.3911%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (50 samples, 1.11%)</title><rect x="33.1411%" y="597" width="1.1091%" height="15" fill="rgb(225,139,18)"/><text x="33.3911%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.18%)</title><rect x="34.0728%" y="581" width="0.1775%" height="15" fill="rgb(230,137,11)"/><text x="34.3228%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.18%)</title><rect x="34.0728%" y="565" width="0.1775%" height="15" fill="rgb(212,28,1)"/><text x="34.3228%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="34.1393%" y="549" width="0.1109%" height="15" fill="rgb(248,164,17)"/><text x="34.3893%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.11%)</title><rect x="34.4499%" y="581" width="0.1109%" height="15" fill="rgb(222,171,42)"/><text x="34.6999%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (67 samples, 1.49%)</title><rect x="33.0967%" y="629" width="1.4862%" height="15" fill="rgb(243,84,45)"/><text x="33.3467%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.33%)</title><rect x="34.2502%" y="613" width="0.3327%" height="15" fill="rgb(252,49,23)"/><text x="34.5002%" y="623.50"></text></g><g><title>core::fmt::write (9 samples, 0.20%)</title><rect x="34.3833%" y="597" width="0.1996%" height="15" fill="rgb(215,19,7)"/><text x="34.6333%" y="607.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.11%)</title><rect x="34.7604%" y="597" width="0.1109%" height="15" fill="rgb(238,81,41)"/><text x="35.0104%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (17 samples, 0.38%)</title><rect x="34.5830%" y="629" width="0.3771%" height="15" fill="rgb(210,199,37)"/><text x="34.8330%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 0.27%)</title><rect x="34.6939%" y="613" width="0.2662%" height="15" fill="rgb(244,192,49)"/><text x="34.9439%" y="623.50"></text></g><g><title>core::fmt::write (89 samples, 1.97%)</title><rect x="33.0080%" y="645" width="1.9743%" height="15" fill="rgb(226,211,11)"/><text x="33.2580%" y="655.50">c..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (1,161 samples, 25.75%)</title><rect x="9.4720%" y="741" width="25.7542%" height="15" fill="rgb(236,162,54)"/><text x="9.7220%" y="751.50">decor_mem::query_transformer::QueryTransf..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (1,161 samples, 25.75%)</title><rect x="9.4720%" y="725" width="25.7542%" height="15" fill="rgb(220,229,9)"/><text x="9.7220%" y="735.50">decor_mem::query_transformer::QueryTransf..</text></g><g><title>decor_mem::select::get_query_results (1,143 samples, 25.35%)</title><rect x="9.8713%" y="709" width="25.3549%" height="15" fill="rgb(250,87,22)"/><text x="10.1213%" y="719.50">decor_mem::select::get_query_results</text></g><g><title>decor_mem::select::get_setexpr_results (1,143 samples, 25.35%)</title><rect x="9.8713%" y="693" width="25.3549%" height="15" fill="rgb(239,43,17)"/><text x="10.1213%" y="703.50">decor_mem::select::get_setexpr_results</text></g><g><title>decor_mem::select::tablewithjoins_to_view (558 samples, 12.38%)</title><rect x="22.8483%" y="677" width="12.3780%" height="15" fill="rgb(231,177,25)"/><text x="23.0983%" y="687.50">decor_mem::select:..</text></g><g><title>decor_mem::views::View::get_rows_of_col (121 samples, 2.68%)</title><rect x="32.5421%" y="661" width="2.6841%" height="15" fill="rgb(219,179,1)"/><text x="32.7921%" y="671.50">de..</text></g><g><title>hashbrown::map::make_hash (11 samples, 0.24%)</title><rect x="34.9823%" y="645" width="0.2440%" height="15" fill="rgb(238,219,53)"/><text x="35.2323%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="35.0710%" y="629" width="0.1553%" height="15" fill="rgb(232,167,36)"/><text x="35.3210%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.20%)</title><rect x="35.2263%" y="677" width="0.1996%" height="15" fill="rgb(244,19,51)"/><text x="35.4763%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (17 samples, 0.38%)</title><rect x="35.4925%" y="645" width="0.3771%" height="15" fill="rgb(224,6,22)"/><text x="35.7425%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="35.6477%" y="629" width="0.2218%" height="15" fill="rgb(224,145,5)"/><text x="35.8977%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.20%)</title><rect x="35.6699%" y="613" width="0.1996%" height="15" fill="rgb(234,130,49)"/><text x="35.9199%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.20%)</title><rect x="35.6699%" y="597" width="0.1996%" height="15" fill="rgb(254,6,2)"/><text x="35.9199%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.20%)</title><rect x="35.6699%" y="581" width="0.1996%" height="15" fill="rgb(208,96,46)"/><text x="35.9199%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.16%)</title><rect x="35.7143%" y="565" width="0.1553%" height="15" fill="rgb(239,3,39)"/><text x="35.9643%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.16%)</title><rect x="35.7143%" y="549" width="0.1553%" height="15" fill="rgb(233,210,1)"/><text x="35.9643%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.16%)</title><rect x="35.7143%" y="533" width="0.1553%" height="15" fill="rgb(244,137,37)"/><text x="35.9643%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.16%)</title><rect x="35.7143%" y="517" width="0.1553%" height="15" fill="rgb(240,136,2)"/><text x="35.9643%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.16%)</title><rect x="35.7143%" y="501" width="0.1553%" height="15" fill="rgb(239,18,37)"/><text x="35.9643%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.16%)</title><rect x="35.7143%" y="485" width="0.1553%" height="15" fill="rgb(218,185,22)"/><text x="35.9643%" y="495.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.16%)</title><rect x="35.7143%" y="469" width="0.1553%" height="15" fill="rgb(225,218,4)"/><text x="35.9643%" y="479.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.16%)</title><rect x="35.7143%" y="453" width="0.1553%" height="15" fill="rgb(230,182,32)"/><text x="35.9643%" y="463.50"></text></g><g><title>_int_malloc (7 samples, 0.16%)</title><rect x="35.7143%" y="437" width="0.1553%" height="15" fill="rgb(242,56,43)"/><text x="35.9643%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.51%)</title><rect x="35.4259%" y="661" width="0.5102%" height="15" fill="rgb(233,99,24)"/><text x="35.6759%" y="671.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (42 samples, 0.93%)</title><rect x="35.2263%" y="741" width="0.9317%" height="15" fill="rgb(234,209,42)"/><text x="35.4763%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (42 samples, 0.93%)</title><rect x="35.2263%" y="725" width="0.9317%" height="15" fill="rgb(227,7,12)"/><text x="35.4763%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (42 samples, 0.93%)</title><rect x="35.2263%" y="709" width="0.9317%" height="15" fill="rgb(245,203,43)"/><text x="35.4763%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (42 samples, 0.93%)</title><rect x="35.2263%" y="693" width="0.9317%" height="15" fill="rgb(238,205,33)"/><text x="35.4763%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (33 samples, 0.73%)</title><rect x="35.4259%" y="677" width="0.7320%" height="15" fill="rgb(231,56,7)"/><text x="35.6759%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="35.9361%" y="661" width="0.2218%" height="15" fill="rgb(244,186,29)"/><text x="36.1861%" y="671.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1,210 samples, 26.84%)</title><rect x="9.4720%" y="757" width="26.8412%" height="15" fill="rgb(234,111,31)"/><text x="9.7220%" y="767.50">&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;..</text></g><g><title>decor_mem::stats::get_qtype (7 samples, 0.16%)</title><rect x="36.1579%" y="741" width="0.1553%" height="15" fill="rgb(241,149,10)"/><text x="36.4079%" y="751.50"></text></g><g><title>sql_parser::parser::parse_statements (7 samples, 0.16%)</title><rect x="36.1579%" y="725" width="0.1553%" height="15" fill="rgb(249,206,44)"/><text x="36.4079%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (7 samples, 0.16%)</title><rect x="36.1579%" y="709" width="0.1553%" height="15" fill="rgb(251,153,30)"/><text x="36.4079%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.16%)</title><rect x="36.3354%" y="757" width="0.1553%" height="15" fill="rgb(239,152,38)"/><text x="36.5854%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (8 samples, 0.18%)</title><rect x="36.7125%" y="757" width="0.1775%" height="15" fill="rgb(249,139,47)"/><text x="36.9625%" y="767.50"></text></g><g><title>__GI___libc_free (10 samples, 0.22%)</title><rect x="36.9787%" y="757" width="0.2218%" height="15" fill="rgb(244,64,35)"/><text x="37.2287%" y="767.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.24%)</title><rect x="37.2005%" y="757" width="0.2440%" height="15" fill="rgb(216,46,15)"/><text x="37.4505%" y="767.50"></text></g><g><title>_int_free (31 samples, 0.69%)</title><rect x="37.7329%" y="757" width="0.6877%" height="15" fill="rgb(250,74,19)"/><text x="37.9829%" y="767.50"></text></g><g><title>_int_malloc (8 samples, 0.18%)</title><rect x="38.4206%" y="757" width="0.1775%" height="15" fill="rgb(249,42,33)"/><text x="38.6706%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.22%)</title><rect x="38.7090%" y="757" width="0.2218%" height="15" fill="rgb(242,149,17)"/><text x="38.9590%" y="767.50"></text></g><g><title>alloc::string::String::push (12 samples, 0.27%)</title><rect x="38.9973%" y="757" width="0.2662%" height="15" fill="rgb(244,29,21)"/><text x="39.2473%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.11%)</title><rect x="39.2857%" y="757" width="0.1109%" height="15" fill="rgb(220,130,37)"/><text x="39.5357%" y="767.50"></text></g><g><title>core::fmt::write (6 samples, 0.13%)</title><rect x="39.5297%" y="757" width="0.1331%" height="15" fill="rgb(211,67,2)"/><text x="39.7797%" y="767.50"></text></g><g><title>core::num::dec2flt::dec2flt (5 samples, 0.11%)</title><rect x="39.6628%" y="757" width="0.1109%" height="15" fill="rgb(235,68,52)"/><text x="39.9128%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.22%)</title><rect x="39.8403%" y="757" width="0.2218%" height="15" fill="rgb(246,142,3)"/><text x="40.0903%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 0.35%)</title><rect x="40.1287%" y="693" width="0.3549%" height="15" fill="rgb(241,25,7)"/><text x="40.3787%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.33%)</title><rect x="40.1508%" y="677" width="0.3327%" height="15" fill="rgb(242,119,39)"/><text x="40.4008%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.24%)</title><rect x="40.2396%" y="661" width="0.2440%" height="15" fill="rgb(241,98,45)"/><text x="40.4896%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.18%)</title><rect x="40.3061%" y="645" width="0.1775%" height="15" fill="rgb(254,28,30)"/><text x="40.5561%" y="655.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (22 samples, 0.49%)</title><rect x="40.0621%" y="709" width="0.4880%" height="15" fill="rgb(241,142,54)"/><text x="40.3121%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.16%)</title><rect x="40.8829%" y="677" width="0.1553%" height="15" fill="rgb(222,85,15)"/><text x="41.1329%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.47%)</title><rect x="41.1713%" y="661" width="0.4658%" height="15" fill="rgb(210,85,47)"/><text x="41.4213%" y="671.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.44%)</title><rect x="41.1934%" y="645" width="0.4437%" height="15" fill="rgb(224,206,25)"/><text x="41.4434%" y="655.50"></text></g><g><title>_int_realloc (20 samples, 0.44%)</title><rect x="41.1934%" y="629" width="0.4437%" height="15" fill="rgb(243,201,19)"/><text x="41.4434%" y="639.50"></text></g><g><title>_int_malloc (15 samples, 0.33%)</title><rect x="41.3043%" y="613" width="0.3327%" height="15" fill="rgb(236,59,4)"/><text x="41.5543%" y="623.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (26 samples, 0.58%)</title><rect x="41.6371%" y="661" width="0.5768%" height="15" fill="rgb(254,179,45)"/><text x="41.8871%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.13%)</title><rect x="42.4357%" y="645" width="0.1331%" height="15" fill="rgb(226,14,10)"/><text x="42.6857%" y="655.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.11%)</title><rect x="42.4579%" y="629" width="0.1109%" height="15" fill="rgb(244,27,41)"/><text x="42.7079%" y="639.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (115 samples, 2.55%)</title><rect x="40.0621%" y="757" width="2.5510%" height="15" fill="rgb(235,35,32)"/><text x="40.3121%" y="767.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (115 samples, 2.55%)</title><rect x="40.0621%" y="741" width="2.5510%" height="15" fill="rgb(218,68,31)"/><text x="40.3121%" y="751.50">ms..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (115 samples, 2.55%)</title><rect x="40.0621%" y="725" width="2.5510%" height="15" fill="rgb(207,120,37)"/><text x="40.3121%" y="735.50">&lt;d..</text></g><g><title>decor_mem::stats::get_qtype (93 samples, 2.06%)</title><rect x="40.5501%" y="709" width="2.0630%" height="15" fill="rgb(227,98,0)"/><text x="40.8001%" y="719.50">d..</text></g><g><title>sql_parser::parser::parse_statements (93 samples, 2.06%)</title><rect x="40.5501%" y="693" width="2.0630%" height="15" fill="rgb(207,7,3)"/><text x="40.8001%" y="703.50">s..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (71 samples, 1.57%)</title><rect x="41.0382%" y="677" width="1.5750%" height="15" fill="rgb(206,98,19)"/><text x="41.2882%" y="687.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (18 samples, 0.40%)</title><rect x="42.2138%" y="661" width="0.3993%" height="15" fill="rgb(217,5,26)"/><text x="42.4638%" y="671.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (8 samples, 0.18%)</title><rect x="42.6575%" y="757" width="0.1775%" height="15" fill="rgb(235,190,38)"/><text x="42.9075%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (8 samples, 0.18%)</title><rect x="42.6575%" y="741" width="0.1775%" height="15" fill="rgb(247,86,24)"/><text x="42.9075%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (8 samples, 0.18%)</title><rect x="42.6575%" y="725" width="0.1775%" height="15" fill="rgb(205,101,16)"/><text x="42.9075%" y="735.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.18%)</title><rect x="43.1899%" y="453" width="0.1775%" height="15" fill="rgb(246,168,33)"/><text x="43.4399%" y="463.50"></text></g><g><title>ip_output (8 samples, 0.18%)</title><rect x="43.1899%" y="437" width="0.1775%" height="15" fill="rgb(231,114,1)"/><text x="43.4399%" y="447.50"></text></g><g><title>ip_finish_output2 (8 samples, 0.18%)</title><rect x="43.1899%" y="421" width="0.1775%" height="15" fill="rgb(207,184,53)"/><text x="43.4399%" y="431.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.16%)</title><rect x="43.2121%" y="405" width="0.1553%" height="15" fill="rgb(224,95,51)"/><text x="43.4621%" y="415.50"></text></g><g><title>do_softirq (7 samples, 0.16%)</title><rect x="43.2121%" y="389" width="0.1553%" height="15" fill="rgb(212,188,45)"/><text x="43.4621%" y="399.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.13%)</title><rect x="43.2343%" y="373" width="0.1331%" height="15" fill="rgb(223,154,38)"/><text x="43.4843%" y="383.50"></text></g><g><title>__do_softirq (6 samples, 0.13%)</title><rect x="43.2343%" y="357" width="0.1331%" height="15" fill="rgb(251,22,52)"/><text x="43.4843%" y="367.50"></text></g><g><title>net_rx_action (6 samples, 0.13%)</title><rect x="43.2343%" y="341" width="0.1331%" height="15" fill="rgb(229,209,22)"/><text x="43.4843%" y="351.50"></text></g><g><title>process_backlog (5 samples, 0.11%)</title><rect x="43.2564%" y="325" width="0.1109%" height="15" fill="rgb(234,138,34)"/><text x="43.5064%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.11%)</title><rect x="43.2564%" y="309" width="0.1109%" height="15" fill="rgb(212,95,11)"/><text x="43.5064%" y="319.50"></text></g><g><title>ip_rcv (5 samples, 0.11%)</title><rect x="43.2564%" y="293" width="0.1109%" height="15" fill="rgb(240,179,47)"/><text x="43.5064%" y="303.50"></text></g><g><title>ip_local_deliver (5 samples, 0.11%)</title><rect x="43.2564%" y="277" width="0.1109%" height="15" fill="rgb(240,163,11)"/><text x="43.5064%" y="287.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.11%)</title><rect x="43.2564%" y="261" width="0.1109%" height="15" fill="rgb(236,37,12)"/><text x="43.5064%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.11%)</title><rect x="43.2564%" y="245" width="0.1109%" height="15" fill="rgb(232,164,16)"/><text x="43.5064%" y="255.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.11%)</title><rect x="43.2564%" y="229" width="0.1109%" height="15" fill="rgb(244,205,15)"/><text x="43.5064%" y="239.50"></text></g><g><title>__tcp_push_pending_frames (9 samples, 0.20%)</title><rect x="43.1899%" y="501" width="0.1996%" height="15" fill="rgb(223,117,47)"/><text x="43.4399%" y="511.50"></text></g><g><title>tcp_write_xmit (9 samples, 0.20%)</title><rect x="43.1899%" y="485" width="0.1996%" height="15" fill="rgb(244,107,35)"/><text x="43.4399%" y="495.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.20%)</title><rect x="43.1899%" y="469" width="0.1996%" height="15" fill="rgb(205,140,8)"/><text x="43.4399%" y="479.50"></text></g><g><title>__x64_sys_sendto (13 samples, 0.29%)</title><rect x="43.1233%" y="581" width="0.2884%" height="15" fill="rgb(228,84,46)"/><text x="43.3733%" y="591.50"></text></g><g><title>__sys_sendto (13 samples, 0.29%)</title><rect x="43.1233%" y="565" width="0.2884%" height="15" fill="rgb(254,188,9)"/><text x="43.3733%" y="575.50"></text></g><g><title>sock_sendmsg (13 samples, 0.29%)</title><rect x="43.1233%" y="549" width="0.2884%" height="15" fill="rgb(206,112,54)"/><text x="43.3733%" y="559.50"></text></g><g><title>tcp_sendmsg (13 samples, 0.29%)</title><rect x="43.1233%" y="533" width="0.2884%" height="15" fill="rgb(216,84,49)"/><text x="43.3733%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 0.27%)</title><rect x="43.1455%" y="517" width="0.2662%" height="15" fill="rgb(214,194,35)"/><text x="43.3955%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (19 samples, 0.42%)</title><rect x="43.0124%" y="725" width="0.4215%" height="15" fill="rgb(249,28,3)"/><text x="43.2624%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (18 samples, 0.40%)</title><rect x="43.0346%" y="709" width="0.3993%" height="15" fill="rgb(222,56,52)"/><text x="43.2846%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (14 samples, 0.31%)</title><rect x="43.1233%" y="693" width="0.3106%" height="15" fill="rgb(245,217,50)"/><text x="43.3733%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (14 samples, 0.31%)</title><rect x="43.1233%" y="677" width="0.3106%" height="15" fill="rgb(213,201,24)"/><text x="43.3733%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (14 samples, 0.31%)</title><rect x="43.1233%" y="661" width="0.3106%" height="15" fill="rgb(248,116,28)"/><text x="43.3733%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (14 samples, 0.31%)</title><rect x="43.1233%" y="645" width="0.3106%" height="15" fill="rgb(219,72,43)"/><text x="43.3733%" y="655.50"></text></g><g><title>__libc_send (14 samples, 0.31%)</title><rect x="43.1233%" y="629" width="0.3106%" height="15" fill="rgb(209,138,14)"/><text x="43.3733%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.31%)</title><rect x="43.1233%" y="613" width="0.3106%" height="15" fill="rgb(222,18,33)"/><text x="43.3733%" y="623.50"></text></g><g><title>do_syscall_64 (14 samples, 0.31%)</title><rect x="43.1233%" y="597" width="0.3106%" height="15" fill="rgb(213,199,7)"/><text x="43.3733%" y="607.50"></text></g><g><title>lobsters_microbenchmarks::queriers::comment::post_comment (23 samples, 0.51%)</title><rect x="43.0124%" y="741" width="0.5102%" height="15" fill="rgb(250,110,10)"/><text x="43.2624%" y="751.50"></text></g><g><title>uclamp_rq_dec_id (6 samples, 0.13%)</title><rect x="43.9663%" y="373" width="0.1331%" height="15" fill="rgb(248,123,6)"/><text x="44.2163%" y="383.50"></text></g><g><title>sk_wait_data (16 samples, 0.35%)</title><rect x="43.7666%" y="453" width="0.3549%" height="15" fill="rgb(206,91,31)"/><text x="44.0166%" y="463.50"></text></g><g><title>wait_woken (14 samples, 0.31%)</title><rect x="43.8110%" y="437" width="0.3106%" height="15" fill="rgb(211,154,13)"/><text x="44.0610%" y="447.50"></text></g><g><title>schedule_timeout (14 samples, 0.31%)</title><rect x="43.8110%" y="421" width="0.3106%" height="15" fill="rgb(225,148,7)"/><text x="44.0610%" y="431.50"></text></g><g><title>schedule (14 samples, 0.31%)</title><rect x="43.8110%" y="405" width="0.3106%" height="15" fill="rgb(220,160,43)"/><text x="44.0610%" y="415.50"></text></g><g><title>__schedule (14 samples, 0.31%)</title><rect x="43.8110%" y="389" width="0.3106%" height="15" fill="rgb(213,52,39)"/><text x="44.0610%" y="399.50"></text></g><g><title>do_syscall_64 (25 samples, 0.55%)</title><rect x="43.6779%" y="533" width="0.5546%" height="15" fill="rgb(243,137,7)"/><text x="43.9279%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (25 samples, 0.55%)</title><rect x="43.6779%" y="517" width="0.5546%" height="15" fill="rgb(230,79,13)"/><text x="43.9279%" y="527.50"></text></g><g><title>__sys_recvfrom (25 samples, 0.55%)</title><rect x="43.6779%" y="501" width="0.5546%" height="15" fill="rgb(247,105,23)"/><text x="43.9279%" y="511.50"></text></g><g><title>inet_recvmsg (24 samples, 0.53%)</title><rect x="43.7001%" y="485" width="0.5324%" height="15" fill="rgb(223,179,41)"/><text x="43.9501%" y="495.50"></text></g><g><title>tcp_recvmsg (24 samples, 0.53%)</title><rect x="43.7001%" y="469" width="0.5324%" height="15" fill="rgb(218,9,34)"/><text x="43.9501%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.11%)</title><rect x="44.1216%" y="453" width="0.1109%" height="15" fill="rgb(222,106,8)"/><text x="44.3716%" y="463.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.11%)</title><rect x="44.1216%" y="437" width="0.1109%" height="15" fill="rgb(211,220,0)"/><text x="44.3716%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (27 samples, 0.60%)</title><rect x="43.6779%" y="549" width="0.5989%" height="15" fill="rgb(229,52,16)"/><text x="43.9279%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 0.69%)</title><rect x="43.6335%" y="645" width="0.6877%" height="15" fill="rgb(212,155,18)"/><text x="43.8835%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 0.67%)</title><rect x="43.6557%" y="629" width="0.6655%" height="15" fill="rgb(242,21,14)"/><text x="43.9057%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 0.67%)</title><rect x="43.6557%" y="613" width="0.6655%" height="15" fill="rgb(222,19,48)"/><text x="43.9057%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 0.67%)</title><rect x="43.6557%" y="597" width="0.6655%" height="15" fill="rgb(232,45,27)"/><text x="43.9057%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 0.67%)</title><rect x="43.6557%" y="581" width="0.6655%" height="15" fill="rgb(249,103,42)"/><text x="43.9057%" y="591.50"></text></g><g><title>__libc_recv (30 samples, 0.67%)</title><rect x="43.6557%" y="565" width="0.6655%" height="15" fill="rgb(246,81,33)"/><text x="43.9057%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (36 samples, 0.80%)</title><rect x="43.5892%" y="693" width="0.7986%" height="15" fill="rgb(252,33,42)"/><text x="43.8392%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (35 samples, 0.78%)</title><rect x="43.6114%" y="677" width="0.7764%" height="15" fill="rgb(209,212,41)"/><text x="43.8614%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.78%)</title><rect x="43.6114%" y="661" width="0.7764%" height="15" fill="rgb(207,154,6)"/><text x="43.8614%" y="671.50"></text></g><g><title>__wake_up_common (7 samples, 0.16%)</title><rect x="44.9423%" y="149" width="0.1553%" height="15" fill="rgb(223,64,47)"/><text x="45.1923%" y="159.50"></text></g><g><title>try_to_wake_up (7 samples, 0.16%)</title><rect x="44.9423%" y="133" width="0.1553%" height="15" fill="rgb(211,161,38)"/><text x="45.1923%" y="143.50"></text></g><g><title>sock_def_readable (9 samples, 0.20%)</title><rect x="44.9201%" y="181" width="0.1996%" height="15" fill="rgb(219,138,40)"/><text x="45.1701%" y="191.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.18%)</title><rect x="44.9423%" y="165" width="0.1775%" height="15" fill="rgb(241,228,46)"/><text x="45.1923%" y="175.50"></text></g><g><title>tcp_ack (7 samples, 0.16%)</title><rect x="45.1198%" y="181" width="0.1553%" height="15" fill="rgb(223,209,38)"/><text x="45.3698%" y="191.50"></text></g><g><title>__local_bh_enable_ip (30 samples, 0.67%)</title><rect x="44.6318%" y="405" width="0.6655%" height="15" fill="rgb(236,164,45)"/><text x="44.8818%" y="415.50"></text></g><g><title>do_softirq (30 samples, 0.67%)</title><rect x="44.6318%" y="389" width="0.6655%" height="15" fill="rgb(231,15,5)"/><text x="44.8818%" y="399.50"></text></g><g><title>do_softirq_own_stack (30 samples, 0.67%)</title><rect x="44.6318%" y="373" width="0.6655%" height="15" fill="rgb(252,35,15)"/><text x="44.8818%" y="383.50"></text></g><g><title>__do_softirq (30 samples, 0.67%)</title><rect x="44.6318%" y="357" width="0.6655%" height="15" fill="rgb(248,181,18)"/><text x="44.8818%" y="367.50"></text></g><g><title>net_rx_action (29 samples, 0.64%)</title><rect x="44.6539%" y="341" width="0.6433%" height="15" fill="rgb(233,39,42)"/><text x="44.9039%" y="351.50"></text></g><g><title>process_backlog (29 samples, 0.64%)</title><rect x="44.6539%" y="325" width="0.6433%" height="15" fill="rgb(238,110,33)"/><text x="44.9039%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (29 samples, 0.64%)</title><rect x="44.6539%" y="309" width="0.6433%" height="15" fill="rgb(233,195,10)"/><text x="44.9039%" y="319.50"></text></g><g><title>ip_rcv (26 samples, 0.58%)</title><rect x="44.7205%" y="293" width="0.5768%" height="15" fill="rgb(254,105,3)"/><text x="44.9705%" y="303.50"></text></g><g><title>ip_local_deliver (25 samples, 0.55%)</title><rect x="44.7427%" y="277" width="0.5546%" height="15" fill="rgb(221,225,9)"/><text x="44.9927%" y="287.50"></text></g><g><title>ip_local_deliver_finish (24 samples, 0.53%)</title><rect x="44.7649%" y="261" width="0.5324%" height="15" fill="rgb(224,227,45)"/><text x="45.0149%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (24 samples, 0.53%)</title><rect x="44.7649%" y="245" width="0.5324%" height="15" fill="rgb(229,198,43)"/><text x="45.0149%" y="255.50"></text></g><g><title>tcp_v4_rcv (24 samples, 0.53%)</title><rect x="44.7649%" y="229" width="0.5324%" height="15" fill="rgb(206,209,35)"/><text x="45.0149%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 0.42%)</title><rect x="44.8758%" y="213" width="0.4215%" height="15" fill="rgb(245,195,53)"/><text x="45.1258%" y="223.50"></text></g><g><title>tcp_rcv_established (19 samples, 0.42%)</title><rect x="44.8758%" y="197" width="0.4215%" height="15" fill="rgb(240,92,26)"/><text x="45.1258%" y="207.50"></text></g><g><title>__tcp_push_pending_frames (38 samples, 0.84%)</title><rect x="44.4765%" y="501" width="0.8429%" height="15" fill="rgb(207,40,23)"/><text x="44.7265%" y="511.50"></text></g><g><title>tcp_write_xmit (38 samples, 0.84%)</title><rect x="44.4765%" y="485" width="0.8429%" height="15" fill="rgb(223,111,35)"/><text x="44.7265%" y="495.50"></text></g><g><title>__tcp_transmit_skb (38 samples, 0.84%)</title><rect x="44.4765%" y="469" width="0.8429%" height="15" fill="rgb(229,147,28)"/><text x="44.7265%" y="479.50"></text></g><g><title>__ip_queue_xmit (37 samples, 0.82%)</title><rect x="44.4987%" y="453" width="0.8208%" height="15" fill="rgb(211,29,28)"/><text x="44.7487%" y="463.50"></text></g><g><title>ip_output (36 samples, 0.80%)</title><rect x="44.5209%" y="437" width="0.7986%" height="15" fill="rgb(228,72,33)"/><text x="44.7709%" y="447.50"></text></g><g><title>ip_finish_output2 (35 samples, 0.78%)</title><rect x="44.5430%" y="421" width="0.7764%" height="15" fill="rgb(205,214,31)"/><text x="44.7930%" y="431.50"></text></g><g><title>__x64_sys_sendto (45 samples, 1.00%)</title><rect x="44.4321%" y="581" width="0.9982%" height="15" fill="rgb(224,111,15)"/><text x="44.6821%" y="591.50"></text></g><g><title>__sys_sendto (45 samples, 1.00%)</title><rect x="44.4321%" y="565" width="0.9982%" height="15" fill="rgb(253,21,26)"/><text x="44.6821%" y="575.50"></text></g><g><title>sock_sendmsg (45 samples, 1.00%)</title><rect x="44.4321%" y="549" width="0.9982%" height="15" fill="rgb(245,139,43)"/><text x="44.6821%" y="559.50"></text></g><g><title>tcp_sendmsg (45 samples, 1.00%)</title><rect x="44.4321%" y="533" width="0.9982%" height="15" fill="rgb(252,170,7)"/><text x="44.6821%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (45 samples, 1.00%)</title><rect x="44.4321%" y="517" width="0.9982%" height="15" fill="rgb(231,118,14)"/><text x="44.6821%" y="527.50"></text></g><g><title>do_syscall_64 (46 samples, 1.02%)</title><rect x="44.4321%" y="597" width="1.0204%" height="15" fill="rgb(238,83,0)"/><text x="44.6821%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (87 samples, 1.93%)</title><rect x="43.5670%" y="725" width="1.9299%" height="15" fill="rgb(221,39,39)"/><text x="43.8170%" y="735.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (87 samples, 1.93%)</title><rect x="43.5670%" y="709" width="1.9299%" height="15" fill="rgb(222,119,46)"/><text x="43.8170%" y="719.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (50 samples, 1.11%)</title><rect x="44.3878%" y="693" width="1.1091%" height="15" fill="rgb(222,165,49)"/><text x="44.6378%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (50 samples, 1.11%)</title><rect x="44.3878%" y="677" width="1.1091%" height="15" fill="rgb(219,113,52)"/><text x="44.6378%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 1.11%)</title><rect x="44.3878%" y="661" width="1.1091%" height="15" fill="rgb(214,7,15)"/><text x="44.6378%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (50 samples, 1.11%)</title><rect x="44.3878%" y="645" width="1.1091%" height="15" fill="rgb(235,32,4)"/><text x="44.6378%" y="655.50"></text></g><g><title>__libc_send (50 samples, 1.11%)</title><rect x="44.3878%" y="629" width="1.1091%" height="15" fill="rgb(238,90,54)"/><text x="44.6378%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (48 samples, 1.06%)</title><rect x="44.4321%" y="613" width="1.0648%" height="15" fill="rgb(213,208,19)"/><text x="44.6821%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (6 samples, 0.13%)</title><rect x="45.5191%" y="661" width="0.1331%" height="15" fill="rgb(233,156,4)"/><text x="45.7691%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="45.5413%" y="645" width="0.1109%" height="15" fill="rgb(207,194,5)"/><text x="45.7913%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.22%)</title><rect x="45.4969%" y="725" width="0.2218%" height="15" fill="rgb(206,111,30)"/><text x="45.7469%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.22%)</title><rect x="45.4969%" y="709" width="0.2218%" height="15" fill="rgb(243,70,54)"/><text x="45.7469%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (9 samples, 0.20%)</title><rect x="45.5191%" y="693" width="0.1996%" height="15" fill="rgb(242,28,8)"/><text x="45.7691%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (9 samples, 0.20%)</title><rect x="45.5191%" y="677" width="0.1996%" height="15" fill="rgb(219,106,18)"/><text x="45.7691%" y="687.50"></text></g><g><title>&lt;(T1,T2) as mysql_common::row::convert::FromRow&gt;::from_row_opt (9 samples, 0.20%)</title><rect x="45.8518%" y="693" width="0.1996%" height="15" fill="rgb(244,222,10)"/><text x="46.1018%" y="703.50"></text></g><g><title>&lt;mysql_common::value::convert::ParseIr&lt;u64&gt; as mysql_common::value::convert::ConvIr&lt;u64&gt;&gt;::new (6 samples, 0.13%)</title><rect x="45.9184%" y="677" width="0.1331%" height="15" fill="rgb(236,179,52)"/><text x="46.1684%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.11%)</title><rect x="46.0736%" y="645" width="0.1109%" height="15" fill="rgb(213,23,39)"/><text x="46.3236%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (11 samples, 0.24%)</title><rect x="46.0515%" y="677" width="0.2440%" height="15" fill="rgb(238,48,10)"/><text x="46.3015%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (11 samples, 0.24%)</title><rect x="46.0515%" y="661" width="0.2440%" height="15" fill="rgb(251,196,23)"/><text x="46.3015%" y="671.50"></text></g><g><title>mysql_common::value::read_text_values (5 samples, 0.11%)</title><rect x="46.1846%" y="645" width="0.1109%" height="15" fill="rgb(250,152,24)"/><text x="46.4346%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.29%)</title><rect x="46.0515%" y="693" width="0.2884%" height="15" fill="rgb(209,150,17)"/><text x="46.3015%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 0.64%)</title><rect x="45.8296%" y="709" width="0.6433%" height="15" fill="rgb(234,202,34)"/><text x="46.0796%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (5 samples, 0.11%)</title><rect x="46.3620%" y="693" width="0.1109%" height="15" fill="rgb(253,148,53)"/><text x="46.6120%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.11%)</title><rect x="46.3620%" y="677" width="0.1109%" height="15" fill="rgb(218,129,16)"/><text x="46.6120%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (8 samples, 0.18%)</title><rect x="46.4729%" y="693" width="0.1775%" height="15" fill="rgb(216,85,19)"/><text x="46.7229%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (8 samples, 0.18%)</title><rect x="46.4729%" y="677" width="0.1775%" height="15" fill="rgb(235,228,7)"/><text x="46.7229%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="46.4951%" y="661" width="0.1553%" height="15" fill="rgb(245,175,0)"/><text x="46.7451%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (7 samples, 0.16%)</title><rect x="46.4951%" y="645" width="0.1553%" height="15" fill="rgb(208,168,36)"/><text x="46.7451%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (6 samples, 0.13%)</title><rect x="46.5173%" y="629" width="0.1331%" height="15" fill="rgb(246,171,24)"/><text x="46.7673%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (6 samples, 0.13%)</title><rect x="46.5173%" y="613" width="0.1331%" height="15" fill="rgb(215,142,24)"/><text x="46.7673%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (6 samples, 0.13%)</title><rect x="46.5173%" y="597" width="0.1331%" height="15" fill="rgb(250,187,7)"/><text x="46.7673%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (6 samples, 0.13%)</title><rect x="46.5173%" y="581" width="0.1331%" height="15" fill="rgb(228,66,33)"/><text x="46.7673%" y="591.50"></text></g><g><title>__libc_recv (6 samples, 0.13%)</title><rect x="46.5173%" y="565" width="0.1331%" height="15" fill="rgb(234,215,21)"/><text x="46.7673%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.13%)</title><rect x="46.5173%" y="549" width="0.1331%" height="15" fill="rgb(222,191,20)"/><text x="46.7673%" y="559.50"></text></g><g><title>do_syscall_64 (6 samples, 0.13%)</title><rect x="46.5173%" y="533" width="0.1331%" height="15" fill="rgb(245,79,54)"/><text x="46.7673%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.13%)</title><rect x="46.5173%" y="517" width="0.1331%" height="15" fill="rgb(240,10,37)"/><text x="46.7673%" y="527.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.13%)</title><rect x="46.5173%" y="501" width="0.1331%" height="15" fill="rgb(214,192,32)"/><text x="46.7673%" y="511.50"></text></g><g><title>do_softirq (6 samples, 0.13%)</title><rect x="46.7835%" y="389" width="0.1331%" height="15" fill="rgb(209,36,54)"/><text x="47.0335%" y="399.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.13%)</title><rect x="46.7835%" y="373" width="0.1331%" height="15" fill="rgb(220,10,11)"/><text x="47.0335%" y="383.50"></text></g><g><title>__do_softirq (6 samples, 0.13%)</title><rect x="46.7835%" y="357" width="0.1331%" height="15" fill="rgb(221,106,17)"/><text x="47.0335%" y="367.50"></text></g><g><title>net_rx_action (5 samples, 0.11%)</title><rect x="46.8057%" y="341" width="0.1109%" height="15" fill="rgb(251,142,44)"/><text x="47.0557%" y="351.50"></text></g><g><title>process_backlog (5 samples, 0.11%)</title><rect x="46.8057%" y="325" width="0.1109%" height="15" fill="rgb(238,13,15)"/><text x="47.0557%" y="335.50"></text></g><g><title>__tcp_push_pending_frames (11 samples, 0.24%)</title><rect x="46.6948%" y="501" width="0.2440%" height="15" fill="rgb(208,107,27)"/><text x="46.9448%" y="511.50"></text></g><g><title>tcp_write_xmit (11 samples, 0.24%)</title><rect x="46.6948%" y="485" width="0.2440%" height="15" fill="rgb(205,136,37)"/><text x="46.9448%" y="495.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.24%)</title><rect x="46.6948%" y="469" width="0.2440%" height="15" fill="rgb(250,205,27)"/><text x="46.9448%" y="479.50"></text></g><g><title>__ip_queue_xmit (10 samples, 0.22%)</title><rect x="46.7169%" y="453" width="0.2218%" height="15" fill="rgb(210,80,43)"/><text x="46.9669%" y="463.50"></text></g><g><title>ip_output (9 samples, 0.20%)</title><rect x="46.7391%" y="437" width="0.1996%" height="15" fill="rgb(247,160,36)"/><text x="46.9891%" y="447.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.20%)</title><rect x="46.7391%" y="421" width="0.1996%" height="15" fill="rgb(234,13,49)"/><text x="46.9891%" y="431.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.16%)</title><rect x="46.7835%" y="405" width="0.1553%" height="15" fill="rgb(234,122,0)"/><text x="47.0335%" y="415.50"></text></g><g><title>do_syscall_64 (14 samples, 0.31%)</title><rect x="46.6504%" y="597" width="0.3106%" height="15" fill="rgb(207,146,38)"/><text x="46.9004%" y="607.50"></text></g><g><title>__x64_sys_sendto (14 samples, 0.31%)</title><rect x="46.6504%" y="581" width="0.3106%" height="15" fill="rgb(207,177,25)"/><text x="46.9004%" y="591.50"></text></g><g><title>__sys_sendto (14 samples, 0.31%)</title><rect x="46.6504%" y="565" width="0.3106%" height="15" fill="rgb(211,178,42)"/><text x="46.9004%" y="575.50"></text></g><g><title>sock_sendmsg (14 samples, 0.31%)</title><rect x="46.6504%" y="549" width="0.3106%" height="15" fill="rgb(230,69,54)"/><text x="46.9004%" y="559.50"></text></g><g><title>tcp_sendmsg (14 samples, 0.31%)</title><rect x="46.6504%" y="533" width="0.3106%" height="15" fill="rgb(214,135,41)"/><text x="46.9004%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (13 samples, 0.29%)</title><rect x="46.6726%" y="517" width="0.2884%" height="15" fill="rgb(237,67,25)"/><text x="46.9226%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 0.33%)</title><rect x="46.6504%" y="613" width="0.3327%" height="15" fill="rgb(222,189,50)"/><text x="46.9004%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::frontpage::query_frontpage (157 samples, 3.48%)</title><rect x="43.5226%" y="741" width="3.4827%" height="15" fill="rgb(245,148,34)"/><text x="43.7726%" y="751.50">lob..</text></g><g><title>mysql::conn::queryable::Queryable::query_map (53 samples, 1.18%)</title><rect x="45.8296%" y="725" width="1.1757%" height="15" fill="rgb(222,29,6)"/><text x="46.0796%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (24 samples, 0.53%)</title><rect x="46.4729%" y="709" width="0.5324%" height="15" fill="rgb(221,189,43)"/><text x="46.7229%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (16 samples, 0.35%)</title><rect x="46.6504%" y="693" width="0.3549%" height="15" fill="rgb(207,36,27)"/><text x="46.9004%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (16 samples, 0.35%)</title><rect x="46.6504%" y="677" width="0.3549%" height="15" fill="rgb(217,90,24)"/><text x="46.9004%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (16 samples, 0.35%)</title><rect x="46.6504%" y="661" width="0.3549%" height="15" fill="rgb(224,66,35)"/><text x="46.9004%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (16 samples, 0.35%)</title><rect x="46.6504%" y="645" width="0.3549%" height="15" fill="rgb(221,13,50)"/><text x="46.9004%" y="655.50"></text></g><g><title>__libc_send (16 samples, 0.35%)</title><rect x="46.6504%" y="629" width="0.3549%" height="15" fill="rgb(236,68,49)"/><text x="46.9004%" y="639.50"></text></g><g><title>sock_sendmsg (5 samples, 0.11%)</title><rect x="47.1606%" y="549" width="0.1109%" height="15" fill="rgb(229,146,28)"/><text x="47.4106%" y="559.50"></text></g><g><title>tcp_sendmsg (5 samples, 0.11%)</title><rect x="47.1606%" y="533" width="0.1109%" height="15" fill="rgb(225,31,38)"/><text x="47.4106%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (5 samples, 0.11%)</title><rect x="47.1606%" y="517" width="0.1109%" height="15" fill="rgb(250,208,3)"/><text x="47.4106%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (5 samples, 0.11%)</title><rect x="47.1606%" y="501" width="0.1109%" height="15" fill="rgb(246,54,23)"/><text x="47.4106%" y="511.50"></text></g><g><title>tcp_write_xmit (5 samples, 0.11%)</title><rect x="47.1606%" y="485" width="0.1109%" height="15" fill="rgb(243,76,11)"/><text x="47.4106%" y="495.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.11%)</title><rect x="47.1606%" y="469" width="0.1109%" height="15" fill="rgb(245,21,50)"/><text x="47.4106%" y="479.50"></text></g><g><title>__x64_sys_sendto (7 samples, 0.16%)</title><rect x="47.1384%" y="581" width="0.1553%" height="15" fill="rgb(228,9,43)"/><text x="47.3884%" y="591.50"></text></g><g><title>__sys_sendto (7 samples, 0.16%)</title><rect x="47.1384%" y="565" width="0.1553%" height="15" fill="rgb(208,100,47)"/><text x="47.3884%" y="575.50"></text></g><g><title>do_syscall_64 (8 samples, 0.18%)</title><rect x="47.1384%" y="597" width="0.1775%" height="15" fill="rgb(232,26,8)"/><text x="47.3884%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (12 samples, 0.27%)</title><rect x="47.0719%" y="725" width="0.2662%" height="15" fill="rgb(216,166,38)"/><text x="47.3219%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (12 samples, 0.27%)</title><rect x="47.0719%" y="709" width="0.2662%" height="15" fill="rgb(251,202,51)"/><text x="47.3219%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (9 samples, 0.20%)</title><rect x="47.1384%" y="693" width="0.1996%" height="15" fill="rgb(254,216,34)"/><text x="47.3884%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (9 samples, 0.20%)</title><rect x="47.1384%" y="677" width="0.1996%" height="15" fill="rgb(251,32,27)"/><text x="47.3884%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (9 samples, 0.20%)</title><rect x="47.1384%" y="661" width="0.1996%" height="15" fill="rgb(208,127,28)"/><text x="47.3884%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (9 samples, 0.20%)</title><rect x="47.1384%" y="645" width="0.1996%" height="15" fill="rgb(224,137,22)"/><text x="47.3884%" y="655.50"></text></g><g><title>__libc_send (9 samples, 0.20%)</title><rect x="47.1384%" y="629" width="0.1996%" height="15" fill="rgb(254,70,32)"/><text x="47.3884%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.20%)</title><rect x="47.1384%" y="613" width="0.1996%" height="15" fill="rgb(229,75,37)"/><text x="47.3884%" y="623.50"></text></g><g><title>lobsters_microbenchmarks::queriers::user::get_profile (13 samples, 0.29%)</title><rect x="47.0719%" y="741" width="0.2884%" height="15" fill="rgb(252,64,23)"/><text x="47.3219%" y="751.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (7 samples, 0.16%)</title><rect x="47.3602%" y="725" width="0.1553%" height="15" fill="rgb(232,162,48)"/><text x="47.6102%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (7 samples, 0.16%)</title><rect x="47.3602%" y="709" width="0.1553%" height="15" fill="rgb(246,160,12)"/><text x="47.6102%" y="719.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (5 samples, 0.11%)</title><rect x="47.4046%" y="693" width="0.1109%" height="15" fill="rgb(247,166,0)"/><text x="47.6546%" y="703.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (5 samples, 0.11%)</title><rect x="47.4046%" y="677" width="0.1109%" height="15" fill="rgb(249,219,21)"/><text x="47.6546%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (5 samples, 0.11%)</title><rect x="47.4046%" y="661" width="0.1109%" height="15" fill="rgb(205,209,3)"/><text x="47.6546%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::write (5 samples, 0.11%)</title><rect x="47.4046%" y="645" width="0.1109%" height="15" fill="rgb(243,44,1)"/><text x="47.6546%" y="655.50"></text></g><g><title>__libc_send (5 samples, 0.11%)</title><rect x="47.4046%" y="629" width="0.1109%" height="15" fill="rgb(206,159,16)"/><text x="47.6546%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.11%)</title><rect x="47.4046%" y="613" width="0.1109%" height="15" fill="rgb(244,77,30)"/><text x="47.6546%" y="623.50"></text></g><g><title>do_syscall_64 (5 samples, 0.11%)</title><rect x="47.4046%" y="597" width="0.1109%" height="15" fill="rgb(218,69,12)"/><text x="47.6546%" y="607.50"></text></g><g><title>__x64_sys_sendto (5 samples, 0.11%)</title><rect x="47.4046%" y="581" width="0.1109%" height="15" fill="rgb(212,87,7)"/><text x="47.6546%" y="591.50"></text></g><g><title>__sys_sendto (5 samples, 0.11%)</title><rect x="47.4046%" y="565" width="0.1109%" height="15" fill="rgb(245,114,25)"/><text x="47.6546%" y="575.50"></text></g><g><title>sock_sendmsg (5 samples, 0.11%)</title><rect x="47.4046%" y="549" width="0.1109%" height="15" fill="rgb(210,61,42)"/><text x="47.6546%" y="559.50"></text></g><g><title>tcp_sendmsg (5 samples, 0.11%)</title><rect x="47.4046%" y="533" width="0.1109%" height="15" fill="rgb(211,52,33)"/><text x="47.6546%" y="543.50"></text></g><g><title>tcp_sendmsg_locked (5 samples, 0.11%)</title><rect x="47.4046%" y="517" width="0.1109%" height="15" fill="rgb(234,58,33)"/><text x="47.6546%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (5 samples, 0.11%)</title><rect x="47.4046%" y="501" width="0.1109%" height="15" fill="rgb(220,115,36)"/><text x="47.6546%" y="511.50"></text></g><g><title>tcp_write_xmit (5 samples, 0.11%)</title><rect x="47.4046%" y="485" width="0.1109%" height="15" fill="rgb(243,153,54)"/><text x="47.6546%" y="495.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.11%)</title><rect x="47.4046%" y="469" width="0.1109%" height="15" fill="rgb(251,47,18)"/><text x="47.6546%" y="479.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.11%)</title><rect x="47.4046%" y="453" width="0.1109%" height="15" fill="rgb(242,102,42)"/><text x="47.6546%" y="463.50"></text></g><g><title>ip_output (5 samples, 0.11%)</title><rect x="47.4046%" y="437" width="0.1109%" height="15" fill="rgb(234,31,38)"/><text x="47.6546%" y="447.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.11%)</title><rect x="47.4046%" y="421" width="0.1109%" height="15" fill="rgb(221,117,51)"/><text x="47.6546%" y="431.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.11%)</title><rect x="47.4046%" y="405" width="0.1109%" height="15" fill="rgb(212,20,18)"/><text x="47.6546%" y="415.50"></text></g><g><title>lobsters_microbenchmarks::main (207 samples, 4.59%)</title><rect x="42.9459%" y="757" width="4.5918%" height="15" fill="rgb(245,133,36)"/><text x="43.1959%" y="767.50">lobst..</text></g><g><title>lobsters_microbenchmarks::queriers::vote::vote_on_story (8 samples, 0.18%)</title><rect x="47.3602%" y="741" width="0.1775%" height="15" fill="rgb(212,6,19)"/><text x="47.6102%" y="751.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (6 samples, 0.13%)</title><rect x="47.5599%" y="741" width="0.1331%" height="15" fill="rgb(218,1,36)"/><text x="47.8099%" y="751.50"></text></g><g><title>decor_mem::Shim::create_schema (6 samples, 0.13%)</title><rect x="47.5599%" y="725" width="0.1331%" height="15" fill="rgb(246,84,54)"/><text x="47.8099%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (5 samples, 0.11%)</title><rect x="47.8705%" y="661" width="0.1109%" height="15" fill="rgb(242,110,6)"/><text x="48.1205%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.11%)</title><rect x="47.8705%" y="645" width="0.1109%" height="15" fill="rgb(214,47,5)"/><text x="48.1205%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="47.8705%" y="629" width="0.1109%" height="15" fill="rgb(218,159,25)"/><text x="48.1205%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.11%)</title><rect x="47.8705%" y="613" width="0.1109%" height="15" fill="rgb(215,211,28)"/><text x="48.1205%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.11%)</title><rect x="47.8705%" y="597" width="0.1109%" height="15" fill="rgb(238,59,32)"/><text x="48.1205%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (5 samples, 0.11%)</title><rect x="47.8705%" y="581" width="0.1109%" height="15" fill="rgb(226,82,3)"/><text x="48.1205%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (5 samples, 0.11%)</title><rect x="47.8705%" y="565" width="0.1109%" height="15" fill="rgb(240,164,32)"/><text x="48.1205%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (5 samples, 0.11%)</title><rect x="47.8705%" y="549" width="0.1109%" height="15" fill="rgb(232,46,7)"/><text x="48.1205%" y="559.50"></text></g><g><title>__libc_recv (5 samples, 0.11%)</title><rect x="47.8705%" y="533" width="0.1109%" height="15" fill="rgb(229,129,53)"/><text x="48.1205%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.11%)</title><rect x="47.8705%" y="517" width="0.1109%" height="15" fill="rgb(234,188,29)"/><text x="48.1205%" y="527.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.11%)</title><rect x="48.0479%" y="277" width="0.1109%" height="15" fill="rgb(246,141,4)"/><text x="48.2979%" y="287.50"></text></g><g><title>net_rx_action (6 samples, 0.13%)</title><rect x="48.0479%" y="309" width="0.1331%" height="15" fill="rgb(229,23,39)"/><text x="48.2979%" y="319.50"></text></g><g><title>process_backlog (6 samples, 0.13%)</title><rect x="48.0479%" y="293" width="0.1331%" height="15" fill="rgb(206,12,3)"/><text x="48.2979%" y="303.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.18%)</title><rect x="48.0257%" y="421" width="0.1775%" height="15" fill="rgb(252,226,20)"/><text x="48.2757%" y="431.50"></text></g><g><title>ip_output (8 samples, 0.18%)</title><rect x="48.0257%" y="405" width="0.1775%" height="15" fill="rgb(216,123,35)"/><text x="48.2757%" y="415.50"></text></g><g><title>ip_finish_output2 (8 samples, 0.18%)</title><rect x="48.0257%" y="389" width="0.1775%" height="15" fill="rgb(212,68,40)"/><text x="48.2757%" y="399.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.16%)</title><rect x="48.0479%" y="373" width="0.1553%" height="15" fill="rgb(254,125,32)"/><text x="48.2979%" y="383.50"></text></g><g><title>do_softirq (7 samples, 0.16%)</title><rect x="48.0479%" y="357" width="0.1553%" height="15" fill="rgb(253,97,22)"/><text x="48.2979%" y="367.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.16%)</title><rect x="48.0479%" y="341" width="0.1553%" height="15" fill="rgb(241,101,14)"/><text x="48.2979%" y="351.50"></text></g><g><title>__do_softirq (7 samples, 0.16%)</title><rect x="48.0479%" y="325" width="0.1553%" height="15" fill="rgb(238,103,29)"/><text x="48.2979%" y="335.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (17 samples, 0.38%)</title><rect x="47.8483%" y="693" width="0.3771%" height="15" fill="rgb(233,195,47)"/><text x="48.0983%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (17 samples, 0.38%)</title><rect x="47.8483%" y="677" width="0.3771%" height="15" fill="rgb(246,218,30)"/><text x="48.0983%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (11 samples, 0.24%)</title><rect x="47.9814%" y="661" width="0.2440%" height="15" fill="rgb(219,145,47)"/><text x="48.2314%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (11 samples, 0.24%)</title><rect x="47.9814%" y="645" width="0.2440%" height="15" fill="rgb(243,12,26)"/><text x="48.2314%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (11 samples, 0.24%)</title><rect x="47.9814%" y="629" width="0.2440%" height="15" fill="rgb(214,87,16)"/><text x="48.2314%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (11 samples, 0.24%)</title><rect x="47.9814%" y="613" width="0.2440%" height="15" fill="rgb(208,99,42)"/><text x="48.2314%" y="623.50"></text></g><g><title>__libc_send (10 samples, 0.22%)</title><rect x="48.0035%" y="597" width="0.2218%" height="15" fill="rgb(253,99,2)"/><text x="48.2535%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.22%)</title><rect x="48.0035%" y="581" width="0.2218%" height="15" fill="rgb(220,168,23)"/><text x="48.2535%" y="591.50"></text></g><g><title>do_syscall_64 (10 samples, 0.22%)</title><rect x="48.0035%" y="565" width="0.2218%" height="15" fill="rgb(242,38,24)"/><text x="48.2535%" y="575.50"></text></g><g><title>__x64_sys_sendto (10 samples, 0.22%)</title><rect x="48.0035%" y="549" width="0.2218%" height="15" fill="rgb(225,182,9)"/><text x="48.2535%" y="559.50"></text></g><g><title>__sys_sendto (10 samples, 0.22%)</title><rect x="48.0035%" y="533" width="0.2218%" height="15" fill="rgb(243,178,37)"/><text x="48.2535%" y="543.50"></text></g><g><title>sock_sendmsg (10 samples, 0.22%)</title><rect x="48.0035%" y="517" width="0.2218%" height="15" fill="rgb(232,139,19)"/><text x="48.2535%" y="527.50"></text></g><g><title>tcp_sendmsg (10 samples, 0.22%)</title><rect x="48.0035%" y="501" width="0.2218%" height="15" fill="rgb(225,201,24)"/><text x="48.2535%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (10 samples, 0.22%)</title><rect x="48.0035%" y="485" width="0.2218%" height="15" fill="rgb(221,47,46)"/><text x="48.2535%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (10 samples, 0.22%)</title><rect x="48.0035%" y="469" width="0.2218%" height="15" fill="rgb(249,23,13)"/><text x="48.2535%" y="479.50"></text></g><g><title>tcp_write_xmit (10 samples, 0.22%)</title><rect x="48.0035%" y="453" width="0.2218%" height="15" fill="rgb(219,9,5)"/><text x="48.2535%" y="463.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.20%)</title><rect x="48.0257%" y="437" width="0.1996%" height="15" fill="rgb(254,171,16)"/><text x="48.2757%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (8 samples, 0.18%)</title><rect x="48.2254%" y="693" width="0.1775%" height="15" fill="rgb(230,171,20)"/><text x="48.4754%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (8 samples, 0.18%)</title><rect x="48.2254%" y="677" width="0.1775%" height="15" fill="rgb(210,71,41)"/><text x="48.4754%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.18%)</title><rect x="48.2254%" y="661" width="0.1775%" height="15" fill="rgb(206,173,20)"/><text x="48.4754%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.16%)</title><rect x="48.2476%" y="645" width="0.1553%" height="15" fill="rgb(233,88,34)"/><text x="48.4976%" y="655.50"></text></g><g><title>core::fmt::write (10 samples, 0.22%)</title><rect x="48.4250%" y="693" width="0.2218%" height="15" fill="rgb(223,209,46)"/><text x="48.6750%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (10 samples, 0.22%)</title><rect x="48.4250%" y="677" width="0.2218%" height="15" fill="rgb(250,43,18)"/><text x="48.6750%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.11%)</title><rect x="48.5359%" y="661" width="0.1109%" height="15" fill="rgb(208,13,10)"/><text x="48.7859%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.16%)</title><rect x="48.6469%" y="693" width="0.1553%" height="15" fill="rgb(212,200,36)"/><text x="48.8969%" y="703.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.11%)</title><rect x="49.0683%" y="53" width="0.1109%" height="15" fill="rgb(225,90,30)"/><text x="49.3183%" y="63.50"></text></g><g><title>enqueue_entity (5 samples, 0.11%)</title><rect x="49.0683%" y="37" width="0.1109%" height="15" fill="rgb(236,182,39)"/><text x="49.3183%" y="47.50"></text></g><g><title>sock_def_readable (9 samples, 0.20%)</title><rect x="49.0018%" y="133" width="0.1996%" height="15" fill="rgb(212,144,35)"/><text x="49.2518%" y="143.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.20%)</title><rect x="49.0018%" y="117" width="0.1996%" height="15" fill="rgb(228,63,44)"/><text x="49.2518%" y="127.50"></text></g><g><title>__wake_up_common (9 samples, 0.20%)</title><rect x="49.0018%" y="101" width="0.1996%" height="15" fill="rgb(228,109,6)"/><text x="49.2518%" y="111.50"></text></g><g><title>pollwake (9 samples, 0.20%)</title><rect x="49.0018%" y="85" width="0.1996%" height="15" fill="rgb(238,117,24)"/><text x="49.2518%" y="95.50"></text></g><g><title>try_to_wake_up (8 samples, 0.18%)</title><rect x="49.0240%" y="69" width="0.1775%" height="15" fill="rgb(242,26,26)"/><text x="49.2740%" y="79.50"></text></g><g><title>tcp_ack (5 samples, 0.11%)</title><rect x="49.2014%" y="133" width="0.1109%" height="15" fill="rgb(221,92,48)"/><text x="49.4514%" y="143.50"></text></g><g><title>__netif_receive_skb_one_core (16 samples, 0.35%)</title><rect x="48.9796%" y="261" width="0.3549%" height="15" fill="rgb(209,209,32)"/><text x="49.2296%" y="271.50"></text></g><g><title>ip_rcv (16 samples, 0.35%)</title><rect x="48.9796%" y="245" width="0.3549%" height="15" fill="rgb(221,70,22)"/><text x="49.2296%" y="255.50"></text></g><g><title>ip_local_deliver (16 samples, 0.35%)</title><rect x="48.9796%" y="229" width="0.3549%" height="15" fill="rgb(248,145,5)"/><text x="49.2296%" y="239.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 0.35%)</title><rect x="48.9796%" y="213" width="0.3549%" height="15" fill="rgb(226,116,26)"/><text x="49.2296%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 0.35%)</title><rect x="48.9796%" y="197" width="0.3549%" height="15" fill="rgb(244,5,17)"/><text x="49.2296%" y="207.50"></text></g><g><title>tcp_v4_rcv (15 samples, 0.33%)</title><rect x="49.0018%" y="181" width="0.3327%" height="15" fill="rgb(252,159,33)"/><text x="49.2518%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 0.33%)</title><rect x="49.0018%" y="165" width="0.3327%" height="15" fill="rgb(206,71,0)"/><text x="49.2518%" y="175.50"></text></g><g><title>tcp_rcv_established (15 samples, 0.33%)</title><rect x="49.0018%" y="149" width="0.3327%" height="15" fill="rgb(233,118,54)"/><text x="49.2518%" y="159.50"></text></g><g><title>do_syscall_64 (22 samples, 0.49%)</title><rect x="48.8687%" y="549" width="0.4880%" height="15" fill="rgb(234,83,48)"/><text x="49.1187%" y="559.50"></text></g><g><title>__x64_sys_sendto (22 samples, 0.49%)</title><rect x="48.8687%" y="533" width="0.4880%" height="15" fill="rgb(228,3,54)"/><text x="49.1187%" y="543.50"></text></g><g><title>__sys_sendto (22 samples, 0.49%)</title><rect x="48.8687%" y="517" width="0.4880%" height="15" fill="rgb(226,155,13)"/><text x="49.1187%" y="527.50"></text></g><g><title>sock_sendmsg (22 samples, 0.49%)</title><rect x="48.8687%" y="501" width="0.4880%" height="15" fill="rgb(241,28,37)"/><text x="49.1187%" y="511.50"></text></g><g><title>tcp_sendmsg (22 samples, 0.49%)</title><rect x="48.8687%" y="485" width="0.4880%" height="15" fill="rgb(233,93,10)"/><text x="49.1187%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (20 samples, 0.44%)</title><rect x="48.9130%" y="469" width="0.4437%" height="15" fill="rgb(225,113,19)"/><text x="49.1630%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (19 samples, 0.42%)</title><rect x="48.9352%" y="453" width="0.4215%" height="15" fill="rgb(241,2,18)"/><text x="49.1852%" y="463.50"></text></g><g><title>tcp_write_xmit (19 samples, 0.42%)</title><rect x="48.9352%" y="437" width="0.4215%" height="15" fill="rgb(228,207,21)"/><text x="49.1852%" y="447.50"></text></g><g><title>__tcp_transmit_skb (19 samples, 0.42%)</title><rect x="48.9352%" y="421" width="0.4215%" height="15" fill="rgb(213,211,35)"/><text x="49.1852%" y="431.50"></text></g><g><title>__ip_queue_xmit (19 samples, 0.42%)</title><rect x="48.9352%" y="405" width="0.4215%" height="15" fill="rgb(209,83,10)"/><text x="49.1852%" y="415.50"></text></g><g><title>ip_output (18 samples, 0.40%)</title><rect x="48.9574%" y="389" width="0.3993%" height="15" fill="rgb(209,164,1)"/><text x="49.2074%" y="399.50"></text></g><g><title>ip_finish_output2 (18 samples, 0.40%)</title><rect x="48.9574%" y="373" width="0.3993%" height="15" fill="rgb(213,184,43)"/><text x="49.2074%" y="383.50"></text></g><g><title>__local_bh_enable_ip (18 samples, 0.40%)</title><rect x="48.9574%" y="357" width="0.3993%" height="15" fill="rgb(231,61,34)"/><text x="49.2074%" y="367.50"></text></g><g><title>do_softirq (17 samples, 0.38%)</title><rect x="48.9796%" y="341" width="0.3771%" height="15" fill="rgb(235,75,3)"/><text x="49.2296%" y="351.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.38%)</title><rect x="48.9796%" y="325" width="0.3771%" height="15" fill="rgb(220,106,47)"/><text x="49.2296%" y="335.50"></text></g><g><title>__do_softirq (17 samples, 0.38%)</title><rect x="48.9796%" y="309" width="0.3771%" height="15" fill="rgb(210,196,33)"/><text x="49.2296%" y="319.50"></text></g><g><title>net_rx_action (17 samples, 0.38%)</title><rect x="48.9796%" y="293" width="0.3771%" height="15" fill="rgb(229,154,42)"/><text x="49.2296%" y="303.50"></text></g><g><title>process_backlog (17 samples, 0.38%)</title><rect x="48.9796%" y="277" width="0.3771%" height="15" fill="rgb(228,114,26)"/><text x="49.2296%" y="287.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (26 samples, 0.58%)</title><rect x="48.8021%" y="677" width="0.5768%" height="15" fill="rgb(208,144,1)"/><text x="49.0521%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (26 samples, 0.58%)</title><rect x="48.8021%" y="661" width="0.5768%" height="15" fill="rgb(239,112,37)"/><text x="49.0521%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (25 samples, 0.55%)</title><rect x="48.8243%" y="645" width="0.5546%" height="15" fill="rgb(210,96,50)"/><text x="49.0743%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (25 samples, 0.55%)</title><rect x="48.8243%" y="629" width="0.5546%" height="15" fill="rgb(222,178,2)"/><text x="49.0743%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (25 samples, 0.55%)</title><rect x="48.8243%" y="613" width="0.5546%" height="15" fill="rgb(226,74,18)"/><text x="49.0743%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (25 samples, 0.55%)</title><rect x="48.8243%" y="597" width="0.5546%" height="15" fill="rgb(225,67,54)"/><text x="49.0743%" y="607.50"></text></g><g><title>__libc_send (25 samples, 0.55%)</title><rect x="48.8243%" y="581" width="0.5546%" height="15" fill="rgb(251,92,32)"/><text x="49.0743%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.53%)</title><rect x="48.8465%" y="565" width="0.5324%" height="15" fill="rgb(228,149,22)"/><text x="49.0965%" y="575.50"></text></g><g><title>decor_mem::ghosts_map::GhostsMap::insert_uid2gids_for_values (27 samples, 0.60%)</title><rect x="48.8021%" y="693" width="0.5989%" height="15" fill="rgb(243,54,13)"/><text x="49.0521%" y="703.50"></text></g><g><title>_int_free (15 samples, 0.33%)</title><rect x="49.6229%" y="661" width="0.3327%" height="15" fill="rgb(243,180,28)"/><text x="49.8729%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.49%)</title><rect x="49.5342%" y="677" width="0.4880%" height="15" fill="rgb(208,167,24)"/><text x="49.7842%" y="687.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.64%)</title><rect x="50.5546%" y="485" width="0.6433%" height="15" fill="rgb(245,73,45)"/><text x="50.8046%" y="495.50"></text></g><g><title>_int_malloc (17 samples, 0.38%)</title><rect x="50.8208%" y="469" width="0.3771%" height="15" fill="rgb(237,203,48)"/><text x="51.0708%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (37 samples, 0.82%)</title><rect x="50.4437%" y="661" width="0.8208%" height="15" fill="rgb(211,197,16)"/><text x="50.6937%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.80%)</title><rect x="50.4658%" y="645" width="0.7986%" height="15" fill="rgb(243,99,51)"/><text x="50.7158%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (35 samples, 0.78%)</title><rect x="50.4880%" y="629" width="0.7764%" height="15" fill="rgb(215,123,29)"/><text x="50.7380%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.75%)</title><rect x="50.5102%" y="613" width="0.7542%" height="15" fill="rgb(239,186,37)"/><text x="50.7602%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (33 samples, 0.73%)</title><rect x="50.5324%" y="597" width="0.7320%" height="15" fill="rgb(252,136,39)"/><text x="50.7824%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (33 samples, 0.73%)</title><rect x="50.5324%" y="581" width="0.7320%" height="15" fill="rgb(223,213,32)"/><text x="50.7824%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 0.73%)</title><rect x="50.5324%" y="565" width="0.7320%" height="15" fill="rgb(233,115,5)"/><text x="50.7824%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (33 samples, 0.73%)</title><rect x="50.5324%" y="549" width="0.7320%" height="15" fill="rgb(207,226,44)"/><text x="50.7824%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (33 samples, 0.73%)</title><rect x="50.5324%" y="533" width="0.7320%" height="15" fill="rgb(208,126,0)"/><text x="50.7824%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.73%)</title><rect x="50.5324%" y="517" width="0.7320%" height="15" fill="rgb(244,66,21)"/><text x="50.7824%" y="527.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.71%)</title><rect x="50.5546%" y="501" width="0.7098%" height="15" fill="rgb(222,97,12)"/><text x="50.8046%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.13%)</title><rect x="51.3753%" y="645" width="0.1331%" height="15" fill="rgb(219,213,19)"/><text x="51.6253%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.13%)</title><rect x="51.3753%" y="629" width="0.1331%" height="15" fill="rgb(252,169,30)"/><text x="51.6253%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.11%)</title><rect x="51.3975%" y="613" width="0.1109%" height="15" fill="rgb(206,32,51)"/><text x="51.6475%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.11%)</title><rect x="51.3975%" y="597" width="0.1109%" height="15" fill="rgb(250,172,42)"/><text x="51.6475%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="51.3975%" y="581" width="0.1109%" height="15" fill="rgb(209,34,43)"/><text x="51.6475%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="51.3975%" y="565" width="0.1109%" height="15" fill="rgb(223,11,35)"/><text x="51.6475%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.11%)</title><rect x="51.3975%" y="549" width="0.1109%" height="15" fill="rgb(251,219,26)"/><text x="51.6475%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.11%)</title><rect x="51.3975%" y="533" width="0.1109%" height="15" fill="rgb(231,119,3)"/><text x="51.6475%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.11%)</title><rect x="51.3975%" y="517" width="0.1109%" height="15" fill="rgb(216,97,11)"/><text x="51.6475%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.11%)</title><rect x="51.3975%" y="501" width="0.1109%" height="15" fill="rgb(223,59,9)"/><text x="51.6475%" y="511.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.11%)</title><rect x="51.3975%" y="485" width="0.1109%" height="15" fill="rgb(233,93,31)"/><text x="51.6475%" y="495.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.11%)</title><rect x="51.3975%" y="469" width="0.1109%" height="15" fill="rgb(239,81,33)"/><text x="51.6475%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (15 samples, 0.33%)</title><rect x="53.3718%" y="565" width="0.3327%" height="15" fill="rgb(213,120,34)"/><text x="53.6218%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.33%)</title><rect x="53.3718%" y="549" width="0.3327%" height="15" fill="rgb(243,49,53)"/><text x="53.6218%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (15 samples, 0.33%)</title><rect x="53.3718%" y="533" width="0.3327%" height="15" fill="rgb(247,216,33)"/><text x="53.6218%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.31%)</title><rect x="53.3940%" y="517" width="0.3106%" height="15" fill="rgb(226,26,14)"/><text x="53.6440%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.20%)</title><rect x="53.5049%" y="501" width="0.1996%" height="15" fill="rgb(215,49,53)"/><text x="53.7549%" y="511.50"></text></g><g><title>__GI___libc_malloc (154 samples, 3.42%)</title><rect x="53.7711%" y="453" width="3.4161%" height="15" fill="rgb(245,162,40)"/><text x="54.0211%" y="463.50">__G..</text></g><g><title>_int_malloc (114 samples, 2.53%)</title><rect x="54.6584%" y="437" width="2.5288%" height="15" fill="rgb(229,68,17)"/><text x="54.9084%" y="447.50">_i..</text></g><g><title>__rdl_alloc (8 samples, 0.18%)</title><rect x="57.1872%" y="453" width="0.1775%" height="15" fill="rgb(213,182,10)"/><text x="57.4372%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (8 samples, 0.18%)</title><rect x="57.1872%" y="437" width="0.1775%" height="15" fill="rgb(245,125,30)"/><text x="57.4372%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (193 samples, 4.28%)</title><rect x="53.1943%" y="629" width="4.2813%" height="15" fill="rgb(232,202,2)"/><text x="53.4443%" y="639.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (191 samples, 4.24%)</title><rect x="53.2387%" y="613" width="4.2369%" height="15" fill="rgb(237,140,51)"/><text x="53.4887%" y="623.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (188 samples, 4.17%)</title><rect x="53.3052%" y="597" width="4.1704%" height="15" fill="rgb(236,157,25)"/><text x="53.5552%" y="607.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (185 samples, 4.10%)</title><rect x="53.3718%" y="581" width="4.1038%" height="15" fill="rgb(219,209,0)"/><text x="53.6218%" y="591.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (170 samples, 3.77%)</title><rect x="53.7045%" y="565" width="3.7711%" height="15" fill="rgb(240,116,54)"/><text x="53.9545%" y="575.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (170 samples, 3.77%)</title><rect x="53.7045%" y="549" width="3.7711%" height="15" fill="rgb(216,10,36)"/><text x="53.9545%" y="559.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (170 samples, 3.77%)</title><rect x="53.7045%" y="533" width="3.7711%" height="15" fill="rgb(222,72,44)"/><text x="53.9545%" y="543.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (170 samples, 3.77%)</title><rect x="53.7045%" y="517" width="3.7711%" height="15" fill="rgb(232,159,9)"/><text x="53.9545%" y="527.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (170 samples, 3.77%)</title><rect x="53.7045%" y="501" width="3.7711%" height="15" fill="rgb(210,39,32)"/><text x="53.9545%" y="511.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (170 samples, 3.77%)</title><rect x="53.7045%" y="485" width="3.7711%" height="15" fill="rgb(216,194,45)"/><text x="53.9545%" y="495.50">allo..</text></g><g><title>alloc::alloc::alloc (169 samples, 3.75%)</title><rect x="53.7267%" y="469" width="3.7489%" height="15" fill="rgb(218,18,35)"/><text x="53.9767%" y="479.50">allo..</text></g><g><title>__rust_alloc (5 samples, 0.11%)</title><rect x="57.3647%" y="453" width="0.1109%" height="15" fill="rgb(207,83,51)"/><text x="57.6147%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (270 samples, 5.99%)</title><rect x="51.5084%" y="645" width="5.9894%" height="15" fill="rgb(225,63,43)"/><text x="51.7584%" y="655.50">&lt;core::i..</text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as core::clone::Clone&gt;::clone (8 samples, 0.18%)</title><rect x="57.4978%" y="645" width="0.1775%" height="15" fill="rgb(207,57,36)"/><text x="57.7478%" y="655.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.60%)</title><rect x="57.6752%" y="645" width="0.5989%" height="15" fill="rgb(216,99,33)"/><text x="57.9252%" y="655.50"></text></g><g><title>_int_malloc (17 samples, 0.38%)</title><rect x="57.8971%" y="629" width="0.3771%" height="15" fill="rgb(225,42,16)"/><text x="58.1471%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (321 samples, 7.12%)</title><rect x="51.2644%" y="661" width="7.1207%" height="15" fill="rgb(220,201,45)"/><text x="51.5144%" y="671.50">&lt;alloc::ve..</text></g><g><title>__GI___libc_free (7 samples, 0.16%)</title><rect x="58.4738%" y="661" width="0.1553%" height="15" fill="rgb(225,33,4)"/><text x="58.7238%" y="671.50"></text></g><g><title>_int_free (6 samples, 0.13%)</title><rect x="58.6513%" y="661" width="0.1331%" height="15" fill="rgb(224,33,50)"/><text x="58.9013%" y="671.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.27%)</title><rect x="58.8731%" y="645" width="0.2662%" height="15" fill="rgb(246,198,51)"/><text x="59.1231%" y="655.50"></text></g><g><title>_int_malloc (7 samples, 0.16%)</title><rect x="58.9840%" y="629" width="0.1553%" height="15" fill="rgb(205,22,4)"/><text x="59.2340%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.47%)</title><rect x="58.7844%" y="661" width="0.4658%" height="15" fill="rgb(206,3,8)"/><text x="59.0344%" y="671.50"></text></g><g><title>alloc::slice::insert_head (7 samples, 0.16%)</title><rect x="59.4942%" y="645" width="0.1553%" height="15" fill="rgb(251,23,15)"/><text x="59.7442%" y="655.50"></text></g><g><title>alloc::slice::merge_sort (29 samples, 0.64%)</title><rect x="59.2502%" y="661" width="0.6433%" height="15" fill="rgb(252,88,28)"/><text x="59.5002%" y="671.50"></text></g><g><title>decor_mem::helpers::parser_vals_cmp (11 samples, 0.24%)</title><rect x="59.6495%" y="645" width="0.2440%" height="15" fill="rgb(212,127,14)"/><text x="59.8995%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.11%)</title><rect x="59.9601%" y="629" width="0.1109%" height="15" fill="rgb(247,145,37)"/><text x="60.2101%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.11%)</title><rect x="59.9601%" y="613" width="0.1109%" height="15" fill="rgb(209,117,53)"/><text x="60.2101%" y="623.50"></text></g><g><title>core::fmt::write (7 samples, 0.16%)</title><rect x="59.9601%" y="661" width="0.1553%" height="15" fill="rgb(212,90,42)"/><text x="60.2101%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (7 samples, 0.16%)</title><rect x="59.9601%" y="645" width="0.1553%" height="15" fill="rgb(218,164,37)"/><text x="60.2101%" y="655.50"></text></g><g><title>__GI___libc_free (11 samples, 0.24%)</title><rect x="60.3150%" y="645" width="0.2440%" height="15" fill="rgb(246,65,34)"/><text x="60.5650%" y="655.50"></text></g><g><title>__rust_dealloc (5 samples, 0.11%)</title><rect x="60.5590%" y="645" width="0.1109%" height="15" fill="rgb(231,100,33)"/><text x="60.8090%" y="655.50"></text></g><g><title>_int_free (37 samples, 0.82%)</title><rect x="60.6699%" y="645" width="0.8208%" height="15" fill="rgb(228,126,14)"/><text x="60.9199%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (75 samples, 1.66%)</title><rect x="60.1154%" y="661" width="1.6637%" height="15" fill="rgb(215,173,21)"/><text x="60.3654%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 0.29%)</title><rect x="61.4907%" y="645" width="0.2884%" height="15" fill="rgb(210,6,40)"/><text x="61.7407%" y="655.50"></text></g><g><title>decor_mem::select::expr_to_col (8 samples, 0.18%)</title><rect x="61.7791%" y="661" width="0.1775%" height="15" fill="rgb(212,48,18)"/><text x="62.0291%" y="671.50"></text></g><g><title>core::fmt::write (7 samples, 0.16%)</title><rect x="61.8012%" y="645" width="0.1553%" height="15" fill="rgb(230,214,11)"/><text x="62.0512%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.13%)</title><rect x="61.8234%" y="629" width="0.1331%" height="15" fill="rgb(254,105,39)"/><text x="62.0734%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.11%)</title><rect x="62.2005%" y="645" width="0.1109%" height="15" fill="rgb(245,158,5)"/><text x="62.4505%" y="655.50"></text></g><g><title>decor_mem::select::get_ris_matching_constraint (23 samples, 0.51%)</title><rect x="61.9565%" y="661" width="0.5102%" height="15" fill="rgb(249,208,11)"/><text x="62.2065%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.16%)</title><rect x="62.3114%" y="645" width="0.1553%" height="15" fill="rgb(210,39,28)"/><text x="62.5614%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.31%)</title><rect x="62.4667%" y="613" width="0.3106%" height="15" fill="rgb(211,56,53)"/><text x="62.7167%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (14 samples, 0.31%)</title><rect x="62.4667%" y="597" width="0.3106%" height="15" fill="rgb(226,201,30)"/><text x="62.7167%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.18%)</title><rect x="62.5998%" y="581" width="0.1775%" height="15" fill="rgb(239,101,34)"/><text x="62.8498%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.13%)</title><rect x="62.6442%" y="565" width="0.1331%" height="15" fill="rgb(226,209,5)"/><text x="62.8942%" y="575.50"></text></g><g><title>core::fmt::write (16 samples, 0.35%)</title><rect x="62.4667%" y="645" width="0.3549%" height="15" fill="rgb(250,105,47)"/><text x="62.7167%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (16 samples, 0.35%)</title><rect x="62.4667%" y="629" width="0.3549%" height="15" fill="rgb(230,72,3)"/><text x="62.7167%" y="639.50"></text></g><g><title>decor_mem::select::tablecolumn_matches_col (17 samples, 0.38%)</title><rect x="62.4667%" y="661" width="0.3771%" height="15" fill="rgb(232,218,39)"/><text x="62.7167%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.13%)</title><rect x="62.9104%" y="613" width="0.1331%" height="15" fill="rgb(248,166,6)"/><text x="63.1604%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.13%)</title><rect x="62.9104%" y="597" width="0.1331%" height="15" fill="rgb(247,89,20)"/><text x="63.1604%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.11%)</title><rect x="62.9326%" y="581" width="0.1109%" height="15" fill="rgb(248,130,54)"/><text x="63.1826%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.11%)</title><rect x="62.9326%" y="565" width="0.1109%" height="15" fill="rgb(234,196,4)"/><text x="63.1826%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.11%)</title><rect x="62.9326%" y="549" width="0.1109%" height="15" fill="rgb(250,143,31)"/><text x="63.1826%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.11%)</title><rect x="62.9326%" y="533" width="0.1109%" height="15" fill="rgb(211,110,34)"/><text x="63.1826%" y="543.50"></text></g><g><title>decor_mem::select::tablefactor_to_view (10 samples, 0.22%)</title><rect x="62.8438%" y="661" width="0.2218%" height="15" fill="rgb(215,124,48)"/><text x="63.0938%" y="671.50"></text></g><g><title>core::fmt::write (8 samples, 0.18%)</title><rect x="62.8882%" y="645" width="0.1775%" height="15" fill="rgb(216,46,13)"/><text x="63.1382%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (7 samples, 0.16%)</title><rect x="62.9104%" y="629" width="0.1553%" height="15" fill="rgb(205,184,25)"/><text x="63.1604%" y="639.50"></text></g><g><title>decor_mem::select::get_query_results (617 samples, 13.69%)</title><rect x="49.5120%" y="693" width="13.6868%" height="15" fill="rgb(228,1,10)"/><text x="49.7620%" y="703.50">decor_mem::select::ge..</text></g><g><title>decor_mem::select::get_setexpr_results (594 samples, 13.18%)</title><rect x="50.0222%" y="677" width="13.1766%" height="15" fill="rgb(213,116,27)"/><text x="50.2722%" y="687.50">decor_mem::select::g..</text></g><g><title>hashbrown::map::make_hash (6 samples, 0.13%)</title><rect x="63.0657%" y="661" width="0.1331%" height="15" fill="rgb(241,95,50)"/><text x="63.3157%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (15 samples, 0.33%)</title><rect x="63.3984%" y="597" width="0.3327%" height="15" fill="rgb(238,48,32)"/><text x="63.6484%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (11 samples, 0.24%)</title><rect x="63.4871%" y="581" width="0.2440%" height="15" fill="rgb(235,113,49)"/><text x="63.7371%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (8 samples, 0.18%)</title><rect x="63.5537%" y="565" width="0.1775%" height="15" fill="rgb(205,127,43)"/><text x="63.8037%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (8 samples, 0.18%)</title><rect x="63.5537%" y="549" width="0.1775%" height="15" fill="rgb(250,162,2)"/><text x="63.8037%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.42%)</title><rect x="63.3319%" y="629" width="0.4215%" height="15" fill="rgb(220,13,41)"/><text x="63.5819%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (19 samples, 0.42%)</title><rect x="63.3319%" y="613" width="0.4215%" height="15" fill="rgb(249,221,25)"/><text x="63.5819%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (20 samples, 0.44%)</title><rect x="63.3319%" y="645" width="0.4437%" height="15" fill="rgb(215,208,19)"/><text x="63.5819%" y="655.50"></text></g><g><title>core::fmt::write (28 samples, 0.62%)</title><rect x="63.2875%" y="661" width="0.6211%" height="15" fill="rgb(236,175,2)"/><text x="63.5375%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.13%)</title><rect x="63.7755%" y="645" width="0.1331%" height="15" fill="rgb(241,52,2)"/><text x="64.0255%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.13%)</title><rect x="63.7755%" y="629" width="0.1331%" height="15" fill="rgb(248,140,14)"/><text x="64.0255%" y="639.50"></text></g><g><title>decor_mem::views::Views::insert (35 samples, 0.78%)</title><rect x="63.1988%" y="693" width="0.7764%" height="15" fill="rgb(253,22,42)"/><text x="63.4488%" y="703.50"></text></g><g><title>decor_mem::views::View::insert_into_index (33 samples, 0.73%)</title><rect x="63.2431%" y="677" width="0.7320%" height="15" fill="rgb(234,61,47)"/><text x="63.4931%" y="687.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (739 samples, 16.39%)</title><rect x="47.6930%" y="725" width="16.3931%" height="15" fill="rgb(208,226,15)"/><text x="47.9430%" y="735.50">decor_mem::query_transfor..</text></g><g><title>decor_mem::query_transformer::QueryTransformer::issue_statement (739 samples, 16.39%)</title><rect x="47.6930%" y="709" width="16.3931%" height="15" fill="rgb(217,221,4)"/><text x="47.9430%" y="719.50">decor_mem::query_transfor..</text></g><g><title>decor_mem::views::Views::update (5 samples, 0.11%)</title><rect x="63.9752%" y="693" width="0.1109%" height="15" fill="rgb(212,174,34)"/><text x="64.2252%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (7 samples, 0.16%)</title><rect x="64.0861%" y="709" width="0.1553%" height="15" fill="rgb(253,83,4)"/><text x="64.3361%" y="719.50"></text></g><g><title>page_fault (9 samples, 0.20%)</title><rect x="64.3744%" y="645" width="0.1996%" height="15" fill="rgb(250,195,49)"/><text x="64.6244%" y="655.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.20%)</title><rect x="64.3744%" y="629" width="0.1996%" height="15" fill="rgb(241,192,25)"/><text x="64.6244%" y="639.50"></text></g><g><title>handle_mm_fault (8 samples, 0.18%)</title><rect x="64.3966%" y="613" width="0.1775%" height="15" fill="rgb(208,124,10)"/><text x="64.6466%" y="623.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.16%)</title><rect x="64.4188%" y="597" width="0.1553%" height="15" fill="rgb(222,33,0)"/><text x="64.6688%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.29%)</title><rect x="64.3301%" y="661" width="0.2884%" height="15" fill="rgb(234,209,28)"/><text x="64.5801%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.13%)</title><rect x="64.6185%" y="645" width="0.1331%" height="15" fill="rgb(224,11,23)"/><text x="64.8685%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (24 samples, 0.53%)</title><rect x="64.2413%" y="709" width="0.5324%" height="15" fill="rgb(232,99,1)"/><text x="64.4913%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (23 samples, 0.51%)</title><rect x="64.2635%" y="693" width="0.5102%" height="15" fill="rgb(237,95,45)"/><text x="64.5135%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (20 samples, 0.44%)</title><rect x="64.3301%" y="677" width="0.4437%" height="15" fill="rgb(208,109,11)"/><text x="64.5801%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.16%)</title><rect x="64.6185%" y="661" width="0.1553%" height="15" fill="rgb(216,190,48)"/><text x="64.8685%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.11%)</title><rect x="64.8846%" y="693" width="0.1109%" height="15" fill="rgb(251,171,36)"/><text x="65.1346%" y="703.50"></text></g><g><title>malloc_consolidate (6 samples, 0.13%)</title><rect x="65.4392%" y="613" width="0.1331%" height="15" fill="rgb(230,62,22)"/><text x="65.6892%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.44%)</title><rect x="65.1508%" y="677" width="0.4437%" height="15" fill="rgb(225,114,35)"/><text x="65.4008%" y="687.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.42%)</title><rect x="65.1730%" y="661" width="0.4215%" height="15" fill="rgb(215,118,42)"/><text x="65.4230%" y="671.50"></text></g><g><title>_int_realloc (18 samples, 0.40%)</title><rect x="65.1952%" y="645" width="0.3993%" height="15" fill="rgb(243,119,21)"/><text x="65.4452%" y="655.50"></text></g><g><title>_int_malloc (14 samples, 0.31%)</title><rect x="65.2839%" y="629" width="0.3106%" height="15" fill="rgb(252,177,53)"/><text x="65.5339%" y="639.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (6 samples, 0.13%)</title><rect x="65.8829%" y="661" width="0.1331%" height="15" fill="rgb(237,209,29)"/><text x="66.1329%" y="671.50"></text></g><g><title>alloc::string::String::push (7 samples, 0.16%)</title><rect x="66.5262%" y="629" width="0.1553%" height="15" fill="rgb(212,65,23)"/><text x="66.7762%" y="639.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (47 samples, 1.04%)</title><rect x="66.0160%" y="661" width="1.0426%" height="15" fill="rgb(230,222,46)"/><text x="66.2660%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (29 samples, 0.64%)</title><rect x="66.4153%" y="645" width="0.6433%" height="15" fill="rgb(215,135,32)"/><text x="66.6653%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (17 samples, 0.38%)</title><rect x="66.6815%" y="629" width="0.3771%" height="15" fill="rgb(246,101,22)"/><text x="66.9315%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (15 samples, 0.33%)</title><rect x="66.7258%" y="613" width="0.3327%" height="15" fill="rgb(206,107,13)"/><text x="66.9758%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (15 samples, 0.33%)</title><rect x="66.7258%" y="597" width="0.3327%" height="15" fill="rgb(250,100,44)"/><text x="66.9758%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (7 samples, 0.16%)</title><rect x="66.9033%" y="581" width="0.1553%" height="15" fill="rgb(231,147,38)"/><text x="67.1533%" y="591.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (69 samples, 1.53%)</title><rect x="65.6167%" y="677" width="1.5306%" height="15" fill="rgb(229,8,40)"/><text x="65.8667%" y="687.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.31%)</title><rect x="67.3248%" y="645" width="0.3106%" height="15" fill="rgb(221,135,30)"/><text x="67.5748%" y="655.50"></text></g><g><title>_int_malloc (7 samples, 0.16%)</title><rect x="67.4800%" y="629" width="0.1553%" height="15" fill="rgb(249,193,18)"/><text x="67.7300%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.33%)</title><rect x="67.3248%" y="661" width="0.3327%" height="15" fill="rgb(209,133,39)"/><text x="67.5748%" y="671.50"></text></g><g><title>decor_mem::sqlparser_cache::ParserCache::get_single_parsed_stmt (164 samples, 3.64%)</title><rect x="64.0861%" y="725" width="3.6380%" height="15" fill="rgb(232,100,14)"/><text x="64.3361%" y="735.50">deco..</text></g><g><title>sql_parser::parser::parse_statements (133 samples, 2.95%)</title><rect x="64.7737%" y="709" width="2.9503%" height="15" fill="rgb(224,185,1)"/><text x="65.0237%" y="719.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (123 samples, 2.73%)</title><rect x="64.9956%" y="693" width="2.7285%" height="15" fill="rgb(223,139,8)"/><text x="65.2456%" y="703.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (26 samples, 0.58%)</title><rect x="67.1473%" y="677" width="0.5768%" height="15" fill="rgb(232,213,38)"/><text x="67.3973%" y="687.50"></text></g><g><title>malloc_consolidate (50 samples, 1.11%)</title><rect x="67.7240%" y="613" width="1.1091%" height="15" fill="rgb(207,94,22)"/><text x="67.9740%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (11 samples, 0.24%)</title><rect x="68.5892%" y="597" width="0.2440%" height="15" fill="rgb(219,183,54)"/><text x="68.8392%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 1.13%)</title><rect x="67.7240%" y="677" width="1.1313%" height="15" fill="rgb(216,185,54)"/><text x="67.9740%" y="687.50"></text></g><g><title>__GI___libc_realloc (51 samples, 1.13%)</title><rect x="67.7240%" y="661" width="1.1313%" height="15" fill="rgb(254,217,39)"/><text x="67.9740%" y="671.50"></text></g><g><title>_int_realloc (51 samples, 1.13%)</title><rect x="67.7240%" y="645" width="1.1313%" height="15" fill="rgb(240,178,23)"/><text x="67.9740%" y="655.50"></text></g><g><title>_int_malloc (51 samples, 1.13%)</title><rect x="67.7240%" y="629" width="1.1313%" height="15" fill="rgb(218,11,47)"/><text x="67.9740%" y="639.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.13%)</title><rect x="69.1216%" y="645" width="0.1331%" height="15" fill="rgb(218,51,51)"/><text x="69.3716%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.24%)</title><rect x="69.2547%" y="645" width="0.2440%" height="15" fill="rgb(238,126,27)"/><text x="69.5047%" y="655.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (62 samples, 1.38%)</title><rect x="68.8776%" y="661" width="1.3753%" height="15" fill="rgb(249,202,22)"/><text x="69.1276%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (31 samples, 0.69%)</title><rect x="69.5652%" y="645" width="0.6877%" height="15" fill="rgb(254,195,49)"/><text x="69.8152%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (22 samples, 0.49%)</title><rect x="69.7649%" y="629" width="0.4880%" height="15" fill="rgb(208,123,14)"/><text x="70.0149%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (18 samples, 0.40%)</title><rect x="69.8536%" y="613" width="0.3993%" height="15" fill="rgb(224,200,8)"/><text x="70.1036%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (18 samples, 0.40%)</title><rect x="69.8536%" y="597" width="0.3993%" height="15" fill="rgb(217,61,36)"/><text x="70.1036%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (9 samples, 0.20%)</title><rect x="70.0532%" y="581" width="0.1996%" height="15" fill="rgb(206,35,45)"/><text x="70.3032%" y="591.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (64 samples, 1.42%)</title><rect x="68.8554%" y="677" width="1.4197%" height="15" fill="rgb(217,65,33)"/><text x="69.1054%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1,032 samples, 22.89%)</title><rect x="47.5599%" y="757" width="22.8926%" height="15" fill="rgb(222,158,48)"/><text x="47.8099%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::..</text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1,026 samples, 22.76%)</title><rect x="47.6930%" y="741" width="22.7595%" height="15" fill="rgb(254,2,54)"/><text x="47.9430%" y="751.50">&lt;decor_mem::Shim as msql_srv::MysqlS..</text></g><g><title>decor_mem::stats::get_qtype (123 samples, 2.73%)</title><rect x="67.7240%" y="725" width="2.7285%" height="15" fill="rgb(250,143,38)"/><text x="67.9740%" y="735.50">de..</text></g><g><title>sql_parser::parser::parse_statements (123 samples, 2.73%)</title><rect x="67.7240%" y="709" width="2.7285%" height="15" fill="rgb(248,25,0)"/><text x="67.9740%" y="719.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (123 samples, 2.73%)</title><rect x="67.7240%" y="693" width="2.7285%" height="15" fill="rgb(206,152,27)"/><text x="67.9740%" y="703.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_number (8 samples, 0.18%)</title><rect x="70.2751%" y="677" width="0.1775%" height="15" fill="rgb(240,77,30)"/><text x="70.5251%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.18%)</title><rect x="70.2751%" y="661" width="0.1775%" height="15" fill="rgb(231,5,3)"/><text x="70.5251%" y="671.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.18%)</title><rect x="70.2751%" y="645" width="0.1775%" height="15" fill="rgb(207,226,32)"/><text x="70.5251%" y="655.50"></text></g><g><title>_int_malloc (8 samples, 0.18%)</title><rect x="70.2751%" y="629" width="0.1775%" height="15" fill="rgb(222,207,47)"/><text x="70.5251%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (7 samples, 0.16%)</title><rect x="70.6300%" y="693" width="0.1553%" height="15" fill="rgb(229,115,45)"/><text x="70.8800%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (12 samples, 0.27%)</title><rect x="70.5634%" y="725" width="0.2662%" height="15" fill="rgb(224,191,6)"/><text x="70.8134%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (9 samples, 0.20%)</title><rect x="70.6300%" y="709" width="0.1996%" height="15" fill="rgb(230,227,24)"/><text x="70.8800%" y="719.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="71.4508%" y="677" width="0.1109%" height="15" fill="rgb(228,80,19)"/><text x="71.7008%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="71.4508%" y="661" width="0.1109%" height="15" fill="rgb(247,229,0)"/><text x="71.7008%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.22%)</title><rect x="71.5839%" y="677" width="0.2218%" height="15" fill="rgb(237,194,15)"/><text x="71.8339%" y="687.50"></text></g><g><title>_int_free (8 samples, 0.18%)</title><rect x="71.8500%" y="677" width="0.1775%" height="15" fill="rgb(219,203,20)"/><text x="72.1000%" y="687.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (6 samples, 0.13%)</title><rect x="72.3824%" y="661" width="0.1331%" height="15" fill="rgb(234,128,8)"/><text x="72.6324%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="72.4046%" y="645" width="0.1109%" height="15" fill="rgb(248,202,8)"/><text x="72.6546%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="72.4046%" y="629" width="0.1109%" height="15" fill="rgb(206,104,37)"/><text x="72.6546%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.11%)</title><rect x="72.4046%" y="613" width="0.1109%" height="15" fill="rgb(223,8,27)"/><text x="72.6546%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.11%)</title><rect x="72.4046%" y="597" width="0.1109%" height="15" fill="rgb(216,217,28)"/><text x="72.6546%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.11%)</title><rect x="72.6708%" y="517" width="0.1109%" height="15" fill="rgb(249,199,1)"/><text x="72.9208%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.13%)</title><rect x="72.6708%" y="581" width="0.1331%" height="15" fill="rgb(240,85,17)"/><text x="72.9208%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.13%)</title><rect x="72.6708%" y="565" width="0.1331%" height="15" fill="rgb(206,108,45)"/><text x="72.9208%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (6 samples, 0.13%)</title><rect x="72.6708%" y="549" width="0.1331%" height="15" fill="rgb(245,210,41)"/><text x="72.9208%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.13%)</title><rect x="72.6708%" y="533" width="0.1331%" height="15" fill="rgb(206,13,37)"/><text x="72.9208%" y="543.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.13%)</title><rect x="72.8039%" y="469" width="0.1331%" height="15" fill="rgb(250,61,18)"/><text x="73.0539%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.31%)</title><rect x="72.6486%" y="645" width="0.3106%" height="15" fill="rgb(235,172,48)"/><text x="72.8986%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.31%)</title><rect x="72.6486%" y="629" width="0.3106%" height="15" fill="rgb(249,201,17)"/><text x="72.8986%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.31%)</title><rect x="72.6486%" y="613" width="0.3106%" height="15" fill="rgb(219,208,6)"/><text x="72.8986%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.29%)</title><rect x="72.6708%" y="597" width="0.2884%" height="15" fill="rgb(248,31,23)"/><text x="72.9208%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.16%)</title><rect x="72.8039%" y="581" width="0.1553%" height="15" fill="rgb(245,15,42)"/><text x="73.0539%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.16%)</title><rect x="72.8039%" y="565" width="0.1553%" height="15" fill="rgb(222,217,39)"/><text x="73.0539%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.16%)</title><rect x="72.8039%" y="549" width="0.1553%" height="15" fill="rgb(210,219,27)"/><text x="73.0539%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.16%)</title><rect x="72.8039%" y="533" width="0.1553%" height="15" fill="rgb(252,166,36)"/><text x="73.0539%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.16%)</title><rect x="72.8039%" y="517" width="0.1553%" height="15" fill="rgb(245,132,34)"/><text x="73.0539%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.16%)</title><rect x="72.8039%" y="501" width="0.1553%" height="15" fill="rgb(236,54,3)"/><text x="73.0539%" y="511.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.16%)</title><rect x="72.8039%" y="485" width="0.1553%" height="15" fill="rgb(241,173,43)"/><text x="73.0539%" y="495.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (6 samples, 0.13%)</title><rect x="72.9814%" y="629" width="0.1331%" height="15" fill="rgb(215,190,9)"/><text x="73.2314%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (48 samples, 1.06%)</title><rect x="72.0719%" y="677" width="1.0648%" height="15" fill="rgb(242,101,16)"/><text x="72.3219%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (28 samples, 0.62%)</title><rect x="72.5155%" y="661" width="0.6211%" height="15" fill="rgb(223,190,21)"/><text x="72.7655%" y="671.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.16%)</title><rect x="72.9814%" y="645" width="0.1553%" height="15" fill="rgb(215,228,25)"/><text x="73.2314%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (27 samples, 0.60%)</title><rect x="73.1366%" y="677" width="0.5989%" height="15" fill="rgb(225,36,22)"/><text x="73.3866%" y="687.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.53%)</title><rect x="73.9574%" y="485" width="0.5324%" height="15" fill="rgb(251,106,46)"/><text x="74.2074%" y="495.50"></text></g><g><title>_int_malloc (19 samples, 0.42%)</title><rect x="74.0683%" y="469" width="0.4215%" height="15" fill="rgb(208,90,1)"/><text x="74.3183%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (29 samples, 0.64%)</title><rect x="73.8909%" y="661" width="0.6433%" height="15" fill="rgb(243,10,4)"/><text x="74.1409%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.64%)</title><rect x="73.8909%" y="645" width="0.6433%" height="15" fill="rgb(212,137,27)"/><text x="74.1409%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.62%)</title><rect x="73.9130%" y="629" width="0.6211%" height="15" fill="rgb(231,220,49)"/><text x="74.1630%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.60%)</title><rect x="73.9352%" y="613" width="0.5989%" height="15" fill="rgb(237,96,20)"/><text x="74.1852%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.58%)</title><rect x="73.9574%" y="597" width="0.5768%" height="15" fill="rgb(239,229,30)"/><text x="74.2074%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (26 samples, 0.58%)</title><rect x="73.9574%" y="581" width="0.5768%" height="15" fill="rgb(219,65,33)"/><text x="74.2074%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.58%)</title><rect x="73.9574%" y="565" width="0.5768%" height="15" fill="rgb(243,134,7)"/><text x="74.2074%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.58%)</title><rect x="73.9574%" y="549" width="0.5768%" height="15" fill="rgb(216,177,54)"/><text x="74.2074%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (26 samples, 0.58%)</title><rect x="73.9574%" y="533" width="0.5768%" height="15" fill="rgb(211,160,20)"/><text x="74.2074%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.58%)</title><rect x="73.9574%" y="517" width="0.5768%" height="15" fill="rgb(239,85,39)"/><text x="74.2074%" y="527.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.58%)</title><rect x="73.9574%" y="501" width="0.5768%" height="15" fill="rgb(232,125,22)"/><text x="74.2074%" y="511.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (7 samples, 0.16%)</title><rect x="74.5342%" y="661" width="0.1553%" height="15" fill="rgb(244,57,34)"/><text x="74.7842%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.16%)</title><rect x="74.5342%" y="645" width="0.1553%" height="15" fill="rgb(214,203,32)"/><text x="74.7842%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.13%)</title><rect x="74.5563%" y="629" width="0.1331%" height="15" fill="rgb(207,58,43)"/><text x="74.8063%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.13%)</title><rect x="74.5563%" y="613" width="0.1331%" height="15" fill="rgb(215,193,15)"/><text x="74.8063%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.13%)</title><rect x="74.5563%" y="597" width="0.1331%" height="15" fill="rgb(232,15,44)"/><text x="74.8063%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.13%)</title><rect x="74.5563%" y="581" width="0.1331%" height="15" fill="rgb(212,3,48)"/><text x="74.8063%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.13%)</title><rect x="74.5563%" y="565" width="0.1331%" height="15" fill="rgb(218,128,7)"/><text x="74.8063%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="74.5563%" y="549" width="0.1331%" height="15" fill="rgb(226,216,39)"/><text x="74.8063%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.13%)</title><rect x="74.5563%" y="533" width="0.1331%" height="15" fill="rgb(243,47,51)"/><text x="74.8063%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.13%)</title><rect x="74.5563%" y="517" width="0.1331%" height="15" fill="rgb(241,183,40)"/><text x="74.8063%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.13%)</title><rect x="74.5563%" y="501" width="0.1331%" height="15" fill="rgb(231,217,32)"/><text x="74.8063%" y="511.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.13%)</title><rect x="74.5563%" y="485" width="0.1331%" height="15" fill="rgb(229,61,38)"/><text x="74.8063%" y="495.50"></text></g><g><title>__GI___libc_free (9 samples, 0.20%)</title><rect x="74.6894%" y="661" width="0.1996%" height="15" fill="rgb(225,210,5)"/><text x="74.9394%" y="671.50"></text></g><g><title>_int_free (5 samples, 0.11%)</title><rect x="74.9556%" y="661" width="0.1109%" height="15" fill="rgb(231,79,45)"/><text x="75.2056%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (206 samples, 4.57%)</title><rect x="70.5634%" y="741" width="4.5697%" height="15" fill="rgb(224,100,7)"/><text x="70.8134%" y="751.50">sql_p..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (194 samples, 4.30%)</title><rect x="70.8296%" y="725" width="4.3035%" height="15" fill="rgb(241,198,18)"/><text x="71.0796%" y="735.50">sql_p..</text></g><g><title>sql_parser::parser::Parser::check_descent (194 samples, 4.30%)</title><rect x="70.8296%" y="709" width="4.3035%" height="15" fill="rgb(252,97,53)"/><text x="71.0796%" y="719.50">sql_p..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (194 samples, 4.30%)</title><rect x="70.8296%" y="693" width="4.3035%" height="15" fill="rgb(220,88,7)"/><text x="71.0796%" y="703.50">sql_p..</text></g><g><title>sql_parser::parser::Parser::parse_value (63 samples, 1.40%)</title><rect x="73.7356%" y="677" width="1.3975%" height="15" fill="rgb(213,176,14)"/><text x="73.9856%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.60%)</title><rect x="75.1553%" y="645" width="0.5989%" height="15" fill="rgb(246,73,7)"/><text x="75.4053%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.60%)</title><rect x="75.1553%" y="629" width="0.5989%" height="15" fill="rgb(245,64,36)"/><text x="75.4053%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.60%)</title><rect x="75.1553%" y="613" width="0.5989%" height="15" fill="rgb(245,80,10)"/><text x="75.4053%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.60%)</title><rect x="75.1553%" y="597" width="0.5989%" height="15" fill="rgb(232,107,50)"/><text x="75.4053%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (27 samples, 0.60%)</title><rect x="75.1553%" y="581" width="0.5989%" height="15" fill="rgb(253,3,0)"/><text x="75.4053%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.60%)</title><rect x="75.1553%" y="565" width="0.5989%" height="15" fill="rgb(212,99,53)"/><text x="75.4053%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (27 samples, 0.60%)</title><rect x="75.1553%" y="549" width="0.5989%" height="15" fill="rgb(249,111,54)"/><text x="75.4053%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.60%)</title><rect x="75.1553%" y="533" width="0.5989%" height="15" fill="rgb(249,55,30)"/><text x="75.4053%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.60%)</title><rect x="75.1553%" y="517" width="0.5989%" height="15" fill="rgb(237,47,42)"/><text x="75.4053%" y="527.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (28 samples, 0.62%)</title><rect x="75.1553%" y="677" width="0.6211%" height="15" fill="rgb(211,20,18)"/><text x="75.4053%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::expected (28 samples, 0.62%)</title><rect x="75.1553%" y="661" width="0.6211%" height="15" fill="rgb(231,203,46)"/><text x="75.4053%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (34 samples, 0.75%)</title><rect x="75.1331%" y="725" width="0.7542%" height="15" fill="rgb(237,142,3)"/><text x="75.3831%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (34 samples, 0.75%)</title><rect x="75.1331%" y="709" width="0.7542%" height="15" fill="rgb(241,107,1)"/><text x="75.3831%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (34 samples, 0.75%)</title><rect x="75.1331%" y="693" width="0.7542%" height="15" fill="rgb(229,83,13)"/><text x="75.3831%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.11%)</title><rect x="76.2866%" y="661" width="0.1109%" height="15" fill="rgb(241,91,40)"/><text x="76.5366%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.11%)</title><rect x="76.4197%" y="613" width="0.1109%" height="15" fill="rgb(225,3,45)"/><text x="76.6697%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.16%)</title><rect x="76.3975%" y="661" width="0.1553%" height="15" fill="rgb(244,223,14)"/><text x="76.6475%" y="671.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.13%)</title><rect x="76.4197%" y="645" width="0.1331%" height="15" fill="rgb(224,124,37)"/><text x="76.6697%" y="655.50"></text></g><g><title>_int_realloc (6 samples, 0.13%)</title><rect x="76.4197%" y="629" width="0.1331%" height="15" fill="rgb(251,171,30)"/><text x="76.6697%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (25 samples, 0.55%)</title><rect x="76.0426%" y="677" width="0.5546%" height="15" fill="rgb(236,46,54)"/><text x="76.2926%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (11 samples, 0.24%)</title><rect x="76.5972%" y="677" width="0.2440%" height="15" fill="rgb(245,213,5)"/><text x="76.8472%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (72 samples, 1.60%)</title><rect x="75.8873%" y="693" width="1.5972%" height="15" fill="rgb(230,144,27)"/><text x="76.1373%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (29 samples, 0.64%)</title><rect x="76.8412%" y="677" width="0.6433%" height="15" fill="rgb(220,86,6)"/><text x="77.0912%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (12 samples, 0.27%)</title><rect x="77.2183%" y="661" width="0.2662%" height="15" fill="rgb(240,20,13)"/><text x="77.4683%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (98 samples, 2.17%)</title><rect x="75.8873%" y="709" width="2.1739%" height="15" fill="rgb(217,89,34)"/><text x="76.1373%" y="719.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (26 samples, 0.58%)</title><rect x="77.4845%" y="693" width="0.5768%" height="15" fill="rgb(229,13,5)"/><text x="77.7345%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (6 samples, 0.13%)</title><rect x="78.1056%" y="677" width="0.1331%" height="15" fill="rgb(244,67,35)"/><text x="78.3556%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (353 samples, 7.83%)</title><rect x="70.5413%" y="757" width="7.8305%" height="15" fill="rgb(221,40,2)"/><text x="70.7913%" y="767.50">sql_parser:..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (146 samples, 3.24%)</title><rect x="75.1331%" y="741" width="3.2387%" height="15" fill="rgb(237,157,21)"/><text x="75.3831%" y="751.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_select (112 samples, 2.48%)</title><rect x="75.8873%" y="725" width="2.4845%" height="15" fill="rgb(222,94,11)"/><text x="76.1373%" y="735.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (14 samples, 0.31%)</title><rect x="78.0612%" y="709" width="0.3106%" height="15" fill="rgb(249,113,6)"/><text x="78.3112%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_factor (14 samples, 0.31%)</title><rect x="78.0612%" y="693" width="0.3106%" height="15" fill="rgb(238,137,36)"/><text x="78.3112%" y="703.50"></text></g><g><title>_int_free (8 samples, 0.18%)</title><rect x="78.5492%" y="661" width="0.1775%" height="15" fill="rgb(210,102,26)"/><text x="78.7992%" y="671.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.38%)</title><rect x="79.1704%" y="389" width="0.3771%" height="15" fill="rgb(218,30,30)"/><text x="79.4204%" y="399.50"></text></g><g><title>_int_realloc (11 samples, 0.24%)</title><rect x="79.3035%" y="373" width="0.2440%" height="15" fill="rgb(214,67,26)"/><text x="79.5535%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (24 samples, 0.53%)</title><rect x="79.0373%" y="517" width="0.5324%" height="15" fill="rgb(251,9,53)"/><text x="79.2873%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.53%)</title><rect x="79.0373%" y="501" width="0.5324%" height="15" fill="rgb(228,204,25)"/><text x="79.2873%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (24 samples, 0.53%)</title><rect x="79.0373%" y="485" width="0.5324%" height="15" fill="rgb(207,153,8)"/><text x="79.2873%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.47%)</title><rect x="79.1038%" y="469" width="0.4658%" height="15" fill="rgb(242,9,16)"/><text x="79.3538%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.44%)</title><rect x="79.1260%" y="453" width="0.4437%" height="15" fill="rgb(217,211,10)"/><text x="79.3760%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (18 samples, 0.40%)</title><rect x="79.1704%" y="437" width="0.3993%" height="15" fill="rgb(219,228,52)"/><text x="79.4204%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.40%)</title><rect x="79.1704%" y="421" width="0.3993%" height="15" fill="rgb(231,92,29)"/><text x="79.4204%" y="431.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.40%)</title><rect x="79.1704%" y="405" width="0.3993%" height="15" fill="rgb(232,8,23)"/><text x="79.4204%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (36 samples, 0.80%)</title><rect x="78.9264%" y="613" width="0.7986%" height="15" fill="rgb(216,211,34)"/><text x="79.1764%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35 samples, 0.78%)</title><rect x="78.9485%" y="597" width="0.7764%" height="15" fill="rgb(236,151,0)"/><text x="79.1985%" y="607.50"></text></g><g><title>alloc::string::String::push_str (35 samples, 0.78%)</title><rect x="78.9485%" y="581" width="0.7764%" height="15" fill="rgb(209,168,3)"/><text x="79.1985%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (35 samples, 0.78%)</title><rect x="78.9485%" y="565" width="0.7764%" height="15" fill="rgb(208,129,28)"/><text x="79.1985%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (35 samples, 0.78%)</title><rect x="78.9485%" y="549" width="0.7764%" height="15" fill="rgb(229,78,22)"/><text x="79.1985%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (35 samples, 0.78%)</title><rect x="78.9485%" y="533" width="0.7764%" height="15" fill="rgb(228,187,13)"/><text x="79.1985%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.16%)</title><rect x="79.5697%" y="517" width="0.1553%" height="15" fill="rgb(240,119,24)"/><text x="79.8197%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.13%)</title><rect x="79.5918%" y="501" width="0.1331%" height="15" fill="rgb(209,194,42)"/><text x="79.8418%" y="511.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (62 samples, 1.38%)</title><rect x="78.4605%" y="757" width="1.3753%" height="15" fill="rgb(247,200,46)"/><text x="78.7105%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (58 samples, 1.29%)</title><rect x="78.5492%" y="741" width="1.2866%" height="15" fill="rgb(218,76,16)"/><text x="78.7992%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (58 samples, 1.29%)</title><rect x="78.5492%" y="725" width="1.2866%" height="15" fill="rgb(225,21,48)"/><text x="78.7992%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (58 samples, 1.29%)</title><rect x="78.5492%" y="709" width="1.2866%" height="15" fill="rgb(239,223,50)"/><text x="78.7992%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (58 samples, 1.29%)</title><rect x="78.5492%" y="693" width="1.2866%" height="15" fill="rgb(244,45,21)"/><text x="78.7992%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (58 samples, 1.29%)</title><rect x="78.5492%" y="677" width="1.2866%" height="15" fill="rgb(232,33,43)"/><text x="78.7992%" y="687.50"></text></g><g><title>alloc::fmt::format (50 samples, 1.11%)</title><rect x="78.7267%" y="661" width="1.1091%" height="15" fill="rgb(209,8,3)"/><text x="78.9767%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (47 samples, 1.04%)</title><rect x="78.7933%" y="645" width="1.0426%" height="15" fill="rgb(214,25,53)"/><text x="79.0433%" y="655.50"></text></g><g><title>core::fmt::write (47 samples, 1.04%)</title><rect x="78.7933%" y="629" width="1.0426%" height="15" fill="rgb(254,186,54)"/><text x="79.0433%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (5 samples, 0.11%)</title><rect x="79.9911%" y="741" width="0.1109%" height="15" fill="rgb(208,174,49)"/><text x="80.2411%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.11%)</title><rect x="79.9911%" y="725" width="0.1109%" height="15" fill="rgb(233,191,51)"/><text x="80.2411%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (5 samples, 0.11%)</title><rect x="79.9911%" y="709" width="0.1109%" height="15" fill="rgb(222,134,10)"/><text x="80.2411%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.11%)</title><rect x="79.9911%" y="693" width="0.1109%" height="15" fill="rgb(230,226,20)"/><text x="80.2411%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (5 samples, 0.11%)</title><rect x="79.9911%" y="677" width="0.1109%" height="15" fill="rgb(251,111,25)"/><text x="80.2411%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.16%)</title><rect x="80.2130%" y="661" width="0.1553%" height="15" fill="rgb(224,40,46)"/><text x="80.4630%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (6 samples, 0.13%)</title><rect x="80.3682%" y="661" width="0.1331%" height="15" fill="rgb(236,108,47)"/><text x="80.6182%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (19 samples, 0.42%)</title><rect x="80.1020%" y="709" width="0.4215%" height="15" fill="rgb(234,93,0)"/><text x="80.3520%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (19 samples, 0.42%)</title><rect x="80.1020%" y="693" width="0.4215%" height="15" fill="rgb(224,213,32)"/><text x="80.3520%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 0.38%)</title><rect x="80.1464%" y="677" width="0.3771%" height="15" fill="rgb(251,11,48)"/><text x="80.3964%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.11%)</title><rect x="80.8341%" y="613" width="0.1109%" height="15" fill="rgb(236,173,5)"/><text x="81.0841%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.11%)</title><rect x="80.8341%" y="597" width="0.1109%" height="15" fill="rgb(230,95,12)"/><text x="81.0841%" y="607.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.11%)</title><rect x="80.8341%" y="581" width="0.1109%" height="15" fill="rgb(232,209,1)"/><text x="81.0841%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.11%)</title><rect x="80.8341%" y="565" width="0.1109%" height="15" fill="rgb(232,6,1)"/><text x="81.0841%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.11%)</title><rect x="80.8341%" y="549" width="0.1109%" height="15" fill="rgb(210,224,50)"/><text x="81.0841%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.11%)</title><rect x="80.8341%" y="533" width="0.1109%" height="15" fill="rgb(228,127,35)"/><text x="81.0841%" y="543.50"></text></g><g><title>alloc::fmt::format (15 samples, 0.33%)</title><rect x="80.7453%" y="661" width="0.3327%" height="15" fill="rgb(245,102,45)"/><text x="80.9953%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.31%)</title><rect x="80.7675%" y="645" width="0.3106%" height="15" fill="rgb(214,1,49)"/><text x="81.0175%" y="655.50"></text></g><g><title>core::fmt::write (13 samples, 0.29%)</title><rect x="80.7897%" y="629" width="0.2884%" height="15" fill="rgb(226,163,40)"/><text x="81.0397%" y="639.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (6 samples, 0.13%)</title><rect x="80.9450%" y="613" width="0.1331%" height="15" fill="rgb(239,212,28)"/><text x="81.1950%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.11%)</title><rect x="80.9672%" y="597" width="0.1109%" height="15" fill="rgb(220,20,13)"/><text x="81.2172%" y="607.50"></text></g><g><title>core::fmt::write (5 samples, 0.11%)</title><rect x="80.9672%" y="581" width="0.1109%" height="15" fill="rgb(210,164,35)"/><text x="81.2172%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (21 samples, 0.47%)</title><rect x="80.6344%" y="693" width="0.4658%" height="15" fill="rgb(248,109,41)"/><text x="80.8844%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::expected (19 samples, 0.42%)</title><rect x="80.6788%" y="677" width="0.4215%" height="15" fill="rgb(238,23,50)"/><text x="80.9288%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (49 samples, 1.09%)</title><rect x="80.1020%" y="725" width="1.0870%" height="15" fill="rgb(211,48,49)"/><text x="80.3520%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (30 samples, 0.67%)</title><rect x="80.5235%" y="709" width="0.6655%" height="15" fill="rgb(223,36,21)"/><text x="80.7735%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (56 samples, 1.24%)</title><rect x="79.9911%" y="757" width="1.2422%" height="15" fill="rgb(207,123,46)"/><text x="80.2411%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (51 samples, 1.13%)</title><rect x="80.1020%" y="741" width="1.1313%" height="15" fill="rgb(240,218,32)"/><text x="80.3520%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (13 samples, 0.29%)</title><rect x="81.2777%" y="677" width="0.2884%" height="15" fill="rgb(252,5,43)"/><text x="81.5277%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.13%)</title><rect x="81.4330%" y="661" width="0.1331%" height="15" fill="rgb(252,84,19)"/><text x="81.6830%" y="671.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.11%)</title><rect x="81.4552%" y="645" width="0.1109%" height="15" fill="rgb(243,152,39)"/><text x="81.7052%" y="655.50"></text></g><g><title>_int_realloc (5 samples, 0.11%)</title><rect x="81.4552%" y="629" width="0.1109%" height="15" fill="rgb(234,160,15)"/><text x="81.7052%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (28 samples, 0.62%)</title><rect x="81.2555%" y="693" width="0.6211%" height="15" fill="rgb(237,34,20)"/><text x="81.5055%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (10 samples, 0.22%)</title><rect x="81.6548%" y="677" width="0.2218%" height="15" fill="rgb(229,97,13)"/><text x="81.9048%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (37 samples, 0.82%)</title><rect x="81.2334%" y="757" width="0.8208%" height="15" fill="rgb(234,71,50)"/><text x="81.4834%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (36 samples, 0.80%)</title><rect x="81.2555%" y="741" width="0.7986%" height="15" fill="rgb(253,155,4)"/><text x="81.5055%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (36 samples, 0.80%)</title><rect x="81.2555%" y="725" width="0.7986%" height="15" fill="rgb(222,185,37)"/><text x="81.5055%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (36 samples, 0.80%)</title><rect x="81.2555%" y="709" width="0.7986%" height="15" fill="rgb(251,177,13)"/><text x="81.5055%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 0.18%)</title><rect x="81.8767%" y="693" width="0.1775%" height="15" fill="rgb(250,179,40)"/><text x="82.1267%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (13 samples, 0.29%)</title><rect x="82.2538%" y="709" width="0.2884%" height="15" fill="rgb(242,44,2)"/><text x="82.5038%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.11%)</title><rect x="82.6752%" y="693" width="0.1109%" height="15" fill="rgb(216,177,13)"/><text x="82.9252%" y="703.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (8 samples, 0.18%)</title><rect x="83.3851%" y="677" width="0.1775%" height="15" fill="rgb(216,106,43)"/><text x="83.6351%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="83.4516%" y="661" width="0.1109%" height="15" fill="rgb(216,183,2)"/><text x="83.7016%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="83.4516%" y="645" width="0.1109%" height="15" fill="rgb(249,75,3)"/><text x="83.7016%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.11%)</title><rect x="83.4516%" y="629" width="0.1109%" height="15" fill="rgb(219,67,39)"/><text x="83.7016%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.11%)</title><rect x="83.4516%" y="613" width="0.1109%" height="15" fill="rgb(253,228,2)"/><text x="83.7016%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="83.4516%" y="597" width="0.1109%" height="15" fill="rgb(235,138,27)"/><text x="83.7016%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.11%)</title><rect x="83.4516%" y="581" width="0.1109%" height="15" fill="rgb(236,97,51)"/><text x="83.7016%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.11%)</title><rect x="83.4516%" y="565" width="0.1109%" height="15" fill="rgb(240,80,30)"/><text x="83.7016%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.11%)</title><rect x="83.4516%" y="549" width="0.1109%" height="15" fill="rgb(230,178,19)"/><text x="83.7016%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.11%)</title><rect x="83.4516%" y="533" width="0.1109%" height="15" fill="rgb(210,190,27)"/><text x="83.7016%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.11%)</title><rect x="83.4516%" y="517" width="0.1109%" height="15" fill="rgb(222,107,31)"/><text x="83.7016%" y="527.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.11%)</title><rect x="83.4516%" y="501" width="0.1109%" height="15" fill="rgb(216,127,34)"/><text x="83.7016%" y="511.50"></text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.20%)</title><rect x="83.5626%" y="677" width="0.1996%" height="15" fill="rgb(234,116,52)"/><text x="83.8126%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (35 samples, 0.78%)</title><rect x="83.0302%" y="693" width="0.7764%" height="15" fill="rgb(222,124,15)"/><text x="83.2802%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_optional_alias (5 samples, 0.11%)</title><rect x="83.8066%" y="693" width="0.1109%" height="15" fill="rgb(231,179,28)"/><text x="84.0566%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.13%)</title><rect x="84.2724%" y="661" width="0.1331%" height="15" fill="rgb(226,93,45)"/><text x="84.5224%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (107 samples, 2.37%)</title><rect x="82.0541%" y="757" width="2.3736%" height="15" fill="rgb(215,8,51)"/><text x="82.3041%" y="767.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (107 samples, 2.37%)</title><rect x="82.0541%" y="741" width="2.3736%" height="15" fill="rgb(223,106,5)"/><text x="82.3041%" y="751.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (104 samples, 2.31%)</title><rect x="82.1207%" y="725" width="2.3070%" height="15" fill="rgb(250,191,5)"/><text x="82.3707%" y="735.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_select (85 samples, 1.89%)</title><rect x="82.5421%" y="709" width="1.8855%" height="15" fill="rgb(242,132,44)"/><text x="82.7921%" y="719.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (23 samples, 0.51%)</title><rect x="83.9175%" y="693" width="0.5102%" height="15" fill="rgb(251,152,29)"/><text x="84.1675%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (18 samples, 0.40%)</title><rect x="84.0284%" y="677" width="0.3993%" height="15" fill="rgb(218,179,5)"/><text x="84.2784%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.22%)</title><rect x="85.4481%" y="693" width="0.2218%" height="15" fill="rgb(227,67,19)"/><text x="85.6981%" y="703.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (45 samples, 1.00%)</title><rect x="84.6939%" y="709" width="0.9982%" height="15" fill="rgb(233,119,31)"/><text x="84.9439%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (55 samples, 1.22%)</title><rect x="84.4942%" y="757" width="1.2201%" height="15" fill="rgb(241,120,22)"/><text x="84.7442%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (54 samples, 1.20%)</title><rect x="84.5164%" y="741" width="1.1979%" height="15" fill="rgb(224,102,30)"/><text x="84.7664%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (54 samples, 1.20%)</title><rect x="84.5164%" y="725" width="1.1979%" height="15" fill="rgb(210,164,37)"/><text x="84.7664%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.18%)</title><rect x="85.8474%" y="581" width="0.1775%" height="15" fill="rgb(226,191,16)"/><text x="86.0974%" y="591.50"></text></g><g><title>core::fmt::write (8 samples, 0.18%)</title><rect x="85.8474%" y="565" width="0.1775%" height="15" fill="rgb(214,40,45)"/><text x="86.0974%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.18%)</title><rect x="85.8474%" y="549" width="0.1775%" height="15" fill="rgb(244,29,26)"/><text x="86.0974%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.18%)</title><rect x="85.8474%" y="533" width="0.1775%" height="15" fill="rgb(216,16,5)"/><text x="86.0974%" y="543.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.18%)</title><rect x="85.8474%" y="517" width="0.1775%" height="15" fill="rgb(249,76,35)"/><text x="86.0974%" y="527.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.11%)</title><rect x="85.9139%" y="501" width="0.1109%" height="15" fill="rgb(207,11,44)"/><text x="86.1639%" y="511.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (9 samples, 0.20%)</title><rect x="85.8474%" y="613" width="0.1996%" height="15" fill="rgb(228,190,49)"/><text x="86.0974%" y="623.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (9 samples, 0.20%)</title><rect x="85.8474%" y="597" width="0.1996%" height="15" fill="rgb(214,173,12)"/><text x="86.0974%" y="607.50"></text></g><g><title>start_thread (10 samples, 0.22%)</title><rect x="85.8474%" y="757" width="0.2218%" height="15" fill="rgb(218,26,35)"/><text x="86.0974%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.22%)</title><rect x="85.8474%" y="741" width="0.2218%" height="15" fill="rgb(220,200,19)"/><text x="86.0974%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 0.22%)</title><rect x="85.8474%" y="725" width="0.2218%" height="15" fill="rgb(239,95,49)"/><text x="86.0974%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 0.22%)</title><rect x="85.8474%" y="709" width="0.2218%" height="15" fill="rgb(235,85,53)"/><text x="86.0974%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10 samples, 0.22%)</title><rect x="85.8474%" y="693" width="0.2218%" height="15" fill="rgb(233,133,31)"/><text x="86.0974%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.22%)</title><rect x="85.8474%" y="677" width="0.2218%" height="15" fill="rgb(218,25,20)"/><text x="86.0974%" y="687.50"></text></g><g><title>decor_mem::Shim::run_on_tcp (10 samples, 0.22%)</title><rect x="85.8474%" y="661" width="0.2218%" height="15" fill="rgb(252,210,38)"/><text x="86.0974%" y="671.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (10 samples, 0.22%)</title><rect x="85.8474%" y="645" width="0.2218%" height="15" fill="rgb(242,134,21)"/><text x="86.0974%" y="655.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (10 samples, 0.22%)</title><rect x="85.8474%" y="629" width="0.2218%" height="15" fill="rgb(213,28,48)"/><text x="86.0974%" y="639.50"></text></g><g><title>[unknown] (3,480 samples, 77.20%)</title><rect x="9.1171%" y="773" width="77.1961%" height="15" fill="rgb(250,196,2)"/><text x="9.3671%" y="783.50">[unknown]</text></g><g><title>core::ptr::drop_in_place (18 samples, 0.40%)</title><rect x="86.6016%" y="613" width="0.3993%" height="15" fill="rgb(227,5,17)"/><text x="86.8516%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.40%)</title><rect x="86.6016%" y="597" width="0.3993%" height="15" fill="rgb(221,226,24)"/><text x="86.8516%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 0.40%)</title><rect x="86.6016%" y="581" width="0.3993%" height="15" fill="rgb(211,5,48)"/><text x="86.8516%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.24%)</title><rect x="86.7569%" y="565" width="0.2440%" height="15" fill="rgb(219,150,6)"/><text x="87.0069%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.20%)</title><rect x="87.0231%" y="581" width="0.1996%" height="15" fill="rgb(251,46,16)"/><text x="87.2731%" y="591.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (6 samples, 0.13%)</title><rect x="87.5111%" y="565" width="0.1331%" height="15" fill="rgb(220,204,40)"/><text x="87.7611%" y="575.50"></text></g><g><title>&lt;i64 as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (6 samples, 0.13%)</title><rect x="87.5111%" y="549" width="0.1331%" height="15" fill="rgb(211,85,2)"/><text x="87.7611%" y="559.50"></text></g><g><title>decor_mem::query_transformer::QueryTransformer::query (30 samples, 0.67%)</title><rect x="87.0009%" y="613" width="0.6655%" height="15" fill="rgb(229,17,7)"/><text x="87.2509%" y="623.50"></text></g><g><title>decor_mem::views::view_cols_rows_to_answer_rows (29 samples, 0.64%)</title><rect x="87.0231%" y="597" width="0.6433%" height="15" fill="rgb(239,72,28)"/><text x="87.2731%" y="607.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (8 samples, 0.18%)</title><rect x="87.4889%" y="581" width="0.1775%" height="15" fill="rgb(230,47,54)"/><text x="87.7389%" y="591.50"></text></g><g><title>decor_mem::stats::get_qtype (13 samples, 0.29%)</title><rect x="87.6664%" y="613" width="0.2884%" height="15" fill="rgb(214,50,8)"/><text x="87.9164%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.24%)</title><rect x="87.7107%" y="597" width="0.2440%" height="15" fill="rgb(216,198,43)"/><text x="87.9607%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.24%)</title><rect x="87.7107%" y="581" width="0.2440%" height="15" fill="rgb(234,20,35)"/><text x="87.9607%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.24%)</title><rect x="87.7107%" y="565" width="0.2440%" height="15" fill="rgb(254,45,19)"/><text x="87.9607%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.16%)</title><rect x="87.7995%" y="549" width="0.1553%" height="15" fill="rgb(219,14,44)"/><text x="88.0495%" y="559.50"></text></g><g><title>&lt;decor_mem::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (72 samples, 1.60%)</title><rect x="86.5129%" y="629" width="1.5972%" height="15" fill="rgb(217,220,26)"/><text x="86.7629%" y="639.50"></text></g><g><title>malloc_consolidate (6 samples, 0.13%)</title><rect x="88.3762%" y="517" width="0.1331%" height="15" fill="rgb(213,158,28)"/><text x="88.6262%" y="527.50"></text></g><g><title>_int_free (8 samples, 0.18%)</title><rect x="88.3540%" y="533" width="0.1775%" height="15" fill="rgb(252,51,52)"/><text x="88.6040%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.11%)</title><rect x="88.9530%" y="501" width="0.1109%" height="15" fill="rgb(246,89,16)"/><text x="89.2030%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 1.00%)</title><rect x="88.1322%" y="597" width="0.9982%" height="15" fill="rgb(216,158,49)"/><text x="88.3822%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (43 samples, 0.95%)</title><rect x="88.1766%" y="581" width="0.9539%" height="15" fill="rgb(236,107,19)"/><text x="88.4266%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (42 samples, 0.93%)</title><rect x="88.1988%" y="565" width="0.9317%" height="15" fill="rgb(228,185,30)"/><text x="88.4488%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (40 samples, 0.89%)</title><rect x="88.2431%" y="549" width="0.8873%" height="15" fill="rgb(246,134,8)"/><text x="88.4931%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (27 samples, 0.60%)</title><rect x="88.5315%" y="533" width="0.5989%" height="15" fill="rgb(214,143,50)"/><text x="88.7815%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (23 samples, 0.51%)</title><rect x="88.6202%" y="517" width="0.5102%" height="15" fill="rgb(228,75,8)"/><text x="88.8702%" y="527.50"></text></g><g><title>do_syscall_64 (6 samples, 0.13%)</title><rect x="89.2635%" y="501" width="0.1331%" height="15" fill="rgb(207,175,4)"/><text x="89.5135%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.31%)</title><rect x="89.1748%" y="517" width="0.3106%" height="15" fill="rgb(205,108,24)"/><text x="89.4248%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (15 samples, 0.33%)</title><rect x="89.1748%" y="581" width="0.3327%" height="15" fill="rgb(244,120,49)"/><text x="89.4248%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::write (15 samples, 0.33%)</title><rect x="89.1748%" y="565" width="0.3327%" height="15" fill="rgb(223,47,38)"/><text x="89.4248%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (15 samples, 0.33%)</title><rect x="89.1748%" y="549" width="0.3327%" height="15" fill="rgb(229,179,11)"/><text x="89.4248%" y="559.50"></text></g><g><title>__libc_write (15 samples, 0.33%)</title><rect x="89.1748%" y="533" width="0.3327%" height="15" fill="rgb(231,122,1)"/><text x="89.4248%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (64 samples, 1.42%)</title><rect x="88.1322%" y="629" width="1.4197%" height="15" fill="rgb(245,119,9)"/><text x="88.3822%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (64 samples, 1.42%)</title><rect x="88.1322%" y="613" width="1.4197%" height="15" fill="rgb(241,163,25)"/><text x="88.3822%" y="623.50"></text></g><g><title>decor_mem::stats::print_stats (17 samples, 0.38%)</title><rect x="89.1748%" y="597" width="0.3771%" height="15" fill="rgb(217,214,3)"/><text x="89.4248%" y="607.50"></text></g><g><title>sk_wait_data (24 samples, 0.53%)</title><rect x="89.8181%" y="421" width="0.5324%" height="15" fill="rgb(240,86,28)"/><text x="90.0681%" y="431.50"></text></g><g><title>wait_woken (21 samples, 0.47%)</title><rect x="89.8846%" y="405" width="0.4658%" height="15" fill="rgb(215,47,9)"/><text x="90.1346%" y="415.50"></text></g><g><title>schedule_timeout (19 samples, 0.42%)</title><rect x="89.9290%" y="389" width="0.4215%" height="15" fill="rgb(252,25,45)"/><text x="90.1790%" y="399.50"></text></g><g><title>schedule (19 samples, 0.42%)</title><rect x="89.9290%" y="373" width="0.4215%" height="15" fill="rgb(251,164,9)"/><text x="90.1790%" y="383.50"></text></g><g><title>__schedule (18 samples, 0.40%)</title><rect x="89.9512%" y="357" width="0.3993%" height="15" fill="rgb(233,194,0)"/><text x="90.2012%" y="367.50"></text></g><g><title>inet_recvmsg (34 samples, 0.75%)</title><rect x="89.6185%" y="453" width="0.7542%" height="15" fill="rgb(249,111,24)"/><text x="89.8685%" y="463.50"></text></g><g><title>tcp_recvmsg (34 samples, 0.75%)</title><rect x="89.6185%" y="437" width="0.7542%" height="15" fill="rgb(250,223,3)"/><text x="89.8685%" y="447.50"></text></g><g><title>do_syscall_64 (37 samples, 0.82%)</title><rect x="89.5741%" y="501" width="0.8208%" height="15" fill="rgb(236,178,37)"/><text x="89.8241%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (37 samples, 0.82%)</title><rect x="89.5741%" y="485" width="0.8208%" height="15" fill="rgb(241,158,50)"/><text x="89.8241%" y="495.50"></text></g><g><title>__sys_recvfrom (36 samples, 0.80%)</title><rect x="89.5963%" y="469" width="0.7986%" height="15" fill="rgb(213,121,41)"/><text x="89.8463%" y="479.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (42 samples, 0.93%)</title><rect x="89.5519%" y="597" width="0.9317%" height="15" fill="rgb(240,92,3)"/><text x="89.8019%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::read (42 samples, 0.93%)</title><rect x="89.5519%" y="581" width="0.9317%" height="15" fill="rgb(205,123,3)"/><text x="89.8019%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (42 samples, 0.93%)</title><rect x="89.5519%" y="565" width="0.9317%" height="15" fill="rgb(205,97,47)"/><text x="89.8019%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (42 samples, 0.93%)</title><rect x="89.5519%" y="549" width="0.9317%" height="15" fill="rgb(247,152,14)"/><text x="89.8019%" y="559.50"></text></g><g><title>__libc_recv (42 samples, 0.93%)</title><rect x="89.5519%" y="533" width="0.9317%" height="15" fill="rgb(248,195,53)"/><text x="89.8019%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (41 samples, 0.91%)</title><rect x="89.5741%" y="517" width="0.9095%" height="15" fill="rgb(226,201,16)"/><text x="89.8241%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (43 samples, 0.95%)</title><rect x="89.5519%" y="613" width="0.9539%" height="15" fill="rgb(205,98,0)"/><text x="89.8019%" y="623.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (48 samples, 1.06%)</title><rect x="89.5519%" y="629" width="1.0648%" height="15" fill="rgb(214,191,48)"/><text x="89.8019%" y="639.50"></text></g><g><title>__dev_queue_xmit (10 samples, 0.22%)</title><rect x="91.1491%" y="357" width="0.2218%" height="15" fill="rgb(237,112,39)"/><text x="91.3991%" y="367.50"></text></g><g><title>psi_task_change (9 samples, 0.20%)</title><rect x="91.9920%" y="53" width="0.1996%" height="15" fill="rgb(247,203,27)"/><text x="92.2420%" y="63.50"></text></g><g><title>psi_group_change (7 samples, 0.16%)</title><rect x="92.0364%" y="37" width="0.1553%" height="15" fill="rgb(235,124,28)"/><text x="92.2864%" y="47.50"></text></g><g><title>enqueue_task (15 samples, 0.33%)</title><rect x="91.9920%" y="69" width="0.3327%" height="15" fill="rgb(208,207,46)"/><text x="92.2420%" y="79.50"></text></g><g><title>uclamp_rq_inc_id (6 samples, 0.13%)</title><rect x="92.1917%" y="53" width="0.1331%" height="15" fill="rgb(234,176,4)"/><text x="92.4417%" y="63.50"></text></g><g><title>enqueue_task_fair (8 samples, 0.18%)</title><rect x="92.3248%" y="69" width="0.1775%" height="15" fill="rgb(230,133,28)"/><text x="92.5748%" y="79.50"></text></g><g><title>enqueue_entity (6 samples, 0.13%)</title><rect x="92.3691%" y="53" width="0.1331%" height="15" fill="rgb(211,137,40)"/><text x="92.6191%" y="63.50"></text></g><g><title>sock_def_readable (26 samples, 0.58%)</title><rect x="91.9698%" y="133" width="0.5768%" height="15" fill="rgb(254,35,13)"/><text x="92.2198%" y="143.50"></text></g><g><title>__wake_up_common_lock (26 samples, 0.58%)</title><rect x="91.9698%" y="117" width="0.5768%" height="15" fill="rgb(225,49,51)"/><text x="92.2198%" y="127.50"></text></g><g><title>__wake_up_common (26 samples, 0.58%)</title><rect x="91.9698%" y="101" width="0.5768%" height="15" fill="rgb(251,10,15)"/><text x="92.2198%" y="111.50"></text></g><g><title>try_to_wake_up (25 samples, 0.55%)</title><rect x="91.9920%" y="85" width="0.5546%" height="15" fill="rgb(228,207,15)"/><text x="92.2420%" y="95.50"></text></g><g><title>tcp_ack (13 samples, 0.29%)</title><rect x="92.5466%" y="133" width="0.2884%" height="15" fill="rgb(241,99,19)"/><text x="92.7966%" y="143.50"></text></g><g><title>ip_local_deliver (62 samples, 1.38%)</title><rect x="91.6149%" y="229" width="1.3753%" height="15" fill="rgb(207,104,49)"/><text x="91.8649%" y="239.50"></text></g><g><title>ip_local_deliver_finish (62 samples, 1.38%)</title><rect x="91.6149%" y="213" width="1.3753%" height="15" fill="rgb(234,99,18)"/><text x="91.8649%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (61 samples, 1.35%)</title><rect x="91.6371%" y="197" width="1.3531%" height="15" fill="rgb(213,191,49)"/><text x="91.8871%" y="207.50"></text></g><g><title>tcp_v4_rcv (59 samples, 1.31%)</title><rect x="91.6815%" y="181" width="1.3088%" height="15" fill="rgb(210,226,19)"/><text x="91.9315%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (53 samples, 1.18%)</title><rect x="91.8146%" y="165" width="1.1757%" height="15" fill="rgb(229,97,18)"/><text x="92.0646%" y="175.50"></text></g><g><title>tcp_rcv_established (53 samples, 1.18%)</title><rect x="91.8146%" y="149" width="1.1757%" height="15" fill="rgb(211,167,15)"/><text x="92.0646%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (67 samples, 1.49%)</title><rect x="91.5262%" y="261" width="1.4862%" height="15" fill="rgb(210,169,34)"/><text x="91.7762%" y="271.50"></text></g><g><title>ip_rcv (64 samples, 1.42%)</title><rect x="91.5927%" y="245" width="1.4197%" height="15" fill="rgb(241,121,31)"/><text x="91.8427%" y="255.50"></text></g><g><title>do_softirq (75 samples, 1.66%)</title><rect x="91.3709%" y="341" width="1.6637%" height="15" fill="rgb(232,40,11)"/><text x="91.6209%" y="351.50"></text></g><g><title>do_softirq_own_stack (74 samples, 1.64%)</title><rect x="91.3931%" y="325" width="1.6415%" height="15" fill="rgb(205,86,26)"/><text x="91.6431%" y="335.50"></text></g><g><title>__do_softirq (73 samples, 1.62%)</title><rect x="91.4153%" y="309" width="1.6193%" height="15" fill="rgb(231,126,28)"/><text x="91.6653%" y="319.50"></text></g><g><title>net_rx_action (71 samples, 1.57%)</title><rect x="91.4596%" y="293" width="1.5750%" height="15" fill="rgb(219,221,18)"/><text x="91.7096%" y="303.50"></text></g><g><title>process_backlog (69 samples, 1.53%)</title><rect x="91.5040%" y="277" width="1.5306%" height="15" fill="rgb(211,40,0)"/><text x="91.7540%" y="287.50"></text></g><g><title>ip_finish_output2 (88 samples, 1.95%)</title><rect x="91.1047%" y="373" width="1.9521%" height="15" fill="rgb(239,85,43)"/><text x="91.3547%" y="383.50">i..</text></g><g><title>__local_bh_enable_ip (76 samples, 1.69%)</title><rect x="91.3709%" y="357" width="1.6859%" height="15" fill="rgb(231,55,21)"/><text x="91.6209%" y="367.50"></text></g><g><title>__ip_queue_xmit (92 samples, 2.04%)</title><rect x="91.0382%" y="405" width="2.0408%" height="15" fill="rgb(225,184,43)"/><text x="91.2882%" y="415.50">_..</text></g><g><title>ip_output (90 samples, 2.00%)</title><rect x="91.0825%" y="389" width="1.9965%" height="15" fill="rgb(251,158,41)"/><text x="91.3325%" y="399.50">i..</text></g><g><title>__tcp_transmit_skb (94 samples, 2.09%)</title><rect x="91.0160%" y="421" width="2.0852%" height="15" fill="rgb(234,159,37)"/><text x="91.2660%" y="431.50">_..</text></g><g><title>__tcp_push_pending_frames (97 samples, 2.15%)</title><rect x="90.9938%" y="453" width="2.1517%" height="15" fill="rgb(216,204,22)"/><text x="91.2438%" y="463.50">_..</text></g><g><title>tcp_write_xmit (97 samples, 2.15%)</title><rect x="90.9938%" y="437" width="2.1517%" height="15" fill="rgb(214,17,3)"/><text x="91.2438%" y="447.50">t..</text></g><g><title>sock_sendmsg (120 samples, 2.66%)</title><rect x="90.8385%" y="501" width="2.6619%" height="15" fill="rgb(212,111,17)"/><text x="91.0885%" y="511.50">so..</text></g><g><title>tcp_sendmsg (120 samples, 2.66%)</title><rect x="90.8385%" y="485" width="2.6619%" height="15" fill="rgb(221,157,24)"/><text x="91.0885%" y="495.50">tc..</text></g><g><title>tcp_sendmsg_locked (116 samples, 2.57%)</title><rect x="90.9272%" y="469" width="2.5732%" height="15" fill="rgb(252,16,13)"/><text x="91.1772%" y="479.50">tc..</text></g><g><title>__x64_sys_sendto (129 samples, 2.86%)</title><rect x="90.7054%" y="533" width="2.8616%" height="15" fill="rgb(221,62,2)"/><text x="90.9554%" y="543.50">__..</text></g><g><title>__sys_sendto (129 samples, 2.86%)</title><rect x="90.7054%" y="517" width="2.8616%" height="15" fill="rgb(247,87,22)"/><text x="90.9554%" y="527.50">__..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (324 samples, 7.19%)</title><rect x="86.4020%" y="645" width="7.1872%" height="15" fill="rgb(215,73,9)"/><text x="86.6520%" y="655.50">msql_srv::..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (134 samples, 2.97%)</title><rect x="90.6167%" y="629" width="2.9725%" height="15" fill="rgb(207,175,33)"/><text x="90.8667%" y="639.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (134 samples, 2.97%)</title><rect x="90.6167%" y="613" width="2.9725%" height="15" fill="rgb(243,129,54)"/><text x="90.8667%" y="623.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (134 samples, 2.97%)</title><rect x="90.6167%" y="597" width="2.9725%" height="15" fill="rgb(227,119,45)"/><text x="90.8667%" y="607.50">std..</text></g><g><title>__libc_send (134 samples, 2.97%)</title><rect x="90.6167%" y="581" width="2.9725%" height="15" fill="rgb(205,109,36)"/><text x="90.8667%" y="591.50">__l..</text></g><g><title>entry_SYSCALL_64 (132 samples, 2.93%)</title><rect x="90.6610%" y="565" width="2.9281%" height="15" fill="rgb(205,6,39)"/><text x="90.9110%" y="575.50">en..</text></g><g><title>do_syscall_64 (132 samples, 2.93%)</title><rect x="90.6610%" y="549" width="2.9281%" height="15" fill="rgb(221,32,16)"/><text x="90.9110%" y="559.50">do..</text></g><g><title>__GI___clone (329 samples, 7.30%)</title><rect x="86.3132%" y="773" width="7.2981%" height="15" fill="rgb(228,144,50)"/><text x="86.5632%" y="783.50">__GI___clo..</text></g><g><title>start_thread (329 samples, 7.30%)</title><rect x="86.3132%" y="757" width="7.2981%" height="15" fill="rgb(229,201,53)"/><text x="86.5632%" y="767.50">start_thre..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (325 samples, 7.21%)</title><rect x="86.4020%" y="741" width="7.2094%" height="15" fill="rgb(249,153,27)"/><text x="86.6520%" y="751.50">std::sys::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (325 samples, 7.21%)</title><rect x="86.4020%" y="725" width="7.2094%" height="15" fill="rgb(227,106,25)"/><text x="86.6520%" y="735.50">&lt;alloc::bo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (325 samples, 7.21%)</title><rect x="86.4020%" y="709" width="7.2094%" height="15" fill="rgb(230,65,29)"/><text x="86.6520%" y="719.50">&lt;alloc::bo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (325 samples, 7.21%)</title><rect x="86.4020%" y="693" width="7.2094%" height="15" fill="rgb(221,57,46)"/><text x="86.6520%" y="703.50">core::ops:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (325 samples, 7.21%)</title><rect x="86.4020%" y="677" width="7.2094%" height="15" fill="rgb(229,161,17)"/><text x="86.6520%" y="687.50">std::sys_c..</text></g><g><title>decor_mem::Shim::run_on_tcp (325 samples, 7.21%)</title><rect x="86.4020%" y="661" width="7.2094%" height="15" fill="rgb(222,213,11)"/><text x="86.6520%" y="671.50">decor_mem:..</text></g><g><title>__perf_event_task_sched_in (231 samples, 5.12%)</title><rect x="93.9219%" y="309" width="5.1242%" height="15" fill="rgb(235,35,13)"/><text x="94.1719%" y="319.50">__perf..</text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 5.10%)</title><rect x="93.9441%" y="293" width="5.1020%" height="15" fill="rgb(233,158,34)"/><text x="94.1941%" y="303.50">__inte..</text></g><g><title>native_write_msr (229 samples, 5.08%)</title><rect x="93.9663%" y="277" width="5.0799%" height="15" fill="rgb(215,151,48)"/><text x="94.2163%" y="287.50">native..</text></g><g><title>cpu_stop_queue_work (233 samples, 5.17%)</title><rect x="93.8997%" y="389" width="5.1686%" height="15" fill="rgb(229,84,14)"/><text x="94.1497%" y="399.50">cpu_st..</text></g><g><title>preempt_schedule_thunk (233 samples, 5.17%)</title><rect x="93.8997%" y="373" width="5.1686%" height="15" fill="rgb(229,68,14)"/><text x="94.1497%" y="383.50">preemp..</text></g><g><title>preempt_schedule_common (233 samples, 5.17%)</title><rect x="93.8997%" y="357" width="5.1686%" height="15" fill="rgb(243,106,26)"/><text x="94.1497%" y="367.50">preemp..</text></g><g><title>__schedule (233 samples, 5.17%)</title><rect x="93.8997%" y="341" width="5.1686%" height="15" fill="rgb(206,45,38)"/><text x="94.1497%" y="351.50">__sche..</text></g><g><title>finish_task_switch (233 samples, 5.17%)</title><rect x="93.8997%" y="325" width="5.1686%" height="15" fill="rgb(226,6,15)"/><text x="94.1497%" y="335.50">finish..</text></g><g><title>__set_cpus_allowed_ptr (236 samples, 5.24%)</title><rect x="93.8997%" y="421" width="5.2351%" height="15" fill="rgb(232,22,54)"/><text x="94.1497%" y="431.50">__set_..</text></g><g><title>stop_one_cpu (236 samples, 5.24%)</title><rect x="93.8997%" y="405" width="5.2351%" height="15" fill="rgb(229,222,32)"/><text x="94.1497%" y="415.50">stop_o..</text></g><g><title>__x64_sys_sched_setaffinity (237 samples, 5.26%)</title><rect x="93.8997%" y="453" width="5.2573%" height="15" fill="rgb(228,62,29)"/><text x="94.1497%" y="463.50">__x64_..</text></g><g><title>sched_setaffinity (237 samples, 5.26%)</title><rect x="93.8997%" y="437" width="5.2573%" height="15" fill="rgb(251,103,34)"/><text x="94.1497%" y="447.50">sched_..</text></g><g><title>do_syscall_64 (238 samples, 5.28%)</title><rect x="93.8997%" y="469" width="5.2795%" height="15" fill="rgb(233,12,30)"/><text x="94.1497%" y="479.50">do_sys..</text></g><g><title>entry_SYSCALL_64 (241 samples, 5.35%)</title><rect x="93.8997%" y="485" width="5.3461%" height="15" fill="rgb(238,52,0)"/><text x="94.1497%" y="495.50">entry_S..</text></g><g><title>hwloc::Topology::new (243 samples, 5.39%)</title><rect x="93.8776%" y="597" width="5.3904%" height="15" fill="rgb(223,98,5)"/><text x="94.1276%" y="607.50">hwloc::..</text></g><g><title>hwloc_topology_load (243 samples, 5.39%)</title><rect x="93.8776%" y="581" width="5.3904%" height="15" fill="rgb(228,75,37)"/><text x="94.1276%" y="591.50">hwloc_t..</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 5.39%)</title><rect x="93.8776%" y="565" width="5.3904%" height="15" fill="rgb(205,115,49)"/><text x="94.1276%" y="575.50">[libhwl..</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 5.39%)</title><rect x="93.8776%" y="549" width="5.3904%" height="15" fill="rgb(250,154,43)"/><text x="94.1276%" y="559.50">[libhwl..</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 5.39%)</title><rect x="93.8776%" y="533" width="5.3904%" height="15" fill="rgb(226,43,29)"/><text x="94.1276%" y="543.50">[libhwl..</text></g><g><title>hwloc_linux_set_tid_cpubind (243 samples, 5.39%)</title><rect x="93.8776%" y="517" width="5.3904%" height="15" fill="rgb(249,228,39)"/><text x="94.1276%" y="527.50">hwloc_l..</text></g><g><title>__GI___sched_setaffinity_new (242 samples, 5.37%)</title><rect x="93.8997%" y="501" width="5.3682%" height="15" fill="rgb(216,79,43)"/><text x="94.1497%" y="511.50">__GI___..</text></g><g><title>__libc_start_main (244 samples, 5.41%)</title><rect x="93.8776%" y="757" width="5.4126%" height="15" fill="rgb(228,95,12)"/><text x="94.1276%" y="767.50">__libc_..</text></g><g><title>main (244 samples, 5.41%)</title><rect x="93.8776%" y="741" width="5.4126%" height="15" fill="rgb(249,221,15)"/><text x="94.1276%" y="751.50">main</text></g><g><title>std::rt::lang_start_internal (244 samples, 5.41%)</title><rect x="93.8776%" y="725" width="5.4126%" height="15" fill="rgb(233,34,13)"/><text x="94.1276%" y="735.50">std::rt..</text></g><g><title>std::panic::catch_unwind (244 samples, 5.41%)</title><rect x="93.8776%" y="709" width="5.4126%" height="15" fill="rgb(214,103,39)"/><text x="94.1276%" y="719.50">std::pa..</text></g><g><title>std::panicking::try (244 samples, 5.41%)</title><rect x="93.8776%" y="693" width="5.4126%" height="15" fill="rgb(251,126,39)"/><text x="94.1276%" y="703.50">std::pa..</text></g><g><title>std::panicking::try::do_call (244 samples, 5.41%)</title><rect x="93.8776%" y="677" width="5.4126%" height="15" fill="rgb(214,216,36)"/><text x="94.1276%" y="687.50">std::pa..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (244 samples, 5.41%)</title><rect x="93.8776%" y="661" width="5.4126%" height="15" fill="rgb(220,221,8)"/><text x="94.1276%" y="671.50">core::o..</text></g><g><title>std::rt::lang_start::_{{closure}} (244 samples, 5.41%)</title><rect x="93.8776%" y="645" width="5.4126%" height="15" fill="rgb(240,216,3)"/><text x="94.1276%" y="655.50">std::rt..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (244 samples, 5.41%)</title><rect x="93.8776%" y="629" width="5.4126%" height="15" fill="rgb(232,218,17)"/><text x="94.1276%" y="639.50">std::sy..</text></g><g><title>lobsters_microbenchmarks::main (244 samples, 5.41%)</title><rect x="93.8776%" y="613" width="5.4126%" height="15" fill="rgb(229,163,45)"/><text x="94.1276%" y="623.50">lobster..</text></g><g><title>_start (245 samples, 5.43%)</title><rect x="93.8776%" y="773" width="5.4348%" height="15" fill="rgb(231,110,42)"/><text x="94.1276%" y="783.50">_start</text></g><g><title>page_fault (8 samples, 0.18%)</title><rect x="99.6451%" y="773" width="0.1775%" height="15" fill="rgb(208,170,48)"/><text x="99.8951%" y="783.50"></text></g><g><title>lobsters-microb (4,502 samples, 99.87%)</title><rect x="0.0000%" y="789" width="99.8669%" height="15" fill="rgb(239,116,25)"/><text x="0.2500%" y="799.50">lobsters-microb</text></g><g><title>all (4,508 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(219,200,50)"/><text x="0.2500%" y="815.50"></text></g><g><title>perf (6 samples, 0.13%)</title><rect x="99.8669%" y="789" width="0.1331%" height="15" fill="rgb(245,200,0)"/><text x="100.1169%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.13%)</title><rect x="99.8669%" y="773" width="0.1331%" height="15" fill="rgb(245,119,33)"/><text x="100.1169%" y="783.50"></text></g><g><title>do_syscall_64 (6 samples, 0.13%)</title><rect x="99.8669%" y="757" width="0.1331%" height="15" fill="rgb(231,125,12)"/><text x="100.1169%" y="767.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.13%)</title><rect x="99.8669%" y="741" width="0.1331%" height="15" fill="rgb(216,96,41)"/><text x="100.1169%" y="751.50"></text></g><g><title>do_execve (6 samples, 0.13%)</title><rect x="99.8669%" y="725" width="0.1331%" height="15" fill="rgb(248,43,45)"/><text x="100.1169%" y="735.50"></text></g><g><title>__do_execve_file (6 samples, 0.13%)</title><rect x="99.8669%" y="709" width="0.1331%" height="15" fill="rgb(217,222,7)"/><text x="100.1169%" y="719.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.13%)</title><rect x="99.8669%" y="693" width="0.1331%" height="15" fill="rgb(233,28,6)"/><text x="100.1169%" y="703.50"></text></g><g><title>load_elf_binary (6 samples, 0.13%)</title><rect x="99.8669%" y="677" width="0.1331%" height="15" fill="rgb(231,218,15)"/><text x="100.1169%" y="687.50"></text></g><g><title>setup_new_exec (6 samples, 0.13%)</title><rect x="99.8669%" y="661" width="0.1331%" height="15" fill="rgb(226,171,48)"/><text x="100.1169%" y="671.50"></text></g><g><title>perf_event_exec (6 samples, 0.13%)</title><rect x="99.8669%" y="645" width="0.1331%" height="15" fill="rgb(235,201,9)"/><text x="100.1169%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.11%)</title><rect x="99.8891%" y="629" width="0.1109%" height="15" fill="rgb(217,80,15)"/><text x="100.1391%" y="639.50"></text></g><g><title>native_write_msr (5 samples, 0.11%)</title><rect x="99.8891%" y="613" width="0.1109%" height="15" fill="rgb(219,152,8)"/><text x="100.1391%" y="623.50"></text></g></svg></svg>