<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="0.2542%" y="837" width="0.1695%" height="15" fill="rgb(227,0,7)"/><text x="0.5042%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.25%)</title><rect x="0.5085%" y="837" width="0.2542%" height="15" fill="rgb(217,0,24)"/><text x="0.7585%" y="847.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="0.8475%" y="837" width="0.2542%" height="15" fill="rgb(221,193,54)"/><text x="1.0975%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="1.2712%" y="837" width="0.1695%" height="15" fill="rgb(248,212,6)"/><text x="1.5212%" y="847.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.17%)</title><rect x="1.4407%" y="837" width="0.1695%" height="15" fill="rgb(208,68,35)"/><text x="1.6907%" y="847.50"></text></g><g><title>_int_malloc (4 samples, 0.34%)</title><rect x="1.7797%" y="837" width="0.3390%" height="15" fill="rgb(232,128,0)"/><text x="2.0297%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.25%)</title><rect x="2.2034%" y="837" width="0.2542%" height="15" fill="rgb(207,160,47)"/><text x="2.4534%" y="847.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.34%)</title><rect x="2.6271%" y="837" width="0.3390%" height="15" fill="rgb(228,23,34)"/><text x="2.8771%" y="847.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="3.0508%" y="837" width="0.2542%" height="15" fill="rgb(218,30,26)"/><text x="3.3008%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.25%)</title><rect x="3.3051%" y="837" width="0.2542%" height="15" fill="rgb(220,122,19)"/><text x="3.5551%" y="847.50"></text></g><g><title>decor::helpers::trim_quotes (2 samples, 0.17%)</title><rect x="3.5593%" y="837" width="0.1695%" height="15" fill="rgb(250,228,42)"/><text x="3.8093%" y="847.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.42%)</title><rect x="3.9831%" y="837" width="0.4237%" height="15" fill="rgb(240,193,28)"/><text x="4.2331%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.17%)</title><rect x="4.7458%" y="837" width="0.1695%" height="15" fill="rgb(216,20,37)"/><text x="4.9958%" y="847.50"></text></g><g><title>[anon] (58 samples, 4.92%)</title><rect x="0.1695%" y="853" width="4.9153%" height="15" fill="rgb(206,188,39)"/><text x="0.4195%" y="863.50">[anon]</text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.17%)</title><rect x="4.9153%" y="837" width="0.1695%" height="15" fill="rgb(217,207,13)"/><text x="5.1653%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="5.2542%" y="837" width="0.1695%" height="15" fill="rgb(231,73,38)"/><text x="5.5042%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.17%)</title><rect x="5.4237%" y="837" width="0.1695%" height="15" fill="rgb(225,20,46)"/><text x="5.6737%" y="847.50"></text></g><g><title>[lobsters] (7 samples, 0.59%)</title><rect x="5.0847%" y="853" width="0.5932%" height="15" fill="rgb(210,31,41)"/><text x="5.3347%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="5.7627%" y="837" width="0.3390%" height="15" fill="rgb(221,200,47)"/><text x="6.0127%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.17%)</title><rect x="6.1864%" y="837" width="0.1695%" height="15" fill="rgb(226,26,5)"/><text x="6.4364%" y="847.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.17%)</title><rect x="6.1864%" y="821" width="0.1695%" height="15" fill="rgb(249,33,26)"/><text x="6.4364%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.17%)</title><rect x="6.1864%" y="805" width="0.1695%" height="15" fill="rgb(235,183,28)"/><text x="6.4364%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.17%)</title><rect x="6.1864%" y="789" width="0.1695%" height="15" fill="rgb(221,5,38)"/><text x="6.4364%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.17%)</title><rect x="6.1864%" y="773" width="0.1695%" height="15" fill="rgb(247,18,42)"/><text x="6.4364%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.17%)</title><rect x="6.1864%" y="757" width="0.1695%" height="15" fill="rgb(241,131,45)"/><text x="6.4364%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.17%)</title><rect x="6.1864%" y="741" width="0.1695%" height="15" fill="rgb(249,31,29)"/><text x="6.4364%" y="751.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.25%)</title><rect x="7.9661%" y="453" width="0.2542%" height="15" fill="rgb(225,111,53)"/><text x="8.2161%" y="463.50"></text></g><g><title>loopback_xmit (2 samples, 0.17%)</title><rect x="8.0508%" y="437" width="0.1695%" height="15" fill="rgb(238,160,17)"/><text x="8.3008%" y="447.50"></text></g><g><title>netif_rx (2 samples, 0.17%)</title><rect x="8.0508%" y="421" width="0.1695%" height="15" fill="rgb(214,148,48)"/><text x="8.3008%" y="431.50"></text></g><g><title>netif_rx_internal (2 samples, 0.17%)</title><rect x="8.0508%" y="405" width="0.1695%" height="15" fill="rgb(232,36,49)"/><text x="8.3008%" y="415.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.34%)</title><rect x="7.9661%" y="469" width="0.3390%" height="15" fill="rgb(209,103,24)"/><text x="8.2161%" y="479.50"></text></g><g><title>enqueue_task (2 samples, 0.17%)</title><rect x="9.4068%" y="165" width="0.1695%" height="15" fill="rgb(229,88,8)"/><text x="9.6568%" y="175.50"></text></g><g><title>psi_task_change (2 samples, 0.17%)</title><rect x="9.4068%" y="149" width="0.1695%" height="15" fill="rgb(213,181,19)"/><text x="9.6568%" y="159.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.17%)</title><rect x="9.5763%" y="165" width="0.1695%" height="15" fill="rgb(254,191,54)"/><text x="9.8263%" y="175.50"></text></g><g><title>sock_def_readable (11 samples, 0.93%)</title><rect x="8.9831%" y="245" width="0.9322%" height="15" fill="rgb(241,83,37)"/><text x="9.2331%" y="255.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.93%)</title><rect x="8.9831%" y="229" width="0.9322%" height="15" fill="rgb(233,36,39)"/><text x="9.2331%" y="239.50"></text></g><g><title>__wake_up_common (11 samples, 0.93%)</title><rect x="8.9831%" y="213" width="0.9322%" height="15" fill="rgb(226,3,54)"/><text x="9.2331%" y="223.50"></text></g><g><title>pollwake (11 samples, 0.93%)</title><rect x="8.9831%" y="197" width="0.9322%" height="15" fill="rgb(245,192,40)"/><text x="9.2331%" y="207.50"></text></g><g><title>try_to_wake_up (10 samples, 0.85%)</title><rect x="9.0678%" y="181" width="0.8475%" height="15" fill="rgb(238,167,29)"/><text x="9.3178%" y="191.50"></text></g><g><title>tcp_ack (5 samples, 0.42%)</title><rect x="9.9153%" y="245" width="0.4237%" height="15" fill="rgb(232,182,51)"/><text x="10.1653%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 1.78%)</title><rect x="8.7288%" y="277" width="1.7797%" height="15" fill="rgb(231,60,39)"/><text x="8.9788%" y="287.50">t..</text></g><g><title>tcp_rcv_established (21 samples, 1.78%)</title><rect x="8.7288%" y="261" width="1.7797%" height="15" fill="rgb(208,69,12)"/><text x="8.9788%" y="271.50">t..</text></g><g><title>ip_local_deliver (24 samples, 2.03%)</title><rect x="8.5593%" y="341" width="2.0339%" height="15" fill="rgb(235,93,37)"/><text x="8.8093%" y="351.50">i..</text></g><g><title>ip_local_deliver_finish (24 samples, 2.03%)</title><rect x="8.5593%" y="325" width="2.0339%" height="15" fill="rgb(213,116,39)"/><text x="8.8093%" y="335.50">i..</text></g><g><title>ip_protocol_deliver_rcu (24 samples, 2.03%)</title><rect x="8.5593%" y="309" width="2.0339%" height="15" fill="rgb(222,207,29)"/><text x="8.8093%" y="319.50">i..</text></g><g><title>tcp_v4_rcv (24 samples, 2.03%)</title><rect x="8.5593%" y="293" width="2.0339%" height="15" fill="rgb(206,96,30)"/><text x="8.8093%" y="303.50">t..</text></g><g><title>do_softirq (28 samples, 2.37%)</title><rect x="8.3051%" y="453" width="2.3729%" height="15" fill="rgb(218,138,4)"/><text x="8.5551%" y="463.50">do..</text></g><g><title>do_softirq_own_stack (28 samples, 2.37%)</title><rect x="8.3051%" y="437" width="2.3729%" height="15" fill="rgb(250,191,14)"/><text x="8.5551%" y="447.50">do..</text></g><g><title>__do_softirq (28 samples, 2.37%)</title><rect x="8.3051%" y="421" width="2.3729%" height="15" fill="rgb(239,60,40)"/><text x="8.5551%" y="431.50">__..</text></g><g><title>net_rx_action (27 samples, 2.29%)</title><rect x="8.3898%" y="405" width="2.2881%" height="15" fill="rgb(206,27,48)"/><text x="8.6398%" y="415.50">n..</text></g><g><title>process_backlog (27 samples, 2.29%)</title><rect x="8.3898%" y="389" width="2.2881%" height="15" fill="rgb(225,35,8)"/><text x="8.6398%" y="399.50">p..</text></g><g><title>__netif_receive_skb_one_core (27 samples, 2.29%)</title><rect x="8.3898%" y="373" width="2.2881%" height="15" fill="rgb(250,213,24)"/><text x="8.6398%" y="383.50">_..</text></g><g><title>ip_rcv (26 samples, 2.20%)</title><rect x="8.4746%" y="357" width="2.2034%" height="15" fill="rgb(247,123,22)"/><text x="8.7246%" y="367.50">i..</text></g><g><title>__ip_queue_xmit (37 samples, 3.14%)</title><rect x="7.6271%" y="517" width="3.1356%" height="15" fill="rgb(231,138,38)"/><text x="7.8771%" y="527.50">__i..</text></g><g><title>ip_output (35 samples, 2.97%)</title><rect x="7.7966%" y="501" width="2.9661%" height="15" fill="rgb(231,145,46)"/><text x="8.0466%" y="511.50">ip_..</text></g><g><title>ip_finish_output2 (35 samples, 2.97%)</title><rect x="7.7966%" y="485" width="2.9661%" height="15" fill="rgb(251,118,11)"/><text x="8.0466%" y="495.50">ip_..</text></g><g><title>__local_bh_enable_ip (29 samples, 2.46%)</title><rect x="8.3051%" y="469" width="2.4576%" height="15" fill="rgb(217,147,25)"/><text x="8.5551%" y="479.50">__..</text></g><g><title>__tcp_transmit_skb (39 samples, 3.31%)</title><rect x="7.5424%" y="533" width="3.3051%" height="15" fill="rgb(247,81,37)"/><text x="7.7924%" y="543.50">__t..</text></g><g><title>__tcp_push_pending_frames (41 samples, 3.47%)</title><rect x="7.4576%" y="565" width="3.4746%" height="15" fill="rgb(209,12,38)"/><text x="7.7076%" y="575.50">__t..</text></g><g><title>tcp_write_xmit (41 samples, 3.47%)</title><rect x="7.4576%" y="549" width="3.4746%" height="15" fill="rgb(227,1,9)"/><text x="7.7076%" y="559.50">tcp..</text></g><g><title>do_syscall_64 (50 samples, 4.24%)</title><rect x="7.0339%" y="661" width="4.2373%" height="15" fill="rgb(248,47,43)"/><text x="7.2839%" y="671.50">do_sy..</text></g><g><title>__x64_sys_sendto (49 samples, 4.15%)</title><rect x="7.1186%" y="645" width="4.1525%" height="15" fill="rgb(221,10,30)"/><text x="7.3686%" y="655.50">__x64..</text></g><g><title>__sys_sendto (48 samples, 4.07%)</title><rect x="7.2034%" y="629" width="4.0678%" height="15" fill="rgb(210,229,1)"/><text x="7.4534%" y="639.50">__sy..</text></g><g><title>sock_sendmsg (48 samples, 4.07%)</title><rect x="7.2034%" y="613" width="4.0678%" height="15" fill="rgb(222,148,37)"/><text x="7.4534%" y="623.50">sock..</text></g><g><title>tcp_sendmsg (48 samples, 4.07%)</title><rect x="7.2034%" y="597" width="4.0678%" height="15" fill="rgb(234,67,33)"/><text x="7.4534%" y="607.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (48 samples, 4.07%)</title><rect x="7.2034%" y="581" width="4.0678%" height="15" fill="rgb(247,98,35)"/><text x="7.4534%" y="591.50">tcp_..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.17%)</title><rect x="11.1017%" y="565" width="0.1695%" height="15" fill="rgb(247,138,52)"/><text x="11.3517%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (56 samples, 4.75%)</title><rect x="6.6949%" y="789" width="4.7458%" height="15" fill="rgb(213,79,30)"/><text x="6.9449%" y="799.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (54 samples, 4.58%)</title><rect x="6.8644%" y="773" width="4.5763%" height="15" fill="rgb(246,177,23)"/><text x="7.1144%" y="783.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (53 samples, 4.49%)</title><rect x="6.9492%" y="757" width="4.4915%" height="15" fill="rgb(230,62,27)"/><text x="7.1992%" y="767.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 4.41%)</title><rect x="7.0339%" y="741" width="4.4068%" height="15" fill="rgb(216,154,8)"/><text x="7.2839%" y="751.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (52 samples, 4.41%)</title><rect x="7.0339%" y="725" width="4.4068%" height="15" fill="rgb(244,35,45)"/><text x="7.2839%" y="735.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (52 samples, 4.41%)</title><rect x="7.0339%" y="709" width="4.4068%" height="15" fill="rgb(251,115,12)"/><text x="7.2839%" y="719.50">std::..</text></g><g><title>__libc_send (52 samples, 4.41%)</title><rect x="7.0339%" y="693" width="4.4068%" height="15" fill="rgb(240,54,50)"/><text x="7.2839%" y="703.50">__lib..</text></g><g><title>entry_SYSCALL_64 (52 samples, 4.41%)</title><rect x="7.0339%" y="677" width="4.4068%" height="15" fill="rgb(233,84,52)"/><text x="7.2839%" y="687.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.17%)</title><rect x="11.2712%" y="661" width="0.1695%" height="15" fill="rgb(207,117,47)"/><text x="11.5212%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="11.4407%" y="789" width="0.1695%" height="15" fill="rgb(249,43,39)"/><text x="11.6907%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="11.6102%" y="789" width="0.1695%" height="15" fill="rgb(209,38,44)"/><text x="11.8602%" y="799.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.34%)</title><rect x="11.8644%" y="789" width="0.3390%" height="15" fill="rgb(236,212,23)"/><text x="12.1144%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.25%)</title><rect x="11.9492%" y="773" width="0.2542%" height="15" fill="rgb(242,79,21)"/><text x="12.1992%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="12.2881%" y="789" width="0.1695%" height="15" fill="rgb(211,96,35)"/><text x="12.5381%" y="799.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.17%)</title><rect x="12.2881%" y="773" width="0.1695%" height="15" fill="rgb(253,215,40)"/><text x="12.5381%" y="783.50"></text></g><g><title>_int_realloc (2 samples, 0.17%)</title><rect x="12.2881%" y="757" width="0.1695%" height="15" fill="rgb(211,81,21)"/><text x="12.5381%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="12.2881%" y="741" width="0.1695%" height="15" fill="rgb(208,190,38)"/><text x="12.5381%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="12.5424%" y="773" width="0.1695%" height="15" fill="rgb(235,213,38)"/><text x="12.7924%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="12.5424%" y="757" width="0.1695%" height="15" fill="rgb(237,122,38)"/><text x="12.7924%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.17%)</title><rect x="12.5424%" y="741" width="0.1695%" height="15" fill="rgb(244,218,35)"/><text x="12.7924%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="12.5424%" y="725" width="0.1695%" height="15" fill="rgb(240,68,47)"/><text x="12.7924%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="12.5424%" y="709" width="0.1695%" height="15" fill="rgb(210,16,53)"/><text x="12.7924%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="12.5424%" y="693" width="0.1695%" height="15" fill="rgb(235,124,12)"/><text x="12.7924%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="12.5424%" y="677" width="0.1695%" height="15" fill="rgb(224,169,11)"/><text x="12.7924%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="12.5424%" y="661" width="0.1695%" height="15" fill="rgb(250,166,2)"/><text x="12.7924%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.17%)</title><rect x="12.5424%" y="645" width="0.1695%" height="15" fill="rgb(242,216,29)"/><text x="12.7924%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="12.5424%" y="629" width="0.1695%" height="15" fill="rgb(230,116,27)"/><text x="12.7924%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="12.5424%" y="613" width="0.1695%" height="15" fill="rgb(228,99,48)"/><text x="12.7924%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="12.5424%" y="597" width="0.1695%" height="15" fill="rgb(253,11,6)"/><text x="12.7924%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.59%)</title><rect x="12.7966%" y="757" width="0.5932%" height="15" fill="rgb(247,143,39)"/><text x="13.0466%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.42%)</title><rect x="12.9661%" y="741" width="0.4237%" height="15" fill="rgb(236,97,10)"/><text x="13.2161%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.42%)</title><rect x="12.9661%" y="725" width="0.4237%" height="15" fill="rgb(233,208,19)"/><text x="13.2161%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.34%)</title><rect x="13.0508%" y="709" width="0.3390%" height="15" fill="rgb(216,164,2)"/><text x="13.3008%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.25%)</title><rect x="13.1356%" y="693" width="0.2542%" height="15" fill="rgb(220,129,5)"/><text x="13.3856%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="13.2203%" y="677" width="0.1695%" height="15" fill="rgb(242,17,10)"/><text x="13.4703%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="13.2203%" y="661" width="0.1695%" height="15" fill="rgb(242,107,0)"/><text x="13.4703%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="13.2203%" y="645" width="0.1695%" height="15" fill="rgb(251,28,31)"/><text x="13.4703%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="13.2203%" y="629" width="0.1695%" height="15" fill="rgb(233,223,10)"/><text x="13.4703%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.17%)</title><rect x="13.2203%" y="613" width="0.1695%" height="15" fill="rgb(215,21,27)"/><text x="13.4703%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="13.2203%" y="597" width="0.1695%" height="15" fill="rgb(232,23,21)"/><text x="13.4703%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="13.2203%" y="581" width="0.1695%" height="15" fill="rgb(244,5,23)"/><text x="13.4703%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="13.2203%" y="565" width="0.1695%" height="15" fill="rgb(226,81,46)"/><text x="13.4703%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 1.19%)</title><rect x="12.4576%" y="789" width="1.1864%" height="15" fill="rgb(247,70,30)"/><text x="12.7076%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.93%)</title><rect x="12.7119%" y="773" width="0.9322%" height="15" fill="rgb(212,68,19)"/><text x="12.9619%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.17%)</title><rect x="13.4746%" y="757" width="0.1695%" height="15" fill="rgb(240,187,13)"/><text x="13.7246%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="13.7288%" y="757" width="0.2542%" height="15" fill="rgb(223,113,26)"/><text x="13.9788%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.25%)</title><rect x="13.7288%" y="741" width="0.2542%" height="15" fill="rgb(206,192,2)"/><text x="13.9788%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.25%)</title><rect x="13.7288%" y="725" width="0.2542%" height="15" fill="rgb(241,108,4)"/><text x="13.9788%" y="735.50"></text></g><g><title>_int_malloc (3 samples, 0.25%)</title><rect x="13.7288%" y="709" width="0.2542%" height="15" fill="rgb(247,173,49)"/><text x="13.9788%" y="719.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="14.1525%" y="709" width="0.1695%" height="15" fill="rgb(224,114,35)"/><text x="14.4025%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.17%)</title><rect x="14.1525%" y="693" width="0.1695%" height="15" fill="rgb(245,159,27)"/><text x="14.4025%" y="703.50"></text></g><g><title>alloc::string::String::with_capacity (4 samples, 0.34%)</title><rect x="14.4068%" y="709" width="0.3390%" height="15" fill="rgb(245,172,44)"/><text x="14.6568%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.34%)</title><rect x="14.4068%" y="693" width="0.3390%" height="15" fill="rgb(236,23,11)"/><text x="14.6568%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.34%)</title><rect x="14.4068%" y="677" width="0.3390%" height="15" fill="rgb(205,117,38)"/><text x="14.6568%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.34%)</title><rect x="14.4068%" y="661" width="0.3390%" height="15" fill="rgb(237,72,25)"/><text x="14.6568%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.34%)</title><rect x="14.4068%" y="645" width="0.3390%" height="15" fill="rgb(244,70,9)"/><text x="14.6568%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.34%)</title><rect x="14.4068%" y="629" width="0.3390%" height="15" fill="rgb(217,125,39)"/><text x="14.6568%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.34%)</title><rect x="14.4068%" y="613" width="0.3390%" height="15" fill="rgb(235,36,10)"/><text x="14.6568%" y="623.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.34%)</title><rect x="14.4068%" y="597" width="0.3390%" height="15" fill="rgb(251,123,47)"/><text x="14.6568%" y="607.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.34%)</title><rect x="14.4068%" y="581" width="0.3390%" height="15" fill="rgb(221,13,13)"/><text x="14.6568%" y="591.50"></text></g><g><title>_int_malloc (3 samples, 0.25%)</title><rect x="14.4915%" y="565" width="0.2542%" height="15" fill="rgb(238,131,9)"/><text x="14.7415%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.93%)</title><rect x="13.9831%" y="757" width="0.9322%" height="15" fill="rgb(211,50,8)"/><text x="14.2331%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (11 samples, 0.93%)</title><rect x="13.9831%" y="741" width="0.9322%" height="15" fill="rgb(245,182,24)"/><text x="14.2331%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.85%)</title><rect x="14.0678%" y="725" width="0.8475%" height="15" fill="rgb(242,14,37)"/><text x="14.3178%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.17%)</title><rect x="14.7458%" y="709" width="0.1695%" height="15" fill="rgb(246,228,12)"/><text x="14.9958%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="14.9153%" y="741" width="0.1695%" height="15" fill="rgb(213,55,15)"/><text x="15.1653%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="14.9153%" y="725" width="0.1695%" height="15" fill="rgb(209,9,3)"/><text x="15.1653%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (17 samples, 1.44%)</title><rect x="13.7288%" y="773" width="1.4407%" height="15" fill="rgb(230,59,30)"/><text x="13.9788%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.25%)</title><rect x="14.9153%" y="757" width="0.2542%" height="15" fill="rgb(209,121,21)"/><text x="15.1653%" y="767.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.17%)</title><rect x="15.2542%" y="709" width="0.1695%" height="15" fill="rgb(220,109,13)"/><text x="15.5042%" y="719.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.17%)</title><rect x="15.2542%" y="693" width="0.1695%" height="15" fill="rgb(232,18,1)"/><text x="15.5042%" y="703.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.17%)</title><rect x="15.2542%" y="677" width="0.1695%" height="15" fill="rgb(215,41,42)"/><text x="15.5042%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.34%)</title><rect x="15.1695%" y="773" width="0.3390%" height="15" fill="rgb(224,123,36)"/><text x="15.4195%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.25%)</title><rect x="15.2542%" y="757" width="0.2542%" height="15" fill="rgb(240,125,3)"/><text x="15.5042%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.25%)</title><rect x="15.2542%" y="741" width="0.2542%" height="15" fill="rgb(205,98,50)"/><text x="15.5042%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.25%)</title><rect x="15.2542%" y="725" width="0.2542%" height="15" fill="rgb(205,185,37)"/><text x="15.5042%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.34%)</title><rect x="15.5932%" y="709" width="0.3390%" height="15" fill="rgb(238,207,15)"/><text x="15.8432%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.34%)</title><rect x="15.5932%" y="693" width="0.3390%" height="15" fill="rgb(213,199,42)"/><text x="15.8432%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.51%)</title><rect x="15.5932%" y="725" width="0.5085%" height="15" fill="rgb(235,201,11)"/><text x="15.8432%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.17%)</title><rect x="15.9322%" y="709" width="0.1695%" height="15" fill="rgb(207,46,11)"/><text x="16.1822%" y="719.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.17%)</title><rect x="16.1864%" y="709" width="0.1695%" height="15" fill="rgb(241,35,35)"/><text x="16.4364%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.93%)</title><rect x="15.5932%" y="757" width="0.9322%" height="15" fill="rgb(243,32,47)"/><text x="15.8432%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.93%)</title><rect x="15.5932%" y="741" width="0.9322%" height="15" fill="rgb(247,202,23)"/><text x="15.8432%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.42%)</title><rect x="16.1017%" y="725" width="0.4237%" height="15" fill="rgb(219,102,11)"/><text x="16.3517%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="16.3559%" y="709" width="0.1695%" height="15" fill="rgb(243,110,44)"/><text x="16.6059%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="16.3559%" y="693" width="0.1695%" height="15" fill="rgb(222,74,54)"/><text x="16.6059%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.42%)</title><rect x="16.6949%" y="709" width="0.4237%" height="15" fill="rgb(216,99,12)"/><text x="16.9449%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.17%)</title><rect x="16.9492%" y="693" width="0.1695%" height="15" fill="rgb(226,22,26)"/><text x="17.1992%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.17%)</title><rect x="16.9492%" y="677" width="0.1695%" height="15" fill="rgb(217,163,10)"/><text x="17.1992%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.17%)</title><rect x="16.9492%" y="661" width="0.1695%" height="15" fill="rgb(213,25,53)"/><text x="17.1992%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.17%)</title><rect x="16.9492%" y="645" width="0.1695%" height="15" fill="rgb(252,105,26)"/><text x="17.1992%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.68%)</title><rect x="16.5254%" y="741" width="0.6780%" height="15" fill="rgb(220,39,43)"/><text x="16.7754%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.68%)</title><rect x="16.5254%" y="725" width="0.6780%" height="15" fill="rgb(229,68,48)"/><text x="16.7754%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.42%)</title><rect x="17.4576%" y="725" width="0.4237%" height="15" fill="rgb(252,8,32)"/><text x="17.7076%" y="735.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.34%)</title><rect x="17.5424%" y="709" width="0.3390%" height="15" fill="rgb(223,20,43)"/><text x="17.7924%" y="719.50"></text></g><g><title>_int_realloc (4 samples, 0.34%)</title><rect x="17.5424%" y="693" width="0.3390%" height="15" fill="rgb(229,81,49)"/><text x="17.7924%" y="703.50"></text></g><g><title>_int_free (4 samples, 0.34%)</title><rect x="17.5424%" y="677" width="0.3390%" height="15" fill="rgb(236,28,36)"/><text x="17.7924%" y="687.50"></text></g><g><title>malloc_consolidate (4 samples, 0.34%)</title><rect x="17.5424%" y="661" width="0.3390%" height="15" fill="rgb(249,185,26)"/><text x="17.7924%" y="671.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="17.8814%" y="725" width="0.2542%" height="15" fill="rgb(249,174,33)"/><text x="18.1314%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (20 samples, 1.69%)</title><rect x="16.5254%" y="757" width="1.6949%" height="15" fill="rgb(233,201,37)"/><text x="16.7754%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 1.02%)</title><rect x="17.2034%" y="741" width="1.0169%" height="15" fill="rgb(221,78,26)"/><text x="17.4534%" y="751.50"></text></g><g><title>core::fmt::write (55 samples, 4.66%)</title><rect x="13.6441%" y="789" width="4.6610%" height="15" fill="rgb(250,127,30)"/><text x="13.8941%" y="799.50">core:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (33 samples, 2.80%)</title><rect x="15.5085%" y="773" width="2.7966%" height="15" fill="rgb(230,49,44)"/><text x="15.7585%" y="783.50">&lt;s..</text></g><g><title>__GI___libc_free (2 samples, 0.17%)</title><rect x="18.5593%" y="741" width="0.1695%" height="15" fill="rgb(229,67,23)"/><text x="18.8093%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.51%)</title><rect x="18.3051%" y="789" width="0.5085%" height="15" fill="rgb(249,83,47)"/><text x="18.5551%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.34%)</title><rect x="18.4746%" y="773" width="0.3390%" height="15" fill="rgb(215,43,3)"/><text x="18.7246%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="18.4746%" y="757" width="0.3390%" height="15" fill="rgb(238,154,13)"/><text x="18.7246%" y="767.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (4 samples, 0.34%)</title><rect x="18.8136%" y="789" width="0.3390%" height="15" fill="rgb(219,56,2)"/><text x="19.0636%" y="799.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="18.9831%" y="773" width="0.1695%" height="15" fill="rgb(233,0,4)"/><text x="19.2331%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (2 samples, 0.17%)</title><rect x="18.9831%" y="757" width="0.1695%" height="15" fill="rgb(235,30,7)"/><text x="19.2331%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.17%)</title><rect x="18.9831%" y="741" width="0.1695%" height="15" fill="rgb(250,79,13)"/><text x="19.2331%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="19.1525%" y="773" width="0.1695%" height="15" fill="rgb(211,146,34)"/><text x="19.4025%" y="783.50"></text></g><g><title>decor::helpers::str_ident_match (6 samples, 0.51%)</title><rect x="19.1525%" y="789" width="0.5085%" height="15" fill="rgb(228,22,38)"/><text x="19.4025%" y="799.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.17%)</title><rect x="19.4915%" y="773" width="0.1695%" height="15" fill="rgb(235,168,5)"/><text x="19.7415%" y="783.50"></text></g><g><title>core::fmt::write (5 samples, 0.42%)</title><rect x="20.0000%" y="773" width="0.4237%" height="15" fill="rgb(221,155,16)"/><text x="20.2500%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.34%)</title><rect x="20.0847%" y="757" width="0.3390%" height="15" fill="rgb(215,215,53)"/><text x="20.3347%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.17%)</title><rect x="20.2542%" y="741" width="0.1695%" height="15" fill="rgb(223,4,10)"/><text x="20.5042%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.25%)</title><rect x="20.5932%" y="661" width="0.2542%" height="15" fill="rgb(234,103,6)"/><text x="20.8432%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.42%)</title><rect x="20.5932%" y="693" width="0.4237%" height="15" fill="rgb(227,97,0)"/><text x="20.8432%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.42%)</title><rect x="20.5932%" y="677" width="0.4237%" height="15" fill="rgb(234,150,53)"/><text x="20.8432%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.17%)</title><rect x="20.8475%" y="661" width="0.1695%" height="15" fill="rgb(228,201,54)"/><text x="21.0975%" y="671.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.68%)</title><rect x="20.4237%" y="757" width="0.6780%" height="15" fill="rgb(222,22,37)"/><text x="20.6737%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.68%)</title><rect x="20.4237%" y="741" width="0.6780%" height="15" fill="rgb(237,53,32)"/><text x="20.6737%" y="751.50"></text></g><g><title>core::fmt::write (8 samples, 0.68%)</title><rect x="20.4237%" y="725" width="0.6780%" height="15" fill="rgb(233,25,53)"/><text x="20.6737%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (7 samples, 0.59%)</title><rect x="20.5085%" y="709" width="0.5932%" height="15" fill="rgb(210,40,34)"/><text x="20.7585%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.17%)</title><rect x="21.1017%" y="757" width="0.1695%" height="15" fill="rgb(241,220,44)"/><text x="21.3517%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (178 samples, 15.08%)</title><rect x="6.3559%" y="821" width="15.0847%" height="15" fill="rgb(235,28,35)"/><text x="6.6059%" y="831.50">decor::query_transforme..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (178 samples, 15.08%)</title><rect x="6.3559%" y="805" width="15.0847%" height="15" fill="rgb(210,56,17)"/><text x="6.6059%" y="815.50">decor::query_transforme..</text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (21 samples, 1.78%)</title><rect x="19.6610%" y="789" width="1.7797%" height="15" fill="rgb(224,130,29)"/><text x="19.9110%" y="799.50">d..</text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (12 samples, 1.02%)</title><rect x="20.4237%" y="773" width="1.0169%" height="15" fill="rgb(235,212,8)"/><text x="20.6737%" y="783.50"></text></g><g><title>decor::helpers::str_subset_of_idents (2 samples, 0.17%)</title><rect x="21.2712%" y="757" width="0.1695%" height="15" fill="rgb(223,33,50)"/><text x="21.5212%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="21.5254%" y="725" width="0.1695%" height="15" fill="rgb(219,149,13)"/><text x="21.7754%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="21.6949%" y="725" width="0.1695%" height="15" fill="rgb(250,156,29)"/><text x="21.9449%" y="735.50"></text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="21.6949%" y="709" width="0.1695%" height="15" fill="rgb(216,193,19)"/><text x="21.9449%" y="719.50"></text></g><g><title>sysmalloc (2 samples, 0.17%)</title><rect x="21.6949%" y="693" width="0.1695%" height="15" fill="rgb(216,135,14)"/><text x="21.9449%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (6 samples, 0.51%)</title><rect x="21.4407%" y="805" width="0.5085%" height="15" fill="rgb(241,47,5)"/><text x="21.6907%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (6 samples, 0.51%)</title><rect x="21.4407%" y="789" width="0.5085%" height="15" fill="rgb(233,42,35)"/><text x="21.6907%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (6 samples, 0.51%)</title><rect x="21.4407%" y="773" width="0.5085%" height="15" fill="rgb(231,13,6)"/><text x="21.6907%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 0.42%)</title><rect x="21.5254%" y="757" width="0.4237%" height="15" fill="rgb(207,181,40)"/><text x="21.7754%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.42%)</title><rect x="21.5254%" y="741" width="0.4237%" height="15" fill="rgb(254,173,49)"/><text x="21.7754%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.34%)</title><rect x="21.9492%" y="773" width="0.3390%" height="15" fill="rgb(221,1,38)"/><text x="22.1992%" y="783.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.34%)</title><rect x="21.9492%" y="757" width="0.3390%" height="15" fill="rgb(206,124,46)"/><text x="22.1992%" y="767.50"></text></g><g><title>_int_realloc (4 samples, 0.34%)</title><rect x="21.9492%" y="741" width="0.3390%" height="15" fill="rgb(249,21,11)"/><text x="22.1992%" y="751.50"></text></g><g><title>_int_malloc (4 samples, 0.34%)</title><rect x="21.9492%" y="725" width="0.3390%" height="15" fill="rgb(222,201,40)"/><text x="22.1992%" y="735.50"></text></g><g><title>malloc_consolidate (4 samples, 0.34%)</title><rect x="21.9492%" y="709" width="0.3390%" height="15" fill="rgb(235,61,29)"/><text x="22.1992%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.51%)</title><rect x="23.5593%" y="741" width="0.5085%" height="15" fill="rgb(219,207,3)"/><text x="23.8093%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (33 samples, 2.80%)</title><rect x="22.2881%" y="757" width="2.7966%" height="15" fill="rgb(222,56,46)"/><text x="22.5381%" y="767.50">sq..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.93%)</title><rect x="24.1525%" y="741" width="0.9322%" height="15" fill="rgb(239,76,54)"/><text x="24.4025%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.68%)</title><rect x="24.4068%" y="725" width="0.6780%" height="15" fill="rgb(231,124,27)"/><text x="24.6568%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (7 samples, 0.59%)</title><rect x="24.4915%" y="709" width="0.5932%" height="15" fill="rgb(249,195,6)"/><text x="24.7415%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (7 samples, 0.59%)</title><rect x="24.4915%" y="693" width="0.5932%" height="15" fill="rgb(237,174,47)"/><text x="24.7415%" y="703.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.34%)</title><rect x="24.7458%" y="677" width="0.3390%" height="15" fill="rgb(206,201,31)"/><text x="24.9958%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (225 samples, 19.07%)</title><rect x="6.3559%" y="837" width="19.0678%" height="15" fill="rgb(231,57,52)"/><text x="6.6059%" y="847.50">&lt;decor::Shim as msql_srv::Mysq..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (47 samples, 3.98%)</title><rect x="21.4407%" y="821" width="3.9831%" height="15" fill="rgb(248,177,22)"/><text x="21.6907%" y="831.50">deco..</text></g><g><title>sql_parser::parser::parse_statements (41 samples, 3.47%)</title><rect x="21.9492%" y="805" width="3.4746%" height="15" fill="rgb(215,211,37)"/><text x="22.1992%" y="815.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (41 samples, 3.47%)</title><rect x="21.9492%" y="789" width="3.4746%" height="15" fill="rgb(241,128,51)"/><text x="22.1992%" y="799.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (37 samples, 3.14%)</title><rect x="22.2881%" y="773" width="3.1356%" height="15" fill="rgb(227,165,31)"/><text x="22.5381%" y="783.50">sql..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (4 samples, 0.34%)</title><rect x="25.0847%" y="757" width="0.3390%" height="15" fill="rgb(228,167,24)"/><text x="25.3347%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.25%)</title><rect x="25.1695%" y="741" width="0.2542%" height="15" fill="rgb(228,143,12)"/><text x="25.4195%" y="751.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.25%)</title><rect x="25.1695%" y="725" width="0.2542%" height="15" fill="rgb(249,149,8)"/><text x="25.4195%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="25.6780%" y="837" width="0.1695%" height="15" fill="rgb(243,35,44)"/><text x="25.9280%" y="847.50"></text></g><g><title>release_sock (2 samples, 0.17%)</title><rect x="26.5254%" y="469" width="0.1695%" height="15" fill="rgb(246,89,9)"/><text x="26.7754%" y="479.50"></text></g><g><title>tcp_release_cb (2 samples, 0.17%)</title><rect x="26.5254%" y="453" width="0.1695%" height="15" fill="rgb(233,213,13)"/><text x="26.7754%" y="463.50"></text></g><g><title>enqueue_task (2 samples, 0.17%)</title><rect x="27.7119%" y="69" width="0.1695%" height="15" fill="rgb(233,141,41)"/><text x="27.9619%" y="79.50"></text></g><g><title>psi_task_change (2 samples, 0.17%)</title><rect x="27.7119%" y="53" width="0.1695%" height="15" fill="rgb(239,167,4)"/><text x="27.9619%" y="63.50"></text></g><g><title>psi_group_change (2 samples, 0.17%)</title><rect x="27.7119%" y="37" width="0.1695%" height="15" fill="rgb(209,217,16)"/><text x="27.9619%" y="47.50"></text></g><g><title>sock_def_readable (6 samples, 0.51%)</title><rect x="27.6271%" y="133" width="0.5085%" height="15" fill="rgb(219,88,35)"/><text x="27.8771%" y="143.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.51%)</title><rect x="27.6271%" y="117" width="0.5085%" height="15" fill="rgb(220,193,23)"/><text x="27.8771%" y="127.50"></text></g><g><title>__wake_up_common (6 samples, 0.51%)</title><rect x="27.6271%" y="101" width="0.5085%" height="15" fill="rgb(230,90,52)"/><text x="27.8771%" y="111.50"></text></g><g><title>try_to_wake_up (5 samples, 0.42%)</title><rect x="27.7119%" y="85" width="0.4237%" height="15" fill="rgb(252,106,19)"/><text x="27.9619%" y="95.50"></text></g><g><title>update_rq_clock (2 samples, 0.17%)</title><rect x="27.9661%" y="69" width="0.1695%" height="15" fill="rgb(206,74,20)"/><text x="28.2161%" y="79.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.68%)</title><rect x="27.6271%" y="165" width="0.6780%" height="15" fill="rgb(230,138,44)"/><text x="27.8771%" y="175.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.68%)</title><rect x="27.6271%" y="149" width="0.6780%" height="15" fill="rgb(235,182,43)"/><text x="27.8771%" y="159.50"></text></g><g><title>tcp_ack (2 samples, 0.17%)</title><rect x="28.1356%" y="133" width="0.1695%" height="15" fill="rgb(242,16,51)"/><text x="28.3856%" y="143.50"></text></g><g><title>ip_local_deliver (13 samples, 1.10%)</title><rect x="27.2881%" y="229" width="1.1017%" height="15" fill="rgb(248,9,4)"/><text x="27.5381%" y="239.50"></text></g><g><title>ip_local_deliver_finish (13 samples, 1.10%)</title><rect x="27.2881%" y="213" width="1.1017%" height="15" fill="rgb(210,31,22)"/><text x="27.5381%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.93%)</title><rect x="27.4576%" y="197" width="0.9322%" height="15" fill="rgb(239,54,39)"/><text x="27.7076%" y="207.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.93%)</title><rect x="27.4576%" y="181" width="0.9322%" height="15" fill="rgb(230,99,41)"/><text x="27.7076%" y="191.50"></text></g><g><title>__ip_queue_xmit (19 samples, 1.61%)</title><rect x="26.8644%" y="405" width="1.6102%" height="15" fill="rgb(253,106,12)"/><text x="27.1144%" y="415.50"></text></g><g><title>ip_output (18 samples, 1.53%)</title><rect x="26.9492%" y="389" width="1.5254%" height="15" fill="rgb(213,46,41)"/><text x="27.1992%" y="399.50"></text></g><g><title>ip_finish_output2 (18 samples, 1.53%)</title><rect x="26.9492%" y="373" width="1.5254%" height="15" fill="rgb(215,133,35)"/><text x="27.1992%" y="383.50"></text></g><g><title>__local_bh_enable_ip (16 samples, 1.36%)</title><rect x="27.1186%" y="357" width="1.3559%" height="15" fill="rgb(213,28,5)"/><text x="27.3686%" y="367.50"></text></g><g><title>do_softirq (15 samples, 1.27%)</title><rect x="27.2034%" y="341" width="1.2712%" height="15" fill="rgb(215,77,49)"/><text x="27.4534%" y="351.50"></text></g><g><title>do_softirq_own_stack (15 samples, 1.27%)</title><rect x="27.2034%" y="325" width="1.2712%" height="15" fill="rgb(248,100,22)"/><text x="27.4534%" y="335.50"></text></g><g><title>__do_softirq (15 samples, 1.27%)</title><rect x="27.2034%" y="309" width="1.2712%" height="15" fill="rgb(208,67,9)"/><text x="27.4534%" y="319.50"></text></g><g><title>net_rx_action (14 samples, 1.19%)</title><rect x="27.2881%" y="293" width="1.1864%" height="15" fill="rgb(219,133,21)"/><text x="27.5381%" y="303.50"></text></g><g><title>process_backlog (14 samples, 1.19%)</title><rect x="27.2881%" y="277" width="1.1864%" height="15" fill="rgb(246,46,29)"/><text x="27.5381%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (14 samples, 1.19%)</title><rect x="27.2881%" y="261" width="1.1864%" height="15" fill="rgb(246,185,52)"/><text x="27.5381%" y="271.50"></text></g><g><title>ip_rcv (14 samples, 1.19%)</title><rect x="27.2881%" y="245" width="1.1864%" height="15" fill="rgb(252,136,11)"/><text x="27.5381%" y="255.50"></text></g><g><title>__tcp_transmit_skb (21 samples, 1.78%)</title><rect x="26.8644%" y="421" width="1.7797%" height="15" fill="rgb(219,138,53)"/><text x="27.1144%" y="431.50">_..</text></g><g><title>__tcp_push_pending_frames (23 samples, 1.95%)</title><rect x="26.7797%" y="453" width="1.9492%" height="15" fill="rgb(211,51,23)"/><text x="27.0297%" y="463.50">_..</text></g><g><title>tcp_write_xmit (22 samples, 1.86%)</title><rect x="26.8644%" y="437" width="1.8644%" height="15" fill="rgb(247,221,28)"/><text x="27.1144%" y="447.50">t..</text></g><g><title>sock_sendmsg (28 samples, 2.37%)</title><rect x="26.5254%" y="501" width="2.3729%" height="15" fill="rgb(251,222,45)"/><text x="26.7754%" y="511.50">so..</text></g><g><title>tcp_sendmsg (28 samples, 2.37%)</title><rect x="26.5254%" y="485" width="2.3729%" height="15" fill="rgb(217,162,53)"/><text x="26.7754%" y="495.50">tc..</text></g><g><title>tcp_sendmsg_locked (26 samples, 2.20%)</title><rect x="26.6949%" y="469" width="2.2034%" height="15" fill="rgb(229,93,14)"/><text x="26.9449%" y="479.50">t..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.17%)</title><rect x="28.7288%" y="453" width="0.1695%" height="15" fill="rgb(209,67,49)"/><text x="28.9788%" y="463.50"></text></g><g><title>__alloc_skb (2 samples, 0.17%)</title><rect x="28.7288%" y="437" width="0.1695%" height="15" fill="rgb(213,87,29)"/><text x="28.9788%" y="447.50"></text></g><g><title>__x64_sys_sendto (29 samples, 2.46%)</title><rect x="26.5254%" y="533" width="2.4576%" height="15" fill="rgb(205,151,52)"/><text x="26.7754%" y="543.50">__..</text></g><g><title>__sys_sendto (29 samples, 2.46%)</title><rect x="26.5254%" y="517" width="2.4576%" height="15" fill="rgb(253,215,39)"/><text x="26.7754%" y="527.50">__..</text></g><g><title>do_syscall_64 (31 samples, 2.63%)</title><rect x="26.4407%" y="549" width="2.6271%" height="15" fill="rgb(221,220,41)"/><text x="26.6907%" y="559.50">do..</text></g><g><title>entry_SYSCALL_64 (33 samples, 2.80%)</title><rect x="26.4407%" y="565" width="2.7966%" height="15" fill="rgb(218,133,21)"/><text x="26.6907%" y="575.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.17%)</title><rect x="29.0678%" y="549" width="0.1695%" height="15" fill="rgb(221,193,43)"/><text x="29.3178%" y="559.50"></text></g><g><title>__libc_start_main (36 samples, 3.05%)</title><rect x="26.2712%" y="837" width="3.0508%" height="15" fill="rgb(240,128,52)"/><text x="26.5212%" y="847.50">__l..</text></g><g><title>main (36 samples, 3.05%)</title><rect x="26.2712%" y="821" width="3.0508%" height="15" fill="rgb(253,114,12)"/><text x="26.5212%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (36 samples, 3.05%)</title><rect x="26.2712%" y="805" width="3.0508%" height="15" fill="rgb(215,223,47)"/><text x="26.5212%" y="815.50">std..</text></g><g><title>std::panic::catch_unwind (36 samples, 3.05%)</title><rect x="26.2712%" y="789" width="3.0508%" height="15" fill="rgb(248,225,23)"/><text x="26.5212%" y="799.50">std..</text></g><g><title>std::panicking::try (36 samples, 3.05%)</title><rect x="26.2712%" y="773" width="3.0508%" height="15" fill="rgb(250,108,0)"/><text x="26.5212%" y="783.50">std..</text></g><g><title>std::panicking::try::do_call (36 samples, 3.05%)</title><rect x="26.2712%" y="757" width="3.0508%" height="15" fill="rgb(228,208,7)"/><text x="26.5212%" y="767.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (36 samples, 3.05%)</title><rect x="26.2712%" y="741" width="3.0508%" height="15" fill="rgb(244,45,10)"/><text x="26.5212%" y="751.50">cor..</text></g><g><title>std::rt::lang_start::_{{closure}} (36 samples, 3.05%)</title><rect x="26.2712%" y="725" width="3.0508%" height="15" fill="rgb(207,125,25)"/><text x="26.5212%" y="735.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 3.05%)</title><rect x="26.2712%" y="709" width="3.0508%" height="15" fill="rgb(210,195,18)"/><text x="26.5212%" y="719.50">std..</text></g><g><title>lobsters::main (36 samples, 3.05%)</title><rect x="26.2712%" y="693" width="3.0508%" height="15" fill="rgb(249,80,12)"/><text x="26.5212%" y="703.50">lob..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (36 samples, 3.05%)</title><rect x="26.2712%" y="677" width="3.0508%" height="15" fill="rgb(221,65,9)"/><text x="26.5212%" y="687.50">mys..</text></g><g><title>mysql::conn::Conn::_query (36 samples, 3.05%)</title><rect x="26.2712%" y="661" width="3.0508%" height="15" fill="rgb(235,49,36)"/><text x="26.5212%" y="671.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (36 samples, 3.05%)</title><rect x="26.2712%" y="645" width="3.0508%" height="15" fill="rgb(225,32,20)"/><text x="26.5212%" y="655.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (35 samples, 2.97%)</title><rect x="26.3559%" y="629" width="2.9661%" height="15" fill="rgb(215,141,46)"/><text x="26.6059%" y="639.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (35 samples, 2.97%)</title><rect x="26.3559%" y="613" width="2.9661%" height="15" fill="rgb(250,160,47)"/><text x="26.6059%" y="623.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (35 samples, 2.97%)</title><rect x="26.3559%" y="597" width="2.9661%" height="15" fill="rgb(216,222,40)"/><text x="26.6059%" y="607.50">std..</text></g><g><title>__libc_send (35 samples, 2.97%)</title><rect x="26.3559%" y="581" width="2.9661%" height="15" fill="rgb(234,217,39)"/><text x="26.6059%" y="591.50">__l..</text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="29.5763%" y="837" width="0.1695%" height="15" fill="rgb(207,178,40)"/><text x="29.8263%" y="847.50"></text></g><g><title>_int_realloc (4 samples, 0.34%)</title><rect x="29.7458%" y="837" width="0.3390%" height="15" fill="rgb(221,136,13)"/><text x="29.9958%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.34%)</title><rect x="30.0847%" y="837" width="0.3390%" height="15" fill="rgb(249,199,10)"/><text x="30.3347%" y="847.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.25%)</title><rect x="30.4237%" y="837" width="0.2542%" height="15" fill="rgb(249,222,13)"/><text x="30.6737%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.17%)</title><rect x="30.7627%" y="837" width="0.1695%" height="15" fill="rgb(244,185,38)"/><text x="31.0127%" y="847.50"></text></g><g><title>lock_sock_nested (2 samples, 0.17%)</title><rect x="31.2712%" y="565" width="0.1695%" height="15" fill="rgb(236,202,9)"/><text x="31.5212%" y="575.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.25%)</title><rect x="32.0339%" y="453" width="0.2542%" height="15" fill="rgb(250,229,37)"/><text x="32.2839%" y="463.50"></text></g><g><title>enqueue_task (4 samples, 0.34%)</title><rect x="32.5424%" y="149" width="0.3390%" height="15" fill="rgb(206,174,23)"/><text x="32.7924%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.25%)</title><rect x="32.6271%" y="133" width="0.2542%" height="15" fill="rgb(211,33,43)"/><text x="32.8771%" y="143.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.17%)</title><rect x="32.8814%" y="149" width="0.1695%" height="15" fill="rgb(245,58,50)"/><text x="33.1314%" y="159.50"></text></g><g><title>sock_def_readable (11 samples, 0.93%)</title><rect x="32.5424%" y="229" width="0.9322%" height="15" fill="rgb(244,68,36)"/><text x="32.7924%" y="239.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.93%)</title><rect x="32.5424%" y="213" width="0.9322%" height="15" fill="rgb(232,229,15)"/><text x="32.7924%" y="223.50"></text></g><g><title>__wake_up_common (11 samples, 0.93%)</title><rect x="32.5424%" y="197" width="0.9322%" height="15" fill="rgb(254,30,23)"/><text x="32.7924%" y="207.50"></text></g><g><title>pollwake (11 samples, 0.93%)</title><rect x="32.5424%" y="181" width="0.9322%" height="15" fill="rgb(235,160,14)"/><text x="32.7924%" y="191.50"></text></g><g><title>try_to_wake_up (11 samples, 0.93%)</title><rect x="32.5424%" y="165" width="0.9322%" height="15" fill="rgb(212,155,44)"/><text x="32.7924%" y="175.50"></text></g><g><title>update_rq_clock (4 samples, 0.34%)</title><rect x="33.1356%" y="149" width="0.3390%" height="15" fill="rgb(226,2,50)"/><text x="33.3856%" y="159.50"></text></g><g><title>tcp_ack (3 samples, 0.25%)</title><rect x="33.4746%" y="229" width="0.2542%" height="15" fill="rgb(234,177,6)"/><text x="33.7246%" y="239.50"></text></g><g><title>ip_local_deliver (19 samples, 1.61%)</title><rect x="32.2881%" y="325" width="1.6102%" height="15" fill="rgb(217,24,9)"/><text x="32.5381%" y="335.50"></text></g><g><title>ip_local_deliver_finish (19 samples, 1.61%)</title><rect x="32.2881%" y="309" width="1.6102%" height="15" fill="rgb(220,13,46)"/><text x="32.5381%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (19 samples, 1.61%)</title><rect x="32.2881%" y="293" width="1.6102%" height="15" fill="rgb(239,221,27)"/><text x="32.5381%" y="303.50"></text></g><g><title>tcp_v4_rcv (19 samples, 1.61%)</title><rect x="32.2881%" y="277" width="1.6102%" height="15" fill="rgb(222,198,25)"/><text x="32.5381%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 1.53%)</title><rect x="32.3729%" y="261" width="1.5254%" height="15" fill="rgb(211,99,13)"/><text x="32.6229%" y="271.50"></text></g><g><title>tcp_rcv_established (17 samples, 1.44%)</title><rect x="32.4576%" y="245" width="1.4407%" height="15" fill="rgb(232,111,31)"/><text x="32.7076%" y="255.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.17%)</title><rect x="33.7288%" y="229" width="0.1695%" height="15" fill="rgb(245,82,37)"/><text x="33.9788%" y="239.50"></text></g><g><title>__tcp_transmit_skb (27 samples, 2.29%)</title><rect x="31.6949%" y="517" width="2.2881%" height="15" fill="rgb(227,149,46)"/><text x="31.9449%" y="527.50">_..</text></g><g><title>__ip_queue_xmit (25 samples, 2.12%)</title><rect x="31.8644%" y="501" width="2.1186%" height="15" fill="rgb(218,36,50)"/><text x="32.1144%" y="511.50">_..</text></g><g><title>ip_output (24 samples, 2.03%)</title><rect x="31.9492%" y="485" width="2.0339%" height="15" fill="rgb(226,80,48)"/><text x="32.1992%" y="495.50">i..</text></g><g><title>ip_finish_output2 (23 samples, 1.95%)</title><rect x="32.0339%" y="469" width="1.9492%" height="15" fill="rgb(238,224,15)"/><text x="32.2839%" y="479.50">i..</text></g><g><title>__local_bh_enable_ip (20 samples, 1.69%)</title><rect x="32.2881%" y="453" width="1.6949%" height="15" fill="rgb(241,136,10)"/><text x="32.5381%" y="463.50"></text></g><g><title>do_softirq (20 samples, 1.69%)</title><rect x="32.2881%" y="437" width="1.6949%" height="15" fill="rgb(208,32,45)"/><text x="32.5381%" y="447.50"></text></g><g><title>do_softirq_own_stack (20 samples, 1.69%)</title><rect x="32.2881%" y="421" width="1.6949%" height="15" fill="rgb(207,135,9)"/><text x="32.5381%" y="431.50"></text></g><g><title>__do_softirq (20 samples, 1.69%)</title><rect x="32.2881%" y="405" width="1.6949%" height="15" fill="rgb(206,86,44)"/><text x="32.5381%" y="415.50"></text></g><g><title>net_rx_action (20 samples, 1.69%)</title><rect x="32.2881%" y="389" width="1.6949%" height="15" fill="rgb(245,177,15)"/><text x="32.5381%" y="399.50"></text></g><g><title>process_backlog (20 samples, 1.69%)</title><rect x="32.2881%" y="373" width="1.6949%" height="15" fill="rgb(206,64,50)"/><text x="32.5381%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (20 samples, 1.69%)</title><rect x="32.2881%" y="357" width="1.6949%" height="15" fill="rgb(234,36,40)"/><text x="32.5381%" y="367.50"></text></g><g><title>ip_rcv (20 samples, 1.69%)</title><rect x="32.2881%" y="341" width="1.6949%" height="15" fill="rgb(213,64,8)"/><text x="32.5381%" y="351.50"></text></g><g><title>__tcp_push_pending_frames (30 samples, 2.54%)</title><rect x="31.6949%" y="549" width="2.5424%" height="15" fill="rgb(210,75,36)"/><text x="31.9449%" y="559.50">__..</text></g><g><title>tcp_write_xmit (30 samples, 2.54%)</title><rect x="31.6949%" y="533" width="2.5424%" height="15" fill="rgb(229,88,21)"/><text x="31.9449%" y="543.50">tc..</text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.17%)</title><rect x="34.0678%" y="517" width="0.1695%" height="15" fill="rgb(252,204,47)"/><text x="34.3178%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.17%)</title><rect x="34.3220%" y="549" width="0.1695%" height="15" fill="rgb(208,77,27)"/><text x="34.5720%" y="559.50"></text></g><g><title>__alloc_skb (2 samples, 0.17%)</title><rect x="34.3220%" y="533" width="0.1695%" height="15" fill="rgb(221,76,26)"/><text x="34.5720%" y="543.50"></text></g><g><title>do_syscall_64 (42 samples, 3.56%)</title><rect x="31.1864%" y="645" width="3.5593%" height="15" fill="rgb(225,139,18)"/><text x="31.4364%" y="655.50">do_s..</text></g><g><title>__x64_sys_sendto (42 samples, 3.56%)</title><rect x="31.1864%" y="629" width="3.5593%" height="15" fill="rgb(230,137,11)"/><text x="31.4364%" y="639.50">__x6..</text></g><g><title>__sys_sendto (42 samples, 3.56%)</title><rect x="31.1864%" y="613" width="3.5593%" height="15" fill="rgb(212,28,1)"/><text x="31.4364%" y="623.50">__sy..</text></g><g><title>sock_sendmsg (41 samples, 3.47%)</title><rect x="31.2712%" y="597" width="3.4746%" height="15" fill="rgb(248,164,17)"/><text x="31.5212%" y="607.50">soc..</text></g><g><title>tcp_sendmsg (41 samples, 3.47%)</title><rect x="31.2712%" y="581" width="3.4746%" height="15" fill="rgb(222,171,42)"/><text x="31.5212%" y="591.50">tcp..</text></g><g><title>tcp_sendmsg_locked (39 samples, 3.31%)</title><rect x="31.4407%" y="565" width="3.3051%" height="15" fill="rgb(243,84,45)"/><text x="31.6907%" y="575.50">tcp..</text></g><g><title>tcp_send_mss (2 samples, 0.17%)</title><rect x="34.5763%" y="549" width="0.1695%" height="15" fill="rgb(252,49,23)"/><text x="34.8263%" y="559.50"></text></g><g><title>tcp_current_mss (2 samples, 0.17%)</title><rect x="34.5763%" y="533" width="0.1695%" height="15" fill="rgb(215,19,7)"/><text x="34.8263%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (44 samples, 3.73%)</title><rect x="31.1864%" y="661" width="3.7288%" height="15" fill="rgb(238,81,41)"/><text x="31.4364%" y="671.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.17%)</title><rect x="34.7458%" y="645" width="0.1695%" height="15" fill="rgb(210,199,37)"/><text x="34.9958%" y="655.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (48 samples, 4.07%)</title><rect x="30.9322%" y="773" width="4.0678%" height="15" fill="rgb(244,192,49)"/><text x="31.1822%" y="783.50">&lt;mys..</text></g><g><title>mysql::conn::Conn::_query (46 samples, 3.90%)</title><rect x="31.1017%" y="757" width="3.8983%" height="15" fill="rgb(226,211,11)"/><text x="31.3517%" y="767.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (45 samples, 3.81%)</title><rect x="31.1864%" y="741" width="3.8136%" height="15" fill="rgb(236,162,54)"/><text x="31.4364%" y="751.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (45 samples, 3.81%)</title><rect x="31.1864%" y="725" width="3.8136%" height="15" fill="rgb(220,229,9)"/><text x="31.4364%" y="735.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (45 samples, 3.81%)</title><rect x="31.1864%" y="709" width="3.8136%" height="15" fill="rgb(250,87,22)"/><text x="31.4364%" y="719.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (45 samples, 3.81%)</title><rect x="31.1864%" y="693" width="3.8136%" height="15" fill="rgb(239,43,17)"/><text x="31.4364%" y="703.50">std:..</text></g><g><title>__libc_send (45 samples, 3.81%)</title><rect x="31.1864%" y="677" width="3.8136%" height="15" fill="rgb(231,177,25)"/><text x="31.4364%" y="687.50">__li..</text></g><g><title>__GI___libc_malloc (3 samples, 0.25%)</title><rect x="35.1695%" y="661" width="0.2542%" height="15" fill="rgb(219,179,1)"/><text x="35.4195%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.51%)</title><rect x="35.0000%" y="709" width="0.5085%" height="15" fill="rgb(238,219,53)"/><text x="35.2500%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.51%)</title><rect x="35.0000%" y="693" width="0.5085%" height="15" fill="rgb(232,167,36)"/><text x="35.2500%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.51%)</title><rect x="35.0000%" y="677" width="0.5085%" height="15" fill="rgb(244,19,51)"/><text x="35.2500%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.85%)</title><rect x="35.0000%" y="741" width="0.8475%" height="15" fill="rgb(224,6,22)"/><text x="35.2500%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.85%)</title><rect x="35.0000%" y="725" width="0.8475%" height="15" fill="rgb(224,145,5)"/><text x="35.2500%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.34%)</title><rect x="35.5085%" y="709" width="0.3390%" height="15" fill="rgb(234,130,49)"/><text x="35.7585%" y="719.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.17%)</title><rect x="36.0169%" y="677" width="0.1695%" height="15" fill="rgb(254,6,2)"/><text x="36.2669%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.17%)</title><rect x="36.0169%" y="661" width="0.1695%" height="15" fill="rgb(208,96,46)"/><text x="36.2669%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 1.02%)</title><rect x="35.8475%" y="725" width="1.0169%" height="15" fill="rgb(239,3,39)"/><text x="36.0975%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 1.02%)</title><rect x="35.8475%" y="709" width="1.0169%" height="15" fill="rgb(233,210,1)"/><text x="36.0975%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 1.02%)</title><rect x="35.8475%" y="693" width="1.0169%" height="15" fill="rgb(244,137,37)"/><text x="36.0975%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.68%)</title><rect x="36.1864%" y="677" width="0.6780%" height="15" fill="rgb(240,136,2)"/><text x="36.4364%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.51%)</title><rect x="36.3559%" y="661" width="0.5085%" height="15" fill="rgb(239,18,37)"/><text x="36.6059%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.51%)</title><rect x="36.3559%" y="645" width="0.5085%" height="15" fill="rgb(218,185,22)"/><text x="36.6059%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="36.8644%" y="709" width="0.1695%" height="15" fill="rgb(225,218,4)"/><text x="37.1144%" y="719.50"></text></g><g><title>core::fmt::write (25 samples, 2.12%)</title><rect x="35.0000%" y="773" width="2.1186%" height="15" fill="rgb(230,182,32)"/><text x="35.2500%" y="783.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (25 samples, 2.12%)</title><rect x="35.0000%" y="757" width="2.1186%" height="15" fill="rgb(242,56,43)"/><text x="35.2500%" y="767.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 1.27%)</title><rect x="35.8475%" y="741" width="1.2712%" height="15" fill="rgb(233,99,24)"/><text x="36.0975%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.25%)</title><rect x="36.8644%" y="725" width="0.2542%" height="15" fill="rgb(234,209,42)"/><text x="37.1144%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (76 samples, 6.44%)</title><rect x="30.9322%" y="789" width="6.4407%" height="15" fill="rgb(227,7,12)"/><text x="31.1822%" y="799.50">decor::q..</text></g><g><title>decor::helpers::answer_rows (3 samples, 0.25%)</title><rect x="37.1186%" y="773" width="0.2542%" height="15" fill="rgb(245,203,43)"/><text x="37.3686%" y="783.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.17%)</title><rect x="37.2034%" y="757" width="0.1695%" height="15" fill="rgb(238,205,33)"/><text x="37.4534%" y="767.50"></text></g><g><title>msql_srv::writers::write_ok_packet (2 samples, 0.17%)</title><rect x="37.2034%" y="741" width="0.1695%" height="15" fill="rgb(231,56,7)"/><text x="37.4534%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.42%)</title><rect x="37.6271%" y="773" width="0.4237%" height="15" fill="rgb(244,186,29)"/><text x="37.8771%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.17%)</title><rect x="37.8814%" y="757" width="0.1695%" height="15" fill="rgb(234,111,31)"/><text x="38.1314%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.17%)</title><rect x="37.8814%" y="741" width="0.1695%" height="15" fill="rgb(241,149,10)"/><text x="38.1314%" y="751.50"></text></g><g><title>decor::Shim::run_on_tcp (87 samples, 7.37%)</title><rect x="30.9322%" y="837" width="7.3729%" height="15" fill="rgb(249,206,44)"/><text x="31.1822%" y="847.50">decor::Shi..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (87 samples, 7.37%)</title><rect x="30.9322%" y="821" width="7.3729%" height="15" fill="rgb(251,153,30)"/><text x="31.1822%" y="831.50">msql_srv::..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (87 samples, 7.37%)</title><rect x="30.9322%" y="805" width="7.3729%" height="15" fill="rgb(239,152,38)"/><text x="31.1822%" y="815.50">&lt;decor::Sh..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (11 samples, 0.93%)</title><rect x="37.3729%" y="789" width="0.9322%" height="15" fill="rgb(249,139,47)"/><text x="37.6229%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.25%)</title><rect x="38.0508%" y="773" width="0.2542%" height="15" fill="rgb(244,64,35)"/><text x="38.3008%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (3 samples, 0.25%)</title><rect x="38.0508%" y="757" width="0.2542%" height="15" fill="rgb(216,46,15)"/><text x="38.3008%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.25%)</title><rect x="38.0508%" y="741" width="0.2542%" height="15" fill="rgb(250,74,19)"/><text x="38.3008%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="38.1356%" y="725" width="0.1695%" height="15" fill="rgb(249,42,33)"/><text x="38.3856%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (4 samples, 0.34%)</title><rect x="38.3051%" y="837" width="0.3390%" height="15" fill="rgb(242,149,17)"/><text x="38.5551%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.34%)</title><rect x="38.7288%" y="741" width="0.3390%" height="15" fill="rgb(244,29,21)"/><text x="38.9788%" y="751.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.34%)</title><rect x="38.7288%" y="725" width="0.3390%" height="15" fill="rgb(220,130,37)"/><text x="38.9788%" y="735.50"></text></g><g><title>_int_malloc (4 samples, 0.34%)</title><rect x="38.7288%" y="709" width="0.3390%" height="15" fill="rgb(211,67,2)"/><text x="38.9788%" y="719.50"></text></g><g><title>__kfree_skb (2 samples, 0.17%)</title><rect x="39.4068%" y="533" width="0.1695%" height="15" fill="rgb(235,68,52)"/><text x="39.6568%" y="543.50"></text></g><g><title>skb_release_head_state (2 samples, 0.17%)</title><rect x="39.4068%" y="517" width="0.1695%" height="15" fill="rgb(246,142,3)"/><text x="39.6568%" y="527.50"></text></g><g><title>dst_release (2 samples, 0.17%)</title><rect x="39.4068%" y="501" width="0.1695%" height="15" fill="rgb(241,25,7)"/><text x="39.6568%" y="511.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.51%)</title><rect x="39.9153%" y="453" width="0.5085%" height="15" fill="rgb(242,119,39)"/><text x="40.1653%" y="463.50"></text></g><g><title>dequeue_entity (5 samples, 0.42%)</title><rect x="40.0000%" y="437" width="0.4237%" height="15" fill="rgb(241,98,45)"/><text x="40.2500%" y="447.50"></text></g><g><title>update_load_avg (2 samples, 0.17%)</title><rect x="40.2542%" y="421" width="0.1695%" height="15" fill="rgb(254,28,30)"/><text x="40.5042%" y="431.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.17%)</title><rect x="40.2542%" y="405" width="0.1695%" height="15" fill="rgb(241,142,54)"/><text x="40.5042%" y="415.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.17%)</title><rect x="40.5085%" y="453" width="0.1695%" height="15" fill="rgb(222,85,15)"/><text x="40.7585%" y="463.50"></text></g><g><title>__schedule (13 samples, 1.10%)</title><rect x="39.8305%" y="469" width="1.1017%" height="15" fill="rgb(210,85,47)"/><text x="40.0805%" y="479.50"></text></g><g><title>sk_wait_data (18 samples, 1.53%)</title><rect x="39.5763%" y="533" width="1.5254%" height="15" fill="rgb(224,206,25)"/><text x="39.8263%" y="543.50"></text></g><g><title>wait_woken (17 samples, 1.44%)</title><rect x="39.6610%" y="517" width="1.4407%" height="15" fill="rgb(243,201,19)"/><text x="39.9110%" y="527.50"></text></g><g><title>schedule_timeout (16 samples, 1.36%)</title><rect x="39.7458%" y="501" width="1.3559%" height="15" fill="rgb(236,59,4)"/><text x="39.9958%" y="511.50"></text></g><g><title>schedule (16 samples, 1.36%)</title><rect x="39.7458%" y="485" width="1.3559%" height="15" fill="rgb(254,179,45)"/><text x="39.9958%" y="495.50"></text></g><g><title>preempt_count_sub (2 samples, 0.17%)</title><rect x="40.9322%" y="469" width="0.1695%" height="15" fill="rgb(226,14,10)"/><text x="41.1822%" y="479.50"></text></g><g><title>inet_recvmsg (24 samples, 2.03%)</title><rect x="39.3220%" y="565" width="2.0339%" height="15" fill="rgb(244,27,41)"/><text x="39.5720%" y="575.50">i..</text></g><g><title>tcp_recvmsg (24 samples, 2.03%)</title><rect x="39.3220%" y="549" width="2.0339%" height="15" fill="rgb(235,35,32)"/><text x="39.5720%" y="559.50">t..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.25%)</title><rect x="41.1017%" y="533" width="0.2542%" height="15" fill="rgb(218,68,31)"/><text x="41.3517%" y="543.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.25%)</title><rect x="41.1017%" y="517" width="0.2542%" height="15" fill="rgb(207,120,37)"/><text x="41.3517%" y="527.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.17%)</title><rect x="41.1864%" y="501" width="0.1695%" height="15" fill="rgb(227,98,0)"/><text x="41.4364%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (25 samples, 2.12%)</title><rect x="39.3220%" y="597" width="2.1186%" height="15" fill="rgb(207,7,3)"/><text x="39.5720%" y="607.50">_..</text></g><g><title>__sys_recvfrom (25 samples, 2.12%)</title><rect x="39.3220%" y="581" width="2.1186%" height="15" fill="rgb(206,98,19)"/><text x="39.5720%" y="591.50">_..</text></g><g><title>do_syscall_64 (26 samples, 2.20%)</title><rect x="39.3220%" y="613" width="2.2034%" height="15" fill="rgb(217,5,26)"/><text x="39.5720%" y="623.50">d..</text></g><g><title>entry_SYSCALL_64 (28 samples, 2.37%)</title><rect x="39.2373%" y="629" width="2.3729%" height="15" fill="rgb(235,190,38)"/><text x="39.4873%" y="639.50">en..</text></g><g><title>mysql::conn::Conn::read_packet (36 samples, 3.05%)</title><rect x="38.6441%" y="757" width="3.0508%" height="15" fill="rgb(247,86,24)"/><text x="38.8941%" y="767.50">mys..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 2.63%)</title><rect x="39.0678%" y="741" width="2.6271%" height="15" fill="rgb(205,101,16)"/><text x="39.3178%" y="751.50">&lt;m..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (29 samples, 2.46%)</title><rect x="39.2373%" y="725" width="2.4576%" height="15" fill="rgb(246,168,33)"/><text x="39.4873%" y="735.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (29 samples, 2.46%)</title><rect x="39.2373%" y="709" width="2.4576%" height="15" fill="rgb(231,114,1)"/><text x="39.4873%" y="719.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (29 samples, 2.46%)</title><rect x="39.2373%" y="693" width="2.4576%" height="15" fill="rgb(207,184,53)"/><text x="39.4873%" y="703.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (29 samples, 2.46%)</title><rect x="39.2373%" y="677" width="2.4576%" height="15" fill="rgb(224,95,51)"/><text x="39.4873%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (29 samples, 2.46%)</title><rect x="39.2373%" y="661" width="2.4576%" height="15" fill="rgb(212,188,45)"/><text x="39.4873%" y="671.50">st..</text></g><g><title>__libc_recv (29 samples, 2.46%)</title><rect x="39.2373%" y="645" width="2.4576%" height="15" fill="rgb(223,154,38)"/><text x="39.4873%" y="655.50">__..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (37 samples, 3.14%)</title><rect x="38.6441%" y="805" width="3.1356%" height="15" fill="rgb(251,22,52)"/><text x="38.8941%" y="815.50">&lt;my..</text></g><g><title>mysql::conn::Conn::_query (37 samples, 3.14%)</title><rect x="38.6441%" y="789" width="3.1356%" height="15" fill="rgb(229,209,22)"/><text x="38.8941%" y="799.50">mys..</text></g><g><title>mysql::conn::Conn::handle_result_set (37 samples, 3.14%)</title><rect x="38.6441%" y="773" width="3.1356%" height="15" fill="rgb(234,138,34)"/><text x="38.8941%" y="783.50">mys..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (13 samples, 1.10%)</title><rect x="41.7797%" y="741" width="1.1017%" height="15" fill="rgb(212,95,11)"/><text x="42.0297%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.85%)</title><rect x="42.0339%" y="725" width="0.8475%" height="15" fill="rgb(240,179,47)"/><text x="42.2839%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.85%)</title><rect x="42.0339%" y="709" width="0.8475%" height="15" fill="rgb(240,163,11)"/><text x="42.2839%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.85%)</title><rect x="42.0339%" y="693" width="0.8475%" height="15" fill="rgb(236,37,12)"/><text x="42.2839%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.85%)</title><rect x="42.0339%" y="677" width="0.8475%" height="15" fill="rgb(232,164,16)"/><text x="42.2839%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.76%)</title><rect x="42.1186%" y="661" width="0.7627%" height="15" fill="rgb(244,205,15)"/><text x="42.3686%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.76%)</title><rect x="42.1186%" y="645" width="0.7627%" height="15" fill="rgb(223,117,47)"/><text x="42.3686%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.76%)</title><rect x="42.1186%" y="629" width="0.7627%" height="15" fill="rgb(244,107,35)"/><text x="42.3686%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.76%)</title><rect x="42.1186%" y="613" width="0.7627%" height="15" fill="rgb(205,140,8)"/><text x="42.3686%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.76%)</title><rect x="42.1186%" y="597" width="0.7627%" height="15" fill="rgb(228,84,46)"/><text x="42.3686%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.76%)</title><rect x="42.1186%" y="581" width="0.7627%" height="15" fill="rgb(254,188,9)"/><text x="42.3686%" y="591.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.76%)</title><rect x="42.1186%" y="565" width="0.7627%" height="15" fill="rgb(206,112,54)"/><text x="42.3686%" y="575.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.76%)</title><rect x="42.1186%" y="549" width="0.7627%" height="15" fill="rgb(216,84,49)"/><text x="42.3686%" y="559.50"></text></g><g><title>_int_malloc (7 samples, 0.59%)</title><rect x="42.2881%" y="533" width="0.5932%" height="15" fill="rgb(214,194,35)"/><text x="42.5381%" y="543.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.17%)</title><rect x="42.7119%" y="517" width="0.1695%" height="15" fill="rgb(249,28,3)"/><text x="42.9619%" y="527.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.42%)</title><rect x="42.8814%" y="741" width="0.4237%" height="15" fill="rgb(222,56,52)"/><text x="43.1314%" y="751.50"></text></g><g><title>_int_malloc (5 samples, 0.42%)</title><rect x="42.8814%" y="725" width="0.4237%" height="15" fill="rgb(245,217,50)"/><text x="43.1314%" y="735.50"></text></g><g><title>sysmalloc (4 samples, 0.34%)</title><rect x="42.9661%" y="709" width="0.3390%" height="15" fill="rgb(213,201,24)"/><text x="43.2161%" y="719.50"></text></g><g><title>page_fault (2 samples, 0.17%)</title><rect x="43.1356%" y="693" width="0.1695%" height="15" fill="rgb(248,116,28)"/><text x="43.3856%" y="703.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.17%)</title><rect x="43.1356%" y="677" width="0.1695%" height="15" fill="rgb(219,72,43)"/><text x="43.3856%" y="687.50"></text></g><g><title>handle_mm_fault (2 samples, 0.17%)</title><rect x="43.1356%" y="661" width="0.1695%" height="15" fill="rgb(209,138,14)"/><text x="43.3856%" y="671.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.17%)</title><rect x="43.1356%" y="645" width="0.1695%" height="15" fill="rgb(222,18,33)"/><text x="43.3856%" y="655.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.17%)</title><rect x="43.1356%" y="629" width="0.1695%" height="15" fill="rgb(213,199,7)"/><text x="43.3856%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.17%)</title><rect x="43.1356%" y="613" width="0.1695%" height="15" fill="rgb(250,110,10)"/><text x="43.3856%" y="623.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.17%)</title><rect x="43.1356%" y="597" width="0.1695%" height="15" fill="rgb(248,123,6)"/><text x="43.3856%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (21 samples, 1.78%)</title><rect x="41.7797%" y="805" width="1.7797%" height="15" fill="rgb(206,91,31)"/><text x="42.0297%" y="815.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (21 samples, 1.78%)</title><rect x="41.7797%" y="789" width="1.7797%" height="15" fill="rgb(211,154,13)"/><text x="42.0297%" y="799.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (21 samples, 1.78%)</title><rect x="41.7797%" y="773" width="1.7797%" height="15" fill="rgb(225,148,7)"/><text x="42.0297%" y="783.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 1.78%)</title><rect x="41.7797%" y="757" width="1.7797%" height="15" fill="rgb(220,160,43)"/><text x="42.0297%" y="767.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.25%)</title><rect x="43.3051%" y="741" width="0.2542%" height="15" fill="rgb(213,52,39)"/><text x="43.5551%" y="751.50"></text></g><g><title>decor::qtcache::QueryCache::insert_gid_into_caches (2 samples, 0.17%)</title><rect x="43.9831%" y="789" width="0.1695%" height="15" fill="rgb(243,137,7)"/><text x="44.2331%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.17%)</title><rect x="43.9831%" y="773" width="0.1695%" height="15" fill="rgb(230,79,13)"/><text x="44.2331%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert (2 samples, 0.17%)</title><rect x="43.9831%" y="757" width="0.1695%" height="15" fill="rgb(247,105,23)"/><text x="44.2331%" y="767.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.17%)</title><rect x="44.8305%" y="453" width="0.1695%" height="15" fill="rgb(223,179,41)"/><text x="45.0805%" y="463.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.17%)</title><rect x="45.0000%" y="453" width="0.1695%" height="15" fill="rgb(218,9,34)"/><text x="45.2500%" y="463.50"></text></g><g><title>dequeue_entity (2 samples, 0.17%)</title><rect x="45.0000%" y="437" width="0.1695%" height="15" fill="rgb(222,106,8)"/><text x="45.2500%" y="447.50"></text></g><g><title>sk_wait_data (11 samples, 0.93%)</title><rect x="44.6610%" y="533" width="0.9322%" height="15" fill="rgb(211,220,0)"/><text x="44.9110%" y="543.50"></text></g><g><title>wait_woken (10 samples, 0.85%)</title><rect x="44.7458%" y="517" width="0.8475%" height="15" fill="rgb(229,52,16)"/><text x="44.9958%" y="527.50"></text></g><g><title>schedule_timeout (10 samples, 0.85%)</title><rect x="44.7458%" y="501" width="0.8475%" height="15" fill="rgb(212,155,18)"/><text x="44.9958%" y="511.50"></text></g><g><title>schedule (10 samples, 0.85%)</title><rect x="44.7458%" y="485" width="0.8475%" height="15" fill="rgb(242,21,14)"/><text x="44.9958%" y="495.50"></text></g><g><title>__schedule (10 samples, 0.85%)</title><rect x="44.7458%" y="469" width="0.8475%" height="15" fill="rgb(222,19,48)"/><text x="44.9958%" y="479.50"></text></g><g><title>psi_task_change (4 samples, 0.34%)</title><rect x="45.2542%" y="453" width="0.3390%" height="15" fill="rgb(232,45,27)"/><text x="45.5042%" y="463.50"></text></g><g><title>psi_group_change (4 samples, 0.34%)</title><rect x="45.2542%" y="437" width="0.3390%" height="15" fill="rgb(249,103,42)"/><text x="45.5042%" y="447.50"></text></g><g><title>record_times (2 samples, 0.17%)</title><rect x="45.4237%" y="421" width="0.1695%" height="15" fill="rgb(246,81,33)"/><text x="45.6737%" y="431.50"></text></g><g><title>inet_recvmsg (16 samples, 1.36%)</title><rect x="44.4915%" y="565" width="1.3559%" height="15" fill="rgb(252,33,42)"/><text x="44.7415%" y="575.50"></text></g><g><title>tcp_recvmsg (15 samples, 1.27%)</title><rect x="44.5763%" y="549" width="1.2712%" height="15" fill="rgb(209,212,41)"/><text x="44.8263%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.25%)</title><rect x="45.5932%" y="533" width="0.2542%" height="15" fill="rgb(207,154,6)"/><text x="45.8432%" y="543.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.25%)</title><rect x="45.5932%" y="517" width="0.2542%" height="15" fill="rgb(223,64,47)"/><text x="45.8432%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 1.53%)</title><rect x="44.4068%" y="597" width="1.5254%" height="15" fill="rgb(211,161,38)"/><text x="44.6568%" y="607.50"></text></g><g><title>__sys_recvfrom (18 samples, 1.53%)</title><rect x="44.4068%" y="581" width="1.5254%" height="15" fill="rgb(219,138,40)"/><text x="44.6568%" y="591.50"></text></g><g><title>do_syscall_64 (20 samples, 1.69%)</title><rect x="44.3220%" y="613" width="1.6949%" height="15" fill="rgb(241,228,46)"/><text x="44.5720%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (22 samples, 1.86%)</title><rect x="44.3220%" y="629" width="1.8644%" height="15" fill="rgb(223,209,38)"/><text x="44.5720%" y="639.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.17%)</title><rect x="46.0169%" y="613" width="0.1695%" height="15" fill="rgb(236,164,45)"/><text x="46.2669%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 2.12%)</title><rect x="44.3220%" y="725" width="2.1186%" height="15" fill="rgb(231,15,5)"/><text x="44.5720%" y="735.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 2.12%)</title><rect x="44.3220%" y="709" width="2.1186%" height="15" fill="rgb(252,35,15)"/><text x="44.5720%" y="719.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 2.12%)</title><rect x="44.3220%" y="693" width="2.1186%" height="15" fill="rgb(248,181,18)"/><text x="44.5720%" y="703.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 2.12%)</title><rect x="44.3220%" y="677" width="2.1186%" height="15" fill="rgb(233,39,42)"/><text x="44.5720%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 2.12%)</title><rect x="44.3220%" y="661" width="2.1186%" height="15" fill="rgb(238,110,33)"/><text x="44.5720%" y="671.50">s..</text></g><g><title>__libc_recv (25 samples, 2.12%)</title><rect x="44.3220%" y="645" width="2.1186%" height="15" fill="rgb(233,195,10)"/><text x="44.5720%" y="655.50">_..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.25%)</title><rect x="46.1864%" y="629" width="0.2542%" height="15" fill="rgb(254,105,3)"/><text x="46.4364%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 2.29%)</title><rect x="44.3220%" y="741" width="2.2881%" height="15" fill="rgb(221,225,9)"/><text x="44.5720%" y="751.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.17%)</title><rect x="46.4407%" y="725" width="0.1695%" height="15" fill="rgb(224,227,45)"/><text x="46.6907%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 2.63%)</title><rect x="44.2373%" y="757" width="2.6271%" height="15" fill="rgb(229,198,43)"/><text x="44.4873%" y="767.50">my..</text></g><g><title>mysql::conn::Conn::handle_result_set (33 samples, 2.80%)</title><rect x="44.2373%" y="773" width="2.7966%" height="15" fill="rgb(206,209,35)"/><text x="44.4873%" y="783.50">my..</text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.17%)</title><rect x="46.8644%" y="757" width="0.1695%" height="15" fill="rgb(245,195,53)"/><text x="47.1144%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (3 samples, 0.25%)</title><rect x="47.0339%" y="757" width="0.2542%" height="15" fill="rgb(240,92,26)"/><text x="47.2839%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (3 samples, 0.25%)</title><rect x="47.0339%" y="741" width="0.2542%" height="15" fill="rgb(207,40,23)"/><text x="47.2839%" y="751.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.17%)</title><rect x="47.1186%" y="725" width="0.1695%" height="15" fill="rgb(223,111,35)"/><text x="47.3686%" y="735.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.25%)</title><rect x="48.3898%" y="469" width="0.2542%" height="15" fill="rgb(229,147,28)"/><text x="48.6398%" y="479.50"></text></g><g><title>loopback_xmit (2 samples, 0.17%)</title><rect x="48.4746%" y="453" width="0.1695%" height="15" fill="rgb(211,29,28)"/><text x="48.7246%" y="463.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.68%)</title><rect x="48.0508%" y="485" width="0.6780%" height="15" fill="rgb(228,72,33)"/><text x="48.3008%" y="495.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.17%)</title><rect x="49.4068%" y="293" width="0.1695%" height="15" fill="rgb(205,214,31)"/><text x="49.6568%" y="303.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.17%)</title><rect x="49.4068%" y="277" width="0.1695%" height="15" fill="rgb(224,111,15)"/><text x="49.6568%" y="287.50"></text></g><g><title>sk_reset_timer (2 samples, 0.17%)</title><rect x="49.6610%" y="261" width="0.1695%" height="15" fill="rgb(253,21,26)"/><text x="49.9110%" y="271.50"></text></g><g><title>psi_task_change (2 samples, 0.17%)</title><rect x="50.0847%" y="165" width="0.1695%" height="15" fill="rgb(245,139,43)"/><text x="50.3347%" y="175.50"></text></g><g><title>enqueue_task (3 samples, 0.25%)</title><rect x="50.0847%" y="181" width="0.2542%" height="15" fill="rgb(252,170,7)"/><text x="50.3347%" y="191.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.25%)</title><rect x="50.3390%" y="181" width="0.2542%" height="15" fill="rgb(231,118,14)"/><text x="50.5890%" y="191.50"></text></g><g><title>enqueue_entity (3 samples, 0.25%)</title><rect x="50.3390%" y="165" width="0.2542%" height="15" fill="rgb(238,83,0)"/><text x="50.5890%" y="175.50"></text></g><g><title>update_load_avg (2 samples, 0.17%)</title><rect x="50.4237%" y="149" width="0.1695%" height="15" fill="rgb(221,39,39)"/><text x="50.6737%" y="159.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.25%)</title><rect x="50.5932%" y="181" width="0.2542%" height="15" fill="rgb(222,119,46)"/><text x="50.8432%" y="191.50"></text></g><g><title>sock_def_readable (13 samples, 1.10%)</title><rect x="49.8305%" y="261" width="1.1017%" height="15" fill="rgb(222,165,49)"/><text x="50.0805%" y="271.50"></text></g><g><title>__wake_up_common_lock (12 samples, 1.02%)</title><rect x="49.9153%" y="245" width="1.0169%" height="15" fill="rgb(219,113,52)"/><text x="50.1653%" y="255.50"></text></g><g><title>__wake_up_common (12 samples, 1.02%)</title><rect x="49.9153%" y="229" width="1.0169%" height="15" fill="rgb(214,7,15)"/><text x="50.1653%" y="239.50"></text></g><g><title>pollwake (12 samples, 1.02%)</title><rect x="49.9153%" y="213" width="1.0169%" height="15" fill="rgb(235,32,4)"/><text x="50.1653%" y="223.50"></text></g><g><title>try_to_wake_up (12 samples, 1.02%)</title><rect x="49.9153%" y="197" width="1.0169%" height="15" fill="rgb(238,90,54)"/><text x="50.1653%" y="207.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.17%)</title><rect x="51.3559%" y="245" width="0.1695%" height="15" fill="rgb(213,208,19)"/><text x="51.6059%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (25 samples, 2.12%)</title><rect x="49.5763%" y="293" width="2.1186%" height="15" fill="rgb(233,156,4)"/><text x="49.8263%" y="303.50">t..</text></g><g><title>tcp_rcv_established (25 samples, 2.12%)</title><rect x="49.5763%" y="277" width="2.1186%" height="15" fill="rgb(207,194,5)"/><text x="49.8263%" y="287.50">t..</text></g><g><title>tcp_ack (9 samples, 0.76%)</title><rect x="50.9322%" y="261" width="0.7627%" height="15" fill="rgb(206,111,30)"/><text x="51.1822%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (33 samples, 2.80%)</title><rect x="48.9831%" y="389" width="2.7966%" height="15" fill="rgb(243,70,54)"/><text x="49.2331%" y="399.50">__..</text></g><g><title>ip_rcv (31 samples, 2.63%)</title><rect x="49.1525%" y="373" width="2.6271%" height="15" fill="rgb(242,28,8)"/><text x="49.4025%" y="383.50">ip..</text></g><g><title>ip_local_deliver (30 samples, 2.54%)</title><rect x="49.2373%" y="357" width="2.5424%" height="15" fill="rgb(219,106,18)"/><text x="49.4873%" y="367.50">ip..</text></g><g><title>ip_local_deliver_finish (30 samples, 2.54%)</title><rect x="49.2373%" y="341" width="2.5424%" height="15" fill="rgb(244,222,10)"/><text x="49.4873%" y="351.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (30 samples, 2.54%)</title><rect x="49.2373%" y="325" width="2.5424%" height="15" fill="rgb(236,179,52)"/><text x="49.4873%" y="335.50">ip..</text></g><g><title>tcp_v4_rcv (29 samples, 2.46%)</title><rect x="49.3220%" y="309" width="2.4576%" height="15" fill="rgb(213,23,39)"/><text x="49.5720%" y="319.50">tc..</text></g><g><title>__ip_queue_xmit (47 samples, 3.98%)</title><rect x="47.9661%" y="533" width="3.9831%" height="15" fill="rgb(238,48,10)"/><text x="48.2161%" y="543.50">__ip..</text></g><g><title>ip_output (46 samples, 3.90%)</title><rect x="48.0508%" y="517" width="3.8983%" height="15" fill="rgb(251,196,23)"/><text x="48.3008%" y="527.50">ip_o..</text></g><g><title>ip_finish_output2 (46 samples, 3.90%)</title><rect x="48.0508%" y="501" width="3.8983%" height="15" fill="rgb(250,152,24)"/><text x="48.3008%" y="511.50">ip_f..</text></g><g><title>__local_bh_enable_ip (38 samples, 3.22%)</title><rect x="48.7288%" y="485" width="3.2203%" height="15" fill="rgb(209,150,17)"/><text x="48.9788%" y="495.50">__l..</text></g><g><title>do_softirq (38 samples, 3.22%)</title><rect x="48.7288%" y="469" width="3.2203%" height="15" fill="rgb(234,202,34)"/><text x="48.9788%" y="479.50">do_..</text></g><g><title>do_softirq_own_stack (38 samples, 3.22%)</title><rect x="48.7288%" y="453" width="3.2203%" height="15" fill="rgb(253,148,53)"/><text x="48.9788%" y="463.50">do_..</text></g><g><title>__do_softirq (38 samples, 3.22%)</title><rect x="48.7288%" y="437" width="3.2203%" height="15" fill="rgb(218,129,16)"/><text x="48.9788%" y="447.50">__d..</text></g><g><title>net_rx_action (38 samples, 3.22%)</title><rect x="48.7288%" y="421" width="3.2203%" height="15" fill="rgb(216,85,19)"/><text x="48.9788%" y="431.50">net..</text></g><g><title>process_backlog (35 samples, 2.97%)</title><rect x="48.9831%" y="405" width="2.9661%" height="15" fill="rgb(235,228,7)"/><text x="49.2331%" y="415.50">pro..</text></g><g><title>__tcp_transmit_skb (50 samples, 4.24%)</title><rect x="47.8814%" y="549" width="4.2373%" height="15" fill="rgb(245,175,0)"/><text x="48.1314%" y="559.50">__tcp..</text></g><g><title>__tcp_push_pending_frames (53 samples, 4.49%)</title><rect x="47.7119%" y="581" width="4.4915%" height="15" fill="rgb(208,168,36)"/><text x="47.9619%" y="591.50">__tcp..</text></g><g><title>tcp_write_xmit (53 samples, 4.49%)</title><rect x="47.7119%" y="565" width="4.4915%" height="15" fill="rgb(246,171,24)"/><text x="47.9619%" y="575.50">tcp_w..</text></g><g><title>sk_page_frag_refill (2 samples, 0.17%)</title><rect x="52.2034%" y="581" width="0.1695%" height="15" fill="rgb(215,142,24)"/><text x="52.4534%" y="591.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.17%)</title><rect x="52.3729%" y="581" width="0.1695%" height="15" fill="rgb(250,187,7)"/><text x="52.6229%" y="591.50"></text></g><g><title>__alloc_skb (2 samples, 0.17%)</title><rect x="52.3729%" y="565" width="0.1695%" height="15" fill="rgb(228,66,33)"/><text x="52.6229%" y="575.50"></text></g><g><title>sock_sendmsg (60 samples, 5.08%)</title><rect x="47.5424%" y="629" width="5.0847%" height="15" fill="rgb(234,215,21)"/><text x="47.7924%" y="639.50">sock_s..</text></g><g><title>tcp_sendmsg (60 samples, 5.08%)</title><rect x="47.5424%" y="613" width="5.0847%" height="15" fill="rgb(222,191,20)"/><text x="47.7924%" y="623.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (59 samples, 5.00%)</title><rect x="47.6271%" y="597" width="5.0000%" height="15" fill="rgb(245,79,54)"/><text x="47.8771%" y="607.50">tcp_se..</text></g><g><title>do_syscall_64 (63 samples, 5.34%)</title><rect x="47.3729%" y="677" width="5.3390%" height="15" fill="rgb(240,10,37)"/><text x="47.6229%" y="687.50">do_sysc..</text></g><g><title>__x64_sys_sendto (63 samples, 5.34%)</title><rect x="47.3729%" y="661" width="5.3390%" height="15" fill="rgb(214,192,32)"/><text x="47.6229%" y="671.50">__x64_s..</text></g><g><title>__sys_sendto (63 samples, 5.34%)</title><rect x="47.3729%" y="645" width="5.3390%" height="15" fill="rgb(209,36,54)"/><text x="47.6229%" y="655.50">__sys_s..</text></g><g><title>entry_SYSCALL_64 (68 samples, 5.76%)</title><rect x="47.2881%" y="693" width="5.7627%" height="15" fill="rgb(220,10,11)"/><text x="47.5381%" y="703.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.34%)</title><rect x="52.7119%" y="677" width="0.3390%" height="15" fill="rgb(221,106,17)"/><text x="52.9619%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (70 samples, 5.93%)</title><rect x="47.2881%" y="741" width="5.9322%" height="15" fill="rgb(251,142,44)"/><text x="47.5381%" y="751.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::write (70 samples, 5.93%)</title><rect x="47.2881%" y="725" width="5.9322%" height="15" fill="rgb(238,13,15)"/><text x="47.5381%" y="735.50">std::sys..</text></g><g><title>__libc_send (70 samples, 5.93%)</title><rect x="47.2881%" y="709" width="5.9322%" height="15" fill="rgb(208,107,27)"/><text x="47.5381%" y="719.50">__libc_s..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.17%)</title><rect x="53.0508%" y="693" width="0.1695%" height="15" fill="rgb(205,136,37)"/><text x="53.3008%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (108 samples, 9.15%)</title><rect x="44.1525%" y="789" width="9.1525%" height="15" fill="rgb(250,205,27)"/><text x="44.4025%" y="799.50">mysql::conn::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (74 samples, 6.27%)</title><rect x="47.0339%" y="773" width="6.2712%" height="15" fill="rgb(210,80,43)"/><text x="47.2839%" y="783.50">mysql_co..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (71 samples, 6.02%)</title><rect x="47.2881%" y="757" width="6.0169%" height="15" fill="rgb(247,160,36)"/><text x="47.5381%" y="767.50">std::io:..</text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (113 samples, 9.58%)</title><rect x="43.8136%" y="805" width="9.5763%" height="15" fill="rgb(234,13,49)"/><text x="44.0636%" y="815.50">decor::qtcache..</text></g><g><title>decor::query_transformer::QueryTransformer::query (176 samples, 14.92%)</title><rect x="38.6441%" y="837" width="14.9153%" height="15" fill="rgb(234,122,0)"/><text x="38.8941%" y="847.50">decor::query_transforme..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (176 samples, 14.92%)</title><rect x="38.6441%" y="821" width="14.9153%" height="15" fill="rgb(207,146,38)"/><text x="38.8941%" y="831.50">decor::query_transforme..</text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (2 samples, 0.17%)</title><rect x="53.3898%" y="805" width="0.1695%" height="15" fill="rgb(207,177,25)"/><text x="53.6398%" y="815.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="54.0678%" y="773" width="0.1695%" height="15" fill="rgb(211,178,42)"/><text x="54.3178%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.17%)</title><rect x="54.2373%" y="773" width="0.1695%" height="15" fill="rgb(230,69,54)"/><text x="54.4873%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (8 samples, 0.68%)</title><rect x="53.8136%" y="789" width="0.6780%" height="15" fill="rgb(214,135,41)"/><text x="54.0636%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (4 samples, 0.34%)</title><rect x="54.4915%" y="789" width="0.3390%" height="15" fill="rgb(237,67,25)"/><text x="54.7415%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (4 samples, 0.34%)</title><rect x="54.4915%" y="773" width="0.3390%" height="15" fill="rgb(222,189,50)"/><text x="54.7415%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.17%)</title><rect x="54.6610%" y="757" width="0.1695%" height="15" fill="rgb(245,148,34)"/><text x="54.9110%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="54.8305%" y="773" width="0.1695%" height="15" fill="rgb(222,29,6)"/><text x="55.0805%" y="783.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.17%)</title><rect x="54.8305%" y="757" width="0.1695%" height="15" fill="rgb(221,189,43)"/><text x="55.0805%" y="767.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (26 samples, 2.20%)</title><rect x="53.6441%" y="837" width="2.2034%" height="15" fill="rgb(207,36,27)"/><text x="53.8941%" y="847.50">d..</text></g><g><title>sql_parser::parser::parse_statements (26 samples, 2.20%)</title><rect x="53.6441%" y="821" width="2.2034%" height="15" fill="rgb(217,90,24)"/><text x="53.8941%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_statement (26 samples, 2.20%)</title><rect x="53.6441%" y="805" width="2.2034%" height="15" fill="rgb(224,66,35)"/><text x="53.8941%" y="815.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_parenthesized_column_list (12 samples, 1.02%)</title><rect x="54.8305%" y="789" width="1.0169%" height="15" fill="rgb(221,13,50)"/><text x="55.0805%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (10 samples, 0.85%)</title><rect x="55.0000%" y="773" width="0.8475%" height="15" fill="rgb(236,68,49)"/><text x="55.2500%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (8 samples, 0.68%)</title><rect x="55.1695%" y="757" width="0.6780%" height="15" fill="rgb(229,146,28)"/><text x="55.4195%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (5 samples, 0.42%)</title><rect x="55.4237%" y="741" width="0.4237%" height="15" fill="rgb(225,31,38)"/><text x="55.6737%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.42%)</title><rect x="55.4237%" y="725" width="0.4237%" height="15" fill="rgb(250,208,3)"/><text x="55.6737%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.42%)</title><rect x="55.4237%" y="709" width="0.4237%" height="15" fill="rgb(246,54,23)"/><text x="55.6737%" y="719.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.17%)</title><rect x="55.9322%" y="821" width="0.1695%" height="15" fill="rgb(243,76,11)"/><text x="56.1822%" y="831.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.34%)</title><rect x="56.4407%" y="469" width="0.3390%" height="15" fill="rgb(245,21,50)"/><text x="56.6907%" y="479.50"></text></g><g><title>dequeue_entity (3 samples, 0.25%)</title><rect x="56.5254%" y="453" width="0.2542%" height="15" fill="rgb(228,9,43)"/><text x="56.7754%" y="463.50"></text></g><g><title>update_load_avg (2 samples, 0.17%)</title><rect x="56.6102%" y="437" width="0.1695%" height="15" fill="rgb(208,100,47)"/><text x="56.8602%" y="447.50"></text></g><g><title>finish_task_switch (2 samples, 0.17%)</title><rect x="56.7797%" y="469" width="0.1695%" height="15" fill="rgb(232,26,8)"/><text x="57.0297%" y="479.50"></text></g><g><title>sk_wait_data (11 samples, 0.93%)</title><rect x="56.3559%" y="549" width="0.9322%" height="15" fill="rgb(216,166,38)"/><text x="56.6059%" y="559.50"></text></g><g><title>wait_woken (11 samples, 0.93%)</title><rect x="56.3559%" y="533" width="0.9322%" height="15" fill="rgb(251,202,51)"/><text x="56.6059%" y="543.50"></text></g><g><title>schedule_timeout (10 samples, 0.85%)</title><rect x="56.4407%" y="517" width="0.8475%" height="15" fill="rgb(254,216,34)"/><text x="56.6907%" y="527.50"></text></g><g><title>schedule (10 samples, 0.85%)</title><rect x="56.4407%" y="501" width="0.8475%" height="15" fill="rgb(251,32,27)"/><text x="56.6907%" y="511.50"></text></g><g><title>__schedule (10 samples, 0.85%)</title><rect x="56.4407%" y="485" width="0.8475%" height="15" fill="rgb(208,127,28)"/><text x="56.6907%" y="495.50"></text></g><g><title>__x64_sys_recvfrom (14 samples, 1.19%)</title><rect x="56.1864%" y="613" width="1.1864%" height="15" fill="rgb(224,137,22)"/><text x="56.4364%" y="623.50"></text></g><g><title>__sys_recvfrom (14 samples, 1.19%)</title><rect x="56.1864%" y="597" width="1.1864%" height="15" fill="rgb(254,70,32)"/><text x="56.4364%" y="607.50"></text></g><g><title>inet_recvmsg (13 samples, 1.10%)</title><rect x="56.2712%" y="581" width="1.1017%" height="15" fill="rgb(229,75,37)"/><text x="56.5212%" y="591.50"></text></g><g><title>tcp_recvmsg (13 samples, 1.10%)</title><rect x="56.2712%" y="565" width="1.1017%" height="15" fill="rgb(252,64,23)"/><text x="56.5212%" y="575.50"></text></g><g><title>do_syscall_64 (16 samples, 1.36%)</title><rect x="56.1864%" y="629" width="1.3559%" height="15" fill="rgb(232,162,48)"/><text x="56.4364%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 1.53%)</title><rect x="56.1864%" y="645" width="1.5254%" height="15" fill="rgb(246,160,12)"/><text x="56.4364%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.17%)</title><rect x="57.5424%" y="629" width="0.1695%" height="15" fill="rgb(247,166,0)"/><text x="57.7924%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (20 samples, 1.69%)</title><rect x="56.1017%" y="773" width="1.6949%" height="15" fill="rgb(249,219,21)"/><text x="56.3517%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.61%)</title><rect x="56.1864%" y="757" width="1.6102%" height="15" fill="rgb(205,209,3)"/><text x="56.4364%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (19 samples, 1.61%)</title><rect x="56.1864%" y="741" width="1.6102%" height="15" fill="rgb(243,44,1)"/><text x="56.4364%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 1.61%)</title><rect x="56.1864%" y="725" width="1.6102%" height="15" fill="rgb(206,159,16)"/><text x="56.4364%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (19 samples, 1.61%)</title><rect x="56.1864%" y="709" width="1.6102%" height="15" fill="rgb(244,77,30)"/><text x="56.4364%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (19 samples, 1.61%)</title><rect x="56.1864%" y="693" width="1.6102%" height="15" fill="rgb(218,69,12)"/><text x="56.4364%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (19 samples, 1.61%)</title><rect x="56.1864%" y="677" width="1.6102%" height="15" fill="rgb(212,87,7)"/><text x="56.4364%" y="687.50"></text></g><g><title>__libc_recv (19 samples, 1.61%)</title><rect x="56.1864%" y="661" width="1.6102%" height="15" fill="rgb(245,114,25)"/><text x="56.4364%" y="671.50"></text></g><g><title>lobsters::main (23 samples, 1.95%)</title><rect x="55.9322%" y="837" width="1.9492%" height="15" fill="rgb(210,61,42)"/><text x="56.1822%" y="847.50">l..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (21 samples, 1.78%)</title><rect x="56.1017%" y="821" width="1.7797%" height="15" fill="rgb(211,52,33)"/><text x="56.3517%" y="831.50">m..</text></g><g><title>mysql::conn::Conn::_query (21 samples, 1.78%)</title><rect x="56.1017%" y="805" width="1.7797%" height="15" fill="rgb(234,58,33)"/><text x="56.3517%" y="815.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (21 samples, 1.78%)</title><rect x="56.1017%" y="789" width="1.7797%" height="15" fill="rgb(220,115,36)"/><text x="56.3517%" y="799.50">m..</text></g><g><title>dst_release (4 samples, 0.34%)</title><rect x="58.0508%" y="485" width="0.3390%" height="15" fill="rgb(243,153,54)"/><text x="58.3008%" y="495.50"></text></g><g><title>__kfree_skb (5 samples, 0.42%)</title><rect x="58.0508%" y="517" width="0.4237%" height="15" fill="rgb(251,47,18)"/><text x="58.3008%" y="527.50"></text></g><g><title>skb_release_head_state (5 samples, 0.42%)</title><rect x="58.0508%" y="501" width="0.4237%" height="15" fill="rgb(242,102,42)"/><text x="58.3008%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.17%)</title><rect x="58.8136%" y="437" width="0.1695%" height="15" fill="rgb(234,31,38)"/><text x="59.0636%" y="447.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.17%)</title><rect x="59.0678%" y="437" width="0.1695%" height="15" fill="rgb(221,117,51)"/><text x="59.3178%" y="447.50"></text></g><g><title>sk_wait_data (11 samples, 0.93%)</title><rect x="58.4746%" y="517" width="0.9322%" height="15" fill="rgb(212,20,18)"/><text x="58.7246%" y="527.50"></text></g><g><title>wait_woken (8 samples, 0.68%)</title><rect x="58.7288%" y="501" width="0.6780%" height="15" fill="rgb(245,133,36)"/><text x="58.9788%" y="511.50"></text></g><g><title>schedule_timeout (7 samples, 0.59%)</title><rect x="58.8136%" y="485" width="0.5932%" height="15" fill="rgb(212,6,19)"/><text x="59.0636%" y="495.50"></text></g><g><title>schedule (7 samples, 0.59%)</title><rect x="58.8136%" y="469" width="0.5932%" height="15" fill="rgb(218,1,36)"/><text x="59.0636%" y="479.50"></text></g><g><title>__schedule (7 samples, 0.59%)</title><rect x="58.8136%" y="453" width="0.5932%" height="15" fill="rgb(246,84,54)"/><text x="59.0636%" y="463.50"></text></g><g><title>psi_task_change (2 samples, 0.17%)</title><rect x="59.2373%" y="437" width="0.1695%" height="15" fill="rgb(242,110,6)"/><text x="59.4873%" y="447.50"></text></g><g><title>psi_group_change (2 samples, 0.17%)</title><rect x="59.2373%" y="421" width="0.1695%" height="15" fill="rgb(214,47,5)"/><text x="59.4873%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 1.53%)</title><rect x="57.9661%" y="581" width="1.5254%" height="15" fill="rgb(218,159,25)"/><text x="58.2161%" y="591.50"></text></g><g><title>__sys_recvfrom (18 samples, 1.53%)</title><rect x="57.9661%" y="565" width="1.5254%" height="15" fill="rgb(215,211,28)"/><text x="58.2161%" y="575.50"></text></g><g><title>inet_recvmsg (18 samples, 1.53%)</title><rect x="57.9661%" y="549" width="1.5254%" height="15" fill="rgb(238,59,32)"/><text x="58.2161%" y="559.50"></text></g><g><title>tcp_recvmsg (18 samples, 1.53%)</title><rect x="57.9661%" y="533" width="1.5254%" height="15" fill="rgb(226,82,3)"/><text x="58.2161%" y="543.50"></text></g><g><title>do_syscall_64 (19 samples, 1.61%)</title><rect x="57.9661%" y="597" width="1.6102%" height="15" fill="rgb(240,164,32)"/><text x="58.2161%" y="607.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.78%)</title><rect x="57.8814%" y="725" width="1.7797%" height="15" fill="rgb(232,46,7)"/><text x="58.1314%" y="735.50">&lt;..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (21 samples, 1.78%)</title><rect x="57.8814%" y="709" width="1.7797%" height="15" fill="rgb(229,129,53)"/><text x="58.1314%" y="719.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 1.78%)</title><rect x="57.8814%" y="693" width="1.7797%" height="15" fill="rgb(234,188,29)"/><text x="58.1314%" y="703.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 1.78%)</title><rect x="57.8814%" y="677" width="1.7797%" height="15" fill="rgb(246,141,4)"/><text x="58.1314%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (21 samples, 1.78%)</title><rect x="57.8814%" y="661" width="1.7797%" height="15" fill="rgb(229,23,39)"/><text x="58.1314%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (21 samples, 1.78%)</title><rect x="57.8814%" y="645" width="1.7797%" height="15" fill="rgb(206,12,3)"/><text x="58.1314%" y="655.50">s..</text></g><g><title>__libc_recv (21 samples, 1.78%)</title><rect x="57.8814%" y="629" width="1.7797%" height="15" fill="rgb(252,226,20)"/><text x="58.1314%" y="639.50">_..</text></g><g><title>entry_SYSCALL_64 (20 samples, 1.69%)</title><rect x="57.9661%" y="613" width="1.6949%" height="15" fill="rgb(216,123,35)"/><text x="58.2161%" y="623.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (22 samples, 1.86%)</title><rect x="57.8814%" y="789" width="1.8644%" height="15" fill="rgb(212,68,40)"/><text x="58.1314%" y="799.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (22 samples, 1.86%)</title><rect x="57.8814%" y="773" width="1.8644%" height="15" fill="rgb(254,125,32)"/><text x="58.1314%" y="783.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (22 samples, 1.86%)</title><rect x="57.8814%" y="757" width="1.8644%" height="15" fill="rgb(253,97,22)"/><text x="58.1314%" y="767.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (22 samples, 1.86%)</title><rect x="57.8814%" y="741" width="1.8644%" height="15" fill="rgb(241,101,14)"/><text x="58.1314%" y="751.50">m..</text></g><g><title>decor::query_transformer::QueryTransformer::query (23 samples, 1.95%)</title><rect x="57.8814%" y="805" width="1.9492%" height="15" fill="rgb(238,103,29)"/><text x="58.1314%" y="815.50">d..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (5 samples, 0.42%)</title><rect x="59.8305%" y="789" width="0.4237%" height="15" fill="rgb(233,195,47)"/><text x="60.0805%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.34%)</title><rect x="59.9153%" y="773" width="0.3390%" height="15" fill="rgb(246,218,30)"/><text x="60.1653%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.34%)</title><rect x="59.9153%" y="757" width="0.3390%" height="15" fill="rgb(219,145,47)"/><text x="60.1653%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.34%)</title><rect x="59.9153%" y="741" width="0.3390%" height="15" fill="rgb(243,12,26)"/><text x="60.1653%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.34%)</title><rect x="59.9153%" y="725" width="0.3390%" height="15" fill="rgb(214,87,16)"/><text x="60.1653%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.34%)</title><rect x="59.9153%" y="709" width="0.3390%" height="15" fill="rgb(208,99,42)"/><text x="60.1653%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="60.0000%" y="693" width="0.2542%" height="15" fill="rgb(253,99,2)"/><text x="60.2500%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="60.0000%" y="677" width="0.2542%" height="15" fill="rgb(220,168,23)"/><text x="60.2500%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="60.0000%" y="661" width="0.2542%" height="15" fill="rgb(242,38,24)"/><text x="60.2500%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="60.0000%" y="645" width="0.2542%" height="15" fill="rgb(225,182,9)"/><text x="60.2500%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.25%)</title><rect x="60.0000%" y="629" width="0.2542%" height="15" fill="rgb(243,178,37)"/><text x="60.2500%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="60.0000%" y="613" width="0.2542%" height="15" fill="rgb(232,139,19)"/><text x="60.2500%" y="623.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="60.0000%" y="597" width="0.2542%" height="15" fill="rgb(225,201,24)"/><text x="60.2500%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.25%)</title><rect x="60.0000%" y="581" width="0.2542%" height="15" fill="rgb(221,47,46)"/><text x="60.2500%" y="591.50"></text></g><g><title>_int_malloc (3 samples, 0.25%)</title><rect x="60.0000%" y="565" width="0.2542%" height="15" fill="rgb(249,23,13)"/><text x="60.2500%" y="575.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="60.3390%" y="773" width="0.1695%" height="15" fill="rgb(219,9,5)"/><text x="60.5890%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="60.3390%" y="757" width="0.1695%" height="15" fill="rgb(254,171,16)"/><text x="60.5890%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="60.3390%" y="741" width="0.1695%" height="15" fill="rgb(230,171,20)"/><text x="60.5890%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.17%)</title><rect x="60.3390%" y="725" width="0.1695%" height="15" fill="rgb(210,71,41)"/><text x="60.5890%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="60.3390%" y="709" width="0.1695%" height="15" fill="rgb(206,173,20)"/><text x="60.5890%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="60.3390%" y="693" width="0.1695%" height="15" fill="rgb(233,88,34)"/><text x="60.5890%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="60.3390%" y="677" width="0.1695%" height="15" fill="rgb(223,209,46)"/><text x="60.5890%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="60.3390%" y="661" width="0.1695%" height="15" fill="rgb(250,43,18)"/><text x="60.5890%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="60.3390%" y="645" width="0.1695%" height="15" fill="rgb(208,13,10)"/><text x="60.5890%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.17%)</title><rect x="60.3390%" y="629" width="0.1695%" height="15" fill="rgb(212,200,36)"/><text x="60.5890%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="60.3390%" y="613" width="0.1695%" height="15" fill="rgb(225,90,30)"/><text x="60.5890%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="60.3390%" y="597" width="0.1695%" height="15" fill="rgb(236,182,39)"/><text x="60.5890%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="60.3390%" y="581" width="0.1695%" height="15" fill="rgb(212,144,35)"/><text x="60.5890%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="60.5085%" y="773" width="0.1695%" height="15" fill="rgb(228,63,44)"/><text x="60.7585%" y="783.50"></text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="60.5085%" y="757" width="0.1695%" height="15" fill="rgb(228,109,6)"/><text x="60.7585%" y="767.50"></text></g><g><title>_int_free (2 samples, 0.17%)</title><rect x="60.6780%" y="773" width="0.1695%" height="15" fill="rgb(238,117,24)"/><text x="60.9280%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.25%)</title><rect x="60.9322%" y="773" width="0.2542%" height="15" fill="rgb(242,26,26)"/><text x="61.1822%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.34%)</title><rect x="61.6949%" y="757" width="0.3390%" height="15" fill="rgb(221,92,48)"/><text x="61.9449%" y="767.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.34%)</title><rect x="61.6949%" y="741" width="0.3390%" height="15" fill="rgb(209,209,32)"/><text x="61.9449%" y="751.50"></text></g><g><title>_int_realloc (4 samples, 0.34%)</title><rect x="61.6949%" y="725" width="0.3390%" height="15" fill="rgb(221,70,22)"/><text x="61.9449%" y="735.50"></text></g><g><title>_int_malloc (3 samples, 0.25%)</title><rect x="61.7797%" y="709" width="0.2542%" height="15" fill="rgb(248,145,5)"/><text x="62.0297%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (6 samples, 0.51%)</title><rect x="62.1186%" y="757" width="0.5085%" height="15" fill="rgb(226,116,26)"/><text x="62.3686%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (4 samples, 0.34%)</title><rect x="62.2881%" y="741" width="0.3390%" height="15" fill="rgb(244,5,17)"/><text x="62.5381%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (57 samples, 4.83%)</title><rect x="57.8814%" y="837" width="4.8305%" height="15" fill="rgb(252,159,33)"/><text x="58.1314%" y="847.50">msql_s..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (57 samples, 4.83%)</title><rect x="57.8814%" y="821" width="4.8305%" height="15" fill="rgb(206,71,0)"/><text x="58.1314%" y="831.50">&lt;decor..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (34 samples, 2.88%)</title><rect x="59.8305%" y="805" width="2.8814%" height="15" fill="rgb(233,118,54)"/><text x="60.0805%" y="815.50">de..</text></g><g><title>sql_parser::parser::parse_statements (29 samples, 2.46%)</title><rect x="60.2542%" y="789" width="2.4576%" height="15" fill="rgb(234,83,48)"/><text x="60.5042%" y="799.50">sq..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (18 samples, 1.53%)</title><rect x="61.1864%" y="773" width="1.5254%" height="15" fill="rgb(228,3,54)"/><text x="61.4364%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="63.3898%" y="757" width="0.1695%" height="15" fill="rgb(226,155,13)"/><text x="63.6398%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="63.3898%" y="741" width="0.1695%" height="15" fill="rgb(241,28,37)"/><text x="63.6398%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="63.3898%" y="725" width="0.1695%" height="15" fill="rgb(233,93,10)"/><text x="63.6398%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.17%)</title><rect x="63.3898%" y="709" width="0.1695%" height="15" fill="rgb(225,113,19)"/><text x="63.6398%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.17%)</title><rect x="63.3898%" y="693" width="0.1695%" height="15" fill="rgb(241,2,18)"/><text x="63.6398%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="63.3898%" y="677" width="0.1695%" height="15" fill="rgb(228,207,21)"/><text x="63.6398%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="63.3898%" y="661" width="0.1695%" height="15" fill="rgb(213,211,35)"/><text x="63.6398%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="63.3898%" y="645" width="0.1695%" height="15" fill="rgb(209,83,10)"/><text x="63.6398%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="63.3898%" y="629" width="0.1695%" height="15" fill="rgb(209,164,1)"/><text x="63.6398%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.17%)</title><rect x="63.3898%" y="613" width="0.1695%" height="15" fill="rgb(213,184,43)"/><text x="63.6398%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="63.3898%" y="597" width="0.1695%" height="15" fill="rgb(231,61,34)"/><text x="63.6398%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="63.3898%" y="581" width="0.1695%" height="15" fill="rgb(235,75,3)"/><text x="63.6398%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="63.3898%" y="565" width="0.1695%" height="15" fill="rgb(220,106,47)"/><text x="63.6398%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.25%)</title><rect x="63.5593%" y="757" width="0.2542%" height="15" fill="rgb(210,196,33)"/><text x="63.8093%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.85%)</title><rect x="63.9831%" y="661" width="0.8475%" height="15" fill="rgb(229,154,42)"/><text x="64.2331%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.85%)</title><rect x="63.9831%" y="645" width="0.8475%" height="15" fill="rgb(228,114,26)"/><text x="64.2331%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (10 samples, 0.85%)</title><rect x="63.9831%" y="629" width="0.8475%" height="15" fill="rgb(208,144,1)"/><text x="64.2331%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.85%)</title><rect x="63.9831%" y="613" width="0.8475%" height="15" fill="rgb(239,112,37)"/><text x="64.2331%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.85%)</title><rect x="63.9831%" y="597" width="0.8475%" height="15" fill="rgb(210,96,50)"/><text x="64.2331%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.93%)</title><rect x="63.9831%" y="725" width="0.9322%" height="15" fill="rgb(222,178,2)"/><text x="64.2331%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.93%)</title><rect x="63.9831%" y="709" width="0.9322%" height="15" fill="rgb(226,74,18)"/><text x="64.2331%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.93%)</title><rect x="63.9831%" y="693" width="0.9322%" height="15" fill="rgb(225,67,54)"/><text x="64.2331%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.93%)</title><rect x="63.9831%" y="677" width="0.9322%" height="15" fill="rgb(251,92,32)"/><text x="64.2331%" y="687.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (16 samples, 1.36%)</title><rect x="63.8136%" y="757" width="1.3559%" height="15" fill="rgb(228,149,22)"/><text x="64.0636%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (15 samples, 1.27%)</title><rect x="63.8983%" y="741" width="1.2712%" height="15" fill="rgb(243,54,13)"/><text x="64.1483%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (4 samples, 0.34%)</title><rect x="65.1695%" y="757" width="0.3390%" height="15" fill="rgb(243,180,28)"/><text x="65.4195%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="65.5932%" y="549" width="0.1695%" height="15" fill="rgb(208,167,24)"/><text x="65.8432%" y="559.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 2.80%)</title><rect x="63.0508%" y="837" width="2.7966%" height="15" fill="rgb(245,73,45)"/><text x="63.3008%" y="847.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (33 samples, 2.80%)</title><rect x="63.0508%" y="821" width="2.7966%" height="15" fill="rgb(237,203,48)"/><text x="63.3008%" y="831.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (33 samples, 2.80%)</title><rect x="63.0508%" y="805" width="2.7966%" height="15" fill="rgb(211,197,16)"/><text x="63.3008%" y="815.50">sq..</text></g><g><title>sql_parser::parser::Parser::check_descent (33 samples, 2.80%)</title><rect x="63.0508%" y="789" width="2.7966%" height="15" fill="rgb(243,99,51)"/><text x="63.3008%" y="799.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (33 samples, 2.80%)</title><rect x="63.0508%" y="773" width="2.7966%" height="15" fill="rgb(215,123,29)"/><text x="63.3008%" y="783.50">sq..</text></g><g><title>sql_parser::parser::Parser::parse_value (4 samples, 0.34%)</title><rect x="65.5085%" y="757" width="0.3390%" height="15" fill="rgb(239,186,37)"/><text x="65.7585%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="65.5932%" y="741" width="0.2542%" height="15" fill="rgb(252,136,39)"/><text x="65.8432%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="65.5932%" y="725" width="0.2542%" height="15" fill="rgb(223,213,32)"/><text x="65.8432%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="65.5932%" y="709" width="0.2542%" height="15" fill="rgb(233,115,5)"/><text x="65.8432%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.25%)</title><rect x="65.5932%" y="693" width="0.2542%" height="15" fill="rgb(207,226,44)"/><text x="65.8432%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.25%)</title><rect x="65.5932%" y="677" width="0.2542%" height="15" fill="rgb(208,126,0)"/><text x="65.8432%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="65.5932%" y="661" width="0.2542%" height="15" fill="rgb(244,66,21)"/><text x="65.8432%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="65.5932%" y="645" width="0.2542%" height="15" fill="rgb(222,97,12)"/><text x="65.8432%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="65.5932%" y="629" width="0.2542%" height="15" fill="rgb(219,213,19)"/><text x="65.8432%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="65.5932%" y="613" width="0.2542%" height="15" fill="rgb(252,169,30)"/><text x="65.8432%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.25%)</title><rect x="65.5932%" y="597" width="0.2542%" height="15" fill="rgb(206,32,51)"/><text x="65.8432%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="65.5932%" y="581" width="0.2542%" height="15" fill="rgb(250,172,42)"/><text x="65.8432%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="65.5932%" y="565" width="0.2542%" height="15" fill="rgb(209,34,43)"/><text x="65.8432%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="65.8475%" y="741" width="0.2542%" height="15" fill="rgb(223,11,35)"/><text x="66.0975%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="65.8475%" y="725" width="0.2542%" height="15" fill="rgb(251,219,26)"/><text x="66.0975%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.25%)</title><rect x="65.8475%" y="709" width="0.2542%" height="15" fill="rgb(231,119,3)"/><text x="66.0975%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.25%)</title><rect x="65.8475%" y="693" width="0.2542%" height="15" fill="rgb(216,97,11)"/><text x="66.0975%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="65.8475%" y="677" width="0.2542%" height="15" fill="rgb(223,59,9)"/><text x="66.0975%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="65.8475%" y="661" width="0.2542%" height="15" fill="rgb(233,93,31)"/><text x="66.0975%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="65.8475%" y="645" width="0.2542%" height="15" fill="rgb(239,81,33)"/><text x="66.0975%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="65.8475%" y="629" width="0.2542%" height="15" fill="rgb(213,120,34)"/><text x="66.0975%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.25%)</title><rect x="65.8475%" y="613" width="0.2542%" height="15" fill="rgb(243,49,53)"/><text x="66.0975%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="65.8475%" y="597" width="0.2542%" height="15" fill="rgb(247,216,33)"/><text x="66.0975%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="65.8475%" y="581" width="0.2542%" height="15" fill="rgb(226,26,14)"/><text x="66.0975%" y="591.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.25%)</title><rect x="65.8475%" y="565" width="0.2542%" height="15" fill="rgb(215,49,53)"/><text x="66.0975%" y="575.50"></text></g><g><title>_int_malloc (3 samples, 0.25%)</title><rect x="65.8475%" y="549" width="0.2542%" height="15" fill="rgb(245,162,40)"/><text x="66.0975%" y="559.50"></text></g><g><title>malloc_consolidate (2 samples, 0.17%)</title><rect x="65.9322%" y="533" width="0.1695%" height="15" fill="rgb(229,68,17)"/><text x="66.1822%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.17%)</title><rect x="66.1864%" y="517" width="0.1695%" height="15" fill="rgb(213,182,10)"/><text x="66.4364%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="66.1864%" y="501" width="0.1695%" height="15" fill="rgb(245,125,30)"/><text x="66.4364%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="66.1864%" y="485" width="0.1695%" height="15" fill="rgb(232,202,2)"/><text x="66.4364%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="66.1864%" y="469" width="0.1695%" height="15" fill="rgb(237,140,51)"/><text x="66.4364%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (3 samples, 0.25%)</title><rect x="66.1864%" y="597" width="0.2542%" height="15" fill="rgb(236,157,25)"/><text x="66.4364%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.25%)</title><rect x="66.1864%" y="581" width="0.2542%" height="15" fill="rgb(219,209,0)"/><text x="66.4364%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.25%)</title><rect x="66.1864%" y="565" width="0.2542%" height="15" fill="rgb(240,116,54)"/><text x="66.4364%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.25%)</title><rect x="66.1864%" y="549" width="0.2542%" height="15" fill="rgb(216,10,36)"/><text x="66.4364%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.25%)</title><rect x="66.1864%" y="533" width="0.2542%" height="15" fill="rgb(222,72,44)"/><text x="66.4364%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.51%)</title><rect x="66.1864%" y="693" width="0.5085%" height="15" fill="rgb(232,159,9)"/><text x="66.4364%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.51%)</title><rect x="66.1864%" y="677" width="0.5085%" height="15" fill="rgb(210,39,32)"/><text x="66.4364%" y="687.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.51%)</title><rect x="66.1864%" y="661" width="0.5085%" height="15" fill="rgb(216,194,45)"/><text x="66.4364%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.51%)</title><rect x="66.1864%" y="645" width="0.5085%" height="15" fill="rgb(218,18,35)"/><text x="66.4364%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.51%)</title><rect x="66.1864%" y="629" width="0.5085%" height="15" fill="rgb(207,83,51)"/><text x="66.4364%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (6 samples, 0.51%)</title><rect x="66.1864%" y="613" width="0.5085%" height="15" fill="rgb(225,63,43)"/><text x="66.4364%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.25%)</title><rect x="66.4407%" y="597" width="0.2542%" height="15" fill="rgb(207,57,36)"/><text x="66.6907%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.25%)</title><rect x="66.4407%" y="581" width="0.2542%" height="15" fill="rgb(216,99,33)"/><text x="66.6907%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (13 samples, 1.10%)</title><rect x="65.8475%" y="837" width="1.1017%" height="15" fill="rgb(225,42,16)"/><text x="66.0975%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (13 samples, 1.10%)</title><rect x="65.8475%" y="821" width="1.1017%" height="15" fill="rgb(220,201,45)"/><text x="66.0975%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (13 samples, 1.10%)</title><rect x="65.8475%" y="805" width="1.1017%" height="15" fill="rgb(225,33,4)"/><text x="66.0975%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (13 samples, 1.10%)</title><rect x="65.8475%" y="789" width="1.1017%" height="15" fill="rgb(224,33,50)"/><text x="66.0975%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (13 samples, 1.10%)</title><rect x="65.8475%" y="773" width="1.1017%" height="15" fill="rgb(246,198,51)"/><text x="66.0975%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::expected (13 samples, 1.10%)</title><rect x="65.8475%" y="757" width="1.1017%" height="15" fill="rgb(205,22,4)"/><text x="66.0975%" y="767.50"></text></g><g><title>alloc::fmt::format (10 samples, 0.85%)</title><rect x="66.1017%" y="741" width="0.8475%" height="15" fill="rgb(206,3,8)"/><text x="66.3517%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.85%)</title><rect x="66.1017%" y="725" width="0.8475%" height="15" fill="rgb(251,23,15)"/><text x="66.3517%" y="735.50"></text></g><g><title>core::fmt::write (10 samples, 0.85%)</title><rect x="66.1017%" y="709" width="0.8475%" height="15" fill="rgb(252,88,28)"/><text x="66.3517%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.17%)</title><rect x="67.2881%" y="773" width="0.1695%" height="15" fill="rgb(212,127,14)"/><text x="67.5381%" y="783.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.17%)</title><rect x="67.2881%" y="757" width="0.1695%" height="15" fill="rgb(247,145,37)"/><text x="67.5381%" y="767.50"></text></g><g><title>_int_realloc (2 samples, 0.17%)</title><rect x="67.2881%" y="741" width="0.1695%" height="15" fill="rgb(209,117,53)"/><text x="67.5381%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="67.2881%" y="725" width="0.1695%" height="15" fill="rgb(212,90,42)"/><text x="67.5381%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (7 samples, 0.59%)</title><rect x="67.1186%" y="789" width="0.5932%" height="15" fill="rgb(218,164,37)"/><text x="67.3686%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.25%)</title><rect x="67.4576%" y="773" width="0.2542%" height="15" fill="rgb(246,65,34)"/><text x="67.7076%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="67.9661%" y="773" width="0.2542%" height="15" fill="rgb(231,100,33)"/><text x="68.2161%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="67.9661%" y="757" width="0.2542%" height="15" fill="rgb(228,126,14)"/><text x="68.2161%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.25%)</title><rect x="67.9661%" y="741" width="0.2542%" height="15" fill="rgb(215,173,21)"/><text x="68.2161%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.25%)</title><rect x="67.9661%" y="725" width="0.2542%" height="15" fill="rgb(210,6,40)"/><text x="68.2161%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.25%)</title><rect x="67.9661%" y="709" width="0.2542%" height="15" fill="rgb(212,48,18)"/><text x="68.2161%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="67.9661%" y="693" width="0.2542%" height="15" fill="rgb(230,214,11)"/><text x="68.2161%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="67.9661%" y="677" width="0.2542%" height="15" fill="rgb(254,105,39)"/><text x="68.2161%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="67.9661%" y="661" width="0.2542%" height="15" fill="rgb(245,158,5)"/><text x="68.2161%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="67.9661%" y="645" width="0.2542%" height="15" fill="rgb(249,208,11)"/><text x="68.2161%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.25%)</title><rect x="67.9661%" y="629" width="0.2542%" height="15" fill="rgb(210,39,28)"/><text x="68.2161%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="67.9661%" y="613" width="0.2542%" height="15" fill="rgb(211,56,53)"/><text x="68.2161%" y="623.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="67.9661%" y="597" width="0.2542%" height="15" fill="rgb(226,201,30)"/><text x="68.2161%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.25%)</title><rect x="67.9661%" y="581" width="0.2542%" height="15" fill="rgb(239,101,34)"/><text x="68.2161%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="68.0508%" y="565" width="0.1695%" height="15" fill="rgb(226,209,5)"/><text x="68.3008%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (17 samples, 1.44%)</title><rect x="66.9492%" y="837" width="1.4407%" height="15" fill="rgb(250,105,47)"/><text x="67.1992%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.44%)</title><rect x="66.9492%" y="821" width="1.4407%" height="15" fill="rgb(230,72,3)"/><text x="67.1992%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (17 samples, 1.44%)</title><rect x="66.9492%" y="805" width="1.4407%" height="15" fill="rgb(232,218,39)"/><text x="67.1992%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (8 samples, 0.68%)</title><rect x="67.7119%" y="789" width="0.6780%" height="15" fill="rgb(248,166,6)"/><text x="67.9619%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (11 samples, 0.93%)</title><rect x="68.3898%" y="805" width="0.9322%" height="15" fill="rgb(247,89,20)"/><text x="68.6398%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (11 samples, 0.93%)</title><rect x="68.3898%" y="789" width="0.9322%" height="15" fill="rgb(248,130,54)"/><text x="68.6398%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.59%)</title><rect x="68.7288%" y="773" width="0.5932%" height="15" fill="rgb(234,196,4)"/><text x="68.9788%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (12 samples, 1.02%)</title><rect x="68.3898%" y="837" width="1.0169%" height="15" fill="rgb(250,143,31)"/><text x="68.6398%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (12 samples, 1.02%)</title><rect x="68.3898%" y="821" width="1.0169%" height="15" fill="rgb(211,110,34)"/><text x="68.6398%" y="831.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.25%)</title><rect x="69.4068%" y="837" width="0.2542%" height="15" fill="rgb(215,124,48)"/><text x="69.6568%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.17%)</title><rect x="69.6610%" y="837" width="0.1695%" height="15" fill="rgb(216,46,13)"/><text x="69.9110%" y="847.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.17%)</title><rect x="69.6610%" y="821" width="0.1695%" height="15" fill="rgb(205,184,25)"/><text x="69.9110%" y="831.50"></text></g><g><title>std::panicking::try (2 samples, 0.17%)</title><rect x="69.6610%" y="805" width="0.1695%" height="15" fill="rgb(228,1,10)"/><text x="69.9110%" y="815.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.17%)</title><rect x="69.6610%" y="789" width="0.1695%" height="15" fill="rgb(213,116,27)"/><text x="69.9110%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.17%)</title><rect x="69.6610%" y="773" width="0.1695%" height="15" fill="rgb(241,95,50)"/><text x="69.9110%" y="783.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.17%)</title><rect x="69.6610%" y="757" width="0.1695%" height="15" fill="rgb(238,48,32)"/><text x="69.9110%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.17%)</title><rect x="69.6610%" y="741" width="0.1695%" height="15" fill="rgb(235,113,49)"/><text x="69.9110%" y="751.50"></text></g><g><title>lobsters::main (2 samples, 0.17%)</title><rect x="69.6610%" y="725" width="0.1695%" height="15" fill="rgb(205,127,43)"/><text x="69.9110%" y="735.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.17%)</title><rect x="69.6610%" y="709" width="0.1695%" height="15" fill="rgb(250,162,2)"/><text x="69.9110%" y="719.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.17%)</title><rect x="69.6610%" y="693" width="0.1695%" height="15" fill="rgb(220,13,41)"/><text x="69.9110%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.17%)</title><rect x="69.6610%" y="677" width="0.1695%" height="15" fill="rgb(249,221,25)"/><text x="69.9110%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.17%)</title><rect x="69.6610%" y="661" width="0.1695%" height="15" fill="rgb(215,208,19)"/><text x="69.9110%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.17%)</title><rect x="69.6610%" y="645" width="0.1695%" height="15" fill="rgb(236,175,2)"/><text x="69.9110%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.17%)</title><rect x="69.8305%" y="709" width="0.1695%" height="15" fill="rgb(241,52,2)"/><text x="70.0805%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::InsertStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.42%)</title><rect x="69.8305%" y="725" width="0.4237%" height="15" fill="rgb(248,140,14)"/><text x="70.0805%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.25%)</title><rect x="70.0000%" y="709" width="0.2542%" height="15" fill="rgb(253,22,42)"/><text x="70.2500%" y="719.50"></text></g><g><title>core::fmt::write (6 samples, 0.51%)</title><rect x="69.8305%" y="757" width="0.5085%" height="15" fill="rgb(234,61,47)"/><text x="70.0805%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (6 samples, 0.51%)</title><rect x="69.8305%" y="741" width="0.5085%" height="15" fill="rgb(208,226,15)"/><text x="70.0805%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.68%)</title><rect x="69.8305%" y="837" width="0.6780%" height="15" fill="rgb(217,221,4)"/><text x="70.0805%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (8 samples, 0.68%)</title><rect x="69.8305%" y="821" width="0.6780%" height="15" fill="rgb(212,174,34)"/><text x="70.0805%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (8 samples, 0.68%)</title><rect x="69.8305%" y="805" width="0.6780%" height="15" fill="rgb(253,83,4)"/><text x="70.0805%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.68%)</title><rect x="69.8305%" y="789" width="0.6780%" height="15" fill="rgb(250,195,49)"/><text x="70.0805%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (8 samples, 0.68%)</title><rect x="69.8305%" y="773" width="0.6780%" height="15" fill="rgb(241,192,25)"/><text x="70.0805%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.17%)</title><rect x="70.3390%" y="757" width="0.1695%" height="15" fill="rgb(208,124,10)"/><text x="70.5890%" y="767.50"></text></g><g><title>[unknown] (766 samples, 64.92%)</title><rect x="5.6780%" y="853" width="64.9153%" height="15" fill="rgb(222,33,0)"/><text x="5.9280%" y="863.50">[unknown]</text></g><g><title>_int_free (2 samples, 0.17%)</title><rect x="71.0169%" y="677" width="0.1695%" height="15" fill="rgb(234,209,28)"/><text x="71.2669%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.76%)</title><rect x="70.6780%" y="709" width="0.7627%" height="15" fill="rgb(224,11,23)"/><text x="70.9280%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.59%)</title><rect x="70.8475%" y="693" width="0.5932%" height="15" fill="rgb(232,99,1)"/><text x="71.0975%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.25%)</title><rect x="71.1864%" y="677" width="0.2542%" height="15" fill="rgb(237,95,45)"/><text x="71.4364%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.17%)</title><rect x="71.2712%" y="661" width="0.1695%" height="15" fill="rgb(208,109,11)"/><text x="71.5212%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="71.2712%" y="645" width="0.1695%" height="15" fill="rgb(216,190,48)"/><text x="71.5212%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.17%)</title><rect x="71.2712%" y="629" width="0.1695%" height="15" fill="rgb(251,171,36)"/><text x="71.5212%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.17%)</title><rect x="71.4407%" y="661" width="0.1695%" height="15" fill="rgb(230,62,22)"/><text x="71.6907%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="71.4407%" y="677" width="0.3390%" height="15" fill="rgb(225,114,35)"/><text x="71.6907%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.17%)</title><rect x="71.6102%" y="661" width="0.1695%" height="15" fill="rgb(215,118,42)"/><text x="71.8602%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.42%)</title><rect x="71.4407%" y="709" width="0.4237%" height="15" fill="rgb(243,119,21)"/><text x="71.6907%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.42%)</title><rect x="71.4407%" y="693" width="0.4237%" height="15" fill="rgb(252,177,53)"/><text x="71.6907%" y="703.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.25%)</title><rect x="72.7119%" y="501" width="0.2542%" height="15" fill="rgb(237,209,29)"/><text x="72.9619%" y="511.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.25%)</title><rect x="72.7119%" y="485" width="0.2542%" height="15" fill="rgb(212,65,23)"/><text x="72.9619%" y="495.50"></text></g><g><title>ip_output (3 samples, 0.25%)</title><rect x="72.7119%" y="469" width="0.2542%" height="15" fill="rgb(230,222,46)"/><text x="72.9619%" y="479.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.25%)</title><rect x="72.7119%" y="453" width="0.2542%" height="15" fill="rgb(215,135,32)"/><text x="72.9619%" y="463.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.17%)</title><rect x="72.7966%" y="437" width="0.1695%" height="15" fill="rgb(246,101,22)"/><text x="73.0466%" y="447.50"></text></g><g><title>do_softirq (2 samples, 0.17%)</title><rect x="72.7966%" y="421" width="0.1695%" height="15" fill="rgb(206,107,13)"/><text x="73.0466%" y="431.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.17%)</title><rect x="72.7966%" y="405" width="0.1695%" height="15" fill="rgb(250,100,44)"/><text x="73.0466%" y="415.50"></text></g><g><title>__do_softirq (2 samples, 0.17%)</title><rect x="72.7966%" y="389" width="0.1695%" height="15" fill="rgb(231,147,38)"/><text x="73.0466%" y="399.50"></text></g><g><title>net_rx_action (2 samples, 0.17%)</title><rect x="72.7966%" y="373" width="0.1695%" height="15" fill="rgb(229,8,40)"/><text x="73.0466%" y="383.50"></text></g><g><title>process_backlog (2 samples, 0.17%)</title><rect x="72.7966%" y="357" width="0.1695%" height="15" fill="rgb(221,135,30)"/><text x="73.0466%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.17%)</title><rect x="72.7966%" y="341" width="0.1695%" height="15" fill="rgb(249,193,18)"/><text x="73.0466%" y="351.50"></text></g><g><title>ip_rcv (2 samples, 0.17%)</title><rect x="72.7966%" y="325" width="0.1695%" height="15" fill="rgb(209,133,39)"/><text x="73.0466%" y="335.50"></text></g><g><title>ip_local_deliver (2 samples, 0.17%)</title><rect x="72.7966%" y="309" width="0.1695%" height="15" fill="rgb(232,100,14)"/><text x="73.0466%" y="319.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.17%)</title><rect x="72.7966%" y="293" width="0.1695%" height="15" fill="rgb(224,185,1)"/><text x="73.0466%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.17%)</title><rect x="72.7966%" y="277" width="0.1695%" height="15" fill="rgb(223,139,8)"/><text x="73.0466%" y="287.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.17%)</title><rect x="72.7966%" y="261" width="0.1695%" height="15" fill="rgb(232,213,38)"/><text x="73.0466%" y="271.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.25%)</title><rect x="72.9661%" y="485" width="0.2542%" height="15" fill="rgb(207,94,22)"/><text x="73.2161%" y="495.50"></text></g><g><title>preempt_count_add (2 samples, 0.17%)</title><rect x="73.0508%" y="469" width="0.1695%" height="15" fill="rgb(219,183,54)"/><text x="73.3008%" y="479.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.25%)</title><rect x="73.4746%" y="421" width="0.2542%" height="15" fill="rgb(216,185,54)"/><text x="73.7246%" y="431.50"></text></g><g><title>dequeue_entity (2 samples, 0.17%)</title><rect x="73.5593%" y="405" width="0.1695%" height="15" fill="rgb(254,217,39)"/><text x="73.8093%" y="415.50"></text></g><g><title>sk_wait_data (13 samples, 1.10%)</title><rect x="72.9661%" y="501" width="1.1017%" height="15" fill="rgb(240,178,23)"/><text x="73.2161%" y="511.50"></text></g><g><title>wait_woken (9 samples, 0.76%)</title><rect x="73.3051%" y="485" width="0.7627%" height="15" fill="rgb(218,11,47)"/><text x="73.5551%" y="495.50"></text></g><g><title>schedule_timeout (8 samples, 0.68%)</title><rect x="73.3898%" y="469" width="0.6780%" height="15" fill="rgb(218,51,51)"/><text x="73.6398%" y="479.50"></text></g><g><title>schedule (7 samples, 0.59%)</title><rect x="73.4746%" y="453" width="0.5932%" height="15" fill="rgb(238,126,27)"/><text x="73.7246%" y="463.50"></text></g><g><title>__schedule (7 samples, 0.59%)</title><rect x="73.4746%" y="437" width="0.5932%" height="15" fill="rgb(249,202,22)"/><text x="73.7246%" y="447.50"></text></g><g><title>update_rq_clock (2 samples, 0.17%)</title><rect x="73.8983%" y="421" width="0.1695%" height="15" fill="rgb(254,195,49)"/><text x="74.1483%" y="431.50"></text></g><g><title>inet_recvmsg (21 samples, 1.78%)</title><rect x="72.3729%" y="533" width="1.7797%" height="15" fill="rgb(208,123,14)"/><text x="72.6229%" y="543.50">i..</text></g><g><title>tcp_recvmsg (21 samples, 1.78%)</title><rect x="72.3729%" y="517" width="1.7797%" height="15" fill="rgb(224,200,8)"/><text x="72.6229%" y="527.50">t..</text></g><g><title>__x64_sys_recvfrom (22 samples, 1.86%)</title><rect x="72.3729%" y="565" width="1.8644%" height="15" fill="rgb(217,61,36)"/><text x="72.6229%" y="575.50">_..</text></g><g><title>__sys_recvfrom (22 samples, 1.86%)</title><rect x="72.3729%" y="549" width="1.8644%" height="15" fill="rgb(206,35,45)"/><text x="72.6229%" y="559.50">_..</text></g><g><title>do_syscall_64 (24 samples, 2.03%)</title><rect x="72.3729%" y="581" width="2.0339%" height="15" fill="rgb(217,65,33)"/><text x="72.6229%" y="591.50">d..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.17%)</title><rect x="74.2373%" y="565" width="0.1695%" height="15" fill="rgb(222,158,48)"/><text x="74.4873%" y="575.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.17%)</title><rect x="74.2373%" y="549" width="0.1695%" height="15" fill="rgb(254,2,54)"/><text x="74.4873%" y="559.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (31 samples, 2.63%)</title><rect x="71.9492%" y="709" width="2.6271%" height="15" fill="rgb(250,143,38)"/><text x="72.1992%" y="719.50">ms..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 2.63%)</title><rect x="71.9492%" y="693" width="2.6271%" height="15" fill="rgb(248,25,0)"/><text x="72.1992%" y="703.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (31 samples, 2.63%)</title><rect x="71.9492%" y="677" width="2.6271%" height="15" fill="rgb(206,152,27)"/><text x="72.1992%" y="687.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (31 samples, 2.63%)</title><rect x="71.9492%" y="661" width="2.6271%" height="15" fill="rgb(240,77,30)"/><text x="72.1992%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (31 samples, 2.63%)</title><rect x="71.9492%" y="645" width="2.6271%" height="15" fill="rgb(231,5,3)"/><text x="72.1992%" y="655.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (31 samples, 2.63%)</title><rect x="71.9492%" y="629" width="2.6271%" height="15" fill="rgb(207,226,32)"/><text x="72.1992%" y="639.50">st..</text></g><g><title>__libc_recv (31 samples, 2.63%)</title><rect x="71.9492%" y="613" width="2.6271%" height="15" fill="rgb(222,207,47)"/><text x="72.1992%" y="623.50">__..</text></g><g><title>entry_SYSCALL_64 (26 samples, 2.20%)</title><rect x="72.3729%" y="597" width="2.2034%" height="15" fill="rgb(229,115,45)"/><text x="72.6229%" y="607.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.17%)</title><rect x="74.4068%" y="581" width="0.1695%" height="15" fill="rgb(224,191,6)"/><text x="74.6568%" y="591.50"></text></g><g><title>netif_rx (2 samples, 0.17%)</title><rect x="75.3390%" y="389" width="0.1695%" height="15" fill="rgb(230,227,24)"/><text x="75.5890%" y="399.50"></text></g><g><title>netif_rx_internal (2 samples, 0.17%)</title><rect x="75.3390%" y="373" width="0.1695%" height="15" fill="rgb(228,80,19)"/><text x="75.5890%" y="383.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.34%)</title><rect x="75.3390%" y="437" width="0.3390%" height="15" fill="rgb(247,229,0)"/><text x="75.5890%" y="447.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.34%)</title><rect x="75.3390%" y="421" width="0.3390%" height="15" fill="rgb(237,194,15)"/><text x="75.5890%" y="431.50"></text></g><g><title>loopback_xmit (4 samples, 0.34%)</title><rect x="75.3390%" y="405" width="0.3390%" height="15" fill="rgb(219,203,20)"/><text x="75.5890%" y="415.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.17%)</title><rect x="76.1864%" y="149" width="0.1695%" height="15" fill="rgb(234,128,8)"/><text x="76.4364%" y="159.50"></text></g><g><title>sock_def_readable (6 samples, 0.51%)</title><rect x="75.9322%" y="213" width="0.5085%" height="15" fill="rgb(248,202,8)"/><text x="76.1822%" y="223.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.51%)</title><rect x="75.9322%" y="197" width="0.5085%" height="15" fill="rgb(206,104,37)"/><text x="76.1822%" y="207.50"></text></g><g><title>__wake_up_common (6 samples, 0.51%)</title><rect x="75.9322%" y="181" width="0.5085%" height="15" fill="rgb(223,8,27)"/><text x="76.1822%" y="191.50"></text></g><g><title>try_to_wake_up (5 samples, 0.42%)</title><rect x="76.0169%" y="165" width="0.4237%" height="15" fill="rgb(216,217,28)"/><text x="76.2669%" y="175.50"></text></g><g><title>tcp_ack (3 samples, 0.25%)</title><rect x="76.4407%" y="213" width="0.2542%" height="15" fill="rgb(249,199,1)"/><text x="76.6907%" y="223.50"></text></g><g><title>__local_bh_enable_ip (14 samples, 1.19%)</title><rect x="75.6780%" y="437" width="1.1864%" height="15" fill="rgb(240,85,17)"/><text x="75.9280%" y="447.50"></text></g><g><title>do_softirq (14 samples, 1.19%)</title><rect x="75.6780%" y="421" width="1.1864%" height="15" fill="rgb(206,108,45)"/><text x="75.9280%" y="431.50"></text></g><g><title>do_softirq_own_stack (14 samples, 1.19%)</title><rect x="75.6780%" y="405" width="1.1864%" height="15" fill="rgb(245,210,41)"/><text x="75.9280%" y="415.50"></text></g><g><title>__do_softirq (14 samples, 1.19%)</title><rect x="75.6780%" y="389" width="1.1864%" height="15" fill="rgb(206,13,37)"/><text x="75.9280%" y="399.50"></text></g><g><title>net_rx_action (13 samples, 1.10%)</title><rect x="75.7627%" y="373" width="1.1017%" height="15" fill="rgb(250,61,18)"/><text x="76.0127%" y="383.50"></text></g><g><title>process_backlog (13 samples, 1.10%)</title><rect x="75.7627%" y="357" width="1.1017%" height="15" fill="rgb(235,172,48)"/><text x="76.0127%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (13 samples, 1.10%)</title><rect x="75.7627%" y="341" width="1.1017%" height="15" fill="rgb(249,201,17)"/><text x="76.0127%" y="351.50"></text></g><g><title>ip_rcv (13 samples, 1.10%)</title><rect x="75.7627%" y="325" width="1.1017%" height="15" fill="rgb(219,208,6)"/><text x="76.0127%" y="335.50"></text></g><g><title>ip_local_deliver (13 samples, 1.10%)</title><rect x="75.7627%" y="309" width="1.1017%" height="15" fill="rgb(248,31,23)"/><text x="76.0127%" y="319.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 1.02%)</title><rect x="75.8475%" y="293" width="1.0169%" height="15" fill="rgb(245,15,42)"/><text x="76.0975%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.93%)</title><rect x="75.9322%" y="277" width="0.9322%" height="15" fill="rgb(222,217,39)"/><text x="76.1822%" y="287.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.93%)</title><rect x="75.9322%" y="261" width="0.9322%" height="15" fill="rgb(210,219,27)"/><text x="76.1822%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.93%)</title><rect x="75.9322%" y="245" width="0.9322%" height="15" fill="rgb(252,166,36)"/><text x="76.1822%" y="255.50"></text></g><g><title>tcp_rcv_established (11 samples, 0.93%)</title><rect x="75.9322%" y="229" width="0.9322%" height="15" fill="rgb(245,132,34)"/><text x="76.1822%" y="239.50"></text></g><g><title>ip_finish_output2 (21 samples, 1.78%)</title><rect x="75.2542%" y="453" width="1.7797%" height="15" fill="rgb(236,54,3)"/><text x="75.5042%" y="463.50">i..</text></g><g><title>__ip_queue_xmit (25 samples, 2.12%)</title><rect x="75.0847%" y="485" width="2.1186%" height="15" fill="rgb(241,173,43)"/><text x="75.3347%" y="495.50">_..</text></g><g><title>ip_output (24 samples, 2.03%)</title><rect x="75.1695%" y="469" width="2.0339%" height="15" fill="rgb(215,190,9)"/><text x="75.4195%" y="479.50">i..</text></g><g><title>ip_finish_output (2 samples, 0.17%)</title><rect x="77.0339%" y="453" width="0.1695%" height="15" fill="rgb(242,101,16)"/><text x="77.2839%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.17%)</title><rect x="77.0339%" y="437" width="0.1695%" height="15" fill="rgb(223,190,21)"/><text x="77.2839%" y="447.50"></text></g><g><title>__tcp_transmit_skb (28 samples, 2.37%)</title><rect x="74.9153%" y="501" width="2.3729%" height="15" fill="rgb(215,228,25)"/><text x="75.1653%" y="511.50">__..</text></g><g><title>sock_sendmsg (31 samples, 2.63%)</title><rect x="74.7458%" y="581" width="2.6271%" height="15" fill="rgb(225,36,22)"/><text x="74.9958%" y="591.50">so..</text></g><g><title>tcp_sendmsg (31 samples, 2.63%)</title><rect x="74.7458%" y="565" width="2.6271%" height="15" fill="rgb(251,106,46)"/><text x="74.9958%" y="575.50">tc..</text></g><g><title>tcp_sendmsg_locked (30 samples, 2.54%)</title><rect x="74.8305%" y="549" width="2.5424%" height="15" fill="rgb(208,90,1)"/><text x="75.0805%" y="559.50">tc..</text></g><g><title>__tcp_push_pending_frames (29 samples, 2.46%)</title><rect x="74.9153%" y="533" width="2.4576%" height="15" fill="rgb(243,10,4)"/><text x="75.1653%" y="543.50">__..</text></g><g><title>tcp_write_xmit (29 samples, 2.46%)</title><rect x="74.9153%" y="517" width="2.4576%" height="15" fill="rgb(212,137,27)"/><text x="75.1653%" y="527.50">tc..</text></g><g><title>decor::Shim::run_on_tcp (80 samples, 6.78%)</title><rect x="70.6780%" y="741" width="6.7797%" height="15" fill="rgb(231,220,49)"/><text x="70.9280%" y="751.50">decor::Sh..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (80 samples, 6.78%)</title><rect x="70.6780%" y="725" width="6.7797%" height="15" fill="rgb(237,96,20)"/><text x="70.9280%" y="735.50">msql_srv:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (34 samples, 2.88%)</title><rect x="74.5763%" y="709" width="2.8814%" height="15" fill="rgb(239,229,30)"/><text x="74.8263%" y="719.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (34 samples, 2.88%)</title><rect x="74.5763%" y="693" width="2.8814%" height="15" fill="rgb(219,65,33)"/><text x="74.8263%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (34 samples, 2.88%)</title><rect x="74.5763%" y="677" width="2.8814%" height="15" fill="rgb(243,134,7)"/><text x="74.8263%" y="687.50">st..</text></g><g><title>__libc_send (34 samples, 2.88%)</title><rect x="74.5763%" y="661" width="2.8814%" height="15" fill="rgb(216,177,54)"/><text x="74.8263%" y="671.50">__..</text></g><g><title>entry_SYSCALL_64 (33 samples, 2.80%)</title><rect x="74.6610%" y="645" width="2.7966%" height="15" fill="rgb(211,160,20)"/><text x="74.9110%" y="655.50">en..</text></g><g><title>do_syscall_64 (32 samples, 2.71%)</title><rect x="74.7458%" y="629" width="2.7119%" height="15" fill="rgb(239,85,39)"/><text x="74.9958%" y="639.50">do..</text></g><g><title>__x64_sys_sendto (32 samples, 2.71%)</title><rect x="74.7458%" y="613" width="2.7119%" height="15" fill="rgb(232,125,22)"/><text x="74.9958%" y="623.50">__..</text></g><g><title>__sys_sendto (32 samples, 2.71%)</title><rect x="74.7458%" y="597" width="2.7119%" height="15" fill="rgb(244,57,34)"/><text x="74.9958%" y="607.50">__..</text></g><g><title>__GI___clone (82 samples, 6.95%)</title><rect x="70.5932%" y="853" width="6.9492%" height="15" fill="rgb(214,203,32)"/><text x="70.8432%" y="863.50">__GI___cl..</text></g><g><title>start_thread (82 samples, 6.95%)</title><rect x="70.5932%" y="837" width="6.9492%" height="15" fill="rgb(207,58,43)"/><text x="70.8432%" y="847.50">start_thr..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (81 samples, 6.86%)</title><rect x="70.6780%" y="821" width="6.8644%" height="15" fill="rgb(215,193,15)"/><text x="70.9280%" y="831.50">std::sys:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (81 samples, 6.86%)</title><rect x="70.6780%" y="805" width="6.8644%" height="15" fill="rgb(232,15,44)"/><text x="70.9280%" y="815.50">&lt;alloc::b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (81 samples, 6.86%)</title><rect x="70.6780%" y="789" width="6.8644%" height="15" fill="rgb(212,3,48)"/><text x="70.9280%" y="799.50">&lt;alloc::b..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (81 samples, 6.86%)</title><rect x="70.6780%" y="773" width="6.8644%" height="15" fill="rgb(218,128,7)"/><text x="70.9280%" y="783.50">core::ops..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (81 samples, 6.86%)</title><rect x="70.6780%" y="757" width="6.8644%" height="15" fill="rgb(226,216,39)"/><text x="70.9280%" y="767.50">std::sys_..</text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.42%)</title><rect x="77.9661%" y="597" width="0.4237%" height="15" fill="rgb(243,47,51)"/><text x="78.2161%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.34%)</title><rect x="78.0508%" y="581" width="0.3390%" height="15" fill="rgb(241,183,40)"/><text x="78.3008%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 19.49%)</title><rect x="78.7288%" y="373" width="19.4915%" height="15" fill="rgb(231,217,32)"/><text x="78.9788%" y="383.50">__intel_pmu_enable_all.constpro..</text></g><g><title>native_write_msr (230 samples, 19.49%)</title><rect x="78.7288%" y="357" width="19.4915%" height="15" fill="rgb(229,61,38)"/><text x="78.9788%" y="367.50">native_write_msr</text></g><g><title>cpu_stop_queue_work (233 samples, 19.75%)</title><rect x="78.5593%" y="469" width="19.7458%" height="15" fill="rgb(225,210,5)"/><text x="78.8093%" y="479.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (233 samples, 19.75%)</title><rect x="78.5593%" y="453" width="19.7458%" height="15" fill="rgb(231,79,45)"/><text x="78.8093%" y="463.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (233 samples, 19.75%)</title><rect x="78.5593%" y="437" width="19.7458%" height="15" fill="rgb(224,100,7)"/><text x="78.8093%" y="447.50">preempt_schedule_common</text></g><g><title>__schedule (233 samples, 19.75%)</title><rect x="78.5593%" y="421" width="19.7458%" height="15" fill="rgb(241,198,18)"/><text x="78.8093%" y="431.50">__schedule</text></g><g><title>finish_task_switch (233 samples, 19.75%)</title><rect x="78.5593%" y="405" width="19.7458%" height="15" fill="rgb(252,97,53)"/><text x="78.8093%" y="415.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (231 samples, 19.58%)</title><rect x="78.7288%" y="389" width="19.5763%" height="15" fill="rgb(220,88,7)"/><text x="78.9788%" y="399.50">__perf_event_task_sched_in</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 19.92%)</title><rect x="78.4746%" y="533" width="19.9153%" height="15" fill="rgb(213,176,14)"/><text x="78.7246%" y="543.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 19.92%)</title><rect x="78.4746%" y="517" width="19.9153%" height="15" fill="rgb(246,73,7)"/><text x="78.7246%" y="527.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 19.92%)</title><rect x="78.4746%" y="501" width="19.9153%" height="15" fill="rgb(245,64,36)"/><text x="78.7246%" y="511.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 19.92%)</title><rect x="78.4746%" y="485" width="19.9153%" height="15" fill="rgb(245,80,10)"/><text x="78.7246%" y="495.50">stop_one_cpu</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 20.08%)</title><rect x="78.3898%" y="581" width="20.0847%" height="15" fill="rgb(232,107,50)"/><text x="78.6398%" y="591.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (236 samples, 20.00%)</title><rect x="78.4746%" y="565" width="20.0000%" height="15" fill="rgb(253,3,0)"/><text x="78.7246%" y="575.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (236 samples, 20.00%)</title><rect x="78.4746%" y="549" width="20.0000%" height="15" fill="rgb(212,99,53)"/><text x="78.7246%" y="559.50">do_syscall_64</text></g><g><title>hwloc::Topology::new (244 samples, 20.68%)</title><rect x="77.8814%" y="677" width="20.6780%" height="15" fill="rgb(249,111,54)"/><text x="78.1314%" y="687.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (244 samples, 20.68%)</title><rect x="77.8814%" y="661" width="20.6780%" height="15" fill="rgb(249,55,30)"/><text x="78.1314%" y="671.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 20.68%)</title><rect x="77.8814%" y="645" width="20.6780%" height="15" fill="rgb(237,47,42)"/><text x="78.1314%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 20.68%)</title><rect x="77.8814%" y="629" width="20.6780%" height="15" fill="rgb(211,20,18)"/><text x="78.1314%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 20.68%)</title><rect x="77.8814%" y="613" width="20.6780%" height="15" fill="rgb(231,203,46)"/><text x="78.1314%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 20.17%)</title><rect x="78.3898%" y="597" width="20.1695%" height="15" fill="rgb(237,142,3)"/><text x="78.6398%" y="607.50">hwloc_linux_set_tid_cpubind</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.17%)</title><rect x="98.6441%" y="677" width="0.1695%" height="15" fill="rgb(241,107,1)"/><text x="98.8941%" y="687.50"></text></g><g><title>__libc_start_main (251 samples, 21.27%)</title><rect x="77.6271%" y="837" width="21.2712%" height="15" fill="rgb(229,83,13)"/><text x="77.8771%" y="847.50">__libc_start_main</text></g><g><title>main (251 samples, 21.27%)</title><rect x="77.6271%" y="821" width="21.2712%" height="15" fill="rgb(241,91,40)"/><text x="77.8771%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (251 samples, 21.27%)</title><rect x="77.6271%" y="805" width="21.2712%" height="15" fill="rgb(225,3,45)"/><text x="77.8771%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (251 samples, 21.27%)</title><rect x="77.6271%" y="789" width="21.2712%" height="15" fill="rgb(244,223,14)"/><text x="77.8771%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (251 samples, 21.27%)</title><rect x="77.6271%" y="773" width="21.2712%" height="15" fill="rgb(224,124,37)"/><text x="77.8771%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (251 samples, 21.27%)</title><rect x="77.6271%" y="757" width="21.2712%" height="15" fill="rgb(251,171,30)"/><text x="77.8771%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (251 samples, 21.27%)</title><rect x="77.6271%" y="741" width="21.2712%" height="15" fill="rgb(236,46,54)"/><text x="77.8771%" y="751.50">core::ops::function::impls::&lt;impl ..</text></g><g><title>std::rt::lang_start::_{{closure}} (251 samples, 21.27%)</title><rect x="77.6271%" y="725" width="21.2712%" height="15" fill="rgb(245,213,5)"/><text x="77.8771%" y="735.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (251 samples, 21.27%)</title><rect x="77.6271%" y="709" width="21.2712%" height="15" fill="rgb(230,144,27)"/><text x="77.8771%" y="719.50">std::sys_common::backtrace::__rust..</text></g><g><title>lobsters::main (251 samples, 21.27%)</title><rect x="77.6271%" y="693" width="21.2712%" height="15" fill="rgb(220,86,6)"/><text x="77.8771%" y="703.50">lobsters::main</text></g><g><title>_start (252 samples, 21.36%)</title><rect x="77.6271%" y="853" width="21.3559%" height="15" fill="rgb(240,20,13)"/><text x="77.8771%" y="863.50">_start</text></g><g><title>entry_SYSCALL_64 (3 samples, 0.25%)</title><rect x="99.1525%" y="853" width="0.2542%" height="15" fill="rgb(217,89,34)"/><text x="99.4025%" y="863.50"></text></g><g><title>do_syscall_64 (2 samples, 0.17%)</title><rect x="99.2373%" y="837" width="0.1695%" height="15" fill="rgb(229,13,5)"/><text x="99.4873%" y="847.50"></text></g><g><title>lobsters (1,174 samples, 99.49%)</title><rect x="0.0000%" y="869" width="99.4915%" height="15" fill="rgb(244,67,35)"/><text x="0.2500%" y="879.50">lobsters</text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.42%)</title><rect x="99.4915%" y="709" width="0.4237%" height="15" fill="rgb(221,40,2)"/><text x="99.7415%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.42%)</title><rect x="99.4915%" y="693" width="0.4237%" height="15" fill="rgb(237,157,21)"/><text x="99.7415%" y="703.50"></text></g><g><title>all (1,180 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(222,94,11)"/><text x="0.2500%" y="895.50"></text></g><g><title>perf (6 samples, 0.51%)</title><rect x="99.4915%" y="869" width="0.5085%" height="15" fill="rgb(249,113,6)"/><text x="99.7415%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.51%)</title><rect x="99.4915%" y="853" width="0.5085%" height="15" fill="rgb(238,137,36)"/><text x="99.7415%" y="863.50"></text></g><g><title>do_syscall_64 (6 samples, 0.51%)</title><rect x="99.4915%" y="837" width="0.5085%" height="15" fill="rgb(210,102,26)"/><text x="99.7415%" y="847.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.51%)</title><rect x="99.4915%" y="821" width="0.5085%" height="15" fill="rgb(218,30,30)"/><text x="99.7415%" y="831.50"></text></g><g><title>do_execve (6 samples, 0.51%)</title><rect x="99.4915%" y="805" width="0.5085%" height="15" fill="rgb(214,67,26)"/><text x="99.7415%" y="815.50"></text></g><g><title>__do_execve_file (6 samples, 0.51%)</title><rect x="99.4915%" y="789" width="0.5085%" height="15" fill="rgb(251,9,53)"/><text x="99.7415%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.51%)</title><rect x="99.4915%" y="773" width="0.5085%" height="15" fill="rgb(228,204,25)"/><text x="99.7415%" y="783.50"></text></g><g><title>load_elf_binary (6 samples, 0.51%)</title><rect x="99.4915%" y="757" width="0.5085%" height="15" fill="rgb(207,153,8)"/><text x="99.7415%" y="767.50"></text></g><g><title>setup_new_exec (6 samples, 0.51%)</title><rect x="99.4915%" y="741" width="0.5085%" height="15" fill="rgb(242,9,16)"/><text x="99.7415%" y="751.50"></text></g><g><title>perf_event_exec (6 samples, 0.51%)</title><rect x="99.4915%" y="725" width="0.5085%" height="15" fill="rgb(217,211,10)"/><text x="99.7415%" y="735.50"></text></g></svg></svg>