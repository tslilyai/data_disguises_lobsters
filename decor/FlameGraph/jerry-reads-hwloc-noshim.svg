<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>next_online_pgdat (1 samples, 0.42%)</title><rect x="1185.1" y="261" width="4.9" height="15.0" fill="rgb(251,167,14)" rx="2" ry="2" />
<text  x="1188.06" y="271.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="93.9" y="245" width="5.0" height="15.0" fill="rgb(251,162,41)" rx="2" ry="2" />
<text  x="96.93" y="255.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="93.9" y="213" width="5.0" height="15.0" fill="rgb(215,95,24)" rx="2" ry="2" />
<text  x="96.93" y="223.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.84%)</title><rect x="19.9" y="325" width="9.8" height="15.0" fill="rgb(229,64,51)" rx="2" ry="2" />
<text  x="22.87" y="335.5" ></text>
</g>
<g >
<title>lobsters (12 samples, 5.02%)</title><rect x="14.9" y="373" width="59.3" height="15.0" fill="rgb(253,146,14)" rx="2" ry="2" />
<text  x="17.94" y="383.5" >lobsters</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.42%)</title><rect x="1041.9" y="213" width="4.9" height="15.0" fill="rgb(254,146,26)" rx="2" ry="2" />
<text  x="1044.88" y="223.5" ></text>
</g>
<g >
<title>migration/4 (1 samples, 0.42%)</title><rect x="123.6" y="373" width="4.9" height="15.0" fill="rgb(237,154,40)" rx="2" ry="2" />
<text  x="126.56" y="383.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="89.0" y="245" width="4.9" height="15.0" fill="rgb(244,151,7)" rx="2" ry="2" />
<text  x="92.00" y="255.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="10.0" y="357" width="4.9" height="15.0" fill="rgb(218,23,37)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="84.1" y="277" width="4.9" height="15.0" fill="rgb(229,7,25)" rx="2" ry="2" />
<text  x="87.06" y="287.5" ></text>
</g>
<g >
<title>migration/12 (1 samples, 0.42%)</title><rect x="84.1" y="373" width="4.9" height="15.0" fill="rgb(246,97,41)" rx="2" ry="2" />
<text  x="87.06" y="383.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="103.8" y="341" width="4.9" height="15.0" fill="rgb(226,28,8)" rx="2" ry="2" />
<text  x="106.81" y="351.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.42%)</title><rect x="39.6" y="245" width="5.0" height="15.0" fill="rgb(239,204,17)" rx="2" ry="2" />
<text  x="42.62" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.42%)</title><rect x="1180.1" y="277" width="5.0" height="15.0" fill="rgb(237,173,52)" rx="2" ry="2" />
<text  x="1183.13" y="287.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="89.0" y="229" width="4.9" height="15.0" fill="rgb(240,133,18)" rx="2" ry="2" />
<text  x="92.00" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.42%)</title><rect x="44.6" y="309" width="4.9" height="15.0" fill="rgb(246,21,9)" rx="2" ry="2" />
<text  x="47.56" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="108.7" y="229" width="5.0" height="15.0" fill="rgb(220,72,48)" rx="2" ry="2" />
<text  x="111.74" y="239.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="128.5" y="309" width="4.9" height="15.0" fill="rgb(227,6,5)" rx="2" ry="2" />
<text  x="131.49" y="319.5" ></text>
</g>
<g >
<title>serial8250_console_write (1 samples, 0.42%)</title><rect x="10.0" y="181" width="4.9" height="15.0" fill="rgb(244,54,35)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>wait_for_xmitr (1 samples, 0.42%)</title><rect x="10.0" y="133" width="4.9" height="15.0" fill="rgb(240,10,15)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.42%)</title><rect x="1027.1" y="181" width="4.9" height="15.0" fill="rgb(209,221,5)" rx="2" ry="2" />
<text  x="1030.07" y="191.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="98.9" y="213" width="4.9" height="15.0" fill="rgb(230,121,44)" rx="2" ry="2" />
<text  x="101.87" y="223.5" ></text>
</g>
<g >
<title>migration/6 (1 samples, 0.42%)</title><rect x="128.5" y="373" width="4.9" height="15.0" fill="rgb(230,176,47)" rx="2" ry="2" />
<text  x="131.49" y="383.5" ></text>
</g>
<g >
<title>netdev_err (1 samples, 0.42%)</title><rect x="10.0" y="277" width="4.9" height="15.0" fill="rgb(239,69,54)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="118.6" y="341" width="5.0" height="15.0" fill="rgb(233,6,20)" rx="2" ry="2" />
<text  x="121.62" y="351.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.42%)</title><rect x="113.7" y="277" width="4.9" height="15.0" fill="rgb(217,201,17)" rx="2" ry="2" />
<text  x="116.68" y="287.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="98.9" y="341" width="4.9" height="15.0" fill="rgb(246,18,21)" rx="2" ry="2" />
<text  x="101.87" y="351.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (27 samples, 11.30%)</title><rect x="1046.8" y="245" width="133.3" height="15.0" fill="rgb(221,224,13)" rx="2" ry="2" />
<text  x="1049.82" y="255.5" >mwait_idle_with_..</text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="123.6" y="309" width="4.9" height="15.0" fill="rgb(231,81,21)" rx="2" ry="2" />
<text  x="126.56" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="89.0" y="341" width="4.9" height="15.0" fill="rgb(211,169,0)" rx="2" ry="2" />
<text  x="92.00" y="351.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.42%)</title><rect x="39.6" y="261" width="5.0" height="15.0" fill="rgb(238,96,11)" rx="2" ry="2" />
<text  x="42.62" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.42%)</title><rect x="1027.1" y="261" width="4.9" height="15.0" fill="rgb(249,7,36)" rx="2" ry="2" />
<text  x="1030.07" y="271.5" ></text>
</g>
<g >
<title>[unknown] (163 samples, 68.20%)</title><rect x="227.2" y="357" width="804.8" height="15.0" fill="rgb(252,18,17)" rx="2" ry="2" />
<text  x="230.24" y="367.5" >[unknown]</text>
</g>
<g >
<title>Explain_query::~Explain_query (1 samples, 0.42%)</title><rect x="143.3" y="357" width="4.9" height="15.0" fill="rgb(207,187,51)" rx="2" ry="2" />
<text  x="146.31" y="367.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="84.1" y="293" width="4.9" height="15.0" fill="rgb(224,120,3)" rx="2" ry="2" />
<text  x="87.06" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (1 samples, 0.42%)</title><rect x="34.7" y="293" width="4.9" height="15.0" fill="rgb(221,145,23)" rx="2" ry="2" />
<text  x="37.69" y="303.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.42%)</title><rect x="10.0" y="309" width="4.9" height="15.0" fill="rgb(235,221,36)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="98.9" y="293" width="4.9" height="15.0" fill="rgb(219,37,48)" rx="2" ry="2" />
<text  x="101.87" y="303.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.42%)</title><rect x="74.2" y="309" width="4.9" height="15.0" fill="rgb(218,55,24)" rx="2" ry="2" />
<text  x="77.18" y="319.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.42%)</title><rect x="123.6" y="197" width="4.9" height="15.0" fill="rgb(237,22,43)" rx="2" ry="2" />
<text  x="126.56" y="207.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="118.6" y="325" width="5.0" height="15.0" fill="rgb(222,22,36)" rx="2" ry="2" />
<text  x="121.62" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="79.1" y="309" width="5.0" height="15.0" fill="rgb(251,65,6)" rx="2" ry="2" />
<text  x="82.12" y="319.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="79.1" y="277" width="5.0" height="15.0" fill="rgb(220,186,15)" rx="2" ry="2" />
<text  x="82.12" y="287.5" ></text>
</g>
<g >
<title>event_function_call (160 samples, 66.95%)</title><rect x="227.2" y="133" width="790.0" height="15.0" fill="rgb(223,74,23)" rx="2" ry="2" />
<text  x="230.24" y="143.5" >event_function_call</text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="98.9" y="277" width="4.9" height="15.0" fill="rgb(226,151,4)" rx="2" ry="2" />
<text  x="101.87" y="287.5" ></text>
</g>
<g >
<title>intel_idle (27 samples, 11.30%)</title><rect x="1046.8" y="261" width="133.3" height="15.0" fill="rgb(217,184,15)" rx="2" ry="2" />
<text  x="1049.82" y="271.5" >intel_idle</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="108.7" y="357" width="5.0" height="15.0" fill="rgb(221,177,16)" rx="2" ry="2" />
<text  x="111.74" y="367.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="84.1" y="229" width="4.9" height="15.0" fill="rgb(218,206,6)" rx="2" ry="2" />
<text  x="87.06" y="239.5" ></text>
</g>
<g >
<title>JOIN::optimize_stage2 (1 samples, 0.42%)</title><rect x="148.2" y="357" width="5.0" height="15.0" fill="rgb(229,124,34)" rx="2" ry="2" />
<text  x="151.24" y="367.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="123.6" y="245" width="4.9" height="15.0" fill="rgb(247,90,28)" rx="2" ry="2" />
<text  x="126.56" y="255.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.42%)</title><rect x="39.6" y="229" width="5.0" height="15.0" fill="rgb(206,148,24)" rx="2" ry="2" />
<text  x="42.62" y="239.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="123.6" y="213" width="4.9" height="15.0" fill="rgb(238,136,27)" rx="2" ry="2" />
<text  x="126.56" y="223.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="84.1" y="341" width="4.9" height="15.0" fill="rgb(209,206,0)" rx="2" ry="2" />
<text  x="87.06" y="351.5" ></text>
</g>
<g >
<title>mysqld (18 samples, 7.53%)</title><rect x="138.4" y="373" width="88.8" height="15.0" fill="rgb(225,87,17)" rx="2" ry="2" />
<text  x="141.37" y="383.5" >mysqld</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="84.1" y="325" width="4.9" height="15.0" fill="rgb(224,22,54)" rx="2" ry="2" />
<text  x="87.06" y="335.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="89.0" y="293" width="4.9" height="15.0" fill="rgb(248,114,22)" rx="2" ry="2" />
<text  x="92.00" y="303.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.42%)</title><rect x="34.7" y="341" width="4.9" height="15.0" fill="rgb(232,185,54)" rx="2" ry="2" />
<text  x="37.69" y="351.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="93.9" y="293" width="5.0" height="15.0" fill="rgb(252,81,5)" rx="2" ry="2" />
<text  x="96.93" y="303.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="133.4" y="341" width="5.0" height="15.0" fill="rgb(241,173,31)" rx="2" ry="2" />
<text  x="136.43" y="351.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (28 samples, 11.72%)</title><rect x="1041.9" y="277" width="138.2" height="15.0" fill="rgb(205,31,14)" rx="2" ry="2" />
<text  x="1044.88" y="287.5" >cpuidle_enter_state</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="89.0" y="261" width="4.9" height="15.0" fill="rgb(208,215,40)" rx="2" ry="2" />
<text  x="92.00" y="271.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="133.4" y="229" width="5.0" height="15.0" fill="rgb(214,189,18)" rx="2" ry="2" />
<text  x="136.43" y="239.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (1 samples, 0.42%)</title><rect x="1022.1" y="261" width="5.0" height="15.0" fill="rgb(228,145,18)" rx="2" ry="2" />
<text  x="1025.13" y="271.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.42%)</title><rect x="44.6" y="341" width="4.9" height="15.0" fill="rgb(247,86,38)" rx="2" ry="2" />
<text  x="47.56" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.42%)</title><rect x="1027.1" y="245" width="4.9" height="15.0" fill="rgb(224,191,31)" rx="2" ry="2" />
<text  x="1030.07" y="255.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="118.6" y="309" width="5.0" height="15.0" fill="rgb(223,174,16)" rx="2" ry="2" />
<text  x="121.62" y="319.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="79.1" y="293" width="5.0" height="15.0" fill="rgb(242,169,44)" rx="2" ry="2" />
<text  x="82.12" y="303.5" ></text>
</g>
<g >
<title>[vmlinux] (31 samples, 12.97%)</title><rect x="1036.9" y="357" width="153.1" height="15.0" fill="rgb(249,150,42)" rx="2" ry="2" />
<text  x="1039.95" y="367.5" >[vmlinux]</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="133.4" y="213" width="5.0" height="15.0" fill="rgb(220,112,16)" rx="2" ry="2" />
<text  x="136.43" y="223.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="103.8" y="245" width="4.9" height="15.0" fill="rgb(251,22,34)" rx="2" ry="2" />
<text  x="106.81" y="255.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.42%)</title><rect x="10.0" y="325" width="4.9" height="15.0" fill="rgb(215,151,1)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.42%)</title><rect x="1027.1" y="229" width="4.9" height="15.0" fill="rgb(224,57,41)" rx="2" ry="2" />
<text  x="1030.07" y="239.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.42%)</title><rect x="74.2" y="277" width="4.9" height="15.0" fill="rgb(219,156,24)" rx="2" ry="2" />
<text  x="77.18" y="287.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="98.9" y="325" width="4.9" height="15.0" fill="rgb(243,55,50)" rx="2" ry="2" />
<text  x="101.87" y="335.5" ></text>
</g>
<g >
<title>start_secondary (31 samples, 12.97%)</title><rect x="1036.9" y="341" width="153.1" height="15.0" fill="rgb(226,179,29)" rx="2" ry="2" />
<text  x="1039.95" y="351.5" >start_secondary</text>
</g>
<g >
<title>__GI___ioctl (161 samples, 67.36%)</title><rect x="227.2" y="261" width="794.9" height="15.0" fill="rgb(229,67,52)" rx="2" ry="2" />
<text  x="230.24" y="271.5" >__GI___ioctl</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.42%)</title><rect x="1041.9" y="197" width="4.9" height="15.0" fill="rgb(240,171,18)" rx="2" ry="2" />
<text  x="1044.88" y="207.5" ></text>
</g>
<g >
<title>evlist__enable (162 samples, 67.78%)</title><rect x="227.2" y="277" width="799.9" height="15.0" fill="rgb(249,162,24)" rx="2" ry="2" />
<text  x="230.24" y="287.5" >evlist__enable</text>
</g>
<g >
<title>[unknown] (3 samples, 1.26%)</title><rect x="19.9" y="341" width="14.8" height="15.0" fill="rgb(246,57,6)" rx="2" ry="2" />
<text  x="22.87" y="351.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="103.8" y="261" width="4.9" height="15.0" fill="rgb(250,71,26)" rx="2" ry="2" />
<text  x="106.81" y="271.5" ></text>
</g>
<g >
<title>migration/22 (1 samples, 0.42%)</title><rect x="113.7" y="373" width="4.9" height="15.0" fill="rgb(247,177,20)" rx="2" ry="2" />
<text  x="116.68" y="383.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="108.7" y="277" width="5.0" height="15.0" fill="rgb(215,72,22)" rx="2" ry="2" />
<text  x="111.74" y="287.5" ></text>
</g>
<g >
<title>__libc_start_main (163 samples, 68.20%)</title><rect x="227.2" y="341" width="804.8" height="15.0" fill="rgb(230,218,23)" rx="2" ry="2" />
<text  x="230.24" y="351.5" >__libc_start_main</text>
</g>
<g >
<title>malloc (1 samples, 0.42%)</title><rect x="29.7" y="325" width="5.0" height="15.0" fill="rgb(227,50,18)" rx="2" ry="2" />
<text  x="32.75" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (160 samples, 66.95%)</title><rect x="227.2" y="213" width="790.0" height="15.0" fill="rgb(233,54,52)" rx="2" ry="2" />
<text  x="230.24" y="223.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.42%)</title><rect x="39.6" y="165" width="5.0" height="15.0" fill="rgb(249,44,14)" rx="2" ry="2" />
<text  x="42.62" y="175.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.42%)</title><rect x="39.6" y="149" width="5.0" height="15.0" fill="rgb(214,34,6)" rx="2" ry="2" />
<text  x="42.62" y="159.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="123.6" y="229" width="4.9" height="15.0" fill="rgb(206,79,21)" rx="2" ry="2" />
<text  x="126.56" y="239.5" ></text>
</g>
<g >
<title>alloc_root (1 samples, 0.42%)</title><rect x="217.4" y="357" width="4.9" height="15.0" fill="rgb(231,215,44)" rx="2" ry="2" />
<text  x="220.36" y="367.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 4.60%)</title><rect x="163.1" y="357" width="54.3" height="15.0" fill="rgb(252,45,2)" rx="2" ry="2" />
<text  x="166.05" y="367.5" >[unkn..</text>
</g>
<g >
<title>[[ixgbe]] (1 samples, 0.42%)</title><rect x="10.0" y="293" width="4.9" height="15.0" fill="rgb(210,170,0)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 0.42%)</title><rect x="1027.1" y="149" width="4.9" height="15.0" fill="rgb(230,122,20)" rx="2" ry="2" />
<text  x="1030.07" y="159.5" ></text>
</g>
<g >
<title>vprintk_emit (1 samples, 0.42%)</title><rect x="10.0" y="213" width="4.9" height="15.0" fill="rgb(206,168,11)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__sys_recvfrom (1 samples, 0.42%)</title><rect x="34.7" y="277" width="4.9" height="15.0" fill="rgb(237,204,21)" rx="2" ry="2" />
<text  x="37.69" y="287.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.42%)</title><rect x="74.2" y="261" width="4.9" height="15.0" fill="rgb(226,28,39)" rx="2" ry="2" />
<text  x="77.18" y="271.5" ></text>
</g>
<g >
<title>run_builtin (163 samples, 68.20%)</title><rect x="227.2" y="309" width="804.8" height="15.0" fill="rgb(233,148,11)" rx="2" ry="2" />
<text  x="230.24" y="319.5" >run_builtin</text>
</g>
<g >
<title>dev_printk_emit (1 samples, 0.42%)</title><rect x="10.0" y="245" width="4.9" height="15.0" fill="rgb(244,28,6)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>serial8250_console_putchar (1 samples, 0.42%)</title><rect x="10.0" y="149" width="4.9" height="15.0" fill="rgb(239,189,31)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>io_serial_in (1 samples, 0.42%)</title><rect x="10.0" y="117" width="4.9" height="15.0" fill="rgb(208,149,44)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (160 samples, 66.95%)</title><rect x="227.2" y="245" width="790.0" height="15.0" fill="rgb(232,62,53)" rx="2" ry="2" />
<text  x="230.24" y="255.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>ksys_ioctl (160 samples, 66.95%)</title><rect x="227.2" y="197" width="790.0" height="15.0" fill="rgb(232,39,48)" rx="2" ry="2" />
<text  x="230.24" y="207.5" >ksys_ioctl</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="98.9" y="357" width="4.9" height="15.0" fill="rgb(215,129,31)" rx="2" ry="2" />
<text  x="101.87" y="367.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="133.4" y="245" width="5.0" height="15.0" fill="rgb(218,16,44)" rx="2" ry="2" />
<text  x="136.43" y="255.5" ></text>
</g>
<g >
<title>remote_function (160 samples, 66.95%)</title><rect x="227.2" y="85" width="790.0" height="15.0" fill="rgb(248,127,26)" rx="2" ry="2" />
<text  x="230.24" y="95.5" >remote_function</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.42%)</title><rect x="44.6" y="261" width="4.9" height="15.0" fill="rgb(252,112,15)" rx="2" ry="2" />
<text  x="47.56" y="271.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="103.8" y="325" width="4.9" height="15.0" fill="rgb(206,79,12)" rx="2" ry="2" />
<text  x="106.81" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.42%)</title><rect x="34.7" y="325" width="4.9" height="15.0" fill="rgb(212,98,8)" rx="2" ry="2" />
<text  x="37.69" y="335.5" ></text>
</g>
<g >
<title>__rust_alloc (1 samples, 0.42%)</title><rect x="54.4" y="357" width="5.0" height="15.0" fill="rgb(229,168,42)" rx="2" ry="2" />
<text  x="57.44" y="367.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="113.7" y="325" width="4.9" height="15.0" fill="rgb(244,202,1)" rx="2" ry="2" />
<text  x="116.68" y="335.5" ></text>
</g>
<g >
<title>TABLE::find_field_by_name (1 samples, 0.42%)</title><rect x="168.0" y="325" width="4.9" height="15.0" fill="rgb(207,143,1)" rx="2" ry="2" />
<text  x="170.99" y="335.5" ></text>
</g>
<g >
<title>event_function (160 samples, 66.95%)</title><rect x="227.2" y="69" width="790.0" height="15.0" fill="rgb(243,36,19)" rx="2" ry="2" />
<text  x="230.24" y="79.5" >event_function</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 2.93%)</title><rect x="182.8" y="309" width="34.6" height="15.0" fill="rgb(221,142,9)" rx="2" ry="2" />
<text  x="185.80" y="319.5" >__..</text>
</g>
<g >
<title>__rust_dealloc (1 samples, 0.42%)</title><rect x="59.4" y="357" width="4.9" height="15.0" fill="rgb(252,161,2)" rx="2" ry="2" />
<text  x="62.37" y="367.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.42%)</title><rect x="1022.1" y="117" width="5.0" height="15.0" fill="rgb(228,53,53)" rx="2" ry="2" />
<text  x="1025.13" y="127.5" ></text>
</g>
<g >
<title>dyntick_save_progress_counter (1 samples, 0.42%)</title><rect x="1032.0" y="293" width="4.9" height="15.0" fill="rgb(240,179,13)" rx="2" ry="2" />
<text  x="1035.01" y="303.5" ></text>
</g>
<g >
<title>Arg_comparator::compare_int_signed (1 samples, 0.42%)</title><rect x="138.4" y="357" width="4.9" height="15.0" fill="rgb(237,105,6)" rx="2" ry="2" />
<text  x="141.37" y="367.5" ></text>
</g>
<g >
<title>perf (163 samples, 68.20%)</title><rect x="227.2" y="373" width="804.8" height="15.0" fill="rgb(244,137,43)" rx="2" ry="2" />
<text  x="230.24" y="383.5" >perf</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.42%)</title><rect x="1185.1" y="293" width="4.9" height="15.0" fill="rgb(227,23,50)" rx="2" ry="2" />
<text  x="1188.06" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.42%)</title><rect x="39.6" y="309" width="5.0" height="15.0" fill="rgb(216,212,51)" rx="2" ry="2" />
<text  x="42.62" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.42%)</title><rect x="1041.9" y="181" width="4.9" height="15.0" fill="rgb(253,206,12)" rx="2" ry="2" />
<text  x="1044.88" y="191.5" ></text>
</g>
<g >
<title>__sys_sendto (1 samples, 0.42%)</title><rect x="39.6" y="277" width="5.0" height="15.0" fill="rgb(217,148,30)" rx="2" ry="2" />
<text  x="42.62" y="287.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="133.4" y="325" width="5.0" height="15.0" fill="rgb(227,17,17)" rx="2" ry="2" />
<text  x="136.43" y="335.5" ></text>
</g>
<g >
<title>[mysqld] (1 samples, 0.42%)</title><rect x="177.9" y="293" width="4.9" height="15.0" fill="rgb(241,220,18)" rx="2" ry="2" />
<text  x="180.87" y="303.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (160 samples, 66.95%)</title><rect x="227.2" y="53" width="790.0" height="15.0" fill="rgb(249,91,37)" rx="2" ry="2" />
<text  x="230.24" y="63.5" >__intel_pmu_enable_all.constprop.0</text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="118.6" y="293" width="5.0" height="15.0" fill="rgb(235,94,51)" rx="2" ry="2" />
<text  x="121.62" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="103.8" y="357" width="4.9" height="15.0" fill="rgb(232,215,52)" rx="2" ry="2" />
<text  x="106.81" y="367.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="128.5" y="213" width="4.9" height="15.0" fill="rgb(250,37,33)" rx="2" ry="2" />
<text  x="131.49" y="223.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.42%)</title><rect x="1041.9" y="149" width="4.9" height="15.0" fill="rgb(206,175,46)" rx="2" ry="2" />
<text  x="1044.88" y="159.5" ></text>
</g>
<g >
<title>mysql_common::value::read_text_values (1 samples, 0.42%)</title><rect x="69.2" y="357" width="5.0" height="15.0" fill="rgb(240,59,36)" rx="2" ry="2" />
<text  x="72.25" y="367.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.42%)</title><rect x="113.7" y="309" width="4.9" height="15.0" fill="rgb(211,99,0)" rx="2" ry="2" />
<text  x="116.68" y="319.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="128.5" y="245" width="4.9" height="15.0" fill="rgb(216,198,26)" rx="2" ry="2" />
<text  x="131.49" y="255.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.42%)</title><rect x="39.6" y="181" width="5.0" height="15.0" fill="rgb(225,140,39)" rx="2" ry="2" />
<text  x="42.62" y="191.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="108.7" y="309" width="5.0" height="15.0" fill="rgb(206,122,8)" rx="2" ry="2" />
<text  x="111.74" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (1 samples, 0.42%)</title><rect x="1022.1" y="213" width="5.0" height="15.0" fill="rgb(217,158,40)" rx="2" ry="2" />
<text  x="1025.13" y="223.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.42%)</title><rect x="64.3" y="357" width="4.9" height="15.0" fill="rgb(207,23,47)" rx="2" ry="2" />
<text  x="67.31" y="367.5" ></text>
</g>
<g >
<title>[mysqld] (1 samples, 0.42%)</title><rect x="158.1" y="357" width="5.0" height="15.0" fill="rgb(213,203,50)" rx="2" ry="2" />
<text  x="161.12" y="367.5" ></text>
</g>
<g >
<title>force_qs_rnp (1 samples, 0.42%)</title><rect x="1032.0" y="309" width="4.9" height="15.0" fill="rgb(244,226,16)" rx="2" ry="2" />
<text  x="1035.01" y="319.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="98.9" y="309" width="4.9" height="15.0" fill="rgb(211,40,45)" rx="2" ry="2" />
<text  x="101.87" y="319.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 3.77%)</title><rect x="172.9" y="325" width="44.5" height="15.0" fill="rgb(222,188,46)" rx="2" ry="2" />
<text  x="175.93" y="335.5" >[unk..</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.42%)</title><rect x="1022.1" y="149" width="5.0" height="15.0" fill="rgb(253,170,11)" rx="2" ry="2" />
<text  x="1025.13" y="159.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="79.1" y="261" width="5.0" height="15.0" fill="rgb(231,176,35)" rx="2" ry="2" />
<text  x="82.12" y="271.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.42%)</title><rect x="113.7" y="293" width="4.9" height="15.0" fill="rgb(234,104,13)" rx="2" ry="2" />
<text  x="116.68" y="303.5" ></text>
</g>
<g >
<title>migration/19 (1 samples, 0.42%)</title><rect x="108.7" y="373" width="5.0" height="15.0" fill="rgb(241,24,4)" rx="2" ry="2" />
<text  x="111.74" y="383.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="103.8" y="229" width="4.9" height="15.0" fill="rgb(244,125,35)" rx="2" ry="2" />
<text  x="106.81" y="239.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.42%)</title><rect x="113.7" y="229" width="4.9" height="15.0" fill="rgb(219,78,38)" rx="2" ry="2" />
<text  x="116.68" y="239.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="84.1" y="213" width="4.9" height="15.0" fill="rgb(244,23,10)" rx="2" ry="2" />
<text  x="87.06" y="223.5" ></text>
</g>
<g >
<title>swapper (31 samples, 12.97%)</title><rect x="1036.9" y="373" width="153.1" height="15.0" fill="rgb(234,81,24)" rx="2" ry="2" />
<text  x="1039.95" y="383.5" >swapper</text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.42%)</title><rect x="1022.1" y="133" width="5.0" height="15.0" fill="rgb(242,224,52)" rx="2" ry="2" />
<text  x="1025.13" y="143.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.42%)</title><rect x="34.7" y="261" width="4.9" height="15.0" fill="rgb(222,201,11)" rx="2" ry="2" />
<text  x="37.69" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="84.1" y="357" width="4.9" height="15.0" fill="rgb(252,100,30)" rx="2" ry="2" />
<text  x="87.06" y="367.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="108.7" y="245" width="5.0" height="15.0" fill="rgb(250,204,48)" rx="2" ry="2" />
<text  x="111.74" y="255.5" ></text>
</g>
<g >
<title>do_idle (31 samples, 12.97%)</title><rect x="1036.9" y="309" width="153.1" height="15.0" fill="rgb(220,80,0)" rx="2" ry="2" />
<text  x="1039.95" y="319.5" >do_idle</text>
</g>
<g >
<title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.42%)</title><rect x="14.9" y="357" width="5.0" height="15.0" fill="rgb(211,68,41)" rx="2" ry="2" />
<text  x="17.94" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (160 samples, 66.95%)</title><rect x="227.2" y="37" width="790.0" height="15.0" fill="rgb(247,12,0)" rx="2" ry="2" />
<text  x="230.24" y="47.5" >native_write_msr</text>
</g>
<g >
<title>__set_cpus_allowed_ptr (1 samples, 0.42%)</title><rect x="1022.1" y="181" width="5.0" height="15.0" fill="rgb(222,173,27)" rx="2" ry="2" />
<text  x="1025.13" y="191.5" ></text>
</g>
<g >
<title>kworker/u80:1-i (1 samples, 0.42%)</title><rect x="10.0" y="373" width="4.9" height="15.0" fill="rgb(243,178,40)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 4.18%)</title><rect x="168.0" y="341" width="49.4" height="15.0" fill="rgb(236,64,42)" rx="2" ry="2" />
<text  x="170.99" y="351.5" >[unk..</text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="89.0" y="309" width="4.9" height="15.0" fill="rgb(249,111,7)" rx="2" ry="2" />
<text  x="92.00" y="319.5" ></text>
</g>
<g >
<title>do_set_cpus_allowed (1 samples, 0.42%)</title><rect x="1022.1" y="165" width="5.0" height="15.0" fill="rgb(246,166,16)" rx="2" ry="2" />
<text  x="1025.13" y="175.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="93.9" y="309" width="5.0" height="15.0" fill="rgb(232,169,29)" rx="2" ry="2" />
<text  x="96.93" y="319.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.42%)</title><rect x="98.9" y="197" width="4.9" height="15.0" fill="rgb(240,128,53)" rx="2" ry="2" />
<text  x="101.87" y="207.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.42%)</title><rect x="113.7" y="245" width="4.9" height="15.0" fill="rgb(217,39,11)" rx="2" ry="2" />
<text  x="116.68" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (160 samples, 66.95%)</title><rect x="227.2" y="229" width="790.0" height="15.0" fill="rgb(214,60,15)" rx="2" ry="2" />
<text  x="230.24" y="239.5" >do_syscall_64</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="93.9" y="229" width="5.0" height="15.0" fill="rgb(239,203,38)" rx="2" ry="2" />
<text  x="96.93" y="239.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="133.4" y="277" width="5.0" height="15.0" fill="rgb(225,119,44)" rx="2" ry="2" />
<text  x="136.43" y="287.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="118.6" y="261" width="5.0" height="15.0" fill="rgb(236,182,51)" rx="2" ry="2" />
<text  x="121.62" y="271.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="128.5" y="261" width="4.9" height="15.0" fill="rgb(209,215,41)" rx="2" ry="2" />
<text  x="131.49" y="271.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="79.1" y="229" width="5.0" height="15.0" fill="rgb(251,35,4)" rx="2" ry="2" />
<text  x="82.12" y="239.5" ></text>
</g>
<g >
<title>migration/0 (1 samples, 0.42%)</title><rect x="74.2" y="373" width="4.9" height="15.0" fill="rgb(209,136,24)" rx="2" ry="2" />
<text  x="77.18" y="383.5" ></text>
</g>
<g >
<title>migration/8 (1 samples, 0.42%)</title><rect x="133.4" y="373" width="5.0" height="15.0" fill="rgb(245,143,30)" rx="2" ry="2" />
<text  x="136.43" y="383.5" ></text>
</g>
<g >
<title>main (163 samples, 68.20%)</title><rect x="227.2" y="325" width="804.8" height="15.0" fill="rgb(217,48,18)" rx="2" ry="2" />
<text  x="230.24" y="335.5" >main</text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.42%)</title><rect x="1022.1" y="197" width="5.0" height="15.0" fill="rgb(216,60,0)" rx="2" ry="2" />
<text  x="1025.13" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.42%)</title><rect x="1041.9" y="229" width="4.9" height="15.0" fill="rgb(214,80,41)" rx="2" ry="2" />
<text  x="1044.88" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.42%)</title><rect x="39.6" y="325" width="5.0" height="15.0" fill="rgb(209,10,13)" rx="2" ry="2" />
<text  x="42.62" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="123.6" y="261" width="4.9" height="15.0" fill="rgb(235,101,19)" rx="2" ry="2" />
<text  x="126.56" y="271.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="128.5" y="229" width="4.9" height="15.0" fill="rgb(228,188,17)" rx="2" ry="2" />
<text  x="131.49" y="239.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.42%)</title><rect x="44.6" y="325" width="4.9" height="15.0" fill="rgb(213,211,1)" rx="2" ry="2" />
<text  x="47.56" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.42%)</title><rect x="1041.9" y="261" width="4.9" height="15.0" fill="rgb(221,148,10)" rx="2" ry="2" />
<text  x="1044.88" y="271.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.42%)</title><rect x="1027.1" y="213" width="4.9" height="15.0" fill="rgb(246,83,54)" rx="2" ry="2" />
<text  x="1030.07" y="223.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="79.1" y="213" width="5.0" height="15.0" fill="rgb(220,158,40)" rx="2" ry="2" />
<text  x="82.12" y="223.5" ></text>
</g>
<g >
<title>console_unlock.part.0 (1 samples, 0.42%)</title><rect x="10.0" y="197" width="4.9" height="15.0" fill="rgb(229,209,17)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="128.5" y="357" width="4.9" height="15.0" fill="rgb(236,53,51)" rx="2" ry="2" />
<text  x="131.49" y="367.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.42%)</title><rect x="84.1" y="181" width="4.9" height="15.0" fill="rgb(251,152,9)" rx="2" ry="2" />
<text  x="87.06" y="191.5" ></text>
</g>
<g >
<title>__libc_send (1 samples, 0.42%)</title><rect x="39.6" y="341" width="5.0" height="15.0" fill="rgb(238,45,28)" rx="2" ry="2" />
<text  x="42.62" y="351.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.42%)</title><rect x="1027.1" y="197" width="4.9" height="15.0" fill="rgb(209,118,0)" rx="2" ry="2" />
<text  x="1030.07" y="207.5" ></text>
</g>
<g >
<title>migration/14 (1 samples, 0.42%)</title><rect x="89.0" y="373" width="4.9" height="15.0" fill="rgb(233,175,0)" rx="2" ry="2" />
<text  x="92.00" y="383.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="93.9" y="357" width="5.0" height="15.0" fill="rgb(227,32,11)" rx="2" ry="2" />
<text  x="96.93" y="367.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (1 samples, 0.42%)</title><rect x="34.7" y="229" width="4.9" height="15.0" fill="rgb(239,96,41)" rx="2" ry="2" />
<text  x="37.69" y="239.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="128.5" y="341" width="4.9" height="15.0" fill="rgb(212,71,17)" rx="2" ry="2" />
<text  x="131.49" y="351.5" ></text>
</g>
<g >
<title>migration/2 (1 samples, 0.42%)</title><rect x="118.6" y="373" width="5.0" height="15.0" fill="rgb(224,176,21)" rx="2" ry="2" />
<text  x="121.62" y="383.5" ></text>
</g>
<g >
<title>__netdev_printk (1 samples, 0.42%)</title><rect x="10.0" y="261" width="4.9" height="15.0" fill="rgb(206,170,46)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.84%)</title><rect x="172.9" y="309" width="9.9" height="15.0" fill="rgb(225,1,24)" rx="2" ry="2" />
<text  x="175.93" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="79.1" y="341" width="5.0" height="15.0" fill="rgb(210,46,48)" rx="2" ry="2" />
<text  x="82.12" y="351.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="79.1" y="325" width="5.0" height="15.0" fill="rgb(229,154,39)" rx="2" ry="2" />
<text  x="82.12" y="335.5" ></text>
</g>
<g >
<title>Arg_comparator::compare_int_signed (1 samples, 0.42%)</title><rect x="172.9" y="293" width="5.0" height="15.0" fill="rgb(228,77,22)" rx="2" ry="2" />
<text  x="175.93" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.42%)</title><rect x="34.7" y="309" width="4.9" height="15.0" fill="rgb(253,29,15)" rx="2" ry="2" />
<text  x="37.69" y="319.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.42%)</title><rect x="39.6" y="213" width="5.0" height="15.0" fill="rgb(208,188,44)" rx="2" ry="2" />
<text  x="42.62" y="223.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="103.8" y="309" width="4.9" height="15.0" fill="rgb(213,146,41)" rx="2" ry="2" />
<text  x="106.81" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="74.2" y="341" width="4.9" height="15.0" fill="rgb(253,95,23)" rx="2" ry="2" />
<text  x="77.18" y="351.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.42%)</title><rect x="1017.2" y="245" width="4.9" height="15.0" fill="rgb(239,97,2)" rx="2" ry="2" />
<text  x="1020.20" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.42%)</title><rect x="44.6" y="277" width="4.9" height="15.0" fill="rgb(209,161,29)" rx="2" ry="2" />
<text  x="47.56" y="287.5" ></text>
</g>
<g >
<title>all (239 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(206,88,29)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="74.2" y="325" width="4.9" height="15.0" fill="rgb(214,45,33)" rx="2" ry="2" />
<text  x="77.18" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (1 samples, 0.42%)</title><rect x="1180.1" y="293" width="5.0" height="15.0" fill="rgb(224,180,34)" rx="2" ry="2" />
<text  x="1183.13" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="74.2" y="357" width="4.9" height="15.0" fill="rgb(242,85,1)" rx="2" ry="2" />
<text  x="77.18" y="367.5" ></text>
</g>
<g >
<title>migration/15 (1 samples, 0.42%)</title><rect x="93.9" y="373" width="5.0" height="15.0" fill="rgb(225,185,27)" rx="2" ry="2" />
<text  x="96.93" y="383.5" ></text>
</g>
<g >
<title>cmd_record (163 samples, 68.20%)</title><rect x="227.2" y="293" width="804.8" height="15.0" fill="rgb(237,85,6)" rx="2" ry="2" />
<text  x="230.24" y="303.5" >cmd_record</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="93.9" y="261" width="5.0" height="15.0" fill="rgb(252,161,8)" rx="2" ry="2" />
<text  x="96.93" y="271.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="108.7" y="261" width="5.0" height="15.0" fill="rgb(209,119,17)" rx="2" ry="2" />
<text  x="111.74" y="271.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="93.9" y="325" width="5.0" height="15.0" fill="rgb(241,55,52)" rx="2" ry="2" />
<text  x="96.93" y="335.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="123.6" y="341" width="4.9" height="15.0" fill="rgb(232,151,24)" rx="2" ry="2" />
<text  x="126.56" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="113.7" y="357" width="4.9" height="15.0" fill="rgb(239,116,20)" rx="2" ry="2" />
<text  x="116.68" y="367.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="128.5" y="277" width="4.9" height="15.0" fill="rgb(205,68,8)" rx="2" ry="2" />
<text  x="131.49" y="287.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 2.93%)</title><rect x="19.9" y="357" width="34.5" height="15.0" fill="rgb(248,136,27)" rx="2" ry="2" />
<text  x="22.87" y="367.5" >[u..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.42%)</title><rect x="98.9" y="229" width="4.9" height="15.0" fill="rgb(219,93,45)" rx="2" ry="2" />
<text  x="101.87" y="239.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="89.0" y="277" width="4.9" height="15.0" fill="rgb(243,170,2)" rx="2" ry="2" />
<text  x="92.00" y="287.5" ></text>
</g>
<g >
<title>generic_exec_single (160 samples, 66.95%)</title><rect x="227.2" y="101" width="790.0" height="15.0" fill="rgb(233,214,10)" rx="2" ry="2" />
<text  x="230.24" y="111.5" >generic_exec_single</text>
</g>
<g >
<title>cpuidle_enter (28 samples, 11.72%)</title><rect x="1041.9" y="293" width="138.2" height="15.0" fill="rgb(212,126,30)" rx="2" ry="2" />
<text  x="1044.88" y="303.5" >cpuidle_enter</text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.42%)</title><rect x="39.6" y="197" width="5.0" height="15.0" fill="rgb(206,176,20)" rx="2" ry="2" />
<text  x="42.62" y="207.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.42%)</title><rect x="84.1" y="197" width="4.9" height="15.0" fill="rgb(228,144,49)" rx="2" ry="2" />
<text  x="87.06" y="207.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="128.5" y="293" width="4.9" height="15.0" fill="rgb(231,32,33)" rx="2" ry="2" />
<text  x="131.49" y="303.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="84.1" y="245" width="4.9" height="15.0" fill="rgb(230,42,3)" rx="2" ry="2" />
<text  x="87.06" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.42%)</title><rect x="1022.1" y="245" width="5.0" height="15.0" fill="rgb(208,9,36)" rx="2" ry="2" />
<text  x="1025.13" y="255.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="93.9" y="341" width="5.0" height="15.0" fill="rgb(246,111,51)" rx="2" ry="2" />
<text  x="96.93" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="123.6" y="357" width="4.9" height="15.0" fill="rgb(253,121,36)" rx="2" ry="2" />
<text  x="126.56" y="367.5" ></text>
</g>
<g >
<title>refresh_cpu_vm_stats (1 samples, 0.42%)</title><rect x="1185.1" y="277" width="4.9" height="15.0" fill="rgb(224,195,0)" rx="2" ry="2" />
<text  x="1188.06" y="287.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="93.9" y="277" width="5.0" height="15.0" fill="rgb(240,27,44)" rx="2" ry="2" />
<text  x="96.93" y="287.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="103.8" y="293" width="4.9" height="15.0" fill="rgb(207,69,3)" rx="2" ry="2" />
<text  x="106.81" y="303.5" ></text>
</g>
<g >
<title>migration/16 (1 samples, 0.42%)</title><rect x="98.9" y="373" width="4.9" height="15.0" fill="rgb(251,16,41)" rx="2" ry="2" />
<text  x="101.87" y="383.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.42%)</title><rect x="113.7" y="261" width="4.9" height="15.0" fill="rgb(208,55,7)" rx="2" ry="2" />
<text  x="116.68" y="271.5" ></text>
</g>
<g >
<title>dev_vprintk_emit (1 samples, 0.42%)</title><rect x="10.0" y="229" width="4.9" height="15.0" fill="rgb(213,150,33)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.42%)</title><rect x="39.6" y="133" width="5.0" height="15.0" fill="rgb(210,28,32)" rx="2" ry="2" />
<text  x="42.62" y="143.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="118.6" y="277" width="5.0" height="15.0" fill="rgb(253,10,44)" rx="2" ry="2" />
<text  x="121.62" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="79.1" y="357" width="5.0" height="15.0" fill="rgb(242,37,35)" rx="2" ry="2" />
<text  x="82.12" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="1032.0" y="357" width="4.9" height="15.0" fill="rgb(224,75,51)" rx="2" ry="2" />
<text  x="1035.01" y="367.5" ></text>
</g>
<g >
<title>smp_call_function_single (160 samples, 66.95%)</title><rect x="227.2" y="117" width="790.0" height="15.0" fill="rgb(233,171,18)" rx="2" ry="2" />
<text  x="230.24" y="127.5" >smp_call_function_single</text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="113.7" y="341" width="4.9" height="15.0" fill="rgb(225,178,50)" rx="2" ry="2" />
<text  x="116.68" y="351.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.42%)</title><rect x="39.6" y="117" width="5.0" height="15.0" fill="rgb(226,67,42)" rx="2" ry="2" />
<text  x="42.62" y="127.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="123.6" y="293" width="4.9" height="15.0" fill="rgb(205,122,14)" rx="2" ry="2" />
<text  x="126.56" y="303.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.42%)</title><rect x="74.2" y="245" width="4.9" height="15.0" fill="rgb(249,208,46)" rx="2" ry="2" />
<text  x="77.18" y="255.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="89.0" y="213" width="4.9" height="15.0" fill="rgb(220,219,34)" rx="2" ry="2" />
<text  x="92.00" y="223.5" ></text>
</g>
<g >
<title>rcu_preempt (1 samples, 0.42%)</title><rect x="1032.0" y="373" width="4.9" height="15.0" fill="rgb(225,217,21)" rx="2" ry="2" />
<text  x="1035.01" y="383.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="133.4" y="309" width="5.0" height="15.0" fill="rgb(239,62,20)" rx="2" ry="2" />
<text  x="136.43" y="319.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="89.0" y="325" width="4.9" height="15.0" fill="rgb(222,32,33)" rx="2" ry="2" />
<text  x="92.00" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="89.0" y="357" width="4.9" height="15.0" fill="rgb(251,204,6)" rx="2" ry="2" />
<text  x="92.00" y="367.5" ></text>
</g>
<g >
<title>uart_console_write (1 samples, 0.42%)</title><rect x="10.0" y="165" width="4.9" height="15.0" fill="rgb(217,82,14)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>[mysqld] (1 samples, 0.42%)</title><rect x="163.1" y="341" width="4.9" height="15.0" fill="rgb(232,123,1)" rx="2" ry="2" />
<text  x="166.05" y="351.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.42%)</title><rect x="103.8" y="213" width="4.9" height="15.0" fill="rgb(253,69,53)" rx="2" ry="2" />
<text  x="106.81" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (1 samples, 0.42%)</title><rect x="39.6" y="293" width="5.0" height="15.0" fill="rgb(236,13,47)" rx="2" ry="2" />
<text  x="42.62" y="303.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.42%)</title><rect x="34.7" y="245" width="4.9" height="15.0" fill="rgb(218,31,25)" rx="2" ry="2" />
<text  x="37.69" y="255.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="108.7" y="293" width="5.0" height="15.0" fill="rgb(222,12,9)" rx="2" ry="2" />
<text  x="111.74" y="303.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="10.0" y="341" width="4.9" height="15.0" fill="rgb(221,140,5)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.42%)</title><rect x="118.6" y="245" width="5.0" height="15.0" fill="rgb(212,160,49)" rx="2" ry="2" />
<text  x="121.62" y="255.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (1 samples, 0.42%)</title><rect x="34.7" y="213" width="4.9" height="15.0" fill="rgb(251,85,39)" rx="2" ry="2" />
<text  x="37.69" y="223.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="98.9" y="261" width="4.9" height="15.0" fill="rgb(221,84,15)" rx="2" ry="2" />
<text  x="101.87" y="271.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="108.7" y="341" width="5.0" height="15.0" fill="rgb(239,169,54)" rx="2" ry="2" />
<text  x="111.74" y="351.5" ></text>
</g>
<g >
<title>__lock_task_sighand (1 samples, 0.42%)</title><rect x="1027.1" y="133" width="4.9" height="15.0" fill="rgb(249,85,9)" rx="2" ry="2" />
<text  x="1030.07" y="143.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="79.1" y="245" width="5.0" height="15.0" fill="rgb(211,20,13)" rx="2" ry="2" />
<text  x="82.12" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.42%)</title><rect x="1027.1" y="117" width="4.9" height="15.0" fill="rgb(207,42,15)" rx="2" ry="2" />
<text  x="1030.07" y="127.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.42%)</title><rect x="98.9" y="245" width="4.9" height="15.0" fill="rgb(243,49,48)" rx="2" ry="2" />
<text  x="101.87" y="255.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="123.6" y="277" width="4.9" height="15.0" fill="rgb(206,120,27)" rx="2" ry="2" />
<text  x="126.56" y="287.5" ></text>
</g>
<g >
<title>LEX::create_item_ident_field (1 samples, 0.42%)</title><rect x="153.2" y="357" width="4.9" height="15.0" fill="rgb(210,185,11)" rx="2" ry="2" />
<text  x="156.18" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.42%)</title><rect x="84.1" y="309" width="4.9" height="15.0" fill="rgb(239,153,25)" rx="2" ry="2" />
<text  x="87.06" y="319.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="118.6" y="357" width="5.0" height="15.0" fill="rgb(221,166,17)" rx="2" ry="2" />
<text  x="121.62" y="367.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.42%)</title><rect x="133.4" y="293" width="5.0" height="15.0" fill="rgb(236,210,41)" rx="2" ry="2" />
<text  x="136.43" y="303.5" ></text>
</g>
<g >
<title>perf_ioctl (160 samples, 66.95%)</title><rect x="227.2" y="181" width="790.0" height="15.0" fill="rgb(235,32,33)" rx="2" ry="2" />
<text  x="230.24" y="191.5" >perf_ioctl</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="128.5" y="325" width="4.9" height="15.0" fill="rgb(225,157,15)" rx="2" ry="2" />
<text  x="131.49" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="84.1" y="261" width="4.9" height="15.0" fill="rgb(213,38,33)" rx="2" ry="2" />
<text  x="87.06" y="271.5" ></text>
</g>
<g >
<title>mysql_common::value::read_text_value (1 samples, 0.42%)</title><rect x="49.5" y="341" width="4.9" height="15.0" fill="rgb(233,88,45)" rx="2" ry="2" />
<text  x="52.50" y="351.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.42%)</title><rect x="74.2" y="293" width="4.9" height="15.0" fill="rgb(242,52,12)" rx="2" ry="2" />
<text  x="77.18" y="303.5" ></text>
</g>
<g >
<title>migration/18 (1 samples, 0.42%)</title><rect x="103.8" y="373" width="4.9" height="15.0" fill="rgb(213,94,7)" rx="2" ry="2" />
<text  x="106.81" y="383.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.42%)</title><rect x="1032.0" y="341" width="4.9" height="15.0" fill="rgb(223,94,17)" rx="2" ry="2" />
<text  x="1035.01" y="351.5" ></text>
</g>
<g >
<title>st_join_table::preread_init (1 samples, 0.42%)</title><rect x="222.3" y="357" width="4.9" height="15.0" fill="rgb(241,94,6)" rx="2" ry="2" />
<text  x="225.30" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.42%)</title><rect x="44.6" y="293" width="4.9" height="15.0" fill="rgb(241,28,36)" rx="2" ry="2" />
<text  x="47.56" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.42%)</title><rect x="1022.1" y="229" width="5.0" height="15.0" fill="rgb(253,66,18)" rx="2" ry="2" />
<text  x="1025.13" y="239.5" ></text>
</g>
<g >
<title>migration/10 (1 samples, 0.42%)</title><rect x="79.1" y="373" width="5.0" height="15.0" fill="rgb(236,126,54)" rx="2" ry="2" />
<text  x="82.12" y="383.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (1 samples, 0.42%)</title><rect x="1027.1" y="277" width="4.9" height="15.0" fill="rgb(243,110,15)" rx="2" ry="2" />
<text  x="1030.07" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.42%)</title><rect x="1041.9" y="245" width="4.9" height="15.0" fill="rgb(209,137,30)" rx="2" ry="2" />
<text  x="1044.88" y="255.5" ></text>
</g>
<g >
<title>_perf_ioctl (160 samples, 66.95%)</title><rect x="227.2" y="165" width="790.0" height="15.0" fill="rgb(208,38,15)" rx="2" ry="2" />
<text  x="230.24" y="175.5" >_perf_ioctl</text>
</g>
<g >
<title>update_process_times (1 samples, 0.42%)</title><rect x="1041.9" y="165" width="4.9" height="15.0" fill="rgb(244,181,11)" rx="2" ry="2" />
<text  x="1044.88" y="175.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (160 samples, 66.95%)</title><rect x="227.2" y="149" width="790.0" height="15.0" fill="rgb(219,173,36)" rx="2" ry="2" />
<text  x="230.24" y="159.5" >perf_event_for_each_child</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="123.6" y="325" width="4.9" height="15.0" fill="rgb(220,62,50)" rx="2" ry="2" />
<text  x="126.56" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.42%)</title><rect x="133.4" y="357" width="5.0" height="15.0" fill="rgb(238,15,3)" rx="2" ry="2" />
<text  x="136.43" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.42%)</title><rect x="133.4" y="261" width="5.0" height="15.0" fill="rgb(207,176,45)" rx="2" ry="2" />
<text  x="136.43" y="271.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.42%)</title><rect x="108.7" y="325" width="5.0" height="15.0" fill="rgb(231,185,40)" rx="2" ry="2" />
<text  x="111.74" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31 samples, 12.97%)</title><rect x="1036.9" y="325" width="153.1" height="15.0" fill="rgb(210,122,51)" rx="2" ry="2" />
<text  x="1039.95" y="335.5" >cpu_startup_entry</text>
</g>
<g >
<title>proc_single_show (1 samples, 0.42%)</title><rect x="1027.1" y="165" width="4.9" height="15.0" fill="rgb(238,23,54)" rx="2" ry="2" />
<text  x="1030.07" y="175.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 0.42%)</title><rect x="1032.0" y="325" width="4.9" height="15.0" fill="rgb(239,187,31)" rx="2" ry="2" />
<text  x="1035.01" y="335.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.42%)</title><rect x="103.8" y="277" width="4.9" height="15.0" fill="rgb(207,196,54)" rx="2" ry="2" />
<text  x="106.81" y="287.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.42%)</title><rect x="1185.1" y="245" width="4.9" height="15.0" fill="rgb(246,168,14)" rx="2" ry="2" />
<text  x="1188.06" y="255.5" ></text>
</g>
</g>
</svg>
