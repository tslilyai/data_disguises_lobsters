<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>__GI___ioctl (161 samples, 53.67%)</title><rect x="399.4" y="517" width="633.3" height="15.0" fill="rgb(220,172,31)" rx="2" ry="2" />
<text  x="402.40" y="527.5" >__GI___ioctl</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="226.3" y="517" width="4.0" height="15.0" fill="rgb(238,5,36)" rx="2" ry="2" />
<text  x="229.33" y="527.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="249.9" y="469" width="4.0" height="15.0" fill="rgb(244,173,48)" rx="2" ry="2" />
<text  x="252.93" y="479.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (5 samples, 1.67%)</title><rect x="124.1" y="485" width="19.6" height="15.0" fill="rgb(217,152,38)" rx="2" ry="2" />
<text  x="127.07" y="495.5" ></text>
</g>
<g >
<title>std::io::error::Error::_new (1 samples, 0.33%)</title><rect x="210.6" y="613" width="3.9" height="15.0" fill="rgb(228,48,42)" rx="2" ry="2" />
<text  x="213.60" y="623.5" ></text>
</g>
<g >
<title>malloc (6 samples, 2.00%)</title><rect x="175.2" y="613" width="23.6" height="15.0" fill="rgb(254,193,46)" rx="2" ry="2" />
<text  x="178.20" y="623.5" >m..</text>
</g>
<g >
<title>search_binary_handler.part.0 (1 samples, 0.33%)</title><rect x="112.3" y="517" width="3.9" height="15.0" fill="rgb(212,47,22)" rx="2" ry="2" />
<text  x="115.27" y="527.5" ></text>
</g>
<g >
<title>Arg_comparator::compare_int_signed (1 samples, 0.33%)</title><rect x="269.6" y="613" width="3.9" height="15.0" fill="rgb(246,27,27)" rx="2" ry="2" />
<text  x="272.60" y="623.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="238.1" y="597" width="4.0" height="15.0" fill="rgb(247,85,2)" rx="2" ry="2" />
<text  x="241.13" y="607.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.67%)</title><rect x="375.8" y="325" width="7.9" height="15.0" fill="rgb(219,106,54)" rx="2" ry="2" />
<text  x="378.80" y="335.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.33%)</title><rect x="147.7" y="485" width="3.9" height="15.0" fill="rgb(212,212,14)" rx="2" ry="2" />
<text  x="150.67" y="495.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (160 samples, 53.33%)</title><rect x="399.4" y="309" width="629.3" height="15.0" fill="rgb(208,4,44)" rx="2" ry="2" />
<text  x="402.40" y="319.5" >__intel_pmu_enable_all.constprop.0</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="1064.1" y="613" width="4.0" height="15.0" fill="rgb(230,50,29)" rx="2" ry="2" />
<text  x="1067.13" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 2.33%)</title><rect x="124.1" y="581" width="27.5" height="15.0" fill="rgb(208,143,35)" rx="2" ry="2" />
<text  x="127.07" y="591.5" >d..</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="253.9" y="613" width="3.9" height="15.0" fill="rgb(235,180,13)" rx="2" ry="2" />
<text  x="256.87" y="623.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.33%)</title><rect x="379.7" y="181" width="4.0" height="15.0" fill="rgb(225,132,6)" rx="2" ry="2" />
<text  x="382.73" y="191.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="246.0" y="533" width="3.9" height="15.0" fill="rgb(228,37,15)" rx="2" ry="2" />
<text  x="249.00" y="543.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="249.9" y="517" width="4.0" height="15.0" fill="rgb(239,204,16)" rx="2" ry="2" />
<text  x="252.93" y="527.5" ></text>
</g>
<g >
<title>do_idle (31 samples, 10.33%)</title><rect x="1068.1" y="565" width="121.9" height="15.0" fill="rgb(225,195,18)" rx="2" ry="2" />
<text  x="1071.07" y="575.5" >do_idle</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="253.9" y="517" width="3.9" height="15.0" fill="rgb(245,35,5)" rx="2" ry="2" />
<text  x="256.87" y="527.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.33%)</title><rect x="131.9" y="85" width="4.0" height="15.0" fill="rgb(205,155,47)" rx="2" ry="2" />
<text  x="134.93" y="95.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="234.2" y="501" width="3.9" height="15.0" fill="rgb(225,210,5)" rx="2" ry="2" />
<text  x="237.20" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (160 samples, 53.33%)</title><rect x="399.4" y="485" width="629.3" height="15.0" fill="rgb(232,102,5)" rx="2" ry="2" />
<text  x="402.40" y="495.5" >do_syscall_64</text>
</g>
<g >
<title>uclamp_rq_inc_id (1 samples, 0.33%)</title><rect x="135.9" y="69" width="3.9" height="15.0" fill="rgb(208,189,40)" rx="2" ry="2" />
<text  x="138.87" y="79.5" ></text>
</g>
<g >
<title>st_select_lex::find_table_def_in_with_clauses (1 samples, 0.33%)</title><rect x="364.0" y="581" width="3.9" height="15.0" fill="rgb(250,177,41)" rx="2" ry="2" />
<text  x="367.00" y="591.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="253.9" y="565" width="3.9" height="15.0" fill="rgb(221,140,49)" rx="2" ry="2" />
<text  x="256.87" y="575.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="238.1" y="501" width="4.0" height="15.0" fill="rgb(219,26,46)" rx="2" ry="2" />
<text  x="241.13" y="511.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="238.1" y="469" width="4.0" height="15.0" fill="rgb(222,160,26)" rx="2" ry="2" />
<text  x="241.13" y="479.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.33%)</title><rect x="214.5" y="517" width="4.0" height="15.0" fill="rgb(242,72,6)" rx="2" ry="2" />
<text  x="217.53" y="527.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.33%)</title><rect x="383.7" y="613" width="3.9" height="15.0" fill="rgb(248,143,38)" rx="2" ry="2" />
<text  x="386.67" y="623.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1 samples, 0.33%)</title><rect x="116.2" y="485" width="3.9" height="15.0" fill="rgb(228,224,32)" rx="2" ry="2" />
<text  x="119.20" y="495.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="214.5" y="597" width="4.0" height="15.0" fill="rgb(245,45,7)" rx="2" ry="2" />
<text  x="217.53" y="607.5" ></text>
</g>
<g >
<title>Arg_comparator::compare_int_signed (1 samples, 0.33%)</title><rect x="305.0" y="549" width="3.9" height="15.0" fill="rgb(206,139,30)" rx="2" ry="2" />
<text  x="308.00" y="559.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.33%)</title><rect x="391.5" y="517" width="4.0" height="15.0" fill="rgb(223,168,8)" rx="2" ry="2" />
<text  x="394.53" y="527.5" ></text>
</g>
<g >
<title>migration/18 (1 samples, 0.33%)</title><rect x="238.1" y="629" width="4.0" height="15.0" fill="rgb(223,150,19)" rx="2" ry="2" />
<text  x="241.13" y="639.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="257.8" y="549" width="3.9" height="15.0" fill="rgb(247,177,25)" rx="2" ry="2" />
<text  x="260.80" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.33%)</title><rect x="289.3" y="581" width="3.9" height="15.0" fill="rgb(233,84,32)" rx="2" ry="2" />
<text  x="292.27" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (1 samples, 0.33%)</title><rect x="1064.1" y="565" width="4.0" height="15.0" fill="rgb(208,173,0)" rx="2" ry="2" />
<text  x="1067.13" y="575.5" ></text>
</g>
<g >
<title>wait_woken (1 samples, 0.33%)</title><rect x="120.1" y="485" width="4.0" height="15.0" fill="rgb(232,15,18)" rx="2" ry="2" />
<text  x="123.13" y="495.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.33%)</title><rect x="234.2" y="437" width="3.9" height="15.0" fill="rgb(227,120,20)" rx="2" ry="2" />
<text  x="237.20" y="447.5" ></text>
</g>
<g >
<title>__do_softirq (5 samples, 1.67%)</title><rect x="124.1" y="341" width="19.6" height="15.0" fill="rgb(226,48,37)" rx="2" ry="2" />
<text  x="127.07" y="351.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="253.9" y="597" width="3.9" height="15.0" fill="rgb(227,171,8)" rx="2" ry="2" />
<text  x="256.87" y="607.5" ></text>
</g>
<g >
<title>ip_output (5 samples, 1.67%)</title><rect x="124.1" y="421" width="19.6" height="15.0" fill="rgb(236,132,4)" rx="2" ry="2" />
<text  x="127.07" y="431.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.33%)</title><rect x="120.1" y="405" width="4.0" height="15.0" fill="rgb(241,218,41)" rx="2" ry="2" />
<text  x="123.13" y="415.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.33%)</title><rect x="21.8" y="597" width="3.9" height="15.0" fill="rgb(215,93,3)" rx="2" ry="2" />
<text  x="24.80" y="607.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 8.33%)</title><rect x="277.5" y="613" width="98.3" height="15.0" fill="rgb(234,119,39)" rx="2" ry="2" />
<text  x="280.47" y="623.5" >[unknown]</text>
</g>
<g >
<title>__tcp_push_pending_frames (2 samples, 0.67%)</title><rect x="375.8" y="485" width="7.9" height="15.0" fill="rgb(221,150,36)" rx="2" ry="2" />
<text  x="378.80" y="495.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.33%)</title><rect x="1060.2" y="597" width="3.9" height="15.0" fill="rgb(244,58,44)" rx="2" ry="2" />
<text  x="1063.20" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (2 samples, 0.67%)</title><rect x="116.2" y="565" width="7.9" height="15.0" fill="rgb(216,24,41)" rx="2" ry="2" />
<text  x="119.20" y="575.5" ></text>
</g>
<g >
<title>get_unmapped_area (1 samples, 0.33%)</title><rect x="112.3" y="437" width="3.9" height="15.0" fill="rgb(228,85,52)" rx="2" ry="2" />
<text  x="115.27" y="447.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="1182.1" y="533" width="4.0" height="15.0" fill="rgb(219,118,47)" rx="2" ry="2" />
<text  x="1185.13" y="543.5" ></text>
</g>
<g >
<title>alloc::string::String::push (2 samples, 0.67%)</title><rect x="155.5" y="613" width="7.9" height="15.0" fill="rgb(251,13,47)" rx="2" ry="2" />
<text  x="158.53" y="623.5" ></text>
</g>
<g >
<title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.33%)</title><rect x="108.3" y="597" width="4.0" height="15.0" fill="rgb(215,56,3)" rx="2" ry="2" />
<text  x="111.33" y="607.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.67%)</title><rect x="375.8" y="405" width="7.9" height="15.0" fill="rgb(251,172,3)" rx="2" ry="2" />
<text  x="378.80" y="415.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 1.67%)</title><rect x="124.1" y="325" width="19.6" height="15.0" fill="rgb(239,150,48)" rx="2" ry="2" />
<text  x="127.07" y="335.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.33%)</title><rect x="265.7" y="613" width="3.9" height="15.0" fill="rgb(222,55,31)" rx="2" ry="2" />
<text  x="268.67" y="623.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (5 samples, 1.67%)</title><rect x="124.1" y="437" width="19.6" height="15.0" fill="rgb(246,151,17)" rx="2" ry="2" />
<text  x="127.07" y="447.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.67%)</title><rect x="375.8" y="389" width="7.9" height="15.0" fill="rgb(226,92,45)" rx="2" ry="2" />
<text  x="378.80" y="399.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="242.1" y="533" width="3.9" height="15.0" fill="rgb(251,160,5)" rx="2" ry="2" />
<text  x="245.07" y="543.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.33%)</title><rect x="1174.3" y="501" width="3.9" height="15.0" fill="rgb(230,55,43)" rx="2" ry="2" />
<text  x="1177.27" y="511.5" ></text>
</g>
<g >
<title>__sys_sendto (7 samples, 2.33%)</title><rect x="124.1" y="549" width="27.5" height="15.0" fill="rgb(205,97,8)" rx="2" ry="2" />
<text  x="127.07" y="559.5" >_..</text>
</g>
<g >
<title>best_access_path (1 samples, 0.33%)</title><rect x="387.6" y="613" width="3.9" height="15.0" fill="rgb(231,68,35)" rx="2" ry="2" />
<text  x="390.60" y="623.5" ></text>
</g>
<g >
<title>migration/7 (1 samples, 0.33%)</title><rect x="261.7" y="629" width="4.0" height="15.0" fill="rgb(253,181,44)" rx="2" ry="2" />
<text  x="264.73" y="639.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="230.3" y="613" width="3.9" height="15.0" fill="rgb(238,27,17)" rx="2" ry="2" />
<text  x="233.27" y="623.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.67%)</title><rect x="135.9" y="101" width="7.8" height="15.0" fill="rgb(210,108,37)" rx="2" ry="2" />
<text  x="138.87" y="111.5" ></text>
</g>
<g >
<title>Lex_input_stream::lex_token (1 samples, 0.33%)</title><rect x="285.3" y="597" width="4.0" height="15.0" fill="rgb(247,94,32)" rx="2" ry="2" />
<text  x="288.33" y="607.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="249.9" y="613" width="4.0" height="15.0" fill="rgb(228,77,53)" rx="2" ry="2" />
<text  x="252.93" y="623.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.33%)</title><rect x="139.8" y="85" width="3.9" height="15.0" fill="rgb(207,222,5)" rx="2" ry="2" />
<text  x="142.80" y="95.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (26 samples, 8.67%)</title><rect x="1068.1" y="533" width="102.2" height="15.0" fill="rgb(227,37,25)" rx="2" ry="2" />
<text  x="1071.07" y="543.5" >cpuidle_ente..</text>
</g>
<g >
<title>__libc_send (2 samples, 0.67%)</title><rect x="375.8" y="613" width="7.9" height="15.0" fill="rgb(240,171,47)" rx="2" ry="2" />
<text  x="378.80" y="623.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="257.8" y="501" width="3.9" height="15.0" fill="rgb(226,34,28)" rx="2" ry="2" />
<text  x="260.80" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (160 samples, 53.33%)</title><rect x="399.4" y="469" width="629.3" height="15.0" fill="rgb(244,181,13)" rx="2" ry="2" />
<text  x="402.40" y="479.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>tcp_ack (1 samples, 0.33%)</title><rect x="379.7" y="165" width="4.0" height="15.0" fill="rgb(216,176,4)" rx="2" ry="2" />
<text  x="382.73" y="175.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.33%)</title><rect x="151.6" y="613" width="3.9" height="15.0" fill="rgb(209,179,47)" rx="2" ry="2" />
<text  x="154.60" y="623.5" ></text>
</g>
<g >
<title>ip_rcv (4 samples, 1.33%)</title><rect x="128.0" y="277" width="15.7" height="15.0" fill="rgb(253,202,31)" rx="2" ry="2" />
<text  x="131.00" y="287.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.33%)</title><rect x="391.5" y="565" width="4.0" height="15.0" fill="rgb(206,150,24)" rx="2" ry="2" />
<text  x="394.53" y="575.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 3.33%)</title><rect x="33.6" y="597" width="39.3" height="15.0" fill="rgb(245,146,12)" rx="2" ry="2" />
<text  x="36.60" y="607.5" >[un..</text>
</g>
<g >
<title>perf (169 samples, 56.33%)</title><rect x="399.4" y="629" width="664.7" height="15.0" fill="rgb(206,193,42)" rx="2" ry="2" />
<text  x="402.40" y="639.5" >perf</text>
</g>
<g >
<title>sock_sendmsg (7 samples, 2.33%)</title><rect x="124.1" y="533" width="27.5" height="15.0" fill="rgb(231,35,4)" rx="2" ry="2" />
<text  x="127.07" y="543.5" >s..</text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="242.1" y="597" width="3.9" height="15.0" fill="rgb(233,73,2)" rx="2" ry="2" />
<text  x="245.07" y="607.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (1 samples, 0.33%)</title><rect x="1068.1" y="517" width="3.9" height="15.0" fill="rgb(231,85,21)" rx="2" ry="2" />
<text  x="1071.07" y="527.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2 samples, 0.67%)</title><rect x="375.8" y="469" width="7.9" height="15.0" fill="rgb(244,225,30)" rx="2" ry="2" />
<text  x="378.80" y="479.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.33%)</title><rect x="379.7" y="197" width="4.0" height="15.0" fill="rgb(242,192,47)" rx="2" ry="2" />
<text  x="382.73" y="207.5" ></text>
</g>
<g >
<title>find_field_in_tables (1 samples, 0.33%)</title><rect x="277.5" y="565" width="3.9" height="15.0" fill="rgb(209,84,15)" rx="2" ry="2" />
<text  x="280.47" y="575.5" ></text>
</g>
<g >
<title>[mysqld] (1 samples, 0.33%)</title><rect x="301.1" y="565" width="3.9" height="15.0" fill="rgb(240,37,12)" rx="2" ry="2" />
<text  x="304.07" y="575.5" ></text>
</g>
<g >
<title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.33%)</title><rect x="202.7" y="613" width="4.0" height="15.0" fill="rgb(247,205,3)" rx="2" ry="2" />
<text  x="205.73" y="623.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 6.00%)</title><rect x="297.1" y="597" width="70.8" height="15.0" fill="rgb(214,103,13)" rx="2" ry="2" />
<text  x="300.13" y="607.5" >[unknown]</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="234.2" y="485" width="3.9" height="15.0" fill="rgb(230,164,44)" rx="2" ry="2" />
<text  x="237.20" y="495.5" ></text>
</g>
<g >
<title>mysqld (33 samples, 11.00%)</title><rect x="269.6" y="629" width="129.8" height="15.0" fill="rgb(211,130,14)" rx="2" ry="2" />
<text  x="272.60" y="639.5" >mysqld</text>
</g>
<g >
<title>mysql_common::value::read_text_value (1 samples, 0.33%)</title><rect x="96.5" y="597" width="4.0" height="15.0" fill="rgb(221,178,22)" rx="2" ry="2" />
<text  x="99.53" y="607.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="253.9" y="501" width="3.9" height="15.0" fill="rgb(210,190,3)" rx="2" ry="2" />
<text  x="256.87" y="511.5" ></text>
</g>
<g >
<title>ixgbe_update_stats (1 samples, 0.33%)</title><rect x="10.0" y="533" width="3.9" height="15.0" fill="rgb(207,205,14)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="222.4" y="517" width="3.9" height="15.0" fill="rgb(219,75,0)" rx="2" ry="2" />
<text  x="225.40" y="527.5" ></text>
</g>
<g >
<title>rcu_preempt (1 samples, 0.33%)</title><rect x="1064.1" y="629" width="4.0" height="15.0" fill="rgb(205,97,30)" rx="2" ry="2" />
<text  x="1067.13" y="639.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 5.00%)</title><rect x="301.1" y="581" width="59.0" height="15.0" fill="rgb(247,71,23)" rx="2" ry="2" />
<text  x="304.07" y="591.5" >[unkno..</text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="234.2" y="597" width="3.9" height="15.0" fill="rgb(243,110,16)" rx="2" ry="2" />
<text  x="237.20" y="607.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="238.1" y="613" width="4.0" height="15.0" fill="rgb(210,134,26)" rx="2" ry="2" />
<text  x="241.13" y="623.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="218.5" y="485" width="3.9" height="15.0" fill="rgb(244,152,46)" rx="2" ry="2" />
<text  x="221.47" y="495.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.33%)</title><rect x="84.7" y="597" width="4.0" height="15.0" fill="rgb(230,168,45)" rx="2" ry="2" />
<text  x="87.73" y="607.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (7 samples, 2.33%)</title><rect x="1032.7" y="517" width="27.5" height="15.0" fill="rgb(221,212,42)" rx="2" ry="2" />
<text  x="1035.67" y="527.5" >s..</text>
</g>
<g >
<title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.33%)</title><rect x="17.9" y="613" width="3.9" height="15.0" fill="rgb(206,57,13)" rx="2" ry="2" />
<text  x="20.87" y="623.5" ></text>
</g>
<g >
<title>all (300 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(221,167,24)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="234.2" y="549" width="3.9" height="15.0" fill="rgb(247,176,9)" rx="2" ry="2" />
<text  x="237.20" y="559.5" ></text>
</g>
<g >
<title>_perf_ioctl (160 samples, 53.33%)</title><rect x="399.4" y="421" width="629.3" height="15.0" fill="rgb(219,188,1)" rx="2" ry="2" />
<text  x="402.40" y="431.5" >_perf_ioctl</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="242.1" y="469" width="3.9" height="15.0" fill="rgb(222,105,46)" rx="2" ry="2" />
<text  x="245.07" y="479.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="261.7" y="469" width="4.0" height="15.0" fill="rgb(205,177,18)" rx="2" ry="2" />
<text  x="264.73" y="479.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (4 samples, 1.33%)</title><rect x="128.0" y="293" width="15.7" height="15.0" fill="rgb(229,103,44)" rx="2" ry="2" />
<text  x="131.00" y="303.5" ></text>
</g>
<g >
<title>enqueue_task (2 samples, 0.67%)</title><rect x="1052.3" y="357" width="7.9" height="15.0" fill="rgb(218,117,13)" rx="2" ry="2" />
<text  x="1055.33" y="367.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.33%)</title><rect x="226.3" y="453" width="4.0" height="15.0" fill="rgb(212,7,1)" rx="2" ry="2" />
<text  x="229.33" y="463.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.33%)</title><rect x="238.1" y="453" width="4.0" height="15.0" fill="rgb(250,227,13)" rx="2" ry="2" />
<text  x="241.13" y="463.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4 samples, 1.33%)</title><rect x="128.0" y="197" width="15.7" height="15.0" fill="rgb(238,180,26)" rx="2" ry="2" />
<text  x="131.00" y="207.5" ></text>
</g>
<g >
<title>cmd_record (168 samples, 56.00%)</title><rect x="399.4" y="549" width="660.8" height="15.0" fill="rgb(220,109,17)" rx="2" ry="2" />
<text  x="402.40" y="559.5" >cmd_record</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="218.5" y="613" width="3.9" height="15.0" fill="rgb(221,28,25)" rx="2" ry="2" />
<text  x="221.47" y="623.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (5 samples, 1.67%)</title><rect x="124.1" y="453" width="19.6" height="15.0" fill="rgb(216,81,46)" rx="2" ry="2" />
<text  x="127.07" y="463.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="1064.1" y="597" width="4.0" height="15.0" fill="rgb(218,30,44)" rx="2" ry="2" />
<text  x="1067.13" y="607.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.33%)</title><rect x="1182.1" y="501" width="4.0" height="15.0" fill="rgb(249,51,8)" rx="2" ry="2" />
<text  x="1185.13" y="511.5" ></text>
</g>
<g >
<title>__rust_alloc (1 samples, 0.33%)</title><rect x="49.3" y="581" width="4.0" height="15.0" fill="rgb(232,25,12)" rx="2" ry="2" />
<text  x="52.33" y="591.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="230.3" y="597" width="3.9" height="15.0" fill="rgb(234,33,52)" rx="2" ry="2" />
<text  x="233.27" y="607.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (5 samples, 1.67%)</title><rect x="124.1" y="389" width="19.6" height="15.0" fill="rgb(254,86,40)" rx="2" ry="2" />
<text  x="127.07" y="399.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.33%)</title><rect x="163.4" y="613" width="3.9" height="15.0" fill="rgb(246,149,29)" rx="2" ry="2" />
<text  x="166.40" y="623.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2 samples, 0.67%)</title><rect x="375.8" y="501" width="7.9" height="15.0" fill="rgb(213,206,29)" rx="2" ry="2" />
<text  x="378.80" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.33%)</title><rect x="1174.3" y="517" width="3.9" height="15.0" fill="rgb(248,5,0)" rx="2" ry="2" />
<text  x="1177.27" y="527.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.33%)</title><rect x="242.1" y="453" width="3.9" height="15.0" fill="rgb(220,72,35)" rx="2" ry="2" />
<text  x="245.07" y="463.5" ></text>
</g>
<g >
<title>JOIN::optimize (1 samples, 0.33%)</title><rect x="281.4" y="597" width="3.9" height="15.0" fill="rgb(228,102,38)" rx="2" ry="2" />
<text  x="284.40" y="607.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="222.4" y="501" width="3.9" height="15.0" fill="rgb(240,101,44)" rx="2" ry="2" />
<text  x="225.40" y="511.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.33%)</title><rect x="53.3" y="581" width="3.9" height="15.0" fill="rgb(218,25,26)" rx="2" ry="2" />
<text  x="56.27" y="591.5" ></text>
</g>
<g >
<title>elf_map (1 samples, 0.33%)</title><rect x="112.3" y="485" width="3.9" height="15.0" fill="rgb(242,126,51)" rx="2" ry="2" />
<text  x="115.27" y="495.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="253.9" y="485" width="3.9" height="15.0" fill="rgb(254,111,41)" rx="2" ry="2" />
<text  x="256.87" y="495.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (160 samples, 53.33%)</title><rect x="399.4" y="405" width="629.3" height="15.0" fill="rgb(224,22,46)" rx="2" ry="2" />
<text  x="402.40" y="415.5" >perf_event_for_each_child</text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (7 samples, 2.33%)</title><rect x="1032.7" y="469" width="27.5" height="15.0" fill="rgb(249,227,3)" rx="2" ry="2" />
<text  x="1035.67" y="479.5" >_..</text>
</g>
<g >
<title>migration/6 (1 samples, 0.33%)</title><rect x="257.8" y="629" width="3.9" height="15.0" fill="rgb(243,120,2)" rx="2" ry="2" />
<text  x="260.80" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.33%)</title><rect x="277.5" y="581" width="3.9" height="15.0" fill="rgb(240,58,1)" rx="2" ry="2" />
<text  x="280.47" y="591.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="257.8" y="613" width="3.9" height="15.0" fill="rgb(208,133,33)" rx="2" ry="2" />
<text  x="260.80" y="623.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="261.7" y="581" width="4.0" height="15.0" fill="rgb(246,86,42)" rx="2" ry="2" />
<text  x="264.73" y="591.5" ></text>
</g>
<g >
<title>fdatasync (1 samples, 0.33%)</title><rect x="391.5" y="613" width="4.0" height="15.0" fill="rgb(224,109,4)" rx="2" ry="2" />
<text  x="394.53" y="623.5" ></text>
</g>
<g >
<title>migration/10 (1 samples, 0.33%)</title><rect x="218.5" y="629" width="3.9" height="15.0" fill="rgb(224,162,46)" rx="2" ry="2" />
<text  x="221.47" y="639.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="218.5" y="565" width="3.9" height="15.0" fill="rgb(214,65,12)" rx="2" ry="2" />
<text  x="221.47" y="575.5" ></text>
</g>
<g >
<title>migration/4 (1 samples, 0.33%)</title><rect x="249.9" y="629" width="4.0" height="15.0" fill="rgb(212,185,48)" rx="2" ry="2" />
<text  x="252.93" y="639.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.33%)</title><rect x="131.9" y="101" width="4.0" height="15.0" fill="rgb(213,142,37)" rx="2" ry="2" />
<text  x="134.93" y="111.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="226.3" y="613" width="4.0" height="15.0" fill="rgb(223,12,29)" rx="2" ry="2" />
<text  x="229.33" y="623.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="249.9" y="549" width="4.0" height="15.0" fill="rgb(228,94,46)" rx="2" ry="2" />
<text  x="252.93" y="559.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="222.4" y="597" width="3.9" height="15.0" fill="rgb(246,191,3)" rx="2" ry="2" />
<text  x="225.40" y="607.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="226.3" y="501" width="4.0" height="15.0" fill="rgb(208,63,3)" rx="2" ry="2" />
<text  x="229.33" y="511.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="257.8" y="469" width="3.9" height="15.0" fill="rgb(212,134,29)" rx="2" ry="2" />
<text  x="260.80" y="479.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2 samples, 0.67%)</title><rect x="375.8" y="453" width="7.9" height="15.0" fill="rgb(221,136,3)" rx="2" ry="2" />
<text  x="378.80" y="463.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="246.0" y="597" width="3.9" height="15.0" fill="rgb(230,92,1)" rx="2" ry="2" />
<text  x="249.00" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.67%)</title><rect x="37.5" y="581" width="7.9" height="15.0" fill="rgb(233,21,47)" rx="2" ry="2" />
<text  x="40.53" y="591.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="261.7" y="517" width="4.0" height="15.0" fill="rgb(234,153,45)" rx="2" ry="2" />
<text  x="264.73" y="527.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.33%)</title><rect x="1182.1" y="549" width="4.0" height="15.0" fill="rgb(247,183,31)" rx="2" ry="2" />
<text  x="1185.13" y="559.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="261.7" y="501" width="4.0" height="15.0" fill="rgb(240,58,20)" rx="2" ry="2" />
<text  x="264.73" y="511.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.33%)</title><rect x="391.5" y="533" width="4.0" height="15.0" fill="rgb(249,48,18)" rx="2" ry="2" />
<text  x="394.53" y="543.5" ></text>
</g>
<g >
<title>wake_up_q (4 samples, 1.33%)</title><rect x="1044.5" y="389" width="15.7" height="15.0" fill="rgb(212,72,24)" rx="2" ry="2" />
<text  x="1047.47" y="399.5" ></text>
</g>
<g >
<title>do_set_cpus_allowed (2 samples, 0.67%)</title><rect x="1032.7" y="421" width="7.8" height="15.0" fill="rgb(241,208,36)" rx="2" ry="2" />
<text  x="1035.67" y="431.5" ></text>
</g>
<g >
<title>_find_next_bit.constprop.0 (1 samples, 0.33%)</title><rect x="218.5" y="437" width="3.9" height="15.0" fill="rgb(249,139,34)" rx="2" ry="2" />
<text  x="221.47" y="447.5" ></text>
</g>
<g >
<title>mysql_common::value::read_text_values (2 samples, 0.67%)</title><rect x="100.5" y="597" width="7.8" height="15.0" fill="rgb(242,33,47)" rx="2" ry="2" />
<text  x="103.47" y="607.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.67%)</title><rect x="167.3" y="613" width="7.9" height="15.0" fill="rgb(234,56,1)" rx="2" ry="2" />
<text  x="170.33" y="623.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="222.4" y="485" width="3.9" height="15.0" fill="rgb(244,133,4)" rx="2" ry="2" />
<text  x="225.40" y="495.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="120.1" y="453" width="4.0" height="15.0" fill="rgb(248,167,33)" rx="2" ry="2" />
<text  x="123.13" y="463.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="238.1" y="549" width="4.0" height="15.0" fill="rgb(239,220,36)" rx="2" ry="2" />
<text  x="241.13" y="559.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="257.8" y="581" width="3.9" height="15.0" fill="rgb(222,37,21)" rx="2" ry="2" />
<text  x="260.80" y="591.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.33%)</title><rect x="1056.3" y="309" width="3.9" height="15.0" fill="rgb(207,212,24)" rx="2" ry="2" />
<text  x="1059.27" y="319.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.33%)</title><rect x="120.1" y="469" width="4.0" height="15.0" fill="rgb(206,182,23)" rx="2" ry="2" />
<text  x="123.13" y="479.5" ></text>
</g>
<g >
<title>tcp_rcv_established (4 samples, 1.33%)</title><rect x="128.0" y="181" width="15.7" height="15.0" fill="rgb(223,96,33)" rx="2" ry="2" />
<text  x="131.00" y="191.5" ></text>
</g>
<g >
<title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.33%)</title><rect x="88.7" y="597" width="3.9" height="15.0" fill="rgb(206,96,8)" rx="2" ry="2" />
<text  x="91.67" y="607.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="218.5" y="549" width="3.9" height="15.0" fill="rgb(213,69,47)" rx="2" ry="2" />
<text  x="221.47" y="559.5" ></text>
</g>
<g >
<title>tcp_rate_gen (1 samples, 0.33%)</title><rect x="379.7" y="149" width="4.0" height="15.0" fill="rgb(221,68,21)" rx="2" ry="2" />
<text  x="382.73" y="159.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="226.3" y="549" width="4.0" height="15.0" fill="rgb(222,29,15)" rx="2" ry="2" />
<text  x="229.33" y="559.5" ></text>
</g>
<g >
<title>handler::ha_rnd_next (1 samples, 0.33%)</title><rect x="371.9" y="597" width="3.9" height="15.0" fill="rgb(246,72,39)" rx="2" ry="2" />
<text  x="374.87" y="607.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.33%)</title><rect x="112.3" y="501" width="3.9" height="15.0" fill="rgb(247,218,3)" rx="2" ry="2" />
<text  x="115.27" y="511.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="218.5" y="501" width="3.9" height="15.0" fill="rgb(232,8,38)" rx="2" ry="2" />
<text  x="221.47" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.33%)</title><rect x="383.7" y="581" width="3.9" height="15.0" fill="rgb(208,152,44)" rx="2" ry="2" />
<text  x="386.67" y="591.5" ></text>
</g>
<g >
<title>try_to_wake_up (4 samples, 1.33%)</title><rect x="1044.5" y="373" width="15.7" height="15.0" fill="rgb(240,92,45)" rx="2" ry="2" />
<text  x="1047.47" y="383.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.33%)</title><rect x="375.8" y="197" width="3.9" height="15.0" fill="rgb(208,137,41)" rx="2" ry="2" />
<text  x="378.80" y="207.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="246.0" y="581" width="3.9" height="15.0" fill="rgb(247,219,41)" rx="2" ry="2" />
<text  x="249.00" y="591.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.33%)</title><rect x="1028.7" y="485" width="4.0" height="15.0" fill="rgb(206,189,40)" rx="2" ry="2" />
<text  x="1031.73" y="495.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="242.1" y="549" width="3.9" height="15.0" fill="rgb(242,65,12)" rx="2" ry="2" />
<text  x="245.07" y="559.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="261.7" y="597" width="4.0" height="15.0" fill="rgb(240,225,38)" rx="2" ry="2" />
<text  x="264.73" y="607.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.33%)</title><rect x="112.3" y="453" width="3.9" height="15.0" fill="rgb(250,124,12)" rx="2" ry="2" />
<text  x="115.27" y="463.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="238.1" y="581" width="4.0" height="15.0" fill="rgb(249,139,19)" rx="2" ry="2" />
<text  x="241.13" y="591.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.67%)</title><rect x="1052.3" y="341" width="7.9" height="15.0" fill="rgb(216,169,9)" rx="2" ry="2" />
<text  x="1055.33" y="351.5" ></text>
</g>
<g >
<title>migration/0 (1 samples, 0.33%)</title><rect x="214.5" y="629" width="4.0" height="15.0" fill="rgb(210,144,45)" rx="2" ry="2" />
<text  x="217.53" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7 samples, 2.33%)</title><rect x="124.1" y="597" width="27.5" height="15.0" fill="rgb(247,95,8)" rx="2" ry="2" />
<text  x="127.07" y="607.5" >e..</text>
</g>
<g >
<title>__x64_sys_sendto (2 samples, 0.67%)</title><rect x="375.8" y="565" width="7.9" height="15.0" fill="rgb(239,139,33)" rx="2" ry="2" />
<text  x="378.80" y="575.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.33%)</title><rect x="128.0" y="117" width="3.9" height="15.0" fill="rgb(210,13,34)" rx="2" ry="2" />
<text  x="131.00" y="127.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.33%)</title><rect x="1170.3" y="549" width="4.0" height="15.0" fill="rgb(245,203,54)" rx="2" ry="2" />
<text  x="1173.33" y="559.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.33%)</title><rect x="1056.3" y="277" width="3.9" height="15.0" fill="rgb(251,64,48)" rx="2" ry="2" />
<text  x="1059.27" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="222.4" y="469" width="3.9" height="15.0" fill="rgb(212,168,10)" rx="2" ry="2" />
<text  x="225.40" y="479.5" ></text>
</g>
<g >
<title>generic_exec_single (160 samples, 53.33%)</title><rect x="399.4" y="357" width="629.3" height="15.0" fill="rgb(249,24,36)" rx="2" ry="2" />
<text  x="402.40" y="367.5" >generic_exec_single</text>
</g>
<g >
<title>tcp_sendmsg (7 samples, 2.33%)</title><rect x="124.1" y="517" width="27.5" height="15.0" fill="rgb(209,221,49)" rx="2" ry="2" />
<text  x="127.07" y="527.5" >t..</text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.67%)</title><rect x="375.8" y="261" width="7.9" height="15.0" fill="rgb(253,28,5)" rx="2" ry="2" />
<text  x="378.80" y="271.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.33%)</title><rect x="10.0" y="565" width="3.9" height="15.0" fill="rgb(221,164,22)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.33%)</title><rect x="69.0" y="581" width="3.9" height="15.0" fill="rgb(232,169,48)" rx="2" ry="2" />
<text  x="72.00" y="591.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.33%)</title><rect x="214.5" y="533" width="4.0" height="15.0" fill="rgb(241,135,44)" rx="2" ry="2" />
<text  x="217.53" y="543.5" ></text>
</g>
<g >
<title>migration/8 (1 samples, 0.33%)</title><rect x="265.7" y="629" width="3.9" height="15.0" fill="rgb(241,64,47)" rx="2" ry="2" />
<text  x="268.67" y="639.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 1.33%)</title><rect x="128.0" y="213" width="15.7" height="15.0" fill="rgb(241,113,49)" rx="2" ry="2" />
<text  x="131.00" y="223.5" ></text>
</g>
<g >
<title>[vmlinux] (31 samples, 10.33%)</title><rect x="1068.1" y="613" width="121.9" height="15.0" fill="rgb(218,103,48)" rx="2" ry="2" />
<text  x="1071.07" y="623.5" >[vmlinux]</text>
</g>
<g >
<title>do_softirq_own_stack (5 samples, 1.67%)</title><rect x="124.1" y="357" width="19.6" height="15.0" fill="rgb(221,8,22)" rx="2" ry="2" />
<text  x="127.07" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.67%)</title><rect x="375.8" y="597" width="7.9" height="15.0" fill="rgb(254,66,17)" rx="2" ry="2" />
<text  x="378.80" y="607.5" ></text>
</g>
<g >
<title>sched_setaffinity (7 samples, 2.33%)</title><rect x="1032.7" y="453" width="27.5" height="15.0" fill="rgb(247,227,47)" rx="2" ry="2" />
<text  x="1035.67" y="463.5" >s..</text>
</g>
<g >
<title>__x64_sys_sendto (7 samples, 2.33%)</title><rect x="124.1" y="565" width="27.5" height="15.0" fill="rgb(205,98,20)" rx="2" ry="2" />
<text  x="127.07" y="575.5" >_..</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="214.5" y="581" width="4.0" height="15.0" fill="rgb(254,201,40)" rx="2" ry="2" />
<text  x="217.53" y="591.5" ></text>
</g>
<g >
<title>event_function_call (160 samples, 53.33%)</title><rect x="399.4" y="389" width="629.3" height="15.0" fill="rgb(212,38,51)" rx="2" ry="2" />
<text  x="402.40" y="399.5" >event_function_call</text>
</g>
<g >
<title>[unknown] (2 samples, 0.67%)</title><rect x="37.5" y="565" width="7.9" height="15.0" fill="rgb(209,215,45)" rx="2" ry="2" />
<text  x="40.53" y="575.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (25 samples, 8.33%)</title><rect x="1072.0" y="501" width="98.3" height="15.0" fill="rgb(217,226,9)" rx="2" ry="2" />
<text  x="1075.00" y="511.5" >mwait_idle_..</text>
</g>
<g >
<title>MYSQLparse (1 samples, 0.33%)</title><rect x="297.1" y="581" width="4.0" height="15.0" fill="rgb(242,221,46)" rx="2" ry="2" />
<text  x="300.13" y="591.5" ></text>
</g>
<g >
<title>migration/5 (1 samples, 0.33%)</title><rect x="253.9" y="629" width="3.9" height="15.0" fill="rgb(210,54,53)" rx="2" ry="2" />
<text  x="256.87" y="639.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="249.9" y="533" width="4.0" height="15.0" fill="rgb(205,60,6)" rx="2" ry="2" />
<text  x="252.93" y="543.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.33%)</title><rect x="1182.1" y="517" width="4.0" height="15.0" fill="rgb(254,111,14)" rx="2" ry="2" />
<text  x="1185.13" y="527.5" ></text>
</g>
<g >
<title>__sys_recvfrom (2 samples, 0.67%)</title><rect x="116.2" y="549" width="7.9" height="15.0" fill="rgb(239,20,12)" rx="2" ry="2" />
<text  x="119.20" y="559.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="242.1" y="581" width="3.9" height="15.0" fill="rgb(209,137,11)" rx="2" ry="2" />
<text  x="245.07" y="591.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="261.7" y="565" width="4.0" height="15.0" fill="rgb(236,110,52)" rx="2" ry="2" />
<text  x="264.73" y="575.5" ></text>
</g>
<g >
<title>perf_ioctl (160 samples, 53.33%)</title><rect x="399.4" y="437" width="629.3" height="15.0" fill="rgb(227,47,44)" rx="2" ry="2" />
<text  x="402.40" y="447.5" >perf_ioctl</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.33%)</title><rect x="128.0" y="101" width="3.9" height="15.0" fill="rgb(211,117,19)" rx="2" ry="2" />
<text  x="131.00" y="111.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.67%)</title><rect x="375.8" y="309" width="7.9" height="15.0" fill="rgb(235,151,32)" rx="2" ry="2" />
<text  x="378.80" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="249.9" y="485" width="4.0" height="15.0" fill="rgb(218,122,35)" rx="2" ry="2" />
<text  x="252.93" y="495.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="246.0" y="565" width="3.9" height="15.0" fill="rgb(210,174,26)" rx="2" ry="2" />
<text  x="249.00" y="575.5" ></text>
</g>
<g >
<title>Item_func_eq::val_int (1 samples, 0.33%)</title><rect x="308.9" y="549" width="4.0" height="15.0" fill="rgb(243,201,48)" rx="2" ry="2" />
<text  x="311.93" y="559.5" ></text>
</g>
<g >
<title>update_irq_load_avg (1 samples, 0.33%)</title><rect x="226.3" y="437" width="4.0" height="15.0" fill="rgb(226,65,21)" rx="2" ry="2" />
<text  x="229.33" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (160 samples, 53.33%)</title><rect x="399.4" y="293" width="629.3" height="15.0" fill="rgb(228,199,5)" rx="2" ry="2" />
<text  x="402.40" y="303.5" >native_write_msr</text>
</g>
<g >
<title>[unknown] (23 samples, 7.67%)</title><rect x="21.8" y="613" width="90.5" height="15.0" fill="rgb(250,31,38)" rx="2" ry="2" />
<text  x="24.80" y="623.5" >[unknown]</text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.33%)</title><rect x="257.8" y="453" width="3.9" height="15.0" fill="rgb(210,52,30)" rx="2" ry="2" />
<text  x="260.80" y="463.5" ></text>
</g>
<g >
<title>do_softirq (5 samples, 1.67%)</title><rect x="124.1" y="373" width="19.6" height="15.0" fill="rgb(209,7,49)" rx="2" ry="2" />
<text  x="127.07" y="383.5" ></text>
</g>
<g >
<title>smp_call_function_single (160 samples, 53.33%)</title><rect x="399.4" y="373" width="629.3" height="15.0" fill="rgb(244,144,5)" rx="2" ry="2" />
<text  x="402.40" y="383.5" >smp_call_function_single</text>
</g>
<g >
<title>ixgbe_read_reg (1 samples, 0.33%)</title><rect x="10.0" y="517" width="3.9" height="15.0" fill="rgb(251,147,46)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>check_mysql50_prefix (1 samples, 0.33%)</title><rect x="367.9" y="597" width="4.0" height="15.0" fill="rgb(231,121,36)" rx="2" ry="2" />
<text  x="370.93" y="607.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="242.1" y="517" width="3.9" height="15.0" fill="rgb(224,158,0)" rx="2" ry="2" />
<text  x="245.07" y="527.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.67%)</title><rect x="375.8" y="357" width="7.9" height="15.0" fill="rgb(214,25,47)" rx="2" ry="2" />
<text  x="378.80" y="367.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1 samples, 0.33%)</title><rect x="1178.2" y="549" width="3.9" height="15.0" fill="rgb(221,11,51)" rx="2" ry="2" />
<text  x="1181.20" y="559.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.33%)</title><rect x="116.2" y="501" width="3.9" height="15.0" fill="rgb(249,26,52)" rx="2" ry="2" />
<text  x="119.20" y="511.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="214.5" y="613" width="4.0" height="15.0" fill="rgb(206,39,40)" rx="2" ry="2" />
<text  x="217.53" y="623.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.67%)</title><rect x="375.8" y="421" width="7.9" height="15.0" fill="rgb(232,80,30)" rx="2" ry="2" />
<text  x="378.80" y="431.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="257.8" y="485" width="3.9" height="15.0" fill="rgb(215,214,4)" rx="2" ry="2" />
<text  x="260.80" y="495.5" ></text>
</g>
<g >
<title>lobsters (51 samples, 17.00%)</title><rect x="13.9" y="629" width="200.6" height="15.0" fill="rgb(207,134,50)" rx="2" ry="2" />
<text  x="16.93" y="639.5" >lobsters</text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.67%)</title><rect x="375.8" y="245" width="7.9" height="15.0" fill="rgb(241,152,16)" rx="2" ry="2" />
<text  x="378.80" y="255.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="218.5" y="517" width="3.9" height="15.0" fill="rgb(247,118,23)" rx="2" ry="2" />
<text  x="221.47" y="527.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="226.3" y="597" width="4.0" height="15.0" fill="rgb(237,210,5)" rx="2" ry="2" />
<text  x="229.33" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.33%)</title><rect x="293.2" y="581" width="3.9" height="15.0" fill="rgb(220,191,34)" rx="2" ry="2" />
<text  x="296.20" y="591.5" ></text>
</g>
<g >
<title>ixgbe_service_task (1 samples, 0.33%)</title><rect x="10.0" y="549" width="3.9" height="15.0" fill="rgb(226,107,19)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>THD::~THD (1 samples, 0.33%)</title><rect x="293.2" y="597" width="3.9" height="15.0" fill="rgb(208,133,26)" rx="2" ry="2" />
<text  x="296.20" y="607.5" ></text>
</g>
<g >
<title>cpu_startup_entry (31 samples, 10.33%)</title><rect x="1068.1" y="581" width="121.9" height="15.0" fill="rgb(235,67,52)" rx="2" ry="2" />
<text  x="1071.07" y="591.5" >cpu_startup_entry</text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 1.33%)</title><rect x="128.0" y="245" width="15.7" height="15.0" fill="rgb(251,46,53)" rx="2" ry="2" />
<text  x="131.00" y="255.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="246.0" y="549" width="3.9" height="15.0" fill="rgb(212,188,19)" rx="2" ry="2" />
<text  x="249.00" y="559.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1 samples, 0.33%)</title><rect x="116.2" y="469" width="3.9" height="15.0" fill="rgb(244,104,2)" rx="2" ry="2" />
<text  x="119.20" y="479.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="257.8" y="565" width="3.9" height="15.0" fill="rgb(241,95,0)" rx="2" ry="2" />
<text  x="260.80" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.33%)</title><rect x="112.3" y="597" width="3.9" height="15.0" fill="rgb(241,84,30)" rx="2" ry="2" />
<text  x="115.27" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.67%)</title><rect x="116.2" y="581" width="7.9" height="15.0" fill="rgb(227,110,16)" rx="2" ry="2" />
<text  x="119.20" y="591.5" ></text>
</g>
<g >
<title>migration/19 (1 samples, 0.33%)</title><rect x="242.1" y="629" width="3.9" height="15.0" fill="rgb(247,219,22)" rx="2" ry="2" />
<text  x="245.07" y="639.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="249.9" y="597" width="4.0" height="15.0" fill="rgb(205,17,11)" rx="2" ry="2" />
<text  x="252.93" y="607.5" ></text>
</g>
<g >
<title>migration/12 (1 samples, 0.33%)</title><rect x="222.4" y="629" width="3.9" height="15.0" fill="rgb(216,124,8)" rx="2" ry="2" />
<text  x="225.40" y="639.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="234.2" y="613" width="3.9" height="15.0" fill="rgb(241,222,11)" rx="2" ry="2" />
<text  x="237.20" y="623.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="246.0" y="517" width="3.9" height="15.0" fill="rgb(239,197,0)" rx="2" ry="2" />
<text  x="249.00" y="527.5" ></text>
</g>
<g >
<title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.33%)</title><rect x="92.6" y="597" width="3.9" height="15.0" fill="rgb(220,21,39)" rx="2" ry="2" />
<text  x="95.60" y="607.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.33%)</title><rect x="128.0" y="53" width="3.9" height="15.0" fill="rgb(215,11,11)" rx="2" ry="2" />
<text  x="131.00" y="63.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="226.3" y="565" width="4.0" height="15.0" fill="rgb(244,48,45)" rx="2" ry="2" />
<text  x="229.33" y="575.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.33%)</title><rect x="135.9" y="85" width="3.9" height="15.0" fill="rgb(242,40,29)" rx="2" ry="2" />
<text  x="138.87" y="95.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="222.4" y="533" width="3.9" height="15.0" fill="rgb(221,164,15)" rx="2" ry="2" />
<text  x="225.40" y="543.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.67%)</title><rect x="135.9" y="133" width="7.8" height="15.0" fill="rgb(247,97,0)" rx="2" ry="2" />
<text  x="138.87" y="143.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.33%)</title><rect x="234.2" y="453" width="3.9" height="15.0" fill="rgb(243,109,48)" rx="2" ry="2" />
<text  x="237.20" y="463.5" ></text>
</g>
<g >
<title>Item_field::~Item_field (1 samples, 0.33%)</title><rect x="277.5" y="597" width="3.9" height="15.0" fill="rgb(218,211,1)" rx="2" ry="2" />
<text  x="280.47" y="607.5" ></text>
</g>
<g >
<title>set_next_task_fair (1 samples, 0.33%)</title><rect x="1040.5" y="421" width="4.0" height="15.0" fill="rgb(253,119,53)" rx="2" ry="2" />
<text  x="1043.53" y="431.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="230.3" y="549" width="3.9" height="15.0" fill="rgb(254,51,14)" rx="2" ry="2" />
<text  x="233.27" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.33%)</title><rect x="76.9" y="597" width="3.9" height="15.0" fill="rgb(207,155,41)" rx="2" ry="2" />
<text  x="79.87" y="607.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.67%)</title><rect x="375.8" y="533" width="7.9" height="15.0" fill="rgb(231,34,10)" rx="2" ry="2" />
<text  x="378.80" y="543.5" ></text>
</g>
<g >
<title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.33%)</title><rect x="33.6" y="581" width="3.9" height="15.0" fill="rgb(248,118,34)" rx="2" ry="2" />
<text  x="36.60" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.33%)</title><rect x="45.4" y="581" width="3.9" height="15.0" fill="rgb(251,205,7)" rx="2" ry="2" />
<text  x="48.40" y="591.5" ></text>
</g>
<g >
<title>remote_function (160 samples, 53.33%)</title><rect x="399.4" y="341" width="629.3" height="15.0" fill="rgb(227,50,3)" rx="2" ry="2" />
<text  x="402.40" y="351.5" >remote_function</text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.33%)</title><rect x="391.5" y="581" width="4.0" height="15.0" fill="rgb(254,170,42)" rx="2" ry="2" />
<text  x="394.53" y="591.5" ></text>
</g>
<g >
<title>handler::multi_range_read_info_const (1 samples, 0.33%)</title><rect x="360.1" y="581" width="3.9" height="15.0" fill="rgb(236,148,7)" rx="2" ry="2" />
<text  x="363.07" y="591.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4 samples, 1.33%)</title><rect x="128.0" y="229" width="15.7" height="15.0" fill="rgb(230,33,17)" rx="2" ry="2" />
<text  x="131.00" y="239.5" ></text>
</g>
<g >
<title>do_execve (1 samples, 0.33%)</title><rect x="112.3" y="549" width="3.9" height="15.0" fill="rgb(213,80,40)" rx="2" ry="2" />
<text  x="115.27" y="559.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.33%)</title><rect x="139.8" y="69" width="3.9" height="15.0" fill="rgb(226,86,15)" rx="2" ry="2" />
<text  x="142.80" y="79.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2 samples, 0.67%)</title><rect x="375.8" y="437" width="7.9" height="15.0" fill="rgb(226,193,35)" rx="2" ry="2" />
<text  x="378.80" y="447.5" ></text>
</g>
<g >
<title>ip_finish_output2 (5 samples, 1.67%)</title><rect x="124.1" y="405" width="19.6" height="15.0" fill="rgb(230,167,9)" rx="2" ry="2" />
<text  x="127.07" y="415.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.33%)</title><rect x="1174.3" y="549" width="3.9" height="15.0" fill="rgb(253,120,5)" rx="2" ry="2" />
<text  x="1177.27" y="559.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 0.67%)</title><rect x="375.8" y="293" width="7.9" height="15.0" fill="rgb(245,14,45)" rx="2" ry="2" />
<text  x="378.80" y="303.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="257.8" y="533" width="3.9" height="15.0" fill="rgb(212,156,30)" rx="2" ry="2" />
<text  x="260.80" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 3.67%)</title><rect x="316.8" y="565" width="43.3" height="15.0" fill="rgb(250,183,16)" rx="2" ry="2" />
<text  x="319.80" y="575.5" >__me..</text>
</g>
<g >
<title>stop_one_cpu (4 samples, 1.33%)</title><rect x="1044.5" y="421" width="15.7" height="15.0" fill="rgb(226,84,53)" rx="2" ry="2" />
<text  x="1047.47" y="431.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="10.0" y="597" width="3.9" height="15.0" fill="rgb(211,64,0)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (161 samples, 53.67%)</title><rect x="399.4" y="501" width="633.3" height="15.0" fill="rgb(232,2,16)" rx="2" ry="2" />
<text  x="402.40" y="511.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="261.7" y="549" width="4.0" height="15.0" fill="rgb(233,149,23)" rx="2" ry="2" />
<text  x="264.73" y="559.5" ></text>
</g>
<g >
<title>my_long10_to_str_8bit (1 samples, 0.33%)</title><rect x="395.5" y="613" width="3.9" height="15.0" fill="rgb(235,107,25)" rx="2" ry="2" />
<text  x="398.47" y="623.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="253.9" y="533" width="3.9" height="15.0" fill="rgb(231,95,27)" rx="2" ry="2" />
<text  x="256.87" y="543.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.33%)</title><rect x="1068.1" y="485" width="3.9" height="15.0" fill="rgb(206,158,33)" rx="2" ry="2" />
<text  x="1071.07" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7 samples, 2.33%)</title><rect x="1032.7" y="501" width="27.5" height="15.0" fill="rgb(238,177,8)" rx="2" ry="2" />
<text  x="1035.67" y="511.5" >e..</text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 0.33%)</title><rect x="1064.1" y="581" width="4.0" height="15.0" fill="rgb(214,162,27)" rx="2" ry="2" />
<text  x="1067.13" y="591.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.67%)</title><rect x="128.0" y="149" width="7.9" height="15.0" fill="rgb(212,54,0)" rx="2" ry="2" />
<text  x="131.00" y="159.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="218.5" y="469" width="3.9" height="15.0" fill="rgb(210,9,52)" rx="2" ry="2" />
<text  x="221.47" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.67%)</title><rect x="375.8" y="581" width="7.9" height="15.0" fill="rgb(225,226,21)" rx="2" ry="2" />
<text  x="378.80" y="591.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="234.2" y="581" width="3.9" height="15.0" fill="rgb(221,184,52)" rx="2" ry="2" />
<text  x="237.20" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.33%)</title><rect x="1174.3" y="533" width="3.9" height="15.0" fill="rgb(251,106,54)" rx="2" ry="2" />
<text  x="1177.27" y="543.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="10.0" y="613" width="3.9" height="15.0" fill="rgb(254,11,30)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>migration/16 (1 samples, 0.33%)</title><rect x="234.2" y="629" width="3.9" height="15.0" fill="rgb(226,224,41)" rx="2" ry="2" />
<text  x="237.20" y="639.5" ></text>
</g>
<g >
<title>set_next_entity (1 samples, 0.33%)</title><rect x="1040.5" y="405" width="4.0" height="15.0" fill="rgb(231,206,6)" rx="2" ry="2" />
<text  x="1043.53" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.33%)</title><rect x="391.5" y="597" width="4.0" height="15.0" fill="rgb(228,35,3)" rx="2" ry="2" />
<text  x="394.53" y="607.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="230.3" y="565" width="3.9" height="15.0" fill="rgb(240,94,20)" rx="2" ry="2" />
<text  x="233.27" y="575.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="242.1" y="501" width="3.9" height="15.0" fill="rgb(254,123,15)" rx="2" ry="2" />
<text  x="245.07" y="511.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.33%)</title><rect x="41.5" y="549" width="3.9" height="15.0" fill="rgb(234,228,24)" rx="2" ry="2" />
<text  x="44.47" y="559.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.33%)</title><rect x="375.8" y="181" width="3.9" height="15.0" fill="rgb(224,64,33)" rx="2" ry="2" />
<text  x="378.80" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.33%)</title><rect x="37.5" y="549" width="4.0" height="15.0" fill="rgb(225,72,48)" rx="2" ry="2" />
<text  x="40.53" y="559.5" ></text>
</g>
<g >
<title>__sys_sendto (2 samples, 0.67%)</title><rect x="375.8" y="549" width="7.9" height="15.0" fill="rgb(212,217,25)" rx="2" ry="2" />
<text  x="378.80" y="559.5" ></text>
</g>
<g >
<title>tcp_data_queue (2 samples, 0.67%)</title><rect x="135.9" y="165" width="7.8" height="15.0" fill="rgb(205,101,43)" rx="2" ry="2" />
<text  x="138.87" y="175.5" ></text>
</g>
<g >
<title>[mysqld] (1 samples, 0.33%)</title><rect x="273.5" y="613" width="4.0" height="15.0" fill="rgb(220,158,34)" rx="2" ry="2" />
<text  x="276.53" y="623.5" ></text>
</g>
<g >
<title>bitmap_union (1 samples, 0.33%)</title><rect x="281.4" y="565" width="3.9" height="15.0" fill="rgb(240,119,42)" rx="2" ry="2" />
<text  x="284.40" y="575.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.33%)</title><rect x="214.5" y="565" width="4.0" height="15.0" fill="rgb(253,4,22)" rx="2" ry="2" />
<text  x="217.53" y="575.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.33%)</title><rect x="391.5" y="549" width="4.0" height="15.0" fill="rgb(245,200,24)" rx="2" ry="2" />
<text  x="394.53" y="559.5" ></text>
</g>
<g >
<title>migration/14 (1 samples, 0.33%)</title><rect x="226.3" y="629" width="4.0" height="15.0" fill="rgb(224,190,29)" rx="2" ry="2" />
<text  x="229.33" y="639.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="234.2" y="469" width="3.9" height="15.0" fill="rgb(238,186,26)" rx="2" ry="2" />
<text  x="237.20" y="479.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="222.4" y="613" width="3.9" height="15.0" fill="rgb(213,103,6)" rx="2" ry="2" />
<text  x="225.40" y="623.5" ></text>
</g>
<g >
<title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.33%)</title><rect x="206.7" y="613" width="3.9" height="15.0" fill="rgb(211,130,39)" rx="2" ry="2" />
<text  x="209.67" y="623.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.33%)</title><rect x="25.7" y="597" width="4.0" height="15.0" fill="rgb(237,25,14)" rx="2" ry="2" />
<text  x="28.73" y="607.5" ></text>
</g>
<g >
<title>__rdl_realloc (1 samples, 0.33%)</title><rect x="72.9" y="597" width="4.0" height="15.0" fill="rgb(223,47,42)" rx="2" ry="2" />
<text  x="75.93" y="607.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.33%)</title><rect x="143.7" y="485" width="4.0" height="15.0" fill="rgb(216,151,46)" rx="2" ry="2" />
<text  x="146.73" y="495.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="246.0" y="501" width="3.9" height="15.0" fill="rgb(231,200,6)" rx="2" ry="2" />
<text  x="249.00" y="511.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="238.1" y="485" width="4.0" height="15.0" fill="rgb(213,164,45)" rx="2" ry="2" />
<text  x="241.13" y="495.5" ></text>
</g>
<g >
<title>inet_recvmsg (2 samples, 0.67%)</title><rect x="116.2" y="533" width="7.9" height="15.0" fill="rgb(215,82,53)" rx="2" ry="2" />
<text  x="119.20" y="543.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="234.2" y="517" width="3.9" height="15.0" fill="rgb(235,135,5)" rx="2" ry="2" />
<text  x="237.20" y="527.5" ></text>
</g>
<g >
<title>mysql::conn::Conn::read_packet (1 samples, 0.33%)</title><rect x="65.1" y="581" width="3.9" height="15.0" fill="rgb(214,197,41)" rx="2" ry="2" />
<text  x="68.07" y="591.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="222.4" y="565" width="3.9" height="15.0" fill="rgb(212,205,0)" rx="2" ry="2" />
<text  x="225.40" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.33%)</title><rect x="112.3" y="581" width="3.9" height="15.0" fill="rgb(207,218,8)" rx="2" ry="2" />
<text  x="115.27" y="591.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.33%)</title><rect x="1056.3" y="325" width="3.9" height="15.0" fill="rgb(210,172,48)" rx="2" ry="2" />
<text  x="1059.27" y="335.5" ></text>
</g>
<g >
<title>__libc_send (7 samples, 2.33%)</title><rect x="124.1" y="613" width="27.5" height="15.0" fill="rgb(244,220,1)" rx="2" ry="2" />
<text  x="127.07" y="623.5" >_..</text>
</g>
<g >
<title>tcp_sendmsg_locked (7 samples, 2.33%)</title><rect x="124.1" y="501" width="27.5" height="15.0" fill="rgb(239,187,42)" rx="2" ry="2" />
<text  x="127.07" y="511.5" >t..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.33%)</title><rect x="1068.1" y="501" width="3.9" height="15.0" fill="rgb(240,192,16)" rx="2" ry="2" />
<text  x="1071.07" y="511.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (7 samples, 2.33%)</title><rect x="1032.7" y="437" width="27.5" height="15.0" fill="rgb(207,213,25)" rx="2" ry="2" />
<text  x="1035.67" y="447.5" >_..</text>
</g>
<g >
<title>cpuidle_enter (26 samples, 8.67%)</title><rect x="1068.1" y="549" width="102.2" height="15.0" fill="rgb(231,187,1)" rx="2" ry="2" />
<text  x="1071.07" y="559.5" >cpuidle_enter</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 2.33%)</title><rect x="1032.7" y="485" width="27.5" height="15.0" fill="rgb(211,25,8)" rx="2" ry="2" />
<text  x="1035.67" y="495.5" >d..</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="226.3" y="581" width="4.0" height="15.0" fill="rgb(247,156,20)" rx="2" ry="2" />
<text  x="229.33" y="591.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.33%)</title><rect x="120.1" y="373" width="4.0" height="15.0" fill="rgb(233,143,44)" rx="2" ry="2" />
<text  x="123.13" y="383.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="234.2" y="533" width="3.9" height="15.0" fill="rgb(251,17,26)" rx="2" ry="2" />
<text  x="237.20" y="543.5" ></text>
</g>
<g >
<title>intel_idle (25 samples, 8.33%)</title><rect x="1072.0" y="517" width="98.3" height="15.0" fill="rgb(209,18,47)" rx="2" ry="2" />
<text  x="1075.00" y="527.5" >intel_idle</text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="238.1" y="533" width="4.0" height="15.0" fill="rgb(217,73,21)" rx="2" ry="2" />
<text  x="241.13" y="543.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 1.00%)</title><rect x="305.0" y="565" width="11.8" height="15.0" fill="rgb(250,34,13)" rx="2" ry="2" />
<text  x="308.00" y="575.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.67%)</title><rect x="135.9" y="149" width="7.8" height="15.0" fill="rgb(252,131,48)" rx="2" ry="2" />
<text  x="138.87" y="159.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2 samples, 0.67%)</title><rect x="375.8" y="229" width="7.9" height="15.0" fill="rgb(238,167,19)" rx="2" ry="2" />
<text  x="378.80" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.33%)</title><rect x="13.9" y="613" width="4.0" height="15.0" fill="rgb(205,27,17)" rx="2" ry="2" />
<text  x="16.93" y="623.5" ></text>
</g>
<g >
<title>sk_wait_data (1 samples, 0.33%)</title><rect x="120.1" y="501" width="4.0" height="15.0" fill="rgb(243,228,29)" rx="2" ry="2" />
<text  x="123.13" y="511.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="218.5" y="597" width="3.9" height="15.0" fill="rgb(219,59,0)" rx="2" ry="2" />
<text  x="221.47" y="607.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.33%)</title><rect x="214.5" y="549" width="4.0" height="15.0" fill="rgb(225,64,23)" rx="2" ry="2" />
<text  x="217.53" y="559.5" ></text>
</g>
<g >
<title>cpu_stop_queue_work (4 samples, 1.33%)</title><rect x="1044.5" y="405" width="15.7" height="15.0" fill="rgb(250,58,40)" rx="2" ry="2" />
<text  x="1047.47" y="415.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.67%)</title><rect x="128.0" y="133" width="7.9" height="15.0" fill="rgb(254,119,21)" rx="2" ry="2" />
<text  x="131.00" y="143.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.33%)</title><rect x="249.9" y="501" width="4.0" height="15.0" fill="rgb(218,167,16)" rx="2" ry="2" />
<text  x="252.93" y="511.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.33%)</title><rect x="249.9" y="453" width="4.0" height="15.0" fill="rgb(210,166,9)" rx="2" ry="2" />
<text  x="252.93" y="463.5" ></text>
</g>
<g >
<title>swapper (31 samples, 10.33%)</title><rect x="1068.1" y="629" width="121.9" height="15.0" fill="rgb(241,131,19)" rx="2" ry="2" />
<text  x="1071.07" y="639.5" >swapper</text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.67%)</title><rect x="128.0" y="165" width="7.9" height="15.0" fill="rgb(220,207,27)" rx="2" ry="2" />
<text  x="131.00" y="175.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.67%)</title><rect x="375.8" y="277" width="7.9" height="15.0" fill="rgb(234,88,7)" rx="2" ry="2" />
<text  x="378.80" y="287.5" ></text>
</g>
<g >
<title>[mysqld] (1 samples, 0.33%)</title><rect x="312.9" y="549" width="3.9" height="15.0" fill="rgb(206,40,45)" rx="2" ry="2" />
<text  x="315.87" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.33%)</title><rect x="383.7" y="565" width="3.9" height="15.0" fill="rgb(253,2,20)" rx="2" ry="2" />
<text  x="386.67" y="575.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="261.7" y="613" width="4.0" height="15.0" fill="rgb(226,183,51)" rx="2" ry="2" />
<text  x="264.73" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.67%)</title><rect x="116.2" y="597" width="7.9" height="15.0" fill="rgb(248,111,41)" rx="2" ry="2" />
<text  x="119.20" y="607.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="222.4" y="581" width="3.9" height="15.0" fill="rgb(238,217,51)" rx="2" ry="2" />
<text  x="225.40" y="591.5" ></text>
</g>
<g >
<title>__do_softirq (2 samples, 0.67%)</title><rect x="375.8" y="341" width="7.9" height="15.0" fill="rgb(236,159,34)" rx="2" ry="2" />
<text  x="378.80" y="351.5" ></text>
</g>
<g >
<title>uclamp_rq_dec_id (1 samples, 0.33%)</title><rect x="1036.6" y="405" width="3.9" height="15.0" fill="rgb(208,82,18)" rx="2" ry="2" />
<text  x="1039.60" y="415.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (1 samples, 0.33%)</title><rect x="1186.1" y="549" width="3.9" height="15.0" fill="rgb(230,30,18)" rx="2" ry="2" />
<text  x="1189.07" y="559.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="238.1" y="517" width="4.0" height="15.0" fill="rgb(230,200,43)" rx="2" ry="2" />
<text  x="241.13" y="527.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.33%)</title><rect x="1056.3" y="261" width="3.9" height="15.0" fill="rgb(238,133,5)" rx="2" ry="2" />
<text  x="1059.27" y="271.5" ></text>
</g>
<g >
<title>migration/15 (1 samples, 0.33%)</title><rect x="230.3" y="629" width="3.9" height="15.0" fill="rgb(230,113,0)" rx="2" ry="2" />
<text  x="233.27" y="639.5" ></text>
</g>
<g >
<title>run_builtin (168 samples, 56.00%)</title><rect x="399.4" y="565" width="660.8" height="15.0" fill="rgb(238,88,35)" rx="2" ry="2" />
<text  x="402.40" y="575.5" >run_builtin</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.33%)</title><rect x="120.1" y="421" width="4.0" height="15.0" fill="rgb(215,105,15)" rx="2" ry="2" />
<text  x="123.13" y="431.5" ></text>
</g>
<g >
<title>start_secondary (31 samples, 10.33%)</title><rect x="1068.1" y="597" width="121.9" height="15.0" fill="rgb(243,121,27)" rx="2" ry="2" />
<text  x="1071.07" y="607.5" >start_secondary</text>
</g>
<g >
<title>migration/2 (1 samples, 0.33%)</title><rect x="246.0" y="629" width="3.9" height="15.0" fill="rgb(239,101,52)" rx="2" ry="2" />
<text  x="249.00" y="639.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="218.5" y="581" width="3.9" height="15.0" fill="rgb(219,172,12)" rx="2" ry="2" />
<text  x="221.47" y="591.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="246.0" y="613" width="3.9" height="15.0" fill="rgb(252,192,53)" rx="2" ry="2" />
<text  x="249.00" y="623.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.33%)</title><rect x="257.8" y="597" width="3.9" height="15.0" fill="rgb(211,142,22)" rx="2" ry="2" />
<text  x="260.80" y="607.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.33%)</title><rect x="131.9" y="69" width="4.0" height="15.0" fill="rgb(252,33,3)" rx="2" ry="2" />
<text  x="134.93" y="79.5" ></text>
</g>
<g >
<title>main (168 samples, 56.00%)</title><rect x="399.4" y="581" width="660.8" height="15.0" fill="rgb(217,42,30)" rx="2" ry="2" />
<text  x="402.40" y="591.5" >main</text>
</g>
<g >
<title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.33%)</title><rect x="29.7" y="597" width="3.9" height="15.0" fill="rgb(234,227,51)" rx="2" ry="2" />
<text  x="32.67" y="607.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="226.3" y="469" width="4.0" height="15.0" fill="rgb(212,93,46)" rx="2" ry="2" />
<text  x="229.33" y="479.5" ></text>
</g>
<g >
<title>__do_execve_file (1 samples, 0.33%)</title><rect x="112.3" y="533" width="3.9" height="15.0" fill="rgb(246,220,34)" rx="2" ry="2" />
<text  x="115.27" y="543.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="222.4" y="549" width="3.9" height="15.0" fill="rgb(232,199,10)" rx="2" ry="2" />
<text  x="225.40" y="559.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.33%)</title><rect x="112.3" y="613" width="3.9" height="15.0" fill="rgb(207,71,48)" rx="2" ry="2" />
<text  x="115.27" y="623.5" ></text>
</g>
<g >
<title>JOIN::optimize_inner (1 samples, 0.33%)</title><rect x="281.4" y="581" width="3.9" height="15.0" fill="rgb(223,61,40)" rx="2" ry="2" />
<text  x="284.40" y="591.5" ></text>
</g>
<g >
<title>evlist__enable (168 samples, 56.00%)</title><rect x="399.4" y="533" width="660.8" height="15.0" fill="rgb(232,225,22)" rx="2" ry="2" />
<text  x="402.40" y="543.5" >evlist__enable</text>
</g>
<g >
<title>__next_timer_interrupt (1 samples, 0.33%)</title><rect x="1174.3" y="485" width="3.9" height="15.0" fill="rgb(237,188,53)" rx="2" ry="2" />
<text  x="1177.27" y="495.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="218.5" y="533" width="3.9" height="15.0" fill="rgb(243,193,47)" rx="2" ry="2" />
<text  x="221.47" y="543.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="242.1" y="485" width="3.9" height="15.0" fill="rgb(205,155,13)" rx="2" ry="2" />
<text  x="245.07" y="495.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.33%)</title><rect x="242.1" y="613" width="3.9" height="15.0" fill="rgb(218,212,25)" rx="2" ry="2" />
<text  x="245.07" y="623.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (1 samples, 0.33%)</title><rect x="112.3" y="421" width="3.9" height="15.0" fill="rgb(207,229,22)" rx="2" ry="2" />
<text  x="115.27" y="431.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.33%)</title><rect x="128.0" y="37" width="3.9" height="15.0" fill="rgb(222,100,4)" rx="2" ry="2" />
<text  x="131.00" y="47.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="253.9" y="581" width="3.9" height="15.0" fill="rgb(212,60,12)" rx="2" ry="2" />
<text  x="256.87" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.33%)</title><rect x="383.7" y="597" width="3.9" height="15.0" fill="rgb(246,135,33)" rx="2" ry="2" />
<text  x="386.67" y="607.5" ></text>
</g>
<g >
<title>ksys_ioctl (160 samples, 53.33%)</title><rect x="399.4" y="453" width="629.3" height="15.0" fill="rgb(219,174,35)" rx="2" ry="2" />
<text  x="402.40" y="463.5" >ksys_ioctl</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.33%)</title><rect x="253.9" y="469" width="3.9" height="15.0" fill="rgb(214,123,41)" rx="2" ry="2" />
<text  x="256.87" y="479.5" ></text>
</g>
<g >
<title>handler::ha_rnd_next (1 samples, 0.33%)</title><rect x="293.2" y="565" width="3.9" height="15.0" fill="rgb(206,60,36)" rx="2" ry="2" />
<text  x="296.20" y="575.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="242.1" y="565" width="3.9" height="15.0" fill="rgb(230,186,19)" rx="2" ry="2" />
<text  x="245.07" y="575.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="234.2" y="565" width="3.9" height="15.0" fill="rgb(211,15,30)" rx="2" ry="2" />
<text  x="237.20" y="575.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.33%)</title><rect x="257.8" y="517" width="3.9" height="15.0" fill="rgb(236,149,29)" rx="2" ry="2" />
<text  x="260.80" y="527.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.33%)</title><rect x="128.0" y="85" width="3.9" height="15.0" fill="rgb(234,183,37)" rx="2" ry="2" />
<text  x="131.00" y="95.5" ></text>
</g>
<g >
<title>do_softirq (2 samples, 0.67%)</title><rect x="375.8" y="373" width="7.9" height="15.0" fill="rgb(234,68,48)" rx="2" ry="2" />
<text  x="378.80" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.33%)</title><rect x="1056.3" y="293" width="3.9" height="15.0" fill="rgb(218,159,2)" rx="2" ry="2" />
<text  x="1059.27" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.33%)</title><rect x="57.2" y="581" width="3.9" height="15.0" fill="rgb(225,10,4)" rx="2" ry="2" />
<text  x="60.20" y="591.5" ></text>
</g>
<g >
<title>__libc_start_main (168 samples, 56.00%)</title><rect x="399.4" y="597" width="660.8" height="15.0" fill="rgb(227,35,48)" rx="2" ry="2" />
<text  x="402.40" y="607.5" >__libc_start_main</text>
</g>
<g >
<title>mysql::conn::Conn::read_packet (1 samples, 0.33%)</title><rect x="198.8" y="613" width="3.9" height="15.0" fill="rgb(224,34,39)" rx="2" ry="2" />
<text  x="201.80" y="623.5" ></text>
</g>
<g >
<title>event_function (160 samples, 53.33%)</title><rect x="399.4" y="325" width="629.3" height="15.0" fill="rgb(247,214,34)" rx="2" ry="2" />
<text  x="402.40" y="335.5" >event_function</text>
</g>
<g >
<title>Protocol::send_eof (1 samples, 0.33%)</title><rect x="289.3" y="597" width="3.9" height="15.0" fill="rgb(251,90,23)" rx="2" ry="2" />
<text  x="292.27" y="607.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.33%)</title><rect x="10.0" y="581" width="3.9" height="15.0" fill="rgb(239,59,41)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.33%)</title><rect x="1032.7" y="405" width="3.9" height="15.0" fill="rgb(227,149,4)" rx="2" ry="2" />
<text  x="1035.67" y="415.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="226.3" y="485" width="4.0" height="15.0" fill="rgb(245,24,1)" rx="2" ry="2" />
<text  x="229.33" y="495.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="249.9" y="581" width="4.0" height="15.0" fill="rgb(220,62,1)" rx="2" ry="2" />
<text  x="252.93" y="591.5" ></text>
</g>
<g >
<title>tcp_recvmsg (2 samples, 0.67%)</title><rect x="116.2" y="517" width="7.9" height="15.0" fill="rgb(238,132,44)" rx="2" ry="2" />
<text  x="119.20" y="527.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.33%)</title><rect x="218.5" y="453" width="3.9" height="15.0" fill="rgb(238,42,15)" rx="2" ry="2" />
<text  x="221.47" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.33%)</title><rect x="131.9" y="117" width="4.0" height="15.0" fill="rgb(239,186,39)" rx="2" ry="2" />
<text  x="134.93" y="127.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="226.3" y="533" width="4.0" height="15.0" fill="rgb(251,85,14)" rx="2" ry="2" />
<text  x="229.33" y="543.5" ></text>
</g>
<g >
<title>tcp_write_xmit (5 samples, 1.67%)</title><rect x="124.1" y="469" width="19.6" height="15.0" fill="rgb(222,174,44)" rx="2" ry="2" />
<text  x="127.07" y="479.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.33%)</title><rect x="112.3" y="469" width="3.9" height="15.0" fill="rgb(243,217,17)" rx="2" ry="2" />
<text  x="115.27" y="479.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="120.1" y="437" width="4.0" height="15.0" fill="rgb(240,205,7)" rx="2" ry="2" />
<text  x="123.13" y="447.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.67%)</title><rect x="375.8" y="213" width="7.9" height="15.0" fill="rgb(247,38,13)" rx="2" ry="2" />
<text  x="378.80" y="223.5" ></text>
</g>
<g >
<title>Protocol::store_string_aux (1 samples, 0.33%)</title><rect x="289.3" y="565" width="3.9" height="15.0" fill="rgb(248,97,6)" rx="2" ry="2" />
<text  x="292.27" y="575.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 1.33%)</title><rect x="128.0" y="261" width="15.7" height="15.0" fill="rgb(245,92,20)" rx="2" ry="2" />
<text  x="131.00" y="271.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="249.9" y="565" width="4.0" height="15.0" fill="rgb(233,43,19)" rx="2" ry="2" />
<text  x="252.93" y="575.5" ></text>
</g>
<g >
<title>decor::answer_rows (1 samples, 0.33%)</title><rect x="61.1" y="581" width="4.0" height="15.0" fill="rgb(207,14,17)" rx="2" ry="2" />
<text  x="64.13" y="591.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2 samples, 0.67%)</title><rect x="375.8" y="517" width="7.9" height="15.0" fill="rgb(251,144,43)" rx="2" ry="2" />
<text  x="378.80" y="527.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.67%)</title><rect x="116.2" y="613" width="7.9" height="15.0" fill="rgb(219,207,25)" rx="2" ry="2" />
<text  x="119.20" y="623.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.33%)</title><rect x="230.3" y="581" width="3.9" height="15.0" fill="rgb(234,57,48)" rx="2" ry="2" />
<text  x="233.27" y="591.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.33%)</title><rect x="120.1" y="389" width="4.0" height="15.0" fill="rgb(212,97,42)" rx="2" ry="2" />
<text  x="123.13" y="399.5" ></text>
</g>
<g >
<title>[unknown] (169 samples, 56.33%)</title><rect x="399.4" y="613" width="664.7" height="15.0" fill="rgb(228,202,24)" rx="2" ry="2" />
<text  x="402.40" y="623.5" >[unknown]</text>
</g>
<g >
<title>balance_fair (1 samples, 0.33%)</title><rect x="261.7" y="533" width="4.0" height="15.0" fill="rgb(248,53,20)" rx="2" ry="2" />
<text  x="264.73" y="543.5" ></text>
</g>
<g >
<title>process_backlog (5 samples, 1.67%)</title><rect x="124.1" y="309" width="19.6" height="15.0" fill="rgb(208,25,54)" rx="2" ry="2" />
<text  x="127.07" y="319.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.33%)</title><rect x="238.1" y="565" width="4.0" height="15.0" fill="rgb(219,49,51)" rx="2" ry="2" />
<text  x="241.13" y="575.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.33%)</title><rect x="261.7" y="485" width="4.0" height="15.0" fill="rgb(237,113,52)" rx="2" ry="2" />
<text  x="264.73" y="495.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.33%)</title><rect x="253.9" y="549" width="3.9" height="15.0" fill="rgb(247,107,41)" rx="2" ry="2" />
<text  x="256.87" y="559.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.33%)</title><rect x="80.8" y="597" width="3.9" height="15.0" fill="rgb(246,157,39)" rx="2" ry="2" />
<text  x="83.80" y="607.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.33%)</title><rect x="128.0" y="69" width="3.9" height="15.0" fill="rgb(248,77,45)" rx="2" ry="2" />
<text  x="131.00" y="79.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.67%)</title><rect x="135.9" y="117" width="7.8" height="15.0" fill="rgb(207,146,5)" rx="2" ry="2" />
<text  x="138.87" y="127.5" ></text>
</g>
<g >
<title>kworker/u80:1-i (1 samples, 0.33%)</title><rect x="10.0" y="629" width="3.9" height="15.0" fill="rgb(217,190,35)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.33%)</title><rect x="112.3" y="565" width="3.9" height="15.0" fill="rgb(221,108,20)" rx="2" ry="2" />
<text  x="115.27" y="575.5" ></text>
</g>
</g>
</svg>
