<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="33.5" y="277" width="5.9" height="15.0" fill="rgb(235,57,6)" rx="2" ry="2" />
<text  x="36.48" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="98.1" y="357" width="5.8" height="15.0" fill="rgb(245,81,23)" rx="2" ry="2" />
<text  x="101.06" y="367.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="57.0" y="277" width="5.8" height="15.0" fill="rgb(226,52,26)" rx="2" ry="2" />
<text  x="59.97" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="68.7" y="357" width="5.9" height="15.0" fill="rgb(231,92,34)" rx="2" ry="2" />
<text  x="71.71" y="367.5" ></text>
</g>
<g >
<title>swapper (19 samples, 9.45%)</title><rect x="1078.5" y="373" width="111.5" height="15.0" fill="rgb(214,189,2)" rx="2" ry="2" />
<text  x="1081.46" y="383.5" >swapper</text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="39.4" y="293" width="5.8" height="15.0" fill="rgb(228,202,49)" rx="2" ry="2" />
<text  x="42.35" y="303.5" ></text>
</g>
<g >
<title>do_idle (19 samples, 9.45%)</title><rect x="1078.5" y="309" width="111.5" height="15.0" fill="rgb(210,206,31)" rx="2" ry="2" />
<text  x="1081.46" y="319.5" >do_idle</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="15.9" y="325" width="5.8" height="15.0" fill="rgb(228,103,40)" rx="2" ry="2" />
<text  x="18.87" y="335.5" ></text>
</g>
<g >
<title>search_binary_handler.part.0 (1 samples, 0.50%)</title><rect x="10.0" y="261" width="5.9" height="15.0" fill="rgb(253,54,50)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="45.2" y="277" width="5.9" height="15.0" fill="rgb(208,28,44)" rx="2" ry="2" />
<text  x="48.22" y="287.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.50%)</title><rect x="10.0" y="149" width="5.9" height="15.0" fill="rgb(248,57,32)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="57.0" y="293" width="5.8" height="15.0" fill="rgb(247,32,13)" rx="2" ry="2" />
<text  x="59.97" y="303.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="86.3" y="341" width="5.9" height="15.0" fill="rgb(244,196,30)" rx="2" ry="2" />
<text  x="89.32" y="351.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.50%)</title><rect x="15.9" y="293" width="5.8" height="15.0" fill="rgb(235,6,50)" rx="2" ry="2" />
<text  x="18.87" y="303.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="109.8" y="293" width="5.9" height="15.0" fill="rgb(221,34,43)" rx="2" ry="2" />
<text  x="112.80" y="303.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="74.6" y="325" width="5.8" height="15.0" fill="rgb(236,209,11)" rx="2" ry="2" />
<text  x="77.58" y="335.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="80.4" y="293" width="5.9" height="15.0" fill="rgb(230,102,51)" rx="2" ry="2" />
<text  x="83.45" y="303.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (1 samples, 0.50%)</title><rect x="1066.7" y="261" width="5.9" height="15.0" fill="rgb(240,86,41)" rx="2" ry="2" />
<text  x="1069.72" y="271.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.50%)</title><rect x="1184.1" y="293" width="5.9" height="15.0" fill="rgb(230,8,0)" rx="2" ry="2" />
<text  x="1187.13" y="303.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="103.9" y="325" width="5.9" height="15.0" fill="rgb(208,95,46)" rx="2" ry="2" />
<text  x="106.93" y="335.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="51.1" y="277" width="5.9" height="15.0" fill="rgb(224,87,12)" rx="2" ry="2" />
<text  x="54.09" y="287.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.50%)</title><rect x="10.0" y="357" width="5.9" height="15.0" fill="rgb(251,161,0)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>perf (163 samples, 81.09%)</title><rect x="121.5" y="373" width="957.0" height="15.0" fill="rgb(234,45,15)" rx="2" ry="2" />
<text  x="124.54" y="383.5" >perf</text>
</g>
<g >
<title>main (162 samples, 80.60%)</title><rect x="121.5" y="325" width="951.1" height="15.0" fill="rgb(222,162,17)" rx="2" ry="2" />
<text  x="124.54" y="335.5" >main</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="57.0" y="229" width="5.8" height="15.0" fill="rgb(254,180,37)" rx="2" ry="2" />
<text  x="59.97" y="239.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="115.7" y="325" width="5.8" height="15.0" fill="rgb(228,82,0)" rx="2" ry="2" />
<text  x="118.67" y="335.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="109.8" y="325" width="5.9" height="15.0" fill="rgb(229,182,52)" rx="2" ry="2" />
<text  x="112.80" y="335.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="92.2" y="293" width="5.9" height="15.0" fill="rgb(236,32,47)" rx="2" ry="2" />
<text  x="95.19" y="303.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (160 samples, 79.60%)</title><rect x="121.5" y="53" width="939.3" height="15.0" fill="rgb(207,50,6)" rx="2" ry="2" />
<text  x="124.54" y="63.5" >__intel_pmu_enable_all.constprop.0</text>
</g>
<g >
<title>do_syscall_64 (160 samples, 79.60%)</title><rect x="121.5" y="229" width="939.3" height="15.0" fill="rgb(228,161,40)" rx="2" ry="2" />
<text  x="124.54" y="239.5" >do_syscall_64</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="115.7" y="357" width="5.8" height="15.0" fill="rgb(234,167,0)" rx="2" ry="2" />
<text  x="118.67" y="367.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="103.9" y="277" width="5.9" height="15.0" fill="rgb(212,192,43)" rx="2" ry="2" />
<text  x="106.93" y="287.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="80.4" y="325" width="5.9" height="15.0" fill="rgb(229,178,1)" rx="2" ry="2" />
<text  x="83.45" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="39.4" y="261" width="5.8" height="15.0" fill="rgb(250,101,33)" rx="2" ry="2" />
<text  x="42.35" y="271.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="92.2" y="277" width="5.9" height="15.0" fill="rgb(205,225,17)" rx="2" ry="2" />
<text  x="95.19" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.50%)</title><rect x="1072.6" y="325" width="5.9" height="15.0" fill="rgb(208,120,17)" rx="2" ry="2" />
<text  x="1075.59" y="335.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="33.5" y="309" width="5.9" height="15.0" fill="rgb(239,56,13)" rx="2" ry="2" />
<text  x="36.48" y="319.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="33.5" y="357" width="5.9" height="15.0" fill="rgb(251,74,12)" rx="2" ry="2" />
<text  x="36.48" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.50%)</title><rect x="1072.6" y="293" width="5.9" height="15.0" fill="rgb(233,47,16)" rx="2" ry="2" />
<text  x="1075.59" y="303.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="51.1" y="229" width="5.9" height="15.0" fill="rgb(219,212,9)" rx="2" ry="2" />
<text  x="54.09" y="239.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="39.4" y="325" width="5.8" height="15.0" fill="rgb(234,206,40)" rx="2" ry="2" />
<text  x="42.35" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="45.2" y="261" width="5.9" height="15.0" fill="rgb(215,84,29)" rx="2" ry="2" />
<text  x="48.22" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="45.2" y="357" width="5.9" height="15.0" fill="rgb(244,136,6)" rx="2" ry="2" />
<text  x="48.22" y="367.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="92.2" y="245" width="5.9" height="15.0" fill="rgb(241,47,53)" rx="2" ry="2" />
<text  x="95.19" y="255.5" ></text>
</g>
<g >
<title>migration/4 (1 samples, 0.50%)</title><rect x="86.3" y="373" width="5.9" height="15.0" fill="rgb(215,51,20)" rx="2" ry="2" />
<text  x="89.32" y="383.5" ></text>
</g>
<g >
<title>migration/12 (1 samples, 0.50%)</title><rect x="33.5" y="373" width="5.9" height="15.0" fill="rgb(206,40,8)" rx="2" ry="2" />
<text  x="36.48" y="383.5" ></text>
</g>
<g >
<title>start_secondary (19 samples, 9.45%)</title><rect x="1078.5" y="341" width="111.5" height="15.0" fill="rgb(252,153,19)" rx="2" ry="2" />
<text  x="1081.46" y="351.5" >start_secondary</text>
</g>
<g >
<title>mmap_region (1 samples, 0.50%)</title><rect x="10.0" y="181" width="5.9" height="15.0" fill="rgb(241,129,16)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="103.9" y="245" width="5.9" height="15.0" fill="rgb(227,76,11)" rx="2" ry="2" />
<text  x="106.93" y="255.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="103.9" y="213" width="5.9" height="15.0" fill="rgb(216,184,52)" rx="2" ry="2" />
<text  x="106.93" y="223.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="57.0" y="309" width="5.8" height="15.0" fill="rgb(247,215,15)" rx="2" ry="2" />
<text  x="59.97" y="319.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="57.0" y="325" width="5.8" height="15.0" fill="rgb(248,58,20)" rx="2" ry="2" />
<text  x="59.97" y="335.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="68.7" y="293" width="5.9" height="15.0" fill="rgb(206,140,27)" rx="2" ry="2" />
<text  x="71.71" y="303.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="51.1" y="293" width="5.9" height="15.0" fill="rgb(232,60,5)" rx="2" ry="2" />
<text  x="54.09" y="303.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="92.2" y="213" width="5.9" height="15.0" fill="rgb(219,203,7)" rx="2" ry="2" />
<text  x="95.19" y="223.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="27.6" y="213" width="5.9" height="15.0" fill="rgb(227,57,10)" rx="2" ry="2" />
<text  x="30.61" y="223.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.50%)</title><rect x="115.7" y="293" width="5.8" height="15.0" fill="rgb(212,184,9)" rx="2" ry="2" />
<text  x="118.67" y="303.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="57.0" y="245" width="5.8" height="15.0" fill="rgb(229,199,12)" rx="2" ry="2" />
<text  x="59.97" y="255.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="98.1" y="341" width="5.8" height="15.0" fill="rgb(232,33,8)" rx="2" ry="2" />
<text  x="101.06" y="351.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="33.5" y="245" width="5.9" height="15.0" fill="rgb(236,96,46)" rx="2" ry="2" />
<text  x="36.48" y="255.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="51.1" y="245" width="5.9" height="15.0" fill="rgb(226,226,15)" rx="2" ry="2" />
<text  x="54.09" y="255.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="68.7" y="261" width="5.9" height="15.0" fill="rgb(241,18,17)" rx="2" ry="2" />
<text  x="71.71" y="271.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (1 samples, 0.50%)</title><rect x="1184.1" y="261" width="5.9" height="15.0" fill="rgb(220,148,38)" rx="2" ry="2" />
<text  x="1187.13" y="271.5" ></text>
</g>
<g >
<title>detach_entity_cfs_rq (1 samples, 0.50%)</title><rect x="15.9" y="229" width="5.8" height="15.0" fill="rgb(231,223,15)" rx="2" ry="2" />
<text  x="18.87" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="27.6" y="293" width="5.9" height="15.0" fill="rgb(217,205,27)" rx="2" ry="2" />
<text  x="30.61" y="303.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="45.2" y="245" width="5.9" height="15.0" fill="rgb(245,120,18)" rx="2" ry="2" />
<text  x="48.22" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.50%)</title><rect x="1066.7" y="245" width="5.9" height="15.0" fill="rgb(231,1,27)" rx="2" ry="2" />
<text  x="1069.72" y="255.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="80.4" y="357" width="5.9" height="15.0" fill="rgb(224,74,12)" rx="2" ry="2" />
<text  x="83.45" y="367.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="103.9" y="229" width="5.9" height="15.0" fill="rgb(232,220,42)" rx="2" ry="2" />
<text  x="106.93" y="239.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (18 samples, 8.96%)</title><rect x="1078.5" y="245" width="105.6" height="15.0" fill="rgb(218,3,8)" rx="2" ry="2" />
<text  x="1081.46" y="255.5" >mwait_idle_w..</text>
</g>
<g >
<title>__open64 (1 samples, 0.50%)</title><rect x="1072.6" y="341" width="5.9" height="15.0" fill="rgb(222,168,24)" rx="2" ry="2" />
<text  x="1075.59" y="351.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="74.6" y="213" width="5.8" height="15.0" fill="rgb(215,203,40)" rx="2" ry="2" />
<text  x="77.58" y="223.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="86.3" y="325" width="5.9" height="15.0" fill="rgb(205,79,42)" rx="2" ry="2" />
<text  x="89.32" y="335.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="45.2" y="213" width="5.9" height="15.0" fill="rgb(244,68,3)" rx="2" ry="2" />
<text  x="48.22" y="223.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (18 samples, 8.96%)</title><rect x="1078.5" y="277" width="105.6" height="15.0" fill="rgb(227,146,13)" rx="2" ry="2" />
<text  x="1081.46" y="287.5" >cpuidle_ente..</text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.50%)</title><rect x="10.0" y="245" width="5.9" height="15.0" fill="rgb(242,61,32)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="68.7" y="213" width="5.9" height="15.0" fill="rgb(250,83,10)" rx="2" ry="2" />
<text  x="71.71" y="223.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="68.7" y="229" width="5.9" height="15.0" fill="rgb(248,108,38)" rx="2" ry="2" />
<text  x="71.71" y="239.5" ></text>
</g>
<g >
<title>generic_exec_single (160 samples, 79.60%)</title><rect x="121.5" y="101" width="939.3" height="15.0" fill="rgb(226,73,38)" rx="2" ry="2" />
<text  x="124.54" y="111.5" >generic_exec_single</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="86.3" y="213" width="5.9" height="15.0" fill="rgb(205,88,3)" rx="2" ry="2" />
<text  x="89.32" y="223.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.50%)</title><rect x="27.6" y="197" width="5.9" height="15.0" fill="rgb(241,1,52)" rx="2" ry="2" />
<text  x="30.61" y="207.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.50%)</title><rect x="115.7" y="309" width="5.8" height="15.0" fill="rgb(230,53,17)" rx="2" ry="2" />
<text  x="118.67" y="319.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="86.3" y="309" width="5.9" height="15.0" fill="rgb(205,173,9)" rx="2" ry="2" />
<text  x="89.32" y="319.5" ></text>
</g>
<g >
<title>migration/0 (1 samples, 0.50%)</title><rect x="15.9" y="373" width="5.8" height="15.0" fill="rgb(227,32,31)" rx="2" ry="2" />
<text  x="18.87" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (162 samples, 80.60%)</title><rect x="121.5" y="341" width="951.1" height="15.0" fill="rgb(245,87,23)" rx="2" ry="2" />
<text  x="124.54" y="351.5" >__libc_start_main</text>
</g>
<g >
<title>migration/30 (1 samples, 0.50%)</title><rect x="80.4" y="373" width="5.9" height="15.0" fill="rgb(209,213,50)" rx="2" ry="2" />
<text  x="83.45" y="383.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="103.9" y="309" width="5.9" height="15.0" fill="rgb(238,78,0)" rx="2" ry="2" />
<text  x="106.93" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.50%)</title><rect x="1066.7" y="181" width="5.9" height="15.0" fill="rgb(212,14,14)" rx="2" ry="2" />
<text  x="1069.72" y="191.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="92.2" y="229" width="5.9" height="15.0" fill="rgb(251,143,52)" rx="2" ry="2" />
<text  x="95.19" y="239.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="62.8" y="309" width="5.9" height="15.0" fill="rgb(207,186,39)" rx="2" ry="2" />
<text  x="65.84" y="319.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.50%)</title><rect x="92.2" y="181" width="5.9" height="15.0" fill="rgb(238,42,53)" rx="2" ry="2" />
<text  x="95.19" y="191.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="33.5" y="229" width="5.9" height="15.0" fill="rgb(208,148,8)" rx="2" ry="2" />
<text  x="36.48" y="239.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.50%)</title><rect x="115.7" y="245" width="5.8" height="15.0" fill="rgb(240,144,31)" rx="2" ry="2" />
<text  x="118.67" y="255.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="74.6" y="293" width="5.8" height="15.0" fill="rgb(210,74,44)" rx="2" ry="2" />
<text  x="77.58" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (161 samples, 80.10%)</title><rect x="121.5" y="245" width="945.2" height="15.0" fill="rgb(210,65,47)" rx="2" ry="2" />
<text  x="124.54" y="255.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>cpu_startup_entry (19 samples, 9.45%)</title><rect x="1078.5" y="325" width="111.5" height="15.0" fill="rgb(221,109,34)" rx="2" ry="2" />
<text  x="1081.46" y="335.5" >cpu_startup_e..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="45.2" y="229" width="5.9" height="15.0" fill="rgb(239,55,52)" rx="2" ry="2" />
<text  x="48.22" y="239.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="62.8" y="213" width="5.9" height="15.0" fill="rgb(240,8,18)" rx="2" ry="2" />
<text  x="65.84" y="223.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.50%)</title><rect x="68.7" y="197" width="5.9" height="15.0" fill="rgb(239,95,7)" rx="2" ry="2" />
<text  x="71.71" y="207.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="51.1" y="261" width="5.9" height="15.0" fill="rgb(216,161,31)" rx="2" ry="2" />
<text  x="54.09" y="271.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="21.7" y="309" width="5.9" height="15.0" fill="rgb(242,75,25)" rx="2" ry="2" />
<text  x="24.74" y="319.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.50%)</title><rect x="1072.6" y="245" width="5.9" height="15.0" fill="rgb(226,59,48)" rx="2" ry="2" />
<text  x="1075.59" y="255.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="103.9" y="341" width="5.9" height="15.0" fill="rgb(210,181,45)" rx="2" ry="2" />
<text  x="106.93" y="351.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="39.4" y="229" width="5.8" height="15.0" fill="rgb(228,122,14)" rx="2" ry="2" />
<text  x="42.35" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="21.7" y="293" width="5.9" height="15.0" fill="rgb(215,7,34)" rx="2" ry="2" />
<text  x="24.74" y="303.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.50%)</title><rect x="10.0" y="165" width="5.9" height="15.0" fill="rgb(221,17,54)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="98.1" y="293" width="5.8" height="15.0" fill="rgb(208,184,9)" rx="2" ry="2" />
<text  x="101.06" y="303.5" ></text>
</g>
<g >
<title>migration/15 (1 samples, 0.50%)</title><rect x="51.1" y="373" width="5.9" height="15.0" fill="rgb(229,16,7)" rx="2" ry="2" />
<text  x="54.09" y="383.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.50%)</title><rect x="39.4" y="197" width="5.8" height="15.0" fill="rgb(226,165,2)" rx="2" ry="2" />
<text  x="42.35" y="207.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.50%)</title><rect x="15.9" y="309" width="5.8" height="15.0" fill="rgb(224,188,45)" rx="2" ry="2" />
<text  x="18.87" y="319.5" ></text>
</g>
<g >
<title>native_write_msr (160 samples, 79.60%)</title><rect x="121.5" y="37" width="939.3" height="15.0" fill="rgb(228,56,27)" rx="2" ry="2" />
<text  x="124.54" y="47.5" >native_write_msr</text>
</g>
<g >
<title>move_queued_task (1 samples, 0.50%)</title><rect x="15.9" y="277" width="5.8" height="15.0" fill="rgb(252,111,30)" rx="2" ry="2" />
<text  x="18.87" y="287.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="51.1" y="309" width="5.9" height="15.0" fill="rgb(248,67,30)" rx="2" ry="2" />
<text  x="54.09" y="319.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (160 samples, 79.60%)</title><rect x="121.5" y="149" width="939.3" height="15.0" fill="rgb(251,89,36)" rx="2" ry="2" />
<text  x="124.54" y="159.5" >perf_event_for_each_child</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="86.3" y="261" width="5.9" height="15.0" fill="rgb(205,57,23)" rx="2" ry="2" />
<text  x="89.32" y="271.5" ></text>
</g>
<g >
<title>migration/6 (1 samples, 0.50%)</title><rect x="98.1" y="373" width="5.8" height="15.0" fill="rgb(248,161,37)" rx="2" ry="2" />
<text  x="101.06" y="383.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="62.8" y="261" width="5.9" height="15.0" fill="rgb(207,78,3)" rx="2" ry="2" />
<text  x="65.84" y="271.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="86.3" y="293" width="5.9" height="15.0" fill="rgb(246,33,37)" rx="2" ry="2" />
<text  x="89.32" y="303.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="33.5" y="213" width="5.9" height="15.0" fill="rgb(231,82,13)" rx="2" ry="2" />
<text  x="36.48" y="223.5" ></text>
</g>
<g >
<title>evlist__enable (162 samples, 80.60%)</title><rect x="121.5" y="277" width="951.1" height="15.0" fill="rgb(242,18,42)" rx="2" ry="2" />
<text  x="124.54" y="287.5" >evlist__enable</text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="98.1" y="325" width="5.8" height="15.0" fill="rgb(243,209,12)" rx="2" ry="2" />
<text  x="101.06" y="335.5" ></text>
</g>
<g >
<title>ksys_ioctl (160 samples, 79.60%)</title><rect x="121.5" y="197" width="939.3" height="15.0" fill="rgb(250,156,31)" rx="2" ry="2" />
<text  x="124.54" y="207.5" >ksys_ioctl</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="33.5" y="261" width="5.9" height="15.0" fill="rgb(228,179,40)" rx="2" ry="2" />
<text  x="36.48" y="271.5" ></text>
</g>
<g >
<title>run_builtin (162 samples, 80.60%)</title><rect x="121.5" y="309" width="951.1" height="15.0" fill="rgb(207,50,31)" rx="2" ry="2" />
<text  x="124.54" y="319.5" >run_builtin</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="39.4" y="213" width="5.8" height="15.0" fill="rgb(254,33,23)" rx="2" ry="2" />
<text  x="42.35" y="223.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="21.7" y="325" width="5.9" height="15.0" fill="rgb(232,70,13)" rx="2" ry="2" />
<text  x="24.74" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="62.8" y="357" width="5.9" height="15.0" fill="rgb(208,119,52)" rx="2" ry="2" />
<text  x="65.84" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="80.4" y="261" width="5.9" height="15.0" fill="rgb(234,48,20)" rx="2" ry="2" />
<text  x="83.45" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.50%)</title><rect x="1072.6" y="309" width="5.9" height="15.0" fill="rgb(251,201,34)" rx="2" ry="2" />
<text  x="1075.59" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="33.5" y="341" width="5.9" height="15.0" fill="rgb(223,185,4)" rx="2" ry="2" />
<text  x="36.48" y="351.5" ></text>
</g>
<g >
<title>[vmlinux] (19 samples, 9.45%)</title><rect x="1078.5" y="357" width="111.5" height="15.0" fill="rgb(231,131,49)" rx="2" ry="2" />
<text  x="1081.46" y="367.5" >[vmlinux]</text>
</g>
<g >
<title>do_execve (1 samples, 0.50%)</title><rect x="10.0" y="293" width="5.9" height="15.0" fill="rgb(220,2,30)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.50%)</title><rect x="1072.6" y="277" width="5.9" height="15.0" fill="rgb(237,120,19)" rx="2" ry="2" />
<text  x="1075.59" y="287.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="21.7" y="277" width="5.9" height="15.0" fill="rgb(227,139,4)" rx="2" ry="2" />
<text  x="24.74" y="287.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="68.7" y="325" width="5.9" height="15.0" fill="rgb(231,97,16)" rx="2" ry="2" />
<text  x="71.71" y="335.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="33.5" y="293" width="5.9" height="15.0" fill="rgb(243,170,17)" rx="2" ry="2" />
<text  x="36.48" y="303.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="80.4" y="213" width="5.9" height="15.0" fill="rgb(254,109,3)" rx="2" ry="2" />
<text  x="83.45" y="223.5" ></text>
</g>
<g >
<title>event_function (160 samples, 79.60%)</title><rect x="121.5" y="69" width="939.3" height="15.0" fill="rgb(248,54,35)" rx="2" ry="2" />
<text  x="124.54" y="79.5" >event_function</text>
</g>
<g >
<title>tick_nohz_get_sleep_length (1 samples, 0.50%)</title><rect x="1184.1" y="277" width="5.9" height="15.0" fill="rgb(206,168,23)" rx="2" ry="2" />
<text  x="1187.13" y="287.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="62.8" y="325" width="5.9" height="15.0" fill="rgb(241,228,14)" rx="2" ry="2" />
<text  x="65.84" y="335.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="98.1" y="213" width="5.8" height="15.0" fill="rgb(213,222,47)" rx="2" ry="2" />
<text  x="101.06" y="223.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="62.8" y="229" width="5.9" height="15.0" fill="rgb(226,25,36)" rx="2" ry="2" />
<text  x="65.84" y="239.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.50%)</title><rect x="1060.8" y="229" width="5.9" height="15.0" fill="rgb(209,65,9)" rx="2" ry="2" />
<text  x="1063.85" y="239.5" ></text>
</g>
<g >
<title>cpumask_next_and (1 samples, 0.50%)</title><rect x="92.2" y="197" width="5.9" height="15.0" fill="rgb(207,150,38)" rx="2" ry="2" />
<text  x="95.19" y="207.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.50%)</title><rect x="51.1" y="197" width="5.9" height="15.0" fill="rgb(231,132,39)" rx="2" ry="2" />
<text  x="54.09" y="207.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="109.8" y="357" width="5.9" height="15.0" fill="rgb(229,171,44)" rx="2" ry="2" />
<text  x="112.80" y="367.5" ></text>
</g>
<g >
<title>all (201 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(233,9,54)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="27.6" y="341" width="5.9" height="15.0" fill="rgb(222,218,46)" rx="2" ry="2" />
<text  x="30.61" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="92.2" y="357" width="5.9" height="15.0" fill="rgb(238,154,30)" rx="2" ry="2" />
<text  x="95.19" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="109.8" y="309" width="5.9" height="15.0" fill="rgb(238,181,54)" rx="2" ry="2" />
<text  x="112.80" y="319.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="27.6" y="309" width="5.9" height="15.0" fill="rgb(205,105,7)" rx="2" ry="2" />
<text  x="30.61" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="57.0" y="341" width="5.8" height="15.0" fill="rgb(236,145,6)" rx="2" ry="2" />
<text  x="59.97" y="351.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="39.4" y="309" width="5.8" height="15.0" fill="rgb(209,164,11)" rx="2" ry="2" />
<text  x="42.35" y="319.5" ></text>
</g>
<g >
<title>sched_setaffinity (1 samples, 0.50%)</title><rect x="1066.7" y="197" width="5.9" height="15.0" fill="rgb(221,144,0)" rx="2" ry="2" />
<text  x="1069.72" y="207.5" ></text>
</g>
<g >
<title>do_dentry_open (1 samples, 0.50%)</title><rect x="1072.6" y="229" width="5.9" height="15.0" fill="rgb(247,110,18)" rx="2" ry="2" />
<text  x="1075.59" y="239.5" ></text>
</g>
<g >
<title>migration/10 (1 samples, 0.50%)</title><rect x="21.7" y="373" width="5.9" height="15.0" fill="rgb(227,138,30)" rx="2" ry="2" />
<text  x="24.74" y="383.5" ></text>
</g>
<g >
<title>cpuidle_enter (18 samples, 8.96%)</title><rect x="1078.5" y="293" width="105.6" height="15.0" fill="rgb(215,103,8)" rx="2" ry="2" />
<text  x="1081.46" y="303.5" >cpuidle_enter</text>
</g>
<g >
<title>migrate_task_rq_fair (1 samples, 0.50%)</title><rect x="15.9" y="245" width="5.8" height="15.0" fill="rgb(210,149,20)" rx="2" ry="2" />
<text  x="18.87" y="255.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="115.7" y="341" width="5.8" height="15.0" fill="rgb(214,41,40)" rx="2" ry="2" />
<text  x="118.67" y="351.5" ></text>
</g>
<g >
<title>migration/2 (1 samples, 0.50%)</title><rect x="74.6" y="373" width="5.8" height="15.0" fill="rgb(251,87,27)" rx="2" ry="2" />
<text  x="77.58" y="383.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="21.7" y="341" width="5.9" height="15.0" fill="rgb(220,26,2)" rx="2" ry="2" />
<text  x="24.74" y="351.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.50%)</title><rect x="1072.6" y="213" width="5.9" height="15.0" fill="rgb(216,13,32)" rx="2" ry="2" />
<text  x="1075.59" y="223.5" ></text>
</g>
<g >
<title>[unknown] (163 samples, 81.09%)</title><rect x="121.5" y="357" width="957.0" height="15.0" fill="rgb(229,85,40)" rx="2" ry="2" />
<text  x="124.54" y="367.5" >[unknown]</text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="109.8" y="261" width="5.9" height="15.0" fill="rgb(236,215,31)" rx="2" ry="2" />
<text  x="112.80" y="271.5" ></text>
</g>
<g >
<title>migration/19 (1 samples, 0.50%)</title><rect x="68.7" y="373" width="5.9" height="15.0" fill="rgb(248,93,38)" rx="2" ry="2" />
<text  x="71.71" y="383.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="74.6" y="309" width="5.8" height="15.0" fill="rgb(209,13,23)" rx="2" ry="2" />
<text  x="77.58" y="319.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="45.2" y="293" width="5.9" height="15.0" fill="rgb(228,113,26)" rx="2" ry="2" />
<text  x="48.22" y="303.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="74.6" y="261" width="5.8" height="15.0" fill="rgb(233,155,47)" rx="2" ry="2" />
<text  x="77.58" y="271.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="57.0" y="261" width="5.8" height="15.0" fill="rgb(219,96,48)" rx="2" ry="2" />
<text  x="59.97" y="271.5" ></text>
</g>
<g >
<title>lobsters (1 samples, 0.50%)</title><rect x="10.0" y="373" width="5.9" height="15.0" fill="rgb(213,203,36)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="51.1" y="341" width="5.9" height="15.0" fill="rgb(220,116,41)" rx="2" ry="2" />
<text  x="54.09" y="351.5" ></text>
</g>
<g >
<title>migration/7 (1 samples, 0.50%)</title><rect x="103.9" y="373" width="5.9" height="15.0" fill="rgb(212,119,14)" rx="2" ry="2" />
<text  x="106.93" y="383.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="103.9" y="261" width="5.9" height="15.0" fill="rgb(210,60,42)" rx="2" ry="2" />
<text  x="106.93" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="57.0" y="357" width="5.8" height="15.0" fill="rgb(241,99,32)" rx="2" ry="2" />
<text  x="59.97" y="367.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="92.2" y="341" width="5.9" height="15.0" fill="rgb(244,59,18)" rx="2" ry="2" />
<text  x="95.19" y="351.5" ></text>
</g>
<g >
<title>event_function_call (160 samples, 79.60%)</title><rect x="121.5" y="133" width="939.3" height="15.0" fill="rgb(249,216,34)" rx="2" ry="2" />
<text  x="124.54" y="143.5" >event_function_call</text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.50%)</title><rect x="10.0" y="341" width="5.9" height="15.0" fill="rgb(223,161,1)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="27.6" y="229" width="5.9" height="15.0" fill="rgb(219,182,52)" rx="2" ry="2" />
<text  x="30.61" y="239.5" ></text>
</g>
<g >
<title>migration/17 (1 samples, 0.50%)</title><rect x="57.0" y="373" width="5.8" height="15.0" fill="rgb(231,104,22)" rx="2" ry="2" />
<text  x="59.97" y="383.5" ></text>
</g>
<g >
<title>perf_ioctl (160 samples, 79.60%)</title><rect x="121.5" y="181" width="939.3" height="15.0" fill="rgb(224,95,20)" rx="2" ry="2" />
<text  x="124.54" y="191.5" >perf_ioctl</text>
</g>
<g >
<title>set_task_cpu (1 samples, 0.50%)</title><rect x="15.9" y="261" width="5.8" height="15.0" fill="rgb(230,169,37)" rx="2" ry="2" />
<text  x="18.87" y="271.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="33.5" y="325" width="5.9" height="15.0" fill="rgb(210,161,1)" rx="2" ry="2" />
<text  x="36.48" y="335.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="45.2" y="341" width="5.9" height="15.0" fill="rgb(242,125,4)" rx="2" ry="2" />
<text  x="48.22" y="351.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="74.6" y="277" width="5.8" height="15.0" fill="rgb(222,136,30)" rx="2" ry="2" />
<text  x="77.58" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="57.0" y="213" width="5.8" height="15.0" fill="rgb(206,135,27)" rx="2" ry="2" />
<text  x="59.97" y="223.5" ></text>
</g>
<g >
<title>elf_map (1 samples, 0.50%)</title><rect x="10.0" y="229" width="5.9" height="15.0" fill="rgb(244,144,18)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="51.1" y="357" width="5.9" height="15.0" fill="rgb(237,172,34)" rx="2" ry="2" />
<text  x="54.09" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="98.1" y="309" width="5.8" height="15.0" fill="rgb(221,45,26)" rx="2" ry="2" />
<text  x="101.06" y="319.5" ></text>
</g>
<g >
<title>migration/8 (1 samples, 0.50%)</title><rect x="109.8" y="373" width="5.9" height="15.0" fill="rgb(247,78,8)" rx="2" ry="2" />
<text  x="112.80" y="383.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="27.6" y="261" width="5.9" height="15.0" fill="rgb(249,223,20)" rx="2" ry="2" />
<text  x="30.61" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="21.7" y="357" width="5.9" height="15.0" fill="rgb(234,72,51)" rx="2" ry="2" />
<text  x="24.74" y="367.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="86.3" y="277" width="5.9" height="15.0" fill="rgb(214,200,27)" rx="2" ry="2" />
<text  x="89.32" y="287.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="39.4" y="277" width="5.8" height="15.0" fill="rgb(215,88,4)" rx="2" ry="2" />
<text  x="42.35" y="287.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="62.8" y="293" width="5.9" height="15.0" fill="rgb(246,72,9)" rx="2" ry="2" />
<text  x="65.84" y="303.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="80.4" y="309" width="5.9" height="15.0" fill="rgb(241,131,30)" rx="2" ry="2" />
<text  x="83.45" y="319.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="27.6" y="277" width="5.9" height="15.0" fill="rgb(248,55,54)" rx="2" ry="2" />
<text  x="30.61" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.50%)</title><rect x="10.0" y="325" width="5.9" height="15.0" fill="rgb(205,187,16)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>remote_function (160 samples, 79.60%)</title><rect x="121.5" y="85" width="939.3" height="15.0" fill="rgb(232,68,35)" rx="2" ry="2" />
<text  x="124.54" y="95.5" >remote_function</text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (1 samples, 0.50%)</title><rect x="1066.7" y="213" width="5.9" height="15.0" fill="rgb(213,173,29)" rx="2" ry="2" />
<text  x="1069.72" y="223.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="62.8" y="245" width="5.9" height="15.0" fill="rgb(234,209,2)" rx="2" ry="2" />
<text  x="65.84" y="255.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.50%)</title><rect x="10.0" y="213" width="5.9" height="15.0" fill="rgb(212,185,52)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="80.4" y="245" width="5.9" height="15.0" fill="rgb(220,38,9)" rx="2" ry="2" />
<text  x="83.45" y="255.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="68.7" y="309" width="5.9" height="15.0" fill="rgb(214,184,25)" rx="2" ry="2" />
<text  x="71.71" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="86.3" y="229" width="5.9" height="15.0" fill="rgb(231,212,20)" rx="2" ry="2" />
<text  x="89.32" y="239.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.50%)</title><rect x="115.7" y="277" width="5.8" height="15.0" fill="rgb(217,188,21)" rx="2" ry="2" />
<text  x="118.67" y="287.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="92.2" y="261" width="5.9" height="15.0" fill="rgb(239,157,26)" rx="2" ry="2" />
<text  x="95.19" y="271.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="109.8" y="245" width="5.9" height="15.0" fill="rgb(243,26,43)" rx="2" ry="2" />
<text  x="112.80" y="255.5" ></text>
</g>
<g >
<title>_perf_ioctl (160 samples, 79.60%)</title><rect x="121.5" y="165" width="939.3" height="15.0" fill="rgb(240,40,13)" rx="2" ry="2" />
<text  x="124.54" y="175.5" >_perf_ioctl</text>
</g>
<g >
<title>migration/11 (1 samples, 0.50%)</title><rect x="27.6" y="373" width="5.9" height="15.0" fill="rgb(236,144,52)" rx="2" ry="2" />
<text  x="30.61" y="383.5" ></text>
</g>
<g >
<title>migration/18 (1 samples, 0.50%)</title><rect x="62.8" y="373" width="5.9" height="15.0" fill="rgb(218,216,24)" rx="2" ry="2" />
<text  x="65.84" y="383.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="39.4" y="341" width="5.8" height="15.0" fill="rgb(216,52,8)" rx="2" ry="2" />
<text  x="42.35" y="351.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.50%)</title><rect x="10.0" y="197" width="5.9" height="15.0" fill="rgb(232,194,40)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="15.9" y="341" width="5.8" height="15.0" fill="rgb(212,208,24)" rx="2" ry="2" />
<text  x="18.87" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (160 samples, 79.60%)</title><rect x="121.5" y="213" width="939.3" height="15.0" fill="rgb(210,7,2)" rx="2" ry="2" />
<text  x="124.54" y="223.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="68.7" y="341" width="5.9" height="15.0" fill="rgb(252,75,28)" rx="2" ry="2" />
<text  x="71.71" y="351.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="92.2" y="325" width="5.9" height="15.0" fill="rgb(250,205,9)" rx="2" ry="2" />
<text  x="95.19" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single (160 samples, 79.60%)</title><rect x="121.5" y="117" width="939.3" height="15.0" fill="rgb(232,82,10)" rx="2" ry="2" />
<text  x="124.54" y="127.5" >smp_call_function_single</text>
</g>
<g >
<title>migration/14 (1 samples, 0.50%)</title><rect x="45.2" y="373" width="5.9" height="15.0" fill="rgb(210,138,24)" rx="2" ry="2" />
<text  x="48.22" y="383.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="74.6" y="229" width="5.8" height="15.0" fill="rgb(231,216,53)" rx="2" ry="2" />
<text  x="77.58" y="239.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="109.8" y="213" width="5.9" height="15.0" fill="rgb(220,52,52)" rx="2" ry="2" />
<text  x="112.80" y="223.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="51.1" y="325" width="5.9" height="15.0" fill="rgb(249,128,24)" rx="2" ry="2" />
<text  x="54.09" y="335.5" ></text>
</g>
<g >
<title>__GI___ioctl (161 samples, 80.10%)</title><rect x="121.5" y="261" width="945.2" height="15.0" fill="rgb(252,61,39)" rx="2" ry="2" />
<text  x="124.54" y="271.5" >__GI___ioctl</text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="98.1" y="277" width="5.8" height="15.0" fill="rgb(222,22,53)" rx="2" ry="2" />
<text  x="101.06" y="287.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="109.8" y="229" width="5.9" height="15.0" fill="rgb(223,66,15)" rx="2" ry="2" />
<text  x="112.80" y="239.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="68.7" y="277" width="5.9" height="15.0" fill="rgb(253,119,18)" rx="2" ry="2" />
<text  x="71.71" y="287.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="92.2" y="309" width="5.9" height="15.0" fill="rgb(210,149,13)" rx="2" ry="2" />
<text  x="95.19" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="80.4" y="229" width="5.9" height="15.0" fill="rgb(249,165,19)" rx="2" ry="2" />
<text  x="83.45" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.50%)</title><rect x="103.9" y="293" width="5.9" height="15.0" fill="rgb(213,197,34)" rx="2" ry="2" />
<text  x="106.93" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.50%)</title><rect x="1066.7" y="229" width="5.9" height="15.0" fill="rgb(226,181,44)" rx="2" ry="2" />
<text  x="1069.72" y="239.5" ></text>
</g>
<g >
<title>migration/9 (1 samples, 0.50%)</title><rect x="115.7" y="373" width="5.8" height="15.0" fill="rgb(240,122,0)" rx="2" ry="2" />
<text  x="118.67" y="383.5" ></text>
</g>
<g >
<title>cmd_record (162 samples, 80.60%)</title><rect x="121.5" y="293" width="951.1" height="15.0" fill="rgb(249,113,41)" rx="2" ry="2" />
<text  x="124.54" y="303.5" >cmd_record</text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="109.8" y="341" width="5.9" height="15.0" fill="rgb(245,145,2)" rx="2" ry="2" />
<text  x="112.80" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="39.4" y="357" width="5.8" height="15.0" fill="rgb(248,42,49)" rx="2" ry="2" />
<text  x="42.35" y="367.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="27.6" y="325" width="5.9" height="15.0" fill="rgb(242,115,19)" rx="2" ry="2" />
<text  x="30.61" y="335.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="98.1" y="261" width="5.8" height="15.0" fill="rgb(215,112,20)" rx="2" ry="2" />
<text  x="101.06" y="271.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.50%)</title><rect x="45.2" y="325" width="5.9" height="15.0" fill="rgb(248,157,49)" rx="2" ry="2" />
<text  x="48.22" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="103.9" y="357" width="5.9" height="15.0" fill="rgb(209,68,14)" rx="2" ry="2" />
<text  x="106.93" y="367.5" ></text>
</g>
<g >
<title>newidle_balance (1 samples, 0.50%)</title><rect x="21.7" y="261" width="5.9" height="15.0" fill="rgb(249,37,42)" rx="2" ry="2" />
<text  x="24.74" y="271.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="68.7" y="245" width="5.9" height="15.0" fill="rgb(220,108,27)" rx="2" ry="2" />
<text  x="71.71" y="255.5" ></text>
</g>
<g >
<title>migration/13 (1 samples, 0.50%)</title><rect x="39.4" y="373" width="5.8" height="15.0" fill="rgb(210,204,25)" rx="2" ry="2" />
<text  x="42.35" y="383.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="74.6" y="357" width="5.8" height="15.0" fill="rgb(227,67,51)" rx="2" ry="2" />
<text  x="77.58" y="367.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="98.1" y="245" width="5.8" height="15.0" fill="rgb(220,116,42)" rx="2" ry="2" />
<text  x="101.06" y="255.5" ></text>
</g>
<g >
<title>__do_execve_file (1 samples, 0.50%)</title><rect x="10.0" y="277" width="5.9" height="15.0" fill="rgb(217,123,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.50%)</title><rect x="115.7" y="261" width="5.8" height="15.0" fill="rgb(243,14,31)" rx="2" ry="2" />
<text  x="118.67" y="271.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.50%)</title><rect x="1072.6" y="261" width="5.9" height="15.0" fill="rgb(241,17,23)" rx="2" ry="2" />
<text  x="1075.59" y="271.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="80.4" y="341" width="5.9" height="15.0" fill="rgb(253,215,0)" rx="2" ry="2" />
<text  x="83.45" y="351.5" ></text>
</g>
<g >
<title>intel_idle (18 samples, 8.96%)</title><rect x="1078.5" y="261" width="105.6" height="15.0" fill="rgb(239,5,11)" rx="2" ry="2" />
<text  x="1081.46" y="271.5" >intel_idle</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="27.6" y="357" width="5.9" height="15.0" fill="rgb(212,169,19)" rx="2" ry="2" />
<text  x="30.61" y="367.5" ></text>
</g>
<g >
<title>migration/5 (1 samples, 0.50%)</title><rect x="92.2" y="373" width="5.9" height="15.0" fill="rgb(224,222,18)" rx="2" ry="2" />
<text  x="95.19" y="383.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="74.6" y="245" width="5.8" height="15.0" fill="rgb(235,24,2)" rx="2" ry="2" />
<text  x="77.58" y="255.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="109.8" y="277" width="5.9" height="15.0" fill="rgb(233,96,10)" rx="2" ry="2" />
<text  x="112.80" y="287.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="62.8" y="341" width="5.9" height="15.0" fill="rgb(234,13,30)" rx="2" ry="2" />
<text  x="65.84" y="351.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="80.4" y="277" width="5.9" height="15.0" fill="rgb(233,83,29)" rx="2" ry="2" />
<text  x="83.45" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.50%)</title><rect x="10.0" y="309" width="5.9" height="15.0" fill="rgb(243,12,13)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>balance_fair (1 samples, 0.50%)</title><rect x="62.8" y="277" width="5.9" height="15.0" fill="rgb(235,204,30)" rx="2" ry="2" />
<text  x="65.84" y="287.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.50%)</title><rect x="74.6" y="341" width="5.8" height="15.0" fill="rgb(226,30,37)" rx="2" ry="2" />
<text  x="77.58" y="351.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.50%)</title><rect x="45.2" y="309" width="5.9" height="15.0" fill="rgb(242,24,8)" rx="2" ry="2" />
<text  x="48.22" y="319.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="86.3" y="357" width="5.9" height="15.0" fill="rgb(249,193,10)" rx="2" ry="2" />
<text  x="89.32" y="367.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="27.6" y="245" width="5.9" height="15.0" fill="rgb(217,34,6)" rx="2" ry="2" />
<text  x="30.61" y="255.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.50%)</title><rect x="51.1" y="213" width="5.9" height="15.0" fill="rgb(252,188,44)" rx="2" ry="2" />
<text  x="54.09" y="223.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.50%)</title><rect x="15.9" y="357" width="5.8" height="15.0" fill="rgb(247,54,21)" rx="2" ry="2" />
<text  x="18.87" y="367.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.50%)</title><rect x="98.1" y="229" width="5.8" height="15.0" fill="rgb(217,86,17)" rx="2" ry="2" />
<text  x="101.06" y="239.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="86.3" y="245" width="5.9" height="15.0" fill="rgb(242,33,3)" rx="2" ry="2" />
<text  x="89.32" y="255.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.50%)</title><rect x="39.4" y="245" width="5.8" height="15.0" fill="rgb(205,70,7)" rx="2" ry="2" />
<text  x="42.35" y="255.5" ></text>
</g>
</g>
</svg>
