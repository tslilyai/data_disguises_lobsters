<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (9 samples, 0.70%)</title><rect x="0.0780%" y="853" width="0.7020%" height="15" fill="rgb(227,0,7)"/><text x="0.3280%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8580%" y="837" width="0.1560%" height="15" fill="rgb(217,0,24)"/><text x="1.1080%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="1.0140%" y="837" width="0.2340%" height="15" fill="rgb(221,193,54)"/><text x="1.2640%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="1.3261%" y="837" width="0.1560%" height="15" fill="rgb(248,212,6)"/><text x="1.5761%" y="847.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="1.5601%" y="837" width="0.1560%" height="15" fill="rgb(208,68,35)"/><text x="1.8101%" y="847.50"></text></g><g><title>[[stack]] (17 samples, 1.33%)</title><rect x="0.7800%" y="853" width="1.3261%" height="15" fill="rgb(232,128,0)"/><text x="1.0300%" y="863.50"></text></g><g><title>__libc_recv (3 samples, 0.23%)</title><rect x="2.2621%" y="837" width="0.2340%" height="15" fill="rgb(207,160,47)"/><text x="2.5121%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="2.2621%" y="821" width="0.2340%" height="15" fill="rgb(228,23,34)"/><text x="2.5121%" y="831.50"></text></g><g><title>__libc_send (3 samples, 0.23%)</title><rect x="2.4961%" y="837" width="0.2340%" height="15" fill="rgb(218,30,26)"/><text x="2.7461%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="2.4961%" y="821" width="0.2340%" height="15" fill="rgb(220,122,19)"/><text x="2.7461%" y="831.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="2.8081%" y="837" width="0.1560%" height="15" fill="rgb(250,228,42)"/><text x="3.0581%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.39%)</title><rect x="2.9641%" y="837" width="0.3900%" height="15" fill="rgb(240,193,28)"/><text x="3.2141%" y="847.50"></text></g><g><title>decor::helpers::answer_rows (2 samples, 0.16%)</title><rect x="3.3541%" y="837" width="0.1560%" height="15" fill="rgb(216,20,37)"/><text x="3.6041%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.16%)</title><rect x="3.5101%" y="837" width="0.1560%" height="15" fill="rgb(206,188,39)"/><text x="3.7601%" y="847.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.16%)</title><rect x="3.6661%" y="837" width="0.1560%" height="15" fill="rgb(217,207,13)"/><text x="3.9161%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.16%)</title><rect x="3.8222%" y="837" width="0.1560%" height="15" fill="rgb(231,73,38)"/><text x="4.0722%" y="847.50"></text></g><g><title>[anon] (31 samples, 2.42%)</title><rect x="2.1061%" y="853" width="2.4181%" height="15" fill="rgb(225,20,46)"/><text x="2.3561%" y="863.50">[a..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.23%)</title><rect x="4.2902%" y="837" width="0.2340%" height="15" fill="rgb(210,31,41)"/><text x="4.5402%" y="847.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="4.7582%" y="837" width="0.1560%" height="15" fill="rgb(221,200,47)"/><text x="5.0082%" y="847.50"></text></g><g><title>[lobsters] (4 samples, 0.31%)</title><rect x="5.0702%" y="837" width="0.3120%" height="15" fill="rgb(226,26,5)"/><text x="5.3202%" y="847.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.16%)</title><rect x="5.2262%" y="821" width="0.1560%" height="15" fill="rgb(249,33,26)"/><text x="5.4762%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="5.4602%" y="837" width="0.1560%" height="15" fill="rgb(235,183,28)"/><text x="5.7102%" y="847.50"></text></g><g><title>__libc_recv (3 samples, 0.23%)</title><rect x="5.6942%" y="837" width="0.2340%" height="15" fill="rgb(221,5,38)"/><text x="5.9442%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="5.6942%" y="821" width="0.2340%" height="15" fill="rgb(247,18,42)"/><text x="5.9442%" y="831.50"></text></g><g><title>_int_free (5 samples, 0.39%)</title><rect x="5.9282%" y="629" width="0.3900%" height="15" fill="rgb(241,131,45)"/><text x="6.1782%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="6.7863%" y="597" width="0.1560%" height="15" fill="rgb(249,31,29)"/><text x="7.0363%" y="607.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.09%)</title><rect x="5.9282%" y="677" width="1.0920%" height="15" fill="rgb(225,111,53)"/><text x="6.1782%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (14 samples, 1.09%)</title><rect x="5.9282%" y="661" width="1.0920%" height="15" fill="rgb(238,160,17)"/><text x="6.1782%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (14 samples, 1.09%)</title><rect x="5.9282%" y="645" width="1.0920%" height="15" fill="rgb(214,148,48)"/><text x="6.1782%" y="655.50"></text></g><g><title>mysql_common::value::read_text_values (9 samples, 0.70%)</title><rect x="6.3183%" y="629" width="0.7020%" height="15" fill="rgb(232,36,49)"/><text x="6.5683%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.39%)</title><rect x="6.6303%" y="613" width="0.3900%" height="15" fill="rgb(209,103,24)"/><text x="6.8803%" y="623.50"></text></g><g><title>__libc_start_main (19 samples, 1.48%)</title><rect x="5.9282%" y="837" width="1.4821%" height="15" fill="rgb(229,88,8)"/><text x="6.1782%" y="847.50"></text></g><g><title>main (19 samples, 1.48%)</title><rect x="5.9282%" y="821" width="1.4821%" height="15" fill="rgb(213,181,19)"/><text x="6.1782%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (19 samples, 1.48%)</title><rect x="5.9282%" y="805" width="1.4821%" height="15" fill="rgb(254,191,54)"/><text x="6.1782%" y="815.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 1.48%)</title><rect x="5.9282%" y="789" width="1.4821%" height="15" fill="rgb(241,83,37)"/><text x="6.1782%" y="799.50"></text></g><g><title>std::panicking::try (19 samples, 1.48%)</title><rect x="5.9282%" y="773" width="1.4821%" height="15" fill="rgb(233,36,39)"/><text x="6.1782%" y="783.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 1.48%)</title><rect x="5.9282%" y="757" width="1.4821%" height="15" fill="rgb(226,3,54)"/><text x="6.1782%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19 samples, 1.48%)</title><rect x="5.9282%" y="741" width="1.4821%" height="15" fill="rgb(245,192,40)"/><text x="6.1782%" y="751.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (19 samples, 1.48%)</title><rect x="5.9282%" y="725" width="1.4821%" height="15" fill="rgb(238,167,29)"/><text x="6.1782%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 1.48%)</title><rect x="5.9282%" y="709" width="1.4821%" height="15" fill="rgb(232,182,51)"/><text x="6.1782%" y="719.50"></text></g><g><title>lobsters::main (19 samples, 1.48%)</title><rect x="5.9282%" y="693" width="1.4821%" height="15" fill="rgb(231,60,39)"/><text x="6.1782%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.23%)</title><rect x="7.1763%" y="677" width="0.2340%" height="15" fill="rgb(208,69,12)"/><text x="7.4263%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.23%)</title><rect x="7.1763%" y="661" width="0.2340%" height="15" fill="rgb(235,93,37)"/><text x="7.4263%" y="671.50"></text></g><g><title>mysql_common::packets::column_from_payload (3 samples, 0.23%)</title><rect x="7.1763%" y="645" width="0.2340%" height="15" fill="rgb(213,116,39)"/><text x="7.4263%" y="655.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (2 samples, 0.16%)</title><rect x="7.2543%" y="629" width="0.1560%" height="15" fill="rgb(222,207,29)"/><text x="7.5043%" y="639.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="7.4103%" y="837" width="0.2340%" height="15" fill="rgb(206,96,30)"/><text x="7.6603%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (3 samples, 0.23%)</title><rect x="7.7223%" y="837" width="0.2340%" height="15" fill="rgb(218,138,4)"/><text x="7.9723%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.16%)</title><rect x="7.9563%" y="837" width="0.1560%" height="15" fill="rgb(250,191,14)"/><text x="8.2063%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.16%)</title><rect x="7.9563%" y="821" width="0.1560%" height="15" fill="rgb(239,60,40)"/><text x="8.2063%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.16%)</title><rect x="7.9563%" y="805" width="0.1560%" height="15" fill="rgb(206,27,48)"/><text x="8.2063%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.16%)</title><rect x="7.9563%" y="789" width="0.1560%" height="15" fill="rgb(225,35,8)"/><text x="8.2063%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.16%)</title><rect x="7.9563%" y="773" width="0.1560%" height="15" fill="rgb(250,213,24)"/><text x="8.2063%" y="783.50"></text></g><g><title>decor::helpers::answer_rows (2 samples, 0.16%)</title><rect x="7.9563%" y="757" width="0.1560%" height="15" fill="rgb(247,123,22)"/><text x="8.2063%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="7.9563%" y="741" width="0.1560%" height="15" fill="rgb(231,138,38)"/><text x="8.2063%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.16%)</title><rect x="7.9563%" y="725" width="0.1560%" height="15" fill="rgb(231,145,46)"/><text x="8.2063%" y="735.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.16%)</title><rect x="7.9563%" y="709" width="0.1560%" height="15" fill="rgb(251,118,11)"/><text x="8.2063%" y="719.50"></text></g><g><title>mysql_common::value::read_text_values (2 samples, 0.16%)</title><rect x="7.9563%" y="693" width="0.1560%" height="15" fill="rgb(217,147,25)"/><text x="8.2063%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="8.1123%" y="837" width="0.2340%" height="15" fill="rgb(247,81,37)"/><text x="8.3623%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (7 samples, 0.55%)</title><rect x="8.3463%" y="837" width="0.5460%" height="15" fill="rgb(209,12,38)"/><text x="8.5963%" y="847.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (7 samples, 0.55%)</title><rect x="8.3463%" y="821" width="0.5460%" height="15" fill="rgb(227,1,9)"/><text x="8.5963%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (7 samples, 0.55%)</title><rect x="8.3463%" y="805" width="0.5460%" height="15" fill="rgb(248,47,43)"/><text x="8.5963%" y="815.50"></text></g><g><title>decor::helpers::answer_rows (7 samples, 0.55%)</title><rect x="8.3463%" y="789" width="0.5460%" height="15" fill="rgb(221,10,30)"/><text x="8.5963%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.55%)</title><rect x="8.3463%" y="773" width="0.5460%" height="15" fill="rgb(210,229,1)"/><text x="8.5963%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (7 samples, 0.55%)</title><rect x="8.3463%" y="757" width="0.5460%" height="15" fill="rgb(222,148,37)"/><text x="8.5963%" y="767.50"></text></g><g><title>mysql::conn::Conn::next_text (7 samples, 0.55%)</title><rect x="8.3463%" y="741" width="0.5460%" height="15" fill="rgb(234,67,33)"/><text x="8.5963%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (7 samples, 0.55%)</title><rect x="8.3463%" y="725" width="0.5460%" height="15" fill="rgb(247,98,35)"/><text x="8.5963%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.55%)</title><rect x="8.3463%" y="709" width="0.5460%" height="15" fill="rgb(247,138,52)"/><text x="8.5963%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (7 samples, 0.55%)</title><rect x="8.3463%" y="693" width="0.5460%" height="15" fill="rgb(213,79,30)"/><text x="8.5963%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (7 samples, 0.55%)</title><rect x="8.3463%" y="677" width="0.5460%" height="15" fill="rgb(246,177,23)"/><text x="8.5963%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (7 samples, 0.55%)</title><rect x="8.3463%" y="661" width="0.5460%" height="15" fill="rgb(230,62,27)"/><text x="8.5963%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (7 samples, 0.55%)</title><rect x="8.3463%" y="645" width="0.5460%" height="15" fill="rgb(216,154,8)"/><text x="8.5963%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (4 samples, 0.31%)</title><rect x="8.5803%" y="629" width="0.3120%" height="15" fill="rgb(244,35,45)"/><text x="8.8303%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="8.8924%" y="693" width="0.1560%" height="15" fill="rgb(251,115,12)"/><text x="9.1424%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.78%)</title><rect x="8.8924%" y="821" width="0.7800%" height="15" fill="rgb(240,54,50)"/><text x="9.1424%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (10 samples, 0.78%)</title><rect x="8.8924%" y="805" width="0.7800%" height="15" fill="rgb(233,84,52)"/><text x="9.1424%" y="815.50"></text></g><g><title>mysql::conn::Conn::next_text (10 samples, 0.78%)</title><rect x="8.8924%" y="789" width="0.7800%" height="15" fill="rgb(207,117,47)"/><text x="9.1424%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (10 samples, 0.78%)</title><rect x="8.8924%" y="773" width="0.7800%" height="15" fill="rgb(249,43,39)"/><text x="9.1424%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.78%)</title><rect x="8.8924%" y="757" width="0.7800%" height="15" fill="rgb(209,38,44)"/><text x="9.1424%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (10 samples, 0.78%)</title><rect x="8.8924%" y="741" width="0.7800%" height="15" fill="rgb(236,212,23)"/><text x="9.1424%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (10 samples, 0.78%)</title><rect x="8.8924%" y="725" width="0.7800%" height="15" fill="rgb(242,79,21)"/><text x="9.1424%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (10 samples, 0.78%)</title><rect x="8.8924%" y="709" width="0.7800%" height="15" fill="rgb(211,96,35)"/><text x="9.1424%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (8 samples, 0.62%)</title><rect x="9.0484%" y="693" width="0.6240%" height="15" fill="rgb(253,215,40)"/><text x="9.2984%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.16%)</title><rect x="9.5164%" y="677" width="0.1560%" height="15" fill="rgb(211,81,21)"/><text x="9.7664%" y="687.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.16%)</title><rect x="9.6724%" y="821" width="0.1560%" height="15" fill="rgb(208,190,38)"/><text x="9.9224%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="9.8284%" y="709" width="0.1560%" height="15" fill="rgb(235,213,38)"/><text x="10.0784%" y="719.50"></text></g><g><title>lobsters::main (17 samples, 1.33%)</title><rect x="8.8924%" y="837" width="1.3261%" height="15" fill="rgb(237,122,38)"/><text x="9.1424%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (5 samples, 0.39%)</title><rect x="9.8284%" y="821" width="0.3900%" height="15" fill="rgb(244,218,35)"/><text x="10.0784%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (5 samples, 0.39%)</title><rect x="9.8284%" y="805" width="0.3900%" height="15" fill="rgb(240,68,47)"/><text x="10.0784%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.39%)</title><rect x="9.8284%" y="789" width="0.3900%" height="15" fill="rgb(210,16,53)"/><text x="10.0784%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.39%)</title><rect x="9.8284%" y="773" width="0.3900%" height="15" fill="rgb(235,124,12)"/><text x="10.0784%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.39%)</title><rect x="9.8284%" y="757" width="0.3900%" height="15" fill="rgb(224,169,11)"/><text x="10.0784%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (5 samples, 0.39%)</title><rect x="9.8284%" y="741" width="0.3900%" height="15" fill="rgb(250,166,2)"/><text x="10.0784%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.39%)</title><rect x="9.8284%" y="725" width="0.3900%" height="15" fill="rgb(242,216,29)"/><text x="10.0784%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="9.9844%" y="709" width="0.2340%" height="15" fill="rgb(230,116,27)"/><text x="10.2344%" y="719.50"></text></g><g><title>main (4 samples, 0.31%)</title><rect x="10.2184%" y="837" width="0.3120%" height="15" fill="rgb(228,99,48)"/><text x="10.4684%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.31%)</title><rect x="10.2184%" y="821" width="0.3120%" height="15" fill="rgb(253,11,6)"/><text x="10.4684%" y="831.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.31%)</title><rect x="10.2184%" y="805" width="0.3120%" height="15" fill="rgb(247,143,39)"/><text x="10.4684%" y="815.50"></text></g><g><title>std::panicking::try (4 samples, 0.31%)</title><rect x="10.2184%" y="789" width="0.3120%" height="15" fill="rgb(236,97,10)"/><text x="10.4684%" y="799.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.31%)</title><rect x="10.2184%" y="773" width="0.3120%" height="15" fill="rgb(233,208,19)"/><text x="10.4684%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.31%)</title><rect x="10.2184%" y="757" width="0.3120%" height="15" fill="rgb(216,164,2)"/><text x="10.4684%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.31%)</title><rect x="10.2184%" y="741" width="0.3120%" height="15" fill="rgb(220,129,5)"/><text x="10.4684%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.31%)</title><rect x="10.2184%" y="725" width="0.3120%" height="15" fill="rgb(242,17,10)"/><text x="10.4684%" y="735.50"></text></g><g><title>lobsters::main (4 samples, 0.31%)</title><rect x="10.2184%" y="709" width="0.3120%" height="15" fill="rgb(242,107,0)"/><text x="10.4684%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="10.2184%" y="693" width="0.3120%" height="15" fill="rgb(251,28,31)"/><text x="10.4684%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.31%)</title><rect x="10.2184%" y="677" width="0.3120%" height="15" fill="rgb(233,223,10)"/><text x="10.4684%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.31%)</title><rect x="10.2184%" y="661" width="0.3120%" height="15" fill="rgb(215,21,27)"/><text x="10.4684%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.31%)</title><rect x="10.2184%" y="645" width="0.3120%" height="15" fill="rgb(232,23,21)"/><text x="10.4684%" y="655.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.23%)</title><rect x="10.5304%" y="837" width="0.2340%" height="15" fill="rgb(244,5,23)"/><text x="10.7804%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.23%)</title><rect x="10.5304%" y="821" width="0.2340%" height="15" fill="rgb(226,81,46)"/><text x="10.7804%" y="831.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.23%)</title><rect x="10.5304%" y="805" width="0.2340%" height="15" fill="rgb(247,70,30)"/><text x="10.7804%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.23%)</title><rect x="10.5304%" y="789" width="0.2340%" height="15" fill="rgb(212,68,19)"/><text x="10.7804%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (6 samples, 0.47%)</title><rect x="10.9204%" y="837" width="0.4680%" height="15" fill="rgb(240,187,13)"/><text x="11.1704%" y="847.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="11.4665%" y="837" width="0.1560%" height="15" fill="rgb(223,113,26)"/><text x="11.7165%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="11.6225%" y="837" width="0.2340%" height="15" fill="rgb(206,192,2)"/><text x="11.8725%" y="847.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.16%)</title><rect x="12.0125%" y="837" width="0.1560%" height="15" fill="rgb(241,108,4)"/><text x="12.2625%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.23%)</title><rect x="12.3245%" y="837" width="0.2340%" height="15" fill="rgb(247,173,49)"/><text x="12.5745%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.23%)</title><rect x="12.3245%" y="821" width="0.2340%" height="15" fill="rgb(224,114,35)"/><text x="12.5745%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (3 samples, 0.23%)</title><rect x="12.3245%" y="805" width="0.2340%" height="15" fill="rgb(245,159,27)"/><text x="12.5745%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.16%)</title><rect x="12.4025%" y="789" width="0.1560%" height="15" fill="rgb(245,172,44)"/><text x="12.6525%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.16%)</title><rect x="12.5585%" y="661" width="0.1560%" height="15" fill="rgb(236,23,11)"/><text x="12.8085%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.16%)</title><rect x="12.5585%" y="645" width="0.1560%" height="15" fill="rgb(205,117,38)"/><text x="12.8085%" y="655.50"></text></g><g><title>decor::helpers::answer_rows (3 samples, 0.23%)</title><rect x="12.5585%" y="693" width="0.2340%" height="15" fill="rgb(237,72,25)"/><text x="12.8085%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="12.5585%" y="677" width="0.2340%" height="15" fill="rgb(244,70,9)"/><text x="12.8085%" y="687.50"></text></g><g><title>start_thread (5 samples, 0.39%)</title><rect x="12.5585%" y="837" width="0.3900%" height="15" fill="rgb(217,125,39)"/><text x="12.8085%" y="847.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.39%)</title><rect x="12.5585%" y="821" width="0.3900%" height="15" fill="rgb(235,36,10)"/><text x="12.8085%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.39%)</title><rect x="12.5585%" y="805" width="0.3900%" height="15" fill="rgb(251,123,47)"/><text x="12.8085%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.39%)</title><rect x="12.5585%" y="789" width="0.3900%" height="15" fill="rgb(221,13,13)"/><text x="12.8085%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5 samples, 0.39%)</title><rect x="12.5585%" y="773" width="0.3900%" height="15" fill="rgb(238,131,9)"/><text x="12.8085%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.39%)</title><rect x="12.5585%" y="757" width="0.3900%" height="15" fill="rgb(211,50,8)"/><text x="12.8085%" y="767.50"></text></g><g><title>decor::Shim::run_on_tcp (5 samples, 0.39%)</title><rect x="12.5585%" y="741" width="0.3900%" height="15" fill="rgb(245,182,24)"/><text x="12.8085%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (5 samples, 0.39%)</title><rect x="12.5585%" y="725" width="0.3900%" height="15" fill="rgb(242,14,37)"/><text x="12.8085%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (5 samples, 0.39%)</title><rect x="12.5585%" y="709" width="0.3900%" height="15" fill="rgb(246,228,12)"/><text x="12.8085%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.16%)</title><rect x="12.7925%" y="693" width="0.1560%" height="15" fill="rgb(213,55,15)"/><text x="13.0425%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.16%)</title><rect x="12.7925%" y="677" width="0.1560%" height="15" fill="rgb(209,9,3)"/><text x="13.0425%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.16%)</title><rect x="12.7925%" y="661" width="0.1560%" height="15" fill="rgb(230,59,30)"/><text x="13.0425%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="12.7925%" y="645" width="0.1560%" height="15" fill="rgb(209,121,21)"/><text x="13.0425%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="12.7925%" y="629" width="0.1560%" height="15" fill="rgb(220,109,13)"/><text x="13.0425%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="12.7925%" y="613" width="0.1560%" height="15" fill="rgb(232,18,1)"/><text x="13.0425%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="12.7925%" y="597" width="0.1560%" height="15" fill="rgb(215,41,42)"/><text x="13.0425%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="12.7925%" y="581" width="0.1560%" height="15" fill="rgb(224,123,36)"/><text x="13.0425%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="12.7925%" y="565" width="0.1560%" height="15" fill="rgb(240,125,3)"/><text x="13.0425%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="13.2605%" y="629" width="0.1560%" height="15" fill="rgb(205,98,50)"/><text x="13.5105%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.39%)</title><rect x="13.1045%" y="645" width="0.3900%" height="15" fill="rgb(205,185,37)"/><text x="13.3545%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.39%)</title><rect x="13.4945%" y="645" width="0.3900%" height="15" fill="rgb(238,207,15)"/><text x="13.7445%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.31%)</title><rect x="13.5725%" y="629" width="0.3120%" height="15" fill="rgb(213,199,42)"/><text x="13.8225%" y="639.50"></text></g><g><title>_int_free (6 samples, 0.47%)</title><rect x="13.9626%" y="645" width="0.4680%" height="15" fill="rgb(235,201,11)"/><text x="14.2126%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (20 samples, 1.56%)</title><rect x="13.1045%" y="661" width="1.5601%" height="15" fill="rgb(207,46,11)"/><text x="13.3545%" y="671.50"></text></g><g><title>std::io::error::Error::_new (3 samples, 0.23%)</title><rect x="14.4306%" y="645" width="0.2340%" height="15" fill="rgb(241,35,35)"/><text x="14.6806%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.16%)</title><rect x="14.5086%" y="629" width="0.1560%" height="15" fill="rgb(243,32,47)"/><text x="14.7586%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.16%)</title><rect x="14.5086%" y="613" width="0.1560%" height="15" fill="rgb(247,202,23)"/><text x="14.7586%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="14.5086%" y="597" width="0.1560%" height="15" fill="rgb(219,102,11)"/><text x="14.7586%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="14.5086%" y="581" width="0.1560%" height="15" fill="rgb(243,110,44)"/><text x="14.7586%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="14.5086%" y="565" width="0.1560%" height="15" fill="rgb(222,74,54)"/><text x="14.7586%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="14.5086%" y="549" width="0.1560%" height="15" fill="rgb(216,99,12)"/><text x="14.7586%" y="559.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.16%)</title><rect x="14.6646%" y="661" width="0.1560%" height="15" fill="rgb(226,22,26)"/><text x="14.9146%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.95%)</title><rect x="13.1045%" y="709" width="1.9501%" height="15" fill="rgb(217,163,10)"/><text x="13.3545%" y="719.50">&lt;..</text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (25 samples, 1.95%)</title><rect x="13.1045%" y="693" width="1.9501%" height="15" fill="rgb(213,25,53)"/><text x="13.3545%" y="703.50">&lt;..</text></g><g><title>mysql::conn::Conn::next_text (25 samples, 1.95%)</title><rect x="13.1045%" y="677" width="1.9501%" height="15" fill="rgb(252,105,26)"/><text x="13.3545%" y="687.50">m..</text></g><g><title>mysql_common::value::read_text_values (3 samples, 0.23%)</title><rect x="14.8206%" y="661" width="0.2340%" height="15" fill="rgb(220,39,43)"/><text x="15.0706%" y="671.50"></text></g><g><title>mysql_common::value::read_text_value (3 samples, 0.23%)</title><rect x="14.8206%" y="645" width="0.2340%" height="15" fill="rgb(229,68,48)"/><text x="15.0706%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="14.8986%" y="629" width="0.1560%" height="15" fill="rgb(252,8,32)"/><text x="15.1486%" y="639.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.16%)</title><rect x="15.0546%" y="709" width="0.1560%" height="15" fill="rgb(223,20,43)"/><text x="15.3046%" y="719.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.16%)</title><rect x="15.0546%" y="693" width="0.1560%" height="15" fill="rgb(229,81,49)"/><text x="15.3046%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="15.0546%" y="677" width="0.1560%" height="15" fill="rgb(236,28,36)"/><text x="15.3046%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="15.0546%" y="661" width="0.1560%" height="15" fill="rgb(249,185,26)"/><text x="15.3046%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="15.0546%" y="645" width="0.1560%" height="15" fill="rgb(249,174,33)"/><text x="15.3046%" y="655.50"></text></g><g><title>__GI___openat (2 samples, 0.16%)</title><rect x="15.0546%" y="629" width="0.1560%" height="15" fill="rgb(233,201,37)"/><text x="15.3046%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="15.0546%" y="613" width="0.1560%" height="15" fill="rgb(221,78,26)"/><text x="15.3046%" y="623.50"></text></g><g><title>do_syscall_64 (2 samples, 0.16%)</title><rect x="15.0546%" y="597" width="0.1560%" height="15" fill="rgb(250,127,30)"/><text x="15.3046%" y="607.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.16%)</title><rect x="15.0546%" y="581" width="0.1560%" height="15" fill="rgb(230,49,44)"/><text x="15.3046%" y="591.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.16%)</title><rect x="15.0546%" y="565" width="0.1560%" height="15" fill="rgb(229,67,23)"/><text x="15.3046%" y="575.50"></text></g><g><title>do_filp_open (2 samples, 0.16%)</title><rect x="15.0546%" y="549" width="0.1560%" height="15" fill="rgb(249,83,47)"/><text x="15.3046%" y="559.50"></text></g><g><title>path_openat (2 samples, 0.16%)</title><rect x="15.0546%" y="533" width="0.1560%" height="15" fill="rgb(215,43,3)"/><text x="15.3046%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="15.2106%" y="661" width="0.1560%" height="15" fill="rgb(238,154,13)"/><text x="15.4606%" y="671.50"></text></g><g><title>__pthread_disable_asynccancel (3 samples, 0.23%)</title><rect x="15.5226%" y="549" width="0.2340%" height="15" fill="rgb(219,56,2)"/><text x="15.7726%" y="559.50"></text></g><g><title>dst_release (3 samples, 0.23%)</title><rect x="16.3807%" y="421" width="0.2340%" height="15" fill="rgb(233,0,4)"/><text x="16.6307%" y="431.50"></text></g><g><title>__kfree_skb (5 samples, 0.39%)</title><rect x="16.3027%" y="453" width="0.3900%" height="15" fill="rgb(235,30,7)"/><text x="16.5527%" y="463.50"></text></g><g><title>skb_release_head_state (4 samples, 0.31%)</title><rect x="16.3807%" y="437" width="0.3120%" height="15" fill="rgb(250,79,13)"/><text x="16.6307%" y="447.50"></text></g><g><title>ctx_sched_out (4 samples, 0.31%)</title><rect x="18.0967%" y="357" width="0.3120%" height="15" fill="rgb(211,146,34)"/><text x="18.3467%" y="367.50"></text></g><g><title>__perf_event_task_sched_out (7 samples, 0.55%)</title><rect x="17.9407%" y="373" width="0.5460%" height="15" fill="rgb(228,22,38)"/><text x="18.1907%" y="383.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.39%)</title><rect x="18.4867%" y="373" width="0.3900%" height="15" fill="rgb(235,168,5)"/><text x="18.7367%" y="383.50"></text></g><g><title>dequeue_entity (4 samples, 0.31%)</title><rect x="18.5647%" y="357" width="0.3120%" height="15" fill="rgb(221,155,16)"/><text x="18.8147%" y="367.50"></text></g><g><title>update_curr (3 samples, 0.23%)</title><rect x="18.6427%" y="341" width="0.2340%" height="15" fill="rgb(215,215,53)"/><text x="18.8927%" y="351.50"></text></g><g><title>finish_task_switch (9 samples, 0.70%)</title><rect x="18.8768%" y="373" width="0.7020%" height="15" fill="rgb(223,4,10)"/><text x="19.1268%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.31%)</title><rect x="19.2668%" y="357" width="0.3120%" height="15" fill="rgb(234,103,6)"/><text x="19.5168%" y="367.50"></text></g><g><title>_raw_spin_unlock (3 samples, 0.23%)</title><rect x="19.3448%" y="341" width="0.2340%" height="15" fill="rgb(227,97,0)"/><text x="19.5948%" y="351.50"></text></g><g><title>preempt_count_sub (2 samples, 0.16%)</title><rect x="19.4228%" y="325" width="0.1560%" height="15" fill="rgb(234,150,53)"/><text x="19.6728%" y="335.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.31%)</title><rect x="19.5788%" y="373" width="0.3120%" height="15" fill="rgb(228,201,54)"/><text x="19.8288%" y="383.50"></text></g><g><title>newidle_balance (3 samples, 0.23%)</title><rect x="19.6568%" y="357" width="0.2340%" height="15" fill="rgb(222,22,37)"/><text x="19.9068%" y="367.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="19.9688%" y="373" width="0.2340%" height="15" fill="rgb(237,53,32)"/><text x="20.2188%" y="383.50"></text></g><g><title>psi_group_change (3 samples, 0.23%)</title><rect x="19.9688%" y="357" width="0.2340%" height="15" fill="rgb(233,25,53)"/><text x="20.2188%" y="367.50"></text></g><g><title>uclamp_rq_dec_id (4 samples, 0.31%)</title><rect x="20.2028%" y="373" width="0.3120%" height="15" fill="rgb(210,40,34)"/><text x="20.4528%" y="383.50"></text></g><g><title>__schedule (43 samples, 3.35%)</title><rect x="17.7067%" y="389" width="3.3541%" height="15" fill="rgb(241,220,44)"/><text x="17.9567%" y="399.50">__s..</text></g><g><title>update_rq_clock (7 samples, 0.55%)</title><rect x="20.5148%" y="373" width="0.5460%" height="15" fill="rgb(235,28,35)"/><text x="20.7648%" y="383.50"></text></g><g><title>update_irq_load_avg (4 samples, 0.31%)</title><rect x="20.7488%" y="357" width="0.3120%" height="15" fill="rgb(210,56,17)"/><text x="20.9988%" y="367.50"></text></g><g><title>sk_wait_data (55 samples, 4.29%)</title><rect x="16.8487%" y="453" width="4.2902%" height="15" fill="rgb(224,130,29)"/><text x="17.0987%" y="463.50">sk_wa..</text></g><g><title>wait_woken (47 samples, 3.67%)</title><rect x="17.4727%" y="437" width="3.6661%" height="15" fill="rgb(235,212,8)"/><text x="17.7227%" y="447.50">wait..</text></g><g><title>schedule_timeout (47 samples, 3.67%)</title><rect x="17.4727%" y="421" width="3.6661%" height="15" fill="rgb(223,33,50)"/><text x="17.7227%" y="431.50">sche..</text></g><g><title>schedule (46 samples, 3.59%)</title><rect x="17.5507%" y="405" width="3.5881%" height="15" fill="rgb(219,149,13)"/><text x="17.8007%" y="415.50">sche..</text></g><g><title>_copy_to_iter (4 samples, 0.31%)</title><rect x="21.2168%" y="421" width="0.3120%" height="15" fill="rgb(250,156,29)"/><text x="21.4668%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (4 samples, 0.31%)</title><rect x="21.2168%" y="405" width="0.3120%" height="15" fill="rgb(216,193,19)"/><text x="21.4668%" y="415.50"></text></g><g><title>page_fault (2 samples, 0.16%)</title><rect x="21.3729%" y="389" width="0.1560%" height="15" fill="rgb(216,135,14)"/><text x="21.6229%" y="399.50"></text></g><g><title>skb_copy_datagram_iter (8 samples, 0.62%)</title><rect x="21.1388%" y="453" width="0.6240%" height="15" fill="rgb(241,47,5)"/><text x="21.3888%" y="463.50"></text></g><g><title>__skb_datagram_iter (8 samples, 0.62%)</title><rect x="21.1388%" y="437" width="0.6240%" height="15" fill="rgb(233,42,35)"/><text x="21.3888%" y="447.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.23%)</title><rect x="21.5289%" y="421" width="0.2340%" height="15" fill="rgb(231,13,6)"/><text x="21.7789%" y="431.50"></text></g><g><title>__check_object_size (3 samples, 0.23%)</title><rect x="21.5289%" y="405" width="0.2340%" height="15" fill="rgb(207,181,40)"/><text x="21.7789%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (77 samples, 6.01%)</title><rect x="15.8346%" y="517" width="6.0062%" height="15" fill="rgb(254,173,49)"/><text x="16.0846%" y="527.50">__x64_sy..</text></g><g><title>__sys_recvfrom (76 samples, 5.93%)</title><rect x="15.9126%" y="501" width="5.9282%" height="15" fill="rgb(221,1,38)"/><text x="16.1626%" y="511.50">__sys_re..</text></g><g><title>inet_recvmsg (76 samples, 5.93%)</title><rect x="15.9126%" y="485" width="5.9282%" height="15" fill="rgb(206,124,46)"/><text x="16.1626%" y="495.50">inet_rec..</text></g><g><title>tcp_recvmsg (75 samples, 5.85%)</title><rect x="15.9906%" y="469" width="5.8502%" height="15" fill="rgb(249,21,11)"/><text x="16.2406%" y="479.50">tcp_rec..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.16%)</title><rect x="21.8409%" y="517" width="0.1560%" height="15" fill="rgb(222,201,40)"/><text x="22.0909%" y="527.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.16%)</title><rect x="21.8409%" y="501" width="0.1560%" height="15" fill="rgb(235,61,29)"/><text x="22.0909%" y="511.50"></text></g><g><title>do_syscall_64 (81 samples, 6.32%)</title><rect x="15.7566%" y="533" width="6.3183%" height="15" fill="rgb(219,207,3)"/><text x="16.0066%" y="543.50">do_sysca..</text></g><g><title>entry_SYSCALL_64 (89 samples, 6.94%)</title><rect x="15.7566%" y="549" width="6.9423%" height="15" fill="rgb(222,56,46)"/><text x="16.0066%" y="559.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (8 samples, 0.62%)</title><rect x="22.0749%" y="533" width="0.6240%" height="15" fill="rgb(239,76,54)"/><text x="22.3249%" y="543.50"></text></g><g><title>__libc_recv (95 samples, 7.41%)</title><rect x="15.4446%" y="565" width="7.4103%" height="15" fill="rgb(231,124,27)"/><text x="15.6946%" y="575.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (2 samples, 0.16%)</title><rect x="22.6989%" y="549" width="0.1560%" height="15" fill="rgb(249,195,6)"/><text x="22.9489%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (96 samples, 7.49%)</title><rect x="15.4446%" y="645" width="7.4883%" height="15" fill="rgb(237,174,47)"/><text x="15.6946%" y="655.50">&lt;std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (96 samples, 7.49%)</title><rect x="15.4446%" y="629" width="7.4883%" height="15" fill="rgb(206,201,31)"/><text x="15.6946%" y="639.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::read (96 samples, 7.49%)</title><rect x="15.4446%" y="613" width="7.4883%" height="15" fill="rgb(231,57,52)"/><text x="15.6946%" y="623.50">std::sys_c..</text></g><g><title>std::sys::unix::net::Socket::read (96 samples, 7.49%)</title><rect x="15.4446%" y="597" width="7.4883%" height="15" fill="rgb(248,177,22)"/><text x="15.6946%" y="607.50">std::sys::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (96 samples, 7.49%)</title><rect x="15.4446%" y="581" width="7.4883%" height="15" fill="rgb(215,211,37)"/><text x="15.6946%" y="591.50">std::sys::..</text></g><g><title>std::rt::lang_start_internal (128 samples, 9.98%)</title><rect x="13.1045%" y="837" width="9.9844%" height="15" fill="rgb(241,128,51)"/><text x="13.3545%" y="847.50">std::rt::lang_..</text></g><g><title>std::panic::catch_unwind (128 samples, 9.98%)</title><rect x="13.1045%" y="821" width="9.9844%" height="15" fill="rgb(227,165,31)"/><text x="13.3545%" y="831.50">std::panic::ca..</text></g><g><title>std::panicking::try (128 samples, 9.98%)</title><rect x="13.1045%" y="805" width="9.9844%" height="15" fill="rgb(228,167,24)"/><text x="13.3545%" y="815.50">std::panicking..</text></g><g><title>std::panicking::try::do_call (128 samples, 9.98%)</title><rect x="13.1045%" y="789" width="9.9844%" height="15" fill="rgb(228,143,12)"/><text x="13.3545%" y="799.50">std::panicking..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (128 samples, 9.98%)</title><rect x="13.1045%" y="773" width="9.9844%" height="15" fill="rgb(249,149,8)"/><text x="13.3545%" y="783.50">core::ops::fun..</text></g><g><title>std::rt::lang_start::_{{closure}} (128 samples, 9.98%)</title><rect x="13.1045%" y="757" width="9.9844%" height="15" fill="rgb(243,35,44)"/><text x="13.3545%" y="767.50">std::rt::lang_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (128 samples, 9.98%)</title><rect x="13.1045%" y="741" width="9.9844%" height="15" fill="rgb(246,89,9)"/><text x="13.3545%" y="751.50">std::sys_commo..</text></g><g><title>lobsters::main (128 samples, 9.98%)</title><rect x="13.1045%" y="725" width="9.9844%" height="15" fill="rgb(233,213,13)"/><text x="13.3545%" y="735.50">lobsters::main</text></g><g><title>mysql::conn::Conn::_query (101 samples, 7.88%)</title><rect x="15.2106%" y="709" width="7.8783%" height="15" fill="rgb(233,141,41)"/><text x="15.4606%" y="719.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::handle_result_set (101 samples, 7.88%)</title><rect x="15.2106%" y="693" width="7.8783%" height="15" fill="rgb(239,167,4)"/><text x="15.4606%" y="703.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::read_packet (101 samples, 7.88%)</title><rect x="15.2106%" y="677" width="7.8783%" height="15" fill="rgb(209,217,16)"/><text x="15.4606%" y="687.50">mysql::conn..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 7.72%)</title><rect x="15.3666%" y="661" width="7.7223%" height="15" fill="rgb(219,88,35)"/><text x="15.6166%" y="671.50">&lt;mysql_comm..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="22.9329%" y="645" width="0.1560%" height="15" fill="rgb(220,193,23)"/><text x="23.1829%" y="655.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.31%)</title><rect x="23.0889%" y="837" width="0.3120%" height="15" fill="rgb(230,90,52)"/><text x="23.3389%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.31%)</title><rect x="23.0889%" y="821" width="0.3120%" height="15" fill="rgb(252,106,19)"/><text x="23.3389%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.31%)</title><rect x="23.0889%" y="805" width="0.3120%" height="15" fill="rgb(206,74,20)"/><text x="23.3389%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.31%)</title><rect x="23.0889%" y="789" width="0.3120%" height="15" fill="rgb(230,138,44)"/><text x="23.3389%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.31%)</title><rect x="23.0889%" y="773" width="0.3120%" height="15" fill="rgb(235,182,43)"/><text x="23.3389%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (4 samples, 0.31%)</title><rect x="23.0889%" y="757" width="0.3120%" height="15" fill="rgb(242,16,51)"/><text x="23.3389%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.31%)</title><rect x="23.0889%" y="741" width="0.3120%" height="15" fill="rgb(248,9,4)"/><text x="23.3389%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.31%)</title><rect x="23.0889%" y="725" width="0.3120%" height="15" fill="rgb(210,31,22)"/><text x="23.3389%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.23%)</title><rect x="23.1669%" y="709" width="0.2340%" height="15" fill="rgb(239,54,39)"/><text x="23.4169%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.23%)</title><rect x="23.1669%" y="693" width="0.2340%" height="15" fill="rgb(230,99,41)"/><text x="23.4169%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="23.1669%" y="677" width="0.2340%" height="15" fill="rgb(253,106,12)"/><text x="23.4169%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="23.1669%" y="661" width="0.2340%" height="15" fill="rgb(213,46,41)"/><text x="23.4169%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="23.1669%" y="645" width="0.2340%" height="15" fill="rgb(215,133,35)"/><text x="23.4169%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.23%)</title><rect x="23.1669%" y="629" width="0.2340%" height="15" fill="rgb(213,28,5)"/><text x="23.4169%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="23.1669%" y="613" width="0.2340%" height="15" fill="rgb(215,77,49)"/><text x="23.4169%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="23.1669%" y="597" width="0.2340%" height="15" fill="rgb(248,100,22)"/><text x="23.4169%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.23%)</title><rect x="23.5569%" y="693" width="0.2340%" height="15" fill="rgb(208,67,9)"/><text x="23.8069%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="23.6349%" y="677" width="0.1560%" height="15" fill="rgb(219,133,21)"/><text x="23.8849%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.39%)</title><rect x="23.7910%" y="693" width="0.3900%" height="15" fill="rgb(246,46,29)"/><text x="24.0410%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.31%)</title><rect x="23.8690%" y="677" width="0.3120%" height="15" fill="rgb(246,185,52)"/><text x="24.1190%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="24.0250%" y="661" width="0.1560%" height="15" fill="rgb(252,136,11)"/><text x="24.2750%" y="671.50"></text></g><g><title>_int_free (4 samples, 0.31%)</title><rect x="24.1810%" y="693" width="0.3120%" height="15" fill="rgb(219,138,53)"/><text x="24.4310%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (14 samples, 1.09%)</title><rect x="23.4789%" y="709" width="1.0920%" height="15" fill="rgb(211,51,23)"/><text x="23.7289%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="24.5710%" y="693" width="0.1560%" height="15" fill="rgb(247,221,28)"/><text x="24.8210%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="24.5710%" y="677" width="0.1560%" height="15" fill="rgb(251,222,45)"/><text x="24.8210%" y="687.50"></text></g><g><title>[unknown] (262 samples, 20.44%)</title><rect x="4.5242%" y="853" width="20.4368%" height="15" fill="rgb(217,162,53)"/><text x="4.7742%" y="863.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 1.56%)</title><rect x="23.4009%" y="837" width="1.5601%" height="15" fill="rgb(229,93,14)"/><text x="23.6509%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (20 samples, 1.56%)</title><rect x="23.4009%" y="821" width="1.5601%" height="15" fill="rgb(209,67,49)"/><text x="23.6509%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (20 samples, 1.56%)</title><rect x="23.4009%" y="805" width="1.5601%" height="15" fill="rgb(213,87,29)"/><text x="23.6509%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (20 samples, 1.56%)</title><rect x="23.4009%" y="789" width="1.5601%" height="15" fill="rgb(205,151,52)"/><text x="23.6509%" y="799.50"></text></g><g><title>decor::helpers::answer_rows (20 samples, 1.56%)</title><rect x="23.4009%" y="773" width="1.5601%" height="15" fill="rgb(253,215,39)"/><text x="23.6509%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.56%)</title><rect x="23.4009%" y="757" width="1.5601%" height="15" fill="rgb(221,220,41)"/><text x="23.6509%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (20 samples, 1.56%)</title><rect x="23.4009%" y="741" width="1.5601%" height="15" fill="rgb(218,133,21)"/><text x="23.6509%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (20 samples, 1.56%)</title><rect x="23.4009%" y="725" width="1.5601%" height="15" fill="rgb(221,193,43)"/><text x="23.6509%" y="735.50"></text></g><g><title>mysql_common::value::read_text_values (5 samples, 0.39%)</title><rect x="24.5710%" y="709" width="0.3900%" height="15" fill="rgb(240,128,52)"/><text x="24.8210%" y="719.50"></text></g><g><title>mysql_common::value::read_text_value (3 samples, 0.23%)</title><rect x="24.7270%" y="693" width="0.2340%" height="15" fill="rgb(253,114,12)"/><text x="24.9770%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="26.1310%" y="677" width="0.1560%" height="15" fill="rgb(215,223,47)"/><text x="26.3810%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.01%)</title><rect x="26.2871%" y="677" width="1.0140%" height="15" fill="rgb(248,225,23)"/><text x="26.5371%" y="687.50"></text></g><g><title>mysql_common::row::new_row (2 samples, 0.16%)</title><rect x="27.1451%" y="661" width="0.1560%" height="15" fill="rgb(250,108,0)"/><text x="27.3951%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="27.1451%" y="645" width="0.1560%" height="15" fill="rgb(228,208,7)"/><text x="27.3951%" y="655.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.16%)</title><rect x="27.6131%" y="645" width="0.1560%" height="15" fill="rgb(244,45,10)"/><text x="27.8631%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.6131%" y="629" width="0.1560%" height="15" fill="rgb(207,125,25)"/><text x="27.8631%" y="639.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (8 samples, 0.62%)</title><rect x="27.5351%" y="677" width="0.6240%" height="15" fill="rgb(210,195,18)"/><text x="27.7851%" y="687.50"></text></g><g><title>msql_srv::writers::column_definitions (8 samples, 0.62%)</title><rect x="27.5351%" y="661" width="0.6240%" height="15" fill="rgb(249,80,12)"/><text x="27.7851%" y="671.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="27.7691%" y="645" width="0.3900%" height="15" fill="rgb(221,65,9)"/><text x="28.0191%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.23%)</title><rect x="27.9251%" y="629" width="0.2340%" height="15" fill="rgb(235,49,36)"/><text x="28.1751%" y="639.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (3 samples, 0.23%)</title><rect x="28.1591%" y="677" width="0.2340%" height="15" fill="rgb(225,32,20)"/><text x="28.4091%" y="687.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (2 samples, 0.16%)</title><rect x="28.4711%" y="661" width="0.1560%" height="15" fill="rgb(215,141,46)"/><text x="28.7211%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="28.6271%" y="661" width="0.1560%" height="15" fill="rgb(250,160,47)"/><text x="28.8771%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (8 samples, 0.62%)</title><rect x="28.3931%" y="677" width="0.6240%" height="15" fill="rgb(216,222,40)"/><text x="28.6431%" y="687.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="28.7832%" y="661" width="0.2340%" height="15" fill="rgb(234,217,39)"/><text x="29.0332%" y="671.50"></text></g><g><title>decor::helpers::answer_rows (49 samples, 3.82%)</title><rect x="25.3510%" y="693" width="3.8222%" height="15" fill="rgb(207,178,40)"/><text x="25.6010%" y="703.50">deco..</text></g><g><title>mysql_common::row::Row::unwrap (2 samples, 0.16%)</title><rect x="29.0172%" y="677" width="0.1560%" height="15" fill="rgb(221,136,13)"/><text x="29.2672%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="29.0172%" y="661" width="0.1560%" height="15" fill="rgb(249,199,10)"/><text x="29.2672%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.23%)</title><rect x="29.7192%" y="645" width="0.2340%" height="15" fill="rgb(249,222,13)"/><text x="29.9692%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="29.7972%" y="629" width="0.1560%" height="15" fill="rgb(244,185,38)"/><text x="30.0472%" y="639.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="31.2793%" y="437" width="0.1560%" height="15" fill="rgb(236,202,9)"/><text x="31.5293%" y="447.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.23%)</title><rect x="31.5133%" y="421" width="0.2340%" height="15" fill="rgb(250,229,37)"/><text x="31.7633%" y="431.50"></text></g><g><title>_raw_spin_lock_bh (5 samples, 0.39%)</title><rect x="31.7473%" y="421" width="0.3900%" height="15" fill="rgb(206,174,23)"/><text x="31.9973%" y="431.50"></text></g><g><title>preempt_count_add (2 samples, 0.16%)</title><rect x="31.9813%" y="405" width="0.1560%" height="15" fill="rgb(211,33,43)"/><text x="32.2313%" y="415.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.16%)</title><rect x="32.4493%" y="357" width="0.1560%" height="15" fill="rgb(245,58,50)"/><text x="32.6993%" y="367.50"></text></g><g><title>dequeue_entity (2 samples, 0.16%)</title><rect x="32.4493%" y="341" width="0.1560%" height="15" fill="rgb(244,68,36)"/><text x="32.6993%" y="351.50"></text></g><g><title>update_curr (2 samples, 0.16%)</title><rect x="32.4493%" y="325" width="0.1560%" height="15" fill="rgb(232,229,15)"/><text x="32.6993%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.23%)</title><rect x="32.6053%" y="341" width="0.2340%" height="15" fill="rgb(254,30,23)"/><text x="32.8553%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.16%)</title><rect x="32.6833%" y="325" width="0.1560%" height="15" fill="rgb(235,160,14)"/><text x="32.9333%" y="335.50"></text></g><g><title>native_write_msr (2 samples, 0.16%)</title><rect x="32.6833%" y="309" width="0.1560%" height="15" fill="rgb(212,155,44)"/><text x="32.9333%" y="319.50"></text></g><g><title>finish_task_switch (4 samples, 0.31%)</title><rect x="32.6053%" y="357" width="0.3120%" height="15" fill="rgb(226,2,50)"/><text x="32.8553%" y="367.50"></text></g><g><title>psi_task_change (6 samples, 0.47%)</title><rect x="32.9173%" y="357" width="0.4680%" height="15" fill="rgb(234,177,6)"/><text x="33.1673%" y="367.50"></text></g><g><title>psi_group_change (6 samples, 0.47%)</title><rect x="32.9173%" y="341" width="0.4680%" height="15" fill="rgb(217,24,9)"/><text x="33.1673%" y="351.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.23%)</title><rect x="33.4633%" y="357" width="0.2340%" height="15" fill="rgb(220,13,46)"/><text x="33.7133%" y="367.50"></text></g><g><title>sk_wait_data (31 samples, 2.42%)</title><rect x="31.4353%" y="437" width="2.4181%" height="15" fill="rgb(239,221,27)"/><text x="31.6853%" y="447.50">sk..</text></g><g><title>wait_woken (20 samples, 1.56%)</title><rect x="32.2933%" y="421" width="1.5601%" height="15" fill="rgb(222,198,25)"/><text x="32.5433%" y="431.50"></text></g><g><title>schedule_timeout (20 samples, 1.56%)</title><rect x="32.2933%" y="405" width="1.5601%" height="15" fill="rgb(211,99,13)"/><text x="32.5433%" y="415.50"></text></g><g><title>schedule (20 samples, 1.56%)</title><rect x="32.2933%" y="389" width="1.5601%" height="15" fill="rgb(232,111,31)"/><text x="32.5433%" y="399.50"></text></g><g><title>__schedule (20 samples, 1.56%)</title><rect x="32.2933%" y="373" width="1.5601%" height="15" fill="rgb(245,82,37)"/><text x="32.5433%" y="383.50"></text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="33.6973%" y="357" width="0.1560%" height="15" fill="rgb(227,149,46)"/><text x="33.9473%" y="367.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.39%)</title><rect x="33.8534%" y="437" width="0.3900%" height="15" fill="rgb(218,36,50)"/><text x="34.1034%" y="447.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.39%)</title><rect x="33.8534%" y="421" width="0.3900%" height="15" fill="rgb(226,80,48)"/><text x="34.1034%" y="431.50"></text></g><g><title>_copy_to_iter (3 samples, 0.23%)</title><rect x="34.0094%" y="405" width="0.2340%" height="15" fill="rgb(238,224,15)"/><text x="34.2594%" y="415.50"></text></g><g><title>copy_user_enhanced_fast_string (3 samples, 0.23%)</title><rect x="34.0094%" y="389" width="0.2340%" height="15" fill="rgb(241,136,10)"/><text x="34.2594%" y="399.50"></text></g><g><title>inet_recvmsg (47 samples, 3.67%)</title><rect x="30.7332%" y="469" width="3.6661%" height="15" fill="rgb(208,32,45)"/><text x="30.9832%" y="479.50">inet..</text></g><g><title>tcp_recvmsg (46 samples, 3.59%)</title><rect x="30.8112%" y="453" width="3.5881%" height="15" fill="rgb(207,135,9)"/><text x="31.0612%" y="463.50">tcp_..</text></g><g><title>do_syscall_64 (53 samples, 4.13%)</title><rect x="30.3432%" y="517" width="4.1342%" height="15" fill="rgb(206,86,44)"/><text x="30.5932%" y="527.50">do_sy..</text></g><g><title>__x64_sys_recvfrom (53 samples, 4.13%)</title><rect x="30.3432%" y="501" width="4.1342%" height="15" fill="rgb(245,177,15)"/><text x="30.5932%" y="511.50">__x64..</text></g><g><title>__sys_recvfrom (51 samples, 3.98%)</title><rect x="30.4992%" y="485" width="3.9782%" height="15" fill="rgb(206,64,50)"/><text x="30.7492%" y="495.50">__sy..</text></g><g><title>entry_SYSCALL_64 (59 samples, 4.60%)</title><rect x="30.1872%" y="533" width="4.6022%" height="15" fill="rgb(234,36,40)"/><text x="30.4372%" y="543.50">entry..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.31%)</title><rect x="34.4774%" y="517" width="0.3120%" height="15" fill="rgb(213,64,8)"/><text x="34.7274%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (65 samples, 5.07%)</title><rect x="30.0312%" y="629" width="5.0702%" height="15" fill="rgb(210,75,36)"/><text x="30.2812%" y="639.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (63 samples, 4.91%)</title><rect x="30.1872%" y="613" width="4.9142%" height="15" fill="rgb(229,88,21)"/><text x="30.4372%" y="623.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (63 samples, 4.91%)</title><rect x="30.1872%" y="597" width="4.9142%" height="15" fill="rgb(252,204,47)"/><text x="30.4372%" y="607.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (63 samples, 4.91%)</title><rect x="30.1872%" y="581" width="4.9142%" height="15" fill="rgb(208,77,27)"/><text x="30.4372%" y="591.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (63 samples, 4.91%)</title><rect x="30.1872%" y="565" width="4.9142%" height="15" fill="rgb(221,76,26)"/><text x="30.4372%" y="575.50">std::s..</text></g><g><title>__libc_recv (63 samples, 4.91%)</title><rect x="30.1872%" y="549" width="4.9142%" height="15" fill="rgb(225,139,18)"/><text x="30.4372%" y="559.50">__libc..</text></g><g><title>syscall_return_via_sysret (4 samples, 0.31%)</title><rect x="34.7894%" y="533" width="0.3120%" height="15" fill="rgb(230,137,11)"/><text x="35.0394%" y="543.50"></text></g><g><title>mysql::conn::Conn::read_packet (70 samples, 5.46%)</title><rect x="29.7192%" y="661" width="5.4602%" height="15" fill="rgb(212,28,1)"/><text x="29.9692%" y="671.50">mysql::..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 5.23%)</title><rect x="29.9532%" y="645" width="5.2262%" height="15" fill="rgb(248,164,17)"/><text x="30.2032%" y="655.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::handle_result_set (79 samples, 6.16%)</title><rect x="29.4072%" y="677" width="6.1622%" height="15" fill="rgb(222,171,42)"/><text x="29.6572%" y="687.50">mysql::c..</text></g><g><title>mysql_common::packets::column_from_payload (4 samples, 0.31%)</title><rect x="35.2574%" y="661" width="0.3120%" height="15" fill="rgb(243,84,45)"/><text x="35.5074%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.16%)</title><rect x="35.7254%" y="661" width="0.1560%" height="15" fill="rgb(252,49,23)"/><text x="35.9754%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.16%)</title><rect x="35.7254%" y="645" width="0.1560%" height="15" fill="rgb(215,19,7)"/><text x="35.9754%" y="655.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.16%)</title><rect x="37.6755%" y="309" width="0.1560%" height="15" fill="rgb(238,81,41)"/><text x="37.9255%" y="319.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.31%)</title><rect x="37.5975%" y="373" width="0.3120%" height="15" fill="rgb(210,199,37)"/><text x="37.8475%" y="383.50"></text></g><g><title>loopback_xmit (4 samples, 0.31%)</title><rect x="37.5975%" y="357" width="0.3120%" height="15" fill="rgb(244,192,49)"/><text x="37.8475%" y="367.50"></text></g><g><title>netif_rx (3 samples, 0.23%)</title><rect x="37.6755%" y="341" width="0.2340%" height="15" fill="rgb(226,211,11)"/><text x="37.9255%" y="351.50"></text></g><g><title>netif_rx_internal (3 samples, 0.23%)</title><rect x="37.6755%" y="325" width="0.2340%" height="15" fill="rgb(236,162,54)"/><text x="37.9255%" y="335.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.55%)</title><rect x="37.5195%" y="389" width="0.5460%" height="15" fill="rgb(220,229,9)"/><text x="37.7695%" y="399.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.16%)</title><rect x="37.9095%" y="373" width="0.1560%" height="15" fill="rgb(250,87,22)"/><text x="38.1595%" y="383.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.16%)</title><rect x="38.3775%" y="277" width="0.1560%" height="15" fill="rgb(239,43,17)"/><text x="38.6275%" y="287.50"></text></g><g><title>__inet_lookup_established (5 samples, 0.39%)</title><rect x="38.6115%" y="197" width="0.3900%" height="15" fill="rgb(231,177,25)"/><text x="38.8615%" y="207.50"></text></g><g><title>psi_flags_change (2 samples, 0.16%)</title><rect x="39.5476%" y="53" width="0.1560%" height="15" fill="rgb(219,179,1)"/><text x="39.7976%" y="63.50"></text></g><g><title>psi_task_change (8 samples, 0.62%)</title><rect x="39.4696%" y="69" width="0.6240%" height="15" fill="rgb(238,219,53)"/><text x="39.7196%" y="79.50"></text></g><g><title>psi_group_change (5 samples, 0.39%)</title><rect x="39.7036%" y="53" width="0.3900%" height="15" fill="rgb(232,167,36)"/><text x="39.9536%" y="63.50"></text></g><g><title>enqueue_task (9 samples, 0.70%)</title><rect x="39.4696%" y="85" width="0.7020%" height="15" fill="rgb(244,19,51)"/><text x="39.7196%" y="95.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.39%)</title><rect x="40.1716%" y="85" width="0.3900%" height="15" fill="rgb(224,6,22)"/><text x="40.4216%" y="95.50"></text></g><g><title>enqueue_entity (5 samples, 0.39%)</title><rect x="40.1716%" y="69" width="0.3900%" height="15" fill="rgb(224,145,5)"/><text x="40.4216%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.16%)</title><rect x="40.4056%" y="53" width="0.1560%" height="15" fill="rgb(234,130,49)"/><text x="40.6556%" y="63.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.16%)</title><rect x="40.5616%" y="85" width="0.1560%" height="15" fill="rgb(254,6,2)"/><text x="40.8116%" y="95.50"></text></g><g><title>available_idle_cpu (2 samples, 0.16%)</title><rect x="40.5616%" y="69" width="0.1560%" height="15" fill="rgb(208,96,46)"/><text x="40.8116%" y="79.50"></text></g><g><title>__wake_up_common (20 samples, 1.56%)</title><rect x="39.3136%" y="133" width="1.5601%" height="15" fill="rgb(239,3,39)"/><text x="39.5636%" y="143.50"></text></g><g><title>pollwake (20 samples, 1.56%)</title><rect x="39.3136%" y="117" width="1.5601%" height="15" fill="rgb(233,210,1)"/><text x="39.5636%" y="127.50"></text></g><g><title>try_to_wake_up (20 samples, 1.56%)</title><rect x="39.3136%" y="101" width="1.5601%" height="15" fill="rgb(244,137,37)"/><text x="39.5636%" y="111.50"></text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="40.7176%" y="85" width="0.1560%" height="15" fill="rgb(240,136,2)"/><text x="40.9676%" y="95.50"></text></g><g><title>sock_def_readable (21 samples, 1.64%)</title><rect x="39.3136%" y="165" width="1.6381%" height="15" fill="rgb(239,18,37)"/><text x="39.5636%" y="175.50"></text></g><g><title>__wake_up_common_lock (21 samples, 1.64%)</title><rect x="39.3136%" y="149" width="1.6381%" height="15" fill="rgb(218,185,22)"/><text x="39.5636%" y="159.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="41.0296%" y="149" width="0.1560%" height="15" fill="rgb(225,218,4)"/><text x="41.2796%" y="159.50"></text></g><g><title>tcp_ack (8 samples, 0.62%)</title><rect x="40.9516%" y="165" width="0.6240%" height="15" fill="rgb(230,182,32)"/><text x="41.2016%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (37 samples, 2.89%)</title><rect x="39.0796%" y="197" width="2.8861%" height="15" fill="rgb(242,56,43)"/><text x="39.3296%" y="207.50">tc..</text></g><g><title>tcp_rcv_established (35 samples, 2.73%)</title><rect x="39.2356%" y="181" width="2.7301%" height="15" fill="rgb(233,99,24)"/><text x="39.4856%" y="191.50">tc..</text></g><g><title>tcp_queue_rcv (3 samples, 0.23%)</title><rect x="41.7317%" y="165" width="0.2340%" height="15" fill="rgb(234,209,42)"/><text x="41.9817%" y="175.50"></text></g><g><title>ip_local_deliver (45 samples, 3.51%)</title><rect x="38.5335%" y="261" width="3.5101%" height="15" fill="rgb(227,7,12)"/><text x="38.7835%" y="271.50">ip_..</text></g><g><title>ip_local_deliver_finish (45 samples, 3.51%)</title><rect x="38.5335%" y="245" width="3.5101%" height="15" fill="rgb(245,203,43)"/><text x="38.7835%" y="255.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (45 samples, 3.51%)</title><rect x="38.5335%" y="229" width="3.5101%" height="15" fill="rgb(238,205,33)"/><text x="38.7835%" y="239.50">ip_..</text></g><g><title>tcp_v4_rcv (44 samples, 3.43%)</title><rect x="38.6115%" y="213" width="3.4321%" height="15" fill="rgb(231,56,7)"/><text x="38.8615%" y="223.50">tcp..</text></g><g><title>__netif_receive_skb_one_core (50 samples, 3.90%)</title><rect x="38.2995%" y="293" width="3.9002%" height="15" fill="rgb(244,186,29)"/><text x="38.5495%" y="303.50">__ne..</text></g><g><title>ip_rcv (47 samples, 3.67%)</title><rect x="38.5335%" y="277" width="3.6661%" height="15" fill="rgb(234,111,31)"/><text x="38.7835%" y="287.50">ip_r..</text></g><g><title>do_softirq (53 samples, 4.13%)</title><rect x="38.1435%" y="373" width="4.1342%" height="15" fill="rgb(241,149,10)"/><text x="38.3935%" y="383.50">do_so..</text></g><g><title>do_softirq_own_stack (53 samples, 4.13%)</title><rect x="38.1435%" y="357" width="4.1342%" height="15" fill="rgb(249,206,44)"/><text x="38.3935%" y="367.50">do_so..</text></g><g><title>__do_softirq (53 samples, 4.13%)</title><rect x="38.1435%" y="341" width="4.1342%" height="15" fill="rgb(251,153,30)"/><text x="38.3935%" y="351.50">__do_..</text></g><g><title>net_rx_action (52 samples, 4.06%)</title><rect x="38.2215%" y="325" width="4.0562%" height="15" fill="rgb(239,152,38)"/><text x="38.4715%" y="335.50">net_..</text></g><g><title>process_backlog (52 samples, 4.06%)</title><rect x="38.2215%" y="309" width="4.0562%" height="15" fill="rgb(249,139,47)"/><text x="38.4715%" y="319.50">proc..</text></g><g><title>ip_finish_output2 (64 samples, 4.99%)</title><rect x="37.3635%" y="405" width="4.9922%" height="15" fill="rgb(244,64,35)"/><text x="37.6135%" y="415.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (55 samples, 4.29%)</title><rect x="38.0655%" y="389" width="4.2902%" height="15" fill="rgb(216,46,15)"/><text x="38.3155%" y="399.50">__loc..</text></g><g><title>ip_output (69 samples, 5.38%)</title><rect x="37.1295%" y="421" width="5.3822%" height="15" fill="rgb(250,74,19)"/><text x="37.3795%" y="431.50">ip_outp..</text></g><g><title>ip_finish_output (2 samples, 0.16%)</title><rect x="42.3557%" y="405" width="0.1560%" height="15" fill="rgb(249,42,33)"/><text x="42.6057%" y="415.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.16%)</title><rect x="42.3557%" y="389" width="0.1560%" height="15" fill="rgb(242,149,17)"/><text x="42.6057%" y="399.50"></text></g><g><title>__ip_queue_xmit (72 samples, 5.62%)</title><rect x="36.9735%" y="437" width="5.6162%" height="15" fill="rgb(244,29,21)"/><text x="37.2235%" y="447.50">__ip_qu..</text></g><g><title>__tcp_transmit_skb (78 samples, 6.08%)</title><rect x="36.7395%" y="453" width="6.0842%" height="15" fill="rgb(220,130,37)"/><text x="36.9895%" y="463.50">__tcp_tr..</text></g><g><title>tcp_event_new_data_sent (4 samples, 0.31%)</title><rect x="42.9797%" y="453" width="0.3120%" height="15" fill="rgb(211,67,2)"/><text x="43.2297%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (87 samples, 6.79%)</title><rect x="36.5835%" y="485" width="6.7863%" height="15" fill="rgb(235,68,52)"/><text x="36.8335%" y="495.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (87 samples, 6.79%)</title><rect x="36.5835%" y="469" width="6.7863%" height="15" fill="rgb(246,142,3)"/><text x="36.8335%" y="479.50">tcp_write..</text></g><g><title>sk_stream_alloc_skb (4 samples, 0.31%)</title><rect x="43.3697%" y="485" width="0.3120%" height="15" fill="rgb(241,25,7)"/><text x="43.6197%" y="495.50"></text></g><g><title>__alloc_skb (4 samples, 0.31%)</title><rect x="43.3697%" y="469" width="0.3120%" height="15" fill="rgb(242,119,39)"/><text x="43.6197%" y="479.50"></text></g><g><title>__ksize (2 samples, 0.16%)</title><rect x="43.5257%" y="453" width="0.1560%" height="15" fill="rgb(241,98,45)"/><text x="43.7757%" y="463.50"></text></g><g><title>__x64_sys_sendto (97 samples, 7.57%)</title><rect x="36.2715%" y="565" width="7.5663%" height="15" fill="rgb(254,28,30)"/><text x="36.5215%" y="575.50">__x64_sys_..</text></g><g><title>__sys_sendto (97 samples, 7.57%)</title><rect x="36.2715%" y="549" width="7.5663%" height="15" fill="rgb(241,142,54)"/><text x="36.5215%" y="559.50">__sys_send..</text></g><g><title>sock_sendmsg (96 samples, 7.49%)</title><rect x="36.3495%" y="533" width="7.4883%" height="15" fill="rgb(222,85,15)"/><text x="36.5995%" y="543.50">sock_sendm..</text></g><g><title>tcp_sendmsg (96 samples, 7.49%)</title><rect x="36.3495%" y="517" width="7.4883%" height="15" fill="rgb(210,85,47)"/><text x="36.5995%" y="527.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (96 samples, 7.49%)</title><rect x="36.3495%" y="501" width="7.4883%" height="15" fill="rgb(224,206,25)"/><text x="36.5995%" y="511.50">tcp_sendms..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.16%)</title><rect x="43.6817%" y="485" width="0.1560%" height="15" fill="rgb(243,201,19)"/><text x="43.9317%" y="495.50"></text></g><g><title>do_syscall_64 (98 samples, 7.64%)</title><rect x="36.2715%" y="581" width="7.6443%" height="15" fill="rgb(236,59,4)"/><text x="36.5215%" y="591.50">do_syscall..</text></g><g><title>entry_SYSCALL_64 (102 samples, 7.96%)</title><rect x="36.0374%" y="597" width="7.9563%" height="15" fill="rgb(254,179,45)"/><text x="36.2874%" y="607.50">entry_SYSCA..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (242 samples, 18.88%)</title><rect x="25.1950%" y="709" width="18.8768%" height="15" fill="rgb(226,14,10)"/><text x="25.4450%" y="719.50">&lt;decor::Shim as msql_srv::Mys..</text></g><g><title>mysql::conn::Conn::_query (191 samples, 14.90%)</title><rect x="29.1732%" y="693" width="14.8986%" height="15" fill="rgb(244,27,41)"/><text x="29.4232%" y="703.50">mysql::conn::Conn::_que..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (109 samples, 8.50%)</title><rect x="35.5694%" y="677" width="8.5023%" height="15" fill="rgb(235,35,32)"/><text x="35.8194%" y="687.50">mysql_common..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (104 samples, 8.11%)</title><rect x="35.9594%" y="661" width="8.1123%" height="15" fill="rgb(218,68,31)"/><text x="36.2094%" y="671.50">std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (104 samples, 8.11%)</title><rect x="35.9594%" y="645" width="8.1123%" height="15" fill="rgb(207,120,37)"/><text x="36.2094%" y="655.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::write (104 samples, 8.11%)</title><rect x="35.9594%" y="629" width="8.1123%" height="15" fill="rgb(227,98,0)"/><text x="36.2094%" y="639.50">std::sys_co..</text></g><g><title>__libc_send (104 samples, 8.11%)</title><rect x="35.9594%" y="613" width="8.1123%" height="15" fill="rgb(207,7,3)"/><text x="36.2094%" y="623.50">__libc_send</text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="44.0718%" y="709" width="0.1560%" height="15" fill="rgb(206,98,19)"/><text x="44.3218%" y="719.50"></text></g><g><title>__pthread_enable_asynccancel (4 samples, 0.31%)</title><rect x="44.4618%" y="597" width="0.3120%" height="15" fill="rgb(217,5,26)"/><text x="44.7118%" y="607.50"></text></g><g><title>dst_release (4 samples, 0.31%)</title><rect x="45.2418%" y="469" width="0.3120%" height="15" fill="rgb(235,190,38)"/><text x="45.4918%" y="479.50"></text></g><g><title>__kfree_skb (9 samples, 0.70%)</title><rect x="45.2418%" y="501" width="0.7020%" height="15" fill="rgb(247,86,24)"/><text x="45.4918%" y="511.50"></text></g><g><title>skb_release_head_state (9 samples, 0.70%)</title><rect x="45.2418%" y="485" width="0.7020%" height="15" fill="rgb(205,101,16)"/><text x="45.4918%" y="495.50"></text></g><g><title>sock_rfree (5 samples, 0.39%)</title><rect x="45.5538%" y="469" width="0.3900%" height="15" fill="rgb(246,168,33)"/><text x="45.8038%" y="479.50"></text></g><g><title>_raw_spin_unlock_irqrestore (3 samples, 0.23%)</title><rect x="46.3339%" y="485" width="0.2340%" height="15" fill="rgb(231,114,1)"/><text x="46.5839%" y="495.50"></text></g><g><title>preempt_count_sub (3 samples, 0.23%)</title><rect x="46.3339%" y="469" width="0.2340%" height="15" fill="rgb(207,184,53)"/><text x="46.5839%" y="479.50"></text></g><g><title>remove_wait_queue (2 samples, 0.16%)</title><rect x="46.5679%" y="485" width="0.1560%" height="15" fill="rgb(224,95,51)"/><text x="46.8179%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.16%)</title><rect x="46.5679%" y="469" width="0.1560%" height="15" fill="rgb(212,188,45)"/><text x="46.8179%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.31%)</title><rect x="47.1139%" y="421" width="0.3120%" height="15" fill="rgb(223,154,38)"/><text x="47.3639%" y="431.50"></text></g><g><title>update_curr (6 samples, 0.47%)</title><rect x="47.5039%" y="389" width="0.4680%" height="15" fill="rgb(251,22,52)"/><text x="47.7539%" y="399.50"></text></g><g><title>cpuacct_charge (2 samples, 0.16%)</title><rect x="47.8159%" y="373" width="0.1560%" height="15" fill="rgb(229,209,22)"/><text x="48.0659%" y="383.50"></text></g><g><title>dequeue_task_fair (11 samples, 0.86%)</title><rect x="47.4259%" y="421" width="0.8580%" height="15" fill="rgb(234,138,34)"/><text x="47.6759%" y="431.50"></text></g><g><title>dequeue_entity (11 samples, 0.86%)</title><rect x="47.4259%" y="405" width="0.8580%" height="15" fill="rgb(212,95,11)"/><text x="47.6759%" y="415.50"></text></g><g><title>update_load_avg (4 samples, 0.31%)</title><rect x="47.9719%" y="389" width="0.3120%" height="15" fill="rgb(240,179,47)"/><text x="48.2219%" y="399.50"></text></g><g><title>pick_next_task_fair (5 samples, 0.39%)</title><rect x="48.3619%" y="421" width="0.3900%" height="15" fill="rgb(240,163,11)"/><text x="48.6119%" y="431.50"></text></g><g><title>newidle_balance (3 samples, 0.23%)</title><rect x="48.5179%" y="405" width="0.2340%" height="15" fill="rgb(236,37,12)"/><text x="48.7679%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.16%)</title><rect x="48.9080%" y="421" width="0.1560%" height="15" fill="rgb(232,164,16)"/><text x="49.1580%" y="431.50"></text></g><g><title>__schedule (30 samples, 2.34%)</title><rect x="46.9579%" y="437" width="2.3401%" height="15" fill="rgb(244,205,15)"/><text x="47.2079%" y="447.50">_..</text></g><g><title>update_rq_clock (3 samples, 0.23%)</title><rect x="49.0640%" y="421" width="0.2340%" height="15" fill="rgb(223,117,47)"/><text x="49.3140%" y="431.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.16%)</title><rect x="49.1420%" y="405" width="0.1560%" height="15" fill="rgb(244,107,35)"/><text x="49.3920%" y="415.50"></text></g><g><title>sk_wait_data (42 samples, 3.28%)</title><rect x="46.0998%" y="501" width="3.2761%" height="15" fill="rgb(205,140,8)"/><text x="46.3498%" y="511.50">sk_..</text></g><g><title>wait_woken (34 samples, 2.65%)</title><rect x="46.7239%" y="485" width="2.6521%" height="15" fill="rgb(228,84,46)"/><text x="46.9739%" y="495.50">wa..</text></g><g><title>schedule_timeout (32 samples, 2.50%)</title><rect x="46.8799%" y="469" width="2.4961%" height="15" fill="rgb(254,188,9)"/><text x="47.1299%" y="479.50">sc..</text></g><g><title>schedule (32 samples, 2.50%)</title><rect x="46.8799%" y="453" width="2.4961%" height="15" fill="rgb(206,112,54)"/><text x="47.1299%" y="463.50">sc..</text></g><g><title>skb_copy_datagram_iter (4 samples, 0.31%)</title><rect x="49.3760%" y="501" width="0.3120%" height="15" fill="rgb(216,84,49)"/><text x="49.6260%" y="511.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.31%)</title><rect x="49.3760%" y="485" width="0.3120%" height="15" fill="rgb(214,194,35)"/><text x="49.6260%" y="495.50"></text></g><g><title>inet_recvmsg (62 samples, 4.84%)</title><rect x="45.0078%" y="533" width="4.8362%" height="15" fill="rgb(249,28,3)"/><text x="45.2578%" y="543.50">inet_r..</text></g><g><title>tcp_recvmsg (62 samples, 4.84%)</title><rect x="45.0078%" y="517" width="4.8362%" height="15" fill="rgb(222,56,52)"/><text x="45.2578%" y="527.50">tcp_re..</text></g><g><title>__x64_sys_recvfrom (64 samples, 4.99%)</title><rect x="44.9298%" y="565" width="4.9922%" height="15" fill="rgb(245,217,50)"/><text x="45.1798%" y="575.50">__x64_..</text></g><g><title>__sys_recvfrom (63 samples, 4.91%)</title><rect x="45.0078%" y="549" width="4.9142%" height="15" fill="rgb(213,201,24)"/><text x="45.2578%" y="559.50">__sys_..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.16%)</title><rect x="49.9220%" y="565" width="0.1560%" height="15" fill="rgb(248,116,28)"/><text x="50.1720%" y="575.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.16%)</title><rect x="49.9220%" y="549" width="0.1560%" height="15" fill="rgb(219,72,43)"/><text x="50.1720%" y="559.50"></text></g><g><title>kfree (2 samples, 0.16%)</title><rect x="49.9220%" y="533" width="0.1560%" height="15" fill="rgb(209,138,14)"/><text x="50.1720%" y="543.50"></text></g><g><title>do_syscall_64 (68 samples, 5.30%)</title><rect x="44.8518%" y="581" width="5.3042%" height="15" fill="rgb(222,18,33)"/><text x="45.1018%" y="591.50">do_sys..</text></g><g><title>entry_SYSCALL_64 (75 samples, 5.85%)</title><rect x="44.7738%" y="597" width="5.8502%" height="15" fill="rgb(213,199,7)"/><text x="45.0238%" y="607.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.47%)</title><rect x="50.1560%" y="581" width="0.4680%" height="15" fill="rgb(250,110,10)"/><text x="50.4060%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (83 samples, 6.47%)</title><rect x="44.3058%" y="677" width="6.4743%" height="15" fill="rgb(248,123,6)"/><text x="44.5558%" y="687.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (83 samples, 6.47%)</title><rect x="44.3058%" y="661" width="6.4743%" height="15" fill="rgb(206,91,31)"/><text x="44.5558%" y="671.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (83 samples, 6.47%)</title><rect x="44.3058%" y="645" width="6.4743%" height="15" fill="rgb(211,154,13)"/><text x="44.5558%" y="655.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (83 samples, 6.47%)</title><rect x="44.3058%" y="629" width="6.4743%" height="15" fill="rgb(225,148,7)"/><text x="44.5558%" y="639.50">std::sys..</text></g><g><title>__libc_recv (83 samples, 6.47%)</title><rect x="44.3058%" y="613" width="6.4743%" height="15" fill="rgb(220,160,43)"/><text x="44.5558%" y="623.50">__libc_r..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.16%)</title><rect x="50.6240%" y="597" width="0.1560%" height="15" fill="rgb(213,52,39)"/><text x="50.8740%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (85 samples, 6.63%)</title><rect x="44.3058%" y="693" width="6.6303%" height="15" fill="rgb(243,137,7)"/><text x="44.5558%" y="703.50">&lt;std::io:..</text></g><g><title>std::net::tcp::TcpStream::set_nodelay (2 samples, 0.16%)</title><rect x="50.7800%" y="677" width="0.1560%" height="15" fill="rgb(230,79,13)"/><text x="51.0300%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::set_nodelay (2 samples, 0.16%)</title><rect x="50.7800%" y="661" width="0.1560%" height="15" fill="rgb(247,105,23)"/><text x="51.0300%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::set_nodelay (2 samples, 0.16%)</title><rect x="50.7800%" y="645" width="0.1560%" height="15" fill="rgb(223,179,41)"/><text x="51.0300%" y="655.50"></text></g><g><title>std::sys_common::net::setsockopt (2 samples, 0.16%)</title><rect x="50.7800%" y="629" width="0.1560%" height="15" fill="rgb(218,9,34)"/><text x="51.0300%" y="639.50"></text></g><g><title>__libc_recv (2 samples, 0.16%)</title><rect x="50.7800%" y="613" width="0.1560%" height="15" fill="rgb(222,106,8)"/><text x="51.0300%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="50.7800%" y="597" width="0.1560%" height="15" fill="rgb(211,220,0)"/><text x="51.0300%" y="607.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (89 samples, 6.94%)</title><rect x="44.3058%" y="709" width="6.9423%" height="15" fill="rgb(229,52,16)"/><text x="44.5558%" y="719.50">msql_srv:..</text></g><g><title>__memset_avx2_erms (4 samples, 0.31%)</title><rect x="50.9360%" y="693" width="0.3120%" height="15" fill="rgb(212,155,18)"/><text x="51.1860%" y="703.50"></text></g><g><title>import_single_range (2 samples, 0.16%)</title><rect x="51.7941%" y="581" width="0.1560%" height="15" fill="rgb(242,21,14)"/><text x="52.0441%" y="591.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.16%)</title><rect x="52.0281%" y="549" width="0.1560%" height="15" fill="rgb(222,19,48)"/><text x="52.2781%" y="559.50"></text></g><g><title>preempt_count_sub (2 samples, 0.16%)</title><rect x="52.0281%" y="533" width="0.1560%" height="15" fill="rgb(232,45,27)"/><text x="52.2781%" y="543.50"></text></g><g><title>__ip_local_out (2 samples, 0.16%)</title><rect x="52.9641%" y="469" width="0.1560%" height="15" fill="rgb(249,103,42)"/><text x="53.2141%" y="479.50"></text></g><g><title>ip_send_check (2 samples, 0.16%)</title><rect x="52.9641%" y="453" width="0.1560%" height="15" fill="rgb(246,81,33)"/><text x="53.2141%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.16%)</title><rect x="53.2761%" y="421" width="0.1560%" height="15" fill="rgb(252,33,42)"/><text x="53.5261%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.16%)</title><rect x="53.2761%" y="405" width="0.1560%" height="15" fill="rgb(209,212,41)"/><text x="53.5261%" y="415.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.39%)</title><rect x="53.1981%" y="437" width="0.3900%" height="15" fill="rgb(207,154,6)"/><text x="53.4481%" y="447.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.16%)</title><rect x="53.4321%" y="421" width="0.1560%" height="15" fill="rgb(223,64,47)"/><text x="53.6821%" y="431.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.16%)</title><rect x="53.9002%" y="325" width="0.1560%" height="15" fill="rgb(211,161,38)"/><text x="54.1502%" y="335.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.16%)</title><rect x="54.3682%" y="245" width="0.1560%" height="15" fill="rgb(219,138,40)"/><text x="54.6182%" y="255.50"></text></g><g><title>sk_reset_timer (3 samples, 0.23%)</title><rect x="54.6022%" y="213" width="0.2340%" height="15" fill="rgb(241,228,46)"/><text x="54.8522%" y="223.50"></text></g><g><title>__mod_timer (2 samples, 0.16%)</title><rect x="54.6802%" y="197" width="0.1560%" height="15" fill="rgb(223,209,38)"/><text x="54.9302%" y="207.50"></text></g><g><title>psi_task_change (6 samples, 0.47%)</title><rect x="55.0702%" y="133" width="0.4680%" height="15" fill="rgb(236,164,45)"/><text x="55.3202%" y="143.50"></text></g><g><title>psi_group_change (6 samples, 0.47%)</title><rect x="55.0702%" y="117" width="0.4680%" height="15" fill="rgb(231,15,5)"/><text x="55.3202%" y="127.50"></text></g><g><title>enqueue_task (7 samples, 0.55%)</title><rect x="55.0702%" y="149" width="0.5460%" height="15" fill="rgb(252,35,15)"/><text x="55.3202%" y="159.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.16%)</title><rect x="56.0062%" y="117" width="0.1560%" height="15" fill="rgb(248,181,18)"/><text x="56.2562%" y="127.50"></text></g><g><title>enqueue_task_fair (11 samples, 0.86%)</title><rect x="55.6162%" y="149" width="0.8580%" height="15" fill="rgb(233,39,42)"/><text x="55.8662%" y="159.50"></text></g><g><title>enqueue_entity (10 samples, 0.78%)</title><rect x="55.6942%" y="133" width="0.7800%" height="15" fill="rgb(238,110,33)"/><text x="55.9442%" y="143.50"></text></g><g><title>update_load_avg (2 samples, 0.16%)</title><rect x="56.3183%" y="117" width="0.1560%" height="15" fill="rgb(233,195,10)"/><text x="56.5683%" y="127.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.16%)</title><rect x="56.4743%" y="149" width="0.1560%" height="15" fill="rgb(254,105,3)"/><text x="56.7243%" y="159.50"></text></g><g><title>check_preempt_curr (2 samples, 0.16%)</title><rect x="56.4743%" y="133" width="0.1560%" height="15" fill="rgb(221,225,9)"/><text x="56.7243%" y="143.50"></text></g><g><title>resched_curr (2 samples, 0.16%)</title><rect x="56.4743%" y="117" width="0.1560%" height="15" fill="rgb(224,227,45)"/><text x="56.7243%" y="127.50"></text></g><g><title>try_to_wake_up (25 samples, 1.95%)</title><rect x="55.0702%" y="165" width="1.9501%" height="15" fill="rgb(229,198,43)"/><text x="55.3202%" y="175.50">t..</text></g><g><title>update_rq_clock (5 samples, 0.39%)</title><rect x="56.6303%" y="149" width="0.3900%" height="15" fill="rgb(206,209,35)"/><text x="56.8803%" y="159.50"></text></g><g><title>__wake_up_common (26 samples, 2.03%)</title><rect x="55.0702%" y="181" width="2.0281%" height="15" fill="rgb(245,195,53)"/><text x="55.3202%" y="191.50">_..</text></g><g><title>sock_def_readable (31 samples, 2.42%)</title><rect x="54.8362%" y="213" width="2.4181%" height="15" fill="rgb(240,92,26)"/><text x="55.0862%" y="223.50">so..</text></g><g><title>__wake_up_common_lock (29 samples, 2.26%)</title><rect x="54.9922%" y="197" width="2.2621%" height="15" fill="rgb(207,40,23)"/><text x="55.2422%" y="207.50">_..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.16%)</title><rect x="57.0983%" y="181" width="0.1560%" height="15" fill="rgb(223,111,35)"/><text x="57.3483%" y="191.50"></text></g><g><title>skb_release_data (3 samples, 0.23%)</title><rect x="57.7223%" y="181" width="0.2340%" height="15" fill="rgb(229,147,28)"/><text x="57.9723%" y="191.50"></text></g><g><title>__kfree_skb (4 samples, 0.31%)</title><rect x="57.7223%" y="197" width="0.3120%" height="15" fill="rgb(211,29,28)"/><text x="57.9723%" y="207.50"></text></g><g><title>bictcp_cong_avoid (2 samples, 0.16%)</title><rect x="58.0343%" y="197" width="0.1560%" height="15" fill="rgb(228,72,33)"/><text x="58.2843%" y="207.50"></text></g><g><title>tcp_ack (14 samples, 1.09%)</title><rect x="57.2543%" y="213" width="1.0920%" height="15" fill="rgb(205,214,31)"/><text x="57.5043%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (53 samples, 4.13%)</title><rect x="54.5242%" y="245" width="4.1342%" height="15" fill="rgb(224,111,15)"/><text x="54.7742%" y="255.50">tcp_v..</text></g><g><title>tcp_rcv_established (53 samples, 4.13%)</title><rect x="54.5242%" y="229" width="4.1342%" height="15" fill="rgb(253,21,26)"/><text x="54.7742%" y="239.50">tcp_r..</text></g><g><title>tcp_queue_rcv (4 samples, 0.31%)</title><rect x="58.3463%" y="213" width="0.3120%" height="15" fill="rgb(245,139,43)"/><text x="58.5963%" y="223.50"></text></g><g><title>__local_bh_enable_ip (66 samples, 5.15%)</title><rect x="53.5881%" y="437" width="5.1482%" height="15" fill="rgb(252,170,7)"/><text x="53.8381%" y="447.50">__loca..</text></g><g><title>do_softirq (64 samples, 4.99%)</title><rect x="53.7441%" y="421" width="4.9922%" height="15" fill="rgb(231,118,14)"/><text x="53.9941%" y="431.50">do_sof..</text></g><g><title>do_softirq_own_stack (64 samples, 4.99%)</title><rect x="53.7441%" y="405" width="4.9922%" height="15" fill="rgb(238,83,0)"/><text x="53.9941%" y="415.50">do_sof..</text></g><g><title>__do_softirq (64 samples, 4.99%)</title><rect x="53.7441%" y="389" width="4.9922%" height="15" fill="rgb(221,39,39)"/><text x="53.9941%" y="399.50">__do_s..</text></g><g><title>net_rx_action (63 samples, 4.91%)</title><rect x="53.8222%" y="373" width="4.9142%" height="15" fill="rgb(222,119,46)"/><text x="54.0722%" y="383.50">net_rx..</text></g><g><title>process_backlog (63 samples, 4.91%)</title><rect x="53.8222%" y="357" width="4.9142%" height="15" fill="rgb(222,165,49)"/><text x="54.0722%" y="367.50">proces..</text></g><g><title>__netif_receive_skb_one_core (63 samples, 4.91%)</title><rect x="53.8222%" y="341" width="4.9142%" height="15" fill="rgb(219,113,52)"/><text x="54.0722%" y="351.50">__neti..</text></g><g><title>ip_rcv (60 samples, 4.68%)</title><rect x="54.0562%" y="325" width="4.6802%" height="15" fill="rgb(214,7,15)"/><text x="54.3062%" y="335.50">ip_rcv</text></g><g><title>ip_local_deliver (59 samples, 4.60%)</title><rect x="54.1342%" y="309" width="4.6022%" height="15" fill="rgb(235,32,4)"/><text x="54.3842%" y="319.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (59 samples, 4.60%)</title><rect x="54.1342%" y="293" width="4.6022%" height="15" fill="rgb(238,90,54)"/><text x="54.3842%" y="303.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (58 samples, 4.52%)</title><rect x="54.2122%" y="277" width="4.5242%" height="15" fill="rgb(213,208,19)"/><text x="54.4622%" y="287.50">ip_pr..</text></g><g><title>tcp_v4_rcv (57 samples, 4.45%)</title><rect x="54.2902%" y="261" width="4.4462%" height="15" fill="rgb(233,156,4)"/><text x="54.5402%" y="271.50">tcp_v..</text></g><g><title>ip_finish_output2 (72 samples, 5.62%)</title><rect x="53.1981%" y="453" width="5.6162%" height="15" fill="rgb(207,194,5)"/><text x="53.4481%" y="463.50">ip_fini..</text></g><g><title>ip_output (74 samples, 5.77%)</title><rect x="53.1981%" y="469" width="5.7722%" height="15" fill="rgb(206,111,30)"/><text x="53.4481%" y="479.50">ip_outp..</text></g><g><title>ip_finish_output (2 samples, 0.16%)</title><rect x="58.8144%" y="453" width="0.1560%" height="15" fill="rgb(243,70,54)"/><text x="59.0644%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.16%)</title><rect x="58.8144%" y="437" width="0.1560%" height="15" fill="rgb(242,28,8)"/><text x="59.0644%" y="447.50"></text></g><g><title>__ip_queue_xmit (81 samples, 6.32%)</title><rect x="52.7301%" y="485" width="6.3183%" height="15" fill="rgb(219,106,18)"/><text x="52.9801%" y="495.50">__ip_que..</text></g><g><title>skb_clone (2 samples, 0.16%)</title><rect x="59.1264%" y="485" width="0.1560%" height="15" fill="rgb(244,222,10)"/><text x="59.3764%" y="495.50"></text></g><g><title>__tcp_transmit_skb (88 samples, 6.86%)</title><rect x="52.5741%" y="501" width="6.8643%" height="15" fill="rgb(236,179,52)"/><text x="52.8241%" y="511.50">__tcp_tra..</text></g><g><title>tcp_options_write (2 samples, 0.16%)</title><rect x="59.2824%" y="485" width="0.1560%" height="15" fill="rgb(213,23,39)"/><text x="59.5324%" y="495.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.23%)</title><rect x="59.4384%" y="501" width="0.2340%" height="15" fill="rgb(238,48,10)"/><text x="59.6884%" y="511.50"></text></g><g><title>sk_reset_timer (2 samples, 0.16%)</title><rect x="59.5164%" y="485" width="0.1560%" height="15" fill="rgb(251,196,23)"/><text x="59.7664%" y="495.50"></text></g><g><title>__mod_timer (2 samples, 0.16%)</title><rect x="59.5164%" y="469" width="0.1560%" height="15" fill="rgb(250,152,24)"/><text x="59.7664%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (95 samples, 7.41%)</title><rect x="52.4181%" y="533" width="7.4103%" height="15" fill="rgb(209,150,17)"/><text x="52.6681%" y="543.50">__tcp_push..</text></g><g><title>tcp_write_xmit (95 samples, 7.41%)</title><rect x="52.4181%" y="517" width="7.4103%" height="15" fill="rgb(234,202,34)"/><text x="52.6681%" y="527.50">tcp_write_..</text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.16%)</title><rect x="59.6724%" y="501" width="0.1560%" height="15" fill="rgb(253,148,53)"/><text x="59.9224%" y="511.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.16%)</title><rect x="59.8284%" y="533" width="0.1560%" height="15" fill="rgb(218,129,16)"/><text x="60.0784%" y="543.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.23%)</title><rect x="60.0624%" y="501" width="0.2340%" height="15" fill="rgb(216,85,19)"/><text x="60.3124%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (8 samples, 0.62%)</title><rect x="59.9844%" y="533" width="0.6240%" height="15" fill="rgb(235,228,7)"/><text x="60.2344%" y="543.50"></text></g><g><title>__alloc_skb (8 samples, 0.62%)</title><rect x="59.9844%" y="517" width="0.6240%" height="15" fill="rgb(245,175,0)"/><text x="60.2344%" y="527.50"></text></g><g><title>__ksize (4 samples, 0.31%)</title><rect x="60.2964%" y="501" width="0.3120%" height="15" fill="rgb(208,168,36)"/><text x="60.5464%" y="511.50"></text></g><g><title>__x64_sys_sendto (118 samples, 9.20%)</title><rect x="51.6381%" y="613" width="9.2044%" height="15" fill="rgb(246,171,24)"/><text x="51.8881%" y="623.50">__x64_sys_sen..</text></g><g><title>__sys_sendto (118 samples, 9.20%)</title><rect x="51.6381%" y="597" width="9.2044%" height="15" fill="rgb(215,142,24)"/><text x="51.8881%" y="607.50">__sys_sendto</text></g><g><title>sock_sendmsg (114 samples, 8.89%)</title><rect x="51.9501%" y="581" width="8.8924%" height="15" fill="rgb(250,187,7)"/><text x="52.2001%" y="591.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (113 samples, 8.81%)</title><rect x="52.0281%" y="565" width="8.8144%" height="15" fill="rgb(228,66,33)"/><text x="52.2781%" y="575.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (110 samples, 8.58%)</title><rect x="52.2621%" y="549" width="8.5803%" height="15" fill="rgb(234,215,21)"/><text x="52.5121%" y="559.50">tcp_sendmsg_..</text></g><g><title>do_syscall_64 (121 samples, 9.44%)</title><rect x="51.6381%" y="629" width="9.4384%" height="15" fill="rgb(222,191,20)"/><text x="51.8881%" y="639.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (3 samples, 0.23%)</title><rect x="60.8424%" y="613" width="0.2340%" height="15" fill="rgb(245,79,54)"/><text x="61.0924%" y="623.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.16%)</title><rect x="60.9204%" y="597" width="0.1560%" height="15" fill="rgb(240,10,37)"/><text x="61.1704%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (127 samples, 9.91%)</title><rect x="51.4821%" y="645" width="9.9064%" height="15" fill="rgb(214,192,32)"/><text x="51.7321%" y="655.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.31%)</title><rect x="61.0764%" y="629" width="0.3120%" height="15" fill="rgb(209,36,54)"/><text x="61.3264%" y="639.50"></text></g><g><title>decor::Shim::run_on_tcp (469 samples, 36.58%)</title><rect x="24.9610%" y="741" width="36.5835%" height="15" fill="rgb(220,10,11)"/><text x="25.2110%" y="751.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (469 samples, 36.58%)</title><rect x="24.9610%" y="725" width="36.5835%" height="15" fill="rgb(221,106,17)"/><text x="25.2110%" y="735.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (132 samples, 10.30%)</title><rect x="51.2480%" y="709" width="10.2964%" height="15" fill="rgb(251,142,44)"/><text x="51.4980%" y="719.50">std::io::buffer..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (132 samples, 10.30%)</title><rect x="51.2480%" y="693" width="10.2964%" height="15" fill="rgb(238,13,15)"/><text x="51.4980%" y="703.50">&lt;std::net::tcp:..</text></g><g><title>std::sys_common::net::TcpStream::write (132 samples, 10.30%)</title><rect x="51.2480%" y="677" width="10.2964%" height="15" fill="rgb(208,107,27)"/><text x="51.4980%" y="687.50">std::sys_common..</text></g><g><title>__libc_send (132 samples, 10.30%)</title><rect x="51.2480%" y="661" width="10.2964%" height="15" fill="rgb(205,136,37)"/><text x="51.4980%" y="671.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.16%)</title><rect x="61.3885%" y="645" width="0.1560%" height="15" fill="rgb(250,205,27)"/><text x="61.6385%" y="655.50"></text></g><g><title>__GI___clone (470 samples, 36.66%)</title><rect x="24.9610%" y="853" width="36.6615%" height="15" fill="rgb(210,80,43)"/><text x="25.2110%" y="863.50">__GI___clone</text></g><g><title>start_thread (470 samples, 36.66%)</title><rect x="24.9610%" y="837" width="36.6615%" height="15" fill="rgb(247,160,36)"/><text x="25.2110%" y="847.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (470 samples, 36.66%)</title><rect x="24.9610%" y="821" width="36.6615%" height="15" fill="rgb(234,13,49)"/><text x="25.2110%" y="831.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (470 samples, 36.66%)</title><rect x="24.9610%" y="805" width="36.6615%" height="15" fill="rgb(234,122,0)"/><text x="25.2110%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::ca..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (470 samples, 36.66%)</title><rect x="24.9610%" y="789" width="36.6615%" height="15" fill="rgb(207,146,38)"/><text x="25.2110%" y="799.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::ca..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (470 samples, 36.66%)</title><rect x="24.9610%" y="773" width="36.6615%" height="15" fill="rgb(207,177,25)"/><text x="25.2110%" y="783.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (470 samples, 36.66%)</title><rect x="24.9610%" y="757" width="36.6615%" height="15" fill="rgb(211,178,42)"/><text x="25.2110%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (6 samples, 0.47%)</title><rect x="62.9485%" y="661" width="0.4680%" height="15" fill="rgb(230,69,54)"/><text x="63.1985%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (6 samples, 0.47%)</title><rect x="62.9485%" y="645" width="0.4680%" height="15" fill="rgb(214,135,41)"/><text x="63.1985%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 1.79%)</title><rect x="62.0125%" y="677" width="1.7941%" height="15" fill="rgb(237,67,25)"/><text x="62.2625%" y="687.50">&lt;..</text></g><g><title>mysql_common::row::new_row (3 samples, 0.23%)</title><rect x="63.5725%" y="661" width="0.2340%" height="15" fill="rgb(222,189,50)"/><text x="63.8225%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="63.6505%" y="645" width="0.1560%" height="15" fill="rgb(245,148,34)"/><text x="63.9005%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="63.9626%" y="597" width="0.2340%" height="15" fill="rgb(222,29,6)"/><text x="64.2126%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="64.0406%" y="581" width="0.1560%" height="15" fill="rgb(221,189,43)"/><text x="64.2906%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (233 samples, 18.17%)</title><rect x="64.3526%" y="373" width="18.1747%" height="15" fill="rgb(207,36,27)"/><text x="64.6026%" y="383.50">__intel_pmu_enable_all.const..</text></g><g><title>native_write_msr (233 samples, 18.17%)</title><rect x="64.3526%" y="357" width="18.1747%" height="15" fill="rgb(217,90,24)"/><text x="64.6026%" y="367.50">native_write_msr</text></g><g><title>__perf_event_task_sched_in (234 samples, 18.25%)</title><rect x="64.3526%" y="389" width="18.2527%" height="15" fill="rgb(224,66,35)"/><text x="64.6026%" y="399.50">__perf_event_task_sched_in</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 18.33%)</title><rect x="64.3526%" y="501" width="18.3307%" height="15" fill="rgb(221,13,50)"/><text x="64.6026%" y="511.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 18.33%)</title><rect x="64.3526%" y="485" width="18.3307%" height="15" fill="rgb(236,68,49)"/><text x="64.6026%" y="495.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 18.33%)</title><rect x="64.3526%" y="469" width="18.3307%" height="15" fill="rgb(229,146,28)"/><text x="64.6026%" y="479.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 18.33%)</title><rect x="64.3526%" y="453" width="18.3307%" height="15" fill="rgb(225,31,38)"/><text x="64.6026%" y="463.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 18.33%)</title><rect x="64.3526%" y="437" width="18.3307%" height="15" fill="rgb(250,208,3)"/><text x="64.6026%" y="447.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 18.33%)</title><rect x="64.3526%" y="421" width="18.3307%" height="15" fill="rgb(246,54,23)"/><text x="64.6026%" y="431.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 18.33%)</title><rect x="64.3526%" y="405" width="18.3307%" height="15" fill="rgb(243,76,11)"/><text x="64.6026%" y="415.50">finish_task_switch</text></g><g><title>entry_SYSCALL_64 (236 samples, 18.41%)</title><rect x="64.3526%" y="565" width="18.4087%" height="15" fill="rgb(245,21,50)"/><text x="64.6026%" y="575.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (236 samples, 18.41%)</title><rect x="64.3526%" y="549" width="18.4087%" height="15" fill="rgb(228,9,43)"/><text x="64.6026%" y="559.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 18.41%)</title><rect x="64.3526%" y="533" width="18.4087%" height="15" fill="rgb(208,100,47)"/><text x="64.6026%" y="543.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 18.41%)</title><rect x="64.3526%" y="517" width="18.4087%" height="15" fill="rgb(232,26,8)"/><text x="64.6026%" y="527.50">sched_setaffinity</text></g><g><title>__GI___sched_setaffinity_new (238 samples, 18.56%)</title><rect x="64.2746%" y="581" width="18.5647%" height="15" fill="rgb(216,166,38)"/><text x="64.5246%" y="591.50">__GI___sched_setaffinity_new</text></g><g><title>hwloc::Topology::new (243 samples, 18.95%)</title><rect x="63.9626%" y="677" width="18.9548%" height="15" fill="rgb(251,202,51)"/><text x="64.2126%" y="687.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (243 samples, 18.95%)</title><rect x="63.9626%" y="661" width="18.9548%" height="15" fill="rgb(254,216,34)"/><text x="64.2126%" y="671.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 18.95%)</title><rect x="63.9626%" y="645" width="18.9548%" height="15" fill="rgb(251,32,27)"/><text x="64.2126%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 18.95%)</title><rect x="63.9626%" y="629" width="18.9548%" height="15" fill="rgb(208,127,28)"/><text x="64.2126%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 18.95%)</title><rect x="63.9626%" y="613" width="18.9548%" height="15" fill="rgb(224,137,22)"/><text x="64.2126%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 18.72%)</title><rect x="64.1966%" y="597" width="18.7207%" height="15" fill="rgb(254,70,32)"/><text x="64.4466%" y="607.50">hwloc_linux_set_tid_cpubind</text></g><g><title>mysql::conn::Conn::handle_result_set (7 samples, 0.55%)</title><rect x="83.3073%" y="661" width="0.5460%" height="15" fill="rgb(229,75,37)"/><text x="83.5573%" y="671.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.16%)</title><rect x="83.8534%" y="581" width="0.1560%" height="15" fill="rgb(252,64,23)"/><text x="84.1034%" y="591.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.16%)</title><rect x="84.4774%" y="485" width="0.1560%" height="15" fill="rgb(232,162,48)"/><text x="84.7274%" y="495.50"></text></g><g><title>lock_sock_nested (2 samples, 0.16%)</title><rect x="84.6334%" y="485" width="0.1560%" height="15" fill="rgb(246,160,12)"/><text x="84.8834%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.16%)</title><rect x="84.6334%" y="469" width="0.1560%" height="15" fill="rgb(247,166,0)"/><text x="84.8834%" y="479.50"></text></g><g><title>preempt_count_add (2 samples, 0.16%)</title><rect x="84.6334%" y="453" width="0.1560%" height="15" fill="rgb(249,219,21)"/><text x="84.8834%" y="463.50"></text></g><g><title>release_sock (2 samples, 0.16%)</title><rect x="84.7894%" y="485" width="0.1560%" height="15" fill="rgb(205,209,3)"/><text x="85.0394%" y="495.50"></text></g><g><title>__ip_local_out (2 samples, 0.16%)</title><rect x="86.2715%" y="405" width="0.1560%" height="15" fill="rgb(243,44,1)"/><text x="86.5215%" y="415.50"></text></g><g><title>ip_send_check (2 samples, 0.16%)</title><rect x="86.2715%" y="389" width="0.1560%" height="15" fill="rgb(206,159,16)"/><text x="86.5215%" y="399.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.16%)</title><rect x="87.0515%" y="293" width="0.1560%" height="15" fill="rgb(244,77,30)"/><text x="87.3015%" y="303.50"></text></g><g><title>netif_rx (4 samples, 0.31%)</title><rect x="87.0515%" y="325" width="0.3120%" height="15" fill="rgb(218,69,12)"/><text x="87.3015%" y="335.50"></text></g><g><title>netif_rx_internal (4 samples, 0.31%)</title><rect x="87.0515%" y="309" width="0.3120%" height="15" fill="rgb(212,87,7)"/><text x="87.3015%" y="319.50"></text></g><g><title>ktime_get_with_offset (2 samples, 0.16%)</title><rect x="87.2075%" y="293" width="0.1560%" height="15" fill="rgb(245,114,25)"/><text x="87.4575%" y="303.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.47%)</title><rect x="86.9735%" y="357" width="0.4680%" height="15" fill="rgb(210,61,42)"/><text x="87.2235%" y="367.50"></text></g><g><title>loopback_xmit (5 samples, 0.39%)</title><rect x="87.0515%" y="341" width="0.3900%" height="15" fill="rgb(211,52,33)"/><text x="87.3015%" y="351.50"></text></g><g><title>__dev_queue_xmit (12 samples, 0.94%)</title><rect x="86.6615%" y="373" width="0.9360%" height="15" fill="rgb(234,58,33)"/><text x="86.9115%" y="383.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.16%)</title><rect x="87.4415%" y="357" width="0.1560%" height="15" fill="rgb(220,115,36)"/><text x="87.6915%" y="367.50"></text></g><g><title>netif_skb_features (2 samples, 0.16%)</title><rect x="87.4415%" y="341" width="0.1560%" height="15" fill="rgb(243,153,54)"/><text x="87.6915%" y="351.50"></text></g><g><title>__this_cpu_preempt_check (2 samples, 0.16%)</title><rect x="87.9095%" y="309" width="0.1560%" height="15" fill="rgb(251,47,18)"/><text x="88.1595%" y="319.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.16%)</title><rect x="88.0655%" y="309" width="0.1560%" height="15" fill="rgb(242,102,42)"/><text x="88.3155%" y="319.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.23%)</title><rect x="89.0016%" y="181" width="0.2340%" height="15" fill="rgb(234,31,38)"/><text x="89.2516%" y="191.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.16%)</title><rect x="89.2356%" y="181" width="0.1560%" height="15" fill="rgb(221,117,51)"/><text x="89.4856%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.31%)</title><rect x="90.2496%" y="85" width="0.3120%" height="15" fill="rgb(212,20,18)"/><text x="90.4996%" y="95.50"></text></g><g><title>enqueue_task (9 samples, 0.70%)</title><rect x="90.5616%" y="85" width="0.7020%" height="15" fill="rgb(245,133,36)"/><text x="90.8116%" y="95.50"></text></g><g><title>psi_task_change (9 samples, 0.70%)</title><rect x="90.5616%" y="69" width="0.7020%" height="15" fill="rgb(212,6,19)"/><text x="90.8116%" y="79.50"></text></g><g><title>psi_group_change (4 samples, 0.31%)</title><rect x="90.9516%" y="53" width="0.3120%" height="15" fill="rgb(218,1,36)"/><text x="91.2016%" y="63.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.16%)</title><rect x="91.5757%" y="53" width="0.1560%" height="15" fill="rgb(246,84,54)"/><text x="91.8257%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.16%)</title><rect x="91.7317%" y="37" width="0.1560%" height="15" fill="rgb(242,110,6)"/><text x="91.9817%" y="47.50"></text></g><g><title>enqueue_task_fair (9 samples, 0.70%)</title><rect x="91.2637%" y="85" width="0.7020%" height="15" fill="rgb(214,47,5)"/><text x="91.5137%" y="95.50"></text></g><g><title>enqueue_entity (9 samples, 0.70%)</title><rect x="91.2637%" y="69" width="0.7020%" height="15" fill="rgb(218,159,25)"/><text x="91.5137%" y="79.50"></text></g><g><title>update_load_avg (3 samples, 0.23%)</title><rect x="91.7317%" y="53" width="0.2340%" height="15" fill="rgb(215,211,28)"/><text x="91.9817%" y="63.50"></text></g><g><title>ttwu_do_wakeup (4 samples, 0.31%)</title><rect x="92.0437%" y="85" width="0.3120%" height="15" fill="rgb(238,59,32)"/><text x="92.2937%" y="95.50"></text></g><g><title>check_preempt_curr (3 samples, 0.23%)</title><rect x="92.1217%" y="69" width="0.2340%" height="15" fill="rgb(226,82,3)"/><text x="92.3717%" y="79.50"></text></g><g><title>resched_curr (3 samples, 0.23%)</title><rect x="92.1217%" y="53" width="0.2340%" height="15" fill="rgb(240,164,32)"/><text x="92.3717%" y="63.50"></text></g><g><title>__wake_up_common (33 samples, 2.57%)</title><rect x="89.9376%" y="117" width="2.5741%" height="15" fill="rgb(232,46,7)"/><text x="90.1876%" y="127.50">__..</text></g><g><title>try_to_wake_up (33 samples, 2.57%)</title><rect x="89.9376%" y="101" width="2.5741%" height="15" fill="rgb(229,129,53)"/><text x="90.1876%" y="111.50">tr..</text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="92.3557%" y="85" width="0.1560%" height="15" fill="rgb(234,188,29)"/><text x="92.6057%" y="95.50"></text></g><g><title>sock_def_readable (35 samples, 2.73%)</title><rect x="89.9376%" y="149" width="2.7301%" height="15" fill="rgb(246,141,4)"/><text x="90.1876%" y="159.50">so..</text></g><g><title>__wake_up_common_lock (35 samples, 2.73%)</title><rect x="89.9376%" y="133" width="2.7301%" height="15" fill="rgb(229,23,39)"/><text x="90.1876%" y="143.50">__..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.16%)</title><rect x="92.5117%" y="117" width="0.1560%" height="15" fill="rgb(206,12,3)"/><text x="92.7617%" y="127.50"></text></g><g><title>__slab_free (3 samples, 0.23%)</title><rect x="93.0577%" y="101" width="0.2340%" height="15" fill="rgb(252,226,20)"/><text x="93.3077%" y="111.50"></text></g><g><title>kfree (6 samples, 0.47%)</title><rect x="92.9797%" y="117" width="0.4680%" height="15" fill="rgb(216,123,35)"/><text x="93.2297%" y="127.50"></text></g><g><title>slab_free_freelist_hook (2 samples, 0.16%)</title><rect x="93.2917%" y="101" width="0.1560%" height="15" fill="rgb(212,68,40)"/><text x="93.5417%" y="111.50"></text></g><g><title>__kfree_skb (8 samples, 0.62%)</title><rect x="92.9017%" y="133" width="0.6240%" height="15" fill="rgb(254,125,32)"/><text x="93.1517%" y="143.50"></text></g><g><title>tcp_ack (17 samples, 1.33%)</title><rect x="92.6677%" y="149" width="1.3261%" height="15" fill="rgb(253,97,22)"/><text x="92.9177%" y="159.50"></text></g><g><title>tcp_check_space (2 samples, 0.16%)</title><rect x="93.9938%" y="149" width="0.1560%" height="15" fill="rgb(241,101,14)"/><text x="94.2438%" y="159.50"></text></g><g><title>tcp_data_queue (2 samples, 0.16%)</title><rect x="94.1498%" y="149" width="0.1560%" height="15" fill="rgb(238,103,29)"/><text x="94.3998%" y="159.50"></text></g><g><title>sock_def_readable (2 samples, 0.16%)</title><rect x="94.1498%" y="133" width="0.1560%" height="15" fill="rgb(233,195,47)"/><text x="94.3998%" y="143.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.16%)</title><rect x="94.1498%" y="117" width="0.1560%" height="15" fill="rgb(246,218,30)"/><text x="94.3998%" y="127.50"></text></g><g><title>__wake_up_common (2 samples, 0.16%)</title><rect x="94.1498%" y="101" width="0.1560%" height="15" fill="rgb(219,145,47)"/><text x="94.3998%" y="111.50"></text></g><g><title>try_to_wake_up (2 samples, 0.16%)</title><rect x="94.1498%" y="85" width="0.1560%" height="15" fill="rgb(243,12,26)"/><text x="94.3998%" y="95.50"></text></g><g><title>tcp_v4_do_rcv (66 samples, 5.15%)</title><rect x="89.3916%" y="181" width="5.1482%" height="15" fill="rgb(214,87,16)"/><text x="89.6416%" y="191.50">tcp_v4..</text></g><g><title>tcp_rcv_established (66 samples, 5.15%)</title><rect x="89.3916%" y="165" width="5.1482%" height="15" fill="rgb(208,99,42)"/><text x="89.6416%" y="175.50">tcp_rc..</text></g><g><title>ip_local_deliver (75 samples, 5.85%)</title><rect x="88.7676%" y="245" width="5.8502%" height="15" fill="rgb(253,99,2)"/><text x="89.0176%" y="255.50">ip_loca..</text></g><g><title>ip_local_deliver_finish (75 samples, 5.85%)</title><rect x="88.7676%" y="229" width="5.8502%" height="15" fill="rgb(220,168,23)"/><text x="89.0176%" y="239.50">ip_loca..</text></g><g><title>ip_protocol_deliver_rcu (75 samples, 5.85%)</title><rect x="88.7676%" y="213" width="5.8502%" height="15" fill="rgb(242,38,24)"/><text x="89.0176%" y="223.50">ip_prot..</text></g><g><title>tcp_v4_rcv (73 samples, 5.69%)</title><rect x="88.9236%" y="197" width="5.6942%" height="15" fill="rgb(225,182,9)"/><text x="89.1736%" y="207.50">tcp_v4_..</text></g><g><title>__netif_receive_skb_one_core (79 samples, 6.16%)</title><rect x="88.6115%" y="277" width="6.1622%" height="15" fill="rgb(243,178,37)"/><text x="88.8615%" y="287.50">__netif_..</text></g><g><title>ip_rcv (78 samples, 6.08%)</title><rect x="88.6895%" y="261" width="6.0842%" height="15" fill="rgb(232,139,19)"/><text x="88.9395%" y="271.50">ip_rcv</text></g><g><title>ip_rcv_core (2 samples, 0.16%)</title><rect x="94.6178%" y="245" width="0.1560%" height="15" fill="rgb(225,201,24)"/><text x="94.8678%" y="255.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.16%)</title><rect x="94.8518%" y="277" width="0.1560%" height="15" fill="rgb(221,47,46)"/><text x="95.1018%" y="287.50"></text></g><g><title>preempt_count_add (2 samples, 0.16%)</title><rect x="94.8518%" y="261" width="0.1560%" height="15" fill="rgb(249,23,13)"/><text x="95.1018%" y="271.50"></text></g><g><title>do_softirq (96 samples, 7.49%)</title><rect x="87.5975%" y="357" width="7.4883%" height="15" fill="rgb(219,9,5)"/><text x="87.8475%" y="367.50">do_softirq</text></g><g><title>do_softirq_own_stack (93 samples, 7.25%)</title><rect x="87.8315%" y="341" width="7.2543%" height="15" fill="rgb(254,171,16)"/><text x="88.0815%" y="351.50">do_softirq..</text></g><g><title>__do_softirq (93 samples, 7.25%)</title><rect x="87.8315%" y="325" width="7.2543%" height="15" fill="rgb(230,171,20)"/><text x="88.0815%" y="335.50">__do_softi..</text></g><g><title>net_rx_action (88 samples, 6.86%)</title><rect x="88.2215%" y="309" width="6.8643%" height="15" fill="rgb(210,71,41)"/><text x="88.4715%" y="319.50">net_rx_ac..</text></g><g><title>process_backlog (86 samples, 6.71%)</title><rect x="88.3775%" y="293" width="6.7083%" height="15" fill="rgb(206,173,20)"/><text x="88.6275%" y="303.50">process_b..</text></g><g><title>__local_bh_enable_ip (98 samples, 7.64%)</title><rect x="87.5975%" y="373" width="7.6443%" height="15" fill="rgb(233,88,34)"/><text x="87.8475%" y="383.50">__local_bh..</text></g><g><title>preempt_count_sub (2 samples, 0.16%)</title><rect x="95.0858%" y="357" width="0.1560%" height="15" fill="rgb(223,209,46)"/><text x="95.3358%" y="367.50"></text></g><g><title>__ip_queue_xmit (120 samples, 9.36%)</title><rect x="85.9594%" y="421" width="9.3604%" height="15" fill="rgb(250,43,18)"/><text x="86.2094%" y="431.50">__ip_queue_xm..</text></g><g><title>ip_output (114 samples, 8.89%)</title><rect x="86.4275%" y="405" width="8.8924%" height="15" fill="rgb(208,13,10)"/><text x="86.6775%" y="415.50">ip_output</text></g><g><title>ip_finish_output2 (113 samples, 8.81%)</title><rect x="86.5055%" y="389" width="8.8144%" height="15" fill="rgb(212,200,36)"/><text x="86.7555%" y="399.50">ip_finish_ou..</text></g><g><title>tcp_options_write (2 samples, 0.16%)</title><rect x="95.3978%" y="421" width="0.1560%" height="15" fill="rgb(225,90,30)"/><text x="95.6478%" y="431.50"></text></g><g><title>__tcp_transmit_skb (131 samples, 10.22%)</title><rect x="85.4134%" y="437" width="10.2184%" height="15" fill="rgb(236,182,39)"/><text x="85.6634%" y="447.50">__tcp_transmit_..</text></g><g><title>tcp_schedule_loss_probe.part.0 (4 samples, 0.31%)</title><rect x="95.7878%" y="437" width="0.3120%" height="15" fill="rgb(212,144,35)"/><text x="96.0378%" y="447.50"></text></g><g><title>sk_reset_timer (2 samples, 0.16%)</title><rect x="95.9438%" y="421" width="0.1560%" height="15" fill="rgb(228,63,44)"/><text x="96.1938%" y="431.50"></text></g><g><title>__mod_timer (2 samples, 0.16%)</title><rect x="95.9438%" y="405" width="0.1560%" height="15" fill="rgb(228,109,6)"/><text x="96.1938%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (140 samples, 10.92%)</title><rect x="85.2574%" y="469" width="10.9204%" height="15" fill="rgb(238,117,24)"/><text x="85.5074%" y="479.50">__tcp_push_pendi..</text></g><g><title>tcp_write_xmit (140 samples, 10.92%)</title><rect x="85.2574%" y="453" width="10.9204%" height="15" fill="rgb(242,26,26)"/><text x="85.5074%" y="463.50">tcp_write_xmit</text></g><g><title>sk_page_frag_refill (2 samples, 0.16%)</title><rect x="96.1778%" y="469" width="0.1560%" height="15" fill="rgb(221,92,48)"/><text x="96.4278%" y="479.50"></text></g><g><title>__ksize (7 samples, 0.55%)</title><rect x="96.3339%" y="437" width="0.5460%" height="15" fill="rgb(209,209,32)"/><text x="96.5839%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (9 samples, 0.70%)</title><rect x="96.3339%" y="469" width="0.7020%" height="15" fill="rgb(221,70,22)"/><text x="96.5839%" y="479.50"></text></g><g><title>__alloc_skb (9 samples, 0.70%)</title><rect x="96.3339%" y="453" width="0.7020%" height="15" fill="rgb(248,145,5)"/><text x="96.5839%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.16%)</title><rect x="96.8799%" y="437" width="0.1560%" height="15" fill="rgb(226,116,26)"/><text x="97.1299%" y="447.50"></text></g><g><title>tcp_rate_check_app_limited (3 samples, 0.23%)</title><rect x="97.1139%" y="469" width="0.2340%" height="15" fill="rgb(244,5,17)"/><text x="97.3639%" y="479.50"></text></g><g><title>sock_sendmsg (168 samples, 13.10%)</title><rect x="84.4774%" y="517" width="13.1045%" height="15" fill="rgb(252,159,33)"/><text x="84.7274%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (168 samples, 13.10%)</title><rect x="84.4774%" y="501" width="13.1045%" height="15" fill="rgb(206,71,0)"/><text x="84.7274%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (162 samples, 12.64%)</title><rect x="84.9454%" y="485" width="12.6365%" height="15" fill="rgb(233,118,54)"/><text x="85.1954%" y="495.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (3 samples, 0.23%)</title><rect x="97.3479%" y="469" width="0.2340%" height="15" fill="rgb(234,83,48)"/><text x="97.5979%" y="479.50"></text></g><g><title>do_syscall_64 (177 samples, 13.81%)</title><rect x="84.0874%" y="565" width="13.8066%" height="15" fill="rgb(228,3,54)"/><text x="84.3374%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (175 samples, 13.65%)</title><rect x="84.2434%" y="549" width="13.6505%" height="15" fill="rgb(226,155,13)"/><text x="84.4934%" y="559.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (174 samples, 13.57%)</title><rect x="84.3214%" y="533" width="13.5725%" height="15" fill="rgb(241,28,37)"/><text x="84.5714%" y="543.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (4 samples, 0.31%)</title><rect x="97.5819%" y="517" width="0.3120%" height="15" fill="rgb(233,93,10)"/><text x="97.8319%" y="527.50"></text></g><g><title>__fget_light (3 samples, 0.23%)</title><rect x="97.6599%" y="501" width="0.2340%" height="15" fill="rgb(225,113,19)"/><text x="97.9099%" y="511.50"></text></g><g><title>__fget_files (2 samples, 0.16%)</title><rect x="97.7379%" y="485" width="0.1560%" height="15" fill="rgb(241,2,18)"/><text x="97.9879%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (184 samples, 14.35%)</title><rect x="84.0874%" y="581" width="14.3526%" height="15" fill="rgb(228,207,21)"/><text x="84.3374%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.55%)</title><rect x="97.8939%" y="565" width="0.5460%" height="15" fill="rgb(213,211,35)"/><text x="98.1439%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (201 samples, 15.68%)</title><rect x="83.0733%" y="677" width="15.6786%" height="15" fill="rgb(209,83,10)"/><text x="83.3233%" y="687.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (191 samples, 14.90%)</title><rect x="83.8534%" y="661" width="14.8986%" height="15" fill="rgb(209,164,1)"/><text x="84.1034%" y="671.50">mysql_common::proto::sy..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (191 samples, 14.90%)</title><rect x="83.8534%" y="645" width="14.8986%" height="15" fill="rgb(213,184,43)"/><text x="84.1034%" y="655.50">std::io::buffered::BufW..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (191 samples, 14.90%)</title><rect x="83.8534%" y="629" width="14.8986%" height="15" fill="rgb(231,61,34)"/><text x="84.1034%" y="639.50">&lt;std::net::tcp::TcpStre..</text></g><g><title>std::sys_common::net::TcpStream::write (191 samples, 14.90%)</title><rect x="83.8534%" y="613" width="14.8986%" height="15" fill="rgb(235,75,3)"/><text x="84.1034%" y="623.50">std::sys_common::net::T..</text></g><g><title>__libc_send (191 samples, 14.90%)</title><rect x="83.8534%" y="597" width="14.8986%" height="15" fill="rgb(220,106,47)"/><text x="84.1034%" y="607.50">__libc_send</text></g><g><title>syscall_return_via_sysret (4 samples, 0.31%)</title><rect x="98.4399%" y="581" width="0.3120%" height="15" fill="rgb(210,196,33)"/><text x="98.6899%" y="591.50"></text></g><g><title>__libc_start_main (476 samples, 37.13%)</title><rect x="61.7005%" y="837" width="37.1295%" height="15" fill="rgb(229,154,42)"/><text x="61.9505%" y="847.50">__libc_start_main</text></g><g><title>main (475 samples, 37.05%)</title><rect x="61.7785%" y="821" width="37.0515%" height="15" fill="rgb(228,114,26)"/><text x="62.0285%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (475 samples, 37.05%)</title><rect x="61.7785%" y="805" width="37.0515%" height="15" fill="rgb(208,144,1)"/><text x="62.0285%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (475 samples, 37.05%)</title><rect x="61.7785%" y="789" width="37.0515%" height="15" fill="rgb(239,112,37)"/><text x="62.0285%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (475 samples, 37.05%)</title><rect x="61.7785%" y="773" width="37.0515%" height="15" fill="rgb(210,96,50)"/><text x="62.0285%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (475 samples, 37.05%)</title><rect x="61.7785%" y="757" width="37.0515%" height="15" fill="rgb(222,178,2)"/><text x="62.0285%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (475 samples, 37.05%)</title><rect x="61.7785%" y="741" width="37.0515%" height="15" fill="rgb(226,74,18)"/><text x="62.0285%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnc..</text></g><g><title>std::rt::lang_start::_{{closure}} (475 samples, 37.05%)</title><rect x="61.7785%" y="725" width="37.0515%" height="15" fill="rgb(225,67,54)"/><text x="62.0285%" y="735.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (475 samples, 37.05%)</title><rect x="61.7785%" y="709" width="37.0515%" height="15" fill="rgb(251,92,32)"/><text x="62.0285%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (475 samples, 37.05%)</title><rect x="61.7785%" y="693" width="37.0515%" height="15" fill="rgb(228,149,22)"/><text x="62.0285%" y="703.50">lobsters::main</text></g><g><title>_start (477 samples, 37.21%)</title><rect x="61.7005%" y="853" width="37.2075%" height="15" fill="rgb(243,54,13)"/><text x="61.9505%" y="863.50">_start</text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="98.9080%" y="853" width="0.1560%" height="15" fill="rgb(243,180,28)"/><text x="99.1580%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.31%)</title><rect x="99.1420%" y="853" width="0.3120%" height="15" fill="rgb(208,167,24)"/><text x="99.3920%" y="863.50"></text></g><g><title>do_syscall_64 (2 samples, 0.16%)</title><rect x="99.2980%" y="837" width="0.1560%" height="15" fill="rgb(245,73,45)"/><text x="99.5480%" y="847.50"></text></g><g><title>lobsters (1,276 samples, 99.53%)</title><rect x="0.0000%" y="869" width="99.5320%" height="15" fill="rgb(237,203,48)"/><text x="0.2500%" y="879.50">lobsters</text></g><g><title>all (1,282 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(211,197,16)"/><text x="0.2500%" y="895.50"></text></g><g><title>perf (6 samples, 0.47%)</title><rect x="99.5320%" y="869" width="0.4680%" height="15" fill="rgb(243,99,51)"/><text x="99.7820%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.47%)</title><rect x="99.5320%" y="853" width="0.4680%" height="15" fill="rgb(215,123,29)"/><text x="99.7820%" y="863.50"></text></g><g><title>do_syscall_64 (6 samples, 0.47%)</title><rect x="99.5320%" y="837" width="0.4680%" height="15" fill="rgb(239,186,37)"/><text x="99.7820%" y="847.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.47%)</title><rect x="99.5320%" y="821" width="0.4680%" height="15" fill="rgb(252,136,39)"/><text x="99.7820%" y="831.50"></text></g><g><title>do_execve (6 samples, 0.47%)</title><rect x="99.5320%" y="805" width="0.4680%" height="15" fill="rgb(223,213,32)"/><text x="99.7820%" y="815.50"></text></g><g><title>__do_execve_file (6 samples, 0.47%)</title><rect x="99.5320%" y="789" width="0.4680%" height="15" fill="rgb(233,115,5)"/><text x="99.7820%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.47%)</title><rect x="99.5320%" y="773" width="0.4680%" height="15" fill="rgb(207,226,44)"/><text x="99.7820%" y="783.50"></text></g><g><title>load_elf_binary (6 samples, 0.47%)</title><rect x="99.5320%" y="757" width="0.4680%" height="15" fill="rgb(208,126,0)"/><text x="99.7820%" y="767.50"></text></g><g><title>setup_new_exec (6 samples, 0.47%)</title><rect x="99.5320%" y="741" width="0.4680%" height="15" fill="rgb(244,66,21)"/><text x="99.7820%" y="751.50"></text></g><g><title>perf_event_exec (6 samples, 0.47%)</title><rect x="99.5320%" y="725" width="0.4680%" height="15" fill="rgb(222,97,12)"/><text x="99.7820%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.39%)</title><rect x="99.6100%" y="709" width="0.3900%" height="15" fill="rgb(219,213,19)"/><text x="99.8600%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.39%)</title><rect x="99.6100%" y="693" width="0.3900%" height="15" fill="rgb(252,169,30)"/><text x="99.8600%" y="703.50"></text></g></svg></svg>