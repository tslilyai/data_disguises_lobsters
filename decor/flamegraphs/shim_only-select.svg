<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="0.0000%" y="853" width="0.1124%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="0.1124%" y="853" width="0.1124%" height="15" fill="rgb(217,0,24)"/><text x="0.3624%" y="863.50"></text></g><g><title>[[stack]] (3 samples, 0.34%)</title><rect x="0.0000%" y="869" width="0.3371%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="879.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="0.2247%" y="853" width="0.1124%" height="15" fill="rgb(248,212,6)"/><text x="0.4747%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="0.3371%" y="853" width="0.1124%" height="15" fill="rgb(208,68,35)"/><text x="0.5871%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="0.4494%" y="853" width="0.1124%" height="15" fill="rgb(232,128,0)"/><text x="0.6994%" y="863.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="0.5618%" y="853" width="0.1124%" height="15" fill="rgb(207,160,47)"/><text x="0.8118%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.34%)</title><rect x="0.6742%" y="853" width="0.3371%" height="15" fill="rgb(228,23,34)"/><text x="0.9242%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="1.0112%" y="853" width="0.1124%" height="15" fill="rgb(218,30,26)"/><text x="1.2612%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="1.1236%" y="853" width="0.1124%" height="15" fill="rgb(220,122,19)"/><text x="1.3736%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="1.1236%" y="837" width="0.1124%" height="15" fill="rgb(250,228,42)"/><text x="1.3736%" y="847.50"></text></g><g><title>__libc_send (2 samples, 0.22%)</title><rect x="1.2360%" y="853" width="0.2247%" height="15" fill="rgb(240,193,28)"/><text x="1.4860%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.22%)</title><rect x="1.2360%" y="837" width="0.2247%" height="15" fill="rgb(216,20,37)"/><text x="1.4860%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="1.4607%" y="853" width="0.1124%" height="15" fill="rgb(206,188,39)"/><text x="1.7107%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="1.5730%" y="853" width="0.1124%" height="15" fill="rgb(217,207,13)"/><text x="1.8230%" y="863.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (1 samples, 0.11%)</title><rect x="1.6854%" y="853" width="0.1124%" height="15" fill="rgb(231,73,38)"/><text x="1.9354%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.22%)</title><rect x="1.7978%" y="853" width="0.2247%" height="15" fill="rgb(225,20,46)"/><text x="2.0478%" y="863.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="2.0225%" y="853" width="0.1124%" height="15" fill="rgb(210,31,41)"/><text x="2.2725%" y="863.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.11%)</title><rect x="2.1348%" y="853" width="0.1124%" height="15" fill="rgb(221,200,47)"/><text x="2.3848%" y="863.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="2.2472%" y="853" width="0.1124%" height="15" fill="rgb(226,26,5)"/><text x="2.4972%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="2.3596%" y="853" width="0.1124%" height="15" fill="rgb(249,33,26)"/><text x="2.6096%" y="863.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.22%)</title><rect x="2.4719%" y="853" width="0.2247%" height="15" fill="rgb(235,183,28)"/><text x="2.7219%" y="863.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="2.6966%" y="853" width="0.1124%" height="15" fill="rgb(221,5,38)"/><text x="2.9466%" y="863.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="2.8090%" y="853" width="0.1124%" height="15" fill="rgb(247,18,42)"/><text x="3.0590%" y="863.50"></text></g><g><title>[anon] (24 samples, 2.70%)</title><rect x="0.3371%" y="869" width="2.6966%" height="15" fill="rgb(241,131,45)"/><text x="0.5871%" y="879.50">[a..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="2.9213%" y="853" width="0.1124%" height="15" fill="rgb(249,31,29)"/><text x="3.1713%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="2.9213%" y="837" width="0.1124%" height="15" fill="rgb(225,111,53)"/><text x="3.1713%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="2.9213%" y="821" width="0.1124%" height="15" fill="rgb(238,160,17)"/><text x="3.1713%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="2.9213%" y="805" width="0.1124%" height="15" fill="rgb(214,148,48)"/><text x="3.1713%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="2.9213%" y="789" width="0.1124%" height="15" fill="rgb(232,36,49)"/><text x="3.1713%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="2.9213%" y="773" width="0.1124%" height="15" fill="rgb(209,103,24)"/><text x="3.1713%" y="783.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="3.0337%" y="853" width="0.1124%" height="15" fill="rgb(229,88,8)"/><text x="3.2837%" y="863.50"></text></g><g><title>__GI___sched_setaffinity_new (1 samples, 0.11%)</title><rect x="3.1461%" y="853" width="0.1124%" height="15" fill="rgb(213,181,19)"/><text x="3.3961%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="3.2584%" y="693" width="0.1124%" height="15" fill="rgb(254,191,54)"/><text x="3.5084%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="3.2584%" y="677" width="0.1124%" height="15" fill="rgb(241,83,37)"/><text x="3.5084%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="3.2584%" y="661" width="0.1124%" height="15" fill="rgb(233,36,39)"/><text x="3.5084%" y="671.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="3.2584%" y="645" width="0.1124%" height="15" fill="rgb(226,3,54)"/><text x="3.5084%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="3.2584%" y="629" width="0.1124%" height="15" fill="rgb(245,192,40)"/><text x="3.5084%" y="639.50"></text></g><g><title>__GI___isoc99_sscanf (1 samples, 0.11%)</title><rect x="3.3708%" y="613" width="0.1124%" height="15" fill="rgb(238,167,29)"/><text x="3.6208%" y="623.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.22%)</title><rect x="3.3708%" y="693" width="0.2247%" height="15" fill="rgb(232,182,51)"/><text x="3.6208%" y="703.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.22%)</title><rect x="3.3708%" y="677" width="0.2247%" height="15" fill="rgb(231,60,39)"/><text x="3.6208%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.22%)</title><rect x="3.3708%" y="661" width="0.2247%" height="15" fill="rgb(208,69,12)"/><text x="3.6208%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.22%)</title><rect x="3.3708%" y="645" width="0.2247%" height="15" fill="rgb(235,93,37)"/><text x="3.6208%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.22%)</title><rect x="3.3708%" y="629" width="0.2247%" height="15" fill="rgb(213,116,39)"/><text x="3.6208%" y="639.50"></text></g><g><title>__libc_read (1 samples, 0.11%)</title><rect x="3.4831%" y="613" width="0.1124%" height="15" fill="rgb(222,207,29)"/><text x="3.7331%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="3.4831%" y="597" width="0.1124%" height="15" fill="rgb(206,96,30)"/><text x="3.7331%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="3.4831%" y="581" width="0.1124%" height="15" fill="rgb(218,138,4)"/><text x="3.7331%" y="591.50"></text></g><g><title>ksys_read (1 samples, 0.11%)</title><rect x="3.4831%" y="565" width="0.1124%" height="15" fill="rgb(250,191,14)"/><text x="3.7331%" y="575.50"></text></g><g><title>vfs_read (1 samples, 0.11%)</title><rect x="3.4831%" y="549" width="0.1124%" height="15" fill="rgb(239,60,40)"/><text x="3.7331%" y="559.50"></text></g><g><title>seq_read (1 samples, 0.11%)</title><rect x="3.4831%" y="533" width="0.1124%" height="15" fill="rgb(206,27,48)"/><text x="3.7331%" y="543.50"></text></g><g><title>sysfs_kf_seq_show (1 samples, 0.11%)</title><rect x="3.4831%" y="517" width="0.1124%" height="15" fill="rgb(225,35,8)"/><text x="3.7331%" y="527.50"></text></g><g><title>dev_attr_show (1 samples, 0.11%)</title><rect x="3.4831%" y="501" width="0.1124%" height="15" fill="rgb(250,213,24)"/><text x="3.7331%" y="511.50"></text></g><g><title>shared_cpu_map_show (1 samples, 0.11%)</title><rect x="3.4831%" y="485" width="0.1124%" height="15" fill="rgb(247,123,22)"/><text x="3.7331%" y="495.50"></text></g><g><title>scnprintf (1 samples, 0.11%)</title><rect x="3.4831%" y="469" width="0.1124%" height="15" fill="rgb(231,138,38)"/><text x="3.7331%" y="479.50"></text></g><g><title>vsnprintf (1 samples, 0.11%)</title><rect x="3.4831%" y="453" width="0.1124%" height="15" fill="rgb(231,145,46)"/><text x="3.7331%" y="463.50"></text></g><g><title>__libc_start_main (4 samples, 0.45%)</title><rect x="3.2584%" y="853" width="0.4494%" height="15" fill="rgb(251,118,11)"/><text x="3.5084%" y="863.50"></text></g><g><title>main (4 samples, 0.45%)</title><rect x="3.2584%" y="837" width="0.4494%" height="15" fill="rgb(217,147,25)"/><text x="3.5084%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.45%)</title><rect x="3.2584%" y="821" width="0.4494%" height="15" fill="rgb(247,81,37)"/><text x="3.5084%" y="831.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.45%)</title><rect x="3.2584%" y="805" width="0.4494%" height="15" fill="rgb(209,12,38)"/><text x="3.5084%" y="815.50"></text></g><g><title>std::panicking::try (4 samples, 0.45%)</title><rect x="3.2584%" y="789" width="0.4494%" height="15" fill="rgb(227,1,9)"/><text x="3.5084%" y="799.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.45%)</title><rect x="3.2584%" y="773" width="0.4494%" height="15" fill="rgb(248,47,43)"/><text x="3.5084%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.45%)</title><rect x="3.2584%" y="757" width="0.4494%" height="15" fill="rgb(221,10,30)"/><text x="3.5084%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.45%)</title><rect x="3.2584%" y="741" width="0.4494%" height="15" fill="rgb(210,229,1)"/><text x="3.5084%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.45%)</title><rect x="3.2584%" y="725" width="0.4494%" height="15" fill="rgb(222,148,37)"/><text x="3.5084%" y="735.50"></text></g><g><title>lobsters::main (4 samples, 0.45%)</title><rect x="3.2584%" y="709" width="0.4494%" height="15" fill="rgb(234,67,33)"/><text x="3.5084%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="3.5955%" y="693" width="0.1124%" height="15" fill="rgb(247,98,35)"/><text x="3.8455%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="3.5955%" y="677" width="0.1124%" height="15" fill="rgb(247,138,52)"/><text x="3.8455%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="3.5955%" y="661" width="0.1124%" height="15" fill="rgb(213,79,30)"/><text x="3.8455%" y="671.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="3.5955%" y="645" width="0.1124%" height="15" fill="rgb(246,177,23)"/><text x="3.8455%" y="655.50"></text></g><g><title>__rdl_alloc (2 samples, 0.22%)</title><rect x="3.7079%" y="853" width="0.2247%" height="15" fill="rgb(230,62,27)"/><text x="3.9579%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.22%)</title><rect x="3.7079%" y="837" width="0.2247%" height="15" fill="rgb(216,154,8)"/><text x="3.9579%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.45%)</title><rect x="3.9326%" y="853" width="0.4494%" height="15" fill="rgb(244,35,45)"/><text x="4.1826%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="4.3820%" y="853" width="0.1124%" height="15" fill="rgb(251,115,12)"/><text x="4.6320%" y="863.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.11%)</title><rect x="4.4944%" y="853" width="0.1124%" height="15" fill="rgb(240,54,50)"/><text x="4.7444%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="4.6067%" y="853" width="0.1124%" height="15" fill="rgb(233,84,52)"/><text x="4.8567%" y="863.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.11%)</title><rect x="4.7191%" y="709" width="0.1124%" height="15" fill="rgb(207,117,47)"/><text x="4.9691%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="4.8315%" y="709" width="0.1124%" height="15" fill="rgb(249,43,39)"/><text x="5.0815%" y="719.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.11%)</title><rect x="4.9438%" y="709" width="0.1124%" height="15" fill="rgb(209,38,44)"/><text x="5.1938%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5 samples, 0.56%)</title><rect x="4.7191%" y="853" width="0.5618%" height="15" fill="rgb(236,212,23)"/><text x="4.9691%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.56%)</title><rect x="4.7191%" y="837" width="0.5618%" height="15" fill="rgb(242,79,21)"/><text x="4.9691%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (5 samples, 0.56%)</title><rect x="4.7191%" y="821" width="0.5618%" height="15" fill="rgb(211,96,35)"/><text x="4.9691%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (5 samples, 0.56%)</title><rect x="4.7191%" y="805" width="0.5618%" height="15" fill="rgb(253,215,40)"/><text x="4.9691%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (5 samples, 0.56%)</title><rect x="4.7191%" y="789" width="0.5618%" height="15" fill="rgb(211,81,21)"/><text x="4.9691%" y="799.50"></text></g><g><title>decor::answer_rows (5 samples, 0.56%)</title><rect x="4.7191%" y="773" width="0.5618%" height="15" fill="rgb(208,190,38)"/><text x="4.9691%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.56%)</title><rect x="4.7191%" y="757" width="0.5618%" height="15" fill="rgb(235,213,38)"/><text x="4.9691%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (5 samples, 0.56%)</title><rect x="4.7191%" y="741" width="0.5618%" height="15" fill="rgb(237,122,38)"/><text x="4.9691%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (5 samples, 0.56%)</title><rect x="4.7191%" y="725" width="0.5618%" height="15" fill="rgb(244,218,35)"/><text x="4.9691%" y="735.50"></text></g><g><title>mysql_common::value::read_text_values (2 samples, 0.22%)</title><rect x="5.0562%" y="709" width="0.2247%" height="15" fill="rgb(240,68,47)"/><text x="5.3062%" y="719.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.22%)</title><rect x="5.0562%" y="693" width="0.2247%" height="15" fill="rgb(210,16,53)"/><text x="5.3062%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="5.2809%" y="853" width="0.1124%" height="15" fill="rgb(235,124,12)"/><text x="5.5309%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (1 samples, 0.11%)</title><rect x="5.3933%" y="837" width="0.1124%" height="15" fill="rgb(224,169,11)"/><text x="5.6433%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.3933%" y="821" width="0.1124%" height="15" fill="rgb(250,166,2)"/><text x="5.6433%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="5.3933%" y="805" width="0.1124%" height="15" fill="rgb(242,216,29)"/><text x="5.6433%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::DataType as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.3933%" y="789" width="0.1124%" height="15" fill="rgb(230,116,27)"/><text x="5.6433%" y="799.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.34%)</title><rect x="5.3933%" y="853" width="0.3371%" height="15" fill="rgb(228,99,48)"/><text x="5.6433%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.22%)</title><rect x="5.5056%" y="837" width="0.2247%" height="15" fill="rgb(253,11,6)"/><text x="5.7556%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.22%)</title><rect x="5.5056%" y="821" width="0.2247%" height="15" fill="rgb(247,143,39)"/><text x="5.7556%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.22%)</title><rect x="5.5056%" y="805" width="0.2247%" height="15" fill="rgb(236,97,10)"/><text x="5.7556%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.22%)</title><rect x="5.5056%" y="789" width="0.2247%" height="15" fill="rgb(233,208,19)"/><text x="5.7556%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.22%)</title><rect x="5.5056%" y="773" width="0.2247%" height="15" fill="rgb(216,164,2)"/><text x="5.7556%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="5.6180%" y="757" width="0.1124%" height="15" fill="rgb(220,129,5)"/><text x="5.8680%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="5.6180%" y="741" width="0.1124%" height="15" fill="rgb(242,17,10)"/><text x="5.8680%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="5.6180%" y="725" width="0.1124%" height="15" fill="rgb(242,107,0)"/><text x="5.8680%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="5.6180%" y="709" width="0.1124%" height="15" fill="rgb(251,28,31)"/><text x="5.8680%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (2 samples, 0.22%)</title><rect x="5.7303%" y="645" width="0.2247%" height="15" fill="rgb(233,223,10)"/><text x="5.9803%" y="655.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.34%)</title><rect x="5.7303%" y="853" width="0.3371%" height="15" fill="rgb(215,21,27)"/><text x="5.9803%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.34%)</title><rect x="5.7303%" y="837" width="0.3371%" height="15" fill="rgb(232,23,21)"/><text x="5.9803%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.34%)</title><rect x="5.7303%" y="821" width="0.3371%" height="15" fill="rgb(244,5,23)"/><text x="5.9803%" y="831.50"></text></g><g><title>decor::answer_rows (3 samples, 0.34%)</title><rect x="5.7303%" y="805" width="0.3371%" height="15" fill="rgb(226,81,46)"/><text x="5.9803%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="5.7303%" y="789" width="0.3371%" height="15" fill="rgb(247,70,30)"/><text x="5.9803%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.34%)</title><rect x="5.7303%" y="773" width="0.3371%" height="15" fill="rgb(212,68,19)"/><text x="5.9803%" y="783.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.34%)</title><rect x="5.7303%" y="757" width="0.3371%" height="15" fill="rgb(240,187,13)"/><text x="5.9803%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.34%)</title><rect x="5.7303%" y="741" width="0.3371%" height="15" fill="rgb(223,113,26)"/><text x="5.9803%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="5.7303%" y="725" width="0.3371%" height="15" fill="rgb(206,192,2)"/><text x="5.9803%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.34%)</title><rect x="5.7303%" y="709" width="0.3371%" height="15" fill="rgb(241,108,4)"/><text x="5.9803%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.34%)</title><rect x="5.7303%" y="693" width="0.3371%" height="15" fill="rgb(247,173,49)"/><text x="5.9803%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="5.7303%" y="677" width="0.3371%" height="15" fill="rgb(224,114,35)"/><text x="5.9803%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="5.7303%" y="661" width="0.3371%" height="15" fill="rgb(245,159,27)"/><text x="5.9803%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="5.9551%" y="645" width="0.1124%" height="15" fill="rgb(245,172,44)"/><text x="6.2051%" y="655.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="6.0674%" y="853" width="0.1124%" height="15" fill="rgb(236,23,11)"/><text x="6.3174%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="6.0674%" y="837" width="0.1124%" height="15" fill="rgb(205,117,38)"/><text x="6.3174%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.11%)</title><rect x="6.0674%" y="821" width="0.1124%" height="15" fill="rgb(237,72,25)"/><text x="6.3174%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.11%)</title><rect x="6.0674%" y="805" width="0.1124%" height="15" fill="rgb(244,70,9)"/><text x="6.3174%" y="815.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="6.1798%" y="837" width="0.1124%" height="15" fill="rgb(217,125,39)"/><text x="6.4298%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="6.1798%" y="821" width="0.1124%" height="15" fill="rgb(235,36,10)"/><text x="6.4298%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="6.1798%" y="805" width="0.1124%" height="15" fill="rgb(251,123,47)"/><text x="6.4298%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="6.1798%" y="789" width="0.1124%" height="15" fill="rgb(221,13,13)"/><text x="6.4298%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="6.1798%" y="773" width="0.1124%" height="15" fill="rgb(238,131,9)"/><text x="6.4298%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="6.1798%" y="757" width="0.1124%" height="15" fill="rgb(211,50,8)"/><text x="6.4298%" y="767.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="6.1798%" y="741" width="0.1124%" height="15" fill="rgb(245,182,24)"/><text x="6.4298%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="6.1798%" y="725" width="0.1124%" height="15" fill="rgb(242,14,37)"/><text x="6.4298%" y="735.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="6.1798%" y="709" width="0.1124%" height="15" fill="rgb(246,228,12)"/><text x="6.4298%" y="719.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="6.1798%" y="693" width="0.1124%" height="15" fill="rgb(213,55,15)"/><text x="6.4298%" y="703.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="6.1798%" y="677" width="0.1124%" height="15" fill="rgb(209,9,3)"/><text x="6.4298%" y="687.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="6.1798%" y="661" width="0.1124%" height="15" fill="rgb(230,59,30)"/><text x="6.4298%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="6.1798%" y="645" width="0.1124%" height="15" fill="rgb(209,121,21)"/><text x="6.4298%" y="655.50"></text></g><g><title>lobsters::main (2 samples, 0.22%)</title><rect x="6.1798%" y="853" width="0.2247%" height="15" fill="rgb(220,109,13)"/><text x="6.4298%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="6.2921%" y="837" width="0.1124%" height="15" fill="rgb(232,18,1)"/><text x="6.5421%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="6.2921%" y="821" width="0.1124%" height="15" fill="rgb(215,41,42)"/><text x="6.5421%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="6.2921%" y="805" width="0.1124%" height="15" fill="rgb(224,123,36)"/><text x="6.5421%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="6.2921%" y="789" width="0.1124%" height="15" fill="rgb(240,125,3)"/><text x="6.5421%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="6.2921%" y="773" width="0.1124%" height="15" fill="rgb(205,98,50)"/><text x="6.5421%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="6.2921%" y="757" width="0.1124%" height="15" fill="rgb(205,185,37)"/><text x="6.5421%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="6.2921%" y="741" width="0.1124%" height="15" fill="rgb(238,207,15)"/><text x="6.5421%" y="751.50"></text></g><g><title>main (1 samples, 0.11%)</title><rect x="6.4045%" y="853" width="0.1124%" height="15" fill="rgb(213,199,42)"/><text x="6.6545%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.11%)</title><rect x="6.4045%" y="837" width="0.1124%" height="15" fill="rgb(235,201,11)"/><text x="6.6545%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.11%)</title><rect x="6.4045%" y="821" width="0.1124%" height="15" fill="rgb(207,46,11)"/><text x="6.6545%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.11%)</title><rect x="6.4045%" y="805" width="0.1124%" height="15" fill="rgb(241,35,35)"/><text x="6.6545%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.11%)</title><rect x="6.4045%" y="789" width="0.1124%" height="15" fill="rgb(243,32,47)"/><text x="6.6545%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.11%)</title><rect x="6.4045%" y="773" width="0.1124%" height="15" fill="rgb(247,202,23)"/><text x="6.6545%" y="783.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.11%)</title><rect x="6.4045%" y="757" width="0.1124%" height="15" fill="rgb(219,102,11)"/><text x="6.6545%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.11%)</title><rect x="6.4045%" y="741" width="0.1124%" height="15" fill="rgb(243,110,44)"/><text x="6.6545%" y="751.50"></text></g><g><title>lobsters::main (1 samples, 0.11%)</title><rect x="6.4045%" y="725" width="0.1124%" height="15" fill="rgb(222,74,54)"/><text x="6.6545%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="6.4045%" y="709" width="0.1124%" height="15" fill="rgb(216,99,12)"/><text x="6.6545%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="6.4045%" y="693" width="0.1124%" height="15" fill="rgb(226,22,26)"/><text x="6.6545%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="6.4045%" y="677" width="0.1124%" height="15" fill="rgb(217,163,10)"/><text x="6.6545%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="6.4045%" y="661" width="0.1124%" height="15" fill="rgb(213,25,53)"/><text x="6.6545%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="6.5169%" y="853" width="0.1124%" height="15" fill="rgb(252,105,26)"/><text x="6.7669%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="6.6292%" y="853" width="0.1124%" height="15" fill="rgb(220,39,43)"/><text x="6.8792%" y="863.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.22%)</title><rect x="6.7416%" y="853" width="0.2247%" height="15" fill="rgb(229,68,48)"/><text x="6.9916%" y="863.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.11%)</title><rect x="6.9663%" y="853" width="0.1124%" height="15" fill="rgb(252,8,32)"/><text x="7.2163%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="7.0787%" y="853" width="0.2247%" height="15" fill="rgb(223,20,43)"/><text x="7.3287%" y="863.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="7.3034%" y="853" width="0.1124%" height="15" fill="rgb(229,81,49)"/><text x="7.5534%" y="863.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="7.4157%" y="853" width="0.1124%" height="15" fill="rgb(236,28,36)"/><text x="7.6657%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="7.4157%" y="837" width="0.1124%" height="15" fill="rgb(249,185,26)"/><text x="7.6657%" y="847.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.11%)</title><rect x="7.4157%" y="821" width="0.1124%" height="15" fill="rgb(249,174,33)"/><text x="7.6657%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="7.4157%" y="805" width="0.1124%" height="15" fill="rgb(233,201,37)"/><text x="7.6657%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="7.4157%" y="789" width="0.1124%" height="15" fill="rgb(221,78,26)"/><text x="7.6657%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="7.4157%" y="773" width="0.1124%" height="15" fill="rgb(250,127,30)"/><text x="7.6657%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="7.4157%" y="757" width="0.1124%" height="15" fill="rgb(230,49,44)"/><text x="7.6657%" y="767.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.11%)</title><rect x="7.4157%" y="741" width="0.1124%" height="15" fill="rgb(229,67,23)"/><text x="7.6657%" y="751.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="7.4157%" y="725" width="0.1124%" height="15" fill="rgb(249,83,47)"/><text x="7.6657%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="7.5281%" y="853" width="0.1124%" height="15" fill="rgb(215,43,3)"/><text x="7.7781%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.11%)</title><rect x="7.5281%" y="837" width="0.1124%" height="15" fill="rgb(238,154,13)"/><text x="7.7781%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.11%)</title><rect x="7.5281%" y="821" width="0.1124%" height="15" fill="rgb(219,56,2)"/><text x="7.7781%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="7.5281%" y="805" width="0.1124%" height="15" fill="rgb(233,0,4)"/><text x="7.7781%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="7.5281%" y="789" width="0.1124%" height="15" fill="rgb(235,30,7)"/><text x="7.7781%" y="799.50"></text></g><g><title>decor::answer_rows (1 samples, 0.11%)</title><rect x="7.6404%" y="709" width="0.1124%" height="15" fill="rgb(250,79,13)"/><text x="7.8904%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.6404%" y="693" width="0.1124%" height="15" fill="rgb(211,146,34)"/><text x="7.8904%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="7.6404%" y="677" width="0.1124%" height="15" fill="rgb(228,22,38)"/><text x="7.8904%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="7.6404%" y="661" width="0.1124%" height="15" fill="rgb(235,168,5)"/><text x="7.8904%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="7.6404%" y="645" width="0.1124%" height="15" fill="rgb(221,155,16)"/><text x="7.8904%" y="655.50"></text></g><g><title>start_thread (3 samples, 0.34%)</title><rect x="7.6404%" y="853" width="0.3371%" height="15" fill="rgb(215,215,53)"/><text x="7.8904%" y="863.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.34%)</title><rect x="7.6404%" y="837" width="0.3371%" height="15" fill="rgb(223,4,10)"/><text x="7.8904%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.34%)</title><rect x="7.6404%" y="821" width="0.3371%" height="15" fill="rgb(234,103,6)"/><text x="7.8904%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.34%)</title><rect x="7.6404%" y="805" width="0.3371%" height="15" fill="rgb(227,97,0)"/><text x="7.8904%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.34%)</title><rect x="7.6404%" y="789" width="0.3371%" height="15" fill="rgb(234,150,53)"/><text x="7.8904%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.34%)</title><rect x="7.6404%" y="773" width="0.3371%" height="15" fill="rgb(228,201,54)"/><text x="7.8904%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.34%)</title><rect x="7.6404%" y="757" width="0.3371%" height="15" fill="rgb(222,22,37)"/><text x="7.8904%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.34%)</title><rect x="7.6404%" y="741" width="0.3371%" height="15" fill="rgb(237,53,32)"/><text x="7.8904%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.34%)</title><rect x="7.6404%" y="725" width="0.3371%" height="15" fill="rgb(233,25,53)"/><text x="7.8904%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.22%)</title><rect x="7.7528%" y="709" width="0.2247%" height="15" fill="rgb(210,40,34)"/><text x="8.0028%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.22%)</title><rect x="7.7528%" y="693" width="0.2247%" height="15" fill="rgb(241,220,44)"/><text x="8.0028%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.22%)</title><rect x="7.7528%" y="677" width="0.2247%" height="15" fill="rgb(235,28,35)"/><text x="8.0028%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="7.7528%" y="661" width="0.2247%" height="15" fill="rgb(210,56,17)"/><text x="8.0028%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.22%)</title><rect x="7.7528%" y="645" width="0.2247%" height="15" fill="rgb(224,130,29)"/><text x="8.0028%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.22%)</title><rect x="7.7528%" y="629" width="0.2247%" height="15" fill="rgb(235,212,8)"/><text x="8.0028%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="7.7528%" y="613" width="0.2247%" height="15" fill="rgb(223,33,50)"/><text x="8.0028%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="7.7528%" y="597" width="0.2247%" height="15" fill="rgb(219,149,13)"/><text x="8.0028%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.11%)</title><rect x="7.8652%" y="581" width="0.1124%" height="15" fill="rgb(250,156,29)"/><text x="8.1152%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.34%)</title><rect x="7.9775%" y="853" width="0.3371%" height="15" fill="rgb(216,193,19)"/><text x="8.2275%" y="863.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (2 samples, 0.22%)</title><rect x="8.3146%" y="853" width="0.2247%" height="15" fill="rgb(216,135,14)"/><text x="8.5646%" y="863.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (2 samples, 0.22%)</title><rect x="8.3146%" y="837" width="0.2247%" height="15" fill="rgb(241,47,5)"/><text x="8.5646%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (2 samples, 0.22%)</title><rect x="8.3146%" y="821" width="0.2247%" height="15" fill="rgb(233,42,35)"/><text x="8.5646%" y="831.50"></text></g><g><title>std::io::error::Error::new (2 samples, 0.22%)</title><rect x="8.3146%" y="805" width="0.2247%" height="15" fill="rgb(231,13,6)"/><text x="8.5646%" y="815.50"></text></g><g><title>std::io::error::Error::_new (2 samples, 0.22%)</title><rect x="8.3146%" y="789" width="0.2247%" height="15" fill="rgb(207,181,40)"/><text x="8.5646%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.22%)</title><rect x="8.3146%" y="773" width="0.2247%" height="15" fill="rgb(254,173,49)"/><text x="8.5646%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.22%)</title><rect x="8.3146%" y="757" width="0.2247%" height="15" fill="rgb(221,1,38)"/><text x="8.5646%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.22%)</title><rect x="8.3146%" y="741" width="0.2247%" height="15" fill="rgb(206,124,46)"/><text x="8.5646%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.22%)</title><rect x="8.3146%" y="725" width="0.2247%" height="15" fill="rgb(249,21,11)"/><text x="8.5646%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.22%)</title><rect x="8.3146%" y="709" width="0.2247%" height="15" fill="rgb(222,201,40)"/><text x="8.5646%" y="719.50"></text></g><g><title>__libc_recv (2 samples, 0.22%)</title><rect x="8.3146%" y="693" width="0.2247%" height="15" fill="rgb(235,61,29)"/><text x="8.5646%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.22%)</title><rect x="8.3146%" y="677" width="0.2247%" height="15" fill="rgb(219,207,3)"/><text x="8.5646%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="8.5393%" y="725" width="0.1124%" height="15" fill="rgb(222,56,46)"/><text x="8.7893%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="8.5393%" y="709" width="0.1124%" height="15" fill="rgb(239,76,54)"/><text x="8.7893%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="8.5393%" y="693" width="0.1124%" height="15" fill="rgb(231,124,27)"/><text x="8.7893%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="8.5393%" y="677" width="0.1124%" height="15" fill="rgb(249,195,6)"/><text x="8.7893%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="8.5393%" y="661" width="0.1124%" height="15" fill="rgb(237,174,47)"/><text x="8.7893%" y="671.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="8.6517%" y="725" width="0.1124%" height="15" fill="rgb(206,201,31)"/><text x="8.9017%" y="735.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.11%)</title><rect x="8.6517%" y="709" width="0.1124%" height="15" fill="rgb(231,57,52)"/><text x="8.9017%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.6517%" y="693" width="0.1124%" height="15" fill="rgb(248,177,22)"/><text x="8.9017%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.6517%" y="677" width="0.1124%" height="15" fill="rgb(215,211,37)"/><text x="8.9017%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.6517%" y="661" width="0.1124%" height="15" fill="rgb(241,128,51)"/><text x="8.9017%" y="671.50"></text></g><g><title>__GI___openat (1 samples, 0.11%)</title><rect x="8.6517%" y="645" width="0.1124%" height="15" fill="rgb(227,165,31)"/><text x="8.9017%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="8.6517%" y="629" width="0.1124%" height="15" fill="rgb(228,167,24)"/><text x="8.9017%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="8.6517%" y="613" width="0.1124%" height="15" fill="rgb(228,143,12)"/><text x="8.9017%" y="623.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.11%)</title><rect x="8.6517%" y="597" width="0.1124%" height="15" fill="rgb(249,149,8)"/><text x="8.9017%" y="607.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.11%)</title><rect x="8.6517%" y="581" width="0.1124%" height="15" fill="rgb(243,35,44)"/><text x="8.9017%" y="591.50"></text></g><g><title>do_filp_open (1 samples, 0.11%)</title><rect x="8.6517%" y="565" width="0.1124%" height="15" fill="rgb(246,89,9)"/><text x="8.9017%" y="575.50"></text></g><g><title>path_openat (1 samples, 0.11%)</title><rect x="8.6517%" y="549" width="0.1124%" height="15" fill="rgb(233,213,13)"/><text x="8.9017%" y="559.50"></text></g><g><title>link_path_walk (1 samples, 0.11%)</title><rect x="8.6517%" y="533" width="0.1124%" height="15" fill="rgb(233,141,41)"/><text x="8.9017%" y="543.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.11%)</title><rect x="8.6517%" y="517" width="0.1124%" height="15" fill="rgb(239,167,4)"/><text x="8.9017%" y="527.50"></text></g><g><title>kernfs_iop_permission (1 samples, 0.11%)</title><rect x="8.6517%" y="501" width="0.1124%" height="15" fill="rgb(209,217,16)"/><text x="8.9017%" y="511.50"></text></g><g><title>kernfs_refresh_inode (1 samples, 0.11%)</title><rect x="8.6517%" y="485" width="0.1124%" height="15" fill="rgb(219,88,35)"/><text x="8.9017%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="8.7640%" y="453" width="0.1124%" height="15" fill="rgb(220,193,23)"/><text x="9.0140%" y="463.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="9.2135%" y="389" width="0.1124%" height="15" fill="rgb(230,90,52)"/><text x="9.4635%" y="399.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="9.2135%" y="373" width="0.1124%" height="15" fill="rgb(252,106,19)"/><text x="9.4635%" y="383.50"></text></g><g><title>sk_wait_data (6 samples, 0.67%)</title><rect x="8.7640%" y="469" width="0.6742%" height="15" fill="rgb(206,74,20)"/><text x="9.0140%" y="479.50"></text></g><g><title>wait_woken (5 samples, 0.56%)</title><rect x="8.8764%" y="453" width="0.5618%" height="15" fill="rgb(230,138,44)"/><text x="9.1264%" y="463.50"></text></g><g><title>schedule_timeout (4 samples, 0.45%)</title><rect x="8.9888%" y="437" width="0.4494%" height="15" fill="rgb(235,182,43)"/><text x="9.2388%" y="447.50"></text></g><g><title>schedule (3 samples, 0.34%)</title><rect x="9.1011%" y="421" width="0.3371%" height="15" fill="rgb(242,16,51)"/><text x="9.3511%" y="431.50"></text></g><g><title>__schedule (3 samples, 0.34%)</title><rect x="9.1011%" y="405" width="0.3371%" height="15" fill="rgb(248,9,4)"/><text x="9.3511%" y="415.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="9.3258%" y="389" width="0.1124%" height="15" fill="rgb(210,31,22)"/><text x="9.5758%" y="399.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.79%)</title><rect x="8.7640%" y="533" width="0.7865%" height="15" fill="rgb(239,54,39)"/><text x="9.0140%" y="543.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.79%)</title><rect x="8.7640%" y="517" width="0.7865%" height="15" fill="rgb(230,99,41)"/><text x="9.0140%" y="527.50"></text></g><g><title>inet_recvmsg (7 samples, 0.79%)</title><rect x="8.7640%" y="501" width="0.7865%" height="15" fill="rgb(253,106,12)"/><text x="9.0140%" y="511.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.79%)</title><rect x="8.7640%" y="485" width="0.7865%" height="15" fill="rgb(213,46,41)"/><text x="9.0140%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.11%)</title><rect x="9.4382%" y="469" width="0.1124%" height="15" fill="rgb(215,133,35)"/><text x="9.6882%" y="479.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.11%)</title><rect x="9.4382%" y="453" width="0.1124%" height="15" fill="rgb(213,28,5)"/><text x="9.6882%" y="463.50"></text></g><g><title>std::rt::lang_start_internal (10 samples, 1.12%)</title><rect x="8.5393%" y="853" width="1.1236%" height="15" fill="rgb(215,77,49)"/><text x="8.7893%" y="863.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 1.12%)</title><rect x="8.5393%" y="837" width="1.1236%" height="15" fill="rgb(248,100,22)"/><text x="8.7893%" y="847.50"></text></g><g><title>std::panicking::try (10 samples, 1.12%)</title><rect x="8.5393%" y="821" width="1.1236%" height="15" fill="rgb(208,67,9)"/><text x="8.7893%" y="831.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 1.12%)</title><rect x="8.5393%" y="805" width="1.1236%" height="15" fill="rgb(219,133,21)"/><text x="8.7893%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10 samples, 1.12%)</title><rect x="8.5393%" y="789" width="1.1236%" height="15" fill="rgb(246,46,29)"/><text x="8.7893%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (10 samples, 1.12%)</title><rect x="8.5393%" y="773" width="1.1236%" height="15" fill="rgb(246,185,52)"/><text x="8.7893%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 1.12%)</title><rect x="8.5393%" y="757" width="1.1236%" height="15" fill="rgb(252,136,11)"/><text x="8.7893%" y="767.50"></text></g><g><title>lobsters::main (10 samples, 1.12%)</title><rect x="8.5393%" y="741" width="1.1236%" height="15" fill="rgb(219,138,53)"/><text x="8.7893%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (8 samples, 0.90%)</title><rect x="8.7640%" y="725" width="0.8989%" height="15" fill="rgb(211,51,23)"/><text x="9.0140%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (8 samples, 0.90%)</title><rect x="8.7640%" y="709" width="0.8989%" height="15" fill="rgb(247,221,28)"/><text x="9.0140%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (8 samples, 0.90%)</title><rect x="8.7640%" y="693" width="0.8989%" height="15" fill="rgb(251,222,45)"/><text x="9.0140%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.90%)</title><rect x="8.7640%" y="677" width="0.8989%" height="15" fill="rgb(217,162,53)"/><text x="9.0140%" y="687.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.90%)</title><rect x="8.7640%" y="661" width="0.8989%" height="15" fill="rgb(229,93,14)"/><text x="9.0140%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.90%)</title><rect x="8.7640%" y="645" width="0.8989%" height="15" fill="rgb(209,67,49)"/><text x="9.0140%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 0.90%)</title><rect x="8.7640%" y="629" width="0.8989%" height="15" fill="rgb(213,87,29)"/><text x="9.0140%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 0.90%)</title><rect x="8.7640%" y="613" width="0.8989%" height="15" fill="rgb(205,151,52)"/><text x="9.0140%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 0.90%)</title><rect x="8.7640%" y="597" width="0.8989%" height="15" fill="rgb(253,215,39)"/><text x="9.0140%" y="607.50"></text></g><g><title>__libc_recv (8 samples, 0.90%)</title><rect x="8.7640%" y="581" width="0.8989%" height="15" fill="rgb(221,220,41)"/><text x="9.0140%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.90%)</title><rect x="8.7640%" y="565" width="0.8989%" height="15" fill="rgb(218,133,21)"/><text x="9.0140%" y="575.50"></text></g><g><title>do_syscall_64 (8 samples, 0.90%)</title><rect x="8.7640%" y="549" width="0.8989%" height="15" fill="rgb(221,193,43)"/><text x="9.0140%" y="559.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="9.5506%" y="533" width="0.1124%" height="15" fill="rgb(240,128,52)"/><text x="9.8006%" y="543.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="9.5506%" y="517" width="0.1124%" height="15" fill="rgb(253,114,12)"/><text x="9.8006%" y="527.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="9.5506%" y="501" width="0.1124%" height="15" fill="rgb(215,223,47)"/><text x="9.8006%" y="511.50"></text></g><g><title>decor::answer_rows (5 samples, 0.56%)</title><rect x="9.6629%" y="725" width="0.5618%" height="15" fill="rgb(248,225,23)"/><text x="9.9129%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.56%)</title><rect x="9.6629%" y="709" width="0.5618%" height="15" fill="rgb(250,108,0)"/><text x="9.9129%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (5 samples, 0.56%)</title><rect x="9.6629%" y="693" width="0.5618%" height="15" fill="rgb(228,208,7)"/><text x="9.9129%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (5 samples, 0.56%)</title><rect x="9.6629%" y="677" width="0.5618%" height="15" fill="rgb(244,45,10)"/><text x="9.9129%" y="687.50"></text></g><g><title>mysql_common::value::read_text_values (5 samples, 0.56%)</title><rect x="9.6629%" y="661" width="0.5618%" height="15" fill="rgb(207,125,25)"/><text x="9.9129%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.34%)</title><rect x="9.8876%" y="645" width="0.3371%" height="15" fill="rgb(210,195,18)"/><text x="10.1376%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="10.1124%" y="629" width="0.1124%" height="15" fill="rgb(249,80,12)"/><text x="10.3624%" y="639.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6 samples, 0.67%)</title><rect x="9.6629%" y="853" width="0.6742%" height="15" fill="rgb(221,65,9)"/><text x="9.9129%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (6 samples, 0.67%)</title><rect x="9.6629%" y="837" width="0.6742%" height="15" fill="rgb(235,49,36)"/><text x="9.9129%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (6 samples, 0.67%)</title><rect x="9.6629%" y="821" width="0.6742%" height="15" fill="rgb(225,32,20)"/><text x="9.9129%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (6 samples, 0.67%)</title><rect x="9.6629%" y="805" width="0.6742%" height="15" fill="rgb(215,141,46)"/><text x="9.9129%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.67%)</title><rect x="9.6629%" y="789" width="0.6742%" height="15" fill="rgb(250,160,47)"/><text x="9.9129%" y="799.50"></text></g><g><title>decor::Shim::run_on_tcp (6 samples, 0.67%)</title><rect x="9.6629%" y="773" width="0.6742%" height="15" fill="rgb(216,222,40)"/><text x="9.9129%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (6 samples, 0.67%)</title><rect x="9.6629%" y="757" width="0.6742%" height="15" fill="rgb(234,217,39)"/><text x="9.9129%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (6 samples, 0.67%)</title><rect x="9.6629%" y="741" width="0.6742%" height="15" fill="rgb(207,178,40)"/><text x="9.9129%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="10.2247%" y="725" width="0.1124%" height="15" fill="rgb(221,136,13)"/><text x="10.4747%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="10.2247%" y="709" width="0.1124%" height="15" fill="rgb(249,199,10)"/><text x="10.4747%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="10.2247%" y="693" width="0.1124%" height="15" fill="rgb(249,222,13)"/><text x="10.4747%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="10.2247%" y="677" width="0.1124%" height="15" fill="rgb(244,185,38)"/><text x="10.4747%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="10.2247%" y="661" width="0.1124%" height="15" fill="rgb(236,202,9)"/><text x="10.4747%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="10.2247%" y="645" width="0.1124%" height="15" fill="rgb(250,229,37)"/><text x="10.4747%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="10.2247%" y="629" width="0.1124%" height="15" fill="rgb(206,174,23)"/><text x="10.4747%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="10.2247%" y="613" width="0.1124%" height="15" fill="rgb(211,33,43)"/><text x="10.4747%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="10.2247%" y="597" width="0.1124%" height="15" fill="rgb(245,58,50)"/><text x="10.4747%" y="607.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="10.3371%" y="805" width="0.1124%" height="15" fill="rgb(244,68,36)"/><text x="10.5871%" y="815.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="10.3371%" y="789" width="0.1124%" height="15" fill="rgb(232,229,15)"/><text x="10.5871%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="10.3371%" y="773" width="0.1124%" height="15" fill="rgb(254,30,23)"/><text x="10.5871%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="10.3371%" y="757" width="0.1124%" height="15" fill="rgb(235,160,14)"/><text x="10.5871%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="10.3371%" y="741" width="0.1124%" height="15" fill="rgb(212,155,44)"/><text x="10.5871%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="10.3371%" y="725" width="0.1124%" height="15" fill="rgb(226,2,50)"/><text x="10.5871%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="10.3371%" y="709" width="0.1124%" height="15" fill="rgb(234,177,6)"/><text x="10.5871%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="10.3371%" y="693" width="0.1124%" height="15" fill="rgb(217,24,9)"/><text x="10.5871%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="10.3371%" y="677" width="0.1124%" height="15" fill="rgb(220,13,46)"/><text x="10.5871%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="10.3371%" y="661" width="0.1124%" height="15" fill="rgb(239,221,27)"/><text x="10.5871%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="10.3371%" y="645" width="0.1124%" height="15" fill="rgb(222,198,25)"/><text x="10.5871%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="10.3371%" y="629" width="0.1124%" height="15" fill="rgb(211,99,13)"/><text x="10.5871%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="10.3371%" y="613" width="0.1124%" height="15" fill="rgb(232,111,31)"/><text x="10.5871%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="10.3371%" y="597" width="0.1124%" height="15" fill="rgb(245,82,37)"/><text x="10.5871%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="10.3371%" y="581" width="0.1124%" height="15" fill="rgb(227,149,46)"/><text x="10.5871%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="10.3371%" y="565" width="0.1124%" height="15" fill="rgb(218,36,50)"/><text x="10.5871%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="10.3371%" y="549" width="0.1124%" height="15" fill="rgb(226,80,48)"/><text x="10.5871%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="10.3371%" y="533" width="0.1124%" height="15" fill="rgb(238,224,15)"/><text x="10.5871%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="10.3371%" y="517" width="0.1124%" height="15" fill="rgb(241,136,10)"/><text x="10.5871%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="10.3371%" y="501" width="0.1124%" height="15" fill="rgb(208,32,45)"/><text x="10.5871%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="10.3371%" y="485" width="0.1124%" height="15" fill="rgb(207,135,9)"/><text x="10.5871%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="10.3371%" y="469" width="0.1124%" height="15" fill="rgb(206,86,44)"/><text x="10.5871%" y="479.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="10.3371%" y="453" width="0.1124%" height="15" fill="rgb(245,177,15)"/><text x="10.5871%" y="463.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="10.3371%" y="437" width="0.1124%" height="15" fill="rgb(206,64,50)"/><text x="10.5871%" y="447.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="10.3371%" y="421" width="0.1124%" height="15" fill="rgb(234,36,40)"/><text x="10.5871%" y="431.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="10.3371%" y="405" width="0.1124%" height="15" fill="rgb(213,64,8)"/><text x="10.5871%" y="415.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="10.3371%" y="389" width="0.1124%" height="15" fill="rgb(210,75,36)"/><text x="10.5871%" y="399.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="10.3371%" y="373" width="0.1124%" height="15" fill="rgb(229,88,21)"/><text x="10.5871%" y="383.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="10.3371%" y="357" width="0.1124%" height="15" fill="rgb(252,204,47)"/><text x="10.5871%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="10.3371%" y="341" width="0.1124%" height="15" fill="rgb(208,77,27)"/><text x="10.5871%" y="351.50"></text></g><g><title>ip_rcv (1 samples, 0.11%)</title><rect x="10.3371%" y="325" width="0.1124%" height="15" fill="rgb(221,76,26)"/><text x="10.5871%" y="335.50"></text></g><g><title>ip_local_deliver (1 samples, 0.11%)</title><rect x="10.3371%" y="309" width="0.1124%" height="15" fill="rgb(225,139,18)"/><text x="10.5871%" y="319.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="10.3371%" y="293" width="0.1124%" height="15" fill="rgb(230,137,11)"/><text x="10.5871%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="10.3371%" y="277" width="0.1124%" height="15" fill="rgb(212,28,1)"/><text x="10.5871%" y="287.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="10.3371%" y="261" width="0.1124%" height="15" fill="rgb(248,164,17)"/><text x="10.5871%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="10.3371%" y="245" width="0.1124%" height="15" fill="rgb(222,171,42)"/><text x="10.5871%" y="255.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.11%)</title><rect x="10.3371%" y="229" width="0.1124%" height="15" fill="rgb(243,84,45)"/><text x="10.5871%" y="239.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="10.3371%" y="213" width="0.1124%" height="15" fill="rgb(252,49,23)"/><text x="10.5871%" y="223.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="10.3371%" y="197" width="0.1124%" height="15" fill="rgb(215,19,7)"/><text x="10.5871%" y="207.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="10.3371%" y="181" width="0.1124%" height="15" fill="rgb(238,81,41)"/><text x="10.5871%" y="191.50"></text></g><g><title>pollwake (1 samples, 0.11%)</title><rect x="10.3371%" y="165" width="0.1124%" height="15" fill="rgb(210,199,37)"/><text x="10.5871%" y="175.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="10.3371%" y="149" width="0.1124%" height="15" fill="rgb(244,192,49)"/><text x="10.5871%" y="159.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="10.3371%" y="133" width="0.1124%" height="15" fill="rgb(226,211,11)"/><text x="10.5871%" y="143.50"></text></g><g><title>enqueue_entity (1 samples, 0.11%)</title><rect x="10.3371%" y="117" width="0.1124%" height="15" fill="rgb(236,162,54)"/><text x="10.5871%" y="127.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.11%)</title><rect x="10.4494%" y="725" width="0.1124%" height="15" fill="rgb(220,229,9)"/><text x="10.6994%" y="735.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.11%)</title><rect x="10.4494%" y="709" width="0.1124%" height="15" fill="rgb(250,87,22)"/><text x="10.6994%" y="719.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.45%)</title><rect x="10.5618%" y="693" width="0.4494%" height="15" fill="rgb(239,43,17)"/><text x="10.8118%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.56%)</title><rect x="10.5618%" y="709" width="0.5618%" height="15" fill="rgb(231,177,25)"/><text x="10.8118%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="11.0112%" y="693" width="0.1124%" height="15" fill="rgb(219,179,1)"/><text x="11.2612%" y="703.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="11.2360%" y="693" width="0.1124%" height="15" fill="rgb(238,219,53)"/><text x="11.4860%" y="703.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="11.2360%" y="677" width="0.1124%" height="15" fill="rgb(232,167,36)"/><text x="11.4860%" y="687.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="11.2360%" y="661" width="0.1124%" height="15" fill="rgb(244,19,51)"/><text x="11.4860%" y="671.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.11%)</title><rect x="11.2360%" y="645" width="0.1124%" height="15" fill="rgb(224,6,22)"/><text x="11.4860%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="11.9101%" y="645" width="0.1124%" height="15" fill="rgb(224,145,5)"/><text x="12.1601%" y="655.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.01%)</title><rect x="11.1236%" y="709" width="1.0112%" height="15" fill="rgb(234,130,49)"/><text x="11.3736%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (7 samples, 0.79%)</title><rect x="11.3483%" y="693" width="0.7865%" height="15" fill="rgb(254,6,2)"/><text x="11.5983%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.45%)</title><rect x="11.6854%" y="677" width="0.4494%" height="15" fill="rgb(208,96,46)"/><text x="11.9354%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="11.7978%" y="661" width="0.3371%" height="15" fill="rgb(239,3,39)"/><text x="12.0478%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="12.0225%" y="645" width="0.1124%" height="15" fill="rgb(233,210,1)"/><text x="12.2725%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.69%)</title><rect x="10.5618%" y="725" width="1.6854%" height="15" fill="rgb(244,137,37)"/><text x="10.8118%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="12.1348%" y="709" width="0.1124%" height="15" fill="rgb(240,136,2)"/><text x="12.3848%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="12.2472%" y="693" width="0.1124%" height="15" fill="rgb(239,18,37)"/><text x="12.4972%" y="703.50"></text></g><g><title>[unknown] (84 samples, 9.44%)</title><rect x="3.0337%" y="869" width="9.4382%" height="15" fill="rgb(218,185,22)"/><text x="3.2837%" y="879.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 2.13%)</title><rect x="10.3371%" y="853" width="2.1348%" height="15" fill="rgb(225,218,4)"/><text x="10.5871%" y="863.50">s..</text></g><g><title>decor::Shim::run_on_tcp (19 samples, 2.13%)</title><rect x="10.3371%" y="837" width="2.1348%" height="15" fill="rgb(230,182,32)"/><text x="10.5871%" y="847.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (19 samples, 2.13%)</title><rect x="10.3371%" y="821" width="2.1348%" height="15" fill="rgb(242,56,43)"/><text x="10.5871%" y="831.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (18 samples, 2.02%)</title><rect x="10.4494%" y="805" width="2.0225%" height="15" fill="rgb(233,99,24)"/><text x="10.6994%" y="815.50">&lt;..</text></g><g><title>decor::answer_rows (18 samples, 2.02%)</title><rect x="10.4494%" y="789" width="2.0225%" height="15" fill="rgb(234,209,42)"/><text x="10.6994%" y="799.50">d..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 2.02%)</title><rect x="10.4494%" y="773" width="2.0225%" height="15" fill="rgb(227,7,12)"/><text x="10.6994%" y="783.50">&lt;..</text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (18 samples, 2.02%)</title><rect x="10.4494%" y="757" width="2.0225%" height="15" fill="rgb(245,203,43)"/><text x="10.6994%" y="767.50">&lt;..</text></g><g><title>mysql::conn::Conn::next_text (18 samples, 2.02%)</title><rect x="10.4494%" y="741" width="2.0225%" height="15" fill="rgb(238,205,33)"/><text x="10.6994%" y="751.50">m..</text></g><g><title>mysql_common::value::read_text_values (2 samples, 0.22%)</title><rect x="12.2472%" y="725" width="0.2247%" height="15" fill="rgb(231,56,7)"/><text x="12.4972%" y="735.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.22%)</title><rect x="12.2472%" y="709" width="0.2247%" height="15" fill="rgb(244,186,29)"/><text x="12.4972%" y="719.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="12.3596%" y="693" width="0.1124%" height="15" fill="rgb(234,111,31)"/><text x="12.6096%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="12.9213%" y="725" width="0.1124%" height="15" fill="rgb(241,149,10)"/><text x="13.1713%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="12.9213%" y="709" width="0.1124%" height="15" fill="rgb(249,206,44)"/><text x="13.1713%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="12.9213%" y="693" width="0.1124%" height="15" fill="rgb(251,153,30)"/><text x="13.1713%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="12.9213%" y="677" width="0.1124%" height="15" fill="rgb(239,152,38)"/><text x="13.1713%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="12.9213%" y="661" width="0.1124%" height="15" fill="rgb(249,139,47)"/><text x="13.1713%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="12.9213%" y="645" width="0.1124%" height="15" fill="rgb(244,64,35)"/><text x="13.1713%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="12.9213%" y="629" width="0.1124%" height="15" fill="rgb(216,46,15)"/><text x="13.1713%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="14.7191%" y="693" width="0.1124%" height="15" fill="rgb(250,74,19)"/><text x="14.9691%" y="703.50"></text></g><g><title>mysql_common::packets::Column::table_str (1 samples, 0.11%)</title><rect x="14.7191%" y="677" width="0.1124%" height="15" fill="rgb(249,42,33)"/><text x="14.9691%" y="687.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.11%)</title><rect x="14.7191%" y="661" width="0.1124%" height="15" fill="rgb(242,149,17)"/><text x="14.9691%" y="671.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="14.7191%" y="645" width="0.1124%" height="15" fill="rgb(244,29,21)"/><text x="14.9691%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.22%)</title><rect x="15.2809%" y="677" width="0.2247%" height="15" fill="rgb(220,130,37)"/><text x="15.5309%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.22%)</title><rect x="15.2809%" y="661" width="0.2247%" height="15" fill="rgb(211,67,2)"/><text x="15.5309%" y="671.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="15.3933%" y="645" width="0.1124%" height="15" fill="rgb(235,68,52)"/><text x="15.6433%" y="655.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="15.5056%" y="677" width="0.1124%" height="15" fill="rgb(246,142,3)"/><text x="15.7556%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="15.6180%" y="677" width="0.1124%" height="15" fill="rgb(241,25,7)"/><text x="15.8680%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="15.6180%" y="661" width="0.1124%" height="15" fill="rgb(242,119,39)"/><text x="15.8680%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.24%)</title><rect x="14.8315%" y="693" width="1.2360%" height="15" fill="rgb(241,98,45)"/><text x="15.0815%" y="703.50"></text></g><g><title>mysql_common::row::new_row (3 samples, 0.34%)</title><rect x="15.7303%" y="677" width="0.3371%" height="15" fill="rgb(254,28,30)"/><text x="15.9803%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="15.7303%" y="661" width="0.3371%" height="15" fill="rgb(241,142,54)"/><text x="15.9803%" y="671.50"></text></g><g><title>__GI___libc_free (3 samples, 0.34%)</title><rect x="16.0674%" y="693" width="0.3371%" height="15" fill="rgb(222,85,15)"/><text x="16.3174%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="16.4045%" y="693" width="0.1124%" height="15" fill="rgb(210,85,47)"/><text x="16.6545%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="16.4045%" y="677" width="0.1124%" height="15" fill="rgb(224,206,25)"/><text x="16.6545%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="16.5169%" y="693" width="0.1124%" height="15" fill="rgb(243,201,19)"/><text x="16.7669%" y="703.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (3 samples, 0.34%)</title><rect x="16.7416%" y="661" width="0.3371%" height="15" fill="rgb(236,59,4)"/><text x="16.9916%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.22%)</title><rect x="16.8539%" y="645" width="0.2247%" height="15" fill="rgb(254,179,45)"/><text x="17.1039%" y="655.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (5 samples, 0.56%)</title><rect x="16.6292%" y="693" width="0.5618%" height="15" fill="rgb(226,14,10)"/><text x="16.8792%" y="703.50"></text></g><g><title>msql_srv::writers::column_definitions (4 samples, 0.45%)</title><rect x="16.7416%" y="677" width="0.4494%" height="15" fill="rgb(244,27,41)"/><text x="16.9916%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="17.0787%" y="661" width="0.1124%" height="15" fill="rgb(235,35,32)"/><text x="17.3287%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="17.0787%" y="645" width="0.1124%" height="15" fill="rgb(218,68,31)"/><text x="17.3287%" y="655.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::end_row (3 samples, 0.34%)</title><rect x="17.1910%" y="693" width="0.3371%" height="15" fill="rgb(207,120,37)"/><text x="17.4410%" y="703.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (2 samples, 0.22%)</title><rect x="17.3034%" y="677" width="0.2247%" height="15" fill="rgb(227,98,0)"/><text x="17.5534%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="17.4157%" y="661" width="0.1124%" height="15" fill="rgb(207,7,3)"/><text x="17.6657%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (4 samples, 0.45%)</title><rect x="17.5281%" y="693" width="0.4494%" height="15" fill="rgb(206,98,19)"/><text x="17.7781%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="17.8652%" y="677" width="0.1124%" height="15" fill="rgb(217,5,26)"/><text x="18.1152%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="17.8652%" y="661" width="0.1124%" height="15" fill="rgb(235,190,38)"/><text x="18.1152%" y="671.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.11%)</title><rect x="18.0899%" y="661" width="0.1124%" height="15" fill="rgb(247,86,24)"/><text x="18.3399%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="18.0899%" y="645" width="0.1124%" height="15" fill="rgb(205,101,16)"/><text x="18.3399%" y="655.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (2 samples, 0.22%)</title><rect x="18.0899%" y="677" width="0.2247%" height="15" fill="rgb(246,168,33)"/><text x="18.3399%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="18.2022%" y="661" width="0.1124%" height="15" fill="rgb(231,114,1)"/><text x="18.4522%" y="671.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="18.3146%" y="677" width="0.1124%" height="15" fill="rgb(207,184,53)"/><text x="18.5646%" y="687.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (5 samples, 0.56%)</title><rect x="17.9775%" y="693" width="0.5618%" height="15" fill="rgb(224,95,51)"/><text x="18.2275%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="18.4270%" y="677" width="0.1124%" height="15" fill="rgb(212,188,45)"/><text x="18.6770%" y="687.50"></text></g><g><title>decor::answer_rows (47 samples, 5.28%)</title><rect x="13.5955%" y="709" width="5.2809%" height="15" fill="rgb(223,154,38)"/><text x="13.8455%" y="719.50">decor:..</text></g><g><title>mysql_common::row::Row::unwrap (3 samples, 0.34%)</title><rect x="18.5393%" y="693" width="0.3371%" height="15" fill="rgb(251,22,52)"/><text x="18.7893%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="18.6517%" y="677" width="0.2247%" height="15" fill="rgb(229,209,22)"/><text x="18.9017%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="18.8764%" y="693" width="0.1124%" height="15" fill="rgb(234,138,34)"/><text x="19.1264%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="18.9888%" y="693" width="0.1124%" height="15" fill="rgb(212,95,11)"/><text x="19.2388%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="18.9888%" y="677" width="0.1124%" height="15" fill="rgb(240,179,47)"/><text x="19.2388%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="19.5506%" y="645" width="0.1124%" height="15" fill="rgb(240,163,11)"/><text x="19.8006%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.34%)</title><rect x="19.4382%" y="661" width="0.3371%" height="15" fill="rgb(236,37,12)"/><text x="19.6882%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="19.6629%" y="645" width="0.1124%" height="15" fill="rgb(232,164,16)"/><text x="19.9129%" y="655.50"></text></g><g><title>__kfree_skb (2 samples, 0.22%)</title><rect x="21.0112%" y="453" width="0.2247%" height="15" fill="rgb(244,205,15)"/><text x="21.2612%" y="463.50"></text></g><g><title>skb_release_head_state (2 samples, 0.22%)</title><rect x="21.0112%" y="437" width="0.2247%" height="15" fill="rgb(223,117,47)"/><text x="21.2612%" y="447.50"></text></g><g><title>sock_rfree (2 samples, 0.22%)</title><rect x="21.0112%" y="421" width="0.2247%" height="15" fill="rgb(244,107,35)"/><text x="21.2612%" y="431.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="21.2360%" y="437" width="0.1124%" height="15" fill="rgb(205,140,8)"/><text x="21.4860%" y="447.50"></text></g><g><title>remove_wait_queue (1 samples, 0.11%)</title><rect x="21.3483%" y="437" width="0.1124%" height="15" fill="rgb(228,84,46)"/><text x="21.5983%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="21.3483%" y="421" width="0.1124%" height="15" fill="rgb(254,188,9)"/><text x="21.5983%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.22%)</title><rect x="22.0225%" y="373" width="0.2247%" height="15" fill="rgb(206,112,54)"/><text x="22.2725%" y="383.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="22.1348%" y="357" width="0.1124%" height="15" fill="rgb(216,84,49)"/><text x="22.3848%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.34%)</title><rect x="22.3596%" y="357" width="0.3371%" height="15" fill="rgb(214,194,35)"/><text x="22.6096%" y="367.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.22%)</title><rect x="22.4719%" y="341" width="0.2247%" height="15" fill="rgb(249,28,3)"/><text x="22.7219%" y="351.50"></text></g><g><title>native_write_msr (2 samples, 0.22%)</title><rect x="22.4719%" y="325" width="0.2247%" height="15" fill="rgb(222,56,52)"/><text x="22.7219%" y="335.50"></text></g><g><title>finish_task_switch (5 samples, 0.56%)</title><rect x="22.2472%" y="373" width="0.5618%" height="15" fill="rgb(245,217,50)"/><text x="22.4972%" y="383.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.11%)</title><rect x="22.6966%" y="357" width="0.1124%" height="15" fill="rgb(213,201,24)"/><text x="22.9466%" y="367.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="22.8090%" y="373" width="0.1124%" height="15" fill="rgb(248,116,28)"/><text x="23.0590%" y="383.50"></text></g><g><title>newidle_balance (1 samples, 0.11%)</title><rect x="22.8090%" y="357" width="0.1124%" height="15" fill="rgb(219,72,43)"/><text x="23.0590%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="22.8090%" y="341" width="0.1124%" height="15" fill="rgb(209,138,14)"/><text x="23.0590%" y="351.50"></text></g><g><title>psi_flags_change (1 samples, 0.11%)</title><rect x="22.9213%" y="357" width="0.1124%" height="15" fill="rgb(222,18,33)"/><text x="23.1713%" y="367.50"></text></g><g><title>psi_task_change (3 samples, 0.34%)</title><rect x="22.9213%" y="373" width="0.3371%" height="15" fill="rgb(213,199,7)"/><text x="23.1713%" y="383.50"></text></g><g><title>psi_group_change (2 samples, 0.22%)</title><rect x="23.0337%" y="357" width="0.2247%" height="15" fill="rgb(250,110,10)"/><text x="23.2837%" y="367.50"></text></g><g><title>put_prev_task_fair (3 samples, 0.34%)</title><rect x="23.2584%" y="373" width="0.3371%" height="15" fill="rgb(248,123,6)"/><text x="23.5084%" y="383.50"></text></g><g><title>put_prev_entity (3 samples, 0.34%)</title><rect x="23.2584%" y="357" width="0.3371%" height="15" fill="rgb(206,91,31)"/><text x="23.5084%" y="367.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.11%)</title><rect x="23.4831%" y="341" width="0.1124%" height="15" fill="rgb(211,154,13)"/><text x="23.7331%" y="351.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="23.5955%" y="373" width="0.1124%" height="15" fill="rgb(225,148,7)"/><text x="23.8455%" y="383.50"></text></g><g><title>sk_wait_data (23 samples, 2.58%)</title><rect x="21.2360%" y="453" width="2.5843%" height="15" fill="rgb(220,160,43)"/><text x="21.4860%" y="463.50">sk..</text></g><g><title>wait_woken (21 samples, 2.36%)</title><rect x="21.4607%" y="437" width="2.3596%" height="15" fill="rgb(213,52,39)"/><text x="21.7107%" y="447.50">w..</text></g><g><title>schedule_timeout (19 samples, 2.13%)</title><rect x="21.6854%" y="421" width="2.1348%" height="15" fill="rgb(243,137,7)"/><text x="21.9354%" y="431.50">s..</text></g><g><title>schedule (19 samples, 2.13%)</title><rect x="21.6854%" y="405" width="2.1348%" height="15" fill="rgb(230,79,13)"/><text x="21.9354%" y="415.50">s..</text></g><g><title>__schedule (19 samples, 2.13%)</title><rect x="21.6854%" y="389" width="2.1348%" height="15" fill="rgb(247,105,23)"/><text x="21.9354%" y="399.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="23.7079%" y="373" width="0.1124%" height="15" fill="rgb(223,179,41)"/><text x="23.9579%" y="383.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="23.7079%" y="357" width="0.1124%" height="15" fill="rgb(218,9,34)"/><text x="23.9579%" y="367.50"></text></g><g><title>_copy_to_iter (5 samples, 0.56%)</title><rect x="23.8202%" y="421" width="0.5618%" height="15" fill="rgb(222,106,8)"/><text x="24.0702%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (5 samples, 0.56%)</title><rect x="23.8202%" y="405" width="0.5618%" height="15" fill="rgb(211,220,0)"/><text x="24.0702%" y="415.50"></text></g><g><title>page_fault (4 samples, 0.45%)</title><rect x="23.9326%" y="389" width="0.4494%" height="15" fill="rgb(229,52,16)"/><text x="24.1826%" y="399.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.34%)</title><rect x="24.0449%" y="373" width="0.3371%" height="15" fill="rgb(212,155,18)"/><text x="24.2949%" y="383.50"></text></g><g><title>handle_mm_fault (3 samples, 0.34%)</title><rect x="24.0449%" y="357" width="0.3371%" height="15" fill="rgb(242,21,14)"/><text x="24.2949%" y="367.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.34%)</title><rect x="24.0449%" y="341" width="0.3371%" height="15" fill="rgb(222,19,48)"/><text x="24.2949%" y="351.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.34%)</title><rect x="24.0449%" y="325" width="0.3371%" height="15" fill="rgb(232,45,27)"/><text x="24.2949%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.34%)</title><rect x="24.0449%" y="309" width="0.3371%" height="15" fill="rgb(249,103,42)"/><text x="24.2949%" y="319.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.34%)</title><rect x="24.0449%" y="293" width="0.3371%" height="15" fill="rgb(246,81,33)"/><text x="24.2949%" y="303.50"></text></g><g><title>prep_new_page (3 samples, 0.34%)</title><rect x="24.0449%" y="277" width="0.3371%" height="15" fill="rgb(252,33,42)"/><text x="24.2949%" y="287.50"></text></g><g><title>kernel_init_free_pages (3 samples, 0.34%)</title><rect x="24.0449%" y="261" width="0.3371%" height="15" fill="rgb(209,212,41)"/><text x="24.2949%" y="271.50"></text></g><g><title>clear_page_erms (3 samples, 0.34%)</title><rect x="24.0449%" y="245" width="0.3371%" height="15" fill="rgb(207,154,6)"/><text x="24.2949%" y="255.50"></text></g><g><title>skb_copy_datagram_iter (6 samples, 0.67%)</title><rect x="23.8202%" y="453" width="0.6742%" height="15" fill="rgb(223,64,47)"/><text x="24.0702%" y="463.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.67%)</title><rect x="23.8202%" y="437" width="0.6742%" height="15" fill="rgb(211,161,38)"/><text x="24.0702%" y="447.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="24.3820%" y="421" width="0.1124%" height="15" fill="rgb(219,138,40)"/><text x="24.6320%" y="431.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="24.3820%" y="405" width="0.1124%" height="15" fill="rgb(241,228,46)"/><text x="24.6320%" y="415.50"></text></g><g><title>check_stack_object (1 samples, 0.11%)</title><rect x="24.3820%" y="389" width="0.1124%" height="15" fill="rgb(223,209,38)"/><text x="24.6320%" y="399.50"></text></g><g><title>inet_recvmsg (39 samples, 4.38%)</title><rect x="20.2247%" y="485" width="4.3820%" height="15" fill="rgb(236,164,45)"/><text x="20.4747%" y="495.50">inet_..</text></g><g><title>tcp_recvmsg (39 samples, 4.38%)</title><rect x="20.2247%" y="469" width="4.3820%" height="15" fill="rgb(231,15,5)"/><text x="20.4747%" y="479.50">tcp_r..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="24.4944%" y="453" width="0.1124%" height="15" fill="rgb(252,35,15)"/><text x="24.7444%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (41 samples, 4.61%)</title><rect x="20.2247%" y="517" width="4.6067%" height="15" fill="rgb(248,181,18)"/><text x="20.4747%" y="527.50">__x64..</text></g><g><title>__sys_recvfrom (41 samples, 4.61%)</title><rect x="20.2247%" y="501" width="4.6067%" height="15" fill="rgb(233,39,42)"/><text x="20.4747%" y="511.50">__sys..</text></g><g><title>sockfd_lookup_light (2 samples, 0.22%)</title><rect x="24.6067%" y="485" width="0.2247%" height="15" fill="rgb(238,110,33)"/><text x="24.8567%" y="495.50"></text></g><g><title>__fget_light (2 samples, 0.22%)</title><rect x="24.6067%" y="469" width="0.2247%" height="15" fill="rgb(233,195,10)"/><text x="24.8567%" y="479.50"></text></g><g><title>__fget_files (2 samples, 0.22%)</title><rect x="24.6067%" y="453" width="0.2247%" height="15" fill="rgb(254,105,3)"/><text x="24.8567%" y="463.50"></text></g><g><title>do_syscall_64 (44 samples, 4.94%)</title><rect x="20.0000%" y="533" width="4.9438%" height="15" fill="rgb(221,225,9)"/><text x="20.2500%" y="543.50">do_sys..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="24.8315%" y="517" width="0.1124%" height="15" fill="rgb(224,227,45)"/><text x="25.0815%" y="527.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="24.8315%" y="501" width="0.1124%" height="15" fill="rgb(229,198,43)"/><text x="25.0815%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (53 samples, 5.96%)</title><rect x="19.8876%" y="549" width="5.9551%" height="15" fill="rgb(206,209,35)"/><text x="20.1376%" y="559.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (8 samples, 0.90%)</title><rect x="24.9438%" y="533" width="0.8989%" height="15" fill="rgb(245,195,53)"/><text x="25.1938%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (56 samples, 6.29%)</title><rect x="19.8876%" y="645" width="6.2921%" height="15" fill="rgb(240,92,26)"/><text x="20.1376%" y="655.50">&lt;std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (56 samples, 6.29%)</title><rect x="19.8876%" y="629" width="6.2921%" height="15" fill="rgb(207,40,23)"/><text x="20.1376%" y="639.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (56 samples, 6.29%)</title><rect x="19.8876%" y="613" width="6.2921%" height="15" fill="rgb(223,111,35)"/><text x="20.1376%" y="623.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (56 samples, 6.29%)</title><rect x="19.8876%" y="597" width="6.2921%" height="15" fill="rgb(229,147,28)"/><text x="20.1376%" y="607.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (56 samples, 6.29%)</title><rect x="19.8876%" y="581" width="6.2921%" height="15" fill="rgb(211,29,28)"/><text x="20.1376%" y="591.50">std::sys..</text></g><g><title>__libc_recv (56 samples, 6.29%)</title><rect x="19.8876%" y="565" width="6.2921%" height="15" fill="rgb(228,72,33)"/><text x="20.1376%" y="575.50">__libc_r..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.34%)</title><rect x="25.8427%" y="549" width="0.3371%" height="15" fill="rgb(205,214,31)"/><text x="26.0927%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 6.74%)</title><rect x="19.7753%" y="661" width="6.7416%" height="15" fill="rgb(224,111,15)"/><text x="20.0253%" y="671.50">&lt;mysql_co..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.34%)</title><rect x="26.1798%" y="645" width="0.3371%" height="15" fill="rgb(253,21,26)"/><text x="26.4298%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.22%)</title><rect x="26.2921%" y="629" width="0.2247%" height="15" fill="rgb(245,139,43)"/><text x="26.5421%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="26.2921%" y="613" width="0.2247%" height="15" fill="rgb(252,170,7)"/><text x="26.5421%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="26.2921%" y="597" width="0.2247%" height="15" fill="rgb(231,118,14)"/><text x="26.5421%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.22%)</title><rect x="26.2921%" y="581" width="0.2247%" height="15" fill="rgb(238,83,0)"/><text x="26.5421%" y="591.50"></text></g><g><title>mysql::conn::Conn::read_packet (65 samples, 7.30%)</title><rect x="19.3258%" y="677" width="7.3034%" height="15" fill="rgb(221,39,39)"/><text x="19.5758%" y="687.50">mysql::con..</text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="26.5169%" y="661" width="0.1124%" height="15" fill="rgb(222,119,46)"/><text x="26.7669%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (69 samples, 7.75%)</title><rect x="19.1011%" y="693" width="7.7528%" height="15" fill="rgb(222,165,49)"/><text x="19.3511%" y="703.50">mysql::conn..</text></g><g><title>mysql_common::packets::column_from_payload (2 samples, 0.22%)</title><rect x="26.6292%" y="677" width="0.2247%" height="15" fill="rgb(219,113,52)"/><text x="26.8792%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.22%)</title><rect x="27.3034%" y="613" width="0.2247%" height="15" fill="rgb(214,7,15)"/><text x="27.5534%" y="623.50"></text></g><g><title>fput (1 samples, 0.11%)</title><rect x="28.0899%" y="549" width="0.1124%" height="15" fill="rgb(235,32,4)"/><text x="28.3399%" y="559.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="28.3146%" y="517" width="0.1124%" height="15" fill="rgb(238,90,54)"/><text x="28.5646%" y="527.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="28.3146%" y="501" width="0.1124%" height="15" fill="rgb(213,208,19)"/><text x="28.5646%" y="511.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="29.4382%" y="437" width="0.1124%" height="15" fill="rgb(233,156,4)"/><text x="29.6882%" y="447.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="29.7753%" y="389" width="0.1124%" height="15" fill="rgb(207,194,5)"/><text x="30.0253%" y="399.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="29.8876%" y="325" width="0.1124%" height="15" fill="rgb(206,111,30)"/><text x="30.1376%" y="335.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="29.8876%" y="309" width="0.1124%" height="15" fill="rgb(243,70,54)"/><text x="30.1376%" y="319.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="29.8876%" y="293" width="0.1124%" height="15" fill="rgb(242,28,8)"/><text x="30.1376%" y="303.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.11%)</title><rect x="30.0000%" y="325" width="0.1124%" height="15" fill="rgb(219,106,18)"/><text x="30.2500%" y="335.50"></text></g><g><title>netif_rx (3 samples, 0.34%)</title><rect x="29.8876%" y="357" width="0.3371%" height="15" fill="rgb(244,222,10)"/><text x="30.1376%" y="367.50"></text></g><g><title>netif_rx_internal (3 samples, 0.34%)</title><rect x="29.8876%" y="341" width="0.3371%" height="15" fill="rgb(236,179,52)"/><text x="30.1376%" y="351.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="30.1124%" y="325" width="0.1124%" height="15" fill="rgb(213,23,39)"/><text x="30.3624%" y="335.50"></text></g><g><title>sk_free (1 samples, 0.11%)</title><rect x="30.2247%" y="357" width="0.1124%" height="15" fill="rgb(238,48,10)"/><text x="30.4747%" y="367.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.56%)</title><rect x="29.8876%" y="389" width="0.5618%" height="15" fill="rgb(251,196,23)"/><text x="30.1376%" y="399.50"></text></g><g><title>loopback_xmit (5 samples, 0.56%)</title><rect x="29.8876%" y="373" width="0.5618%" height="15" fill="rgb(250,152,24)"/><text x="30.1376%" y="383.50"></text></g><g><title>tcp_wfree (1 samples, 0.11%)</title><rect x="30.3371%" y="357" width="0.1124%" height="15" fill="rgb(209,150,17)"/><text x="30.5871%" y="367.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="30.4494%" y="389" width="0.1124%" height="15" fill="rgb(234,202,34)"/><text x="30.6994%" y="399.50"></text></g><g><title>__dev_queue_xmit (9 samples, 1.01%)</title><rect x="29.6629%" y="405" width="1.0112%" height="15" fill="rgb(253,148,53)"/><text x="29.9129%" y="415.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.11%)</title><rect x="30.5618%" y="389" width="0.1124%" height="15" fill="rgb(218,129,16)"/><text x="30.8118%" y="399.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="31.0112%" y="325" width="0.1124%" height="15" fill="rgb(216,85,19)"/><text x="31.2612%" y="335.50"></text></g><g><title>irqtime_account_irq (3 samples, 0.34%)</title><rect x="30.8989%" y="341" width="0.3371%" height="15" fill="rgb(235,228,7)"/><text x="31.1489%" y="351.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="31.1236%" y="325" width="0.1124%" height="15" fill="rgb(245,175,0)"/><text x="31.3736%" y="335.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="31.1236%" y="309" width="0.1124%" height="15" fill="rgb(208,168,36)"/><text x="31.3736%" y="319.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="31.1236%" y="293" width="0.1124%" height="15" fill="rgb(246,171,24)"/><text x="31.3736%" y="303.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="31.5730%" y="293" width="0.1124%" height="15" fill="rgb(215,142,24)"/><text x="31.8230%" y="303.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="32.2472%" y="213" width="0.1124%" height="15" fill="rgb(250,187,7)"/><text x="32.4972%" y="223.50"></text></g><g><title>inet_ehashfn (1 samples, 0.11%)</title><rect x="32.2472%" y="197" width="0.1124%" height="15" fill="rgb(228,66,33)"/><text x="32.4972%" y="207.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="32.3596%" y="213" width="0.1124%" height="15" fill="rgb(234,215,21)"/><text x="32.6096%" y="223.50"></text></g><g><title>enqueue_timer (1 samples, 0.11%)</title><rect x="32.6966%" y="149" width="0.1124%" height="15" fill="rgb(222,191,20)"/><text x="32.9466%" y="159.50"></text></g><g><title>sk_reset_timer (2 samples, 0.22%)</title><rect x="32.6966%" y="181" width="0.2247%" height="15" fill="rgb(245,79,54)"/><text x="32.9466%" y="191.50"></text></g><g><title>__mod_timer (2 samples, 0.22%)</title><rect x="32.6966%" y="165" width="0.2247%" height="15" fill="rgb(240,10,37)"/><text x="32.9466%" y="175.50"></text></g><g><title>get_nohz_timer_target (1 samples, 0.11%)</title><rect x="32.8090%" y="149" width="0.1124%" height="15" fill="rgb(214,192,32)"/><text x="33.0590%" y="159.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="32.9213%" y="165" width="0.1124%" height="15" fill="rgb(209,36,54)"/><text x="33.1713%" y="175.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="33.3708%" y="101" width="0.1124%" height="15" fill="rgb(220,10,11)"/><text x="33.6208%" y="111.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="33.4831%" y="101" width="0.1124%" height="15" fill="rgb(221,106,17)"/><text x="33.7331%" y="111.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="33.4831%" y="85" width="0.1124%" height="15" fill="rgb(251,142,44)"/><text x="33.7331%" y="95.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="33.5955%" y="101" width="0.1124%" height="15" fill="rgb(238,13,15)"/><text x="33.8455%" y="111.50"></text></g><g><title>psi_task_change (4 samples, 0.45%)</title><rect x="33.7079%" y="85" width="0.4494%" height="15" fill="rgb(208,107,27)"/><text x="33.9579%" y="95.50"></text></g><g><title>psi_group_change (4 samples, 0.45%)</title><rect x="33.7079%" y="69" width="0.4494%" height="15" fill="rgb(205,136,37)"/><text x="33.9579%" y="79.50"></text></g><g><title>enqueue_task (7 samples, 0.79%)</title><rect x="33.7079%" y="101" width="0.7865%" height="15" fill="rgb(250,205,27)"/><text x="33.9579%" y="111.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.34%)</title><rect x="34.1573%" y="85" width="0.3371%" height="15" fill="rgb(210,80,43)"/><text x="34.4073%" y="95.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.22%)</title><rect x="34.6067%" y="69" width="0.2247%" height="15" fill="rgb(247,160,36)"/><text x="34.8567%" y="79.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="34.8315%" y="69" width="0.1124%" height="15" fill="rgb(234,13,49)"/><text x="35.0815%" y="79.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.79%)</title><rect x="34.4944%" y="101" width="0.7865%" height="15" fill="rgb(234,122,0)"/><text x="34.7444%" y="111.50"></text></g><g><title>enqueue_entity (7 samples, 0.79%)</title><rect x="34.4944%" y="85" width="0.7865%" height="15" fill="rgb(207,146,38)"/><text x="34.7444%" y="95.50"></text></g><g><title>update_load_avg (3 samples, 0.34%)</title><rect x="34.9438%" y="69" width="0.3371%" height="15" fill="rgb(207,177,25)"/><text x="35.1938%" y="79.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.22%)</title><rect x="35.0562%" y="53" width="0.2247%" height="15" fill="rgb(211,178,42)"/><text x="35.3062%" y="63.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.34%)</title><rect x="35.2809%" y="101" width="0.3371%" height="15" fill="rgb(230,69,54)"/><text x="35.5309%" y="111.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="35.5056%" y="85" width="0.1124%" height="15" fill="rgb(214,135,41)"/><text x="35.7556%" y="95.50"></text></g><g><title>__wake_up_common (24 samples, 2.70%)</title><rect x="33.0337%" y="149" width="2.6966%" height="15" fill="rgb(237,67,25)"/><text x="33.2837%" y="159.50">__..</text></g><g><title>pollwake (24 samples, 2.70%)</title><rect x="33.0337%" y="133" width="2.6966%" height="15" fill="rgb(222,189,50)"/><text x="33.2837%" y="143.50">po..</text></g><g><title>try_to_wake_up (22 samples, 2.47%)</title><rect x="33.2584%" y="117" width="2.4719%" height="15" fill="rgb(245,148,34)"/><text x="33.5084%" y="127.50">tr..</text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="35.6180%" y="101" width="0.1124%" height="15" fill="rgb(222,29,6)"/><text x="35.8680%" y="111.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="35.6180%" y="85" width="0.1124%" height="15" fill="rgb(221,189,43)"/><text x="35.8680%" y="95.50"></text></g><g><title>resched_curr (1 samples, 0.11%)</title><rect x="35.6180%" y="69" width="0.1124%" height="15" fill="rgb(207,36,27)"/><text x="35.8680%" y="79.50"></text></g><g><title>sock_def_readable (26 samples, 2.92%)</title><rect x="32.9213%" y="181" width="2.9213%" height="15" fill="rgb(217,90,24)"/><text x="33.1713%" y="191.50">so..</text></g><g><title>__wake_up_common_lock (25 samples, 2.81%)</title><rect x="33.0337%" y="165" width="2.8090%" height="15" fill="rgb(224,66,35)"/><text x="33.2837%" y="175.50">__..</text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="35.7303%" y="149" width="0.1124%" height="15" fill="rgb(221,13,50)"/><text x="35.9803%" y="159.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="35.7303%" y="133" width="0.1124%" height="15" fill="rgb(236,68,49)"/><text x="35.9803%" y="143.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="36.4045%" y="165" width="0.1124%" height="15" fill="rgb(229,146,28)"/><text x="36.6545%" y="175.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="36.4045%" y="149" width="0.1124%" height="15" fill="rgb(225,31,38)"/><text x="36.6545%" y="159.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="36.5169%" y="165" width="0.1124%" height="15" fill="rgb(250,208,3)"/><text x="36.7669%" y="175.50"></text></g><g><title>rb_next (1 samples, 0.11%)</title><rect x="36.6292%" y="165" width="0.1124%" height="15" fill="rgb(246,54,23)"/><text x="36.8792%" y="175.50"></text></g><g><title>tcp_rack_advance (1 samples, 0.11%)</title><rect x="36.7416%" y="165" width="0.1124%" height="15" fill="rgb(243,76,11)"/><text x="36.9916%" y="175.50"></text></g><g><title>tcp_ack (11 samples, 1.24%)</title><rect x="35.8427%" y="181" width="1.2360%" height="15" fill="rgb(245,21,50)"/><text x="36.0927%" y="191.50"></text></g><g><title>tcp_update_pacing_rate (2 samples, 0.22%)</title><rect x="36.8539%" y="165" width="0.2247%" height="15" fill="rgb(228,9,43)"/><text x="37.1039%" y="175.50"></text></g><g><title>tcp_data_queue (1 samples, 0.11%)</title><rect x="37.0787%" y="181" width="0.1124%" height="15" fill="rgb(208,100,47)"/><text x="37.3287%" y="191.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="37.0787%" y="165" width="0.1124%" height="15" fill="rgb(232,26,8)"/><text x="37.3287%" y="175.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="37.0787%" y="149" width="0.1124%" height="15" fill="rgb(216,166,38)"/><text x="37.3287%" y="159.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="37.0787%" y="133" width="0.1124%" height="15" fill="rgb(251,202,51)"/><text x="37.3287%" y="143.50"></text></g><g><title>pollwake (1 samples, 0.11%)</title><rect x="37.0787%" y="117" width="0.1124%" height="15" fill="rgb(254,216,34)"/><text x="37.3287%" y="127.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="37.1910%" y="181" width="0.1124%" height="15" fill="rgb(251,32,27)"/><text x="37.4410%" y="191.50"></text></g><g><title>ip_local_deliver (51 samples, 5.73%)</title><rect x="31.7978%" y="277" width="5.7303%" height="15" fill="rgb(208,127,28)"/><text x="32.0478%" y="287.50">ip_loca..</text></g><g><title>ip_local_deliver_finish (51 samples, 5.73%)</title><rect x="31.7978%" y="261" width="5.7303%" height="15" fill="rgb(224,137,22)"/><text x="32.0478%" y="271.50">ip_loca..</text></g><g><title>ip_protocol_deliver_rcu (50 samples, 5.62%)</title><rect x="31.9101%" y="245" width="5.6180%" height="15" fill="rgb(254,70,32)"/><text x="32.1601%" y="255.50">ip_prot..</text></g><g><title>tcp_v4_rcv (50 samples, 5.62%)</title><rect x="31.9101%" y="229" width="5.6180%" height="15" fill="rgb(229,75,37)"/><text x="32.1601%" y="239.50">tcp_v4_..</text></g><g><title>tcp_v4_do_rcv (45 samples, 5.06%)</title><rect x="32.4719%" y="213" width="5.0562%" height="15" fill="rgb(252,64,23)"/><text x="32.7219%" y="223.50">tcp_v4..</text></g><g><title>tcp_rcv_established (45 samples, 5.06%)</title><rect x="32.4719%" y="197" width="5.0562%" height="15" fill="rgb(232,162,48)"/><text x="32.7219%" y="207.50">tcp_rc..</text></g><g><title>tcp_queue_rcv (2 samples, 0.22%)</title><rect x="37.3034%" y="181" width="0.2247%" height="15" fill="rgb(246,160,12)"/><text x="37.5534%" y="191.50"></text></g><g><title>ip_finish_output2 (72 samples, 8.09%)</title><rect x="29.5506%" y="421" width="8.0899%" height="15" fill="rgb(247,166,0)"/><text x="29.8006%" y="431.50">ip_finish_o..</text></g><g><title>__local_bh_enable_ip (62 samples, 6.97%)</title><rect x="30.6742%" y="405" width="6.9663%" height="15" fill="rgb(249,219,21)"/><text x="30.9242%" y="415.50">__local_b..</text></g><g><title>do_softirq (61 samples, 6.85%)</title><rect x="30.7865%" y="389" width="6.8539%" height="15" fill="rgb(205,209,3)"/><text x="31.0365%" y="399.50">do_softirq</text></g><g><title>do_softirq_own_stack (60 samples, 6.74%)</title><rect x="30.8989%" y="373" width="6.7416%" height="15" fill="rgb(243,44,1)"/><text x="31.1489%" y="383.50">do_softir..</text></g><g><title>__do_softirq (60 samples, 6.74%)</title><rect x="30.8989%" y="357" width="6.7416%" height="15" fill="rgb(206,159,16)"/><text x="31.1489%" y="367.50">__do_soft..</text></g><g><title>net_rx_action (57 samples, 6.40%)</title><rect x="31.2360%" y="341" width="6.4045%" height="15" fill="rgb(244,77,30)"/><text x="31.4860%" y="351.50">net_rx_a..</text></g><g><title>process_backlog (56 samples, 6.29%)</title><rect x="31.3483%" y="325" width="6.2921%" height="15" fill="rgb(218,69,12)"/><text x="31.5983%" y="335.50">process_..</text></g><g><title>__netif_receive_skb_one_core (55 samples, 6.18%)</title><rect x="31.4607%" y="309" width="6.1798%" height="15" fill="rgb(212,87,7)"/><text x="31.7107%" y="319.50">__netif_..</text></g><g><title>ip_rcv (53 samples, 5.96%)</title><rect x="31.6854%" y="293" width="5.9551%" height="15" fill="rgb(245,114,25)"/><text x="31.9354%" y="303.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.11%)</title><rect x="37.5281%" y="277" width="0.1124%" height="15" fill="rgb(210,61,42)"/><text x="37.7781%" y="287.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="37.5281%" y="261" width="0.1124%" height="15" fill="rgb(211,52,33)"/><text x="37.7781%" y="271.50"></text></g><g><title>__ip_queue_xmit (77 samples, 8.65%)</title><rect x="29.1011%" y="453" width="8.6517%" height="15" fill="rgb(234,58,33)"/><text x="29.3511%" y="463.50">__ip_queue_x..</text></g><g><title>ip_output (73 samples, 8.20%)</title><rect x="29.5506%" y="437" width="8.2022%" height="15" fill="rgb(220,115,36)"/><text x="29.8006%" y="447.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="37.6404%" y="421" width="0.1124%" height="15" fill="rgb(243,153,54)"/><text x="37.8904%" y="431.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="37.6404%" y="405" width="0.1124%" height="15" fill="rgb(251,47,18)"/><text x="37.8904%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="37.6404%" y="389" width="0.1124%" height="15" fill="rgb(242,102,42)"/><text x="37.8904%" y="399.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.11%)</title><rect x="37.7528%" y="453" width="0.1124%" height="15" fill="rgb(234,31,38)"/><text x="38.0028%" y="463.50"></text></g><g><title>__tcp_transmit_skb (80 samples, 8.99%)</title><rect x="28.9888%" y="469" width="8.9888%" height="15" fill="rgb(221,117,51)"/><text x="29.2388%" y="479.50">__tcp_transmi..</text></g><g><title>skb_clone (1 samples, 0.11%)</title><rect x="37.8652%" y="453" width="0.1124%" height="15" fill="rgb(212,20,18)"/><text x="38.1152%" y="463.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.11%)</title><rect x="37.9775%" y="453" width="0.1124%" height="15" fill="rgb(245,133,36)"/><text x="38.2275%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (84 samples, 9.44%)</title><rect x="28.7640%" y="501" width="9.4382%" height="15" fill="rgb(212,6,19)"/><text x="29.0140%" y="511.50">__tcp_push_pe..</text></g><g><title>tcp_write_xmit (84 samples, 9.44%)</title><rect x="28.7640%" y="485" width="9.4382%" height="15" fill="rgb(218,1,36)"/><text x="29.0140%" y="495.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.22%)</title><rect x="37.9775%" y="469" width="0.2247%" height="15" fill="rgb(246,84,54)"/><text x="38.2275%" y="479.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="38.0899%" y="453" width="0.1124%" height="15" fill="rgb(242,110,6)"/><text x="38.3399%" y="463.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.22%)</title><rect x="38.2022%" y="501" width="0.2247%" height="15" fill="rgb(214,47,5)"/><text x="38.4522%" y="511.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.22%)</title><rect x="38.2022%" y="485" width="0.2247%" height="15" fill="rgb(218,159,25)"/><text x="38.4522%" y="495.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.11%)</title><rect x="38.7640%" y="453" width="0.1124%" height="15" fill="rgb(215,211,28)"/><text x="39.0140%" y="463.50"></text></g><g><title>___slab_alloc (1 samples, 0.11%)</title><rect x="38.7640%" y="437" width="0.1124%" height="15" fill="rgb(238,59,32)"/><text x="39.0140%" y="447.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.22%)</title><rect x="38.7640%" y="469" width="0.2247%" height="15" fill="rgb(226,82,3)"/><text x="39.0140%" y="479.50"></text></g><g><title>kmalloc_slab (1 samples, 0.11%)</title><rect x="38.8764%" y="453" width="0.1124%" height="15" fill="rgb(240,164,32)"/><text x="39.1264%" y="463.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.67%)</title><rect x="38.4270%" y="501" width="0.6742%" height="15" fill="rgb(232,46,7)"/><text x="38.6770%" y="511.50"></text></g><g><title>__alloc_skb (6 samples, 0.67%)</title><rect x="38.4270%" y="485" width="0.6742%" height="15" fill="rgb(229,129,53)"/><text x="38.6770%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="38.9888%" y="469" width="0.1124%" height="15" fill="rgb(234,188,29)"/><text x="39.2388%" y="479.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="39.2135%" y="469" width="0.1124%" height="15" fill="rgb(246,141,4)"/><text x="39.4635%" y="479.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.34%)</title><rect x="39.1011%" y="501" width="0.3371%" height="15" fill="rgb(229,23,39)"/><text x="39.3511%" y="511.50"></text></g><g><title>__check_object_size (2 samples, 0.22%)</title><rect x="39.2135%" y="485" width="0.2247%" height="15" fill="rgb(206,12,3)"/><text x="39.4635%" y="495.50"></text></g><g><title>check_stack_object (1 samples, 0.11%)</title><rect x="39.3258%" y="469" width="0.1124%" height="15" fill="rgb(252,226,20)"/><text x="39.5758%" y="479.50"></text></g><g><title>sock_sendmsg (102 samples, 11.46%)</title><rect x="28.2022%" y="549" width="11.4607%" height="15" fill="rgb(216,123,35)"/><text x="28.4522%" y="559.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (102 samples, 11.46%)</title><rect x="28.2022%" y="533" width="11.4607%" height="15" fill="rgb(212,68,40)"/><text x="28.4522%" y="543.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (100 samples, 11.24%)</title><rect x="28.4270%" y="517" width="11.2360%" height="15" fill="rgb(254,125,32)"/><text x="28.6770%" y="527.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (2 samples, 0.22%)</title><rect x="39.4382%" y="501" width="0.2247%" height="15" fill="rgb(253,97,22)"/><text x="39.6882%" y="511.50"></text></g><g><title>tcp_current_mss (2 samples, 0.22%)</title><rect x="39.4382%" y="485" width="0.2247%" height="15" fill="rgb(241,101,14)"/><text x="39.6882%" y="495.50"></text></g><g><title>__x64_sys_sendto (106 samples, 11.91%)</title><rect x="27.8652%" y="581" width="11.9101%" height="15" fill="rgb(238,103,29)"/><text x="28.1152%" y="591.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (106 samples, 11.91%)</title><rect x="27.8652%" y="565" width="11.9101%" height="15" fill="rgb(233,195,47)"/><text x="28.1152%" y="575.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="39.6629%" y="549" width="0.1124%" height="15" fill="rgb(246,218,30)"/><text x="39.9129%" y="559.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="39.6629%" y="533" width="0.1124%" height="15" fill="rgb(219,145,47)"/><text x="39.9129%" y="543.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="39.7753%" y="549" width="0.1124%" height="15" fill="rgb(243,12,26)"/><text x="40.0253%" y="559.50"></text></g><g><title>do_syscall_64 (108 samples, 12.13%)</title><rect x="27.8652%" y="597" width="12.1348%" height="15" fill="rgb(214,87,16)"/><text x="28.1152%" y="607.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (2 samples, 0.22%)</title><rect x="39.7753%" y="581" width="0.2247%" height="15" fill="rgb(208,99,42)"/><text x="40.0253%" y="591.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.22%)</title><rect x="39.7753%" y="565" width="0.2247%" height="15" fill="rgb(253,99,2)"/><text x="40.0253%" y="575.50"></text></g><g><title>path_put (1 samples, 0.11%)</title><rect x="39.8876%" y="549" width="0.1124%" height="15" fill="rgb(220,168,23)"/><text x="40.1376%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (115 samples, 12.92%)</title><rect x="27.5281%" y="613" width="12.9213%" height="15" fill="rgb(242,38,24)"/><text x="27.7781%" y="623.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.45%)</title><rect x="40.0000%" y="597" width="0.4494%" height="15" fill="rgb(225,182,9)"/><text x="40.2500%" y="607.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (245 samples, 27.53%)</title><rect x="13.0337%" y="725" width="27.5281%" height="15" fill="rgb(243,178,37)"/><text x="13.2837%" y="735.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_..</text></g><g><title>mysql::conn::Conn::_query (193 samples, 21.69%)</title><rect x="18.8764%" y="709" width="21.6854%" height="15" fill="rgb(232,139,19)"/><text x="19.1264%" y="719.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (122 samples, 13.71%)</title><rect x="26.8539%" y="693" width="13.7079%" height="15" fill="rgb(225,201,24)"/><text x="27.1039%" y="703.50">mysql_common::proto::..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (121 samples, 13.60%)</title><rect x="26.9663%" y="677" width="13.5955%" height="15" fill="rgb(221,47,46)"/><text x="27.2163%" y="687.50">std::io::buffered::Bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (118 samples, 13.26%)</title><rect x="27.3034%" y="661" width="13.2584%" height="15" fill="rgb(249,23,13)"/><text x="27.5534%" y="671.50">&lt;std::net::tcp::TcpS..</text></g><g><title>std::sys_common::net::TcpStream::write (118 samples, 13.26%)</title><rect x="27.3034%" y="645" width="13.2584%" height="15" fill="rgb(219,9,5)"/><text x="27.5534%" y="655.50">std::sys_common::net..</text></g><g><title>__libc_send (118 samples, 13.26%)</title><rect x="27.3034%" y="629" width="13.2584%" height="15" fill="rgb(254,171,16)"/><text x="27.5534%" y="639.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="40.4494%" y="613" width="0.1124%" height="15" fill="rgb(230,171,20)"/><text x="40.6994%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="40.5618%" y="725" width="0.1124%" height="15" fill="rgb(210,71,41)"/><text x="40.8118%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="40.5618%" y="709" width="0.1124%" height="15" fill="rgb(206,173,20)"/><text x="40.8118%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="40.5618%" y="693" width="0.1124%" height="15" fill="rgb(233,88,34)"/><text x="40.8118%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="40.5618%" y="677" width="0.1124%" height="15" fill="rgb(223,209,46)"/><text x="40.8118%" y="687.50"></text></g><g><title>__libc_close (1 samples, 0.11%)</title><rect x="40.5618%" y="661" width="0.1124%" height="15" fill="rgb(250,43,18)"/><text x="40.8118%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="40.5618%" y="645" width="0.1124%" height="15" fill="rgb(208,13,10)"/><text x="40.8118%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="40.5618%" y="629" width="0.1124%" height="15" fill="rgb(212,200,36)"/><text x="40.8118%" y="639.50"></text></g><g><title>task_work_run (1 samples, 0.11%)</title><rect x="40.5618%" y="613" width="0.1124%" height="15" fill="rgb(225,90,30)"/><text x="40.8118%" y="623.50"></text></g><g><title>__fput (1 samples, 0.11%)</title><rect x="40.5618%" y="597" width="0.1124%" height="15" fill="rgb(236,182,39)"/><text x="40.8118%" y="607.50"></text></g><g><title>sock_close (1 samples, 0.11%)</title><rect x="40.5618%" y="581" width="0.1124%" height="15" fill="rgb(212,144,35)"/><text x="40.8118%" y="591.50"></text></g><g><title>__sock_release (1 samples, 0.11%)</title><rect x="40.5618%" y="565" width="0.1124%" height="15" fill="rgb(228,63,44)"/><text x="40.8118%" y="575.50"></text></g><g><title>inet_release (1 samples, 0.11%)</title><rect x="40.5618%" y="549" width="0.1124%" height="15" fill="rgb(228,109,6)"/><text x="40.8118%" y="559.50"></text></g><g><title>tcp_close (1 samples, 0.11%)</title><rect x="40.5618%" y="533" width="0.1124%" height="15" fill="rgb(238,117,24)"/><text x="40.8118%" y="543.50"></text></g><g><title>__release_sock (1 samples, 0.11%)</title><rect x="40.5618%" y="517" width="0.1124%" height="15" fill="rgb(242,26,26)"/><text x="40.8118%" y="527.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="40.5618%" y="501" width="0.1124%" height="15" fill="rgb(221,92,48)"/><text x="40.8118%" y="511.50"></text></g><g><title>tcp_rcv_state_process (1 samples, 0.11%)</title><rect x="40.5618%" y="485" width="0.1124%" height="15" fill="rgb(209,209,32)"/><text x="40.8118%" y="495.50"></text></g><g><title>tcp_done (1 samples, 0.11%)</title><rect x="40.5618%" y="469" width="0.1124%" height="15" fill="rgb(221,70,22)"/><text x="40.8118%" y="479.50"></text></g><g><title>tcp_set_state (1 samples, 0.11%)</title><rect x="40.5618%" y="453" width="0.1124%" height="15" fill="rgb(248,145,5)"/><text x="40.8118%" y="463.50"></text></g><g><title>inet_put_port (1 samples, 0.11%)</title><rect x="40.5618%" y="437" width="0.1124%" height="15" fill="rgb(226,116,26)"/><text x="40.8118%" y="447.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="40.5618%" y="421" width="0.1124%" height="15" fill="rgb(244,5,17)"/><text x="40.8118%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.11%)</title><rect x="40.6742%" y="725" width="0.1124%" height="15" fill="rgb(252,159,33)"/><text x="40.9242%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.11%)</title><rect x="40.6742%" y="709" width="0.1124%" height="15" fill="rgb(206,71,0)"/><text x="40.9242%" y="719.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="41.0112%" y="613" width="0.1124%" height="15" fill="rgb(233,118,54)"/><text x="41.2612%" y="623.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="41.1236%" y="613" width="0.1124%" height="15" fill="rgb(234,83,48)"/><text x="41.3736%" y="623.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="41.3483%" y="549" width="0.1124%" height="15" fill="rgb(228,3,54)"/><text x="41.5983%" y="559.50"></text></g><g><title>skb_release_data (2 samples, 0.22%)</title><rect x="41.9101%" y="501" width="0.2247%" height="15" fill="rgb(226,155,13)"/><text x="42.1601%" y="511.50"></text></g><g><title>dst_release (1 samples, 0.11%)</title><rect x="42.1348%" y="485" width="0.1124%" height="15" fill="rgb(241,28,37)"/><text x="42.3848%" y="495.50"></text></g><g><title>__kfree_skb (5 samples, 0.56%)</title><rect x="41.9101%" y="517" width="0.5618%" height="15" fill="rgb(233,93,10)"/><text x="42.1601%" y="527.50"></text></g><g><title>skb_release_head_state (3 samples, 0.34%)</title><rect x="42.1348%" y="501" width="0.3371%" height="15" fill="rgb(225,113,19)"/><text x="42.3848%" y="511.50"></text></g><g><title>sock_rfree (2 samples, 0.22%)</title><rect x="42.2472%" y="485" width="0.2247%" height="15" fill="rgb(241,2,18)"/><text x="42.4972%" y="495.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.22%)</title><rect x="42.4719%" y="453" width="0.2247%" height="15" fill="rgb(228,207,21)"/><text x="42.7219%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.22%)</title><rect x="42.4719%" y="437" width="0.2247%" height="15" fill="rgb(213,211,35)"/><text x="42.7219%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.11%)</title><rect x="42.5843%" y="421" width="0.1124%" height="15" fill="rgb(209,83,10)"/><text x="42.8343%" y="431.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="42.8090%" y="261" width="0.1124%" height="15" fill="rgb(209,164,1)"/><text x="43.0590%" y="271.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="42.9213%" y="229" width="0.1124%" height="15" fill="rgb(213,184,43)"/><text x="43.1713%" y="239.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.67%)</title><rect x="42.4719%" y="517" width="0.6742%" height="15" fill="rgb(231,61,34)"/><text x="42.7219%" y="527.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.67%)</title><rect x="42.4719%" y="501" width="0.6742%" height="15" fill="rgb(235,75,3)"/><text x="42.7219%" y="511.50"></text></g><g><title>ip_output (6 samples, 0.67%)</title><rect x="42.4719%" y="485" width="0.6742%" height="15" fill="rgb(220,106,47)"/><text x="42.7219%" y="495.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.67%)</title><rect x="42.4719%" y="469" width="0.6742%" height="15" fill="rgb(210,196,33)"/><text x="42.7219%" y="479.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.45%)</title><rect x="42.6966%" y="453" width="0.4494%" height="15" fill="rgb(229,154,42)"/><text x="42.9466%" y="463.50"></text></g><g><title>do_softirq (4 samples, 0.45%)</title><rect x="42.6966%" y="437" width="0.4494%" height="15" fill="rgb(228,114,26)"/><text x="42.9466%" y="447.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.45%)</title><rect x="42.6966%" y="421" width="0.4494%" height="15" fill="rgb(208,144,1)"/><text x="42.9466%" y="431.50"></text></g><g><title>__do_softirq (4 samples, 0.45%)</title><rect x="42.6966%" y="405" width="0.4494%" height="15" fill="rgb(239,112,37)"/><text x="42.9466%" y="415.50"></text></g><g><title>net_rx_action (4 samples, 0.45%)</title><rect x="42.6966%" y="389" width="0.4494%" height="15" fill="rgb(210,96,50)"/><text x="42.9466%" y="399.50"></text></g><g><title>process_backlog (4 samples, 0.45%)</title><rect x="42.6966%" y="373" width="0.4494%" height="15" fill="rgb(222,178,2)"/><text x="42.9466%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.34%)</title><rect x="42.8090%" y="357" width="0.3371%" height="15" fill="rgb(226,74,18)"/><text x="43.0590%" y="367.50"></text></g><g><title>ip_rcv (3 samples, 0.34%)</title><rect x="42.8090%" y="341" width="0.3371%" height="15" fill="rgb(225,67,54)"/><text x="43.0590%" y="351.50"></text></g><g><title>ip_local_deliver (3 samples, 0.34%)</title><rect x="42.8090%" y="325" width="0.3371%" height="15" fill="rgb(251,92,32)"/><text x="43.0590%" y="335.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.34%)</title><rect x="42.8090%" y="309" width="0.3371%" height="15" fill="rgb(228,149,22)"/><text x="43.0590%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.34%)</title><rect x="42.8090%" y="293" width="0.3371%" height="15" fill="rgb(243,54,13)"/><text x="43.0590%" y="303.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.34%)</title><rect x="42.8090%" y="277" width="0.3371%" height="15" fill="rgb(243,180,28)"/><text x="43.0590%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.22%)</title><rect x="42.9213%" y="261" width="0.2247%" height="15" fill="rgb(208,167,24)"/><text x="43.1713%" y="271.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.22%)</title><rect x="42.9213%" y="245" width="0.2247%" height="15" fill="rgb(245,73,45)"/><text x="43.1713%" y="255.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="43.0337%" y="229" width="0.1124%" height="15" fill="rgb(237,203,48)"/><text x="43.2837%" y="239.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="43.0337%" y="213" width="0.1124%" height="15" fill="rgb(211,197,16)"/><text x="43.2837%" y="223.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="43.0337%" y="197" width="0.1124%" height="15" fill="rgb(243,99,51)"/><text x="43.2837%" y="207.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="43.1461%" y="517" width="0.1124%" height="15" fill="rgb(215,123,29)"/><text x="43.3961%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="43.1461%" y="501" width="0.1124%" height="15" fill="rgb(239,186,37)"/><text x="43.3961%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="43.1461%" y="485" width="0.1124%" height="15" fill="rgb(252,136,39)"/><text x="43.3961%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.22%)</title><rect x="43.3708%" y="501" width="0.2247%" height="15" fill="rgb(223,213,32)"/><text x="43.6208%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="43.4831%" y="485" width="0.1124%" height="15" fill="rgb(233,115,5)"/><text x="43.7331%" y="495.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="43.5955%" y="501" width="0.1124%" height="15" fill="rgb(207,226,44)"/><text x="43.8455%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.22%)</title><rect x="44.2697%" y="437" width="0.2247%" height="15" fill="rgb(208,126,0)"/><text x="44.5197%" y="447.50"></text></g><g><title>ctx_sched_out (1 samples, 0.11%)</title><rect x="44.3820%" y="421" width="0.1124%" height="15" fill="rgb(244,66,21)"/><text x="44.6320%" y="431.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="44.3820%" y="405" width="0.1124%" height="15" fill="rgb(222,97,12)"/><text x="44.6320%" y="415.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="44.3820%" y="389" width="0.1124%" height="15" fill="rgb(219,213,19)"/><text x="44.6320%" y="399.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="44.3820%" y="373" width="0.1124%" height="15" fill="rgb(252,169,30)"/><text x="44.6320%" y="383.50"></text></g><g><title>reweight_entity (2 samples, 0.22%)</title><rect x="44.6067%" y="405" width="0.2247%" height="15" fill="rgb(206,32,51)"/><text x="44.8567%" y="415.50"></text></g><g><title>update_curr (4 samples, 0.45%)</title><rect x="44.8315%" y="405" width="0.4494%" height="15" fill="rgb(250,172,42)"/><text x="45.0815%" y="415.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.22%)</title><rect x="45.0562%" y="389" width="0.2247%" height="15" fill="rgb(209,34,43)"/><text x="45.3062%" y="399.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.22%)</title><rect x="45.2809%" y="389" width="0.2247%" height="15" fill="rgb(223,11,35)"/><text x="45.5309%" y="399.50"></text></g><g><title>dequeue_task_fair (11 samples, 1.24%)</title><rect x="44.4944%" y="437" width="1.2360%" height="15" fill="rgb(251,219,26)"/><text x="44.7444%" y="447.50"></text></g><g><title>dequeue_entity (10 samples, 1.12%)</title><rect x="44.6067%" y="421" width="1.1236%" height="15" fill="rgb(231,119,3)"/><text x="44.8567%" y="431.50"></text></g><g><title>update_load_avg (4 samples, 0.45%)</title><rect x="45.2809%" y="405" width="0.4494%" height="15" fill="rgb(216,97,11)"/><text x="45.5309%" y="415.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.22%)</title><rect x="45.5056%" y="389" width="0.2247%" height="15" fill="rgb(223,59,9)"/><text x="45.7556%" y="399.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.11%)</title><rect x="45.7303%" y="405" width="0.1124%" height="15" fill="rgb(233,93,31)"/><text x="45.9803%" y="415.50"></text></g><g><title>finish_task_switch (3 samples, 0.34%)</title><rect x="45.7303%" y="437" width="0.3371%" height="15" fill="rgb(239,81,33)"/><text x="45.9803%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.34%)</title><rect x="45.7303%" y="421" width="0.3371%" height="15" fill="rgb(213,120,34)"/><text x="45.9803%" y="431.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.22%)</title><rect x="45.8427%" y="405" width="0.2247%" height="15" fill="rgb(243,49,53)"/><text x="46.0927%" y="415.50"></text></g><g><title>preempt_count_sub (2 samples, 0.22%)</title><rect x="45.8427%" y="389" width="0.2247%" height="15" fill="rgb(247,216,33)"/><text x="46.0927%" y="399.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.22%)</title><rect x="46.0674%" y="437" width="0.2247%" height="15" fill="rgb(226,26,14)"/><text x="46.3174%" y="447.50"></text></g><g><title>newidle_balance (2 samples, 0.22%)</title><rect x="46.0674%" y="421" width="0.2247%" height="15" fill="rgb(215,49,53)"/><text x="46.3174%" y="431.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="46.1798%" y="405" width="0.1124%" height="15" fill="rgb(245,162,40)"/><text x="46.4298%" y="415.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.11%)</title><rect x="46.2921%" y="437" width="0.1124%" height="15" fill="rgb(229,68,17)"/><text x="46.5421%" y="447.50"></text></g><g><title>__update_idle_core (1 samples, 0.11%)</title><rect x="46.2921%" y="421" width="0.1124%" height="15" fill="rgb(213,182,10)"/><text x="46.5421%" y="431.50"></text></g><g><title>psi_task_change (3 samples, 0.34%)</title><rect x="46.4045%" y="437" width="0.3371%" height="15" fill="rgb(245,125,30)"/><text x="46.6545%" y="447.50"></text></g><g><title>psi_group_change (3 samples, 0.34%)</title><rect x="46.4045%" y="421" width="0.3371%" height="15" fill="rgb(232,202,2)"/><text x="46.6545%" y="431.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="46.6292%" y="405" width="0.1124%" height="15" fill="rgb(237,140,51)"/><text x="46.8792%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="46.6292%" y="389" width="0.1124%" height="15" fill="rgb(236,157,25)"/><text x="46.8792%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="46.6292%" y="373" width="0.1124%" height="15" fill="rgb(219,209,0)"/><text x="46.8792%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="46.6292%" y="357" width="0.1124%" height="15" fill="rgb(240,116,54)"/><text x="46.8792%" y="367.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="46.7416%" y="437" width="0.1124%" height="15" fill="rgb(216,10,36)"/><text x="46.9916%" y="447.50"></text></g><g><title>rcu_note_context_switch (2 samples, 0.22%)</title><rect x="46.8539%" y="437" width="0.2247%" height="15" fill="rgb(222,72,44)"/><text x="47.1039%" y="447.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.11%)</title><rect x="46.9663%" y="421" width="0.1124%" height="15" fill="rgb(232,159,9)"/><text x="47.2163%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (4 samples, 0.45%)</title><rect x="47.0787%" y="437" width="0.4494%" height="15" fill="rgb(210,39,32)"/><text x="47.3287%" y="447.50"></text></g><g><title>sk_wait_data (41 samples, 4.61%)</title><rect x="43.2584%" y="517" width="4.6067%" height="15" fill="rgb(216,194,45)"/><text x="43.5084%" y="527.50">sk_wa..</text></g><g><title>wait_woken (37 samples, 4.16%)</title><rect x="43.7079%" y="501" width="4.1573%" height="15" fill="rgb(218,18,35)"/><text x="43.9579%" y="511.50">wait_..</text></g><g><title>schedule_timeout (34 samples, 3.82%)</title><rect x="44.0449%" y="485" width="3.8202%" height="15" fill="rgb(207,83,51)"/><text x="44.2949%" y="495.50">sche..</text></g><g><title>schedule (34 samples, 3.82%)</title><rect x="44.0449%" y="469" width="3.8202%" height="15" fill="rgb(225,63,43)"/><text x="44.2949%" y="479.50">sche..</text></g><g><title>__schedule (34 samples, 3.82%)</title><rect x="44.0449%" y="453" width="3.8202%" height="15" fill="rgb(207,57,36)"/><text x="44.2949%" y="463.50">__sc..</text></g><g><title>update_rq_clock (3 samples, 0.34%)</title><rect x="47.5281%" y="437" width="0.3371%" height="15" fill="rgb(216,99,33)"/><text x="47.7781%" y="447.50"></text></g><g><title>update_irq_load_avg (3 samples, 0.34%)</title><rect x="47.5281%" y="421" width="0.3371%" height="15" fill="rgb(225,42,16)"/><text x="47.7781%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.22%)</title><rect x="47.8652%" y="517" width="0.2247%" height="15" fill="rgb(220,201,45)"/><text x="48.1152%" y="527.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.22%)</title><rect x="47.8652%" y="501" width="0.2247%" height="15" fill="rgb(225,33,4)"/><text x="48.1152%" y="511.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.22%)</title><rect x="47.8652%" y="485" width="0.2247%" height="15" fill="rgb(224,33,50)"/><text x="48.1152%" y="495.50"></text></g><g><title>__check_object_size (2 samples, 0.22%)</title><rect x="47.8652%" y="469" width="0.2247%" height="15" fill="rgb(246,198,51)"/><text x="48.1152%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (62 samples, 6.97%)</title><rect x="41.2360%" y="581" width="6.9663%" height="15" fill="rgb(205,22,4)"/><text x="41.4860%" y="591.50">__x64_sys..</text></g><g><title>__sys_recvfrom (62 samples, 6.97%)</title><rect x="41.2360%" y="565" width="6.9663%" height="15" fill="rgb(206,3,8)"/><text x="41.4860%" y="575.50">__sys_rec..</text></g><g><title>inet_recvmsg (60 samples, 6.74%)</title><rect x="41.4607%" y="549" width="6.7416%" height="15" fill="rgb(251,23,15)"/><text x="41.7107%" y="559.50">inet_recv..</text></g><g><title>tcp_recvmsg (59 samples, 6.63%)</title><rect x="41.5730%" y="533" width="6.6292%" height="15" fill="rgb(252,88,28)"/><text x="41.8230%" y="543.50">tcp_recvm..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.11%)</title><rect x="48.0899%" y="517" width="0.1124%" height="15" fill="rgb(212,127,14)"/><text x="48.3399%" y="527.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="48.2022%" y="581" width="0.1124%" height="15" fill="rgb(247,145,37)"/><text x="48.4522%" y="591.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="48.2022%" y="565" width="0.1124%" height="15" fill="rgb(209,117,53)"/><text x="48.4522%" y="575.50"></text></g><g><title>path_put (1 samples, 0.11%)</title><rect x="48.2022%" y="549" width="0.1124%" height="15" fill="rgb(212,90,42)"/><text x="48.4522%" y="559.50"></text></g><g><title>dput (1 samples, 0.11%)</title><rect x="48.2022%" y="533" width="0.1124%" height="15" fill="rgb(218,164,37)"/><text x="48.4522%" y="543.50"></text></g><g><title>do_syscall_64 (65 samples, 7.30%)</title><rect x="41.2360%" y="597" width="7.3034%" height="15" fill="rgb(246,65,34)"/><text x="41.4860%" y="607.50">do_syscall..</text></g><g><title>syscall_trace_enter (2 samples, 0.22%)</title><rect x="48.3146%" y="581" width="0.2247%" height="15" fill="rgb(231,100,33)"/><text x="48.5646%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (69 samples, 7.75%)</title><rect x="41.2360%" y="613" width="7.7528%" height="15" fill="rgb(228,126,14)"/><text x="41.4860%" y="623.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.45%)</title><rect x="48.5393%" y="597" width="0.4494%" height="15" fill="rgb(215,173,21)"/><text x="48.7893%" y="607.50"></text></g><g><title>switch_fpu_return (2 samples, 0.22%)</title><rect x="48.7640%" y="581" width="0.2247%" height="15" fill="rgb(210,6,40)"/><text x="49.0140%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (75 samples, 8.43%)</title><rect x="40.7865%" y="709" width="8.4270%" height="15" fill="rgb(212,48,18)"/><text x="41.0365%" y="719.50">&lt;std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (74 samples, 8.31%)</title><rect x="40.8989%" y="693" width="8.3146%" height="15" fill="rgb(230,214,11)"/><text x="41.1489%" y="703.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::read (74 samples, 8.31%)</title><rect x="40.8989%" y="677" width="8.3146%" height="15" fill="rgb(254,105,39)"/><text x="41.1489%" y="687.50">std::sys_com..</text></g><g><title>std::sys::unix::net::Socket::read (74 samples, 8.31%)</title><rect x="40.8989%" y="661" width="8.3146%" height="15" fill="rgb(245,158,5)"/><text x="41.1489%" y="671.50">std::sys::un..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (74 samples, 8.31%)</title><rect x="40.8989%" y="645" width="8.3146%" height="15" fill="rgb(249,208,11)"/><text x="41.1489%" y="655.50">std::sys::un..</text></g><g><title>__libc_recv (74 samples, 8.31%)</title><rect x="40.8989%" y="629" width="8.3146%" height="15" fill="rgb(210,39,28)"/><text x="41.1489%" y="639.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (2 samples, 0.22%)</title><rect x="48.9888%" y="613" width="0.2247%" height="15" fill="rgb(211,56,53)"/><text x="49.2388%" y="623.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (77 samples, 8.65%)</title><rect x="40.7865%" y="725" width="8.6517%" height="15" fill="rgb(226,201,30)"/><text x="41.0365%" y="735.50">msql_srv::pa..</text></g><g><title>__memset_avx2_erms (2 samples, 0.22%)</title><rect x="49.2135%" y="709" width="0.2247%" height="15" fill="rgb(239,101,34)"/><text x="49.4635%" y="719.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="50.0000%" y="597" width="0.1124%" height="15" fill="rgb(226,209,5)"/><text x="50.2500%" y="607.50"></text></g><g><title>security_socket_sendmsg (2 samples, 0.22%)</title><rect x="50.2247%" y="581" width="0.2247%" height="15" fill="rgb(250,105,47)"/><text x="50.4747%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="50.4494%" y="565" width="0.1124%" height="15" fill="rgb(230,72,3)"/><text x="50.6994%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="50.4494%" y="549" width="0.1124%" height="15" fill="rgb(232,218,39)"/><text x="50.6994%" y="559.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.11%)</title><rect x="50.5618%" y="565" width="0.1124%" height="15" fill="rgb(248,166,6)"/><text x="50.8118%" y="575.50"></text></g><g><title>lock_sock_nested (2 samples, 0.22%)</title><rect x="50.6742%" y="565" width="0.2247%" height="15" fill="rgb(247,89,20)"/><text x="50.9242%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.22%)</title><rect x="50.6742%" y="549" width="0.2247%" height="15" fill="rgb(248,130,54)"/><text x="50.9242%" y="559.50"></text></g><g><title>preempt_count_add (2 samples, 0.22%)</title><rect x="50.6742%" y="533" width="0.2247%" height="15" fill="rgb(234,196,4)"/><text x="50.9242%" y="543.50"></text></g><g><title>__sk_dst_check (2 samples, 0.22%)</title><rect x="51.7978%" y="485" width="0.2247%" height="15" fill="rgb(250,143,31)"/><text x="52.0478%" y="495.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.11%)</title><rect x="52.6966%" y="405" width="0.1124%" height="15" fill="rgb(211,110,34)"/><text x="52.9466%" y="415.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.45%)</title><rect x="52.4719%" y="453" width="0.4494%" height="15" fill="rgb(215,124,48)"/><text x="52.7219%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.22%)</title><rect x="52.6966%" y="437" width="0.2247%" height="15" fill="rgb(216,46,13)"/><text x="52.9466%" y="447.50"></text></g><g><title>loopback_xmit (2 samples, 0.22%)</title><rect x="52.6966%" y="421" width="0.2247%" height="15" fill="rgb(205,184,25)"/><text x="52.9466%" y="431.50"></text></g><g><title>tcp_wfree (1 samples, 0.11%)</title><rect x="52.8090%" y="405" width="0.1124%" height="15" fill="rgb(228,1,10)"/><text x="53.0590%" y="415.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="53.0337%" y="389" width="0.1124%" height="15" fill="rgb(213,116,27)"/><text x="53.2837%" y="399.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="53.0337%" y="373" width="0.1124%" height="15" fill="rgb(241,95,50)"/><text x="53.2837%" y="383.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="53.0337%" y="357" width="0.1124%" height="15" fill="rgb(238,48,32)"/><text x="53.2837%" y="367.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.11%)</title><rect x="53.0337%" y="341" width="0.1124%" height="15" fill="rgb(235,113,49)"/><text x="53.2837%" y="351.50"></text></g><g><title>tick_sched_timer (1 samples, 0.11%)</title><rect x="53.0337%" y="325" width="0.1124%" height="15" fill="rgb(205,127,43)"/><text x="53.2837%" y="335.50"></text></g><g><title>tick_sched_handle (1 samples, 0.11%)</title><rect x="53.0337%" y="309" width="0.1124%" height="15" fill="rgb(250,162,2)"/><text x="53.2837%" y="319.50"></text></g><g><title>update_process_times (1 samples, 0.11%)</title><rect x="53.0337%" y="293" width="0.1124%" height="15" fill="rgb(220,13,41)"/><text x="53.2837%" y="303.50"></text></g><g><title>scheduler_tick (1 samples, 0.11%)</title><rect x="53.0337%" y="277" width="0.1124%" height="15" fill="rgb(249,221,25)"/><text x="53.2837%" y="287.50"></text></g><g><title>arch_scale_freq_tick (1 samples, 0.11%)</title><rect x="53.0337%" y="261" width="0.1124%" height="15" fill="rgb(215,208,19)"/><text x="53.2837%" y="271.50"></text></g><g><title>native_read_msr (1 samples, 0.11%)</title><rect x="53.0337%" y="245" width="0.1124%" height="15" fill="rgb(236,175,2)"/><text x="53.2837%" y="255.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="53.1461%" y="389" width="0.1124%" height="15" fill="rgb(241,52,2)"/><text x="53.3961%" y="399.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="53.1461%" y="373" width="0.1124%" height="15" fill="rgb(248,140,14)"/><text x="53.3961%" y="383.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="53.3708%" y="341" width="0.1124%" height="15" fill="rgb(253,22,42)"/><text x="53.6208%" y="351.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="53.8202%" y="293" width="0.1124%" height="15" fill="rgb(234,61,47)"/><text x="54.0702%" y="303.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.22%)</title><rect x="54.3820%" y="261" width="0.2247%" height="15" fill="rgb(208,226,15)"/><text x="54.6320%" y="271.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="54.6067%" y="245" width="0.1124%" height="15" fill="rgb(217,221,4)"/><text x="54.8567%" y="255.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.22%)</title><rect x="54.6067%" y="261" width="0.2247%" height="15" fill="rgb(212,174,34)"/><text x="54.8567%" y="271.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.11%)</title><rect x="54.7191%" y="245" width="0.1124%" height="15" fill="rgb(253,83,4)"/><text x="54.9691%" y="255.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="54.8315%" y="229" width="0.1124%" height="15" fill="rgb(250,195,49)"/><text x="55.0815%" y="239.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="54.9438%" y="165" width="0.1124%" height="15" fill="rgb(241,192,25)"/><text x="55.1938%" y="175.50"></text></g><g><title>psi_flags_change (1 samples, 0.11%)</title><rect x="55.1685%" y="133" width="0.1124%" height="15" fill="rgb(208,124,10)"/><text x="55.4185%" y="143.50"></text></g><g><title>psi_task_change (11 samples, 1.24%)</title><rect x="55.0562%" y="149" width="1.2360%" height="15" fill="rgb(222,33,0)"/><text x="55.3062%" y="159.50"></text></g><g><title>psi_group_change (9 samples, 1.01%)</title><rect x="55.2809%" y="133" width="1.0112%" height="15" fill="rgb(234,209,28)"/><text x="55.5309%" y="143.50"></text></g><g><title>record_times (2 samples, 0.22%)</title><rect x="56.0674%" y="117" width="0.2247%" height="15" fill="rgb(224,11,23)"/><text x="56.3174%" y="127.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="56.1798%" y="101" width="0.1124%" height="15" fill="rgb(232,99,1)"/><text x="56.4298%" y="111.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="56.1798%" y="85" width="0.1124%" height="15" fill="rgb(237,95,45)"/><text x="56.4298%" y="95.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="56.1798%" y="69" width="0.1124%" height="15" fill="rgb(208,109,11)"/><text x="56.4298%" y="79.50"></text></g><g><title>enqueue_task (12 samples, 1.35%)</title><rect x="55.0562%" y="165" width="1.3483%" height="15" fill="rgb(216,190,48)"/><text x="55.3062%" y="175.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.11%)</title><rect x="56.2921%" y="149" width="0.1124%" height="15" fill="rgb(251,171,36)"/><text x="56.5421%" y="159.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.11%)</title><rect x="56.8539%" y="133" width="0.1124%" height="15" fill="rgb(230,62,22)"/><text x="57.1039%" y="143.50"></text></g><g><title>rb_insert_color (1 samples, 0.11%)</title><rect x="56.9663%" y="133" width="0.1124%" height="15" fill="rgb(225,114,35)"/><text x="57.2163%" y="143.50"></text></g><g><title>enqueue_task_fair (10 samples, 1.12%)</title><rect x="56.4045%" y="165" width="1.1236%" height="15" fill="rgb(215,118,42)"/><text x="56.6545%" y="175.50"></text></g><g><title>enqueue_entity (9 samples, 1.01%)</title><rect x="56.5169%" y="149" width="1.0112%" height="15" fill="rgb(243,119,21)"/><text x="56.7669%" y="159.50"></text></g><g><title>update_load_avg (4 samples, 0.45%)</title><rect x="57.0787%" y="133" width="0.4494%" height="15" fill="rgb(252,177,53)"/><text x="57.3287%" y="143.50"></text></g><g><title>__update_load_avg_cfs_rq (4 samples, 0.45%)</title><rect x="57.0787%" y="117" width="0.4494%" height="15" fill="rgb(237,209,29)"/><text x="57.3287%" y="127.50"></text></g><g><title>find_first_bit (1 samples, 0.11%)</title><rect x="57.5281%" y="165" width="0.1124%" height="15" fill="rgb(212,65,23)"/><text x="57.7781%" y="175.50"></text></g><g><title>ttwu_do_wakeup (5 samples, 0.56%)</title><rect x="57.6404%" y="165" width="0.5618%" height="15" fill="rgb(230,222,46)"/><text x="57.8904%" y="175.50"></text></g><g><title>check_preempt_curr (4 samples, 0.45%)</title><rect x="57.7528%" y="149" width="0.4494%" height="15" fill="rgb(215,135,32)"/><text x="58.0028%" y="159.50"></text></g><g><title>resched_curr (4 samples, 0.45%)</title><rect x="57.7528%" y="133" width="0.4494%" height="15" fill="rgb(246,101,22)"/><text x="58.0028%" y="143.50"></text></g><g><title>__wake_up_common (31 samples, 3.48%)</title><rect x="54.9438%" y="197" width="3.4831%" height="15" fill="rgb(206,107,13)"/><text x="55.1938%" y="207.50">__w..</text></g><g><title>try_to_wake_up (31 samples, 3.48%)</title><rect x="54.9438%" y="181" width="3.4831%" height="15" fill="rgb(250,100,44)"/><text x="55.1938%" y="191.50">try..</text></g><g><title>update_rq_clock (2 samples, 0.22%)</title><rect x="58.2022%" y="165" width="0.2247%" height="15" fill="rgb(231,147,38)"/><text x="58.4522%" y="175.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="58.3146%" y="149" width="0.1124%" height="15" fill="rgb(229,8,40)"/><text x="58.5646%" y="159.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="58.3146%" y="133" width="0.1124%" height="15" fill="rgb(221,135,30)"/><text x="58.5646%" y="143.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="58.3146%" y="117" width="0.1124%" height="15" fill="rgb(249,193,18)"/><text x="58.5646%" y="127.50"></text></g><g><title>__wake_up_common_lock (33 samples, 3.71%)</title><rect x="54.9438%" y="213" width="3.7079%" height="15" fill="rgb(209,133,39)"/><text x="55.1938%" y="223.50">__wa..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.22%)</title><rect x="58.4270%" y="197" width="0.2247%" height="15" fill="rgb(232,100,14)"/><text x="58.6770%" y="207.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="58.5393%" y="181" width="0.1124%" height="15" fill="rgb(224,185,1)"/><text x="58.7893%" y="191.50"></text></g><g><title>sock_def_readable (34 samples, 3.82%)</title><rect x="54.9438%" y="229" width="3.8202%" height="15" fill="rgb(223,139,8)"/><text x="55.1938%" y="239.50">sock..</text></g><g><title>__wake_up_sync_key (1 samples, 0.11%)</title><rect x="58.6517%" y="213" width="0.1124%" height="15" fill="rgb(232,213,38)"/><text x="58.9017%" y="223.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="59.2135%" y="213" width="0.1124%" height="15" fill="rgb(207,94,22)"/><text x="59.4635%" y="223.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="59.2135%" y="197" width="0.1124%" height="15" fill="rgb(219,183,54)"/><text x="59.4635%" y="207.50"></text></g><g><title>bictcp_acked (1 samples, 0.11%)</title><rect x="59.3258%" y="213" width="0.1124%" height="15" fill="rgb(216,185,54)"/><text x="59.5758%" y="223.50"></text></g><g><title>kfree_skbmem (1 samples, 0.11%)</title><rect x="59.4382%" y="213" width="0.1124%" height="15" fill="rgb(254,217,39)"/><text x="59.6882%" y="223.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.22%)</title><rect x="59.5506%" y="213" width="0.2247%" height="15" fill="rgb(240,178,23)"/><text x="59.8006%" y="223.50"></text></g><g><title>tcp_rack_update_reo_wnd (1 samples, 0.11%)</title><rect x="59.7753%" y="213" width="0.1124%" height="15" fill="rgb(218,11,47)"/><text x="60.0253%" y="223.50"></text></g><g><title>tcp_ack (11 samples, 1.24%)</title><rect x="58.7640%" y="229" width="1.2360%" height="15" fill="rgb(218,51,51)"/><text x="59.0140%" y="239.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="59.8876%" y="213" width="0.1124%" height="15" fill="rgb(238,126,27)"/><text x="60.1376%" y="223.50"></text></g><g><title>tcp_check_space (1 samples, 0.11%)</title><rect x="60.0000%" y="229" width="0.1124%" height="15" fill="rgb(249,202,22)"/><text x="60.2500%" y="239.50"></text></g><g><title>tcp_data_queue (1 samples, 0.11%)</title><rect x="60.1124%" y="229" width="0.1124%" height="15" fill="rgb(254,195,49)"/><text x="60.3624%" y="239.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="60.1124%" y="213" width="0.1124%" height="15" fill="rgb(208,123,14)"/><text x="60.3624%" y="223.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="60.1124%" y="197" width="0.1124%" height="15" fill="rgb(224,200,8)"/><text x="60.3624%" y="207.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="60.1124%" y="181" width="0.1124%" height="15" fill="rgb(217,61,36)"/><text x="60.3624%" y="191.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="60.1124%" y="165" width="0.1124%" height="15" fill="rgb(206,35,45)"/><text x="60.3624%" y="175.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="60.1124%" y="149" width="0.1124%" height="15" fill="rgb(217,65,33)"/><text x="60.3624%" y="159.50"></text></g><g><title>enqueue_entity (1 samples, 0.11%)</title><rect x="60.1124%" y="133" width="0.1124%" height="15" fill="rgb(222,158,48)"/><text x="60.3624%" y="143.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.22%)</title><rect x="60.2247%" y="229" width="0.2247%" height="15" fill="rgb(254,2,54)"/><text x="60.4747%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (52 samples, 5.84%)</title><rect x="54.8315%" y="261" width="5.8427%" height="15" fill="rgb(250,143,38)"/><text x="55.0815%" y="271.50">tcp_v4_..</text></g><g><title>tcp_rcv_established (52 samples, 5.84%)</title><rect x="54.8315%" y="245" width="5.8427%" height="15" fill="rgb(248,25,0)"/><text x="55.0815%" y="255.50">tcp_rcv..</text></g><g><title>tcp_send_delayed_ack (2 samples, 0.22%)</title><rect x="60.4494%" y="229" width="0.2247%" height="15" fill="rgb(206,152,27)"/><text x="60.6994%" y="239.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.11%)</title><rect x="60.6742%" y="261" width="0.1124%" height="15" fill="rgb(240,77,30)"/><text x="60.9242%" y="271.50"></text></g><g><title>ip_local_deliver (66 samples, 7.42%)</title><rect x="53.4831%" y="325" width="7.4157%" height="15" fill="rgb(231,5,3)"/><text x="53.7331%" y="335.50">ip_local_d..</text></g><g><title>ip_local_deliver_finish (66 samples, 7.42%)</title><rect x="53.4831%" y="309" width="7.4157%" height="15" fill="rgb(207,226,32)"/><text x="53.7331%" y="319.50">ip_local_d..</text></g><g><title>ip_protocol_deliver_rcu (62 samples, 6.97%)</title><rect x="53.9326%" y="293" width="6.9663%" height="15" fill="rgb(222,207,47)"/><text x="54.1826%" y="303.50">ip_protoc..</text></g><g><title>tcp_v4_rcv (59 samples, 6.63%)</title><rect x="54.2697%" y="277" width="6.6292%" height="15" fill="rgb(229,115,45)"/><text x="54.5197%" y="287.50">tcp_v4_rcv</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.11%)</title><rect x="60.7865%" y="261" width="0.1124%" height="15" fill="rgb(224,191,6)"/><text x="61.0365%" y="271.50"></text></g><g><title>ip_rcv_core (2 samples, 0.22%)</title><rect x="60.8989%" y="325" width="0.2247%" height="15" fill="rgb(230,227,24)"/><text x="61.1489%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (70 samples, 7.87%)</title><rect x="53.3708%" y="357" width="7.8652%" height="15" fill="rgb(228,80,19)"/><text x="53.6208%" y="367.50">__netif_rec..</text></g><g><title>ip_rcv (69 samples, 7.75%)</title><rect x="53.4831%" y="341" width="7.7528%" height="15" fill="rgb(247,229,0)"/><text x="53.7331%" y="351.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.11%)</title><rect x="61.1236%" y="325" width="0.1124%" height="15" fill="rgb(237,194,15)"/><text x="61.3736%" y="335.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.11%)</title><rect x="61.1236%" y="309" width="0.1124%" height="15" fill="rgb(219,203,20)"/><text x="61.3736%" y="319.50"></text></g><g><title>ip_finish_output2 (82 samples, 9.21%)</title><rect x="52.1348%" y="469" width="9.2135%" height="15" fill="rgb(234,128,8)"/><text x="52.3848%" y="479.50">ip_finish_out..</text></g><g><title>__local_bh_enable_ip (75 samples, 8.43%)</title><rect x="52.9213%" y="453" width="8.4270%" height="15" fill="rgb(248,202,8)"/><text x="53.1713%" y="463.50">__local_bh_e..</text></g><g><title>do_softirq (75 samples, 8.43%)</title><rect x="52.9213%" y="437" width="8.4270%" height="15" fill="rgb(206,104,37)"/><text x="53.1713%" y="447.50">do_softirq</text></g><g><title>do_softirq_own_stack (75 samples, 8.43%)</title><rect x="52.9213%" y="421" width="8.4270%" height="15" fill="rgb(223,8,27)"/><text x="53.1713%" y="431.50">do_softirq_o..</text></g><g><title>__do_softirq (75 samples, 8.43%)</title><rect x="52.9213%" y="405" width="8.4270%" height="15" fill="rgb(216,217,28)"/><text x="53.1713%" y="415.50">__do_softirq</text></g><g><title>net_rx_action (72 samples, 8.09%)</title><rect x="53.2584%" y="389" width="8.0899%" height="15" fill="rgb(249,199,1)"/><text x="53.5084%" y="399.50">net_rx_acti..</text></g><g><title>process_backlog (72 samples, 8.09%)</title><rect x="53.2584%" y="373" width="8.0899%" height="15" fill="rgb(240,85,17)"/><text x="53.5084%" y="383.50">process_bac..</text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="61.2360%" y="357" width="0.1124%" height="15" fill="rgb(206,108,45)"/><text x="61.4860%" y="367.50"></text></g><g><title>__ip_queue_xmit (87 samples, 9.78%)</title><rect x="51.6854%" y="501" width="9.7753%" height="15" fill="rgb(245,210,41)"/><text x="51.9354%" y="511.50">__ip_queue_xmit</text></g><g><title>ip_output (84 samples, 9.44%)</title><rect x="52.0225%" y="485" width="9.4382%" height="15" fill="rgb(206,13,37)"/><text x="52.2725%" y="495.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="61.3483%" y="469" width="0.1124%" height="15" fill="rgb(250,61,18)"/><text x="61.5983%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="61.3483%" y="453" width="0.1124%" height="15" fill="rgb(235,172,48)"/><text x="61.5983%" y="463.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="61.3483%" y="437" width="0.1124%" height="15" fill="rgb(249,201,17)"/><text x="61.5983%" y="447.50"></text></g><g><title>__tcp_select_window (2 samples, 0.22%)</title><rect x="61.4607%" y="501" width="0.2247%" height="15" fill="rgb(219,208,6)"/><text x="61.7107%" y="511.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.11%)</title><rect x="61.6854%" y="501" width="0.1124%" height="15" fill="rgb(248,31,23)"/><text x="61.9354%" y="511.50"></text></g><g><title>skb_clone (1 samples, 0.11%)</title><rect x="61.7978%" y="501" width="0.1124%" height="15" fill="rgb(245,15,42)"/><text x="62.0478%" y="511.50"></text></g><g><title>__copy_skb_header (1 samples, 0.11%)</title><rect x="61.7978%" y="485" width="0.1124%" height="15" fill="rgb(222,217,39)"/><text x="62.0478%" y="495.50"></text></g><g><title>tcp_options_write (2 samples, 0.22%)</title><rect x="61.9101%" y="501" width="0.2247%" height="15" fill="rgb(210,219,27)"/><text x="62.1601%" y="511.50"></text></g><g><title>__tcp_transmit_skb (95 samples, 10.67%)</title><rect x="51.5730%" y="517" width="10.6742%" height="15" fill="rgb(252,166,36)"/><text x="51.8230%" y="527.50">__tcp_transmit_s..</text></g><g><title>tcp_rate_skb_sent (1 samples, 0.11%)</title><rect x="62.1348%" y="501" width="0.1124%" height="15" fill="rgb(245,132,34)"/><text x="62.3848%" y="511.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="62.2472%" y="517" width="0.1124%" height="15" fill="rgb(236,54,3)"/><text x="62.4972%" y="527.50"></text></g><g><title>read_tsc (1 samples, 0.11%)</title><rect x="62.2472%" y="501" width="0.1124%" height="15" fill="rgb(241,173,43)"/><text x="62.4972%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (99 samples, 11.12%)</title><rect x="51.3483%" y="549" width="11.1236%" height="15" fill="rgb(215,190,9)"/><text x="51.5983%" y="559.50">__tcp_push_pendi..</text></g><g><title>tcp_write_xmit (99 samples, 11.12%)</title><rect x="51.3483%" y="533" width="11.1236%" height="15" fill="rgb(242,101,16)"/><text x="51.5983%" y="543.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="62.3596%" y="517" width="0.1124%" height="15" fill="rgb(223,190,21)"/><text x="62.6096%" y="527.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="62.4719%" y="549" width="0.1124%" height="15" fill="rgb(215,228,25)"/><text x="62.7219%" y="559.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.11%)</title><rect x="62.4719%" y="533" width="0.1124%" height="15" fill="rgb(225,36,22)"/><text x="62.7219%" y="543.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="62.6966%" y="517" width="0.1124%" height="15" fill="rgb(251,106,46)"/><text x="62.9466%" y="527.50"></text></g><g><title>memset_erms (1 samples, 0.11%)</title><rect x="62.6966%" y="501" width="0.1124%" height="15" fill="rgb(208,90,1)"/><text x="62.9466%" y="511.50"></text></g><g><title>__ksize (4 samples, 0.45%)</title><rect x="62.8090%" y="517" width="0.4494%" height="15" fill="rgb(243,10,4)"/><text x="63.0590%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (8 samples, 0.90%)</title><rect x="62.5843%" y="549" width="0.8989%" height="15" fill="rgb(212,137,27)"/><text x="62.8343%" y="559.50"></text></g><g><title>__alloc_skb (8 samples, 0.90%)</title><rect x="62.5843%" y="533" width="0.8989%" height="15" fill="rgb(231,220,49)"/><text x="62.8343%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.22%)</title><rect x="63.2584%" y="517" width="0.2247%" height="15" fill="rgb(237,96,20)"/><text x="63.5084%" y="527.50"></text></g><g><title>memset_erms (1 samples, 0.11%)</title><rect x="63.3708%" y="501" width="0.1124%" height="15" fill="rgb(239,229,30)"/><text x="63.6208%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="63.4831%" y="549" width="0.1124%" height="15" fill="rgb(219,65,33)"/><text x="63.7331%" y="559.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="63.4831%" y="533" width="0.1124%" height="15" fill="rgb(243,134,7)"/><text x="63.7331%" y="543.50"></text></g><g><title>skb_entail (1 samples, 0.11%)</title><rect x="63.5955%" y="549" width="0.1124%" height="15" fill="rgb(216,177,54)"/><text x="63.8455%" y="559.50"></text></g><g><title>tcp_push (1 samples, 0.11%)</title><rect x="63.7079%" y="549" width="0.1124%" height="15" fill="rgb(211,160,20)"/><text x="63.9579%" y="559.50"></text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.11%)</title><rect x="63.8202%" y="549" width="0.1124%" height="15" fill="rgb(239,85,39)"/><text x="64.0702%" y="559.50"></text></g><g><title>sock_sendmsg (126 samples, 14.16%)</title><rect x="50.1124%" y="597" width="14.1573%" height="15" fill="rgb(232,125,22)"/><text x="50.3624%" y="607.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (123 samples, 13.82%)</title><rect x="50.4494%" y="581" width="13.8202%" height="15" fill="rgb(244,57,34)"/><text x="50.6994%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (119 samples, 13.37%)</title><rect x="50.8989%" y="565" width="13.3708%" height="15" fill="rgb(214,203,32)"/><text x="51.1489%" y="575.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (3 samples, 0.34%)</title><rect x="63.9326%" y="549" width="0.3371%" height="15" fill="rgb(207,58,43)"/><text x="64.1826%" y="559.50"></text></g><g><title>tcp_current_mss (2 samples, 0.22%)</title><rect x="64.0449%" y="533" width="0.2247%" height="15" fill="rgb(215,193,15)"/><text x="64.2949%" y="543.50"></text></g><g><title>__x64_sys_sendto (132 samples, 14.83%)</title><rect x="49.6629%" y="629" width="14.8315%" height="15" fill="rgb(232,15,44)"/><text x="49.9129%" y="639.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (131 samples, 14.72%)</title><rect x="49.7753%" y="613" width="14.7191%" height="15" fill="rgb(212,3,48)"/><text x="50.0253%" y="623.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.22%)</title><rect x="64.2697%" y="597" width="0.2247%" height="15" fill="rgb(218,128,7)"/><text x="64.5197%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="64.3820%" y="581" width="0.1124%" height="15" fill="rgb(226,216,39)"/><text x="64.6320%" y="591.50"></text></g><g><title>syscall_slow_exit_work (4 samples, 0.45%)</title><rect x="64.4944%" y="629" width="0.4494%" height="15" fill="rgb(243,47,51)"/><text x="64.7444%" y="639.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.22%)</title><rect x="64.7191%" y="613" width="0.2247%" height="15" fill="rgb(241,183,40)"/><text x="64.9691%" y="623.50"></text></g><g><title>do_syscall_64 (137 samples, 15.39%)</title><rect x="49.6629%" y="645" width="15.3933%" height="15" fill="rgb(231,217,32)"/><text x="49.9129%" y="655.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="64.9438%" y="629" width="0.1124%" height="15" fill="rgb(229,61,38)"/><text x="65.1938%" y="639.50"></text></g><g><title>decor::Shim::run_on_tcp (474 samples, 53.26%)</title><rect x="12.4719%" y="757" width="53.2584%" height="15" fill="rgb(225,210,5)"/><text x="12.7219%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (474 samples, 53.26%)</title><rect x="12.4719%" y="741" width="53.2584%" height="15" fill="rgb(231,79,45)"/><text x="12.7219%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (145 samples, 16.29%)</title><rect x="49.4382%" y="725" width="16.2921%" height="15" fill="rgb(224,100,7)"/><text x="49.6882%" y="735.50">std::io::buffered::BufWri..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (145 samples, 16.29%)</title><rect x="49.4382%" y="709" width="16.2921%" height="15" fill="rgb(241,198,18)"/><text x="49.6882%" y="719.50">&lt;std::net::tcp::TcpStream..</text></g><g><title>std::sys_common::net::TcpStream::write (145 samples, 16.29%)</title><rect x="49.4382%" y="693" width="16.2921%" height="15" fill="rgb(252,97,53)"/><text x="49.6882%" y="703.50">std::sys_common::net::Tcp..</text></g><g><title>__libc_send (145 samples, 16.29%)</title><rect x="49.4382%" y="677" width="16.2921%" height="15" fill="rgb(220,88,7)"/><text x="49.6882%" y="687.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (144 samples, 16.18%)</title><rect x="49.5506%" y="661" width="16.1798%" height="15" fill="rgb(213,176,14)"/><text x="49.8006%" y="671.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.67%)</title><rect x="65.0562%" y="645" width="0.6742%" height="15" fill="rgb(246,73,7)"/><text x="65.3062%" y="655.50"></text></g><g><title>__GI___clone (475 samples, 53.37%)</title><rect x="12.4719%" y="869" width="53.3708%" height="15" fill="rgb(245,64,36)"/><text x="12.7219%" y="879.50">__GI___clone</text></g><g><title>start_thread (475 samples, 53.37%)</title><rect x="12.4719%" y="853" width="53.3708%" height="15" fill="rgb(245,80,10)"/><text x="12.7219%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (475 samples, 53.37%)</title><rect x="12.4719%" y="837" width="53.3708%" height="15" fill="rgb(232,107,50)"/><text x="12.7219%" y="847.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (475 samples, 53.37%)</title><rect x="12.4719%" y="821" width="53.3708%" height="15" fill="rgb(253,3,0)"/><text x="12.7219%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (475 samples, 53.37%)</title><rect x="12.4719%" y="805" width="53.3708%" height="15" fill="rgb(212,99,53)"/><text x="12.7219%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (475 samples, 53.37%)</title><rect x="12.4719%" y="789" width="53.3708%" height="15" fill="rgb(249,111,54)"/><text x="12.7219%" y="799.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (475 samples, 53.37%)</title><rect x="12.4719%" y="773" width="53.3708%" height="15" fill="rgb(249,55,30)"/><text x="12.7219%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.11%)</title><rect x="65.7303%" y="757" width="0.1124%" height="15" fill="rgb(237,47,42)"/><text x="65.9803%" y="767.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.11%)</title><rect x="65.7303%" y="741" width="0.1124%" height="15" fill="rgb(211,20,18)"/><text x="65.9803%" y="751.50"></text></g><g><title>url::ParseOptions::parse (1 samples, 0.11%)</title><rect x="65.7303%" y="725" width="0.1124%" height="15" fill="rgb(231,203,46)"/><text x="65.9803%" y="735.50"></text></g><g><title>url::parser::Parser::parse_url (1 samples, 0.11%)</title><rect x="65.7303%" y="709" width="0.1124%" height="15" fill="rgb(237,142,3)"/><text x="65.9803%" y="719.50"></text></g><g><title>url::parser::Parser::after_double_slash (1 samples, 0.11%)</title><rect x="65.7303%" y="693" width="0.1124%" height="15" fill="rgb(241,107,1)"/><text x="65.9803%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="65.7303%" y="677" width="0.1124%" height="15" fill="rgb(229,83,13)"/><text x="65.9803%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="65.7303%" y="661" width="0.1124%" height="15" fill="rgb(241,91,40)"/><text x="65.9803%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="65.7303%" y="645" width="0.1124%" height="15" fill="rgb(225,3,45)"/><text x="65.9803%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.56%)</title><rect x="65.8427%" y="693" width="0.5618%" height="15" fill="rgb(244,223,14)"/><text x="66.0927%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.22%)</title><rect x="66.1798%" y="677" width="0.2247%" height="15" fill="rgb(224,124,37)"/><text x="66.4298%" y="687.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.11%)</title><rect x="66.4045%" y="693" width="0.1124%" height="15" fill="rgb(251,171,30)"/><text x="66.6545%" y="703.50"></text></g><g><title>&lt;rand_hc::hc128::Hc128Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.11%)</title><rect x="66.4045%" y="677" width="0.1124%" height="15" fill="rgb(236,46,54)"/><text x="66.6545%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.45%)</title><rect x="66.5169%" y="613" width="0.4494%" height="15" fill="rgb(245,213,5)"/><text x="66.7669%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.45%)</title><rect x="66.5169%" y="597" width="0.4494%" height="15" fill="rgb(230,144,27)"/><text x="66.7669%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="66.8539%" y="581" width="0.1124%" height="15" fill="rgb(220,86,6)"/><text x="67.1039%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="66.8539%" y="565" width="0.1124%" height="15" fill="rgb(240,20,13)"/><text x="67.1039%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="66.8539%" y="549" width="0.1124%" height="15" fill="rgb(217,89,34)"/><text x="67.1039%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="66.8539%" y="533" width="0.1124%" height="15" fill="rgb(229,13,5)"/><text x="67.1039%" y="543.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="66.9663%" y="597" width="0.1124%" height="15" fill="rgb(244,67,35)"/><text x="67.2163%" y="607.50"></text></g><g><title>__GI___libc_free (4 samples, 0.45%)</title><rect x="67.0787%" y="597" width="0.4494%" height="15" fill="rgb(221,40,2)"/><text x="67.3287%" y="607.50"></text></g><g><title>__perf_event_task_sched_in (232 samples, 26.07%)</title><rect x="67.9775%" y="405" width="26.0674%" height="15" fill="rgb(237,157,21)"/><text x="68.2275%" y="415.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 26.07%)</title><rect x="67.9775%" y="389" width="26.0674%" height="15" fill="rgb(222,94,11)"/><text x="68.2275%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (232 samples, 26.07%)</title><rect x="67.9775%" y="373" width="26.0674%" height="15" fill="rgb(249,113,6)"/><text x="68.2275%" y="383.50">native_write_msr</text></g><g><title>do_syscall_64 (236 samples, 26.52%)</title><rect x="67.6404%" y="565" width="26.5169%" height="15" fill="rgb(238,137,36)"/><text x="67.8904%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 26.52%)</title><rect x="67.6404%" y="549" width="26.5169%" height="15" fill="rgb(210,102,26)"/><text x="67.8904%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 26.52%)</title><rect x="67.6404%" y="533" width="26.5169%" height="15" fill="rgb(218,30,30)"/><text x="67.8904%" y="543.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (236 samples, 26.52%)</title><rect x="67.6404%" y="517" width="26.5169%" height="15" fill="rgb(214,67,26)"/><text x="67.8904%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (236 samples, 26.52%)</title><rect x="67.6404%" y="501" width="26.5169%" height="15" fill="rgb(251,9,53)"/><text x="67.8904%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (236 samples, 26.52%)</title><rect x="67.6404%" y="485" width="26.5169%" height="15" fill="rgb(228,204,25)"/><text x="67.8904%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (236 samples, 26.52%)</title><rect x="67.6404%" y="469" width="26.5169%" height="15" fill="rgb(207,153,8)"/><text x="67.8904%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (236 samples, 26.52%)</title><rect x="67.6404%" y="453" width="26.5169%" height="15" fill="rgb(242,9,16)"/><text x="67.8904%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (236 samples, 26.52%)</title><rect x="67.6404%" y="437" width="26.5169%" height="15" fill="rgb(217,211,10)"/><text x="67.8904%" y="447.50">__schedule</text></g><g><title>finish_task_switch (236 samples, 26.52%)</title><rect x="67.6404%" y="421" width="26.5169%" height="15" fill="rgb(219,228,52)"/><text x="67.8904%" y="431.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.11%)</title><rect x="94.0449%" y="405" width="0.1124%" height="15" fill="rgb(231,92,29)"/><text x="94.2949%" y="415.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="94.0449%" y="389" width="0.1124%" height="15" fill="rgb(232,8,23)"/><text x="94.2949%" y="399.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="94.0449%" y="373" width="0.1124%" height="15" fill="rgb(216,211,34)"/><text x="94.2949%" y="383.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="94.0449%" y="357" width="0.1124%" height="15" fill="rgb(236,151,0)"/><text x="94.2949%" y="367.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.11%)</title><rect x="94.0449%" y="341" width="0.1124%" height="15" fill="rgb(209,168,3)"/><text x="94.2949%" y="351.50"></text></g><g><title>tick_sched_timer (1 samples, 0.11%)</title><rect x="94.0449%" y="325" width="0.1124%" height="15" fill="rgb(208,129,28)"/><text x="94.2949%" y="335.50"></text></g><g><title>tick_sched_handle (1 samples, 0.11%)</title><rect x="94.0449%" y="309" width="0.1124%" height="15" fill="rgb(229,78,22)"/><text x="94.2949%" y="319.50"></text></g><g><title>update_process_times (1 samples, 0.11%)</title><rect x="94.0449%" y="293" width="0.1124%" height="15" fill="rgb(228,187,13)"/><text x="94.2949%" y="303.50"></text></g><g><title>scheduler_tick (1 samples, 0.11%)</title><rect x="94.0449%" y="277" width="0.1124%" height="15" fill="rgb(240,119,24)"/><text x="94.2949%" y="287.50"></text></g><g><title>task_tick_fair (1 samples, 0.11%)</title><rect x="94.0449%" y="261" width="0.1124%" height="15" fill="rgb(209,194,42)"/><text x="94.2949%" y="271.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.11%)</title><rect x="94.0449%" y="245" width="0.1124%" height="15" fill="rgb(247,200,46)"/><text x="94.2949%" y="255.50"></text></g><g><title>[libhwloc.so.15.2.0] (249 samples, 27.98%)</title><rect x="66.5169%" y="629" width="27.9775%" height="15" fill="rgb(218,76,16)"/><text x="66.7669%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (245 samples, 27.53%)</title><rect x="66.9663%" y="613" width="27.5281%" height="15" fill="rgb(225,21,48)"/><text x="67.2163%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 26.97%)</title><rect x="67.5281%" y="597" width="26.9663%" height="15" fill="rgb(239,223,50)"/><text x="67.7781%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (239 samples, 26.85%)</title><rect x="67.6404%" y="581" width="26.8539%" height="15" fill="rgb(244,45,21)"/><text x="67.8904%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.34%)</title><rect x="94.1573%" y="565" width="0.3371%" height="15" fill="rgb(232,33,43)"/><text x="94.4073%" y="575.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="94.3820%" y="549" width="0.1124%" height="15" fill="rgb(209,8,3)"/><text x="94.6320%" y="559.50"></text></g><g><title>copy_kernel_to_fpregs (1 samples, 0.11%)</title><rect x="94.3820%" y="533" width="0.1124%" height="15" fill="rgb(214,25,53)"/><text x="94.6320%" y="543.50"></text></g><g><title>hwloc::Topology::new (250 samples, 28.09%)</title><rect x="66.5169%" y="693" width="28.0899%" height="15" fill="rgb(254,186,54)"/><text x="66.7669%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (250 samples, 28.09%)</title><rect x="66.5169%" y="677" width="28.0899%" height="15" fill="rgb(208,174,49)"/><text x="66.7669%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (250 samples, 28.09%)</title><rect x="66.5169%" y="661" width="28.0899%" height="15" fill="rgb(233,191,51)"/><text x="66.7669%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (250 samples, 28.09%)</title><rect x="66.5169%" y="645" width="28.0899%" height="15" fill="rgb(222,134,10)"/><text x="66.7669%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.11%)</title><rect x="94.4944%" y="629" width="0.1124%" height="15" fill="rgb(230,226,20)"/><text x="94.7444%" y="639.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.11%)</title><rect x="94.4944%" y="613" width="0.1124%" height="15" fill="rgb(251,111,25)"/><text x="94.7444%" y="623.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.11%)</title><rect x="94.4944%" y="597" width="0.1124%" height="15" fill="rgb(224,40,46)"/><text x="94.7444%" y="607.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.11%)</title><rect x="94.4944%" y="581" width="0.1124%" height="15" fill="rgb(236,108,47)"/><text x="94.7444%" y="591.50"></text></g><g><title>__GI___read (1 samples, 0.11%)</title><rect x="94.4944%" y="565" width="0.1124%" height="15" fill="rgb(234,93,0)"/><text x="94.7444%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="94.4944%" y="549" width="0.1124%" height="15" fill="rgb(224,213,32)"/><text x="94.7444%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="94.4944%" y="533" width="0.1124%" height="15" fill="rgb(251,11,48)"/><text x="94.7444%" y="543.50"></text></g><g><title>ksys_read (1 samples, 0.11%)</title><rect x="94.4944%" y="517" width="0.1124%" height="15" fill="rgb(236,173,5)"/><text x="94.7444%" y="527.50"></text></g><g><title>vfs_read (1 samples, 0.11%)</title><rect x="94.4944%" y="501" width="0.1124%" height="15" fill="rgb(230,95,12)"/><text x="94.7444%" y="511.50"></text></g><g><title>seq_read (1 samples, 0.11%)</title><rect x="94.4944%" y="485" width="0.1124%" height="15" fill="rgb(232,209,1)"/><text x="94.7444%" y="495.50"></text></g><g><title>show_cpuinfo (1 samples, 0.11%)</title><rect x="94.4944%" y="469" width="0.1124%" height="15" fill="rgb(232,6,1)"/><text x="94.7444%" y="479.50"></text></g><g><title>seq_printf (1 samples, 0.11%)</title><rect x="94.4944%" y="453" width="0.1124%" height="15" fill="rgb(210,224,50)"/><text x="94.7444%" y="463.50"></text></g><g><title>vsnprintf (1 samples, 0.11%)</title><rect x="94.4944%" y="437" width="0.1124%" height="15" fill="rgb(228,127,35)"/><text x="94.7444%" y="447.50"></text></g><g><title>number (1 samples, 0.11%)</title><rect x="94.4944%" y="421" width="0.1124%" height="15" fill="rgb(245,102,45)"/><text x="94.7444%" y="431.50"></text></g><g><title>put_dec_trunc8 (1 samples, 0.11%)</title><rect x="94.4944%" y="405" width="0.1124%" height="15" fill="rgb(214,1,49)"/><text x="94.7444%" y="415.50"></text></g><g><title>__ip_local_out (1 samples, 0.11%)</title><rect x="95.0562%" y="421" width="0.1124%" height="15" fill="rgb(226,163,40)"/><text x="95.3062%" y="431.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="95.1685%" y="389" width="0.1124%" height="15" fill="rgb(239,212,28)"/><text x="95.4185%" y="399.50"></text></g><g><title>sk_reset_timer (2 samples, 0.22%)</title><rect x="95.6180%" y="165" width="0.2247%" height="15" fill="rgb(220,20,13)"/><text x="95.8680%" y="175.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="95.9551%" y="101" width="0.1124%" height="15" fill="rgb(210,164,35)"/><text x="96.2051%" y="111.50"></text></g><g><title>enqueue_task (4 samples, 0.45%)</title><rect x="96.0674%" y="101" width="0.4494%" height="15" fill="rgb(248,109,41)"/><text x="96.3174%" y="111.50"></text></g><g><title>psi_task_change (3 samples, 0.34%)</title><rect x="96.1798%" y="85" width="0.3371%" height="15" fill="rgb(238,23,50)"/><text x="96.4298%" y="95.50"></text></g><g><title>psi_group_change (3 samples, 0.34%)</title><rect x="96.1798%" y="69" width="0.3371%" height="15" fill="rgb(211,48,49)"/><text x="96.4298%" y="79.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="96.4045%" y="53" width="0.1124%" height="15" fill="rgb(223,36,21)"/><text x="96.6545%" y="63.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="96.4045%" y="37" width="0.1124%" height="15" fill="rgb(207,123,46)"/><text x="96.6545%" y="47.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="96.5169%" y="101" width="0.1124%" height="15" fill="rgb(240,218,32)"/><text x="96.7669%" y="111.50"></text></g><g><title>enqueue_entity (1 samples, 0.11%)</title><rect x="96.5169%" y="85" width="0.1124%" height="15" fill="rgb(252,5,43)"/><text x="96.7669%" y="95.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="96.5169%" y="69" width="0.1124%" height="15" fill="rgb(252,84,19)"/><text x="96.7669%" y="79.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="96.5169%" y="53" width="0.1124%" height="15" fill="rgb(243,152,39)"/><text x="96.7669%" y="63.50"></text></g><g><title>sock_def_readable (8 samples, 0.90%)</title><rect x="95.8427%" y="165" width="0.8989%" height="15" fill="rgb(234,160,15)"/><text x="96.0927%" y="175.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.90%)</title><rect x="95.8427%" y="149" width="0.8989%" height="15" fill="rgb(237,34,20)"/><text x="96.0927%" y="159.50"></text></g><g><title>__wake_up_common (8 samples, 0.90%)</title><rect x="95.8427%" y="133" width="0.8989%" height="15" fill="rgb(229,97,13)"/><text x="96.0927%" y="143.50"></text></g><g><title>try_to_wake_up (8 samples, 0.90%)</title><rect x="95.8427%" y="117" width="0.8989%" height="15" fill="rgb(234,71,50)"/><text x="96.0927%" y="127.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="96.6292%" y="101" width="0.1124%" height="15" fill="rgb(253,155,4)"/><text x="96.8792%" y="111.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="96.9663%" y="149" width="0.1124%" height="15" fill="rgb(222,185,37)"/><text x="97.2163%" y="159.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="96.9663%" y="133" width="0.1124%" height="15" fill="rgb(251,177,13)"/><text x="97.2163%" y="143.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.11%)</title><rect x="96.9663%" y="117" width="0.1124%" height="15" fill="rgb(250,179,40)"/><text x="97.2163%" y="127.50"></text></g><g><title>bictcp_acked (1 samples, 0.11%)</title><rect x="97.0787%" y="149" width="0.1124%" height="15" fill="rgb(242,44,2)"/><text x="97.3287%" y="159.50"></text></g><g><title>tcp_ack (5 samples, 0.56%)</title><rect x="96.7416%" y="165" width="0.5618%" height="15" fill="rgb(216,177,13)"/><text x="96.9916%" y="175.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.11%)</title><rect x="97.1910%" y="149" width="0.1124%" height="15" fill="rgb(216,106,43)"/><text x="97.4410%" y="159.50"></text></g><g><title>__local_bh_enable_ip (19 samples, 2.13%)</title><rect x="95.2809%" y="389" width="2.1348%" height="15" fill="rgb(216,183,2)"/><text x="95.5309%" y="399.50">_..</text></g><g><title>do_softirq (18 samples, 2.02%)</title><rect x="95.3933%" y="373" width="2.0225%" height="15" fill="rgb(249,75,3)"/><text x="95.6433%" y="383.50">d..</text></g><g><title>do_softirq_own_stack (18 samples, 2.02%)</title><rect x="95.3933%" y="357" width="2.0225%" height="15" fill="rgb(219,67,39)"/><text x="95.6433%" y="367.50">d..</text></g><g><title>__do_softirq (18 samples, 2.02%)</title><rect x="95.3933%" y="341" width="2.0225%" height="15" fill="rgb(253,228,2)"/><text x="95.6433%" y="351.50">_..</text></g><g><title>net_rx_action (18 samples, 2.02%)</title><rect x="95.3933%" y="325" width="2.0225%" height="15" fill="rgb(235,138,27)"/><text x="95.6433%" y="335.50">n..</text></g><g><title>process_backlog (18 samples, 2.02%)</title><rect x="95.3933%" y="309" width="2.0225%" height="15" fill="rgb(236,97,51)"/><text x="95.6433%" y="319.50">p..</text></g><g><title>__netif_receive_skb_one_core (17 samples, 1.91%)</title><rect x="95.5056%" y="293" width="1.9101%" height="15" fill="rgb(240,80,30)"/><text x="95.7556%" y="303.50">_..</text></g><g><title>ip_rcv (17 samples, 1.91%)</title><rect x="95.5056%" y="277" width="1.9101%" height="15" fill="rgb(230,178,19)"/><text x="95.7556%" y="287.50">i..</text></g><g><title>ip_local_deliver (17 samples, 1.91%)</title><rect x="95.5056%" y="261" width="1.9101%" height="15" fill="rgb(210,190,27)"/><text x="95.7556%" y="271.50">i..</text></g><g><title>ip_local_deliver_finish (17 samples, 1.91%)</title><rect x="95.5056%" y="245" width="1.9101%" height="15" fill="rgb(222,107,31)"/><text x="95.7556%" y="255.50">i..</text></g><g><title>ip_protocol_deliver_rcu (17 samples, 1.91%)</title><rect x="95.5056%" y="229" width="1.9101%" height="15" fill="rgb(216,127,34)"/><text x="95.7556%" y="239.50">i..</text></g><g><title>tcp_v4_rcv (17 samples, 1.91%)</title><rect x="95.5056%" y="213" width="1.9101%" height="15" fill="rgb(234,116,52)"/><text x="95.7556%" y="223.50">t..</text></g><g><title>tcp_v4_do_rcv (16 samples, 1.80%)</title><rect x="95.6180%" y="197" width="1.7978%" height="15" fill="rgb(222,124,15)"/><text x="95.8680%" y="207.50">t..</text></g><g><title>tcp_rcv_established (16 samples, 1.80%)</title><rect x="95.6180%" y="181" width="1.7978%" height="15" fill="rgb(231,179,28)"/><text x="95.8680%" y="191.50">t..</text></g><g><title>tcp_data_queue (1 samples, 0.11%)</title><rect x="97.3034%" y="165" width="0.1124%" height="15" fill="rgb(226,93,45)"/><text x="97.5534%" y="175.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="97.3034%" y="149" width="0.1124%" height="15" fill="rgb(215,8,51)"/><text x="97.5534%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="97.3034%" y="133" width="0.1124%" height="15" fill="rgb(223,106,5)"/><text x="97.5534%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="97.3034%" y="117" width="0.1124%" height="15" fill="rgb(250,191,5)"/><text x="97.5534%" y="127.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="97.3034%" y="101" width="0.1124%" height="15" fill="rgb(242,132,44)"/><text x="97.5534%" y="111.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="97.3034%" y="85" width="0.1124%" height="15" fill="rgb(251,152,29)"/><text x="97.5534%" y="95.50"></text></g><g><title>enqueue_entity (1 samples, 0.11%)</title><rect x="97.3034%" y="69" width="0.1124%" height="15" fill="rgb(218,179,5)"/><text x="97.5534%" y="79.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="97.3034%" y="53" width="0.1124%" height="15" fill="rgb(227,67,19)"/><text x="97.5534%" y="63.50"></text></g><g><title>__ip_queue_xmit (22 samples, 2.47%)</title><rect x="95.0562%" y="437" width="2.4719%" height="15" fill="rgb(233,119,31)"/><text x="95.3062%" y="447.50">__..</text></g><g><title>ip_output (21 samples, 2.36%)</title><rect x="95.1685%" y="421" width="2.3596%" height="15" fill="rgb(241,120,22)"/><text x="95.4185%" y="431.50">i..</text></g><g><title>ip_finish_output2 (21 samples, 2.36%)</title><rect x="95.1685%" y="405" width="2.3596%" height="15" fill="rgb(224,102,30)"/><text x="95.4185%" y="415.50">i..</text></g><g><title>dev_queue_xmit (1 samples, 0.11%)</title><rect x="97.4157%" y="389" width="0.1124%" height="15" fill="rgb(210,164,37)"/><text x="97.6657%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (24 samples, 2.70%)</title><rect x="94.9438%" y="485" width="2.6966%" height="15" fill="rgb(226,191,16)"/><text x="95.1938%" y="495.50">__..</text></g><g><title>tcp_write_xmit (24 samples, 2.70%)</title><rect x="94.9438%" y="469" width="2.6966%" height="15" fill="rgb(214,40,45)"/><text x="95.1938%" y="479.50">tc..</text></g><g><title>__tcp_transmit_skb (24 samples, 2.70%)</title><rect x="94.9438%" y="453" width="2.6966%" height="15" fill="rgb(244,29,26)"/><text x="95.1938%" y="463.50">__..</text></g><g><title>tcp_options_write (1 samples, 0.11%)</title><rect x="97.5281%" y="437" width="0.1124%" height="15" fill="rgb(216,16,5)"/><text x="97.7781%" y="447.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="97.6404%" y="485" width="0.1124%" height="15" fill="rgb(249,76,35)"/><text x="97.8904%" y="495.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.11%)</title><rect x="97.6404%" y="469" width="0.1124%" height="15" fill="rgb(207,11,44)"/><text x="97.8904%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="97.7528%" y="485" width="0.1124%" height="15" fill="rgb(228,190,49)"/><text x="98.0028%" y="495.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="97.7528%" y="469" width="0.1124%" height="15" fill="rgb(214,173,12)"/><text x="98.0028%" y="479.50"></text></g><g><title>__ksize (1 samples, 0.11%)</title><rect x="97.7528%" y="453" width="0.1124%" height="15" fill="rgb(218,26,35)"/><text x="98.0028%" y="463.50"></text></g><g><title>do_syscall_64 (29 samples, 3.26%)</title><rect x="94.7191%" y="581" width="3.2584%" height="15" fill="rgb(220,200,19)"/><text x="94.9691%" y="591.50">do_..</text></g><g><title>__x64_sys_sendto (29 samples, 3.26%)</title><rect x="94.7191%" y="565" width="3.2584%" height="15" fill="rgb(239,95,49)"/><text x="94.9691%" y="575.50">__x..</text></g><g><title>__sys_sendto (29 samples, 3.26%)</title><rect x="94.7191%" y="549" width="3.2584%" height="15" fill="rgb(235,85,53)"/><text x="94.9691%" y="559.50">__s..</text></g><g><title>sock_sendmsg (28 samples, 3.15%)</title><rect x="94.8315%" y="533" width="3.1461%" height="15" fill="rgb(233,133,31)"/><text x="95.0815%" y="543.50">soc..</text></g><g><title>tcp_sendmsg (28 samples, 3.15%)</title><rect x="94.8315%" y="517" width="3.1461%" height="15" fill="rgb(218,25,20)"/><text x="95.0815%" y="527.50">tcp..</text></g><g><title>tcp_sendmsg_locked (28 samples, 3.15%)</title><rect x="94.8315%" y="501" width="3.1461%" height="15" fill="rgb(252,210,38)"/><text x="95.0815%" y="511.50">tcp..</text></g><g><title>tcp_send_mss (1 samples, 0.11%)</title><rect x="97.8652%" y="485" width="0.1124%" height="15" fill="rgb(242,134,21)"/><text x="98.1152%" y="495.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="97.8652%" y="469" width="0.1124%" height="15" fill="rgb(213,28,48)"/><text x="98.1152%" y="479.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 3.60%)</title><rect x="94.6067%" y="597" width="3.5955%" height="15" fill="rgb(250,196,2)"/><text x="94.8567%" y="607.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.22%)</title><rect x="97.9775%" y="581" width="0.2247%" height="15" fill="rgb(227,5,17)"/><text x="98.2275%" y="591.50"></text></g><g><title>mysql::conn::Conn::_query (33 samples, 3.71%)</title><rect x="94.6067%" y="693" width="3.7079%" height="15" fill="rgb(221,226,24)"/><text x="94.8567%" y="703.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (33 samples, 3.71%)</title><rect x="94.6067%" y="677" width="3.7079%" height="15" fill="rgb(211,5,48)"/><text x="94.8567%" y="687.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (33 samples, 3.71%)</title><rect x="94.6067%" y="661" width="3.7079%" height="15" fill="rgb(219,150,6)"/><text x="94.8567%" y="671.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (33 samples, 3.71%)</title><rect x="94.6067%" y="645" width="3.7079%" height="15" fill="rgb(251,46,16)"/><text x="94.8567%" y="655.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (33 samples, 3.71%)</title><rect x="94.6067%" y="629" width="3.7079%" height="15" fill="rgb(220,204,40)"/><text x="94.8567%" y="639.50">std:..</text></g><g><title>__libc_send (33 samples, 3.71%)</title><rect x="94.6067%" y="613" width="3.7079%" height="15" fill="rgb(211,85,2)"/><text x="94.8567%" y="623.50">__li..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="98.2022%" y="597" width="0.1124%" height="15" fill="rgb(229,17,7)"/><text x="98.4522%" y="607.50"></text></g><g><title>__libc_start_main (290 samples, 32.58%)</title><rect x="65.8427%" y="853" width="32.5843%" height="15" fill="rgb(239,72,28)"/><text x="66.0927%" y="863.50">__libc_start_main</text></g><g><title>main (290 samples, 32.58%)</title><rect x="65.8427%" y="837" width="32.5843%" height="15" fill="rgb(230,47,54)"/><text x="66.0927%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (290 samples, 32.58%)</title><rect x="65.8427%" y="821" width="32.5843%" height="15" fill="rgb(214,50,8)"/><text x="66.0927%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (290 samples, 32.58%)</title><rect x="65.8427%" y="805" width="32.5843%" height="15" fill="rgb(216,198,43)"/><text x="66.0927%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (290 samples, 32.58%)</title><rect x="65.8427%" y="789" width="32.5843%" height="15" fill="rgb(234,20,35)"/><text x="66.0927%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (290 samples, 32.58%)</title><rect x="65.8427%" y="773" width="32.5843%" height="15" fill="rgb(254,45,19)"/><text x="66.0927%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (290 samples, 32.58%)</title><rect x="65.8427%" y="757" width="32.5843%" height="15" fill="rgb(219,14,44)"/><text x="66.0927%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function..</text></g><g><title>std::rt::lang_start::_{{closure}} (290 samples, 32.58%)</title><rect x="65.8427%" y="741" width="32.5843%" height="15" fill="rgb(217,220,26)"/><text x="66.0927%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (290 samples, 32.58%)</title><rect x="65.8427%" y="725" width="32.5843%" height="15" fill="rgb(213,158,28)"/><text x="66.0927%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtr..</text></g><g><title>lobsters::main (290 samples, 32.58%)</title><rect x="65.8427%" y="709" width="32.5843%" height="15" fill="rgb(252,51,52)"/><text x="66.0927%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="98.3146%" y="693" width="0.1124%" height="15" fill="rgb(246,89,16)"/><text x="98.5646%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="98.3146%" y="677" width="0.1124%" height="15" fill="rgb(216,158,49)"/><text x="98.5646%" y="687.50"></text></g><g><title>std::sys_common::net::setsockopt (1 samples, 0.11%)</title><rect x="98.3146%" y="661" width="0.1124%" height="15" fill="rgb(236,107,19)"/><text x="98.5646%" y="671.50"></text></g><g><title>__setsockopt (1 samples, 0.11%)</title><rect x="98.3146%" y="645" width="0.1124%" height="15" fill="rgb(228,185,30)"/><text x="98.5646%" y="655.50"></text></g><g><title>_start (291 samples, 32.70%)</title><rect x="65.8427%" y="869" width="32.6966%" height="15" fill="rgb(246,134,8)"/><text x="66.0927%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.4270%" y="853" width="0.1124%" height="15" fill="rgb(214,143,50)"/><text x="98.6770%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.4270%" y="837" width="0.1124%" height="15" fill="rgb(228,75,8)"/><text x="98.6770%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="98.4270%" y="821" width="0.1124%" height="15" fill="rgb(207,175,4)"/><text x="98.6770%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="98.4270%" y="805" width="0.1124%" height="15" fill="rgb(205,108,24)"/><text x="98.6770%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="98.4270%" y="789" width="0.1124%" height="15" fill="rgb(244,120,49)"/><text x="98.6770%" y="799.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="98.4270%" y="773" width="0.1124%" height="15" fill="rgb(223,47,38)"/><text x="98.6770%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="98.4270%" y="757" width="0.1124%" height="15" fill="rgb(229,179,11)"/><text x="98.6770%" y="767.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="98.4270%" y="741" width="0.1124%" height="15" fill="rgb(231,122,1)"/><text x="98.6770%" y="751.50"></text></g><g><title>__mmap (1 samples, 0.11%)</title><rect x="98.4270%" y="725" width="0.1124%" height="15" fill="rgb(245,119,9)"/><text x="98.6770%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.4270%" y="709" width="0.1124%" height="15" fill="rgb(241,163,25)"/><text x="98.6770%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.4270%" y="693" width="0.1124%" height="15" fill="rgb(217,214,3)"/><text x="98.6770%" y="703.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.4270%" y="677" width="0.1124%" height="15" fill="rgb(240,86,28)"/><text x="98.6770%" y="687.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.4270%" y="661" width="0.1124%" height="15" fill="rgb(215,47,9)"/><text x="98.6770%" y="671.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="98.4270%" y="645" width="0.1124%" height="15" fill="rgb(252,25,45)"/><text x="98.6770%" y="655.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="98.4270%" y="629" width="0.1124%" height="15" fill="rgb(251,164,9)"/><text x="98.6770%" y="639.50"></text></g><g><title>__do_munmap (1 samples, 0.11%)</title><rect x="98.4270%" y="613" width="0.1124%" height="15" fill="rgb(233,194,0)"/><text x="98.6770%" y="623.50"></text></g><g><title>unmap_region (1 samples, 0.11%)</title><rect x="98.4270%" y="597" width="0.1124%" height="15" fill="rgb(249,111,24)"/><text x="98.6770%" y="607.50"></text></g><g><title>unmap_vmas (1 samples, 0.11%)</title><rect x="98.4270%" y="581" width="0.1124%" height="15" fill="rgb(250,223,3)"/><text x="98.6770%" y="591.50"></text></g><g><title>unmap_page_range (1 samples, 0.11%)</title><rect x="98.4270%" y="565" width="0.1124%" height="15" fill="rgb(236,178,37)"/><text x="98.6770%" y="575.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="98.4270%" y="549" width="0.1124%" height="15" fill="rgb(241,158,50)"/><text x="98.6770%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.11%)</title><rect x="98.5393%" y="869" width="0.1124%" height="15" fill="rgb(213,121,41)"/><text x="98.7893%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.6517%" y="869" width="0.1124%" height="15" fill="rgb(240,92,3)"/><text x="98.9017%" y="879.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.6517%" y="853" width="0.1124%" height="15" fill="rgb(205,123,3)"/><text x="98.9017%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="98.6517%" y="837" width="0.1124%" height="15" fill="rgb(205,97,47)"/><text x="98.9017%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.11%)</title><rect x="98.6517%" y="821" width="0.1124%" height="15" fill="rgb(247,152,14)"/><text x="98.9017%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.11%)</title><rect x="98.6517%" y="805" width="0.1124%" height="15" fill="rgb(248,195,53)"/><text x="98.9017%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.11%)</title><rect x="98.6517%" y="789" width="0.1124%" height="15" fill="rgb(226,201,16)"/><text x="98.9017%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="98.6517%" y="773" width="0.1124%" height="15" fill="rgb(205,98,0)"/><text x="98.9017%" y="783.50"></text></g><g><title>__clear_user (1 samples, 0.11%)</title><rect x="98.6517%" y="757" width="0.1124%" height="15" fill="rgb(214,191,48)"/><text x="98.9017%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="98.6517%" y="741" width="0.1124%" height="15" fill="rgb(237,112,39)"/><text x="98.9017%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="98.6517%" y="725" width="0.1124%" height="15" fill="rgb(247,203,27)"/><text x="98.9017%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="98.6517%" y="709" width="0.1124%" height="15" fill="rgb(235,124,28)"/><text x="98.9017%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="98.6517%" y="693" width="0.1124%" height="15" fill="rgb(208,207,46)"/><text x="98.9017%" y="703.50"></text></g><g><title>__pud_alloc (1 samples, 0.11%)</title><rect x="98.6517%" y="677" width="0.1124%" height="15" fill="rgb(234,176,4)"/><text x="98.9017%" y="687.50"></text></g><g><title>get_zeroed_page (1 samples, 0.11%)</title><rect x="98.6517%" y="661" width="0.1124%" height="15" fill="rgb(230,133,28)"/><text x="98.9017%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="98.6517%" y="645" width="0.1124%" height="15" fill="rgb(211,137,40)"/><text x="98.9017%" y="655.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="98.6517%" y="629" width="0.1124%" height="15" fill="rgb(254,35,13)"/><text x="98.9017%" y="639.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="98.6517%" y="613" width="0.1124%" height="15" fill="rgb(225,49,51)"/><text x="98.9017%" y="623.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="98.6517%" y="597" width="0.1124%" height="15" fill="rgb(251,10,15)"/><text x="98.9017%" y="607.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="98.6517%" y="581" width="0.1124%" height="15" fill="rgb(228,207,15)"/><text x="98.9017%" y="591.50"></text></g><g><title>mysql_common::packets::column_from_payload (1 samples, 0.11%)</title><rect x="98.7640%" y="869" width="0.1124%" height="15" fill="rgb(241,99,19)"/><text x="99.0140%" y="879.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="98.8764%" y="869" width="0.1124%" height="15" fill="rgb(207,104,49)"/><text x="99.1264%" y="879.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="98.9888%" y="869" width="0.1124%" height="15" fill="rgb(234,99,18)"/><text x="99.2388%" y="879.50"></text></g><g><title>lobsters (884 samples, 99.33%)</title><rect x="0.0000%" y="885" width="99.3258%" height="15" fill="rgb(213,191,49)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>syscall_return_via_sysret (2 samples, 0.22%)</title><rect x="99.1011%" y="869" width="0.2247%" height="15" fill="rgb(210,226,19)"/><text x="99.3511%" y="879.50"></text></g><g><title>all (890 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(229,97,18)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.67%)</title><rect x="99.3258%" y="885" width="0.6742%" height="15" fill="rgb(211,167,15)"/><text x="99.5758%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.67%)</title><rect x="99.3258%" y="869" width="0.6742%" height="15" fill="rgb(210,169,34)"/><text x="99.5758%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.67%)</title><rect x="99.3258%" y="853" width="0.6742%" height="15" fill="rgb(241,121,31)"/><text x="99.5758%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.67%)</title><rect x="99.3258%" y="837" width="0.6742%" height="15" fill="rgb(232,40,11)"/><text x="99.5758%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.67%)</title><rect x="99.3258%" y="821" width="0.6742%" height="15" fill="rgb(205,86,26)"/><text x="99.5758%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.67%)</title><rect x="99.3258%" y="805" width="0.6742%" height="15" fill="rgb(231,126,28)"/><text x="99.5758%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.67%)</title><rect x="99.3258%" y="789" width="0.6742%" height="15" fill="rgb(219,221,18)"/><text x="99.5758%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.67%)</title><rect x="99.3258%" y="773" width="0.6742%" height="15" fill="rgb(211,40,0)"/><text x="99.5758%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.67%)</title><rect x="99.3258%" y="757" width="0.6742%" height="15" fill="rgb(239,85,43)"/><text x="99.5758%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.67%)</title><rect x="99.3258%" y="741" width="0.6742%" height="15" fill="rgb(231,55,21)"/><text x="99.5758%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.56%)</title><rect x="99.4382%" y="725" width="0.5618%" height="15" fill="rgb(225,184,43)"/><text x="99.6882%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.56%)</title><rect x="99.4382%" y="709" width="0.5618%" height="15" fill="rgb(251,158,41)"/><text x="99.6882%" y="719.50"></text></g></svg></svg>