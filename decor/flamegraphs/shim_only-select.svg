<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="0.0000%" y="901" width="0.1138%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>[[heap]] (1 samples, 0.11%)</title><rect x="0.1138%" y="901" width="0.1138%" height="15" fill="rgb(217,0,24)"/><text x="0.3638%" y="911.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.11%)</title><rect x="0.1138%" y="885" width="0.1138%" height="15" fill="rgb(221,193,54)"/><text x="0.3638%" y="895.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;usize&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (1 samples, 0.11%)</title><rect x="0.2275%" y="885" width="0.1138%" height="15" fill="rgb(248,212,6)"/><text x="0.4775%" y="895.50"></text></g><g><title>[[stack]] (2 samples, 0.23%)</title><rect x="0.2275%" y="901" width="0.2275%" height="15" fill="rgb(208,68,35)"/><text x="0.4775%" y="911.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="0.3413%" y="885" width="0.1138%" height="15" fill="rgb(232,128,0)"/><text x="0.5913%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.34%)</title><rect x="0.4551%" y="885" width="0.3413%" height="15" fill="rgb(207,160,47)"/><text x="0.7051%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="0.7964%" y="885" width="0.2275%" height="15" fill="rgb(228,23,34)"/><text x="1.0464%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.11%)</title><rect x="1.0239%" y="885" width="0.1138%" height="15" fill="rgb(218,30,26)"/><text x="1.2739%" y="895.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.23%)</title><rect x="1.1377%" y="885" width="0.2275%" height="15" fill="rgb(220,122,19)"/><text x="1.3877%" y="895.50"></text></g><g><title>[lobsters] (1 samples, 0.11%)</title><rect x="1.3652%" y="885" width="0.1138%" height="15" fill="rgb(250,228,42)"/><text x="1.6152%" y="895.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.11%)</title><rect x="1.3652%" y="869" width="0.1138%" height="15" fill="rgb(240,193,28)"/><text x="1.6152%" y="879.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="1.4790%" y="885" width="0.1138%" height="15" fill="rgb(216,20,37)"/><text x="1.7290%" y="895.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="1.5927%" y="885" width="0.2275%" height="15" fill="rgb(206,188,39)"/><text x="1.8427%" y="895.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="1.8203%" y="885" width="0.1138%" height="15" fill="rgb(217,207,13)"/><text x="2.0703%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="1.8203%" y="869" width="0.1138%" height="15" fill="rgb(231,73,38)"/><text x="2.0703%" y="879.50"></text></g><g><title>__libc_send (2 samples, 0.23%)</title><rect x="1.9340%" y="885" width="0.2275%" height="15" fill="rgb(225,20,46)"/><text x="2.1840%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="1.9340%" y="869" width="0.2275%" height="15" fill="rgb(210,31,41)"/><text x="2.1840%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="2.1615%" y="885" width="0.1138%" height="15" fill="rgb(221,200,47)"/><text x="2.4115%" y="895.50"></text></g><g><title>_int_free (4 samples, 0.46%)</title><rect x="2.2753%" y="885" width="0.4551%" height="15" fill="rgb(226,26,5)"/><text x="2.5253%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="2.7304%" y="885" width="0.2275%" height="15" fill="rgb(249,33,26)"/><text x="2.9804%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.11%)</title><rect x="2.9579%" y="885" width="0.1138%" height="15" fill="rgb(235,183,28)"/><text x="3.2079%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="3.0717%" y="885" width="0.1138%" height="15" fill="rgb(221,5,38)"/><text x="3.3217%" y="895.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (1 samples, 0.11%)</title><rect x="3.1854%" y="885" width="0.1138%" height="15" fill="rgb(247,18,42)"/><text x="3.4354%" y="895.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="3.2992%" y="885" width="0.1138%" height="15" fill="rgb(241,131,45)"/><text x="3.5492%" y="895.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.11%)</title><rect x="3.4130%" y="885" width="0.1138%" height="15" fill="rgb(249,31,29)"/><text x="3.6630%" y="895.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (2 samples, 0.23%)</title><rect x="3.5267%" y="885" width="0.2275%" height="15" fill="rgb(225,111,53)"/><text x="3.7767%" y="895.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="3.7543%" y="885" width="0.1138%" height="15" fill="rgb(238,160,17)"/><text x="4.0043%" y="895.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="3.8680%" y="885" width="0.1138%" height="15" fill="rgb(214,148,48)"/><text x="4.1180%" y="895.50"></text></g><g><title>[anon] (32 samples, 3.64%)</title><rect x="0.4551%" y="901" width="3.6405%" height="15" fill="rgb(232,36,49)"/><text x="0.7051%" y="911.50">[ano..</text></g><g><title>mysql_common::row::new_row (1 samples, 0.11%)</title><rect x="3.9818%" y="885" width="0.1138%" height="15" fill="rgb(209,103,24)"/><text x="4.2318%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="4.0956%" y="885" width="0.1138%" height="15" fill="rgb(229,88,8)"/><text x="4.3456%" y="895.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="4.2093%" y="885" width="0.1138%" height="15" fill="rgb(213,181,19)"/><text x="4.4593%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="4.2093%" y="869" width="0.1138%" height="15" fill="rgb(254,191,54)"/><text x="4.4593%" y="879.50"></text></g><g><title>[lobsters] (3 samples, 0.34%)</title><rect x="4.0956%" y="901" width="0.3413%" height="15" fill="rgb(241,83,37)"/><text x="4.3456%" y="911.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="4.3231%" y="885" width="0.1138%" height="15" fill="rgb(233,36,39)"/><text x="4.5731%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="4.4369%" y="885" width="0.1138%" height="15" fill="rgb(226,3,54)"/><text x="4.6869%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.23%)</title><rect x="4.5506%" y="885" width="0.2275%" height="15" fill="rgb(245,192,40)"/><text x="4.8006%" y="895.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.23%)</title><rect x="4.5506%" y="869" width="0.2275%" height="15" fill="rgb(238,167,29)"/><text x="4.8006%" y="879.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.23%)</title><rect x="4.5506%" y="853" width="0.2275%" height="15" fill="rgb(232,182,51)"/><text x="4.8006%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.23%)</title><rect x="4.5506%" y="837" width="0.2275%" height="15" fill="rgb(231,60,39)"/><text x="4.8006%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.23%)</title><rect x="4.5506%" y="821" width="0.2275%" height="15" fill="rgb(208,69,12)"/><text x="4.8006%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.23%)</title><rect x="4.5506%" y="805" width="0.2275%" height="15" fill="rgb(235,93,37)"/><text x="4.8006%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.23%)</title><rect x="4.5506%" y="789" width="0.2275%" height="15" fill="rgb(213,116,39)"/><text x="4.8006%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="4.6644%" y="773" width="0.1138%" height="15" fill="rgb(222,207,29)"/><text x="4.9144%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (1 samples, 0.11%)</title><rect x="4.7782%" y="885" width="0.1138%" height="15" fill="rgb(206,96,30)"/><text x="5.0282%" y="895.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="4.8919%" y="885" width="0.1138%" height="15" fill="rgb(218,138,4)"/><text x="5.1419%" y="895.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0057%" y="885" width="0.1138%" height="15" fill="rgb(250,191,14)"/><text x="5.2557%" y="895.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="5.1195%" y="885" width="0.1138%" height="15" fill="rgb(239,60,40)"/><text x="5.3695%" y="895.50"></text></g><g><title>[lobsters] (1 samples, 0.11%)</title><rect x="5.2332%" y="885" width="0.1138%" height="15" fill="rgb(206,27,48)"/><text x="5.4832%" y="895.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="5.2332%" y="869" width="0.1138%" height="15" fill="rgb(225,35,8)"/><text x="5.4832%" y="879.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="5.3470%" y="885" width="0.1138%" height="15" fill="rgb(250,213,24)"/><text x="5.5970%" y="895.50"></text></g><g><title>__libc_start_main (1 samples, 0.11%)</title><rect x="5.4608%" y="885" width="0.1138%" height="15" fill="rgb(247,123,22)"/><text x="5.7108%" y="895.50"></text></g><g><title>main (1 samples, 0.11%)</title><rect x="5.4608%" y="869" width="0.1138%" height="15" fill="rgb(231,138,38)"/><text x="5.7108%" y="879.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.11%)</title><rect x="5.4608%" y="853" width="0.1138%" height="15" fill="rgb(231,145,46)"/><text x="5.7108%" y="863.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.11%)</title><rect x="5.4608%" y="837" width="0.1138%" height="15" fill="rgb(251,118,11)"/><text x="5.7108%" y="847.50"></text></g><g><title>std::panicking::try (1 samples, 0.11%)</title><rect x="5.4608%" y="821" width="0.1138%" height="15" fill="rgb(217,147,25)"/><text x="5.7108%" y="831.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.11%)</title><rect x="5.4608%" y="805" width="0.1138%" height="15" fill="rgb(247,81,37)"/><text x="5.7108%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.11%)</title><rect x="5.4608%" y="789" width="0.1138%" height="15" fill="rgb(209,12,38)"/><text x="5.7108%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.11%)</title><rect x="5.4608%" y="773" width="0.1138%" height="15" fill="rgb(227,1,9)"/><text x="5.7108%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.11%)</title><rect x="5.4608%" y="757" width="0.1138%" height="15" fill="rgb(248,47,43)"/><text x="5.7108%" y="767.50"></text></g><g><title>lobsters::main (1 samples, 0.11%)</title><rect x="5.4608%" y="741" width="0.1138%" height="15" fill="rgb(221,10,30)"/><text x="5.7108%" y="751.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="5.4608%" y="725" width="0.1138%" height="15" fill="rgb(210,229,1)"/><text x="5.7108%" y="735.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.11%)</title><rect x="5.4608%" y="709" width="0.1138%" height="15" fill="rgb(222,148,37)"/><text x="5.7108%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="5.4608%" y="693" width="0.1138%" height="15" fill="rgb(234,67,33)"/><text x="5.7108%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="5.4608%" y="677" width="0.1138%" height="15" fill="rgb(247,98,35)"/><text x="5.7108%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="5.4608%" y="661" width="0.1138%" height="15" fill="rgb(247,138,52)"/><text x="5.7108%" y="671.50"></text></g><g><title>__libc_read (1 samples, 0.11%)</title><rect x="5.4608%" y="645" width="0.1138%" height="15" fill="rgb(213,79,30)"/><text x="5.7108%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="5.4608%" y="629" width="0.1138%" height="15" fill="rgb(246,177,23)"/><text x="5.7108%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="5.4608%" y="613" width="0.1138%" height="15" fill="rgb(230,62,27)"/><text x="5.7108%" y="623.50"></text></g><g><title>ksys_read (1 samples, 0.11%)</title><rect x="5.4608%" y="597" width="0.1138%" height="15" fill="rgb(216,154,8)"/><text x="5.7108%" y="607.50"></text></g><g><title>vfs_read (1 samples, 0.11%)</title><rect x="5.4608%" y="581" width="0.1138%" height="15" fill="rgb(244,35,45)"/><text x="5.7108%" y="591.50"></text></g><g><title>seq_read (1 samples, 0.11%)</title><rect x="5.4608%" y="565" width="0.1138%" height="15" fill="rgb(251,115,12)"/><text x="5.7108%" y="575.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="5.4608%" y="549" width="0.1138%" height="15" fill="rgb(240,54,50)"/><text x="5.7108%" y="559.50"></text></g><g><title>__check_heap_object (1 samples, 0.11%)</title><rect x="5.4608%" y="533" width="0.1138%" height="15" fill="rgb(233,84,52)"/><text x="5.7108%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="5.5745%" y="885" width="0.1138%" height="15" fill="rgb(207,117,47)"/><text x="5.8245%" y="895.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="5.6883%" y="885" width="0.1138%" height="15" fill="rgb(249,43,39)"/><text x="5.9383%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="5.6883%" y="869" width="0.1138%" height="15" fill="rgb(209,38,44)"/><text x="5.9383%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="5.8020%" y="885" width="0.1138%" height="15" fill="rgb(236,212,23)"/><text x="6.0520%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="5.9158%" y="885" width="0.1138%" height="15" fill="rgb(242,79,21)"/><text x="6.1658%" y="895.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.23%)</title><rect x="6.0296%" y="885" width="0.2275%" height="15" fill="rgb(211,96,35)"/><text x="6.2796%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="6.2571%" y="885" width="0.1138%" height="15" fill="rgb(253,215,40)"/><text x="6.5071%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="6.3709%" y="885" width="0.1138%" height="15" fill="rgb(211,81,21)"/><text x="6.6209%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.23%)</title><rect x="6.4846%" y="885" width="0.2275%" height="15" fill="rgb(208,190,38)"/><text x="6.7346%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.23%)</title><rect x="6.4846%" y="869" width="0.2275%" height="15" fill="rgb(235,213,38)"/><text x="6.7346%" y="879.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.23%)</title><rect x="6.4846%" y="853" width="0.2275%" height="15" fill="rgb(237,122,38)"/><text x="6.7346%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.23%)</title><rect x="6.4846%" y="837" width="0.2275%" height="15" fill="rgb(244,218,35)"/><text x="6.7346%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.23%)</title><rect x="6.4846%" y="821" width="0.2275%" height="15" fill="rgb(240,68,47)"/><text x="6.7346%" y="831.50"></text></g><g><title>decor::helpers::answer_rows (2 samples, 0.23%)</title><rect x="6.4846%" y="805" width="0.2275%" height="15" fill="rgb(210,16,53)"/><text x="6.7346%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="6.4846%" y="789" width="0.2275%" height="15" fill="rgb(235,124,12)"/><text x="6.7346%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.23%)</title><rect x="6.4846%" y="773" width="0.2275%" height="15" fill="rgb(224,169,11)"/><text x="6.7346%" y="783.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.23%)</title><rect x="6.4846%" y="757" width="0.2275%" height="15" fill="rgb(250,166,2)"/><text x="6.7346%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.23%)</title><rect x="6.4846%" y="741" width="0.2275%" height="15" fill="rgb(242,216,29)"/><text x="6.7346%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="6.4846%" y="725" width="0.2275%" height="15" fill="rgb(230,116,27)"/><text x="6.7346%" y="735.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="6.7122%" y="885" width="0.1138%" height="15" fill="rgb(228,99,48)"/><text x="6.9622%" y="895.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.11%)</title><rect x="6.7122%" y="869" width="0.1138%" height="15" fill="rgb(253,11,6)"/><text x="6.9622%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.11%)</title><rect x="6.7122%" y="853" width="0.1138%" height="15" fill="rgb(247,143,39)"/><text x="6.9622%" y="863.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="6.7122%" y="837" width="0.1138%" height="15" fill="rgb(236,97,10)"/><text x="6.9622%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="6.7122%" y="821" width="0.1138%" height="15" fill="rgb(233,208,19)"/><text x="6.9622%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="6.7122%" y="805" width="0.1138%" height="15" fill="rgb(216,164,2)"/><text x="6.9622%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="6.7122%" y="789" width="0.1138%" height="15" fill="rgb(220,129,5)"/><text x="6.9622%" y="799.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="6.7122%" y="773" width="0.1138%" height="15" fill="rgb(242,17,10)"/><text x="6.9622%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="6.7122%" y="757" width="0.1138%" height="15" fill="rgb(242,107,0)"/><text x="6.9622%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.34%)</title><rect x="6.8259%" y="869" width="0.3413%" height="15" fill="rgb(251,28,31)"/><text x="7.0759%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.34%)</title><rect x="6.8259%" y="853" width="0.3413%" height="15" fill="rgb(233,223,10)"/><text x="7.0759%" y="863.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.34%)</title><rect x="6.8259%" y="837" width="0.3413%" height="15" fill="rgb(215,21,27)"/><text x="7.0759%" y="847.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.34%)</title><rect x="6.8259%" y="821" width="0.3413%" height="15" fill="rgb(232,23,21)"/><text x="7.0759%" y="831.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="6.8259%" y="805" width="0.3413%" height="15" fill="rgb(244,5,23)"/><text x="7.0759%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.34%)</title><rect x="6.8259%" y="789" width="0.3413%" height="15" fill="rgb(226,81,46)"/><text x="7.0759%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.34%)</title><rect x="6.8259%" y="773" width="0.3413%" height="15" fill="rgb(247,70,30)"/><text x="7.0759%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="6.8259%" y="757" width="0.3413%" height="15" fill="rgb(212,68,19)"/><text x="7.0759%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="6.8259%" y="741" width="0.3413%" height="15" fill="rgb(240,187,13)"/><text x="7.0759%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="7.0535%" y="725" width="0.1138%" height="15" fill="rgb(223,113,26)"/><text x="7.3035%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.1672%" y="853" width="0.1138%" height="15" fill="rgb(206,192,2)"/><text x="7.4172%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.1672%" y="837" width="0.1138%" height="15" fill="rgb(241,108,4)"/><text x="7.4172%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.1672%" y="821" width="0.1138%" height="15" fill="rgb(247,173,49)"/><text x="7.4172%" y="831.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="7.1672%" y="805" width="0.1138%" height="15" fill="rgb(224,114,35)"/><text x="7.4172%" y="815.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="7.1672%" y="789" width="0.1138%" height="15" fill="rgb(245,159,27)"/><text x="7.4172%" y="799.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="7.1672%" y="773" width="0.1138%" height="15" fill="rgb(245,172,44)"/><text x="7.4172%" y="783.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="7.1672%" y="757" width="0.1138%" height="15" fill="rgb(236,23,11)"/><text x="7.4172%" y="767.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="7.1672%" y="741" width="0.1138%" height="15" fill="rgb(205,117,38)"/><text x="7.4172%" y="751.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="7.1672%" y="725" width="0.1138%" height="15" fill="rgb(237,72,25)"/><text x="7.4172%" y="735.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="7.1672%" y="709" width="0.1138%" height="15" fill="rgb(244,70,9)"/><text x="7.4172%" y="719.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="7.1672%" y="693" width="0.1138%" height="15" fill="rgb(217,125,39)"/><text x="7.4172%" y="703.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="7.1672%" y="677" width="0.1138%" height="15" fill="rgb(235,36,10)"/><text x="7.4172%" y="687.50"></text></g><g><title>lobsters::main (5 samples, 0.57%)</title><rect x="6.8259%" y="885" width="0.5688%" height="15" fill="rgb(251,123,47)"/><text x="7.0759%" y="895.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.23%)</title><rect x="7.1672%" y="869" width="0.2275%" height="15" fill="rgb(221,13,13)"/><text x="7.4172%" y="879.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.11%)</title><rect x="7.2810%" y="853" width="0.1138%" height="15" fill="rgb(238,131,9)"/><text x="7.5310%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.2810%" y="837" width="0.1138%" height="15" fill="rgb(211,50,8)"/><text x="7.5310%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.2810%" y="821" width="0.1138%" height="15" fill="rgb(245,182,24)"/><text x="7.5310%" y="831.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.11%)</title><rect x="7.2810%" y="805" width="0.1138%" height="15" fill="rgb(242,14,37)"/><text x="7.5310%" y="815.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.11%)</title><rect x="7.2810%" y="789" width="0.1138%" height="15" fill="rgb(246,228,12)"/><text x="7.5310%" y="799.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.11%)</title><rect x="7.2810%" y="773" width="0.1138%" height="15" fill="rgb(213,55,15)"/><text x="7.5310%" y="783.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.11%)</title><rect x="7.2810%" y="757" width="0.1138%" height="15" fill="rgb(209,9,3)"/><text x="7.5310%" y="767.50"></text></g><g><title>__GI___read (1 samples, 0.11%)</title><rect x="7.2810%" y="741" width="0.1138%" height="15" fill="rgb(230,59,30)"/><text x="7.5310%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="7.2810%" y="725" width="0.1138%" height="15" fill="rgb(209,121,21)"/><text x="7.5310%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="7.2810%" y="709" width="0.1138%" height="15" fill="rgb(220,109,13)"/><text x="7.5310%" y="719.50"></text></g><g><title>ksys_read (1 samples, 0.11%)</title><rect x="7.2810%" y="693" width="0.1138%" height="15" fill="rgb(232,18,1)"/><text x="7.5310%" y="703.50"></text></g><g><title>vfs_read (1 samples, 0.11%)</title><rect x="7.2810%" y="677" width="0.1138%" height="15" fill="rgb(215,41,42)"/><text x="7.5310%" y="687.50"></text></g><g><title>seq_read (1 samples, 0.11%)</title><rect x="7.2810%" y="661" width="0.1138%" height="15" fill="rgb(224,123,36)"/><text x="7.5310%" y="671.50"></text></g><g><title>show_cpuinfo (1 samples, 0.11%)</title><rect x="7.2810%" y="645" width="0.1138%" height="15" fill="rgb(240,125,3)"/><text x="7.5310%" y="655.50"></text></g><g><title>seq_printf (1 samples, 0.11%)</title><rect x="7.2810%" y="629" width="0.1138%" height="15" fill="rgb(205,98,50)"/><text x="7.5310%" y="639.50"></text></g><g><title>mysql::conn::Conn::start_transaction (1 samples, 0.11%)</title><rect x="7.3948%" y="821" width="0.1138%" height="15" fill="rgb(205,185,37)"/><text x="7.6448%" y="831.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (1 samples, 0.11%)</title><rect x="7.3948%" y="805" width="0.1138%" height="15" fill="rgb(238,207,15)"/><text x="7.6448%" y="815.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="7.3948%" y="789" width="0.1138%" height="15" fill="rgb(213,199,42)"/><text x="7.6448%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="7.3948%" y="773" width="0.1138%" height="15" fill="rgb(235,201,11)"/><text x="7.6448%" y="783.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="7.3948%" y="757" width="0.1138%" height="15" fill="rgb(207,46,11)"/><text x="7.6448%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="7.3948%" y="741" width="0.1138%" height="15" fill="rgb(241,35,35)"/><text x="7.6448%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="7.3948%" y="725" width="0.1138%" height="15" fill="rgb(243,32,47)"/><text x="7.6448%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="7.3948%" y="709" width="0.1138%" height="15" fill="rgb(247,202,23)"/><text x="7.6448%" y="719.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="7.3948%" y="693" width="0.1138%" height="15" fill="rgb(219,102,11)"/><text x="7.6448%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="7.3948%" y="677" width="0.1138%" height="15" fill="rgb(243,110,44)"/><text x="7.6448%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="7.3948%" y="661" width="0.1138%" height="15" fill="rgb(222,74,54)"/><text x="7.6448%" y="671.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="7.3948%" y="645" width="0.1138%" height="15" fill="rgb(216,99,12)"/><text x="7.6448%" y="655.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="7.3948%" y="629" width="0.1138%" height="15" fill="rgb(226,22,26)"/><text x="7.6448%" y="639.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="7.3948%" y="613" width="0.1138%" height="15" fill="rgb(217,163,10)"/><text x="7.6448%" y="623.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="7.3948%" y="597" width="0.1138%" height="15" fill="rgb(213,25,53)"/><text x="7.6448%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="7.3948%" y="581" width="0.1138%" height="15" fill="rgb(252,105,26)"/><text x="7.6448%" y="591.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="7.3948%" y="565" width="0.1138%" height="15" fill="rgb(220,39,43)"/><text x="7.6448%" y="575.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="7.3948%" y="549" width="0.1138%" height="15" fill="rgb(229,68,48)"/><text x="7.6448%" y="559.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="7.3948%" y="533" width="0.1138%" height="15" fill="rgb(252,8,32)"/><text x="7.6448%" y="543.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.23%)</title><rect x="7.3948%" y="885" width="0.2275%" height="15" fill="rgb(223,20,43)"/><text x="7.6448%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.23%)</title><rect x="7.3948%" y="869" width="0.2275%" height="15" fill="rgb(229,81,49)"/><text x="7.6448%" y="879.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.23%)</title><rect x="7.3948%" y="853" width="0.2275%" height="15" fill="rgb(236,28,36)"/><text x="7.6448%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.23%)</title><rect x="7.3948%" y="837" width="0.2275%" height="15" fill="rgb(249,185,26)"/><text x="7.6448%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="7.5085%" y="821" width="0.1138%" height="15" fill="rgb(249,174,33)"/><text x="7.7585%" y="831.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="7.5085%" y="805" width="0.1138%" height="15" fill="rgb(233,201,37)"/><text x="7.7585%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="7.5085%" y="789" width="0.1138%" height="15" fill="rgb(221,78,26)"/><text x="7.7585%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="7.5085%" y="773" width="0.1138%" height="15" fill="rgb(250,127,30)"/><text x="7.7585%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="7.5085%" y="757" width="0.1138%" height="15" fill="rgb(230,49,44)"/><text x="7.7585%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="7.5085%" y="741" width="0.1138%" height="15" fill="rgb(229,67,23)"/><text x="7.7585%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="7.5085%" y="725" width="0.1138%" height="15" fill="rgb(249,83,47)"/><text x="7.7585%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="7.5085%" y="709" width="0.1138%" height="15" fill="rgb(215,43,3)"/><text x="7.7585%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="7.5085%" y="693" width="0.1138%" height="15" fill="rgb(238,154,13)"/><text x="7.7585%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="7.5085%" y="677" width="0.1138%" height="15" fill="rgb(219,56,2)"/><text x="7.7585%" y="687.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="7.5085%" y="661" width="0.1138%" height="15" fill="rgb(233,0,4)"/><text x="7.7585%" y="671.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="7.5085%" y="645" width="0.1138%" height="15" fill="rgb(235,30,7)"/><text x="7.7585%" y="655.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="7.5085%" y="629" width="0.1138%" height="15" fill="rgb(250,79,13)"/><text x="7.7585%" y="639.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="7.5085%" y="613" width="0.1138%" height="15" fill="rgb(211,146,34)"/><text x="7.7585%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="7.5085%" y="597" width="0.1138%" height="15" fill="rgb(228,22,38)"/><text x="7.7585%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="7.5085%" y="581" width="0.1138%" height="15" fill="rgb(235,168,5)"/><text x="7.7585%" y="591.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="7.5085%" y="565" width="0.1138%" height="15" fill="rgb(221,155,16)"/><text x="7.7585%" y="575.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="7.5085%" y="549" width="0.1138%" height="15" fill="rgb(215,215,53)"/><text x="7.7585%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="7.5085%" y="533" width="0.1138%" height="15" fill="rgb(223,4,10)"/><text x="7.7585%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="7.5085%" y="517" width="0.1138%" height="15" fill="rgb(234,103,6)"/><text x="7.7585%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="7.5085%" y="501" width="0.1138%" height="15" fill="rgb(227,97,0)"/><text x="7.7585%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="7.5085%" y="485" width="0.1138%" height="15" fill="rgb(234,150,53)"/><text x="7.7585%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="7.5085%" y="469" width="0.1138%" height="15" fill="rgb(228,201,54)"/><text x="7.7585%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="7.5085%" y="453" width="0.1138%" height="15" fill="rgb(222,22,37)"/><text x="7.7585%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="7.5085%" y="437" width="0.1138%" height="15" fill="rgb(237,53,32)"/><text x="7.7585%" y="447.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="7.5085%" y="421" width="0.1138%" height="15" fill="rgb(233,25,53)"/><text x="7.7585%" y="431.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="7.5085%" y="405" width="0.1138%" height="15" fill="rgb(210,40,34)"/><text x="7.7585%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="7.5085%" y="389" width="0.1138%" height="15" fill="rgb(241,220,44)"/><text x="7.7585%" y="399.50"></text></g><g><title>ip_rcv (1 samples, 0.11%)</title><rect x="7.5085%" y="373" width="0.1138%" height="15" fill="rgb(235,28,35)"/><text x="7.7585%" y="383.50"></text></g><g><title>ip_local_deliver (1 samples, 0.11%)</title><rect x="7.5085%" y="357" width="0.1138%" height="15" fill="rgb(210,56,17)"/><text x="7.7585%" y="367.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="7.5085%" y="341" width="0.1138%" height="15" fill="rgb(224,130,29)"/><text x="7.7585%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="7.5085%" y="325" width="0.1138%" height="15" fill="rgb(235,212,8)"/><text x="7.7585%" y="335.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="7.5085%" y="309" width="0.1138%" height="15" fill="rgb(223,33,50)"/><text x="7.7585%" y="319.50"></text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.11%)</title><rect x="7.5085%" y="293" width="0.1138%" height="15" fill="rgb(219,149,13)"/><text x="7.7585%" y="303.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="7.6223%" y="885" width="0.1138%" height="15" fill="rgb(250,156,29)"/><text x="7.8723%" y="895.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="7.7361%" y="885" width="0.1138%" height="15" fill="rgb(216,193,19)"/><text x="7.9861%" y="895.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="7.8498%" y="885" width="0.1138%" height="15" fill="rgb(216,135,14)"/><text x="8.0998%" y="895.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="7.9636%" y="885" width="0.1138%" height="15" fill="rgb(241,47,5)"/><text x="8.2136%" y="895.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="8.0774%" y="885" width="0.1138%" height="15" fill="rgb(233,42,35)"/><text x="8.3274%" y="895.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="8.0774%" y="869" width="0.1138%" height="15" fill="rgb(231,13,6)"/><text x="8.3274%" y="879.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.11%)</title><rect x="8.0774%" y="853" width="0.1138%" height="15" fill="rgb(207,181,40)"/><text x="8.3274%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.11%)</title><rect x="8.0774%" y="837" width="0.1138%" height="15" fill="rgb(254,173,49)"/><text x="8.3274%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.11%)</title><rect x="8.0774%" y="821" width="0.1138%" height="15" fill="rgb(221,1,38)"/><text x="8.3274%" y="831.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.11%)</title><rect x="8.0774%" y="805" width="0.1138%" height="15" fill="rgb(206,124,46)"/><text x="8.3274%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="8.0774%" y="789" width="0.1138%" height="15" fill="rgb(249,21,11)"/><text x="8.3274%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="8.0774%" y="773" width="0.1138%" height="15" fill="rgb(222,201,40)"/><text x="8.3274%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="8.0774%" y="757" width="0.1138%" height="15" fill="rgb(235,61,29)"/><text x="8.3274%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="8.0774%" y="741" width="0.1138%" height="15" fill="rgb(219,207,3)"/><text x="8.3274%" y="751.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="8.0774%" y="725" width="0.1138%" height="15" fill="rgb(222,56,46)"/><text x="8.3274%" y="735.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="8.0774%" y="709" width="0.1138%" height="15" fill="rgb(239,76,54)"/><text x="8.3274%" y="719.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="8.0774%" y="693" width="0.1138%" height="15" fill="rgb(231,124,27)"/><text x="8.3274%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.46%)</title><rect x="8.1911%" y="677" width="0.4551%" height="15" fill="rgb(249,195,6)"/><text x="8.4411%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="8.5324%" y="661" width="0.1138%" height="15" fill="rgb(237,174,47)"/><text x="8.7824%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="8.9875%" y="661" width="0.2275%" height="15" fill="rgb(206,201,31)"/><text x="9.2375%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="8.9875%" y="645" width="0.2275%" height="15" fill="rgb(231,57,52)"/><text x="9.2375%" y="655.50"></text></g><g><title>start_thread (10 samples, 1.14%)</title><rect x="8.1911%" y="885" width="1.1377%" height="15" fill="rgb(248,177,22)"/><text x="8.4411%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 1.14%)</title><rect x="8.1911%" y="869" width="1.1377%" height="15" fill="rgb(215,211,37)"/><text x="8.4411%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 1.14%)</title><rect x="8.1911%" y="853" width="1.1377%" height="15" fill="rgb(241,128,51)"/><text x="8.4411%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 1.14%)</title><rect x="8.1911%" y="837" width="1.1377%" height="15" fill="rgb(227,165,31)"/><text x="8.4411%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10 samples, 1.14%)</title><rect x="8.1911%" y="821" width="1.1377%" height="15" fill="rgb(228,167,24)"/><text x="8.4411%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 1.14%)</title><rect x="8.1911%" y="805" width="1.1377%" height="15" fill="rgb(228,143,12)"/><text x="8.4411%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (10 samples, 1.14%)</title><rect x="8.1911%" y="789" width="1.1377%" height="15" fill="rgb(249,149,8)"/><text x="8.4411%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (10 samples, 1.14%)</title><rect x="8.1911%" y="773" width="1.1377%" height="15" fill="rgb(243,35,44)"/><text x="8.4411%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (10 samples, 1.14%)</title><rect x="8.1911%" y="757" width="1.1377%" height="15" fill="rgb(246,89,9)"/><text x="8.4411%" y="767.50"></text></g><g><title>decor::helpers::answer_rows (10 samples, 1.14%)</title><rect x="8.1911%" y="741" width="1.1377%" height="15" fill="rgb(233,213,13)"/><text x="8.4411%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.14%)</title><rect x="8.1911%" y="725" width="1.1377%" height="15" fill="rgb(233,141,41)"/><text x="8.4411%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (10 samples, 1.14%)</title><rect x="8.1911%" y="709" width="1.1377%" height="15" fill="rgb(239,167,4)"/><text x="8.4411%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (10 samples, 1.14%)</title><rect x="8.1911%" y="693" width="1.1377%" height="15" fill="rgb(209,217,16)"/><text x="8.4411%" y="703.50"></text></g><g><title>mysql_common::value::read_text_values (6 samples, 0.68%)</title><rect x="8.6462%" y="677" width="0.6826%" height="15" fill="rgb(219,88,35)"/><text x="8.8962%" y="687.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="9.2150%" y="661" width="0.1138%" height="15" fill="rgb(220,193,23)"/><text x="9.4650%" y="671.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="9.2150%" y="645" width="0.1138%" height="15" fill="rgb(230,90,52)"/><text x="9.4650%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.23%)</title><rect x="9.3288%" y="885" width="0.2275%" height="15" fill="rgb(252,106,19)"/><text x="9.5788%" y="895.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="9.5563%" y="709" width="0.1138%" height="15" fill="rgb(206,74,20)"/><text x="9.8063%" y="719.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="9.5563%" y="693" width="0.1138%" height="15" fill="rgb(230,138,44)"/><text x="9.8063%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="9.5563%" y="677" width="0.1138%" height="15" fill="rgb(235,182,43)"/><text x="9.8063%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="9.5563%" y="661" width="0.1138%" height="15" fill="rgb(242,16,51)"/><text x="9.8063%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="9.5563%" y="645" width="0.1138%" height="15" fill="rgb(248,9,4)"/><text x="9.8063%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="9.5563%" y="629" width="0.1138%" height="15" fill="rgb(210,31,22)"/><text x="9.8063%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="9.5563%" y="613" width="0.1138%" height="15" fill="rgb(239,54,39)"/><text x="9.8063%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="9.5563%" y="597" width="0.1138%" height="15" fill="rgb(230,99,41)"/><text x="9.8063%" y="607.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="9.5563%" y="757" width="0.2275%" height="15" fill="rgb(253,106,12)"/><text x="9.8063%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.23%)</title><rect x="9.5563%" y="741" width="0.2275%" height="15" fill="rgb(213,46,41)"/><text x="9.8063%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.23%)</title><rect x="9.5563%" y="725" width="0.2275%" height="15" fill="rgb(215,133,35)"/><text x="9.8063%" y="735.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="9.6701%" y="709" width="0.1138%" height="15" fill="rgb(213,28,5)"/><text x="9.9201%" y="719.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="9.6701%" y="693" width="0.1138%" height="15" fill="rgb(215,77,49)"/><text x="9.9201%" y="703.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="9.7838%" y="757" width="0.1138%" height="15" fill="rgb(248,100,22)"/><text x="10.0338%" y="767.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.11%)</title><rect x="9.7838%" y="741" width="0.1138%" height="15" fill="rgb(208,67,9)"/><text x="10.0338%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="9.7838%" y="725" width="0.1138%" height="15" fill="rgb(219,133,21)"/><text x="10.0338%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="9.7838%" y="709" width="0.1138%" height="15" fill="rgb(246,46,29)"/><text x="10.0338%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="9.7838%" y="693" width="0.1138%" height="15" fill="rgb(246,185,52)"/><text x="10.0338%" y="703.50"></text></g><g><title>__GI___openat (1 samples, 0.11%)</title><rect x="9.7838%" y="677" width="0.1138%" height="15" fill="rgb(252,136,11)"/><text x="10.0338%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="9.7838%" y="661" width="0.1138%" height="15" fill="rgb(219,138,53)"/><text x="10.0338%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="9.7838%" y="645" width="0.1138%" height="15" fill="rgb(211,51,23)"/><text x="10.0338%" y="655.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.11%)</title><rect x="9.7838%" y="629" width="0.1138%" height="15" fill="rgb(247,221,28)"/><text x="10.0338%" y="639.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.11%)</title><rect x="9.7838%" y="613" width="0.1138%" height="15" fill="rgb(251,222,45)"/><text x="10.0338%" y="623.50"></text></g><g><title>do_filp_open (1 samples, 0.11%)</title><rect x="9.7838%" y="597" width="0.1138%" height="15" fill="rgb(217,162,53)"/><text x="10.0338%" y="607.50"></text></g><g><title>path_openat (1 samples, 0.11%)</title><rect x="9.7838%" y="581" width="0.1138%" height="15" fill="rgb(229,93,14)"/><text x="10.0338%" y="591.50"></text></g><g><title>link_path_walk (1 samples, 0.11%)</title><rect x="9.7838%" y="565" width="0.1138%" height="15" fill="rgb(209,67,49)"/><text x="10.0338%" y="575.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.11%)</title><rect x="9.7838%" y="549" width="0.1138%" height="15" fill="rgb(213,87,29)"/><text x="10.0338%" y="559.50"></text></g><g><title>kernfs_iop_permission (1 samples, 0.11%)</title><rect x="9.7838%" y="533" width="0.1138%" height="15" fill="rgb(205,151,52)"/><text x="10.0338%" y="543.50"></text></g><g><title>mutex_lock (1 samples, 0.11%)</title><rect x="9.7838%" y="517" width="0.1138%" height="15" fill="rgb(253,215,39)"/><text x="10.0338%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="9.8976%" y="709" width="0.1138%" height="15" fill="rgb(221,220,41)"/><text x="10.1476%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="9.8976%" y="693" width="0.1138%" height="15" fill="rgb(218,133,21)"/><text x="10.1476%" y="703.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.11%)</title><rect x="10.3527%" y="421" width="0.1138%" height="15" fill="rgb(221,193,43)"/><text x="10.6027%" y="431.50"></text></g><g><title>ctx_sched_out (1 samples, 0.11%)</title><rect x="10.3527%" y="405" width="0.1138%" height="15" fill="rgb(240,128,52)"/><text x="10.6027%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="10.3527%" y="389" width="0.1138%" height="15" fill="rgb(253,114,12)"/><text x="10.6027%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="10.3527%" y="373" width="0.1138%" height="15" fill="rgb(215,223,47)"/><text x="10.6027%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="10.3527%" y="357" width="0.1138%" height="15" fill="rgb(248,225,23)"/><text x="10.6027%" y="367.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="10.4664%" y="421" width="0.1138%" height="15" fill="rgb(250,108,0)"/><text x="10.7164%" y="431.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.23%)</title><rect x="10.5802%" y="421" width="0.2275%" height="15" fill="rgb(228,208,7)"/><text x="10.8302%" y="431.50"></text></g><g><title>dequeue_entity (2 samples, 0.23%)</title><rect x="10.5802%" y="405" width="0.2275%" height="15" fill="rgb(244,45,10)"/><text x="10.8302%" y="415.50"></text></g><g><title>update_curr (2 samples, 0.23%)</title><rect x="10.5802%" y="389" width="0.2275%" height="15" fill="rgb(207,125,25)"/><text x="10.8302%" y="399.50"></text></g><g><title>__calc_delta (1 samples, 0.11%)</title><rect x="10.6940%" y="373" width="0.1138%" height="15" fill="rgb(210,195,18)"/><text x="10.9440%" y="383.50"></text></g><g><title>inet_recvmsg (7 samples, 0.80%)</title><rect x="10.1251%" y="533" width="0.7964%" height="15" fill="rgb(249,80,12)"/><text x="10.3751%" y="543.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.80%)</title><rect x="10.1251%" y="517" width="0.7964%" height="15" fill="rgb(221,65,9)"/><text x="10.3751%" y="527.50"></text></g><g><title>sk_wait_data (5 samples, 0.57%)</title><rect x="10.3527%" y="501" width="0.5688%" height="15" fill="rgb(235,49,36)"/><text x="10.6027%" y="511.50"></text></g><g><title>wait_woken (5 samples, 0.57%)</title><rect x="10.3527%" y="485" width="0.5688%" height="15" fill="rgb(225,32,20)"/><text x="10.6027%" y="495.50"></text></g><g><title>schedule_timeout (5 samples, 0.57%)</title><rect x="10.3527%" y="469" width="0.5688%" height="15" fill="rgb(215,141,46)"/><text x="10.6027%" y="479.50"></text></g><g><title>schedule (5 samples, 0.57%)</title><rect x="10.3527%" y="453" width="0.5688%" height="15" fill="rgb(250,160,47)"/><text x="10.6027%" y="463.50"></text></g><g><title>__schedule (5 samples, 0.57%)</title><rect x="10.3527%" y="437" width="0.5688%" height="15" fill="rgb(216,222,40)"/><text x="10.6027%" y="447.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="10.8077%" y="421" width="0.1138%" height="15" fill="rgb(234,217,39)"/><text x="11.0577%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 1.02%)</title><rect x="10.1251%" y="565" width="1.0239%" height="15" fill="rgb(207,178,40)"/><text x="10.3751%" y="575.50"></text></g><g><title>__sys_recvfrom (9 samples, 1.02%)</title><rect x="10.1251%" y="549" width="1.0239%" height="15" fill="rgb(221,136,13)"/><text x="10.3751%" y="559.50"></text></g><g><title>sockfd_lookup_light (2 samples, 0.23%)</title><rect x="10.9215%" y="533" width="0.2275%" height="15" fill="rgb(249,199,10)"/><text x="11.1715%" y="543.50"></text></g><g><title>__fget_light (2 samples, 0.23%)</title><rect x="10.9215%" y="517" width="0.2275%" height="15" fill="rgb(249,222,13)"/><text x="11.1715%" y="527.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="11.0353%" y="501" width="0.1138%" height="15" fill="rgb(244,185,38)"/><text x="11.2853%" y="511.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="11.1490%" y="565" width="0.1138%" height="15" fill="rgb(236,202,9)"/><text x="11.3990%" y="575.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="11.1490%" y="549" width="0.1138%" height="15" fill="rgb(250,229,37)"/><text x="11.3990%" y="559.50"></text></g><g><title>do_syscall_64 (11 samples, 1.25%)</title><rect x="10.1251%" y="581" width="1.2514%" height="15" fill="rgb(206,174,23)"/><text x="10.3751%" y="591.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="11.2628%" y="565" width="0.1138%" height="15" fill="rgb(211,33,43)"/><text x="11.5128%" y="575.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="11.2628%" y="549" width="0.1138%" height="15" fill="rgb(245,58,50)"/><text x="11.5128%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.48%)</title><rect x="10.0114%" y="709" width="1.4790%" height="15" fill="rgb(244,68,36)"/><text x="10.2614%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (13 samples, 1.48%)</title><rect x="10.0114%" y="693" width="1.4790%" height="15" fill="rgb(232,229,15)"/><text x="10.2614%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 1.48%)</title><rect x="10.0114%" y="677" width="1.4790%" height="15" fill="rgb(254,30,23)"/><text x="10.2614%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 1.48%)</title><rect x="10.0114%" y="661" width="1.4790%" height="15" fill="rgb(235,160,14)"/><text x="10.2614%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 1.48%)</title><rect x="10.0114%" y="645" width="1.4790%" height="15" fill="rgb(212,155,44)"/><text x="10.2614%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 1.48%)</title><rect x="10.0114%" y="629" width="1.4790%" height="15" fill="rgb(226,2,50)"/><text x="10.2614%" y="639.50"></text></g><g><title>__libc_recv (13 samples, 1.48%)</title><rect x="10.0114%" y="613" width="1.4790%" height="15" fill="rgb(234,177,6)"/><text x="10.2614%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 1.37%)</title><rect x="10.1251%" y="597" width="1.3652%" height="15" fill="rgb(217,24,9)"/><text x="10.3751%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="11.3766%" y="581" width="0.1138%" height="15" fill="rgb(220,13,46)"/><text x="11.6266%" y="591.50"></text></g><g><title>std::rt::lang_start_internal (18 samples, 2.05%)</title><rect x="9.5563%" y="885" width="2.0478%" height="15" fill="rgb(239,221,27)"/><text x="9.8063%" y="895.50">s..</text></g><g><title>std::panic::catch_unwind (18 samples, 2.05%)</title><rect x="9.5563%" y="869" width="2.0478%" height="15" fill="rgb(222,198,25)"/><text x="9.8063%" y="879.50">s..</text></g><g><title>std::panicking::try (18 samples, 2.05%)</title><rect x="9.5563%" y="853" width="2.0478%" height="15" fill="rgb(211,99,13)"/><text x="9.8063%" y="863.50">s..</text></g><g><title>std::panicking::try::do_call (18 samples, 2.05%)</title><rect x="9.5563%" y="837" width="2.0478%" height="15" fill="rgb(232,111,31)"/><text x="9.8063%" y="847.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 2.05%)</title><rect x="9.5563%" y="821" width="2.0478%" height="15" fill="rgb(245,82,37)"/><text x="9.8063%" y="831.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (18 samples, 2.05%)</title><rect x="9.5563%" y="805" width="2.0478%" height="15" fill="rgb(227,149,46)"/><text x="9.8063%" y="815.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 2.05%)</title><rect x="9.5563%" y="789" width="2.0478%" height="15" fill="rgb(218,36,50)"/><text x="9.8063%" y="799.50">s..</text></g><g><title>lobsters::main (18 samples, 2.05%)</title><rect x="9.5563%" y="773" width="2.0478%" height="15" fill="rgb(226,80,48)"/><text x="9.8063%" y="783.50">l..</text></g><g><title>mysql::conn::Conn::_query (15 samples, 1.71%)</title><rect x="9.8976%" y="757" width="1.7065%" height="15" fill="rgb(238,224,15)"/><text x="10.1476%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (15 samples, 1.71%)</title><rect x="9.8976%" y="741" width="1.7065%" height="15" fill="rgb(241,136,10)"/><text x="10.1476%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.71%)</title><rect x="9.8976%" y="725" width="1.7065%" height="15" fill="rgb(208,32,45)"/><text x="10.1476%" y="735.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="11.4903%" y="709" width="0.1138%" height="15" fill="rgb(207,135,9)"/><text x="11.7403%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="11.4903%" y="693" width="0.1138%" height="15" fill="rgb(206,86,44)"/><text x="11.7403%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="11.4903%" y="677" width="0.1138%" height="15" fill="rgb(245,177,15)"/><text x="11.7403%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="11.4903%" y="661" width="0.1138%" height="15" fill="rgb(206,64,50)"/><text x="11.7403%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="11.4903%" y="645" width="0.1138%" height="15" fill="rgb(234,36,40)"/><text x="11.7403%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="11.4903%" y="629" width="0.1138%" height="15" fill="rgb(213,64,8)"/><text x="11.7403%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="11.4903%" y="613" width="0.1138%" height="15" fill="rgb(210,75,36)"/><text x="11.7403%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="11.6041%" y="693" width="0.1138%" height="15" fill="rgb(229,88,21)"/><text x="11.8541%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="11.6041%" y="677" width="0.1138%" height="15" fill="rgb(252,204,47)"/><text x="11.8541%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.46%)</title><rect x="11.6041%" y="885" width="0.4551%" height="15" fill="rgb(208,77,27)"/><text x="11.8541%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.46%)</title><rect x="11.6041%" y="869" width="0.4551%" height="15" fill="rgb(221,76,26)"/><text x="11.8541%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.46%)</title><rect x="11.6041%" y="853" width="0.4551%" height="15" fill="rgb(225,139,18)"/><text x="11.8541%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.46%)</title><rect x="11.6041%" y="837" width="0.4551%" height="15" fill="rgb(230,137,11)"/><text x="11.8541%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.46%)</title><rect x="11.6041%" y="821" width="0.4551%" height="15" fill="rgb(212,28,1)"/><text x="11.8541%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (4 samples, 0.46%)</title><rect x="11.6041%" y="805" width="0.4551%" height="15" fill="rgb(248,164,17)"/><text x="11.8541%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.46%)</title><rect x="11.6041%" y="789" width="0.4551%" height="15" fill="rgb(222,171,42)"/><text x="11.8541%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.46%)</title><rect x="11.6041%" y="773" width="0.4551%" height="15" fill="rgb(243,84,45)"/><text x="11.8541%" y="783.50"></text></g><g><title>decor::helpers::answer_rows (4 samples, 0.46%)</title><rect x="11.6041%" y="757" width="0.4551%" height="15" fill="rgb(252,49,23)"/><text x="11.8541%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="11.6041%" y="741" width="0.4551%" height="15" fill="rgb(215,19,7)"/><text x="11.8541%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.46%)</title><rect x="11.6041%" y="725" width="0.4551%" height="15" fill="rgb(238,81,41)"/><text x="11.8541%" y="735.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.46%)</title><rect x="11.6041%" y="709" width="0.4551%" height="15" fill="rgb(210,199,37)"/><text x="11.8541%" y="719.50"></text></g><g><title>mysql_common::value::read_text_values (3 samples, 0.34%)</title><rect x="11.7179%" y="693" width="0.3413%" height="15" fill="rgb(244,192,49)"/><text x="11.9679%" y="703.50"></text></g><g><title>mysql_common::value::read_text_value (3 samples, 0.34%)</title><rect x="11.7179%" y="677" width="0.3413%" height="15" fill="rgb(226,211,11)"/><text x="11.9679%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.34%)</title><rect x="11.7179%" y="661" width="0.3413%" height="15" fill="rgb(236,162,54)"/><text x="11.9679%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.11%)</title><rect x="12.0592%" y="757" width="0.1138%" height="15" fill="rgb(220,229,9)"/><text x="12.3092%" y="767.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.11%)</title><rect x="12.0592%" y="741" width="0.1138%" height="15" fill="rgb(250,87,22)"/><text x="12.3092%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.46%)</title><rect x="12.8555%" y="677" width="0.4551%" height="15" fill="rgb(239,43,17)"/><text x="13.1055%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="13.0830%" y="661" width="0.2275%" height="15" fill="rgb(231,177,25)"/><text x="13.3330%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="13.5381%" y="661" width="0.1138%" height="15" fill="rgb(219,179,1)"/><text x="13.7881%" y="671.50"></text></g><g><title>[unknown] (82 samples, 9.33%)</title><rect x="4.4369%" y="901" width="9.3288%" height="15" fill="rgb(238,219,53)"/><text x="4.6869%" y="911.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 1.71%)</title><rect x="12.0592%" y="885" width="1.7065%" height="15" fill="rgb(232,167,36)"/><text x="12.3092%" y="895.50"></text></g><g><title>decor::Shim::run_on_tcp (15 samples, 1.71%)</title><rect x="12.0592%" y="869" width="1.7065%" height="15" fill="rgb(244,19,51)"/><text x="12.3092%" y="879.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (15 samples, 1.71%)</title><rect x="12.0592%" y="853" width="1.7065%" height="15" fill="rgb(224,6,22)"/><text x="12.3092%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (15 samples, 1.71%)</title><rect x="12.0592%" y="837" width="1.7065%" height="15" fill="rgb(224,145,5)"/><text x="12.3092%" y="847.50"></text></g><g><title>decor::helpers::answer_rows (15 samples, 1.71%)</title><rect x="12.0592%" y="821" width="1.7065%" height="15" fill="rgb(234,130,49)"/><text x="12.3092%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.71%)</title><rect x="12.0592%" y="805" width="1.7065%" height="15" fill="rgb(254,6,2)"/><text x="12.3092%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (15 samples, 1.71%)</title><rect x="12.0592%" y="789" width="1.7065%" height="15" fill="rgb(208,96,46)"/><text x="12.3092%" y="799.50"></text></g><g><title>mysql::conn::Conn::next_text (15 samples, 1.71%)</title><rect x="12.0592%" y="773" width="1.7065%" height="15" fill="rgb(239,3,39)"/><text x="12.3092%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (14 samples, 1.59%)</title><rect x="12.1729%" y="757" width="1.5927%" height="15" fill="rgb(233,210,1)"/><text x="12.4229%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.59%)</title><rect x="12.1729%" y="741" width="1.5927%" height="15" fill="rgb(244,137,37)"/><text x="12.4229%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (14 samples, 1.59%)</title><rect x="12.1729%" y="725" width="1.5927%" height="15" fill="rgb(240,136,2)"/><text x="12.4229%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (10 samples, 1.14%)</title><rect x="12.6280%" y="709" width="1.1377%" height="15" fill="rgb(239,18,37)"/><text x="12.8780%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (9 samples, 1.02%)</title><rect x="12.7418%" y="693" width="1.0239%" height="15" fill="rgb(218,185,22)"/><text x="12.9918%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.46%)</title><rect x="13.3106%" y="677" width="0.4551%" height="15" fill="rgb(225,218,4)"/><text x="13.5606%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="13.6519%" y="661" width="0.1138%" height="15" fill="rgb(230,182,32)"/><text x="13.9019%" y="671.50"></text></g><g><title>__GI_madvise (1 samples, 0.11%)</title><rect x="13.7656%" y="869" width="0.1138%" height="15" fill="rgb(242,56,43)"/><text x="14.0156%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="13.7656%" y="853" width="0.1138%" height="15" fill="rgb(233,99,24)"/><text x="14.0156%" y="863.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="13.7656%" y="837" width="0.1138%" height="15" fill="rgb(234,209,42)"/><text x="14.0156%" y="847.50"></text></g><g><title>__x64_sys_madvise (1 samples, 0.11%)</title><rect x="13.7656%" y="821" width="0.1138%" height="15" fill="rgb(227,7,12)"/><text x="14.0156%" y="831.50"></text></g><g><title>do_madvise (1 samples, 0.11%)</title><rect x="13.7656%" y="805" width="0.1138%" height="15" fill="rgb(245,203,43)"/><text x="14.0156%" y="815.50"></text></g><g><title>zap_page_range (1 samples, 0.11%)</title><rect x="13.7656%" y="789" width="0.1138%" height="15" fill="rgb(238,205,33)"/><text x="14.0156%" y="799.50"></text></g><g><title>unmap_page_range (1 samples, 0.11%)</title><rect x="13.7656%" y="773" width="0.1138%" height="15" fill="rgb(231,56,7)"/><text x="14.0156%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="13.9932%" y="757" width="0.1138%" height="15" fill="rgb(244,186,29)"/><text x="14.2432%" y="767.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="13.9932%" y="741" width="0.1138%" height="15" fill="rgb(234,111,31)"/><text x="14.2432%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="13.9932%" y="725" width="0.1138%" height="15" fill="rgb(241,149,10)"/><text x="14.2432%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="13.9932%" y="709" width="0.1138%" height="15" fill="rgb(249,206,44)"/><text x="14.2432%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="13.9932%" y="693" width="0.1138%" height="15" fill="rgb(251,153,30)"/><text x="14.2432%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="13.9932%" y="677" width="0.1138%" height="15" fill="rgb(239,152,38)"/><text x="14.2432%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="13.9932%" y="661" width="0.1138%" height="15" fill="rgb(249,139,47)"/><text x="14.2432%" y="671.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="13.9932%" y="645" width="0.1138%" height="15" fill="rgb(244,64,35)"/><text x="14.2432%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="13.9932%" y="629" width="0.1138%" height="15" fill="rgb(216,46,15)"/><text x="14.2432%" y="639.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="13.9932%" y="613" width="0.1138%" height="15" fill="rgb(250,74,19)"/><text x="14.2432%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="14.1069%" y="741" width="0.1138%" height="15" fill="rgb(249,42,33)"/><text x="14.3569%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.23%)</title><rect x="15.8134%" y="725" width="0.2275%" height="15" fill="rgb(242,149,17)"/><text x="16.0634%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="15.9272%" y="709" width="0.1138%" height="15" fill="rgb(244,29,21)"/><text x="16.1772%" y="719.50"></text></g><g><title>__GI___libc_free (2 samples, 0.23%)</title><rect x="16.7235%" y="677" width="0.2275%" height="15" fill="rgb(220,130,37)"/><text x="16.9735%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (5 samples, 0.57%)</title><rect x="16.4960%" y="709" width="0.5688%" height="15" fill="rgb(211,67,2)"/><text x="16.7460%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.46%)</title><rect x="16.6098%" y="693" width="0.4551%" height="15" fill="rgb(235,68,52)"/><text x="16.8598%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="16.9511%" y="677" width="0.1138%" height="15" fill="rgb(246,142,3)"/><text x="17.2011%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="17.0648%" y="709" width="0.1138%" height="15" fill="rgb(241,25,7)"/><text x="17.3148%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="17.1786%" y="709" width="0.1138%" height="15" fill="rgb(242,119,39)"/><text x="17.4286%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="17.1786%" y="693" width="0.1138%" height="15" fill="rgb(241,98,45)"/><text x="17.4286%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.59%)</title><rect x="16.0410%" y="725" width="1.5927%" height="15" fill="rgb(254,28,30)"/><text x="16.2910%" y="735.50"></text></g><g><title>mysql_common::row::new_row (3 samples, 0.34%)</title><rect x="17.2924%" y="709" width="0.3413%" height="15" fill="rgb(241,142,54)"/><text x="17.5424%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="17.4061%" y="693" width="0.2275%" height="15" fill="rgb(222,85,15)"/><text x="17.6561%" y="703.50"></text></g><g><title>__GI___libc_free (3 samples, 0.34%)</title><rect x="17.6337%" y="725" width="0.3413%" height="15" fill="rgb(210,85,47)"/><text x="17.8837%" y="735.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.34%)</title><rect x="17.9750%" y="725" width="0.3413%" height="15" fill="rgb(224,206,25)"/><text x="18.2250%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="18.3163%" y="725" width="0.2275%" height="15" fill="rgb(243,201,19)"/><text x="18.5663%" y="735.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="18.5438%" y="725" width="0.1138%" height="15" fill="rgb(236,59,4)"/><text x="18.7938%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="18.5438%" y="709" width="0.1138%" height="15" fill="rgb(254,179,45)"/><text x="18.7938%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="18.6576%" y="725" width="0.2275%" height="15" fill="rgb(226,14,10)"/><text x="18.9076%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="18.8851%" y="725" width="0.1138%" height="15" fill="rgb(244,27,41)"/><text x="19.1351%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="18.9989%" y="725" width="0.1138%" height="15" fill="rgb(235,35,32)"/><text x="19.2489%" y="735.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.23%)</title><rect x="19.2264%" y="693" width="0.2275%" height="15" fill="rgb(218,68,31)"/><text x="19.4764%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="19.3402%" y="677" width="0.1138%" height="15" fill="rgb(207,120,37)"/><text x="19.5902%" y="687.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (4 samples, 0.46%)</title><rect x="19.1126%" y="725" width="0.4551%" height="15" fill="rgb(227,98,0)"/><text x="19.3626%" y="735.50"></text></g><g><title>msql_srv::writers::column_definitions (3 samples, 0.34%)</title><rect x="19.2264%" y="709" width="0.3413%" height="15" fill="rgb(207,7,3)"/><text x="19.4764%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="19.4539%" y="693" width="0.1138%" height="15" fill="rgb(206,98,19)"/><text x="19.7039%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="19.4539%" y="677" width="0.1138%" height="15" fill="rgb(217,5,26)"/><text x="19.7039%" y="687.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::end_row (1 samples, 0.11%)</title><rect x="19.5677%" y="725" width="0.1138%" height="15" fill="rgb(235,190,38)"/><text x="19.8177%" y="735.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="19.5677%" y="709" width="0.1138%" height="15" fill="rgb(247,86,24)"/><text x="19.8177%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="19.5677%" y="693" width="0.1138%" height="15" fill="rgb(205,101,16)"/><text x="19.8177%" y="703.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (4 samples, 0.46%)</title><rect x="19.7952%" y="693" width="0.4551%" height="15" fill="rgb(246,168,33)"/><text x="20.0452%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.34%)</title><rect x="19.9090%" y="677" width="0.3413%" height="15" fill="rgb(231,114,1)"/><text x="20.1590%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="20.1365%" y="661" width="0.1138%" height="15" fill="rgb(207,184,53)"/><text x="20.3865%" y="671.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (7 samples, 0.80%)</title><rect x="19.6815%" y="709" width="0.7964%" height="15" fill="rgb(224,95,51)"/><text x="19.9315%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.23%)</title><rect x="20.2503%" y="693" width="0.2275%" height="15" fill="rgb(212,188,45)"/><text x="20.5003%" y="703.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (9 samples, 1.02%)</title><rect x="19.6815%" y="725" width="1.0239%" height="15" fill="rgb(223,154,38)"/><text x="19.9315%" y="735.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="20.4778%" y="709" width="0.2275%" height="15" fill="rgb(251,22,52)"/><text x="20.7278%" y="719.50"></text></g><g><title>decor::helpers::answer_rows (64 samples, 7.28%)</title><rect x="14.2207%" y="741" width="7.2810%" height="15" fill="rgb(229,209,22)"/><text x="14.4707%" y="751.50">decor::hel..</text></g><g><title>mysql_common::row::Row::unwrap (7 samples, 0.80%)</title><rect x="20.7053%" y="725" width="0.7964%" height="15" fill="rgb(234,138,34)"/><text x="20.9553%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.80%)</title><rect x="20.7053%" y="709" width="0.7964%" height="15" fill="rgb(212,95,11)"/><text x="20.9553%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="21.5017%" y="725" width="0.1138%" height="15" fill="rgb(240,179,47)"/><text x="21.7517%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="21.7292%" y="709" width="0.1138%" height="15" fill="rgb(240,163,11)"/><text x="21.9792%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="22.1843%" y="677" width="0.2275%" height="15" fill="rgb(236,37,12)"/><text x="22.4343%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.34%)</title><rect x="22.1843%" y="693" width="0.3413%" height="15" fill="rgb(232,164,16)"/><text x="22.4343%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="22.4118%" y="677" width="0.1138%" height="15" fill="rgb(244,205,15)"/><text x="22.6618%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="22.4118%" y="661" width="0.1138%" height="15" fill="rgb(223,117,47)"/><text x="22.6618%" y="671.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="22.6394%" y="581" width="0.1138%" height="15" fill="rgb(244,107,35)"/><text x="22.8894%" y="591.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="22.7531%" y="581" width="0.1138%" height="15" fill="rgb(205,140,8)"/><text x="23.0031%" y="591.50"></text></g><g><title>fput (1 samples, 0.11%)</title><rect x="22.9807%" y="517" width="0.1138%" height="15" fill="rgb(228,84,46)"/><text x="23.2307%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="23.5495%" y="469" width="0.1138%" height="15" fill="rgb(254,188,9)"/><text x="23.7995%" y="479.50"></text></g><g><title>add_wait_queue (1 samples, 0.11%)</title><rect x="23.6633%" y="469" width="0.1138%" height="15" fill="rgb(206,112,54)"/><text x="23.9133%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="23.6633%" y="453" width="0.1138%" height="15" fill="rgb(216,84,49)"/><text x="23.9133%" y="463.50"></text></g><g><title>release_sock (2 samples, 0.23%)</title><rect x="23.7770%" y="469" width="0.2275%" height="15" fill="rgb(214,194,35)"/><text x="24.0270%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="23.8908%" y="453" width="0.1138%" height="15" fill="rgb(249,28,3)"/><text x="24.1408%" y="463.50"></text></g><g><title>remove_wait_queue (1 samples, 0.11%)</title><rect x="24.0046%" y="469" width="0.1138%" height="15" fill="rgb(222,56,52)"/><text x="24.2546%" y="479.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="24.0046%" y="453" width="0.1138%" height="15" fill="rgb(245,217,50)"/><text x="24.2546%" y="463.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="24.0046%" y="437" width="0.1138%" height="15" fill="rgb(213,201,24)"/><text x="24.2546%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="25.0284%" y="389" width="0.1138%" height="15" fill="rgb(248,116,28)"/><text x="25.2784%" y="399.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.34%)</title><rect x="24.9147%" y="405" width="0.3413%" height="15" fill="rgb(219,72,43)"/><text x="25.1647%" y="415.50"></text></g><g><title>ctx_sched_out (1 samples, 0.11%)</title><rect x="25.1422%" y="389" width="0.1138%" height="15" fill="rgb(209,138,14)"/><text x="25.3922%" y="399.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.11%)</title><rect x="25.1422%" y="373" width="0.1138%" height="15" fill="rgb(222,18,33)"/><text x="25.3922%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="25.2560%" y="405" width="0.1138%" height="15" fill="rgb(213,199,7)"/><text x="25.5060%" y="415.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="25.3697%" y="405" width="0.1138%" height="15" fill="rgb(250,110,10)"/><text x="25.6197%" y="415.50"></text></g><g><title>update_cfs_group (2 samples, 0.23%)</title><rect x="25.4835%" y="373" width="0.2275%" height="15" fill="rgb(248,123,6)"/><text x="25.7335%" y="383.50"></text></g><g><title>update_curr (1 samples, 0.11%)</title><rect x="25.7110%" y="373" width="0.1138%" height="15" fill="rgb(206,91,31)"/><text x="25.9610%" y="383.50"></text></g><g><title>__calc_delta (1 samples, 0.11%)</title><rect x="25.7110%" y="357" width="0.1138%" height="15" fill="rgb(211,154,13)"/><text x="25.9610%" y="367.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.46%)</title><rect x="25.4835%" y="405" width="0.4551%" height="15" fill="rgb(225,148,7)"/><text x="25.7335%" y="415.50"></text></g><g><title>dequeue_entity (4 samples, 0.46%)</title><rect x="25.4835%" y="389" width="0.4551%" height="15" fill="rgb(220,160,43)"/><text x="25.7335%" y="399.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="25.8248%" y="373" width="0.1138%" height="15" fill="rgb(213,52,39)"/><text x="26.0748%" y="383.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="25.9386%" y="405" width="0.1138%" height="15" fill="rgb(243,137,7)"/><text x="26.1886%" y="415.50"></text></g><g><title>newidle_balance (1 samples, 0.11%)</title><rect x="25.9386%" y="389" width="0.1138%" height="15" fill="rgb(230,79,13)"/><text x="26.1886%" y="399.50"></text></g><g><title>psi_task_change (8 samples, 0.91%)</title><rect x="26.0523%" y="405" width="0.9101%" height="15" fill="rgb(247,105,23)"/><text x="26.3023%" y="415.50"></text></g><g><title>psi_group_change (8 samples, 0.91%)</title><rect x="26.0523%" y="389" width="0.9101%" height="15" fill="rgb(223,179,41)"/><text x="26.3023%" y="399.50"></text></g><g><title>record_times (4 samples, 0.46%)</title><rect x="26.5074%" y="373" width="0.4551%" height="15" fill="rgb(218,9,34)"/><text x="26.7574%" y="383.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.34%)</title><rect x="26.6212%" y="357" width="0.3413%" height="15" fill="rgb(222,106,8)"/><text x="26.8712%" y="367.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="26.8487%" y="341" width="0.1138%" height="15" fill="rgb(211,220,0)"/><text x="27.0987%" y="351.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="26.8487%" y="325" width="0.1138%" height="15" fill="rgb(229,52,16)"/><text x="27.0987%" y="335.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.34%)</title><rect x="26.9625%" y="405" width="0.3413%" height="15" fill="rgb(212,155,18)"/><text x="27.2125%" y="415.50"></text></g><g><title>sk_wait_data (35 samples, 3.98%)</title><rect x="23.4357%" y="485" width="3.9818%" height="15" fill="rgb(242,21,14)"/><text x="23.6857%" y="495.50">sk_w..</text></g><g><title>wait_woken (29 samples, 3.30%)</title><rect x="24.1183%" y="469" width="3.2992%" height="15" fill="rgb(222,19,48)"/><text x="24.3683%" y="479.50">wai..</text></g><g><title>schedule_timeout (28 samples, 3.19%)</title><rect x="24.2321%" y="453" width="3.1854%" height="15" fill="rgb(232,45,27)"/><text x="24.4821%" y="463.50">sch..</text></g><g><title>schedule (25 samples, 2.84%)</title><rect x="24.5734%" y="437" width="2.8441%" height="15" fill="rgb(249,103,42)"/><text x="24.8234%" y="447.50">sc..</text></g><g><title>__schedule (25 samples, 2.84%)</title><rect x="24.5734%" y="421" width="2.8441%" height="15" fill="rgb(246,81,33)"/><text x="24.8234%" y="431.50">__..</text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="27.3038%" y="405" width="0.1138%" height="15" fill="rgb(252,33,42)"/><text x="27.5538%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="27.3038%" y="389" width="0.1138%" height="15" fill="rgb(209,212,41)"/><text x="27.5538%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="27.3038%" y="373" width="0.1138%" height="15" fill="rgb(207,154,6)"/><text x="27.5538%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="27.3038%" y="357" width="0.1138%" height="15" fill="rgb(223,64,47)"/><text x="27.5538%" y="367.50"></text></g><g><title>error_entry (1 samples, 0.11%)</title><rect x="27.6451%" y="421" width="0.1138%" height="15" fill="rgb(211,161,38)"/><text x="27.8951%" y="431.50"></text></g><g><title>find_vma (1 samples, 0.11%)</title><rect x="27.8726%" y="389" width="0.1138%" height="15" fill="rgb(219,138,40)"/><text x="28.1226%" y="399.50"></text></g><g><title>vmacache_find (1 samples, 0.11%)</title><rect x="27.8726%" y="373" width="0.1138%" height="15" fill="rgb(241,228,46)"/><text x="28.1226%" y="383.50"></text></g><g><title>skb_copy_datagram_iter (6 samples, 0.68%)</title><rect x="27.4175%" y="485" width="0.6826%" height="15" fill="rgb(223,209,38)"/><text x="27.6675%" y="495.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.68%)</title><rect x="27.4175%" y="469" width="0.6826%" height="15" fill="rgb(236,164,45)"/><text x="27.6675%" y="479.50"></text></g><g><title>_copy_to_iter (4 samples, 0.46%)</title><rect x="27.6451%" y="453" width="0.4551%" height="15" fill="rgb(231,15,5)"/><text x="27.8951%" y="463.50"></text></g><g><title>copy_user_enhanced_fast_string (4 samples, 0.46%)</title><rect x="27.6451%" y="437" width="0.4551%" height="15" fill="rgb(252,35,15)"/><text x="27.8951%" y="447.50"></text></g><g><title>page_fault (3 samples, 0.34%)</title><rect x="27.7588%" y="421" width="0.3413%" height="15" fill="rgb(248,181,18)"/><text x="28.0088%" y="431.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.23%)</title><rect x="27.8726%" y="405" width="0.2275%" height="15" fill="rgb(233,39,42)"/><text x="28.1226%" y="415.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="27.9863%" y="389" width="0.1138%" height="15" fill="rgb(238,110,33)"/><text x="28.2363%" y="399.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="27.9863%" y="373" width="0.1138%" height="15" fill="rgb(233,195,10)"/><text x="28.2363%" y="383.50"></text></g><g><title>__lru_cache_add (1 samples, 0.11%)</title><rect x="27.9863%" y="357" width="0.1138%" height="15" fill="rgb(254,105,3)"/><text x="28.2363%" y="367.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.11%)</title><rect x="27.9863%" y="341" width="0.1138%" height="15" fill="rgb(221,225,9)"/><text x="28.2363%" y="351.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.11%)</title><rect x="27.9863%" y="325" width="0.1138%" height="15" fill="rgb(224,227,45)"/><text x="28.2363%" y="335.50"></text></g><g><title>inet_recvmsg (45 samples, 5.12%)</title><rect x="23.0944%" y="517" width="5.1195%" height="15" fill="rgb(229,198,43)"/><text x="23.3444%" y="527.50">inet_r..</text></g><g><title>tcp_recvmsg (44 samples, 5.01%)</title><rect x="23.2082%" y="501" width="5.0057%" height="15" fill="rgb(206,209,35)"/><text x="23.4582%" y="511.50">tcp_re..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="28.1001%" y="485" width="0.1138%" height="15" fill="rgb(245,195,53)"/><text x="28.3501%" y="495.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="28.1001%" y="469" width="0.1138%" height="15" fill="rgb(240,92,26)"/><text x="28.3501%" y="479.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="28.1001%" y="453" width="0.1138%" height="15" fill="rgb(207,40,23)"/><text x="28.3501%" y="463.50"></text></g><g><title>read_tsc (1 samples, 0.11%)</title><rect x="28.1001%" y="437" width="0.1138%" height="15" fill="rgb(223,111,35)"/><text x="28.3501%" y="447.50"></text></g><g><title>sock_recvmsg (1 samples, 0.11%)</title><rect x="28.2139%" y="517" width="0.1138%" height="15" fill="rgb(229,147,28)"/><text x="28.4639%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (49 samples, 5.57%)</title><rect x="22.9807%" y="549" width="5.5745%" height="15" fill="rgb(211,29,28)"/><text x="23.2307%" y="559.50">__x64_s..</text></g><g><title>__sys_recvfrom (49 samples, 5.57%)</title><rect x="22.9807%" y="533" width="5.5745%" height="15" fill="rgb(228,72,33)"/><text x="23.2307%" y="543.50">__sys_r..</text></g><g><title>sockfd_lookup_light (2 samples, 0.23%)</title><rect x="28.3276%" y="517" width="0.2275%" height="15" fill="rgb(205,214,31)"/><text x="28.5776%" y="527.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="28.4414%" y="501" width="0.1138%" height="15" fill="rgb(224,111,15)"/><text x="28.6914%" y="511.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="28.5552%" y="549" width="0.1138%" height="15" fill="rgb(253,21,26)"/><text x="28.8052%" y="559.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="28.5552%" y="533" width="0.1138%" height="15" fill="rgb(245,139,43)"/><text x="28.8052%" y="543.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="28.5552%" y="517" width="0.1138%" height="15" fill="rgb(252,170,7)"/><text x="28.8052%" y="527.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.11%)</title><rect x="28.5552%" y="501" width="0.1138%" height="15" fill="rgb(231,118,14)"/><text x="28.8052%" y="511.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="28.6689%" y="549" width="0.1138%" height="15" fill="rgb(238,83,0)"/><text x="28.9189%" y="559.50"></text></g><g><title>do_syscall_64 (52 samples, 5.92%)</title><rect x="22.9807%" y="565" width="5.9158%" height="15" fill="rgb(221,39,39)"/><text x="23.2307%" y="575.50">do_sysca..</text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="28.7827%" y="549" width="0.1138%" height="15" fill="rgb(222,119,46)"/><text x="29.0327%" y="559.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="28.7827%" y="533" width="0.1138%" height="15" fill="rgb(222,165,49)"/><text x="29.0327%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (61 samples, 6.94%)</title><rect x="22.8669%" y="581" width="6.9397%" height="15" fill="rgb(219,113,52)"/><text x="23.1169%" y="591.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (8 samples, 0.91%)</title><rect x="28.8965%" y="565" width="0.9101%" height="15" fill="rgb(214,7,15)"/><text x="29.1465%" y="575.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="29.6928%" y="549" width="0.1138%" height="15" fill="rgb(235,32,4)"/><text x="29.9428%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (66 samples, 7.51%)</title><rect x="22.6394%" y="677" width="7.5085%" height="15" fill="rgb(238,90,54)"/><text x="22.8894%" y="687.50">&lt;std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (66 samples, 7.51%)</title><rect x="22.6394%" y="661" width="7.5085%" height="15" fill="rgb(213,208,19)"/><text x="22.8894%" y="671.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::read (66 samples, 7.51%)</title><rect x="22.6394%" y="645" width="7.5085%" height="15" fill="rgb(233,156,4)"/><text x="22.8894%" y="655.50">std::sys_c..</text></g><g><title>std::sys::unix::net::Socket::read (66 samples, 7.51%)</title><rect x="22.6394%" y="629" width="7.5085%" height="15" fill="rgb(207,194,5)"/><text x="22.8894%" y="639.50">std::sys::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (66 samples, 7.51%)</title><rect x="22.6394%" y="613" width="7.5085%" height="15" fill="rgb(206,111,30)"/><text x="22.8894%" y="623.50">std::sys::..</text></g><g><title>__libc_recv (66 samples, 7.51%)</title><rect x="22.6394%" y="597" width="7.5085%" height="15" fill="rgb(243,70,54)"/><text x="22.8894%" y="607.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (3 samples, 0.34%)</title><rect x="29.8066%" y="581" width="0.3413%" height="15" fill="rgb(242,28,8)"/><text x="30.0566%" y="591.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 8.08%)</title><rect x="22.5256%" y="693" width="8.0774%" height="15" fill="rgb(219,106,18)"/><text x="22.7756%" y="703.50">&lt;mysql_comm..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.46%)</title><rect x="30.1479%" y="677" width="0.4551%" height="15" fill="rgb(244,222,10)"/><text x="30.3979%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.34%)</title><rect x="30.2617%" y="661" width="0.3413%" height="15" fill="rgb(236,179,52)"/><text x="30.5117%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="30.2617%" y="645" width="0.3413%" height="15" fill="rgb(213,23,39)"/><text x="30.5117%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="30.4892%" y="629" width="0.1138%" height="15" fill="rgb(238,48,10)"/><text x="30.7392%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.11%)</title><rect x="30.4892%" y="613" width="0.1138%" height="15" fill="rgb(251,196,23)"/><text x="30.7392%" y="623.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="30.6030%" y="693" width="0.1138%" height="15" fill="rgb(250,152,24)"/><text x="30.8530%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (79 samples, 8.99%)</title><rect x="21.8430%" y="709" width="8.9875%" height="15" fill="rgb(209,150,17)"/><text x="22.0930%" y="719.50">mysql::conn::..</text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="30.7167%" y="693" width="0.1138%" height="15" fill="rgb(234,202,34)"/><text x="30.9667%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (84 samples, 9.56%)</title><rect x="21.6155%" y="725" width="9.5563%" height="15" fill="rgb(253,148,53)"/><text x="21.8655%" y="735.50">mysql::conn::C..</text></g><g><title>mysql_common::packets::column_from_payload (3 samples, 0.34%)</title><rect x="30.8305%" y="709" width="0.3413%" height="15" fill="rgb(218,129,16)"/><text x="31.0805%" y="719.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="31.0580%" y="693" width="0.1138%" height="15" fill="rgb(216,85,19)"/><text x="31.3080%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::clear (2 samples, 0.23%)</title><rect x="31.1718%" y="709" width="0.2275%" height="15" fill="rgb(235,228,7)"/><text x="31.4218%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="31.3993%" y="709" width="0.1138%" height="15" fill="rgb(245,175,0)"/><text x="31.6493%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="31.3993%" y="693" width="0.1138%" height="15" fill="rgb(208,168,36)"/><text x="31.6493%" y="703.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="31.6268%" y="645" width="0.1138%" height="15" fill="rgb(246,171,24)"/><text x="31.8768%" y="655.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="32.0819%" y="581" width="0.1138%" height="15" fill="rgb(215,142,24)"/><text x="32.3319%" y="591.50"></text></g><g><title>release_sock (1 samples, 0.11%)</title><rect x="32.3094%" y="549" width="0.1138%" height="15" fill="rgb(250,187,7)"/><text x="32.5594%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="32.3094%" y="533" width="0.1138%" height="15" fill="rgb(228,66,33)"/><text x="32.5594%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="32.3094%" y="517" width="0.1138%" height="15" fill="rgb(234,215,21)"/><text x="32.5594%" y="527.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.23%)</title><rect x="32.8783%" y="469" width="0.2275%" height="15" fill="rgb(222,191,20)"/><text x="33.1283%" y="479.50"></text></g><g><title>__sk_dst_check (1 samples, 0.11%)</title><rect x="33.1058%" y="469" width="0.1138%" height="15" fill="rgb(245,79,54)"/><text x="33.3558%" y="479.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.11%)</title><rect x="33.1058%" y="453" width="0.1138%" height="15" fill="rgb(240,10,37)"/><text x="33.3558%" y="463.50"></text></g><g><title>__ip_finish_output (1 samples, 0.11%)</title><rect x="33.4471%" y="453" width="0.1138%" height="15" fill="rgb(214,192,32)"/><text x="33.6971%" y="463.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="33.4471%" y="437" width="0.1138%" height="15" fill="rgb(209,36,54)"/><text x="33.6971%" y="447.50"></text></g><g><title>eth_type_trans (1 samples, 0.11%)</title><rect x="33.7884%" y="389" width="0.1138%" height="15" fill="rgb(220,10,11)"/><text x="34.0384%" y="399.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.34%)</title><rect x="33.6746%" y="437" width="0.3413%" height="15" fill="rgb(221,106,17)"/><text x="33.9246%" y="447.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="33.7884%" y="421" width="0.2275%" height="15" fill="rgb(251,142,44)"/><text x="34.0384%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.23%)</title><rect x="33.7884%" y="405" width="0.2275%" height="15" fill="rgb(238,13,15)"/><text x="34.0384%" y="415.50"></text></g><g><title>netif_rx (1 samples, 0.11%)</title><rect x="33.9022%" y="389" width="0.1138%" height="15" fill="rgb(208,107,27)"/><text x="34.1522%" y="399.50"></text></g><g><title>netif_rx_internal (1 samples, 0.11%)</title><rect x="33.9022%" y="373" width="0.1138%" height="15" fill="rgb(205,136,37)"/><text x="34.1522%" y="383.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="33.9022%" y="357" width="0.1138%" height="15" fill="rgb(250,205,27)"/><text x="34.1522%" y="367.50"></text></g><g><title>irqtime_account_irq (4 samples, 0.46%)</title><rect x="34.1297%" y="373" width="0.4551%" height="15" fill="rgb(210,80,43)"/><text x="34.3797%" y="383.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="34.3572%" y="357" width="0.2275%" height="15" fill="rgb(247,160,36)"/><text x="34.6072%" y="367.50"></text></g><g><title>sched_clock (2 samples, 0.23%)</title><rect x="34.3572%" y="341" width="0.2275%" height="15" fill="rgb(234,13,49)"/><text x="34.6072%" y="351.50"></text></g><g><title>native_sched_clock (2 samples, 0.23%)</title><rect x="34.3572%" y="325" width="0.2275%" height="15" fill="rgb(234,122,0)"/><text x="34.6072%" y="335.50"></text></g><g><title>raw_local_deliver (1 samples, 0.11%)</title><rect x="35.0398%" y="261" width="0.1138%" height="15" fill="rgb(207,146,38)"/><text x="35.2898%" y="271.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="35.6086%" y="245" width="0.1138%" height="15" fill="rgb(207,177,25)"/><text x="35.8586%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="35.7224%" y="245" width="0.1138%" height="15" fill="rgb(211,178,42)"/><text x="35.9724%" y="255.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="35.9499%" y="213" width="0.1138%" height="15" fill="rgb(230,69,54)"/><text x="36.1999%" y="223.50"></text></g><g><title>mod_timer (1 samples, 0.11%)</title><rect x="35.9499%" y="197" width="0.1138%" height="15" fill="rgb(214,135,41)"/><text x="36.1999%" y="207.50"></text></g><g><title>psi_task_change (6 samples, 0.68%)</title><rect x="36.4050%" y="117" width="0.6826%" height="15" fill="rgb(237,67,25)"/><text x="36.6550%" y="127.50"></text></g><g><title>psi_group_change (5 samples, 0.57%)</title><rect x="36.5188%" y="101" width="0.5688%" height="15" fill="rgb(222,189,50)"/><text x="36.7688%" y="111.50"></text></g><g><title>record_times (2 samples, 0.23%)</title><rect x="36.8601%" y="85" width="0.2275%" height="15" fill="rgb(245,148,34)"/><text x="37.1101%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="36.8601%" y="69" width="0.2275%" height="15" fill="rgb(222,29,6)"/><text x="37.1101%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="36.9738%" y="53" width="0.1138%" height="15" fill="rgb(221,189,43)"/><text x="37.2238%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="36.9738%" y="37" width="0.1138%" height="15" fill="rgb(207,36,27)"/><text x="37.2238%" y="47.50"></text></g><g><title>enqueue_task (10 samples, 1.14%)</title><rect x="36.4050%" y="133" width="1.1377%" height="15" fill="rgb(217,90,24)"/><text x="36.6550%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (4 samples, 0.46%)</title><rect x="37.0876%" y="117" width="0.4551%" height="15" fill="rgb(224,66,35)"/><text x="37.3376%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.11%)</title><rect x="37.7702%" y="101" width="0.1138%" height="15" fill="rgb(221,13,50)"/><text x="38.0202%" y="111.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.68%)</title><rect x="37.5427%" y="133" width="0.6826%" height="15" fill="rgb(236,68,49)"/><text x="37.7927%" y="143.50"></text></g><g><title>enqueue_entity (5 samples, 0.57%)</title><rect x="37.6564%" y="117" width="0.5688%" height="15" fill="rgb(229,146,28)"/><text x="37.9064%" y="127.50"></text></g><g><title>update_load_avg (3 samples, 0.34%)</title><rect x="37.8840%" y="101" width="0.3413%" height="15" fill="rgb(225,31,38)"/><text x="38.1340%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.23%)</title><rect x="37.9977%" y="85" width="0.2275%" height="15" fill="rgb(250,208,3)"/><text x="38.2477%" y="95.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.23%)</title><rect x="38.2253%" y="133" width="0.2275%" height="15" fill="rgb(246,54,23)"/><text x="38.4753%" y="143.50"></text></g><g><title>available_idle_cpu (1 samples, 0.11%)</title><rect x="38.3390%" y="117" width="0.1138%" height="15" fill="rgb(243,76,11)"/><text x="38.5890%" y="127.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="38.4528%" y="133" width="0.1138%" height="15" fill="rgb(245,21,50)"/><text x="38.7028%" y="143.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="38.4528%" y="117" width="0.1138%" height="15" fill="rgb(228,9,43)"/><text x="38.7028%" y="127.50"></text></g><g><title>resched_curr (1 samples, 0.11%)</title><rect x="38.4528%" y="101" width="0.1138%" height="15" fill="rgb(208,100,47)"/><text x="38.7028%" y="111.50"></text></g><g><title>__wake_up_common (22 samples, 2.50%)</title><rect x="36.1775%" y="181" width="2.5028%" height="15" fill="rgb(232,26,8)"/><text x="36.4275%" y="191.50">__..</text></g><g><title>pollwake (22 samples, 2.50%)</title><rect x="36.1775%" y="165" width="2.5028%" height="15" fill="rgb(216,166,38)"/><text x="36.4275%" y="175.50">po..</text></g><g><title>try_to_wake_up (21 samples, 2.39%)</title><rect x="36.2912%" y="149" width="2.3891%" height="15" fill="rgb(251,202,51)"/><text x="36.5412%" y="159.50">tr..</text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="38.5666%" y="133" width="0.1138%" height="15" fill="rgb(254,216,34)"/><text x="38.8166%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.23%)</title><rect x="38.6803%" y="181" width="0.2275%" height="15" fill="rgb(251,32,27)"/><text x="38.9303%" y="191.50"></text></g><g><title>sock_def_readable (26 samples, 2.96%)</title><rect x="36.0637%" y="213" width="2.9579%" height="15" fill="rgb(208,127,28)"/><text x="36.3137%" y="223.50">soc..</text></g><g><title>__wake_up_common_lock (25 samples, 2.84%)</title><rect x="36.1775%" y="197" width="2.8441%" height="15" fill="rgb(224,137,22)"/><text x="36.4275%" y="207.50">__..</text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="38.9078%" y="181" width="0.1138%" height="15" fill="rgb(254,70,32)"/><text x="39.1578%" y="191.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="38.9078%" y="165" width="0.1138%" height="15" fill="rgb(229,75,37)"/><text x="39.1578%" y="175.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="39.3629%" y="181" width="0.1138%" height="15" fill="rgb(252,64,23)"/><text x="39.6129%" y="191.50"></text></g><g><title>__kfree_skb (2 samples, 0.23%)</title><rect x="39.3629%" y="197" width="0.2275%" height="15" fill="rgb(232,162,48)"/><text x="39.6129%" y="207.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="39.4767%" y="181" width="0.1138%" height="15" fill="rgb(246,160,12)"/><text x="39.7267%" y="191.50"></text></g><g><title>bictcp_acked (1 samples, 0.11%)</title><rect x="39.5904%" y="197" width="0.1138%" height="15" fill="rgb(247,166,0)"/><text x="39.8404%" y="207.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.11%)</title><rect x="39.7042%" y="197" width="0.1138%" height="15" fill="rgb(249,219,21)"/><text x="39.9542%" y="207.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="39.8180%" y="197" width="0.1138%" height="15" fill="rgb(205,209,3)"/><text x="40.0680%" y="207.50"></text></g><g><title>rb_first (1 samples, 0.11%)</title><rect x="39.9317%" y="197" width="0.1138%" height="15" fill="rgb(243,44,1)"/><text x="40.1817%" y="207.50"></text></g><g><title>tcp_ack (10 samples, 1.14%)</title><rect x="39.0216%" y="213" width="1.1377%" height="15" fill="rgb(206,159,16)"/><text x="39.2716%" y="223.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.11%)</title><rect x="40.0455%" y="197" width="0.1138%" height="15" fill="rgb(244,77,30)"/><text x="40.2955%" y="207.50"></text></g><g><title>tcp_check_space (3 samples, 0.34%)</title><rect x="40.1593%" y="213" width="0.3413%" height="15" fill="rgb(218,69,12)"/><text x="40.4093%" y="223.50"></text></g><g><title>tcp_data_queue (2 samples, 0.23%)</title><rect x="40.5006%" y="213" width="0.2275%" height="15" fill="rgb(212,87,7)"/><text x="40.7506%" y="223.50"></text></g><g><title>sock_def_readable (2 samples, 0.23%)</title><rect x="40.5006%" y="197" width="0.2275%" height="15" fill="rgb(245,114,25)"/><text x="40.7506%" y="207.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.23%)</title><rect x="40.5006%" y="181" width="0.2275%" height="15" fill="rgb(210,61,42)"/><text x="40.7506%" y="191.50"></text></g><g><title>__wake_up_common (2 samples, 0.23%)</title><rect x="40.5006%" y="165" width="0.2275%" height="15" fill="rgb(211,52,33)"/><text x="40.7506%" y="175.50"></text></g><g><title>pollwake (2 samples, 0.23%)</title><rect x="40.5006%" y="149" width="0.2275%" height="15" fill="rgb(234,58,33)"/><text x="40.7506%" y="159.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="40.6143%" y="133" width="0.1138%" height="15" fill="rgb(220,115,36)"/><text x="40.8643%" y="143.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="40.6143%" y="117" width="0.1138%" height="15" fill="rgb(243,153,54)"/><text x="40.8643%" y="127.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.23%)</title><rect x="40.7281%" y="213" width="0.2275%" height="15" fill="rgb(251,47,18)"/><text x="40.9781%" y="223.50"></text></g><g><title>ip_local_deliver (56 samples, 6.37%)</title><rect x="34.6985%" y="309" width="6.3709%" height="15" fill="rgb(242,102,42)"/><text x="34.9485%" y="319.50">ip_local..</text></g><g><title>ip_local_deliver_finish (55 samples, 6.26%)</title><rect x="34.8123%" y="293" width="6.2571%" height="15" fill="rgb(234,31,38)"/><text x="35.0623%" y="303.50">ip_local..</text></g><g><title>ip_protocol_deliver_rcu (53 samples, 6.03%)</title><rect x="35.0398%" y="277" width="6.0296%" height="15" fill="rgb(221,117,51)"/><text x="35.2898%" y="287.50">ip_proto..</text></g><g><title>tcp_v4_rcv (52 samples, 5.92%)</title><rect x="35.1536%" y="261" width="5.9158%" height="15" fill="rgb(212,20,18)"/><text x="35.4036%" y="271.50">tcp_v4_r..</text></g><g><title>tcp_v4_do_rcv (46 samples, 5.23%)</title><rect x="35.8362%" y="245" width="5.2332%" height="15" fill="rgb(245,133,36)"/><text x="36.0862%" y="255.50">tcp_v4..</text></g><g><title>tcp_rcv_established (46 samples, 5.23%)</title><rect x="35.8362%" y="229" width="5.2332%" height="15" fill="rgb(212,6,19)"/><text x="36.0862%" y="239.50">tcp_rc..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.11%)</title><rect x="40.9556%" y="213" width="0.1138%" height="15" fill="rgb(218,1,36)"/><text x="41.2056%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (57 samples, 6.48%)</title><rect x="34.6985%" y="341" width="6.4846%" height="15" fill="rgb(246,84,54)"/><text x="34.9485%" y="351.50">__netif_..</text></g><g><title>ip_rcv (57 samples, 6.48%)</title><rect x="34.6985%" y="325" width="6.4846%" height="15" fill="rgb(242,110,6)"/><text x="34.9485%" y="335.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.11%)</title><rect x="41.0694%" y="309" width="0.1138%" height="15" fill="rgb(214,47,5)"/><text x="41.3194%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="41.1832%" y="341" width="0.1138%" height="15" fill="rgb(218,159,25)"/><text x="41.4332%" y="351.50"></text></g><g><title>ip_finish_output2 (69 samples, 7.85%)</title><rect x="33.5609%" y="453" width="7.8498%" height="15" fill="rgb(215,211,28)"/><text x="33.8109%" y="463.50">ip_finish_o..</text></g><g><title>__local_bh_enable_ip (65 samples, 7.39%)</title><rect x="34.0159%" y="437" width="7.3948%" height="15" fill="rgb(238,59,32)"/><text x="34.2659%" y="447.50">__local_bh..</text></g><g><title>do_softirq (65 samples, 7.39%)</title><rect x="34.0159%" y="421" width="7.3948%" height="15" fill="rgb(226,82,3)"/><text x="34.2659%" y="431.50">do_softirq</text></g><g><title>do_softirq_own_stack (65 samples, 7.39%)</title><rect x="34.0159%" y="405" width="7.3948%" height="15" fill="rgb(240,164,32)"/><text x="34.2659%" y="415.50">do_softirq..</text></g><g><title>__do_softirq (65 samples, 7.39%)</title><rect x="34.0159%" y="389" width="7.3948%" height="15" fill="rgb(232,46,7)"/><text x="34.2659%" y="399.50">__do_softi..</text></g><g><title>net_rx_action (60 samples, 6.83%)</title><rect x="34.5848%" y="373" width="6.8259%" height="15" fill="rgb(229,129,53)"/><text x="34.8348%" y="383.50">net_rx_ac..</text></g><g><title>process_backlog (59 samples, 6.71%)</title><rect x="34.6985%" y="357" width="6.7122%" height="15" fill="rgb(234,188,29)"/><text x="34.9485%" y="367.50">process_b..</text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="41.2969%" y="341" width="0.1138%" height="15" fill="rgb(246,141,4)"/><text x="41.5469%" y="351.50"></text></g><g><title>__ip_queue_xmit (76 samples, 8.65%)</title><rect x="32.8783%" y="485" width="8.6462%" height="15" fill="rgb(229,23,39)"/><text x="33.1283%" y="495.50">__ip_queue_x..</text></g><g><title>ip_output (73 samples, 8.30%)</title><rect x="33.2196%" y="469" width="8.3049%" height="15" fill="rgb(206,12,3)"/><text x="33.4696%" y="479.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="41.4107%" y="453" width="0.1138%" height="15" fill="rgb(252,226,20)"/><text x="41.6607%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="41.4107%" y="437" width="0.1138%" height="15" fill="rgb(216,123,35)"/><text x="41.6607%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="41.4107%" y="421" width="0.1138%" height="15" fill="rgb(212,68,40)"/><text x="41.6607%" y="431.50"></text></g><g><title>skb_clone (2 samples, 0.23%)</title><rect x="41.5245%" y="485" width="0.2275%" height="15" fill="rgb(254,125,32)"/><text x="41.7745%" y="495.50"></text></g><g><title>__copy_skb_header (1 samples, 0.11%)</title><rect x="41.6382%" y="469" width="0.1138%" height="15" fill="rgb(253,97,22)"/><text x="41.8882%" y="479.50"></text></g><g><title>__tcp_transmit_skb (79 samples, 8.99%)</title><rect x="32.8783%" y="501" width="8.9875%" height="15" fill="rgb(241,101,14)"/><text x="33.1283%" y="511.50">__tcp_transmi..</text></g><g><title>tcp_established_options (1 samples, 0.11%)</title><rect x="41.7520%" y="485" width="0.1138%" height="15" fill="rgb(238,103,29)"/><text x="42.0020%" y="495.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="41.8658%" y="501" width="0.1138%" height="15" fill="rgb(233,195,47)"/><text x="42.1158%" y="511.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.23%)</title><rect x="41.9795%" y="501" width="0.2275%" height="15" fill="rgb(246,218,30)"/><text x="42.2295%" y="511.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="42.0933%" y="485" width="0.1138%" height="15" fill="rgb(219,145,47)"/><text x="42.3433%" y="495.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="42.0933%" y="469" width="0.1138%" height="15" fill="rgb(243,12,26)"/><text x="42.3433%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (84 samples, 9.56%)</title><rect x="32.7645%" y="533" width="9.5563%" height="15" fill="rgb(214,87,16)"/><text x="33.0145%" y="543.50">__tcp_push_pen..</text></g><g><title>tcp_write_xmit (84 samples, 9.56%)</title><rect x="32.7645%" y="517" width="9.5563%" height="15" fill="rgb(208,99,42)"/><text x="33.0145%" y="527.50">tcp_write_xmit</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="42.2071%" y="501" width="0.1138%" height="15" fill="rgb(253,99,2)"/><text x="42.4571%" y="511.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="42.2071%" y="485" width="0.1138%" height="15" fill="rgb(220,168,23)"/><text x="42.4571%" y="495.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="42.2071%" y="469" width="0.1138%" height="15" fill="rgb(242,38,24)"/><text x="42.4571%" y="479.50"></text></g><g><title>sk_page_frag_refill (3 samples, 0.34%)</title><rect x="42.3208%" y="533" width="0.3413%" height="15" fill="rgb(225,182,9)"/><text x="42.5708%" y="543.50"></text></g><g><title>skb_page_frag_refill (3 samples, 0.34%)</title><rect x="42.3208%" y="517" width="0.3413%" height="15" fill="rgb(243,178,37)"/><text x="42.5708%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.23%)</title><rect x="42.6621%" y="533" width="0.2275%" height="15" fill="rgb(232,139,19)"/><text x="42.9121%" y="543.50"></text></g><g><title>__alloc_skb (2 samples, 0.23%)</title><rect x="42.6621%" y="517" width="0.2275%" height="15" fill="rgb(225,201,24)"/><text x="42.9121%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="42.7759%" y="501" width="0.1138%" height="15" fill="rgb(221,47,46)"/><text x="43.0259%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.34%)</title><rect x="42.8896%" y="533" width="0.3413%" height="15" fill="rgb(249,23,13)"/><text x="43.1396%" y="543.50"></text></g><g><title>_copy_from_iter_full (3 samples, 0.34%)</title><rect x="42.8896%" y="517" width="0.3413%" height="15" fill="rgb(219,9,5)"/><text x="43.1396%" y="527.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 0.23%)</title><rect x="43.0034%" y="501" width="0.2275%" height="15" fill="rgb(254,171,16)"/><text x="43.2534%" y="511.50"></text></g><g><title>sock_sendmsg (100 samples, 11.38%)</title><rect x="32.1957%" y="581" width="11.3766%" height="15" fill="rgb(230,171,20)"/><text x="32.4457%" y="591.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (99 samples, 11.26%)</title><rect x="32.3094%" y="565" width="11.2628%" height="15" fill="rgb(210,71,41)"/><text x="32.5594%" y="575.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (98 samples, 11.15%)</title><rect x="32.4232%" y="549" width="11.1490%" height="15" fill="rgb(206,173,20)"/><text x="32.6732%" y="559.50">tcp_sendmsg_lock..</text></g><g><title>tcp_send_mss (3 samples, 0.34%)</title><rect x="43.2309%" y="533" width="0.3413%" height="15" fill="rgb(233,88,34)"/><text x="43.4809%" y="543.50"></text></g><g><title>tcp_current_mss (3 samples, 0.34%)</title><rect x="43.2309%" y="517" width="0.3413%" height="15" fill="rgb(223,209,46)"/><text x="43.4809%" y="527.50"></text></g><g><title>ipv4_mtu (2 samples, 0.23%)</title><rect x="43.3447%" y="501" width="0.2275%" height="15" fill="rgb(250,43,18)"/><text x="43.5947%" y="511.50"></text></g><g><title>__fdget (1 samples, 0.11%)</title><rect x="43.5722%" y="565" width="0.1138%" height="15" fill="rgb(208,13,10)"/><text x="43.8222%" y="575.50"></text></g><g><title>__x64_sys_sendto (105 samples, 11.95%)</title><rect x="31.8544%" y="613" width="11.9454%" height="15" fill="rgb(212,200,36)"/><text x="32.1044%" y="623.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (104 samples, 11.83%)</title><rect x="31.9681%" y="597" width="11.8316%" height="15" fill="rgb(225,90,30)"/><text x="32.2181%" y="607.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.23%)</title><rect x="43.5722%" y="581" width="0.2275%" height="15" fill="rgb(236,182,39)"/><text x="43.8222%" y="591.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="43.6860%" y="565" width="0.1138%" height="15" fill="rgb(212,144,35)"/><text x="43.9360%" y="575.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="43.7998%" y="613" width="0.1138%" height="15" fill="rgb(228,63,44)"/><text x="44.0498%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="43.7998%" y="597" width="0.1138%" height="15" fill="rgb(228,109,6)"/><text x="44.0498%" y="607.50"></text></g><g><title>do_syscall_64 (109 samples, 12.40%)</title><rect x="31.8544%" y="629" width="12.4005%" height="15" fill="rgb(238,117,24)"/><text x="32.1044%" y="639.50">do_syscall_64</text></g><g><title>syscall_trace_enter (3 samples, 0.34%)</title><rect x="43.9135%" y="613" width="0.3413%" height="15" fill="rgb(242,26,26)"/><text x="44.1635%" y="623.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.23%)</title><rect x="44.0273%" y="597" width="0.2275%" height="15" fill="rgb(221,92,48)"/><text x="44.2773%" y="607.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (274 samples, 31.17%)</title><rect x="14.1069%" y="757" width="31.1718%" height="15" fill="rgb(209,209,32)"/><text x="14.3569%" y="767.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query</text></g><g><title>mysql::conn::Conn::_query (209 samples, 23.78%)</title><rect x="21.5017%" y="741" width="23.7770%" height="15" fill="rgb(221,70,22)"/><text x="21.7517%" y="751.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (124 samples, 14.11%)</title><rect x="31.1718%" y="725" width="14.1069%" height="15" fill="rgb(248,145,5)"/><text x="31.4218%" y="735.50">mysql_common::proto::..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (121 samples, 13.77%)</title><rect x="31.5131%" y="709" width="13.7656%" height="15" fill="rgb(226,116,26)"/><text x="31.7631%" y="719.50">std::io::buffered::Bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (120 samples, 13.65%)</title><rect x="31.6268%" y="693" width="13.6519%" height="15" fill="rgb(244,5,17)"/><text x="31.8768%" y="703.50">&lt;std::net::tcp::TcpSt..</text></g><g><title>std::sys_common::net::TcpStream::write (120 samples, 13.65%)</title><rect x="31.6268%" y="677" width="13.6519%" height="15" fill="rgb(252,159,33)"/><text x="31.8768%" y="687.50">std::sys_common::net:..</text></g><g><title>__libc_send (120 samples, 13.65%)</title><rect x="31.6268%" y="661" width="13.6519%" height="15" fill="rgb(206,71,0)"/><text x="31.8768%" y="671.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (119 samples, 13.54%)</title><rect x="31.7406%" y="645" width="13.5381%" height="15" fill="rgb(233,118,54)"/><text x="31.9906%" y="655.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (9 samples, 1.02%)</title><rect x="44.2548%" y="629" width="1.0239%" height="15" fill="rgb(234,83,48)"/><text x="44.5048%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="45.2787%" y="757" width="0.1138%" height="15" fill="rgb(228,3,54)"/><text x="45.5287%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="45.2787%" y="741" width="0.1138%" height="15" fill="rgb(226,155,13)"/><text x="45.5287%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="45.2787%" y="725" width="0.1138%" height="15" fill="rgb(241,28,37)"/><text x="45.5287%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="45.2787%" y="709" width="0.1138%" height="15" fill="rgb(233,93,10)"/><text x="45.5287%" y="719.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="45.2787%" y="693" width="0.1138%" height="15" fill="rgb(225,113,19)"/><text x="45.5287%" y="703.50"></text></g><g><title>__GI_munmap (1 samples, 0.11%)</title><rect x="45.2787%" y="677" width="0.1138%" height="15" fill="rgb(241,2,18)"/><text x="45.5287%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="45.2787%" y="661" width="0.1138%" height="15" fill="rgb(228,207,21)"/><text x="45.5287%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="45.2787%" y="645" width="0.1138%" height="15" fill="rgb(213,211,35)"/><text x="45.5287%" y="655.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.11%)</title><rect x="45.2787%" y="629" width="0.1138%" height="15" fill="rgb(209,83,10)"/><text x="45.5287%" y="639.50"></text></g><g><title>__vm_munmap (1 samples, 0.11%)</title><rect x="45.2787%" y="613" width="0.1138%" height="15" fill="rgb(209,164,1)"/><text x="45.5287%" y="623.50"></text></g><g><title>__do_munmap (1 samples, 0.11%)</title><rect x="45.2787%" y="597" width="0.1138%" height="15" fill="rgb(213,184,43)"/><text x="45.5287%" y="607.50"></text></g><g><title>unmap_region (1 samples, 0.11%)</title><rect x="45.2787%" y="581" width="0.1138%" height="15" fill="rgb(231,61,34)"/><text x="45.5287%" y="591.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.11%)</title><rect x="45.2787%" y="565" width="0.1138%" height="15" fill="rgb(235,75,3)"/><text x="45.5287%" y="575.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.11%)</title><rect x="45.2787%" y="549" width="0.1138%" height="15" fill="rgb(220,106,47)"/><text x="45.5287%" y="559.50"></text></g><g><title>smp_call_function_single (1 samples, 0.11%)</title><rect x="45.2787%" y="533" width="0.1138%" height="15" fill="rgb(210,196,33)"/><text x="45.5287%" y="543.50"></text></g><g><title>msql_srv::commands::parse (1 samples, 0.11%)</title><rect x="45.3925%" y="757" width="0.1138%" height="15" fill="rgb(229,154,42)"/><text x="45.6425%" y="767.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.11%)</title><rect x="45.3925%" y="741" width="0.1138%" height="15" fill="rgb(228,114,26)"/><text x="45.6425%" y="751.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="45.7338%" y="645" width="0.1138%" height="15" fill="rgb(208,144,1)"/><text x="45.9838%" y="655.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="45.8476%" y="645" width="0.1138%" height="15" fill="rgb(239,112,37)"/><text x="46.0976%" y="655.50"></text></g><g><title>__kfree_skb (2 samples, 0.23%)</title><rect x="46.0751%" y="549" width="0.2275%" height="15" fill="rgb(210,96,50)"/><text x="46.3251%" y="559.50"></text></g><g><title>skb_release_head_state (2 samples, 0.23%)</title><rect x="46.0751%" y="533" width="0.2275%" height="15" fill="rgb(222,178,2)"/><text x="46.3251%" y="543.50"></text></g><g><title>dst_release (2 samples, 0.23%)</title><rect x="46.0751%" y="517" width="0.2275%" height="15" fill="rgb(226,74,18)"/><text x="46.3251%" y="527.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.34%)</title><rect x="46.8714%" y="389" width="0.3413%" height="15" fill="rgb(225,67,54)"/><text x="47.1214%" y="399.50"></text></g><g><title>ip_rcv (3 samples, 0.34%)</title><rect x="46.8714%" y="373" width="0.3413%" height="15" fill="rgb(251,92,32)"/><text x="47.1214%" y="383.50"></text></g><g><title>ip_local_deliver (3 samples, 0.34%)</title><rect x="46.8714%" y="357" width="0.3413%" height="15" fill="rgb(228,149,22)"/><text x="47.1214%" y="367.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.34%)</title><rect x="46.8714%" y="341" width="0.3413%" height="15" fill="rgb(243,54,13)"/><text x="47.1214%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.34%)</title><rect x="46.8714%" y="325" width="0.3413%" height="15" fill="rgb(243,180,28)"/><text x="47.1214%" y="335.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.34%)</title><rect x="46.8714%" y="309" width="0.3413%" height="15" fill="rgb(208,167,24)"/><text x="47.1214%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.34%)</title><rect x="46.8714%" y="293" width="0.3413%" height="15" fill="rgb(245,73,45)"/><text x="47.1214%" y="303.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.34%)</title><rect x="46.8714%" y="277" width="0.3413%" height="15" fill="rgb(237,203,48)"/><text x="47.1214%" y="287.50"></text></g><g><title>tcp_ack (2 samples, 0.23%)</title><rect x="46.9852%" y="261" width="0.2275%" height="15" fill="rgb(211,197,16)"/><text x="47.2352%" y="271.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="47.0990%" y="245" width="0.1138%" height="15" fill="rgb(243,99,51)"/><text x="47.3490%" y="255.50"></text></g><g><title>cache_from_obj (1 samples, 0.11%)</title><rect x="47.0990%" y="229" width="0.1138%" height="15" fill="rgb(215,123,29)"/><text x="47.3490%" y="239.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 1.02%)</title><rect x="46.3026%" y="549" width="1.0239%" height="15" fill="rgb(239,186,37)"/><text x="46.5526%" y="559.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.91%)</title><rect x="46.4164%" y="533" width="0.9101%" height="15" fill="rgb(252,136,39)"/><text x="46.6664%" y="543.50"></text></g><g><title>ip_output (8 samples, 0.91%)</title><rect x="46.4164%" y="517" width="0.9101%" height="15" fill="rgb(223,213,32)"/><text x="46.6664%" y="527.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.68%)</title><rect x="46.6439%" y="501" width="0.6826%" height="15" fill="rgb(233,115,5)"/><text x="46.8939%" y="511.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.57%)</title><rect x="46.7577%" y="485" width="0.5688%" height="15" fill="rgb(207,226,44)"/><text x="47.0077%" y="495.50"></text></g><g><title>do_softirq (4 samples, 0.46%)</title><rect x="46.8714%" y="469" width="0.4551%" height="15" fill="rgb(208,126,0)"/><text x="47.1214%" y="479.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.46%)</title><rect x="46.8714%" y="453" width="0.4551%" height="15" fill="rgb(244,66,21)"/><text x="47.1214%" y="463.50"></text></g><g><title>__do_softirq (4 samples, 0.46%)</title><rect x="46.8714%" y="437" width="0.4551%" height="15" fill="rgb(222,97,12)"/><text x="47.1214%" y="447.50"></text></g><g><title>net_rx_action (4 samples, 0.46%)</title><rect x="46.8714%" y="421" width="0.4551%" height="15" fill="rgb(219,213,19)"/><text x="47.1214%" y="431.50"></text></g><g><title>process_backlog (4 samples, 0.46%)</title><rect x="46.8714%" y="405" width="0.4551%" height="15" fill="rgb(252,169,30)"/><text x="47.1214%" y="415.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="47.2127%" y="389" width="0.1138%" height="15" fill="rgb(206,32,51)"/><text x="47.4627%" y="399.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="47.2127%" y="373" width="0.1138%" height="15" fill="rgb(250,172,42)"/><text x="47.4627%" y="383.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.23%)</title><rect x="47.4403%" y="533" width="0.2275%" height="15" fill="rgb(209,34,43)"/><text x="47.6903%" y="543.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.23%)</title><rect x="47.6678%" y="533" width="0.2275%" height="15" fill="rgb(223,11,35)"/><text x="47.9178%" y="543.50"></text></g><g><title>preempt_count_sub (2 samples, 0.23%)</title><rect x="47.6678%" y="517" width="0.2275%" height="15" fill="rgb(251,219,26)"/><text x="47.9178%" y="527.50"></text></g><g><title>add_wait_queue (1 samples, 0.11%)</title><rect x="47.8953%" y="533" width="0.1138%" height="15" fill="rgb(231,119,3)"/><text x="48.1453%" y="543.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="47.8953%" y="517" width="0.1138%" height="15" fill="rgb(216,97,11)"/><text x="48.1453%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="47.8953%" y="501" width="0.1138%" height="15" fill="rgb(223,59,9)"/><text x="48.1453%" y="511.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="48.5779%" y="453" width="0.1138%" height="15" fill="rgb(233,93,31)"/><text x="48.8279%" y="463.50"></text></g><g><title>intel_pmu_disable_all (2 samples, 0.23%)</title><rect x="48.6917%" y="437" width="0.2275%" height="15" fill="rgb(239,81,33)"/><text x="48.9417%" y="447.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.46%)</title><rect x="48.5779%" y="469" width="0.4551%" height="15" fill="rgb(213,120,34)"/><text x="48.8279%" y="479.50"></text></g><g><title>ctx_sched_out (3 samples, 0.34%)</title><rect x="48.6917%" y="453" width="0.3413%" height="15" fill="rgb(243,49,53)"/><text x="48.9417%" y="463.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="48.9192%" y="437" width="0.1138%" height="15" fill="rgb(247,216,33)"/><text x="49.1692%" y="447.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.23%)</title><rect x="49.0330%" y="469" width="0.2275%" height="15" fill="rgb(226,26,14)"/><text x="49.2830%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.11%)</title><rect x="49.3743%" y="437" width="0.1138%" height="15" fill="rgb(215,49,53)"/><text x="49.6243%" y="447.50"></text></g><g><title>__calc_delta (1 samples, 0.11%)</title><rect x="49.3743%" y="421" width="0.1138%" height="15" fill="rgb(245,162,40)"/><text x="49.6243%" y="431.50"></text></g><g><title>dequeue_entity (5 samples, 0.57%)</title><rect x="49.2605%" y="453" width="0.5688%" height="15" fill="rgb(229,68,17)"/><text x="49.5105%" y="463.50"></text></g><g><title>update_load_avg (3 samples, 0.34%)</title><rect x="49.4881%" y="437" width="0.3413%" height="15" fill="rgb(213,182,10)"/><text x="49.7381%" y="447.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.34%)</title><rect x="49.4881%" y="421" width="0.3413%" height="15" fill="rgb(245,125,30)"/><text x="49.7381%" y="431.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.68%)</title><rect x="49.2605%" y="469" width="0.6826%" height="15" fill="rgb(232,202,2)"/><text x="49.5105%" y="479.50"></text></g><g><title>update_min_vruntime (1 samples, 0.11%)</title><rect x="49.8294%" y="453" width="0.1138%" height="15" fill="rgb(237,140,51)"/><text x="50.0794%" y="463.50"></text></g><g><title>finish_task_switch (2 samples, 0.23%)</title><rect x="49.9431%" y="469" width="0.2275%" height="15" fill="rgb(236,157,25)"/><text x="50.1931%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="50.0569%" y="453" width="0.1138%" height="15" fill="rgb(219,209,0)"/><text x="50.3069%" y="463.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.11%)</title><rect x="50.0569%" y="437" width="0.1138%" height="15" fill="rgb(240,116,54)"/><text x="50.3069%" y="447.50"></text></g><g><title>native_write_msr (1 samples, 0.11%)</title><rect x="50.0569%" y="421" width="0.1138%" height="15" fill="rgb(216,10,36)"/><text x="50.3069%" y="431.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.34%)</title><rect x="50.1706%" y="469" width="0.3413%" height="15" fill="rgb(222,72,44)"/><text x="50.4206%" y="479.50"></text></g><g><title>newidle_balance (1 samples, 0.11%)</title><rect x="50.3982%" y="453" width="0.1138%" height="15" fill="rgb(232,159,9)"/><text x="50.6482%" y="463.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.23%)</title><rect x="50.5119%" y="469" width="0.2275%" height="15" fill="rgb(210,39,32)"/><text x="50.7619%" y="479.50"></text></g><g><title>__update_idle_core (2 samples, 0.23%)</title><rect x="50.5119%" y="453" width="0.2275%" height="15" fill="rgb(216,194,45)"/><text x="50.7619%" y="463.50"></text></g><g><title>psi_task_change (2 samples, 0.23%)</title><rect x="50.7395%" y="469" width="0.2275%" height="15" fill="rgb(218,18,35)"/><text x="50.9895%" y="479.50"></text></g><g><title>psi_group_change (2 samples, 0.23%)</title><rect x="50.7395%" y="453" width="0.2275%" height="15" fill="rgb(207,83,51)"/><text x="50.9895%" y="463.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="50.9670%" y="469" width="0.1138%" height="15" fill="rgb(225,63,43)"/><text x="51.2170%" y="479.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.23%)</title><rect x="51.0808%" y="469" width="0.2275%" height="15" fill="rgb(207,57,36)"/><text x="51.3308%" y="479.50"></text></g><g><title>__schedule (28 samples, 3.19%)</title><rect x="48.3504%" y="485" width="3.1854%" height="15" fill="rgb(216,99,33)"/><text x="48.6004%" y="495.50">__s..</text></g><g><title>update_rq_clock (2 samples, 0.23%)</title><rect x="51.3083%" y="469" width="0.2275%" height="15" fill="rgb(225,42,16)"/><text x="51.5583%" y="479.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.23%)</title><rect x="51.3083%" y="453" width="0.2275%" height="15" fill="rgb(220,201,45)"/><text x="51.5583%" y="463.50"></text></g><g><title>sk_wait_data (38 samples, 4.32%)</title><rect x="47.3265%" y="549" width="4.3231%" height="15" fill="rgb(225,33,4)"/><text x="47.5765%" y="559.50">sk_wa..</text></g><g><title>wait_woken (32 samples, 3.64%)</title><rect x="48.0091%" y="533" width="3.6405%" height="15" fill="rgb(224,33,50)"/><text x="48.2591%" y="543.50">wait..</text></g><g><title>schedule_timeout (29 samples, 3.30%)</title><rect x="48.3504%" y="517" width="3.2992%" height="15" fill="rgb(246,198,51)"/><text x="48.6004%" y="527.50">sch..</text></g><g><title>schedule (29 samples, 3.30%)</title><rect x="48.3504%" y="501" width="3.2992%" height="15" fill="rgb(205,22,4)"/><text x="48.6004%" y="511.50">sch..</text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="51.5358%" y="485" width="0.1138%" height="15" fill="rgb(206,3,8)"/><text x="51.7858%" y="495.50"></text></g><g><title>_copy_to_iter (1 samples, 0.11%)</title><rect x="51.7634%" y="517" width="0.1138%" height="15" fill="rgb(251,23,15)"/><text x="52.0134%" y="527.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.34%)</title><rect x="51.6496%" y="549" width="0.3413%" height="15" fill="rgb(252,88,28)"/><text x="51.8996%" y="559.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.34%)</title><rect x="51.6496%" y="533" width="0.3413%" height="15" fill="rgb(212,127,14)"/><text x="51.8996%" y="543.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="51.8771%" y="517" width="0.1138%" height="15" fill="rgb(247,145,37)"/><text x="52.1271%" y="527.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="51.8771%" y="501" width="0.1138%" height="15" fill="rgb(209,117,53)"/><text x="52.1271%" y="511.50"></text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="51.9909%" y="549" width="0.1138%" height="15" fill="rgb(212,90,42)"/><text x="52.2409%" y="559.50"></text></g><g><title>inet_recvmsg (54 samples, 6.14%)</title><rect x="46.0751%" y="581" width="6.1433%" height="15" fill="rgb(218,164,37)"/><text x="46.3251%" y="591.50">inet_rec..</text></g><g><title>tcp_recvmsg (54 samples, 6.14%)</title><rect x="46.0751%" y="565" width="6.1433%" height="15" fill="rgb(246,65,34)"/><text x="46.3251%" y="575.50">tcp_recv..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.11%)</title><rect x="52.1047%" y="549" width="0.1138%" height="15" fill="rgb(231,100,33)"/><text x="52.3547%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (55 samples, 6.26%)</title><rect x="46.0751%" y="613" width="6.2571%" height="15" fill="rgb(228,126,14)"/><text x="46.3251%" y="623.50">__x64_sy..</text></g><g><title>__sys_recvfrom (55 samples, 6.26%)</title><rect x="46.0751%" y="597" width="6.2571%" height="15" fill="rgb(215,173,21)"/><text x="46.3251%" y="607.50">__sys_re..</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="52.2184%" y="581" width="0.1138%" height="15" fill="rgb(210,6,40)"/><text x="52.4684%" y="591.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="52.2184%" y="565" width="0.1138%" height="15" fill="rgb(212,48,18)"/><text x="52.4684%" y="575.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="52.2184%" y="549" width="0.1138%" height="15" fill="rgb(230,214,11)"/><text x="52.4684%" y="559.50"></text></g><g><title>do_syscall_64 (57 samples, 6.48%)</title><rect x="45.9613%" y="629" width="6.4846%" height="15" fill="rgb(254,105,39)"/><text x="46.2113%" y="639.50">do_sysca..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="52.3322%" y="613" width="0.1138%" height="15" fill="rgb(245,158,5)"/><text x="52.5822%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (58 samples, 6.60%)</title><rect x="45.9613%" y="645" width="6.5984%" height="15" fill="rgb(249,208,11)"/><text x="46.2113%" y="655.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="52.4460%" y="629" width="0.1138%" height="15" fill="rgb(210,39,28)"/><text x="52.6960%" y="639.50"></text></g><g><title>__libc_recv (61 samples, 6.94%)</title><rect x="45.7338%" y="661" width="6.9397%" height="15" fill="rgb(211,56,53)"/><text x="45.9838%" y="671.50">__libc_re..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="52.5597%" y="645" width="0.1138%" height="15" fill="rgb(226,201,30)"/><text x="52.8097%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (63 samples, 7.17%)</title><rect x="45.6200%" y="741" width="7.1672%" height="15" fill="rgb(239,101,34)"/><text x="45.8700%" y="751.50">&lt;std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (62 samples, 7.05%)</title><rect x="45.7338%" y="725" width="7.0535%" height="15" fill="rgb(226,209,5)"/><text x="45.9838%" y="735.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (62 samples, 7.05%)</title><rect x="45.7338%" y="709" width="7.0535%" height="15" fill="rgb(250,105,47)"/><text x="45.9838%" y="719.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (62 samples, 7.05%)</title><rect x="45.7338%" y="693" width="7.0535%" height="15" fill="rgb(230,72,3)"/><text x="45.9838%" y="703.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (62 samples, 7.05%)</title><rect x="45.7338%" y="677" width="7.0535%" height="15" fill="rgb(232,218,39)"/><text x="45.9838%" y="687.50">std::sys:..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.11%)</title><rect x="52.6735%" y="661" width="0.1138%" height="15" fill="rgb(248,166,6)"/><text x="52.9235%" y="671.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.11%)</title><rect x="52.6735%" y="645" width="0.1138%" height="15" fill="rgb(247,89,20)"/><text x="52.9235%" y="655.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.11%)</title><rect x="52.7873%" y="741" width="0.1138%" height="15" fill="rgb(248,130,54)"/><text x="53.0373%" y="751.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.11%)</title><rect x="52.9010%" y="741" width="0.1138%" height="15" fill="rgb(234,196,4)"/><text x="53.1510%" y="751.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (67 samples, 7.62%)</title><rect x="45.5063%" y="757" width="7.6223%" height="15" fill="rgb(250,143,31)"/><text x="45.7563%" y="767.50">msql_srv::..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.11%)</title><rect x="53.0148%" y="741" width="0.1138%" height="15" fill="rgb(211,110,34)"/><text x="53.2648%" y="751.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="53.2423%" y="693" width="0.1138%" height="15" fill="rgb(215,124,48)"/><text x="53.4923%" y="703.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="53.5836%" y="597" width="0.1138%" height="15" fill="rgb(216,46,13)"/><text x="53.8336%" y="607.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="53.5836%" y="581" width="0.1138%" height="15" fill="rgb(205,184,25)"/><text x="53.8336%" y="591.50"></text></g><g><title>lock_sock_nested (2 samples, 0.23%)</title><rect x="53.6974%" y="597" width="0.2275%" height="15" fill="rgb(228,1,10)"/><text x="53.9474%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.23%)</title><rect x="53.6974%" y="581" width="0.2275%" height="15" fill="rgb(213,116,27)"/><text x="53.9474%" y="591.50"></text></g><g><title>release_sock (3 samples, 0.34%)</title><rect x="53.9249%" y="597" width="0.3413%" height="15" fill="rgb(241,95,50)"/><text x="54.1749%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.23%)</title><rect x="54.0387%" y="581" width="0.2275%" height="15" fill="rgb(238,48,32)"/><text x="54.2887%" y="591.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="54.1524%" y="565" width="0.1138%" height="15" fill="rgb(235,113,49)"/><text x="54.4024%" y="575.50"></text></g><g><title>__sk_dst_check (2 samples, 0.23%)</title><rect x="55.5176%" y="517" width="0.2275%" height="15" fill="rgb(205,127,43)"/><text x="55.7676%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="56.8828%" y="469" width="0.1138%" height="15" fill="rgb(250,162,2)"/><text x="57.1328%" y="479.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="57.5654%" y="405" width="0.1138%" height="15" fill="rgb(220,13,41)"/><text x="57.8154%" y="415.50"></text></g><g><title>netif_rx (5 samples, 0.57%)</title><rect x="57.2241%" y="437" width="0.5688%" height="15" fill="rgb(249,221,25)"/><text x="57.4741%" y="447.50"></text></g><g><title>netif_rx_internal (5 samples, 0.57%)</title><rect x="57.2241%" y="421" width="0.5688%" height="15" fill="rgb(215,208,19)"/><text x="57.4741%" y="431.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.11%)</title><rect x="57.6792%" y="405" width="0.1138%" height="15" fill="rgb(236,175,2)"/><text x="57.9292%" y="415.50"></text></g><g><title>dev_hard_start_xmit (9 samples, 1.02%)</title><rect x="56.9966%" y="469" width="1.0239%" height="15" fill="rgb(241,52,2)"/><text x="57.2466%" y="479.50"></text></g><g><title>loopback_xmit (8 samples, 0.91%)</title><rect x="57.1104%" y="453" width="0.9101%" height="15" fill="rgb(248,140,14)"/><text x="57.3604%" y="463.50"></text></g><g><title>tcp_wfree (2 samples, 0.23%)</title><rect x="57.7929%" y="437" width="0.2275%" height="15" fill="rgb(253,22,42)"/><text x="58.0429%" y="447.50"></text></g><g><title>__dev_queue_xmit (15 samples, 1.71%)</title><rect x="56.6553%" y="485" width="1.7065%" height="15" fill="rgb(234,61,47)"/><text x="56.9053%" y="495.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.34%)</title><rect x="58.0205%" y="469" width="0.3413%" height="15" fill="rgb(208,226,15)"/><text x="58.2705%" y="479.50"></text></g><g><title>netif_skb_features (2 samples, 0.23%)</title><rect x="58.1342%" y="453" width="0.2275%" height="15" fill="rgb(217,221,4)"/><text x="58.3842%" y="463.50"></text></g><g><title>skb_network_protocol (2 samples, 0.23%)</title><rect x="58.1342%" y="437" width="0.2275%" height="15" fill="rgb(212,174,34)"/><text x="58.3842%" y="447.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="58.3618%" y="453" width="0.1138%" height="15" fill="rgb(253,83,4)"/><text x="58.6118%" y="463.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="58.7031%" y="325" width="0.1138%" height="15" fill="rgb(250,195,49)"/><text x="58.9531%" y="335.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.23%)</title><rect x="59.1581%" y="293" width="0.2275%" height="15" fill="rgb(241,192,25)"/><text x="59.4081%" y="303.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="59.6132%" y="261" width="0.1138%" height="15" fill="rgb(208,124,10)"/><text x="59.8632%" y="271.50"></text></g><g><title>mod_timer (1 samples, 0.11%)</title><rect x="59.6132%" y="245" width="0.1138%" height="15" fill="rgb(222,33,0)"/><text x="59.8632%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="60.4096%" y="197" width="0.1138%" height="15" fill="rgb(234,209,28)"/><text x="60.6596%" y="207.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="60.4096%" y="181" width="0.1138%" height="15" fill="rgb(224,11,23)"/><text x="60.6596%" y="191.50"></text></g><g><title>enqueue_task (5 samples, 0.57%)</title><rect x="60.5233%" y="197" width="0.5688%" height="15" fill="rgb(232,99,1)"/><text x="60.7733%" y="207.50"></text></g><g><title>psi_task_change (5 samples, 0.57%)</title><rect x="60.5233%" y="181" width="0.5688%" height="15" fill="rgb(237,95,45)"/><text x="60.7733%" y="191.50"></text></g><g><title>psi_group_change (3 samples, 0.34%)</title><rect x="60.7509%" y="165" width="0.3413%" height="15" fill="rgb(208,109,11)"/><text x="61.0009%" y="175.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.23%)</title><rect x="61.7747%" y="149" width="0.2275%" height="15" fill="rgb(216,190,48)"/><text x="62.0247%" y="159.50"></text></g><g><title>enqueue_task_fair (9 samples, 1.02%)</title><rect x="61.0922%" y="197" width="1.0239%" height="15" fill="rgb(251,171,36)"/><text x="61.3422%" y="207.50"></text></g><g><title>enqueue_entity (9 samples, 1.02%)</title><rect x="61.0922%" y="181" width="1.0239%" height="15" fill="rgb(230,62,22)"/><text x="61.3422%" y="191.50"></text></g><g><title>update_load_avg (3 samples, 0.34%)</title><rect x="61.7747%" y="165" width="0.3413%" height="15" fill="rgb(225,114,35)"/><text x="62.0247%" y="175.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="62.0023%" y="149" width="0.1138%" height="15" fill="rgb(215,118,42)"/><text x="62.2523%" y="159.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.23%)</title><rect x="62.1160%" y="197" width="0.2275%" height="15" fill="rgb(243,119,21)"/><text x="62.3660%" y="207.50"></text></g><g><title>check_preempt_curr (2 samples, 0.23%)</title><rect x="62.1160%" y="181" width="0.2275%" height="15" fill="rgb(252,177,53)"/><text x="62.3660%" y="191.50"></text></g><g><title>resched_curr (2 samples, 0.23%)</title><rect x="62.1160%" y="165" width="0.2275%" height="15" fill="rgb(237,209,29)"/><text x="62.3660%" y="175.50"></text></g><g><title>sock_def_readable (24 samples, 2.73%)</title><rect x="59.7270%" y="261" width="2.7304%" height="15" fill="rgb(212,65,23)"/><text x="59.9770%" y="271.50">so..</text></g><g><title>__wake_up_common_lock (22 samples, 2.50%)</title><rect x="59.9545%" y="245" width="2.5028%" height="15" fill="rgb(230,222,46)"/><text x="60.2045%" y="255.50">__..</text></g><g><title>__wake_up_common (22 samples, 2.50%)</title><rect x="59.9545%" y="229" width="2.5028%" height="15" fill="rgb(215,135,32)"/><text x="60.2045%" y="239.50">__..</text></g><g><title>try_to_wake_up (20 samples, 2.28%)</title><rect x="60.1820%" y="213" width="2.2753%" height="15" fill="rgb(246,101,22)"/><text x="60.4320%" y="223.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="62.3436%" y="197" width="0.1138%" height="15" fill="rgb(206,107,13)"/><text x="62.5936%" y="207.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="62.3436%" y="181" width="0.1138%" height="15" fill="rgb(250,100,44)"/><text x="62.5936%" y="191.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="62.3436%" y="165" width="0.1138%" height="15" fill="rgb(231,147,38)"/><text x="62.5936%" y="175.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="62.3436%" y="149" width="0.1138%" height="15" fill="rgb(229,8,40)"/><text x="62.5936%" y="159.50"></text></g><g><title>kfree (2 samples, 0.23%)</title><rect x="62.5711%" y="229" width="0.2275%" height="15" fill="rgb(221,135,30)"/><text x="62.8211%" y="239.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="62.6849%" y="213" width="0.1138%" height="15" fill="rgb(249,193,18)"/><text x="62.9349%" y="223.50"></text></g><g><title>__kfree_skb (6 samples, 0.68%)</title><rect x="62.4573%" y="245" width="0.6826%" height="15" fill="rgb(209,133,39)"/><text x="62.7073%" y="255.50"></text></g><g><title>skb_release_data (3 samples, 0.34%)</title><rect x="62.7986%" y="229" width="0.3413%" height="15" fill="rgb(232,100,14)"/><text x="63.0486%" y="239.50"></text></g><g><title>bictcp_acked (1 samples, 0.11%)</title><rect x="63.1399%" y="245" width="0.1138%" height="15" fill="rgb(224,185,1)"/><text x="63.3899%" y="255.50"></text></g><g><title>bictcp_cong_avoid (2 samples, 0.23%)</title><rect x="63.2537%" y="245" width="0.2275%" height="15" fill="rgb(223,139,8)"/><text x="63.5037%" y="255.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.11%)</title><rect x="63.4812%" y="245" width="0.1138%" height="15" fill="rgb(232,213,38)"/><text x="63.7312%" y="255.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="63.5950%" y="245" width="0.1138%" height="15" fill="rgb(207,94,22)"/><text x="63.8450%" y="255.50"></text></g><g><title>tcp_ack (12 samples, 1.37%)</title><rect x="62.4573%" y="261" width="1.3652%" height="15" fill="rgb(219,183,54)"/><text x="62.7073%" y="271.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="63.7088%" y="245" width="0.1138%" height="15" fill="rgb(216,185,54)"/><text x="63.9588%" y="255.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.11%)</title><rect x="63.8225%" y="261" width="0.1138%" height="15" fill="rgb(254,217,39)"/><text x="64.0725%" y="271.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.11%)</title><rect x="63.9363%" y="261" width="0.1138%" height="15" fill="rgb(240,178,23)"/><text x="64.1863%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (42 samples, 4.78%)</title><rect x="59.3857%" y="293" width="4.7782%" height="15" fill="rgb(218,11,47)"/><text x="59.6357%" y="303.50">tcp_v4..</text></g><g><title>tcp_rcv_established (41 samples, 4.66%)</title><rect x="59.4994%" y="277" width="4.6644%" height="15" fill="rgb(218,51,51)"/><text x="59.7494%" y="287.50">tcp_r..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.11%)</title><rect x="64.0501%" y="261" width="0.1138%" height="15" fill="rgb(238,126,27)"/><text x="64.3001%" y="271.50"></text></g><g><title>ip_local_deliver (49 samples, 5.57%)</title><rect x="58.7031%" y="357" width="5.5745%" height="15" fill="rgb(249,202,22)"/><text x="58.9531%" y="367.50">ip_loca..</text></g><g><title>ip_local_deliver_finish (49 samples, 5.57%)</title><rect x="58.7031%" y="341" width="5.5745%" height="15" fill="rgb(254,195,49)"/><text x="58.9531%" y="351.50">ip_loca..</text></g><g><title>ip_protocol_deliver_rcu (48 samples, 5.46%)</title><rect x="58.8168%" y="325" width="5.4608%" height="15" fill="rgb(208,123,14)"/><text x="59.0668%" y="335.50">ip_prot..</text></g><g><title>tcp_v4_rcv (48 samples, 5.46%)</title><rect x="58.8168%" y="309" width="5.4608%" height="15" fill="rgb(224,200,8)"/><text x="59.0668%" y="319.50">tcp_v4_..</text></g><g><title>tcp_v4_fill_cb (1 samples, 0.11%)</title><rect x="64.1638%" y="293" width="0.1138%" height="15" fill="rgb(217,61,36)"/><text x="64.4138%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (52 samples, 5.92%)</title><rect x="58.5893%" y="389" width="5.9158%" height="15" fill="rgb(206,35,45)"/><text x="58.8393%" y="399.50">__netif_..</text></g><g><title>ip_rcv (52 samples, 5.92%)</title><rect x="58.5893%" y="373" width="5.9158%" height="15" fill="rgb(217,65,33)"/><text x="58.8393%" y="383.50">ip_rcv</text></g><g><title>ip_rcv_core (2 samples, 0.23%)</title><rect x="64.2776%" y="357" width="0.2275%" height="15" fill="rgb(222,158,48)"/><text x="64.5276%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="64.5051%" y="389" width="0.1138%" height="15" fill="rgb(254,2,54)"/><text x="64.7551%" y="399.50"></text></g><g><title>__local_bh_enable_ip (56 samples, 6.37%)</title><rect x="58.3618%" y="485" width="6.3709%" height="15" fill="rgb(250,143,38)"/><text x="58.6118%" y="495.50">__local_..</text></g><g><title>do_softirq (56 samples, 6.37%)</title><rect x="58.3618%" y="469" width="6.3709%" height="15" fill="rgb(248,25,0)"/><text x="58.6118%" y="479.50">do_softi..</text></g><g><title>do_softirq_own_stack (55 samples, 6.26%)</title><rect x="58.4755%" y="453" width="6.2571%" height="15" fill="rgb(206,152,27)"/><text x="58.7255%" y="463.50">do_softi..</text></g><g><title>__do_softirq (55 samples, 6.26%)</title><rect x="58.4755%" y="437" width="6.2571%" height="15" fill="rgb(240,77,30)"/><text x="58.7255%" y="447.50">__do_sof..</text></g><g><title>net_rx_action (55 samples, 6.26%)</title><rect x="58.4755%" y="421" width="6.2571%" height="15" fill="rgb(231,5,3)"/><text x="58.7255%" y="431.50">net_rx_a..</text></g><g><title>process_backlog (54 samples, 6.14%)</title><rect x="58.5893%" y="405" width="6.1433%" height="15" fill="rgb(207,226,32)"/><text x="58.8393%" y="415.50">process_..</text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="64.6189%" y="389" width="0.1138%" height="15" fill="rgb(222,207,47)"/><text x="64.8689%" y="399.50"></text></g><g><title>__ip_queue_xmit (83 samples, 9.44%)</title><rect x="55.4039%" y="533" width="9.4425%" height="15" fill="rgb(229,115,45)"/><text x="55.6539%" y="543.50">__ip_queue_xmit</text></g><g><title>ip_output (80 samples, 9.10%)</title><rect x="55.7452%" y="517" width="9.1013%" height="15" fill="rgb(224,191,6)"/><text x="55.9952%" y="527.50">ip_output</text></g><g><title>ip_finish_output2 (79 samples, 8.99%)</title><rect x="55.8589%" y="501" width="8.9875%" height="15" fill="rgb(230,227,24)"/><text x="56.1089%" y="511.50">ip_finish_out..</text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="64.7327%" y="485" width="0.1138%" height="15" fill="rgb(228,80,19)"/><text x="64.9827%" y="495.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.11%)</title><rect x="64.8464%" y="533" width="0.1138%" height="15" fill="rgb(247,229,0)"/><text x="65.0964%" y="543.50"></text></g><g><title>__tcp_transmit_skb (90 samples, 10.24%)</title><rect x="54.8350%" y="549" width="10.2389%" height="15" fill="rgb(237,194,15)"/><text x="55.0850%" y="559.50">__tcp_transmit_..</text></g><g><title>tcp_v4_send_check (1 samples, 0.11%)</title><rect x="64.9602%" y="533" width="0.1138%" height="15" fill="rgb(219,203,20)"/><text x="65.2102%" y="543.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="65.0739%" y="549" width="0.1138%" height="15" fill="rgb(234,128,8)"/><text x="65.3239%" y="559.50"></text></g><g><title>read_tsc (1 samples, 0.11%)</title><rect x="65.0739%" y="533" width="0.1138%" height="15" fill="rgb(248,202,8)"/><text x="65.3239%" y="543.50"></text></g><g><title>rb_insert_color (1 samples, 0.11%)</title><rect x="65.1877%" y="533" width="0.1138%" height="15" fill="rgb(206,104,37)"/><text x="65.4377%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (94 samples, 10.69%)</title><rect x="54.7213%" y="581" width="10.6940%" height="15" fill="rgb(223,8,27)"/><text x="54.9713%" y="591.50">__tcp_push_pendi..</text></g><g><title>tcp_write_xmit (94 samples, 10.69%)</title><rect x="54.7213%" y="565" width="10.6940%" height="15" fill="rgb(216,217,28)"/><text x="54.9713%" y="575.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.23%)</title><rect x="65.1877%" y="549" width="0.2275%" height="15" fill="rgb(249,199,1)"/><text x="65.4377%" y="559.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="65.3015%" y="533" width="0.1138%" height="15" fill="rgb(240,85,17)"/><text x="65.5515%" y="543.50"></text></g><g><title>rb_first (1 samples, 0.11%)</title><rect x="65.3015%" y="517" width="0.1138%" height="15" fill="rgb(206,108,45)"/><text x="65.5515%" y="527.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.23%)</title><rect x="65.4152%" y="581" width="0.2275%" height="15" fill="rgb(245,210,41)"/><text x="65.6652%" y="591.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.23%)</title><rect x="65.4152%" y="565" width="0.2275%" height="15" fill="rgb(206,13,37)"/><text x="65.6652%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.23%)</title><rect x="65.6428%" y="581" width="0.2275%" height="15" fill="rgb(250,61,18)"/><text x="65.8928%" y="591.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="65.7565%" y="565" width="0.1138%" height="15" fill="rgb(235,172,48)"/><text x="66.0065%" y="575.50"></text></g><g><title>__ksize (1 samples, 0.11%)</title><rect x="65.7565%" y="549" width="0.1138%" height="15" fill="rgb(249,201,17)"/><text x="66.0065%" y="559.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="65.8703%" y="581" width="0.1138%" height="15" fill="rgb(219,208,6)"/><text x="66.1203%" y="591.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="65.8703%" y="565" width="0.1138%" height="15" fill="rgb(248,31,23)"/><text x="66.1203%" y="575.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="65.8703%" y="549" width="0.1138%" height="15" fill="rgb(245,15,42)"/><text x="66.1203%" y="559.50"></text></g><g><title>skb_entail (1 samples, 0.11%)</title><rect x="65.9841%" y="581" width="0.1138%" height="15" fill="rgb(222,217,39)"/><text x="66.2341%" y="591.50"></text></g><g><title>sock_sendmsg (115 samples, 13.08%)</title><rect x="53.4699%" y="629" width="13.0830%" height="15" fill="rgb(210,219,27)"/><text x="53.7199%" y="639.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (115 samples, 13.08%)</title><rect x="53.4699%" y="613" width="13.0830%" height="15" fill="rgb(252,166,36)"/><text x="53.7199%" y="623.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (108 samples, 12.29%)</title><rect x="54.2662%" y="597" width="12.2867%" height="15" fill="rgb(245,132,34)"/><text x="54.5162%" y="607.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (4 samples, 0.46%)</title><rect x="66.0978%" y="581" width="0.4551%" height="15" fill="rgb(236,54,3)"/><text x="66.3478%" y="591.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="66.4391%" y="565" width="0.1138%" height="15" fill="rgb(241,173,43)"/><text x="66.6891%" y="575.50"></text></g><g><title>tcp_established_options (1 samples, 0.11%)</title><rect x="66.4391%" y="549" width="0.1138%" height="15" fill="rgb(215,190,9)"/><text x="66.6891%" y="559.50"></text></g><g><title>__x64_sys_sendto (118 samples, 13.42%)</title><rect x="53.4699%" y="661" width="13.4243%" height="15" fill="rgb(242,101,16)"/><text x="53.7199%" y="671.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (118 samples, 13.42%)</title><rect x="53.4699%" y="645" width="13.4243%" height="15" fill="rgb(223,190,21)"/><text x="53.7199%" y="655.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (3 samples, 0.34%)</title><rect x="66.5529%" y="629" width="0.3413%" height="15" fill="rgb(215,228,25)"/><text x="66.8029%" y="639.50"></text></g><g><title>__fget_light (3 samples, 0.34%)</title><rect x="66.5529%" y="613" width="0.3413%" height="15" fill="rgb(225,36,22)"/><text x="66.8029%" y="623.50"></text></g><g><title>__fget_files (3 samples, 0.34%)</title><rect x="66.5529%" y="597" width="0.3413%" height="15" fill="rgb(251,106,46)"/><text x="66.8029%" y="607.50"></text></g><g><title>do_syscall_64 (119 samples, 13.54%)</title><rect x="53.4699%" y="677" width="13.5381%" height="15" fill="rgb(208,90,1)"/><text x="53.7199%" y="687.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="66.8942%" y="661" width="0.1138%" height="15" fill="rgb(243,10,4)"/><text x="67.1442%" y="671.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="66.8942%" y="645" width="0.1138%" height="15" fill="rgb(212,137,27)"/><text x="67.1442%" y="655.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.11%)</title><rect x="66.8942%" y="629" width="0.1138%" height="15" fill="rgb(231,220,49)"/><text x="67.1442%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (124 samples, 14.11%)</title><rect x="53.3561%" y="693" width="14.1069%" height="15" fill="rgb(237,96,20)"/><text x="53.6061%" y="703.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.46%)</title><rect x="67.0080%" y="677" width="0.4551%" height="15" fill="rgb(239,229,30)"/><text x="67.2580%" y="687.50"></text></g><g><title>decor::Shim::run_on_tcp (472 samples, 53.70%)</title><rect x="13.8794%" y="789" width="53.6974%" height="15" fill="rgb(219,65,33)"/><text x="14.1294%" y="799.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (472 samples, 53.70%)</title><rect x="13.8794%" y="773" width="53.6974%" height="15" fill="rgb(243,134,7)"/><text x="14.1294%" y="783.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (127 samples, 14.45%)</title><rect x="53.1286%" y="757" width="14.4482%" height="15" fill="rgb(216,177,54)"/><text x="53.3786%" y="767.50">std::io::buffered::Buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (127 samples, 14.45%)</title><rect x="53.1286%" y="741" width="14.4482%" height="15" fill="rgb(211,160,20)"/><text x="53.3786%" y="751.50">&lt;std::net::tcp::TcpStr..</text></g><g><title>std::sys_common::net::TcpStream::write (127 samples, 14.45%)</title><rect x="53.1286%" y="725" width="14.4482%" height="15" fill="rgb(239,85,39)"/><text x="53.3786%" y="735.50">std::sys_common::net::..</text></g><g><title>__libc_send (127 samples, 14.45%)</title><rect x="53.1286%" y="709" width="14.4482%" height="15" fill="rgb(232,125,22)"/><text x="53.3786%" y="719.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="67.4630%" y="693" width="0.1138%" height="15" fill="rgb(244,57,34)"/><text x="67.7130%" y="703.50"></text></g><g><title>__GI___clone (474 samples, 53.92%)</title><rect x="13.7656%" y="901" width="53.9249%" height="15" fill="rgb(214,203,32)"/><text x="14.0156%" y="911.50">__GI___clone</text></g><g><title>start_thread (474 samples, 53.92%)</title><rect x="13.7656%" y="885" width="53.9249%" height="15" fill="rgb(207,58,43)"/><text x="14.0156%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (473 samples, 53.81%)</title><rect x="13.8794%" y="869" width="53.8111%" height="15" fill="rgb(215,193,15)"/><text x="14.1294%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (473 samples, 53.81%)</title><rect x="13.8794%" y="853" width="53.8111%" height="15" fill="rgb(232,15,44)"/><text x="14.1294%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (473 samples, 53.81%)</title><rect x="13.8794%" y="837" width="53.8111%" height="15" fill="rgb(212,3,48)"/><text x="14.1294%" y="847.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (473 samples, 53.81%)</title><rect x="13.8794%" y="821" width="53.8111%" height="15" fill="rgb(218,128,7)"/><text x="14.1294%" y="831.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (473 samples, 53.81%)</title><rect x="13.8794%" y="805" width="53.8111%" height="15" fill="rgb(226,216,39)"/><text x="14.1294%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>std::net::tcp::TcpListener::accept (1 samples, 0.11%)</title><rect x="67.5768%" y="789" width="0.1138%" height="15" fill="rgb(243,47,51)"/><text x="67.8268%" y="799.50"></text></g><g><title>std::sys_common::net::TcpListener::accept (1 samples, 0.11%)</title><rect x="67.5768%" y="773" width="0.1138%" height="15" fill="rgb(241,183,40)"/><text x="67.8268%" y="783.50"></text></g><g><title>accept4 (1 samples, 0.11%)</title><rect x="67.5768%" y="757" width="0.1138%" height="15" fill="rgb(231,217,32)"/><text x="67.8268%" y="767.50"></text></g><g><title>error_entry (1 samples, 0.11%)</title><rect x="67.5768%" y="741" width="0.1138%" height="15" fill="rgb(229,61,38)"/><text x="67.8268%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="67.8043%" y="709" width="0.1138%" height="15" fill="rgb(225,210,5)"/><text x="68.0543%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="67.8043%" y="693" width="0.1138%" height="15" fill="rgb(231,79,45)"/><text x="68.0543%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="67.8043%" y="725" width="0.2275%" height="15" fill="rgb(224,100,7)"/><text x="68.0543%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="67.9181%" y="709" width="0.1138%" height="15" fill="rgb(241,198,18)"/><text x="68.1681%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="68.0319%" y="645" width="0.2275%" height="15" fill="rgb(252,97,53)"/><text x="68.2819%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="68.0319%" y="629" width="0.2275%" height="15" fill="rgb(220,88,7)"/><text x="68.2819%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="68.1456%" y="613" width="0.1138%" height="15" fill="rgb(213,176,14)"/><text x="68.3956%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="68.1456%" y="597" width="0.1138%" height="15" fill="rgb(246,73,7)"/><text x="68.3956%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="68.1456%" y="581" width="0.1138%" height="15" fill="rgb(245,64,36)"/><text x="68.3956%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="68.1456%" y="565" width="0.1138%" height="15" fill="rgb(245,80,10)"/><text x="68.3956%" y="575.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="68.1456%" y="549" width="0.1138%" height="15" fill="rgb(232,107,50)"/><text x="68.3956%" y="559.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="68.1456%" y="533" width="0.1138%" height="15" fill="rgb(253,3,0)"/><text x="68.3956%" y="543.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="68.1456%" y="517" width="0.1138%" height="15" fill="rgb(212,99,53)"/><text x="68.3956%" y="527.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="68.1456%" y="501" width="0.1138%" height="15" fill="rgb(249,111,54)"/><text x="68.3956%" y="511.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="68.1456%" y="485" width="0.1138%" height="15" fill="rgb(249,55,30)"/><text x="68.3956%" y="495.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="68.1456%" y="469" width="0.1138%" height="15" fill="rgb(237,47,42)"/><text x="68.3956%" y="479.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="68.1456%" y="453" width="0.1138%" height="15" fill="rgb(211,20,18)"/><text x="68.3956%" y="463.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 26.17%)</title><rect x="68.4869%" y="421" width="26.1661%" height="15" fill="rgb(231,203,46)"/><text x="68.7369%" y="431.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 26.17%)</title><rect x="68.4869%" y="405" width="26.1661%" height="15" fill="rgb(237,142,3)"/><text x="68.7369%" y="415.50">native_write_msr</text></g><g><title>__perf_event_task_sched_in (231 samples, 26.28%)</title><rect x="68.4869%" y="437" width="26.2799%" height="15" fill="rgb(241,107,1)"/><text x="68.7369%" y="447.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="94.6530%" y="421" width="0.1138%" height="15" fill="rgb(229,83,13)"/><text x="94.9030%" y="431.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="94.6530%" y="405" width="0.1138%" height="15" fill="rgb(241,91,40)"/><text x="94.9030%" y="415.50"></text></g><g><title>cpu_stop_queue_work (233 samples, 26.51%)</title><rect x="68.3732%" y="517" width="26.5074%" height="15" fill="rgb(225,3,45)"/><text x="68.6232%" y="527.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (233 samples, 26.51%)</title><rect x="68.3732%" y="501" width="26.5074%" height="15" fill="rgb(244,223,14)"/><text x="68.6232%" y="511.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (233 samples, 26.51%)</title><rect x="68.3732%" y="485" width="26.5074%" height="15" fill="rgb(224,124,37)"/><text x="68.6232%" y="495.50">preempt_schedule_common</text></g><g><title>__schedule (233 samples, 26.51%)</title><rect x="68.3732%" y="469" width="26.5074%" height="15" fill="rgb(251,171,30)"/><text x="68.6232%" y="479.50">__schedule</text></g><g><title>finish_task_switch (233 samples, 26.51%)</title><rect x="68.3732%" y="453" width="26.5074%" height="15" fill="rgb(236,46,54)"/><text x="68.6232%" y="463.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.11%)</title><rect x="94.7668%" y="437" width="0.1138%" height="15" fill="rgb(245,213,5)"/><text x="95.0168%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="94.7668%" y="421" width="0.1138%" height="15" fill="rgb(230,144,27)"/><text x="95.0168%" y="431.50"></text></g><g><title>__set_cpus_allowed_ptr (234 samples, 26.62%)</title><rect x="68.3732%" y="549" width="26.6212%" height="15" fill="rgb(220,86,6)"/><text x="68.6232%" y="559.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 26.62%)</title><rect x="68.3732%" y="533" width="26.6212%" height="15" fill="rgb(240,20,13)"/><text x="68.6232%" y="543.50">stop_one_cpu</text></g><g><title>wait_for_completion (1 samples, 0.11%)</title><rect x="94.8805%" y="517" width="0.1138%" height="15" fill="rgb(217,89,34)"/><text x="95.1305%" y="527.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.11%)</title><rect x="94.8805%" y="501" width="0.1138%" height="15" fill="rgb(229,13,5)"/><text x="95.1305%" y="511.50"></text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 26.73%)</title><rect x="68.3732%" y="581" width="26.7349%" height="15" fill="rgb(244,67,35)"/><text x="68.6232%" y="591.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 26.73%)</title><rect x="68.3732%" y="565" width="26.7349%" height="15" fill="rgb(221,40,2)"/><text x="68.6232%" y="575.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (1 samples, 0.11%)</title><rect x="94.9943%" y="549" width="0.1138%" height="15" fill="rgb(237,157,21)"/><text x="95.2443%" y="559.50"></text></g><g><title>guarantee_online_cpus (1 samples, 0.11%)</title><rect x="94.9943%" y="533" width="0.1138%" height="15" fill="rgb(222,94,11)"/><text x="95.2443%" y="543.50"></text></g><g><title>__bitmap_intersects (1 samples, 0.11%)</title><rect x="94.9943%" y="517" width="0.1138%" height="15" fill="rgb(249,113,6)"/><text x="95.2443%" y="527.50"></text></g><g><title>do_syscall_64 (236 samples, 26.85%)</title><rect x="68.3732%" y="597" width="26.8487%" height="15" fill="rgb(238,137,36)"/><text x="68.6232%" y="607.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="95.1081%" y="581" width="0.1138%" height="15" fill="rgb(210,102,26)"/><text x="95.3581%" y="591.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="95.1081%" y="565" width="0.1138%" height="15" fill="rgb(218,30,30)"/><text x="95.3581%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (237 samples, 26.96%)</title><rect x="68.3732%" y="613" width="26.9625%" height="15" fill="rgb(214,67,26)"/><text x="68.6232%" y="623.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="95.2218%" y="597" width="0.1138%" height="15" fill="rgb(251,9,53)"/><text x="95.4718%" y="607.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="95.2218%" y="581" width="0.1138%" height="15" fill="rgb(228,204,25)"/><text x="95.4718%" y="591.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="95.2218%" y="565" width="0.1138%" height="15" fill="rgb(207,153,8)"/><text x="95.4718%" y="575.50"></text></g><g><title>hwloc::Topology::new (242 samples, 27.53%)</title><rect x="68.0319%" y="725" width="27.5313%" height="15" fill="rgb(242,9,16)"/><text x="68.2819%" y="735.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 27.53%)</title><rect x="68.0319%" y="709" width="27.5313%" height="15" fill="rgb(217,211,10)"/><text x="68.2819%" y="719.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.53%)</title><rect x="68.0319%" y="693" width="27.5313%" height="15" fill="rgb(219,228,52)"/><text x="68.2819%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.53%)</title><rect x="68.0319%" y="677" width="27.5313%" height="15" fill="rgb(231,92,29)"/><text x="68.2819%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.53%)</title><rect x="68.0319%" y="661" width="27.5313%" height="15" fill="rgb(232,8,23)"/><text x="68.2819%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 27.30%)</title><rect x="68.2594%" y="645" width="27.3038%" height="15" fill="rgb(216,211,34)"/><text x="68.5094%" y="655.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 27.30%)</title><rect x="68.2594%" y="629" width="27.3038%" height="15" fill="rgb(236,151,0)"/><text x="68.5094%" y="639.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (2 samples, 0.23%)</title><rect x="95.3356%" y="613" width="0.2275%" height="15" fill="rgb(209,168,3)"/><text x="95.5856%" y="623.50"></text></g><g><title>fput_many (1 samples, 0.11%)</title><rect x="95.9044%" y="565" width="0.1138%" height="15" fill="rgb(208,129,28)"/><text x="96.1544%" y="575.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.11%)</title><rect x="96.0182%" y="549" width="0.1138%" height="15" fill="rgb(229,78,22)"/><text x="96.2682%" y="559.50"></text></g><g><title>__ip_local_out (1 samples, 0.11%)</title><rect x="96.2457%" y="453" width="0.1138%" height="15" fill="rgb(228,187,13)"/><text x="96.4957%" y="463.50"></text></g><g><title>ip_send_check (1 samples, 0.11%)</title><rect x="96.2457%" y="437" width="0.1138%" height="15" fill="rgb(240,119,24)"/><text x="96.4957%" y="447.50"></text></g><g><title>__sk_dst_check (1 samples, 0.11%)</title><rect x="96.3595%" y="453" width="0.1138%" height="15" fill="rgb(209,194,42)"/><text x="96.6095%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.11%)</title><rect x="96.3595%" y="437" width="0.1138%" height="15" fill="rgb(247,200,46)"/><text x="96.6095%" y="447.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.23%)</title><rect x="96.5870%" y="421" width="0.2275%" height="15" fill="rgb(218,76,16)"/><text x="96.8370%" y="431.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.23%)</title><rect x="96.5870%" y="405" width="0.2275%" height="15" fill="rgb(225,21,48)"/><text x="96.8370%" y="415.50"></text></g><g><title>netif_skb_features (1 samples, 0.11%)</title><rect x="96.7008%" y="389" width="0.1138%" height="15" fill="rgb(239,223,50)"/><text x="96.9508%" y="399.50"></text></g><g><title>skb_network_protocol (1 samples, 0.11%)</title><rect x="96.7008%" y="373" width="0.1138%" height="15" fill="rgb(244,45,21)"/><text x="96.9508%" y="383.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="96.8146%" y="357" width="0.1138%" height="15" fill="rgb(232,33,43)"/><text x="97.0646%" y="367.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="96.8146%" y="341" width="0.1138%" height="15" fill="rgb(209,8,3)"/><text x="97.0646%" y="351.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="96.9283%" y="309" width="0.1138%" height="15" fill="rgb(214,25,53)"/><text x="97.1783%" y="319.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="97.2696%" y="117" width="0.1138%" height="15" fill="rgb(254,186,54)"/><text x="97.5196%" y="127.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="97.2696%" y="101" width="0.1138%" height="15" fill="rgb(208,174,49)"/><text x="97.5196%" y="111.50"></text></g><g><title>enqueue_task (2 samples, 0.23%)</title><rect x="97.2696%" y="133" width="0.2275%" height="15" fill="rgb(233,191,51)"/><text x="97.5196%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.11%)</title><rect x="97.3834%" y="117" width="0.1138%" height="15" fill="rgb(222,134,10)"/><text x="97.6334%" y="127.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="97.4972%" y="133" width="0.1138%" height="15" fill="rgb(230,226,20)"/><text x="97.7472%" y="143.50"></text></g><g><title>sock_def_readable (6 samples, 0.68%)</title><rect x="97.1559%" y="197" width="0.6826%" height="15" fill="rgb(251,111,25)"/><text x="97.4059%" y="207.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.57%)</title><rect x="97.2696%" y="181" width="0.5688%" height="15" fill="rgb(224,40,46)"/><text x="97.5196%" y="191.50"></text></g><g><title>__wake_up_common (5 samples, 0.57%)</title><rect x="97.2696%" y="165" width="0.5688%" height="15" fill="rgb(236,108,47)"/><text x="97.5196%" y="175.50"></text></g><g><title>try_to_wake_up (5 samples, 0.57%)</title><rect x="97.2696%" y="149" width="0.5688%" height="15" fill="rgb(234,93,0)"/><text x="97.5196%" y="159.50"></text></g><g><title>update_rq_clock (2 samples, 0.23%)</title><rect x="97.6109%" y="133" width="0.2275%" height="15" fill="rgb(224,213,32)"/><text x="97.8609%" y="143.50"></text></g><g><title>net_rx_action (9 samples, 1.02%)</title><rect x="96.9283%" y="357" width="1.0239%" height="15" fill="rgb(251,11,48)"/><text x="97.1783%" y="367.50"></text></g><g><title>process_backlog (9 samples, 1.02%)</title><rect x="96.9283%" y="341" width="1.0239%" height="15" fill="rgb(236,173,5)"/><text x="97.1783%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (9 samples, 1.02%)</title><rect x="96.9283%" y="325" width="1.0239%" height="15" fill="rgb(230,95,12)"/><text x="97.1783%" y="335.50"></text></g><g><title>ip_rcv (8 samples, 0.91%)</title><rect x="97.0421%" y="309" width="0.9101%" height="15" fill="rgb(232,209,1)"/><text x="97.2921%" y="319.50"></text></g><g><title>ip_local_deliver (8 samples, 0.91%)</title><rect x="97.0421%" y="293" width="0.9101%" height="15" fill="rgb(232,6,1)"/><text x="97.2921%" y="303.50"></text></g><g><title>ip_local_deliver_finish (8 samples, 0.91%)</title><rect x="97.0421%" y="277" width="0.9101%" height="15" fill="rgb(210,224,50)"/><text x="97.2921%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (8 samples, 0.91%)</title><rect x="97.0421%" y="261" width="0.9101%" height="15" fill="rgb(228,127,35)"/><text x="97.2921%" y="271.50"></text></g><g><title>tcp_v4_rcv (8 samples, 0.91%)</title><rect x="97.0421%" y="245" width="0.9101%" height="15" fill="rgb(245,102,45)"/><text x="97.2921%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.80%)</title><rect x="97.1559%" y="229" width="0.7964%" height="15" fill="rgb(214,1,49)"/><text x="97.4059%" y="239.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.80%)</title><rect x="97.1559%" y="213" width="0.7964%" height="15" fill="rgb(226,163,40)"/><text x="97.4059%" y="223.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="97.8385%" y="197" width="0.1138%" height="15" fill="rgb(239,212,28)"/><text x="98.0885%" y="207.50"></text></g><g><title>__ip_queue_xmit (16 samples, 1.82%)</title><rect x="96.2457%" y="469" width="1.8203%" height="15" fill="rgb(220,20,13)"/><text x="96.4957%" y="479.50">_..</text></g><g><title>ip_output (14 samples, 1.59%)</title><rect x="96.4733%" y="453" width="1.5927%" height="15" fill="rgb(210,164,35)"/><text x="96.7233%" y="463.50"></text></g><g><title>ip_finish_output2 (14 samples, 1.59%)</title><rect x="96.4733%" y="437" width="1.5927%" height="15" fill="rgb(248,109,41)"/><text x="96.7233%" y="447.50"></text></g><g><title>__local_bh_enable_ip (11 samples, 1.25%)</title><rect x="96.8146%" y="421" width="1.2514%" height="15" fill="rgb(238,23,50)"/><text x="97.0646%" y="431.50"></text></g><g><title>do_softirq (11 samples, 1.25%)</title><rect x="96.8146%" y="405" width="1.2514%" height="15" fill="rgb(211,48,49)"/><text x="97.0646%" y="415.50"></text></g><g><title>do_softirq_own_stack (11 samples, 1.25%)</title><rect x="96.8146%" y="389" width="1.2514%" height="15" fill="rgb(223,36,21)"/><text x="97.0646%" y="399.50"></text></g><g><title>__do_softirq (11 samples, 1.25%)</title><rect x="96.8146%" y="373" width="1.2514%" height="15" fill="rgb(207,123,46)"/><text x="97.0646%" y="383.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="97.9522%" y="357" width="0.1138%" height="15" fill="rgb(240,218,32)"/><text x="98.2022%" y="367.50"></text></g><g><title>__tcp_transmit_skb (17 samples, 1.93%)</title><rect x="96.2457%" y="485" width="1.9340%" height="15" fill="rgb(252,5,43)"/><text x="96.4957%" y="495.50">_..</text></g><g><title>__tcp_select_window (1 samples, 0.11%)</title><rect x="98.0660%" y="469" width="0.1138%" height="15" fill="rgb(252,84,19)"/><text x="98.3160%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (18 samples, 2.05%)</title><rect x="96.2457%" y="517" width="2.0478%" height="15" fill="rgb(243,152,39)"/><text x="96.4957%" y="527.50">_..</text></g><g><title>tcp_write_xmit (18 samples, 2.05%)</title><rect x="96.2457%" y="501" width="2.0478%" height="15" fill="rgb(234,160,15)"/><text x="96.4957%" y="511.50">t..</text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="98.1797%" y="485" width="0.1138%" height="15" fill="rgb(237,34,20)"/><text x="98.4297%" y="495.50"></text></g><g><title>__x64_sys_sendto (22 samples, 2.50%)</title><rect x="95.9044%" y="597" width="2.5028%" height="15" fill="rgb(229,97,13)"/><text x="96.1544%" y="607.50">__..</text></g><g><title>__sys_sendto (22 samples, 2.50%)</title><rect x="95.9044%" y="581" width="2.5028%" height="15" fill="rgb(234,71,50)"/><text x="96.1544%" y="591.50">__..</text></g><g><title>sock_sendmsg (21 samples, 2.39%)</title><rect x="96.0182%" y="565" width="2.3891%" height="15" fill="rgb(253,155,4)"/><text x="96.2682%" y="575.50">so..</text></g><g><title>tcp_sendmsg (20 samples, 2.28%)</title><rect x="96.1320%" y="549" width="2.2753%" height="15" fill="rgb(222,185,37)"/><text x="96.3820%" y="559.50">t..</text></g><g><title>tcp_sendmsg_locked (20 samples, 2.28%)</title><rect x="96.1320%" y="533" width="2.2753%" height="15" fill="rgb(251,177,13)"/><text x="96.3820%" y="543.50">t..</text></g><g><title>skb_entail (1 samples, 0.11%)</title><rect x="98.2935%" y="517" width="0.1138%" height="15" fill="rgb(250,179,40)"/><text x="98.5435%" y="527.50"></text></g><g><title>do_syscall_64 (23 samples, 2.62%)</title><rect x="95.9044%" y="613" width="2.6166%" height="15" fill="rgb(242,44,2)"/><text x="96.1544%" y="623.50">do..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="98.4073%" y="597" width="0.1138%" height="15" fill="rgb(216,177,13)"/><text x="98.6573%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 2.73%)</title><rect x="95.9044%" y="629" width="2.7304%" height="15" fill="rgb(216,106,43)"/><text x="96.1544%" y="639.50">en..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="98.5210%" y="613" width="0.1138%" height="15" fill="rgb(216,183,2)"/><text x="98.7710%" y="623.50"></text></g><g><title>mysql::conn::Conn::_query (28 samples, 3.19%)</title><rect x="95.5631%" y="725" width="3.1854%" height="15" fill="rgb(249,75,3)"/><text x="95.8131%" y="735.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (27 samples, 3.07%)</title><rect x="95.6769%" y="709" width="3.0717%" height="15" fill="rgb(219,67,39)"/><text x="95.9269%" y="719.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (25 samples, 2.84%)</title><rect x="95.9044%" y="693" width="2.8441%" height="15" fill="rgb(253,228,2)"/><text x="96.1544%" y="703.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (25 samples, 2.84%)</title><rect x="95.9044%" y="677" width="2.8441%" height="15" fill="rgb(235,138,27)"/><text x="96.1544%" y="687.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (25 samples, 2.84%)</title><rect x="95.9044%" y="661" width="2.8441%" height="15" fill="rgb(236,97,51)"/><text x="96.1544%" y="671.50">st..</text></g><g><title>__libc_send (25 samples, 2.84%)</title><rect x="95.9044%" y="645" width="2.8441%" height="15" fill="rgb(240,80,30)"/><text x="96.1544%" y="655.50">__..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="98.6348%" y="629" width="0.1138%" height="15" fill="rgb(230,178,19)"/><text x="98.8848%" y="639.50"></text></g><g><title>__libc_start_main (274 samples, 31.17%)</title><rect x="67.6906%" y="885" width="31.1718%" height="15" fill="rgb(210,190,27)"/><text x="67.9406%" y="895.50">__libc_start_main</text></g><g><title>main (274 samples, 31.17%)</title><rect x="67.6906%" y="869" width="31.1718%" height="15" fill="rgb(222,107,31)"/><text x="67.9406%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (274 samples, 31.17%)</title><rect x="67.6906%" y="853" width="31.1718%" height="15" fill="rgb(216,127,34)"/><text x="67.9406%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (274 samples, 31.17%)</title><rect x="67.6906%" y="837" width="31.1718%" height="15" fill="rgb(234,116,52)"/><text x="67.9406%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (274 samples, 31.17%)</title><rect x="67.6906%" y="821" width="31.1718%" height="15" fill="rgb(222,124,15)"/><text x="67.9406%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (274 samples, 31.17%)</title><rect x="67.6906%" y="805" width="31.1718%" height="15" fill="rgb(231,179,28)"/><text x="67.9406%" y="815.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (274 samples, 31.17%)</title><rect x="67.6906%" y="789" width="31.1718%" height="15" fill="rgb(226,93,45)"/><text x="67.9406%" y="799.50">core::ops::function::impls::&lt;impl core::ops::funct..</text></g><g><title>std::rt::lang_start::_{{closure}} (274 samples, 31.17%)</title><rect x="67.6906%" y="773" width="31.1718%" height="15" fill="rgb(215,8,51)"/><text x="67.9406%" y="783.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (274 samples, 31.17%)</title><rect x="67.6906%" y="757" width="31.1718%" height="15" fill="rgb(223,106,5)"/><text x="67.9406%" y="767.50">std::sys_common::backtrace::__rust_begin_short_bac..</text></g><g><title>lobsters::main (274 samples, 31.17%)</title><rect x="67.6906%" y="741" width="31.1718%" height="15" fill="rgb(250,191,5)"/><text x="67.9406%" y="751.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="98.7486%" y="725" width="0.1138%" height="15" fill="rgb(242,132,44)"/><text x="98.9986%" y="735.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="98.7486%" y="709" width="0.1138%" height="15" fill="rgb(251,152,29)"/><text x="98.9986%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.11%)</title><rect x="98.7486%" y="693" width="0.1138%" height="15" fill="rgb(218,179,5)"/><text x="98.9986%" y="703.50"></text></g><g><title>__GI___socket (1 samples, 0.11%)</title><rect x="98.7486%" y="677" width="0.1138%" height="15" fill="rgb(227,67,19)"/><text x="98.9986%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.7486%" y="661" width="0.1138%" height="15" fill="rgb(233,119,31)"/><text x="98.9986%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.7486%" y="645" width="0.1138%" height="15" fill="rgb(241,120,22)"/><text x="98.9986%" y="655.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.11%)</title><rect x="98.7486%" y="629" width="0.1138%" height="15" fill="rgb(224,102,30)"/><text x="98.9986%" y="639.50"></text></g><g><title>__sys_socket (1 samples, 0.11%)</title><rect x="98.7486%" y="613" width="0.1138%" height="15" fill="rgb(210,164,37)"/><text x="98.9986%" y="623.50"></text></g><g><title>__sock_create (1 samples, 0.11%)</title><rect x="98.7486%" y="597" width="0.1138%" height="15" fill="rgb(226,191,16)"/><text x="98.9986%" y="607.50"></text></g><g><title>inet_create (1 samples, 0.11%)</title><rect x="98.7486%" y="581" width="0.1138%" height="15" fill="rgb(214,40,45)"/><text x="98.9986%" y="591.50"></text></g><g><title>sk_alloc (1 samples, 0.11%)</title><rect x="98.7486%" y="565" width="0.1138%" height="15" fill="rgb(244,29,26)"/><text x="98.9986%" y="575.50"></text></g><g><title>cgroup_sk_alloc (1 samples, 0.11%)</title><rect x="98.7486%" y="549" width="0.1138%" height="15" fill="rgb(216,16,5)"/><text x="98.9986%" y="559.50"></text></g><g><title>_start (275 samples, 31.29%)</title><rect x="67.6906%" y="901" width="31.2856%" height="15" fill="rgb(249,76,35)"/><text x="67.9406%" y="911.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.8623%" y="885" width="0.1138%" height="15" fill="rgb(207,11,44)"/><text x="99.1123%" y="895.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.8623%" y="869" width="0.1138%" height="15" fill="rgb(228,190,49)"/><text x="99.1123%" y="879.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="98.8623%" y="853" width="0.1138%" height="15" fill="rgb(214,173,12)"/><text x="99.1123%" y="863.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="98.8623%" y="837" width="0.1138%" height="15" fill="rgb(218,26,35)"/><text x="99.1123%" y="847.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="98.8623%" y="821" width="0.1138%" height="15" fill="rgb(220,200,19)"/><text x="99.1123%" y="831.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="98.8623%" y="805" width="0.1138%" height="15" fill="rgb(239,95,49)"/><text x="99.1123%" y="815.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="98.8623%" y="789" width="0.1138%" height="15" fill="rgb(235,85,53)"/><text x="99.1123%" y="799.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="98.8623%" y="773" width="0.1138%" height="15" fill="rgb(233,133,31)"/><text x="99.1123%" y="783.50"></text></g><g><title>memset (1 samples, 0.11%)</title><rect x="98.8623%" y="757" width="0.1138%" height="15" fill="rgb(218,25,20)"/><text x="99.1123%" y="767.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="98.8623%" y="741" width="0.1138%" height="15" fill="rgb(252,210,38)"/><text x="99.1123%" y="751.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="98.8623%" y="725" width="0.1138%" height="15" fill="rgb(242,134,21)"/><text x="99.1123%" y="735.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="98.8623%" y="709" width="0.1138%" height="15" fill="rgb(213,28,48)"/><text x="99.1123%" y="719.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="98.8623%" y="693" width="0.1138%" height="15" fill="rgb(250,196,2)"/><text x="99.1123%" y="703.50"></text></g><g><title>copy_page (1 samples, 0.11%)</title><rect x="98.8623%" y="677" width="0.1138%" height="15" fill="rgb(227,5,17)"/><text x="99.1123%" y="687.50"></text></g><g><title>lobsters (873 samples, 99.32%)</title><rect x="0.0000%" y="917" width="99.3174%" height="15" fill="rgb(221,226,24)"/><text x="0.2500%" y="927.50">lobsters</text></g><g><title>entry_SYSCALL_64 (3 samples, 0.34%)</title><rect x="98.9761%" y="901" width="0.3413%" height="15" fill="rgb(211,5,48)"/><text x="99.2261%" y="911.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="99.2036%" y="885" width="0.1138%" height="15" fill="rgb(219,150,6)"/><text x="99.4536%" y="895.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="99.2036%" y="869" width="0.1138%" height="15" fill="rgb(251,46,16)"/><text x="99.4536%" y="879.50"></text></g><g><title>do_execve (1 samples, 0.11%)</title><rect x="99.2036%" y="853" width="0.1138%" height="15" fill="rgb(220,204,40)"/><text x="99.4536%" y="863.50"></text></g><g><title>__do_execve_file (1 samples, 0.11%)</title><rect x="99.2036%" y="837" width="0.1138%" height="15" fill="rgb(211,85,2)"/><text x="99.4536%" y="847.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.11%)</title><rect x="99.2036%" y="821" width="0.1138%" height="15" fill="rgb(229,17,7)"/><text x="99.4536%" y="831.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="99.2036%" y="805" width="0.1138%" height="15" fill="rgb(239,72,28)"/><text x="99.4536%" y="815.50"></text></g><g><title>elf_map (1 samples, 0.11%)</title><rect x="99.2036%" y="789" width="0.1138%" height="15" fill="rgb(230,47,54)"/><text x="99.4536%" y="799.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="99.2036%" y="773" width="0.1138%" height="15" fill="rgb(214,50,8)"/><text x="99.4536%" y="783.50"></text></g><g><title>down_write_killable (1 samples, 0.11%)</title><rect x="99.2036%" y="757" width="0.1138%" height="15" fill="rgb(216,198,43)"/><text x="99.4536%" y="767.50"></text></g><g><title>all (879 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(234,20,35)"/><text x="0.2500%" y="943.50"></text></g><g><title>perf (6 samples, 0.68%)</title><rect x="99.3174%" y="917" width="0.6826%" height="15" fill="rgb(254,45,19)"/><text x="99.5674%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.68%)</title><rect x="99.3174%" y="901" width="0.6826%" height="15" fill="rgb(219,14,44)"/><text x="99.5674%" y="911.50"></text></g><g><title>do_syscall_64 (6 samples, 0.68%)</title><rect x="99.3174%" y="885" width="0.6826%" height="15" fill="rgb(217,220,26)"/><text x="99.5674%" y="895.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.68%)</title><rect x="99.3174%" y="869" width="0.6826%" height="15" fill="rgb(213,158,28)"/><text x="99.5674%" y="879.50"></text></g><g><title>do_execve (6 samples, 0.68%)</title><rect x="99.3174%" y="853" width="0.6826%" height="15" fill="rgb(252,51,52)"/><text x="99.5674%" y="863.50"></text></g><g><title>__do_execve_file (6 samples, 0.68%)</title><rect x="99.3174%" y="837" width="0.6826%" height="15" fill="rgb(246,89,16)"/><text x="99.5674%" y="847.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.68%)</title><rect x="99.3174%" y="821" width="0.6826%" height="15" fill="rgb(216,158,49)"/><text x="99.5674%" y="831.50"></text></g><g><title>load_elf_binary (6 samples, 0.68%)</title><rect x="99.3174%" y="805" width="0.6826%" height="15" fill="rgb(236,107,19)"/><text x="99.5674%" y="815.50"></text></g><g><title>setup_new_exec (6 samples, 0.68%)</title><rect x="99.3174%" y="789" width="0.6826%" height="15" fill="rgb(228,185,30)"/><text x="99.5674%" y="799.50"></text></g><g><title>perf_event_exec (6 samples, 0.68%)</title><rect x="99.3174%" y="773" width="0.6826%" height="15" fill="rgb(246,134,8)"/><text x="99.5674%" y="783.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.57%)</title><rect x="99.4312%" y="757" width="0.5688%" height="15" fill="rgb(214,143,50)"/><text x="99.6812%" y="767.50"></text></g><g><title>native_write_msr (5 samples, 0.57%)</title><rect x="99.4312%" y="741" width="0.5688%" height="15" fill="rgb(228,75,8)"/><text x="99.6812%" y="751.50"></text></g></svg></svg>