<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.23%)</title><rect x="0.0000%" y="853" width="0.2270%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.34%)</title><rect x="0.2270%" y="853" width="0.3405%" height="15" fill="rgb(217,0,24)"/><text x="0.4770%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="0.5675%" y="837" width="0.1135%" height="15" fill="rgb(221,193,54)"/><text x="0.8175%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="0.6810%" y="837" width="0.1135%" height="15" fill="rgb(248,212,6)"/><text x="0.9310%" y="847.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="0.7946%" y="837" width="0.1135%" height="15" fill="rgb(208,68,35)"/><text x="1.0446%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="0.7946%" y="821" width="0.1135%" height="15" fill="rgb(232,128,0)"/><text x="1.0446%" y="831.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="0.9081%" y="837" width="0.1135%" height="15" fill="rgb(207,160,47)"/><text x="1.1581%" y="847.50"></text></g><g><title>[[stack]] (6 samples, 0.68%)</title><rect x="0.5675%" y="853" width="0.6810%" height="15" fill="rgb(228,23,34)"/><text x="0.8175%" y="863.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.23%)</title><rect x="1.0216%" y="837" width="0.2270%" height="15" fill="rgb(218,30,26)"/><text x="1.2716%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="1.2486%" y="837" width="0.1135%" height="15" fill="rgb(220,122,19)"/><text x="1.4986%" y="847.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.11%)</title><rect x="1.3621%" y="837" width="0.1135%" height="15" fill="rgb(250,228,42)"/><text x="1.6121%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="1.4756%" y="837" width="0.1135%" height="15" fill="rgb(240,193,28)"/><text x="1.7256%" y="847.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.23%)</title><rect x="1.5891%" y="837" width="0.2270%" height="15" fill="rgb(216,20,37)"/><text x="1.8391%" y="847.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="1.8161%" y="837" width="0.1135%" height="15" fill="rgb(206,188,39)"/><text x="2.0661%" y="847.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.57%)</title><rect x="1.9296%" y="837" width="0.5675%" height="15" fill="rgb(217,207,13)"/><text x="2.1796%" y="847.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="2.4972%" y="837" width="0.1135%" height="15" fill="rgb(231,73,38)"/><text x="2.7472%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="2.4972%" y="821" width="0.1135%" height="15" fill="rgb(225,20,46)"/><text x="2.7472%" y="831.50"></text></g><g><title>__libc_send (3 samples, 0.34%)</title><rect x="2.6107%" y="837" width="0.3405%" height="15" fill="rgb(210,31,41)"/><text x="2.8607%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.34%)</title><rect x="2.6107%" y="821" width="0.3405%" height="15" fill="rgb(221,200,47)"/><text x="2.8607%" y="831.50"></text></g><g><title>_int_free (4 samples, 0.45%)</title><rect x="2.9512%" y="837" width="0.4540%" height="15" fill="rgb(226,26,5)"/><text x="3.2012%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="3.4052%" y="837" width="0.1135%" height="15" fill="rgb(249,33,26)"/><text x="3.6552%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="3.5187%" y="837" width="0.1135%" height="15" fill="rgb(235,183,28)"/><text x="3.7687%" y="847.50"></text></g><g><title>decor::answer_rows (1 samples, 0.11%)</title><rect x="3.6322%" y="837" width="0.1135%" height="15" fill="rgb(221,5,38)"/><text x="3.8822%" y="847.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="3.7457%" y="837" width="0.1135%" height="15" fill="rgb(247,18,42)"/><text x="3.9957%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="3.8593%" y="837" width="0.1135%" height="15" fill="rgb(241,131,45)"/><text x="4.1093%" y="847.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="3.9728%" y="837" width="0.1135%" height="15" fill="rgb(249,31,29)"/><text x="4.2228%" y="847.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="4.0863%" y="837" width="0.1135%" height="15" fill="rgb(225,111,53)"/><text x="4.3363%" y="847.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="4.1998%" y="837" width="0.1135%" height="15" fill="rgb(238,160,17)"/><text x="4.4498%" y="847.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.11%)</title><rect x="4.3133%" y="837" width="0.1135%" height="15" fill="rgb(214,148,48)"/><text x="4.5633%" y="847.50"></text></g><g><title>mysql_common::packets::OkPacket::status_flags (1 samples, 0.11%)</title><rect x="4.4268%" y="837" width="0.1135%" height="15" fill="rgb(232,36,49)"/><text x="4.6768%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="4.5403%" y="837" width="0.1135%" height="15" fill="rgb(209,103,24)"/><text x="4.7903%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="4.6538%" y="837" width="0.1135%" height="15" fill="rgb(229,88,8)"/><text x="4.9038%" y="847.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.23%)</title><rect x="4.7673%" y="837" width="0.2270%" height="15" fill="rgb(213,181,19)"/><text x="5.0173%" y="847.50"></text></g><g><title>mysql_common::row::Row::unwrap (2 samples, 0.23%)</title><rect x="4.9943%" y="837" width="0.2270%" height="15" fill="rgb(254,191,54)"/><text x="5.2443%" y="847.50"></text></g><g><title>[anon] (36 samples, 4.09%)</title><rect x="1.2486%" y="853" width="4.0863%" height="15" fill="rgb(241,83,37)"/><text x="1.4986%" y="863.50">[ano..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="5.2213%" y="837" width="0.1135%" height="15" fill="rgb(233,36,39)"/><text x="5.4713%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="5.2213%" y="821" width="0.1135%" height="15" fill="rgb(226,3,54)"/><text x="5.4713%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="5.2213%" y="805" width="0.1135%" height="15" fill="rgb(245,192,40)"/><text x="5.4713%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="5.2213%" y="789" width="0.1135%" height="15" fill="rgb(238,167,29)"/><text x="5.4713%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="5.2213%" y="773" width="0.1135%" height="15" fill="rgb(232,182,51)"/><text x="5.4713%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="5.2213%" y="757" width="0.1135%" height="15" fill="rgb(231,60,39)"/><text x="5.4713%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="5.3348%" y="837" width="0.1135%" height="15" fill="rgb(208,69,12)"/><text x="5.5848%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="5.4484%" y="837" width="0.1135%" height="15" fill="rgb(235,93,37)"/><text x="5.6984%" y="847.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="5.5619%" y="837" width="0.1135%" height="15" fill="rgb(213,116,39)"/><text x="5.8119%" y="847.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="5.6754%" y="837" width="0.1135%" height="15" fill="rgb(222,207,29)"/><text x="5.9254%" y="847.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="5.7889%" y="837" width="0.1135%" height="15" fill="rgb(206,96,30)"/><text x="6.0389%" y="847.50"></text></g><g><title>[lobsters] (1 samples, 0.11%)</title><rect x="5.9024%" y="837" width="0.1135%" height="15" fill="rgb(218,138,4)"/><text x="6.1524%" y="847.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="5.9024%" y="821" width="0.1135%" height="15" fill="rgb(250,191,14)"/><text x="6.1524%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.23%)</title><rect x="6.0159%" y="837" width="0.2270%" height="15" fill="rgb(239,60,40)"/><text x="6.2659%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="6.2429%" y="837" width="0.1135%" height="15" fill="rgb(206,27,48)"/><text x="6.4929%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="6.3564%" y="677" width="0.1135%" height="15" fill="rgb(225,35,8)"/><text x="6.6064%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="6.3564%" y="661" width="0.1135%" height="15" fill="rgb(250,213,24)"/><text x="6.6064%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="6.3564%" y="645" width="0.1135%" height="15" fill="rgb(247,123,22)"/><text x="6.6064%" y="655.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="6.3564%" y="629" width="0.1135%" height="15" fill="rgb(231,138,38)"/><text x="6.6064%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="6.3564%" y="613" width="0.1135%" height="15" fill="rgb(231,145,46)"/><text x="6.6064%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="6.4699%" y="645" width="0.1135%" height="15" fill="rgb(251,118,11)"/><text x="6.7199%" y="655.50"></text></g><g><title>__libc_start_main (3 samples, 0.34%)</title><rect x="6.3564%" y="837" width="0.3405%" height="15" fill="rgb(217,147,25)"/><text x="6.6064%" y="847.50"></text></g><g><title>main (3 samples, 0.34%)</title><rect x="6.3564%" y="821" width="0.3405%" height="15" fill="rgb(247,81,37)"/><text x="6.6064%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.34%)</title><rect x="6.3564%" y="805" width="0.3405%" height="15" fill="rgb(209,12,38)"/><text x="6.6064%" y="815.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.34%)</title><rect x="6.3564%" y="789" width="0.3405%" height="15" fill="rgb(227,1,9)"/><text x="6.6064%" y="799.50"></text></g><g><title>std::panicking::try (3 samples, 0.34%)</title><rect x="6.3564%" y="773" width="0.3405%" height="15" fill="rgb(248,47,43)"/><text x="6.6064%" y="783.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.34%)</title><rect x="6.3564%" y="757" width="0.3405%" height="15" fill="rgb(221,10,30)"/><text x="6.6064%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.34%)</title><rect x="6.3564%" y="741" width="0.3405%" height="15" fill="rgb(210,229,1)"/><text x="6.6064%" y="751.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.34%)</title><rect x="6.3564%" y="725" width="0.3405%" height="15" fill="rgb(222,148,37)"/><text x="6.6064%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.34%)</title><rect x="6.3564%" y="709" width="0.3405%" height="15" fill="rgb(234,67,33)"/><text x="6.6064%" y="719.50"></text></g><g><title>lobsters::main (3 samples, 0.34%)</title><rect x="6.3564%" y="693" width="0.3405%" height="15" fill="rgb(247,98,35)"/><text x="6.6064%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.23%)</title><rect x="6.4699%" y="677" width="0.2270%" height="15" fill="rgb(247,138,52)"/><text x="6.7199%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.23%)</title><rect x="6.4699%" y="661" width="0.2270%" height="15" fill="rgb(213,79,30)"/><text x="6.7199%" y="671.50"></text></g><g><title>mysql_common::packets::column_from_payload (1 samples, 0.11%)</title><rect x="6.5834%" y="645" width="0.1135%" height="15" fill="rgb(246,177,23)"/><text x="6.8334%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="6.6969%" y="837" width="0.1135%" height="15" fill="rgb(230,62,27)"/><text x="6.9469%" y="847.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="6.8104%" y="837" width="0.1135%" height="15" fill="rgb(216,154,8)"/><text x="7.0604%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (1 samples, 0.11%)</title><rect x="6.8104%" y="821" width="0.1135%" height="15" fill="rgb(244,35,45)"/><text x="7.0604%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="6.8104%" y="805" width="0.1135%" height="15" fill="rgb(251,115,12)"/><text x="7.0604%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="6.8104%" y="789" width="0.1135%" height="15" fill="rgb(240,54,50)"/><text x="7.0604%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::DropObjectsStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="6.8104%" y="773" width="0.1135%" height="15" fill="rgb(233,84,52)"/><text x="7.0604%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="6.8104%" y="757" width="0.1135%" height="15" fill="rgb(207,117,47)"/><text x="7.0604%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="6.8104%" y="741" width="0.1135%" height="15" fill="rgb(249,43,39)"/><text x="7.0604%" y="751.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="6.8104%" y="725" width="0.1135%" height="15" fill="rgb(209,38,44)"/><text x="7.0604%" y="735.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="6.8104%" y="709" width="0.1135%" height="15" fill="rgb(236,212,23)"/><text x="7.0604%" y="719.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="6.9240%" y="533" width="0.1135%" height="15" fill="rgb(242,79,21)"/><text x="7.1740%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="6.9240%" y="517" width="0.1135%" height="15" fill="rgb(211,96,35)"/><text x="7.1740%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="6.9240%" y="501" width="0.1135%" height="15" fill="rgb(253,215,40)"/><text x="7.1740%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="6.9240%" y="485" width="0.1135%" height="15" fill="rgb(211,81,21)"/><text x="7.1740%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="6.9240%" y="469" width="0.1135%" height="15" fill="rgb(208,190,38)"/><text x="7.1740%" y="479.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="6.9240%" y="453" width="0.1135%" height="15" fill="rgb(235,213,38)"/><text x="7.1740%" y="463.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="6.9240%" y="437" width="0.1135%" height="15" fill="rgb(237,122,38)"/><text x="7.1740%" y="447.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="6.9240%" y="421" width="0.1135%" height="15" fill="rgb(244,218,35)"/><text x="7.1740%" y="431.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="6.9240%" y="405" width="0.1135%" height="15" fill="rgb(240,68,47)"/><text x="7.1740%" y="415.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="6.9240%" y="389" width="0.1135%" height="15" fill="rgb(210,16,53)"/><text x="7.1740%" y="399.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="6.9240%" y="373" width="0.1135%" height="15" fill="rgb(235,124,12)"/><text x="7.1740%" y="383.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="6.9240%" y="357" width="0.1135%" height="15" fill="rgb(224,169,11)"/><text x="7.1740%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="6.9240%" y="341" width="0.1135%" height="15" fill="rgb(250,166,2)"/><text x="7.1740%" y="351.50"></text></g><g><title>ip_rcv (1 samples, 0.11%)</title><rect x="6.9240%" y="325" width="0.1135%" height="15" fill="rgb(242,216,29)"/><text x="7.1740%" y="335.50"></text></g><g><title>ip_local_deliver (1 samples, 0.11%)</title><rect x="6.9240%" y="309" width="0.1135%" height="15" fill="rgb(230,116,27)"/><text x="7.1740%" y="319.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="6.9240%" y="293" width="0.1135%" height="15" fill="rgb(228,99,48)"/><text x="7.1740%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="6.9240%" y="277" width="0.1135%" height="15" fill="rgb(253,11,6)"/><text x="7.1740%" y="287.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="6.9240%" y="261" width="0.1135%" height="15" fill="rgb(247,143,39)"/><text x="7.1740%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="6.9240%" y="245" width="0.1135%" height="15" fill="rgb(236,97,10)"/><text x="7.1740%" y="255.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.11%)</title><rect x="6.9240%" y="229" width="0.1135%" height="15" fill="rgb(233,208,19)"/><text x="7.1740%" y="239.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.23%)</title><rect x="6.9240%" y="837" width="0.2270%" height="15" fill="rgb(216,164,2)"/><text x="7.1740%" y="847.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.23%)</title><rect x="6.9240%" y="821" width="0.2270%" height="15" fill="rgb(220,129,5)"/><text x="7.1740%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.23%)</title><rect x="6.9240%" y="805" width="0.2270%" height="15" fill="rgb(242,17,10)"/><text x="7.1740%" y="815.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.23%)</title><rect x="6.9240%" y="789" width="0.2270%" height="15" fill="rgb(242,107,0)"/><text x="7.1740%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.23%)</title><rect x="6.9240%" y="773" width="0.2270%" height="15" fill="rgb(251,28,31)"/><text x="7.1740%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.23%)</title><rect x="6.9240%" y="757" width="0.2270%" height="15" fill="rgb(233,223,10)"/><text x="7.1740%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.23%)</title><rect x="6.9240%" y="741" width="0.2270%" height="15" fill="rgb(215,21,27)"/><text x="7.1740%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.23%)</title><rect x="6.9240%" y="725" width="0.2270%" height="15" fill="rgb(232,23,21)"/><text x="7.1740%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.23%)</title><rect x="6.9240%" y="709" width="0.2270%" height="15" fill="rgb(244,5,23)"/><text x="7.1740%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.23%)</title><rect x="6.9240%" y="693" width="0.2270%" height="15" fill="rgb(226,81,46)"/><text x="7.1740%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.23%)</title><rect x="6.9240%" y="677" width="0.2270%" height="15" fill="rgb(247,70,30)"/><text x="7.1740%" y="687.50"></text></g><g><title>__libc_send (2 samples, 0.23%)</title><rect x="6.9240%" y="661" width="0.2270%" height="15" fill="rgb(212,68,19)"/><text x="7.1740%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="6.9240%" y="645" width="0.2270%" height="15" fill="rgb(240,187,13)"/><text x="7.1740%" y="655.50"></text></g><g><title>do_syscall_64 (2 samples, 0.23%)</title><rect x="6.9240%" y="629" width="0.2270%" height="15" fill="rgb(223,113,26)"/><text x="7.1740%" y="639.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.23%)</title><rect x="6.9240%" y="613" width="0.2270%" height="15" fill="rgb(206,192,2)"/><text x="7.1740%" y="623.50"></text></g><g><title>__sys_sendto (2 samples, 0.23%)</title><rect x="6.9240%" y="597" width="0.2270%" height="15" fill="rgb(241,108,4)"/><text x="7.1740%" y="607.50"></text></g><g><title>sock_sendmsg (2 samples, 0.23%)</title><rect x="6.9240%" y="581" width="0.2270%" height="15" fill="rgb(247,173,49)"/><text x="7.1740%" y="591.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.23%)</title><rect x="6.9240%" y="565" width="0.2270%" height="15" fill="rgb(224,114,35)"/><text x="7.1740%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.23%)</title><rect x="6.9240%" y="549" width="0.2270%" height="15" fill="rgb(245,159,27)"/><text x="7.1740%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="7.0375%" y="533" width="0.1135%" height="15" fill="rgb(245,172,44)"/><text x="7.2875%" y="543.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="7.0375%" y="517" width="0.1135%" height="15" fill="rgb(236,23,11)"/><text x="7.2875%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="7.0375%" y="501" width="0.1135%" height="15" fill="rgb(205,117,38)"/><text x="7.2875%" y="511.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="7.1510%" y="821" width="0.1135%" height="15" fill="rgb(237,72,25)"/><text x="7.4010%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="7.1510%" y="805" width="0.1135%" height="15" fill="rgb(244,70,9)"/><text x="7.4010%" y="815.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="7.1510%" y="789" width="0.1135%" height="15" fill="rgb(217,125,39)"/><text x="7.4010%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="7.1510%" y="773" width="0.1135%" height="15" fill="rgb(235,36,10)"/><text x="7.4010%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.1510%" y="757" width="0.1135%" height="15" fill="rgb(251,123,47)"/><text x="7.4010%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="7.1510%" y="741" width="0.1135%" height="15" fill="rgb(221,13,13)"/><text x="7.4010%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="7.1510%" y="725" width="0.1135%" height="15" fill="rgb(238,131,9)"/><text x="7.4010%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="7.1510%" y="709" width="0.1135%" height="15" fill="rgb(211,50,8)"/><text x="7.4010%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="7.1510%" y="693" width="0.1135%" height="15" fill="rgb(245,182,24)"/><text x="7.4010%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="7.1510%" y="677" width="0.1135%" height="15" fill="rgb(242,14,37)"/><text x="7.4010%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.2645%" y="805" width="0.1135%" height="15" fill="rgb(246,228,12)"/><text x="7.5145%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.2645%" y="789" width="0.1135%" height="15" fill="rgb(213,55,15)"/><text x="7.5145%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.2645%" y="773" width="0.1135%" height="15" fill="rgb(209,9,3)"/><text x="7.5145%" y="783.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="7.2645%" y="757" width="0.1135%" height="15" fill="rgb(230,59,30)"/><text x="7.5145%" y="767.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="7.2645%" y="741" width="0.1135%" height="15" fill="rgb(209,121,21)"/><text x="7.5145%" y="751.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="7.2645%" y="725" width="0.1135%" height="15" fill="rgb(220,109,13)"/><text x="7.5145%" y="735.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="7.2645%" y="709" width="0.1135%" height="15" fill="rgb(232,18,1)"/><text x="7.5145%" y="719.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="7.2645%" y="693" width="0.1135%" height="15" fill="rgb(215,41,42)"/><text x="7.5145%" y="703.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="7.2645%" y="677" width="0.1135%" height="15" fill="rgb(224,123,36)"/><text x="7.5145%" y="687.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="7.2645%" y="661" width="0.1135%" height="15" fill="rgb(240,125,3)"/><text x="7.5145%" y="671.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="7.2645%" y="645" width="0.1135%" height="15" fill="rgb(205,98,50)"/><text x="7.5145%" y="655.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="7.2645%" y="629" width="0.1135%" height="15" fill="rgb(205,185,37)"/><text x="7.5145%" y="639.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.23%)</title><rect x="7.2645%" y="821" width="0.2270%" height="15" fill="rgb(238,207,15)"/><text x="7.5145%" y="831.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.11%)</title><rect x="7.3780%" y="805" width="0.1135%" height="15" fill="rgb(213,199,42)"/><text x="7.6280%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.3780%" y="789" width="0.1135%" height="15" fill="rgb(235,201,11)"/><text x="7.6280%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.3780%" y="773" width="0.1135%" height="15" fill="rgb(207,46,11)"/><text x="7.6280%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.3780%" y="757" width="0.1135%" height="15" fill="rgb(241,35,35)"/><text x="7.6280%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="7.3780%" y="741" width="0.1135%" height="15" fill="rgb(243,32,47)"/><text x="7.6280%" y="751.50"></text></g><g><title>__GI___getmntent_r (1 samples, 0.11%)</title><rect x="7.3780%" y="725" width="0.1135%" height="15" fill="rgb(247,202,23)"/><text x="7.6280%" y="735.50"></text></g><g><title>get_mnt_entry (1 samples, 0.11%)</title><rect x="7.3780%" y="709" width="0.1135%" height="15" fill="rgb(219,102,11)"/><text x="7.6280%" y="719.50"></text></g><g><title>__GI___fgets_unlocked (1 samples, 0.11%)</title><rect x="7.3780%" y="693" width="0.1135%" height="15" fill="rgb(243,110,44)"/><text x="7.6280%" y="703.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.11%)</title><rect x="7.3780%" y="677" width="0.1135%" height="15" fill="rgb(222,74,54)"/><text x="7.6280%" y="687.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.11%)</title><rect x="7.3780%" y="661" width="0.1135%" height="15" fill="rgb(216,99,12)"/><text x="7.6280%" y="671.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.11%)</title><rect x="7.3780%" y="645" width="0.1135%" height="15" fill="rgb(226,22,26)"/><text x="7.6280%" y="655.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.11%)</title><rect x="7.3780%" y="629" width="0.1135%" height="15" fill="rgb(217,163,10)"/><text x="7.6280%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="7.3780%" y="613" width="0.1135%" height="15" fill="rgb(213,25,53)"/><text x="7.6280%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="7.3780%" y="597" width="0.1135%" height="15" fill="rgb(252,105,26)"/><text x="7.6280%" y="607.50"></text></g><g><title>ksys_read (1 samples, 0.11%)</title><rect x="7.3780%" y="581" width="0.1135%" height="15" fill="rgb(220,39,43)"/><text x="7.6280%" y="591.50"></text></g><g><title>vfs_read (1 samples, 0.11%)</title><rect x="7.3780%" y="565" width="0.1135%" height="15" fill="rgb(229,68,48)"/><text x="7.6280%" y="575.50"></text></g><g><title>seq_read (1 samples, 0.11%)</title><rect x="7.3780%" y="549" width="0.1135%" height="15" fill="rgb(252,8,32)"/><text x="7.6280%" y="559.50"></text></g><g><title>show_vfsmnt (1 samples, 0.11%)</title><rect x="7.3780%" y="533" width="0.1135%" height="15" fill="rgb(223,20,43)"/><text x="7.6280%" y="543.50"></text></g><g><title>cgroup1_show_options (1 samples, 0.11%)</title><rect x="7.3780%" y="517" width="0.1135%" height="15" fill="rgb(229,81,49)"/><text x="7.6280%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="7.4915%" y="709" width="0.1135%" height="15" fill="rgb(236,28,36)"/><text x="7.7415%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="7.4915%" y="693" width="0.1135%" height="15" fill="rgb(249,185,26)"/><text x="7.7415%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="7.4915%" y="677" width="0.1135%" height="15" fill="rgb(249,174,33)"/><text x="7.7415%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="7.6050%" y="693" width="0.1135%" height="15" fill="rgb(233,201,37)"/><text x="7.8550%" y="703.50"></text></g><g><title>lobsters::main (6 samples, 0.68%)</title><rect x="7.1510%" y="837" width="0.6810%" height="15" fill="rgb(221,78,26)"/><text x="7.4010%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.34%)</title><rect x="7.4915%" y="821" width="0.3405%" height="15" fill="rgb(250,127,30)"/><text x="7.7415%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.34%)</title><rect x="7.4915%" y="805" width="0.3405%" height="15" fill="rgb(230,49,44)"/><text x="7.7415%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.34%)</title><rect x="7.4915%" y="789" width="0.3405%" height="15" fill="rgb(229,67,23)"/><text x="7.7415%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="7.4915%" y="773" width="0.3405%" height="15" fill="rgb(249,83,47)"/><text x="7.7415%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.34%)</title><rect x="7.4915%" y="757" width="0.3405%" height="15" fill="rgb(215,43,3)"/><text x="7.7415%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.34%)</title><rect x="7.4915%" y="741" width="0.3405%" height="15" fill="rgb(238,154,13)"/><text x="7.7415%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="7.4915%" y="725" width="0.3405%" height="15" fill="rgb(219,56,2)"/><text x="7.7415%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.23%)</title><rect x="7.6050%" y="709" width="0.2270%" height="15" fill="rgb(233,0,4)"/><text x="7.8550%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="7.7185%" y="693" width="0.1135%" height="15" fill="rgb(235,30,7)"/><text x="7.9685%" y="703.50"></text></g><g><title>main (1 samples, 0.11%)</title><rect x="7.8320%" y="837" width="0.1135%" height="15" fill="rgb(250,79,13)"/><text x="8.0820%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.11%)</title><rect x="7.8320%" y="821" width="0.1135%" height="15" fill="rgb(211,146,34)"/><text x="8.0820%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.11%)</title><rect x="7.8320%" y="805" width="0.1135%" height="15" fill="rgb(228,22,38)"/><text x="8.0820%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.11%)</title><rect x="7.8320%" y="789" width="0.1135%" height="15" fill="rgb(235,168,5)"/><text x="8.0820%" y="799.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.11%)</title><rect x="7.8320%" y="773" width="0.1135%" height="15" fill="rgb(221,155,16)"/><text x="8.0820%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.11%)</title><rect x="7.8320%" y="757" width="0.1135%" height="15" fill="rgb(215,215,53)"/><text x="8.0820%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.11%)</title><rect x="7.8320%" y="741" width="0.1135%" height="15" fill="rgb(223,4,10)"/><text x="8.0820%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.11%)</title><rect x="7.8320%" y="725" width="0.1135%" height="15" fill="rgb(234,103,6)"/><text x="8.0820%" y="735.50"></text></g><g><title>lobsters::main (1 samples, 0.11%)</title><rect x="7.8320%" y="709" width="0.1135%" height="15" fill="rgb(227,97,0)"/><text x="8.0820%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="7.8320%" y="693" width="0.1135%" height="15" fill="rgb(234,150,53)"/><text x="8.0820%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="7.8320%" y="677" width="0.1135%" height="15" fill="rgb(228,201,54)"/><text x="8.0820%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="7.8320%" y="661" width="0.1135%" height="15" fill="rgb(222,22,37)"/><text x="8.0820%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="7.8320%" y="645" width="0.1135%" height="15" fill="rgb(237,53,32)"/><text x="8.0820%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="7.8320%" y="629" width="0.1135%" height="15" fill="rgb(233,25,53)"/><text x="8.0820%" y="639.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.11%)</title><rect x="7.9455%" y="837" width="0.1135%" height="15" fill="rgb(210,40,34)"/><text x="8.1955%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="7.9455%" y="821" width="0.1135%" height="15" fill="rgb(241,220,44)"/><text x="8.1955%" y="831.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="7.9455%" y="805" width="0.1135%" height="15" fill="rgb(235,28,35)"/><text x="8.1955%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="7.9455%" y="789" width="0.1135%" height="15" fill="rgb(210,56,17)"/><text x="8.1955%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.11%)</title><rect x="7.9455%" y="773" width="0.1135%" height="15" fill="rgb(224,130,29)"/><text x="8.1955%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="7.9455%" y="757" width="0.1135%" height="15" fill="rgb(235,212,8)"/><text x="8.1955%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="7.9455%" y="741" width="0.1135%" height="15" fill="rgb(223,33,50)"/><text x="8.1955%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="7.9455%" y="725" width="0.1135%" height="15" fill="rgb(219,149,13)"/><text x="8.1955%" y="735.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.9455%" y="709" width="0.1135%" height="15" fill="rgb(250,156,29)"/><text x="8.1955%" y="719.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="7.9455%" y="693" width="0.1135%" height="15" fill="rgb(216,193,19)"/><text x="8.1955%" y="703.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.11%)</title><rect x="8.0590%" y="837" width="0.1135%" height="15" fill="rgb(216,135,14)"/><text x="8.3090%" y="847.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.23%)</title><rect x="8.1725%" y="837" width="0.2270%" height="15" fill="rgb(241,47,5)"/><text x="8.4225%" y="847.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="8.3995%" y="837" width="0.1135%" height="15" fill="rgb(233,42,35)"/><text x="8.6495%" y="847.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="8.3995%" y="821" width="0.1135%" height="15" fill="rgb(231,13,6)"/><text x="8.6495%" y="831.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.11%)</title><rect x="8.3995%" y="805" width="0.1135%" height="15" fill="rgb(207,181,40)"/><text x="8.6495%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="8.3995%" y="789" width="0.1135%" height="15" fill="rgb(254,173,49)"/><text x="8.6495%" y="799.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="8.3995%" y="773" width="0.1135%" height="15" fill="rgb(221,1,38)"/><text x="8.6495%" y="783.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="8.3995%" y="757" width="0.1135%" height="15" fill="rgb(206,124,46)"/><text x="8.6495%" y="767.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="8.3995%" y="741" width="0.1135%" height="15" fill="rgb(249,21,11)"/><text x="8.6495%" y="751.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="8.3995%" y="725" width="0.1135%" height="15" fill="rgb(222,201,40)"/><text x="8.6495%" y="735.50"></text></g><g><title>mem_cgroup_try_charge_delay (1 samples, 0.11%)</title><rect x="8.3995%" y="709" width="0.1135%" height="15" fill="rgb(235,61,29)"/><text x="8.6495%" y="719.50"></text></g><g><title>mem_cgroup_try_charge (1 samples, 0.11%)</title><rect x="8.3995%" y="693" width="0.1135%" height="15" fill="rgb(219,207,3)"/><text x="8.6495%" y="703.50"></text></g><g><title>try_charge (1 samples, 0.11%)</title><rect x="8.3995%" y="677" width="0.1135%" height="15" fill="rgb(222,56,46)"/><text x="8.6495%" y="687.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="8.5131%" y="837" width="0.1135%" height="15" fill="rgb(239,76,54)"/><text x="8.7631%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.11%)</title><rect x="8.5131%" y="821" width="0.1135%" height="15" fill="rgb(231,124,27)"/><text x="8.7631%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.11%)</title><rect x="8.5131%" y="805" width="0.1135%" height="15" fill="rgb(249,195,6)"/><text x="8.7631%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="8.5131%" y="789" width="0.1135%" height="15" fill="rgb(237,174,47)"/><text x="8.7631%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="8.8536%" y="533" width="0.1135%" height="15" fill="rgb(206,201,31)"/><text x="9.1036%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="8.9671%" y="533" width="0.1135%" height="15" fill="rgb(231,57,52)"/><text x="9.2171%" y="543.50"></text></g><g><title>start_thread (5 samples, 0.57%)</title><rect x="8.6266%" y="837" width="0.5675%" height="15" fill="rgb(248,177,22)"/><text x="8.8766%" y="847.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.57%)</title><rect x="8.6266%" y="821" width="0.5675%" height="15" fill="rgb(215,211,37)"/><text x="8.8766%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.57%)</title><rect x="8.6266%" y="805" width="0.5675%" height="15" fill="rgb(241,128,51)"/><text x="8.8766%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.57%)</title><rect x="8.6266%" y="789" width="0.5675%" height="15" fill="rgb(227,165,31)"/><text x="8.8766%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5 samples, 0.57%)</title><rect x="8.6266%" y="773" width="0.5675%" height="15" fill="rgb(228,167,24)"/><text x="8.8766%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.57%)</title><rect x="8.6266%" y="757" width="0.5675%" height="15" fill="rgb(228,143,12)"/><text x="8.8766%" y="767.50"></text></g><g><title>decor::Shim::run_on_tcp (5 samples, 0.57%)</title><rect x="8.6266%" y="741" width="0.5675%" height="15" fill="rgb(249,149,8)"/><text x="8.8766%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (5 samples, 0.57%)</title><rect x="8.6266%" y="725" width="0.5675%" height="15" fill="rgb(243,35,44)"/><text x="8.8766%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (5 samples, 0.57%)</title><rect x="8.6266%" y="709" width="0.5675%" height="15" fill="rgb(246,89,9)"/><text x="8.8766%" y="719.50"></text></g><g><title>decor::answer_rows (5 samples, 0.57%)</title><rect x="8.6266%" y="693" width="0.5675%" height="15" fill="rgb(233,213,13)"/><text x="8.8766%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="8.6266%" y="677" width="0.5675%" height="15" fill="rgb(233,141,41)"/><text x="8.8766%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (5 samples, 0.57%)</title><rect x="8.6266%" y="661" width="0.5675%" height="15" fill="rgb(239,167,4)"/><text x="8.8766%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (5 samples, 0.57%)</title><rect x="8.6266%" y="645" width="0.5675%" height="15" fill="rgb(209,217,16)"/><text x="8.8766%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.57%)</title><rect x="8.6266%" y="629" width="0.5675%" height="15" fill="rgb(219,88,35)"/><text x="8.8766%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="8.6266%" y="613" width="0.5675%" height="15" fill="rgb(220,193,23)"/><text x="8.8766%" y="623.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.57%)</title><rect x="8.6266%" y="597" width="0.5675%" height="15" fill="rgb(230,90,52)"/><text x="8.8766%" y="607.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (5 samples, 0.57%)</title><rect x="8.6266%" y="581" width="0.5675%" height="15" fill="rgb(252,106,19)"/><text x="8.8766%" y="591.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.57%)</title><rect x="8.6266%" y="565" width="0.5675%" height="15" fill="rgb(206,74,20)"/><text x="8.8766%" y="575.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.57%)</title><rect x="8.6266%" y="549" width="0.5675%" height="15" fill="rgb(230,138,44)"/><text x="8.8766%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="9.0806%" y="533" width="0.1135%" height="15" fill="rgb(235,182,43)"/><text x="9.3306%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="9.1941%" y="837" width="0.1135%" height="15" fill="rgb(242,16,51)"/><text x="9.4441%" y="847.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (2 samples, 0.23%)</title><rect x="9.3076%" y="837" width="0.2270%" height="15" fill="rgb(248,9,4)"/><text x="9.5576%" y="847.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (2 samples, 0.23%)</title><rect x="9.3076%" y="821" width="0.2270%" height="15" fill="rgb(210,31,22)"/><text x="9.5576%" y="831.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (2 samples, 0.23%)</title><rect x="9.3076%" y="805" width="0.2270%" height="15" fill="rgb(239,54,39)"/><text x="9.5576%" y="815.50"></text></g><g><title>std::io::error::Error::new (2 samples, 0.23%)</title><rect x="9.3076%" y="789" width="0.2270%" height="15" fill="rgb(230,99,41)"/><text x="9.5576%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.23%)</title><rect x="9.3076%" y="773" width="0.2270%" height="15" fill="rgb(253,106,12)"/><text x="9.5576%" y="783.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (2 samples, 0.23%)</title><rect x="9.3076%" y="757" width="0.2270%" height="15" fill="rgb(213,46,41)"/><text x="9.5576%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.23%)</title><rect x="9.3076%" y="741" width="0.2270%" height="15" fill="rgb(215,133,35)"/><text x="9.5576%" y="751.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.23%)</title><rect x="9.3076%" y="725" width="0.2270%" height="15" fill="rgb(213,28,5)"/><text x="9.5576%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.23%)</title><rect x="9.3076%" y="709" width="0.2270%" height="15" fill="rgb(215,77,49)"/><text x="9.5576%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.23%)</title><rect x="9.3076%" y="693" width="0.2270%" height="15" fill="rgb(248,100,22)"/><text x="9.5576%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.23%)</title><rect x="9.3076%" y="677" width="0.2270%" height="15" fill="rgb(208,67,9)"/><text x="9.5576%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="9.3076%" y="661" width="0.2270%" height="15" fill="rgb(219,133,21)"/><text x="9.5576%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="9.3076%" y="645" width="0.2270%" height="15" fill="rgb(246,46,29)"/><text x="9.5576%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="9.3076%" y="629" width="0.2270%" height="15" fill="rgb(246,185,52)"/><text x="9.5576%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="9.3076%" y="613" width="0.2270%" height="15" fill="rgb(252,136,11)"/><text x="9.5576%" y="623.50"></text></g><g><title>__libc_recv (2 samples, 0.23%)</title><rect x="9.3076%" y="597" width="0.2270%" height="15" fill="rgb(219,138,53)"/><text x="9.5576%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="9.3076%" y="581" width="0.2270%" height="15" fill="rgb(211,51,23)"/><text x="9.5576%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="9.5346%" y="645" width="0.1135%" height="15" fill="rgb(247,221,28)"/><text x="9.7846%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="9.5346%" y="629" width="0.1135%" height="15" fill="rgb(251,222,45)"/><text x="9.7846%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.6481%" y="645" width="0.1135%" height="15" fill="rgb(217,162,53)"/><text x="9.8981%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.34%)</title><rect x="9.5346%" y="709" width="0.3405%" height="15" fill="rgb(229,93,14)"/><text x="9.7846%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.34%)</title><rect x="9.5346%" y="693" width="0.3405%" height="15" fill="rgb(209,67,49)"/><text x="9.7846%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.34%)</title><rect x="9.5346%" y="677" width="0.3405%" height="15" fill="rgb(213,87,29)"/><text x="9.7846%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.34%)</title><rect x="9.5346%" y="661" width="0.3405%" height="15" fill="rgb(205,151,52)"/><text x="9.7846%" y="671.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="9.7616%" y="645" width="0.1135%" height="15" fill="rgb(253,215,39)"/><text x="10.0116%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="9.7616%" y="629" width="0.1135%" height="15" fill="rgb(221,220,41)"/><text x="10.0116%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="9.7616%" y="613" width="0.1135%" height="15" fill="rgb(218,133,21)"/><text x="10.0116%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="9.7616%" y="597" width="0.1135%" height="15" fill="rgb(221,193,43)"/><text x="10.0116%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="9.7616%" y="581" width="0.1135%" height="15" fill="rgb(240,128,52)"/><text x="10.0116%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="9.7616%" y="565" width="0.1135%" height="15" fill="rgb(253,114,12)"/><text x="10.0116%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="9.7616%" y="549" width="0.1135%" height="15" fill="rgb(215,223,47)"/><text x="10.0116%" y="559.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.23%)</title><rect x="9.8751%" y="709" width="0.2270%" height="15" fill="rgb(248,225,23)"/><text x="10.1251%" y="719.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.23%)</title><rect x="9.8751%" y="693" width="0.2270%" height="15" fill="rgb(250,108,0)"/><text x="10.1251%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="9.8751%" y="677" width="0.2270%" height="15" fill="rgb(228,208,7)"/><text x="10.1251%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="9.8751%" y="661" width="0.2270%" height="15" fill="rgb(244,45,10)"/><text x="10.1251%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="9.8751%" y="645" width="0.2270%" height="15" fill="rgb(207,125,25)"/><text x="10.1251%" y="655.50"></text></g><g><title>__GI___openat (2 samples, 0.23%)</title><rect x="9.8751%" y="629" width="0.2270%" height="15" fill="rgb(210,195,18)"/><text x="10.1251%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.23%)</title><rect x="9.8751%" y="613" width="0.2270%" height="15" fill="rgb(249,80,12)"/><text x="10.1251%" y="623.50"></text></g><g><title>do_syscall_64 (2 samples, 0.23%)</title><rect x="9.8751%" y="597" width="0.2270%" height="15" fill="rgb(221,65,9)"/><text x="10.1251%" y="607.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.23%)</title><rect x="9.8751%" y="581" width="0.2270%" height="15" fill="rgb(235,49,36)"/><text x="10.1251%" y="591.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.23%)</title><rect x="9.8751%" y="565" width="0.2270%" height="15" fill="rgb(225,32,20)"/><text x="10.1251%" y="575.50"></text></g><g><title>do_filp_open (2 samples, 0.23%)</title><rect x="9.8751%" y="549" width="0.2270%" height="15" fill="rgb(215,141,46)"/><text x="10.1251%" y="559.50"></text></g><g><title>path_openat (2 samples, 0.23%)</title><rect x="9.8751%" y="533" width="0.2270%" height="15" fill="rgb(250,160,47)"/><text x="10.1251%" y="543.50"></text></g><g><title>link_path_walk (2 samples, 0.23%)</title><rect x="9.8751%" y="517" width="0.2270%" height="15" fill="rgb(216,222,40)"/><text x="10.1251%" y="527.50"></text></g><g><title>walk_component (2 samples, 0.23%)</title><rect x="9.8751%" y="501" width="0.2270%" height="15" fill="rgb(234,217,39)"/><text x="10.1251%" y="511.50"></text></g><g><title>step_into (2 samples, 0.23%)</title><rect x="9.8751%" y="485" width="0.2270%" height="15" fill="rgb(207,178,40)"/><text x="10.1251%" y="495.50"></text></g><g><title>dput (1 samples, 0.11%)</title><rect x="9.9886%" y="469" width="0.1135%" height="15" fill="rgb(221,136,13)"/><text x="10.2386%" y="479.50"></text></g><g><title>lockref_put_return (1 samples, 0.11%)</title><rect x="9.9886%" y="453" width="0.1135%" height="15" fill="rgb(249,199,10)"/><text x="10.2386%" y="463.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="10.2157%" y="453" width="0.1135%" height="15" fill="rgb(249,222,13)"/><text x="10.4657%" y="463.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="10.2157%" y="437" width="0.1135%" height="15" fill="rgb(244,185,38)"/><text x="10.4657%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="10.3292%" y="437" width="0.1135%" height="15" fill="rgb(236,202,9)"/><text x="10.5792%" y="447.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.11%)</title><rect x="10.4427%" y="373" width="0.1135%" height="15" fill="rgb(250,229,37)"/><text x="10.6927%" y="383.50"></text></g><g><title>ctx_sched_out (1 samples, 0.11%)</title><rect x="10.4427%" y="357" width="0.1135%" height="15" fill="rgb(206,174,23)"/><text x="10.6927%" y="367.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="10.4427%" y="341" width="0.1135%" height="15" fill="rgb(211,33,43)"/><text x="10.6927%" y="351.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.11%)</title><rect x="10.5562%" y="373" width="0.1135%" height="15" fill="rgb(245,58,50)"/><text x="10.8062%" y="383.50"></text></g><g><title>dequeue_entity (1 samples, 0.11%)</title><rect x="10.5562%" y="357" width="0.1135%" height="15" fill="rgb(244,68,36)"/><text x="10.8062%" y="367.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="10.5562%" y="341" width="0.1135%" height="15" fill="rgb(232,229,15)"/><text x="10.8062%" y="351.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="10.6697%" y="373" width="0.1135%" height="15" fill="rgb(254,30,23)"/><text x="10.9197%" y="383.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="10.7832%" y="373" width="0.1135%" height="15" fill="rgb(235,160,14)"/><text x="11.0332%" y="383.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="10.7832%" y="357" width="0.1135%" height="15" fill="rgb(212,155,44)"/><text x="11.0332%" y="367.50"></text></g><g><title>do_syscall_64 (7 samples, 0.79%)</title><rect x="10.2157%" y="533" width="0.7946%" height="15" fill="rgb(226,2,50)"/><text x="10.4657%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.79%)</title><rect x="10.2157%" y="517" width="0.7946%" height="15" fill="rgb(234,177,6)"/><text x="10.4657%" y="527.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.79%)</title><rect x="10.2157%" y="501" width="0.7946%" height="15" fill="rgb(217,24,9)"/><text x="10.4657%" y="511.50"></text></g><g><title>inet_recvmsg (7 samples, 0.79%)</title><rect x="10.2157%" y="485" width="0.7946%" height="15" fill="rgb(220,13,46)"/><text x="10.4657%" y="495.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.79%)</title><rect x="10.2157%" y="469" width="0.7946%" height="15" fill="rgb(239,221,27)"/><text x="10.4657%" y="479.50"></text></g><g><title>sk_wait_data (6 samples, 0.68%)</title><rect x="10.3292%" y="453" width="0.6810%" height="15" fill="rgb(222,198,25)"/><text x="10.5792%" y="463.50"></text></g><g><title>wait_woken (5 samples, 0.57%)</title><rect x="10.4427%" y="437" width="0.5675%" height="15" fill="rgb(211,99,13)"/><text x="10.6927%" y="447.50"></text></g><g><title>schedule_timeout (5 samples, 0.57%)</title><rect x="10.4427%" y="421" width="0.5675%" height="15" fill="rgb(232,111,31)"/><text x="10.6927%" y="431.50"></text></g><g><title>schedule (5 samples, 0.57%)</title><rect x="10.4427%" y="405" width="0.5675%" height="15" fill="rgb(245,82,37)"/><text x="10.6927%" y="415.50"></text></g><g><title>__schedule (5 samples, 0.57%)</title><rect x="10.4427%" y="389" width="0.5675%" height="15" fill="rgb(227,149,46)"/><text x="10.6927%" y="399.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="10.8967%" y="373" width="0.1135%" height="15" fill="rgb(218,36,50)"/><text x="11.1467%" y="383.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.91%)</title><rect x="10.2157%" y="549" width="0.9081%" height="15" fill="rgb(226,80,48)"/><text x="10.4657%" y="559.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="11.0102%" y="533" width="0.1135%" height="15" fill="rgb(238,224,15)"/><text x="11.2602%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.14%)</title><rect x="10.1022%" y="661" width="1.1351%" height="15" fill="rgb(241,136,10)"/><text x="10.3522%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 1.14%)</title><rect x="10.1022%" y="645" width="1.1351%" height="15" fill="rgb(208,32,45)"/><text x="10.3522%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 1.14%)</title><rect x="10.1022%" y="629" width="1.1351%" height="15" fill="rgb(207,135,9)"/><text x="10.3522%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 1.14%)</title><rect x="10.1022%" y="613" width="1.1351%" height="15" fill="rgb(206,86,44)"/><text x="10.3522%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 1.14%)</title><rect x="10.1022%" y="597" width="1.1351%" height="15" fill="rgb(245,177,15)"/><text x="10.3522%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 1.14%)</title><rect x="10.1022%" y="581" width="1.1351%" height="15" fill="rgb(206,64,50)"/><text x="10.3522%" y="591.50"></text></g><g><title>__libc_recv (10 samples, 1.14%)</title><rect x="10.1022%" y="565" width="1.1351%" height="15" fill="rgb(234,36,40)"/><text x="10.3522%" y="575.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="11.1237%" y="549" width="0.1135%" height="15" fill="rgb(213,64,8)"/><text x="11.3737%" y="559.50"></text></g><g><title>[unknown] (54 samples, 6.13%)</title><rect x="5.3348%" y="853" width="6.1294%" height="15" fill="rgb(210,75,36)"/><text x="5.5848%" y="863.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (17 samples, 1.93%)</title><rect x="9.5346%" y="837" width="1.9296%" height="15" fill="rgb(229,88,21)"/><text x="9.7846%" y="847.50">s..</text></g><g><title>std::panic::catch_unwind (17 samples, 1.93%)</title><rect x="9.5346%" y="821" width="1.9296%" height="15" fill="rgb(252,204,47)"/><text x="9.7846%" y="831.50">s..</text></g><g><title>std::panicking::try (17 samples, 1.93%)</title><rect x="9.5346%" y="805" width="1.9296%" height="15" fill="rgb(208,77,27)"/><text x="9.7846%" y="815.50">s..</text></g><g><title>std::panicking::try::do_call (17 samples, 1.93%)</title><rect x="9.5346%" y="789" width="1.9296%" height="15" fill="rgb(221,76,26)"/><text x="9.7846%" y="799.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 1.93%)</title><rect x="9.5346%" y="773" width="1.9296%" height="15" fill="rgb(225,139,18)"/><text x="9.7846%" y="783.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (17 samples, 1.93%)</title><rect x="9.5346%" y="757" width="1.9296%" height="15" fill="rgb(230,137,11)"/><text x="9.7846%" y="767.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 1.93%)</title><rect x="9.5346%" y="741" width="1.9296%" height="15" fill="rgb(212,28,1)"/><text x="9.7846%" y="751.50">s..</text></g><g><title>lobsters::main (17 samples, 1.93%)</title><rect x="9.5346%" y="725" width="1.9296%" height="15" fill="rgb(248,164,17)"/><text x="9.7846%" y="735.50">l..</text></g><g><title>mysql::conn::Conn::_query (12 samples, 1.36%)</title><rect x="10.1022%" y="709" width="1.3621%" height="15" fill="rgb(222,171,42)"/><text x="10.3522%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (12 samples, 1.36%)</title><rect x="10.1022%" y="693" width="1.3621%" height="15" fill="rgb(243,84,45)"/><text x="10.3522%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (12 samples, 1.36%)</title><rect x="10.1022%" y="677" width="1.3621%" height="15" fill="rgb(252,49,23)"/><text x="10.3522%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="11.2372%" y="661" width="0.2270%" height="15" fill="rgb(215,19,7)"/><text x="11.4872%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="11.8048%" y="709" width="0.1135%" height="15" fill="rgb(238,81,41)"/><text x="12.0548%" y="719.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="11.8048%" y="693" width="0.1135%" height="15" fill="rgb(210,199,37)"/><text x="12.0548%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="11.8048%" y="677" width="0.1135%" height="15" fill="rgb(244,192,49)"/><text x="12.0548%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="11.8048%" y="661" width="0.1135%" height="15" fill="rgb(226,211,11)"/><text x="12.0548%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="11.8048%" y="645" width="0.1135%" height="15" fill="rgb(236,162,54)"/><text x="12.0548%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="11.8048%" y="629" width="0.1135%" height="15" fill="rgb(220,229,9)"/><text x="12.0548%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="11.8048%" y="613" width="0.1135%" height="15" fill="rgb(250,87,22)"/><text x="12.0548%" y="623.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="11.8048%" y="597" width="0.1135%" height="15" fill="rgb(239,43,17)"/><text x="12.0548%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="11.8048%" y="581" width="0.1135%" height="15" fill="rgb(231,177,25)"/><text x="12.0548%" y="591.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="11.8048%" y="565" width="0.1135%" height="15" fill="rgb(219,179,1)"/><text x="12.0548%" y="575.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="11.8048%" y="549" width="0.1135%" height="15" fill="rgb(238,219,53)"/><text x="12.0548%" y="559.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="11.8048%" y="533" width="0.1135%" height="15" fill="rgb(232,167,36)"/><text x="12.0548%" y="543.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="11.8048%" y="517" width="0.1135%" height="15" fill="rgb(244,19,51)"/><text x="12.0548%" y="527.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="11.8048%" y="501" width="0.1135%" height="15" fill="rgb(224,6,22)"/><text x="12.0548%" y="511.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="11.8048%" y="485" width="0.1135%" height="15" fill="rgb(224,145,5)"/><text x="12.0548%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="11.8048%" y="469" width="0.1135%" height="15" fill="rgb(234,130,49)"/><text x="12.0548%" y="479.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="11.8048%" y="453" width="0.1135%" height="15" fill="rgb(254,6,2)"/><text x="12.0548%" y="463.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="11.8048%" y="437" width="0.1135%" height="15" fill="rgb(208,96,46)"/><text x="12.0548%" y="447.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="11.8048%" y="421" width="0.1135%" height="15" fill="rgb(239,3,39)"/><text x="12.0548%" y="431.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="11.8048%" y="405" width="0.1135%" height="15" fill="rgb(233,210,1)"/><text x="12.0548%" y="415.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="11.8048%" y="389" width="0.1135%" height="15" fill="rgb(244,137,37)"/><text x="12.0548%" y="399.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="11.8048%" y="373" width="0.1135%" height="15" fill="rgb(240,136,2)"/><text x="12.0548%" y="383.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="11.8048%" y="357" width="0.1135%" height="15" fill="rgb(239,18,37)"/><text x="12.0548%" y="367.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="11.8048%" y="341" width="0.1135%" height="15" fill="rgb(218,185,22)"/><text x="12.0548%" y="351.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="11.8048%" y="325" width="0.1135%" height="15" fill="rgb(225,218,4)"/><text x="12.0548%" y="335.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="11.8048%" y="309" width="0.1135%" height="15" fill="rgb(230,182,32)"/><text x="12.0548%" y="319.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="11.8048%" y="293" width="0.1135%" height="15" fill="rgb(242,56,43)"/><text x="12.0548%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="11.8048%" y="277" width="0.1135%" height="15" fill="rgb(233,99,24)"/><text x="12.0548%" y="287.50"></text></g><g><title>ip_rcv (1 samples, 0.11%)</title><rect x="11.8048%" y="261" width="0.1135%" height="15" fill="rgb(234,209,42)"/><text x="12.0548%" y="271.50"></text></g><g><title>ip_local_deliver (1 samples, 0.11%)</title><rect x="11.8048%" y="245" width="0.1135%" height="15" fill="rgb(227,7,12)"/><text x="12.0548%" y="255.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="11.8048%" y="229" width="0.1135%" height="15" fill="rgb(245,203,43)"/><text x="12.0548%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="11.8048%" y="213" width="0.1135%" height="15" fill="rgb(238,205,33)"/><text x="12.0548%" y="223.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="11.8048%" y="197" width="0.1135%" height="15" fill="rgb(231,56,7)"/><text x="12.0548%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="11.8048%" y="181" width="0.1135%" height="15" fill="rgb(244,186,29)"/><text x="12.0548%" y="191.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.11%)</title><rect x="11.8048%" y="165" width="0.1135%" height="15" fill="rgb(234,111,31)"/><text x="12.0548%" y="175.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="11.8048%" y="149" width="0.1135%" height="15" fill="rgb(241,149,10)"/><text x="12.0548%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="11.8048%" y="133" width="0.1135%" height="15" fill="rgb(249,206,44)"/><text x="12.0548%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="11.8048%" y="117" width="0.1135%" height="15" fill="rgb(251,153,30)"/><text x="12.0548%" y="127.50"></text></g><g><title>pollwake (1 samples, 0.11%)</title><rect x="11.8048%" y="101" width="0.1135%" height="15" fill="rgb(239,152,38)"/><text x="12.0548%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="11.8048%" y="85" width="0.1135%" height="15" fill="rgb(249,139,47)"/><text x="12.0548%" y="95.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="11.8048%" y="69" width="0.1135%" height="15" fill="rgb(244,64,35)"/><text x="12.0548%" y="79.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="11.8048%" y="53" width="0.1135%" height="15" fill="rgb(216,46,15)"/><text x="12.0548%" y="63.50"></text></g><g><title>resched_curr (1 samples, 0.11%)</title><rect x="11.8048%" y="37" width="0.1135%" height="15" fill="rgb(250,74,19)"/><text x="12.0548%" y="47.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.11%)</title><rect x="13.7344%" y="629" width="0.1135%" height="15" fill="rgb(249,42,33)"/><text x="13.9844%" y="639.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.11%)</title><rect x="13.7344%" y="613" width="0.1135%" height="15" fill="rgb(242,149,17)"/><text x="13.9844%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="13.9614%" y="597" width="0.1135%" height="15" fill="rgb(244,29,21)"/><text x="14.2114%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.23%)</title><rect x="13.9614%" y="613" width="0.2270%" height="15" fill="rgb(220,130,37)"/><text x="14.2114%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="14.0749%" y="597" width="0.1135%" height="15" fill="rgb(211,67,2)"/><text x="14.3249%" y="607.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.45%)</title><rect x="13.8479%" y="629" width="0.4540%" height="15" fill="rgb(235,68,52)"/><text x="14.0979%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="14.1884%" y="613" width="0.1135%" height="15" fill="rgb(246,142,3)"/><text x="14.4384%" y="623.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="14.1884%" y="597" width="0.1135%" height="15" fill="rgb(241,25,7)"/><text x="14.4384%" y="607.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="14.1884%" y="581" width="0.1135%" height="15" fill="rgb(242,119,39)"/><text x="14.4384%" y="591.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="14.1884%" y="565" width="0.1135%" height="15" fill="rgb(241,98,45)"/><text x="14.4384%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="14.1884%" y="549" width="0.1135%" height="15" fill="rgb(254,28,30)"/><text x="14.4384%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="14.1884%" y="533" width="0.1135%" height="15" fill="rgb(241,142,54)"/><text x="14.4384%" y="543.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.11%)</title><rect x="14.3019%" y="629" width="0.1135%" height="15" fill="rgb(222,85,15)"/><text x="14.5519%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.57%)</title><rect x="14.7560%" y="613" width="0.5675%" height="15" fill="rgb(210,85,47)"/><text x="15.0060%" y="623.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="15.2100%" y="597" width="0.1135%" height="15" fill="rgb(224,206,25)"/><text x="15.4600%" y="607.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (19 samples, 2.16%)</title><rect x="13.3939%" y="661" width="2.1566%" height="15" fill="rgb(243,201,19)"/><text x="13.6439%" y="671.50">&lt;..</text></g><g><title>mysql::conn::Conn::next_text (19 samples, 2.16%)</title><rect x="13.3939%" y="645" width="2.1566%" height="15" fill="rgb(236,59,4)"/><text x="13.6439%" y="655.50">m..</text></g><g><title>mysql_common::value::read_text_values (10 samples, 1.14%)</title><rect x="14.4154%" y="629" width="1.1351%" height="15" fill="rgb(254,179,45)"/><text x="14.6654%" y="639.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.23%)</title><rect x="15.3235%" y="613" width="0.2270%" height="15" fill="rgb(226,14,10)"/><text x="15.5735%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="15.4370%" y="597" width="0.1135%" height="15" fill="rgb(244,27,41)"/><text x="15.6870%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="15.4370%" y="581" width="0.1135%" height="15" fill="rgb(235,35,32)"/><text x="15.6870%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="15.5505%" y="661" width="0.1135%" height="15" fill="rgb(218,68,31)"/><text x="15.8005%" y="671.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="15.5505%" y="645" width="0.1135%" height="15" fill="rgb(207,120,37)"/><text x="15.8005%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="15.5505%" y="629" width="0.1135%" height="15" fill="rgb(227,98,0)"/><text x="15.8005%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.6640%" y="661" width="0.1135%" height="15" fill="rgb(207,7,3)"/><text x="15.9140%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 2.95%)</title><rect x="13.0533%" y="677" width="2.9512%" height="15" fill="rgb(206,98,19)"/><text x="13.3033%" y="687.50">&lt;my..</text></g><g><title>mysql_common::row::new_row (2 samples, 0.23%)</title><rect x="15.7775%" y="661" width="0.2270%" height="15" fill="rgb(217,5,26)"/><text x="16.0275%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="15.7775%" y="645" width="0.2270%" height="15" fill="rgb(235,190,38)"/><text x="16.0275%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="16.0045%" y="677" width="0.1135%" height="15" fill="rgb(247,86,24)"/><text x="16.2545%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="16.1180%" y="677" width="0.2270%" height="15" fill="rgb(205,101,16)"/><text x="16.3680%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="16.3451%" y="677" width="0.1135%" height="15" fill="rgb(246,168,33)"/><text x="16.5951%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="16.3451%" y="661" width="0.1135%" height="15" fill="rgb(231,114,1)"/><text x="16.5951%" y="671.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="16.4586%" y="677" width="0.1135%" height="15" fill="rgb(207,184,53)"/><text x="16.7086%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="16.5721%" y="677" width="0.1135%" height="15" fill="rgb(224,95,51)"/><text x="16.8221%" y="687.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (2 samples, 0.23%)</title><rect x="16.7991%" y="645" width="0.2270%" height="15" fill="rgb(212,188,45)"/><text x="17.0491%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="16.9126%" y="629" width="0.1135%" height="15" fill="rgb(223,154,38)"/><text x="17.1626%" y="639.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.23%)</title><rect x="17.0261%" y="645" width="0.2270%" height="15" fill="rgb(251,22,52)"/><text x="17.2761%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="17.1396%" y="629" width="0.1135%" height="15" fill="rgb(229,209,22)"/><text x="17.3896%" y="639.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (6 samples, 0.68%)</title><rect x="16.6856%" y="677" width="0.6810%" height="15" fill="rgb(234,138,34)"/><text x="16.9356%" y="687.50"></text></g><g><title>msql_srv::writers::column_definitions (6 samples, 0.68%)</title><rect x="16.6856%" y="661" width="0.6810%" height="15" fill="rgb(212,95,11)"/><text x="16.9356%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="17.2531%" y="645" width="0.1135%" height="15" fill="rgb(240,179,47)"/><text x="17.5031%" y="655.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.11%)</title><rect x="17.3666%" y="677" width="0.1135%" height="15" fill="rgb(240,163,11)"/><text x="17.6166%" y="687.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (3 samples, 0.34%)</title><rect x="17.7072%" y="645" width="0.3405%" height="15" fill="rgb(236,37,12)"/><text x="17.9572%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.34%)</title><rect x="17.7072%" y="629" width="0.3405%" height="15" fill="rgb(232,164,16)"/><text x="17.9572%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="17.9342%" y="613" width="0.1135%" height="15" fill="rgb(244,205,15)"/><text x="18.1842%" y="623.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (5 samples, 0.57%)</title><rect x="17.5936%" y="661" width="0.5675%" height="15" fill="rgb(223,117,47)"/><text x="17.8436%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="18.0477%" y="645" width="0.1135%" height="15" fill="rgb(244,107,35)"/><text x="18.2977%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="18.0477%" y="629" width="0.1135%" height="15" fill="rgb(205,140,8)"/><text x="18.2977%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="18.1612%" y="661" width="0.1135%" height="15" fill="rgb(228,84,46)"/><text x="18.4112%" y="671.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="18.2747%" y="661" width="0.1135%" height="15" fill="rgb(254,188,9)"/><text x="18.5247%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="18.2747%" y="645" width="0.1135%" height="15" fill="rgb(206,112,54)"/><text x="18.5247%" y="655.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (9 samples, 1.02%)</title><rect x="17.4801%" y="677" width="1.0216%" height="15" fill="rgb(216,84,49)"/><text x="17.7301%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="18.3882%" y="661" width="0.1135%" height="15" fill="rgb(214,194,35)"/><text x="18.6382%" y="671.50"></text></g><g><title>mysql::conn::query_result::SetIteratorState::columns (1 samples, 0.11%)</title><rect x="18.5017%" y="677" width="0.1135%" height="15" fill="rgb(249,28,3)"/><text x="18.7517%" y="687.50"></text></g><g><title>decor::answer_rows (59 samples, 6.70%)</title><rect x="12.2588%" y="693" width="6.6969%" height="15" fill="rgb(222,56,52)"/><text x="12.5088%" y="703.50">decor::an..</text></g><g><title>mysql_common::row::Row::unwrap (3 samples, 0.34%)</title><rect x="18.6152%" y="677" width="0.3405%" height="15" fill="rgb(245,217,50)"/><text x="18.8652%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="18.6152%" y="661" width="0.3405%" height="15" fill="rgb(213,201,24)"/><text x="18.8652%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.34%)</title><rect x="19.0692%" y="677" width="0.3405%" height="15" fill="rgb(248,116,28)"/><text x="19.3192%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="19.5233%" y="661" width="0.1135%" height="15" fill="rgb(219,72,43)"/><text x="19.7733%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="19.7503%" y="645" width="0.1135%" height="15" fill="rgb(209,138,14)"/><text x="20.0003%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="19.7503%" y="629" width="0.1135%" height="15" fill="rgb(222,18,33)"/><text x="20.0003%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::from_error (1 samples, 0.11%)</title><rect x="19.8638%" y="549" width="0.1135%" height="15" fill="rgb(213,199,7)"/><text x="20.1138%" y="559.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="20.3178%" y="469" width="0.1135%" height="15" fill="rgb(250,110,10)"/><text x="20.5678%" y="479.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="20.5448%" y="437" width="0.1135%" height="15" fill="rgb(248,123,6)"/><text x="20.7948%" y="447.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="20.5448%" y="421" width="0.1135%" height="15" fill="rgb(206,91,31)"/><text x="20.7948%" y="431.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="20.6583%" y="421" width="0.1135%" height="15" fill="rgb(211,154,13)"/><text x="20.9083%" y="431.50"></text></g><g><title>release_sock (2 samples, 0.23%)</title><rect x="20.7719%" y="421" width="0.2270%" height="15" fill="rgb(225,148,7)"/><text x="21.0219%" y="431.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="20.8854%" y="405" width="0.1135%" height="15" fill="rgb(220,160,43)"/><text x="21.1354%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="20.8854%" y="389" width="0.1135%" height="15" fill="rgb(213,52,39)"/><text x="21.1354%" y="399.50"></text></g><g><title>remove_wait_queue (1 samples, 0.11%)</title><rect x="20.9989%" y="421" width="0.1135%" height="15" fill="rgb(243,137,7)"/><text x="21.2489%" y="431.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="20.9989%" y="405" width="0.1135%" height="15" fill="rgb(230,79,13)"/><text x="21.2489%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.23%)</title><rect x="21.3394%" y="357" width="0.2270%" height="15" fill="rgb(247,105,23)"/><text x="21.5894%" y="367.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="21.4529%" y="341" width="0.1135%" height="15" fill="rgb(223,179,41)"/><text x="21.7029%" y="351.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.11%)</title><rect x="21.5664%" y="325" width="0.1135%" height="15" fill="rgb(218,9,34)"/><text x="21.8164%" y="335.50"></text></g><g><title>__calc_delta (1 samples, 0.11%)</title><rect x="21.7934%" y="309" width="0.1135%" height="15" fill="rgb(222,106,8)"/><text x="22.0434%" y="319.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="21.9069%" y="309" width="0.1135%" height="15" fill="rgb(211,220,0)"/><text x="22.1569%" y="319.50"></text></g><g><title>update_curr (4 samples, 0.45%)</title><rect x="21.6799%" y="325" width="0.4540%" height="15" fill="rgb(229,52,16)"/><text x="21.9299%" y="335.50"></text></g><g><title>update_min_vruntime (1 samples, 0.11%)</title><rect x="22.0204%" y="309" width="0.1135%" height="15" fill="rgb(212,155,18)"/><text x="22.2704%" y="319.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.79%)</title><rect x="21.5664%" y="357" width="0.7946%" height="15" fill="rgb(242,21,14)"/><text x="21.8164%" y="367.50"></text></g><g><title>dequeue_entity (7 samples, 0.79%)</title><rect x="21.5664%" y="341" width="0.7946%" height="15" fill="rgb(222,19,48)"/><text x="21.8164%" y="351.50"></text></g><g><title>update_load_avg (2 samples, 0.23%)</title><rect x="22.1339%" y="325" width="0.2270%" height="15" fill="rgb(232,45,27)"/><text x="22.3839%" y="335.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="22.2474%" y="309" width="0.1135%" height="15" fill="rgb(249,103,42)"/><text x="22.4974%" y="319.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.23%)</title><rect x="22.3610%" y="341" width="0.2270%" height="15" fill="rgb(246,81,33)"/><text x="22.6110%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.23%)</title><rect x="22.3610%" y="325" width="0.2270%" height="15" fill="rgb(252,33,42)"/><text x="22.6110%" y="335.50"></text></g><g><title>native_write_msr (2 samples, 0.23%)</title><rect x="22.3610%" y="309" width="0.2270%" height="15" fill="rgb(209,212,41)"/><text x="22.6110%" y="319.50"></text></g><g><title>finish_task_switch (3 samples, 0.34%)</title><rect x="22.3610%" y="357" width="0.3405%" height="15" fill="rgb(207,154,6)"/><text x="22.6110%" y="367.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.11%)</title><rect x="22.5880%" y="341" width="0.1135%" height="15" fill="rgb(223,64,47)"/><text x="22.8380%" y="351.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="22.5880%" y="325" width="0.1135%" height="15" fill="rgb(211,161,38)"/><text x="22.8380%" y="335.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="22.5880%" y="309" width="0.1135%" height="15" fill="rgb(219,138,40)"/><text x="22.8380%" y="319.50"></text></g><g><title>irq_enter (1 samples, 0.11%)</title><rect x="22.5880%" y="293" width="0.1135%" height="15" fill="rgb(241,228,46)"/><text x="22.8380%" y="303.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="22.5880%" y="277" width="0.1135%" height="15" fill="rgb(223,209,38)"/><text x="22.8380%" y="287.50"></text></g><g><title>psi_task_change (5 samples, 0.57%)</title><rect x="22.7015%" y="357" width="0.5675%" height="15" fill="rgb(236,164,45)"/><text x="22.9515%" y="367.50"></text></g><g><title>psi_group_change (4 samples, 0.45%)</title><rect x="22.8150%" y="341" width="0.4540%" height="15" fill="rgb(231,15,5)"/><text x="23.0650%" y="351.50"></text></g><g><title>record_times (2 samples, 0.23%)</title><rect x="23.0420%" y="325" width="0.2270%" height="15" fill="rgb(252,35,15)"/><text x="23.2920%" y="335.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.23%)</title><rect x="23.0420%" y="309" width="0.2270%" height="15" fill="rgb(248,181,18)"/><text x="23.2920%" y="319.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="23.2690%" y="357" width="0.1135%" height="15" fill="rgb(233,39,42)"/><text x="23.5190%" y="367.50"></text></g><g><title>__schedule (21 samples, 2.38%)</title><rect x="21.2259%" y="373" width="2.3837%" height="15" fill="rgb(238,110,33)"/><text x="21.4759%" y="383.50">__..</text></g><g><title>update_rq_clock (2 samples, 0.23%)</title><rect x="23.3825%" y="357" width="0.2270%" height="15" fill="rgb(233,195,10)"/><text x="23.6325%" y="367.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="23.4960%" y="341" width="0.1135%" height="15" fill="rgb(254,105,3)"/><text x="23.7460%" y="351.50"></text></g><g><title>sk_wait_data (27 samples, 3.06%)</title><rect x="20.6583%" y="437" width="3.0647%" height="15" fill="rgb(221,225,9)"/><text x="20.9083%" y="447.50">sk_..</text></g><g><title>wait_woken (23 samples, 2.61%)</title><rect x="21.1124%" y="421" width="2.6107%" height="15" fill="rgb(224,227,45)"/><text x="21.3624%" y="431.50">wa..</text></g><g><title>schedule_timeout (22 samples, 2.50%)</title><rect x="21.2259%" y="405" width="2.4972%" height="15" fill="rgb(229,198,43)"/><text x="21.4759%" y="415.50">sc..</text></g><g><title>schedule (22 samples, 2.50%)</title><rect x="21.2259%" y="389" width="2.4972%" height="15" fill="rgb(206,209,35)"/><text x="21.4759%" y="399.50">sc..</text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="23.6095%" y="373" width="0.1135%" height="15" fill="rgb(245,195,53)"/><text x="23.8595%" y="383.50"></text></g><g><title>down_read_trylock (1 samples, 0.11%)</title><rect x="23.9501%" y="341" width="0.1135%" height="15" fill="rgb(240,92,26)"/><text x="24.2001%" y="351.50"></text></g><g><title>_copy_to_iter (4 samples, 0.45%)</title><rect x="23.7230%" y="405" width="0.4540%" height="15" fill="rgb(207,40,23)"/><text x="23.9730%" y="415.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 0.23%)</title><rect x="23.9501%" y="389" width="0.2270%" height="15" fill="rgb(223,111,35)"/><text x="24.2001%" y="399.50"></text></g><g><title>page_fault (2 samples, 0.23%)</title><rect x="23.9501%" y="373" width="0.2270%" height="15" fill="rgb(229,147,28)"/><text x="24.2001%" y="383.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.23%)</title><rect x="23.9501%" y="357" width="0.2270%" height="15" fill="rgb(211,29,28)"/><text x="24.2001%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="24.0636%" y="341" width="0.1135%" height="15" fill="rgb(228,72,33)"/><text x="24.3136%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="24.0636%" y="325" width="0.1135%" height="15" fill="rgb(205,214,31)"/><text x="24.3136%" y="335.50"></text></g><g><title>__lru_cache_add (1 samples, 0.11%)</title><rect x="24.0636%" y="309" width="0.1135%" height="15" fill="rgb(224,111,15)"/><text x="24.3136%" y="319.50"></text></g><g><title>pagevec_lru_move_fn (1 samples, 0.11%)</title><rect x="24.0636%" y="293" width="0.1135%" height="15" fill="rgb(253,21,26)"/><text x="24.3136%" y="303.50"></text></g><g><title>__pagevec_lru_add_fn (1 samples, 0.11%)</title><rect x="24.0636%" y="277" width="0.1135%" height="15" fill="rgb(245,139,43)"/><text x="24.3136%" y="287.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.11%)</title><rect x="24.0636%" y="261" width="0.1135%" height="15" fill="rgb(252,170,7)"/><text x="24.3136%" y="271.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="24.0636%" y="245" width="0.1135%" height="15" fill="rgb(231,118,14)"/><text x="24.3136%" y="255.50"></text></g><g><title>inet_recvmsg (35 samples, 3.97%)</title><rect x="20.4313%" y="469" width="3.9728%" height="15" fill="rgb(238,83,0)"/><text x="20.6813%" y="479.50">inet..</text></g><g><title>tcp_recvmsg (34 samples, 3.86%)</title><rect x="20.5448%" y="453" width="3.8593%" height="15" fill="rgb(221,39,39)"/><text x="20.7948%" y="463.50">tcp_..</text></g><g><title>skb_copy_datagram_iter (6 samples, 0.68%)</title><rect x="23.7230%" y="437" width="0.6810%" height="15" fill="rgb(222,119,46)"/><text x="23.9730%" y="447.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.68%)</title><rect x="23.7230%" y="421" width="0.6810%" height="15" fill="rgb(222,165,49)"/><text x="23.9730%" y="431.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.23%)</title><rect x="24.1771%" y="405" width="0.2270%" height="15" fill="rgb(219,113,52)"/><text x="24.4271%" y="415.50"></text></g><g><title>__check_object_size (2 samples, 0.23%)</title><rect x="24.1771%" y="389" width="0.2270%" height="15" fill="rgb(214,7,15)"/><text x="24.4271%" y="399.50"></text></g><g><title>__x64_sys_recvfrom (39 samples, 4.43%)</title><rect x="20.2043%" y="501" width="4.4268%" height="15" fill="rgb(235,32,4)"/><text x="20.4543%" y="511.50">__x64..</text></g><g><title>__sys_recvfrom (39 samples, 4.43%)</title><rect x="20.2043%" y="485" width="4.4268%" height="15" fill="rgb(238,90,54)"/><text x="20.4543%" y="495.50">__sys..</text></g><g><title>sockfd_lookup_light (2 samples, 0.23%)</title><rect x="24.4041%" y="469" width="0.2270%" height="15" fill="rgb(213,208,19)"/><text x="24.6541%" y="479.50"></text></g><g><title>__fget_light (2 samples, 0.23%)</title><rect x="24.4041%" y="453" width="0.2270%" height="15" fill="rgb(233,156,4)"/><text x="24.6541%" y="463.50"></text></g><g><title>__fget_files (2 samples, 0.23%)</title><rect x="24.4041%" y="437" width="0.2270%" height="15" fill="rgb(207,194,5)"/><text x="24.6541%" y="447.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="24.6311%" y="501" width="0.1135%" height="15" fill="rgb(206,111,30)"/><text x="24.8811%" y="511.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="24.6311%" y="485" width="0.1135%" height="15" fill="rgb(243,70,54)"/><text x="24.8811%" y="495.50"></text></g><g><title>mntput (1 samples, 0.11%)</title><rect x="24.6311%" y="469" width="0.1135%" height="15" fill="rgb(242,28,8)"/><text x="24.8811%" y="479.50"></text></g><g><title>do_syscall_64 (42 samples, 4.77%)</title><rect x="20.2043%" y="517" width="4.7673%" height="15" fill="rgb(219,106,18)"/><text x="20.4543%" y="527.50">do_sys..</text></g><g><title>syscall_trace_enter (2 samples, 0.23%)</title><rect x="24.7446%" y="501" width="0.2270%" height="15" fill="rgb(244,222,10)"/><text x="24.9946%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (48 samples, 5.45%)</title><rect x="20.0908%" y="533" width="5.4484%" height="15" fill="rgb(236,179,52)"/><text x="20.3408%" y="543.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.57%)</title><rect x="24.9716%" y="517" width="0.5675%" height="15" fill="rgb(213,23,39)"/><text x="25.2216%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (52 samples, 5.90%)</title><rect x="19.8638%" y="629" width="5.9024%" height="15" fill="rgb(238,48,10)"/><text x="20.1138%" y="639.50">&lt;std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (52 samples, 5.90%)</title><rect x="19.8638%" y="613" width="5.9024%" height="15" fill="rgb(251,196,23)"/><text x="20.1138%" y="623.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (52 samples, 5.90%)</title><rect x="19.8638%" y="597" width="5.9024%" height="15" fill="rgb(250,152,24)"/><text x="20.1138%" y="607.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (52 samples, 5.90%)</title><rect x="19.8638%" y="581" width="5.9024%" height="15" fill="rgb(209,150,17)"/><text x="20.1138%" y="591.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (52 samples, 5.90%)</title><rect x="19.8638%" y="565" width="5.9024%" height="15" fill="rgb(234,202,34)"/><text x="20.1138%" y="575.50">std::sys..</text></g><g><title>__libc_recv (51 samples, 5.79%)</title><rect x="19.9773%" y="549" width="5.7889%" height="15" fill="rgb(253,148,53)"/><text x="20.2273%" y="559.50">__libc_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.23%)</title><rect x="25.5392%" y="533" width="0.2270%" height="15" fill="rgb(218,129,16)"/><text x="25.7892%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="25.8797%" y="581" width="0.1135%" height="15" fill="rgb(216,85,19)"/><text x="26.1297%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="25.8797%" y="565" width="0.1135%" height="15" fill="rgb(235,228,7)"/><text x="26.1297%" y="575.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="26.1067%" y="565" width="0.1135%" height="15" fill="rgb(245,175,0)"/><text x="26.3567%" y="575.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 6.47%)</title><rect x="19.8638%" y="645" width="6.4699%" height="15" fill="rgb(208,168,36)"/><text x="20.1138%" y="655.50">&lt;mysql_c..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.57%)</title><rect x="25.7662%" y="629" width="0.5675%" height="15" fill="rgb(246,171,24)"/><text x="26.0162%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.45%)</title><rect x="25.8797%" y="613" width="0.4540%" height="15" fill="rgb(215,142,24)"/><text x="26.1297%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.45%)</title><rect x="25.8797%" y="597" width="0.4540%" height="15" fill="rgb(250,187,7)"/><text x="26.1297%" y="607.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="25.9932%" y="581" width="0.3405%" height="15" fill="rgb(228,66,33)"/><text x="26.2432%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="26.2202%" y="565" width="0.1135%" height="15" fill="rgb(234,215,21)"/><text x="26.4702%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="26.3337%" y="645" width="0.1135%" height="15" fill="rgb(222,191,20)"/><text x="26.5837%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="26.4472%" y="645" width="0.2270%" height="15" fill="rgb(245,79,54)"/><text x="26.6972%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (63 samples, 7.15%)</title><rect x="19.6368%" y="661" width="7.1510%" height="15" fill="rgb(240,10,37)"/><text x="19.8868%" y="671.50">mysql::con..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="26.6742%" y="645" width="0.1135%" height="15" fill="rgb(214,192,32)"/><text x="26.9242%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="26.6742%" y="629" width="0.1135%" height="15" fill="rgb(209,36,54)"/><text x="26.9242%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="26.6742%" y="613" width="0.1135%" height="15" fill="rgb(220,10,11)"/><text x="26.9242%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="26.6742%" y="597" width="0.1135%" height="15" fill="rgb(221,106,17)"/><text x="26.9242%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="26.6742%" y="581" width="0.1135%" height="15" fill="rgb(251,142,44)"/><text x="26.9242%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="26.6742%" y="565" width="0.1135%" height="15" fill="rgb(238,13,15)"/><text x="26.9242%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="26.6742%" y="549" width="0.1135%" height="15" fill="rgb(208,107,27)"/><text x="26.9242%" y="559.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (66 samples, 7.49%)</title><rect x="19.4098%" y="677" width="7.4915%" height="15" fill="rgb(205,136,37)"/><text x="19.6598%" y="687.50">mysql::con..</text></g><g><title>mysql_common::packets::column_from_payload (1 samples, 0.11%)</title><rect x="26.7877%" y="661" width="0.1135%" height="15" fill="rgb(250,205,27)"/><text x="27.0377%" y="671.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::flush (1 samples, 0.11%)</title><rect x="26.9012%" y="661" width="0.1135%" height="15" fill="rgb(210,80,43)"/><text x="27.1512%" y="671.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="27.2418%" y="533" width="0.1135%" height="15" fill="rgb(247,160,36)"/><text x="27.4918%" y="543.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.11%)</title><rect x="27.3553%" y="517" width="0.1135%" height="15" fill="rgb(234,13,49)"/><text x="27.6053%" y="527.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="27.4688%" y="501" width="0.1135%" height="15" fill="rgb(234,122,0)"/><text x="27.7188%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="27.4688%" y="485" width="0.1135%" height="15" fill="rgb(207,146,38)"/><text x="27.7188%" y="495.50"></text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="28.8309%" y="405" width="0.1135%" height="15" fill="rgb(207,177,25)"/><text x="29.0809%" y="415.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="29.0579%" y="373" width="0.1135%" height="15" fill="rgb(211,178,42)"/><text x="29.3079%" y="383.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="29.5119%" y="309" width="0.1135%" height="15" fill="rgb(230,69,54)"/><text x="29.7619%" y="319.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.57%)</title><rect x="29.1714%" y="373" width="0.5675%" height="15" fill="rgb(214,135,41)"/><text x="29.4214%" y="383.50"></text></g><g><title>loopback_xmit (3 samples, 0.34%)</title><rect x="29.3984%" y="357" width="0.3405%" height="15" fill="rgb(237,67,25)"/><text x="29.6484%" y="367.50"></text></g><g><title>netif_rx (2 samples, 0.23%)</title><rect x="29.5119%" y="341" width="0.2270%" height="15" fill="rgb(222,189,50)"/><text x="29.7619%" y="351.50"></text></g><g><title>netif_rx_internal (2 samples, 0.23%)</title><rect x="29.5119%" y="325" width="0.2270%" height="15" fill="rgb(245,148,34)"/><text x="29.7619%" y="335.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.11%)</title><rect x="29.6254%" y="309" width="0.1135%" height="15" fill="rgb(222,29,6)"/><text x="29.8754%" y="319.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.34%)</title><rect x="29.7389%" y="373" width="0.3405%" height="15" fill="rgb(221,189,43)"/><text x="29.9889%" y="383.50"></text></g><g><title>netif_skb_features (3 samples, 0.34%)</title><rect x="29.7389%" y="357" width="0.3405%" height="15" fill="rgb(207,36,27)"/><text x="29.9889%" y="367.50"></text></g><g><title>skb_network_protocol (1 samples, 0.11%)</title><rect x="29.9659%" y="341" width="0.1135%" height="15" fill="rgb(217,90,24)"/><text x="30.2159%" y="351.50"></text></g><g><title>__dev_queue_xmit (11 samples, 1.25%)</title><rect x="28.9444%" y="389" width="1.2486%" height="15" fill="rgb(224,66,35)"/><text x="29.1944%" y="399.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.11%)</title><rect x="30.0795%" y="373" width="0.1135%" height="15" fill="rgb(221,13,50)"/><text x="30.3295%" y="383.50"></text></g><g><title>__kfree_skb_flush (2 samples, 0.23%)</title><rect x="30.4200%" y="309" width="0.2270%" height="15" fill="rgb(236,68,49)"/><text x="30.6700%" y="319.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="30.5335%" y="293" width="0.1135%" height="15" fill="rgb(229,146,28)"/><text x="30.7835%" y="303.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="30.6470%" y="309" width="0.1135%" height="15" fill="rgb(225,31,38)"/><text x="30.8970%" y="319.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="30.9875%" y="229" width="0.1135%" height="15" fill="rgb(250,208,3)"/><text x="31.2375%" y="239.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.34%)</title><rect x="31.2145%" y="197" width="0.3405%" height="15" fill="rgb(246,54,23)"/><text x="31.4645%" y="207.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="31.8956%" y="165" width="0.1135%" height="15" fill="rgb(243,76,11)"/><text x="32.1456%" y="175.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="32.4631%" y="85" width="0.1135%" height="15" fill="rgb(245,21,50)"/><text x="32.7131%" y="95.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="32.4631%" y="69" width="0.1135%" height="15" fill="rgb(228,9,43)"/><text x="32.7131%" y="79.50"></text></g><g><title>enqueue_task (2 samples, 0.23%)</title><rect x="32.5766%" y="85" width="0.2270%" height="15" fill="rgb(208,100,47)"/><text x="32.8266%" y="95.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.23%)</title><rect x="32.5766%" y="69" width="0.2270%" height="15" fill="rgb(232,26,8)"/><text x="32.8266%" y="79.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="33.3712%" y="53" width="0.1135%" height="15" fill="rgb(216,166,38)"/><text x="33.6212%" y="63.50"></text></g><g><title>enqueue_task_fair (8 samples, 0.91%)</title><rect x="32.8036%" y="85" width="0.9081%" height="15" fill="rgb(251,202,51)"/><text x="33.0536%" y="95.50"></text></g><g><title>enqueue_entity (7 samples, 0.79%)</title><rect x="32.9171%" y="69" width="0.7946%" height="15" fill="rgb(254,216,34)"/><text x="33.1671%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.23%)</title><rect x="33.4847%" y="53" width="0.2270%" height="15" fill="rgb(251,32,27)"/><text x="33.7347%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.23%)</title><rect x="33.4847%" y="37" width="0.2270%" height="15" fill="rgb(208,127,28)"/><text x="33.7347%" y="47.50"></text></g><g><title>available_idle_cpu (2 samples, 0.23%)</title><rect x="34.0522%" y="69" width="0.2270%" height="15" fill="rgb(224,137,22)"/><text x="34.3022%" y="79.50"></text></g><g><title>select_task_rq_fair (6 samples, 0.68%)</title><rect x="33.7117%" y="85" width="0.6810%" height="15" fill="rgb(254,70,32)"/><text x="33.9617%" y="95.50"></text></g><g><title>cpus_share_cache (1 samples, 0.11%)</title><rect x="34.2792%" y="69" width="0.1135%" height="15" fill="rgb(229,75,37)"/><text x="34.5292%" y="79.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="34.3927%" y="85" width="0.1135%" height="15" fill="rgb(252,64,23)"/><text x="34.6427%" y="95.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="34.3927%" y="69" width="0.1135%" height="15" fill="rgb(232,162,48)"/><text x="34.6427%" y="79.50"></text></g><g><title>__wake_up_common (23 samples, 2.61%)</title><rect x="32.0091%" y="133" width="2.6107%" height="15" fill="rgb(246,160,12)"/><text x="32.2591%" y="143.50">__..</text></g><g><title>pollwake (22 samples, 2.50%)</title><rect x="32.1226%" y="117" width="2.4972%" height="15" fill="rgb(247,166,0)"/><text x="32.3726%" y="127.50">po..</text></g><g><title>try_to_wake_up (20 samples, 2.27%)</title><rect x="32.3496%" y="101" width="2.2701%" height="15" fill="rgb(249,219,21)"/><text x="32.5996%" y="111.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="34.5062%" y="85" width="0.1135%" height="15" fill="rgb(205,209,3)"/><text x="34.7562%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="34.5062%" y="69" width="0.1135%" height="15" fill="rgb(243,44,1)"/><text x="34.7562%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="34.5062%" y="53" width="0.1135%" height="15" fill="rgb(206,159,16)"/><text x="34.7562%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="34.5062%" y="37" width="0.1135%" height="15" fill="rgb(244,77,30)"/><text x="34.7562%" y="47.50"></text></g><g><title>sock_def_readable (24 samples, 2.72%)</title><rect x="32.0091%" y="165" width="2.7242%" height="15" fill="rgb(218,69,12)"/><text x="32.2591%" y="175.50">so..</text></g><g><title>__wake_up_common_lock (24 samples, 2.72%)</title><rect x="32.0091%" y="149" width="2.7242%" height="15" fill="rgb(212,87,7)"/><text x="32.2591%" y="159.50">__..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="34.6198%" y="133" width="0.1135%" height="15" fill="rgb(245,114,25)"/><text x="34.8698%" y="143.50"></text></g><g><title>kfree (2 samples, 0.23%)</title><rect x="35.3008%" y="133" width="0.2270%" height="15" fill="rgb(210,61,42)"/><text x="35.5508%" y="143.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="35.4143%" y="117" width="0.1135%" height="15" fill="rgb(211,52,33)"/><text x="35.6643%" y="127.50"></text></g><g><title>__kfree_skb (7 samples, 0.79%)</title><rect x="35.1873%" y="149" width="0.7946%" height="15" fill="rgb(234,58,33)"/><text x="35.4373%" y="159.50"></text></g><g><title>skb_release_data (4 samples, 0.45%)</title><rect x="35.5278%" y="133" width="0.4540%" height="15" fill="rgb(220,115,36)"/><text x="35.7778%" y="143.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="35.9818%" y="149" width="0.1135%" height="15" fill="rgb(243,153,54)"/><text x="36.2318%" y="159.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.11%)</title><rect x="36.0953%" y="149" width="0.1135%" height="15" fill="rgb(251,47,18)"/><text x="36.3453%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.11%)</title><rect x="36.2089%" y="149" width="0.1135%" height="15" fill="rgb(242,102,42)"/><text x="36.4589%" y="159.50"></text></g><g><title>tcp_ack (15 samples, 1.70%)</title><rect x="34.7333%" y="165" width="1.7026%" height="15" fill="rgb(234,31,38)"/><text x="34.9833%" y="175.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="36.3224%" y="149" width="0.1135%" height="15" fill="rgb(221,117,51)"/><text x="36.5724%" y="159.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="36.4359%" y="133" width="0.1135%" height="15" fill="rgb(212,20,18)"/><text x="36.6859%" y="143.50"></text></g><g><title>tcp_data_queue (2 samples, 0.23%)</title><rect x="36.4359%" y="165" width="0.2270%" height="15" fill="rgb(245,133,36)"/><text x="36.6859%" y="175.50"></text></g><g><title>sock_def_readable (2 samples, 0.23%)</title><rect x="36.4359%" y="149" width="0.2270%" height="15" fill="rgb(212,6,19)"/><text x="36.6859%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="36.5494%" y="133" width="0.1135%" height="15" fill="rgb(218,1,36)"/><text x="36.7994%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="36.5494%" y="117" width="0.1135%" height="15" fill="rgb(246,84,54)"/><text x="36.7994%" y="127.50"></text></g><g><title>pollwake (1 samples, 0.11%)</title><rect x="36.5494%" y="101" width="0.1135%" height="15" fill="rgb(242,110,6)"/><text x="36.7994%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="36.5494%" y="85" width="0.1135%" height="15" fill="rgb(214,47,5)"/><text x="36.7994%" y="95.50"></text></g><g><title>enqueue_task (1 samples, 0.11%)</title><rect x="36.5494%" y="69" width="0.1135%" height="15" fill="rgb(218,159,25)"/><text x="36.7994%" y="79.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="36.5494%" y="53" width="0.1135%" height="15" fill="rgb(215,211,28)"/><text x="36.7994%" y="63.50"></text></g><g><title>psi_flags_change (1 samples, 0.11%)</title><rect x="36.5494%" y="37" width="0.1135%" height="15" fill="rgb(238,59,32)"/><text x="36.7994%" y="47.50"></text></g><g><title>ip_local_deliver (51 samples, 5.79%)</title><rect x="30.9875%" y="261" width="5.7889%" height="15" fill="rgb(226,82,3)"/><text x="31.2375%" y="271.50">ip_loca..</text></g><g><title>ip_local_deliver_finish (51 samples, 5.79%)</title><rect x="30.9875%" y="245" width="5.7889%" height="15" fill="rgb(240,164,32)"/><text x="31.2375%" y="255.50">ip_loca..</text></g><g><title>ip_protocol_deliver_rcu (50 samples, 5.68%)</title><rect x="31.1010%" y="229" width="5.6754%" height="15" fill="rgb(232,46,7)"/><text x="31.3510%" y="239.50">ip_prot..</text></g><g><title>tcp_v4_rcv (50 samples, 5.68%)</title><rect x="31.1010%" y="213" width="5.6754%" height="15" fill="rgb(229,129,53)"/><text x="31.3510%" y="223.50">tcp_v4_..</text></g><g><title>tcp_v4_do_rcv (46 samples, 5.22%)</title><rect x="31.5551%" y="197" width="5.2213%" height="15" fill="rgb(234,188,29)"/><text x="31.8051%" y="207.50">tcp_v4..</text></g><g><title>tcp_rcv_established (46 samples, 5.22%)</title><rect x="31.5551%" y="181" width="5.2213%" height="15" fill="rgb(246,141,4)"/><text x="31.8051%" y="191.50">tcp_rc..</text></g><g><title>tcp_data_ready (1 samples, 0.11%)</title><rect x="36.6629%" y="165" width="0.1135%" height="15" fill="rgb(229,23,39)"/><text x="36.9129%" y="175.50"></text></g><g><title>__netif_receive_skb_one_core (56 samples, 6.36%)</title><rect x="30.7605%" y="293" width="6.3564%" height="15" fill="rgb(206,12,3)"/><text x="31.0105%" y="303.50">__netif_..</text></g><g><title>ip_rcv (54 samples, 6.13%)</title><rect x="30.9875%" y="277" width="6.1294%" height="15" fill="rgb(252,226,20)"/><text x="31.2375%" y="287.50">ip_rcv</text></g><g><title>ip_rcv_finish (3 samples, 0.34%)</title><rect x="36.7764%" y="261" width="0.3405%" height="15" fill="rgb(216,123,35)"/><text x="37.0264%" y="271.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.11%)</title><rect x="37.0034%" y="245" width="0.1135%" height="15" fill="rgb(212,68,40)"/><text x="37.2534%" y="255.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="37.1169%" y="293" width="0.1135%" height="15" fill="rgb(254,125,32)"/><text x="37.3669%" y="303.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="37.2304%" y="293" width="0.1135%" height="15" fill="rgb(253,97,22)"/><text x="37.4804%" y="303.50"></text></g><g><title>do_softirq (64 samples, 7.26%)</title><rect x="30.1930%" y="373" width="7.2645%" height="15" fill="rgb(241,101,14)"/><text x="30.4430%" y="383.50">do_softirq</text></g><g><title>do_softirq_own_stack (63 samples, 7.15%)</title><rect x="30.3065%" y="357" width="7.1510%" height="15" fill="rgb(238,103,29)"/><text x="30.5565%" y="367.50">do_softirq..</text></g><g><title>__do_softirq (63 samples, 7.15%)</title><rect x="30.3065%" y="341" width="7.1510%" height="15" fill="rgb(233,195,47)"/><text x="30.5565%" y="351.50">__do_softi..</text></g><g><title>net_rx_action (62 samples, 7.04%)</title><rect x="30.4200%" y="325" width="7.0375%" height="15" fill="rgb(246,218,30)"/><text x="30.6700%" y="335.50">net_rx_ac..</text></g><g><title>process_backlog (59 samples, 6.70%)</title><rect x="30.7605%" y="309" width="6.6969%" height="15" fill="rgb(219,145,47)"/><text x="31.0105%" y="319.50">process_b..</text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="37.3439%" y="293" width="0.1135%" height="15" fill="rgb(243,12,26)"/><text x="37.5939%" y="303.50"></text></g><g><title>ip_finish_output2 (76 samples, 8.63%)</title><rect x="28.9444%" y="405" width="8.6266%" height="15" fill="rgb(214,87,16)"/><text x="29.1944%" y="415.50">ip_finish_ou..</text></g><g><title>__local_bh_enable_ip (65 samples, 7.38%)</title><rect x="30.1930%" y="389" width="7.3780%" height="15" fill="rgb(208,99,42)"/><text x="30.4430%" y="399.50">__local_bh..</text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="37.4574%" y="373" width="0.1135%" height="15" fill="rgb(253,99,2)"/><text x="37.7074%" y="383.50"></text></g><g><title>__ip_queue_xmit (78 samples, 8.85%)</title><rect x="28.8309%" y="437" width="8.8536%" height="15" fill="rgb(220,168,23)"/><text x="29.0809%" y="447.50">__ip_queue_xm..</text></g><g><title>ip_output (78 samples, 8.85%)</title><rect x="28.8309%" y="421" width="8.8536%" height="15" fill="rgb(242,38,24)"/><text x="29.0809%" y="431.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="37.5709%" y="405" width="0.1135%" height="15" fill="rgb(225,182,9)"/><text x="37.8209%" y="415.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="37.5709%" y="389" width="0.1135%" height="15" fill="rgb(243,178,37)"/><text x="37.8209%" y="399.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.11%)</title><rect x="37.6844%" y="437" width="0.1135%" height="15" fill="rgb(232,139,19)"/><text x="37.9344%" y="447.50"></text></g><g><title>skb_clone (3 samples, 0.34%)</title><rect x="37.7980%" y="437" width="0.3405%" height="15" fill="rgb(225,201,24)"/><text x="38.0480%" y="447.50"></text></g><g><title>tcp_update_skb_after_send (1 samples, 0.11%)</title><rect x="38.1385%" y="437" width="0.1135%" height="15" fill="rgb(221,47,46)"/><text x="38.3885%" y="447.50"></text></g><g><title>__tcp_transmit_skb (86 samples, 9.76%)</title><rect x="28.6039%" y="453" width="9.7616%" height="15" fill="rgb(249,23,13)"/><text x="28.8539%" y="463.50">__tcp_transmit..</text></g><g><title>tcp_v4_send_check (1 samples, 0.11%)</title><rect x="38.2520%" y="437" width="0.1135%" height="15" fill="rgb(219,9,5)"/><text x="38.5020%" y="447.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="38.3655%" y="437" width="0.1135%" height="15" fill="rgb(254,171,16)"/><text x="38.6155%" y="447.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="38.3655%" y="421" width="0.1135%" height="15" fill="rgb(230,171,20)"/><text x="38.6155%" y="431.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.23%)</title><rect x="38.3655%" y="453" width="0.2270%" height="15" fill="rgb(210,71,41)"/><text x="38.6155%" y="463.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="38.4790%" y="437" width="0.1135%" height="15" fill="rgb(206,173,20)"/><text x="38.7290%" y="447.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="38.5925%" y="453" width="0.1135%" height="15" fill="rgb(233,88,34)"/><text x="38.8425%" y="463.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="38.5925%" y="437" width="0.1135%" height="15" fill="rgb(223,209,46)"/><text x="38.8425%" y="447.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="38.5925%" y="421" width="0.1135%" height="15" fill="rgb(250,43,18)"/><text x="38.8425%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (96 samples, 10.90%)</title><rect x="27.9228%" y="485" width="10.8967%" height="15" fill="rgb(208,13,10)"/><text x="28.1728%" y="495.50">__tcp_push_pendi..</text></g><g><title>tcp_write_xmit (96 samples, 10.90%)</title><rect x="27.9228%" y="469" width="10.8967%" height="15" fill="rgb(212,200,36)"/><text x="28.1728%" y="479.50">tcp_write_xmit</text></g><g><title>tcp_small_queue_check.isra.0 (1 samples, 0.11%)</title><rect x="38.7060%" y="453" width="0.1135%" height="15" fill="rgb(225,90,30)"/><text x="38.9560%" y="463.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.23%)</title><rect x="38.8195%" y="485" width="0.2270%" height="15" fill="rgb(236,182,39)"/><text x="39.0695%" y="495.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.23%)</title><rect x="38.8195%" y="469" width="0.2270%" height="15" fill="rgb(212,144,35)"/><text x="39.0695%" y="479.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.34%)</title><rect x="39.0465%" y="485" width="0.3405%" height="15" fill="rgb(228,63,44)"/><text x="39.2965%" y="495.50"></text></g><g><title>__alloc_skb (3 samples, 0.34%)</title><rect x="39.0465%" y="469" width="0.3405%" height="15" fill="rgb(228,109,6)"/><text x="39.2965%" y="479.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.23%)</title><rect x="39.1600%" y="453" width="0.2270%" height="15" fill="rgb(238,117,24)"/><text x="39.4100%" y="463.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="39.5006%" y="469" width="0.1135%" height="15" fill="rgb(242,26,26)"/><text x="39.7506%" y="479.50"></text></g><g><title>check_stack_object (1 samples, 0.11%)</title><rect x="39.5006%" y="453" width="0.1135%" height="15" fill="rgb(221,92,48)"/><text x="39.7506%" y="463.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.34%)</title><rect x="39.3871%" y="485" width="0.3405%" height="15" fill="rgb(209,209,32)"/><text x="39.6371%" y="495.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="39.6141%" y="469" width="0.1135%" height="15" fill="rgb(221,70,22)"/><text x="39.8641%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="39.6141%" y="453" width="0.1135%" height="15" fill="rgb(248,145,5)"/><text x="39.8641%" y="463.50"></text></g><g><title>skb_entail (1 samples, 0.11%)</title><rect x="39.7276%" y="485" width="0.1135%" height="15" fill="rgb(226,116,26)"/><text x="39.9776%" y="495.50"></text></g><g><title>tcp_push (1 samples, 0.11%)</title><rect x="39.8411%" y="485" width="0.1135%" height="15" fill="rgb(244,5,17)"/><text x="40.0911%" y="495.50"></text></g><g><title>tcp_send_mss (1 samples, 0.11%)</title><rect x="39.9546%" y="485" width="0.1135%" height="15" fill="rgb(252,159,33)"/><text x="40.2046%" y="495.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="39.9546%" y="469" width="0.1135%" height="15" fill="rgb(206,71,0)"/><text x="40.2046%" y="479.50"></text></g><g><title>tcp_established_options (1 samples, 0.11%)</title><rect x="39.9546%" y="453" width="0.1135%" height="15" fill="rgb(233,118,54)"/><text x="40.2046%" y="463.50"></text></g><g><title>sock_sendmsg (113 samples, 12.83%)</title><rect x="27.3553%" y="533" width="12.8263%" height="15" fill="rgb(234,83,48)"/><text x="27.6053%" y="543.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (112 samples, 12.71%)</title><rect x="27.4688%" y="517" width="12.7128%" height="15" fill="rgb(228,3,54)"/><text x="27.7188%" y="527.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (111 samples, 12.60%)</title><rect x="27.5823%" y="501" width="12.5993%" height="15" fill="rgb(226,155,13)"/><text x="27.8323%" y="511.50">tcp_sendmsg_locked</text></g><g><title>tcp_stream_memory_free (1 samples, 0.11%)</title><rect x="40.0681%" y="485" width="0.1135%" height="15" fill="rgb(241,28,37)"/><text x="40.3181%" y="495.50"></text></g><g><title>__x64_sys_sendto (116 samples, 13.17%)</title><rect x="27.1283%" y="565" width="13.1669%" height="15" fill="rgb(233,93,10)"/><text x="27.3783%" y="575.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (116 samples, 13.17%)</title><rect x="27.1283%" y="549" width="13.1669%" height="15" fill="rgb(225,113,19)"/><text x="27.3783%" y="559.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="40.1816%" y="533" width="0.1135%" height="15" fill="rgb(241,2,18)"/><text x="40.4316%" y="543.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="40.1816%" y="517" width="0.1135%" height="15" fill="rgb(228,207,21)"/><text x="40.4316%" y="527.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.23%)</title><rect x="40.2951%" y="549" width="0.2270%" height="15" fill="rgb(213,211,35)"/><text x="40.5451%" y="559.50"></text></g><g><title>do_syscall_64 (119 samples, 13.51%)</title><rect x="27.1283%" y="581" width="13.5074%" height="15" fill="rgb(209,83,10)"/><text x="27.3783%" y="591.50">do_syscall_64</text></g><g><title>syscall_trace_enter (3 samples, 0.34%)</title><rect x="40.2951%" y="565" width="0.3405%" height="15" fill="rgb(209,164,1)"/><text x="40.5451%" y="575.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="40.5221%" y="549" width="0.1135%" height="15" fill="rgb(213,184,43)"/><text x="40.7721%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (123 samples, 13.96%)</title><rect x="27.1283%" y="597" width="13.9614%" height="15" fill="rgb(231,61,34)"/><text x="27.3783%" y="607.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.45%)</title><rect x="40.6356%" y="581" width="0.4540%" height="15" fill="rgb(235,75,3)"/><text x="40.8856%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (125 samples, 14.19%)</title><rect x="27.0148%" y="645" width="14.1884%" height="15" fill="rgb(220,106,47)"/><text x="27.2648%" y="655.50">&lt;std::net::tcp::TcpStr..</text></g><g><title>std::sys_common::net::TcpStream::write (125 samples, 14.19%)</title><rect x="27.0148%" y="629" width="14.1884%" height="15" fill="rgb(210,196,33)"/><text x="27.2648%" y="639.50">std::sys_common::net::..</text></g><g><title>__libc_send (125 samples, 14.19%)</title><rect x="27.0148%" y="613" width="14.1884%" height="15" fill="rgb(229,154,42)"/><text x="27.2648%" y="623.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="41.0897%" y="597" width="0.1135%" height="15" fill="rgb(228,114,26)"/><text x="41.3397%" y="607.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (259 samples, 29.40%)</title><rect x="11.9183%" y="709" width="29.3984%" height="15" fill="rgb(208,144,1)"/><text x="12.1683%" y="719.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_que..</text></g><g><title>mysql::conn::Conn::_query (197 samples, 22.36%)</title><rect x="18.9557%" y="693" width="22.3610%" height="15" fill="rgb(239,112,37)"/><text x="19.2057%" y="703.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (127 samples, 14.42%)</title><rect x="26.9012%" y="677" width="14.4154%" height="15" fill="rgb(210,96,50)"/><text x="27.1512%" y="687.50">mysql_common::proto::s..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (126 samples, 14.30%)</title><rect x="27.0148%" y="661" width="14.3019%" height="15" fill="rgb(222,178,2)"/><text x="27.2648%" y="671.50">std::io::buffered::Buf..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::remaining (1 samples, 0.11%)</title><rect x="41.2032%" y="645" width="0.1135%" height="15" fill="rgb(226,74,18)"/><text x="41.4532%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.11%)</title><rect x="41.2032%" y="629" width="0.1135%" height="15" fill="rgb(225,67,54)"/><text x="41.4532%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.11%)</title><rect x="41.2032%" y="613" width="0.1135%" height="15" fill="rgb(251,92,32)"/><text x="41.4532%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.11%)</title><rect x="41.2032%" y="597" width="0.1135%" height="15" fill="rgb(228,149,22)"/><text x="41.4532%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="41.3167%" y="709" width="0.1135%" height="15" fill="rgb(243,54,13)"/><text x="41.5667%" y="719.50"></text></g><g><title>__libc_close (1 samples, 0.11%)</title><rect x="41.3167%" y="693" width="0.1135%" height="15" fill="rgb(243,180,28)"/><text x="41.5667%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="41.3167%" y="677" width="0.1135%" height="15" fill="rgb(208,167,24)"/><text x="41.5667%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="41.3167%" y="661" width="0.1135%" height="15" fill="rgb(245,73,45)"/><text x="41.5667%" y="671.50"></text></g><g><title>task_work_run (1 samples, 0.11%)</title><rect x="41.3167%" y="645" width="0.1135%" height="15" fill="rgb(237,203,48)"/><text x="41.5667%" y="655.50"></text></g><g><title>__fput (1 samples, 0.11%)</title><rect x="41.3167%" y="629" width="0.1135%" height="15" fill="rgb(211,197,16)"/><text x="41.5667%" y="639.50"></text></g><g><title>sock_close (1 samples, 0.11%)</title><rect x="41.3167%" y="613" width="0.1135%" height="15" fill="rgb(243,99,51)"/><text x="41.5667%" y="623.50"></text></g><g><title>__sock_release (1 samples, 0.11%)</title><rect x="41.3167%" y="597" width="0.1135%" height="15" fill="rgb(215,123,29)"/><text x="41.5667%" y="607.50"></text></g><g><title>inet_release (1 samples, 0.11%)</title><rect x="41.3167%" y="581" width="0.1135%" height="15" fill="rgb(239,186,37)"/><text x="41.5667%" y="591.50"></text></g><g><title>tcp_close (1 samples, 0.11%)</title><rect x="41.3167%" y="565" width="0.1135%" height="15" fill="rgb(252,136,39)"/><text x="41.5667%" y="575.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="41.3167%" y="549" width="0.1135%" height="15" fill="rgb(223,213,32)"/><text x="41.5667%" y="559.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="41.3167%" y="533" width="0.1135%" height="15" fill="rgb(233,115,5)"/><text x="41.5667%" y="543.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="41.3167%" y="517" width="0.1135%" height="15" fill="rgb(207,226,44)"/><text x="41.5667%" y="527.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="41.3167%" y="501" width="0.1135%" height="15" fill="rgb(208,126,0)"/><text x="41.5667%" y="511.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="41.3167%" y="485" width="0.1135%" height="15" fill="rgb(244,66,21)"/><text x="41.5667%" y="495.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="41.3167%" y="469" width="0.1135%" height="15" fill="rgb(222,97,12)"/><text x="41.5667%" y="479.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="41.3167%" y="453" width="0.1135%" height="15" fill="rgb(219,213,19)"/><text x="41.5667%" y="463.50"></text></g><g><title>do_softirq (1 samples, 0.11%)</title><rect x="41.3167%" y="437" width="0.1135%" height="15" fill="rgb(252,169,30)"/><text x="41.5667%" y="447.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.11%)</title><rect x="41.3167%" y="421" width="0.1135%" height="15" fill="rgb(206,32,51)"/><text x="41.5667%" y="431.50"></text></g><g><title>__do_softirq (1 samples, 0.11%)</title><rect x="41.3167%" y="405" width="0.1135%" height="15" fill="rgb(250,172,42)"/><text x="41.5667%" y="415.50"></text></g><g><title>net_rx_action (1 samples, 0.11%)</title><rect x="41.3167%" y="389" width="0.1135%" height="15" fill="rgb(209,34,43)"/><text x="41.5667%" y="399.50"></text></g><g><title>process_backlog (1 samples, 0.11%)</title><rect x="41.3167%" y="373" width="0.1135%" height="15" fill="rgb(223,11,35)"/><text x="41.5667%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="41.3167%" y="357" width="0.1135%" height="15" fill="rgb(251,219,26)"/><text x="41.5667%" y="367.50"></text></g><g><title>ip_rcv (1 samples, 0.11%)</title><rect x="41.3167%" y="341" width="0.1135%" height="15" fill="rgb(231,119,3)"/><text x="41.5667%" y="351.50"></text></g><g><title>ip_local_deliver (1 samples, 0.11%)</title><rect x="41.3167%" y="325" width="0.1135%" height="15" fill="rgb(216,97,11)"/><text x="41.5667%" y="335.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="41.3167%" y="309" width="0.1135%" height="15" fill="rgb(223,59,9)"/><text x="41.5667%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="41.3167%" y="293" width="0.1135%" height="15" fill="rgb(233,93,31)"/><text x="41.5667%" y="303.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="41.3167%" y="277" width="0.1135%" height="15" fill="rgb(239,81,33)"/><text x="41.5667%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="41.3167%" y="261" width="0.1135%" height="15" fill="rgb(213,120,34)"/><text x="41.5667%" y="271.50"></text></g><g><title>tcp_rcv_state_process (1 samples, 0.11%)</title><rect x="41.3167%" y="245" width="0.1135%" height="15" fill="rgb(243,49,53)"/><text x="41.5667%" y="255.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="41.3167%" y="229" width="0.1135%" height="15" fill="rgb(247,216,33)"/><text x="41.5667%" y="239.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="41.3167%" y="213" width="0.1135%" height="15" fill="rgb(226,26,14)"/><text x="41.5667%" y="223.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="41.6572%" y="597" width="0.1135%" height="15" fill="rgb(215,49,53)"/><text x="41.9072%" y="607.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="42.3383%" y="533" width="0.1135%" height="15" fill="rgb(245,162,40)"/><text x="42.5883%" y="543.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="42.6788%" y="485" width="0.1135%" height="15" fill="rgb(229,68,17)"/><text x="42.9288%" y="495.50"></text></g><g><title>dst_release (1 samples, 0.11%)</title><rect x="42.7923%" y="469" width="0.1135%" height="15" fill="rgb(213,182,10)"/><text x="43.0423%" y="479.50"></text></g><g><title>__kfree_skb (3 samples, 0.34%)</title><rect x="42.6788%" y="501" width="0.3405%" height="15" fill="rgb(245,125,30)"/><text x="42.9288%" y="511.50"></text></g><g><title>skb_release_head_state (2 samples, 0.23%)</title><rect x="42.7923%" y="485" width="0.2270%" height="15" fill="rgb(232,202,2)"/><text x="43.0423%" y="495.50"></text></g><g><title>sock_rfree (1 samples, 0.11%)</title><rect x="42.9058%" y="469" width="0.1135%" height="15" fill="rgb(237,140,51)"/><text x="43.1558%" y="479.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="43.0193%" y="501" width="0.1135%" height="15" fill="rgb(236,157,25)"/><text x="43.2693%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="43.0193%" y="485" width="0.1135%" height="15" fill="rgb(219,209,0)"/><text x="43.2693%" y="495.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.11%)</title><rect x="43.1328%" y="501" width="0.1135%" height="15" fill="rgb(240,116,54)"/><text x="43.3828%" y="511.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="43.1328%" y="485" width="0.1135%" height="15" fill="rgb(216,10,36)"/><text x="43.3828%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="43.1328%" y="469" width="0.1135%" height="15" fill="rgb(222,72,44)"/><text x="43.3828%" y="479.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="43.3598%" y="373" width="0.1135%" height="15" fill="rgb(232,159,9)"/><text x="43.6098%" y="383.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="43.3598%" y="357" width="0.1135%" height="15" fill="rgb(210,39,32)"/><text x="43.6098%" y="367.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="43.3598%" y="341" width="0.1135%" height="15" fill="rgb(216,194,45)"/><text x="43.6098%" y="351.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="43.3598%" y="325" width="0.1135%" height="15" fill="rgb(218,18,35)"/><text x="43.6098%" y="335.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="43.4733%" y="325" width="0.1135%" height="15" fill="rgb(207,83,51)"/><text x="43.7233%" y="335.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="43.8138%" y="245" width="0.1135%" height="15" fill="rgb(225,63,43)"/><text x="44.0638%" y="255.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="43.9274%" y="197" width="0.1135%" height="15" fill="rgb(207,57,36)"/><text x="44.1774%" y="207.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="43.9274%" y="181" width="0.1135%" height="15" fill="rgb(216,99,33)"/><text x="44.1774%" y="191.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="44.0409%" y="197" width="0.1135%" height="15" fill="rgb(225,42,16)"/><text x="44.2909%" y="207.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 1.02%)</title><rect x="43.2463%" y="501" width="1.0216%" height="15" fill="rgb(220,201,45)"/><text x="43.4963%" y="511.50"></text></g><g><title>__ip_queue_xmit (9 samples, 1.02%)</title><rect x="43.2463%" y="485" width="1.0216%" height="15" fill="rgb(225,33,4)"/><text x="43.4963%" y="495.50"></text></g><g><title>ip_output (9 samples, 1.02%)</title><rect x="43.2463%" y="469" width="1.0216%" height="15" fill="rgb(224,33,50)"/><text x="43.4963%" y="479.50"></text></g><g><title>ip_finish_output2 (9 samples, 1.02%)</title><rect x="43.2463%" y="453" width="1.0216%" height="15" fill="rgb(246,198,51)"/><text x="43.4963%" y="463.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 0.91%)</title><rect x="43.3598%" y="437" width="0.9081%" height="15" fill="rgb(205,22,4)"/><text x="43.6098%" y="447.50"></text></g><g><title>do_softirq (8 samples, 0.91%)</title><rect x="43.3598%" y="421" width="0.9081%" height="15" fill="rgb(206,3,8)"/><text x="43.6098%" y="431.50"></text></g><g><title>do_softirq_own_stack (8 samples, 0.91%)</title><rect x="43.3598%" y="405" width="0.9081%" height="15" fill="rgb(251,23,15)"/><text x="43.6098%" y="415.50"></text></g><g><title>__do_softirq (8 samples, 0.91%)</title><rect x="43.3598%" y="389" width="0.9081%" height="15" fill="rgb(252,88,28)"/><text x="43.6098%" y="399.50"></text></g><g><title>net_rx_action (7 samples, 0.79%)</title><rect x="43.4733%" y="373" width="0.7946%" height="15" fill="rgb(212,127,14)"/><text x="43.7233%" y="383.50"></text></g><g><title>process_backlog (7 samples, 0.79%)</title><rect x="43.4733%" y="357" width="0.7946%" height="15" fill="rgb(247,145,37)"/><text x="43.7233%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.79%)</title><rect x="43.4733%" y="341" width="0.7946%" height="15" fill="rgb(209,117,53)"/><text x="43.7233%" y="351.50"></text></g><g><title>ip_rcv (6 samples, 0.68%)</title><rect x="43.5868%" y="325" width="0.6810%" height="15" fill="rgb(212,90,42)"/><text x="43.8368%" y="335.50"></text></g><g><title>ip_local_deliver (6 samples, 0.68%)</title><rect x="43.5868%" y="309" width="0.6810%" height="15" fill="rgb(218,164,37)"/><text x="43.8368%" y="319.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.68%)</title><rect x="43.5868%" y="293" width="0.6810%" height="15" fill="rgb(246,65,34)"/><text x="43.8368%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.68%)</title><rect x="43.5868%" y="277" width="0.6810%" height="15" fill="rgb(231,100,33)"/><text x="43.8368%" y="287.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.68%)</title><rect x="43.5868%" y="261" width="0.6810%" height="15" fill="rgb(228,126,14)"/><text x="43.8368%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.34%)</title><rect x="43.9274%" y="245" width="0.3405%" height="15" fill="rgb(215,173,21)"/><text x="44.1774%" y="255.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.34%)</title><rect x="43.9274%" y="229" width="0.3405%" height="15" fill="rgb(210,6,40)"/><text x="44.1774%" y="239.50"></text></g><g><title>tcp_ack (3 samples, 0.34%)</title><rect x="43.9274%" y="213" width="0.3405%" height="15" fill="rgb(212,48,18)"/><text x="44.1774%" y="223.50"></text></g><g><title>rb_first (1 samples, 0.11%)</title><rect x="44.1544%" y="197" width="0.1135%" height="15" fill="rgb(230,214,11)"/><text x="44.4044%" y="207.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="44.2679%" y="485" width="0.1135%" height="15" fill="rgb(254,105,39)"/><text x="44.5179%" y="495.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.11%)</title><rect x="44.3814%" y="485" width="0.1135%" height="15" fill="rgb(245,158,5)"/><text x="44.6314%" y="495.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="44.4949%" y="485" width="0.1135%" height="15" fill="rgb(249,208,11)"/><text x="44.7449%" y="495.50"></text></g><g><title>add_wait_queue (1 samples, 0.11%)</title><rect x="44.6084%" y="485" width="0.1135%" height="15" fill="rgb(210,39,28)"/><text x="44.8584%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="44.6084%" y="469" width="0.1135%" height="15" fill="rgb(211,56,53)"/><text x="44.8584%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="44.6084%" y="453" width="0.1135%" height="15" fill="rgb(226,201,30)"/><text x="44.8584%" y="463.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="44.6084%" y="437" width="0.1135%" height="15" fill="rgb(239,101,34)"/><text x="44.8584%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="45.2894%" y="389" width="0.1135%" height="15" fill="rgb(226,209,5)"/><text x="45.5394%" y="399.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.23%)</title><rect x="45.2894%" y="421" width="0.2270%" height="15" fill="rgb(250,105,47)"/><text x="45.5394%" y="431.50"></text></g><g><title>ctx_sched_out (2 samples, 0.23%)</title><rect x="45.2894%" y="405" width="0.2270%" height="15" fill="rgb(230,72,3)"/><text x="45.5394%" y="415.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="45.4030%" y="389" width="0.1135%" height="15" fill="rgb(232,218,39)"/><text x="45.6530%" y="399.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.11%)</title><rect x="45.8570%" y="389" width="0.1135%" height="15" fill="rgb(248,166,6)"/><text x="46.1070%" y="399.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="45.9705%" y="389" width="0.1135%" height="15" fill="rgb(247,89,20)"/><text x="46.2205%" y="399.50"></text></g><g><title>__calc_delta (2 samples, 0.23%)</title><rect x="46.1975%" y="373" width="0.2270%" height="15" fill="rgb(248,130,54)"/><text x="46.4475%" y="383.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="46.4245%" y="373" width="0.1135%" height="15" fill="rgb(234,196,4)"/><text x="46.6745%" y="383.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.11%)</title><rect x="46.4245%" y="357" width="0.1135%" height="15" fill="rgb(250,143,31)"/><text x="46.6745%" y="367.50"></text></g><g><title>update_curr (5 samples, 0.57%)</title><rect x="46.0840%" y="389" width="0.5675%" height="15" fill="rgb(211,110,34)"/><text x="46.3340%" y="399.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="46.5380%" y="373" width="0.1135%" height="15" fill="rgb(215,124,48)"/><text x="46.7880%" y="383.50"></text></g><g><title>dequeue_task_fair (11 samples, 1.25%)</title><rect x="45.5165%" y="421" width="1.2486%" height="15" fill="rgb(216,46,13)"/><text x="45.7665%" y="431.50"></text></g><g><title>dequeue_entity (8 samples, 0.91%)</title><rect x="45.8570%" y="405" width="0.9081%" height="15" fill="rgb(205,184,25)"/><text x="46.1070%" y="415.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="46.6515%" y="389" width="0.1135%" height="15" fill="rgb(228,1,10)"/><text x="46.9015%" y="399.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="46.6515%" y="373" width="0.1135%" height="15" fill="rgb(213,116,27)"/><text x="46.9015%" y="383.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.23%)</title><rect x="46.8785%" y="389" width="0.2270%" height="15" fill="rgb(241,95,50)"/><text x="47.1285%" y="399.50"></text></g><g><title>native_write_msr (2 samples, 0.23%)</title><rect x="46.8785%" y="373" width="0.2270%" height="15" fill="rgb(238,48,32)"/><text x="47.1285%" y="383.50"></text></g><g><title>finish_task_switch (4 samples, 0.45%)</title><rect x="46.7650%" y="421" width="0.4540%" height="15" fill="rgb(235,113,49)"/><text x="47.0150%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.34%)</title><rect x="46.8785%" y="405" width="0.3405%" height="15" fill="rgb(205,127,43)"/><text x="47.1285%" y="415.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="47.1056%" y="389" width="0.1135%" height="15" fill="rgb(250,162,2)"/><text x="47.3556%" y="399.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="47.1056%" y="373" width="0.1135%" height="15" fill="rgb(220,13,41)"/><text x="47.3556%" y="383.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="47.2191%" y="421" width="0.1135%" height="15" fill="rgb(249,221,25)"/><text x="47.4691%" y="431.50"></text></g><g><title>newidle_balance (1 samples, 0.11%)</title><rect x="47.2191%" y="405" width="0.1135%" height="15" fill="rgb(215,208,19)"/><text x="47.4691%" y="415.50"></text></g><g><title>psi_task_change (3 samples, 0.34%)</title><rect x="47.3326%" y="421" width="0.3405%" height="15" fill="rgb(236,175,2)"/><text x="47.5826%" y="431.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="47.5596%" y="405" width="0.1135%" height="15" fill="rgb(241,52,2)"/><text x="47.8096%" y="415.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.23%)</title><rect x="47.6731%" y="421" width="0.2270%" height="15" fill="rgb(248,140,14)"/><text x="47.9231%" y="431.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="47.7866%" y="405" width="0.1135%" height="15" fill="rgb(253,22,42)"/><text x="48.0366%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="47.9001%" y="421" width="0.1135%" height="15" fill="rgb(234,61,47)"/><text x="48.1501%" y="431.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="48.0136%" y="405" width="0.1135%" height="15" fill="rgb(208,226,15)"/><text x="48.2636%" y="415.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="48.0136%" y="389" width="0.1135%" height="15" fill="rgb(217,221,4)"/><text x="48.2636%" y="399.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="48.0136%" y="373" width="0.1135%" height="15" fill="rgb(212,174,34)"/><text x="48.2636%" y="383.50"></text></g><g><title>sk_wait_data (35 samples, 3.97%)</title><rect x="44.2679%" y="501" width="3.9728%" height="15" fill="rgb(253,83,4)"/><text x="44.5179%" y="511.50">sk_w..</text></g><g><title>wait_woken (31 samples, 3.52%)</title><rect x="44.7219%" y="485" width="3.5187%" height="15" fill="rgb(250,195,49)"/><text x="44.9719%" y="495.50">wai..</text></g><g><title>schedule_timeout (29 samples, 3.29%)</title><rect x="44.9489%" y="469" width="3.2917%" height="15" fill="rgb(241,192,25)"/><text x="45.1989%" y="479.50">sch..</text></g><g><title>schedule (29 samples, 3.29%)</title><rect x="44.9489%" y="453" width="3.2917%" height="15" fill="rgb(208,124,10)"/><text x="45.1989%" y="463.50">sch..</text></g><g><title>__schedule (28 samples, 3.18%)</title><rect x="45.0624%" y="437" width="3.1782%" height="15" fill="rgb(222,33,0)"/><text x="45.3124%" y="447.50">__s..</text></g><g><title>update_rq_clock (2 samples, 0.23%)</title><rect x="48.0136%" y="421" width="0.2270%" height="15" fill="rgb(234,209,28)"/><text x="48.2636%" y="431.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="48.1271%" y="405" width="0.1135%" height="15" fill="rgb(224,11,23)"/><text x="48.3771%" y="415.50"></text></g><g><title>_copy_to_iter (2 samples, 0.23%)</title><rect x="48.5812%" y="469" width="0.2270%" height="15" fill="rgb(232,99,1)"/><text x="48.8312%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="48.6947%" y="453" width="0.1135%" height="15" fill="rgb(237,95,45)"/><text x="48.9447%" y="463.50"></text></g><g><title>skb_copy_datagram_iter (6 samples, 0.68%)</title><rect x="48.2406%" y="501" width="0.6810%" height="15" fill="rgb(208,109,11)"/><text x="48.4906%" y="511.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.68%)</title><rect x="48.2406%" y="485" width="0.6810%" height="15" fill="rgb(216,190,48)"/><text x="48.4906%" y="495.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="48.8082%" y="469" width="0.1135%" height="15" fill="rgb(251,171,36)"/><text x="49.0582%" y="479.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="48.8082%" y="453" width="0.1135%" height="15" fill="rgb(230,62,22)"/><text x="49.0582%" y="463.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="48.8082%" y="437" width="0.1135%" height="15" fill="rgb(225,114,35)"/><text x="49.0582%" y="447.50"></text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="48.9217%" y="501" width="0.1135%" height="15" fill="rgb(215,118,42)"/><text x="49.1717%" y="511.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="48.9217%" y="485" width="0.1135%" height="15" fill="rgb(243,119,21)"/><text x="49.1717%" y="495.50"></text></g><g><title>do_syscall_64 (63 samples, 7.15%)</title><rect x="41.9977%" y="581" width="7.1510%" height="15" fill="rgb(252,177,53)"/><text x="42.2477%" y="591.50">do_syscall..</text></g><g><title>__x64_sys_recvfrom (61 samples, 6.92%)</title><rect x="42.2247%" y="565" width="6.9240%" height="15" fill="rgb(237,209,29)"/><text x="42.4747%" y="575.50">__x64_sys..</text></g><g><title>__sys_recvfrom (61 samples, 6.92%)</title><rect x="42.2247%" y="549" width="6.9240%" height="15" fill="rgb(212,65,23)"/><text x="42.4747%" y="559.50">__sys_rec..</text></g><g><title>inet_recvmsg (59 samples, 6.70%)</title><rect x="42.4518%" y="533" width="6.6969%" height="15" fill="rgb(230,222,46)"/><text x="42.7018%" y="543.50">inet_recv..</text></g><g><title>tcp_recvmsg (59 samples, 6.70%)</title><rect x="42.4518%" y="517" width="6.6969%" height="15" fill="rgb(215,135,32)"/><text x="42.7018%" y="527.50">tcp_recvm..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.11%)</title><rect x="49.0352%" y="501" width="0.1135%" height="15" fill="rgb(246,101,22)"/><text x="49.2852%" y="511.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (71 samples, 8.06%)</title><rect x="41.5437%" y="677" width="8.0590%" height="15" fill="rgb(206,107,13)"/><text x="41.7937%" y="687.50">&lt;std::net::..</text></g><g><title>std::sys_common::net::TcpStream::read (71 samples, 8.06%)</title><rect x="41.5437%" y="661" width="8.0590%" height="15" fill="rgb(250,100,44)"/><text x="41.7937%" y="671.50">std::sys_co..</text></g><g><title>std::sys::unix::net::Socket::read (71 samples, 8.06%)</title><rect x="41.5437%" y="645" width="8.0590%" height="15" fill="rgb(231,147,38)"/><text x="41.7937%" y="655.50">std::sys::u..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (71 samples, 8.06%)</title><rect x="41.5437%" y="629" width="8.0590%" height="15" fill="rgb(229,8,40)"/><text x="41.7937%" y="639.50">std::sys::u..</text></g><g><title>__libc_recv (71 samples, 8.06%)</title><rect x="41.5437%" y="613" width="8.0590%" height="15" fill="rgb(221,135,30)"/><text x="41.7937%" y="623.50">__libc_recv</text></g><g><title>entry_SYSCALL_64 (69 samples, 7.83%)</title><rect x="41.7707%" y="597" width="7.8320%" height="15" fill="rgb(249,193,18)"/><text x="42.0207%" y="607.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.45%)</title><rect x="49.1487%" y="581" width="0.4540%" height="15" fill="rgb(209,133,39)"/><text x="49.3987%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (73 samples, 8.29%)</title><rect x="41.5437%" y="693" width="8.2860%" height="15" fill="rgb(232,100,14)"/><text x="41.7937%" y="703.50">&lt;std::io::bu..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="49.6027%" y="677" width="0.2270%" height="15" fill="rgb(224,185,1)"/><text x="49.8527%" y="687.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (79 samples, 8.97%)</title><rect x="41.4302%" y="709" width="8.9671%" height="15" fill="rgb(223,139,8)"/><text x="41.6802%" y="719.50">msql_srv::pac..</text></g><g><title>__memset_avx2_erms (5 samples, 0.57%)</title><rect x="49.8297%" y="693" width="0.5675%" height="15" fill="rgb(232,213,38)"/><text x="50.0797%" y="703.50"></text></g><g><title>__pthread_enable_asynccancel (2 samples, 0.23%)</title><rect x="50.3973%" y="645" width="0.2270%" height="15" fill="rgb(207,94,22)"/><text x="50.6473%" y="655.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="50.6243%" y="645" width="0.1135%" height="15" fill="rgb(219,183,54)"/><text x="50.8743%" y="655.50"></text></g><g><title>fput_many (1 samples, 0.11%)</title><rect x="51.1918%" y="581" width="0.1135%" height="15" fill="rgb(216,185,54)"/><text x="51.4418%" y="591.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.11%)</title><rect x="51.3053%" y="549" width="0.1135%" height="15" fill="rgb(254,217,39)"/><text x="51.5553%" y="559.50"></text></g><g><title>release_sock (1 samples, 0.11%)</title><rect x="51.4188%" y="549" width="0.1135%" height="15" fill="rgb(240,178,23)"/><text x="51.6688%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="51.4188%" y="533" width="0.1135%" height="15" fill="rgb(218,11,47)"/><text x="51.6688%" y="543.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="52.8944%" y="469" width="0.1135%" height="15" fill="rgb(218,51,51)"/><text x="53.1444%" y="479.50"></text></g><g><title>__sk_dst_check (2 samples, 0.23%)</title><rect x="53.0079%" y="469" width="0.2270%" height="15" fill="rgb(238,126,27)"/><text x="53.2579%" y="479.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.11%)</title><rect x="53.1215%" y="453" width="0.1135%" height="15" fill="rgb(249,202,22)"/><text x="53.3715%" y="463.50"></text></g><g><title>eth_type_trans (1 samples, 0.11%)</title><rect x="53.8025%" y="389" width="0.1135%" height="15" fill="rgb(254,195,49)"/><text x="54.0525%" y="399.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="53.9160%" y="357" width="0.1135%" height="15" fill="rgb(208,123,14)"/><text x="54.1660%" y="367.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="53.9160%" y="341" width="0.1135%" height="15" fill="rgb(224,200,8)"/><text x="54.1660%" y="351.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="53.9160%" y="325" width="0.1135%" height="15" fill="rgb(217,61,36)"/><text x="54.1660%" y="335.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.45%)</title><rect x="53.6890%" y="437" width="0.4540%" height="15" fill="rgb(206,35,45)"/><text x="53.9390%" y="447.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.34%)</title><rect x="53.8025%" y="421" width="0.3405%" height="15" fill="rgb(217,65,33)"/><text x="54.0525%" y="431.50"></text></g><g><title>loopback_xmit (3 samples, 0.34%)</title><rect x="53.8025%" y="405" width="0.3405%" height="15" fill="rgb(222,158,48)"/><text x="54.0525%" y="415.50"></text></g><g><title>netif_rx (2 samples, 0.23%)</title><rect x="53.9160%" y="389" width="0.2270%" height="15" fill="rgb(254,2,54)"/><text x="54.1660%" y="399.50"></text></g><g><title>netif_rx_internal (2 samples, 0.23%)</title><rect x="53.9160%" y="373" width="0.2270%" height="15" fill="rgb(250,143,38)"/><text x="54.1660%" y="383.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.11%)</title><rect x="54.0295%" y="357" width="0.1135%" height="15" fill="rgb(248,25,0)"/><text x="54.2795%" y="367.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="54.4835%" y="405" width="0.1135%" height="15" fill="rgb(206,152,27)"/><text x="54.7335%" y="415.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.23%)</title><rect x="54.8241%" y="373" width="0.2270%" height="15" fill="rgb(240,77,30)"/><text x="55.0741%" y="383.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="54.9376%" y="357" width="0.1135%" height="15" fill="rgb(231,5,3)"/><text x="55.1876%" y="367.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="54.9376%" y="341" width="0.1135%" height="15" fill="rgb(207,226,32)"/><text x="55.1876%" y="351.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="54.9376%" y="325" width="0.1135%" height="15" fill="rgb(222,207,47)"/><text x="55.1876%" y="335.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.11%)</title><rect x="55.0511%" y="357" width="0.1135%" height="15" fill="rgb(229,115,45)"/><text x="55.3011%" y="367.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="55.5051%" y="325" width="0.1135%" height="15" fill="rgb(224,191,6)"/><text x="55.7551%" y="335.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.34%)</title><rect x="55.9591%" y="245" width="0.3405%" height="15" fill="rgb(230,227,24)"/><text x="56.2091%" y="255.50"></text></g><g><title>inet_ehashfn (1 samples, 0.11%)</title><rect x="56.1862%" y="229" width="0.1135%" height="15" fill="rgb(228,80,19)"/><text x="56.4362%" y="239.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="56.2997%" y="245" width="0.1135%" height="15" fill="rgb(247,229,0)"/><text x="56.5497%" y="255.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="56.4132%" y="213" width="0.1135%" height="15" fill="rgb(237,194,15)"/><text x="56.6632%" y="223.50"></text></g><g><title>mod_timer (1 samples, 0.11%)</title><rect x="56.4132%" y="197" width="0.1135%" height="15" fill="rgb(219,203,20)"/><text x="56.6632%" y="207.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.23%)</title><rect x="57.3212%" y="149" width="0.2270%" height="15" fill="rgb(234,128,8)"/><text x="57.5712%" y="159.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="57.5482%" y="149" width="0.1135%" height="15" fill="rgb(248,202,8)"/><text x="57.7982%" y="159.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="57.5482%" y="133" width="0.1135%" height="15" fill="rgb(206,104,37)"/><text x="57.7982%" y="143.50"></text></g><g><title>psi_task_change (7 samples, 0.79%)</title><rect x="57.6617%" y="133" width="0.7946%" height="15" fill="rgb(223,8,27)"/><text x="57.9117%" y="143.50"></text></g><g><title>psi_group_change (7 samples, 0.79%)</title><rect x="57.6617%" y="117" width="0.7946%" height="15" fill="rgb(216,217,28)"/><text x="57.9117%" y="127.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="58.3428%" y="101" width="0.1135%" height="15" fill="rgb(249,199,1)"/><text x="58.5928%" y="111.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="58.3428%" y="85" width="0.1135%" height="15" fill="rgb(240,85,17)"/><text x="58.5928%" y="95.50"></text></g><g><title>enqueue_task (9 samples, 1.02%)</title><rect x="57.6617%" y="149" width="1.0216%" height="15" fill="rgb(206,108,45)"/><text x="57.9117%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.23%)</title><rect x="58.4563%" y="133" width="0.2270%" height="15" fill="rgb(245,210,41)"/><text x="58.7063%" y="143.50"></text></g><g><title>account_entity_enqueue (4 samples, 0.45%)</title><rect x="59.0238%" y="117" width="0.4540%" height="15" fill="rgb(206,13,37)"/><text x="59.2738%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.11%)</title><rect x="59.4779%" y="117" width="0.1135%" height="15" fill="rgb(250,61,18)"/><text x="59.7279%" y="127.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="59.7049%" y="101" width="0.1135%" height="15" fill="rgb(235,172,48)"/><text x="59.9549%" y="111.50"></text></g><g><title>enqueue_task_fair (11 samples, 1.25%)</title><rect x="58.6833%" y="149" width="1.2486%" height="15" fill="rgb(249,201,17)"/><text x="58.9333%" y="159.50"></text></g><g><title>enqueue_entity (10 samples, 1.14%)</title><rect x="58.7968%" y="133" width="1.1351%" height="15" fill="rgb(219,208,6)"/><text x="59.0468%" y="143.50"></text></g><g><title>update_load_avg (3 samples, 0.34%)</title><rect x="59.5914%" y="117" width="0.3405%" height="15" fill="rgb(248,31,23)"/><text x="59.8414%" y="127.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="59.8184%" y="101" width="0.1135%" height="15" fill="rgb(245,15,42)"/><text x="60.0684%" y="111.50"></text></g><g><title>find_first_bit (1 samples, 0.11%)</title><rect x="59.9319%" y="149" width="0.1135%" height="15" fill="rgb(222,217,39)"/><text x="60.1819%" y="159.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.34%)</title><rect x="60.0454%" y="149" width="0.3405%" height="15" fill="rgb(210,219,27)"/><text x="60.2954%" y="159.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="60.2724%" y="133" width="0.1135%" height="15" fill="rgb(252,166,36)"/><text x="60.5224%" y="143.50"></text></g><g><title>try_to_wake_up (35 samples, 3.97%)</title><rect x="56.6402%" y="165" width="3.9728%" height="15" fill="rgb(245,132,34)"/><text x="56.8902%" y="175.50">try_..</text></g><g><title>update_rq_clock (2 samples, 0.23%)</title><rect x="60.3859%" y="149" width="0.2270%" height="15" fill="rgb(236,54,3)"/><text x="60.6359%" y="159.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="60.4994%" y="133" width="0.1135%" height="15" fill="rgb(241,173,43)"/><text x="60.7494%" y="143.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="60.4994%" y="117" width="0.1135%" height="15" fill="rgb(215,190,9)"/><text x="60.7494%" y="127.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="60.4994%" y="101" width="0.1135%" height="15" fill="rgb(242,101,16)"/><text x="60.7494%" y="111.50"></text></g><g><title>__wake_up_common (36 samples, 4.09%)</title><rect x="56.6402%" y="181" width="4.0863%" height="15" fill="rgb(223,190,21)"/><text x="56.8902%" y="191.50">__wa..</text></g><g><title>woken_wake_function (1 samples, 0.11%)</title><rect x="60.6129%" y="165" width="0.1135%" height="15" fill="rgb(215,228,25)"/><text x="60.8629%" y="175.50"></text></g><g><title>sock_def_readable (38 samples, 4.31%)</title><rect x="56.5267%" y="213" width="4.3133%" height="15" fill="rgb(225,36,22)"/><text x="56.7767%" y="223.50">sock_..</text></g><g><title>__wake_up_common_lock (37 samples, 4.20%)</title><rect x="56.6402%" y="197" width="4.1998%" height="15" fill="rgb(251,106,46)"/><text x="56.8902%" y="207.50">__wak..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="60.7264%" y="181" width="0.1135%" height="15" fill="rgb(208,90,1)"/><text x="60.9764%" y="191.50"></text></g><g><title>skb_release_data (2 samples, 0.23%)</title><rect x="61.4075%" y="181" width="0.2270%" height="15" fill="rgb(243,10,4)"/><text x="61.6575%" y="191.50"></text></g><g><title>__kfree_skb (3 samples, 0.34%)</title><rect x="61.4075%" y="197" width="0.3405%" height="15" fill="rgb(212,137,27)"/><text x="61.6575%" y="207.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="61.6345%" y="181" width="0.1135%" height="15" fill="rgb(231,220,49)"/><text x="61.8845%" y="191.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="61.7480%" y="197" width="0.1135%" height="15" fill="rgb(237,96,20)"/><text x="61.9980%" y="207.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.11%)</title><rect x="61.7480%" y="181" width="0.1135%" height="15" fill="rgb(239,229,30)"/><text x="61.9980%" y="191.50"></text></g><g><title>rb_first (1 samples, 0.11%)</title><rect x="61.8615%" y="197" width="0.1135%" height="15" fill="rgb(219,65,33)"/><text x="62.1115%" y="207.50"></text></g><g><title>tcp_ack_update_rtt (3 samples, 0.34%)</title><rect x="61.9750%" y="197" width="0.3405%" height="15" fill="rgb(243,134,7)"/><text x="62.2250%" y="207.50"></text></g><g><title>tcp_ack (14 samples, 1.59%)</title><rect x="60.8400%" y="213" width="1.5891%" height="15" fill="rgb(216,177,54)"/><text x="61.0900%" y="223.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.11%)</title><rect x="62.3156%" y="197" width="0.1135%" height="15" fill="rgb(211,160,20)"/><text x="62.5656%" y="207.50"></text></g><g><title>tcp_check_space (1 samples, 0.11%)</title><rect x="62.4291%" y="213" width="0.1135%" height="15" fill="rgb(239,85,39)"/><text x="62.6791%" y="223.50"></text></g><g><title>tcp_grow_window (1 samples, 0.11%)</title><rect x="62.5426%" y="213" width="0.1135%" height="15" fill="rgb(232,125,22)"/><text x="62.7926%" y="223.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.11%)</title><rect x="62.6561%" y="213" width="0.1135%" height="15" fill="rgb(244,57,34)"/><text x="62.9061%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (57 samples, 6.47%)</title><rect x="56.4132%" y="245" width="6.4699%" height="15" fill="rgb(214,203,32)"/><text x="56.6632%" y="255.50">tcp_v4_d..</text></g><g><title>tcp_rcv_established (57 samples, 6.47%)</title><rect x="56.4132%" y="229" width="6.4699%" height="15" fill="rgb(207,58,43)"/><text x="56.6632%" y="239.50">tcp_rcv_..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.11%)</title><rect x="62.7696%" y="213" width="0.1135%" height="15" fill="rgb(215,193,15)"/><text x="63.0196%" y="223.50"></text></g><g><title>ip_local_deliver (65 samples, 7.38%)</title><rect x="55.6186%" y="309" width="7.3780%" height="15" fill="rgb(232,15,44)"/><text x="55.8686%" y="319.50">ip_local_d..</text></g><g><title>ip_local_deliver_finish (64 samples, 7.26%)</title><rect x="55.7321%" y="293" width="7.2645%" height="15" fill="rgb(212,3,48)"/><text x="55.9821%" y="303.50">ip_local_d..</text></g><g><title>ip_protocol_deliver_rcu (64 samples, 7.26%)</title><rect x="55.7321%" y="277" width="7.2645%" height="15" fill="rgb(218,128,7)"/><text x="55.9821%" y="287.50">ip_protoco..</text></g><g><title>tcp_v4_rcv (63 samples, 7.15%)</title><rect x="55.8456%" y="261" width="7.1510%" height="15" fill="rgb(226,216,39)"/><text x="56.0956%" y="271.50">tcp_v4_rcv</text></g><g><title>tcp_v4_fill_cb (1 samples, 0.11%)</title><rect x="62.8831%" y="245" width="0.1135%" height="15" fill="rgb(243,47,51)"/><text x="63.1331%" y="255.50"></text></g><g><title>ip_rcv_core (3 samples, 0.34%)</title><rect x="62.9966%" y="309" width="0.3405%" height="15" fill="rgb(241,183,40)"/><text x="63.2466%" y="319.50"></text></g><g><title>__this_cpu_preempt_check (2 samples, 0.23%)</title><rect x="63.1101%" y="293" width="0.2270%" height="15" fill="rgb(231,217,32)"/><text x="63.3601%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (73 samples, 8.29%)</title><rect x="55.3916%" y="341" width="8.2860%" height="15" fill="rgb(229,61,38)"/><text x="55.6416%" y="351.50">__netif_rece..</text></g><g><title>ip_rcv (71 samples, 8.06%)</title><rect x="55.6186%" y="325" width="8.0590%" height="15" fill="rgb(225,210,5)"/><text x="55.8686%" y="335.50">ip_rcv</text></g><g><title>ip_rcv_finish (3 samples, 0.34%)</title><rect x="63.3371%" y="309" width="0.3405%" height="15" fill="rgb(231,79,45)"/><text x="63.5871%" y="319.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.23%)</title><rect x="63.4506%" y="293" width="0.2270%" height="15" fill="rgb(224,100,7)"/><text x="63.7006%" y="303.50"></text></g><g><title>ip_finish_output2 (93 samples, 10.56%)</title><rect x="53.2350%" y="453" width="10.5562%" height="15" fill="rgb(241,198,18)"/><text x="53.4850%" y="463.50">ip_finish_outpu..</text></g><g><title>__local_bh_enable_ip (85 samples, 9.65%)</title><rect x="54.1430%" y="437" width="9.6481%" height="15" fill="rgb(252,97,53)"/><text x="54.3930%" y="447.50">__local_bh_ena..</text></g><g><title>do_softirq (85 samples, 9.65%)</title><rect x="54.1430%" y="421" width="9.6481%" height="15" fill="rgb(220,88,7)"/><text x="54.3930%" y="431.50">do_softirq</text></g><g><title>do_softirq_own_stack (81 samples, 9.19%)</title><rect x="54.5970%" y="405" width="9.1941%" height="15" fill="rgb(213,176,14)"/><text x="54.8470%" y="415.50">do_softirq_ow..</text></g><g><title>__do_softirq (80 samples, 9.08%)</title><rect x="54.7106%" y="389" width="9.0806%" height="15" fill="rgb(246,73,7)"/><text x="54.9606%" y="399.50">__do_softirq</text></g><g><title>net_rx_action (77 samples, 8.74%)</title><rect x="55.0511%" y="373" width="8.7401%" height="15" fill="rgb(245,64,36)"/><text x="55.3011%" y="383.50">net_rx_action</text></g><g><title>process_backlog (76 samples, 8.63%)</title><rect x="55.1646%" y="357" width="8.6266%" height="15" fill="rgb(245,80,10)"/><text x="55.4146%" y="367.50">process_back..</text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="63.6776%" y="341" width="0.1135%" height="15" fill="rgb(232,107,50)"/><text x="63.9276%" y="351.50"></text></g><g><title>__ip_queue_xmit (99 samples, 11.24%)</title><rect x="52.7809%" y="485" width="11.2372%" height="15" fill="rgb(253,3,0)"/><text x="53.0309%" y="495.50">__ip_queue_xmit</text></g><g><title>ip_output (95 samples, 10.78%)</title><rect x="53.2350%" y="469" width="10.7832%" height="15" fill="rgb(212,99,53)"/><text x="53.4850%" y="479.50">ip_output</text></g><g><title>ip_finish_output (2 samples, 0.23%)</title><rect x="63.7911%" y="453" width="0.2270%" height="15" fill="rgb(249,111,54)"/><text x="64.0411%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.23%)</title><rect x="63.7911%" y="437" width="0.2270%" height="15" fill="rgb(249,55,30)"/><text x="64.0411%" y="447.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="63.9047%" y="421" width="0.1135%" height="15" fill="rgb(237,47,42)"/><text x="64.1547%" y="431.50"></text></g><g><title>__tcp_select_window (1 samples, 0.11%)</title><rect x="64.0182%" y="485" width="0.1135%" height="15" fill="rgb(211,20,18)"/><text x="64.2682%" y="495.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.11%)</title><rect x="64.1317%" y="485" width="0.1135%" height="15" fill="rgb(231,203,46)"/><text x="64.3817%" y="495.50"></text></g><g><title>skb_clone (1 samples, 0.11%)</title><rect x="64.2452%" y="485" width="0.1135%" height="15" fill="rgb(237,142,3)"/><text x="64.4952%" y="495.50"></text></g><g><title>__tcp_transmit_skb (107 samples, 12.15%)</title><rect x="52.3269%" y="501" width="12.1453%" height="15" fill="rgb(241,107,1)"/><text x="52.5769%" y="511.50">__tcp_transmit_skb</text></g><g><title>tcp_established_options (1 samples, 0.11%)</title><rect x="64.3587%" y="485" width="0.1135%" height="15" fill="rgb(229,83,13)"/><text x="64.6087%" y="495.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="64.4722%" y="501" width="0.1135%" height="15" fill="rgb(241,91,40)"/><text x="64.7222%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (116 samples, 13.17%)</title><rect x="51.7594%" y="533" width="13.1669%" height="15" fill="rgb(225,3,45)"/><text x="52.0094%" y="543.50">__tcp_push_pending_f..</text></g><g><title>tcp_write_xmit (116 samples, 13.17%)</title><rect x="51.7594%" y="517" width="13.1669%" height="15" fill="rgb(244,223,14)"/><text x="52.0094%" y="527.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (3 samples, 0.34%)</title><rect x="64.5857%" y="501" width="0.3405%" height="15" fill="rgb(224,124,37)"/><text x="64.8357%" y="511.50"></text></g><g><title>tcp_rearm_rto (2 samples, 0.23%)</title><rect x="64.6992%" y="485" width="0.2270%" height="15" fill="rgb(251,171,30)"/><text x="64.9492%" y="495.50"></text></g><g><title>rb_first (1 samples, 0.11%)</title><rect x="64.8127%" y="469" width="0.1135%" height="15" fill="rgb(236,46,54)"/><text x="65.0627%" y="479.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="64.9262%" y="533" width="0.1135%" height="15" fill="rgb(245,213,5)"/><text x="65.1762%" y="543.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.11%)</title><rect x="64.9262%" y="517" width="0.1135%" height="15" fill="rgb(230,144,27)"/><text x="65.1762%" y="527.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.34%)</title><rect x="65.0397%" y="501" width="0.3405%" height="15" fill="rgb(220,86,6)"/><text x="65.2897%" y="511.50"></text></g><g><title>kmalloc_slab (1 samples, 0.11%)</title><rect x="65.2667%" y="485" width="0.1135%" height="15" fill="rgb(240,20,13)"/><text x="65.5167%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.57%)</title><rect x="65.0397%" y="533" width="0.5675%" height="15" fill="rgb(217,89,34)"/><text x="65.2897%" y="543.50"></text></g><g><title>__alloc_skb (5 samples, 0.57%)</title><rect x="65.0397%" y="517" width="0.5675%" height="15" fill="rgb(229,13,5)"/><text x="65.2897%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.23%)</title><rect x="65.3802%" y="501" width="0.2270%" height="15" fill="rgb(244,67,35)"/><text x="65.6302%" y="511.50"></text></g><g><title>memset_erms (1 samples, 0.11%)</title><rect x="65.4938%" y="485" width="0.1135%" height="15" fill="rgb(221,40,2)"/><text x="65.7438%" y="495.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="65.6073%" y="533" width="0.1135%" height="15" fill="rgb(237,157,21)"/><text x="65.8573%" y="543.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="65.6073%" y="517" width="0.1135%" height="15" fill="rgb(222,94,11)"/><text x="65.8573%" y="527.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="65.6073%" y="501" width="0.1135%" height="15" fill="rgb(249,113,6)"/><text x="65.8573%" y="511.50"></text></g><g><title>sock_sendmsg (130 samples, 14.76%)</title><rect x="51.3053%" y="581" width="14.7560%" height="15" fill="rgb(238,137,36)"/><text x="51.5553%" y="591.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (130 samples, 14.76%)</title><rect x="51.3053%" y="565" width="14.7560%" height="15" fill="rgb(210,102,26)"/><text x="51.5553%" y="575.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (128 samples, 14.53%)</title><rect x="51.5323%" y="549" width="14.5289%" height="15" fill="rgb(218,30,30)"/><text x="51.7823%" y="559.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (3 samples, 0.34%)</title><rect x="65.7208%" y="533" width="0.3405%" height="15" fill="rgb(214,67,26)"/><text x="65.9708%" y="543.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="65.9478%" y="517" width="0.1135%" height="15" fill="rgb(251,9,53)"/><text x="66.1978%" y="527.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="65.9478%" y="501" width="0.1135%" height="15" fill="rgb(228,204,25)"/><text x="66.1978%" y="511.50"></text></g><g><title>__x64_sys_sendto (134 samples, 15.21%)</title><rect x="51.0783%" y="613" width="15.2100%" height="15" fill="rgb(207,153,8)"/><text x="51.3283%" y="623.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (134 samples, 15.21%)</title><rect x="51.0783%" y="597" width="15.2100%" height="15" fill="rgb(242,9,16)"/><text x="51.3283%" y="607.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.23%)</title><rect x="66.0613%" y="581" width="0.2270%" height="15" fill="rgb(217,211,10)"/><text x="66.3113%" y="591.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="66.1748%" y="565" width="0.1135%" height="15" fill="rgb(219,228,52)"/><text x="66.4248%" y="575.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="66.1748%" y="549" width="0.1135%" height="15" fill="rgb(231,92,29)"/><text x="66.4248%" y="559.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="66.1748%" y="533" width="0.1135%" height="15" fill="rgb(232,8,23)"/><text x="66.4248%" y="543.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="66.2883%" y="613" width="0.1135%" height="15" fill="rgb(216,211,34)"/><text x="66.5383%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="66.2883%" y="597" width="0.1135%" height="15" fill="rgb(236,151,0)"/><text x="66.5383%" y="607.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.11%)</title><rect x="66.2883%" y="581" width="0.1135%" height="15" fill="rgb(209,168,3)"/><text x="66.5383%" y="591.50"></text></g><g><title>do_syscall_64 (137 samples, 15.55%)</title><rect x="50.9648%" y="629" width="15.5505%" height="15" fill="rgb(208,129,28)"/><text x="51.2148%" y="639.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="66.4018%" y="613" width="0.1135%" height="15" fill="rgb(229,78,22)"/><text x="66.6518%" y="623.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="66.4018%" y="597" width="0.1135%" height="15" fill="rgb(228,187,13)"/><text x="66.6518%" y="607.50"></text></g><g><title>decor::Shim::run_on_tcp (490 samples, 55.62%)</title><rect x="11.4642%" y="741" width="55.6186%" height="15" fill="rgb(240,119,24)"/><text x="11.7142%" y="751.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (490 samples, 55.62%)</title><rect x="11.4642%" y="725" width="55.6186%" height="15" fill="rgb(209,194,42)"/><text x="11.7142%" y="735.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (147 samples, 16.69%)</title><rect x="50.3973%" y="709" width="16.6856%" height="15" fill="rgb(247,200,46)"/><text x="50.6473%" y="719.50">std::io::buffered::BufWrit..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (147 samples, 16.69%)</title><rect x="50.3973%" y="693" width="16.6856%" height="15" fill="rgb(218,76,16)"/><text x="50.6473%" y="703.50">&lt;std::net::tcp::TcpStream ..</text></g><g><title>std::sys_common::net::TcpStream::write (147 samples, 16.69%)</title><rect x="50.3973%" y="677" width="16.6856%" height="15" fill="rgb(225,21,48)"/><text x="50.6473%" y="687.50">std::sys_common::net::TcpS..</text></g><g><title>__libc_send (147 samples, 16.69%)</title><rect x="50.3973%" y="661" width="16.6856%" height="15" fill="rgb(239,223,50)"/><text x="50.6473%" y="671.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (144 samples, 16.35%)</title><rect x="50.7378%" y="645" width="16.3451%" height="15" fill="rgb(244,45,21)"/><text x="50.9878%" y="655.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.57%)</title><rect x="66.5153%" y="629" width="0.5675%" height="15" fill="rgb(232,33,43)"/><text x="66.7653%" y="639.50"></text></g><g><title>__GI___clone (491 samples, 55.73%)</title><rect x="11.4642%" y="853" width="55.7321%" height="15" fill="rgb(209,8,3)"/><text x="11.7142%" y="863.50">__GI___clone</text></g><g><title>start_thread (491 samples, 55.73%)</title><rect x="11.4642%" y="837" width="55.7321%" height="15" fill="rgb(214,25,53)"/><text x="11.7142%" y="847.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (491 samples, 55.73%)</title><rect x="11.4642%" y="821" width="55.7321%" height="15" fill="rgb(254,186,54)"/><text x="11.7142%" y="831.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (491 samples, 55.73%)</title><rect x="11.4642%" y="805" width="55.7321%" height="15" fill="rgb(208,174,49)"/><text x="11.7142%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (491 samples, 55.73%)</title><rect x="11.4642%" y="789" width="55.7321%" height="15" fill="rgb(233,191,51)"/><text x="11.7142%" y="799.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (491 samples, 55.73%)</title><rect x="11.4642%" y="773" width="55.7321%" height="15" fill="rgb(222,134,10)"/><text x="11.7142%" y="783.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (491 samples, 55.73%)</title><rect x="11.4642%" y="757" width="55.7321%" height="15" fill="rgb(230,226,20)"/><text x="11.7142%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.11%)</title><rect x="67.0829%" y="741" width="0.1135%" height="15" fill="rgb(251,111,25)"/><text x="67.3329%" y="751.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.11%)</title><rect x="67.0829%" y="725" width="0.1135%" height="15" fill="rgb(224,40,46)"/><text x="67.3329%" y="735.50"></text></g><g><title>url::ParseOptions::parse (1 samples, 0.11%)</title><rect x="67.0829%" y="709" width="0.1135%" height="15" fill="rgb(236,108,47)"/><text x="67.3329%" y="719.50"></text></g><g><title>url::parser::Parser::parse_url (1 samples, 0.11%)</title><rect x="67.0829%" y="693" width="0.1135%" height="15" fill="rgb(234,93,0)"/><text x="67.3329%" y="703.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="67.0829%" y="677" width="0.1135%" height="15" fill="rgb(224,213,32)"/><text x="67.3329%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="67.0829%" y="661" width="0.1135%" height="15" fill="rgb(251,11,48)"/><text x="67.3329%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="67.1964%" y="853" width="0.1135%" height="15" fill="rgb(236,173,5)"/><text x="67.4464%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="67.4234%" y="661" width="0.1135%" height="15" fill="rgb(230,95,12)"/><text x="67.6734%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.34%)</title><rect x="67.3099%" y="677" width="0.3405%" height="15" fill="rgb(232,209,1)"/><text x="67.5599%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="67.5369%" y="661" width="0.1135%" height="15" fill="rgb(232,6,1)"/><text x="67.7869%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="67.6504%" y="677" width="0.1135%" height="15" fill="rgb(210,224,50)"/><text x="67.9004%" y="687.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.11%)</title><rect x="67.6504%" y="661" width="0.1135%" height="15" fill="rgb(228,127,35)"/><text x="67.9004%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="67.6504%" y="645" width="0.1135%" height="15" fill="rgb(245,102,45)"/><text x="67.9004%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="67.6504%" y="629" width="0.1135%" height="15" fill="rgb(214,1,49)"/><text x="67.9004%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="67.6504%" y="613" width="0.1135%" height="15" fill="rgb(226,163,40)"/><text x="67.9004%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="67.6504%" y="597" width="0.1135%" height="15" fill="rgb(239,212,28)"/><text x="67.9004%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="67.6504%" y="581" width="0.1135%" height="15" fill="rgb(220,20,13)"/><text x="67.9004%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="67.6504%" y="565" width="0.1135%" height="15" fill="rgb(210,164,35)"/><text x="67.9004%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="67.6504%" y="549" width="0.1135%" height="15" fill="rgb(248,109,41)"/><text x="67.9004%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.23%)</title><rect x="67.8774%" y="581" width="0.2270%" height="15" fill="rgb(238,23,50)"/><text x="68.1274%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.45%)</title><rect x="67.7639%" y="597" width="0.4540%" height="15" fill="rgb(211,48,49)"/><text x="68.0139%" y="607.50"></text></g><g><title>hwloc_bitmap_alloc (1 samples, 0.11%)</title><rect x="68.1044%" y="581" width="0.1135%" height="15" fill="rgb(223,36,21)"/><text x="68.3544%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="68.1044%" y="565" width="0.1135%" height="15" fill="rgb(207,123,46)"/><text x="68.3544%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="68.1044%" y="549" width="0.1135%" height="15" fill="rgb(240,218,32)"/><text x="68.3544%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="68.2179%" y="581" width="0.1135%" height="15" fill="rgb(252,5,43)"/><text x="68.4679%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="68.2179%" y="565" width="0.1135%" height="15" fill="rgb(252,84,19)"/><text x="68.4679%" y="575.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 26.11%)</title><rect x="68.8990%" y="373" width="26.1067%" height="15" fill="rgb(243,152,39)"/><text x="69.1490%" y="383.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 26.11%)</title><rect x="68.8990%" y="357" width="26.1067%" height="15" fill="rgb(234,160,15)"/><text x="69.1490%" y="367.50">native_write_msr</text></g><g><title>hwloc::Topology::new (242 samples, 27.47%)</title><rect x="67.7639%" y="677" width="27.4688%" height="15" fill="rgb(237,34,20)"/><text x="68.0139%" y="687.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 27.47%)</title><rect x="67.7639%" y="661" width="27.4688%" height="15" fill="rgb(229,97,13)"/><text x="68.0139%" y="671.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.47%)</title><rect x="67.7639%" y="645" width="27.4688%" height="15" fill="rgb(234,71,50)"/><text x="68.0139%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.47%)</title><rect x="67.7639%" y="629" width="27.4688%" height="15" fill="rgb(253,155,4)"/><text x="68.0139%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.47%)</title><rect x="67.7639%" y="613" width="27.4688%" height="15" fill="rgb(222,185,37)"/><text x="68.0139%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 27.01%)</title><rect x="68.2179%" y="597" width="27.0148%" height="15" fill="rgb(251,177,13)"/><text x="68.4679%" y="607.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 26.90%)</title><rect x="68.3314%" y="581" width="26.9012%" height="15" fill="rgb(250,179,40)"/><text x="68.5814%" y="591.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (234 samples, 26.56%)</title><rect x="68.6720%" y="565" width="26.5607%" height="15" fill="rgb(242,44,2)"/><text x="68.9220%" y="575.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (234 samples, 26.56%)</title><rect x="68.6720%" y="549" width="26.5607%" height="15" fill="rgb(216,177,13)"/><text x="68.9220%" y="559.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 26.56%)</title><rect x="68.6720%" y="533" width="26.5607%" height="15" fill="rgb(216,106,43)"/><text x="68.9220%" y="543.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 26.56%)</title><rect x="68.6720%" y="517" width="26.5607%" height="15" fill="rgb(216,183,2)"/><text x="68.9220%" y="527.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 26.56%)</title><rect x="68.6720%" y="501" width="26.5607%" height="15" fill="rgb(249,75,3)"/><text x="68.9220%" y="511.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 26.56%)</title><rect x="68.6720%" y="485" width="26.5607%" height="15" fill="rgb(219,67,39)"/><text x="68.9220%" y="495.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 26.56%)</title><rect x="68.6720%" y="469" width="26.5607%" height="15" fill="rgb(253,228,2)"/><text x="68.9220%" y="479.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 26.56%)</title><rect x="68.6720%" y="453" width="26.5607%" height="15" fill="rgb(235,138,27)"/><text x="68.9220%" y="463.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 26.56%)</title><rect x="68.6720%" y="437" width="26.5607%" height="15" fill="rgb(236,97,51)"/><text x="68.9220%" y="447.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 26.56%)</title><rect x="68.6720%" y="421" width="26.5607%" height="15" fill="rgb(240,80,30)"/><text x="68.9220%" y="431.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 26.56%)</title><rect x="68.6720%" y="405" width="26.5607%" height="15" fill="rgb(230,178,19)"/><text x="68.9220%" y="415.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (232 samples, 26.33%)</title><rect x="68.8990%" y="389" width="26.3337%" height="15" fill="rgb(210,190,27)"/><text x="69.1490%" y="399.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (2 samples, 0.23%)</title><rect x="95.0057%" y="373" width="0.2270%" height="15" fill="rgb(222,107,31)"/><text x="95.2557%" y="383.50"></text></g><g><title>preempt_count_sub (2 samples, 0.23%)</title><rect x="95.0057%" y="357" width="0.2270%" height="15" fill="rgb(216,127,34)"/><text x="95.2557%" y="367.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="95.2327%" y="661" width="0.1135%" height="15" fill="rgb(234,116,52)"/><text x="95.4827%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.23%)</title><rect x="95.3462%" y="645" width="0.2270%" height="15" fill="rgb(222,124,15)"/><text x="95.5962%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.11%)</title><rect x="95.4597%" y="629" width="0.1135%" height="15" fill="rgb(231,179,28)"/><text x="95.7097%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="95.4597%" y="613" width="0.1135%" height="15" fill="rgb(226,93,45)"/><text x="95.7097%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="95.5732%" y="645" width="0.1135%" height="15" fill="rgb(215,8,51)"/><text x="95.8232%" y="655.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="96.4813%" y="261" width="0.1135%" height="15" fill="rgb(223,106,5)"/><text x="96.7313%" y="271.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="96.7083%" y="181" width="0.1135%" height="15" fill="rgb(250,191,5)"/><text x="96.9583%" y="191.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.11%)</title><rect x="96.8218%" y="181" width="0.1135%" height="15" fill="rgb(242,132,44)"/><text x="97.0718%" y="191.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="96.8218%" y="165" width="0.1135%" height="15" fill="rgb(251,152,29)"/><text x="97.0718%" y="175.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="96.8218%" y="149" width="0.1135%" height="15" fill="rgb(218,179,5)"/><text x="97.0718%" y="159.50"></text></g><g><title>enqueue_task (1 samples, 0.11%)</title><rect x="96.9353%" y="85" width="0.1135%" height="15" fill="rgb(227,67,19)"/><text x="97.1853%" y="95.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="96.9353%" y="69" width="0.1135%" height="15" fill="rgb(233,119,31)"/><text x="97.1853%" y="79.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="96.9353%" y="53" width="0.1135%" height="15" fill="rgb(241,120,22)"/><text x="97.1853%" y="63.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="96.9353%" y="37" width="0.1135%" height="15" fill="rgb(224,102,30)"/><text x="97.1853%" y="47.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="97.0488%" y="85" width="0.1135%" height="15" fill="rgb(210,164,37)"/><text x="97.2988%" y="95.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="97.1623%" y="85" width="0.1135%" height="15" fill="rgb(226,191,16)"/><text x="97.4123%" y="95.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="97.1623%" y="69" width="0.1135%" height="15" fill="rgb(214,40,45)"/><text x="97.4123%" y="79.50"></text></g><g><title>resched_curr (1 samples, 0.11%)</title><rect x="97.1623%" y="53" width="0.1135%" height="15" fill="rgb(244,29,26)"/><text x="97.4123%" y="63.50"></text></g><g><title>sock_def_readable (4 samples, 0.45%)</title><rect x="96.9353%" y="149" width="0.4540%" height="15" fill="rgb(216,16,5)"/><text x="97.1853%" y="159.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.45%)</title><rect x="96.9353%" y="133" width="0.4540%" height="15" fill="rgb(249,76,35)"/><text x="97.1853%" y="143.50"></text></g><g><title>__wake_up_common (4 samples, 0.45%)</title><rect x="96.9353%" y="117" width="0.4540%" height="15" fill="rgb(207,11,44)"/><text x="97.1853%" y="127.50"></text></g><g><title>try_to_wake_up (4 samples, 0.45%)</title><rect x="96.9353%" y="101" width="0.4540%" height="15" fill="rgb(228,190,49)"/><text x="97.1853%" y="111.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="97.2758%" y="85" width="0.1135%" height="15" fill="rgb(214,173,12)"/><text x="97.5258%" y="95.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="97.5028%" y="133" width="0.1135%" height="15" fill="rgb(218,26,35)"/><text x="97.7528%" y="143.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="97.5028%" y="117" width="0.1135%" height="15" fill="rgb(220,200,19)"/><text x="97.7528%" y="127.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.11%)</title><rect x="97.5028%" y="101" width="0.1135%" height="15" fill="rgb(239,95,49)"/><text x="97.7528%" y="111.50"></text></g><g><title>rb_erase (1 samples, 0.11%)</title><rect x="97.6163%" y="133" width="0.1135%" height="15" fill="rgb(235,85,53)"/><text x="97.8663%" y="143.50"></text></g><g><title>rb_first (1 samples, 0.11%)</title><rect x="97.7299%" y="133" width="0.1135%" height="15" fill="rgb(233,133,31)"/><text x="97.9799%" y="143.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="97.8434%" y="133" width="0.1135%" height="15" fill="rgb(218,25,20)"/><text x="98.0934%" y="143.50"></text></g><g><title>tcp_ack (6 samples, 0.68%)</title><rect x="97.3893%" y="149" width="0.6810%" height="15" fill="rgb(252,210,38)"/><text x="97.6393%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.11%)</title><rect x="97.9569%" y="133" width="0.1135%" height="15" fill="rgb(242,134,21)"/><text x="98.2069%" y="143.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 1.25%)</title><rect x="96.9353%" y="181" width="1.2486%" height="15" fill="rgb(213,28,48)"/><text x="97.1853%" y="191.50"></text></g><g><title>tcp_rcv_established (11 samples, 1.25%)</title><rect x="96.9353%" y="165" width="1.2486%" height="15" fill="rgb(250,196,2)"/><text x="97.1853%" y="175.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.11%)</title><rect x="98.0704%" y="149" width="0.1135%" height="15" fill="rgb(227,5,17)"/><text x="98.3204%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (16 samples, 1.82%)</title><rect x="96.4813%" y="277" width="1.8161%" height="15" fill="rgb(221,226,24)"/><text x="96.7313%" y="287.50">_..</text></g><g><title>ip_rcv (15 samples, 1.70%)</title><rect x="96.5948%" y="261" width="1.7026%" height="15" fill="rgb(211,5,48)"/><text x="96.8448%" y="271.50"></text></g><g><title>ip_local_deliver (15 samples, 1.70%)</title><rect x="96.5948%" y="245" width="1.7026%" height="15" fill="rgb(219,150,6)"/><text x="96.8448%" y="255.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 1.70%)</title><rect x="96.5948%" y="229" width="1.7026%" height="15" fill="rgb(251,46,16)"/><text x="96.8448%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (15 samples, 1.70%)</title><rect x="96.5948%" y="213" width="1.7026%" height="15" fill="rgb(220,204,40)"/><text x="96.8448%" y="223.50"></text></g><g><title>tcp_v4_rcv (15 samples, 1.70%)</title><rect x="96.5948%" y="197" width="1.7026%" height="15" fill="rgb(211,85,2)"/><text x="96.8448%" y="207.50"></text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.11%)</title><rect x="98.1839%" y="181" width="0.1135%" height="15" fill="rgb(229,17,7)"/><text x="98.4339%" y="191.50"></text></g><g><title>__tcp_transmit_skb (21 samples, 2.38%)</title><rect x="96.0272%" y="437" width="2.3837%" height="15" fill="rgb(239,72,28)"/><text x="96.2772%" y="447.50">__..</text></g><g><title>__ip_queue_xmit (20 samples, 2.27%)</title><rect x="96.1407%" y="421" width="2.2701%" height="15" fill="rgb(230,47,54)"/><text x="96.3907%" y="431.50">_..</text></g><g><title>ip_output (19 samples, 2.16%)</title><rect x="96.2543%" y="405" width="2.1566%" height="15" fill="rgb(214,50,8)"/><text x="96.5043%" y="415.50">i..</text></g><g><title>ip_finish_output2 (19 samples, 2.16%)</title><rect x="96.2543%" y="389" width="2.1566%" height="15" fill="rgb(216,198,43)"/><text x="96.5043%" y="399.50">i..</text></g><g><title>__local_bh_enable_ip (19 samples, 2.16%)</title><rect x="96.2543%" y="373" width="2.1566%" height="15" fill="rgb(234,20,35)"/><text x="96.5043%" y="383.50">_..</text></g><g><title>do_softirq (19 samples, 2.16%)</title><rect x="96.2543%" y="357" width="2.1566%" height="15" fill="rgb(254,45,19)"/><text x="96.5043%" y="367.50">d..</text></g><g><title>do_softirq_own_stack (19 samples, 2.16%)</title><rect x="96.2543%" y="341" width="2.1566%" height="15" fill="rgb(219,14,44)"/><text x="96.5043%" y="351.50">d..</text></g><g><title>__do_softirq (19 samples, 2.16%)</title><rect x="96.2543%" y="325" width="2.1566%" height="15" fill="rgb(217,220,26)"/><text x="96.5043%" y="335.50">_..</text></g><g><title>net_rx_action (19 samples, 2.16%)</title><rect x="96.2543%" y="309" width="2.1566%" height="15" fill="rgb(213,158,28)"/><text x="96.5043%" y="319.50">n..</text></g><g><title>process_backlog (17 samples, 1.93%)</title><rect x="96.4813%" y="293" width="1.9296%" height="15" fill="rgb(252,51,52)"/><text x="96.7313%" y="303.50">p..</text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="98.2974%" y="277" width="0.1135%" height="15" fill="rgb(246,89,16)"/><text x="98.5474%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (22 samples, 2.50%)</title><rect x="96.0272%" y="469" width="2.4972%" height="15" fill="rgb(216,158,49)"/><text x="96.2772%" y="479.50">__..</text></g><g><title>tcp_write_xmit (22 samples, 2.50%)</title><rect x="96.0272%" y="453" width="2.4972%" height="15" fill="rgb(236,107,19)"/><text x="96.2772%" y="463.50">tc..</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="98.4109%" y="437" width="0.1135%" height="15" fill="rgb(228,185,30)"/><text x="98.6609%" y="447.50"></text></g><g><title>mysql::conn::Conn::_query (30 samples, 3.41%)</title><rect x="95.2327%" y="677" width="3.4052%" height="15" fill="rgb(246,134,8)"/><text x="95.4827%" y="687.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (29 samples, 3.29%)</title><rect x="95.3462%" y="661" width="3.2917%" height="15" fill="rgb(214,143,50)"/><text x="95.5962%" y="671.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (26 samples, 2.95%)</title><rect x="95.6867%" y="645" width="2.9512%" height="15" fill="rgb(228,75,8)"/><text x="95.9367%" y="655.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (26 samples, 2.95%)</title><rect x="95.6867%" y="629" width="2.9512%" height="15" fill="rgb(207,175,4)"/><text x="95.9367%" y="639.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (26 samples, 2.95%)</title><rect x="95.6867%" y="613" width="2.9512%" height="15" fill="rgb(205,108,24)"/><text x="95.9367%" y="623.50">std..</text></g><g><title>__libc_send (26 samples, 2.95%)</title><rect x="95.6867%" y="597" width="2.9512%" height="15" fill="rgb(244,120,49)"/><text x="95.9367%" y="607.50">__l..</text></g><g><title>entry_SYSCALL_64 (25 samples, 2.84%)</title><rect x="95.8002%" y="581" width="2.8377%" height="15" fill="rgb(223,47,38)"/><text x="96.0502%" y="591.50">en..</text></g><g><title>do_syscall_64 (25 samples, 2.84%)</title><rect x="95.8002%" y="565" width="2.8377%" height="15" fill="rgb(229,179,11)"/><text x="96.0502%" y="575.50">do..</text></g><g><title>__x64_sys_sendto (25 samples, 2.84%)</title><rect x="95.8002%" y="549" width="2.8377%" height="15" fill="rgb(231,122,1)"/><text x="96.0502%" y="559.50">__..</text></g><g><title>__sys_sendto (25 samples, 2.84%)</title><rect x="95.8002%" y="533" width="2.8377%" height="15" fill="rgb(245,119,9)"/><text x="96.0502%" y="543.50">__..</text></g><g><title>sock_sendmsg (25 samples, 2.84%)</title><rect x="95.8002%" y="517" width="2.8377%" height="15" fill="rgb(241,163,25)"/><text x="96.0502%" y="527.50">so..</text></g><g><title>tcp_sendmsg (25 samples, 2.84%)</title><rect x="95.8002%" y="501" width="2.8377%" height="15" fill="rgb(217,214,3)"/><text x="96.0502%" y="511.50">tc..</text></g><g><title>tcp_sendmsg_locked (25 samples, 2.84%)</title><rect x="95.8002%" y="485" width="2.8377%" height="15" fill="rgb(240,86,28)"/><text x="96.0502%" y="495.50">tc..</text></g><g><title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="98.5244%" y="469" width="0.1135%" height="15" fill="rgb(215,47,9)"/><text x="98.7744%" y="479.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="98.5244%" y="453" width="0.1135%" height="15" fill="rgb(252,25,45)"/><text x="98.7744%" y="463.50"></text></g><g><title>__ksize (1 samples, 0.11%)</title><rect x="98.5244%" y="437" width="0.1135%" height="15" fill="rgb(251,164,9)"/><text x="98.7744%" y="447.50"></text></g><g><title>__libc_start_main (277 samples, 31.44%)</title><rect x="67.3099%" y="837" width="31.4415%" height="15" fill="rgb(233,194,0)"/><text x="67.5599%" y="847.50">__libc_start_main</text></g><g><title>main (277 samples, 31.44%)</title><rect x="67.3099%" y="821" width="31.4415%" height="15" fill="rgb(249,111,24)"/><text x="67.5599%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (277 samples, 31.44%)</title><rect x="67.3099%" y="805" width="31.4415%" height="15" fill="rgb(250,223,3)"/><text x="67.5599%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (277 samples, 31.44%)</title><rect x="67.3099%" y="789" width="31.4415%" height="15" fill="rgb(236,178,37)"/><text x="67.5599%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (277 samples, 31.44%)</title><rect x="67.3099%" y="773" width="31.4415%" height="15" fill="rgb(241,158,50)"/><text x="67.5599%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (277 samples, 31.44%)</title><rect x="67.3099%" y="757" width="31.4415%" height="15" fill="rgb(213,121,41)"/><text x="67.5599%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (277 samples, 31.44%)</title><rect x="67.3099%" y="741" width="31.4415%" height="15" fill="rgb(240,92,3)"/><text x="67.5599%" y="751.50">core::ops::function::impls::&lt;impl core::ops::functi..</text></g><g><title>std::rt::lang_start::_{{closure}} (277 samples, 31.44%)</title><rect x="67.3099%" y="725" width="31.4415%" height="15" fill="rgb(205,123,3)"/><text x="67.5599%" y="735.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (277 samples, 31.44%)</title><rect x="67.3099%" y="709" width="31.4415%" height="15" fill="rgb(205,97,47)"/><text x="67.5599%" y="719.50">std::sys_common::backtrace::__rust_begin_short_back..</text></g><g><title>lobsters::main (277 samples, 31.44%)</title><rect x="67.3099%" y="693" width="31.4415%" height="15" fill="rgb(247,152,14)"/><text x="67.5599%" y="703.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="98.6379%" y="677" width="0.1135%" height="15" fill="rgb(248,195,53)"/><text x="98.8879%" y="687.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="98.6379%" y="661" width="0.1135%" height="15" fill="rgb(226,201,16)"/><text x="98.8879%" y="671.50"></text></g><g><title>__bind (1 samples, 0.11%)</title><rect x="98.6379%" y="645" width="0.1135%" height="15" fill="rgb(205,98,0)"/><text x="98.8879%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.6379%" y="629" width="0.1135%" height="15" fill="rgb(214,191,48)"/><text x="98.8879%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.6379%" y="613" width="0.1135%" height="15" fill="rgb(237,112,39)"/><text x="98.8879%" y="623.50"></text></g><g><title>__x64_sys_bind (1 samples, 0.11%)</title><rect x="98.6379%" y="597" width="0.1135%" height="15" fill="rgb(247,203,27)"/><text x="98.8879%" y="607.50"></text></g><g><title>__sys_bind (1 samples, 0.11%)</title><rect x="98.6379%" y="581" width="0.1135%" height="15" fill="rgb(235,124,28)"/><text x="98.8879%" y="591.50"></text></g><g><title>_start (278 samples, 31.56%)</title><rect x="67.3099%" y="853" width="31.5551%" height="15" fill="rgb(208,207,46)"/><text x="67.5599%" y="863.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.7514%" y="837" width="0.1135%" height="15" fill="rgb(234,176,4)"/><text x="99.0014%" y="847.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.7514%" y="821" width="0.1135%" height="15" fill="rgb(230,133,28)"/><text x="99.0014%" y="831.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="98.7514%" y="805" width="0.1135%" height="15" fill="rgb(211,137,40)"/><text x="99.0014%" y="815.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="98.7514%" y="789" width="0.1135%" height="15" fill="rgb(254,35,13)"/><text x="99.0014%" y="799.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="98.7514%" y="773" width="0.1135%" height="15" fill="rgb(225,49,51)"/><text x="99.0014%" y="783.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="98.7514%" y="757" width="0.1135%" height="15" fill="rgb(251,10,15)"/><text x="99.0014%" y="767.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="98.7514%" y="741" width="0.1135%" height="15" fill="rgb(228,207,15)"/><text x="99.0014%" y="751.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="98.7514%" y="725" width="0.1135%" height="15" fill="rgb(241,99,19)"/><text x="99.0014%" y="735.50"></text></g><g><title>__mmap (1 samples, 0.11%)</title><rect x="98.7514%" y="709" width="0.1135%" height="15" fill="rgb(207,104,49)"/><text x="99.0014%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.7514%" y="693" width="0.1135%" height="15" fill="rgb(234,99,18)"/><text x="99.0014%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.7514%" y="677" width="0.1135%" height="15" fill="rgb(213,191,49)"/><text x="99.0014%" y="687.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.7514%" y="661" width="0.1135%" height="15" fill="rgb(210,226,19)"/><text x="99.0014%" y="671.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.7514%" y="645" width="0.1135%" height="15" fill="rgb(229,97,18)"/><text x="99.0014%" y="655.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="98.7514%" y="629" width="0.1135%" height="15" fill="rgb(211,167,15)"/><text x="99.0014%" y="639.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="98.7514%" y="613" width="0.1135%" height="15" fill="rgb(210,169,34)"/><text x="99.0014%" y="623.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="98.7514%" y="597" width="0.1135%" height="15" fill="rgb(241,121,31)"/><text x="99.0014%" y="607.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="98.7514%" y="581" width="0.1135%" height="15" fill="rgb(232,40,11)"/><text x="99.0014%" y="591.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="98.7514%" y="565" width="0.1135%" height="15" fill="rgb(205,86,26)"/><text x="99.0014%" y="575.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="98.7514%" y="549" width="0.1135%" height="15" fill="rgb(231,126,28)"/><text x="99.0014%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.23%)</title><rect x="98.8649%" y="853" width="0.2270%" height="15" fill="rgb(219,221,18)"/><text x="99.1149%" y="863.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="99.0919%" y="853" width="0.1135%" height="15" fill="rgb(211,40,0)"/><text x="99.3419%" y="863.50"></text></g><g><title>lobsters (875 samples, 99.32%)</title><rect x="0.0000%" y="869" width="99.3190%" height="15" fill="rgb(239,85,43)"/><text x="0.2500%" y="879.50">lobsters</text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="99.2054%" y="853" width="0.1135%" height="15" fill="rgb(231,55,21)"/><text x="99.4554%" y="863.50"></text></g><g><title>all (881 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(225,184,43)"/><text x="0.2500%" y="895.50"></text></g><g><title>perf (6 samples, 0.68%)</title><rect x="99.3190%" y="869" width="0.6810%" height="15" fill="rgb(251,158,41)"/><text x="99.5690%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.68%)</title><rect x="99.3190%" y="853" width="0.6810%" height="15" fill="rgb(234,159,37)"/><text x="99.5690%" y="863.50"></text></g><g><title>do_syscall_64 (6 samples, 0.68%)</title><rect x="99.3190%" y="837" width="0.6810%" height="15" fill="rgb(216,204,22)"/><text x="99.5690%" y="847.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.68%)</title><rect x="99.3190%" y="821" width="0.6810%" height="15" fill="rgb(214,17,3)"/><text x="99.5690%" y="831.50"></text></g><g><title>do_execve (6 samples, 0.68%)</title><rect x="99.3190%" y="805" width="0.6810%" height="15" fill="rgb(212,111,17)"/><text x="99.5690%" y="815.50"></text></g><g><title>__do_execve_file (6 samples, 0.68%)</title><rect x="99.3190%" y="789" width="0.6810%" height="15" fill="rgb(221,157,24)"/><text x="99.5690%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.68%)</title><rect x="99.3190%" y="773" width="0.6810%" height="15" fill="rgb(252,16,13)"/><text x="99.5690%" y="783.50"></text></g><g><title>load_elf_binary (6 samples, 0.68%)</title><rect x="99.3190%" y="757" width="0.6810%" height="15" fill="rgb(221,62,2)"/><text x="99.5690%" y="767.50"></text></g><g><title>setup_new_exec (6 samples, 0.68%)</title><rect x="99.3190%" y="741" width="0.6810%" height="15" fill="rgb(247,87,22)"/><text x="99.5690%" y="751.50"></text></g><g><title>perf_event_exec (6 samples, 0.68%)</title><rect x="99.3190%" y="725" width="0.6810%" height="15" fill="rgb(215,73,9)"/><text x="99.5690%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.57%)</title><rect x="99.4325%" y="709" width="0.5675%" height="15" fill="rgb(207,175,33)"/><text x="99.6825%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.57%)</title><rect x="99.4325%" y="693" width="0.5675%" height="15" fill="rgb(243,129,54)"/><text x="99.6825%" y="703.50"></text></g></svg></svg>