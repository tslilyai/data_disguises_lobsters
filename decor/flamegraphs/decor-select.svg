<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="901.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="901.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.16%)</title><rect x="0.0781%" y="837" width="0.1561%" height="15" fill="rgb(227,0,7)"/><text x="0.3281%" y="847.50"></text></g><g><title>[[stack]] (4 samples, 0.31%)</title><rect x="0.2342%" y="837" width="0.3123%" height="15" fill="rgb(217,0,24)"/><text x="0.4842%" y="847.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="0.3903%" y="821" width="0.1561%" height="15" fill="rgb(221,193,54)"/><text x="0.6403%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.31%)</title><rect x="0.5464%" y="821" width="0.3123%" height="15" fill="rgb(248,212,6)"/><text x="0.7964%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="0.8587%" y="821" width="0.1561%" height="15" fill="rgb(208,68,35)"/><text x="1.1087%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="1.0148%" y="821" width="0.1561%" height="15" fill="rgb(232,128,0)"/><text x="1.2648%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="1.1710%" y="821" width="0.2342%" height="15" fill="rgb(207,160,47)"/><text x="1.4210%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="1.9516%" y="821" width="0.1561%" height="15" fill="rgb(228,23,34)"/><text x="2.2016%" y="831.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.31%)</title><rect x="2.1077%" y="821" width="0.3123%" height="15" fill="rgb(218,30,26)"/><text x="2.3577%" y="831.50"></text></g><g><title>__libc_recv (2 samples, 0.16%)</title><rect x="2.4980%" y="821" width="0.1561%" height="15" fill="rgb(220,122,19)"/><text x="2.7480%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="2.4980%" y="805" width="0.1561%" height="15" fill="rgb(250,228,42)"/><text x="2.7480%" y="815.50"></text></g><g><title>__libc_send (2 samples, 0.16%)</title><rect x="2.6542%" y="821" width="0.1561%" height="15" fill="rgb(240,193,28)"/><text x="2.9042%" y="831.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="2.9664%" y="821" width="0.1561%" height="15" fill="rgb(216,20,37)"/><text x="3.2164%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.39%)</title><rect x="3.2787%" y="821" width="0.3903%" height="15" fill="rgb(206,188,39)"/><text x="3.5287%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.23%)</title><rect x="3.6690%" y="821" width="0.2342%" height="15" fill="rgb(217,207,13)"/><text x="3.9190%" y="831.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.16%)</title><rect x="3.9032%" y="821" width="0.1561%" height="15" fill="rgb(231,73,38)"/><text x="4.1532%" y="831.50"></text></g><g><title>decor::helpers::str_subset_of_idents (2 samples, 0.16%)</title><rect x="4.3716%" y="821" width="0.1561%" height="15" fill="rgb(225,20,46)"/><text x="4.6216%" y="831.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="4.9180%" y="821" width="0.1561%" height="15" fill="rgb(210,31,41)"/><text x="5.1680%" y="831.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (3 samples, 0.23%)</title><rect x="5.0742%" y="821" width="0.2342%" height="15" fill="rgb(221,200,47)"/><text x="5.3242%" y="831.50"></text></g><g><title>[anon] (62 samples, 4.84%)</title><rect x="0.5464%" y="837" width="4.8400%" height="15" fill="rgb(226,26,5)"/><text x="0.7964%" y="847.50">[anon]</text></g><g><title>[lobsters] (4 samples, 0.31%)</title><rect x="5.3864%" y="837" width="0.3123%" height="15" fill="rgb(249,33,26)"/><text x="5.6364%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="5.5425%" y="821" width="0.1561%" height="15" fill="rgb(235,183,28)"/><text x="5.7925%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="6.0109%" y="773" width="0.1561%" height="15" fill="rgb(221,5,38)"/><text x="6.2609%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.0109%" y="757" width="0.1561%" height="15" fill="rgb(247,18,42)"/><text x="6.2609%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="6.1671%" y="773" width="0.1561%" height="15" fill="rgb(241,131,45)"/><text x="6.4171%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="6.1671%" y="757" width="0.1561%" height="15" fill="rgb(249,31,29)"/><text x="6.4171%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="6.1671%" y="741" width="0.1561%" height="15" fill="rgb(225,111,53)"/><text x="6.4171%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="6.1671%" y="725" width="0.1561%" height="15" fill="rgb(238,160,17)"/><text x="6.4171%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (8 samples, 0.62%)</title><rect x="5.7767%" y="805" width="0.6245%" height="15" fill="rgb(214,148,48)"/><text x="6.0267%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (8 samples, 0.62%)</title><rect x="5.7767%" y="789" width="0.6245%" height="15" fill="rgb(232,36,49)"/><text x="6.0267%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.39%)</title><rect x="6.4012%" y="709" width="0.3903%" height="15" fill="rgb(209,103,24)"/><text x="6.6512%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.39%)</title><rect x="6.4012%" y="693" width="0.3903%" height="15" fill="rgb(229,88,8)"/><text x="6.6512%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.39%)</title><rect x="6.4012%" y="677" width="0.3903%" height="15" fill="rgb(213,181,19)"/><text x="6.6512%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.31%)</title><rect x="6.4793%" y="661" width="0.3123%" height="15" fill="rgb(254,191,54)"/><text x="6.7293%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="6.4793%" y="645" width="0.3123%" height="15" fill="rgb(241,83,37)"/><text x="6.7293%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="6.4793%" y="629" width="0.3123%" height="15" fill="rgb(233,36,39)"/><text x="6.7293%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.31%)</title><rect x="6.4793%" y="613" width="0.3123%" height="15" fill="rgb(226,3,54)"/><text x="6.7293%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.31%)</title><rect x="6.4793%" y="597" width="0.3123%" height="15" fill="rgb(245,192,40)"/><text x="6.7293%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.31%)</title><rect x="6.4793%" y="581" width="0.3123%" height="15" fill="rgb(238,167,29)"/><text x="6.7293%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.31%)</title><rect x="6.4793%" y="565" width="0.3123%" height="15" fill="rgb(232,182,51)"/><text x="6.7293%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.31%)</title><rect x="6.4793%" y="549" width="0.3123%" height="15" fill="rgb(231,60,39)"/><text x="6.7293%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.31%)</title><rect x="6.4793%" y="533" width="0.3123%" height="15" fill="rgb(208,69,12)"/><text x="6.7293%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.31%)</title><rect x="6.4793%" y="517" width="0.3123%" height="15" fill="rgb(235,93,37)"/><text x="6.7293%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.31%)</title><rect x="6.4793%" y="501" width="0.3123%" height="15" fill="rgb(213,116,39)"/><text x="6.7293%" y="511.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.31%)</title><rect x="6.4793%" y="485" width="0.3123%" height="15" fill="rgb(222,207,29)"/><text x="6.7293%" y="495.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.31%)</title><rect x="6.4793%" y="469" width="0.3123%" height="15" fill="rgb(206,96,30)"/><text x="6.7293%" y="479.50"></text></g><g><title>_int_malloc (4 samples, 0.31%)</title><rect x="6.4793%" y="453" width="0.3123%" height="15" fill="rgb(218,138,4)"/><text x="6.7293%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.47%)</title><rect x="6.4012%" y="725" width="0.4684%" height="15" fill="rgb(250,191,14)"/><text x="6.6512%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.62%)</title><rect x="6.4012%" y="741" width="0.6245%" height="15" fill="rgb(239,60,40)"/><text x="6.6512%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="6.8696%" y="725" width="0.1561%" height="15" fill="rgb(206,27,48)"/><text x="7.1196%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="7.0258%" y="741" width="0.1561%" height="15" fill="rgb(225,35,8)"/><text x="7.2758%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="7.0258%" y="725" width="0.1561%" height="15" fill="rgb(250,213,24)"/><text x="7.2758%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (20 samples, 1.56%)</title><rect x="5.7767%" y="821" width="1.5613%" height="15" fill="rgb(247,123,22)"/><text x="6.0267%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (12 samples, 0.94%)</title><rect x="6.4012%" y="805" width="0.9368%" height="15" fill="rgb(231,138,38)"/><text x="6.6512%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (12 samples, 0.94%)</title><rect x="6.4012%" y="789" width="0.9368%" height="15" fill="rgb(231,145,46)"/><text x="6.6512%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (12 samples, 0.94%)</title><rect x="6.4012%" y="773" width="0.9368%" height="15" fill="rgb(251,118,11)"/><text x="6.6512%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (12 samples, 0.94%)</title><rect x="6.4012%" y="757" width="0.9368%" height="15" fill="rgb(217,147,25)"/><text x="6.6512%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="7.1819%" y="741" width="0.1561%" height="15" fill="rgb(247,81,37)"/><text x="7.4319%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="7.1819%" y="725" width="0.1561%" height="15" fill="rgb(209,12,38)"/><text x="7.4319%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="7.4161%" y="821" width="0.2342%" height="15" fill="rgb(227,1,9)"/><text x="7.6661%" y="831.50"></text></g><g><title>__GI___libc_free (3 samples, 0.23%)</title><rect x="7.8845%" y="821" width="0.2342%" height="15" fill="rgb(248,47,43)"/><text x="8.1345%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="8.1187%" y="821" width="0.2342%" height="15" fill="rgb(221,10,30)"/><text x="8.3687%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="8.4309%" y="661" width="0.1561%" height="15" fill="rgb(210,229,1)"/><text x="8.6809%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.16%)</title><rect x="8.4309%" y="645" width="0.1561%" height="15" fill="rgb(222,148,37)"/><text x="8.6809%" y="655.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.16%)</title><rect x="8.4309%" y="629" width="0.1561%" height="15" fill="rgb(234,67,33)"/><text x="8.6809%" y="639.50"></text></g><g><title>mysql_common::value::read_text_values (2 samples, 0.16%)</title><rect x="8.4309%" y="613" width="0.1561%" height="15" fill="rgb(247,98,35)"/><text x="8.6809%" y="623.50"></text></g><g><title>__libc_start_main (3 samples, 0.23%)</title><rect x="8.4309%" y="821" width="0.2342%" height="15" fill="rgb(247,138,52)"/><text x="8.6809%" y="831.50"></text></g><g><title>main (3 samples, 0.23%)</title><rect x="8.4309%" y="805" width="0.2342%" height="15" fill="rgb(213,79,30)"/><text x="8.6809%" y="815.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.23%)</title><rect x="8.4309%" y="789" width="0.2342%" height="15" fill="rgb(246,177,23)"/><text x="8.6809%" y="799.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.23%)</title><rect x="8.4309%" y="773" width="0.2342%" height="15" fill="rgb(230,62,27)"/><text x="8.6809%" y="783.50"></text></g><g><title>std::panicking::try (3 samples, 0.23%)</title><rect x="8.4309%" y="757" width="0.2342%" height="15" fill="rgb(216,154,8)"/><text x="8.6809%" y="767.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.23%)</title><rect x="8.4309%" y="741" width="0.2342%" height="15" fill="rgb(244,35,45)"/><text x="8.6809%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.23%)</title><rect x="8.4309%" y="725" width="0.2342%" height="15" fill="rgb(251,115,12)"/><text x="8.6809%" y="735.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.23%)</title><rect x="8.4309%" y="709" width="0.2342%" height="15" fill="rgb(240,54,50)"/><text x="8.6809%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.23%)</title><rect x="8.4309%" y="693" width="0.2342%" height="15" fill="rgb(233,84,52)"/><text x="8.6809%" y="703.50"></text></g><g><title>lobsters::main (3 samples, 0.23%)</title><rect x="8.4309%" y="677" width="0.2342%" height="15" fill="rgb(207,117,47)"/><text x="8.6809%" y="687.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="8.7432%" y="821" width="0.1561%" height="15" fill="rgb(249,43,39)"/><text x="8.9932%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="8.7432%" y="805" width="0.1561%" height="15" fill="rgb(209,38,44)"/><text x="8.9932%" y="815.50"></text></g><g><title>_int_free (4 samples, 0.31%)</title><rect x="9.0554%" y="821" width="0.3123%" height="15" fill="rgb(236,212,23)"/><text x="9.3054%" y="831.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="9.3677%" y="821" width="0.2342%" height="15" fill="rgb(242,79,21)"/><text x="9.6177%" y="831.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.16%)</title><rect x="9.7580%" y="821" width="0.1561%" height="15" fill="rgb(211,96,35)"/><text x="10.0080%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.31%)</title><rect x="10.0703%" y="821" width="0.3123%" height="15" fill="rgb(253,215,40)"/><text x="10.3203%" y="831.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.23%)</title><rect x="11.2412%" y="421" width="0.2342%" height="15" fill="rgb(211,81,21)"/><text x="11.4912%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.16%)</title><rect x="11.3193%" y="405" width="0.1561%" height="15" fill="rgb(208,190,38)"/><text x="11.5693%" y="415.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.39%)</title><rect x="11.1632%" y="437" width="0.3903%" height="15" fill="rgb(235,213,38)"/><text x="11.4132%" y="447.50"></text></g><g><title>irqtime_account_irq (3 samples, 0.23%)</title><rect x="11.6315%" y="373" width="0.2342%" height="15" fill="rgb(237,122,38)"/><text x="11.8815%" y="383.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.16%)</title><rect x="11.7096%" y="357" width="0.1561%" height="15" fill="rgb(244,218,35)"/><text x="11.9596%" y="367.50"></text></g><g><title>__kfree_skb_flush (2 samples, 0.16%)</title><rect x="11.8657%" y="357" width="0.1561%" height="15" fill="rgb(240,68,47)"/><text x="12.1157%" y="367.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.16%)</title><rect x="12.0219%" y="325" width="0.1561%" height="15" fill="rgb(210,16,53)"/><text x="12.2719%" y="335.50"></text></g><g><title>__tcp_ack_snd_check (2 samples, 0.16%)</title><rect x="13.1148%" y="213" width="0.1561%" height="15" fill="rgb(235,124,12)"/><text x="13.3648%" y="223.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="13.6612%" y="117" width="0.1561%" height="15" fill="rgb(224,169,11)"/><text x="13.9112%" y="127.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="13.6612%" y="133" width="0.2342%" height="15" fill="rgb(250,166,2)"/><text x="13.9112%" y="143.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.23%)</title><rect x="13.9735%" y="133" width="0.2342%" height="15" fill="rgb(242,216,29)"/><text x="14.2235%" y="143.50"></text></g><g><title>sock_def_readable (14 samples, 1.09%)</title><rect x="13.2709%" y="213" width="1.0929%" height="15" fill="rgb(230,116,27)"/><text x="13.5209%" y="223.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.94%)</title><rect x="13.4270%" y="197" width="0.9368%" height="15" fill="rgb(228,99,48)"/><text x="13.6770%" y="207.50"></text></g><g><title>__wake_up_common (12 samples, 0.94%)</title><rect x="13.4270%" y="181" width="0.9368%" height="15" fill="rgb(253,11,6)"/><text x="13.6770%" y="191.50"></text></g><g><title>pollwake (11 samples, 0.86%)</title><rect x="13.5051%" y="165" width="0.8587%" height="15" fill="rgb(247,143,39)"/><text x="13.7551%" y="175.50"></text></g><g><title>try_to_wake_up (11 samples, 0.86%)</title><rect x="13.5051%" y="149" width="0.8587%" height="15" fill="rgb(236,97,10)"/><text x="13.7551%" y="159.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.16%)</title><rect x="14.2077%" y="133" width="0.1561%" height="15" fill="rgb(233,208,19)"/><text x="14.4577%" y="143.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="14.5199%" y="197" width="0.1561%" height="15" fill="rgb(216,164,2)"/><text x="14.7699%" y="207.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.16%)</title><rect x="14.8322%" y="197" width="0.1561%" height="15" fill="rgb(220,129,5)"/><text x="15.0822%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (28 samples, 2.19%)</title><rect x="12.9586%" y="245" width="2.1858%" height="15" fill="rgb(242,17,10)"/><text x="13.2086%" y="255.50">t..</text></g><g><title>tcp_rcv_established (28 samples, 2.19%)</title><rect x="12.9586%" y="229" width="2.1858%" height="15" fill="rgb(242,107,0)"/><text x="13.2086%" y="239.50">t..</text></g><g><title>tcp_ack (10 samples, 0.78%)</title><rect x="14.3638%" y="213" width="0.7806%" height="15" fill="rgb(251,28,31)"/><text x="14.6138%" y="223.50"></text></g><g><title>do_softirq (47 samples, 3.67%)</title><rect x="11.5535%" y="421" width="3.6690%" height="15" fill="rgb(233,223,10)"/><text x="11.8035%" y="431.50">do_s..</text></g><g><title>do_softirq_own_stack (46 samples, 3.59%)</title><rect x="11.6315%" y="405" width="3.5909%" height="15" fill="rgb(215,21,27)"/><text x="11.8815%" y="415.50">do_s..</text></g><g><title>__do_softirq (46 samples, 3.59%)</title><rect x="11.6315%" y="389" width="3.5909%" height="15" fill="rgb(232,23,21)"/><text x="11.8815%" y="399.50">__do..</text></g><g><title>net_rx_action (43 samples, 3.36%)</title><rect x="11.8657%" y="373" width="3.3568%" height="15" fill="rgb(244,5,23)"/><text x="12.1157%" y="383.50">net..</text></g><g><title>process_backlog (41 samples, 3.20%)</title><rect x="12.0219%" y="357" width="3.2006%" height="15" fill="rgb(226,81,46)"/><text x="12.2719%" y="367.50">pro..</text></g><g><title>__netif_receive_skb_one_core (41 samples, 3.20%)</title><rect x="12.0219%" y="341" width="3.2006%" height="15" fill="rgb(247,70,30)"/><text x="12.2719%" y="351.50">__n..</text></g><g><title>ip_rcv (39 samples, 3.04%)</title><rect x="12.1780%" y="325" width="3.0445%" height="15" fill="rgb(212,68,19)"/><text x="12.4280%" y="335.50">ip_..</text></g><g><title>ip_local_deliver (38 samples, 2.97%)</title><rect x="12.2560%" y="309" width="2.9664%" height="15" fill="rgb(240,187,13)"/><text x="12.5060%" y="319.50">ip_..</text></g><g><title>ip_local_deliver_finish (37 samples, 2.89%)</title><rect x="12.3341%" y="293" width="2.8884%" height="15" fill="rgb(223,113,26)"/><text x="12.5841%" y="303.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (35 samples, 2.73%)</title><rect x="12.4902%" y="277" width="2.7322%" height="15" fill="rgb(206,192,2)"/><text x="12.7402%" y="287.50">ip..</text></g><g><title>tcp_v4_rcv (34 samples, 2.65%)</title><rect x="12.5683%" y="261" width="2.6542%" height="15" fill="rgb(241,108,4)"/><text x="12.8183%" y="271.50">tc..</text></g><g><title>ip_finish_output2 (53 samples, 4.14%)</title><rect x="11.1632%" y="453" width="4.1374%" height="15" fill="rgb(247,173,49)"/><text x="11.4132%" y="463.50">ip_fi..</text></g><g><title>__local_bh_enable_ip (48 samples, 3.75%)</title><rect x="11.5535%" y="437" width="3.7471%" height="15" fill="rgb(224,114,35)"/><text x="11.8035%" y="447.50">__lo..</text></g><g><title>__tcp_transmit_skb (57 samples, 4.45%)</title><rect x="10.9290%" y="501" width="4.4496%" height="15" fill="rgb(245,159,27)"/><text x="11.1790%" y="511.50">__tcp..</text></g><g><title>__ip_queue_xmit (55 samples, 4.29%)</title><rect x="11.0851%" y="485" width="4.2935%" height="15" fill="rgb(245,172,44)"/><text x="11.3351%" y="495.50">__ip_..</text></g><g><title>ip_output (55 samples, 4.29%)</title><rect x="11.0851%" y="469" width="4.2935%" height="15" fill="rgb(236,23,11)"/><text x="11.3351%" y="479.50">ip_ou..</text></g><g><title>__tcp_push_pending_frames (63 samples, 4.92%)</title><rect x="10.7728%" y="533" width="4.9180%" height="15" fill="rgb(205,117,38)"/><text x="11.0228%" y="543.50">__tcp_..</text></g><g><title>tcp_write_xmit (62 samples, 4.84%)</title><rect x="10.8509%" y="517" width="4.8400%" height="15" fill="rgb(237,72,25)"/><text x="11.1009%" y="527.50">tcp_wr..</text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.16%)</title><rect x="15.5347%" y="501" width="0.1561%" height="15" fill="rgb(244,70,9)"/><text x="15.7847%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.16%)</title><rect x="15.6909%" y="533" width="0.1561%" height="15" fill="rgb(217,125,39)"/><text x="15.9409%" y="543.50"></text></g><g><title>__alloc_skb (2 samples, 0.16%)</title><rect x="15.6909%" y="517" width="0.1561%" height="15" fill="rgb(235,36,10)"/><text x="15.9409%" y="527.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.16%)</title><rect x="15.8470%" y="533" width="0.1561%" height="15" fill="rgb(251,123,47)"/><text x="16.0970%" y="543.50"></text></g><g><title>sock_sendmsg (70 samples, 5.46%)</title><rect x="10.7728%" y="581" width="5.4645%" height="15" fill="rgb(221,13,13)"/><text x="11.0228%" y="591.50">sock_se..</text></g><g><title>tcp_sendmsg (70 samples, 5.46%)</title><rect x="10.7728%" y="565" width="5.4645%" height="15" fill="rgb(238,131,9)"/><text x="11.0228%" y="575.50">tcp_sen..</text></g><g><title>tcp_sendmsg_locked (70 samples, 5.46%)</title><rect x="10.7728%" y="549" width="5.4645%" height="15" fill="rgb(211,50,8)"/><text x="11.0228%" y="559.50">tcp_sen..</text></g><g><title>tcp_send_mss (2 samples, 0.16%)</title><rect x="16.0812%" y="533" width="0.1561%" height="15" fill="rgb(245,182,24)"/><text x="16.3312%" y="543.50"></text></g><g><title>__x64_sys_sendto (73 samples, 5.70%)</title><rect x="10.6167%" y="613" width="5.6987%" height="15" fill="rgb(242,14,37)"/><text x="10.8667%" y="623.50">__x64_s..</text></g><g><title>__sys_sendto (73 samples, 5.70%)</title><rect x="10.6167%" y="597" width="5.6987%" height="15" fill="rgb(246,228,12)"/><text x="10.8667%" y="607.50">__sys_s..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.16%)</title><rect x="16.3154%" y="613" width="0.1561%" height="15" fill="rgb(213,55,15)"/><text x="16.5654%" y="623.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.16%)</title><rect x="16.3154%" y="597" width="0.1561%" height="15" fill="rgb(209,9,3)"/><text x="16.5654%" y="607.50"></text></g><g><title>do_syscall_64 (77 samples, 6.01%)</title><rect x="10.6167%" y="629" width="6.0109%" height="15" fill="rgb(230,59,30)"/><text x="10.8667%" y="639.50">do_sysca..</text></g><g><title>syscall_trace_enter (2 samples, 0.16%)</title><rect x="16.4715%" y="613" width="0.1561%" height="15" fill="rgb(209,121,21)"/><text x="16.7215%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (79 samples, 6.17%)</title><rect x="10.6167%" y="645" width="6.1671%" height="15" fill="rgb(220,109,13)"/><text x="10.8667%" y="655.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="16.6276%" y="629" width="0.1561%" height="15" fill="rgb(232,18,1)"/><text x="16.8776%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (80 samples, 6.25%)</title><rect x="10.6167%" y="757" width="6.2451%" height="15" fill="rgb(215,41,42)"/><text x="10.8667%" y="767.50">&lt;mysql::..</text></g><g><title>mysql::conn::Conn::_query (80 samples, 6.25%)</title><rect x="10.6167%" y="741" width="6.2451%" height="15" fill="rgb(224,123,36)"/><text x="10.8667%" y="751.50">mysql::c..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (80 samples, 6.25%)</title><rect x="10.6167%" y="725" width="6.2451%" height="15" fill="rgb(240,125,3)"/><text x="10.8667%" y="735.50">mysql_co..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (80 samples, 6.25%)</title><rect x="10.6167%" y="709" width="6.2451%" height="15" fill="rgb(205,98,50)"/><text x="10.8667%" y="719.50">std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (80 samples, 6.25%)</title><rect x="10.6167%" y="693" width="6.2451%" height="15" fill="rgb(205,185,37)"/><text x="10.8667%" y="703.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::write (80 samples, 6.25%)</title><rect x="10.6167%" y="677" width="6.2451%" height="15" fill="rgb(238,207,15)"/><text x="10.8667%" y="687.50">std::sys..</text></g><g><title>__libc_send (80 samples, 6.25%)</title><rect x="10.6167%" y="661" width="6.2451%" height="15" fill="rgb(213,199,42)"/><text x="10.8667%" y="671.50">__libc_s..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="16.9399%" y="661" width="0.1561%" height="15" fill="rgb(235,201,11)"/><text x="17.1899%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="16.9399%" y="645" width="0.1561%" height="15" fill="rgb(207,46,11)"/><text x="17.1899%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.16%)</title><rect x="16.9399%" y="629" width="0.1561%" height="15" fill="rgb(241,35,35)"/><text x="17.1899%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.16%)</title><rect x="16.9399%" y="613" width="0.1561%" height="15" fill="rgb(243,32,47)"/><text x="17.1899%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.31%)</title><rect x="17.0960%" y="661" width="0.3123%" height="15" fill="rgb(247,202,23)"/><text x="17.3460%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.31%)</title><rect x="17.0960%" y="645" width="0.3123%" height="15" fill="rgb(219,102,11)"/><text x="17.3460%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="17.0960%" y="629" width="0.3123%" height="15" fill="rgb(243,110,44)"/><text x="17.3460%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.16%)</title><rect x="17.2521%" y="613" width="0.1561%" height="15" fill="rgb(222,74,54)"/><text x="17.5021%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.16%)</title><rect x="17.2521%" y="597" width="0.1561%" height="15" fill="rgb(216,99,12)"/><text x="17.5021%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.16%)</title><rect x="17.2521%" y="581" width="0.1561%" height="15" fill="rgb(226,22,26)"/><text x="17.5021%" y="591.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.16%)</title><rect x="17.4863%" y="645" width="0.1561%" height="15" fill="rgb(217,163,10)"/><text x="17.7363%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.86%)</title><rect x="16.8618%" y="677" width="0.8587%" height="15" fill="rgb(213,25,53)"/><text x="17.1118%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.31%)</title><rect x="17.4083%" y="661" width="0.3123%" height="15" fill="rgb(252,105,26)"/><text x="17.6583%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="17.7986%" y="629" width="0.2342%" height="15" fill="rgb(220,39,43)"/><text x="18.0486%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="17.7986%" y="613" width="0.2342%" height="15" fill="rgb(229,68,48)"/><text x="18.0486%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.23%)</title><rect x="17.7986%" y="597" width="0.2342%" height="15" fill="rgb(252,8,32)"/><text x="18.0486%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.39%)</title><rect x="17.7986%" y="645" width="0.3903%" height="15" fill="rgb(223,20,43)"/><text x="18.0486%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="18.0328%" y="629" width="0.1561%" height="15" fill="rgb(229,81,49)"/><text x="18.2828%" y="639.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.31%)</title><rect x="18.2670%" y="629" width="0.3123%" height="15" fill="rgb(236,28,36)"/><text x="18.5170%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.16%)</title><rect x="18.5792%" y="629" width="0.1561%" height="15" fill="rgb(249,185,26)"/><text x="18.8292%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.09%)</title><rect x="17.7205%" y="661" width="1.0929%" height="15" fill="rgb(249,174,33)"/><text x="17.9705%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.55%)</title><rect x="18.2670%" y="645" width="0.5464%" height="15" fill="rgb(233,201,37)"/><text x="18.5170%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.39%)</title><rect x="18.8134%" y="645" width="0.3903%" height="15" fill="rgb(221,78,26)"/><text x="19.0634%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.39%)</title><rect x="18.8134%" y="629" width="0.3903%" height="15" fill="rgb(250,127,30)"/><text x="19.0634%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.39%)</title><rect x="18.8134%" y="613" width="0.3903%" height="15" fill="rgb(230,49,44)"/><text x="19.0634%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.23%)</title><rect x="18.9696%" y="597" width="0.2342%" height="15" fill="rgb(229,67,23)"/><text x="19.2196%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.16%)</title><rect x="19.0476%" y="581" width="0.1561%" height="15" fill="rgb(249,83,47)"/><text x="19.2976%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.16%)</title><rect x="19.0476%" y="565" width="0.1561%" height="15" fill="rgb(215,43,3)"/><text x="19.2976%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (20 samples, 1.56%)</title><rect x="17.7205%" y="677" width="1.5613%" height="15" fill="rgb(238,154,13)"/><text x="17.9705%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.47%)</title><rect x="18.8134%" y="661" width="0.4684%" height="15" fill="rgb(219,56,2)"/><text x="19.0634%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="19.2818%" y="677" width="0.2342%" height="15" fill="rgb(233,0,4)"/><text x="19.5318%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="19.2818%" y="661" width="0.2342%" height="15" fill="rgb(235,30,7)"/><text x="19.5318%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="19.2818%" y="645" width="0.2342%" height="15" fill="rgb(250,79,13)"/><text x="19.5318%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.39%)</title><rect x="19.6721%" y="661" width="0.3903%" height="15" fill="rgb(211,146,34)"/><text x="19.9221%" y="671.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.39%)</title><rect x="19.6721%" y="645" width="0.3903%" height="15" fill="rgb(228,22,38)"/><text x="19.9221%" y="655.50"></text></g><g><title>_int_realloc (4 samples, 0.31%)</title><rect x="19.7502%" y="629" width="0.3123%" height="15" fill="rgb(235,168,5)"/><text x="20.0002%" y="639.50"></text></g><g><title>_int_free (3 samples, 0.23%)</title><rect x="19.8283%" y="613" width="0.2342%" height="15" fill="rgb(221,155,16)"/><text x="20.0783%" y="623.50"></text></g><g><title>core::fmt::write (42 samples, 3.28%)</title><rect x="16.8618%" y="757" width="3.2787%" height="15" fill="rgb(215,215,53)"/><text x="17.1118%" y="767.50">cor..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (42 samples, 3.28%)</title><rect x="16.8618%" y="741" width="3.2787%" height="15" fill="rgb(223,4,10)"/><text x="17.1118%" y="751.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (42 samples, 3.28%)</title><rect x="16.8618%" y="725" width="3.2787%" height="15" fill="rgb(234,103,6)"/><text x="17.1118%" y="735.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (42 samples, 3.28%)</title><rect x="16.8618%" y="709" width="3.2787%" height="15" fill="rgb(227,97,0)"/><text x="17.1118%" y="719.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (42 samples, 3.28%)</title><rect x="16.8618%" y="693" width="3.2787%" height="15" fill="rgb(234,150,53)"/><text x="17.1118%" y="703.50">&lt;sq..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (8 samples, 0.62%)</title><rect x="19.5160%" y="677" width="0.6245%" height="15" fill="rgb(228,201,54)"/><text x="19.7660%" y="687.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (4 samples, 0.31%)</title><rect x="20.9212%" y="741" width="0.3123%" height="15" fill="rgb(222,22,37)"/><text x="21.1712%" y="751.50"></text></g><g><title>msql_srv::writers::column_definitions (4 samples, 0.31%)</title><rect x="20.9212%" y="725" width="0.3123%" height="15" fill="rgb(237,53,32)"/><text x="21.1712%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="20.9992%" y="709" width="0.2342%" height="15" fill="rgb(233,25,53)"/><text x="21.2492%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.16%)</title><rect x="21.0773%" y="693" width="0.1561%" height="15" fill="rgb(210,40,34)"/><text x="21.3273%" y="703.50"></text></g><g><title>decor::helpers::answer_rows (17 samples, 1.33%)</title><rect x="20.1405%" y="757" width="1.3271%" height="15" fill="rgb(241,220,44)"/><text x="20.3905%" y="767.50"></text></g><g><title>eth_type_trans (2 samples, 0.16%)</title><rect x="22.2482%" y="373" width="0.1561%" height="15" fill="rgb(235,28,35)"/><text x="22.4982%" y="383.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.31%)</title><rect x="22.1702%" y="405" width="0.3123%" height="15" fill="rgb(210,56,17)"/><text x="22.4202%" y="415.50"></text></g><g><title>loopback_xmit (3 samples, 0.23%)</title><rect x="22.2482%" y="389" width="0.2342%" height="15" fill="rgb(224,130,29)"/><text x="22.4982%" y="399.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.47%)</title><rect x="22.1702%" y="421" width="0.4684%" height="15" fill="rgb(235,212,8)"/><text x="22.4202%" y="431.50"></text></g><g><title>netdev_core_pick_tx (2 samples, 0.16%)</title><rect x="22.4824%" y="405" width="0.1561%" height="15" fill="rgb(223,33,50)"/><text x="22.7324%" y="415.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="23.4192%" y="101" width="0.1561%" height="15" fill="rgb(219,149,13)"/><text x="23.6692%" y="111.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="23.4192%" y="85" width="0.1561%" height="15" fill="rgb(250,156,29)"/><text x="23.6692%" y="95.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="23.4192%" y="117" width="0.2342%" height="15" fill="rgb(216,193,19)"/><text x="23.6692%" y="127.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.16%)</title><rect x="23.7315%" y="85" width="0.1561%" height="15" fill="rgb(216,135,14)"/><text x="23.9815%" y="95.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.39%)</title><rect x="23.6534%" y="117" width="0.3903%" height="15" fill="rgb(241,47,5)"/><text x="23.9034%" y="127.50"></text></g><g><title>enqueue_entity (5 samples, 0.39%)</title><rect x="23.6534%" y="101" width="0.3903%" height="15" fill="rgb(233,42,35)"/><text x="23.9034%" y="111.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.31%)</title><rect x="24.0437%" y="117" width="0.3123%" height="15" fill="rgb(231,13,6)"/><text x="24.2937%" y="127.50"></text></g><g><title>available_idle_cpu (2 samples, 0.16%)</title><rect x="24.1998%" y="101" width="0.1561%" height="15" fill="rgb(207,181,40)"/><text x="24.4498%" y="111.50"></text></g><g><title>sock_def_readable (13 samples, 1.01%)</title><rect x="23.4192%" y="197" width="1.0148%" height="15" fill="rgb(254,173,49)"/><text x="23.6692%" y="207.50"></text></g><g><title>__wake_up_common_lock (13 samples, 1.01%)</title><rect x="23.4192%" y="181" width="1.0148%" height="15" fill="rgb(221,1,38)"/><text x="23.6692%" y="191.50"></text></g><g><title>__wake_up_common (13 samples, 1.01%)</title><rect x="23.4192%" y="165" width="1.0148%" height="15" fill="rgb(206,124,46)"/><text x="23.6692%" y="175.50"></text></g><g><title>pollwake (13 samples, 1.01%)</title><rect x="23.4192%" y="149" width="1.0148%" height="15" fill="rgb(249,21,11)"/><text x="23.6692%" y="159.50"></text></g><g><title>try_to_wake_up (13 samples, 1.01%)</title><rect x="23.4192%" y="133" width="1.0148%" height="15" fill="rgb(222,201,40)"/><text x="23.6692%" y="143.50"></text></g><g><title>kfree (3 samples, 0.23%)</title><rect x="24.5121%" y="165" width="0.2342%" height="15" fill="rgb(235,61,29)"/><text x="24.7621%" y="175.50"></text></g><g><title>slab_free_freelist_hook (2 samples, 0.16%)</title><rect x="24.5902%" y="149" width="0.1561%" height="15" fill="rgb(219,207,3)"/><text x="24.8402%" y="159.50"></text></g><g><title>__kfree_skb (5 samples, 0.39%)</title><rect x="24.5121%" y="181" width="0.3903%" height="15" fill="rgb(222,56,46)"/><text x="24.7621%" y="191.50"></text></g><g><title>tcp_ack (8 samples, 0.62%)</title><rect x="24.4340%" y="197" width="0.6245%" height="15" fill="rgb(239,76,54)"/><text x="24.6840%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (27 samples, 2.11%)</title><rect x="23.1850%" y="229" width="2.1077%" height="15" fill="rgb(231,124,27)"/><text x="23.4350%" y="239.50">t..</text></g><g><title>tcp_rcv_established (27 samples, 2.11%)</title><rect x="23.1850%" y="213" width="2.1077%" height="15" fill="rgb(249,195,6)"/><text x="23.4350%" y="223.50">t..</text></g><g><title>tcp_queue_rcv (2 samples, 0.16%)</title><rect x="25.1366%" y="197" width="0.1561%" height="15" fill="rgb(237,174,47)"/><text x="25.3866%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (32 samples, 2.50%)</title><rect x="22.8728%" y="325" width="2.4980%" height="15" fill="rgb(206,201,31)"/><text x="23.1228%" y="335.50">__..</text></g><g><title>ip_rcv (31 samples, 2.42%)</title><rect x="22.9508%" y="309" width="2.4200%" height="15" fill="rgb(231,57,52)"/><text x="23.2008%" y="319.50">ip..</text></g><g><title>ip_local_deliver (31 samples, 2.42%)</title><rect x="22.9508%" y="293" width="2.4200%" height="15" fill="rgb(248,177,22)"/><text x="23.2008%" y="303.50">ip..</text></g><g><title>ip_local_deliver_finish (30 samples, 2.34%)</title><rect x="23.0289%" y="277" width="2.3419%" height="15" fill="rgb(215,211,37)"/><text x="23.2789%" y="287.50">i..</text></g><g><title>ip_protocol_deliver_rcu (30 samples, 2.34%)</title><rect x="23.0289%" y="261" width="2.3419%" height="15" fill="rgb(241,128,51)"/><text x="23.2789%" y="271.50">i..</text></g><g><title>tcp_v4_rcv (29 samples, 2.26%)</title><rect x="23.1069%" y="245" width="2.2639%" height="15" fill="rgb(227,165,31)"/><text x="23.3569%" y="255.50">t..</text></g><g><title>__tcp_transmit_skb (47 samples, 3.67%)</title><rect x="21.7799%" y="485" width="3.6690%" height="15" fill="rgb(228,167,24)"/><text x="22.0299%" y="495.50">__tc..</text></g><g><title>__ip_queue_xmit (45 samples, 3.51%)</title><rect x="21.9360%" y="469" width="3.5129%" height="15" fill="rgb(228,143,12)"/><text x="22.1860%" y="479.50">__i..</text></g><g><title>ip_output (43 samples, 3.36%)</title><rect x="22.0921%" y="453" width="3.3568%" height="15" fill="rgb(249,149,8)"/><text x="22.3421%" y="463.50">ip_..</text></g><g><title>ip_finish_output2 (43 samples, 3.36%)</title><rect x="22.0921%" y="437" width="3.3568%" height="15" fill="rgb(243,35,44)"/><text x="22.3421%" y="447.50">ip_..</text></g><g><title>__local_bh_enable_ip (36 samples, 2.81%)</title><rect x="22.6386%" y="421" width="2.8103%" height="15" fill="rgb(246,89,9)"/><text x="22.8886%" y="431.50">__..</text></g><g><title>do_softirq (35 samples, 2.73%)</title><rect x="22.7166%" y="405" width="2.7322%" height="15" fill="rgb(233,213,13)"/><text x="22.9666%" y="415.50">do..</text></g><g><title>do_softirq_own_stack (35 samples, 2.73%)</title><rect x="22.7166%" y="389" width="2.7322%" height="15" fill="rgb(233,141,41)"/><text x="22.9666%" y="399.50">do..</text></g><g><title>__do_softirq (35 samples, 2.73%)</title><rect x="22.7166%" y="373" width="2.7322%" height="15" fill="rgb(239,167,4)"/><text x="22.9666%" y="383.50">__..</text></g><g><title>net_rx_action (34 samples, 2.65%)</title><rect x="22.7947%" y="357" width="2.6542%" height="15" fill="rgb(209,217,16)"/><text x="23.0447%" y="367.50">ne..</text></g><g><title>process_backlog (33 samples, 2.58%)</title><rect x="22.8728%" y="341" width="2.5761%" height="15" fill="rgb(219,88,35)"/><text x="23.1228%" y="351.50">pr..</text></g><g><title>__tcp_push_pending_frames (48 samples, 3.75%)</title><rect x="21.7799%" y="517" width="3.7471%" height="15" fill="rgb(220,193,23)"/><text x="22.0299%" y="527.50">__tc..</text></g><g><title>tcp_write_xmit (48 samples, 3.75%)</title><rect x="21.7799%" y="501" width="3.7471%" height="15" fill="rgb(230,90,52)"/><text x="22.0299%" y="511.50">tcp_..</text></g><g><title>sock_sendmsg (52 samples, 4.06%)</title><rect x="21.7018%" y="565" width="4.0593%" height="15" fill="rgb(252,106,19)"/><text x="21.9518%" y="575.50">sock..</text></g><g><title>tcp_sendmsg (52 samples, 4.06%)</title><rect x="21.7018%" y="549" width="4.0593%" height="15" fill="rgb(206,74,20)"/><text x="21.9518%" y="559.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (52 samples, 4.06%)</title><rect x="21.7018%" y="533" width="4.0593%" height="15" fill="rgb(230,138,44)"/><text x="21.9518%" y="543.50">tcp_..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.16%)</title><rect x="25.6050%" y="517" width="0.1561%" height="15" fill="rgb(235,182,43)"/><text x="25.8550%" y="527.50"></text></g><g><title>__alloc_skb (2 samples, 0.16%)</title><rect x="25.6050%" y="501" width="0.1561%" height="15" fill="rgb(242,16,51)"/><text x="25.8550%" y="511.50"></text></g><g><title>__x64_sys_sendto (54 samples, 4.22%)</title><rect x="21.6237%" y="597" width="4.2155%" height="15" fill="rgb(248,9,4)"/><text x="21.8737%" y="607.50">__x64..</text></g><g><title>__sys_sendto (54 samples, 4.22%)</title><rect x="21.6237%" y="581" width="4.2155%" height="15" fill="rgb(210,31,22)"/><text x="21.8737%" y="591.50">__sys..</text></g><g><title>do_syscall_64 (57 samples, 4.45%)</title><rect x="21.6237%" y="613" width="4.4496%" height="15" fill="rgb(239,54,39)"/><text x="21.8737%" y="623.50">do_sy..</text></g><g><title>syscall_slow_exit_work (3 samples, 0.23%)</title><rect x="25.8392%" y="597" width="0.2342%" height="15" fill="rgb(230,99,41)"/><text x="26.0892%" y="607.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.16%)</title><rect x="25.9173%" y="581" width="0.1561%" height="15" fill="rgb(253,106,12)"/><text x="26.1673%" y="591.50"></text></g><g><title>decor::Shim::run_on_tcp (201 samples, 15.69%)</title><rect x="10.5386%" y="821" width="15.6909%" height="15" fill="rgb(213,46,41)"/><text x="10.7886%" y="831.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (201 samples, 15.69%)</title><rect x="10.5386%" y="805" width="15.6909%" height="15" fill="rgb(215,133,35)"/><text x="10.7886%" y="815.50">msql_srv::MysqlIntermedi..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (200 samples, 15.61%)</title><rect x="10.6167%" y="789" width="15.6128%" height="15" fill="rgb(213,28,5)"/><text x="10.8667%" y="799.50">&lt;decor::Shim as msql_srv..</text></g><g><title>decor::query_transformer::QueryTransformer::query (200 samples, 15.61%)</title><rect x="10.6167%" y="773" width="15.6128%" height="15" fill="rgb(215,77,49)"/><text x="10.8667%" y="783.50">decor::query_transformer..</text></g><g><title>mysql::conn::transaction::Transaction::commit (60 samples, 4.68%)</title><rect x="21.5457%" y="757" width="4.6838%" height="15" fill="rgb(248,100,22)"/><text x="21.7957%" y="767.50">mysql..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (60 samples, 4.68%)</title><rect x="21.5457%" y="741" width="4.6838%" height="15" fill="rgb(208,67,9)"/><text x="21.7957%" y="751.50">mysql..</text></g><g><title>mysql::conn::Conn::_query (60 samples, 4.68%)</title><rect x="21.5457%" y="725" width="4.6838%" height="15" fill="rgb(219,133,21)"/><text x="21.7957%" y="735.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (60 samples, 4.68%)</title><rect x="21.5457%" y="709" width="4.6838%" height="15" fill="rgb(246,46,29)"/><text x="21.7957%" y="719.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (59 samples, 4.61%)</title><rect x="21.6237%" y="693" width="4.6058%" height="15" fill="rgb(246,185,52)"/><text x="21.8737%" y="703.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (59 samples, 4.61%)</title><rect x="21.6237%" y="677" width="4.6058%" height="15" fill="rgb(252,136,11)"/><text x="21.8737%" y="687.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (59 samples, 4.61%)</title><rect x="21.6237%" y="661" width="4.6058%" height="15" fill="rgb(219,138,53)"/><text x="21.8737%" y="671.50">std::..</text></g><g><title>__libc_send (59 samples, 4.61%)</title><rect x="21.6237%" y="645" width="4.6058%" height="15" fill="rgb(211,51,23)"/><text x="21.8737%" y="655.50">__lib..</text></g><g><title>entry_SYSCALL_64 (59 samples, 4.61%)</title><rect x="21.6237%" y="629" width="4.6058%" height="15" fill="rgb(247,221,28)"/><text x="21.8737%" y="639.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="26.0734%" y="613" width="0.1561%" height="15" fill="rgb(251,222,45)"/><text x="26.3234%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.5418%" y="709" width="0.1561%" height="15" fill="rgb(217,162,53)"/><text x="26.7918%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.5418%" y="693" width="0.1561%" height="15" fill="rgb(229,93,14)"/><text x="26.7918%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="26.5418%" y="677" width="0.1561%" height="15" fill="rgb(209,67,49)"/><text x="26.7918%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="26.6979%" y="709" width="0.2342%" height="15" fill="rgb(213,87,29)"/><text x="26.9479%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="26.7760%" y="693" width="0.1561%" height="15" fill="rgb(205,151,52)"/><text x="27.0260%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.7760%" y="677" width="0.1561%" height="15" fill="rgb(253,215,39)"/><text x="27.0260%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="26.7760%" y="661" width="0.1561%" height="15" fill="rgb(221,220,41)"/><text x="27.0260%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.16%)</title><rect x="26.7760%" y="645" width="0.1561%" height="15" fill="rgb(218,133,21)"/><text x="27.0260%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="26.7760%" y="629" width="0.1561%" height="15" fill="rgb(221,193,43)"/><text x="27.0260%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.55%)</title><rect x="26.5418%" y="725" width="0.5464%" height="15" fill="rgb(240,128,52)"/><text x="26.7918%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.16%)</title><rect x="26.9321%" y="709" width="0.1561%" height="15" fill="rgb(253,114,12)"/><text x="27.1821%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.62%)</title><rect x="26.5418%" y="741" width="0.6245%" height="15" fill="rgb(215,223,47)"/><text x="26.7918%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.94%)</title><rect x="26.3856%" y="757" width="0.9368%" height="15" fill="rgb(248,225,23)"/><text x="26.6356%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (14 samples, 1.09%)</title><rect x="26.3856%" y="789" width="1.0929%" height="15" fill="rgb(250,108,0)"/><text x="26.6356%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (14 samples, 1.09%)</title><rect x="26.3856%" y="773" width="1.0929%" height="15" fill="rgb(228,208,7)"/><text x="26.6356%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="27.3224%" y="757" width="0.1561%" height="15" fill="rgb(244,45,10)"/><text x="27.5724%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="27.3224%" y="741" width="0.1561%" height="15" fill="rgb(207,125,25)"/><text x="27.5724%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="27.3224%" y="725" width="0.1561%" height="15" fill="rgb(210,195,18)"/><text x="27.5724%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="27.4785%" y="757" width="0.1561%" height="15" fill="rgb(249,80,12)"/><text x="27.7285%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="27.4785%" y="741" width="0.1561%" height="15" fill="rgb(221,65,9)"/><text x="27.7285%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="27.7127%" y="661" width="0.2342%" height="15" fill="rgb(235,49,36)"/><text x="27.9627%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="27.7127%" y="645" width="0.2342%" height="15" fill="rgb(225,32,20)"/><text x="27.9627%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.23%)</title><rect x="27.7127%" y="629" width="0.2342%" height="15" fill="rgb(215,141,46)"/><text x="27.9627%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="27.7127%" y="613" width="0.2342%" height="15" fill="rgb(250,160,47)"/><text x="27.9627%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="27.7908%" y="597" width="0.1561%" height="15" fill="rgb(216,222,40)"/><text x="28.0408%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="27.7908%" y="581" width="0.1561%" height="15" fill="rgb(234,217,39)"/><text x="28.0408%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="27.7908%" y="565" width="0.1561%" height="15" fill="rgb(207,178,40)"/><text x="28.0408%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="27.7908%" y="549" width="0.1561%" height="15" fill="rgb(221,136,13)"/><text x="28.0408%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="27.7908%" y="533" width="0.1561%" height="15" fill="rgb(249,199,10)"/><text x="28.0408%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="27.7908%" y="517" width="0.1561%" height="15" fill="rgb(249,222,13)"/><text x="28.0408%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="27.7908%" y="501" width="0.1561%" height="15" fill="rgb(244,185,38)"/><text x="28.0408%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="27.7908%" y="485" width="0.1561%" height="15" fill="rgb(236,202,9)"/><text x="28.0408%" y="495.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.31%)</title><rect x="27.9469%" y="661" width="0.3123%" height="15" fill="rgb(250,229,37)"/><text x="28.1969%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="27.9469%" y="645" width="0.3123%" height="15" fill="rgb(206,174,23)"/><text x="28.1969%" y="655.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="27.9469%" y="629" width="0.3123%" height="15" fill="rgb(211,33,43)"/><text x="28.1969%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.31%)</title><rect x="27.9469%" y="613" width="0.3123%" height="15" fill="rgb(245,58,50)"/><text x="28.1969%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.31%)</title><rect x="27.9469%" y="597" width="0.3123%" height="15" fill="rgb(244,68,36)"/><text x="28.1969%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.31%)</title><rect x="27.9469%" y="581" width="0.3123%" height="15" fill="rgb(232,229,15)"/><text x="28.1969%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="27.9469%" y="565" width="0.3123%" height="15" fill="rgb(254,30,23)"/><text x="28.1969%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.31%)</title><rect x="27.9469%" y="549" width="0.3123%" height="15" fill="rgb(235,160,14)"/><text x="28.1969%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.23%)</title><rect x="28.0250%" y="533" width="0.2342%" height="15" fill="rgb(212,155,44)"/><text x="28.2750%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.23%)</title><rect x="28.0250%" y="517" width="0.2342%" height="15" fill="rgb(226,2,50)"/><text x="28.2750%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="28.1030%" y="501" width="0.1561%" height="15" fill="rgb(234,177,6)"/><text x="28.3530%" y="511.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.31%)</title><rect x="28.3372%" y="629" width="0.3123%" height="15" fill="rgb(217,24,9)"/><text x="28.5872%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (4 samples, 0.31%)</title><rect x="28.3372%" y="613" width="0.3123%" height="15" fill="rgb(220,13,46)"/><text x="28.5872%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.78%)</title><rect x="28.3372%" y="645" width="0.7806%" height="15" fill="rgb(239,221,27)"/><text x="28.5872%" y="655.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.47%)</title><rect x="28.6495%" y="629" width="0.4684%" height="15" fill="rgb(222,198,25)"/><text x="28.8995%" y="639.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="28.8837%" y="613" width="0.2342%" height="15" fill="rgb(211,99,13)"/><text x="29.1337%" y="623.50"></text></g><g><title>_int_free (4 samples, 0.31%)</title><rect x="29.1959%" y="645" width="0.3123%" height="15" fill="rgb(232,111,31)"/><text x="29.4459%" y="655.50"></text></g><g><title>decor::mv_transformer::MVTransformer::joinoperator_to_mv_joinoperator (26 samples, 2.03%)</title><rect x="27.6347%" y="725" width="2.0297%" height="15" fill="rgb(245,82,37)"/><text x="27.8847%" y="735.50">d..</text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (26 samples, 2.03%)</title><rect x="27.6347%" y="709" width="2.0297%" height="15" fill="rgb(227,149,46)"/><text x="27.8847%" y="719.50">d..</text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (25 samples, 1.95%)</title><rect x="27.7127%" y="693" width="1.9516%" height="15" fill="rgb(218,36,50)"/><text x="27.9627%" y="703.50">d..</text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (25 samples, 1.95%)</title><rect x="27.7127%" y="677" width="1.9516%" height="15" fill="rgb(226,80,48)"/><text x="27.9627%" y="687.50">d..</text></g><g><title>decor::helpers::str_subset_of_idents (17 samples, 1.33%)</title><rect x="28.3372%" y="661" width="1.3271%" height="15" fill="rgb(238,224,15)"/><text x="28.5872%" y="671.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.16%)</title><rect x="29.5082%" y="645" width="0.1561%" height="15" fill="rgb(241,136,10)"/><text x="29.7582%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="29.8205%" y="661" width="0.2342%" height="15" fill="rgb(208,32,45)"/><text x="30.0705%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="29.8205%" y="645" width="0.2342%" height="15" fill="rgb(207,135,9)"/><text x="30.0705%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.39%)</title><rect x="29.8205%" y="693" width="0.3903%" height="15" fill="rgb(206,86,44)"/><text x="30.0705%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (5 samples, 0.39%)</title><rect x="29.8205%" y="677" width="0.3903%" height="15" fill="rgb(245,177,15)"/><text x="30.0705%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.2108%" y="629" width="0.1561%" height="15" fill="rgb(206,64,50)"/><text x="30.4608%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.2108%" y="613" width="0.1561%" height="15" fill="rgb(234,36,40)"/><text x="30.4608%" y="623.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="30.2108%" y="597" width="0.1561%" height="15" fill="rgb(213,64,8)"/><text x="30.4608%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="30.2108%" y="581" width="0.1561%" height="15" fill="rgb(210,75,36)"/><text x="30.4608%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="30.2108%" y="565" width="0.1561%" height="15" fill="rgb(229,88,21)"/><text x="30.4608%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.16%)</title><rect x="30.2108%" y="549" width="0.1561%" height="15" fill="rgb(252,204,47)"/><text x="30.4608%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.16%)</title><rect x="30.2108%" y="533" width="0.1561%" height="15" fill="rgb(208,77,27)"/><text x="30.4608%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="30.2108%" y="517" width="0.1561%" height="15" fill="rgb(221,76,26)"/><text x="30.4608%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.16%)</title><rect x="30.2108%" y="501" width="0.1561%" height="15" fill="rgb(225,139,18)"/><text x="30.4608%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="30.2108%" y="485" width="0.1561%" height="15" fill="rgb(230,137,11)"/><text x="30.4608%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.47%)</title><rect x="30.4450%" y="613" width="0.4684%" height="15" fill="rgb(212,28,1)"/><text x="30.6950%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.47%)</title><rect x="30.4450%" y="597" width="0.4684%" height="15" fill="rgb(248,164,17)"/><text x="30.6950%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.31%)</title><rect x="30.6011%" y="581" width="0.3123%" height="15" fill="rgb(222,171,42)"/><text x="30.8511%" y="591.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.16%)</title><rect x="30.7572%" y="565" width="0.1561%" height="15" fill="rgb(243,84,45)"/><text x="31.0072%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="30.7572%" y="549" width="0.1561%" height="15" fill="rgb(252,49,23)"/><text x="31.0072%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="30.7572%" y="533" width="0.1561%" height="15" fill="rgb(215,19,7)"/><text x="31.0072%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="30.7572%" y="517" width="0.1561%" height="15" fill="rgb(238,81,41)"/><text x="31.0072%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="30.7572%" y="501" width="0.1561%" height="15" fill="rgb(210,199,37)"/><text x="31.0072%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="30.7572%" y="485" width="0.1561%" height="15" fill="rgb(244,192,49)"/><text x="31.0072%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="30.7572%" y="469" width="0.1561%" height="15" fill="rgb(226,211,11)"/><text x="31.0072%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44 samples, 3.43%)</title><rect x="27.6347%" y="741" width="3.4348%" height="15" fill="rgb(236,162,54)"/><text x="27.8847%" y="751.50">&lt;co..</text></g><g><title>decor::mv_transformer::MVTransformer::tablefactor_to_mv_tablefactor (18 samples, 1.41%)</title><rect x="29.6643%" y="725" width="1.4052%" height="15" fill="rgb(220,229,9)"/><text x="29.9143%" y="735.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (18 samples, 1.41%)</title><rect x="29.6643%" y="709" width="1.4052%" height="15" fill="rgb(250,87,22)"/><text x="29.9143%" y="719.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (11 samples, 0.86%)</title><rect x="30.2108%" y="693" width="0.8587%" height="15" fill="rgb(239,43,17)"/><text x="30.4608%" y="703.50"></text></g><g><title>alloc::fmt::format (11 samples, 0.86%)</title><rect x="30.2108%" y="677" width="0.8587%" height="15" fill="rgb(231,177,25)"/><text x="30.4608%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (11 samples, 0.86%)</title><rect x="30.2108%" y="661" width="0.8587%" height="15" fill="rgb(219,179,1)"/><text x="30.4608%" y="671.50"></text></g><g><title>core::fmt::write (11 samples, 0.86%)</title><rect x="30.2108%" y="645" width="0.8587%" height="15" fill="rgb(238,219,53)"/><text x="30.4608%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.70%)</title><rect x="30.3669%" y="629" width="0.7026%" height="15" fill="rgb(232,167,36)"/><text x="30.6169%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="30.9133%" y="613" width="0.1561%" height="15" fill="rgb(244,19,51)"/><text x="31.1633%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="30.9133%" y="597" width="0.1561%" height="15" fill="rgb(224,6,22)"/><text x="31.1633%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.9133%" y="581" width="0.1561%" height="15" fill="rgb(224,145,5)"/><text x="31.1633%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="30.9133%" y="565" width="0.1561%" height="15" fill="rgb(234,130,49)"/><text x="31.1633%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 1.87%)</title><rect x="31.0695%" y="741" width="1.8735%" height="15" fill="rgb(254,6,2)"/><text x="31.3195%" y="751.50">a..</text></g><g><title>__GI___libc_malloc (23 samples, 1.80%)</title><rect x="31.1475%" y="725" width="1.7955%" height="15" fill="rgb(208,96,46)"/><text x="31.3975%" y="735.50">_..</text></g><g><title>_int_malloc (23 samples, 1.80%)</title><rect x="31.1475%" y="709" width="1.7955%" height="15" fill="rgb(239,3,39)"/><text x="31.3975%" y="719.50">_..</text></g><g><title>malloc_consolidate (17 samples, 1.33%)</title><rect x="31.6159%" y="693" width="1.3271%" height="15" fill="rgb(233,210,1)"/><text x="31.8659%" y="703.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="32.9430%" y="709" width="0.2342%" height="15" fill="rgb(244,137,37)"/><text x="33.1930%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (3 samples, 0.23%)</title><rect x="32.9430%" y="693" width="0.2342%" height="15" fill="rgb(240,136,2)"/><text x="33.1930%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="32.9430%" y="677" width="0.2342%" height="15" fill="rgb(239,18,37)"/><text x="33.1930%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="32.9430%" y="661" width="0.2342%" height="15" fill="rgb(218,185,22)"/><text x="33.1930%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.23%)</title><rect x="32.9430%" y="645" width="0.2342%" height="15" fill="rgb(225,218,4)"/><text x="33.1930%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.16%)</title><rect x="33.0211%" y="629" width="0.1561%" height="15" fill="rgb(230,182,32)"/><text x="33.2711%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.31%)</title><rect x="33.4114%" y="629" width="0.3123%" height="15" fill="rgb(242,56,43)"/><text x="33.6614%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.31%)</title><rect x="33.4114%" y="613" width="0.3123%" height="15" fill="rgb(233,99,24)"/><text x="33.6614%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.23%)</title><rect x="33.4895%" y="597" width="0.2342%" height="15" fill="rgb(234,209,42)"/><text x="33.7395%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.16%)</title><rect x="33.5675%" y="581" width="0.1561%" height="15" fill="rgb(227,7,12)"/><text x="33.8175%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.16%)</title><rect x="33.5675%" y="565" width="0.1561%" height="15" fill="rgb(245,203,43)"/><text x="33.8175%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.16%)</title><rect x="33.5675%" y="549" width="0.1561%" height="15" fill="rgb(238,205,33)"/><text x="33.8175%" y="559.50"></text></g><g><title>alloc::fmt::format (9 samples, 0.70%)</title><rect x="33.3333%" y="693" width="0.7026%" height="15" fill="rgb(231,56,7)"/><text x="33.5833%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.70%)</title><rect x="33.3333%" y="677" width="0.7026%" height="15" fill="rgb(244,186,29)"/><text x="33.5833%" y="687.50"></text></g><g><title>core::fmt::write (9 samples, 0.70%)</title><rect x="33.3333%" y="661" width="0.7026%" height="15" fill="rgb(234,111,31)"/><text x="33.5833%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.62%)</title><rect x="33.4114%" y="645" width="0.6245%" height="15" fill="rgb(241,149,10)"/><text x="33.6614%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.31%)</title><rect x="33.7237%" y="629" width="0.3123%" height="15" fill="rgb(249,206,44)"/><text x="33.9737%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="34.1140%" y="677" width="0.3903%" height="15" fill="rgb(251,153,30)"/><text x="34.3640%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="34.2701%" y="661" width="0.2342%" height="15" fill="rgb(239,152,38)"/><text x="34.5201%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="34.3482%" y="645" width="0.1561%" height="15" fill="rgb(249,139,47)"/><text x="34.5982%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (91 samples, 7.10%)</title><rect x="27.4785%" y="773" width="7.1038%" height="15" fill="rgb(244,64,35)"/><text x="27.7285%" y="783.50">&lt;alloc::ve..</text></g><g><title>decor::mv_transformer::MVTransformer::tablewithjoins_to_mv_tablewithjoins (89 samples, 6.95%)</title><rect x="27.6347%" y="757" width="6.9477%" height="15" fill="rgb(216,46,15)"/><text x="27.8847%" y="767.50">decor::mv..</text></g><g><title>decor::mv_transformer::MVTransformer::tablefactor_to_mv_tablefactor (21 samples, 1.64%)</title><rect x="32.9430%" y="741" width="1.6393%" height="15" fill="rgb(250,74,19)"/><text x="33.1930%" y="751.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (21 samples, 1.64%)</title><rect x="32.9430%" y="725" width="1.6393%" height="15" fill="rgb(249,42,33)"/><text x="33.1930%" y="735.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (18 samples, 1.41%)</title><rect x="33.1772%" y="709" width="1.4052%" height="15" fill="rgb(242,149,17)"/><text x="33.4272%" y="719.50"></text></g><g><title>decor::helpers::str_subset_of_idents (7 samples, 0.55%)</title><rect x="34.0359%" y="693" width="0.5464%" height="15" fill="rgb(244,29,21)"/><text x="34.2859%" y="703.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="34.8165%" y="693" width="0.2342%" height="15" fill="rgb(220,130,37)"/><text x="35.0665%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.16%)</title><rect x="34.8946%" y="677" width="0.1561%" height="15" fill="rgb(211,67,2)"/><text x="35.1446%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="35.0507%" y="693" width="0.1561%" height="15" fill="rgb(235,68,52)"/><text x="35.3007%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.55%)</title><rect x="34.7385%" y="709" width="0.5464%" height="15" fill="rgb(246,142,3)"/><text x="34.9885%" y="719.50"></text></g><g><title>_int_free (4 samples, 0.31%)</title><rect x="35.2849%" y="709" width="0.3123%" height="15" fill="rgb(241,25,7)"/><text x="35.5349%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.17%)</title><rect x="34.5824%" y="773" width="1.1710%" height="15" fill="rgb(242,119,39)"/><text x="34.8324%" y="783.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (15 samples, 1.17%)</title><rect x="34.5824%" y="757" width="1.1710%" height="15" fill="rgb(241,98,45)"/><text x="34.8324%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (15 samples, 1.17%)</title><rect x="34.5824%" y="741" width="1.1710%" height="15" fill="rgb(254,28,30)"/><text x="34.8324%" y="751.50"></text></g><g><title>decor::helpers::str_subset_of_idents (14 samples, 1.09%)</title><rect x="34.6604%" y="725" width="1.0929%" height="15" fill="rgb(241,142,54)"/><text x="34.9104%" y="735.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.16%)</title><rect x="35.5972%" y="709" width="0.1561%" height="15" fill="rgb(222,85,15)"/><text x="35.8472%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="35.9875%" y="661" width="0.1561%" height="15" fill="rgb(210,85,47)"/><text x="36.2375%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.16%)</title><rect x="35.9875%" y="645" width="0.1561%" height="15" fill="rgb(224,206,25)"/><text x="36.2375%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.16%)</title><rect x="35.9875%" y="629" width="0.1561%" height="15" fill="rgb(243,201,19)"/><text x="36.2375%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.16%)</title><rect x="35.9875%" y="613" width="0.1561%" height="15" fill="rgb(236,59,4)"/><text x="36.2375%" y="623.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.47%)</title><rect x="35.8314%" y="725" width="0.4684%" height="15" fill="rgb(254,179,45)"/><text x="36.0814%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.47%)</title><rect x="35.8314%" y="709" width="0.4684%" height="15" fill="rgb(226,14,10)"/><text x="36.0814%" y="719.50"></text></g><g><title>core::fmt::write (6 samples, 0.47%)</title><rect x="35.8314%" y="693" width="0.4684%" height="15" fill="rgb(244,27,41)"/><text x="36.0814%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.39%)</title><rect x="35.9094%" y="677" width="0.3903%" height="15" fill="rgb(235,35,32)"/><text x="36.1594%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="36.1436%" y="661" width="0.1561%" height="15" fill="rgb(218,68,31)"/><text x="36.3936%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="36.2998%" y="725" width="0.1561%" height="15" fill="rgb(207,120,37)"/><text x="36.5498%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.2998%" y="709" width="0.1561%" height="15" fill="rgb(227,98,0)"/><text x="36.5498%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.2998%" y="693" width="0.1561%" height="15" fill="rgb(207,7,3)"/><text x="36.5498%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.16%)</title><rect x="36.2998%" y="677" width="0.1561%" height="15" fill="rgb(206,98,19)"/><text x="36.5498%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="36.2998%" y="661" width="0.1561%" height="15" fill="rgb(217,5,26)"/><text x="36.5498%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="36.2998%" y="645" width="0.1561%" height="15" fill="rgb(235,190,38)"/><text x="36.5498%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="36.2998%" y="629" width="0.1561%" height="15" fill="rgb(247,86,24)"/><text x="36.5498%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="36.2998%" y="613" width="0.1561%" height="15" fill="rgb(205,101,16)"/><text x="36.5498%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="36.2998%" y="597" width="0.1561%" height="15" fill="rgb(246,168,33)"/><text x="36.5498%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="36.2998%" y="581" width="0.1561%" height="15" fill="rgb(231,114,1)"/><text x="36.5498%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="36.2998%" y="565" width="0.1561%" height="15" fill="rgb(207,184,53)"/><text x="36.5498%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="36.2998%" y="549" width="0.1561%" height="15" fill="rgb(224,95,51)"/><text x="36.5498%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="36.2998%" y="533" width="0.1561%" height="15" fill="rgb(212,188,45)"/><text x="36.5498%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="36.2998%" y="517" width="0.1561%" height="15" fill="rgb(223,154,38)"/><text x="36.5498%" y="527.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="36.6901%" y="693" width="0.1561%" height="15" fill="rgb(251,22,52)"/><text x="36.9401%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.16%)</title><rect x="36.6901%" y="677" width="0.1561%" height="15" fill="rgb(229,209,22)"/><text x="36.9401%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="36.8462%" y="693" width="0.2342%" height="15" fill="rgb(234,138,34)"/><text x="37.0962%" y="703.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="36.8462%" y="677" width="0.2342%" height="15" fill="rgb(212,95,11)"/><text x="37.0962%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.62%)</title><rect x="36.5340%" y="709" width="0.6245%" height="15" fill="rgb(240,179,47)"/><text x="36.7840%" y="719.50"></text></g><g><title>decor::mv_transformer::MVTransformer::query_to_mv_query (140 samples, 10.93%)</title><rect x="26.3856%" y="805" width="10.9290%" height="15" fill="rgb(240,163,11)"/><text x="26.6356%" y="815.50">decor::mv_transf..</text></g><g><title>decor::mv_transformer::MVTransformer::setexpr_to_mv_setexpr (126 samples, 9.84%)</title><rect x="27.4785%" y="789" width="9.8361%" height="15" fill="rgb(236,37,12)"/><text x="27.7285%" y="799.50">decor::mv_tran..</text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (20 samples, 1.56%)</title><rect x="35.7533%" y="773" width="1.5613%" height="15" fill="rgb(232,164,16)"/><text x="36.0033%" y="783.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (20 samples, 1.56%)</title><rect x="35.7533%" y="757" width="1.5613%" height="15" fill="rgb(244,205,15)"/><text x="36.0033%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (20 samples, 1.56%)</title><rect x="35.7533%" y="741" width="1.5613%" height="15" fill="rgb(223,117,47)"/><text x="36.0033%" y="751.50"></text></g><g><title>decor::helpers::str_subset_of_idents (11 samples, 0.86%)</title><rect x="36.4559%" y="725" width="0.8587%" height="15" fill="rgb(244,107,35)"/><text x="36.7059%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (141 samples, 11.01%)</title><rect x="26.3856%" y="821" width="11.0070%" height="15" fill="rgb(205,140,8)"/><text x="26.6356%" y="831.50">decor::query_tra..</text></g><g><title>__x64_sys_mprotect (3 samples, 0.23%)</title><rect x="37.6269%" y="629" width="0.2342%" height="15" fill="rgb(228,84,46)"/><text x="37.8769%" y="639.50"></text></g><g><title>do_mprotect_pkey (3 samples, 0.23%)</title><rect x="37.6269%" y="613" width="0.2342%" height="15" fill="rgb(254,188,9)"/><text x="37.8769%" y="623.50"></text></g><g><title>mprotect_fixup (3 samples, 0.23%)</title><rect x="37.6269%" y="597" width="0.2342%" height="15" fill="rgb(206,112,54)"/><text x="37.8769%" y="607.50"></text></g><g><title>perf_event_mmap (3 samples, 0.23%)</title><rect x="37.6269%" y="581" width="0.2342%" height="15" fill="rgb(216,84,49)"/><text x="37.8769%" y="591.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.23%)</title><rect x="37.6269%" y="565" width="0.2342%" height="15" fill="rgb(214,194,35)"/><text x="37.8769%" y="575.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.23%)</title><rect x="37.6269%" y="549" width="0.2342%" height="15" fill="rgb(249,28,3)"/><text x="37.8769%" y="559.50"></text></g><g><title>do_syscall_64 (4 samples, 0.31%)</title><rect x="37.6269%" y="645" width="0.3123%" height="15" fill="rgb(222,56,52)"/><text x="37.8769%" y="655.50"></text></g><g><title>__GI___mprotect (5 samples, 0.39%)</title><rect x="37.6269%" y="677" width="0.3903%" height="15" fill="rgb(245,217,50)"/><text x="37.8769%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.39%)</title><rect x="37.6269%" y="661" width="0.3903%" height="15" fill="rgb(213,201,24)"/><text x="37.8769%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (9 samples, 0.70%)</title><rect x="37.3927%" y="789" width="0.7026%" height="15" fill="rgb(248,116,28)"/><text x="37.6427%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (9 samples, 0.70%)</title><rect x="37.3927%" y="773" width="0.7026%" height="15" fill="rgb(219,72,43)"/><text x="37.6427%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (9 samples, 0.70%)</title><rect x="37.3927%" y="757" width="0.7026%" height="15" fill="rgb(209,138,14)"/><text x="37.6427%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.70%)</title><rect x="37.3927%" y="741" width="0.7026%" height="15" fill="rgb(222,18,33)"/><text x="37.6427%" y="751.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.62%)</title><rect x="37.4707%" y="725" width="0.6245%" height="15" fill="rgb(213,199,7)"/><text x="37.7207%" y="735.50"></text></g><g><title>_int_malloc (8 samples, 0.62%)</title><rect x="37.4707%" y="709" width="0.6245%" height="15" fill="rgb(250,110,10)"/><text x="37.7207%" y="719.50"></text></g><g><title>sysmalloc (8 samples, 0.62%)</title><rect x="37.4707%" y="693" width="0.6245%" height="15" fill="rgb(248,123,6)"/><text x="37.7207%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="38.0952%" y="789" width="0.1561%" height="15" fill="rgb(206,91,31)"/><text x="38.3452%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.0952%" y="773" width="0.1561%" height="15" fill="rgb(211,154,13)"/><text x="38.3452%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.0952%" y="757" width="0.1561%" height="15" fill="rgb(225,148,7)"/><text x="38.3452%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.0952%" y="741" width="0.1561%" height="15" fill="rgb(220,160,43)"/><text x="38.3452%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.0952%" y="725" width="0.1561%" height="15" fill="rgb(213,52,39)"/><text x="38.3452%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.0952%" y="709" width="0.1561%" height="15" fill="rgb(243,137,7)"/><text x="38.3452%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.0952%" y="693" width="0.1561%" height="15" fill="rgb(230,79,13)"/><text x="38.3452%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="38.0952%" y="677" width="0.1561%" height="15" fill="rgb(247,105,23)"/><text x="38.3452%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="38.0952%" y="661" width="0.1561%" height="15" fill="rgb(223,179,41)"/><text x="38.3452%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.0952%" y="645" width="0.1561%" height="15" fill="rgb(218,9,34)"/><text x="38.3452%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="38.0952%" y="629" width="0.1561%" height="15" fill="rgb(222,106,8)"/><text x="38.3452%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="38.0952%" y="613" width="0.1561%" height="15" fill="rgb(211,220,0)"/><text x="38.3452%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="38.0952%" y="597" width="0.1561%" height="15" fill="rgb(229,52,16)"/><text x="38.3452%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="38.0952%" y="581" width="0.1561%" height="15" fill="rgb(212,155,18)"/><text x="38.3452%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="38.0952%" y="565" width="0.1561%" height="15" fill="rgb(242,21,14)"/><text x="38.3452%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="38.4075%" y="757" width="0.2342%" height="15" fill="rgb(222,19,48)"/><text x="38.6575%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="38.4856%" y="741" width="0.1561%" height="15" fill="rgb(232,45,27)"/><text x="38.7356%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.47%)</title><rect x="38.4075%" y="773" width="0.4684%" height="15" fill="rgb(249,103,42)"/><text x="38.6575%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="38.6417%" y="757" width="0.2342%" height="15" fill="rgb(246,81,33)"/><text x="38.8917%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::query_to_mv_query (9 samples, 0.70%)</title><rect x="38.2514%" y="789" width="0.7026%" height="15" fill="rgb(252,33,42)"/><text x="38.5014%" y="799.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="39.1881%" y="517" width="0.1561%" height="15" fill="rgb(209,212,41)"/><text x="39.4381%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.16%)</title><rect x="39.1881%" y="501" width="0.1561%" height="15" fill="rgb(207,154,6)"/><text x="39.4381%" y="511.50"></text></g><g><title>dst_release (2 samples, 0.16%)</title><rect x="39.1881%" y="485" width="0.1561%" height="15" fill="rgb(223,64,47)"/><text x="39.4381%" y="495.50"></text></g><g><title>inet_recvmsg (4 samples, 0.31%)</title><rect x="39.1881%" y="549" width="0.3123%" height="15" fill="rgb(211,161,38)"/><text x="39.4381%" y="559.50"></text></g><g><title>tcp_recvmsg (4 samples, 0.31%)</title><rect x="39.1881%" y="533" width="0.3123%" height="15" fill="rgb(219,138,40)"/><text x="39.4381%" y="543.50"></text></g><g><title>sk_wait_data (2 samples, 0.16%)</title><rect x="39.3443%" y="517" width="0.1561%" height="15" fill="rgb(241,228,46)"/><text x="39.5943%" y="527.50"></text></g><g><title>wait_woken (2 samples, 0.16%)</title><rect x="39.3443%" y="501" width="0.1561%" height="15" fill="rgb(223,209,38)"/><text x="39.5943%" y="511.50"></text></g><g><title>schedule_timeout (2 samples, 0.16%)</title><rect x="39.3443%" y="485" width="0.1561%" height="15" fill="rgb(236,164,45)"/><text x="39.5943%" y="495.50"></text></g><g><title>schedule (2 samples, 0.16%)</title><rect x="39.3443%" y="469" width="0.1561%" height="15" fill="rgb(231,15,5)"/><text x="39.5943%" y="479.50"></text></g><g><title>__schedule (2 samples, 0.16%)</title><rect x="39.3443%" y="453" width="0.1561%" height="15" fill="rgb(252,35,15)"/><text x="39.5943%" y="463.50"></text></g><g><title>do_syscall_64 (6 samples, 0.47%)</title><rect x="39.1101%" y="597" width="0.4684%" height="15" fill="rgb(248,181,18)"/><text x="39.3601%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.47%)</title><rect x="39.1101%" y="581" width="0.4684%" height="15" fill="rgb(233,39,42)"/><text x="39.3601%" y="591.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.47%)</title><rect x="39.1101%" y="565" width="0.4684%" height="15" fill="rgb(238,110,33)"/><text x="39.3601%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.62%)</title><rect x="39.0320%" y="709" width="0.6245%" height="15" fill="rgb(233,195,10)"/><text x="39.2820%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.62%)</title><rect x="39.0320%" y="693" width="0.6245%" height="15" fill="rgb(254,105,3)"/><text x="39.2820%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 0.62%)</title><rect x="39.0320%" y="677" width="0.6245%" height="15" fill="rgb(221,225,9)"/><text x="39.2820%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 0.62%)</title><rect x="39.0320%" y="661" width="0.6245%" height="15" fill="rgb(224,227,45)"/><text x="39.2820%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 0.62%)</title><rect x="39.0320%" y="645" width="0.6245%" height="15" fill="rgb(229,198,43)"/><text x="39.2820%" y="655.50"></text></g><g><title>__libc_recv (8 samples, 0.62%)</title><rect x="39.0320%" y="629" width="0.6245%" height="15" fill="rgb(206,209,35)"/><text x="39.2820%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.62%)</title><rect x="39.0320%" y="613" width="0.6245%" height="15" fill="rgb(245,195,53)"/><text x="39.2820%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (9 samples, 0.70%)</title><rect x="39.0320%" y="757" width="0.7026%" height="15" fill="rgb(240,92,26)"/><text x="39.2820%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (9 samples, 0.70%)</title><rect x="39.0320%" y="741" width="0.7026%" height="15" fill="rgb(207,40,23)"/><text x="39.2820%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.70%)</title><rect x="39.0320%" y="725" width="0.7026%" height="15" fill="rgb(223,111,35)"/><text x="39.2820%" y="735.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.16%)</title><rect x="39.9688%" y="469" width="0.1561%" height="15" fill="rgb(229,147,28)"/><text x="40.2188%" y="479.50"></text></g><g><title>tcp_ack (2 samples, 0.16%)</title><rect x="40.3591%" y="245" width="0.1561%" height="15" fill="rgb(211,29,28)"/><text x="40.6091%" y="255.50"></text></g><g><title>__tcp_push_pending_frames (9 samples, 0.70%)</title><rect x="39.8907%" y="565" width="0.7026%" height="15" fill="rgb(228,72,33)"/><text x="40.1407%" y="575.50"></text></g><g><title>tcp_write_xmit (9 samples, 0.70%)</title><rect x="39.8907%" y="549" width="0.7026%" height="15" fill="rgb(205,214,31)"/><text x="40.1407%" y="559.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.70%)</title><rect x="39.8907%" y="533" width="0.7026%" height="15" fill="rgb(224,111,15)"/><text x="40.1407%" y="543.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.62%)</title><rect x="39.9688%" y="517" width="0.6245%" height="15" fill="rgb(253,21,26)"/><text x="40.2188%" y="527.50"></text></g><g><title>ip_output (8 samples, 0.62%)</title><rect x="39.9688%" y="501" width="0.6245%" height="15" fill="rgb(245,139,43)"/><text x="40.2188%" y="511.50"></text></g><g><title>ip_finish_output2 (8 samples, 0.62%)</title><rect x="39.9688%" y="485" width="0.6245%" height="15" fill="rgb(252,170,7)"/><text x="40.2188%" y="495.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.47%)</title><rect x="40.1249%" y="469" width="0.4684%" height="15" fill="rgb(231,118,14)"/><text x="40.3749%" y="479.50"></text></g><g><title>do_softirq (6 samples, 0.47%)</title><rect x="40.1249%" y="453" width="0.4684%" height="15" fill="rgb(238,83,0)"/><text x="40.3749%" y="463.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.47%)</title><rect x="40.1249%" y="437" width="0.4684%" height="15" fill="rgb(221,39,39)"/><text x="40.3749%" y="447.50"></text></g><g><title>__do_softirq (6 samples, 0.47%)</title><rect x="40.1249%" y="421" width="0.4684%" height="15" fill="rgb(222,119,46)"/><text x="40.3749%" y="431.50"></text></g><g><title>net_rx_action (5 samples, 0.39%)</title><rect x="40.2030%" y="405" width="0.3903%" height="15" fill="rgb(222,165,49)"/><text x="40.4530%" y="415.50"></text></g><g><title>process_backlog (4 samples, 0.31%)</title><rect x="40.2810%" y="389" width="0.3123%" height="15" fill="rgb(219,113,52)"/><text x="40.5310%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.31%)</title><rect x="40.2810%" y="373" width="0.3123%" height="15" fill="rgb(214,7,15)"/><text x="40.5310%" y="383.50"></text></g><g><title>ip_rcv (4 samples, 0.31%)</title><rect x="40.2810%" y="357" width="0.3123%" height="15" fill="rgb(235,32,4)"/><text x="40.5310%" y="367.50"></text></g><g><title>ip_local_deliver (4 samples, 0.31%)</title><rect x="40.2810%" y="341" width="0.3123%" height="15" fill="rgb(238,90,54)"/><text x="40.5310%" y="351.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.31%)</title><rect x="40.2810%" y="325" width="0.3123%" height="15" fill="rgb(213,208,19)"/><text x="40.5310%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.31%)</title><rect x="40.2810%" y="309" width="0.3123%" height="15" fill="rgb(233,156,4)"/><text x="40.5310%" y="319.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.31%)</title><rect x="40.2810%" y="293" width="0.3123%" height="15" fill="rgb(207,194,5)"/><text x="40.5310%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.31%)</title><rect x="40.2810%" y="277" width="0.3123%" height="15" fill="rgb(206,111,30)"/><text x="40.5310%" y="287.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.31%)</title><rect x="40.2810%" y="261" width="0.3123%" height="15" fill="rgb(243,70,54)"/><text x="40.5310%" y="271.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (44 samples, 3.43%)</title><rect x="37.3927%" y="821" width="3.4348%" height="15" fill="rgb(242,28,8)"/><text x="37.6427%" y="831.50">dec..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (44 samples, 3.43%)</title><rect x="37.3927%" y="805" width="3.4348%" height="15" fill="rgb(219,106,18)"/><text x="37.6427%" y="815.50">dec..</text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (24 samples, 1.87%)</title><rect x="38.9539%" y="789" width="1.8735%" height="15" fill="rgb(244,222,10)"/><text x="39.2039%" y="799.50">d..</text></g><g><title>mysql::conn::Conn::_query (23 samples, 1.80%)</title><rect x="39.0320%" y="773" width="1.7955%" height="15" fill="rgb(236,179,52)"/><text x="39.2820%" y="783.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (14 samples, 1.09%)</title><rect x="39.7346%" y="757" width="1.0929%" height="15" fill="rgb(213,23,39)"/><text x="39.9846%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (14 samples, 1.09%)</title><rect x="39.7346%" y="741" width="1.0929%" height="15" fill="rgb(238,48,10)"/><text x="39.9846%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (14 samples, 1.09%)</title><rect x="39.7346%" y="725" width="1.0929%" height="15" fill="rgb(251,196,23)"/><text x="39.9846%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (14 samples, 1.09%)</title><rect x="39.7346%" y="709" width="1.0929%" height="15" fill="rgb(250,152,24)"/><text x="39.9846%" y="719.50"></text></g><g><title>__libc_send (14 samples, 1.09%)</title><rect x="39.7346%" y="693" width="1.0929%" height="15" fill="rgb(209,150,17)"/><text x="39.9846%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 1.09%)</title><rect x="39.7346%" y="677" width="1.0929%" height="15" fill="rgb(234,202,34)"/><text x="39.9846%" y="687.50"></text></g><g><title>do_syscall_64 (14 samples, 1.09%)</title><rect x="39.7346%" y="661" width="1.0929%" height="15" fill="rgb(253,148,53)"/><text x="39.9846%" y="671.50"></text></g><g><title>__x64_sys_sendto (14 samples, 1.09%)</title><rect x="39.7346%" y="645" width="1.0929%" height="15" fill="rgb(218,129,16)"/><text x="39.9846%" y="655.50"></text></g><g><title>__sys_sendto (14 samples, 1.09%)</title><rect x="39.7346%" y="629" width="1.0929%" height="15" fill="rgb(216,85,19)"/><text x="39.9846%" y="639.50"></text></g><g><title>sock_sendmsg (14 samples, 1.09%)</title><rect x="39.7346%" y="613" width="1.0929%" height="15" fill="rgb(235,228,7)"/><text x="39.9846%" y="623.50"></text></g><g><title>tcp_sendmsg (14 samples, 1.09%)</title><rect x="39.7346%" y="597" width="1.0929%" height="15" fill="rgb(245,175,0)"/><text x="39.9846%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (13 samples, 1.01%)</title><rect x="39.8126%" y="581" width="1.0148%" height="15" fill="rgb(208,168,36)"/><text x="40.0626%" y="591.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.23%)</title><rect x="40.5933%" y="565" width="0.2342%" height="15" fill="rgb(246,171,24)"/><text x="40.8433%" y="575.50"></text></g><g><title>__alloc_skb (3 samples, 0.23%)</title><rect x="40.5933%" y="549" width="0.2342%" height="15" fill="rgb(215,142,24)"/><text x="40.8433%" y="559.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.16%)</title><rect x="40.8275%" y="821" width="0.1561%" height="15" fill="rgb(250,187,7)"/><text x="41.0775%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (2 samples, 0.16%)</title><rect x="40.8275%" y="805" width="0.1561%" height="15" fill="rgb(228,66,33)"/><text x="41.0775%" y="815.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.16%)</title><rect x="40.8275%" y="789" width="0.1561%" height="15" fill="rgb(234,215,21)"/><text x="41.0775%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.16%)</title><rect x="40.8275%" y="773" width="0.1561%" height="15" fill="rgb(222,191,20)"/><text x="41.0775%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.16%)</title><rect x="40.8275%" y="757" width="0.1561%" height="15" fill="rgb(245,79,54)"/><text x="41.0775%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="41.1397%" y="805" width="0.2342%" height="15" fill="rgb(240,10,37)"/><text x="41.3897%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.23%)</title><rect x="41.1397%" y="789" width="0.2342%" height="15" fill="rgb(214,192,32)"/><text x="41.3897%" y="799.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.23%)</title><rect x="41.1397%" y="773" width="0.2342%" height="15" fill="rgb(209,36,54)"/><text x="41.3897%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="41.1397%" y="757" width="0.2342%" height="15" fill="rgb(220,10,11)"/><text x="41.3897%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="41.1397%" y="741" width="0.2342%" height="15" fill="rgb(221,106,17)"/><text x="41.3897%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="41.1397%" y="725" width="0.2342%" height="15" fill="rgb(251,142,44)"/><text x="41.3897%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.23%)</title><rect x="41.1397%" y="709" width="0.2342%" height="15" fill="rgb(238,13,15)"/><text x="41.3897%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="41.1397%" y="693" width="0.2342%" height="15" fill="rgb(208,107,27)"/><text x="41.3897%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="41.1397%" y="677" width="0.2342%" height="15" fill="rgb(205,136,37)"/><text x="41.3897%" y="687.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.16%)</title><rect x="41.3739%" y="805" width="0.1561%" height="15" fill="rgb(250,205,27)"/><text x="41.6239%" y="815.50"></text></g><g><title>lobsters::main (6 samples, 0.47%)</title><rect x="41.1397%" y="821" width="0.4684%" height="15" fill="rgb(210,80,43)"/><text x="41.3897%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.23%)</title><rect x="41.6862%" y="805" width="0.2342%" height="15" fill="rgb(247,160,36)"/><text x="41.9362%" y="815.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.23%)</title><rect x="41.6862%" y="789" width="0.2342%" height="15" fill="rgb(234,13,49)"/><text x="41.9362%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.23%)</title><rect x="41.6862%" y="773" width="0.2342%" height="15" fill="rgb(234,122,0)"/><text x="41.9362%" y="783.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.23%)</title><rect x="41.6862%" y="757" width="0.2342%" height="15" fill="rgb(207,146,38)"/><text x="41.9362%" y="767.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.23%)</title><rect x="41.6862%" y="741" width="0.2342%" height="15" fill="rgb(207,177,25)"/><text x="41.9362%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.23%)</title><rect x="41.6862%" y="725" width="0.2342%" height="15" fill="rgb(211,178,42)"/><text x="41.9362%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (3 samples, 0.23%)</title><rect x="41.6862%" y="709" width="0.2342%" height="15" fill="rgb(230,69,54)"/><text x="41.9362%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.16%)</title><rect x="41.7642%" y="693" width="0.1561%" height="15" fill="rgb(214,135,41)"/><text x="42.0142%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="41.7642%" y="677" width="0.1561%" height="15" fill="rgb(237,67,25)"/><text x="42.0142%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.16%)</title><rect x="41.7642%" y="661" width="0.1561%" height="15" fill="rgb(222,189,50)"/><text x="42.0142%" y="671.50"></text></g><g><title>__libc_send (2 samples, 0.16%)</title><rect x="41.7642%" y="645" width="0.1561%" height="15" fill="rgb(245,148,34)"/><text x="42.0142%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="41.7642%" y="629" width="0.1561%" height="15" fill="rgb(222,29,6)"/><text x="42.0142%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.16%)</title><rect x="41.7642%" y="613" width="0.1561%" height="15" fill="rgb(221,189,43)"/><text x="42.0142%" y="623.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.16%)</title><rect x="41.7642%" y="597" width="0.1561%" height="15" fill="rgb(207,36,27)"/><text x="42.0142%" y="607.50"></text></g><g><title>__sys_sendto (2 samples, 0.16%)</title><rect x="41.7642%" y="581" width="0.1561%" height="15" fill="rgb(217,90,24)"/><text x="42.0142%" y="591.50"></text></g><g><title>dequeue_entity (2 samples, 0.16%)</title><rect x="43.0133%" y="405" width="0.1561%" height="15" fill="rgb(224,66,35)"/><text x="43.2633%" y="415.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.31%)</title><rect x="42.9352%" y="421" width="0.3123%" height="15" fill="rgb(221,13,50)"/><text x="43.1852%" y="431.50"></text></g><g><title>finish_task_switch (2 samples, 0.16%)</title><rect x="43.2475%" y="421" width="0.1561%" height="15" fill="rgb(236,68,49)"/><text x="43.4975%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.16%)</title><rect x="43.2475%" y="405" width="0.1561%" height="15" fill="rgb(229,146,28)"/><text x="43.4975%" y="415.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="43.5597%" y="421" width="0.1561%" height="15" fill="rgb(225,31,38)"/><text x="43.8097%" y="431.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="43.5597%" y="405" width="0.1561%" height="15" fill="rgb(250,208,3)"/><text x="43.8097%" y="415.50"></text></g><g><title>record_times (2 samples, 0.16%)</title><rect x="43.5597%" y="389" width="0.1561%" height="15" fill="rgb(246,54,23)"/><text x="43.8097%" y="399.50"></text></g><g><title>sk_wait_data (15 samples, 1.17%)</title><rect x="42.7010%" y="501" width="1.1710%" height="15" fill="rgb(243,76,11)"/><text x="42.9510%" y="511.50"></text></g><g><title>wait_woken (14 samples, 1.09%)</title><rect x="42.7791%" y="485" width="1.0929%" height="15" fill="rgb(245,21,50)"/><text x="43.0291%" y="495.50"></text></g><g><title>schedule_timeout (14 samples, 1.09%)</title><rect x="42.7791%" y="469" width="1.0929%" height="15" fill="rgb(228,9,43)"/><text x="43.0291%" y="479.50"></text></g><g><title>schedule (14 samples, 1.09%)</title><rect x="42.7791%" y="453" width="1.0929%" height="15" fill="rgb(208,100,47)"/><text x="43.0291%" y="463.50"></text></g><g><title>__schedule (14 samples, 1.09%)</title><rect x="42.7791%" y="437" width="1.0929%" height="15" fill="rgb(232,26,8)"/><text x="43.0291%" y="447.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.16%)</title><rect x="43.8720%" y="501" width="0.1561%" height="15" fill="rgb(216,166,38)"/><text x="44.1220%" y="511.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.16%)</title><rect x="43.8720%" y="485" width="0.1561%" height="15" fill="rgb(251,202,51)"/><text x="44.1220%" y="495.50"></text></g><g><title>_copy_to_iter (2 samples, 0.16%)</title><rect x="43.8720%" y="469" width="0.1561%" height="15" fill="rgb(254,216,34)"/><text x="44.1220%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 0.16%)</title><rect x="43.8720%" y="453" width="0.1561%" height="15" fill="rgb(251,32,27)"/><text x="44.1220%" y="463.50"></text></g><g><title>page_fault (2 samples, 0.16%)</title><rect x="43.8720%" y="437" width="0.1561%" height="15" fill="rgb(208,127,28)"/><text x="44.1220%" y="447.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.16%)</title><rect x="43.8720%" y="421" width="0.1561%" height="15" fill="rgb(224,137,22)"/><text x="44.1220%" y="431.50"></text></g><g><title>handle_mm_fault (2 samples, 0.16%)</title><rect x="43.8720%" y="405" width="0.1561%" height="15" fill="rgb(254,70,32)"/><text x="44.1220%" y="415.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.16%)</title><rect x="43.8720%" y="389" width="0.1561%" height="15" fill="rgb(229,75,37)"/><text x="44.1220%" y="399.50"></text></g><g><title>tcp_cleanup_rbuf (2 samples, 0.16%)</title><rect x="44.0281%" y="501" width="0.1561%" height="15" fill="rgb(252,64,23)"/><text x="44.2781%" y="511.50"></text></g><g><title>tcp_rcv_space_adjust (2 samples, 0.16%)</title><rect x="44.1842%" y="501" width="0.1561%" height="15" fill="rgb(232,162,48)"/><text x="44.4342%" y="511.50"></text></g><g><title>inet_recvmsg (26 samples, 2.03%)</title><rect x="42.3888%" y="533" width="2.0297%" height="15" fill="rgb(246,160,12)"/><text x="42.6388%" y="543.50">i..</text></g><g><title>tcp_recvmsg (26 samples, 2.03%)</title><rect x="42.3888%" y="517" width="2.0297%" height="15" fill="rgb(247,166,0)"/><text x="42.6388%" y="527.50">t..</text></g><g><title>__x64_sys_recvfrom (27 samples, 2.11%)</title><rect x="42.3888%" y="565" width="2.1077%" height="15" fill="rgb(249,219,21)"/><text x="42.6388%" y="575.50">_..</text></g><g><title>__sys_recvfrom (27 samples, 2.11%)</title><rect x="42.3888%" y="549" width="2.1077%" height="15" fill="rgb(205,209,3)"/><text x="42.6388%" y="559.50">_..</text></g><g><title>do_syscall_64 (29 samples, 2.26%)</title><rect x="42.3888%" y="581" width="2.2639%" height="15" fill="rgb(243,44,1)"/><text x="42.6388%" y="591.50">d..</text></g><g><title>syscall_trace_enter (2 samples, 0.16%)</title><rect x="44.4965%" y="565" width="0.1561%" height="15" fill="rgb(206,159,16)"/><text x="44.7465%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 2.65%)</title><rect x="42.3107%" y="693" width="2.6542%" height="15" fill="rgb(244,77,30)"/><text x="42.5607%" y="703.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 2.65%)</title><rect x="42.3107%" y="677" width="2.6542%" height="15" fill="rgb(218,69,12)"/><text x="42.5607%" y="687.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 2.65%)</title><rect x="42.3107%" y="661" width="2.6542%" height="15" fill="rgb(212,87,7)"/><text x="42.5607%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 2.65%)</title><rect x="42.3107%" y="645" width="2.6542%" height="15" fill="rgb(245,114,25)"/><text x="42.5607%" y="655.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 2.65%)</title><rect x="42.3107%" y="629" width="2.6542%" height="15" fill="rgb(210,61,42)"/><text x="42.5607%" y="639.50">st..</text></g><g><title>__libc_recv (34 samples, 2.65%)</title><rect x="42.3107%" y="613" width="2.6542%" height="15" fill="rgb(211,52,33)"/><text x="42.5607%" y="623.50">__..</text></g><g><title>entry_SYSCALL_64 (33 samples, 2.58%)</title><rect x="42.3888%" y="597" width="2.5761%" height="15" fill="rgb(234,58,33)"/><text x="42.6388%" y="607.50">en..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.31%)</title><rect x="44.6526%" y="581" width="0.3123%" height="15" fill="rgb(220,115,36)"/><text x="44.9026%" y="591.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 3.12%)</title><rect x="42.2326%" y="709" width="3.1226%" height="15" fill="rgb(243,153,54)"/><text x="42.4826%" y="719.50">&lt;my..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.39%)</title><rect x="44.9649%" y="693" width="0.3903%" height="15" fill="rgb(251,47,18)"/><text x="45.2149%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (5 samples, 0.39%)</title><rect x="44.9649%" y="677" width="0.3903%" height="15" fill="rgb(242,102,42)"/><text x="45.2149%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.31%)</title><rect x="45.0429%" y="661" width="0.3123%" height="15" fill="rgb(234,31,38)"/><text x="45.2929%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="45.1991%" y="645" width="0.1561%" height="15" fill="rgb(221,117,51)"/><text x="45.4491%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (44 samples, 3.43%)</title><rect x="41.9984%" y="725" width="3.4348%" height="15" fill="rgb(212,20,18)"/><text x="42.2484%" y="735.50">mys..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (48 samples, 3.75%)</title><rect x="41.9204%" y="773" width="3.7471%" height="15" fill="rgb(245,133,36)"/><text x="42.1704%" y="783.50">&lt;mys..</text></g><g><title>mysql::conn::Conn::_query (48 samples, 3.75%)</title><rect x="41.9204%" y="757" width="3.7471%" height="15" fill="rgb(212,6,19)"/><text x="42.1704%" y="767.50">mysq..</text></g><g><title>mysql::conn::Conn::handle_result_set (48 samples, 3.75%)</title><rect x="41.9204%" y="741" width="3.7471%" height="15" fill="rgb(218,1,36)"/><text x="42.1704%" y="751.50">mysq..</text></g><g><title>mysql_common::packets::column_from_payload (3 samples, 0.23%)</title><rect x="45.4333%" y="725" width="0.2342%" height="15" fill="rgb(246,84,54)"/><text x="45.6833%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="46.2139%" y="693" width="0.1561%" height="15" fill="rgb(242,110,6)"/><text x="46.4639%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.47%)</title><rect x="46.3700%" y="693" width="0.4684%" height="15" fill="rgb(214,47,5)"/><text x="46.6200%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (6 samples, 0.47%)</title><rect x="46.3700%" y="677" width="0.4684%" height="15" fill="rgb(218,159,25)"/><text x="46.6200%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (6 samples, 0.47%)</title><rect x="46.3700%" y="661" width="0.4684%" height="15" fill="rgb(215,211,28)"/><text x="46.6200%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (6 samples, 0.47%)</title><rect x="46.3700%" y="645" width="0.4684%" height="15" fill="rgb(238,59,32)"/><text x="46.6200%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="46.6042%" y="629" width="0.2342%" height="15" fill="rgb(226,82,3)"/><text x="46.8542%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.16%)</title><rect x="46.6823%" y="613" width="0.1561%" height="15" fill="rgb(240,164,32)"/><text x="46.9323%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 0.86%)</title><rect x="46.0578%" y="709" width="0.8587%" height="15" fill="rgb(232,46,7)"/><text x="46.3078%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="47.0726%" y="693" width="0.2342%" height="15" fill="rgb(229,129,53)"/><text x="47.3226%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (20 samples, 1.56%)</title><rect x="45.9016%" y="741" width="1.5613%" height="15" fill="rgb(234,188,29)"/><text x="46.1516%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (20 samples, 1.56%)</title><rect x="45.9016%" y="725" width="1.5613%" height="15" fill="rgb(246,141,4)"/><text x="46.1516%" y="735.50"></text></g><g><title>mysql_common::value::read_text_values (6 samples, 0.47%)</title><rect x="46.9945%" y="709" width="0.4684%" height="15" fill="rgb(229,23,39)"/><text x="47.2445%" y="719.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.16%)</title><rect x="47.3068%" y="693" width="0.1561%" height="15" fill="rgb(206,12,3)"/><text x="47.5568%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.80%)</title><rect x="45.8236%" y="757" width="1.7955%" height="15" fill="rgb(252,226,20)"/><text x="46.0736%" y="767.50">&lt;..</text></g><g><title>decor::helpers::answer_rows (25 samples, 1.95%)</title><rect x="45.7455%" y="773" width="1.9516%" height="15" fill="rgb(216,123,35)"/><text x="45.9955%" y="783.50">d..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.23%)</title><rect x="47.8532%" y="677" width="0.2342%" height="15" fill="rgb(212,68,40)"/><text x="48.1032%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="47.8532%" y="661" width="0.2342%" height="15" fill="rgb(254,125,32)"/><text x="48.1032%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="47.9313%" y="645" width="0.1561%" height="15" fill="rgb(253,97,22)"/><text x="48.1813%" y="655.50"></text></g><g><title>dst_release (2 samples, 0.16%)</title><rect x="48.3216%" y="437" width="0.1561%" height="15" fill="rgb(241,101,14)"/><text x="48.5716%" y="447.50"></text></g><g><title>__kfree_skb (3 samples, 0.23%)</title><rect x="48.3216%" y="469" width="0.2342%" height="15" fill="rgb(238,103,29)"/><text x="48.5716%" y="479.50"></text></g><g><title>skb_release_head_state (3 samples, 0.23%)</title><rect x="48.3216%" y="453" width="0.2342%" height="15" fill="rgb(233,195,47)"/><text x="48.5716%" y="463.50"></text></g><g><title>update_curr (2 samples, 0.16%)</title><rect x="49.0242%" y="357" width="0.1561%" height="15" fill="rgb(246,218,30)"/><text x="49.2742%" y="367.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.39%)</title><rect x="48.8681%" y="389" width="0.3903%" height="15" fill="rgb(219,145,47)"/><text x="49.1181%" y="399.50"></text></g><g><title>dequeue_entity (5 samples, 0.39%)</title><rect x="48.8681%" y="373" width="0.3903%" height="15" fill="rgb(243,12,26)"/><text x="49.1181%" y="383.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="49.3365%" y="389" width="0.1561%" height="15" fill="rgb(214,87,16)"/><text x="49.5865%" y="399.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="49.3365%" y="373" width="0.1561%" height="15" fill="rgb(208,99,42)"/><text x="49.5865%" y="383.50"></text></g><g><title>sk_wait_data (12 samples, 0.94%)</title><rect x="48.6339%" y="469" width="0.9368%" height="15" fill="rgb(253,99,2)"/><text x="48.8839%" y="479.50"></text></g><g><title>wait_woken (11 samples, 0.86%)</title><rect x="48.7119%" y="453" width="0.8587%" height="15" fill="rgb(220,168,23)"/><text x="48.9619%" y="463.50"></text></g><g><title>schedule_timeout (10 samples, 0.78%)</title><rect x="48.7900%" y="437" width="0.7806%" height="15" fill="rgb(242,38,24)"/><text x="49.0400%" y="447.50"></text></g><g><title>schedule (10 samples, 0.78%)</title><rect x="48.7900%" y="421" width="0.7806%" height="15" fill="rgb(225,182,9)"/><text x="49.0400%" y="431.50"></text></g><g><title>__schedule (10 samples, 0.78%)</title><rect x="48.7900%" y="405" width="0.7806%" height="15" fill="rgb(243,178,37)"/><text x="49.0400%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 1.41%)</title><rect x="48.2436%" y="533" width="1.4052%" height="15" fill="rgb(232,139,19)"/><text x="48.4936%" y="543.50"></text></g><g><title>__sys_recvfrom (18 samples, 1.41%)</title><rect x="48.2436%" y="517" width="1.4052%" height="15" fill="rgb(225,201,24)"/><text x="48.4936%" y="527.50"></text></g><g><title>inet_recvmsg (18 samples, 1.41%)</title><rect x="48.2436%" y="501" width="1.4052%" height="15" fill="rgb(221,47,46)"/><text x="48.4936%" y="511.50"></text></g><g><title>tcp_recvmsg (18 samples, 1.41%)</title><rect x="48.2436%" y="485" width="1.4052%" height="15" fill="rgb(249,23,13)"/><text x="48.4936%" y="495.50"></text></g><g><title>do_syscall_64 (20 samples, 1.56%)</title><rect x="48.1655%" y="549" width="1.5613%" height="15" fill="rgb(219,9,5)"/><text x="48.4155%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 1.87%)</title><rect x="48.1655%" y="565" width="1.8735%" height="15" fill="rgb(254,171,16)"/><text x="48.4155%" y="575.50">e..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.31%)</title><rect x="49.7268%" y="549" width="0.3123%" height="15" fill="rgb(230,171,20)"/><text x="49.9768%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 1.95%)</title><rect x="48.1655%" y="661" width="1.9516%" height="15" fill="rgb(210,71,41)"/><text x="48.4155%" y="671.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 1.95%)</title><rect x="48.1655%" y="645" width="1.9516%" height="15" fill="rgb(206,173,20)"/><text x="48.4155%" y="655.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 1.95%)</title><rect x="48.1655%" y="629" width="1.9516%" height="15" fill="rgb(233,88,34)"/><text x="48.4155%" y="639.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 1.95%)</title><rect x="48.1655%" y="613" width="1.9516%" height="15" fill="rgb(223,209,46)"/><text x="48.4155%" y="623.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 1.95%)</title><rect x="48.1655%" y="597" width="1.9516%" height="15" fill="rgb(250,43,18)"/><text x="48.4155%" y="607.50">s..</text></g><g><title>__libc_recv (25 samples, 1.95%)</title><rect x="48.1655%" y="581" width="1.9516%" height="15" fill="rgb(208,13,10)"/><text x="48.4155%" y="591.50">_..</text></g><g><title>mysql::conn::Conn::read_packet (32 samples, 2.50%)</title><rect x="47.7752%" y="693" width="2.4980%" height="15" fill="rgb(212,200,36)"/><text x="48.0252%" y="703.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 2.19%)</title><rect x="48.0874%" y="677" width="2.1858%" height="15" fill="rgb(225,90,30)"/><text x="48.3374%" y="687.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="50.1171%" y="661" width="0.1561%" height="15" fill="rgb(236,182,39)"/><text x="50.3671%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="50.1171%" y="645" width="0.1561%" height="15" fill="rgb(212,144,35)"/><text x="50.3671%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="50.1171%" y="629" width="0.1561%" height="15" fill="rgb(228,63,44)"/><text x="50.3671%" y="639.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (33 samples, 2.58%)</title><rect x="47.7752%" y="709" width="2.5761%" height="15" fill="rgb(228,109,6)"/><text x="48.0252%" y="719.50">my..</text></g><g><title>enqueue_to_backlog (2 samples, 0.16%)</title><rect x="51.7564%" y="341" width="0.1561%" height="15" fill="rgb(238,117,24)"/><text x="52.0064%" y="351.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.39%)</title><rect x="51.6003%" y="421" width="0.3903%" height="15" fill="rgb(242,26,26)"/><text x="51.8503%" y="431.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.31%)</title><rect x="51.6784%" y="405" width="0.3123%" height="15" fill="rgb(221,92,48)"/><text x="51.9284%" y="415.50"></text></g><g><title>loopback_xmit (4 samples, 0.31%)</title><rect x="51.6784%" y="389" width="0.3123%" height="15" fill="rgb(209,209,32)"/><text x="51.9284%" y="399.50"></text></g><g><title>netif_rx (3 samples, 0.23%)</title><rect x="51.7564%" y="373" width="0.2342%" height="15" fill="rgb(221,70,22)"/><text x="52.0064%" y="383.50"></text></g><g><title>netif_rx_internal (3 samples, 0.23%)</title><rect x="51.7564%" y="357" width="0.2342%" height="15" fill="rgb(248,145,5)"/><text x="52.0064%" y="367.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.16%)</title><rect x="52.1468%" y="309" width="0.1561%" height="15" fill="rgb(226,116,26)"/><text x="52.3968%" y="319.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="52.9274%" y="101" width="0.1561%" height="15" fill="rgb(244,5,17)"/><text x="53.1774%" y="111.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="52.9274%" y="85" width="0.1561%" height="15" fill="rgb(252,159,33)"/><text x="53.1774%" y="95.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="52.9274%" y="117" width="0.2342%" height="15" fill="rgb(206,71,0)"/><text x="53.1774%" y="127.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="53.1616%" y="117" width="0.2342%" height="15" fill="rgb(233,118,54)"/><text x="53.4116%" y="127.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="53.1616%" y="101" width="0.2342%" height="15" fill="rgb(234,83,48)"/><text x="53.4116%" y="111.50"></text></g><g><title>update_load_avg (2 samples, 0.16%)</title><rect x="53.2397%" y="85" width="0.1561%" height="15" fill="rgb(228,3,54)"/><text x="53.4897%" y="95.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.23%)</title><rect x="53.3958%" y="117" width="0.2342%" height="15" fill="rgb(226,155,13)"/><text x="53.6458%" y="127.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.16%)</title><rect x="53.6300%" y="117" width="0.1561%" height="15" fill="rgb(241,28,37)"/><text x="53.8800%" y="127.50"></text></g><g><title>check_preempt_curr (2 samples, 0.16%)</title><rect x="53.6300%" y="101" width="0.1561%" height="15" fill="rgb(233,93,10)"/><text x="53.8800%" y="111.50"></text></g><g><title>resched_curr (2 samples, 0.16%)</title><rect x="53.6300%" y="85" width="0.1561%" height="15" fill="rgb(225,113,19)"/><text x="53.8800%" y="95.50"></text></g><g><title>sock_def_readable (13 samples, 1.01%)</title><rect x="52.8493%" y="197" width="1.0148%" height="15" fill="rgb(241,2,18)"/><text x="53.0993%" y="207.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.94%)</title><rect x="52.9274%" y="181" width="0.9368%" height="15" fill="rgb(228,207,21)"/><text x="53.1774%" y="191.50"></text></g><g><title>__wake_up_common (12 samples, 0.94%)</title><rect x="52.9274%" y="165" width="0.9368%" height="15" fill="rgb(213,211,35)"/><text x="53.1774%" y="175.50"></text></g><g><title>pollwake (12 samples, 0.94%)</title><rect x="52.9274%" y="149" width="0.9368%" height="15" fill="rgb(209,83,10)"/><text x="53.1774%" y="159.50"></text></g><g><title>try_to_wake_up (12 samples, 0.94%)</title><rect x="52.9274%" y="133" width="0.9368%" height="15" fill="rgb(209,164,1)"/><text x="53.1774%" y="143.50"></text></g><g><title>tcp_ack (4 samples, 0.31%)</title><rect x="53.8642%" y="197" width="0.3123%" height="15" fill="rgb(213,184,43)"/><text x="54.1142%" y="207.50"></text></g><g><title>ip_local_deliver (24 samples, 1.87%)</title><rect x="52.3810%" y="293" width="1.8735%" height="15" fill="rgb(231,61,34)"/><text x="52.6310%" y="303.50">i..</text></g><g><title>ip_local_deliver_finish (24 samples, 1.87%)</title><rect x="52.3810%" y="277" width="1.8735%" height="15" fill="rgb(235,75,3)"/><text x="52.6310%" y="287.50">i..</text></g><g><title>ip_protocol_deliver_rcu (24 samples, 1.87%)</title><rect x="52.3810%" y="261" width="1.8735%" height="15" fill="rgb(220,106,47)"/><text x="52.6310%" y="271.50">i..</text></g><g><title>tcp_v4_rcv (23 samples, 1.80%)</title><rect x="52.4590%" y="245" width="1.7955%" height="15" fill="rgb(210,196,33)"/><text x="52.7090%" y="255.50">t..</text></g><g><title>tcp_v4_do_rcv (20 samples, 1.56%)</title><rect x="52.6932%" y="229" width="1.5613%" height="15" fill="rgb(229,154,42)"/><text x="52.9432%" y="239.50"></text></g><g><title>tcp_rcv_established (20 samples, 1.56%)</title><rect x="52.6932%" y="213" width="1.5613%" height="15" fill="rgb(228,114,26)"/><text x="52.9432%" y="223.50"></text></g><g><title>__ip_queue_xmit (40 samples, 3.12%)</title><rect x="51.2100%" y="469" width="3.1226%" height="15" fill="rgb(208,144,1)"/><text x="51.4600%" y="479.50">__i..</text></g><g><title>ip_output (37 samples, 2.89%)</title><rect x="51.4442%" y="453" width="2.8884%" height="15" fill="rgb(239,112,37)"/><text x="51.6942%" y="463.50">ip..</text></g><g><title>ip_finish_output2 (36 samples, 2.81%)</title><rect x="51.5222%" y="437" width="2.8103%" height="15" fill="rgb(210,96,50)"/><text x="51.7722%" y="447.50">ip..</text></g><g><title>__local_bh_enable_ip (30 samples, 2.34%)</title><rect x="51.9906%" y="421" width="2.3419%" height="15" fill="rgb(222,178,2)"/><text x="52.2406%" y="431.50">_..</text></g><g><title>do_softirq (30 samples, 2.34%)</title><rect x="51.9906%" y="405" width="2.3419%" height="15" fill="rgb(226,74,18)"/><text x="52.2406%" y="415.50">d..</text></g><g><title>do_softirq_own_stack (30 samples, 2.34%)</title><rect x="51.9906%" y="389" width="2.3419%" height="15" fill="rgb(225,67,54)"/><text x="52.2406%" y="399.50">d..</text></g><g><title>__do_softirq (30 samples, 2.34%)</title><rect x="51.9906%" y="373" width="2.3419%" height="15" fill="rgb(251,92,32)"/><text x="52.2406%" y="383.50">_..</text></g><g><title>net_rx_action (29 samples, 2.26%)</title><rect x="52.0687%" y="357" width="2.2639%" height="15" fill="rgb(228,149,22)"/><text x="52.3187%" y="367.50">n..</text></g><g><title>process_backlog (28 samples, 2.19%)</title><rect x="52.1468%" y="341" width="2.1858%" height="15" fill="rgb(243,54,13)"/><text x="52.3968%" y="351.50">p..</text></g><g><title>__netif_receive_skb_one_core (28 samples, 2.19%)</title><rect x="52.1468%" y="325" width="2.1858%" height="15" fill="rgb(243,180,28)"/><text x="52.3968%" y="335.50">_..</text></g><g><title>ip_rcv (26 samples, 2.03%)</title><rect x="52.3029%" y="309" width="2.0297%" height="15" fill="rgb(208,167,24)"/><text x="52.5529%" y="319.50">i..</text></g><g><title>__tcp_transmit_skb (42 samples, 3.28%)</title><rect x="51.2100%" y="485" width="3.2787%" height="15" fill="rgb(245,73,45)"/><text x="51.4600%" y="495.50">__t..</text></g><g><title>__tcp_push_pending_frames (44 samples, 3.43%)</title><rect x="51.1319%" y="517" width="3.4348%" height="15" fill="rgb(237,203,48)"/><text x="51.3819%" y="527.50">__t..</text></g><g><title>tcp_write_xmit (44 samples, 3.43%)</title><rect x="51.1319%" y="501" width="3.4348%" height="15" fill="rgb(211,197,16)"/><text x="51.3819%" y="511.50">tcp..</text></g><g><title>__x64_sys_sendto (57 samples, 4.45%)</title><rect x="50.5074%" y="597" width="4.4496%" height="15" fill="rgb(243,99,51)"/><text x="50.7574%" y="607.50">__x64..</text></g><g><title>__sys_sendto (57 samples, 4.45%)</title><rect x="50.5074%" y="581" width="4.4496%" height="15" fill="rgb(215,123,29)"/><text x="50.7574%" y="591.50">__sys..</text></g><g><title>sock_sendmsg (56 samples, 4.37%)</title><rect x="50.5855%" y="565" width="4.3716%" height="15" fill="rgb(239,186,37)"/><text x="50.8355%" y="575.50">sock_..</text></g><g><title>tcp_sendmsg (55 samples, 4.29%)</title><rect x="50.6635%" y="549" width="4.2935%" height="15" fill="rgb(252,136,39)"/><text x="50.9135%" y="559.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (53 samples, 4.14%)</title><rect x="50.8197%" y="533" width="4.1374%" height="15" fill="rgb(223,213,32)"/><text x="51.0697%" y="543.50">tcp_s..</text></g><g><title>sk_stream_alloc_skb (5 samples, 0.39%)</title><rect x="54.5667%" y="517" width="0.3903%" height="15" fill="rgb(233,115,5)"/><text x="54.8167%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.31%)</title><rect x="54.6448%" y="501" width="0.3123%" height="15" fill="rgb(207,226,44)"/><text x="54.8948%" y="511.50"></text></g><g><title>do_syscall_64 (59 samples, 4.61%)</title><rect x="50.4294%" y="613" width="4.6058%" height="15" fill="rgb(208,126,0)"/><text x="50.6794%" y="623.50">do_sy..</text></g><g><title>mysql::conn::Conn::start_transaction (99 samples, 7.73%)</title><rect x="47.6971%" y="773" width="7.7283%" height="15" fill="rgb(244,66,21)"/><text x="47.9471%" y="783.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::_start_transaction (99 samples, 7.73%)</title><rect x="47.6971%" y="757" width="7.7283%" height="15" fill="rgb(222,97,12)"/><text x="47.9471%" y="767.50">mysql::conn..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (99 samples, 7.73%)</title><rect x="47.6971%" y="741" width="7.7283%" height="15" fill="rgb(219,213,19)"/><text x="47.9471%" y="751.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::_query (98 samples, 7.65%)</title><rect x="47.7752%" y="725" width="7.6503%" height="15" fill="rgb(252,169,30)"/><text x="48.0252%" y="735.50">mysql::con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (65 samples, 5.07%)</title><rect x="50.3513%" y="709" width="5.0742%" height="15" fill="rgb(206,32,51)"/><text x="50.6013%" y="719.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (65 samples, 5.07%)</title><rect x="50.3513%" y="693" width="5.0742%" height="15" fill="rgb(250,172,42)"/><text x="50.6013%" y="703.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (65 samples, 5.07%)</title><rect x="50.3513%" y="677" width="5.0742%" height="15" fill="rgb(209,34,43)"/><text x="50.6013%" y="687.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (65 samples, 5.07%)</title><rect x="50.3513%" y="661" width="5.0742%" height="15" fill="rgb(223,11,35)"/><text x="50.6013%" y="671.50">std::s..</text></g><g><title>__libc_send (65 samples, 5.07%)</title><rect x="50.3513%" y="645" width="5.0742%" height="15" fill="rgb(251,219,26)"/><text x="50.6013%" y="655.50">__libc..</text></g><g><title>entry_SYSCALL_64 (64 samples, 5.00%)</title><rect x="50.4294%" y="629" width="4.9961%" height="15" fill="rgb(231,119,3)"/><text x="50.6794%" y="639.50">entry_..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.39%)</title><rect x="55.0351%" y="613" width="0.3903%" height="15" fill="rgb(216,97,11)"/><text x="55.2851%" y="623.50"></text></g><g><title>update_curr (2 samples, 0.16%)</title><rect x="56.6745%" y="373" width="0.1561%" height="15" fill="rgb(223,59,9)"/><text x="56.9245%" y="383.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.55%)</title><rect x="56.5964%" y="405" width="0.5464%" height="15" fill="rgb(233,93,31)"/><text x="56.8464%" y="415.50"></text></g><g><title>dequeue_entity (7 samples, 0.55%)</title><rect x="56.5964%" y="389" width="0.5464%" height="15" fill="rgb(239,81,33)"/><text x="56.8464%" y="399.50"></text></g><g><title>update_load_avg (4 samples, 0.31%)</title><rect x="56.8306%" y="373" width="0.3123%" height="15" fill="rgb(213,120,34)"/><text x="57.0806%" y="383.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.23%)</title><rect x="56.9087%" y="357" width="0.2342%" height="15" fill="rgb(243,49,53)"/><text x="57.1587%" y="367.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="57.2990%" y="405" width="0.2342%" height="15" fill="rgb(247,216,33)"/><text x="57.5490%" y="415.50"></text></g><g><title>psi_group_change (3 samples, 0.23%)</title><rect x="57.2990%" y="389" width="0.2342%" height="15" fill="rgb(226,26,14)"/><text x="57.5490%" y="399.50"></text></g><g><title>sk_wait_data (21 samples, 1.64%)</title><rect x="56.0500%" y="485" width="1.6393%" height="15" fill="rgb(215,49,53)"/><text x="56.3000%" y="495.50"></text></g><g><title>wait_woken (19 samples, 1.48%)</title><rect x="56.2061%" y="469" width="1.4832%" height="15" fill="rgb(245,162,40)"/><text x="56.4561%" y="479.50"></text></g><g><title>schedule_timeout (19 samples, 1.48%)</title><rect x="56.2061%" y="453" width="1.4832%" height="15" fill="rgb(229,68,17)"/><text x="56.4561%" y="463.50"></text></g><g><title>schedule (18 samples, 1.41%)</title><rect x="56.2842%" y="437" width="1.4052%" height="15" fill="rgb(213,182,10)"/><text x="56.5342%" y="447.50"></text></g><g><title>__schedule (17 samples, 1.33%)</title><rect x="56.3622%" y="421" width="1.3271%" height="15" fill="rgb(245,125,30)"/><text x="56.6122%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (26 samples, 2.03%)</title><rect x="55.8938%" y="549" width="2.0297%" height="15" fill="rgb(232,202,2)"/><text x="56.1438%" y="559.50">_..</text></g><g><title>__sys_recvfrom (26 samples, 2.03%)</title><rect x="55.8938%" y="533" width="2.0297%" height="15" fill="rgb(237,140,51)"/><text x="56.1438%" y="543.50">_..</text></g><g><title>inet_recvmsg (25 samples, 1.95%)</title><rect x="55.9719%" y="517" width="1.9516%" height="15" fill="rgb(236,157,25)"/><text x="56.2219%" y="527.50">i..</text></g><g><title>tcp_recvmsg (25 samples, 1.95%)</title><rect x="55.9719%" y="501" width="1.9516%" height="15" fill="rgb(219,209,0)"/><text x="56.2219%" y="511.50">t..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.23%)</title><rect x="57.6893%" y="485" width="0.2342%" height="15" fill="rgb(240,116,54)"/><text x="57.9393%" y="495.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.23%)</title><rect x="57.6893%" y="469" width="0.2342%" height="15" fill="rgb(216,10,36)"/><text x="57.9393%" y="479.50"></text></g><g><title>do_syscall_64 (27 samples, 2.11%)</title><rect x="55.8938%" y="565" width="2.1077%" height="15" fill="rgb(222,72,44)"/><text x="56.1438%" y="575.50">d..</text></g><g><title>entry_SYSCALL_64 (32 samples, 2.50%)</title><rect x="55.8158%" y="581" width="2.4980%" height="15" fill="rgb(232,159,9)"/><text x="56.0658%" y="591.50">en..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.31%)</title><rect x="58.0016%" y="565" width="0.3123%" height="15" fill="rgb(210,39,32)"/><text x="58.2516%" y="575.50"></text></g><g><title>__libc_recv (35 samples, 2.73%)</title><rect x="55.7377%" y="597" width="2.7322%" height="15" fill="rgb(216,194,45)"/><text x="55.9877%" y="607.50">__..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.16%)</title><rect x="58.3138%" y="581" width="0.1561%" height="15" fill="rgb(218,18,35)"/><text x="58.5638%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (36 samples, 2.81%)</title><rect x="55.7377%" y="677" width="2.8103%" height="15" fill="rgb(207,83,51)"/><text x="55.9877%" y="687.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (36 samples, 2.81%)</title><rect x="55.7377%" y="661" width="2.8103%" height="15" fill="rgb(225,63,43)"/><text x="55.9877%" y="671.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (36 samples, 2.81%)</title><rect x="55.7377%" y="645" width="2.8103%" height="15" fill="rgb(207,57,36)"/><text x="55.9877%" y="655.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (36 samples, 2.81%)</title><rect x="55.7377%" y="629" width="2.8103%" height="15" fill="rgb(216,99,33)"/><text x="55.9877%" y="639.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (36 samples, 2.81%)</title><rect x="55.7377%" y="613" width="2.8103%" height="15" fill="rgb(225,42,16)"/><text x="55.9877%" y="623.50">st..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 3.36%)</title><rect x="55.7377%" y="693" width="3.3568%" height="15" fill="rgb(220,201,45)"/><text x="55.9877%" y="703.50">&lt;my..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (7 samples, 0.55%)</title><rect x="58.5480%" y="677" width="0.5464%" height="15" fill="rgb(225,33,4)"/><text x="58.7980%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (5 samples, 0.39%)</title><rect x="58.7041%" y="661" width="0.3903%" height="15" fill="rgb(224,33,50)"/><text x="58.9541%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="58.9383%" y="645" width="0.1561%" height="15" fill="rgb(246,198,51)"/><text x="59.1883%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="58.9383%" y="629" width="0.1561%" height="15" fill="rgb(205,22,4)"/><text x="59.1883%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.16%)</title><rect x="58.9383%" y="613" width="0.1561%" height="15" fill="rgb(206,3,8)"/><text x="59.1883%" y="623.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (221 samples, 17.25%)</title><rect x="41.9204%" y="789" width="17.2521%" height="15" fill="rgb(251,23,15)"/><text x="42.1704%" y="799.50">decor::query_transformer::Q..</text></g><g><title>mysql::conn::transaction::Transaction::commit (48 samples, 3.75%)</title><rect x="55.4254%" y="773" width="3.7471%" height="15" fill="rgb(252,88,28)"/><text x="55.6754%" y="783.50">mysq..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (48 samples, 3.75%)</title><rect x="55.4254%" y="757" width="3.7471%" height="15" fill="rgb(212,127,14)"/><text x="55.6754%" y="767.50">mysq..</text></g><g><title>mysql::conn::Conn::_query (48 samples, 3.75%)</title><rect x="55.4254%" y="741" width="3.7471%" height="15" fill="rgb(247,145,37)"/><text x="55.6754%" y="751.50">mysq..</text></g><g><title>mysql::conn::Conn::handle_result_set (48 samples, 3.75%)</title><rect x="55.4254%" y="725" width="3.7471%" height="15" fill="rgb(209,117,53)"/><text x="55.6754%" y="735.50">mysq..</text></g><g><title>mysql::conn::Conn::read_packet (46 samples, 3.59%)</title><rect x="55.5816%" y="709" width="3.5909%" height="15" fill="rgb(212,90,42)"/><text x="55.8316%" y="719.50">mysq..</text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.1725%" y="741" width="0.1561%" height="15" fill="rgb(218,164,37)"/><text x="59.4225%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.1725%" y="725" width="0.1561%" height="15" fill="rgb(246,65,34)"/><text x="59.4225%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="59.1725%" y="757" width="0.2342%" height="15" fill="rgb(231,100,33)"/><text x="59.4225%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="59.1725%" y="773" width="0.3123%" height="15" fill="rgb(228,126,14)"/><text x="59.4225%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="59.7190%" y="741" width="0.2342%" height="15" fill="rgb(215,173,21)"/><text x="59.9690%" y="751.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.23%)</title><rect x="59.7190%" y="725" width="0.2342%" height="15" fill="rgb(210,6,40)"/><text x="59.9690%" y="735.50"></text></g><g><title>_int_realloc (3 samples, 0.23%)</title><rect x="59.7190%" y="709" width="0.2342%" height="15" fill="rgb(212,48,18)"/><text x="59.9690%" y="719.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="59.7190%" y="693" width="0.2342%" height="15" fill="rgb(230,214,11)"/><text x="59.9690%" y="703.50"></text></g><g><title>malloc_consolidate (2 samples, 0.16%)</title><rect x="59.7970%" y="677" width="0.1561%" height="15" fill="rgb(254,105,39)"/><text x="60.0470%" y="687.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (239 samples, 18.66%)</title><rect x="41.6081%" y="821" width="18.6573%" height="15" fill="rgb(245,158,5)"/><text x="41.8581%" y="831.50">msql_srv::MysqlIntermediary&lt;B..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (235 samples, 18.35%)</title><rect x="41.9204%" y="805" width="18.3450%" height="15" fill="rgb(249,208,11)"/><text x="42.1704%" y="815.50">&lt;decor::Shim as msql_srv::Mys..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (14 samples, 1.09%)</title><rect x="59.1725%" y="789" width="1.0929%" height="15" fill="rgb(210,39,28)"/><text x="59.4225%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (10 samples, 0.78%)</title><rect x="59.4848%" y="773" width="0.7806%" height="15" fill="rgb(211,56,53)"/><text x="59.7348%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (9 samples, 0.70%)</title><rect x="59.5628%" y="757" width="0.7026%" height="15" fill="rgb(226,201,30)"/><text x="59.8128%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.23%)</title><rect x="60.0312%" y="741" width="0.2342%" height="15" fill="rgb(239,101,34)"/><text x="60.2812%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.16%)</title><rect x="60.4996%" y="821" width="0.1561%" height="15" fill="rgb(226,209,5)"/><text x="60.7496%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (16 samples, 1.25%)</title><rect x="61.1241%" y="741" width="1.2490%" height="15" fill="rgb(250,105,47)"/><text x="61.3741%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::expected (16 samples, 1.25%)</title><rect x="61.1241%" y="725" width="1.2490%" height="15" fill="rgb(230,72,3)"/><text x="61.3741%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 1.25%)</title><rect x="61.1241%" y="709" width="1.2490%" height="15" fill="rgb(232,218,39)"/><text x="61.3741%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 1.25%)</title><rect x="61.1241%" y="693" width="1.2490%" height="15" fill="rgb(248,166,6)"/><text x="61.3741%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 1.25%)</title><rect x="61.1241%" y="677" width="1.2490%" height="15" fill="rgb(247,89,20)"/><text x="61.3741%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 1.25%)</title><rect x="61.1241%" y="661" width="1.2490%" height="15" fill="rgb(248,130,54)"/><text x="61.3741%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 1.25%)</title><rect x="61.1241%" y="645" width="1.2490%" height="15" fill="rgb(234,196,4)"/><text x="61.3741%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 1.25%)</title><rect x="61.1241%" y="629" width="1.2490%" height="15" fill="rgb(250,143,31)"/><text x="61.3741%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (16 samples, 1.25%)</title><rect x="61.1241%" y="613" width="1.2490%" height="15" fill="rgb(211,110,34)"/><text x="61.3741%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 1.25%)</title><rect x="61.1241%" y="597" width="1.2490%" height="15" fill="rgb(215,124,48)"/><text x="61.3741%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 1.25%)</title><rect x="61.1241%" y="581" width="1.2490%" height="15" fill="rgb(216,46,13)"/><text x="61.3741%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (18 samples, 1.41%)</title><rect x="61.1241%" y="789" width="1.4052%" height="15" fill="rgb(205,184,25)"/><text x="61.3741%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 1.41%)</title><rect x="61.1241%" y="773" width="1.4052%" height="15" fill="rgb(228,1,10)"/><text x="61.3741%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (18 samples, 1.41%)</title><rect x="61.1241%" y="757" width="1.4052%" height="15" fill="rgb(213,116,27)"/><text x="61.3741%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.16%)</title><rect x="62.3731%" y="741" width="0.1561%" height="15" fill="rgb(241,95,50)"/><text x="62.6231%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.16%)</title><rect x="62.5293%" y="773" width="0.1561%" height="15" fill="rgb(238,48,32)"/><text x="62.7793%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.16%)</title><rect x="62.5293%" y="757" width="0.1561%" height="15" fill="rgb(235,113,49)"/><text x="62.7793%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (23 samples, 1.80%)</title><rect x="61.1241%" y="821" width="1.7955%" height="15" fill="rgb(205,127,43)"/><text x="61.3741%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (23 samples, 1.80%)</title><rect x="61.1241%" y="805" width="1.7955%" height="15" fill="rgb(250,162,2)"/><text x="61.3741%" y="815.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_select (5 samples, 0.39%)</title><rect x="62.5293%" y="789" width="0.3903%" height="15" fill="rgb(220,13,41)"/><text x="62.7793%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (3 samples, 0.23%)</title><rect x="62.6854%" y="773" width="0.2342%" height="15" fill="rgb(249,221,25)"/><text x="62.9354%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_factor (3 samples, 0.23%)</title><rect x="62.6854%" y="757" width="0.2342%" height="15" fill="rgb(215,208,19)"/><text x="62.9354%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.16%)</title><rect x="62.9196%" y="821" width="0.1561%" height="15" fill="rgb(236,175,2)"/><text x="63.1696%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.16%)</title><rect x="62.9196%" y="805" width="0.1561%" height="15" fill="rgb(241,52,2)"/><text x="63.1696%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.16%)</title><rect x="62.9196%" y="789" width="0.1561%" height="15" fill="rgb(248,140,14)"/><text x="63.1696%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.16%)</title><rect x="62.9196%" y="773" width="0.1561%" height="15" fill="rgb(253,22,42)"/><text x="63.1696%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.16%)</title><rect x="62.9196%" y="757" width="0.1561%" height="15" fill="rgb(234,61,47)"/><text x="63.1696%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.16%)</title><rect x="62.9196%" y="741" width="0.1561%" height="15" fill="rgb(208,226,15)"/><text x="63.1696%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.9196%" y="725" width="0.1561%" height="15" fill="rgb(217,221,4)"/><text x="63.1696%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="62.9196%" y="709" width="0.1561%" height="15" fill="rgb(212,174,34)"/><text x="63.1696%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.16%)</title><rect x="62.9196%" y="693" width="0.1561%" height="15" fill="rgb(253,83,4)"/><text x="63.1696%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="62.9196%" y="677" width="0.1561%" height="15" fill="rgb(250,195,49)"/><text x="63.1696%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="62.9196%" y="661" width="0.1561%" height="15" fill="rgb(241,192,25)"/><text x="63.1696%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="62.9196%" y="645" width="0.1561%" height="15" fill="rgb(208,124,10)"/><text x="63.1696%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="62.9196%" y="629" width="0.1561%" height="15" fill="rgb(222,33,0)"/><text x="63.1696%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="62.9196%" y="613" width="0.1561%" height="15" fill="rgb(234,209,28)"/><text x="63.1696%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="62.9196%" y="597" width="0.1561%" height="15" fill="rgb(224,11,23)"/><text x="63.1696%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="62.9196%" y="581" width="0.1561%" height="15" fill="rgb(232,99,1)"/><text x="63.1696%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="62.9196%" y="565" width="0.1561%" height="15" fill="rgb(237,95,45)"/><text x="63.1696%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="62.9196%" y="549" width="0.1561%" height="15" fill="rgb(208,109,11)"/><text x="63.1696%" y="559.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="62.9196%" y="533" width="0.1561%" height="15" fill="rgb(216,190,48)"/><text x="63.1696%" y="543.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.16%)</title><rect x="63.0757%" y="821" width="0.1561%" height="15" fill="rgb(251,171,36)"/><text x="63.3257%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.16%)</title><rect x="63.0757%" y="805" width="0.1561%" height="15" fill="rgb(230,62,22)"/><text x="63.3257%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.16%)</title><rect x="63.0757%" y="789" width="0.1561%" height="15" fill="rgb(225,114,35)"/><text x="63.3257%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.16%)</title><rect x="63.3099%" y="821" width="0.1561%" height="15" fill="rgb(215,118,42)"/><text x="63.5599%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="63.4660%" y="629" width="0.1561%" height="15" fill="rgb(243,119,21)"/><text x="63.7160%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="63.4660%" y="613" width="0.1561%" height="15" fill="rgb(252,177,53)"/><text x="63.7160%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="63.4660%" y="645" width="0.2342%" height="15" fill="rgb(237,209,29)"/><text x="63.7160%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="63.4660%" y="693" width="0.3123%" height="15" fill="rgb(212,65,23)"/><text x="63.7160%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.31%)</title><rect x="63.4660%" y="677" width="0.3123%" height="15" fill="rgb(230,222,46)"/><text x="63.7160%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.31%)</title><rect x="63.4660%" y="661" width="0.3123%" height="15" fill="rgb(215,135,32)"/><text x="63.7160%" y="671.50"></text></g><g><title>do_filp_open (2 samples, 0.16%)</title><rect x="63.7783%" y="533" width="0.1561%" height="15" fill="rgb(246,101,22)"/><text x="64.0283%" y="543.50"></text></g><g><title>path_openat (2 samples, 0.16%)</title><rect x="63.7783%" y="517" width="0.1561%" height="15" fill="rgb(206,107,13)"/><text x="64.0283%" y="527.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.23%)</title><rect x="63.7783%" y="693" width="0.2342%" height="15" fill="rgb(250,100,44)"/><text x="64.0283%" y="703.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.23%)</title><rect x="63.7783%" y="677" width="0.2342%" height="15" fill="rgb(231,147,38)"/><text x="64.0283%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="63.7783%" y="661" width="0.2342%" height="15" fill="rgb(229,8,40)"/><text x="64.0283%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="63.7783%" y="645" width="0.2342%" height="15" fill="rgb(221,135,30)"/><text x="64.0283%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.23%)</title><rect x="63.7783%" y="629" width="0.2342%" height="15" fill="rgb(249,193,18)"/><text x="64.0283%" y="639.50"></text></g><g><title>__GI___openat (3 samples, 0.23%)</title><rect x="63.7783%" y="613" width="0.2342%" height="15" fill="rgb(209,133,39)"/><text x="64.0283%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.23%)</title><rect x="63.7783%" y="597" width="0.2342%" height="15" fill="rgb(232,100,14)"/><text x="64.0283%" y="607.50"></text></g><g><title>do_syscall_64 (3 samples, 0.23%)</title><rect x="63.7783%" y="581" width="0.2342%" height="15" fill="rgb(224,185,1)"/><text x="64.0283%" y="591.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.23%)</title><rect x="63.7783%" y="565" width="0.2342%" height="15" fill="rgb(223,139,8)"/><text x="64.0283%" y="575.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.23%)</title><rect x="63.7783%" y="549" width="0.2342%" height="15" fill="rgb(232,213,38)"/><text x="64.0283%" y="559.50"></text></g><g><title>inet_recvmsg (8 samples, 0.62%)</title><rect x="64.1686%" y="469" width="0.6245%" height="15" fill="rgb(207,94,22)"/><text x="64.4186%" y="479.50"></text></g><g><title>tcp_recvmsg (8 samples, 0.62%)</title><rect x="64.1686%" y="453" width="0.6245%" height="15" fill="rgb(219,183,54)"/><text x="64.4186%" y="463.50"></text></g><g><title>sk_wait_data (5 samples, 0.39%)</title><rect x="64.4028%" y="437" width="0.3903%" height="15" fill="rgb(216,185,54)"/><text x="64.6528%" y="447.50"></text></g><g><title>wait_woken (4 samples, 0.31%)</title><rect x="64.4809%" y="421" width="0.3123%" height="15" fill="rgb(254,217,39)"/><text x="64.7309%" y="431.50"></text></g><g><title>schedule_timeout (4 samples, 0.31%)</title><rect x="64.4809%" y="405" width="0.3123%" height="15" fill="rgb(240,178,23)"/><text x="64.7309%" y="415.50"></text></g><g><title>schedule (4 samples, 0.31%)</title><rect x="64.4809%" y="389" width="0.3123%" height="15" fill="rgb(218,11,47)"/><text x="64.7309%" y="399.50"></text></g><g><title>__schedule (4 samples, 0.31%)</title><rect x="64.4809%" y="373" width="0.3123%" height="15" fill="rgb(218,51,51)"/><text x="64.7309%" y="383.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 0.86%)</title><rect x="64.0906%" y="629" width="0.8587%" height="15" fill="rgb(238,126,27)"/><text x="64.3406%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.86%)</title><rect x="64.0906%" y="613" width="0.8587%" height="15" fill="rgb(249,202,22)"/><text x="64.3406%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 0.86%)</title><rect x="64.0906%" y="597" width="0.8587%" height="15" fill="rgb(254,195,49)"/><text x="64.3406%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.86%)</title><rect x="64.0906%" y="581" width="0.8587%" height="15" fill="rgb(208,123,14)"/><text x="64.3406%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.86%)</title><rect x="64.0906%" y="565" width="0.8587%" height="15" fill="rgb(224,200,8)"/><text x="64.3406%" y="575.50"></text></g><g><title>__libc_recv (11 samples, 0.86%)</title><rect x="64.0906%" y="549" width="0.8587%" height="15" fill="rgb(217,61,36)"/><text x="64.3406%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.86%)</title><rect x="64.0906%" y="533" width="0.8587%" height="15" fill="rgb(206,35,45)"/><text x="64.3406%" y="543.50"></text></g><g><title>do_syscall_64 (11 samples, 0.86%)</title><rect x="64.0906%" y="517" width="0.8587%" height="15" fill="rgb(217,65,33)"/><text x="64.3406%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (11 samples, 0.86%)</title><rect x="64.0906%" y="501" width="0.8587%" height="15" fill="rgb(222,158,48)"/><text x="64.3406%" y="511.50"></text></g><g><title>__sys_recvfrom (11 samples, 0.86%)</title><rect x="64.0906%" y="485" width="0.8587%" height="15" fill="rgb(254,2,54)"/><text x="64.3406%" y="495.50"></text></g><g><title>std::rt::lang_start_internal (20 samples, 1.56%)</title><rect x="63.4660%" y="821" width="1.5613%" height="15" fill="rgb(250,143,38)"/><text x="63.7160%" y="831.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 1.56%)</title><rect x="63.4660%" y="805" width="1.5613%" height="15" fill="rgb(248,25,0)"/><text x="63.7160%" y="815.50"></text></g><g><title>std::panicking::try (20 samples, 1.56%)</title><rect x="63.4660%" y="789" width="1.5613%" height="15" fill="rgb(206,152,27)"/><text x="63.7160%" y="799.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 1.56%)</title><rect x="63.4660%" y="773" width="1.5613%" height="15" fill="rgb(240,77,30)"/><text x="63.7160%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (20 samples, 1.56%)</title><rect x="63.4660%" y="757" width="1.5613%" height="15" fill="rgb(231,5,3)"/><text x="63.7160%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (20 samples, 1.56%)</title><rect x="63.4660%" y="741" width="1.5613%" height="15" fill="rgb(207,226,32)"/><text x="63.7160%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 1.56%)</title><rect x="63.4660%" y="725" width="1.5613%" height="15" fill="rgb(222,207,47)"/><text x="63.7160%" y="735.50"></text></g><g><title>lobsters::main (20 samples, 1.56%)</title><rect x="63.4660%" y="709" width="1.5613%" height="15" fill="rgb(229,115,45)"/><text x="63.7160%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (13 samples, 1.01%)</title><rect x="64.0125%" y="693" width="1.0148%" height="15" fill="rgb(224,191,6)"/><text x="64.2625%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (13 samples, 1.01%)</title><rect x="64.0125%" y="677" width="1.0148%" height="15" fill="rgb(230,227,24)"/><text x="64.2625%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (13 samples, 1.01%)</title><rect x="64.0125%" y="661" width="1.0148%" height="15" fill="rgb(228,80,19)"/><text x="64.2625%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.01%)</title><rect x="64.0125%" y="645" width="1.0148%" height="15" fill="rgb(247,229,0)"/><text x="64.2625%" y="655.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.16%)</title><rect x="65.1835%" y="741" width="0.1561%" height="15" fill="rgb(237,194,15)"/><text x="65.4335%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="65.4957%" y="677" width="0.1561%" height="15" fill="rgb(219,203,20)"/><text x="65.7457%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.31%)</title><rect x="65.4176%" y="709" width="0.3123%" height="15" fill="rgb(234,128,8)"/><text x="65.6676%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="65.4957%" y="693" width="0.2342%" height="15" fill="rgb(248,202,8)"/><text x="65.7457%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (6 samples, 0.47%)</title><rect x="65.3396%" y="725" width="0.4684%" height="15" fill="rgb(206,104,37)"/><text x="65.5896%" y="735.50"></text></g><g><title>core::fmt::write (7 samples, 0.55%)</title><rect x="65.3396%" y="741" width="0.5464%" height="15" fill="rgb(223,8,27)"/><text x="65.5896%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.9641%" y="693" width="0.1561%" height="15" fill="rgb(216,217,28)"/><text x="66.2141%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="66.1202%" y="693" width="0.1561%" height="15" fill="rgb(249,199,1)"/><text x="66.3702%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.47%)</title><rect x="65.8860%" y="741" width="0.4684%" height="15" fill="rgb(240,85,17)"/><text x="66.1360%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.47%)</title><rect x="65.8860%" y="725" width="0.4684%" height="15" fill="rgb(206,108,45)"/><text x="66.1360%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.47%)</title><rect x="65.8860%" y="709" width="0.4684%" height="15" fill="rgb(245,210,41)"/><text x="66.1360%" y="719.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (19 samples, 1.48%)</title><rect x="65.0273%" y="757" width="1.4832%" height="15" fill="rgb(206,13,37)"/><text x="65.2773%" y="767.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (2 samples, 0.16%)</title><rect x="66.3544%" y="741" width="0.1561%" height="15" fill="rgb(250,61,18)"/><text x="66.6044%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 1.72%)</title><rect x="65.0273%" y="821" width="1.7174%" height="15" fill="rgb(235,172,48)"/><text x="65.2773%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (22 samples, 1.72%)</title><rect x="65.0273%" y="805" width="1.7174%" height="15" fill="rgb(249,201,17)"/><text x="65.2773%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (22 samples, 1.72%)</title><rect x="65.0273%" y="789" width="1.7174%" height="15" fill="rgb(219,208,6)"/><text x="65.2773%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (22 samples, 1.72%)</title><rect x="65.0273%" y="773" width="1.7174%" height="15" fill="rgb(248,31,23)"/><text x="65.2773%" y="783.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.23%)</title><rect x="66.5105%" y="757" width="0.2342%" height="15" fill="rgb(245,15,42)"/><text x="66.7605%" y="767.50"></text></g><g><title>[unknown] (784 samples, 61.20%)</title><rect x="5.6987%" y="837" width="61.2022%" height="15" fill="rgb(222,217,39)"/><text x="5.9487%" y="847.50">[unknown]</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.23%)</title><rect x="66.9789%" y="693" width="0.2342%" height="15" fill="rgb(210,219,27)"/><text x="67.2289%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.16%)</title><rect x="67.3692%" y="677" width="0.1561%" height="15" fill="rgb(252,166,36)"/><text x="67.6192%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="67.5254%" y="629" width="0.1561%" height="15" fill="rgb(245,132,34)"/><text x="67.7754%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="67.5254%" y="613" width="0.1561%" height="15" fill="rgb(236,54,3)"/><text x="67.7754%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="67.5254%" y="597" width="0.1561%" height="15" fill="rgb(241,173,43)"/><text x="67.7754%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="67.5254%" y="581" width="0.1561%" height="15" fill="rgb(215,190,9)"/><text x="67.7754%" y="591.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.70%)</title><rect x="67.2131%" y="693" width="0.7026%" height="15" fill="rgb(242,101,16)"/><text x="67.4631%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.39%)</title><rect x="67.5254%" y="677" width="0.3903%" height="15" fill="rgb(223,190,21)"/><text x="67.7754%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.39%)</title><rect x="67.5254%" y="661" width="0.3903%" height="15" fill="rgb(215,228,25)"/><text x="67.7754%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.39%)</title><rect x="67.5254%" y="645" width="0.3903%" height="15" fill="rgb(225,36,22)"/><text x="67.7754%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="67.7596%" y="629" width="0.1561%" height="15" fill="rgb(251,106,46)"/><text x="68.0096%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="67.7596%" y="613" width="0.1561%" height="15" fill="rgb(208,90,1)"/><text x="68.0096%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="67.9157%" y="693" width="0.1561%" height="15" fill="rgb(243,10,4)"/><text x="68.1657%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="67.9157%" y="677" width="0.1561%" height="15" fill="rgb(212,137,27)"/><text x="68.1657%" y="687.50"></text></g><g><title>__pthread_enable_asynccancel (2 samples, 0.16%)</title><rect x="68.1499%" y="581" width="0.1561%" height="15" fill="rgb(231,220,49)"/><text x="68.3999%" y="591.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="68.4621%" y="485" width="0.1561%" height="15" fill="rgb(237,96,20)"/><text x="68.7121%" y="495.50"></text></g><g><title>skb_release_head_state (2 samples, 0.16%)</title><rect x="68.4621%" y="469" width="0.1561%" height="15" fill="rgb(239,229,30)"/><text x="68.7121%" y="479.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.31%)</title><rect x="68.6183%" y="485" width="0.3123%" height="15" fill="rgb(219,65,33)"/><text x="68.8683%" y="495.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.31%)</title><rect x="68.6183%" y="469" width="0.3123%" height="15" fill="rgb(243,134,7)"/><text x="68.8683%" y="479.50"></text></g><g><title>ip_output (4 samples, 0.31%)</title><rect x="68.6183%" y="453" width="0.3123%" height="15" fill="rgb(216,177,54)"/><text x="68.8683%" y="463.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.31%)</title><rect x="68.6183%" y="437" width="0.3123%" height="15" fill="rgb(211,160,20)"/><text x="68.8683%" y="447.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.23%)</title><rect x="68.6963%" y="421" width="0.2342%" height="15" fill="rgb(239,85,39)"/><text x="68.9463%" y="431.50"></text></g><g><title>do_softirq (3 samples, 0.23%)</title><rect x="68.6963%" y="405" width="0.2342%" height="15" fill="rgb(232,125,22)"/><text x="68.9463%" y="415.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.23%)</title><rect x="68.6963%" y="389" width="0.2342%" height="15" fill="rgb(244,57,34)"/><text x="68.9463%" y="399.50"></text></g><g><title>__do_softirq (3 samples, 0.23%)</title><rect x="68.6963%" y="373" width="0.2342%" height="15" fill="rgb(214,203,32)"/><text x="68.9463%" y="383.50"></text></g><g><title>net_rx_action (3 samples, 0.23%)</title><rect x="68.6963%" y="357" width="0.2342%" height="15" fill="rgb(207,58,43)"/><text x="68.9463%" y="367.50"></text></g><g><title>process_backlog (3 samples, 0.23%)</title><rect x="68.6963%" y="341" width="0.2342%" height="15" fill="rgb(215,193,15)"/><text x="68.9463%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.23%)</title><rect x="68.6963%" y="325" width="0.2342%" height="15" fill="rgb(232,15,44)"/><text x="68.9463%" y="335.50"></text></g><g><title>ip_rcv (3 samples, 0.23%)</title><rect x="68.6963%" y="309" width="0.2342%" height="15" fill="rgb(212,3,48)"/><text x="68.9463%" y="319.50"></text></g><g><title>ip_local_deliver (3 samples, 0.23%)</title><rect x="68.6963%" y="293" width="0.2342%" height="15" fill="rgb(218,128,7)"/><text x="68.9463%" y="303.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.16%)</title><rect x="68.7744%" y="277" width="0.1561%" height="15" fill="rgb(226,216,39)"/><text x="69.0244%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.16%)</title><rect x="68.7744%" y="261" width="0.1561%" height="15" fill="rgb(243,47,51)"/><text x="69.0244%" y="271.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.16%)</title><rect x="68.7744%" y="245" width="0.1561%" height="15" fill="rgb(241,183,40)"/><text x="69.0244%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.16%)</title><rect x="68.7744%" y="229" width="0.1561%" height="15" fill="rgb(231,217,32)"/><text x="69.0244%" y="239.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.16%)</title><rect x="68.7744%" y="213" width="0.1561%" height="15" fill="rgb(229,61,38)"/><text x="69.0244%" y="223.50"></text></g><g><title>tcp_ack (2 samples, 0.16%)</title><rect x="68.7744%" y="197" width="0.1561%" height="15" fill="rgb(225,210,5)"/><text x="69.0244%" y="207.50"></text></g><g><title>add_wait_queue (2 samples, 0.16%)</title><rect x="69.1647%" y="469" width="0.1561%" height="15" fill="rgb(231,79,45)"/><text x="69.4147%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.23%)</title><rect x="69.4770%" y="405" width="0.2342%" height="15" fill="rgb(224,100,7)"/><text x="69.7270%" y="415.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.23%)</title><rect x="69.7892%" y="405" width="0.2342%" height="15" fill="rgb(241,198,18)"/><text x="70.0392%" y="415.50"></text></g><g><title>dequeue_entity (2 samples, 0.16%)</title><rect x="69.8673%" y="389" width="0.1561%" height="15" fill="rgb(252,97,53)"/><text x="70.1173%" y="399.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.16%)</title><rect x="70.1795%" y="405" width="0.1561%" height="15" fill="rgb(220,88,7)"/><text x="70.4295%" y="415.50"></text></g><g><title>put_prev_entity (2 samples, 0.16%)</title><rect x="70.1795%" y="389" width="0.1561%" height="15" fill="rgb(213,176,14)"/><text x="70.4295%" y="399.50"></text></g><g><title>sk_wait_data (21 samples, 1.64%)</title><rect x="68.9305%" y="485" width="1.6393%" height="15" fill="rgb(246,73,7)"/><text x="69.1805%" y="495.50"></text></g><g><title>wait_woken (16 samples, 1.25%)</title><rect x="69.3208%" y="469" width="1.2490%" height="15" fill="rgb(245,64,36)"/><text x="69.5708%" y="479.50"></text></g><g><title>schedule_timeout (14 samples, 1.09%)</title><rect x="69.4770%" y="453" width="1.0929%" height="15" fill="rgb(245,80,10)"/><text x="69.7270%" y="463.50"></text></g><g><title>schedule (14 samples, 1.09%)</title><rect x="69.4770%" y="437" width="1.0929%" height="15" fill="rgb(232,107,50)"/><text x="69.7270%" y="447.50"></text></g><g><title>__schedule (14 samples, 1.09%)</title><rect x="69.4770%" y="421" width="1.0929%" height="15" fill="rgb(253,3,0)"/><text x="69.7270%" y="431.50"></text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="70.4137%" y="405" width="0.1561%" height="15" fill="rgb(212,99,53)"/><text x="70.6637%" y="415.50"></text></g><g><title>__x64_sys_recvfrom (31 samples, 2.42%)</title><rect x="68.3060%" y="549" width="2.4200%" height="15" fill="rgb(249,111,54)"/><text x="68.5560%" y="559.50">__..</text></g><g><title>__sys_recvfrom (31 samples, 2.42%)</title><rect x="68.3060%" y="533" width="2.4200%" height="15" fill="rgb(249,55,30)"/><text x="68.5560%" y="543.50">__..</text></g><g><title>inet_recvmsg (30 samples, 2.34%)</title><rect x="68.3841%" y="517" width="2.3419%" height="15" fill="rgb(237,47,42)"/><text x="68.6341%" y="527.50">i..</text></g><g><title>tcp_recvmsg (29 samples, 2.26%)</title><rect x="68.4621%" y="501" width="2.2639%" height="15" fill="rgb(211,20,18)"/><text x="68.7121%" y="511.50">t..</text></g><g><title>do_syscall_64 (32 samples, 2.50%)</title><rect x="68.3060%" y="565" width="2.4980%" height="15" fill="rgb(231,203,46)"/><text x="68.5560%" y="575.50">do..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (36 samples, 2.81%)</title><rect x="68.1499%" y="677" width="2.8103%" height="15" fill="rgb(237,142,3)"/><text x="68.3999%" y="687.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (36 samples, 2.81%)</title><rect x="68.1499%" y="661" width="2.8103%" height="15" fill="rgb(241,107,1)"/><text x="68.3999%" y="671.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (36 samples, 2.81%)</title><rect x="68.1499%" y="645" width="2.8103%" height="15" fill="rgb(229,83,13)"/><text x="68.3999%" y="655.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (36 samples, 2.81%)</title><rect x="68.1499%" y="629" width="2.8103%" height="15" fill="rgb(241,91,40)"/><text x="68.3999%" y="639.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (36 samples, 2.81%)</title><rect x="68.1499%" y="613" width="2.8103%" height="15" fill="rgb(225,3,45)"/><text x="68.3999%" y="623.50">st..</text></g><g><title>__libc_recv (36 samples, 2.81%)</title><rect x="68.1499%" y="597" width="2.8103%" height="15" fill="rgb(244,223,14)"/><text x="68.3999%" y="607.50">__..</text></g><g><title>entry_SYSCALL_64 (34 samples, 2.65%)</title><rect x="68.3060%" y="581" width="2.6542%" height="15" fill="rgb(224,124,37)"/><text x="68.5560%" y="591.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="70.8041%" y="565" width="0.1561%" height="15" fill="rgb(251,171,30)"/><text x="71.0541%" y="575.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (39 samples, 3.04%)</title><rect x="68.1499%" y="693" width="3.0445%" height="15" fill="rgb(236,46,54)"/><text x="68.3999%" y="703.50">msq..</text></g><g><title>__ip_finish_output (2 samples, 0.16%)</title><rect x="72.0531%" y="437" width="0.1561%" height="15" fill="rgb(245,213,5)"/><text x="72.3031%" y="447.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.16%)</title><rect x="72.3653%" y="405" width="0.1561%" height="15" fill="rgb(230,144,27)"/><text x="72.6153%" y="415.50"></text></g><g><title>loopback_xmit (2 samples, 0.16%)</title><rect x="72.3653%" y="389" width="0.1561%" height="15" fill="rgb(220,86,6)"/><text x="72.6153%" y="399.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.39%)</title><rect x="72.2092%" y="421" width="0.3903%" height="15" fill="rgb(240,20,13)"/><text x="72.4592%" y="431.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.16%)</title><rect x="72.6776%" y="357" width="0.1561%" height="15" fill="rgb(217,89,34)"/><text x="72.9276%" y="367.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.23%)</title><rect x="73.0679%" y="229" width="0.2342%" height="15" fill="rgb(229,13,5)"/><text x="73.3179%" y="239.50"></text></g><g><title>psi_task_change (6 samples, 0.47%)</title><rect x="73.3802%" y="117" width="0.4684%" height="15" fill="rgb(244,67,35)"/><text x="73.6302%" y="127.50"></text></g><g><title>psi_group_change (5 samples, 0.39%)</title><rect x="73.4582%" y="101" width="0.3903%" height="15" fill="rgb(221,40,2)"/><text x="73.7082%" y="111.50"></text></g><g><title>enqueue_task (7 samples, 0.55%)</title><rect x="73.3802%" y="133" width="0.5464%" height="15" fill="rgb(237,157,21)"/><text x="73.6302%" y="143.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.39%)</title><rect x="73.9266%" y="133" width="0.3903%" height="15" fill="rgb(222,94,11)"/><text x="74.1766%" y="143.50"></text></g><g><title>enqueue_entity (5 samples, 0.39%)</title><rect x="73.9266%" y="117" width="0.3903%" height="15" fill="rgb(249,113,6)"/><text x="74.1766%" y="127.50"></text></g><g><title>update_load_avg (2 samples, 0.16%)</title><rect x="74.1608%" y="101" width="0.1561%" height="15" fill="rgb(238,137,36)"/><text x="74.4108%" y="111.50"></text></g><g><title>sock_def_readable (16 samples, 1.25%)</title><rect x="73.3021%" y="197" width="1.2490%" height="15" fill="rgb(210,102,26)"/><text x="73.5521%" y="207.50"></text></g><g><title>__wake_up_common_lock (16 samples, 1.25%)</title><rect x="73.3021%" y="181" width="1.2490%" height="15" fill="rgb(218,30,30)"/><text x="73.5521%" y="191.50"></text></g><g><title>__wake_up_common (16 samples, 1.25%)</title><rect x="73.3021%" y="165" width="1.2490%" height="15" fill="rgb(214,67,26)"/><text x="73.5521%" y="175.50"></text></g><g><title>try_to_wake_up (16 samples, 1.25%)</title><rect x="73.3021%" y="149" width="1.2490%" height="15" fill="rgb(251,9,53)"/><text x="73.5521%" y="159.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.16%)</title><rect x="74.3950%" y="133" width="0.1561%" height="15" fill="rgb(228,204,25)"/><text x="74.6450%" y="143.50"></text></g><g><title>check_preempt_curr (2 samples, 0.16%)</title><rect x="74.3950%" y="117" width="0.1561%" height="15" fill="rgb(207,153,8)"/><text x="74.6450%" y="127.50"></text></g><g><title>resched_curr (2 samples, 0.16%)</title><rect x="74.3950%" y="101" width="0.1561%" height="15" fill="rgb(242,9,16)"/><text x="74.6450%" y="111.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="74.5511%" y="181" width="0.1561%" height="15" fill="rgb(217,211,10)"/><text x="74.8011%" y="191.50"></text></g><g><title>ip_local_deliver (25 samples, 1.95%)</title><rect x="72.9899%" y="293" width="1.9516%" height="15" fill="rgb(219,228,52)"/><text x="73.2399%" y="303.50">i..</text></g><g><title>ip_local_deliver_finish (25 samples, 1.95%)</title><rect x="72.9899%" y="277" width="1.9516%" height="15" fill="rgb(231,92,29)"/><text x="73.2399%" y="287.50">i..</text></g><g><title>ip_protocol_deliver_rcu (25 samples, 1.95%)</title><rect x="72.9899%" y="261" width="1.9516%" height="15" fill="rgb(232,8,23)"/><text x="73.2399%" y="271.50">i..</text></g><g><title>tcp_v4_rcv (24 samples, 1.87%)</title><rect x="73.0679%" y="245" width="1.8735%" height="15" fill="rgb(216,211,34)"/><text x="73.3179%" y="255.50">t..</text></g><g><title>tcp_v4_do_rcv (21 samples, 1.64%)</title><rect x="73.3021%" y="229" width="1.6393%" height="15" fill="rgb(236,151,0)"/><text x="73.5521%" y="239.50"></text></g><g><title>tcp_rcv_established (21 samples, 1.64%)</title><rect x="73.3021%" y="213" width="1.6393%" height="15" fill="rgb(209,168,3)"/><text x="73.5521%" y="223.50"></text></g><g><title>tcp_ack (5 samples, 0.39%)</title><rect x="74.5511%" y="197" width="0.3903%" height="15" fill="rgb(208,129,28)"/><text x="74.8011%" y="207.50"></text></g><g><title>__local_bh_enable_ip (33 samples, 2.58%)</title><rect x="72.5995%" y="421" width="2.5761%" height="15" fill="rgb(229,78,22)"/><text x="72.8495%" y="431.50">__..</text></g><g><title>do_softirq (33 samples, 2.58%)</title><rect x="72.5995%" y="405" width="2.5761%" height="15" fill="rgb(228,187,13)"/><text x="72.8495%" y="415.50">do..</text></g><g><title>do_softirq_own_stack (32 samples, 2.50%)</title><rect x="72.6776%" y="389" width="2.4980%" height="15" fill="rgb(240,119,24)"/><text x="72.9276%" y="399.50">do..</text></g><g><title>__do_softirq (32 samples, 2.50%)</title><rect x="72.6776%" y="373" width="2.4980%" height="15" fill="rgb(209,194,42)"/><text x="72.9276%" y="383.50">__..</text></g><g><title>net_rx_action (30 samples, 2.34%)</title><rect x="72.8337%" y="357" width="2.3419%" height="15" fill="rgb(247,200,46)"/><text x="73.0837%" y="367.50">n..</text></g><g><title>process_backlog (29 samples, 2.26%)</title><rect x="72.9118%" y="341" width="2.2639%" height="15" fill="rgb(218,76,16)"/><text x="73.1618%" y="351.50">p..</text></g><g><title>__netif_receive_skb_one_core (28 samples, 2.19%)</title><rect x="72.9899%" y="325" width="2.1858%" height="15" fill="rgb(225,21,48)"/><text x="73.2399%" y="335.50">_..</text></g><g><title>ip_rcv (28 samples, 2.19%)</title><rect x="72.9899%" y="309" width="2.1858%" height="15" fill="rgb(239,223,50)"/><text x="73.2399%" y="319.50">i..</text></g><g><title>ip_rcv_finish (3 samples, 0.23%)</title><rect x="74.9415%" y="293" width="0.2342%" height="15" fill="rgb(244,45,21)"/><text x="75.1915%" y="303.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.16%)</title><rect x="75.0195%" y="277" width="0.1561%" height="15" fill="rgb(232,33,43)"/><text x="75.2695%" y="287.50"></text></g><g><title>ip_finish_output2 (39 samples, 3.04%)</title><rect x="72.2092%" y="437" width="3.0445%" height="15" fill="rgb(209,8,3)"/><text x="72.4592%" y="447.50">ip_..</text></g><g><title>__ip_queue_xmit (43 samples, 3.36%)</title><rect x="71.9750%" y="469" width="3.3568%" height="15" fill="rgb(214,25,53)"/><text x="72.2250%" y="479.50">__i..</text></g><g><title>ip_output (42 samples, 3.28%)</title><rect x="72.0531%" y="453" width="3.2787%" height="15" fill="rgb(254,186,54)"/><text x="72.3031%" y="463.50">ip_..</text></g><g><title>__tcp_push_pending_frames (47 samples, 3.67%)</title><rect x="71.7408%" y="517" width="3.6690%" height="15" fill="rgb(208,174,49)"/><text x="71.9908%" y="527.50">__tc..</text></g><g><title>tcp_write_xmit (47 samples, 3.67%)</title><rect x="71.7408%" y="501" width="3.6690%" height="15" fill="rgb(233,191,51)"/><text x="71.9908%" y="511.50">tcp_..</text></g><g><title>__tcp_transmit_skb (46 samples, 3.59%)</title><rect x="71.8189%" y="485" width="3.5909%" height="15" fill="rgb(222,134,10)"/><text x="72.0689%" y="495.50">__tc..</text></g><g><title>sk_page_frag_refill (2 samples, 0.16%)</title><rect x="75.4098%" y="517" width="0.1561%" height="15" fill="rgb(230,226,20)"/><text x="75.6598%" y="527.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.31%)</title><rect x="75.6440%" y="517" width="0.3123%" height="15" fill="rgb(251,111,25)"/><text x="75.8940%" y="527.50"></text></g><g><title>__check_object_size (3 samples, 0.23%)</title><rect x="75.7221%" y="501" width="0.2342%" height="15" fill="rgb(224,40,46)"/><text x="75.9721%" y="511.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.16%)</title><rect x="75.8002%" y="485" width="0.1561%" height="15" fill="rgb(236,108,47)"/><text x="76.0502%" y="495.50"></text></g><g><title>__x64_sys_sendto (61 samples, 4.76%)</title><rect x="71.3505%" y="597" width="4.7619%" height="15" fill="rgb(234,93,0)"/><text x="71.6005%" y="607.50">__x64_..</text></g><g><title>__sys_sendto (61 samples, 4.76%)</title><rect x="71.3505%" y="581" width="4.7619%" height="15" fill="rgb(224,213,32)"/><text x="71.6005%" y="591.50">__sys_..</text></g><g><title>sock_sendmsg (61 samples, 4.76%)</title><rect x="71.3505%" y="565" width="4.7619%" height="15" fill="rgb(251,11,48)"/><text x="71.6005%" y="575.50">sock_s..</text></g><g><title>tcp_sendmsg (61 samples, 4.76%)</title><rect x="71.3505%" y="549" width="4.7619%" height="15" fill="rgb(236,173,5)"/><text x="71.6005%" y="559.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (60 samples, 4.68%)</title><rect x="71.4286%" y="533" width="4.6838%" height="15" fill="rgb(230,95,12)"/><text x="71.6786%" y="543.50">tcp_s..</text></g><g><title>do_syscall_64 (62 samples, 4.84%)</title><rect x="71.3505%" y="613" width="4.8400%" height="15" fill="rgb(232,209,1)"/><text x="71.6005%" y="623.50">do_sys..</text></g><g><title>entry_SYSCALL_64 (66 samples, 5.15%)</title><rect x="71.2724%" y="629" width="5.1522%" height="15" fill="rgb(232,6,1)"/><text x="71.5224%" y="639.50">entry_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="76.1905%" y="613" width="0.2342%" height="15" fill="rgb(210,224,50)"/><text x="76.4405%" y="623.50"></text></g><g><title>__GI___clone (123 samples, 9.60%)</title><rect x="66.9009%" y="837" width="9.6019%" height="15" fill="rgb(228,127,35)"/><text x="67.1509%" y="847.50">__GI___clone</text></g><g><title>start_thread (123 samples, 9.60%)</title><rect x="66.9009%" y="821" width="9.6019%" height="15" fill="rgb(245,102,45)"/><text x="67.1509%" y="831.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (122 samples, 9.52%)</title><rect x="66.9789%" y="805" width="9.5238%" height="15" fill="rgb(214,1,49)"/><text x="67.2289%" y="815.50">std::sys::unix..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (122 samples, 9.52%)</title><rect x="66.9789%" y="789" width="9.5238%" height="15" fill="rgb(226,163,40)"/><text x="67.2289%" y="799.50">&lt;alloc::boxed:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (122 samples, 9.52%)</title><rect x="66.9789%" y="773" width="9.5238%" height="15" fill="rgb(239,212,28)"/><text x="67.2289%" y="783.50">&lt;alloc::boxed:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (122 samples, 9.52%)</title><rect x="66.9789%" y="757" width="9.5238%" height="15" fill="rgb(220,20,13)"/><text x="67.2289%" y="767.50">core::ops::fun..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (122 samples, 9.52%)</title><rect x="66.9789%" y="741" width="9.5238%" height="15" fill="rgb(210,164,35)"/><text x="67.2289%" y="751.50">std::sys_commo..</text></g><g><title>decor::Shim::run_on_tcp (122 samples, 9.52%)</title><rect x="66.9789%" y="725" width="9.5238%" height="15" fill="rgb(248,109,41)"/><text x="67.2289%" y="735.50">decor::Shim::r..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (122 samples, 9.52%)</title><rect x="66.9789%" y="709" width="9.5238%" height="15" fill="rgb(238,23,50)"/><text x="67.2289%" y="719.50">msql_srv::Mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (68 samples, 5.31%)</title><rect x="71.1944%" y="693" width="5.3084%" height="15" fill="rgb(211,48,49)"/><text x="71.4444%" y="703.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (68 samples, 5.31%)</title><rect x="71.1944%" y="677" width="5.3084%" height="15" fill="rgb(223,36,21)"/><text x="71.4444%" y="687.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (68 samples, 5.31%)</title><rect x="71.1944%" y="661" width="5.3084%" height="15" fill="rgb(207,123,46)"/><text x="71.4444%" y="671.50">std::s..</text></g><g><title>__libc_send (68 samples, 5.31%)</title><rect x="71.1944%" y="645" width="5.3084%" height="15" fill="rgb(240,218,32)"/><text x="71.4444%" y="655.50">__libc..</text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="76.5027%" y="837" width="0.1561%" height="15" fill="rgb(252,5,43)"/><text x="76.7527%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="76.6589%" y="661" width="0.2342%" height="15" fill="rgb(252,84,19)"/><text x="76.9089%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="76.7369%" y="645" width="0.1561%" height="15" fill="rgb(243,152,39)"/><text x="76.9869%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.31%)</title><rect x="76.9711%" y="581" width="0.3123%" height="15" fill="rgb(234,160,15)"/><text x="77.2211%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.31%)</title><rect x="76.9711%" y="565" width="0.3123%" height="15" fill="rgb(237,34,20)"/><text x="77.2211%" y="575.50"></text></g><g><title>__mmdrop (2 samples, 0.16%)</title><rect x="77.3614%" y="373" width="0.1561%" height="15" fill="rgb(229,97,13)"/><text x="77.6114%" y="383.50"></text></g><g><title>__free_pages_ok (2 samples, 0.16%)</title><rect x="77.3614%" y="357" width="0.1561%" height="15" fill="rgb(234,71,50)"/><text x="77.6114%" y="367.50"></text></g><g><title>__memcg_kmem_uncharge_page (2 samples, 0.16%)</title><rect x="77.3614%" y="341" width="0.1561%" height="15" fill="rgb(253,155,4)"/><text x="77.6114%" y="351.50"></text></g><g><title>__memcg_kmem_uncharge (2 samples, 0.16%)</title><rect x="77.3614%" y="325" width="0.1561%" height="15" fill="rgb(222,185,37)"/><text x="77.6114%" y="335.50"></text></g><g><title>page_counter_uncharge (2 samples, 0.16%)</title><rect x="77.3614%" y="309" width="0.1561%" height="15" fill="rgb(251,177,13)"/><text x="77.6114%" y="319.50"></text></g><g><title>__perf_event_task_sched_in (230 samples, 17.95%)</title><rect x="77.5176%" y="373" width="17.9547%" height="15" fill="rgb(250,179,40)"/><text x="77.7676%" y="383.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 17.95%)</title><rect x="77.5176%" y="357" width="17.9547%" height="15" fill="rgb(242,44,2)"/><text x="77.7676%" y="367.50">__intel_pmu_enable_all.const..</text></g><g><title>native_write_msr (230 samples, 17.95%)</title><rect x="77.5176%" y="341" width="17.9547%" height="15" fill="rgb(216,177,13)"/><text x="77.7676%" y="351.50">native_write_msr</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 18.27%)</title><rect x="77.3614%" y="485" width="18.2670%" height="15" fill="rgb(216,106,43)"/><text x="77.6114%" y="495.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 18.27%)</title><rect x="77.3614%" y="469" width="18.2670%" height="15" fill="rgb(216,183,2)"/><text x="77.6114%" y="479.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 18.27%)</title><rect x="77.3614%" y="453" width="18.2670%" height="15" fill="rgb(249,75,3)"/><text x="77.6114%" y="463.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 18.27%)</title><rect x="77.3614%" y="437" width="18.2670%" height="15" fill="rgb(219,67,39)"/><text x="77.6114%" y="447.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 18.27%)</title><rect x="77.3614%" y="421" width="18.2670%" height="15" fill="rgb(253,228,2)"/><text x="77.6114%" y="431.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 18.27%)</title><rect x="77.3614%" y="405" width="18.2670%" height="15" fill="rgb(235,138,27)"/><text x="77.6114%" y="415.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 18.27%)</title><rect x="77.3614%" y="389" width="18.2670%" height="15" fill="rgb(236,97,51)"/><text x="77.6114%" y="399.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (2 samples, 0.16%)</title><rect x="95.4723%" y="373" width="0.1561%" height="15" fill="rgb(240,80,30)"/><text x="95.7223%" y="383.50"></text></g><g><title>do_syscall_64 (235 samples, 18.35%)</title><rect x="77.3614%" y="533" width="18.3450%" height="15" fill="rgb(230,178,19)"/><text x="77.6114%" y="543.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 18.35%)</title><rect x="77.3614%" y="517" width="18.3450%" height="15" fill="rgb(210,190,27)"/><text x="77.6114%" y="527.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 18.35%)</title><rect x="77.3614%" y="501" width="18.3450%" height="15" fill="rgb(222,107,31)"/><text x="77.6114%" y="511.50">sched_setaffinity</text></g><g><title>entry_SYSCALL_64 (236 samples, 18.42%)</title><rect x="77.3614%" y="549" width="18.4231%" height="15" fill="rgb(216,127,34)"/><text x="77.6114%" y="559.50">entry_SYSCALL_64</text></g><g><title>hwloc::Topology::new (242 samples, 18.89%)</title><rect x="76.9711%" y="661" width="18.8915%" height="15" fill="rgb(234,116,52)"/><text x="77.2211%" y="671.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 18.89%)</title><rect x="76.9711%" y="645" width="18.8915%" height="15" fill="rgb(222,124,15)"/><text x="77.2211%" y="655.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 18.89%)</title><rect x="76.9711%" y="629" width="18.8915%" height="15" fill="rgb(231,179,28)"/><text x="77.2211%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 18.89%)</title><rect x="76.9711%" y="613" width="18.8915%" height="15" fill="rgb(226,93,45)"/><text x="77.2211%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 18.89%)</title><rect x="76.9711%" y="597" width="18.8915%" height="15" fill="rgb(215,8,51)"/><text x="77.2211%" y="607.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 18.58%)</title><rect x="77.2834%" y="581" width="18.5792%" height="15" fill="rgb(223,106,5)"/><text x="77.5334%" y="591.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (238 samples, 18.58%)</title><rect x="77.2834%" y="565" width="18.5792%" height="15" fill="rgb(250,191,5)"/><text x="77.5334%" y="575.50">__GI___sched_setaffinity_new</text></g><g><title>__dev_queue_xmit (2 samples, 0.16%)</title><rect x="96.4871%" y="357" width="0.1561%" height="15" fill="rgb(242,132,44)"/><text x="96.7371%" y="367.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="96.8774%" y="53" width="0.1561%" height="15" fill="rgb(251,152,29)"/><text x="97.1274%" y="63.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="96.8774%" y="37" width="0.1561%" height="15" fill="rgb(218,179,5)"/><text x="97.1274%" y="47.50"></text></g><g><title>enqueue_task (4 samples, 0.31%)</title><rect x="96.8774%" y="69" width="0.3123%" height="15" fill="rgb(227,67,19)"/><text x="97.1274%" y="79.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.16%)</title><rect x="97.0336%" y="53" width="0.1561%" height="15" fill="rgb(233,119,31)"/><text x="97.2836%" y="63.50"></text></g><g><title>sock_def_readable (5 samples, 0.39%)</title><rect x="96.8774%" y="133" width="0.3903%" height="15" fill="rgb(241,120,22)"/><text x="97.1274%" y="143.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.39%)</title><rect x="96.8774%" y="117" width="0.3903%" height="15" fill="rgb(224,102,30)"/><text x="97.1274%" y="127.50"></text></g><g><title>__wake_up_common (5 samples, 0.39%)</title><rect x="96.8774%" y="101" width="0.3903%" height="15" fill="rgb(210,164,37)"/><text x="97.1274%" y="111.50"></text></g><g><title>try_to_wake_up (5 samples, 0.39%)</title><rect x="96.8774%" y="85" width="0.3903%" height="15" fill="rgb(226,191,16)"/><text x="97.1274%" y="95.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="97.3458%" y="117" width="0.1561%" height="15" fill="rgb(214,40,45)"/><text x="97.5958%" y="127.50"></text></g><g><title>skb_release_data (2 samples, 0.16%)</title><rect x="97.3458%" y="101" width="0.1561%" height="15" fill="rgb(244,29,26)"/><text x="97.5958%" y="111.50"></text></g><g><title>tcp_ack (4 samples, 0.31%)</title><rect x="97.2678%" y="133" width="0.3123%" height="15" fill="rgb(216,16,5)"/><text x="97.5178%" y="143.50"></text></g><g><title>__tcp_transmit_skb (20 samples, 1.56%)</title><rect x="96.2529%" y="421" width="1.5613%" height="15" fill="rgb(249,76,35)"/><text x="96.5029%" y="431.50"></text></g><g><title>__ip_queue_xmit (20 samples, 1.56%)</title><rect x="96.2529%" y="405" width="1.5613%" height="15" fill="rgb(207,11,44)"/><text x="96.5029%" y="415.50"></text></g><g><title>ip_output (19 samples, 1.48%)</title><rect x="96.3310%" y="389" width="1.4832%" height="15" fill="rgb(228,190,49)"/><text x="96.5810%" y="399.50"></text></g><g><title>ip_finish_output2 (18 samples, 1.41%)</title><rect x="96.4091%" y="373" width="1.4052%" height="15" fill="rgb(214,173,12)"/><text x="96.6591%" y="383.50"></text></g><g><title>__local_bh_enable_ip (15 samples, 1.17%)</title><rect x="96.6432%" y="357" width="1.1710%" height="15" fill="rgb(218,26,35)"/><text x="96.8932%" y="367.50"></text></g><g><title>do_softirq (15 samples, 1.17%)</title><rect x="96.6432%" y="341" width="1.1710%" height="15" fill="rgb(220,200,19)"/><text x="96.8932%" y="351.50"></text></g><g><title>do_softirq_own_stack (15 samples, 1.17%)</title><rect x="96.6432%" y="325" width="1.1710%" height="15" fill="rgb(239,95,49)"/><text x="96.8932%" y="335.50"></text></g><g><title>__do_softirq (15 samples, 1.17%)</title><rect x="96.6432%" y="309" width="1.1710%" height="15" fill="rgb(235,85,53)"/><text x="96.8932%" y="319.50"></text></g><g><title>net_rx_action (14 samples, 1.09%)</title><rect x="96.7213%" y="293" width="1.0929%" height="15" fill="rgb(233,133,31)"/><text x="96.9713%" y="303.50"></text></g><g><title>process_backlog (13 samples, 1.01%)</title><rect x="96.7994%" y="277" width="1.0148%" height="15" fill="rgb(218,25,20)"/><text x="97.0494%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (13 samples, 1.01%)</title><rect x="96.7994%" y="261" width="1.0148%" height="15" fill="rgb(252,210,38)"/><text x="97.0494%" y="271.50"></text></g><g><title>ip_rcv (12 samples, 0.94%)</title><rect x="96.8774%" y="245" width="0.9368%" height="15" fill="rgb(242,134,21)"/><text x="97.1274%" y="255.50"></text></g><g><title>ip_local_deliver (12 samples, 0.94%)</title><rect x="96.8774%" y="229" width="0.9368%" height="15" fill="rgb(213,28,48)"/><text x="97.1274%" y="239.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.94%)</title><rect x="96.8774%" y="213" width="0.9368%" height="15" fill="rgb(250,196,2)"/><text x="97.1274%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (12 samples, 0.94%)</title><rect x="96.8774%" y="197" width="0.9368%" height="15" fill="rgb(227,5,17)"/><text x="97.1274%" y="207.50"></text></g><g><title>tcp_v4_rcv (12 samples, 0.94%)</title><rect x="96.8774%" y="181" width="0.9368%" height="15" fill="rgb(221,226,24)"/><text x="97.1274%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 0.94%)</title><rect x="96.8774%" y="165" width="0.9368%" height="15" fill="rgb(211,5,48)"/><text x="97.1274%" y="175.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.94%)</title><rect x="96.8774%" y="149" width="0.9368%" height="15" fill="rgb(219,150,6)"/><text x="97.1274%" y="159.50"></text></g><g><title>tcp_data_queue (2 samples, 0.16%)</title><rect x="97.6581%" y="133" width="0.1561%" height="15" fill="rgb(251,46,16)"/><text x="97.9081%" y="143.50"></text></g><g><title>sock_def_readable (2 samples, 0.16%)</title><rect x="97.6581%" y="117" width="0.1561%" height="15" fill="rgb(220,204,40)"/><text x="97.9081%" y="127.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.16%)</title><rect x="97.6581%" y="101" width="0.1561%" height="15" fill="rgb(211,85,2)"/><text x="97.9081%" y="111.50"></text></g><g><title>__wake_up_common (2 samples, 0.16%)</title><rect x="97.6581%" y="85" width="0.1561%" height="15" fill="rgb(229,17,7)"/><text x="97.9081%" y="95.50"></text></g><g><title>try_to_wake_up (2 samples, 0.16%)</title><rect x="97.6581%" y="69" width="0.1561%" height="15" fill="rgb(239,72,28)"/><text x="97.9081%" y="79.50"></text></g><g><title>__tcp_push_pending_frames (22 samples, 1.72%)</title><rect x="96.1749%" y="453" width="1.7174%" height="15" fill="rgb(230,47,54)"/><text x="96.4249%" y="463.50"></text></g><g><title>tcp_write_xmit (21 samples, 1.64%)</title><rect x="96.2529%" y="437" width="1.6393%" height="15" fill="rgb(214,50,8)"/><text x="96.5029%" y="447.50"></text></g><g><title>do_syscall_64 (27 samples, 2.11%)</title><rect x="96.0187%" y="549" width="2.1077%" height="15" fill="rgb(216,198,43)"/><text x="96.2687%" y="559.50">d..</text></g><g><title>__x64_sys_sendto (27 samples, 2.11%)</title><rect x="96.0187%" y="533" width="2.1077%" height="15" fill="rgb(234,20,35)"/><text x="96.2687%" y="543.50">_..</text></g><g><title>__sys_sendto (26 samples, 2.03%)</title><rect x="96.0968%" y="517" width="2.0297%" height="15" fill="rgb(254,45,19)"/><text x="96.3468%" y="527.50">_..</text></g><g><title>sock_sendmsg (26 samples, 2.03%)</title><rect x="96.0968%" y="501" width="2.0297%" height="15" fill="rgb(219,14,44)"/><text x="96.3468%" y="511.50">s..</text></g><g><title>tcp_sendmsg (26 samples, 2.03%)</title><rect x="96.0968%" y="485" width="2.0297%" height="15" fill="rgb(217,220,26)"/><text x="96.3468%" y="495.50">t..</text></g><g><title>tcp_sendmsg_locked (26 samples, 2.03%)</title><rect x="96.0968%" y="469" width="2.0297%" height="15" fill="rgb(213,158,28)"/><text x="96.3468%" y="479.50">t..</text></g><g><title>tcp_send_mss (2 samples, 0.16%)</title><rect x="97.9703%" y="453" width="0.1561%" height="15" fill="rgb(252,51,52)"/><text x="98.2203%" y="463.50"></text></g><g><title>tcp_current_mss (2 samples, 0.16%)</title><rect x="97.9703%" y="437" width="0.1561%" height="15" fill="rgb(246,89,16)"/><text x="98.2203%" y="447.50"></text></g><g><title>__libc_send (28 samples, 2.19%)</title><rect x="96.0187%" y="581" width="2.1858%" height="15" fill="rgb(216,158,49)"/><text x="96.2687%" y="591.50">_..</text></g><g><title>entry_SYSCALL_64 (28 samples, 2.19%)</title><rect x="96.0187%" y="565" width="2.1858%" height="15" fill="rgb(236,107,19)"/><text x="96.2687%" y="575.50">e..</text></g><g><title>mysql::conn::Conn::_query (31 samples, 2.42%)</title><rect x="95.8626%" y="661" width="2.4200%" height="15" fill="rgb(228,185,30)"/><text x="96.1126%" y="671.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 2.34%)</title><rect x="95.9407%" y="645" width="2.3419%" height="15" fill="rgb(246,134,8)"/><text x="96.1907%" y="655.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (29 samples, 2.26%)</title><rect x="96.0187%" y="629" width="2.2639%" height="15" fill="rgb(214,143,50)"/><text x="96.2687%" y="639.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (29 samples, 2.26%)</title><rect x="96.0187%" y="613" width="2.2639%" height="15" fill="rgb(228,75,8)"/><text x="96.2687%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (29 samples, 2.26%)</title><rect x="96.0187%" y="597" width="2.2639%" height="15" fill="rgb(207,175,4)"/><text x="96.2687%" y="607.50">s..</text></g><g><title>__libc_start_main (279 samples, 21.78%)</title><rect x="76.6589%" y="821" width="21.7799%" height="15" fill="rgb(205,108,24)"/><text x="76.9089%" y="831.50">__libc_start_main</text></g><g><title>main (279 samples, 21.78%)</title><rect x="76.6589%" y="805" width="21.7799%" height="15" fill="rgb(244,120,49)"/><text x="76.9089%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (279 samples, 21.78%)</title><rect x="76.6589%" y="789" width="21.7799%" height="15" fill="rgb(223,47,38)"/><text x="76.9089%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (279 samples, 21.78%)</title><rect x="76.6589%" y="773" width="21.7799%" height="15" fill="rgb(229,179,11)"/><text x="76.9089%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (279 samples, 21.78%)</title><rect x="76.6589%" y="757" width="21.7799%" height="15" fill="rgb(231,122,1)"/><text x="76.9089%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (279 samples, 21.78%)</title><rect x="76.6589%" y="741" width="21.7799%" height="15" fill="rgb(245,119,9)"/><text x="76.9089%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (279 samples, 21.78%)</title><rect x="76.6589%" y="725" width="21.7799%" height="15" fill="rgb(241,163,25)"/><text x="76.9089%" y="735.50">core::ops::function::impls::&lt;impl ..</text></g><g><title>std::rt::lang_start::_{{closure}} (279 samples, 21.78%)</title><rect x="76.6589%" y="709" width="21.7799%" height="15" fill="rgb(217,214,3)"/><text x="76.9089%" y="719.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (279 samples, 21.78%)</title><rect x="76.6589%" y="693" width="21.7799%" height="15" fill="rgb(240,86,28)"/><text x="76.9089%" y="703.50">std::sys_common::backtrace::__rust..</text></g><g><title>lobsters::main (279 samples, 21.78%)</title><rect x="76.6589%" y="677" width="21.7799%" height="15" fill="rgb(215,47,9)"/><text x="76.9089%" y="687.50">lobsters::main</text></g><g><title>_start (280 samples, 21.86%)</title><rect x="76.6589%" y="837" width="21.8579%" height="15" fill="rgb(252,25,45)"/><text x="76.9089%" y="847.50">_start</text></g><g><title>anon.0a8eb4368e877846e7015abe4b48d925.14.llvm.1195778281984373254 (2 samples, 0.16%)</title><rect x="98.5168%" y="837" width="0.1561%" height="15" fill="rgb(251,164,9)"/><text x="98.7668%" y="847.50"></text></g><g><title>[vmlinux] (2 samples, 0.16%)</title><rect x="99.0632%" y="805" width="0.1561%" height="15" fill="rgb(233,194,0)"/><text x="99.3132%" y="815.50"></text></g><g><title>do_group_exit (2 samples, 0.16%)</title><rect x="99.0632%" y="789" width="0.1561%" height="15" fill="rgb(249,111,24)"/><text x="99.3132%" y="799.50"></text></g><g><title>do_exit (2 samples, 0.16%)</title><rect x="99.0632%" y="773" width="0.1561%" height="15" fill="rgb(250,223,3)"/><text x="99.3132%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.55%)</title><rect x="98.7510%" y="837" width="0.5464%" height="15" fill="rgb(236,178,37)"/><text x="99.0010%" y="847.50"></text></g><g><title>do_syscall_64 (3 samples, 0.23%)</title><rect x="99.0632%" y="821" width="0.2342%" height="15" fill="rgb(241,158,50)"/><text x="99.3132%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.16%)</title><rect x="99.2974%" y="837" width="0.1561%" height="15" fill="rgb(213,121,41)"/><text x="99.5474%" y="847.50"></text></g><g><title>lobsters (1,275 samples, 99.53%)</title><rect x="0.0000%" y="853" width="99.5316%" height="15" fill="rgb(240,92,3)"/><text x="0.2500%" y="863.50">lobsters</text></g><g><title>all (1,281 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(205,123,3)"/><text x="0.2500%" y="879.50"></text></g><g><title>perf (6 samples, 0.47%)</title><rect x="99.5316%" y="853" width="0.4684%" height="15" fill="rgb(205,97,47)"/><text x="99.7816%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.47%)</title><rect x="99.5316%" y="837" width="0.4684%" height="15" fill="rgb(247,152,14)"/><text x="99.7816%" y="847.50"></text></g><g><title>do_syscall_64 (6 samples, 0.47%)</title><rect x="99.5316%" y="821" width="0.4684%" height="15" fill="rgb(248,195,53)"/><text x="99.7816%" y="831.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.47%)</title><rect x="99.5316%" y="805" width="0.4684%" height="15" fill="rgb(226,201,16)"/><text x="99.7816%" y="815.50"></text></g><g><title>do_execve (6 samples, 0.47%)</title><rect x="99.5316%" y="789" width="0.4684%" height="15" fill="rgb(205,98,0)"/><text x="99.7816%" y="799.50"></text></g><g><title>__do_execve_file (6 samples, 0.47%)</title><rect x="99.5316%" y="773" width="0.4684%" height="15" fill="rgb(214,191,48)"/><text x="99.7816%" y="783.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.47%)</title><rect x="99.5316%" y="757" width="0.4684%" height="15" fill="rgb(237,112,39)"/><text x="99.7816%" y="767.50"></text></g><g><title>load_elf_binary (6 samples, 0.47%)</title><rect x="99.5316%" y="741" width="0.4684%" height="15" fill="rgb(247,203,27)"/><text x="99.7816%" y="751.50"></text></g><g><title>setup_new_exec (6 samples, 0.47%)</title><rect x="99.5316%" y="725" width="0.4684%" height="15" fill="rgb(235,124,28)"/><text x="99.7816%" y="735.50"></text></g><g><title>perf_event_exec (6 samples, 0.47%)</title><rect x="99.5316%" y="709" width="0.4684%" height="15" fill="rgb(208,207,46)"/><text x="99.7816%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.39%)</title><rect x="99.6097%" y="693" width="0.3903%" height="15" fill="rgb(234,176,4)"/><text x="99.8597%" y="703.50"></text></g><g><title>native_write_msr (5 samples, 0.39%)</title><rect x="99.6097%" y="677" width="0.3903%" height="15" fill="rgb(230,133,28)"/><text x="99.8597%" y="687.50"></text></g></svg></svg>