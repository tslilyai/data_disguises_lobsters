<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.14%)</title><rect x="0.0000%" y="901" width="0.1421%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>[[stack]] (3 samples, 0.21%)</title><rect x="0.1421%" y="901" width="0.2132%" height="15" fill="rgb(217,0,24)"/><text x="0.3921%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="0.4264%" y="885" width="0.1421%" height="15" fill="rgb(221,193,54)"/><text x="0.6764%" y="895.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="1.4925%" y="885" width="0.1421%" height="15" fill="rgb(248,212,6)"/><text x="1.7425%" y="895.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="1.6347%" y="885" width="0.1421%" height="15" fill="rgb(208,68,35)"/><text x="1.8847%" y="895.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.21%)</title><rect x="1.7768%" y="885" width="0.2132%" height="15" fill="rgb(232,128,0)"/><text x="2.0268%" y="895.50"></text></g><g><title>__libc_send (3 samples, 0.21%)</title><rect x="1.9900%" y="885" width="0.2132%" height="15" fill="rgb(207,160,47)"/><text x="2.2400%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.21%)</title><rect x="1.9900%" y="869" width="0.2132%" height="15" fill="rgb(228,23,34)"/><text x="2.2400%" y="879.50"></text></g><g><title>__rdl_alloc (3 samples, 0.21%)</title><rect x="2.2033%" y="885" width="0.2132%" height="15" fill="rgb(218,30,26)"/><text x="2.4533%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.14%)</title><rect x="2.2743%" y="869" width="0.1421%" height="15" fill="rgb(220,122,19)"/><text x="2.5243%" y="879.50"></text></g><g><title>_int_free (12 samples, 0.85%)</title><rect x="2.4165%" y="885" width="0.8529%" height="15" fill="rgb(250,228,42)"/><text x="2.6665%" y="895.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.43%)</title><rect x="3.4826%" y="885" width="0.4264%" height="15" fill="rgb(240,193,28)"/><text x="3.7326%" y="895.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.28%)</title><rect x="3.9090%" y="885" width="0.2843%" height="15" fill="rgb(216,20,37)"/><text x="4.1590%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.21%)</title><rect x="4.3355%" y="885" width="0.2132%" height="15" fill="rgb(206,188,39)"/><text x="4.5855%" y="895.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (2 samples, 0.14%)</title><rect x="4.7619%" y="885" width="0.1421%" height="15" fill="rgb(217,207,13)"/><text x="5.0119%" y="895.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.14%)</title><rect x="4.9041%" y="885" width="0.1421%" height="15" fill="rgb(231,73,38)"/><text x="5.1541%" y="895.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (3 samples, 0.21%)</title><rect x="5.2594%" y="885" width="0.2132%" height="15" fill="rgb(225,20,46)"/><text x="5.5094%" y="895.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (3 samples, 0.21%)</title><rect x="6.0412%" y="885" width="0.2132%" height="15" fill="rgb(210,31,41)"/><text x="6.2912%" y="895.50"></text></g><g><title>[anon] (85 samples, 6.04%)</title><rect x="0.3554%" y="901" width="6.0412%" height="15" fill="rgb(221,200,47)"/><text x="0.6054%" y="911.50">[anon]</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.36%)</title><rect x="6.3966%" y="885" width="0.3554%" height="15" fill="rgb(226,26,5)"/><text x="6.6466%" y="895.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="6.7520%" y="885" width="0.1421%" height="15" fill="rgb(249,33,26)"/><text x="7.0020%" y="895.50"></text></g><g><title>[lobsters] (8 samples, 0.57%)</title><rect x="6.3966%" y="901" width="0.5686%" height="15" fill="rgb(235,183,28)"/><text x="6.6466%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.36%)</title><rect x="7.1784%" y="789" width="0.3554%" height="15" fill="rgb(221,5,38)"/><text x="7.4284%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="7.3205%" y="773" width="0.2132%" height="15" fill="rgb(247,18,42)"/><text x="7.5705%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="7.3205%" y="757" width="0.2132%" height="15" fill="rgb(241,131,45)"/><text x="7.5705%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.21%)</title><rect x="7.3205%" y="741" width="0.2132%" height="15" fill="rgb(249,31,29)"/><text x="7.5705%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.21%)</title><rect x="7.3205%" y="725" width="0.2132%" height="15" fill="rgb(225,111,53)"/><text x="7.5705%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.21%)</title><rect x="7.3205%" y="709" width="0.2132%" height="15" fill="rgb(238,160,17)"/><text x="7.5705%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.21%)</title><rect x="7.3205%" y="693" width="0.2132%" height="15" fill="rgb(214,148,48)"/><text x="7.5705%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="7.3205%" y="677" width="0.2132%" height="15" fill="rgb(232,36,49)"/><text x="7.5705%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.21%)</title><rect x="7.3205%" y="661" width="0.2132%" height="15" fill="rgb(209,103,24)"/><text x="7.5705%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.21%)</title><rect x="7.3205%" y="645" width="0.2132%" height="15" fill="rgb(229,88,8)"/><text x="7.5705%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.21%)</title><rect x="7.3205%" y="629" width="0.2132%" height="15" fill="rgb(213,181,19)"/><text x="7.5705%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.21%)</title><rect x="7.3205%" y="613" width="0.2132%" height="15" fill="rgb(254,191,54)"/><text x="7.5705%" y="623.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.21%)</title><rect x="7.3205%" y="597" width="0.2132%" height="15" fill="rgb(241,83,37)"/><text x="7.5705%" y="607.50"></text></g><g><title>_int_malloc (3 samples, 0.21%)</title><rect x="7.3205%" y="581" width="0.2132%" height="15" fill="rgb(233,36,39)"/><text x="7.5705%" y="591.50"></text></g><g><title>__GI___mprotect (2 samples, 0.14%)</title><rect x="7.5338%" y="741" width="0.1421%" height="15" fill="rgb(226,3,54)"/><text x="7.7838%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (9 samples, 0.64%)</title><rect x="7.1073%" y="853" width="0.6397%" height="15" fill="rgb(245,192,40)"/><text x="7.3573%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (9 samples, 0.64%)</title><rect x="7.1073%" y="837" width="0.6397%" height="15" fill="rgb(238,167,29)"/><text x="7.3573%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.57%)</title><rect x="7.1784%" y="821" width="0.5686%" height="15" fill="rgb(232,182,51)"/><text x="7.4284%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.57%)</title><rect x="7.1784%" y="805" width="0.5686%" height="15" fill="rgb(231,60,39)"/><text x="7.4284%" y="815.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.21%)</title><rect x="7.5338%" y="789" width="0.2132%" height="15" fill="rgb(208,69,12)"/><text x="7.7838%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.21%)</title><rect x="7.5338%" y="773" width="0.2132%" height="15" fill="rgb(235,93,37)"/><text x="7.7838%" y="783.50"></text></g><g><title>sysmalloc (3 samples, 0.21%)</title><rect x="7.5338%" y="757" width="0.2132%" height="15" fill="rgb(213,116,39)"/><text x="7.7838%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.36%)</title><rect x="7.7470%" y="837" width="0.3554%" height="15" fill="rgb(222,207,29)"/><text x="7.9970%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.28%)</title><rect x="7.8181%" y="821" width="0.2843%" height="15" fill="rgb(206,96,30)"/><text x="8.0681%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_to_mv_query (8 samples, 0.57%)</title><rect x="7.7470%" y="853" width="0.5686%" height="15" fill="rgb(218,138,4)"/><text x="7.9970%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::setexpr_to_mv_setexpr (3 samples, 0.21%)</title><rect x="8.1023%" y="837" width="0.2132%" height="15" fill="rgb(250,191,14)"/><text x="8.3523%" y="847.50"></text></g><g><title>sk_wait_data (5 samples, 0.36%)</title><rect x="8.3156%" y="597" width="0.3554%" height="15" fill="rgb(239,60,40)"/><text x="8.5656%" y="607.50"></text></g><g><title>wait_woken (5 samples, 0.36%)</title><rect x="8.3156%" y="581" width="0.3554%" height="15" fill="rgb(206,27,48)"/><text x="8.5656%" y="591.50"></text></g><g><title>schedule_timeout (5 samples, 0.36%)</title><rect x="8.3156%" y="565" width="0.3554%" height="15" fill="rgb(225,35,8)"/><text x="8.5656%" y="575.50"></text></g><g><title>schedule (5 samples, 0.36%)</title><rect x="8.3156%" y="549" width="0.3554%" height="15" fill="rgb(250,213,24)"/><text x="8.5656%" y="559.50"></text></g><g><title>__schedule (4 samples, 0.28%)</title><rect x="8.3866%" y="533" width="0.2843%" height="15" fill="rgb(247,123,22)"/><text x="8.6366%" y="543.50"></text></g><g><title>do_syscall_64 (6 samples, 0.43%)</title><rect x="8.3156%" y="677" width="0.4264%" height="15" fill="rgb(231,138,38)"/><text x="8.5656%" y="687.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.43%)</title><rect x="8.3156%" y="661" width="0.4264%" height="15" fill="rgb(231,145,46)"/><text x="8.5656%" y="671.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.43%)</title><rect x="8.3156%" y="645" width="0.4264%" height="15" fill="rgb(251,118,11)"/><text x="8.5656%" y="655.50"></text></g><g><title>inet_recvmsg (6 samples, 0.43%)</title><rect x="8.3156%" y="629" width="0.4264%" height="15" fill="rgb(217,147,25)"/><text x="8.5656%" y="639.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.43%)</title><rect x="8.3156%" y="613" width="0.4264%" height="15" fill="rgb(247,81,37)"/><text x="8.5656%" y="623.50"></text></g><g><title>mysql::conn::Conn::_query (8 samples, 0.57%)</title><rect x="8.3156%" y="853" width="0.5686%" height="15" fill="rgb(209,12,38)"/><text x="8.5656%" y="863.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (8 samples, 0.57%)</title><rect x="8.3156%" y="837" width="0.5686%" height="15" fill="rgb(227,1,9)"/><text x="8.5656%" y="847.50"></text></g><g><title>mysql::conn::Conn::read_packet (8 samples, 0.57%)</title><rect x="8.3156%" y="821" width="0.5686%" height="15" fill="rgb(248,47,43)"/><text x="8.5656%" y="831.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.57%)</title><rect x="8.3156%" y="805" width="0.5686%" height="15" fill="rgb(221,10,30)"/><text x="8.5656%" y="815.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.57%)</title><rect x="8.3156%" y="789" width="0.5686%" height="15" fill="rgb(210,229,1)"/><text x="8.5656%" y="799.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.57%)</title><rect x="8.3156%" y="773" width="0.5686%" height="15" fill="rgb(222,148,37)"/><text x="8.5656%" y="783.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 0.57%)</title><rect x="8.3156%" y="757" width="0.5686%" height="15" fill="rgb(234,67,33)"/><text x="8.5656%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 0.57%)</title><rect x="8.3156%" y="741" width="0.5686%" height="15" fill="rgb(247,98,35)"/><text x="8.5656%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 0.57%)</title><rect x="8.3156%" y="725" width="0.5686%" height="15" fill="rgb(247,138,52)"/><text x="8.5656%" y="735.50"></text></g><g><title>__libc_recv (8 samples, 0.57%)</title><rect x="8.3156%" y="709" width="0.5686%" height="15" fill="rgb(213,79,30)"/><text x="8.5656%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.57%)</title><rect x="8.3156%" y="693" width="0.5686%" height="15" fill="rgb(246,177,23)"/><text x="8.5656%" y="703.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="8.7420%" y="677" width="0.1421%" height="15" fill="rgb(230,62,27)"/><text x="8.9920%" y="687.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (26 samples, 1.85%)</title><rect x="7.1073%" y="869" width="1.8479%" height="15" fill="rgb(216,154,8)"/><text x="7.3573%" y="879.50">d..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (31 samples, 2.20%)</title><rect x="7.1073%" y="885" width="2.2033%" height="15" fill="rgb(244,35,45)"/><text x="7.3573%" y="895.50">&lt;..</text></g><g><title>sql_parser::parser::parse_statements (5 samples, 0.36%)</title><rect x="8.9552%" y="869" width="0.3554%" height="15" fill="rgb(251,115,12)"/><text x="9.2052%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (5 samples, 0.36%)</title><rect x="8.9552%" y="853" width="0.3554%" height="15" fill="rgb(240,54,50)"/><text x="9.2052%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.21%)</title><rect x="9.0974%" y="837" width="0.2132%" height="15" fill="rgb(233,84,52)"/><text x="9.3474%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="9.4527%" y="885" width="0.1421%" height="15" fill="rgb(207,117,47)"/><text x="9.7027%" y="895.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="9.6660%" y="885" width="0.1421%" height="15" fill="rgb(249,43,39)"/><text x="9.9160%" y="895.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="9.9502%" y="677" width="0.1421%" height="15" fill="rgb(209,38,44)"/><text x="10.2002%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="9.9502%" y="725" width="0.2132%" height="15" fill="rgb(236,212,23)"/><text x="10.2002%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.21%)</title><rect x="9.9502%" y="709" width="0.2132%" height="15" fill="rgb(242,79,21)"/><text x="10.2002%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.21%)</title><rect x="9.9502%" y="693" width="0.2132%" height="15" fill="rgb(211,96,35)"/><text x="10.2002%" y="703.50"></text></g><g><title>__libc_start_main (5 samples, 0.36%)</title><rect x="9.9502%" y="885" width="0.3554%" height="15" fill="rgb(253,215,40)"/><text x="10.2002%" y="895.50"></text></g><g><title>main (5 samples, 0.36%)</title><rect x="9.9502%" y="869" width="0.3554%" height="15" fill="rgb(211,81,21)"/><text x="10.2002%" y="879.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.36%)</title><rect x="9.9502%" y="853" width="0.3554%" height="15" fill="rgb(208,190,38)"/><text x="10.2002%" y="863.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="9.9502%" y="837" width="0.3554%" height="15" fill="rgb(235,213,38)"/><text x="10.2002%" y="847.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="9.9502%" y="821" width="0.3554%" height="15" fill="rgb(237,122,38)"/><text x="10.2002%" y="831.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="9.9502%" y="805" width="0.3554%" height="15" fill="rgb(244,218,35)"/><text x="10.2002%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.36%)</title><rect x="9.9502%" y="789" width="0.3554%" height="15" fill="rgb(240,68,47)"/><text x="10.2002%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (5 samples, 0.36%)</title><rect x="9.9502%" y="773" width="0.3554%" height="15" fill="rgb(210,16,53)"/><text x="10.2002%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.36%)</title><rect x="9.9502%" y="757" width="0.3554%" height="15" fill="rgb(235,124,12)"/><text x="10.2002%" y="767.50"></text></g><g><title>lobsters::main (5 samples, 0.36%)</title><rect x="9.9502%" y="741" width="0.3554%" height="15" fill="rgb(224,169,11)"/><text x="10.2002%" y="751.50"></text></g><g><title>__rdl_alloc (2 samples, 0.14%)</title><rect x="10.3056%" y="885" width="0.1421%" height="15" fill="rgb(250,166,2)"/><text x="10.5556%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.14%)</title><rect x="10.3056%" y="869" width="0.1421%" height="15" fill="rgb(242,216,29)"/><text x="10.5556%" y="879.50"></text></g><g><title>_int_free (5 samples, 0.36%)</title><rect x="10.4478%" y="885" width="0.3554%" height="15" fill="rgb(230,116,27)"/><text x="10.6978%" y="895.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="10.8031%" y="885" width="0.1421%" height="15" fill="rgb(228,99,48)"/><text x="11.0531%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="11.0163%" y="885" width="0.1421%" height="15" fill="rgb(253,11,6)"/><text x="11.2663%" y="895.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.14%)</title><rect x="11.1585%" y="885" width="0.1421%" height="15" fill="rgb(247,143,39)"/><text x="11.4085%" y="895.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.14%)</title><rect x="11.4428%" y="805" width="0.1421%" height="15" fill="rgb(236,97,10)"/><text x="11.6928%" y="815.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.14%)</title><rect x="11.4428%" y="789" width="0.1421%" height="15" fill="rgb(233,208,19)"/><text x="11.6928%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.14%)</title><rect x="11.4428%" y="773" width="0.1421%" height="15" fill="rgb(216,164,2)"/><text x="11.6928%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.14%)</title><rect x="11.4428%" y="757" width="0.1421%" height="15" fill="rgb(220,129,5)"/><text x="11.6928%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.14%)</title><rect x="11.4428%" y="741" width="0.1421%" height="15" fill="rgb(242,17,10)"/><text x="11.6928%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.14%)</title><rect x="11.4428%" y="725" width="0.1421%" height="15" fill="rgb(242,107,0)"/><text x="11.6928%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="11.4428%" y="709" width="0.1421%" height="15" fill="rgb(251,28,31)"/><text x="11.6928%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.14%)</title><rect x="11.4428%" y="693" width="0.1421%" height="15" fill="rgb(233,223,10)"/><text x="11.6928%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.14%)</title><rect x="11.4428%" y="677" width="0.1421%" height="15" fill="rgb(215,21,27)"/><text x="11.6928%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.14%)</title><rect x="11.4428%" y="661" width="0.1421%" height="15" fill="rgb(232,23,21)"/><text x="11.6928%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9 samples, 0.64%)</title><rect x="11.4428%" y="885" width="0.6397%" height="15" fill="rgb(244,5,23)"/><text x="11.6928%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.64%)</title><rect x="11.4428%" y="869" width="0.6397%" height="15" fill="rgb(226,81,46)"/><text x="11.6928%" y="879.50"></text></g><g><title>decor::Shim::run_on_tcp (9 samples, 0.64%)</title><rect x="11.4428%" y="853" width="0.6397%" height="15" fill="rgb(247,70,30)"/><text x="11.6928%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (9 samples, 0.64%)</title><rect x="11.4428%" y="837" width="0.6397%" height="15" fill="rgb(212,68,19)"/><text x="11.6928%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.64%)</title><rect x="11.4428%" y="821" width="0.6397%" height="15" fill="rgb(240,187,13)"/><text x="11.6928%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (7 samples, 0.50%)</title><rect x="11.5849%" y="805" width="0.4975%" height="15" fill="rgb(223,113,26)"/><text x="11.8349%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (7 samples, 0.50%)</title><rect x="11.5849%" y="789" width="0.4975%" height="15" fill="rgb(206,192,2)"/><text x="11.8349%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (7 samples, 0.50%)</title><rect x="11.5849%" y="773" width="0.4975%" height="15" fill="rgb(241,108,4)"/><text x="11.8349%" y="783.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (2 samples, 0.14%)</title><rect x="11.9403%" y="757" width="0.1421%" height="15" fill="rgb(247,173,49)"/><text x="12.1903%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="12.0824%" y="885" width="0.1421%" height="15" fill="rgb(224,114,35)"/><text x="12.3324%" y="895.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.14%)</title><rect x="12.2246%" y="885" width="0.1421%" height="15" fill="rgb(245,159,27)"/><text x="12.4746%" y="895.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (2 samples, 0.14%)</title><rect x="12.2246%" y="869" width="0.1421%" height="15" fill="rgb(245,172,44)"/><text x="12.4746%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.36%)</title><rect x="12.3667%" y="821" width="0.3554%" height="15" fill="rgb(236,23,11)"/><text x="12.6167%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="12.5089%" y="805" width="0.2132%" height="15" fill="rgb(205,117,38)"/><text x="12.7589%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.21%)</title><rect x="12.5089%" y="789" width="0.2132%" height="15" fill="rgb(237,72,25)"/><text x="12.7589%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="12.7221%" y="821" width="0.1421%" height="15" fill="rgb(244,70,9)"/><text x="12.9721%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="12.7221%" y="805" width="0.1421%" height="15" fill="rgb(217,125,39)"/><text x="12.9721%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (8 samples, 0.57%)</title><rect x="12.3667%" y="853" width="0.5686%" height="15" fill="rgb(235,36,10)"/><text x="12.6167%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (8 samples, 0.57%)</title><rect x="12.3667%" y="837" width="0.5686%" height="15" fill="rgb(251,123,47)"/><text x="12.6167%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.28%)</title><rect x="13.1485%" y="725" width="0.2843%" height="15" fill="rgb(221,13,13)"/><text x="13.3985%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="13.2196%" y="709" width="0.2132%" height="15" fill="rgb(238,131,9)"/><text x="13.4696%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="13.2196%" y="693" width="0.2132%" height="15" fill="rgb(211,50,8)"/><text x="13.4696%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.21%)</title><rect x="13.2196%" y="677" width="0.2132%" height="15" fill="rgb(245,182,24)"/><text x="13.4696%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.21%)</title><rect x="13.2196%" y="661" width="0.2132%" height="15" fill="rgb(242,14,37)"/><text x="13.4696%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="13.2907%" y="645" width="0.1421%" height="15" fill="rgb(246,228,12)"/><text x="13.5407%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="13.2907%" y="629" width="0.1421%" height="15" fill="rgb(213,55,15)"/><text x="13.5407%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="13.2907%" y="613" width="0.1421%" height="15" fill="rgb(209,9,3)"/><text x="13.5407%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="13.2907%" y="597" width="0.1421%" height="15" fill="rgb(230,59,30)"/><text x="13.5407%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="13.2907%" y="581" width="0.1421%" height="15" fill="rgb(209,121,21)"/><text x="13.5407%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="13.2907%" y="565" width="0.1421%" height="15" fill="rgb(220,109,13)"/><text x="13.5407%" y="575.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.14%)</title><rect x="13.5750%" y="725" width="0.1421%" height="15" fill="rgb(232,18,1)"/><text x="13.8250%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.14%)</title><rect x="13.5750%" y="709" width="0.1421%" height="15" fill="rgb(215,41,42)"/><text x="13.8250%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="13.5750%" y="693" width="0.1421%" height="15" fill="rgb(224,123,36)"/><text x="13.8250%" y="703.50"></text></g><g><title>decor::query_transformer::QueryTransformer::joinoperator_to_mv_joinoperator (15 samples, 1.07%)</title><rect x="13.0775%" y="789" width="1.0661%" height="15" fill="rgb(240,125,3)"/><text x="13.3275%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (15 samples, 1.07%)</title><rect x="13.0775%" y="773" width="1.0661%" height="15" fill="rgb(205,98,50)"/><text x="13.3275%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (14 samples, 1.00%)</title><rect x="13.1485%" y="757" width="0.9950%" height="15" fill="rgb(205,185,37)"/><text x="13.3985%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (14 samples, 1.00%)</title><rect x="13.1485%" y="741" width="0.9950%" height="15" fill="rgb(238,207,15)"/><text x="13.3985%" y="751.50"></text></g><g><title>decor::helpers::str_subset_of_idents (6 samples, 0.43%)</title><rect x="13.7171%" y="725" width="0.4264%" height="15" fill="rgb(213,199,42)"/><text x="13.9671%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.36%)</title><rect x="14.3568%" y="725" width="0.3554%" height="15" fill="rgb(235,201,11)"/><text x="14.6068%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.36%)</title><rect x="14.3568%" y="709" width="0.3554%" height="15" fill="rgb(207,46,11)"/><text x="14.6068%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.21%)</title><rect x="14.4989%" y="693" width="0.2132%" height="15" fill="rgb(241,35,35)"/><text x="14.7489%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="14.5700%" y="677" width="0.1421%" height="15" fill="rgb(243,32,47)"/><text x="14.8200%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="14.5700%" y="661" width="0.1421%" height="15" fill="rgb(247,202,23)"/><text x="14.8200%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="14.5700%" y="645" width="0.1421%" height="15" fill="rgb(219,102,11)"/><text x="14.8200%" y="655.50"></text></g><g><title>core::fmt::write (8 samples, 0.57%)</title><rect x="14.2857%" y="757" width="0.5686%" height="15" fill="rgb(243,110,44)"/><text x="14.5357%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (7 samples, 0.50%)</title><rect x="14.3568%" y="741" width="0.4975%" height="15" fill="rgb(222,74,54)"/><text x="14.6068%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="14.7122%" y="725" width="0.1421%" height="15" fill="rgb(216,99,12)"/><text x="14.9622%" y="735.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.14%)</title><rect x="14.9254%" y="741" width="0.1421%" height="15" fill="rgb(226,22,26)"/><text x="15.1754%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.14%)</title><rect x="14.9254%" y="725" width="0.1421%" height="15" fill="rgb(217,163,10)"/><text x="15.1754%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="14.9254%" y="709" width="0.1421%" height="15" fill="rgb(213,25,53)"/><text x="15.1754%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.06%)</title><rect x="13.0775%" y="805" width="2.0611%" height="15" fill="rgb(252,105,26)"/><text x="13.3275%" y="815.50">&lt;..</text></g><g><title>decor::query_transformer::QueryTransformer::tablefactor_to_mv_tablefactor (14 samples, 1.00%)</title><rect x="14.1436%" y="789" width="0.9950%" height="15" fill="rgb(220,39,43)"/><text x="14.3936%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (13 samples, 0.92%)</title><rect x="14.2146%" y="773" width="0.9240%" height="15" fill="rgb(229,68,48)"/><text x="14.4646%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (4 samples, 0.28%)</title><rect x="14.8543%" y="757" width="0.2843%" height="15" fill="rgb(252,8,32)"/><text x="15.1043%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="15.1386%" y="805" width="0.2843%" height="15" fill="rgb(223,20,43)"/><text x="15.3886%" y="815.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.21%)</title><rect x="15.2097%" y="789" width="0.2132%" height="15" fill="rgb(229,81,49)"/><text x="15.4597%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.21%)</title><rect x="15.2097%" y="773" width="0.2132%" height="15" fill="rgb(236,28,36)"/><text x="15.4597%" y="783.50"></text></g><g><title>malloc_consolidate (2 samples, 0.14%)</title><rect x="15.2807%" y="757" width="0.1421%" height="15" fill="rgb(249,185,26)"/><text x="15.5307%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="15.5650%" y="741" width="0.1421%" height="15" fill="rgb(249,174,33)"/><text x="15.8150%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.21%)</title><rect x="15.7072%" y="741" width="0.2132%" height="15" fill="rgb(233,201,37)"/><text x="15.9572%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.21%)</title><rect x="15.7072%" y="725" width="0.2132%" height="15" fill="rgb(221,78,26)"/><text x="15.9572%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.21%)</title><rect x="15.7072%" y="709" width="0.2132%" height="15" fill="rgb(250,127,30)"/><text x="15.9572%" y="719.50"></text></g><g><title>core::fmt::write (7 samples, 0.50%)</title><rect x="15.4940%" y="773" width="0.4975%" height="15" fill="rgb(230,49,44)"/><text x="15.7440%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (6 samples, 0.43%)</title><rect x="15.5650%" y="757" width="0.4264%" height="15" fill="rgb(229,67,23)"/><text x="15.8150%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.21%)</title><rect x="16.1336%" y="693" width="0.2132%" height="15" fill="rgb(249,83,47)"/><text x="16.3836%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.21%)</title><rect x="16.1336%" y="677" width="0.2132%" height="15" fill="rgb(215,43,3)"/><text x="16.3836%" y="687.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.50%)</title><rect x="15.9915%" y="757" width="0.4975%" height="15" fill="rgb(238,154,13)"/><text x="16.2415%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.43%)</title><rect x="16.0625%" y="741" width="0.4264%" height="15" fill="rgb(219,56,2)"/><text x="16.3125%" y="751.50"></text></g><g><title>core::fmt::write (6 samples, 0.43%)</title><rect x="16.0625%" y="725" width="0.4264%" height="15" fill="rgb(233,0,4)"/><text x="16.3125%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.36%)</title><rect x="16.1336%" y="709" width="0.3554%" height="15" fill="rgb(235,30,7)"/><text x="16.3836%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="16.4890%" y="741" width="0.2132%" height="15" fill="rgb(250,79,13)"/><text x="16.7390%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 3.84%)</title><rect x="12.9353%" y="837" width="3.8380%" height="15" fill="rgb(211,146,34)"/><text x="13.1853%" y="847.50">&lt;all..</text></g><g><title>decor::query_transformer::QueryTransformer::tablewithjoins_to_mv_tablewithjoins (53 samples, 3.77%)</title><rect x="13.0064%" y="821" width="3.7669%" height="15" fill="rgb(228,22,38)"/><text x="13.2564%" y="831.50">deco..</text></g><g><title>decor::query_transformer::QueryTransformer::tablefactor_to_mv_tablefactor (19 samples, 1.35%)</title><rect x="15.4229%" y="805" width="1.3504%" height="15" fill="rgb(235,168,5)"/><text x="15.6729%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (18 samples, 1.28%)</title><rect x="15.4940%" y="789" width="1.2793%" height="15" fill="rgb(221,155,16)"/><text x="15.7440%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (11 samples, 0.78%)</title><rect x="15.9915%" y="773" width="0.7818%" height="15" fill="rgb(215,215,53)"/><text x="16.2415%" y="783.50"></text></g><g><title>decor::helpers::str_subset_of_idents (4 samples, 0.28%)</title><rect x="16.4890%" y="757" width="0.2843%" height="15" fill="rgb(223,4,10)"/><text x="16.7390%" y="767.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="16.8443%" y="757" width="0.2132%" height="15" fill="rgb(234,103,6)"/><text x="17.0943%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (3 samples, 0.21%)</title><rect x="16.8443%" y="741" width="0.2132%" height="15" fill="rgb(227,97,0)"/><text x="17.0943%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.50%)</title><rect x="16.8443%" y="773" width="0.4975%" height="15" fill="rgb(234,150,53)"/><text x="17.0943%" y="783.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.28%)</title><rect x="17.0576%" y="757" width="0.2843%" height="15" fill="rgb(228,201,54)"/><text x="17.3076%" y="767.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="17.3419%" y="773" width="0.1421%" height="15" fill="rgb(222,22,37)"/><text x="17.5919%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="17.5551%" y="773" width="0.1421%" height="15" fill="rgb(237,53,32)"/><text x="17.8051%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.07%)</title><rect x="16.7733%" y="837" width="1.0661%" height="15" fill="rgb(233,25,53)"/><text x="17.0233%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (15 samples, 1.07%)</title><rect x="16.7733%" y="821" width="1.0661%" height="15" fill="rgb(210,40,34)"/><text x="17.0233%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (15 samples, 1.07%)</title><rect x="16.7733%" y="805" width="1.0661%" height="15" fill="rgb(241,220,44)"/><text x="17.0233%" y="815.50"></text></g><g><title>decor::helpers::str_subset_of_idents (15 samples, 1.07%)</title><rect x="16.7733%" y="789" width="1.0661%" height="15" fill="rgb(235,28,35)"/><text x="17.0233%" y="799.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.14%)</title><rect x="17.6972%" y="773" width="0.1421%" height="15" fill="rgb(210,56,17)"/><text x="17.9472%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.14%)</title><rect x="17.6972%" y="757" width="0.1421%" height="15" fill="rgb(224,130,29)"/><text x="17.9472%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.14%)</title><rect x="17.6972%" y="741" width="0.1421%" height="15" fill="rgb(235,212,8)"/><text x="17.9472%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.14%)</title><rect x="17.6972%" y="725" width="0.1421%" height="15" fill="rgb(223,33,50)"/><text x="17.9472%" y="735.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.21%)</title><rect x="17.9104%" y="789" width="0.2132%" height="15" fill="rgb(219,149,13)"/><text x="18.1604%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.21%)</title><rect x="17.9104%" y="773" width="0.2132%" height="15" fill="rgb(250,156,29)"/><text x="18.1604%" y="783.50"></text></g><g><title>core::fmt::write (3 samples, 0.21%)</title><rect x="17.9104%" y="757" width="0.2132%" height="15" fill="rgb(216,193,19)"/><text x="18.1604%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.14%)</title><rect x="17.9815%" y="741" width="0.1421%" height="15" fill="rgb(216,135,14)"/><text x="18.2315%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="17.9815%" y="725" width="0.1421%" height="15" fill="rgb(241,47,5)"/><text x="18.2315%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.14%)</title><rect x="17.9815%" y="709" width="0.1421%" height="15" fill="rgb(233,42,35)"/><text x="18.2315%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="18.1237%" y="773" width="0.1421%" height="15" fill="rgb(231,13,6)"/><text x="18.3737%" y="783.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="18.1237%" y="757" width="0.1421%" height="15" fill="rgb(207,181,40)"/><text x="18.3737%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.14%)</title><rect x="18.1237%" y="741" width="0.1421%" height="15" fill="rgb(254,173,49)"/><text x="18.3737%" y="751.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (85 samples, 6.04%)</title><rect x="12.3667%" y="885" width="6.0412%" height="15" fill="rgb(221,1,38)"/><text x="12.6167%" y="895.50">decor::q..</text></g><g><title>decor::query_transformer::QueryTransformer::query_to_mv_query (85 samples, 6.04%)</title><rect x="12.3667%" y="869" width="6.0412%" height="15" fill="rgb(206,124,46)"/><text x="12.6167%" y="879.50">decor::q..</text></g><g><title>decor::query_transformer::QueryTransformer::setexpr_to_mv_setexpr (77 samples, 5.47%)</title><rect x="12.9353%" y="853" width="5.4726%" height="15" fill="rgb(249,21,11)"/><text x="13.1853%" y="863.50">decor::..</text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (7 samples, 0.50%)</title><rect x="17.9104%" y="837" width="0.4975%" height="15" fill="rgb(222,201,40)"/><text x="18.1604%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (7 samples, 0.50%)</title><rect x="17.9104%" y="821" width="0.4975%" height="15" fill="rgb(235,61,29)"/><text x="18.1604%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (7 samples, 0.50%)</title><rect x="17.9104%" y="805" width="0.4975%" height="15" fill="rgb(219,207,3)"/><text x="18.1604%" y="815.50"></text></g><g><title>decor::helpers::str_subset_of_idents (4 samples, 0.28%)</title><rect x="18.1237%" y="789" width="0.2843%" height="15" fill="rgb(222,56,46)"/><text x="18.3737%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="18.4080%" y="869" width="0.2132%" height="15" fill="rgb(239,76,54)"/><text x="18.6580%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.21%)</title><rect x="18.4080%" y="853" width="0.2132%" height="15" fill="rgb(231,124,27)"/><text x="18.6580%" y="863.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.21%)</title><rect x="18.4080%" y="837" width="0.2132%" height="15" fill="rgb(249,195,6)"/><text x="18.6580%" y="847.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.21%)</title><rect x="18.4080%" y="821" width="0.2132%" height="15" fill="rgb(237,174,47)"/><text x="18.6580%" y="831.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="18.4080%" y="805" width="0.2132%" height="15" fill="rgb(206,201,31)"/><text x="18.6580%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.21%)</title><rect x="18.4080%" y="789" width="0.2132%" height="15" fill="rgb(231,57,52)"/><text x="18.6580%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.21%)</title><rect x="18.4080%" y="773" width="0.2132%" height="15" fill="rgb(248,177,22)"/><text x="18.6580%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.21%)</title><rect x="18.4080%" y="757" width="0.2132%" height="15" fill="rgb(215,211,37)"/><text x="18.6580%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.14%)</title><rect x="18.4790%" y="741" width="0.1421%" height="15" fill="rgb(241,128,51)"/><text x="18.7290%" y="751.50"></text></g><g><title>lobsters::main (4 samples, 0.28%)</title><rect x="18.4080%" y="885" width="0.2843%" height="15" fill="rgb(227,165,31)"/><text x="18.6580%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.14%)</title><rect x="18.6923%" y="869" width="0.1421%" height="15" fill="rgb(228,167,24)"/><text x="18.9423%" y="879.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.14%)</title><rect x="18.6923%" y="853" width="0.1421%" height="15" fill="rgb(228,143,12)"/><text x="18.9423%" y="863.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.14%)</title><rect x="19.0476%" y="837" width="0.1421%" height="15" fill="rgb(249,149,8)"/><text x="19.2976%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.14%)</title><rect x="19.0476%" y="821" width="0.1421%" height="15" fill="rgb(243,35,44)"/><text x="19.2976%" y="831.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="19.0476%" y="805" width="0.1421%" height="15" fill="rgb(246,89,9)"/><text x="19.2976%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (2 samples, 0.14%)</title><rect x="19.0476%" y="789" width="0.1421%" height="15" fill="rgb(233,213,13)"/><text x="19.2976%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="19.1898%" y="837" width="0.2843%" height="15" fill="rgb(233,141,41)"/><text x="19.4398%" y="847.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.21%)</title><rect x="19.2608%" y="821" width="0.2132%" height="15" fill="rgb(239,167,4)"/><text x="19.5108%" y="831.50"></text></g><g><title>_int_realloc (3 samples, 0.21%)</title><rect x="19.2608%" y="805" width="0.2132%" height="15" fill="rgb(209,217,16)"/><text x="19.5108%" y="815.50"></text></g><g><title>_int_malloc (3 samples, 0.21%)</title><rect x="19.2608%" y="789" width="0.2132%" height="15" fill="rgb(219,88,35)"/><text x="19.5108%" y="799.50"></text></g><g><title>sysmalloc (2 samples, 0.14%)</title><rect x="19.3319%" y="773" width="0.1421%" height="15" fill="rgb(220,193,23)"/><text x="19.5819%" y="783.50"></text></g><g><title>sock_def_readable (2 samples, 0.14%)</title><rect x="20.0426%" y="309" width="0.1421%" height="15" fill="rgb(230,90,52)"/><text x="20.2926%" y="319.50"></text></g><g><title>__ip_queue_xmit (11 samples, 0.78%)</title><rect x="19.6162%" y="581" width="0.7818%" height="15" fill="rgb(252,106,19)"/><text x="19.8662%" y="591.50"></text></g><g><title>ip_output (10 samples, 0.71%)</title><rect x="19.6873%" y="565" width="0.7107%" height="15" fill="rgb(206,74,20)"/><text x="19.9373%" y="575.50"></text></g><g><title>ip_finish_output2 (10 samples, 0.71%)</title><rect x="19.6873%" y="549" width="0.7107%" height="15" fill="rgb(230,138,44)"/><text x="19.9373%" y="559.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.64%)</title><rect x="19.7584%" y="533" width="0.6397%" height="15" fill="rgb(235,182,43)"/><text x="20.0084%" y="543.50"></text></g><g><title>do_softirq (9 samples, 0.64%)</title><rect x="19.7584%" y="517" width="0.6397%" height="15" fill="rgb(242,16,51)"/><text x="20.0084%" y="527.50"></text></g><g><title>do_softirq_own_stack (9 samples, 0.64%)</title><rect x="19.7584%" y="501" width="0.6397%" height="15" fill="rgb(248,9,4)"/><text x="20.0084%" y="511.50"></text></g><g><title>__do_softirq (9 samples, 0.64%)</title><rect x="19.7584%" y="485" width="0.6397%" height="15" fill="rgb(210,31,22)"/><text x="20.0084%" y="495.50"></text></g><g><title>net_rx_action (8 samples, 0.57%)</title><rect x="19.8294%" y="469" width="0.5686%" height="15" fill="rgb(239,54,39)"/><text x="20.0794%" y="479.50"></text></g><g><title>process_backlog (7 samples, 0.50%)</title><rect x="19.9005%" y="453" width="0.4975%" height="15" fill="rgb(230,99,41)"/><text x="20.1505%" y="463.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.50%)</title><rect x="19.9005%" y="437" width="0.4975%" height="15" fill="rgb(253,106,12)"/><text x="20.1505%" y="447.50"></text></g><g><title>ip_rcv (7 samples, 0.50%)</title><rect x="19.9005%" y="421" width="0.4975%" height="15" fill="rgb(213,46,41)"/><text x="20.1505%" y="431.50"></text></g><g><title>ip_local_deliver (7 samples, 0.50%)</title><rect x="19.9005%" y="405" width="0.4975%" height="15" fill="rgb(215,133,35)"/><text x="20.1505%" y="415.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.50%)</title><rect x="19.9005%" y="389" width="0.4975%" height="15" fill="rgb(213,28,5)"/><text x="20.1505%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.50%)</title><rect x="19.9005%" y="373" width="0.4975%" height="15" fill="rgb(215,77,49)"/><text x="20.1505%" y="383.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.50%)</title><rect x="19.9005%" y="357" width="0.4975%" height="15" fill="rgb(248,100,22)"/><text x="20.1505%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.36%)</title><rect x="20.0426%" y="341" width="0.3554%" height="15" fill="rgb(208,67,9)"/><text x="20.2926%" y="351.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.36%)</title><rect x="20.0426%" y="325" width="0.3554%" height="15" fill="rgb(219,133,21)"/><text x="20.2926%" y="335.50"></text></g><g><title>tcp_ack (3 samples, 0.21%)</title><rect x="20.1848%" y="309" width="0.2132%" height="15" fill="rgb(246,46,29)"/><text x="20.4348%" y="319.50"></text></g><g><title>__tcp_transmit_skb (12 samples, 0.85%)</title><rect x="19.6162%" y="597" width="0.8529%" height="15" fill="rgb(246,185,52)"/><text x="19.8662%" y="607.50"></text></g><g><title>do_syscall_64 (14 samples, 1.00%)</title><rect x="19.5451%" y="725" width="0.9950%" height="15" fill="rgb(252,136,11)"/><text x="19.7951%" y="735.50"></text></g><g><title>__x64_sys_sendto (14 samples, 1.00%)</title><rect x="19.5451%" y="709" width="0.9950%" height="15" fill="rgb(219,138,53)"/><text x="19.7951%" y="719.50"></text></g><g><title>__sys_sendto (14 samples, 1.00%)</title><rect x="19.5451%" y="693" width="0.9950%" height="15" fill="rgb(211,51,23)"/><text x="19.7951%" y="703.50"></text></g><g><title>sock_sendmsg (14 samples, 1.00%)</title><rect x="19.5451%" y="677" width="0.9950%" height="15" fill="rgb(247,221,28)"/><text x="19.7951%" y="687.50"></text></g><g><title>tcp_sendmsg (14 samples, 1.00%)</title><rect x="19.5451%" y="661" width="0.9950%" height="15" fill="rgb(251,222,45)"/><text x="19.7951%" y="671.50"></text></g><g><title>tcp_sendmsg_locked (13 samples, 0.92%)</title><rect x="19.6162%" y="645" width="0.9240%" height="15" fill="rgb(217,162,53)"/><text x="19.8662%" y="655.50"></text></g><g><title>__tcp_push_pending_frames (13 samples, 0.92%)</title><rect x="19.6162%" y="629" width="0.9240%" height="15" fill="rgb(229,93,14)"/><text x="19.8662%" y="639.50"></text></g><g><title>tcp_write_xmit (13 samples, 0.92%)</title><rect x="19.6162%" y="613" width="0.9240%" height="15" fill="rgb(209,67,49)"/><text x="19.8662%" y="623.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (27 samples, 1.92%)</title><rect x="18.6923%" y="885" width="1.9190%" height="15" fill="rgb(213,87,29)"/><text x="18.9423%" y="895.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (25 samples, 1.78%)</title><rect x="18.8344%" y="869" width="1.7768%" height="15" fill="rgb(205,151,52)"/><text x="19.0844%" y="879.50">&lt;..</text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (25 samples, 1.78%)</title><rect x="18.8344%" y="853" width="1.7768%" height="15" fill="rgb(253,215,39)"/><text x="19.0844%" y="863.50">d..</text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.14%)</title><rect x="19.4741%" y="837" width="1.1372%" height="15" fill="rgb(221,220,41)"/><text x="19.7241%" y="847.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (16 samples, 1.14%)</title><rect x="19.4741%" y="821" width="1.1372%" height="15" fill="rgb(218,133,21)"/><text x="19.7241%" y="831.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (15 samples, 1.07%)</title><rect x="19.5451%" y="805" width="1.0661%" height="15" fill="rgb(221,193,43)"/><text x="19.7951%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (15 samples, 1.07%)</title><rect x="19.5451%" y="789" width="1.0661%" height="15" fill="rgb(240,128,52)"/><text x="19.7951%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::write (15 samples, 1.07%)</title><rect x="19.5451%" y="773" width="1.0661%" height="15" fill="rgb(253,114,12)"/><text x="19.7951%" y="783.50"></text></g><g><title>__libc_send (15 samples, 1.07%)</title><rect x="19.5451%" y="757" width="1.0661%" height="15" fill="rgb(215,223,47)"/><text x="19.7951%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 1.07%)</title><rect x="19.5451%" y="741" width="1.0661%" height="15" fill="rgb(248,225,23)"/><text x="19.7951%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.14%)</title><rect x="20.6823%" y="885" width="0.1421%" height="15" fill="rgb(250,108,0)"/><text x="20.9323%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (5 samples, 0.36%)</title><rect x="21.3220%" y="869" width="0.3554%" height="15" fill="rgb(228,208,7)"/><text x="21.5720%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.36%)</title><rect x="21.3220%" y="853" width="0.3554%" height="15" fill="rgb(244,45,10)"/><text x="21.5720%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (5 samples, 0.36%)</title><rect x="21.3220%" y="837" width="0.3554%" height="15" fill="rgb(207,125,25)"/><text x="21.5720%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (5 samples, 0.36%)</title><rect x="21.3220%" y="821" width="0.3554%" height="15" fill="rgb(210,195,18)"/><text x="21.5720%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.28%)</title><rect x="21.3930%" y="805" width="0.2843%" height="15" fill="rgb(249,80,12)"/><text x="21.6430%" y="815.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.14%)</title><rect x="21.5352%" y="789" width="0.1421%" height="15" fill="rgb(221,65,9)"/><text x="21.7852%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.14%)</title><rect x="21.5352%" y="773" width="0.1421%" height="15" fill="rgb(235,49,36)"/><text x="21.7852%" y="783.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="21.5352%" y="757" width="0.1421%" height="15" fill="rgb(225,32,20)"/><text x="21.7852%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (20 samples, 1.42%)</title><rect x="21.6773%" y="853" width="1.4215%" height="15" fill="rgb(215,141,46)"/><text x="21.9273%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (20 samples, 1.42%)</title><rect x="21.6773%" y="837" width="1.4215%" height="15" fill="rgb(250,160,47)"/><text x="21.9273%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (20 samples, 1.42%)</title><rect x="21.6773%" y="821" width="1.4215%" height="15" fill="rgb(216,222,40)"/><text x="21.9273%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (20 samples, 1.42%)</title><rect x="21.6773%" y="805" width="1.4215%" height="15" fill="rgb(234,217,39)"/><text x="21.9273%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::expected (19 samples, 1.35%)</title><rect x="21.7484%" y="789" width="1.3504%" height="15" fill="rgb(207,178,40)"/><text x="21.9984%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19 samples, 1.35%)</title><rect x="21.7484%" y="773" width="1.3504%" height="15" fill="rgb(221,136,13)"/><text x="21.9984%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 1.35%)</title><rect x="21.7484%" y="757" width="1.3504%" height="15" fill="rgb(249,199,10)"/><text x="21.9984%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 1.35%)</title><rect x="21.7484%" y="741" width="1.3504%" height="15" fill="rgb(249,222,13)"/><text x="21.9984%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 1.35%)</title><rect x="21.7484%" y="725" width="1.3504%" height="15" fill="rgb(244,185,38)"/><text x="21.9984%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (19 samples, 1.35%)</title><rect x="21.7484%" y="709" width="1.3504%" height="15" fill="rgb(236,202,9)"/><text x="21.9984%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 1.35%)</title><rect x="21.7484%" y="693" width="1.3504%" height="15" fill="rgb(250,229,37)"/><text x="21.9984%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (19 samples, 1.35%)</title><rect x="21.7484%" y="677" width="1.3504%" height="15" fill="rgb(206,174,23)"/><text x="21.9984%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 1.35%)</title><rect x="21.7484%" y="661" width="1.3504%" height="15" fill="rgb(211,33,43)"/><text x="21.9984%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 1.28%)</title><rect x="21.8195%" y="645" width="1.2793%" height="15" fill="rgb(245,58,50)"/><text x="22.0695%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (9 samples, 0.64%)</title><rect x="23.0988%" y="821" width="0.6397%" height="15" fill="rgb(244,68,36)"/><text x="23.3488%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (7 samples, 0.50%)</title><rect x="23.2409%" y="805" width="0.4975%" height="15" fill="rgb(232,229,15)"/><text x="23.4909%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.14%)</title><rect x="23.5963%" y="789" width="0.1421%" height="15" fill="rgb(254,30,23)"/><text x="23.8463%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.21%)</title><rect x="23.0988%" y="837" width="1.2082%" height="15" fill="rgb(235,160,14)"/><text x="23.3488%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 0.57%)</title><rect x="23.7385%" y="821" width="0.5686%" height="15" fill="rgb(212,155,44)"/><text x="23.9885%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (5 samples, 0.36%)</title><rect x="23.9517%" y="805" width="0.3554%" height="15" fill="rgb(226,2,50)"/><text x="24.2017%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.14%)</title><rect x="24.1649%" y="789" width="0.1421%" height="15" fill="rgb(234,177,6)"/><text x="24.4149%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="24.1649%" y="773" width="0.1421%" height="15" fill="rgb(217,24,9)"/><text x="24.4149%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="24.1649%" y="757" width="0.1421%" height="15" fill="rgb(220,13,46)"/><text x="24.4149%" y="767.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="24.1649%" y="741" width="0.1421%" height="15" fill="rgb(239,221,27)"/><text x="24.4149%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.14%)</title><rect x="24.5203%" y="805" width="0.1421%" height="15" fill="rgb(222,198,25)"/><text x="24.7703%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (2 samples, 0.14%)</title><rect x="24.6624%" y="805" width="0.1421%" height="15" fill="rgb(211,99,13)"/><text x="24.9124%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (2 samples, 0.14%)</title><rect x="24.6624%" y="789" width="0.1421%" height="15" fill="rgb(232,111,31)"/><text x="24.9124%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (53 samples, 3.77%)</title><rect x="21.3220%" y="885" width="3.7669%" height="15" fill="rgb(245,82,37)"/><text x="21.5720%" y="895.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (48 samples, 3.41%)</title><rect x="21.6773%" y="869" width="3.4115%" height="15" fill="rgb(227,149,46)"/><text x="21.9273%" y="879.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_select (28 samples, 1.99%)</title><rect x="23.0988%" y="853" width="1.9900%" height="15" fill="rgb(218,36,50)"/><text x="23.3488%" y="863.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (11 samples, 0.78%)</title><rect x="24.3070%" y="837" width="0.7818%" height="15" fill="rgb(226,80,48)"/><text x="24.5570%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_factor (9 samples, 0.64%)</title><rect x="24.4492%" y="821" width="0.6397%" height="15" fill="rgb(238,224,15)"/><text x="24.6992%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_optional_table_alias (4 samples, 0.28%)</title><rect x="24.8045%" y="805" width="0.2843%" height="15" fill="rgb(241,136,10)"/><text x="25.0545%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_optional_alias (4 samples, 0.28%)</title><rect x="24.8045%" y="789" width="0.2843%" height="15" fill="rgb(208,32,45)"/><text x="25.0545%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.14%)</title><rect x="24.9467%" y="773" width="0.1421%" height="15" fill="rgb(207,135,9)"/><text x="25.1967%" y="783.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="24.9467%" y="757" width="0.1421%" height="15" fill="rgb(206,86,44)"/><text x="25.1967%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="24.9467%" y="741" width="0.1421%" height="15" fill="rgb(245,177,15)"/><text x="25.1967%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="24.9467%" y="725" width="0.1421%" height="15" fill="rgb(206,64,50)"/><text x="25.1967%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="24.9467%" y="709" width="0.1421%" height="15" fill="rgb(234,36,40)"/><text x="25.1967%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="24.9467%" y="693" width="0.1421%" height="15" fill="rgb(213,64,8)"/><text x="25.1967%" y="703.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.14%)</title><rect x="25.5153%" y="789" width="0.1421%" height="15" fill="rgb(210,75,36)"/><text x="25.7653%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.14%)</title><rect x="25.5153%" y="773" width="0.1421%" height="15" fill="rgb(229,88,21)"/><text x="25.7653%" y="783.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="25.5153%" y="757" width="0.1421%" height="15" fill="rgb(252,204,47)"/><text x="25.7653%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (7 samples, 0.50%)</title><rect x="25.2310%" y="853" width="0.4975%" height="15" fill="rgb(208,77,27)"/><text x="25.4810%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (7 samples, 0.50%)</title><rect x="25.2310%" y="837" width="0.4975%" height="15" fill="rgb(221,76,26)"/><text x="25.4810%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (6 samples, 0.43%)</title><rect x="25.3021%" y="821" width="0.4264%" height="15" fill="rgb(225,139,18)"/><text x="25.5521%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.28%)</title><rect x="25.4442%" y="805" width="0.2843%" height="15" fill="rgb(230,137,11)"/><text x="25.6942%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (4 samples, 0.28%)</title><rect x="25.7285%" y="821" width="0.2843%" height="15" fill="rgb(212,28,1)"/><text x="25.9785%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (2 samples, 0.14%)</title><rect x="25.8706%" y="805" width="0.1421%" height="15" fill="rgb(248,164,17)"/><text x="26.1206%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.21%)</title><rect x="26.2971%" y="805" width="0.2132%" height="15" fill="rgb(222,171,42)"/><text x="26.5471%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (2 samples, 0.14%)</title><rect x="26.3682%" y="789" width="0.1421%" height="15" fill="rgb(243,84,45)"/><text x="26.6182%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (22 samples, 1.56%)</title><rect x="25.1599%" y="885" width="1.5636%" height="15" fill="rgb(252,49,23)"/><text x="25.4099%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (21 samples, 1.49%)</title><rect x="25.2310%" y="869" width="1.4925%" height="15" fill="rgb(215,19,7)"/><text x="25.4810%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (14 samples, 1.00%)</title><rect x="25.7285%" y="853" width="0.9950%" height="15" fill="rgb(238,81,41)"/><text x="25.9785%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (14 samples, 1.00%)</title><rect x="25.7285%" y="837" width="0.9950%" height="15" fill="rgb(210,199,37)"/><text x="25.9785%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (10 samples, 0.71%)</title><rect x="26.0128%" y="821" width="0.7107%" height="15" fill="rgb(244,192,49)"/><text x="26.2628%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (3 samples, 0.21%)</title><rect x="26.5103%" y="805" width="0.2132%" height="15" fill="rgb(226,211,11)"/><text x="26.7603%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.14%)</title><rect x="26.5814%" y="789" width="0.1421%" height="15" fill="rgb(236,162,54)"/><text x="26.8314%" y="799.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.14%)</title><rect x="26.5814%" y="773" width="0.1421%" height="15" fill="rgb(220,229,9)"/><text x="26.8314%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.14%)</title><rect x="26.7235%" y="805" width="0.1421%" height="15" fill="rgb(250,87,22)"/><text x="26.9735%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.21%)</title><rect x="26.7235%" y="869" width="0.2132%" height="15" fill="rgb(239,43,17)"/><text x="26.9735%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (3 samples, 0.21%)</title><rect x="26.7235%" y="853" width="0.2132%" height="15" fill="rgb(231,177,25)"/><text x="26.9735%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.21%)</title><rect x="26.7235%" y="837" width="0.2132%" height="15" fill="rgb(219,179,1)"/><text x="26.9735%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.21%)</title><rect x="26.7235%" y="821" width="0.2132%" height="15" fill="rgb(238,219,53)"/><text x="26.9735%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (6 samples, 0.43%)</title><rect x="26.7235%" y="885" width="0.4264%" height="15" fill="rgb(232,167,36)"/><text x="26.9735%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (3 samples, 0.21%)</title><rect x="26.9367%" y="869" width="0.2132%" height="15" fill="rgb(244,19,51)"/><text x="27.1867%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.21%)</title><rect x="26.9367%" y="853" width="0.2132%" height="15" fill="rgb(224,6,22)"/><text x="27.1867%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.21%)</title><rect x="26.9367%" y="837" width="0.2132%" height="15" fill="rgb(224,145,5)"/><text x="27.1867%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (3 samples, 0.21%)</title><rect x="26.9367%" y="821" width="0.2132%" height="15" fill="rgb(234,130,49)"/><text x="27.1867%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (3 samples, 0.21%)</title><rect x="26.9367%" y="805" width="0.2132%" height="15" fill="rgb(254,6,2)"/><text x="27.1867%" y="815.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.21%)</title><rect x="26.9367%" y="789" width="0.2132%" height="15" fill="rgb(208,96,46)"/><text x="27.1867%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.21%)</title><rect x="26.9367%" y="773" width="0.2132%" height="15" fill="rgb(239,3,39)"/><text x="27.1867%" y="783.50"></text></g><g><title>core::fmt::write (3 samples, 0.21%)</title><rect x="26.9367%" y="757" width="0.2132%" height="15" fill="rgb(233,210,1)"/><text x="27.1867%" y="767.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::fmt::Display&gt;::fmt (2 samples, 0.14%)</title><rect x="27.0078%" y="741" width="0.1421%" height="15" fill="rgb(244,137,37)"/><text x="27.2578%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (7 samples, 0.50%)</title><rect x="27.2210%" y="837" width="0.4975%" height="15" fill="rgb(240,136,2)"/><text x="27.4710%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.14%)</title><rect x="27.5764%" y="821" width="0.1421%" height="15" fill="rgb(239,18,37)"/><text x="27.8264%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="27.7186%" y="821" width="0.1421%" height="15" fill="rgb(218,185,22)"/><text x="27.9686%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.21%)</title><rect x="28.0028%" y="821" width="0.2132%" height="15" fill="rgb(225,218,4)"/><text x="28.2528%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (2 samples, 0.14%)</title><rect x="28.0739%" y="805" width="0.1421%" height="15" fill="rgb(230,182,32)"/><text x="28.3239%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (15 samples, 1.07%)</title><rect x="28.2161%" y="821" width="1.0661%" height="15" fill="rgb(242,56,43)"/><text x="28.4661%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.36%)</title><rect x="28.9268%" y="805" width="0.3554%" height="15" fill="rgb(233,99,24)"/><text x="29.1768%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_optional_alias (2 samples, 0.14%)</title><rect x="29.2822%" y="821" width="0.1421%" height="15" fill="rgb(234,209,42)"/><text x="29.5322%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.43%)</title><rect x="30.2061%" y="789" width="0.4264%" height="15" fill="rgb(227,7,12)"/><text x="30.4561%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (51 samples, 3.62%)</title><rect x="27.1500%" y="885" width="3.6247%" height="15" fill="rgb(245,203,43)"/><text x="27.4000%" y="895.50">sql_..</text></g><g><title>sql_parser::parser::Parser::check_descent (51 samples, 3.62%)</title><rect x="27.1500%" y="869" width="3.6247%" height="15" fill="rgb(238,205,33)"/><text x="27.4000%" y="879.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (51 samples, 3.62%)</title><rect x="27.1500%" y="853" width="3.6247%" height="15" fill="rgb(231,56,7)"/><text x="27.4000%" y="863.50">sql_..</text></g><g><title>sql_parser::parser::Parser::parse_select (43 samples, 3.06%)</title><rect x="27.7186%" y="837" width="3.0561%" height="15" fill="rgb(244,186,29)"/><text x="27.9686%" y="847.50">sql..</text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (19 samples, 1.35%)</title><rect x="29.4243%" y="821" width="1.3504%" height="15" fill="rgb(234,111,31)"/><text x="29.6743%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (16 samples, 1.14%)</title><rect x="29.6375%" y="805" width="1.1372%" height="15" fill="rgb(241,149,10)"/><text x="29.8875%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="30.6326%" y="789" width="0.1421%" height="15" fill="rgb(249,206,44)"/><text x="30.8826%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.14%)</title><rect x="30.9168%" y="805" width="0.1421%" height="15" fill="rgb(251,153,30)"/><text x="31.1668%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (3 samples, 0.21%)</title><rect x="31.0590%" y="805" width="0.2132%" height="15" fill="rgb(239,152,38)"/><text x="31.3090%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (8 samples, 0.57%)</title><rect x="30.7747%" y="885" width="0.5686%" height="15" fill="rgb(249,139,47)"/><text x="31.0247%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 0.57%)</title><rect x="30.7747%" y="869" width="0.5686%" height="15" fill="rgb(244,64,35)"/><text x="31.0247%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (8 samples, 0.57%)</title><rect x="30.7747%" y="853" width="0.5686%" height="15" fill="rgb(216,46,15)"/><text x="31.0247%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 0.57%)</title><rect x="30.7747%" y="837" width="0.5686%" height="15" fill="rgb(250,74,19)"/><text x="31.0247%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 0.57%)</title><rect x="30.7747%" y="821" width="0.5686%" height="15" fill="rgb(249,42,33)"/><text x="31.0247%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (15 samples, 1.07%)</title><rect x="31.3433%" y="853" width="1.0661%" height="15" fill="rgb(242,149,17)"/><text x="31.5933%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (15 samples, 1.07%)</title><rect x="31.3433%" y="837" width="1.0661%" height="15" fill="rgb(244,29,21)"/><text x="31.5933%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.64%)</title><rect x="31.7697%" y="821" width="0.6397%" height="15" fill="rgb(220,130,37)"/><text x="32.0197%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (16 samples, 1.14%)</title><rect x="31.3433%" y="885" width="1.1372%" height="15" fill="rgb(211,67,2)"/><text x="31.5933%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (16 samples, 1.14%)</title><rect x="31.3433%" y="869" width="1.1372%" height="15" fill="rgb(235,68,52)"/><text x="31.5933%" y="879.50"></text></g><g><title>decor::answer_rows (2 samples, 0.14%)</title><rect x="32.4805%" y="741" width="0.1421%" height="15" fill="rgb(246,142,3)"/><text x="32.7305%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="32.4805%" y="725" width="0.1421%" height="15" fill="rgb(241,25,7)"/><text x="32.7305%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.14%)</title><rect x="32.4805%" y="709" width="0.1421%" height="15" fill="rgb(242,119,39)"/><text x="32.7305%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.14%)</title><rect x="32.4805%" y="693" width="0.1421%" height="15" fill="rgb(241,98,45)"/><text x="32.7305%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.14%)</title><rect x="32.4805%" y="677" width="0.1421%" height="15" fill="rgb(254,28,30)"/><text x="32.7305%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="32.4805%" y="661" width="0.1421%" height="15" fill="rgb(241,142,54)"/><text x="32.7305%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.14%)</title><rect x="32.4805%" y="645" width="0.1421%" height="15" fill="rgb(222,85,15)"/><text x="32.7305%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.14%)</title><rect x="32.4805%" y="629" width="0.1421%" height="15" fill="rgb(210,85,47)"/><text x="32.7305%" y="639.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.14%)</title><rect x="32.4805%" y="613" width="0.1421%" height="15" fill="rgb(224,206,25)"/><text x="32.7305%" y="623.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.14%)</title><rect x="32.4805%" y="597" width="0.1421%" height="15" fill="rgb(243,201,19)"/><text x="32.7305%" y="607.50"></text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="32.9069%" y="437" width="0.1421%" height="15" fill="rgb(236,59,4)"/><text x="33.1569%" y="447.50"></text></g><g><title>remove_wait_queue (2 samples, 0.14%)</title><rect x="33.1912%" y="421" width="0.1421%" height="15" fill="rgb(254,179,45)"/><text x="33.4412%" y="431.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.14%)</title><rect x="33.1912%" y="405" width="0.1421%" height="15" fill="rgb(226,14,10)"/><text x="33.4412%" y="415.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.21%)</title><rect x="33.4755%" y="357" width="0.2132%" height="15" fill="rgb(244,27,41)"/><text x="33.7255%" y="367.50"></text></g><g><title>dequeue_entity (2 samples, 0.14%)</title><rect x="33.5466%" y="341" width="0.1421%" height="15" fill="rgb(235,35,32)"/><text x="33.7966%" y="351.50"></text></g><g><title>sk_wait_data (13 samples, 0.92%)</title><rect x="33.0490%" y="437" width="0.9240%" height="15" fill="rgb(218,68,31)"/><text x="33.2990%" y="447.50"></text></g><g><title>wait_woken (9 samples, 0.64%)</title><rect x="33.3333%" y="421" width="0.6397%" height="15" fill="rgb(207,120,37)"/><text x="33.5833%" y="431.50"></text></g><g><title>schedule_timeout (9 samples, 0.64%)</title><rect x="33.3333%" y="405" width="0.6397%" height="15" fill="rgb(227,98,0)"/><text x="33.5833%" y="415.50"></text></g><g><title>schedule (9 samples, 0.64%)</title><rect x="33.3333%" y="389" width="0.6397%" height="15" fill="rgb(207,7,3)"/><text x="33.5833%" y="399.50"></text></g><g><title>__schedule (9 samples, 0.64%)</title><rect x="33.3333%" y="373" width="0.6397%" height="15" fill="rgb(206,98,19)"/><text x="33.5833%" y="383.50"></text></g><g><title>psi_task_change (3 samples, 0.21%)</title><rect x="33.7598%" y="357" width="0.2132%" height="15" fill="rgb(217,5,26)"/><text x="34.0098%" y="367.50"></text></g><g><title>psi_group_change (3 samples, 0.21%)</title><rect x="33.7598%" y="341" width="0.2132%" height="15" fill="rgb(235,190,38)"/><text x="34.0098%" y="351.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.21%)</title><rect x="33.9730%" y="437" width="0.2132%" height="15" fill="rgb(247,86,24)"/><text x="34.2230%" y="447.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.21%)</title><rect x="33.9730%" y="421" width="0.2132%" height="15" fill="rgb(205,101,16)"/><text x="34.2230%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (22 samples, 1.56%)</title><rect x="32.6937%" y="501" width="1.5636%" height="15" fill="rgb(246,168,33)"/><text x="32.9437%" y="511.50"></text></g><g><title>__sys_recvfrom (21 samples, 1.49%)</title><rect x="32.7647%" y="485" width="1.4925%" height="15" fill="rgb(231,114,1)"/><text x="33.0147%" y="495.50"></text></g><g><title>inet_recvmsg (20 samples, 1.42%)</title><rect x="32.8358%" y="469" width="1.4215%" height="15" fill="rgb(207,184,53)"/><text x="33.0858%" y="479.50"></text></g><g><title>tcp_recvmsg (20 samples, 1.42%)</title><rect x="32.8358%" y="453" width="1.4215%" height="15" fill="rgb(224,95,51)"/><text x="33.0858%" y="463.50"></text></g><g><title>do_syscall_64 (23 samples, 1.63%)</title><rect x="32.6937%" y="517" width="1.6347%" height="15" fill="rgb(212,188,45)"/><text x="32.9437%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 1.78%)</title><rect x="32.6937%" y="533" width="1.7768%" height="15" fill="rgb(223,154,38)"/><text x="32.9437%" y="543.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="34.3284%" y="517" width="0.1421%" height="15" fill="rgb(251,22,52)"/><text x="34.5784%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (28 samples, 1.99%)</title><rect x="32.6226%" y="629" width="1.9900%" height="15" fill="rgb(229,209,22)"/><text x="32.8726%" y="639.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 1.99%)</title><rect x="32.6226%" y="613" width="1.9900%" height="15" fill="rgb(234,138,34)"/><text x="32.8726%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 1.99%)</title><rect x="32.6226%" y="597" width="1.9900%" height="15" fill="rgb(212,95,11)"/><text x="32.8726%" y="607.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (28 samples, 1.99%)</title><rect x="32.6226%" y="581" width="1.9900%" height="15" fill="rgb(240,179,47)"/><text x="32.8726%" y="591.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (28 samples, 1.99%)</title><rect x="32.6226%" y="565" width="1.9900%" height="15" fill="rgb(240,163,11)"/><text x="32.8726%" y="575.50">s..</text></g><g><title>__libc_recv (28 samples, 1.99%)</title><rect x="32.6226%" y="549" width="1.9900%" height="15" fill="rgb(236,37,12)"/><text x="32.8726%" y="559.50">_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.14%)</title><rect x="34.4705%" y="533" width="0.1421%" height="15" fill="rgb(232,164,16)"/><text x="34.7205%" y="543.50"></text></g><g><title>mysql::conn::Conn::start_transaction (29 samples, 2.06%)</title><rect x="32.6226%" y="741" width="2.0611%" height="15" fill="rgb(244,205,15)"/><text x="32.8726%" y="751.50">m..</text></g><g><title>mysql::conn::Conn::_start_transaction (29 samples, 2.06%)</title><rect x="32.6226%" y="725" width="2.0611%" height="15" fill="rgb(223,117,47)"/><text x="32.8726%" y="735.50">m..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (29 samples, 2.06%)</title><rect x="32.6226%" y="709" width="2.0611%" height="15" fill="rgb(244,107,35)"/><text x="32.8726%" y="719.50">m..</text></g><g><title>mysql::conn::Conn::_query (29 samples, 2.06%)</title><rect x="32.6226%" y="693" width="2.0611%" height="15" fill="rgb(205,140,8)"/><text x="32.8726%" y="703.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (29 samples, 2.06%)</title><rect x="32.6226%" y="677" width="2.0611%" height="15" fill="rgb(228,84,46)"/><text x="32.8726%" y="687.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (29 samples, 2.06%)</title><rect x="32.6226%" y="661" width="2.0611%" height="15" fill="rgb(254,188,9)"/><text x="32.8726%" y="671.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 2.06%)</title><rect x="32.6226%" y="645" width="2.0611%" height="15" fill="rgb(206,112,54)"/><text x="32.8726%" y="655.50">&lt;..</text></g><g><title>start_thread (36 samples, 2.56%)</title><rect x="32.4805%" y="885" width="2.5586%" height="15" fill="rgb(216,84,49)"/><text x="32.7305%" y="895.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (36 samples, 2.56%)</title><rect x="32.4805%" y="869" width="2.5586%" height="15" fill="rgb(214,194,35)"/><text x="32.7305%" y="879.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (36 samples, 2.56%)</title><rect x="32.4805%" y="853" width="2.5586%" height="15" fill="rgb(249,28,3)"/><text x="32.7305%" y="863.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (36 samples, 2.56%)</title><rect x="32.4805%" y="837" width="2.5586%" height="15" fill="rgb(222,56,52)"/><text x="32.7305%" y="847.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (36 samples, 2.56%)</title><rect x="32.4805%" y="821" width="2.5586%" height="15" fill="rgb(245,217,50)"/><text x="32.7305%" y="831.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 2.56%)</title><rect x="32.4805%" y="805" width="2.5586%" height="15" fill="rgb(213,201,24)"/><text x="32.7305%" y="815.50">st..</text></g><g><title>decor::Shim::run_on_tcp (36 samples, 2.56%)</title><rect x="32.4805%" y="789" width="2.5586%" height="15" fill="rgb(248,116,28)"/><text x="32.7305%" y="799.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (36 samples, 2.56%)</title><rect x="32.4805%" y="773" width="2.5586%" height="15" fill="rgb(219,72,43)"/><text x="32.7305%" y="783.50">ms..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (36 samples, 2.56%)</title><rect x="32.4805%" y="757" width="2.5586%" height="15" fill="rgb(209,138,14)"/><text x="32.7305%" y="767.50">&lt;d..</text></g><g><title>sql_parser::parser::parse_statements (5 samples, 0.36%)</title><rect x="34.6837%" y="741" width="0.3554%" height="15" fill="rgb(222,18,33)"/><text x="34.9337%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (5 samples, 0.36%)</title><rect x="34.6837%" y="725" width="0.3554%" height="15" fill="rgb(213,199,7)"/><text x="34.9337%" y="735.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (2 samples, 0.14%)</title><rect x="35.1102%" y="885" width="0.1421%" height="15" fill="rgb(250,110,10)"/><text x="35.3602%" y="895.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (2 samples, 0.14%)</title><rect x="35.1102%" y="869" width="0.1421%" height="15" fill="rgb(248,123,6)"/><text x="35.3602%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (2 samples, 0.14%)</title><rect x="35.1102%" y="853" width="0.1421%" height="15" fill="rgb(206,91,31)"/><text x="35.3602%" y="863.50"></text></g><g><title>std::io::error::Error::new (2 samples, 0.14%)</title><rect x="35.1102%" y="837" width="0.1421%" height="15" fill="rgb(211,154,13)"/><text x="35.3602%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.14%)</title><rect x="35.1102%" y="821" width="0.1421%" height="15" fill="rgb(225,148,7)"/><text x="35.3602%" y="831.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (2 samples, 0.14%)</title><rect x="35.1102%" y="805" width="0.1421%" height="15" fill="rgb(220,160,43)"/><text x="35.3602%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.14%)</title><rect x="35.1102%" y="789" width="0.1421%" height="15" fill="rgb(213,52,39)"/><text x="35.3602%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.14%)</title><rect x="35.1102%" y="773" width="0.1421%" height="15" fill="rgb(243,137,7)"/><text x="35.3602%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.14%)</title><rect x="35.1102%" y="757" width="0.1421%" height="15" fill="rgb(230,79,13)"/><text x="35.3602%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="35.1102%" y="741" width="0.1421%" height="15" fill="rgb(247,105,23)"/><text x="35.3602%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="35.1102%" y="725" width="0.1421%" height="15" fill="rgb(223,179,41)"/><text x="35.3602%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="35.1102%" y="709" width="0.1421%" height="15" fill="rgb(218,9,34)"/><text x="35.3602%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="35.1102%" y="693" width="0.1421%" height="15" fill="rgb(222,106,8)"/><text x="35.3602%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="35.1102%" y="677" width="0.1421%" height="15" fill="rgb(211,220,0)"/><text x="35.3602%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="35.1102%" y="661" width="0.1421%" height="15" fill="rgb(229,52,16)"/><text x="35.3602%" y="671.50"></text></g><g><title>__libc_recv (2 samples, 0.14%)</title><rect x="35.1102%" y="645" width="0.1421%" height="15" fill="rgb(212,155,18)"/><text x="35.3602%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.14%)</title><rect x="35.1102%" y="629" width="0.1421%" height="15" fill="rgb(242,21,14)"/><text x="35.3602%" y="639.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="35.2523%" y="757" width="0.2132%" height="15" fill="rgb(222,19,48)"/><text x="35.5023%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.21%)</title><rect x="35.2523%" y="741" width="0.2132%" height="15" fill="rgb(232,45,27)"/><text x="35.5023%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.21%)</title><rect x="35.2523%" y="725" width="0.2132%" height="15" fill="rgb(249,103,42)"/><text x="35.5023%" y="735.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.14%)</title><rect x="35.4655%" y="757" width="0.1421%" height="15" fill="rgb(246,81,33)"/><text x="35.7155%" y="767.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.14%)</title><rect x="35.4655%" y="741" width="0.1421%" height="15" fill="rgb(252,33,42)"/><text x="35.7155%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.14%)</title><rect x="35.4655%" y="725" width="0.1421%" height="15" fill="rgb(209,212,41)"/><text x="35.7155%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.14%)</title><rect x="35.4655%" y="709" width="0.1421%" height="15" fill="rgb(207,154,6)"/><text x="35.7155%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.14%)</title><rect x="35.4655%" y="693" width="0.1421%" height="15" fill="rgb(223,64,47)"/><text x="35.7155%" y="703.50"></text></g><g><title>__GI___openat (2 samples, 0.14%)</title><rect x="35.4655%" y="677" width="0.1421%" height="15" fill="rgb(211,161,38)"/><text x="35.7155%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.14%)</title><rect x="35.4655%" y="661" width="0.1421%" height="15" fill="rgb(219,138,40)"/><text x="35.7155%" y="671.50"></text></g><g><title>do_syscall_64 (2 samples, 0.14%)</title><rect x="35.4655%" y="645" width="0.1421%" height="15" fill="rgb(241,228,46)"/><text x="35.7155%" y="655.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.14%)</title><rect x="35.4655%" y="629" width="0.1421%" height="15" fill="rgb(223,209,38)"/><text x="35.7155%" y="639.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.14%)</title><rect x="35.4655%" y="613" width="0.1421%" height="15" fill="rgb(236,164,45)"/><text x="35.7155%" y="623.50"></text></g><g><title>do_filp_open (2 samples, 0.14%)</title><rect x="35.4655%" y="597" width="0.1421%" height="15" fill="rgb(231,15,5)"/><text x="35.7155%" y="607.50"></text></g><g><title>path_openat (2 samples, 0.14%)</title><rect x="35.4655%" y="581" width="0.1421%" height="15" fill="rgb(252,35,15)"/><text x="35.7155%" y="591.50"></text></g><g><title>sk_wait_data (2 samples, 0.14%)</title><rect x="36.1052%" y="501" width="0.1421%" height="15" fill="rgb(248,181,18)"/><text x="36.3552%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (4 samples, 0.28%)</title><rect x="36.0341%" y="565" width="0.2843%" height="15" fill="rgb(233,39,42)"/><text x="36.2841%" y="575.50"></text></g><g><title>__sys_recvfrom (4 samples, 0.28%)</title><rect x="36.0341%" y="549" width="0.2843%" height="15" fill="rgb(238,110,33)"/><text x="36.2841%" y="559.50"></text></g><g><title>inet_recvmsg (4 samples, 0.28%)</title><rect x="36.0341%" y="533" width="0.2843%" height="15" fill="rgb(233,195,10)"/><text x="36.2841%" y="543.50"></text></g><g><title>tcp_recvmsg (4 samples, 0.28%)</title><rect x="36.0341%" y="517" width="0.2843%" height="15" fill="rgb(254,105,3)"/><text x="36.2841%" y="527.50"></text></g><g><title>do_syscall_64 (6 samples, 0.43%)</title><rect x="35.9630%" y="581" width="0.4264%" height="15" fill="rgb(221,225,9)"/><text x="36.2130%" y="591.50"></text></g><g><title>std::rt::lang_start_internal (18 samples, 1.28%)</title><rect x="35.2523%" y="885" width="1.2793%" height="15" fill="rgb(224,227,45)"/><text x="35.5023%" y="895.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 1.28%)</title><rect x="35.2523%" y="869" width="1.2793%" height="15" fill="rgb(229,198,43)"/><text x="35.5023%" y="879.50"></text></g><g><title>std::panicking::try (18 samples, 1.28%)</title><rect x="35.2523%" y="853" width="1.2793%" height="15" fill="rgb(206,209,35)"/><text x="35.5023%" y="863.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 1.28%)</title><rect x="35.2523%" y="837" width="1.2793%" height="15" fill="rgb(245,195,53)"/><text x="35.5023%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 1.28%)</title><rect x="35.2523%" y="821" width="1.2793%" height="15" fill="rgb(240,92,26)"/><text x="35.5023%" y="831.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (18 samples, 1.28%)</title><rect x="35.2523%" y="805" width="1.2793%" height="15" fill="rgb(207,40,23)"/><text x="35.5023%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 1.28%)</title><rect x="35.2523%" y="789" width="1.2793%" height="15" fill="rgb(223,111,35)"/><text x="35.5023%" y="799.50"></text></g><g><title>lobsters::main (18 samples, 1.28%)</title><rect x="35.2523%" y="773" width="1.2793%" height="15" fill="rgb(229,147,28)"/><text x="35.5023%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (13 samples, 0.92%)</title><rect x="35.6077%" y="757" width="0.9240%" height="15" fill="rgb(211,29,28)"/><text x="35.8577%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (13 samples, 0.92%)</title><rect x="35.6077%" y="741" width="0.9240%" height="15" fill="rgb(228,72,33)"/><text x="35.8577%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (13 samples, 0.92%)</title><rect x="35.6077%" y="725" width="0.9240%" height="15" fill="rgb(205,214,31)"/><text x="35.8577%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.85%)</title><rect x="35.6787%" y="709" width="0.8529%" height="15" fill="rgb(224,111,15)"/><text x="35.9287%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 0.71%)</title><rect x="35.8209%" y="693" width="0.7107%" height="15" fill="rgb(253,21,26)"/><text x="36.0709%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 0.71%)</title><rect x="35.8209%" y="677" width="0.7107%" height="15" fill="rgb(245,139,43)"/><text x="36.0709%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 0.71%)</title><rect x="35.8209%" y="661" width="0.7107%" height="15" fill="rgb(252,170,7)"/><text x="36.0709%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 0.71%)</title><rect x="35.8209%" y="645" width="0.7107%" height="15" fill="rgb(231,118,14)"/><text x="36.0709%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 0.71%)</title><rect x="35.8209%" y="629" width="0.7107%" height="15" fill="rgb(238,83,0)"/><text x="36.0709%" y="639.50"></text></g><g><title>__libc_recv (10 samples, 0.71%)</title><rect x="35.8209%" y="613" width="0.7107%" height="15" fill="rgb(221,39,39)"/><text x="36.0709%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.64%)</title><rect x="35.8920%" y="597" width="0.6397%" height="15" fill="rgb(222,119,46)"/><text x="36.1420%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="36.3895%" y="581" width="0.1421%" height="15" fill="rgb(222,165,49)"/><text x="36.6395%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="36.5316%" y="725" width="0.1421%" height="15" fill="rgb(219,113,52)"/><text x="36.7816%" y="735.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="36.5316%" y="709" width="0.1421%" height="15" fill="rgb(214,7,15)"/><text x="36.7816%" y="719.50"></text></g><g><title>_int_realloc (2 samples, 0.14%)</title><rect x="36.5316%" y="693" width="0.1421%" height="15" fill="rgb(235,32,4)"/><text x="36.7816%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.21%)</title><rect x="36.5316%" y="885" width="0.2132%" height="15" fill="rgb(238,90,54)"/><text x="36.7816%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="36.5316%" y="869" width="0.2132%" height="15" fill="rgb(213,208,19)"/><text x="36.7816%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.21%)</title><rect x="36.5316%" y="853" width="0.2132%" height="15" fill="rgb(233,156,4)"/><text x="36.7816%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.21%)</title><rect x="36.5316%" y="837" width="0.2132%" height="15" fill="rgb(207,194,5)"/><text x="36.7816%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.21%)</title><rect x="36.5316%" y="821" width="0.2132%" height="15" fill="rgb(206,111,30)"/><text x="36.7816%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.21%)</title><rect x="36.5316%" y="805" width="0.2132%" height="15" fill="rgb(243,70,54)"/><text x="36.7816%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.21%)</title><rect x="36.5316%" y="789" width="0.2132%" height="15" fill="rgb(242,28,8)"/><text x="36.7816%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.21%)</title><rect x="36.5316%" y="773" width="0.2132%" height="15" fill="rgb(219,106,18)"/><text x="36.7816%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.21%)</title><rect x="36.5316%" y="757" width="0.2132%" height="15" fill="rgb(244,222,10)"/><text x="36.7816%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.21%)</title><rect x="36.5316%" y="741" width="0.2132%" height="15" fill="rgb(236,179,52)"/><text x="36.7816%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.92%)</title><rect x="36.7448%" y="789" width="0.9240%" height="15" fill="rgb(213,23,39)"/><text x="36.9948%" y="799.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.92%)</title><rect x="36.7448%" y="773" width="0.9240%" height="15" fill="rgb(238,48,10)"/><text x="36.9948%" y="783.50"></text></g><g><title>_int_realloc (13 samples, 0.92%)</title><rect x="36.7448%" y="757" width="0.9240%" height="15" fill="rgb(251,196,23)"/><text x="36.9948%" y="767.50"></text></g><g><title>_int_malloc (12 samples, 0.85%)</title><rect x="36.8159%" y="741" width="0.8529%" height="15" fill="rgb(250,152,24)"/><text x="37.0659%" y="751.50"></text></g><g><title>malloc_consolidate (3 samples, 0.21%)</title><rect x="37.4556%" y="725" width="0.2132%" height="15" fill="rgb(209,150,17)"/><text x="37.7056%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.78%)</title><rect x="40.8671%" y="757" width="0.7818%" height="15" fill="rgb(234,202,34)"/><text x="41.1171%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="41.8621%" y="741" width="0.2132%" height="15" fill="rgb(253,148,53)"/><text x="42.1121%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.21%)</title><rect x="41.8621%" y="725" width="0.2132%" height="15" fill="rgb(218,129,16)"/><text x="42.1121%" y="735.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.21%)</title><rect x="42.0753%" y="741" width="0.2132%" height="15" fill="rgb(216,85,19)"/><text x="42.3253%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.21%)</title><rect x="42.0753%" y="725" width="0.2132%" height="15" fill="rgb(235,228,7)"/><text x="42.3253%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (2 samples, 0.14%)</title><rect x="42.1464%" y="709" width="0.1421%" height="15" fill="rgb(245,175,0)"/><text x="42.3964%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (84 samples, 5.97%)</title><rect x="37.7399%" y="773" width="5.9701%" height="15" fill="rgb(208,168,36)"/><text x="37.9899%" y="783.50">sql_pars..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (28 samples, 1.99%)</title><rect x="41.7200%" y="757" width="1.9900%" height="15" fill="rgb(246,171,24)"/><text x="41.9700%" y="767.50">a..</text></g><g><title>core::unicode::unicode_data::conversions::to_upper (19 samples, 1.35%)</title><rect x="42.3596%" y="741" width="1.3504%" height="15" fill="rgb(215,142,24)"/><text x="42.6096%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (14 samples, 1.00%)</title><rect x="42.7150%" y="725" width="0.9950%" height="15" fill="rgb(250,187,7)"/><text x="42.9650%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (14 samples, 1.00%)</title><rect x="42.7150%" y="709" width="0.9950%" height="15" fill="rgb(228,66,33)"/><text x="42.9650%" y="719.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (8 samples, 0.57%)</title><rect x="43.1414%" y="693" width="0.5686%" height="15" fill="rgb(234,215,21)"/><text x="43.3914%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (107 samples, 7.60%)</title><rect x="36.7448%" y="885" width="7.6048%" height="15" fill="rgb(222,191,20)"/><text x="36.9948%" y="895.50">std::sys_c..</text></g><g><title>decor::Shim::run_on_tcp (107 samples, 7.60%)</title><rect x="36.7448%" y="869" width="7.6048%" height="15" fill="rgb(245,79,54)"/><text x="36.9948%" y="879.50">decor::Shi..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (107 samples, 7.60%)</title><rect x="36.7448%" y="853" width="7.6048%" height="15" fill="rgb(240,10,37)"/><text x="36.9948%" y="863.50">msql_srv::..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (107 samples, 7.60%)</title><rect x="36.7448%" y="837" width="7.6048%" height="15" fill="rgb(214,192,32)"/><text x="36.9948%" y="847.50">&lt;decor::Sh..</text></g><g><title>sql_parser::parser::parse_statements (107 samples, 7.60%)</title><rect x="36.7448%" y="821" width="7.6048%" height="15" fill="rgb(209,36,54)"/><text x="36.9948%" y="831.50">sql_parser..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (107 samples, 7.60%)</title><rect x="36.7448%" y="805" width="7.6048%" height="15" fill="rgb(220,10,11)"/><text x="36.9948%" y="815.50">sql_parser..</text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (94 samples, 6.68%)</title><rect x="37.6688%" y="789" width="6.6809%" height="15" fill="rgb(221,106,17)"/><text x="37.9188%" y="799.50">sql_parse..</text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (9 samples, 0.64%)</title><rect x="43.7100%" y="773" width="0.6397%" height="15" fill="rgb(251,142,44)"/><text x="43.9600%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="44.2075%" y="757" width="0.1421%" height="15" fill="rgb(238,13,15)"/><text x="44.4575%" y="767.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="44.2075%" y="741" width="0.1421%" height="15" fill="rgb(208,107,27)"/><text x="44.4575%" y="751.50"></text></g><g><title>[unknown] (527 samples, 37.46%)</title><rect x="6.9652%" y="901" width="37.4556%" height="15" fill="rgb(205,136,37)"/><text x="7.2152%" y="911.50">[unknown]</text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (3 samples, 0.21%)</title><rect x="44.7050%" y="725" width="0.2132%" height="15" fill="rgb(250,205,27)"/><text x="44.9550%" y="735.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.21%)</title><rect x="44.7050%" y="709" width="0.2132%" height="15" fill="rgb(210,80,43)"/><text x="44.9550%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="45.3447%" y="693" width="0.1421%" height="15" fill="rgb(247,160,36)"/><text x="45.5947%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.14%)</title><rect x="45.4869%" y="677" width="0.1421%" height="15" fill="rgb(234,13,49)"/><text x="45.7369%" y="687.50"></text></g><g><title>__rust_alloc (2 samples, 0.14%)</title><rect x="45.4869%" y="661" width="0.1421%" height="15" fill="rgb(234,122,0)"/><text x="45.7369%" y="671.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.21%)</title><rect x="46.4108%" y="389" width="0.2132%" height="15" fill="rgb(207,146,38)"/><text x="46.6608%" y="399.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.14%)</title><rect x="46.6240%" y="389" width="0.1421%" height="15" fill="rgb(207,177,25)"/><text x="46.8740%" y="399.50"></text></g><g><title>dequeue_entity (2 samples, 0.14%)</title><rect x="46.6240%" y="373" width="0.1421%" height="15" fill="rgb(211,178,42)"/><text x="46.8740%" y="383.50"></text></g><g><title>update_curr (2 samples, 0.14%)</title><rect x="46.6240%" y="357" width="0.1421%" height="15" fill="rgb(230,69,54)"/><text x="46.8740%" y="367.50"></text></g><g><title>finish_task_switch (2 samples, 0.14%)</title><rect x="46.7662%" y="389" width="0.1421%" height="15" fill="rgb(214,135,41)"/><text x="47.0162%" y="399.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="46.9794%" y="389" width="0.1421%" height="15" fill="rgb(237,67,25)"/><text x="47.2294%" y="399.50"></text></g><g><title>sk_wait_data (16 samples, 1.14%)</title><rect x="46.0554%" y="469" width="1.1372%" height="15" fill="rgb(222,189,50)"/><text x="46.3054%" y="479.50"></text></g><g><title>wait_woken (14 samples, 1.00%)</title><rect x="46.1976%" y="453" width="0.9950%" height="15" fill="rgb(245,148,34)"/><text x="46.4476%" y="463.50"></text></g><g><title>schedule_timeout (13 samples, 0.92%)</title><rect x="46.2687%" y="437" width="0.9240%" height="15" fill="rgb(222,29,6)"/><text x="46.5187%" y="447.50"></text></g><g><title>schedule (11 samples, 0.78%)</title><rect x="46.4108%" y="421" width="0.7818%" height="15" fill="rgb(221,189,43)"/><text x="46.6608%" y="431.50"></text></g><g><title>__schedule (11 samples, 0.78%)</title><rect x="46.4108%" y="405" width="0.7818%" height="15" fill="rgb(207,36,27)"/><text x="46.6608%" y="415.50"></text></g><g><title>do_syscall_64 (22 samples, 1.56%)</title><rect x="45.7711%" y="549" width="1.5636%" height="15" fill="rgb(217,90,24)"/><text x="46.0211%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (22 samples, 1.56%)</title><rect x="45.7711%" y="533" width="1.5636%" height="15" fill="rgb(224,66,35)"/><text x="46.0211%" y="543.50"></text></g><g><title>__sys_recvfrom (22 samples, 1.56%)</title><rect x="45.7711%" y="517" width="1.5636%" height="15" fill="rgb(221,13,50)"/><text x="46.0211%" y="527.50"></text></g><g><title>inet_recvmsg (22 samples, 1.56%)</title><rect x="45.7711%" y="501" width="1.5636%" height="15" fill="rgb(236,68,49)"/><text x="46.0211%" y="511.50"></text></g><g><title>tcp_recvmsg (22 samples, 1.56%)</title><rect x="45.7711%" y="485" width="1.5636%" height="15" fill="rgb(229,146,28)"/><text x="46.0211%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.14%)</title><rect x="47.1926%" y="469" width="0.1421%" height="15" fill="rgb(225,31,38)"/><text x="47.4426%" y="479.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (26 samples, 1.85%)</title><rect x="45.6290%" y="661" width="1.8479%" height="15" fill="rgb(250,208,3)"/><text x="45.8790%" y="671.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (26 samples, 1.85%)</title><rect x="45.6290%" y="645" width="1.8479%" height="15" fill="rgb(246,54,23)"/><text x="45.8790%" y="655.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (26 samples, 1.85%)</title><rect x="45.6290%" y="629" width="1.8479%" height="15" fill="rgb(243,76,11)"/><text x="45.8790%" y="639.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (26 samples, 1.85%)</title><rect x="45.6290%" y="613" width="1.8479%" height="15" fill="rgb(245,21,50)"/><text x="45.8790%" y="623.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (26 samples, 1.85%)</title><rect x="45.6290%" y="597" width="1.8479%" height="15" fill="rgb(228,9,43)"/><text x="45.8790%" y="607.50">s..</text></g><g><title>__libc_recv (26 samples, 1.85%)</title><rect x="45.6290%" y="581" width="1.8479%" height="15" fill="rgb(208,100,47)"/><text x="45.8790%" y="591.50">_..</text></g><g><title>entry_SYSCALL_64 (24 samples, 1.71%)</title><rect x="45.7711%" y="565" width="1.7058%" height="15" fill="rgb(232,26,8)"/><text x="46.0211%" y="575.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="47.3348%" y="549" width="0.1421%" height="15" fill="rgb(216,166,38)"/><text x="47.5848%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 2.06%)</title><rect x="45.6290%" y="677" width="2.0611%" height="15" fill="rgb(251,202,51)"/><text x="45.8790%" y="687.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.21%)</title><rect x="47.4769%" y="661" width="0.2132%" height="15" fill="rgb(254,216,34)"/><text x="47.7269%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.21%)</title><rect x="47.4769%" y="645" width="0.2132%" height="15" fill="rgb(251,32,27)"/><text x="47.7269%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.21%)</title><rect x="47.4769%" y="629" width="0.2132%" height="15" fill="rgb(208,127,28)"/><text x="47.7269%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="47.5480%" y="613" width="0.1421%" height="15" fill="rgb(224,137,22)"/><text x="47.7980%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="47.5480%" y="597" width="0.1421%" height="15" fill="rgb(254,70,32)"/><text x="47.7980%" y="607.50"></text></g><g><title>mysql::conn::Conn::read_packet (32 samples, 2.27%)</title><rect x="45.4869%" y="693" width="2.2743%" height="15" fill="rgb(229,75,37)"/><text x="45.7369%" y="703.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (41 samples, 2.91%)</title><rect x="44.9183%" y="709" width="2.9140%" height="15" fill="rgb(252,64,23)"/><text x="45.1683%" y="719.50">my..</text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (3 samples, 0.21%)</title><rect x="47.9033%" y="693" width="0.2132%" height="15" fill="rgb(232,162,48)"/><text x="48.1533%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (3 samples, 0.21%)</title><rect x="47.9033%" y="677" width="0.2132%" height="15" fill="rgb(246,160,12)"/><text x="48.1533%" y="687.50"></text></g><g><title>release_sock (2 samples, 0.14%)</title><rect x="48.6851%" y="533" width="0.1421%" height="15" fill="rgb(247,166,0)"/><text x="48.9351%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.14%)</title><rect x="48.6851%" y="517" width="0.1421%" height="15" fill="rgb(249,219,21)"/><text x="48.9351%" y="527.50"></text></g><g><title>__ip_local_out (3 samples, 0.21%)</title><rect x="49.0405%" y="453" width="0.2132%" height="15" fill="rgb(205,209,3)"/><text x="49.2905%" y="463.50"></text></g><g><title>netif_rx (2 samples, 0.14%)</title><rect x="49.6802%" y="373" width="0.1421%" height="15" fill="rgb(243,44,1)"/><text x="49.9302%" y="383.50"></text></g><g><title>netif_rx_internal (2 samples, 0.14%)</title><rect x="49.6802%" y="357" width="0.1421%" height="15" fill="rgb(206,159,16)"/><text x="49.9302%" y="367.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.14%)</title><rect x="49.6802%" y="341" width="0.1421%" height="15" fill="rgb(244,77,30)"/><text x="49.9302%" y="351.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.28%)</title><rect x="49.6091%" y="405" width="0.2843%" height="15" fill="rgb(218,69,12)"/><text x="49.8591%" y="415.50"></text></g><g><title>loopback_xmit (4 samples, 0.28%)</title><rect x="49.6091%" y="389" width="0.2843%" height="15" fill="rgb(212,87,7)"/><text x="49.8591%" y="399.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.50%)</title><rect x="49.6091%" y="421" width="0.4975%" height="15" fill="rgb(245,114,25)"/><text x="49.8591%" y="431.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.21%)</title><rect x="49.8934%" y="405" width="0.2132%" height="15" fill="rgb(210,61,42)"/><text x="50.1434%" y="415.50"></text></g><g><title>netif_skb_features (3 samples, 0.21%)</title><rect x="49.8934%" y="389" width="0.2132%" height="15" fill="rgb(211,52,33)"/><text x="50.1434%" y="399.50"></text></g><g><title>enqueue_task (2 samples, 0.14%)</title><rect x="50.8173%" y="117" width="0.1421%" height="15" fill="rgb(234,58,33)"/><text x="51.0673%" y="127.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.14%)</title><rect x="51.1016%" y="117" width="0.1421%" height="15" fill="rgb(220,115,36)"/><text x="51.3516%" y="127.50"></text></g><g><title>debug_smp_processor_id (2 samples, 0.14%)</title><rect x="51.1016%" y="101" width="0.1421%" height="15" fill="rgb(243,153,54)"/><text x="51.3516%" y="111.50"></text></g><g><title>sock_def_readable (9 samples, 0.64%)</title><rect x="50.8173%" y="197" width="0.6397%" height="15" fill="rgb(251,47,18)"/><text x="51.0673%" y="207.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.64%)</title><rect x="50.8173%" y="181" width="0.6397%" height="15" fill="rgb(242,102,42)"/><text x="51.0673%" y="191.50"></text></g><g><title>__wake_up_common (9 samples, 0.64%)</title><rect x="50.8173%" y="165" width="0.6397%" height="15" fill="rgb(234,31,38)"/><text x="51.0673%" y="175.50"></text></g><g><title>pollwake (9 samples, 0.64%)</title><rect x="50.8173%" y="149" width="0.6397%" height="15" fill="rgb(221,117,51)"/><text x="51.0673%" y="159.50"></text></g><g><title>try_to_wake_up (9 samples, 0.64%)</title><rect x="50.8173%" y="133" width="0.6397%" height="15" fill="rgb(212,20,18)"/><text x="51.0673%" y="143.50"></text></g><g><title>update_rq_clock (2 samples, 0.14%)</title><rect x="51.3149%" y="117" width="0.1421%" height="15" fill="rgb(245,133,36)"/><text x="51.5649%" y="127.50"></text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="51.5281%" y="181" width="0.1421%" height="15" fill="rgb(212,6,19)"/><text x="51.7781%" y="191.50"></text></g><g><title>skb_release_data (2 samples, 0.14%)</title><rect x="51.5281%" y="165" width="0.1421%" height="15" fill="rgb(218,1,36)"/><text x="51.7781%" y="175.50"></text></g><g><title>tcp_rate_gen (2 samples, 0.14%)</title><rect x="51.6702%" y="181" width="0.1421%" height="15" fill="rgb(246,84,54)"/><text x="51.9202%" y="191.50"></text></g><g><title>tcp_ack (6 samples, 0.43%)</title><rect x="51.4570%" y="197" width="0.4264%" height="15" fill="rgb(242,110,6)"/><text x="51.7070%" y="207.50"></text></g><g><title>ip_local_deliver (25 samples, 1.78%)</title><rect x="50.1777%" y="293" width="1.7768%" height="15" fill="rgb(214,47,5)"/><text x="50.4277%" y="303.50">i..</text></g><g><title>ip_local_deliver_finish (25 samples, 1.78%)</title><rect x="50.1777%" y="277" width="1.7768%" height="15" fill="rgb(218,159,25)"/><text x="50.4277%" y="287.50">i..</text></g><g><title>ip_protocol_deliver_rcu (25 samples, 1.78%)</title><rect x="50.1777%" y="261" width="1.7768%" height="15" fill="rgb(215,211,28)"/><text x="50.4277%" y="271.50">i..</text></g><g><title>tcp_v4_rcv (24 samples, 1.71%)</title><rect x="50.2488%" y="245" width="1.7058%" height="15" fill="rgb(238,59,32)"/><text x="50.4988%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.35%)</title><rect x="50.6041%" y="229" width="1.3504%" height="15" fill="rgb(226,82,3)"/><text x="50.8541%" y="239.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.35%)</title><rect x="50.6041%" y="213" width="1.3504%" height="15" fill="rgb(240,164,32)"/><text x="50.8541%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (26 samples, 1.85%)</title><rect x="50.1777%" y="325" width="1.8479%" height="15" fill="rgb(232,46,7)"/><text x="50.4277%" y="335.50">_..</text></g><g><title>ip_rcv (26 samples, 1.85%)</title><rect x="50.1777%" y="309" width="1.8479%" height="15" fill="rgb(229,129,53)"/><text x="50.4277%" y="319.50">i..</text></g><g><title>ip_finish_output2 (39 samples, 2.77%)</title><rect x="49.3959%" y="437" width="2.7719%" height="15" fill="rgb(234,188,29)"/><text x="49.6459%" y="447.50">ip..</text></g><g><title>__local_bh_enable_ip (29 samples, 2.06%)</title><rect x="50.1066%" y="421" width="2.0611%" height="15" fill="rgb(246,141,4)"/><text x="50.3566%" y="431.50">_..</text></g><g><title>do_softirq (29 samples, 2.06%)</title><rect x="50.1066%" y="405" width="2.0611%" height="15" fill="rgb(229,23,39)"/><text x="50.3566%" y="415.50">d..</text></g><g><title>do_softirq_own_stack (28 samples, 1.99%)</title><rect x="50.1777%" y="389" width="1.9900%" height="15" fill="rgb(206,12,3)"/><text x="50.4277%" y="399.50">d..</text></g><g><title>__do_softirq (28 samples, 1.99%)</title><rect x="50.1777%" y="373" width="1.9900%" height="15" fill="rgb(252,226,20)"/><text x="50.4277%" y="383.50">_..</text></g><g><title>net_rx_action (28 samples, 1.99%)</title><rect x="50.1777%" y="357" width="1.9900%" height="15" fill="rgb(216,123,35)"/><text x="50.4277%" y="367.50">n..</text></g><g><title>process_backlog (28 samples, 1.99%)</title><rect x="50.1777%" y="341" width="1.9900%" height="15" fill="rgb(212,68,40)"/><text x="50.4277%" y="351.50">p..</text></g><g><title>_raw_spin_lock (2 samples, 0.14%)</title><rect x="52.0256%" y="325" width="0.1421%" height="15" fill="rgb(254,125,32)"/><text x="52.2756%" y="335.50"></text></g><g><title>__ip_queue_xmit (46 samples, 3.27%)</title><rect x="49.0405%" y="469" width="3.2694%" height="15" fill="rgb(253,97,22)"/><text x="49.2905%" y="479.50">__i..</text></g><g><title>ip_output (43 samples, 3.06%)</title><rect x="49.2537%" y="453" width="3.0561%" height="15" fill="rgb(241,101,14)"/><text x="49.5037%" y="463.50">ip_..</text></g><g><title>ip_finish_output (2 samples, 0.14%)</title><rect x="52.1677%" y="437" width="0.1421%" height="15" fill="rgb(238,103,29)"/><text x="52.4177%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.14%)</title><rect x="52.1677%" y="421" width="0.1421%" height="15" fill="rgb(233,195,47)"/><text x="52.4177%" y="431.50"></text></g><g><title>__tcp_transmit_skb (50 samples, 3.55%)</title><rect x="48.8984%" y="485" width="3.5537%" height="15" fill="rgb(246,218,30)"/><text x="49.1484%" y="495.50">__tc..</text></g><g><title>tcp_options_write (2 samples, 0.14%)</title><rect x="52.3099%" y="469" width="0.1421%" height="15" fill="rgb(219,145,47)"/><text x="52.5599%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (53 samples, 3.77%)</title><rect x="48.8273%" y="517" width="3.7669%" height="15" fill="rgb(243,12,26)"/><text x="49.0773%" y="527.50">__tc..</text></g><g><title>tcp_write_xmit (53 samples, 3.77%)</title><rect x="48.8273%" y="501" width="3.7669%" height="15" fill="rgb(214,87,16)"/><text x="49.0773%" y="511.50">tcp_..</text></g><g><title>sock_sendmsg (60 samples, 4.26%)</title><rect x="48.5430%" y="565" width="4.2644%" height="15" fill="rgb(208,99,42)"/><text x="48.7930%" y="575.50">sock_..</text></g><g><title>tcp_sendmsg (59 samples, 4.19%)</title><rect x="48.6141%" y="549" width="4.1933%" height="15" fill="rgb(253,99,2)"/><text x="48.8641%" y="559.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (56 samples, 3.98%)</title><rect x="48.8273%" y="533" width="3.9801%" height="15" fill="rgb(220,168,23)"/><text x="49.0773%" y="543.50">tcp_..</text></g><g><title>tcp_send_mss (2 samples, 0.14%)</title><rect x="52.6652%" y="517" width="0.1421%" height="15" fill="rgb(242,38,24)"/><text x="52.9152%" y="527.50"></text></g><g><title>tcp_current_mss (2 samples, 0.14%)</title><rect x="52.6652%" y="501" width="0.1421%" height="15" fill="rgb(225,182,9)"/><text x="52.9152%" y="511.50"></text></g><g><title>__x64_sys_sendto (65 samples, 4.62%)</title><rect x="48.3298%" y="597" width="4.6198%" height="15" fill="rgb(243,178,37)"/><text x="48.5798%" y="607.50">__x64..</text></g><g><title>__sys_sendto (64 samples, 4.55%)</title><rect x="48.4009%" y="581" width="4.5487%" height="15" fill="rgb(232,139,19)"/><text x="48.6509%" y="591.50">__sys..</text></g><g><title>sockfd_lookup_light (2 samples, 0.14%)</title><rect x="52.8074%" y="565" width="0.1421%" height="15" fill="rgb(225,201,24)"/><text x="53.0574%" y="575.50"></text></g><g><title>__fget_light (2 samples, 0.14%)</title><rect x="52.8074%" y="549" width="0.1421%" height="15" fill="rgb(221,47,46)"/><text x="53.0574%" y="559.50"></text></g><g><title>__fget_files (2 samples, 0.14%)</title><rect x="52.8074%" y="533" width="0.1421%" height="15" fill="rgb(249,23,13)"/><text x="53.0574%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (118 samples, 8.39%)</title><rect x="44.7050%" y="741" width="8.3866%" height="15" fill="rgb(219,9,5)"/><text x="44.9550%" y="751.50">&lt;mysql::conn..</text></g><g><title>mysql::conn::Conn::_query (115 samples, 8.17%)</title><rect x="44.9183%" y="725" width="8.1734%" height="15" fill="rgb(254,171,16)"/><text x="45.1683%" y="735.50">mysql::conn..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (74 samples, 5.26%)</title><rect x="47.8323%" y="709" width="5.2594%" height="15" fill="rgb(230,171,20)"/><text x="48.0823%" y="719.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (69 samples, 4.90%)</title><rect x="48.1876%" y="693" width="4.9041%" height="15" fill="rgb(210,71,41)"/><text x="48.4376%" y="703.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (69 samples, 4.90%)</title><rect x="48.1876%" y="677" width="4.9041%" height="15" fill="rgb(206,173,20)"/><text x="48.4376%" y="687.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (69 samples, 4.90%)</title><rect x="48.1876%" y="661" width="4.9041%" height="15" fill="rgb(233,88,34)"/><text x="48.4376%" y="671.50">std::s..</text></g><g><title>__libc_send (69 samples, 4.90%)</title><rect x="48.1876%" y="645" width="4.9041%" height="15" fill="rgb(223,209,46)"/><text x="48.4376%" y="655.50">__libc..</text></g><g><title>entry_SYSCALL_64 (68 samples, 4.83%)</title><rect x="48.2587%" y="629" width="4.8330%" height="15" fill="rgb(250,43,18)"/><text x="48.5087%" y="639.50">entry_..</text></g><g><title>do_syscall_64 (67 samples, 4.76%)</title><rect x="48.3298%" y="613" width="4.7619%" height="15" fill="rgb(208,13,10)"/><text x="48.5798%" y="623.50">do_sys..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="53.1628%" y="709" width="0.1421%" height="15" fill="rgb(212,200,36)"/><text x="53.4128%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="53.1628%" y="693" width="0.1421%" height="15" fill="rgb(225,90,30)"/><text x="53.4128%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.21%)</title><rect x="53.4471%" y="597" width="0.2132%" height="15" fill="rgb(236,182,39)"/><text x="53.6971%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="53.5181%" y="581" width="0.1421%" height="15" fill="rgb(212,144,35)"/><text x="53.7681%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.36%)</title><rect x="53.3760%" y="629" width="0.3554%" height="15" fill="rgb(228,63,44)"/><text x="53.6260%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.36%)</title><rect x="53.3760%" y="613" width="0.3554%" height="15" fill="rgb(228,109,6)"/><text x="53.6260%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="53.8024%" y="597" width="0.1421%" height="15" fill="rgb(238,117,24)"/><text x="54.0524%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="53.8024%" y="581" width="0.1421%" height="15" fill="rgb(242,26,26)"/><text x="54.0524%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.64%)</title><rect x="53.3760%" y="645" width="0.6397%" height="15" fill="rgb(221,92,48)"/><text x="53.6260%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.28%)</title><rect x="53.7313%" y="629" width="0.2843%" height="15" fill="rgb(209,209,32)"/><text x="53.9813%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.21%)</title><rect x="53.8024%" y="613" width="0.2132%" height="15" fill="rgb(221,70,22)"/><text x="54.0524%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.00%)</title><rect x="53.3049%" y="661" width="0.9950%" height="15" fill="rgb(248,145,5)"/><text x="53.5549%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.21%)</title><rect x="54.0867%" y="645" width="0.2132%" height="15" fill="rgb(226,116,26)"/><text x="54.3367%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="54.1578%" y="629" width="0.1421%" height="15" fill="rgb(244,5,17)"/><text x="54.4078%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="54.1578%" y="613" width="0.1421%" height="15" fill="rgb(252,159,33)"/><text x="54.4078%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.57%)</title><rect x="54.2999%" y="613" width="0.5686%" height="15" fill="rgb(206,71,0)"/><text x="54.5499%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.57%)</title><rect x="54.2999%" y="597" width="0.5686%" height="15" fill="rgb(233,118,54)"/><text x="54.5499%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.57%)</title><rect x="54.2999%" y="581" width="0.5686%" height="15" fill="rgb(234,83,48)"/><text x="54.5499%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.50%)</title><rect x="54.3710%" y="565" width="0.4975%" height="15" fill="rgb(228,3,54)"/><text x="54.6210%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.21%)</title><rect x="54.6553%" y="549" width="0.2132%" height="15" fill="rgb(226,155,13)"/><text x="54.9053%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.21%)</title><rect x="54.6553%" y="533" width="0.2132%" height="15" fill="rgb(241,28,37)"/><text x="54.9053%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.71%)</title><rect x="54.2999%" y="629" width="0.7107%" height="15" fill="rgb(233,93,10)"/><text x="54.5499%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="54.8685%" y="613" width="0.1421%" height="15" fill="rgb(225,113,19)"/><text x="55.1185%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.00%)</title><rect x="54.2999%" y="645" width="0.9950%" height="15" fill="rgb(241,2,18)"/><text x="54.5499%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.21%)</title><rect x="55.0817%" y="629" width="0.2132%" height="15" fill="rgb(228,207,21)"/><text x="55.3317%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.21%)</title><rect x="55.0817%" y="613" width="0.2132%" height="15" fill="rgb(213,211,35)"/><text x="55.3317%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="55.1528%" y="597" width="0.1421%" height="15" fill="rgb(209,83,10)"/><text x="55.4028%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="55.1528%" y="581" width="0.1421%" height="15" fill="rgb(209,164,1)"/><text x="55.4028%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="55.1528%" y="565" width="0.1421%" height="15" fill="rgb(213,184,43)"/><text x="55.4028%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.21%)</title><rect x="55.2950%" y="597" width="0.2132%" height="15" fill="rgb(231,61,34)"/><text x="55.5450%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.21%)</title><rect x="55.2950%" y="581" width="0.2132%" height="15" fill="rgb(235,75,3)"/><text x="55.5450%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.21%)</title><rect x="55.2950%" y="565" width="0.2132%" height="15" fill="rgb(220,106,47)"/><text x="55.5450%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.21%)</title><rect x="55.2950%" y="549" width="0.2132%" height="15" fill="rgb(210,196,33)"/><text x="55.5450%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="55.3660%" y="533" width="0.1421%" height="15" fill="rgb(229,154,42)"/><text x="55.6160%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 1.28%)</title><rect x="54.2999%" y="661" width="1.2793%" height="15" fill="rgb(228,114,26)"/><text x="54.5499%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.28%)</title><rect x="55.2950%" y="645" width="0.2843%" height="15" fill="rgb(208,144,1)"/><text x="55.5450%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.28%)</title><rect x="55.2950%" y="629" width="0.2843%" height="15" fill="rgb(239,112,37)"/><text x="55.5450%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.28%)</title><rect x="55.2950%" y="613" width="0.2843%" height="15" fill="rgb(210,96,50)"/><text x="55.5450%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.21%)</title><rect x="55.5792%" y="661" width="0.2132%" height="15" fill="rgb(222,178,2)"/><text x="55.8292%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.21%)</title><rect x="55.5792%" y="645" width="0.2132%" height="15" fill="rgb(226,74,18)"/><text x="55.8292%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.21%)</title><rect x="55.5792%" y="629" width="0.2132%" height="15" fill="rgb(225,67,54)"/><text x="55.8292%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="55.7925%" y="645" width="0.1421%" height="15" fill="rgb(251,92,32)"/><text x="56.0425%" y="655.50"></text></g><g><title>core::fmt::write (40 samples, 2.84%)</title><rect x="53.1628%" y="741" width="2.8429%" height="15" fill="rgb(228,149,22)"/><text x="53.4128%" y="751.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (40 samples, 2.84%)</title><rect x="53.1628%" y="725" width="2.8429%" height="15" fill="rgb(243,54,13)"/><text x="53.4128%" y="735.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (38 samples, 2.70%)</title><rect x="53.3049%" y="709" width="2.7008%" height="15" fill="rgb(243,180,28)"/><text x="53.5549%" y="719.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (38 samples, 2.70%)</title><rect x="53.3049%" y="693" width="2.7008%" height="15" fill="rgb(208,167,24)"/><text x="53.5549%" y="703.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (38 samples, 2.70%)</title><rect x="53.3049%" y="677" width="2.7008%" height="15" fill="rgb(245,73,45)"/><text x="53.5549%" y="687.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.21%)</title><rect x="55.7925%" y="661" width="0.2132%" height="15" fill="rgb(237,203,48)"/><text x="56.0425%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="56.0768%" y="677" width="0.1421%" height="15" fill="rgb(211,197,16)"/><text x="56.3268%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.57%)</title><rect x="56.0768%" y="693" width="0.5686%" height="15" fill="rgb(243,99,51)"/><text x="56.3268%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.43%)</title><rect x="56.2189%" y="677" width="0.4264%" height="15" fill="rgb(215,123,29)"/><text x="56.4689%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.43%)</title><rect x="56.2189%" y="661" width="0.4264%" height="15" fill="rgb(239,186,37)"/><text x="56.4689%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.21%)</title><rect x="56.4321%" y="645" width="0.2132%" height="15" fill="rgb(252,136,39)"/><text x="56.6821%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="56.7875%" y="677" width="0.1421%" height="15" fill="rgb(223,213,32)"/><text x="57.0375%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 1.14%)</title><rect x="56.0057%" y="741" width="1.1372%" height="15" fill="rgb(233,115,5)"/><text x="56.2557%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 1.07%)</title><rect x="56.0768%" y="725" width="1.0661%" height="15" fill="rgb(207,226,44)"/><text x="56.3268%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 1.07%)</title><rect x="56.0768%" y="709" width="1.0661%" height="15" fill="rgb(208,126,0)"/><text x="56.3268%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.43%)</title><rect x="56.7164%" y="693" width="0.4264%" height="15" fill="rgb(244,66,21)"/><text x="56.9664%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.21%)</title><rect x="56.9296%" y="677" width="0.2132%" height="15" fill="rgb(222,97,12)"/><text x="57.1796%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="57.0007%" y="661" width="0.1421%" height="15" fill="rgb(219,213,19)"/><text x="57.2507%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="57.3561%" y="725" width="0.1421%" height="15" fill="rgb(252,169,30)"/><text x="57.6061%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="57.7825%" y="661" width="0.2132%" height="15" fill="rgb(206,32,51)"/><text x="58.0325%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.14%)</title><rect x="57.8536%" y="645" width="0.1421%" height="15" fill="rgb(250,172,42)"/><text x="58.1036%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="57.9957%" y="661" width="0.1421%" height="15" fill="rgb(209,34,43)"/><text x="58.2457%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.21%)</title><rect x="58.2090%" y="661" width="0.2132%" height="15" fill="rgb(223,11,35)"/><text x="58.4590%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 0.78%)</title><rect x="57.7114%" y="677" width="0.7818%" height="15" fill="rgb(251,219,26)"/><text x="57.9614%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (16 samples, 1.14%)</title><rect x="57.5693%" y="709" width="1.1372%" height="15" fill="rgb(231,119,3)"/><text x="57.8193%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (16 samples, 1.14%)</title><rect x="57.5693%" y="693" width="1.1372%" height="15" fill="rgb(216,97,11)"/><text x="57.8193%" y="703.50"></text></g><g><title>mysql_common::value::read_text_values (2 samples, 0.14%)</title><rect x="58.5643%" y="677" width="0.1421%" height="15" fill="rgb(223,59,9)"/><text x="58.8143%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.35%)</title><rect x="57.4982%" y="725" width="1.3504%" height="15" fill="rgb(233,93,31)"/><text x="57.7482%" y="735.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="58.9197%" y="725" width="0.1421%" height="15" fill="rgb(239,81,33)"/><text x="59.1697%" y="735.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (3 samples, 0.21%)</title><rect x="59.0618%" y="725" width="0.2132%" height="15" fill="rgb(213,120,34)"/><text x="59.3118%" y="735.50"></text></g><g><title>msql_srv::writers::column_definitions (3 samples, 0.21%)</title><rect x="59.0618%" y="709" width="0.2132%" height="15" fill="rgb(243,49,53)"/><text x="59.3118%" y="719.50"></text></g><g><title>decor::answer_rows (36 samples, 2.56%)</title><rect x="57.1429%" y="741" width="2.5586%" height="15" fill="rgb(247,216,33)"/><text x="57.3929%" y="751.50">de..</text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (4 samples, 0.28%)</title><rect x="59.4172%" y="725" width="0.2843%" height="15" fill="rgb(226,26,14)"/><text x="59.6672%" y="735.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (4 samples, 0.28%)</title><rect x="59.4172%" y="709" width="0.2843%" height="15" fill="rgb(215,49,53)"/><text x="59.6672%" y="719.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (3 samples, 0.21%)</title><rect x="59.4883%" y="693" width="0.2132%" height="15" fill="rgb(245,162,40)"/><text x="59.7383%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.14%)</title><rect x="59.5593%" y="677" width="0.1421%" height="15" fill="rgb(229,68,17)"/><text x="59.8093%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.21%)</title><rect x="59.9147%" y="661" width="0.2132%" height="15" fill="rgb(213,182,10)"/><text x="60.1647%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (6 samples, 0.43%)</title><rect x="59.7726%" y="677" width="0.4264%" height="15" fill="rgb(245,125,30)"/><text x="60.0226%" y="687.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.36%)</title><rect x="61.2651%" y="373" width="0.3554%" height="15" fill="rgb(232,202,2)"/><text x="61.5151%" y="383.50"></text></g><g><title>loopback_xmit (4 samples, 0.28%)</title><rect x="61.3362%" y="357" width="0.2843%" height="15" fill="rgb(237,140,51)"/><text x="61.5862%" y="367.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.64%)</title><rect x="61.1940%" y="389" width="0.6397%" height="15" fill="rgb(236,157,25)"/><text x="61.4440%" y="399.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.21%)</title><rect x="61.6205%" y="373" width="0.2132%" height="15" fill="rgb(219,209,0)"/><text x="61.8705%" y="383.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.14%)</title><rect x="61.9758%" y="325" width="0.1421%" height="15" fill="rgb(240,116,54)"/><text x="62.2258%" y="335.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.14%)</title><rect x="62.4023%" y="197" width="0.1421%" height="15" fill="rgb(216,10,36)"/><text x="62.6523%" y="207.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.14%)</title><rect x="62.4023%" y="181" width="0.1421%" height="15" fill="rgb(222,72,44)"/><text x="62.6523%" y="191.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="62.6866%" y="69" width="0.1421%" height="15" fill="rgb(232,159,9)"/><text x="62.9366%" y="79.50"></text></g><g><title>enqueue_task (3 samples, 0.21%)</title><rect x="62.6866%" y="85" width="0.2132%" height="15" fill="rgb(210,39,32)"/><text x="62.9366%" y="95.50"></text></g><g><title>sock_def_readable (6 samples, 0.43%)</title><rect x="62.6866%" y="165" width="0.4264%" height="15" fill="rgb(216,194,45)"/><text x="62.9366%" y="175.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.43%)</title><rect x="62.6866%" y="149" width="0.4264%" height="15" fill="rgb(218,18,35)"/><text x="62.9366%" y="159.50"></text></g><g><title>__wake_up_common (6 samples, 0.43%)</title><rect x="62.6866%" y="133" width="0.4264%" height="15" fill="rgb(207,83,51)"/><text x="62.9366%" y="143.50"></text></g><g><title>pollwake (6 samples, 0.43%)</title><rect x="62.6866%" y="117" width="0.4264%" height="15" fill="rgb(225,63,43)"/><text x="62.9366%" y="127.50"></text></g><g><title>try_to_wake_up (6 samples, 0.43%)</title><rect x="62.6866%" y="101" width="0.4264%" height="15" fill="rgb(207,57,36)"/><text x="62.9366%" y="111.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.14%)</title><rect x="62.9709%" y="85" width="0.1421%" height="15" fill="rgb(216,99,33)"/><text x="63.2209%" y="95.50"></text></g><g><title>check_preempt_curr (2 samples, 0.14%)</title><rect x="62.9709%" y="69" width="0.1421%" height="15" fill="rgb(225,42,16)"/><text x="63.2209%" y="79.50"></text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="63.1130%" y="149" width="0.1421%" height="15" fill="rgb(220,201,45)"/><text x="63.3630%" y="159.50"></text></g><g><title>kfree (2 samples, 0.14%)</title><rect x="63.1130%" y="133" width="0.1421%" height="15" fill="rgb(225,33,4)"/><text x="63.3630%" y="143.50"></text></g><g><title>ip_local_deliver (15 samples, 1.07%)</title><rect x="62.4023%" y="261" width="1.0661%" height="15" fill="rgb(224,33,50)"/><text x="62.6523%" y="271.50"></text></g><g><title>ip_local_deliver_finish (15 samples, 1.07%)</title><rect x="62.4023%" y="245" width="1.0661%" height="15" fill="rgb(246,198,51)"/><text x="62.6523%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (15 samples, 1.07%)</title><rect x="62.4023%" y="229" width="1.0661%" height="15" fill="rgb(205,22,4)"/><text x="62.6523%" y="239.50"></text></g><g><title>tcp_v4_rcv (15 samples, 1.07%)</title><rect x="62.4023%" y="213" width="1.0661%" height="15" fill="rgb(206,3,8)"/><text x="62.6523%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 0.92%)</title><rect x="62.5444%" y="197" width="0.9240%" height="15" fill="rgb(251,23,15)"/><text x="62.7944%" y="207.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.85%)</title><rect x="62.6155%" y="181" width="0.8529%" height="15" fill="rgb(252,88,28)"/><text x="62.8655%" y="191.50"></text></g><g><title>tcp_ack (5 samples, 0.36%)</title><rect x="63.1130%" y="165" width="0.3554%" height="15" fill="rgb(212,127,14)"/><text x="63.3630%" y="175.50"></text></g><g><title>ip_finish_output2 (38 samples, 2.70%)</title><rect x="60.8387%" y="405" width="2.7008%" height="15" fill="rgb(247,145,37)"/><text x="61.0887%" y="415.50">ip..</text></g><g><title>__local_bh_enable_ip (24 samples, 1.71%)</title><rect x="61.8337%" y="389" width="1.7058%" height="15" fill="rgb(209,117,53)"/><text x="62.0837%" y="399.50"></text></g><g><title>do_softirq (24 samples, 1.71%)</title><rect x="61.8337%" y="373" width="1.7058%" height="15" fill="rgb(212,90,42)"/><text x="62.0837%" y="383.50"></text></g><g><title>do_softirq_own_stack (22 samples, 1.56%)</title><rect x="61.9758%" y="357" width="1.5636%" height="15" fill="rgb(218,164,37)"/><text x="62.2258%" y="367.50"></text></g><g><title>__do_softirq (22 samples, 1.56%)</title><rect x="61.9758%" y="341" width="1.5636%" height="15" fill="rgb(246,65,34)"/><text x="62.2258%" y="351.50"></text></g><g><title>net_rx_action (20 samples, 1.42%)</title><rect x="62.1180%" y="325" width="1.4215%" height="15" fill="rgb(231,100,33)"/><text x="62.3680%" y="335.50"></text></g><g><title>process_backlog (18 samples, 1.28%)</title><rect x="62.2601%" y="309" width="1.2793%" height="15" fill="rgb(228,126,14)"/><text x="62.5101%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (17 samples, 1.21%)</title><rect x="62.3312%" y="293" width="1.2082%" height="15" fill="rgb(215,173,21)"/><text x="62.5812%" y="303.50"></text></g><g><title>ip_rcv (16 samples, 1.14%)</title><rect x="62.4023%" y="277" width="1.1372%" height="15" fill="rgb(210,6,40)"/><text x="62.6523%" y="287.50"></text></g><g><title>__ip_queue_xmit (41 samples, 2.91%)</title><rect x="60.6965%" y="437" width="2.9140%" height="15" fill="rgb(212,48,18)"/><text x="60.9465%" y="447.50">__..</text></g><g><title>ip_output (40 samples, 2.84%)</title><rect x="60.7676%" y="421" width="2.8429%" height="15" fill="rgb(230,214,11)"/><text x="61.0176%" y="431.50">ip..</text></g><g><title>__tcp_transmit_skb (45 samples, 3.20%)</title><rect x="60.6254%" y="453" width="3.1983%" height="15" fill="rgb(254,105,39)"/><text x="60.8754%" y="463.50">__t..</text></g><g><title>__tcp_push_pending_frames (46 samples, 3.27%)</title><rect x="60.6254%" y="485" width="3.2694%" height="15" fill="rgb(245,158,5)"/><text x="60.8754%" y="495.50">__t..</text></g><g><title>tcp_write_xmit (46 samples, 3.27%)</title><rect x="60.6254%" y="469" width="3.2694%" height="15" fill="rgb(249,208,11)"/><text x="60.8754%" y="479.50">tcp..</text></g><g><title>sock_sendmsg (52 samples, 3.70%)</title><rect x="60.3412%" y="533" width="3.6958%" height="15" fill="rgb(210,39,28)"/><text x="60.5912%" y="543.50">sock..</text></g><g><title>tcp_sendmsg (52 samples, 3.70%)</title><rect x="60.3412%" y="517" width="3.6958%" height="15" fill="rgb(211,56,53)"/><text x="60.5912%" y="527.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (51 samples, 3.62%)</title><rect x="60.4122%" y="501" width="3.6247%" height="15" fill="rgb(226,201,30)"/><text x="60.6622%" y="511.50">tcp_..</text></g><g><title>__x64_sys_sendto (56 samples, 3.98%)</title><rect x="60.2701%" y="565" width="3.9801%" height="15" fill="rgb(239,101,34)"/><text x="60.5201%" y="575.50">__x6..</text></g><g><title>__sys_sendto (56 samples, 3.98%)</title><rect x="60.2701%" y="549" width="3.9801%" height="15" fill="rgb(226,209,5)"/><text x="60.5201%" y="559.50">__sy..</text></g><g><title>sockfd_lookup_light (3 samples, 0.21%)</title><rect x="64.0370%" y="533" width="0.2132%" height="15" fill="rgb(250,105,47)"/><text x="64.2870%" y="543.50"></text></g><g><title>__fget_light (3 samples, 0.21%)</title><rect x="64.0370%" y="517" width="0.2132%" height="15" fill="rgb(230,72,3)"/><text x="64.2870%" y="527.50"></text></g><g><title>do_syscall_64 (57 samples, 4.05%)</title><rect x="60.2701%" y="581" width="4.0512%" height="15" fill="rgb(232,218,39)"/><text x="60.5201%" y="591.50">do_s..</text></g><g><title>mysql::conn::Conn::start_transaction (66 samples, 4.69%)</title><rect x="59.7015%" y="741" width="4.6908%" height="15" fill="rgb(248,166,6)"/><text x="59.9515%" y="751.50">mysql..</text></g><g><title>mysql::conn::Conn::_start_transaction (66 samples, 4.69%)</title><rect x="59.7015%" y="725" width="4.6908%" height="15" fill="rgb(247,89,20)"/><text x="59.9515%" y="735.50">mysql..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (66 samples, 4.69%)</title><rect x="59.7015%" y="709" width="4.6908%" height="15" fill="rgb(248,130,54)"/><text x="59.9515%" y="719.50">mysql..</text></g><g><title>mysql::conn::Conn::_query (65 samples, 4.62%)</title><rect x="59.7726%" y="693" width="4.6198%" height="15" fill="rgb(234,196,4)"/><text x="60.0226%" y="703.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (59 samples, 4.19%)</title><rect x="60.1990%" y="677" width="4.1933%" height="15" fill="rgb(250,143,31)"/><text x="60.4490%" y="687.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (59 samples, 4.19%)</title><rect x="60.1990%" y="661" width="4.1933%" height="15" fill="rgb(211,110,34)"/><text x="60.4490%" y="671.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (59 samples, 4.19%)</title><rect x="60.1990%" y="645" width="4.1933%" height="15" fill="rgb(215,124,48)"/><text x="60.4490%" y="655.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (59 samples, 4.19%)</title><rect x="60.1990%" y="629" width="4.1933%" height="15" fill="rgb(216,46,13)"/><text x="60.4490%" y="639.50">std::..</text></g><g><title>__libc_send (59 samples, 4.19%)</title><rect x="60.1990%" y="613" width="4.1933%" height="15" fill="rgb(205,184,25)"/><text x="60.4490%" y="623.50">__lib..</text></g><g><title>entry_SYSCALL_64 (58 samples, 4.12%)</title><rect x="60.2701%" y="597" width="4.1222%" height="15" fill="rgb(228,1,10)"/><text x="60.5201%" y="607.50">entr..</text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="65.1031%" y="453" width="0.1421%" height="15" fill="rgb(213,116,27)"/><text x="65.3531%" y="463.50"></text></g><g><title>skb_release_head_state (2 samples, 0.14%)</title><rect x="65.1031%" y="437" width="0.1421%" height="15" fill="rgb(241,95,50)"/><text x="65.3531%" y="447.50"></text></g><g><title>dst_release (2 samples, 0.14%)</title><rect x="65.1031%" y="421" width="0.1421%" height="15" fill="rgb(238,48,32)"/><text x="65.3531%" y="431.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.21%)</title><rect x="65.6006%" y="373" width="0.2132%" height="15" fill="rgb(235,113,49)"/><text x="65.8506%" y="383.50"></text></g><g><title>dequeue_entity (2 samples, 0.14%)</title><rect x="65.6716%" y="357" width="0.1421%" height="15" fill="rgb(205,127,43)"/><text x="65.9216%" y="367.50"></text></g><g><title>finish_task_switch (2 samples, 0.14%)</title><rect x="65.8138%" y="373" width="0.1421%" height="15" fill="rgb(250,162,2)"/><text x="66.0638%" y="383.50"></text></g><g><title>sk_wait_data (10 samples, 0.71%)</title><rect x="65.3163%" y="453" width="0.7107%" height="15" fill="rgb(220,13,41)"/><text x="65.5663%" y="463.50"></text></g><g><title>wait_woken (9 samples, 0.64%)</title><rect x="65.3873%" y="437" width="0.6397%" height="15" fill="rgb(249,221,25)"/><text x="65.6373%" y="447.50"></text></g><g><title>schedule_timeout (9 samples, 0.64%)</title><rect x="65.3873%" y="421" width="0.6397%" height="15" fill="rgb(215,208,19)"/><text x="65.6373%" y="431.50"></text></g><g><title>schedule (9 samples, 0.64%)</title><rect x="65.3873%" y="405" width="0.6397%" height="15" fill="rgb(236,175,2)"/><text x="65.6373%" y="415.50"></text></g><g><title>__schedule (9 samples, 0.64%)</title><rect x="65.3873%" y="389" width="0.6397%" height="15" fill="rgb(241,52,2)"/><text x="65.6373%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 1.63%)</title><rect x="64.6055%" y="549" width="1.6347%" height="15" fill="rgb(248,140,14)"/><text x="64.8555%" y="559.50"></text></g><g><title>do_syscall_64 (22 samples, 1.56%)</title><rect x="64.6766%" y="533" width="1.5636%" height="15" fill="rgb(253,22,42)"/><text x="64.9266%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (21 samples, 1.49%)</title><rect x="64.7477%" y="517" width="1.4925%" height="15" fill="rgb(234,61,47)"/><text x="64.9977%" y="527.50"></text></g><g><title>__sys_recvfrom (21 samples, 1.49%)</title><rect x="64.7477%" y="501" width="1.4925%" height="15" fill="rgb(208,226,15)"/><text x="64.9977%" y="511.50"></text></g><g><title>inet_recvmsg (19 samples, 1.35%)</title><rect x="64.8898%" y="485" width="1.3504%" height="15" fill="rgb(217,221,4)"/><text x="65.1398%" y="495.50"></text></g><g><title>tcp_recvmsg (19 samples, 1.35%)</title><rect x="64.8898%" y="469" width="1.3504%" height="15" fill="rgb(212,174,34)"/><text x="65.1398%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.21%)</title><rect x="66.0270%" y="453" width="0.2132%" height="15" fill="rgb(253,83,4)"/><text x="66.2770%" y="463.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.21%)</title><rect x="66.0270%" y="437" width="0.2132%" height="15" fill="rgb(250,195,49)"/><text x="66.2770%" y="447.50"></text></g><g><title>__libc_recv (24 samples, 1.71%)</title><rect x="64.6055%" y="565" width="1.7058%" height="15" fill="rgb(241,192,25)"/><text x="64.8555%" y="575.50"></text></g><g><title>mysql::conn::Conn::read_packet (26 samples, 1.85%)</title><rect x="64.5345%" y="677" width="1.8479%" height="15" fill="rgb(208,124,10)"/><text x="64.7845%" y="687.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 1.85%)</title><rect x="64.5345%" y="661" width="1.8479%" height="15" fill="rgb(222,33,0)"/><text x="64.7845%" y="671.50">&lt;..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 1.78%)</title><rect x="64.6055%" y="645" width="1.7768%" height="15" fill="rgb(234,209,28)"/><text x="64.8555%" y="655.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 1.78%)</title><rect x="64.6055%" y="629" width="1.7768%" height="15" fill="rgb(224,11,23)"/><text x="64.8555%" y="639.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 1.78%)</title><rect x="64.6055%" y="613" width="1.7768%" height="15" fill="rgb(232,99,1)"/><text x="64.8555%" y="623.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 1.78%)</title><rect x="64.6055%" y="597" width="1.7768%" height="15" fill="rgb(237,95,45)"/><text x="64.8555%" y="607.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 1.78%)</title><rect x="64.6055%" y="581" width="1.7768%" height="15" fill="rgb(208,109,11)"/><text x="64.8555%" y="591.50">s..</text></g><g><title>mysql::conn::Conn::handle_result_set (28 samples, 1.99%)</title><rect x="64.4634%" y="693" width="1.9900%" height="15" fill="rgb(216,190,48)"/><text x="64.7134%" y="703.50">m..</text></g><g><title>__local_bh_enable_ip (2 samples, 0.14%)</title><rect x="66.4534%" y="517" width="0.1421%" height="15" fill="rgb(251,171,36)"/><text x="66.7034%" y="527.50"></text></g><g><title>__ip_local_out (2 samples, 0.14%)</title><rect x="66.9510%" y="437" width="0.1421%" height="15" fill="rgb(230,62,22)"/><text x="67.2010%" y="447.50"></text></g><g><title>ip_send_check (2 samples, 0.14%)</title><rect x="66.9510%" y="421" width="0.1421%" height="15" fill="rgb(225,114,35)"/><text x="67.2010%" y="431.50"></text></g><g><title>netif_rx (3 samples, 0.21%)</title><rect x="67.4485%" y="357" width="0.2132%" height="15" fill="rgb(215,118,42)"/><text x="67.6985%" y="367.50"></text></g><g><title>netif_rx_internal (3 samples, 0.21%)</title><rect x="67.4485%" y="341" width="0.2132%" height="15" fill="rgb(243,119,21)"/><text x="67.6985%" y="351.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.28%)</title><rect x="67.4485%" y="389" width="0.2843%" height="15" fill="rgb(252,177,53)"/><text x="67.6985%" y="399.50"></text></g><g><title>loopback_xmit (4 samples, 0.28%)</title><rect x="67.4485%" y="373" width="0.2843%" height="15" fill="rgb(237,209,29)"/><text x="67.6985%" y="383.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.57%)</title><rect x="67.3063%" y="405" width="0.5686%" height="15" fill="rgb(212,65,23)"/><text x="67.5563%" y="415.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="68.5856%" y="85" width="0.1421%" height="15" fill="rgb(230,222,46)"/><text x="68.8356%" y="95.50"></text></g><g><title>psi_group_change (2 samples, 0.14%)</title><rect x="68.5856%" y="69" width="0.1421%" height="15" fill="rgb(215,135,32)"/><text x="68.8356%" y="79.50"></text></g><g><title>enqueue_task (4 samples, 0.28%)</title><rect x="68.5856%" y="101" width="0.2843%" height="15" fill="rgb(246,101,22)"/><text x="68.8356%" y="111.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.14%)</title><rect x="68.7278%" y="85" width="0.1421%" height="15" fill="rgb(206,107,13)"/><text x="68.9778%" y="95.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.21%)</title><rect x="68.8699%" y="101" width="0.2132%" height="15" fill="rgb(250,100,44)"/><text x="69.1199%" y="111.50"></text></g><g><title>enqueue_entity (3 samples, 0.21%)</title><rect x="68.8699%" y="85" width="0.2132%" height="15" fill="rgb(231,147,38)"/><text x="69.1199%" y="95.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.14%)</title><rect x="69.0832%" y="101" width="0.1421%" height="15" fill="rgb(229,8,40)"/><text x="69.3332%" y="111.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.14%)</title><rect x="69.2253%" y="101" width="0.1421%" height="15" fill="rgb(221,135,30)"/><text x="69.4753%" y="111.50"></text></g><g><title>check_preempt_curr (2 samples, 0.14%)</title><rect x="69.2253%" y="85" width="0.1421%" height="15" fill="rgb(249,193,18)"/><text x="69.4753%" y="95.50"></text></g><g><title>sock_def_readable (12 samples, 0.85%)</title><rect x="68.5856%" y="181" width="0.8529%" height="15" fill="rgb(209,133,39)"/><text x="68.8356%" y="191.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.85%)</title><rect x="68.5856%" y="165" width="0.8529%" height="15" fill="rgb(232,100,14)"/><text x="68.8356%" y="175.50"></text></g><g><title>__wake_up_common (12 samples, 0.85%)</title><rect x="68.5856%" y="149" width="0.8529%" height="15" fill="rgb(224,185,1)"/><text x="68.8356%" y="159.50"></text></g><g><title>pollwake (12 samples, 0.85%)</title><rect x="68.5856%" y="133" width="0.8529%" height="15" fill="rgb(223,139,8)"/><text x="68.8356%" y="143.50"></text></g><g><title>try_to_wake_up (12 samples, 0.85%)</title><rect x="68.5856%" y="117" width="0.8529%" height="15" fill="rgb(232,213,38)"/><text x="68.8356%" y="127.50"></text></g><g><title>tcp_ack (3 samples, 0.21%)</title><rect x="69.4385%" y="181" width="0.2132%" height="15" fill="rgb(207,94,22)"/><text x="69.6885%" y="191.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.14%)</title><rect x="69.5096%" y="165" width="0.1421%" height="15" fill="rgb(219,183,54)"/><text x="69.7596%" y="175.50"></text></g><g><title>ip_local_deliver (23 samples, 1.63%)</title><rect x="68.2303%" y="277" width="1.6347%" height="15" fill="rgb(216,185,54)"/><text x="68.4803%" y="287.50"></text></g><g><title>ip_local_deliver_finish (23 samples, 1.63%)</title><rect x="68.2303%" y="261" width="1.6347%" height="15" fill="rgb(254,217,39)"/><text x="68.4803%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (23 samples, 1.63%)</title><rect x="68.2303%" y="245" width="1.6347%" height="15" fill="rgb(240,178,23)"/><text x="68.4803%" y="255.50"></text></g><g><title>tcp_v4_rcv (22 samples, 1.56%)</title><rect x="68.3014%" y="229" width="1.5636%" height="15" fill="rgb(218,11,47)"/><text x="68.5514%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.35%)</title><rect x="68.5146%" y="213" width="1.3504%" height="15" fill="rgb(218,51,51)"/><text x="68.7646%" y="223.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.35%)</title><rect x="68.5146%" y="197" width="1.3504%" height="15" fill="rgb(238,126,27)"/><text x="68.7646%" y="207.50"></text></g><g><title>ip_finish_output2 (38 samples, 2.70%)</title><rect x="67.2353%" y="421" width="2.7008%" height="15" fill="rgb(249,202,22)"/><text x="67.4853%" y="431.50">ip..</text></g><g><title>__local_bh_enable_ip (29 samples, 2.06%)</title><rect x="67.8749%" y="405" width="2.0611%" height="15" fill="rgb(254,195,49)"/><text x="68.1249%" y="415.50">_..</text></g><g><title>do_softirq (28 samples, 1.99%)</title><rect x="67.9460%" y="389" width="1.9900%" height="15" fill="rgb(208,123,14)"/><text x="68.1960%" y="399.50">d..</text></g><g><title>do_softirq_own_stack (28 samples, 1.99%)</title><rect x="67.9460%" y="373" width="1.9900%" height="15" fill="rgb(224,200,8)"/><text x="68.1960%" y="383.50">d..</text></g><g><title>__do_softirq (28 samples, 1.99%)</title><rect x="67.9460%" y="357" width="1.9900%" height="15" fill="rgb(217,61,36)"/><text x="68.1960%" y="367.50">_..</text></g><g><title>net_rx_action (28 samples, 1.99%)</title><rect x="67.9460%" y="341" width="1.9900%" height="15" fill="rgb(206,35,45)"/><text x="68.1960%" y="351.50">n..</text></g><g><title>process_backlog (28 samples, 1.99%)</title><rect x="67.9460%" y="325" width="1.9900%" height="15" fill="rgb(217,65,33)"/><text x="68.1960%" y="335.50">p..</text></g><g><title>__netif_receive_skb_one_core (26 samples, 1.85%)</title><rect x="68.0881%" y="309" width="1.8479%" height="15" fill="rgb(222,158,48)"/><text x="68.3381%" y="319.50">_..</text></g><g><title>ip_rcv (25 samples, 1.78%)</title><rect x="68.1592%" y="293" width="1.7768%" height="15" fill="rgb(254,2,54)"/><text x="68.4092%" y="303.50">i..</text></g><g><title>__ip_queue_xmit (43 samples, 3.06%)</title><rect x="66.9510%" y="453" width="3.0561%" height="15" fill="rgb(250,143,38)"/><text x="67.2010%" y="463.50">__i..</text></g><g><title>ip_output (40 samples, 2.84%)</title><rect x="67.1642%" y="437" width="2.8429%" height="15" fill="rgb(248,25,0)"/><text x="67.4142%" y="447.50">ip..</text></g><g><title>bictcp_cwnd_event (2 samples, 0.14%)</title><rect x="70.0071%" y="453" width="0.1421%" height="15" fill="rgb(206,152,27)"/><text x="70.2571%" y="463.50"></text></g><g><title>__tcp_transmit_skb (50 samples, 3.55%)</title><rect x="66.8799%" y="469" width="3.5537%" height="15" fill="rgb(240,77,30)"/><text x="67.1299%" y="479.50">__tc..</text></g><g><title>skb_clone (4 samples, 0.28%)</title><rect x="70.1493%" y="453" width="0.2843%" height="15" fill="rgb(231,5,3)"/><text x="70.3993%" y="463.50"></text></g><g><title>__copy_skb_header (4 samples, 0.28%)</title><rect x="70.1493%" y="437" width="0.2843%" height="15" fill="rgb(207,226,32)"/><text x="70.3993%" y="447.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.14%)</title><rect x="70.5046%" y="469" width="0.1421%" height="15" fill="rgb(222,207,47)"/><text x="70.7546%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (56 samples, 3.98%)</title><rect x="66.7377%" y="501" width="3.9801%" height="15" fill="rgb(229,115,45)"/><text x="66.9877%" y="511.50">__tc..</text></g><g><title>tcp_write_xmit (56 samples, 3.98%)</title><rect x="66.7377%" y="485" width="3.9801%" height="15" fill="rgb(224,191,6)"/><text x="66.9877%" y="495.50">tcp_..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.14%)</title><rect x="70.7889%" y="501" width="0.1421%" height="15" fill="rgb(230,227,24)"/><text x="71.0389%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.14%)</title><rect x="70.9311%" y="501" width="0.1421%" height="15" fill="rgb(228,80,19)"/><text x="71.1811%" y="511.50"></text></g><g><title>sock_sendmsg (67 samples, 4.76%)</title><rect x="66.4534%" y="549" width="4.7619%" height="15" fill="rgb(247,229,0)"/><text x="66.7034%" y="559.50">sock_s..</text></g><g><title>tcp_sendmsg (67 samples, 4.76%)</title><rect x="66.4534%" y="533" width="4.7619%" height="15" fill="rgb(237,194,15)"/><text x="66.7034%" y="543.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (64 samples, 4.55%)</title><rect x="66.6667%" y="517" width="4.5487%" height="15" fill="rgb(219,203,20)"/><text x="66.9167%" y="527.50">tcp_s..</text></g><g><title>__x64_sys_sendto (68 samples, 4.83%)</title><rect x="66.4534%" y="581" width="4.8330%" height="15" fill="rgb(234,128,8)"/><text x="66.7034%" y="591.50">__x64_..</text></g><g><title>__sys_sendto (68 samples, 4.83%)</title><rect x="66.4534%" y="565" width="4.8330%" height="15" fill="rgb(248,202,8)"/><text x="66.7034%" y="575.50">__sys_..</text></g><g><title>do_syscall_64 (69 samples, 4.90%)</title><rect x="66.4534%" y="597" width="4.9041%" height="15" fill="rgb(206,104,37)"/><text x="66.7034%" y="607.50">do_sys..</text></g><g><title>entry_SYSCALL_64 (71 samples, 5.05%)</title><rect x="66.4534%" y="613" width="5.0462%" height="15" fill="rgb(223,8,27)"/><text x="66.7034%" y="623.50">entry_..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="71.3575%" y="597" width="0.1421%" height="15" fill="rgb(216,217,28)"/><text x="71.6075%" y="607.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (101 samples, 7.18%)</title><rect x="64.3923%" y="741" width="7.1784%" height="15" fill="rgb(249,199,1)"/><text x="64.6423%" y="751.50">mysql::con..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (101 samples, 7.18%)</title><rect x="64.3923%" y="725" width="7.1784%" height="15" fill="rgb(240,85,17)"/><text x="64.6423%" y="735.50">mysql::con..</text></g><g><title>mysql::conn::Conn::_query (100 samples, 7.11%)</title><rect x="64.4634%" y="709" width="7.1073%" height="15" fill="rgb(206,108,45)"/><text x="64.7134%" y="719.50">mysql::con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (72 samples, 5.12%)</title><rect x="66.4534%" y="693" width="5.1173%" height="15" fill="rgb(245,210,41)"/><text x="66.7034%" y="703.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (72 samples, 5.12%)</title><rect x="66.4534%" y="677" width="5.1173%" height="15" fill="rgb(206,13,37)"/><text x="66.7034%" y="687.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (72 samples, 5.12%)</title><rect x="66.4534%" y="661" width="5.1173%" height="15" fill="rgb(250,61,18)"/><text x="66.7034%" y="671.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (72 samples, 5.12%)</title><rect x="66.4534%" y="645" width="5.1173%" height="15" fill="rgb(235,172,48)"/><text x="66.7034%" y="655.50">std::s..</text></g><g><title>__libc_send (72 samples, 5.12%)</title><rect x="66.4534%" y="629" width="5.1173%" height="15" fill="rgb(249,201,17)"/><text x="66.7034%" y="639.50">__libc..</text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="71.6418%" y="725" width="0.1421%" height="15" fill="rgb(219,208,6)"/><text x="71.8918%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (388 samples, 27.58%)</title><rect x="44.5629%" y="757" width="27.5764%" height="15" fill="rgb(248,31,23)"/><text x="44.8129%" y="767.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_..</text></g><g><title>sql_parser::parser::parse_statements (8 samples, 0.57%)</title><rect x="71.5707%" y="741" width="0.5686%" height="15" fill="rgb(245,15,42)"/><text x="71.8207%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.36%)</title><rect x="71.7839%" y="725" width="0.3554%" height="15" fill="rgb(222,217,39)"/><text x="72.0339%" y="735.50"></text></g><g><title>_int_free (3 samples, 0.21%)</title><rect x="71.9261%" y="709" width="0.2132%" height="15" fill="rgb(210,219,27)"/><text x="72.1761%" y="719.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.21%)</title><rect x="72.5657%" y="549" width="0.2132%" height="15" fill="rgb(252,166,36)"/><text x="72.8157%" y="559.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.14%)</title><rect x="72.6368%" y="533" width="0.1421%" height="15" fill="rgb(245,132,34)"/><text x="72.8868%" y="543.50"></text></g><g><title>ip_output (2 samples, 0.14%)</title><rect x="72.6368%" y="517" width="0.1421%" height="15" fill="rgb(236,54,3)"/><text x="72.8868%" y="527.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.14%)</title><rect x="72.6368%" y="501" width="0.1421%" height="15" fill="rgb(241,173,43)"/><text x="72.8868%" y="511.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.14%)</title><rect x="72.6368%" y="485" width="0.1421%" height="15" fill="rgb(215,190,9)"/><text x="72.8868%" y="495.50"></text></g><g><title>do_softirq (2 samples, 0.14%)</title><rect x="72.6368%" y="469" width="0.1421%" height="15" fill="rgb(242,101,16)"/><text x="72.8868%" y="479.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.14%)</title><rect x="72.6368%" y="453" width="0.1421%" height="15" fill="rgb(223,190,21)"/><text x="72.8868%" y="463.50"></text></g><g><title>__do_softirq (2 samples, 0.14%)</title><rect x="72.6368%" y="437" width="0.1421%" height="15" fill="rgb(215,228,25)"/><text x="72.8868%" y="447.50"></text></g><g><title>net_rx_action (2 samples, 0.14%)</title><rect x="72.6368%" y="421" width="0.1421%" height="15" fill="rgb(225,36,22)"/><text x="72.8868%" y="431.50"></text></g><g><title>process_backlog (2 samples, 0.14%)</title><rect x="72.6368%" y="405" width="0.1421%" height="15" fill="rgb(251,106,46)"/><text x="72.8868%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.14%)</title><rect x="72.6368%" y="389" width="0.1421%" height="15" fill="rgb(208,90,1)"/><text x="72.8868%" y="399.50"></text></g><g><title>ip_rcv (2 samples, 0.14%)</title><rect x="72.6368%" y="373" width="0.1421%" height="15" fill="rgb(243,10,4)"/><text x="72.8868%" y="383.50"></text></g><g><title>ip_local_deliver (2 samples, 0.14%)</title><rect x="72.6368%" y="357" width="0.1421%" height="15" fill="rgb(212,137,27)"/><text x="72.8868%" y="367.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.14%)</title><rect x="72.6368%" y="341" width="0.1421%" height="15" fill="rgb(231,220,49)"/><text x="72.8868%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.14%)</title><rect x="72.6368%" y="325" width="0.1421%" height="15" fill="rgb(237,96,20)"/><text x="72.8868%" y="335.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.14%)</title><rect x="72.6368%" y="309" width="0.1421%" height="15" fill="rgb(239,229,30)"/><text x="72.8868%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.14%)</title><rect x="72.6368%" y="293" width="0.1421%" height="15" fill="rgb(219,65,33)"/><text x="72.8868%" y="303.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.14%)</title><rect x="72.6368%" y="277" width="0.1421%" height="15" fill="rgb(243,134,7)"/><text x="72.8868%" y="287.50"></text></g><g><title>tcp_ack (2 samples, 0.14%)</title><rect x="72.6368%" y="261" width="0.1421%" height="15" fill="rgb(216,177,54)"/><text x="72.8868%" y="271.50"></text></g><g><title>release_sock (2 samples, 0.14%)</title><rect x="72.8500%" y="549" width="0.1421%" height="15" fill="rgb(211,160,20)"/><text x="73.1000%" y="559.50"></text></g><g><title>finish_task_switch (3 samples, 0.21%)</title><rect x="73.2765%" y="469" width="0.2132%" height="15" fill="rgb(239,85,39)"/><text x="73.5265%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.21%)</title><rect x="73.2765%" y="453" width="0.2132%" height="15" fill="rgb(232,125,22)"/><text x="73.5265%" y="463.50"></text></g><g><title>sk_wait_data (12 samples, 0.85%)</title><rect x="72.9922%" y="549" width="0.8529%" height="15" fill="rgb(244,57,34)"/><text x="73.2422%" y="559.50"></text></g><g><title>wait_woken (11 samples, 0.78%)</title><rect x="73.0633%" y="533" width="0.7818%" height="15" fill="rgb(214,203,32)"/><text x="73.3133%" y="543.50"></text></g><g><title>schedule_timeout (9 samples, 0.64%)</title><rect x="73.2054%" y="517" width="0.6397%" height="15" fill="rgb(207,58,43)"/><text x="73.4554%" y="527.50"></text></g><g><title>schedule (9 samples, 0.64%)</title><rect x="73.2054%" y="501" width="0.6397%" height="15" fill="rgb(215,193,15)"/><text x="73.4554%" y="511.50"></text></g><g><title>__schedule (9 samples, 0.64%)</title><rect x="73.2054%" y="485" width="0.6397%" height="15" fill="rgb(232,15,44)"/><text x="73.4554%" y="495.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.14%)</title><rect x="73.7029%" y="469" width="0.1421%" height="15" fill="rgb(212,3,48)"/><text x="73.9529%" y="479.50"></text></g><g><title>inet_recvmsg (24 samples, 1.71%)</title><rect x="72.2814%" y="581" width="1.7058%" height="15" fill="rgb(218,128,7)"/><text x="72.5314%" y="591.50"></text></g><g><title>tcp_recvmsg (24 samples, 1.71%)</title><rect x="72.2814%" y="565" width="1.7058%" height="15" fill="rgb(226,216,39)"/><text x="72.5314%" y="575.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.14%)</title><rect x="73.8451%" y="549" width="0.1421%" height="15" fill="rgb(243,47,51)"/><text x="74.0951%" y="559.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.14%)</title><rect x="73.8451%" y="533" width="0.1421%" height="15" fill="rgb(241,183,40)"/><text x="74.0951%" y="543.50"></text></g><g><title>do_syscall_64 (25 samples, 1.78%)</title><rect x="72.2814%" y="629" width="1.7768%" height="15" fill="rgb(231,217,32)"/><text x="72.5314%" y="639.50">d..</text></g><g><title>__x64_sys_recvfrom (25 samples, 1.78%)</title><rect x="72.2814%" y="613" width="1.7768%" height="15" fill="rgb(229,61,38)"/><text x="72.5314%" y="623.50">_..</text></g><g><title>__sys_recvfrom (25 samples, 1.78%)</title><rect x="72.2814%" y="597" width="1.7768%" height="15" fill="rgb(225,210,5)"/><text x="72.5314%" y="607.50">_..</text></g><g><title>entry_SYSCALL_64 (28 samples, 1.99%)</title><rect x="72.2104%" y="645" width="1.9900%" height="15" fill="rgb(231,79,45)"/><text x="72.4604%" y="655.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="74.0583%" y="629" width="0.1421%" height="15" fill="rgb(224,100,7)"/><text x="74.3083%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 2.20%)</title><rect x="72.2104%" y="741" width="2.2033%" height="15" fill="rgb(241,198,18)"/><text x="72.4604%" y="751.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (31 samples, 2.20%)</title><rect x="72.2104%" y="725" width="2.2033%" height="15" fill="rgb(252,97,53)"/><text x="72.4604%" y="735.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (31 samples, 2.20%)</title><rect x="72.2104%" y="709" width="2.2033%" height="15" fill="rgb(220,88,7)"/><text x="72.4604%" y="719.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (31 samples, 2.20%)</title><rect x="72.2104%" y="693" width="2.2033%" height="15" fill="rgb(213,176,14)"/><text x="72.4604%" y="703.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (31 samples, 2.20%)</title><rect x="72.2104%" y="677" width="2.2033%" height="15" fill="rgb(246,73,7)"/><text x="72.4604%" y="687.50">s..</text></g><g><title>__libc_recv (31 samples, 2.20%)</title><rect x="72.2104%" y="661" width="2.2033%" height="15" fill="rgb(245,64,36)"/><text x="72.4604%" y="671.50">_..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.21%)</title><rect x="74.2004%" y="645" width="0.2132%" height="15" fill="rgb(245,80,10)"/><text x="74.4504%" y="655.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (32 samples, 2.27%)</title><rect x="72.2104%" y="757" width="2.2743%" height="15" fill="rgb(232,107,50)"/><text x="72.4604%" y="767.50">m..</text></g><g><title>__dev_queue_xmit (3 samples, 0.21%)</title><rect x="74.9822%" y="485" width="0.2132%" height="15" fill="rgb(253,3,0)"/><text x="75.2322%" y="495.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="76.3326%" y="181" width="0.1421%" height="15" fill="rgb(212,99,53)"/><text x="76.5826%" y="191.50"></text></g><g><title>psi_group_change (2 samples, 0.14%)</title><rect x="76.3326%" y="165" width="0.1421%" height="15" fill="rgb(249,111,54)"/><text x="76.5826%" y="175.50"></text></g><g><title>enqueue_task (3 samples, 0.21%)</title><rect x="76.3326%" y="197" width="0.2132%" height="15" fill="rgb(249,55,30)"/><text x="76.5826%" y="207.50"></text></g><g><title>__wake_up_common (11 samples, 0.78%)</title><rect x="76.0483%" y="229" width="0.7818%" height="15" fill="rgb(237,47,42)"/><text x="76.2983%" y="239.50"></text></g><g><title>try_to_wake_up (10 samples, 0.71%)</title><rect x="76.1194%" y="213" width="0.7107%" height="15" fill="rgb(211,20,18)"/><text x="76.3694%" y="223.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.28%)</title><rect x="76.5458%" y="197" width="0.2843%" height="15" fill="rgb(231,203,46)"/><text x="76.7958%" y="207.50"></text></g><g><title>enqueue_entity (3 samples, 0.21%)</title><rect x="76.6169%" y="181" width="0.2132%" height="15" fill="rgb(237,142,3)"/><text x="76.8669%" y="191.50"></text></g><g><title>sock_def_readable (13 samples, 0.92%)</title><rect x="75.9773%" y="261" width="0.9240%" height="15" fill="rgb(241,107,1)"/><text x="76.2273%" y="271.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.85%)</title><rect x="76.0483%" y="245" width="0.8529%" height="15" fill="rgb(229,83,13)"/><text x="76.2983%" y="255.50"></text></g><g><title>ip_local_deliver (23 samples, 1.63%)</title><rect x="75.4797%" y="357" width="1.6347%" height="15" fill="rgb(241,91,40)"/><text x="75.7297%" y="367.50"></text></g><g><title>ip_local_deliver_finish (22 samples, 1.56%)</title><rect x="75.5508%" y="341" width="1.5636%" height="15" fill="rgb(225,3,45)"/><text x="75.8008%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (20 samples, 1.42%)</title><rect x="75.6930%" y="325" width="1.4215%" height="15" fill="rgb(244,223,14)"/><text x="75.9430%" y="335.50"></text></g><g><title>tcp_v4_rcv (19 samples, 1.35%)</title><rect x="75.7640%" y="309" width="1.3504%" height="15" fill="rgb(224,124,37)"/><text x="76.0140%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 1.28%)</title><rect x="75.8351%" y="293" width="1.2793%" height="15" fill="rgb(251,171,30)"/><text x="76.0851%" y="303.50"></text></g><g><title>tcp_rcv_established (18 samples, 1.28%)</title><rect x="75.8351%" y="277" width="1.2793%" height="15" fill="rgb(236,46,54)"/><text x="76.0851%" y="287.50"></text></g><g><title>tcp_ack (3 samples, 0.21%)</title><rect x="76.9012%" y="261" width="0.2132%" height="15" fill="rgb(245,213,5)"/><text x="77.1512%" y="271.50"></text></g><g><title>__ip_queue_xmit (33 samples, 2.35%)</title><rect x="74.9112%" y="533" width="2.3454%" height="15" fill="rgb(230,144,27)"/><text x="75.1612%" y="543.50">_..</text></g><g><title>ip_output (33 samples, 2.35%)</title><rect x="74.9112%" y="517" width="2.3454%" height="15" fill="rgb(220,86,6)"/><text x="75.1612%" y="527.50">i..</text></g><g><title>ip_finish_output2 (33 samples, 2.35%)</title><rect x="74.9112%" y="501" width="2.3454%" height="15" fill="rgb(240,20,13)"/><text x="75.1612%" y="511.50">i..</text></g><g><title>__local_bh_enable_ip (29 samples, 2.06%)</title><rect x="75.1955%" y="485" width="2.0611%" height="15" fill="rgb(217,89,34)"/><text x="75.4455%" y="495.50">_..</text></g><g><title>do_softirq (29 samples, 2.06%)</title><rect x="75.1955%" y="469" width="2.0611%" height="15" fill="rgb(229,13,5)"/><text x="75.4455%" y="479.50">d..</text></g><g><title>do_softirq_own_stack (28 samples, 1.99%)</title><rect x="75.2665%" y="453" width="1.9900%" height="15" fill="rgb(244,67,35)"/><text x="75.5165%" y="463.50">d..</text></g><g><title>__do_softirq (27 samples, 1.92%)</title><rect x="75.3376%" y="437" width="1.9190%" height="15" fill="rgb(221,40,2)"/><text x="75.5876%" y="447.50">_..</text></g><g><title>net_rx_action (27 samples, 1.92%)</title><rect x="75.3376%" y="421" width="1.9190%" height="15" fill="rgb(237,157,21)"/><text x="75.5876%" y="431.50">n..</text></g><g><title>process_backlog (26 samples, 1.85%)</title><rect x="75.4087%" y="405" width="1.8479%" height="15" fill="rgb(222,94,11)"/><text x="75.6587%" y="415.50">p..</text></g><g><title>__netif_receive_skb_one_core (26 samples, 1.85%)</title><rect x="75.4087%" y="389" width="1.8479%" height="15" fill="rgb(249,113,6)"/><text x="75.6587%" y="399.50">_..</text></g><g><title>ip_rcv (25 samples, 1.78%)</title><rect x="75.4797%" y="373" width="1.7768%" height="15" fill="rgb(238,137,36)"/><text x="75.7297%" y="383.50">i..</text></g><g><title>__tcp_transmit_skb (35 samples, 2.49%)</title><rect x="74.8401%" y="549" width="2.4876%" height="15" fill="rgb(210,102,26)"/><text x="75.0901%" y="559.50">__..</text></g><g><title>__tcp_push_pending_frames (37 samples, 2.63%)</title><rect x="74.8401%" y="581" width="2.6297%" height="15" fill="rgb(218,30,30)"/><text x="75.0901%" y="591.50">__..</text></g><g><title>tcp_write_xmit (37 samples, 2.63%)</title><rect x="74.8401%" y="565" width="2.6297%" height="15" fill="rgb(214,67,26)"/><text x="75.0901%" y="575.50">tc..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.14%)</title><rect x="77.3276%" y="549" width="0.1421%" height="15" fill="rgb(251,9,53)"/><text x="77.5776%" y="559.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.14%)</title><rect x="77.5409%" y="581" width="0.1421%" height="15" fill="rgb(228,204,25)"/><text x="77.7909%" y="591.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.14%)</title><rect x="77.5409%" y="565" width="0.1421%" height="15" fill="rgb(207,153,8)"/><text x="77.7909%" y="575.50"></text></g><g><title>sock_sendmsg (45 samples, 3.20%)</title><rect x="74.6269%" y="629" width="3.1983%" height="15" fill="rgb(242,9,16)"/><text x="74.8769%" y="639.50">soc..</text></g><g><title>tcp_sendmsg (44 samples, 3.13%)</title><rect x="74.6979%" y="613" width="3.1272%" height="15" fill="rgb(217,211,10)"/><text x="74.9479%" y="623.50">tcp..</text></g><g><title>tcp_sendmsg_locked (43 samples, 3.06%)</title><rect x="74.7690%" y="597" width="3.0561%" height="15" fill="rgb(219,228,52)"/><text x="75.0190%" y="607.50">tcp..</text></g><g><title>tcp_send_mss (2 samples, 0.14%)</title><rect x="77.6830%" y="581" width="0.1421%" height="15" fill="rgb(231,92,29)"/><text x="77.9330%" y="591.50"></text></g><g><title>tcp_current_mss (2 samples, 0.14%)</title><rect x="77.6830%" y="565" width="0.1421%" height="15" fill="rgb(232,8,23)"/><text x="77.9330%" y="575.50"></text></g><g><title>do_syscall_64 (49 samples, 3.48%)</title><rect x="74.4847%" y="677" width="3.4826%" height="15" fill="rgb(216,211,34)"/><text x="74.7347%" y="687.50">do_..</text></g><g><title>__x64_sys_sendto (48 samples, 3.41%)</title><rect x="74.5558%" y="661" width="3.4115%" height="15" fill="rgb(236,151,0)"/><text x="74.8058%" y="671.50">__x..</text></g><g><title>__sys_sendto (48 samples, 3.41%)</title><rect x="74.5558%" y="645" width="3.4115%" height="15" fill="rgb(209,168,3)"/><text x="74.8058%" y="655.50">__s..</text></g><g><title>sockfd_lookup_light (2 samples, 0.14%)</title><rect x="77.8252%" y="629" width="0.1421%" height="15" fill="rgb(208,129,28)"/><text x="78.0752%" y="639.50"></text></g><g><title>decor::Shim::run_on_tcp (472 samples, 33.55%)</title><rect x="44.4918%" y="789" width="33.5466%" height="15" fill="rgb(229,78,22)"/><text x="44.7418%" y="799.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (471 samples, 33.48%)</title><rect x="44.5629%" y="773" width="33.4755%" height="15" fill="rgb(228,187,13)"/><text x="44.8129%" y="783.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (50 samples, 3.55%)</title><rect x="74.4847%" y="757" width="3.5537%" height="15" fill="rgb(240,119,24)"/><text x="74.7347%" y="767.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (50 samples, 3.55%)</title><rect x="74.4847%" y="741" width="3.5537%" height="15" fill="rgb(209,194,42)"/><text x="74.7347%" y="751.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (50 samples, 3.55%)</title><rect x="74.4847%" y="725" width="3.5537%" height="15" fill="rgb(247,200,46)"/><text x="74.7347%" y="735.50">std:..</text></g><g><title>__libc_send (50 samples, 3.55%)</title><rect x="74.4847%" y="709" width="3.5537%" height="15" fill="rgb(218,76,16)"/><text x="74.7347%" y="719.50">__li..</text></g><g><title>entry_SYSCALL_64 (50 samples, 3.55%)</title><rect x="74.4847%" y="693" width="3.5537%" height="15" fill="rgb(225,21,48)"/><text x="74.7347%" y="703.50">entr..</text></g><g><title>__GI___clone (474 samples, 33.69%)</title><rect x="44.4208%" y="901" width="33.6887%" height="15" fill="rgb(239,223,50)"/><text x="44.6708%" y="911.50">__GI___clone</text></g><g><title>start_thread (474 samples, 33.69%)</title><rect x="44.4208%" y="885" width="33.6887%" height="15" fill="rgb(244,45,21)"/><text x="44.6708%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (473 samples, 33.62%)</title><rect x="44.4918%" y="869" width="33.6176%" height="15" fill="rgb(232,33,43)"/><text x="44.7418%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (473 samples, 33.62%)</title><rect x="44.4918%" y="853" width="33.6176%" height="15" fill="rgb(209,8,3)"/><text x="44.7418%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (473 samples, 33.62%)</title><rect x="44.4918%" y="837" width="33.6176%" height="15" fill="rgb(214,25,53)"/><text x="44.7418%" y="847.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (473 samples, 33.62%)</title><rect x="44.4918%" y="821" width="33.6176%" height="15" fill="rgb(254,186,54)"/><text x="44.7418%" y="831.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (473 samples, 33.62%)</title><rect x="44.4918%" y="805" width="33.6176%" height="15" fill="rgb(208,174,49)"/><text x="44.7418%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtra..</text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.21%)</title><rect x="78.7491%" y="709" width="0.2132%" height="15" fill="rgb(233,191,51)"/><text x="78.9991%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.21%)</title><rect x="78.7491%" y="693" width="0.2132%" height="15" fill="rgb(222,134,10)"/><text x="78.9991%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.57%)</title><rect x="78.5359%" y="725" width="0.5686%" height="15" fill="rgb(230,226,20)"/><text x="78.7859%" y="735.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="78.9623%" y="709" width="0.1421%" height="15" fill="rgb(251,111,25)"/><text x="79.2123%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.14%)</title><rect x="79.1756%" y="645" width="0.1421%" height="15" fill="rgb(224,40,46)"/><text x="79.4256%" y="655.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.14%)</title><rect x="79.3177%" y="629" width="0.1421%" height="15" fill="rgb(236,108,47)"/><text x="79.5677%" y="639.50"></text></g><g><title>__GI___libc_free (4 samples, 0.28%)</title><rect x="79.4598%" y="629" width="0.2843%" height="15" fill="rgb(234,93,0)"/><text x="79.7098%" y="639.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 16.49%)</title><rect x="79.8863%" y="421" width="16.4890%" height="15" fill="rgb(224,213,32)"/><text x="80.1363%" y="431.50">__intel_pmu_enable_all.co..</text></g><g><title>native_write_msr (232 samples, 16.49%)</title><rect x="79.8863%" y="405" width="16.4890%" height="15" fill="rgb(251,11,48)"/><text x="80.1363%" y="415.50">native_write_msr</text></g><g><title>cpu_stop_queue_work (234 samples, 16.63%)</title><rect x="79.8152%" y="517" width="16.6311%" height="15" fill="rgb(236,173,5)"/><text x="80.0652%" y="527.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 16.63%)</title><rect x="79.8152%" y="501" width="16.6311%" height="15" fill="rgb(230,95,12)"/><text x="80.0652%" y="511.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 16.63%)</title><rect x="79.8152%" y="485" width="16.6311%" height="15" fill="rgb(232,209,1)"/><text x="80.0652%" y="495.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 16.63%)</title><rect x="79.8152%" y="469" width="16.6311%" height="15" fill="rgb(232,6,1)"/><text x="80.0652%" y="479.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 16.63%)</title><rect x="79.8152%" y="453" width="16.6311%" height="15" fill="rgb(210,224,50)"/><text x="80.0652%" y="463.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 16.63%)</title><rect x="79.8152%" y="437" width="16.6311%" height="15" fill="rgb(228,127,35)"/><text x="80.0652%" y="447.50">__perf_event_task_sched_in</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 16.70%)</title><rect x="79.8152%" y="581" width="16.7022%" height="15" fill="rgb(245,102,45)"/><text x="80.0652%" y="591.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 16.70%)</title><rect x="79.8152%" y="565" width="16.7022%" height="15" fill="rgb(214,1,49)"/><text x="80.0652%" y="575.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 16.70%)</title><rect x="79.8152%" y="549" width="16.7022%" height="15" fill="rgb(226,163,40)"/><text x="80.0652%" y="559.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 16.70%)</title><rect x="79.8152%" y="533" width="16.7022%" height="15" fill="rgb(239,212,28)"/><text x="80.0652%" y="543.50">stop_one_cpu</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 16.84%)</title><rect x="79.7441%" y="629" width="16.8443%" height="15" fill="rgb(220,20,13)"/><text x="79.9941%" y="639.50">__GI___sched_setaffinity_n..</text></g><g><title>entry_SYSCALL_64 (236 samples, 16.77%)</title><rect x="79.8152%" y="613" width="16.7733%" height="15" fill="rgb(210,164,35)"/><text x="80.0652%" y="623.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (236 samples, 16.77%)</title><rect x="79.8152%" y="597" width="16.7733%" height="15" fill="rgb(248,109,41)"/><text x="80.0652%" y="607.50">do_syscall_64</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 17.48%)</title><rect x="79.1756%" y="661" width="17.4840%" height="15" fill="rgb(238,23,50)"/><text x="79.4256%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (244 samples, 17.34%)</title><rect x="79.3177%" y="645" width="17.3419%" height="15" fill="rgb(211,48,49)"/><text x="79.5677%" y="655.50">hwloc_linux_set_tid_cpubind</text></g><g><title>hwloc::Topology::new (247 samples, 17.56%)</title><rect x="79.1756%" y="725" width="17.5551%" height="15" fill="rgb(223,36,21)"/><text x="79.4256%" y="735.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (247 samples, 17.56%)</title><rect x="79.1756%" y="709" width="17.5551%" height="15" fill="rgb(207,123,46)"/><text x="79.4256%" y="719.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (247 samples, 17.56%)</title><rect x="79.1756%" y="693" width="17.5551%" height="15" fill="rgb(240,218,32)"/><text x="79.4256%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (247 samples, 17.56%)</title><rect x="79.1756%" y="677" width="17.5551%" height="15" fill="rgb(252,5,43)"/><text x="79.4256%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>__dev_queue_xmit (2 samples, 0.14%)</title><rect x="97.1571%" y="421" width="0.1421%" height="15" fill="rgb(252,84,19)"/><text x="97.4071%" y="431.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="97.7257%" y="117" width="0.1421%" height="15" fill="rgb(243,152,39)"/><text x="97.9757%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.14%)</title><rect x="97.7257%" y="101" width="0.1421%" height="15" fill="rgb(234,160,15)"/><text x="97.9757%" y="111.50"></text></g><g><title>record_times (2 samples, 0.14%)</title><rect x="97.7257%" y="85" width="0.1421%" height="15" fill="rgb(237,34,20)"/><text x="97.9757%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.14%)</title><rect x="97.7257%" y="69" width="0.1421%" height="15" fill="rgb(229,97,13)"/><text x="97.9757%" y="79.50"></text></g><g><title>sched_clock (2 samples, 0.14%)</title><rect x="97.7257%" y="53" width="0.1421%" height="15" fill="rgb(234,71,50)"/><text x="97.9757%" y="63.50"></text></g><g><title>native_sched_clock (2 samples, 0.14%)</title><rect x="97.7257%" y="37" width="0.1421%" height="15" fill="rgb(253,155,4)"/><text x="97.9757%" y="47.50"></text></g><g><title>__wake_up_common (4 samples, 0.28%)</title><rect x="97.6546%" y="165" width="0.2843%" height="15" fill="rgb(222,185,37)"/><text x="97.9046%" y="175.50"></text></g><g><title>try_to_wake_up (4 samples, 0.28%)</title><rect x="97.6546%" y="149" width="0.2843%" height="15" fill="rgb(251,177,13)"/><text x="97.9046%" y="159.50"></text></g><g><title>enqueue_task (3 samples, 0.21%)</title><rect x="97.7257%" y="133" width="0.2132%" height="15" fill="rgb(250,179,40)"/><text x="97.9757%" y="143.50"></text></g><g><title>sock_def_readable (5 samples, 0.36%)</title><rect x="97.6546%" y="197" width="0.3554%" height="15" fill="rgb(242,44,2)"/><text x="97.9046%" y="207.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.36%)</title><rect x="97.6546%" y="181" width="0.3554%" height="15" fill="rgb(216,177,13)"/><text x="97.9046%" y="191.50"></text></g><g><title>tcp_ack (4 samples, 0.28%)</title><rect x="98.0100%" y="197" width="0.2843%" height="15" fill="rgb(216,106,43)"/><text x="98.2600%" y="207.50"></text></g><g><title>ip_finish_output2 (17 samples, 1.21%)</title><rect x="97.1571%" y="437" width="1.2082%" height="15" fill="rgb(216,183,2)"/><text x="97.4071%" y="447.50"></text></g><g><title>__local_bh_enable_ip (15 samples, 1.07%)</title><rect x="97.2992%" y="421" width="1.0661%" height="15" fill="rgb(249,75,3)"/><text x="97.5492%" y="431.50"></text></g><g><title>do_softirq (15 samples, 1.07%)</title><rect x="97.2992%" y="405" width="1.0661%" height="15" fill="rgb(219,67,39)"/><text x="97.5492%" y="415.50"></text></g><g><title>do_softirq_own_stack (15 samples, 1.07%)</title><rect x="97.2992%" y="389" width="1.0661%" height="15" fill="rgb(253,228,2)"/><text x="97.5492%" y="399.50"></text></g><g><title>__do_softirq (15 samples, 1.07%)</title><rect x="97.2992%" y="373" width="1.0661%" height="15" fill="rgb(235,138,27)"/><text x="97.5492%" y="383.50"></text></g><g><title>net_rx_action (13 samples, 0.92%)</title><rect x="97.4414%" y="357" width="0.9240%" height="15" fill="rgb(236,97,51)"/><text x="97.6914%" y="367.50"></text></g><g><title>process_backlog (12 samples, 0.85%)</title><rect x="97.5124%" y="341" width="0.8529%" height="15" fill="rgb(240,80,30)"/><text x="97.7624%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 0.85%)</title><rect x="97.5124%" y="325" width="0.8529%" height="15" fill="rgb(230,178,19)"/><text x="97.7624%" y="335.50"></text></g><g><title>ip_rcv (12 samples, 0.85%)</title><rect x="97.5124%" y="309" width="0.8529%" height="15" fill="rgb(210,190,27)"/><text x="97.7624%" y="319.50"></text></g><g><title>ip_local_deliver (12 samples, 0.85%)</title><rect x="97.5124%" y="293" width="0.8529%" height="15" fill="rgb(222,107,31)"/><text x="97.7624%" y="303.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.85%)</title><rect x="97.5124%" y="277" width="0.8529%" height="15" fill="rgb(216,127,34)"/><text x="97.7624%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (12 samples, 0.85%)</title><rect x="97.5124%" y="261" width="0.8529%" height="15" fill="rgb(234,116,52)"/><text x="97.7624%" y="271.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.78%)</title><rect x="97.5835%" y="245" width="0.7818%" height="15" fill="rgb(222,124,15)"/><text x="97.8335%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.78%)</title><rect x="97.5835%" y="229" width="0.7818%" height="15" fill="rgb(231,179,28)"/><text x="97.8335%" y="239.50"></text></g><g><title>tcp_rcv_established (11 samples, 0.78%)</title><rect x="97.5835%" y="213" width="0.7818%" height="15" fill="rgb(226,93,45)"/><text x="97.8335%" y="223.50"></text></g><g><title>__ip_queue_xmit (18 samples, 1.28%)</title><rect x="97.1571%" y="469" width="1.2793%" height="15" fill="rgb(215,8,51)"/><text x="97.4071%" y="479.50"></text></g><g><title>ip_output (18 samples, 1.28%)</title><rect x="97.1571%" y="453" width="1.2793%" height="15" fill="rgb(223,106,5)"/><text x="97.4071%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (20 samples, 1.42%)</title><rect x="97.0860%" y="517" width="1.4215%" height="15" fill="rgb(250,191,5)"/><text x="97.3360%" y="527.50"></text></g><g><title>tcp_write_xmit (19 samples, 1.35%)</title><rect x="97.1571%" y="501" width="1.3504%" height="15" fill="rgb(242,132,44)"/><text x="97.4071%" y="511.50"></text></g><g><title>__tcp_transmit_skb (19 samples, 1.35%)</title><rect x="97.1571%" y="485" width="1.3504%" height="15" fill="rgb(251,152,29)"/><text x="97.4071%" y="495.50"></text></g><g><title>__x64_sys_sendto (26 samples, 1.85%)</title><rect x="96.8728%" y="597" width="1.8479%" height="15" fill="rgb(218,179,5)"/><text x="97.1228%" y="607.50">_..</text></g><g><title>__sys_sendto (26 samples, 1.85%)</title><rect x="96.8728%" y="581" width="1.8479%" height="15" fill="rgb(227,67,19)"/><text x="97.1228%" y="591.50">_..</text></g><g><title>sock_sendmsg (26 samples, 1.85%)</title><rect x="96.8728%" y="565" width="1.8479%" height="15" fill="rgb(233,119,31)"/><text x="97.1228%" y="575.50">s..</text></g><g><title>tcp_sendmsg (26 samples, 1.85%)</title><rect x="96.8728%" y="549" width="1.8479%" height="15" fill="rgb(241,120,22)"/><text x="97.1228%" y="559.50">t..</text></g><g><title>tcp_sendmsg_locked (24 samples, 1.71%)</title><rect x="97.0149%" y="533" width="1.7058%" height="15" fill="rgb(224,102,30)"/><text x="97.2649%" y="543.50"></text></g><g><title>do_syscall_64 (27 samples, 1.92%)</title><rect x="96.8728%" y="613" width="1.9190%" height="15" fill="rgb(210,164,37)"/><text x="97.1228%" y="623.50">d..</text></g><g><title>mysql::conn::Conn::_query (31 samples, 2.20%)</title><rect x="96.7306%" y="725" width="2.2033%" height="15" fill="rgb(226,191,16)"/><text x="96.9806%" y="735.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 2.13%)</title><rect x="96.8017%" y="709" width="2.1322%" height="15" fill="rgb(214,40,45)"/><text x="97.0517%" y="719.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (29 samples, 2.06%)</title><rect x="96.8728%" y="693" width="2.0611%" height="15" fill="rgb(244,29,26)"/><text x="97.1228%" y="703.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (29 samples, 2.06%)</title><rect x="96.8728%" y="677" width="2.0611%" height="15" fill="rgb(216,16,5)"/><text x="97.1228%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (29 samples, 2.06%)</title><rect x="96.8728%" y="661" width="2.0611%" height="15" fill="rgb(249,76,35)"/><text x="97.1228%" y="671.50">s..</text></g><g><title>__libc_send (29 samples, 2.06%)</title><rect x="96.8728%" y="645" width="2.0611%" height="15" fill="rgb(207,11,44)"/><text x="97.1228%" y="655.50">_..</text></g><g><title>entry_SYSCALL_64 (29 samples, 2.06%)</title><rect x="96.8728%" y="629" width="2.0611%" height="15" fill="rgb(228,190,49)"/><text x="97.1228%" y="639.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="98.7918%" y="613" width="0.1421%" height="15" fill="rgb(214,173,12)"/><text x="99.0418%" y="623.50"></text></g><g><title>__libc_start_main (289 samples, 20.54%)</title><rect x="78.4648%" y="885" width="20.5402%" height="15" fill="rgb(218,26,35)"/><text x="78.7148%" y="895.50">__libc_start_main</text></g><g><title>main (289 samples, 20.54%)</title><rect x="78.4648%" y="869" width="20.5402%" height="15" fill="rgb(220,200,19)"/><text x="78.7148%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (289 samples, 20.54%)</title><rect x="78.4648%" y="853" width="20.5402%" height="15" fill="rgb(239,95,49)"/><text x="78.7148%" y="863.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (289 samples, 20.54%)</title><rect x="78.4648%" y="837" width="20.5402%" height="15" fill="rgb(235,85,53)"/><text x="78.7148%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (289 samples, 20.54%)</title><rect x="78.4648%" y="821" width="20.5402%" height="15" fill="rgb(233,133,31)"/><text x="78.7148%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (289 samples, 20.54%)</title><rect x="78.4648%" y="805" width="20.5402%" height="15" fill="rgb(218,25,20)"/><text x="78.7148%" y="815.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (289 samples, 20.54%)</title><rect x="78.4648%" y="789" width="20.5402%" height="15" fill="rgb(252,210,38)"/><text x="78.7148%" y="799.50">core::ops::function::impls::&lt;imp..</text></g><g><title>std::rt::lang_start::_{{closure}} (289 samples, 20.54%)</title><rect x="78.4648%" y="773" width="20.5402%" height="15" fill="rgb(242,134,21)"/><text x="78.7148%" y="783.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (289 samples, 20.54%)</title><rect x="78.4648%" y="757" width="20.5402%" height="15" fill="rgb(213,28,48)"/><text x="78.7148%" y="767.50">std::sys_common::backtrace::__ru..</text></g><g><title>lobsters::main (289 samples, 20.54%)</title><rect x="78.4648%" y="741" width="20.5402%" height="15" fill="rgb(250,196,2)"/><text x="78.7148%" y="751.50">lobsters::main</text></g><g><title>_start (290 samples, 20.61%)</title><rect x="78.4648%" y="901" width="20.6112%" height="15" fill="rgb(227,5,17)"/><text x="78.7148%" y="911.50">_start</text></g><g><title>entry_SYSCALL_64 (2 samples, 0.14%)</title><rect x="99.2182%" y="901" width="0.1421%" height="15" fill="rgb(221,226,24)"/><text x="99.4682%" y="911.50"></text></g><g><title>lobsters (1,401 samples, 99.57%)</title><rect x="0.0000%" y="917" width="99.5736%" height="15" fill="rgb(211,5,48)"/><text x="0.2500%" y="927.50">lobsters</text></g><g><title>all (1,407 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(219,150,6)"/><text x="0.2500%" y="943.50"></text></g><g><title>perf (6 samples, 0.43%)</title><rect x="99.5736%" y="917" width="0.4264%" height="15" fill="rgb(251,46,16)"/><text x="99.8236%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.43%)</title><rect x="99.5736%" y="901" width="0.4264%" height="15" fill="rgb(220,204,40)"/><text x="99.8236%" y="911.50"></text></g><g><title>do_syscall_64 (6 samples, 0.43%)</title><rect x="99.5736%" y="885" width="0.4264%" height="15" fill="rgb(211,85,2)"/><text x="99.8236%" y="895.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.43%)</title><rect x="99.5736%" y="869" width="0.4264%" height="15" fill="rgb(229,17,7)"/><text x="99.8236%" y="879.50"></text></g><g><title>do_execve (6 samples, 0.43%)</title><rect x="99.5736%" y="853" width="0.4264%" height="15" fill="rgb(239,72,28)"/><text x="99.8236%" y="863.50"></text></g><g><title>__do_execve_file (6 samples, 0.43%)</title><rect x="99.5736%" y="837" width="0.4264%" height="15" fill="rgb(230,47,54)"/><text x="99.8236%" y="847.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.43%)</title><rect x="99.5736%" y="821" width="0.4264%" height="15" fill="rgb(214,50,8)"/><text x="99.8236%" y="831.50"></text></g><g><title>load_elf_binary (6 samples, 0.43%)</title><rect x="99.5736%" y="805" width="0.4264%" height="15" fill="rgb(216,198,43)"/><text x="99.8236%" y="815.50"></text></g><g><title>setup_new_exec (6 samples, 0.43%)</title><rect x="99.5736%" y="789" width="0.4264%" height="15" fill="rgb(234,20,35)"/><text x="99.8236%" y="799.50"></text></g><g><title>perf_event_exec (6 samples, 0.43%)</title><rect x="99.5736%" y="773" width="0.4264%" height="15" fill="rgb(254,45,19)"/><text x="99.8236%" y="783.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.36%)</title><rect x="99.6446%" y="757" width="0.3554%" height="15" fill="rgb(219,14,44)"/><text x="99.8946%" y="767.50"></text></g><g><title>native_write_msr (5 samples, 0.36%)</title><rect x="99.6446%" y="741" width="0.3554%" height="15" fill="rgb(217,220,26)"/><text x="99.8946%" y="751.50"></text></g></svg></svg>