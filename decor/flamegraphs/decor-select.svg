<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="901.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="901.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.16%)</title><rect x="0.0801%" y="837" width="0.1601%" height="15" fill="rgb(227,0,7)"/><text x="0.3301%" y="847.50"></text></g><g><title>[[stack]] (3 samples, 0.24%)</title><rect x="0.2402%" y="837" width="0.2402%" height="15" fill="rgb(217,0,24)"/><text x="0.4902%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="0.6405%" y="821" width="0.1601%" height="15" fill="rgb(221,193,54)"/><text x="0.8905%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="1.2810%" y="821" width="0.1601%" height="15" fill="rgb(248,212,6)"/><text x="1.5310%" y="831.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.16%)</title><rect x="1.6013%" y="821" width="0.1601%" height="15" fill="rgb(208,68,35)"/><text x="1.8513%" y="831.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.16%)</title><rect x="2.0016%" y="821" width="0.1601%" height="15" fill="rgb(232,128,0)"/><text x="2.2516%" y="831.50"></text></g><g><title>__libc_send (4 samples, 0.32%)</title><rect x="2.1617%" y="821" width="0.3203%" height="15" fill="rgb(207,160,47)"/><text x="2.4117%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.32%)</title><rect x="2.1617%" y="805" width="0.3203%" height="15" fill="rgb(228,23,34)"/><text x="2.4117%" y="815.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="2.4820%" y="821" width="0.1601%" height="15" fill="rgb(218,30,26)"/><text x="2.7320%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="2.4820%" y="805" width="0.1601%" height="15" fill="rgb(220,122,19)"/><text x="2.7320%" y="815.50"></text></g><g><title>_int_free (7 samples, 0.56%)</title><rect x="2.7222%" y="821" width="0.5604%" height="15" fill="rgb(250,228,42)"/><text x="2.9722%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.48%)</title><rect x="3.3627%" y="821" width="0.4804%" height="15" fill="rgb(240,193,28)"/><text x="3.6127%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.24%)</title><rect x="3.8431%" y="821" width="0.2402%" height="15" fill="rgb(216,20,37)"/><text x="4.0931%" y="831.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="4.2434%" y="821" width="0.2402%" height="15" fill="rgb(206,188,39)"/><text x="4.4934%" y="831.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (2 samples, 0.16%)</title><rect x="4.5637%" y="821" width="0.1601%" height="15" fill="rgb(217,207,13)"/><text x="4.8137%" y="831.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.24%)</title><rect x="4.8038%" y="821" width="0.2402%" height="15" fill="rgb(231,73,38)"/><text x="5.0538%" y="831.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (2 samples, 0.16%)</title><rect x="5.0440%" y="821" width="0.1601%" height="15" fill="rgb(225,20,46)"/><text x="5.2940%" y="831.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="5.3643%" y="821" width="0.1601%" height="15" fill="rgb(210,31,41)"/><text x="5.6143%" y="831.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.16%)</title><rect x="5.6045%" y="821" width="0.1601%" height="15" fill="rgb(221,200,47)"/><text x="5.8545%" y="831.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="5.8447%" y="821" width="0.1601%" height="15" fill="rgb(226,26,5)"/><text x="6.0947%" y="831.50"></text></g><g><title>[anon] (73 samples, 5.84%)</title><rect x="0.4804%" y="837" width="5.8447%" height="15" fill="rgb(249,33,26)"/><text x="0.7304%" y="847.50">[anon]</text></g><g><title>[lobsters] (2 samples, 0.16%)</title><rect x="6.3251%" y="837" width="0.1601%" height="15" fill="rgb(235,183,28)"/><text x="6.5751%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.5653%" y="821" width="0.1601%" height="15" fill="rgb(221,5,38)"/><text x="6.8153%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.7254%" y="821" width="0.1601%" height="15" fill="rgb(247,18,42)"/><text x="6.9754%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.16%)</title><rect x="6.9656%" y="741" width="0.1601%" height="15" fill="rgb(241,131,45)"/><text x="7.2156%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.16%)</title><rect x="6.9656%" y="725" width="0.1601%" height="15" fill="rgb(249,31,29)"/><text x="7.2156%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.24%)</title><rect x="6.9656%" y="821" width="0.2402%" height="15" fill="rgb(225,111,53)"/><text x="7.2156%" y="831.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.24%)</title><rect x="6.9656%" y="805" width="0.2402%" height="15" fill="rgb(238,160,17)"/><text x="7.2156%" y="815.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.24%)</title><rect x="6.9656%" y="789" width="0.2402%" height="15" fill="rgb(214,148,48)"/><text x="7.2156%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.24%)</title><rect x="6.9656%" y="773" width="0.2402%" height="15" fill="rgb(232,36,49)"/><text x="7.2156%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.24%)</title><rect x="6.9656%" y="757" width="0.2402%" height="15" fill="rgb(209,103,24)"/><text x="7.2156%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.24%)</title><rect x="7.3659%" y="773" width="0.2402%" height="15" fill="rgb(229,88,8)"/><text x="7.6159%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="7.3659%" y="757" width="0.2402%" height="15" fill="rgb(213,181,19)"/><text x="7.6159%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="7.4460%" y="741" width="0.1601%" height="15" fill="rgb(254,191,54)"/><text x="7.6960%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="7.4460%" y="725" width="0.1601%" height="15" fill="rgb(241,83,37)"/><text x="7.6960%" y="735.50"></text></g><g><title>sysmalloc (2 samples, 0.16%)</title><rect x="7.4460%" y="709" width="0.1601%" height="15" fill="rgb(233,36,39)"/><text x="7.6960%" y="719.50"></text></g><g><title>__GI___mprotect (2 samples, 0.16%)</title><rect x="7.4460%" y="693" width="0.1601%" height="15" fill="rgb(226,3,54)"/><text x="7.6960%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="7.4460%" y="677" width="0.1601%" height="15" fill="rgb(245,192,40)"/><text x="7.6960%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.16%)</title><rect x="7.4460%" y="661" width="0.1601%" height="15" fill="rgb(238,167,29)"/><text x="7.6960%" y="671.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.16%)</title><rect x="7.4460%" y="645" width="0.1601%" height="15" fill="rgb(232,182,51)"/><text x="7.6960%" y="655.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.16%)</title><rect x="7.4460%" y="629" width="0.1601%" height="15" fill="rgb(231,60,39)"/><text x="7.6960%" y="639.50"></text></g><g><title>mprotect_fixup (2 samples, 0.16%)</title><rect x="7.4460%" y="613" width="0.1601%" height="15" fill="rgb(208,69,12)"/><text x="7.6960%" y="623.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (7 samples, 0.56%)</title><rect x="7.2058%" y="805" width="0.5604%" height="15" fill="rgb(235,93,37)"/><text x="7.4558%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (7 samples, 0.56%)</title><rect x="7.2058%" y="789" width="0.5604%" height="15" fill="rgb(213,116,39)"/><text x="7.4558%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="7.8463%" y="741" width="0.4804%" height="15" fill="rgb(222,207,29)"/><text x="8.0963%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="8.0064%" y="725" width="0.3203%" height="15" fill="rgb(206,96,30)"/><text x="8.2564%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.24%)</title><rect x="8.0865%" y="709" width="0.2402%" height="15" fill="rgb(218,138,4)"/><text x="8.3365%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="8.3267%" y="741" width="0.1601%" height="15" fill="rgb(250,191,14)"/><text x="8.5767%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="8.3267%" y="725" width="0.1601%" height="15" fill="rgb(239,60,40)"/><text x="8.5767%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (11 samples, 0.88%)</title><rect x="7.7662%" y="789" width="0.8807%" height="15" fill="rgb(206,27,48)"/><text x="8.0162%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (11 samples, 0.88%)</title><rect x="7.7662%" y="773" width="0.8807%" height="15" fill="rgb(225,35,8)"/><text x="8.0162%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (10 samples, 0.80%)</title><rect x="7.8463%" y="757" width="0.8006%" height="15" fill="rgb(250,213,24)"/><text x="8.0963%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="8.4868%" y="741" width="0.1601%" height="15" fill="rgb(247,123,22)"/><text x="8.7368%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="8.4868%" y="725" width="0.1601%" height="15" fill="rgb(231,138,38)"/><text x="8.7368%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (22 samples, 1.76%)</title><rect x="7.2058%" y="821" width="1.7614%" height="15" fill="rgb(231,145,46)"/><text x="7.4558%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (15 samples, 1.20%)</title><rect x="7.7662%" y="805" width="1.2010%" height="15" fill="rgb(251,118,11)"/><text x="8.0162%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.32%)</title><rect x="8.6469%" y="789" width="0.3203%" height="15" fill="rgb(217,147,25)"/><text x="8.8969%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.32%)</title><rect x="8.6469%" y="773" width="0.3203%" height="15" fill="rgb(247,81,37)"/><text x="8.8969%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.24%)</title><rect x="8.7270%" y="757" width="0.2402%" height="15" fill="rgb(209,12,38)"/><text x="8.9770%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (3 samples, 0.24%)</title><rect x="8.7270%" y="741" width="0.2402%" height="15" fill="rgb(227,1,9)"/><text x="8.9770%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="9.2874%" y="821" width="0.2402%" height="15" fill="rgb(248,47,43)"/><text x="9.5374%" y="831.50"></text></g><g><title>__libc_recv (2 samples, 0.16%)</title><rect x="9.5276%" y="821" width="0.1601%" height="15" fill="rgb(221,10,30)"/><text x="9.7776%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="9.5276%" y="805" width="0.1601%" height="15" fill="rgb(210,229,1)"/><text x="9.7776%" y="815.50"></text></g><g><title>__rdl_alloc (2 samples, 0.16%)</title><rect x="9.7678%" y="821" width="0.1601%" height="15" fill="rgb(222,148,37)"/><text x="10.0178%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.16%)</title><rect x="9.7678%" y="805" width="0.1601%" height="15" fill="rgb(234,67,33)"/><text x="10.0178%" y="815.50"></text></g><g><title>_int_free (3 samples, 0.24%)</title><rect x="9.9279%" y="821" width="0.2402%" height="15" fill="rgb(247,98,35)"/><text x="10.1779%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.24%)</title><rect x="10.2482%" y="821" width="0.2402%" height="15" fill="rgb(247,138,52)"/><text x="10.4982%" y="831.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.16%)</title><rect x="10.7286%" y="821" width="0.1601%" height="15" fill="rgb(213,79,30)"/><text x="10.9786%" y="831.50"></text></g><g><title>release_sock (3 samples, 0.24%)</title><rect x="11.3691%" y="549" width="0.2402%" height="15" fill="rgb(246,177,23)"/><text x="11.6191%" y="559.50"></text></g><g><title>tcp_release_cb (2 samples, 0.16%)</title><rect x="11.4492%" y="533" width="0.1601%" height="15" fill="rgb(230,62,27)"/><text x="11.6992%" y="543.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.16%)</title><rect x="12.6501%" y="357" width="0.1601%" height="15" fill="rgb(216,154,8)"/><text x="12.9001%" y="367.50"></text></g><g><title>netif_rx (3 samples, 0.24%)</title><rect x="12.6501%" y="389" width="0.2402%" height="15" fill="rgb(244,35,45)"/><text x="12.9001%" y="399.50"></text></g><g><title>netif_rx_internal (3 samples, 0.24%)</title><rect x="12.6501%" y="373" width="0.2402%" height="15" fill="rgb(251,115,12)"/><text x="12.9001%" y="383.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.32%)</title><rect x="12.6501%" y="421" width="0.3203%" height="15" fill="rgb(240,54,50)"/><text x="12.9001%" y="431.50"></text></g><g><title>loopback_xmit (4 samples, 0.32%)</title><rect x="12.6501%" y="405" width="0.3203%" height="15" fill="rgb(233,84,52)"/><text x="12.9001%" y="415.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.64%)</title><rect x="12.4900%" y="437" width="0.6405%" height="15" fill="rgb(207,117,47)"/><text x="12.7400%" y="447.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.16%)</title><rect x="12.9704%" y="421" width="0.1601%" height="15" fill="rgb(249,43,39)"/><text x="13.2204%" y="431.50"></text></g><g><title>psi_task_change (4 samples, 0.32%)</title><rect x="14.7318%" y="117" width="0.3203%" height="15" fill="rgb(209,38,44)"/><text x="14.9818%" y="127.50"></text></g><g><title>psi_group_change (3 samples, 0.24%)</title><rect x="14.8118%" y="101" width="0.2402%" height="15" fill="rgb(236,212,23)"/><text x="15.0618%" y="111.50"></text></g><g><title>enqueue_task (7 samples, 0.56%)</title><rect x="14.7318%" y="133" width="0.5604%" height="15" fill="rgb(242,79,21)"/><text x="14.9818%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.24%)</title><rect x="15.0520%" y="117" width="0.2402%" height="15" fill="rgb(211,96,35)"/><text x="15.3020%" y="127.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.16%)</title><rect x="15.3723%" y="101" width="0.1601%" height="15" fill="rgb(253,215,40)"/><text x="15.6223%" y="111.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.56%)</title><rect x="15.2922%" y="133" width="0.5604%" height="15" fill="rgb(211,81,21)"/><text x="15.5422%" y="143.50"></text></g><g><title>enqueue_entity (6 samples, 0.48%)</title><rect x="15.3723%" y="117" width="0.4804%" height="15" fill="rgb(208,190,38)"/><text x="15.6223%" y="127.50"></text></g><g><title>update_load_avg (3 samples, 0.24%)</title><rect x="15.6125%" y="101" width="0.2402%" height="15" fill="rgb(235,213,38)"/><text x="15.8625%" y="111.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.16%)</title><rect x="15.8527%" y="133" width="0.1601%" height="15" fill="rgb(237,122,38)"/><text x="16.1027%" y="143.50"></text></g><g><title>sock_def_readable (22 samples, 1.76%)</title><rect x="14.4115%" y="213" width="1.7614%" height="15" fill="rgb(244,218,35)"/><text x="14.6615%" y="223.50"></text></g><g><title>__wake_up_common_lock (22 samples, 1.76%)</title><rect x="14.4115%" y="197" width="1.7614%" height="15" fill="rgb(240,68,47)"/><text x="14.6615%" y="207.50"></text></g><g><title>__wake_up_common (22 samples, 1.76%)</title><rect x="14.4115%" y="181" width="1.7614%" height="15" fill="rgb(210,16,53)"/><text x="14.6615%" y="191.50"></text></g><g><title>pollwake (22 samples, 1.76%)</title><rect x="14.4115%" y="165" width="1.7614%" height="15" fill="rgb(235,124,12)"/><text x="14.6615%" y="175.50"></text></g><g><title>try_to_wake_up (20 samples, 1.60%)</title><rect x="14.5717%" y="149" width="1.6013%" height="15" fill="rgb(224,169,11)"/><text x="14.8217%" y="159.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.16%)</title><rect x="16.0128%" y="133" width="0.1601%" height="15" fill="rgb(250,166,2)"/><text x="16.2628%" y="143.50"></text></g><g><title>check_preempt_curr (2 samples, 0.16%)</title><rect x="16.0128%" y="117" width="0.1601%" height="15" fill="rgb(242,216,29)"/><text x="16.2628%" y="127.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.16%)</title><rect x="16.4932%" y="197" width="0.1601%" height="15" fill="rgb(230,116,27)"/><text x="16.7432%" y="207.50"></text></g><g><title>tcp_ack (9 samples, 0.72%)</title><rect x="16.1729%" y="213" width="0.7206%" height="15" fill="rgb(228,99,48)"/><text x="16.4229%" y="223.50"></text></g><g><title>tcp_update_pacing_rate (3 samples, 0.24%)</title><rect x="16.6533%" y="197" width="0.2402%" height="15" fill="rgb(253,11,6)"/><text x="16.9033%" y="207.50"></text></g><g><title>ip_local_deliver (41 samples, 3.28%)</title><rect x="13.6910%" y="309" width="3.2826%" height="15" fill="rgb(247,143,39)"/><text x="13.9410%" y="319.50">ip_..</text></g><g><title>ip_local_deliver_finish (41 samples, 3.28%)</title><rect x="13.6910%" y="293" width="3.2826%" height="15" fill="rgb(236,97,10)"/><text x="13.9410%" y="303.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (39 samples, 3.12%)</title><rect x="13.8511%" y="277" width="3.1225%" height="15" fill="rgb(233,208,19)"/><text x="14.1011%" y="287.50">ip_..</text></g><g><title>tcp_v4_rcv (38 samples, 3.04%)</title><rect x="13.9311%" y="261" width="3.0424%" height="15" fill="rgb(216,164,2)"/><text x="14.1811%" y="271.50">tcp..</text></g><g><title>tcp_v4_do_rcv (35 samples, 2.80%)</title><rect x="14.1713%" y="245" width="2.8022%" height="15" fill="rgb(220,129,5)"/><text x="14.4213%" y="255.50">tc..</text></g><g><title>tcp_rcv_established (35 samples, 2.80%)</title><rect x="14.1713%" y="229" width="2.8022%" height="15" fill="rgb(242,17,10)"/><text x="14.4213%" y="239.50">tc..</text></g><g><title>__netif_receive_skb_one_core (44 samples, 3.52%)</title><rect x="13.6109%" y="341" width="3.5228%" height="15" fill="rgb(242,107,0)"/><text x="13.8609%" y="351.50">__n..</text></g><g><title>ip_rcv (43 samples, 3.44%)</title><rect x="13.6910%" y="325" width="3.4428%" height="15" fill="rgb(251,28,31)"/><text x="13.9410%" y="335.50">ip_..</text></g><g><title>ip_rcv_core (2 samples, 0.16%)</title><rect x="16.9736%" y="309" width="0.1601%" height="15" fill="rgb(233,223,10)"/><text x="17.2236%" y="319.50"></text></g><g><title>ip_finish_output2 (59 samples, 4.72%)</title><rect x="12.4900%" y="453" width="4.7238%" height="15" fill="rgb(215,21,27)"/><text x="12.7400%" y="463.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (51 samples, 4.08%)</title><rect x="13.1305%" y="437" width="4.0833%" height="15" fill="rgb(232,23,21)"/><text x="13.3805%" y="447.50">__lo..</text></g><g><title>do_softirq (50 samples, 4.00%)</title><rect x="13.2106%" y="421" width="4.0032%" height="15" fill="rgb(244,5,23)"/><text x="13.4606%" y="431.50">do_s..</text></g><g><title>do_softirq_own_stack (49 samples, 3.92%)</title><rect x="13.2906%" y="405" width="3.9231%" height="15" fill="rgb(226,81,46)"/><text x="13.5406%" y="415.50">do_s..</text></g><g><title>__do_softirq (49 samples, 3.92%)</title><rect x="13.2906%" y="389" width="3.9231%" height="15" fill="rgb(247,70,30)"/><text x="13.5406%" y="399.50">__do..</text></g><g><title>net_rx_action (48 samples, 3.84%)</title><rect x="13.3707%" y="373" width="3.8431%" height="15" fill="rgb(212,68,19)"/><text x="13.6207%" y="383.50">net_..</text></g><g><title>process_backlog (45 samples, 3.60%)</title><rect x="13.6109%" y="357" width="3.6029%" height="15" fill="rgb(240,187,13)"/><text x="13.8609%" y="367.50">proc..</text></g><g><title>__ip_queue_xmit (65 samples, 5.20%)</title><rect x="12.0897%" y="485" width="5.2042%" height="15" fill="rgb(223,113,26)"/><text x="12.3397%" y="495.50">__ip_q..</text></g><g><title>ip_output (61 samples, 4.88%)</title><rect x="12.4099%" y="469" width="4.8839%" height="15" fill="rgb(206,192,2)"/><text x="12.6599%" y="479.50">ip_out..</text></g><g><title>__tcp_transmit_skb (70 samples, 5.60%)</title><rect x="11.9295%" y="501" width="5.6045%" height="15" fill="rgb(241,108,4)"/><text x="12.1795%" y="511.50">__tcp_t..</text></g><g><title>__tcp_push_pending_frames (74 samples, 5.92%)</title><rect x="11.7694%" y="533" width="5.9247%" height="15" fill="rgb(247,173,49)"/><text x="12.0194%" y="543.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (73 samples, 5.84%)</title><rect x="11.8495%" y="517" width="5.8447%" height="15" fill="rgb(224,114,35)"/><text x="12.0995%" y="527.50">tcp_wri..</text></g><g><title>sk_page_frag_refill (3 samples, 0.24%)</title><rect x="17.6942%" y="533" width="0.2402%" height="15" fill="rgb(245,159,27)"/><text x="17.9442%" y="543.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.16%)</title><rect x="17.7742%" y="517" width="0.1601%" height="15" fill="rgb(245,172,44)"/><text x="18.0242%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.32%)</title><rect x="17.9343%" y="533" width="0.3203%" height="15" fill="rgb(236,23,11)"/><text x="18.1843%" y="543.50"></text></g><g><title>__alloc_skb (3 samples, 0.24%)</title><rect x="18.0144%" y="517" width="0.2402%" height="15" fill="rgb(205,117,38)"/><text x="18.2644%" y="527.50"></text></g><g><title>sock_sendmsg (87 samples, 6.97%)</title><rect x="11.3691%" y="581" width="6.9656%" height="15" fill="rgb(237,72,25)"/><text x="11.6191%" y="591.50">sock_send..</text></g><g><title>tcp_sendmsg (87 samples, 6.97%)</title><rect x="11.3691%" y="565" width="6.9656%" height="15" fill="rgb(244,70,9)"/><text x="11.6191%" y="575.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (84 samples, 6.73%)</title><rect x="11.6093%" y="549" width="6.7254%" height="15" fill="rgb(217,125,39)"/><text x="11.8593%" y="559.50">tcp_sendm..</text></g><g><title>do_syscall_64 (89 samples, 7.13%)</title><rect x="11.2890%" y="629" width="7.1257%" height="15" fill="rgb(235,36,10)"/><text x="11.5390%" y="639.50">do_syscall..</text></g><g><title>__x64_sys_sendto (88 samples, 7.05%)</title><rect x="11.3691%" y="613" width="7.0456%" height="15" fill="rgb(251,123,47)"/><text x="11.6191%" y="623.50">__x64_sys..</text></g><g><title>__sys_sendto (88 samples, 7.05%)</title><rect x="11.3691%" y="597" width="7.0456%" height="15" fill="rgb(221,13,13)"/><text x="11.6191%" y="607.50">__sys_sen..</text></g><g><title>entry_SYSCALL_64 (93 samples, 7.45%)</title><rect x="11.2090%" y="645" width="7.4460%" height="15" fill="rgb(238,131,9)"/><text x="11.4590%" y="655.50">entry_SYSC..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.24%)</title><rect x="18.4147%" y="629" width="0.2402%" height="15" fill="rgb(211,50,8)"/><text x="18.6647%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (95 samples, 7.61%)</title><rect x="11.1289%" y="693" width="7.6061%" height="15" fill="rgb(245,182,24)"/><text x="11.3789%" y="703.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::write (95 samples, 7.61%)</title><rect x="11.1289%" y="677" width="7.6061%" height="15" fill="rgb(242,14,37)"/><text x="11.3789%" y="687.50">std::sys_c..</text></g><g><title>__libc_send (95 samples, 7.61%)</title><rect x="11.1289%" y="661" width="7.6061%" height="15" fill="rgb(246,228,12)"/><text x="11.3789%" y="671.50">__libc_send</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (99 samples, 7.93%)</title><rect x="10.8887%" y="757" width="7.9263%" height="15" fill="rgb(213,55,15)"/><text x="11.1387%" y="767.50">&lt;mysql::con..</text></g><g><title>mysql::conn::Conn::_query (97 samples, 7.77%)</title><rect x="11.0488%" y="741" width="7.7662%" height="15" fill="rgb(209,9,3)"/><text x="11.2988%" y="751.50">mysql::conn..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (97 samples, 7.77%)</title><rect x="11.0488%" y="725" width="7.7662%" height="15" fill="rgb(230,59,30)"/><text x="11.2988%" y="735.50">mysql_commo..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (97 samples, 7.77%)</title><rect x="11.0488%" y="709" width="7.7662%" height="15" fill="rgb(209,121,21)"/><text x="11.2988%" y="719.50">std::io::bu..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="18.8151%" y="725" width="0.1601%" height="15" fill="rgb(220,109,13)"/><text x="19.0651%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="18.8151%" y="709" width="0.1601%" height="15" fill="rgb(232,18,1)"/><text x="19.0651%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.16%)</title><rect x="18.8151%" y="693" width="0.1601%" height="15" fill="rgb(215,41,42)"/><text x="19.0651%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="18.8151%" y="677" width="0.1601%" height="15" fill="rgb(224,123,36)"/><text x="19.0651%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.24%)</title><rect x="19.1353%" y="629" width="0.2402%" height="15" fill="rgb(240,125,3)"/><text x="19.3853%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.24%)</title><rect x="19.1353%" y="613" width="0.2402%" height="15" fill="rgb(205,98,50)"/><text x="19.3853%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.24%)</title><rect x="19.1353%" y="597" width="0.2402%" height="15" fill="rgb(205,185,37)"/><text x="19.3853%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.24%)</title><rect x="19.1353%" y="581" width="0.2402%" height="15" fill="rgb(238,207,15)"/><text x="19.3853%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="19.1353%" y="565" width="0.2402%" height="15" fill="rgb(213,199,42)"/><text x="19.3853%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.40%)</title><rect x="19.0552%" y="661" width="0.4003%" height="15" fill="rgb(235,201,11)"/><text x="19.3052%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.40%)</title><rect x="19.0552%" y="645" width="0.4003%" height="15" fill="rgb(207,46,11)"/><text x="19.3052%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="19.6157%" y="629" width="0.1601%" height="15" fill="rgb(241,35,35)"/><text x="19.8657%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.88%)</title><rect x="18.9752%" y="677" width="0.8807%" height="15" fill="rgb(243,32,47)"/><text x="19.2252%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.40%)</title><rect x="19.4556%" y="661" width="0.4003%" height="15" fill="rgb(247,202,23)"/><text x="19.7056%" y="671.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="19.6157%" y="645" width="0.2402%" height="15" fill="rgb(219,102,11)"/><text x="19.8657%" y="655.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.16%)</title><rect x="19.8559%" y="581" width="0.1601%" height="15" fill="rgb(243,110,44)"/><text x="20.1059%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.56%)</title><rect x="19.8559%" y="645" width="0.5604%" height="15" fill="rgb(222,74,54)"/><text x="20.1059%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.56%)</title><rect x="19.8559%" y="629" width="0.5604%" height="15" fill="rgb(216,99,12)"/><text x="20.1059%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.56%)</title><rect x="19.8559%" y="613" width="0.5604%" height="15" fill="rgb(226,22,26)"/><text x="20.1059%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.56%)</title><rect x="19.8559%" y="597" width="0.5604%" height="15" fill="rgb(217,163,10)"/><text x="20.1059%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.40%)</title><rect x="20.0160%" y="581" width="0.4003%" height="15" fill="rgb(213,25,53)"/><text x="20.2660%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.32%)</title><rect x="20.0961%" y="565" width="0.3203%" height="15" fill="rgb(252,105,26)"/><text x="20.3461%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.32%)</title><rect x="20.0961%" y="549" width="0.3203%" height="15" fill="rgb(220,39,43)"/><text x="20.3461%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="20.1761%" y="533" width="0.2402%" height="15" fill="rgb(229,68,48)"/><text x="20.4261%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.40%)</title><rect x="20.4163%" y="613" width="0.4003%" height="15" fill="rgb(252,8,32)"/><text x="20.6663%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.40%)</title><rect x="20.4163%" y="597" width="0.4003%" height="15" fill="rgb(223,20,43)"/><text x="20.6663%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.32%)</title><rect x="20.4964%" y="581" width="0.3203%" height="15" fill="rgb(229,81,49)"/><text x="20.7464%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.32%)</title><rect x="20.4964%" y="565" width="0.3203%" height="15" fill="rgb(236,28,36)"/><text x="20.7464%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.48%)</title><rect x="20.4163%" y="645" width="0.4804%" height="15" fill="rgb(249,185,26)"/><text x="20.6663%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.48%)</title><rect x="20.4163%" y="629" width="0.4804%" height="15" fill="rgb(249,174,33)"/><text x="20.6663%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="20.9768%" y="629" width="0.1601%" height="15" fill="rgb(233,201,37)"/><text x="21.2268%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 1.36%)</title><rect x="19.8559%" y="661" width="1.3611%" height="15" fill="rgb(221,78,26)"/><text x="20.1059%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.32%)</title><rect x="20.8967%" y="645" width="0.3203%" height="15" fill="rgb(250,127,30)"/><text x="21.1467%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (24 samples, 1.92%)</title><rect x="19.8559%" y="677" width="1.9215%" height="15" fill="rgb(230,49,44)"/><text x="20.1059%" y="687.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.48%)</title><rect x="21.2970%" y="661" width="0.4804%" height="15" fill="rgb(229,67,23)"/><text x="21.5470%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.6173%" y="645" width="0.1601%" height="15" fill="rgb(249,83,47)"/><text x="21.8673%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.6173%" y="629" width="0.1601%" height="15" fill="rgb(215,43,3)"/><text x="21.8673%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.40%)</title><rect x="21.7774%" y="677" width="0.4003%" height="15" fill="rgb(238,154,13)"/><text x="22.0274%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.40%)</title><rect x="21.7774%" y="661" width="0.4003%" height="15" fill="rgb(219,56,2)"/><text x="22.0274%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.40%)</title><rect x="21.7774%" y="645" width="0.4003%" height="15" fill="rgb(233,0,4)"/><text x="22.0274%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.24%)</title><rect x="21.9376%" y="629" width="0.2402%" height="15" fill="rgb(235,30,7)"/><text x="22.1876%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.16%)</title><rect x="22.0176%" y="613" width="0.1601%" height="15" fill="rgb(250,79,13)"/><text x="22.2676%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.16%)</title><rect x="22.0176%" y="597" width="0.1601%" height="15" fill="rgb(211,146,34)"/><text x="22.2676%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.16%)</title><rect x="22.0176%" y="581" width="0.1601%" height="15" fill="rgb(228,22,38)"/><text x="22.2676%" y="591.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.24%)</title><rect x="22.2578%" y="661" width="0.2402%" height="15" fill="rgb(235,168,5)"/><text x="22.5078%" y="671.50"></text></g><g><title>core::fmt::write (49 samples, 3.92%)</title><rect x="18.8151%" y="757" width="3.9231%" height="15" fill="rgb(221,155,16)"/><text x="19.0651%" y="767.50">core..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (49 samples, 3.92%)</title><rect x="18.8151%" y="741" width="3.9231%" height="15" fill="rgb(215,215,53)"/><text x="19.0651%" y="751.50">&lt;sql..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (47 samples, 3.76%)</title><rect x="18.9752%" y="725" width="3.7630%" height="15" fill="rgb(223,4,10)"/><text x="19.2252%" y="735.50">&lt;sql..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (47 samples, 3.76%)</title><rect x="18.9752%" y="709" width="3.7630%" height="15" fill="rgb(234,103,6)"/><text x="19.2252%" y="719.50">&lt;sql..</text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (47 samples, 3.76%)</title><rect x="18.9752%" y="693" width="3.7630%" height="15" fill="rgb(227,97,0)"/><text x="19.2252%" y="703.50">&lt;sql..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.48%)</title><rect x="22.2578%" y="677" width="0.4804%" height="15" fill="rgb(234,150,53)"/><text x="22.5078%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="22.5781%" y="661" width="0.1601%" height="15" fill="rgb(228,201,54)"/><text x="22.8281%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.24%)</title><rect x="22.7382%" y="757" width="0.2402%" height="15" fill="rgb(222,22,37)"/><text x="22.9882%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.24%)</title><rect x="22.7382%" y="741" width="0.2402%" height="15" fill="rgb(237,53,32)"/><text x="22.9882%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.24%)</title><rect x="22.7382%" y="725" width="0.2402%" height="15" fill="rgb(233,25,53)"/><text x="22.9882%" y="735.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (2 samples, 0.16%)</title><rect x="23.6990%" y="741" width="0.1601%" height="15" fill="rgb(210,40,34)"/><text x="23.9490%" y="751.50"></text></g><g><title>decor::helpers::answer_rows (13 samples, 1.04%)</title><rect x="22.9784%" y="757" width="1.0408%" height="15" fill="rgb(241,220,44)"/><text x="23.2284%" y="767.50"></text></g><g><title>mysql_common::row::Row::unwrap (2 samples, 0.16%)</title><rect x="23.8591%" y="741" width="0.1601%" height="15" fill="rgb(235,28,35)"/><text x="24.1091%" y="751.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (166 samples, 13.29%)</title><rect x="10.8887%" y="773" width="13.2906%" height="15" fill="rgb(210,56,17)"/><text x="11.1387%" y="783.50">decor::query_transfo..</text></g><g><title>mysql::conn::transaction::Transaction::commit (2 samples, 0.16%)</title><rect x="24.0192%" y="757" width="0.1601%" height="15" fill="rgb(224,130,29)"/><text x="24.2692%" y="767.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.16%)</title><rect x="24.0192%" y="741" width="0.1601%" height="15" fill="rgb(235,212,8)"/><text x="24.2692%" y="751.50"></text></g><g><title>decor::Shim::run_on_tcp (170 samples, 13.61%)</title><rect x="10.8887%" y="821" width="13.6109%" height="15" fill="rgb(223,33,50)"/><text x="11.1387%" y="831.50">decor::Shim::run_on_t..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (170 samples, 13.61%)</title><rect x="10.8887%" y="805" width="13.6109%" height="15" fill="rgb(219,149,13)"/><text x="11.1387%" y="815.50">msql_srv::MysqlInterm..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (170 samples, 13.61%)</title><rect x="10.8887%" y="789" width="13.6109%" height="15" fill="rgb(250,156,29)"/><text x="11.1387%" y="799.50">&lt;decor::Shim as msql_..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.32%)</title><rect x="24.1793%" y="773" width="0.3203%" height="15" fill="rgb(216,193,19)"/><text x="24.4293%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.16%)</title><rect x="24.3395%" y="757" width="0.1601%" height="15" fill="rgb(216,135,14)"/><text x="24.5895%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="24.3395%" y="741" width="0.1601%" height="15" fill="rgb(241,47,5)"/><text x="24.5895%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="25.0600%" y="725" width="0.1601%" height="15" fill="rgb(233,42,35)"/><text x="25.3100%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.0600%" y="709" width="0.1601%" height="15" fill="rgb(231,13,6)"/><text x="25.3100%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.0600%" y="693" width="0.1601%" height="15" fill="rgb(207,181,40)"/><text x="25.3100%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="25.0600%" y="677" width="0.1601%" height="15" fill="rgb(254,173,49)"/><text x="25.3100%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="25.0600%" y="741" width="0.2402%" height="15" fill="rgb(221,1,38)"/><text x="25.3100%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="25.3002%" y="741" width="0.1601%" height="15" fill="rgb(206,124,46)"/><text x="25.5502%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.72%)</title><rect x="24.9800%" y="757" width="0.7206%" height="15" fill="rgb(249,21,11)"/><text x="25.2300%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="25.4604%" y="741" width="0.2402%" height="15" fill="rgb(222,201,40)"/><text x="25.7104%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="25.7006%" y="741" width="0.1601%" height="15" fill="rgb(235,61,29)"/><text x="25.9506%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="25.7006%" y="757" width="0.3203%" height="15" fill="rgb(219,207,3)"/><text x="25.9506%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="25.8607%" y="741" width="0.1601%" height="15" fill="rgb(222,56,46)"/><text x="26.1107%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="25.8607%" y="725" width="0.1601%" height="15" fill="rgb(239,76,54)"/><text x="26.1107%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (18 samples, 1.44%)</title><rect x="24.7398%" y="789" width="1.4412%" height="15" fill="rgb(231,124,27)"/><text x="24.9898%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (17 samples, 1.36%)</title><rect x="24.8199%" y="773" width="1.3611%" height="15" fill="rgb(249,195,6)"/><text x="25.0699%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="26.1809%" y="789" width="0.7206%" height="15" fill="rgb(237,174,47)"/><text x="26.4309%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="26.2610%" y="773" width="0.6405%" height="15" fill="rgb(206,201,31)"/><text x="26.5110%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.40%)</title><rect x="26.5012%" y="757" width="0.4003%" height="15" fill="rgb(231,57,52)"/><text x="26.7512%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.16%)</title><rect x="26.7414%" y="741" width="0.1601%" height="15" fill="rgb(248,177,22)"/><text x="26.9914%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="26.7414%" y="725" width="0.1601%" height="15" fill="rgb(215,211,37)"/><text x="26.9914%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::hash::Hash&gt;::hash (3 samples, 0.24%)</title><rect x="26.9015%" y="741" width="0.2402%" height="15" fill="rgb(241,128,51)"/><text x="27.1515%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.24%)</title><rect x="26.9015%" y="725" width="0.2402%" height="15" fill="rgb(227,165,31)"/><text x="27.1515%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableWithJoins as core::hash::Hash&gt;::hash (6 samples, 0.48%)</title><rect x="26.9015%" y="757" width="0.4804%" height="15" fill="rgb(228,167,24)"/><text x="27.1515%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::hash::Hash&gt;::hash (3 samples, 0.24%)</title><rect x="27.1417%" y="741" width="0.2402%" height="15" fill="rgb(228,143,12)"/><text x="27.3917%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="27.2218%" y="725" width="0.1601%" height="15" fill="rgb(249,149,8)"/><text x="27.4718%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as core::hash::Hash&gt;::hash (7 samples, 0.56%)</title><rect x="26.9015%" y="773" width="0.5604%" height="15" fill="rgb(243,35,44)"/><text x="27.1515%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::hash::Hash&gt;::hash (9 samples, 0.72%)</title><rect x="26.9015%" y="789" width="0.7206%" height="15" fill="rgb(246,89,9)"/><text x="27.1515%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::hash::Hash&gt;::hash (2 samples, 0.16%)</title><rect x="27.4620%" y="773" width="0.1601%" height="15" fill="rgb(233,213,13)"/><text x="27.7120%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (39 samples, 3.12%)</title><rect x="24.6597%" y="821" width="3.1225%" height="15" fill="rgb(233,141,41)"/><text x="24.9097%" y="831.50">dec..</text></g><g><title>decor::mv_transformer::MVTransformer::query_to_mv_query (39 samples, 3.12%)</title><rect x="24.6597%" y="805" width="3.1225%" height="15" fill="rgb(239,167,4)"/><text x="24.9097%" y="815.50">dec..</text></g><g><title>decor::mv_transformer::MVTransformer::setexpr_to_mv_setexpr (2 samples, 0.16%)</title><rect x="27.6221%" y="789" width="0.1601%" height="15" fill="rgb(209,217,16)"/><text x="27.8721%" y="799.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.32%)</title><rect x="27.7822%" y="533" width="0.3203%" height="15" fill="rgb(219,88,35)"/><text x="28.0322%" y="543.50"></text></g><g><title>_int_malloc (3 samples, 0.24%)</title><rect x="27.8623%" y="517" width="0.2402%" height="15" fill="rgb(220,193,23)"/><text x="28.1123%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="27.7822%" y="725" width="0.4003%" height="15" fill="rgb(230,90,52)"/><text x="28.0322%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="27.7822%" y="709" width="0.4003%" height="15" fill="rgb(252,106,19)"/><text x="28.0322%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="27.7822%" y="693" width="0.4003%" height="15" fill="rgb(206,74,20)"/><text x="28.0322%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.40%)</title><rect x="27.7822%" y="677" width="0.4003%" height="15" fill="rgb(230,138,44)"/><text x="28.0322%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="27.7822%" y="661" width="0.4003%" height="15" fill="rgb(235,182,43)"/><text x="28.0322%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.40%)</title><rect x="27.7822%" y="645" width="0.4003%" height="15" fill="rgb(242,16,51)"/><text x="28.0322%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.40%)</title><rect x="27.7822%" y="629" width="0.4003%" height="15" fill="rgb(248,9,4)"/><text x="28.0322%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="27.7822%" y="613" width="0.4003%" height="15" fill="rgb(210,31,22)"/><text x="28.0322%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.40%)</title><rect x="27.7822%" y="597" width="0.4003%" height="15" fill="rgb(239,54,39)"/><text x="28.0322%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.40%)</title><rect x="27.7822%" y="581" width="0.4003%" height="15" fill="rgb(230,99,41)"/><text x="28.0322%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.40%)</title><rect x="27.7822%" y="565" width="0.4003%" height="15" fill="rgb(253,106,12)"/><text x="28.0322%" y="575.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.40%)</title><rect x="27.7822%" y="549" width="0.4003%" height="15" fill="rgb(213,46,41)"/><text x="28.0322%" y="559.50"></text></g><g><title>__GI___mprotect (2 samples, 0.16%)</title><rect x="28.1825%" y="677" width="0.1601%" height="15" fill="rgb(215,133,35)"/><text x="28.4325%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.16%)</title><rect x="28.1825%" y="661" width="0.1601%" height="15" fill="rgb(213,28,5)"/><text x="28.4325%" y="671.50"></text></g><g><title>do_syscall_64 (2 samples, 0.16%)</title><rect x="28.1825%" y="645" width="0.1601%" height="15" fill="rgb(215,77,49)"/><text x="28.4325%" y="655.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.16%)</title><rect x="28.1825%" y="629" width="0.1601%" height="15" fill="rgb(248,100,22)"/><text x="28.4325%" y="639.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.16%)</title><rect x="28.1825%" y="613" width="0.1601%" height="15" fill="rgb(208,67,9)"/><text x="28.4325%" y="623.50"></text></g><g><title>mprotect_fixup (2 samples, 0.16%)</title><rect x="28.1825%" y="597" width="0.1601%" height="15" fill="rgb(219,133,21)"/><text x="28.4325%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="28.1825%" y="725" width="0.2402%" height="15" fill="rgb(246,46,29)"/><text x="28.4325%" y="735.50"></text></g><g><title>_int_malloc (3 samples, 0.24%)</title><rect x="28.1825%" y="709" width="0.2402%" height="15" fill="rgb(246,185,52)"/><text x="28.4325%" y="719.50"></text></g><g><title>sysmalloc (3 samples, 0.24%)</title><rect x="28.1825%" y="693" width="0.2402%" height="15" fill="rgb(252,136,11)"/><text x="28.4325%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (9 samples, 0.72%)</title><rect x="27.7822%" y="789" width="0.7206%" height="15" fill="rgb(219,138,53)"/><text x="28.0322%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (9 samples, 0.72%)</title><rect x="27.7822%" y="773" width="0.7206%" height="15" fill="rgb(211,51,23)"/><text x="28.0322%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (9 samples, 0.72%)</title><rect x="27.7822%" y="757" width="0.7206%" height="15" fill="rgb(247,221,28)"/><text x="28.0322%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.72%)</title><rect x="27.7822%" y="741" width="0.7206%" height="15" fill="rgb(251,222,45)"/><text x="28.0322%" y="751.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.16%)</title><rect x="28.7430%" y="421" width="0.1601%" height="15" fill="rgb(217,162,53)"/><text x="28.9930%" y="431.50"></text></g><g><title>dequeue_entity (2 samples, 0.16%)</title><rect x="28.7430%" y="405" width="0.1601%" height="15" fill="rgb(229,93,14)"/><text x="28.9930%" y="415.50"></text></g><g><title>do_syscall_64 (5 samples, 0.40%)</title><rect x="28.6629%" y="581" width="0.4003%" height="15" fill="rgb(209,67,49)"/><text x="28.9129%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (5 samples, 0.40%)</title><rect x="28.6629%" y="565" width="0.4003%" height="15" fill="rgb(213,87,29)"/><text x="28.9129%" y="575.50"></text></g><g><title>__sys_recvfrom (5 samples, 0.40%)</title><rect x="28.6629%" y="549" width="0.4003%" height="15" fill="rgb(205,151,52)"/><text x="28.9129%" y="559.50"></text></g><g><title>inet_recvmsg (5 samples, 0.40%)</title><rect x="28.6629%" y="533" width="0.4003%" height="15" fill="rgb(253,215,39)"/><text x="28.9129%" y="543.50"></text></g><g><title>tcp_recvmsg (5 samples, 0.40%)</title><rect x="28.6629%" y="517" width="0.4003%" height="15" fill="rgb(221,220,41)"/><text x="28.9129%" y="527.50"></text></g><g><title>sk_wait_data (5 samples, 0.40%)</title><rect x="28.6629%" y="501" width="0.4003%" height="15" fill="rgb(218,133,21)"/><text x="28.9129%" y="511.50"></text></g><g><title>wait_woken (5 samples, 0.40%)</title><rect x="28.6629%" y="485" width="0.4003%" height="15" fill="rgb(221,193,43)"/><text x="28.9129%" y="495.50"></text></g><g><title>schedule_timeout (4 samples, 0.32%)</title><rect x="28.7430%" y="469" width="0.3203%" height="15" fill="rgb(240,128,52)"/><text x="28.9930%" y="479.50"></text></g><g><title>schedule (4 samples, 0.32%)</title><rect x="28.7430%" y="453" width="0.3203%" height="15" fill="rgb(253,114,12)"/><text x="28.9930%" y="463.50"></text></g><g><title>__schedule (4 samples, 0.32%)</title><rect x="28.7430%" y="437" width="0.3203%" height="15" fill="rgb(215,223,47)"/><text x="28.9930%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.48%)</title><rect x="28.6629%" y="597" width="0.4804%" height="15" fill="rgb(248,225,23)"/><text x="28.9129%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.64%)</title><rect x="28.5829%" y="693" width="0.6405%" height="15" fill="rgb(250,108,0)"/><text x="28.8329%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (7 samples, 0.56%)</title><rect x="28.6629%" y="677" width="0.5604%" height="15" fill="rgb(228,208,7)"/><text x="28.9129%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (7 samples, 0.56%)</title><rect x="28.6629%" y="661" width="0.5604%" height="15" fill="rgb(244,45,10)"/><text x="28.9129%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (7 samples, 0.56%)</title><rect x="28.6629%" y="645" width="0.5604%" height="15" fill="rgb(207,125,25)"/><text x="28.9129%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (7 samples, 0.56%)</title><rect x="28.6629%" y="629" width="0.5604%" height="15" fill="rgb(210,195,18)"/><text x="28.9129%" y="639.50"></text></g><g><title>__libc_recv (7 samples, 0.56%)</title><rect x="28.6629%" y="613" width="0.5604%" height="15" fill="rgb(249,80,12)"/><text x="28.9129%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (9 samples, 0.72%)</title><rect x="28.5829%" y="741" width="0.7206%" height="15" fill="rgb(221,65,9)"/><text x="28.8329%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (9 samples, 0.72%)</title><rect x="28.5829%" y="725" width="0.7206%" height="15" fill="rgb(235,49,36)"/><text x="28.8329%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.72%)</title><rect x="28.5829%" y="709" width="0.7206%" height="15" fill="rgb(225,32,20)"/><text x="28.8329%" y="719.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.16%)</title><rect x="29.7838%" y="453" width="0.1601%" height="15" fill="rgb(215,141,46)"/><text x="30.0338%" y="463.50"></text></g><g><title>sock_def_readable (2 samples, 0.16%)</title><rect x="29.9440%" y="229" width="0.1601%" height="15" fill="rgb(250,160,47)"/><text x="30.1940%" y="239.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.16%)</title><rect x="29.9440%" y="213" width="0.1601%" height="15" fill="rgb(216,222,40)"/><text x="30.1940%" y="223.50"></text></g><g><title>__wake_up_common (2 samples, 0.16%)</title><rect x="29.9440%" y="197" width="0.1601%" height="15" fill="rgb(234,217,39)"/><text x="30.1940%" y="207.50"></text></g><g><title>pollwake (2 samples, 0.16%)</title><rect x="29.9440%" y="181" width="0.1601%" height="15" fill="rgb(207,178,40)"/><text x="30.1940%" y="191.50"></text></g><g><title>try_to_wake_up (2 samples, 0.16%)</title><rect x="29.9440%" y="165" width="0.1601%" height="15" fill="rgb(221,136,13)"/><text x="30.1940%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.24%)</title><rect x="29.9440%" y="261" width="0.2402%" height="15" fill="rgb(249,199,10)"/><text x="30.1940%" y="271.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.24%)</title><rect x="29.9440%" y="245" width="0.2402%" height="15" fill="rgb(249,222,13)"/><text x="30.1940%" y="255.50"></text></g><g><title>__tcp_push_pending_frames (8 samples, 0.64%)</title><rect x="29.6237%" y="549" width="0.6405%" height="15" fill="rgb(244,185,38)"/><text x="29.8737%" y="559.50"></text></g><g><title>tcp_write_xmit (8 samples, 0.64%)</title><rect x="29.6237%" y="533" width="0.6405%" height="15" fill="rgb(236,202,9)"/><text x="29.8737%" y="543.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 0.64%)</title><rect x="29.6237%" y="517" width="0.6405%" height="15" fill="rgb(250,229,37)"/><text x="29.8737%" y="527.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.64%)</title><rect x="29.6237%" y="501" width="0.6405%" height="15" fill="rgb(206,174,23)"/><text x="29.8737%" y="511.50"></text></g><g><title>ip_output (7 samples, 0.56%)</title><rect x="29.7038%" y="485" width="0.5604%" height="15" fill="rgb(211,33,43)"/><text x="29.9538%" y="495.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.48%)</title><rect x="29.7838%" y="469" width="0.4804%" height="15" fill="rgb(245,58,50)"/><text x="30.0338%" y="479.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.32%)</title><rect x="29.9440%" y="453" width="0.3203%" height="15" fill="rgb(244,68,36)"/><text x="30.1940%" y="463.50"></text></g><g><title>do_softirq (4 samples, 0.32%)</title><rect x="29.9440%" y="437" width="0.3203%" height="15" fill="rgb(232,229,15)"/><text x="30.1940%" y="447.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.32%)</title><rect x="29.9440%" y="421" width="0.3203%" height="15" fill="rgb(254,30,23)"/><text x="30.1940%" y="431.50"></text></g><g><title>__do_softirq (4 samples, 0.32%)</title><rect x="29.9440%" y="405" width="0.3203%" height="15" fill="rgb(235,160,14)"/><text x="30.1940%" y="415.50"></text></g><g><title>net_rx_action (4 samples, 0.32%)</title><rect x="29.9440%" y="389" width="0.3203%" height="15" fill="rgb(212,155,44)"/><text x="30.1940%" y="399.50"></text></g><g><title>process_backlog (4 samples, 0.32%)</title><rect x="29.9440%" y="373" width="0.3203%" height="15" fill="rgb(226,2,50)"/><text x="30.1940%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.32%)</title><rect x="29.9440%" y="357" width="0.3203%" height="15" fill="rgb(234,177,6)"/><text x="30.1940%" y="367.50"></text></g><g><title>ip_rcv (4 samples, 0.32%)</title><rect x="29.9440%" y="341" width="0.3203%" height="15" fill="rgb(217,24,9)"/><text x="30.1940%" y="351.50"></text></g><g><title>ip_local_deliver (4 samples, 0.32%)</title><rect x="29.9440%" y="325" width="0.3203%" height="15" fill="rgb(220,13,46)"/><text x="30.1940%" y="335.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.32%)</title><rect x="29.9440%" y="309" width="0.3203%" height="15" fill="rgb(239,221,27)"/><text x="30.1940%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.32%)</title><rect x="29.9440%" y="293" width="0.3203%" height="15" fill="rgb(222,198,25)"/><text x="30.1940%" y="303.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.32%)</title><rect x="29.9440%" y="277" width="0.3203%" height="15" fill="rgb(211,99,13)"/><text x="30.1940%" y="287.50"></text></g><g><title>sock_sendmsg (11 samples, 0.88%)</title><rect x="29.4636%" y="597" width="0.8807%" height="15" fill="rgb(232,111,31)"/><text x="29.7136%" y="607.50"></text></g><g><title>tcp_sendmsg (11 samples, 0.88%)</title><rect x="29.4636%" y="581" width="0.8807%" height="15" fill="rgb(245,82,37)"/><text x="29.7136%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (10 samples, 0.80%)</title><rect x="29.5436%" y="565" width="0.8006%" height="15" fill="rgb(227,149,46)"/><text x="29.7936%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.04%)</title><rect x="29.3835%" y="661" width="1.0408%" height="15" fill="rgb(218,36,50)"/><text x="29.6335%" y="671.50"></text></g><g><title>do_syscall_64 (13 samples, 1.04%)</title><rect x="29.3835%" y="645" width="1.0408%" height="15" fill="rgb(226,80,48)"/><text x="29.6335%" y="655.50"></text></g><g><title>__x64_sys_sendto (13 samples, 1.04%)</title><rect x="29.3835%" y="629" width="1.0408%" height="15" fill="rgb(238,224,15)"/><text x="29.6335%" y="639.50"></text></g><g><title>__sys_sendto (13 samples, 1.04%)</title><rect x="29.3835%" y="613" width="1.0408%" height="15" fill="rgb(241,136,10)"/><text x="29.6335%" y="623.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (24 samples, 1.92%)</title><rect x="28.5829%" y="773" width="1.9215%" height="15" fill="rgb(208,32,45)"/><text x="28.8329%" y="783.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (24 samples, 1.92%)</title><rect x="28.5829%" y="757" width="1.9215%" height="15" fill="rgb(207,135,9)"/><text x="28.8329%" y="767.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (15 samples, 1.20%)</title><rect x="29.3034%" y="741" width="1.2010%" height="15" fill="rgb(206,86,44)"/><text x="29.5534%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (15 samples, 1.20%)</title><rect x="29.3034%" y="725" width="1.2010%" height="15" fill="rgb(245,177,15)"/><text x="29.5534%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (14 samples, 1.12%)</title><rect x="29.3835%" y="709" width="1.1209%" height="15" fill="rgb(206,64,50)"/><text x="29.6335%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (14 samples, 1.12%)</title><rect x="29.3835%" y="693" width="1.1209%" height="15" fill="rgb(234,36,40)"/><text x="29.6335%" y="703.50"></text></g><g><title>__libc_send (14 samples, 1.12%)</title><rect x="29.3835%" y="677" width="1.1209%" height="15" fill="rgb(213,64,8)"/><text x="29.6335%" y="687.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (25 samples, 2.00%)</title><rect x="28.5829%" y="789" width="2.0016%" height="15" fill="rgb(210,75,36)"/><text x="28.8329%" y="799.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::query (36 samples, 2.88%)</title><rect x="27.7822%" y="821" width="2.8823%" height="15" fill="rgb(229,88,21)"/><text x="28.0322%" y="831.50">de..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (36 samples, 2.88%)</title><rect x="27.7822%" y="805" width="2.8823%" height="15" fill="rgb(252,204,47)"/><text x="28.0322%" y="815.50">de..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="805" width="0.1601%" height="15" fill="rgb(208,77,27)"/><text x="30.9145%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="789" width="0.1601%" height="15" fill="rgb(221,76,26)"/><text x="30.9145%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="773" width="0.1601%" height="15" fill="rgb(225,139,18)"/><text x="30.9145%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="757" width="0.1601%" height="15" fill="rgb(230,137,11)"/><text x="30.9145%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="741" width="0.1601%" height="15" fill="rgb(212,28,1)"/><text x="30.9145%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="30.6645%" y="725" width="0.1601%" height="15" fill="rgb(248,164,17)"/><text x="30.9145%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="709" width="0.1601%" height="15" fill="rgb(222,171,42)"/><text x="30.9145%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="693" width="0.1601%" height="15" fill="rgb(243,84,45)"/><text x="30.9145%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="30.6645%" y="677" width="0.1601%" height="15" fill="rgb(252,49,23)"/><text x="30.9145%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="661" width="0.1601%" height="15" fill="rgb(215,19,7)"/><text x="30.9145%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.6645%" y="645" width="0.1601%" height="15" fill="rgb(238,81,41)"/><text x="30.9145%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.16%)</title><rect x="30.6645%" y="629" width="0.1601%" height="15" fill="rgb(210,199,37)"/><text x="30.9145%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="30.6645%" y="613" width="0.1601%" height="15" fill="rgb(244,192,49)"/><text x="30.9145%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="30.6645%" y="597" width="0.1601%" height="15" fill="rgb(226,211,11)"/><text x="30.9145%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.16%)</title><rect x="30.6645%" y="581" width="0.1601%" height="15" fill="rgb(236,162,54)"/><text x="30.9145%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="30.6645%" y="565" width="0.1601%" height="15" fill="rgb(220,229,9)"/><text x="30.9145%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="30.6645%" y="549" width="0.1601%" height="15" fill="rgb(250,87,22)"/><text x="30.9145%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.16%)</title><rect x="30.6645%" y="533" width="0.1601%" height="15" fill="rgb(239,43,17)"/><text x="30.9145%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="30.6645%" y="517" width="0.1601%" height="15" fill="rgb(231,177,25)"/><text x="30.9145%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="30.6645%" y="501" width="0.1601%" height="15" fill="rgb(219,179,1)"/><text x="30.9145%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="30.6645%" y="485" width="0.1601%" height="15" fill="rgb(238,219,53)"/><text x="30.9145%" y="495.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="30.6645%" y="469" width="0.1601%" height="15" fill="rgb(232,167,36)"/><text x="30.9145%" y="479.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.32%)</title><rect x="30.6645%" y="821" width="0.3203%" height="15" fill="rgb(244,19,51)"/><text x="30.9145%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.16%)</title><rect x="30.8247%" y="805" width="0.1601%" height="15" fill="rgb(224,6,22)"/><text x="31.0747%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.16%)</title><rect x="30.8247%" y="789" width="0.1601%" height="15" fill="rgb(224,145,5)"/><text x="31.0747%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (2 samples, 0.16%)</title><rect x="30.8247%" y="773" width="0.1601%" height="15" fill="rgb(234,130,49)"/><text x="31.0747%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="30.9848%" y="805" width="0.2402%" height="15" fill="rgb(254,6,2)"/><text x="31.2348%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.24%)</title><rect x="30.9848%" y="789" width="0.2402%" height="15" fill="rgb(208,96,46)"/><text x="31.2348%" y="799.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.24%)</title><rect x="30.9848%" y="773" width="0.2402%" height="15" fill="rgb(239,3,39)"/><text x="31.2348%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.24%)</title><rect x="30.9848%" y="757" width="0.2402%" height="15" fill="rgb(233,210,1)"/><text x="31.2348%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="30.9848%" y="741" width="0.2402%" height="15" fill="rgb(244,137,37)"/><text x="31.2348%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.24%)</title><rect x="30.9848%" y="725" width="0.2402%" height="15" fill="rgb(240,136,2)"/><text x="31.2348%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.24%)</title><rect x="30.9848%" y="709" width="0.2402%" height="15" fill="rgb(239,18,37)"/><text x="31.2348%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.24%)</title><rect x="30.9848%" y="693" width="0.2402%" height="15" fill="rgb(218,185,22)"/><text x="31.2348%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="31.0649%" y="677" width="0.1601%" height="15" fill="rgb(225,218,4)"/><text x="31.3149%" y="687.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.24%)</title><rect x="31.2250%" y="805" width="0.2402%" height="15" fill="rgb(230,182,32)"/><text x="31.4750%" y="815.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.16%)</title><rect x="31.3050%" y="789" width="0.1601%" height="15" fill="rgb(242,56,43)"/><text x="31.5550%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="31.3050%" y="773" width="0.1601%" height="15" fill="rgb(233,99,24)"/><text x="31.5550%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="31.3050%" y="757" width="0.1601%" height="15" fill="rgb(234,209,42)"/><text x="31.5550%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="31.3050%" y="741" width="0.1601%" height="15" fill="rgb(227,7,12)"/><text x="31.5550%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.16%)</title><rect x="31.3050%" y="725" width="0.1601%" height="15" fill="rgb(245,203,43)"/><text x="31.5550%" y="735.50"></text></g><g><title>lobsters::main (8 samples, 0.64%)</title><rect x="30.9848%" y="821" width="0.6405%" height="15" fill="rgb(238,205,33)"/><text x="31.2348%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.16%)</title><rect x="31.4652%" y="805" width="0.1601%" height="15" fill="rgb(231,56,7)"/><text x="31.7152%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.16%)</title><rect x="31.4652%" y="789" width="0.1601%" height="15" fill="rgb(244,186,29)"/><text x="31.7152%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.16%)</title><rect x="31.4652%" y="773" width="0.1601%" height="15" fill="rgb(234,111,31)"/><text x="31.7152%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="31.4652%" y="757" width="0.1601%" height="15" fill="rgb(241,149,10)"/><text x="31.7152%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="31.4652%" y="741" width="0.1601%" height="15" fill="rgb(249,206,44)"/><text x="31.7152%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="31.4652%" y="725" width="0.1601%" height="15" fill="rgb(251,153,30)"/><text x="31.7152%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="31.4652%" y="709" width="0.1601%" height="15" fill="rgb(239,152,38)"/><text x="31.7152%" y="719.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.16%)</title><rect x="31.6253%" y="757" width="0.1601%" height="15" fill="rgb(249,139,47)"/><text x="31.8753%" y="767.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.16%)</title><rect x="31.6253%" y="741" width="0.1601%" height="15" fill="rgb(244,64,35)"/><text x="31.8753%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.16%)</title><rect x="31.6253%" y="725" width="0.1601%" height="15" fill="rgb(216,46,15)"/><text x="31.8753%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.16%)</title><rect x="31.6253%" y="709" width="0.1601%" height="15" fill="rgb(250,74,19)"/><text x="31.8753%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.16%)</title><rect x="31.6253%" y="693" width="0.1601%" height="15" fill="rgb(249,42,33)"/><text x="31.8753%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.16%)</title><rect x="31.6253%" y="677" width="0.1601%" height="15" fill="rgb(242,149,17)"/><text x="31.8753%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="31.6253%" y="661" width="0.1601%" height="15" fill="rgb(244,29,21)"/><text x="31.8753%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.24%)</title><rect x="31.6253%" y="805" width="0.2402%" height="15" fill="rgb(220,130,37)"/><text x="31.8753%" y="815.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.24%)</title><rect x="31.6253%" y="789" width="0.2402%" height="15" fill="rgb(211,67,2)"/><text x="31.8753%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.24%)</title><rect x="31.6253%" y="773" width="0.2402%" height="15" fill="rgb(235,68,52)"/><text x="31.8753%" y="783.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="32.5060%" y="501" width="0.1601%" height="15" fill="rgb(246,142,3)"/><text x="32.7560%" y="511.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.24%)</title><rect x="33.3066%" y="421" width="0.2402%" height="15" fill="rgb(241,25,7)"/><text x="33.5566%" y="431.50"></text></g><g><title>dequeue_entity (3 samples, 0.24%)</title><rect x="33.3066%" y="405" width="0.2402%" height="15" fill="rgb(242,119,39)"/><text x="33.5566%" y="415.50"></text></g><g><title>update_curr (3 samples, 0.24%)</title><rect x="33.3066%" y="389" width="0.2402%" height="15" fill="rgb(241,98,45)"/><text x="33.5566%" y="399.50"></text></g><g><title>psi_task_change (3 samples, 0.24%)</title><rect x="33.6269%" y="421" width="0.2402%" height="15" fill="rgb(254,28,30)"/><text x="33.8769%" y="431.50"></text></g><g><title>psi_group_change (3 samples, 0.24%)</title><rect x="33.6269%" y="405" width="0.2402%" height="15" fill="rgb(241,142,54)"/><text x="33.8769%" y="415.50"></text></g><g><title>sk_wait_data (19 samples, 1.52%)</title><rect x="32.6661%" y="501" width="1.5212%" height="15" fill="rgb(222,85,15)"/><text x="32.9161%" y="511.50"></text></g><g><title>wait_woken (15 samples, 1.20%)</title><rect x="32.9864%" y="485" width="1.2010%" height="15" fill="rgb(210,85,47)"/><text x="33.2364%" y="495.50"></text></g><g><title>schedule_timeout (15 samples, 1.20%)</title><rect x="32.9864%" y="469" width="1.2010%" height="15" fill="rgb(224,206,25)"/><text x="33.2364%" y="479.50"></text></g><g><title>schedule (15 samples, 1.20%)</title><rect x="32.9864%" y="453" width="1.2010%" height="15" fill="rgb(243,201,19)"/><text x="33.2364%" y="463.50"></text></g><g><title>__schedule (14 samples, 1.12%)</title><rect x="33.0665%" y="437" width="1.1209%" height="15" fill="rgb(236,59,4)"/><text x="33.3165%" y="447.50"></text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="34.0272%" y="421" width="0.1601%" height="15" fill="rgb(254,179,45)"/><text x="34.2772%" y="431.50"></text></g><g><title>page_fault (4 samples, 0.32%)</title><rect x="34.2674%" y="437" width="0.3203%" height="15" fill="rgb(226,14,10)"/><text x="34.5174%" y="447.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.24%)</title><rect x="34.3475%" y="421" width="0.2402%" height="15" fill="rgb(244,27,41)"/><text x="34.5975%" y="431.50"></text></g><g><title>handle_mm_fault (3 samples, 0.24%)</title><rect x="34.3475%" y="405" width="0.2402%" height="15" fill="rgb(235,35,32)"/><text x="34.5975%" y="415.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.24%)</title><rect x="34.3475%" y="389" width="0.2402%" height="15" fill="rgb(218,68,31)"/><text x="34.5975%" y="399.50"></text></g><g><title>inet_recvmsg (29 samples, 2.32%)</title><rect x="32.3459%" y="533" width="2.3219%" height="15" fill="rgb(207,120,37)"/><text x="32.5959%" y="543.50">i..</text></g><g><title>tcp_recvmsg (29 samples, 2.32%)</title><rect x="32.3459%" y="517" width="2.3219%" height="15" fill="rgb(227,98,0)"/><text x="32.5959%" y="527.50">t..</text></g><g><title>skb_copy_datagram_iter (6 samples, 0.48%)</title><rect x="34.1873%" y="501" width="0.4804%" height="15" fill="rgb(207,7,3)"/><text x="34.4373%" y="511.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.48%)</title><rect x="34.1873%" y="485" width="0.4804%" height="15" fill="rgb(206,98,19)"/><text x="34.4373%" y="495.50"></text></g><g><title>_copy_to_iter (5 samples, 0.40%)</title><rect x="34.2674%" y="469" width="0.4003%" height="15" fill="rgb(217,5,26)"/><text x="34.5174%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (5 samples, 0.40%)</title><rect x="34.2674%" y="453" width="0.4003%" height="15" fill="rgb(235,190,38)"/><text x="34.5174%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (33 samples, 2.64%)</title><rect x="32.1857%" y="565" width="2.6421%" height="15" fill="rgb(247,86,24)"/><text x="32.4357%" y="575.50">__..</text></g><g><title>__sys_recvfrom (33 samples, 2.64%)</title><rect x="32.1857%" y="549" width="2.6421%" height="15" fill="rgb(205,101,16)"/><text x="32.4357%" y="559.50">__..</text></g><g><title>sockfd_lookup_light (2 samples, 0.16%)</title><rect x="34.6677%" y="533" width="0.1601%" height="15" fill="rgb(246,168,33)"/><text x="34.9177%" y="543.50"></text></g><g><title>do_syscall_64 (35 samples, 2.80%)</title><rect x="32.1857%" y="581" width="2.8022%" height="15" fill="rgb(231,114,1)"/><text x="32.4357%" y="591.50">do..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.16%)</title><rect x="34.8279%" y="565" width="0.1601%" height="15" fill="rgb(207,184,53)"/><text x="35.0779%" y="575.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.16%)</title><rect x="34.8279%" y="549" width="0.1601%" height="15" fill="rgb(224,95,51)"/><text x="35.0779%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (37 samples, 2.96%)</title><rect x="32.1057%" y="597" width="2.9624%" height="15" fill="rgb(212,188,45)"/><text x="32.3557%" y="607.50">ent..</text></g><g><title>__libc_recv (39 samples, 3.12%)</title><rect x="32.1057%" y="613" width="3.1225%" height="15" fill="rgb(223,154,38)"/><text x="32.3557%" y="623.50">__l..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.16%)</title><rect x="35.0681%" y="597" width="0.1601%" height="15" fill="rgb(251,22,52)"/><text x="35.3181%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (40 samples, 3.20%)</title><rect x="32.1057%" y="693" width="3.2026%" height="15" fill="rgb(229,209,22)"/><text x="32.3557%" y="703.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (40 samples, 3.20%)</title><rect x="32.1057%" y="677" width="3.2026%" height="15" fill="rgb(234,138,34)"/><text x="32.3557%" y="687.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (40 samples, 3.20%)</title><rect x="32.1057%" y="661" width="3.2026%" height="15" fill="rgb(212,95,11)"/><text x="32.3557%" y="671.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (40 samples, 3.20%)</title><rect x="32.1057%" y="645" width="3.2026%" height="15" fill="rgb(240,179,47)"/><text x="32.3557%" y="655.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 3.20%)</title><rect x="32.1057%" y="629" width="3.2026%" height="15" fill="rgb(240,163,11)"/><text x="32.3557%" y="639.50">std..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 3.28%)</title><rect x="32.1057%" y="709" width="3.2826%" height="15" fill="rgb(236,37,12)"/><text x="32.3557%" y="719.50">&lt;my..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (47 samples, 3.76%)</title><rect x="31.8655%" y="773" width="3.7630%" height="15" fill="rgb(232,164,16)"/><text x="32.1155%" y="783.50">&lt;mys..</text></g><g><title>mysql::conn::Conn::_query (47 samples, 3.76%)</title><rect x="31.8655%" y="757" width="3.7630%" height="15" fill="rgb(244,205,15)"/><text x="32.1155%" y="767.50">mysq..</text></g><g><title>mysql::conn::Conn::handle_result_set (47 samples, 3.76%)</title><rect x="31.8655%" y="741" width="3.7630%" height="15" fill="rgb(223,117,47)"/><text x="32.1155%" y="751.50">mysq..</text></g><g><title>mysql::conn::Conn::read_packet (45 samples, 3.60%)</title><rect x="32.0256%" y="725" width="3.6029%" height="15" fill="rgb(244,107,35)"/><text x="32.2756%" y="735.50">mysq..</text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="35.4684%" y="709" width="0.1601%" height="15" fill="rgb(205,140,8)"/><text x="35.7184%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.16%)</title><rect x="35.6285%" y="645" width="0.1601%" height="15" fill="rgb(228,84,46)"/><text x="35.8785%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.16%)</title><rect x="35.6285%" y="629" width="0.1601%" height="15" fill="rgb(254,188,9)"/><text x="35.8785%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.16%)</title><rect x="35.6285%" y="613" width="0.1601%" height="15" fill="rgb(206,112,54)"/><text x="35.8785%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.16%)</title><rect x="35.6285%" y="597" width="0.1601%" height="15" fill="rgb(216,84,49)"/><text x="35.8785%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="35.6285%" y="773" width="0.2402%" height="15" fill="rgb(214,194,35)"/><text x="35.8785%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="35.6285%" y="757" width="0.2402%" height="15" fill="rgb(249,28,3)"/><text x="35.8785%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="35.6285%" y="741" width="0.2402%" height="15" fill="rgb(222,56,52)"/><text x="35.8785%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="35.6285%" y="725" width="0.2402%" height="15" fill="rgb(245,217,50)"/><text x="35.8785%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="35.6285%" y="709" width="0.2402%" height="15" fill="rgb(213,201,24)"/><text x="35.8785%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="35.6285%" y="693" width="0.2402%" height="15" fill="rgb(248,116,28)"/><text x="35.8785%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="35.6285%" y="677" width="0.2402%" height="15" fill="rgb(219,72,43)"/><text x="35.8785%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.24%)</title><rect x="35.6285%" y="661" width="0.2402%" height="15" fill="rgb(209,138,14)"/><text x="35.8785%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.24%)</title><rect x="36.4291%" y="709" width="0.2402%" height="15" fill="rgb(222,18,33)"/><text x="36.6791%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="36.7494%" y="693" width="0.1601%" height="15" fill="rgb(213,199,7)"/><text x="36.9994%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="36.9095%" y="693" width="0.2402%" height="15" fill="rgb(250,110,10)"/><text x="37.1595%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.24%)</title><rect x="36.9095%" y="677" width="0.2402%" height="15" fill="rgb(248,123,6)"/><text x="37.1595%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="36.9896%" y="661" width="0.1601%" height="15" fill="rgb(206,91,31)"/><text x="37.2396%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="36.9896%" y="645" width="0.1601%" height="15" fill="rgb(211,154,13)"/><text x="37.2396%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (7 samples, 0.56%)</title><rect x="36.7494%" y="709" width="0.5604%" height="15" fill="rgb(225,148,7)"/><text x="36.9994%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="37.1497%" y="693" width="0.1601%" height="15" fill="rgb(220,160,43)"/><text x="37.3997%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="37.3098%" y="693" width="0.1601%" height="15" fill="rgb(213,52,39)"/><text x="37.5598%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (16 samples, 1.28%)</title><rect x="36.2690%" y="741" width="1.2810%" height="15" fill="rgb(243,137,7)"/><text x="36.5190%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (16 samples, 1.28%)</title><rect x="36.2690%" y="725" width="1.2810%" height="15" fill="rgb(230,79,13)"/><text x="36.5190%" y="735.50"></text></g><g><title>mysql_common::value::read_text_values (3 samples, 0.24%)</title><rect x="37.3098%" y="709" width="0.2402%" height="15" fill="rgb(247,105,23)"/><text x="37.5598%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="37.5500%" y="741" width="0.1601%" height="15" fill="rgb(223,179,41)"/><text x="37.8000%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.84%)</title><rect x="35.9488%" y="757" width="1.8415%" height="15" fill="rgb(218,9,34)"/><text x="36.1988%" y="767.50">&lt;..</text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (2 samples, 0.16%)</title><rect x="37.8703%" y="757" width="0.1601%" height="15" fill="rgb(222,106,8)"/><text x="38.1203%" y="767.50"></text></g><g><title>msql_srv::writers::column_definitions (2 samples, 0.16%)</title><rect x="37.8703%" y="741" width="0.1601%" height="15" fill="rgb(211,220,0)"/><text x="38.1203%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.8703%" y="725" width="0.1601%" height="15" fill="rgb(229,52,16)"/><text x="38.1203%" y="735.50"></text></g><g><title>decor::helpers::answer_rows (30 samples, 2.40%)</title><rect x="35.8687%" y="773" width="2.4019%" height="15" fill="rgb(212,155,18)"/><text x="36.1187%" y="783.50">de..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.24%)</title><rect x="38.4307%" y="725" width="0.2402%" height="15" fill="rgb(242,21,14)"/><text x="38.6807%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="38.4307%" y="709" width="0.2402%" height="15" fill="rgb(222,19,48)"/><text x="38.6807%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="38.4307%" y="693" width="0.2402%" height="15" fill="rgb(232,45,27)"/><text x="38.6807%" y="703.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.16%)</title><rect x="38.5108%" y="677" width="0.1601%" height="15" fill="rgb(249,103,42)"/><text x="38.7608%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.24%)</title><rect x="39.0713%" y="677" width="0.2402%" height="15" fill="rgb(246,81,33)"/><text x="39.3213%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="39.0713%" y="661" width="0.2402%" height="15" fill="rgb(252,33,42)"/><text x="39.3213%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="39.1513%" y="645" width="0.1601%" height="15" fill="rgb(209,212,41)"/><text x="39.4013%" y="655.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.16%)</title><rect x="39.7118%" y="565" width="0.1601%" height="15" fill="rgb(207,154,6)"/><text x="39.9618%" y="575.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="40.1922%" y="469" width="0.1601%" height="15" fill="rgb(223,64,47)"/><text x="40.4422%" y="479.50"></text></g><g><title>add_wait_queue (2 samples, 0.16%)</title><rect x="40.5925%" y="453" width="0.1601%" height="15" fill="rgb(211,161,38)"/><text x="40.8425%" y="463.50"></text></g><g><title>finish_task_switch (2 samples, 0.16%)</title><rect x="41.1529%" y="389" width="0.1601%" height="15" fill="rgb(219,138,40)"/><text x="41.4029%" y="399.50"></text></g><g><title>sk_wait_data (15 samples, 1.20%)</title><rect x="40.3523%" y="469" width="1.2010%" height="15" fill="rgb(241,228,46)"/><text x="40.6023%" y="479.50"></text></g><g><title>wait_woken (9 samples, 0.72%)</title><rect x="40.8327%" y="453" width="0.7206%" height="15" fill="rgb(223,209,38)"/><text x="41.0827%" y="463.50"></text></g><g><title>schedule_timeout (7 samples, 0.56%)</title><rect x="40.9928%" y="437" width="0.5604%" height="15" fill="rgb(236,164,45)"/><text x="41.2428%" y="447.50"></text></g><g><title>schedule (7 samples, 0.56%)</title><rect x="40.9928%" y="421" width="0.5604%" height="15" fill="rgb(231,15,5)"/><text x="41.2428%" y="431.50"></text></g><g><title>__schedule (7 samples, 0.56%)</title><rect x="40.9928%" y="405" width="0.5604%" height="15" fill="rgb(252,35,15)"/><text x="41.2428%" y="415.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.40%)</title><rect x="41.5532%" y="469" width="0.4003%" height="15" fill="rgb(248,181,18)"/><text x="41.8032%" y="479.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.40%)</title><rect x="41.5532%" y="453" width="0.4003%" height="15" fill="rgb(233,39,42)"/><text x="41.8032%" y="463.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.24%)</title><rect x="41.7134%" y="437" width="0.2402%" height="15" fill="rgb(238,110,33)"/><text x="41.9634%" y="447.50"></text></g><g><title>__check_object_size (2 samples, 0.16%)</title><rect x="41.7934%" y="421" width="0.1601%" height="15" fill="rgb(233,195,10)"/><text x="42.0434%" y="431.50"></text></g><g><title>inet_recvmsg (26 samples, 2.08%)</title><rect x="39.9520%" y="501" width="2.0817%" height="15" fill="rgb(254,105,3)"/><text x="40.2020%" y="511.50">i..</text></g><g><title>tcp_recvmsg (26 samples, 2.08%)</title><rect x="39.9520%" y="485" width="2.0817%" height="15" fill="rgb(221,225,9)"/><text x="40.2020%" y="495.50">t..</text></g><g><title>do_syscall_64 (27 samples, 2.16%)</title><rect x="39.9520%" y="549" width="2.1617%" height="15" fill="rgb(224,227,45)"/><text x="40.2020%" y="559.50">d..</text></g><g><title>__x64_sys_recvfrom (27 samples, 2.16%)</title><rect x="39.9520%" y="533" width="2.1617%" height="15" fill="rgb(229,198,43)"/><text x="40.2020%" y="543.50">_..</text></g><g><title>__sys_recvfrom (27 samples, 2.16%)</title><rect x="39.9520%" y="517" width="2.1617%" height="15" fill="rgb(206,209,35)"/><text x="40.2020%" y="527.50">_..</text></g><g><title>entry_SYSCALL_64 (33 samples, 2.64%)</title><rect x="39.8719%" y="565" width="2.6421%" height="15" fill="rgb(245,195,53)"/><text x="40.1219%" y="575.50">en..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.40%)</title><rect x="42.1137%" y="549" width="0.4003%" height="15" fill="rgb(240,92,26)"/><text x="42.3637%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 3.12%)</title><rect x="39.4716%" y="661" width="3.1225%" height="15" fill="rgb(207,40,23)"/><text x="39.7216%" y="671.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (37 samples, 2.96%)</title><rect x="39.6317%" y="645" width="2.9624%" height="15" fill="rgb(223,111,35)"/><text x="39.8817%" y="655.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (37 samples, 2.96%)</title><rect x="39.6317%" y="629" width="2.9624%" height="15" fill="rgb(229,147,28)"/><text x="39.8817%" y="639.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (37 samples, 2.96%)</title><rect x="39.6317%" y="613" width="2.9624%" height="15" fill="rgb(211,29,28)"/><text x="39.8817%" y="623.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (37 samples, 2.96%)</title><rect x="39.6317%" y="597" width="2.9624%" height="15" fill="rgb(228,72,33)"/><text x="39.8817%" y="607.50">std..</text></g><g><title>__libc_recv (37 samples, 2.96%)</title><rect x="39.6317%" y="581" width="2.9624%" height="15" fill="rgb(205,214,31)"/><text x="39.8817%" y="591.50">__l..</text></g><g><title>mysql::conn::Conn::handle_result_set (48 samples, 3.84%)</title><rect x="38.8311%" y="709" width="3.8431%" height="15" fill="rgb(224,111,15)"/><text x="39.0811%" y="719.50">mysq..</text></g><g><title>mysql::conn::Conn::read_packet (45 samples, 3.60%)</title><rect x="39.0713%" y="693" width="3.6029%" height="15" fill="rgb(253,21,26)"/><text x="39.3213%" y="703.50">mysq..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 3.36%)</title><rect x="39.3114%" y="677" width="3.3627%" height="15" fill="rgb(245,139,43)"/><text x="39.5614%" y="687.50">&lt;my..</text></g><g><title>release_sock (2 samples, 0.16%)</title><rect x="42.7542%" y="533" width="0.1601%" height="15" fill="rgb(252,170,7)"/><text x="43.0042%" y="543.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.40%)</title><rect x="43.5548%" y="405" width="0.4003%" height="15" fill="rgb(231,118,14)"/><text x="43.8048%" y="415.50"></text></g><g><title>loopback_xmit (4 samples, 0.32%)</title><rect x="43.6349%" y="389" width="0.3203%" height="15" fill="rgb(238,83,0)"/><text x="43.8849%" y="399.50"></text></g><g><title>netif_rx (2 samples, 0.16%)</title><rect x="43.7950%" y="373" width="0.1601%" height="15" fill="rgb(221,39,39)"/><text x="44.0450%" y="383.50"></text></g><g><title>netif_rx_internal (2 samples, 0.16%)</title><rect x="43.7950%" y="357" width="0.1601%" height="15" fill="rgb(222,119,46)"/><text x="44.0450%" y="367.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.16%)</title><rect x="43.7950%" y="341" width="0.1601%" height="15" fill="rgb(222,165,49)"/><text x="44.0450%" y="351.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.64%)</title><rect x="43.3947%" y="421" width="0.6405%" height="15" fill="rgb(219,113,52)"/><text x="43.6447%" y="431.50"></text></g><g><title>psi_task_change (5 samples, 0.40%)</title><rect x="45.3963%" y="101" width="0.4003%" height="15" fill="rgb(214,7,15)"/><text x="45.6463%" y="111.50"></text></g><g><title>psi_group_change (3 samples, 0.24%)</title><rect x="45.5564%" y="85" width="0.2402%" height="15" fill="rgb(235,32,4)"/><text x="45.8064%" y="95.50"></text></g><g><title>record_times (2 samples, 0.16%)</title><rect x="45.6365%" y="69" width="0.1601%" height="15" fill="rgb(238,90,54)"/><text x="45.8865%" y="79.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.16%)</title><rect x="45.6365%" y="53" width="0.1601%" height="15" fill="rgb(213,208,19)"/><text x="45.8865%" y="63.50"></text></g><g><title>enqueue_task (6 samples, 0.48%)</title><rect x="45.3963%" y="117" width="0.4804%" height="15" fill="rgb(233,156,4)"/><text x="45.6463%" y="127.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.32%)</title><rect x="45.8767%" y="117" width="0.3203%" height="15" fill="rgb(207,194,5)"/><text x="46.1267%" y="127.50"></text></g><g><title>enqueue_entity (4 samples, 0.32%)</title><rect x="45.8767%" y="101" width="0.3203%" height="15" fill="rgb(206,111,30)"/><text x="46.1267%" y="111.50"></text></g><g><title>update_load_avg (3 samples, 0.24%)</title><rect x="45.9568%" y="85" width="0.2402%" height="15" fill="rgb(243,70,54)"/><text x="46.2068%" y="95.50"></text></g><g><title>sock_def_readable (21 samples, 1.68%)</title><rect x="44.7558%" y="197" width="1.6813%" height="15" fill="rgb(242,28,8)"/><text x="45.0058%" y="207.50"></text></g><g><title>__wake_up_common_lock (20 samples, 1.60%)</title><rect x="44.8359%" y="181" width="1.6013%" height="15" fill="rgb(219,106,18)"/><text x="45.0859%" y="191.50"></text></g><g><title>__wake_up_common (19 samples, 1.52%)</title><rect x="44.9159%" y="165" width="1.5212%" height="15" fill="rgb(244,222,10)"/><text x="45.1659%" y="175.50"></text></g><g><title>pollwake (17 samples, 1.36%)</title><rect x="45.0761%" y="149" width="1.3611%" height="15" fill="rgb(236,179,52)"/><text x="45.3261%" y="159.50"></text></g><g><title>try_to_wake_up (15 samples, 1.20%)</title><rect x="45.2362%" y="133" width="1.2010%" height="15" fill="rgb(213,23,39)"/><text x="45.4862%" y="143.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.24%)</title><rect x="46.1970%" y="117" width="0.2402%" height="15" fill="rgb(238,48,10)"/><text x="46.4470%" y="127.50"></text></g><g><title>kfree (2 samples, 0.16%)</title><rect x="46.5973%" y="165" width="0.1601%" height="15" fill="rgb(251,196,23)"/><text x="46.8473%" y="175.50"></text></g><g><title>__kfree_skb (5 samples, 0.40%)</title><rect x="46.5973%" y="181" width="0.4003%" height="15" fill="rgb(250,152,24)"/><text x="46.8473%" y="191.50"></text></g><g><title>skb_release_data (3 samples, 0.24%)</title><rect x="46.7574%" y="165" width="0.2402%" height="15" fill="rgb(209,150,17)"/><text x="47.0074%" y="175.50"></text></g><g><title>tcp_ack (10 samples, 0.80%)</title><rect x="46.4371%" y="197" width="0.8006%" height="15" fill="rgb(234,202,34)"/><text x="46.6871%" y="207.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.16%)</title><rect x="47.0777%" y="181" width="0.1601%" height="15" fill="rgb(253,148,53)"/><text x="47.3277%" y="191.50"></text></g><g><title>ip_local_deliver (36 samples, 2.88%)</title><rect x="44.5156%" y="293" width="2.8823%" height="15" fill="rgb(218,129,16)"/><text x="44.7656%" y="303.50">ip..</text></g><g><title>ip_local_deliver_finish (36 samples, 2.88%)</title><rect x="44.5156%" y="277" width="2.8823%" height="15" fill="rgb(216,85,19)"/><text x="44.7656%" y="287.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (33 samples, 2.64%)</title><rect x="44.7558%" y="261" width="2.6421%" height="15" fill="rgb(235,228,7)"/><text x="45.0058%" y="271.50">ip..</text></g><g><title>tcp_v4_rcv (33 samples, 2.64%)</title><rect x="44.7558%" y="245" width="2.6421%" height="15" fill="rgb(245,175,0)"/><text x="45.0058%" y="255.50">tc..</text></g><g><title>tcp_v4_do_rcv (33 samples, 2.64%)</title><rect x="44.7558%" y="229" width="2.6421%" height="15" fill="rgb(208,168,36)"/><text x="45.0058%" y="239.50">tc..</text></g><g><title>tcp_rcv_established (33 samples, 2.64%)</title><rect x="44.7558%" y="213" width="2.6421%" height="15" fill="rgb(246,171,24)"/><text x="45.0058%" y="223.50">tc..</text></g><g><title>__tcp_transmit_skb (58 samples, 4.64%)</title><rect x="42.9944%" y="485" width="4.6437%" height="15" fill="rgb(215,142,24)"/><text x="43.2444%" y="495.50">__tcp..</text></g><g><title>__ip_queue_xmit (57 samples, 4.56%)</title><rect x="43.0745%" y="469" width="4.5637%" height="15" fill="rgb(250,187,7)"/><text x="43.3245%" y="479.50">__ip_..</text></g><g><title>ip_output (55 samples, 4.40%)</title><rect x="43.2346%" y="453" width="4.4035%" height="15" fill="rgb(228,66,33)"/><text x="43.4846%" y="463.50">ip_ou..</text></g><g><title>ip_finish_output2 (55 samples, 4.40%)</title><rect x="43.2346%" y="437" width="4.4035%" height="15" fill="rgb(234,215,21)"/><text x="43.4846%" y="447.50">ip_fi..</text></g><g><title>__local_bh_enable_ip (45 samples, 3.60%)</title><rect x="44.0352%" y="421" width="3.6029%" height="15" fill="rgb(222,191,20)"/><text x="44.2852%" y="431.50">__lo..</text></g><g><title>do_softirq (45 samples, 3.60%)</title><rect x="44.0352%" y="405" width="3.6029%" height="15" fill="rgb(245,79,54)"/><text x="44.2852%" y="415.50">do_s..</text></g><g><title>do_softirq_own_stack (44 samples, 3.52%)</title><rect x="44.1153%" y="389" width="3.5228%" height="15" fill="rgb(240,10,37)"/><text x="44.3653%" y="399.50">do_..</text></g><g><title>__do_softirq (44 samples, 3.52%)</title><rect x="44.1153%" y="373" width="3.5228%" height="15" fill="rgb(214,192,32)"/><text x="44.3653%" y="383.50">__d..</text></g><g><title>net_rx_action (42 samples, 3.36%)</title><rect x="44.2754%" y="357" width="3.3627%" height="15" fill="rgb(209,36,54)"/><text x="44.5254%" y="367.50">net..</text></g><g><title>process_backlog (39 samples, 3.12%)</title><rect x="44.5156%" y="341" width="3.1225%" height="15" fill="rgb(220,10,11)"/><text x="44.7656%" y="351.50">pro..</text></g><g><title>__netif_receive_skb_one_core (39 samples, 3.12%)</title><rect x="44.5156%" y="325" width="3.1225%" height="15" fill="rgb(221,106,17)"/><text x="44.7656%" y="335.50">__n..</text></g><g><title>ip_rcv (39 samples, 3.12%)</title><rect x="44.5156%" y="309" width="3.1225%" height="15" fill="rgb(251,142,44)"/><text x="44.7656%" y="319.50">ip_..</text></g><g><title>ip_rcv_finish (2 samples, 0.16%)</title><rect x="47.4780%" y="293" width="0.1601%" height="15" fill="rgb(238,13,15)"/><text x="47.7280%" y="303.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.16%)</title><rect x="47.4780%" y="277" width="0.1601%" height="15" fill="rgb(208,107,27)"/><text x="47.7280%" y="287.50"></text></g><g><title>__tcp_push_pending_frames (60 samples, 4.80%)</title><rect x="42.9143%" y="517" width="4.8038%" height="15" fill="rgb(205,136,37)"/><text x="43.1643%" y="527.50">__tcp_..</text></g><g><title>tcp_write_xmit (60 samples, 4.80%)</title><rect x="42.9143%" y="501" width="4.8038%" height="15" fill="rgb(250,205,27)"/><text x="43.1643%" y="511.50">tcp_wr..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.24%)</title><rect x="47.7182%" y="517" width="0.2402%" height="15" fill="rgb(210,80,43)"/><text x="47.9682%" y="527.50"></text></g><g><title>__alloc_skb (3 samples, 0.24%)</title><rect x="47.7182%" y="501" width="0.2402%" height="15" fill="rgb(247,160,36)"/><text x="47.9682%" y="511.50"></text></g><g><title>sock_sendmsg (66 samples, 5.28%)</title><rect x="42.7542%" y="565" width="5.2842%" height="15" fill="rgb(234,13,49)"/><text x="43.0042%" y="575.50">sock_s..</text></g><g><title>tcp_sendmsg (66 samples, 5.28%)</title><rect x="42.7542%" y="549" width="5.2842%" height="15" fill="rgb(234,122,0)"/><text x="43.0042%" y="559.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (64 samples, 5.12%)</title><rect x="42.9143%" y="533" width="5.1241%" height="15" fill="rgb(207,146,38)"/><text x="43.1643%" y="543.50">tcp_se..</text></g><g><title>__x64_sys_sendto (67 samples, 5.36%)</title><rect x="42.7542%" y="597" width="5.3643%" height="15" fill="rgb(207,177,25)"/><text x="43.0042%" y="607.50">__x64_s..</text></g><g><title>__sys_sendto (67 samples, 5.36%)</title><rect x="42.7542%" y="581" width="5.3643%" height="15" fill="rgb(211,178,42)"/><text x="43.0042%" y="591.50">__sys_s..</text></g><g><title>do_syscall_64 (68 samples, 5.44%)</title><rect x="42.7542%" y="613" width="5.4444%" height="15" fill="rgb(230,69,54)"/><text x="43.0042%" y="623.50">do_sysc..</text></g><g><title>entry_SYSCALL_64 (69 samples, 5.52%)</title><rect x="42.7542%" y="629" width="5.5244%" height="15" fill="rgb(214,135,41)"/><text x="43.0042%" y="639.50">entry_S..</text></g><g><title>mysql::conn::Conn::start_transaction (128 samples, 10.25%)</title><rect x="38.2706%" y="773" width="10.2482%" height="15" fill="rgb(237,67,25)"/><text x="38.5206%" y="783.50">mysql::conn::Co..</text></g><g><title>mysql::conn::Conn::_start_transaction (128 samples, 10.25%)</title><rect x="38.2706%" y="757" width="10.2482%" height="15" fill="rgb(222,189,50)"/><text x="38.5206%" y="767.50">mysql::conn::Co..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (128 samples, 10.25%)</title><rect x="38.2706%" y="741" width="10.2482%" height="15" fill="rgb(245,148,34)"/><text x="38.5206%" y="751.50">mysql::conn::qu..</text></g><g><title>mysql::conn::Conn::_query (123 samples, 9.85%)</title><rect x="38.6709%" y="725" width="9.8479%" height="15" fill="rgb(222,29,6)"/><text x="38.9209%" y="735.50">mysql::conn::C..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (73 samples, 5.84%)</title><rect x="42.6741%" y="709" width="5.8447%" height="15" fill="rgb(221,189,43)"/><text x="42.9241%" y="719.50">mysql_c..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (73 samples, 5.84%)</title><rect x="42.6741%" y="693" width="5.8447%" height="15" fill="rgb(207,36,27)"/><text x="42.9241%" y="703.50">std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (73 samples, 5.84%)</title><rect x="42.6741%" y="677" width="5.8447%" height="15" fill="rgb(217,90,24)"/><text x="42.9241%" y="687.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::write (73 samples, 5.84%)</title><rect x="42.6741%" y="661" width="5.8447%" height="15" fill="rgb(224,66,35)"/><text x="42.9241%" y="671.50">std::sy..</text></g><g><title>__libc_send (73 samples, 5.84%)</title><rect x="42.6741%" y="645" width="5.8447%" height="15" fill="rgb(221,13,50)"/><text x="42.9241%" y="655.50">__libc_..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.24%)</title><rect x="48.2786%" y="629" width="0.2402%" height="15" fill="rgb(236,68,49)"/><text x="48.5286%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="48.5188%" y="741" width="0.1601%" height="15" fill="rgb(229,146,28)"/><text x="48.7688%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="48.5188%" y="725" width="0.1601%" height="15" fill="rgb(225,31,38)"/><text x="48.7688%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="48.5188%" y="709" width="0.1601%" height="15" fill="rgb(250,208,3)"/><text x="48.7688%" y="719.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.24%)</title><rect x="49.3995%" y="469" width="0.2402%" height="15" fill="rgb(246,54,23)"/><text x="49.6495%" y="479.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.24%)</title><rect x="50.2002%" y="405" width="0.2402%" height="15" fill="rgb(243,76,11)"/><text x="50.4502%" y="415.50"></text></g><g><title>dequeue_entity (3 samples, 0.24%)</title><rect x="50.2002%" y="389" width="0.2402%" height="15" fill="rgb(245,21,50)"/><text x="50.4502%" y="399.50"></text></g><g><title>finish_task_switch (2 samples, 0.16%)</title><rect x="50.4404%" y="405" width="0.1601%" height="15" fill="rgb(228,9,43)"/><text x="50.6904%" y="415.50"></text></g><g><title>psi_task_change (3 samples, 0.24%)</title><rect x="50.6005%" y="405" width="0.2402%" height="15" fill="rgb(208,100,47)"/><text x="50.8505%" y="415.50"></text></g><g><title>psi_group_change (3 samples, 0.24%)</title><rect x="50.6005%" y="389" width="0.2402%" height="15" fill="rgb(232,26,8)"/><text x="50.8505%" y="399.50"></text></g><g><title>record_times (3 samples, 0.24%)</title><rect x="50.6005%" y="373" width="0.2402%" height="15" fill="rgb(216,166,38)"/><text x="50.8505%" y="383.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.16%)</title><rect x="50.6805%" y="357" width="0.1601%" height="15" fill="rgb(251,202,51)"/><text x="50.9305%" y="367.50"></text></g><g><title>sched_clock (2 samples, 0.16%)</title><rect x="50.6805%" y="341" width="0.1601%" height="15" fill="rgb(254,216,34)"/><text x="50.9305%" y="351.50"></text></g><g><title>native_sched_clock (2 samples, 0.16%)</title><rect x="50.6805%" y="325" width="0.1601%" height="15" fill="rgb(251,32,27)"/><text x="50.9305%" y="335.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.16%)</title><rect x="51.0008%" y="405" width="0.1601%" height="15" fill="rgb(208,127,28)"/><text x="51.2508%" y="415.50"></text></g><g><title>sk_wait_data (24 samples, 1.92%)</title><rect x="49.3995%" y="485" width="1.9215%" height="15" fill="rgb(224,137,22)"/><text x="49.6495%" y="495.50">s..</text></g><g><title>wait_woken (21 samples, 1.68%)</title><rect x="49.6397%" y="469" width="1.6813%" height="15" fill="rgb(254,70,32)"/><text x="49.8897%" y="479.50"></text></g><g><title>schedule_timeout (20 samples, 1.60%)</title><rect x="49.7198%" y="453" width="1.6013%" height="15" fill="rgb(229,75,37)"/><text x="49.9698%" y="463.50"></text></g><g><title>schedule (18 samples, 1.44%)</title><rect x="49.8799%" y="437" width="1.4412%" height="15" fill="rgb(252,64,23)"/><text x="50.1299%" y="447.50"></text></g><g><title>__schedule (17 samples, 1.36%)</title><rect x="49.9600%" y="421" width="1.3611%" height="15" fill="rgb(232,162,48)"/><text x="50.2100%" y="431.50"></text></g><g><title>update_rq_clock (2 samples, 0.16%)</title><rect x="51.1609%" y="405" width="0.1601%" height="15" fill="rgb(246,160,12)"/><text x="51.4109%" y="415.50"></text></g><g><title>inet_recvmsg (28 samples, 2.24%)</title><rect x="49.1593%" y="517" width="2.2418%" height="15" fill="rgb(247,166,0)"/><text x="49.4093%" y="527.50">i..</text></g><g><title>tcp_recvmsg (28 samples, 2.24%)</title><rect x="49.1593%" y="501" width="2.2418%" height="15" fill="rgb(249,219,21)"/><text x="49.4093%" y="511.50">t..</text></g><g><title>__x64_sys_recvfrom (33 samples, 2.64%)</title><rect x="48.8391%" y="549" width="2.6421%" height="15" fill="rgb(205,209,3)"/><text x="49.0891%" y="559.50">__..</text></g><g><title>__sys_recvfrom (32 samples, 2.56%)</title><rect x="48.9191%" y="533" width="2.5620%" height="15" fill="rgb(243,44,1)"/><text x="49.1691%" y="543.50">__..</text></g><g><title>do_syscall_64 (35 samples, 2.80%)</title><rect x="48.8391%" y="565" width="2.8022%" height="15" fill="rgb(206,159,16)"/><text x="49.0891%" y="575.50">do..</text></g><g><title>syscall_trace_enter (2 samples, 0.16%)</title><rect x="51.4812%" y="549" width="0.1601%" height="15" fill="rgb(244,77,30)"/><text x="51.7312%" y="559.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.16%)</title><rect x="51.4812%" y="533" width="0.1601%" height="15" fill="rgb(218,69,12)"/><text x="51.7312%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (40 samples, 3.20%)</title><rect x="48.8391%" y="677" width="3.2026%" height="15" fill="rgb(212,87,7)"/><text x="49.0891%" y="687.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (40 samples, 3.20%)</title><rect x="48.8391%" y="661" width="3.2026%" height="15" fill="rgb(245,114,25)"/><text x="49.0891%" y="671.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (40 samples, 3.20%)</title><rect x="48.8391%" y="645" width="3.2026%" height="15" fill="rgb(210,61,42)"/><text x="49.0891%" y="655.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (40 samples, 3.20%)</title><rect x="48.8391%" y="629" width="3.2026%" height="15" fill="rgb(211,52,33)"/><text x="49.0891%" y="639.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 3.20%)</title><rect x="48.8391%" y="613" width="3.2026%" height="15" fill="rgb(234,58,33)"/><text x="49.0891%" y="623.50">std..</text></g><g><title>__libc_recv (40 samples, 3.20%)</title><rect x="48.8391%" y="597" width="3.2026%" height="15" fill="rgb(220,115,36)"/><text x="49.0891%" y="607.50">__l..</text></g><g><title>entry_SYSCALL_64 (40 samples, 3.20%)</title><rect x="48.8391%" y="581" width="3.2026%" height="15" fill="rgb(243,153,54)"/><text x="49.0891%" y="591.50">ent..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.40%)</title><rect x="51.6413%" y="565" width="0.4003%" height="15" fill="rgb(251,47,18)"/><text x="51.8913%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (44 samples, 3.52%)</title><rect x="48.6789%" y="725" width="3.5228%" height="15" fill="rgb(242,102,42)"/><text x="48.9289%" y="735.50">mys..</text></g><g><title>mysql::conn::Conn::read_packet (42 samples, 3.36%)</title><rect x="48.8391%" y="709" width="3.3627%" height="15" fill="rgb(234,31,38)"/><text x="49.0891%" y="719.50">mys..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 3.36%)</title><rect x="48.8391%" y="693" width="3.3627%" height="15" fill="rgb(221,117,51)"/><text x="49.0891%" y="703.50">&lt;my..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.16%)</title><rect x="52.0416%" y="677" width="0.1601%" height="15" fill="rgb(212,20,18)"/><text x="52.2916%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.16%)</title><rect x="52.0416%" y="661" width="0.1601%" height="15" fill="rgb(245,133,36)"/><text x="52.2916%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.16%)</title><rect x="52.0416%" y="645" width="0.1601%" height="15" fill="rgb(212,6,19)"/><text x="52.2916%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="52.0416%" y="629" width="0.1601%" height="15" fill="rgb(218,1,36)"/><text x="52.2916%" y="639.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.24%)</title><rect x="53.1625%" y="421" width="0.2402%" height="15" fill="rgb(246,84,54)"/><text x="53.4125%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.16%)</title><rect x="53.2426%" y="405" width="0.1601%" height="15" fill="rgb(242,110,6)"/><text x="53.4926%" y="415.50"></text></g><g><title>netif_rx (2 samples, 0.16%)</title><rect x="53.2426%" y="389" width="0.1601%" height="15" fill="rgb(214,47,5)"/><text x="53.4926%" y="399.50"></text></g><g><title>netif_rx_internal (2 samples, 0.16%)</title><rect x="53.2426%" y="373" width="0.1601%" height="15" fill="rgb(218,159,25)"/><text x="53.4926%" y="383.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.48%)</title><rect x="53.0825%" y="437" width="0.4804%" height="15" fill="rgb(215,211,28)"/><text x="53.3325%" y="447.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="54.4436%" y="117" width="0.1601%" height="15" fill="rgb(238,59,32)"/><text x="54.6936%" y="127.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="54.4436%" y="101" width="0.1601%" height="15" fill="rgb(226,82,3)"/><text x="54.6936%" y="111.50"></text></g><g><title>enqueue_task (4 samples, 0.32%)</title><rect x="54.4436%" y="133" width="0.3203%" height="15" fill="rgb(240,164,32)"/><text x="54.6936%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.16%)</title><rect x="54.6037%" y="117" width="0.1601%" height="15" fill="rgb(232,46,7)"/><text x="54.8537%" y="127.50"></text></g><g><title>select_task_rq_fair (5 samples, 0.40%)</title><rect x="54.8439%" y="133" width="0.4003%" height="15" fill="rgb(229,129,53)"/><text x="55.0939%" y="143.50"></text></g><g><title>cpus_share_cache (2 samples, 0.16%)</title><rect x="55.0841%" y="117" width="0.1601%" height="15" fill="rgb(234,188,29)"/><text x="55.3341%" y="127.50"></text></g><g><title>__wake_up_common (13 samples, 1.04%)</title><rect x="54.3635%" y="181" width="1.0408%" height="15" fill="rgb(246,141,4)"/><text x="54.6135%" y="191.50"></text></g><g><title>pollwake (13 samples, 1.04%)</title><rect x="54.3635%" y="165" width="1.0408%" height="15" fill="rgb(229,23,39)"/><text x="54.6135%" y="175.50"></text></g><g><title>try_to_wake_up (12 samples, 0.96%)</title><rect x="54.4436%" y="149" width="0.9608%" height="15" fill="rgb(206,12,3)"/><text x="54.6936%" y="159.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.16%)</title><rect x="55.2442%" y="133" width="0.1601%" height="15" fill="rgb(252,226,20)"/><text x="55.4942%" y="143.50"></text></g><g><title>sock_def_readable (16 samples, 1.28%)</title><rect x="54.3635%" y="213" width="1.2810%" height="15" fill="rgb(216,123,35)"/><text x="54.6135%" y="223.50"></text></g><g><title>__wake_up_common_lock (16 samples, 1.28%)</title><rect x="54.3635%" y="197" width="1.2810%" height="15" fill="rgb(212,68,40)"/><text x="54.6135%" y="207.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.24%)</title><rect x="55.4043%" y="181" width="0.2402%" height="15" fill="rgb(254,125,32)"/><text x="55.6543%" y="191.50"></text></g><g><title>__slab_free (2 samples, 0.16%)</title><rect x="55.8847%" y="165" width="0.1601%" height="15" fill="rgb(253,97,22)"/><text x="56.1347%" y="175.50"></text></g><g><title>kfree (3 samples, 0.24%)</title><rect x="55.8847%" y="181" width="0.2402%" height="15" fill="rgb(241,101,14)"/><text x="56.1347%" y="191.50"></text></g><g><title>__kfree_skb (4 samples, 0.32%)</title><rect x="55.8847%" y="197" width="0.3203%" height="15" fill="rgb(238,103,29)"/><text x="56.1347%" y="207.50"></text></g><g><title>ip_local_deliver (29 samples, 2.32%)</title><rect x="53.9632%" y="309" width="2.3219%" height="15" fill="rgb(233,195,47)"/><text x="54.2132%" y="319.50">i..</text></g><g><title>ip_local_deliver_finish (28 samples, 2.24%)</title><rect x="54.0432%" y="293" width="2.2418%" height="15" fill="rgb(246,218,30)"/><text x="54.2932%" y="303.50">i..</text></g><g><title>ip_protocol_deliver_rcu (27 samples, 2.16%)</title><rect x="54.1233%" y="277" width="2.1617%" height="15" fill="rgb(219,145,47)"/><text x="54.3733%" y="287.50">i..</text></g><g><title>tcp_v4_rcv (27 samples, 2.16%)</title><rect x="54.1233%" y="261" width="2.1617%" height="15" fill="rgb(243,12,26)"/><text x="54.3733%" y="271.50">t..</text></g><g><title>tcp_v4_do_rcv (25 samples, 2.00%)</title><rect x="54.2834%" y="245" width="2.0016%" height="15" fill="rgb(214,87,16)"/><text x="54.5334%" y="255.50">t..</text></g><g><title>tcp_rcv_established (25 samples, 2.00%)</title><rect x="54.2834%" y="229" width="2.0016%" height="15" fill="rgb(208,99,42)"/><text x="54.5334%" y="239.50">t..</text></g><g><title>tcp_ack (8 samples, 0.64%)</title><rect x="55.6445%" y="213" width="0.6405%" height="15" fill="rgb(253,99,2)"/><text x="55.8945%" y="223.50"></text></g><g><title>ip_rcv_core (2 samples, 0.16%)</title><rect x="56.2850%" y="309" width="0.1601%" height="15" fill="rgb(220,168,23)"/><text x="56.5350%" y="319.50"></text></g><g><title>ip_finish_output2 (44 samples, 3.52%)</title><rect x="53.0825%" y="453" width="3.5228%" height="15" fill="rgb(242,38,24)"/><text x="53.3325%" y="463.50">ip_..</text></g><g><title>__local_bh_enable_ip (38 samples, 3.04%)</title><rect x="53.5629%" y="437" width="3.0424%" height="15" fill="rgb(225,182,9)"/><text x="53.8129%" y="447.50">__l..</text></g><g><title>do_softirq (37 samples, 2.96%)</title><rect x="53.6429%" y="421" width="2.9624%" height="15" fill="rgb(243,178,37)"/><text x="53.8929%" y="431.50">do_..</text></g><g><title>do_softirq_own_stack (35 samples, 2.80%)</title><rect x="53.8030%" y="405" width="2.8022%" height="15" fill="rgb(232,139,19)"/><text x="54.0530%" y="415.50">do..</text></g><g><title>__do_softirq (35 samples, 2.80%)</title><rect x="53.8030%" y="389" width="2.8022%" height="15" fill="rgb(225,201,24)"/><text x="54.0530%" y="399.50">__..</text></g><g><title>net_rx_action (35 samples, 2.80%)</title><rect x="53.8030%" y="373" width="2.8022%" height="15" fill="rgb(221,47,46)"/><text x="54.0530%" y="383.50">ne..</text></g><g><title>process_backlog (34 samples, 2.72%)</title><rect x="53.8831%" y="357" width="2.7222%" height="15" fill="rgb(249,23,13)"/><text x="54.1331%" y="367.50">pr..</text></g><g><title>__netif_receive_skb_one_core (34 samples, 2.72%)</title><rect x="53.8831%" y="341" width="2.7222%" height="15" fill="rgb(219,9,5)"/><text x="54.1331%" y="351.50">__..</text></g><g><title>ip_rcv (33 samples, 2.64%)</title><rect x="53.9632%" y="325" width="2.6421%" height="15" fill="rgb(254,171,16)"/><text x="54.2132%" y="335.50">ip..</text></g><g><title>ip_rcv_finish (2 samples, 0.16%)</title><rect x="56.4452%" y="309" width="0.1601%" height="15" fill="rgb(230,171,20)"/><text x="56.6952%" y="319.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.16%)</title><rect x="56.4452%" y="293" width="0.1601%" height="15" fill="rgb(210,71,41)"/><text x="56.6952%" y="303.50"></text></g><g><title>__ip_queue_xmit (48 samples, 3.84%)</title><rect x="52.9223%" y="485" width="3.8431%" height="15" fill="rgb(206,173,20)"/><text x="53.1723%" y="495.50">__ip..</text></g><g><title>ip_output (47 samples, 3.76%)</title><rect x="53.0024%" y="469" width="3.7630%" height="15" fill="rgb(233,88,34)"/><text x="53.2524%" y="479.50">ip_o..</text></g><g><title>ip_finish_output (2 samples, 0.16%)</title><rect x="56.6053%" y="453" width="0.1601%" height="15" fill="rgb(223,209,46)"/><text x="56.8553%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.16%)</title><rect x="56.6053%" y="437" width="0.1601%" height="15" fill="rgb(250,43,18)"/><text x="56.8553%" y="447.50"></text></g><g><title>__tcp_select_window (2 samples, 0.16%)</title><rect x="56.7654%" y="485" width="0.1601%" height="15" fill="rgb(208,13,10)"/><text x="57.0154%" y="495.50"></text></g><g><title>__tcp_transmit_skb (56 samples, 4.48%)</title><rect x="52.7622%" y="501" width="4.4836%" height="15" fill="rgb(212,200,36)"/><text x="53.0122%" y="511.50">__tcp..</text></g><g><title>__tcp_push_pending_frames (62 samples, 4.96%)</title><rect x="52.4420%" y="533" width="4.9640%" height="15" fill="rgb(225,90,30)"/><text x="52.6920%" y="543.50">__tcp_..</text></g><g><title>tcp_write_xmit (61 samples, 4.88%)</title><rect x="52.5220%" y="517" width="4.8839%" height="15" fill="rgb(236,182,39)"/><text x="52.7720%" y="527.50">tcp_wr..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.16%)</title><rect x="57.2458%" y="501" width="0.1601%" height="15" fill="rgb(212,144,35)"/><text x="57.4958%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.24%)</title><rect x="57.4059%" y="501" width="0.2402%" height="15" fill="rgb(228,63,44)"/><text x="57.6559%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.32%)</title><rect x="57.4059%" y="533" width="0.3203%" height="15" fill="rgb(228,109,6)"/><text x="57.6559%" y="543.50"></text></g><g><title>__alloc_skb (4 samples, 0.32%)</title><rect x="57.4059%" y="517" width="0.3203%" height="15" fill="rgb(238,117,24)"/><text x="57.6559%" y="527.50"></text></g><g><title>__x64_sys_sendto (69 samples, 5.52%)</title><rect x="52.3619%" y="613" width="5.5244%" height="15" fill="rgb(242,26,26)"/><text x="52.6119%" y="623.50">__x64_s..</text></g><g><title>__sys_sendto (69 samples, 5.52%)</title><rect x="52.3619%" y="597" width="5.5244%" height="15" fill="rgb(221,92,48)"/><text x="52.6119%" y="607.50">__sys_s..</text></g><g><title>sock_sendmsg (69 samples, 5.52%)</title><rect x="52.3619%" y="581" width="5.5244%" height="15" fill="rgb(209,209,32)"/><text x="52.6119%" y="591.50">sock_se..</text></g><g><title>tcp_sendmsg (69 samples, 5.52%)</title><rect x="52.3619%" y="565" width="5.5244%" height="15" fill="rgb(221,70,22)"/><text x="52.6119%" y="575.50">tcp_sen..</text></g><g><title>tcp_sendmsg_locked (68 samples, 5.44%)</title><rect x="52.4420%" y="549" width="5.4444%" height="15" fill="rgb(248,145,5)"/><text x="52.6920%" y="559.50">tcp_sen..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.16%)</title><rect x="57.7262%" y="533" width="0.1601%" height="15" fill="rgb(226,116,26)"/><text x="57.9762%" y="543.50"></text></g><g><title>do_syscall_64 (71 samples, 5.68%)</title><rect x="52.3619%" y="629" width="5.6845%" height="15" fill="rgb(244,5,17)"/><text x="52.6119%" y="639.50">do_sysc..</text></g><g><title>decor::query_transformer::QueryTransformer::query (333 samples, 26.66%)</title><rect x="31.8655%" y="789" width="26.6613%" height="15" fill="rgb(252,159,33)"/><text x="32.1155%" y="799.50">decor::query_transformer::QueryTransformer:..</text></g><g><title>mysql::conn::transaction::Transaction::commit (125 samples, 10.01%)</title><rect x="48.5188%" y="773" width="10.0080%" height="15" fill="rgb(206,71,0)"/><text x="48.7688%" y="783.50">mysql::conn::t..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (125 samples, 10.01%)</title><rect x="48.5188%" y="757" width="10.0080%" height="15" fill="rgb(233,118,54)"/><text x="48.7688%" y="767.50">mysql::conn::q..</text></g><g><title>mysql::conn::Conn::_query (123 samples, 9.85%)</title><rect x="48.6789%" y="741" width="9.8479%" height="15" fill="rgb(234,83,48)"/><text x="48.9289%" y="751.50">mysql::conn::C..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (79 samples, 6.33%)</title><rect x="52.2018%" y="725" width="6.3251%" height="15" fill="rgb(228,3,54)"/><text x="52.4518%" y="735.50">mysql_co..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (77 samples, 6.16%)</title><rect x="52.3619%" y="709" width="6.1649%" height="15" fill="rgb(226,155,13)"/><text x="52.6119%" y="719.50">std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (77 samples, 6.16%)</title><rect x="52.3619%" y="693" width="6.1649%" height="15" fill="rgb(241,28,37)"/><text x="52.6119%" y="703.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::write (77 samples, 6.16%)</title><rect x="52.3619%" y="677" width="6.1649%" height="15" fill="rgb(233,93,10)"/><text x="52.6119%" y="687.50">std::sys..</text></g><g><title>__libc_send (77 samples, 6.16%)</title><rect x="52.3619%" y="661" width="6.1649%" height="15" fill="rgb(225,113,19)"/><text x="52.6119%" y="671.50">__libc_s..</text></g><g><title>entry_SYSCALL_64 (77 samples, 6.16%)</title><rect x="52.3619%" y="645" width="6.1649%" height="15" fill="rgb(241,2,18)"/><text x="52.6119%" y="655.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.48%)</title><rect x="58.0464%" y="629" width="0.4804%" height="15" fill="rgb(228,207,21)"/><text x="58.2964%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.5268%" y="773" width="0.1601%" height="15" fill="rgb(213,211,35)"/><text x="58.7768%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (342 samples, 27.38%)</title><rect x="31.6253%" y="821" width="27.3819%" height="15" fill="rgb(209,83,10)"/><text x="31.8753%" y="831.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (339 samples, 27.14%)</title><rect x="31.8655%" y="805" width="27.1417%" height="15" fill="rgb(209,164,1)"/><text x="32.1155%" y="815.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (6 samples, 0.48%)</title><rect x="58.5268%" y="789" width="0.4804%" height="15" fill="rgb(213,184,43)"/><text x="58.7768%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.32%)</title><rect x="58.6869%" y="773" width="0.3203%" height="15" fill="rgb(231,61,34)"/><text x="58.9369%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.24%)</title><rect x="58.7670%" y="757" width="0.2402%" height="15" fill="rgb(235,75,3)"/><text x="59.0170%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.16%)</title><rect x="59.0072%" y="821" width="0.1601%" height="15" fill="rgb(220,106,47)"/><text x="59.2572%" y="831.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (4 samples, 0.32%)</title><rect x="59.2474%" y="821" width="0.3203%" height="15" fill="rgb(210,196,33)"/><text x="59.4974%" y="831.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.16%)</title><rect x="59.5677%" y="821" width="0.1601%" height="15" fill="rgb(229,154,42)"/><text x="59.8177%" y="831.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.16%)</title><rect x="59.5677%" y="805" width="0.1601%" height="15" fill="rgb(228,114,26)"/><text x="59.8177%" y="815.50"></text></g><g><title>regex::compile::Compiler::c (2 samples, 0.16%)</title><rect x="59.5677%" y="789" width="0.1601%" height="15" fill="rgb(208,144,1)"/><text x="59.8177%" y="799.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (2 samples, 0.16%)</title><rect x="59.5677%" y="773" width="0.1601%" height="15" fill="rgb(239,112,37)"/><text x="59.8177%" y="783.50"></text></g><g><title>regex::compile::Compiler::c_class (2 samples, 0.16%)</title><rect x="59.5677%" y="757" width="0.1601%" height="15" fill="rgb(210,96,50)"/><text x="59.8177%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (17 samples, 1.36%)</title><rect x="59.8078%" y="645" width="1.3611%" height="15" fill="rgb(222,178,2)"/><text x="60.0578%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 1.36%)</title><rect x="59.8078%" y="629" width="1.3611%" height="15" fill="rgb(226,74,18)"/><text x="60.0578%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (17 samples, 1.36%)</title><rect x="59.8078%" y="613" width="1.3611%" height="15" fill="rgb(225,67,54)"/><text x="60.0578%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 1.36%)</title><rect x="59.8078%" y="597" width="1.3611%" height="15" fill="rgb(251,92,32)"/><text x="60.0578%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 1.36%)</title><rect x="59.8078%" y="581" width="1.3611%" height="15" fill="rgb(228,149,22)"/><text x="60.0578%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (18 samples, 1.44%)</title><rect x="59.8078%" y="741" width="1.4412%" height="15" fill="rgb(243,54,13)"/><text x="60.0578%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::expected (18 samples, 1.44%)</title><rect x="59.8078%" y="725" width="1.4412%" height="15" fill="rgb(243,180,28)"/><text x="60.0578%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 1.44%)</title><rect x="59.8078%" y="709" width="1.4412%" height="15" fill="rgb(208,167,24)"/><text x="60.0578%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 1.44%)</title><rect x="59.8078%" y="693" width="1.4412%" height="15" fill="rgb(245,73,45)"/><text x="60.0578%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 1.44%)</title><rect x="59.8078%" y="677" width="1.4412%" height="15" fill="rgb(237,203,48)"/><text x="60.0578%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 1.44%)</title><rect x="59.8078%" y="661" width="1.4412%" height="15" fill="rgb(211,197,16)"/><text x="60.0578%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (20 samples, 1.60%)</title><rect x="59.7278%" y="821" width="1.6013%" height="15" fill="rgb(243,99,51)"/><text x="59.9778%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (20 samples, 1.60%)</title><rect x="59.7278%" y="805" width="1.6013%" height="15" fill="rgb(215,123,29)"/><text x="59.9778%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (20 samples, 1.60%)</title><rect x="59.7278%" y="789" width="1.6013%" height="15" fill="rgb(239,186,37)"/><text x="59.9778%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (20 samples, 1.60%)</title><rect x="59.7278%" y="773" width="1.6013%" height="15" fill="rgb(252,136,39)"/><text x="59.9778%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (20 samples, 1.60%)</title><rect x="59.7278%" y="757" width="1.6013%" height="15" fill="rgb(223,213,32)"/><text x="59.9778%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.24%)</title><rect x="61.3291%" y="821" width="0.2402%" height="15" fill="rgb(233,115,5)"/><text x="61.5791%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (2 samples, 0.16%)</title><rect x="61.4091%" y="805" width="0.1601%" height="15" fill="rgb(207,226,44)"/><text x="61.6591%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.16%)</title><rect x="61.5693%" y="821" width="0.1601%" height="15" fill="rgb(208,126,0)"/><text x="61.8193%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.16%)</title><rect x="61.5693%" y="805" width="0.1601%" height="15" fill="rgb(244,66,21)"/><text x="61.8193%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.16%)</title><rect x="61.5693%" y="789" width="0.1601%" height="15" fill="rgb(222,97,12)"/><text x="61.8193%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (2 samples, 0.16%)</title><rect x="61.7294%" y="821" width="0.1601%" height="15" fill="rgb(219,213,19)"/><text x="61.9794%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.16%)</title><rect x="61.7294%" y="805" width="0.1601%" height="15" fill="rgb(252,169,30)"/><text x="61.9794%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (2 samples, 0.16%)</title><rect x="61.7294%" y="789" width="0.1601%" height="15" fill="rgb(206,32,51)"/><text x="61.9794%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.16%)</title><rect x="61.7294%" y="773" width="0.1601%" height="15" fill="rgb(250,172,42)"/><text x="61.9794%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.16%)</title><rect x="61.7294%" y="757" width="0.1601%" height="15" fill="rgb(209,34,43)"/><text x="61.9794%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.24%)</title><rect x="61.9696%" y="629" width="0.2402%" height="15" fill="rgb(223,11,35)"/><text x="62.2196%" y="639.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="61.9696%" y="613" width="0.2402%" height="15" fill="rgb(251,219,26)"/><text x="62.2196%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.40%)</title><rect x="61.9696%" y="645" width="0.4003%" height="15" fill="rgb(231,119,3)"/><text x="62.2196%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="61.9696%" y="693" width="0.5604%" height="15" fill="rgb(216,97,11)"/><text x="62.2196%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (7 samples, 0.56%)</title><rect x="61.9696%" y="677" width="0.5604%" height="15" fill="rgb(223,59,9)"/><text x="62.2196%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (7 samples, 0.56%)</title><rect x="61.9696%" y="661" width="0.5604%" height="15" fill="rgb(233,93,31)"/><text x="62.2196%" y="671.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.16%)</title><rect x="62.3699%" y="645" width="0.1601%" height="15" fill="rgb(239,81,33)"/><text x="62.6199%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.16%)</title><rect x="62.6101%" y="645" width="0.1601%" height="15" fill="rgb(213,120,34)"/><text x="62.8601%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="62.6101%" y="629" width="0.1601%" height="15" fill="rgb(243,49,53)"/><text x="62.8601%" y="639.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="63.5709%" y="357" width="0.1601%" height="15" fill="rgb(247,216,33)"/><text x="63.8209%" y="367.50"></text></g><g><title>psi_group_change (2 samples, 0.16%)</title><rect x="63.5709%" y="341" width="0.1601%" height="15" fill="rgb(226,26,14)"/><text x="63.8209%" y="351.50"></text></g><g><title>sk_wait_data (9 samples, 0.72%)</title><rect x="63.0905%" y="437" width="0.7206%" height="15" fill="rgb(215,49,53)"/><text x="63.3405%" y="447.50"></text></g><g><title>wait_woken (8 samples, 0.64%)</title><rect x="63.1705%" y="421" width="0.6405%" height="15" fill="rgb(245,162,40)"/><text x="63.4205%" y="431.50"></text></g><g><title>schedule_timeout (8 samples, 0.64%)</title><rect x="63.1705%" y="405" width="0.6405%" height="15" fill="rgb(229,68,17)"/><text x="63.4205%" y="415.50"></text></g><g><title>schedule (8 samples, 0.64%)</title><rect x="63.1705%" y="389" width="0.6405%" height="15" fill="rgb(213,182,10)"/><text x="63.4205%" y="399.50"></text></g><g><title>__schedule (7 samples, 0.56%)</title><rect x="63.2506%" y="373" width="0.5604%" height="15" fill="rgb(245,125,30)"/><text x="63.5006%" y="383.50"></text></g><g><title>do_syscall_64 (13 samples, 1.04%)</title><rect x="62.9303%" y="517" width="1.0408%" height="15" fill="rgb(232,202,2)"/><text x="63.1803%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (13 samples, 1.04%)</title><rect x="62.9303%" y="501" width="1.0408%" height="15" fill="rgb(237,140,51)"/><text x="63.1803%" y="511.50"></text></g><g><title>__sys_recvfrom (13 samples, 1.04%)</title><rect x="62.9303%" y="485" width="1.0408%" height="15" fill="rgb(236,157,25)"/><text x="63.1803%" y="495.50"></text></g><g><title>inet_recvmsg (12 samples, 0.96%)</title><rect x="63.0104%" y="469" width="0.9608%" height="15" fill="rgb(219,209,0)"/><text x="63.2604%" y="479.50"></text></g><g><title>tcp_recvmsg (12 samples, 0.96%)</title><rect x="63.0104%" y="453" width="0.9608%" height="15" fill="rgb(240,116,54)"/><text x="63.2604%" y="463.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (19 samples, 1.52%)</title><rect x="62.7702%" y="629" width="1.5212%" height="15" fill="rgb(216,10,36)"/><text x="63.0202%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (18 samples, 1.44%)</title><rect x="62.8503%" y="613" width="1.4412%" height="15" fill="rgb(222,72,44)"/><text x="63.1003%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::read (18 samples, 1.44%)</title><rect x="62.8503%" y="597" width="1.4412%" height="15" fill="rgb(232,159,9)"/><text x="63.1003%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::read (18 samples, 1.44%)</title><rect x="62.8503%" y="581" width="1.4412%" height="15" fill="rgb(210,39,32)"/><text x="63.1003%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (18 samples, 1.44%)</title><rect x="62.8503%" y="565" width="1.4412%" height="15" fill="rgb(216,194,45)"/><text x="63.1003%" y="575.50"></text></g><g><title>__libc_recv (18 samples, 1.44%)</title><rect x="62.8503%" y="549" width="1.4412%" height="15" fill="rgb(218,18,35)"/><text x="63.1003%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 1.36%)</title><rect x="62.9303%" y="533" width="1.3611%" height="15" fill="rgb(207,83,51)"/><text x="63.1803%" y="543.50"></text></g><g><title>prepare_exit_to_usermode (4 samples, 0.32%)</title><rect x="63.9712%" y="517" width="0.3203%" height="15" fill="rgb(225,63,43)"/><text x="64.2212%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (30 samples, 2.40%)</title><rect x="61.9696%" y="821" width="2.4019%" height="15" fill="rgb(207,57,36)"/><text x="62.2196%" y="831.50">st..</text></g><g><title>std::panic::catch_unwind (30 samples, 2.40%)</title><rect x="61.9696%" y="805" width="2.4019%" height="15" fill="rgb(216,99,33)"/><text x="62.2196%" y="815.50">st..</text></g><g><title>std::panicking::try (30 samples, 2.40%)</title><rect x="61.9696%" y="789" width="2.4019%" height="15" fill="rgb(225,42,16)"/><text x="62.2196%" y="799.50">st..</text></g><g><title>std::panicking::try::do_call (30 samples, 2.40%)</title><rect x="61.9696%" y="773" width="2.4019%" height="15" fill="rgb(220,201,45)"/><text x="62.2196%" y="783.50">st..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (30 samples, 2.40%)</title><rect x="61.9696%" y="757" width="2.4019%" height="15" fill="rgb(225,33,4)"/><text x="62.2196%" y="767.50">co..</text></g><g><title>std::rt::lang_start::_{{closure}} (30 samples, 2.40%)</title><rect x="61.9696%" y="741" width="2.4019%" height="15" fill="rgb(224,33,50)"/><text x="62.2196%" y="751.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 2.40%)</title><rect x="61.9696%" y="725" width="2.4019%" height="15" fill="rgb(246,198,51)"/><text x="62.2196%" y="735.50">st..</text></g><g><title>lobsters::main (30 samples, 2.40%)</title><rect x="61.9696%" y="709" width="2.4019%" height="15" fill="rgb(205,22,4)"/><text x="62.2196%" y="719.50">lo..</text></g><g><title>mysql::conn::Conn::_query (22 samples, 1.76%)</title><rect x="62.6101%" y="693" width="1.7614%" height="15" fill="rgb(206,3,8)"/><text x="62.8601%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (22 samples, 1.76%)</title><rect x="62.6101%" y="677" width="1.7614%" height="15" fill="rgb(251,23,15)"/><text x="62.8601%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (22 samples, 1.76%)</title><rect x="62.6101%" y="661" width="1.7614%" height="15" fill="rgb(252,88,28)"/><text x="62.8601%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.60%)</title><rect x="62.7702%" y="645" width="1.6013%" height="15" fill="rgb(212,127,14)"/><text x="63.0202%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="64.3715%" y="741" width="0.2402%" height="15" fill="rgb(247,145,37)"/><text x="64.6215%" y="751.50"></text></g><g><title>[unknown] (730 samples, 58.45%)</title><rect x="6.4852%" y="837" width="58.4468%" height="15" fill="rgb(209,117,53)"/><text x="6.7352%" y="847.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.56%)</title><rect x="64.3715%" y="821" width="0.5604%" height="15" fill="rgb(212,90,42)"/><text x="64.6215%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (7 samples, 0.56%)</title><rect x="64.3715%" y="805" width="0.5604%" height="15" fill="rgb(218,164,37)"/><text x="64.6215%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (7 samples, 0.56%)</title><rect x="64.3715%" y="789" width="0.5604%" height="15" fill="rgb(246,65,34)"/><text x="64.6215%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (7 samples, 0.56%)</title><rect x="64.3715%" y="773" width="0.5604%" height="15" fill="rgb(231,100,33)"/><text x="64.6215%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (7 samples, 0.56%)</title><rect x="64.3715%" y="757" width="0.5604%" height="15" fill="rgb(228,126,14)"/><text x="64.6215%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.32%)</title><rect x="64.6117%" y="741" width="0.3203%" height="15" fill="rgb(215,173,21)"/><text x="64.8617%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.24%)</title><rect x="64.6918%" y="725" width="0.2402%" height="15" fill="rgb(210,6,40)"/><text x="64.9418%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="64.7718%" y="709" width="0.1601%" height="15" fill="rgb(212,48,18)"/><text x="65.0218%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="64.7718%" y="693" width="0.1601%" height="15" fill="rgb(230,214,11)"/><text x="65.0218%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.16%)</title><rect x="65.3323%" y="677" width="0.1601%" height="15" fill="rgb(254,105,39)"/><text x="65.5823%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.4924%" y="629" width="0.1601%" height="15" fill="rgb(245,158,5)"/><text x="65.7424%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="65.4924%" y="613" width="0.1601%" height="15" fill="rgb(249,208,11)"/><text x="65.7424%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="65.6525%" y="629" width="0.1601%" height="15" fill="rgb(210,39,28)"/><text x="65.9025%" y="639.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.72%)</title><rect x="65.2522%" y="693" width="0.7206%" height="15" fill="rgb(211,56,53)"/><text x="65.5022%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.48%)</title><rect x="65.4924%" y="677" width="0.4804%" height="15" fill="rgb(226,201,30)"/><text x="65.7424%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.48%)</title><rect x="65.4924%" y="661" width="0.4804%" height="15" fill="rgb(239,101,34)"/><text x="65.7424%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.48%)</title><rect x="65.4924%" y="645" width="0.4804%" height="15" fill="rgb(226,209,5)"/><text x="65.7424%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.16%)</title><rect x="65.8127%" y="629" width="0.1601%" height="15" fill="rgb(250,105,47)"/><text x="66.0627%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="65.8127%" y="613" width="0.1601%" height="15" fill="rgb(230,72,3)"/><text x="66.0627%" y="623.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.16%)</title><rect x="66.0528%" y="693" width="0.1601%" height="15" fill="rgb(232,218,39)"/><text x="66.3028%" y="703.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.16%)</title><rect x="66.0528%" y="677" width="0.1601%" height="15" fill="rgb(248,166,6)"/><text x="66.3028%" y="687.50"></text></g><g><title>dst_release (2 samples, 0.16%)</title><rect x="66.9335%" y="453" width="0.1601%" height="15" fill="rgb(247,89,20)"/><text x="67.1835%" y="463.50"></text></g><g><title>__kfree_skb (3 samples, 0.24%)</title><rect x="66.9335%" y="485" width="0.2402%" height="15" fill="rgb(248,130,54)"/><text x="67.1835%" y="495.50"></text></g><g><title>skb_release_head_state (3 samples, 0.24%)</title><rect x="66.9335%" y="469" width="0.2402%" height="15" fill="rgb(234,196,4)"/><text x="67.1835%" y="479.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.16%)</title><rect x="67.2538%" y="485" width="0.1601%" height="15" fill="rgb(250,143,31)"/><text x="67.5038%" y="495.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.16%)</title><rect x="67.2538%" y="469" width="0.1601%" height="15" fill="rgb(211,110,34)"/><text x="67.5038%" y="479.50"></text></g><g><title>ip_output (2 samples, 0.16%)</title><rect x="67.2538%" y="453" width="0.1601%" height="15" fill="rgb(215,124,48)"/><text x="67.5038%" y="463.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.16%)</title><rect x="67.2538%" y="437" width="0.1601%" height="15" fill="rgb(216,46,13)"/><text x="67.5038%" y="447.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.16%)</title><rect x="67.2538%" y="421" width="0.1601%" height="15" fill="rgb(205,184,25)"/><text x="67.5038%" y="431.50"></text></g><g><title>do_softirq (2 samples, 0.16%)</title><rect x="67.2538%" y="405" width="0.1601%" height="15" fill="rgb(228,1,10)"/><text x="67.5038%" y="415.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.16%)</title><rect x="67.2538%" y="389" width="0.1601%" height="15" fill="rgb(213,116,27)"/><text x="67.5038%" y="399.50"></text></g><g><title>__do_softirq (2 samples, 0.16%)</title><rect x="67.2538%" y="373" width="0.1601%" height="15" fill="rgb(241,95,50)"/><text x="67.5038%" y="383.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.16%)</title><rect x="67.4139%" y="469" width="0.1601%" height="15" fill="rgb(238,48,32)"/><text x="67.6639%" y="479.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.32%)</title><rect x="67.8943%" y="405" width="0.3203%" height="15" fill="rgb(235,113,49)"/><text x="68.1443%" y="415.50"></text></g><g><title>dequeue_entity (4 samples, 0.32%)</title><rect x="67.8943%" y="389" width="0.3203%" height="15" fill="rgb(205,127,43)"/><text x="68.1443%" y="399.50"></text></g><g><title>update_curr (2 samples, 0.16%)</title><rect x="68.0544%" y="373" width="0.1601%" height="15" fill="rgb(250,162,2)"/><text x="68.3044%" y="383.50"></text></g><g><title>cpuacct_charge (2 samples, 0.16%)</title><rect x="68.0544%" y="357" width="0.1601%" height="15" fill="rgb(220,13,41)"/><text x="68.3044%" y="367.50"></text></g><g><title>finish_task_switch (2 samples, 0.16%)</title><rect x="68.2146%" y="405" width="0.1601%" height="15" fill="rgb(249,221,25)"/><text x="68.4646%" y="415.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.16%)</title><rect x="68.3747%" y="405" width="0.1601%" height="15" fill="rgb(215,208,19)"/><text x="68.6247%" y="415.50"></text></g><g><title>newidle_balance (2 samples, 0.16%)</title><rect x="68.3747%" y="389" width="0.1601%" height="15" fill="rgb(236,175,2)"/><text x="68.6247%" y="399.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.24%)</title><rect x="68.6149%" y="405" width="0.2402%" height="15" fill="rgb(241,52,2)"/><text x="68.8649%" y="415.50"></text></g><g><title>sk_wait_data (19 samples, 1.52%)</title><rect x="67.4139%" y="485" width="1.5212%" height="15" fill="rgb(248,140,14)"/><text x="67.6639%" y="495.50"></text></g><g><title>wait_woken (17 samples, 1.36%)</title><rect x="67.5741%" y="469" width="1.3611%" height="15" fill="rgb(253,22,42)"/><text x="67.8241%" y="479.50"></text></g><g><title>schedule_timeout (16 samples, 1.28%)</title><rect x="67.6541%" y="453" width="1.2810%" height="15" fill="rgb(234,61,47)"/><text x="67.9041%" y="463.50"></text></g><g><title>schedule (15 samples, 1.20%)</title><rect x="67.7342%" y="437" width="1.2010%" height="15" fill="rgb(208,226,15)"/><text x="67.9842%" y="447.50"></text></g><g><title>__schedule (15 samples, 1.20%)</title><rect x="67.7342%" y="421" width="1.2010%" height="15" fill="rgb(217,221,4)"/><text x="67.9842%" y="431.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.16%)</title><rect x="68.9351%" y="485" width="0.1601%" height="15" fill="rgb(212,174,34)"/><text x="69.1851%" y="495.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.16%)</title><rect x="68.9351%" y="469" width="0.1601%" height="15" fill="rgb(253,83,4)"/><text x="69.1851%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (31 samples, 2.48%)</title><rect x="66.6934%" y="549" width="2.4820%" height="15" fill="rgb(250,195,49)"/><text x="66.9434%" y="559.50">__..</text></g><g><title>__sys_recvfrom (31 samples, 2.48%)</title><rect x="66.6934%" y="533" width="2.4820%" height="15" fill="rgb(241,192,25)"/><text x="66.9434%" y="543.50">__..</text></g><g><title>inet_recvmsg (31 samples, 2.48%)</title><rect x="66.6934%" y="517" width="2.4820%" height="15" fill="rgb(208,124,10)"/><text x="66.9434%" y="527.50">in..</text></g><g><title>tcp_recvmsg (31 samples, 2.48%)</title><rect x="66.6934%" y="501" width="2.4820%" height="15" fill="rgb(222,33,0)"/><text x="66.9434%" y="511.50">tc..</text></g><g><title>do_syscall_64 (32 samples, 2.56%)</title><rect x="66.6934%" y="565" width="2.5620%" height="15" fill="rgb(234,209,28)"/><text x="66.9434%" y="575.50">do..</text></g><g><title>entry_SYSCALL_64 (33 samples, 2.64%)</title><rect x="66.6934%" y="581" width="2.6421%" height="15" fill="rgb(224,11,23)"/><text x="66.9434%" y="591.50">en..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 3.12%)</title><rect x="66.4532%" y="677" width="3.1225%" height="15" fill="rgb(232,99,1)"/><text x="66.7032%" y="687.50">&lt;st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (39 samples, 3.12%)</title><rect x="66.4532%" y="661" width="3.1225%" height="15" fill="rgb(237,95,45)"/><text x="66.7032%" y="671.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read (39 samples, 3.12%)</title><rect x="66.4532%" y="645" width="3.1225%" height="15" fill="rgb(208,109,11)"/><text x="66.7032%" y="655.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (39 samples, 3.12%)</title><rect x="66.4532%" y="629" width="3.1225%" height="15" fill="rgb(216,190,48)"/><text x="66.7032%" y="639.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (39 samples, 3.12%)</title><rect x="66.4532%" y="613" width="3.1225%" height="15" fill="rgb(251,171,36)"/><text x="66.7032%" y="623.50">std..</text></g><g><title>__libc_recv (39 samples, 3.12%)</title><rect x="66.4532%" y="597" width="3.1225%" height="15" fill="rgb(230,62,22)"/><text x="66.7032%" y="607.50">__l..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.24%)</title><rect x="69.3355%" y="581" width="0.2402%" height="15" fill="rgb(225,114,35)"/><text x="69.5855%" y="591.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (46 samples, 3.68%)</title><rect x="66.2930%" y="693" width="3.6829%" height="15" fill="rgb(215,118,42)"/><text x="66.5430%" y="703.50">msql..</text></g><g><title>msql_srv::packet::packet (3 samples, 0.24%)</title><rect x="69.7358%" y="677" width="0.2402%" height="15" fill="rgb(243,119,21)"/><text x="69.9858%" y="687.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.16%)</title><rect x="70.9367%" y="405" width="0.1601%" height="15" fill="rgb(252,177,53)"/><text x="71.1867%" y="415.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.56%)</title><rect x="70.7766%" y="421" width="0.5604%" height="15" fill="rgb(237,209,29)"/><text x="71.0266%" y="431.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.24%)</title><rect x="71.0969%" y="405" width="0.2402%" height="15" fill="rgb(212,65,23)"/><text x="71.3469%" y="415.50"></text></g><g><title>netif_skb_features (3 samples, 0.24%)</title><rect x="71.0969%" y="389" width="0.2402%" height="15" fill="rgb(230,222,46)"/><text x="71.3469%" y="399.50"></text></g><g><title>skb_network_protocol (2 samples, 0.16%)</title><rect x="71.1769%" y="373" width="0.1601%" height="15" fill="rgb(215,135,32)"/><text x="71.4269%" y="383.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.16%)</title><rect x="71.6573%" y="309" width="0.1601%" height="15" fill="rgb(246,101,22)"/><text x="71.9073%" y="319.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.16%)</title><rect x="72.1377%" y="229" width="0.1601%" height="15" fill="rgb(206,107,13)"/><text x="72.3877%" y="239.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.16%)</title><rect x="72.4580%" y="133" width="0.1601%" height="15" fill="rgb(250,100,44)"/><text x="72.7080%" y="143.50"></text></g><g><title>enqueue_task (6 samples, 0.48%)</title><rect x="72.6181%" y="133" width="0.4804%" height="15" fill="rgb(231,147,38)"/><text x="72.8681%" y="143.50"></text></g><g><title>psi_task_change (6 samples, 0.48%)</title><rect x="72.6181%" y="117" width="0.4804%" height="15" fill="rgb(229,8,40)"/><text x="72.8681%" y="127.50"></text></g><g><title>psi_group_change (3 samples, 0.24%)</title><rect x="72.8583%" y="101" width="0.2402%" height="15" fill="rgb(221,135,30)"/><text x="73.1083%" y="111.50"></text></g><g><title>record_times (2 samples, 0.16%)</title><rect x="72.9384%" y="85" width="0.1601%" height="15" fill="rgb(249,193,18)"/><text x="73.1884%" y="95.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.40%)</title><rect x="73.0985%" y="133" width="0.4003%" height="15" fill="rgb(209,133,39)"/><text x="73.3485%" y="143.50"></text></g><g><title>enqueue_entity (4 samples, 0.32%)</title><rect x="73.1785%" y="117" width="0.3203%" height="15" fill="rgb(232,100,14)"/><text x="73.4285%" y="127.50"></text></g><g><title>update_load_avg (2 samples, 0.16%)</title><rect x="73.3387%" y="101" width="0.1601%" height="15" fill="rgb(224,185,1)"/><text x="73.5887%" y="111.50"></text></g><g><title>__wake_up_common (16 samples, 1.28%)</title><rect x="72.2978%" y="165" width="1.2810%" height="15" fill="rgb(223,139,8)"/><text x="72.5478%" y="175.50"></text></g><g><title>try_to_wake_up (15 samples, 1.20%)</title><rect x="72.3779%" y="149" width="1.2010%" height="15" fill="rgb(232,213,38)"/><text x="72.6279%" y="159.50"></text></g><g><title>sock_def_readable (17 samples, 1.36%)</title><rect x="72.2978%" y="197" width="1.3611%" height="15" fill="rgb(207,94,22)"/><text x="72.5478%" y="207.50"></text></g><g><title>__wake_up_common_lock (17 samples, 1.36%)</title><rect x="72.2978%" y="181" width="1.3611%" height="15" fill="rgb(219,183,54)"/><text x="72.5478%" y="191.50"></text></g><g><title>__kfree_skb (2 samples, 0.16%)</title><rect x="73.8191%" y="181" width="0.1601%" height="15" fill="rgb(216,185,54)"/><text x="74.0691%" y="191.50"></text></g><g><title>tcp_ack (5 samples, 0.40%)</title><rect x="73.6589%" y="197" width="0.4003%" height="15" fill="rgb(254,217,39)"/><text x="73.9089%" y="207.50"></text></g><g><title>ip_local_deliver (30 samples, 2.40%)</title><rect x="71.8175%" y="293" width="2.4019%" height="15" fill="rgb(240,178,23)"/><text x="72.0675%" y="303.50">ip..</text></g><g><title>ip_local_deliver_finish (30 samples, 2.40%)</title><rect x="71.8175%" y="277" width="2.4019%" height="15" fill="rgb(218,11,47)"/><text x="72.0675%" y="287.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (30 samples, 2.40%)</title><rect x="71.8175%" y="261" width="2.4019%" height="15" fill="rgb(218,51,51)"/><text x="72.0675%" y="271.50">ip..</text></g><g><title>tcp_v4_rcv (30 samples, 2.40%)</title><rect x="71.8175%" y="245" width="2.4019%" height="15" fill="rgb(238,126,27)"/><text x="72.0675%" y="255.50">tc..</text></g><g><title>tcp_v4_do_rcv (24 samples, 1.92%)</title><rect x="72.2978%" y="229" width="1.9215%" height="15" fill="rgb(249,202,22)"/><text x="72.5478%" y="239.50">t..</text></g><g><title>tcp_rcv_established (24 samples, 1.92%)</title><rect x="72.2978%" y="213" width="1.9215%" height="15" fill="rgb(254,195,49)"/><text x="72.5478%" y="223.50">t..</text></g><g><title>__netif_receive_skb_one_core (33 samples, 2.64%)</title><rect x="71.6573%" y="325" width="2.6421%" height="15" fill="rgb(208,123,14)"/><text x="71.9073%" y="335.50">__..</text></g><g><title>ip_rcv (31 samples, 2.48%)</title><rect x="71.8175%" y="309" width="2.4820%" height="15" fill="rgb(224,200,8)"/><text x="72.0675%" y="319.50">ip..</text></g><g><title>ip_finish_output2 (46 samples, 3.68%)</title><rect x="70.6966%" y="437" width="3.6829%" height="15" fill="rgb(217,61,36)"/><text x="70.9466%" y="447.50">ip_f..</text></g><g><title>__local_bh_enable_ip (38 samples, 3.04%)</title><rect x="71.3371%" y="421" width="3.0424%" height="15" fill="rgb(206,35,45)"/><text x="71.5871%" y="431.50">__l..</text></g><g><title>do_softirq (38 samples, 3.04%)</title><rect x="71.3371%" y="405" width="3.0424%" height="15" fill="rgb(217,65,33)"/><text x="71.5871%" y="415.50">do_..</text></g><g><title>do_softirq_own_stack (37 samples, 2.96%)</title><rect x="71.4171%" y="389" width="2.9624%" height="15" fill="rgb(222,158,48)"/><text x="71.6671%" y="399.50">do_..</text></g><g><title>__do_softirq (37 samples, 2.96%)</title><rect x="71.4171%" y="373" width="2.9624%" height="15" fill="rgb(254,2,54)"/><text x="71.6671%" y="383.50">__d..</text></g><g><title>net_rx_action (36 samples, 2.88%)</title><rect x="71.4972%" y="357" width="2.8823%" height="15" fill="rgb(250,143,38)"/><text x="71.7472%" y="367.50">ne..</text></g><g><title>process_backlog (35 samples, 2.80%)</title><rect x="71.5773%" y="341" width="2.8022%" height="15" fill="rgb(248,25,0)"/><text x="71.8273%" y="351.50">pr..</text></g><g><title>__ip_queue_xmit (49 samples, 3.92%)</title><rect x="70.5364%" y="469" width="3.9231%" height="15" fill="rgb(206,152,27)"/><text x="70.7864%" y="479.50">__ip..</text></g><g><title>ip_output (48 samples, 3.84%)</title><rect x="70.6165%" y="453" width="3.8431%" height="15" fill="rgb(240,77,30)"/><text x="70.8665%" y="463.50">ip_o..</text></g><g><title>__tcp_push_pending_frames (54 samples, 4.32%)</title><rect x="70.2962%" y="517" width="4.3235%" height="15" fill="rgb(231,5,3)"/><text x="70.5462%" y="527.50">__tcp..</text></g><g><title>tcp_write_xmit (53 samples, 4.24%)</title><rect x="70.3763%" y="501" width="4.2434%" height="15" fill="rgb(207,226,32)"/><text x="70.6263%" y="511.50">tcp_w..</text></g><g><title>__tcp_transmit_skb (52 samples, 4.16%)</title><rect x="70.4564%" y="485" width="4.1633%" height="15" fill="rgb(222,207,47)"/><text x="70.7064%" y="495.50">__tcp..</text></g><g><title>__ksize (3 samples, 0.24%)</title><rect x="74.6998%" y="485" width="0.2402%" height="15" fill="rgb(229,115,45)"/><text x="74.9498%" y="495.50"></text></g><g><title>sock_sendmsg (61 samples, 4.88%)</title><rect x="70.1361%" y="565" width="4.8839%" height="15" fill="rgb(224,191,6)"/><text x="70.3861%" y="575.50">sock_s..</text></g><g><title>tcp_sendmsg (60 samples, 4.80%)</title><rect x="70.2162%" y="549" width="4.8038%" height="15" fill="rgb(230,227,24)"/><text x="70.4662%" y="559.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (60 samples, 4.80%)</title><rect x="70.2162%" y="533" width="4.8038%" height="15" fill="rgb(228,80,19)"/><text x="70.4662%" y="543.50">tcp_se..</text></g><g><title>sk_stream_alloc_skb (5 samples, 0.40%)</title><rect x="74.6197%" y="517" width="0.4003%" height="15" fill="rgb(247,229,0)"/><text x="74.8697%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.32%)</title><rect x="74.6998%" y="501" width="0.3203%" height="15" fill="rgb(237,194,15)"/><text x="74.9498%" y="511.50"></text></g><g><title>__x64_sys_sendto (63 samples, 5.04%)</title><rect x="70.0560%" y="597" width="5.0440%" height="15" fill="rgb(219,203,20)"/><text x="70.3060%" y="607.50">__x64_..</text></g><g><title>__sys_sendto (63 samples, 5.04%)</title><rect x="70.0560%" y="581" width="5.0440%" height="15" fill="rgb(234,128,8)"/><text x="70.3060%" y="591.50">__sys_..</text></g><g><title>do_syscall_64 (65 samples, 5.20%)</title><rect x="69.9760%" y="613" width="5.2042%" height="15" fill="rgb(248,202,8)"/><text x="70.2260%" y="623.50">do_sys..</text></g><g><title>entry_SYSCALL_64 (67 samples, 5.36%)</title><rect x="69.9760%" y="629" width="5.3643%" height="15" fill="rgb(206,104,37)"/><text x="70.2260%" y="639.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="75.1801%" y="613" width="0.1601%" height="15" fill="rgb(223,8,27)"/><text x="75.4301%" y="623.50"></text></g><g><title>__libc_send (68 samples, 5.44%)</title><rect x="69.9760%" y="645" width="5.4444%" height="15" fill="rgb(216,217,28)"/><text x="70.2260%" y="655.50">__libc_..</text></g><g><title>decor::Shim::run_on_tcp (130 samples, 10.41%)</title><rect x="65.0921%" y="725" width="10.4083%" height="15" fill="rgb(249,199,1)"/><text x="65.3421%" y="735.50">decor::Shim::ru..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (130 samples, 10.41%)</title><rect x="65.0921%" y="709" width="10.4083%" height="15" fill="rgb(240,85,17)"/><text x="65.3421%" y="719.50">msql_srv::Mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (69 samples, 5.52%)</title><rect x="69.9760%" y="693" width="5.5244%" height="15" fill="rgb(206,108,45)"/><text x="70.2260%" y="703.50">std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (69 samples, 5.52%)</title><rect x="69.9760%" y="677" width="5.5244%" height="15" fill="rgb(245,210,41)"/><text x="70.2260%" y="687.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::write (69 samples, 5.52%)</title><rect x="69.9760%" y="661" width="5.5244%" height="15" fill="rgb(206,13,37)"/><text x="70.2260%" y="671.50">std::sy..</text></g><g><title>__GI___clone (134 samples, 10.73%)</title><rect x="64.9319%" y="837" width="10.7286%" height="15" fill="rgb(250,61,18)"/><text x="65.1819%" y="847.50">__GI___clone</text></g><g><title>start_thread (134 samples, 10.73%)</title><rect x="64.9319%" y="821" width="10.7286%" height="15" fill="rgb(235,172,48)"/><text x="65.1819%" y="831.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (132 samples, 10.57%)</title><rect x="65.0921%" y="805" width="10.5685%" height="15" fill="rgb(249,201,17)"/><text x="65.3421%" y="815.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (132 samples, 10.57%)</title><rect x="65.0921%" y="789" width="10.5685%" height="15" fill="rgb(219,208,6)"/><text x="65.3421%" y="799.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (132 samples, 10.57%)</title><rect x="65.0921%" y="773" width="10.5685%" height="15" fill="rgb(248,31,23)"/><text x="65.3421%" y="783.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (132 samples, 10.57%)</title><rect x="65.0921%" y="757" width="10.5685%" height="15" fill="rgb(245,15,42)"/><text x="65.3421%" y="767.50">core::ops::func..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (132 samples, 10.57%)</title><rect x="65.0921%" y="741" width="10.5685%" height="15" fill="rgb(222,217,39)"/><text x="65.3421%" y="751.50">std::sys_common..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="75.7406%" y="661" width="0.2402%" height="15" fill="rgb(210,219,27)"/><text x="75.9906%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 18.49%)</title><rect x="76.7814%" y="357" width="18.4948%" height="15" fill="rgb(252,166,36)"/><text x="77.0314%" y="367.50">__intel_pmu_enable_all.constp..</text></g><g><title>native_write_msr (231 samples, 18.49%)</title><rect x="76.7814%" y="341" width="18.4948%" height="15" fill="rgb(245,132,34)"/><text x="77.0314%" y="351.50">native_write_msr</text></g><g><title>entry_SYSCALL_64 (236 samples, 18.90%)</title><rect x="76.4612%" y="549" width="18.8951%" height="15" fill="rgb(236,54,3)"/><text x="76.7112%" y="559.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (236 samples, 18.90%)</title><rect x="76.4612%" y="533" width="18.8951%" height="15" fill="rgb(241,173,43)"/><text x="76.7112%" y="543.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 18.90%)</title><rect x="76.4612%" y="517" width="18.8951%" height="15" fill="rgb(215,190,9)"/><text x="76.7112%" y="527.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (236 samples, 18.90%)</title><rect x="76.4612%" y="501" width="18.8951%" height="15" fill="rgb(242,101,16)"/><text x="76.7112%" y="511.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (236 samples, 18.90%)</title><rect x="76.4612%" y="485" width="18.8951%" height="15" fill="rgb(223,190,21)"/><text x="76.7112%" y="495.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 18.82%)</title><rect x="76.5412%" y="469" width="18.8151%" height="15" fill="rgb(215,228,25)"/><text x="76.7912%" y="479.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 18.82%)</title><rect x="76.5412%" y="453" width="18.8151%" height="15" fill="rgb(225,36,22)"/><text x="76.7912%" y="463.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 18.82%)</title><rect x="76.5412%" y="437" width="18.8151%" height="15" fill="rgb(251,106,46)"/><text x="76.7912%" y="447.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 18.82%)</title><rect x="76.5412%" y="421" width="18.8151%" height="15" fill="rgb(208,90,1)"/><text x="76.7912%" y="431.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 18.82%)</title><rect x="76.5412%" y="405" width="18.8151%" height="15" fill="rgb(243,10,4)"/><text x="76.7912%" y="415.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 18.82%)</title><rect x="76.5412%" y="389" width="18.8151%" height="15" fill="rgb(212,137,27)"/><text x="76.7912%" y="399.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 18.73%)</title><rect x="76.6213%" y="373" width="18.7350%" height="15" fill="rgb(231,220,49)"/><text x="76.8713%" y="383.50">__perf_event_task_sched_in</text></g><g><title>hwloc::Topology::new (242 samples, 19.38%)</title><rect x="76.0608%" y="661" width="19.3755%" height="15" fill="rgb(237,96,20)"/><text x="76.3108%" y="671.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 19.38%)</title><rect x="76.0608%" y="645" width="19.3755%" height="15" fill="rgb(239,229,30)"/><text x="76.3108%" y="655.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 19.38%)</title><rect x="76.0608%" y="629" width="19.3755%" height="15" fill="rgb(219,65,33)"/><text x="76.3108%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 19.38%)</title><rect x="76.0608%" y="613" width="19.3755%" height="15" fill="rgb(243,134,7)"/><text x="76.3108%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 19.38%)</title><rect x="76.0608%" y="597" width="19.3755%" height="15" fill="rgb(216,177,54)"/><text x="76.3108%" y="607.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (241 samples, 19.30%)</title><rect x="76.1409%" y="581" width="19.2954%" height="15" fill="rgb(211,160,20)"/><text x="76.3909%" y="591.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 19.22%)</title><rect x="76.2210%" y="565" width="19.2154%" height="15" fill="rgb(239,85,39)"/><text x="76.4710%" y="575.50">__GI___sched_setaffinity_new</text></g><g><title>__this_cpu_preempt_check (2 samples, 0.16%)</title><rect x="95.7566%" y="341" width="0.1601%" height="15" fill="rgb(232,125,22)"/><text x="96.0066%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.16%)</title><rect x="95.9167%" y="341" width="0.1601%" height="15" fill="rgb(244,57,34)"/><text x="96.1667%" y="351.50"></text></g><g><title>loopback_xmit (2 samples, 0.16%)</title><rect x="95.9167%" y="325" width="0.1601%" height="15" fill="rgb(214,203,32)"/><text x="96.1667%" y="335.50"></text></g><g><title>netif_rx (2 samples, 0.16%)</title><rect x="95.9167%" y="309" width="0.1601%" height="15" fill="rgb(207,58,43)"/><text x="96.1667%" y="319.50"></text></g><g><title>netif_rx_internal (2 samples, 0.16%)</title><rect x="95.9167%" y="293" width="0.1601%" height="15" fill="rgb(215,193,15)"/><text x="96.1667%" y="303.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.40%)</title><rect x="95.7566%" y="357" width="0.4003%" height="15" fill="rgb(232,15,44)"/><text x="96.0066%" y="367.50"></text></g><g><title>enqueue_task (4 samples, 0.32%)</title><rect x="96.7974%" y="69" width="0.3203%" height="15" fill="rgb(212,3,48)"/><text x="97.0474%" y="79.50"></text></g><g><title>psi_task_change (4 samples, 0.32%)</title><rect x="96.7974%" y="53" width="0.3203%" height="15" fill="rgb(218,128,7)"/><text x="97.0474%" y="63.50"></text></g><g><title>psi_group_change (4 samples, 0.32%)</title><rect x="96.7974%" y="37" width="0.3203%" height="15" fill="rgb(226,216,39)"/><text x="97.0474%" y="47.50"></text></g><g><title>__wake_up_common (7 samples, 0.56%)</title><rect x="96.7174%" y="101" width="0.5604%" height="15" fill="rgb(243,47,51)"/><text x="96.9674%" y="111.50"></text></g><g><title>try_to_wake_up (7 samples, 0.56%)</title><rect x="96.7174%" y="85" width="0.5604%" height="15" fill="rgb(241,183,40)"/><text x="96.9674%" y="95.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.16%)</title><rect x="97.1177%" y="69" width="0.1601%" height="15" fill="rgb(231,217,32)"/><text x="97.3677%" y="79.50"></text></g><g><title>enqueue_entity (2 samples, 0.16%)</title><rect x="97.1177%" y="53" width="0.1601%" height="15" fill="rgb(229,61,38)"/><text x="97.3677%" y="63.50"></text></g><g><title>sock_def_readable (8 samples, 0.64%)</title><rect x="96.7174%" y="133" width="0.6405%" height="15" fill="rgb(225,210,5)"/><text x="96.9674%" y="143.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.64%)</title><rect x="96.7174%" y="117" width="0.6405%" height="15" fill="rgb(231,79,45)"/><text x="96.9674%" y="127.50"></text></g><g><title>tcp_ack (6 samples, 0.48%)</title><rect x="97.3579%" y="133" width="0.4804%" height="15" fill="rgb(224,100,7)"/><text x="97.6079%" y="143.50"></text></g><g><title>enqueue_task (2 samples, 0.16%)</title><rect x="97.8383%" y="53" width="0.1601%" height="15" fill="rgb(241,198,18)"/><text x="98.0883%" y="63.50"></text></g><g><title>psi_task_change (2 samples, 0.16%)</title><rect x="97.8383%" y="37" width="0.1601%" height="15" fill="rgb(252,97,53)"/><text x="98.0883%" y="47.50"></text></g><g><title>tcp_data_queue (3 samples, 0.24%)</title><rect x="97.8383%" y="133" width="0.2402%" height="15" fill="rgb(220,88,7)"/><text x="98.0883%" y="143.50"></text></g><g><title>sock_def_readable (3 samples, 0.24%)</title><rect x="97.8383%" y="117" width="0.2402%" height="15" fill="rgb(213,176,14)"/><text x="98.0883%" y="127.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.24%)</title><rect x="97.8383%" y="101" width="0.2402%" height="15" fill="rgb(246,73,7)"/><text x="98.0883%" y="111.50"></text></g><g><title>__wake_up_common (3 samples, 0.24%)</title><rect x="97.8383%" y="85" width="0.2402%" height="15" fill="rgb(245,64,36)"/><text x="98.0883%" y="95.50"></text></g><g><title>try_to_wake_up (3 samples, 0.24%)</title><rect x="97.8383%" y="69" width="0.2402%" height="15" fill="rgb(245,80,10)"/><text x="98.0883%" y="79.50"></text></g><g><title>ip_local_deliver (23 samples, 1.84%)</title><rect x="96.3171%" y="229" width="1.8415%" height="15" fill="rgb(232,107,50)"/><text x="96.5671%" y="239.50">i..</text></g><g><title>ip_local_deliver_finish (23 samples, 1.84%)</title><rect x="96.3171%" y="213" width="1.8415%" height="15" fill="rgb(253,3,0)"/><text x="96.5671%" y="223.50">i..</text></g><g><title>ip_protocol_deliver_rcu (23 samples, 1.84%)</title><rect x="96.3171%" y="197" width="1.8415%" height="15" fill="rgb(212,99,53)"/><text x="96.5671%" y="207.50">i..</text></g><g><title>tcp_v4_rcv (23 samples, 1.84%)</title><rect x="96.3171%" y="181" width="1.8415%" height="15" fill="rgb(249,111,54)"/><text x="96.5671%" y="191.50">t..</text></g><g><title>tcp_v4_do_rcv (19 samples, 1.52%)</title><rect x="96.6373%" y="165" width="1.5212%" height="15" fill="rgb(249,55,30)"/><text x="96.8873%" y="175.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.52%)</title><rect x="96.6373%" y="149" width="1.5212%" height="15" fill="rgb(237,47,42)"/><text x="96.8873%" y="159.50"></text></g><g><title>__tcp_push_pending_frames (32 samples, 2.56%)</title><rect x="95.6765%" y="453" width="2.5620%" height="15" fill="rgb(211,20,18)"/><text x="95.9265%" y="463.50">__..</text></g><g><title>tcp_write_xmit (32 samples, 2.56%)</title><rect x="95.6765%" y="437" width="2.5620%" height="15" fill="rgb(231,203,46)"/><text x="95.9265%" y="447.50">tc..</text></g><g><title>__tcp_transmit_skb (32 samples, 2.56%)</title><rect x="95.6765%" y="421" width="2.5620%" height="15" fill="rgb(237,142,3)"/><text x="95.9265%" y="431.50">__..</text></g><g><title>__ip_queue_xmit (32 samples, 2.56%)</title><rect x="95.6765%" y="405" width="2.5620%" height="15" fill="rgb(241,107,1)"/><text x="95.9265%" y="415.50">__..</text></g><g><title>ip_output (31 samples, 2.48%)</title><rect x="95.7566%" y="389" width="2.4820%" height="15" fill="rgb(229,83,13)"/><text x="96.0066%" y="399.50">ip..</text></g><g><title>ip_finish_output2 (31 samples, 2.48%)</title><rect x="95.7566%" y="373" width="2.4820%" height="15" fill="rgb(241,91,40)"/><text x="96.0066%" y="383.50">ip..</text></g><g><title>__local_bh_enable_ip (26 samples, 2.08%)</title><rect x="96.1569%" y="357" width="2.0817%" height="15" fill="rgb(225,3,45)"/><text x="96.4069%" y="367.50">_..</text></g><g><title>do_softirq (26 samples, 2.08%)</title><rect x="96.1569%" y="341" width="2.0817%" height="15" fill="rgb(244,223,14)"/><text x="96.4069%" y="351.50">d..</text></g><g><title>do_softirq_own_stack (26 samples, 2.08%)</title><rect x="96.1569%" y="325" width="2.0817%" height="15" fill="rgb(224,124,37)"/><text x="96.4069%" y="335.50">d..</text></g><g><title>__do_softirq (25 samples, 2.00%)</title><rect x="96.2370%" y="309" width="2.0016%" height="15" fill="rgb(251,171,30)"/><text x="96.4870%" y="319.50">_..</text></g><g><title>net_rx_action (25 samples, 2.00%)</title><rect x="96.2370%" y="293" width="2.0016%" height="15" fill="rgb(236,46,54)"/><text x="96.4870%" y="303.50">n..</text></g><g><title>process_backlog (25 samples, 2.00%)</title><rect x="96.2370%" y="277" width="2.0016%" height="15" fill="rgb(245,213,5)"/><text x="96.4870%" y="287.50">p..</text></g><g><title>__netif_receive_skb_one_core (25 samples, 2.00%)</title><rect x="96.2370%" y="261" width="2.0016%" height="15" fill="rgb(230,144,27)"/><text x="96.4870%" y="271.50">_..</text></g><g><title>ip_rcv (24 samples, 1.92%)</title><rect x="96.3171%" y="245" width="1.9215%" height="15" fill="rgb(220,86,6)"/><text x="96.5671%" y="255.50">i..</text></g><g><title>sk_page_frag_refill (2 samples, 0.16%)</title><rect x="98.2386%" y="453" width="0.1601%" height="15" fill="rgb(240,20,13)"/><text x="98.4886%" y="463.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.16%)</title><rect x="98.2386%" y="437" width="0.1601%" height="15" fill="rgb(217,89,34)"/><text x="98.4886%" y="447.50"></text></g><g><title>do_syscall_64 (38 samples, 3.04%)</title><rect x="95.5164%" y="549" width="3.0424%" height="15" fill="rgb(229,13,5)"/><text x="95.7664%" y="559.50">do_..</text></g><g><title>__x64_sys_sendto (38 samples, 3.04%)</title><rect x="95.5164%" y="533" width="3.0424%" height="15" fill="rgb(244,67,35)"/><text x="95.7664%" y="543.50">__x..</text></g><g><title>__sys_sendto (38 samples, 3.04%)</title><rect x="95.5164%" y="517" width="3.0424%" height="15" fill="rgb(221,40,2)"/><text x="95.7664%" y="527.50">__s..</text></g><g><title>sock_sendmsg (38 samples, 3.04%)</title><rect x="95.5164%" y="501" width="3.0424%" height="15" fill="rgb(237,157,21)"/><text x="95.7664%" y="511.50">soc..</text></g><g><title>tcp_sendmsg (38 samples, 3.04%)</title><rect x="95.5164%" y="485" width="3.0424%" height="15" fill="rgb(222,94,11)"/><text x="95.7664%" y="495.50">tcp..</text></g><g><title>tcp_sendmsg_locked (38 samples, 3.04%)</title><rect x="95.5164%" y="469" width="3.0424%" height="15" fill="rgb(249,113,6)"/><text x="95.7664%" y="479.50">tcp..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.16%)</title><rect x="98.3987%" y="453" width="0.1601%" height="15" fill="rgb(238,137,36)"/><text x="98.6487%" y="463.50"></text></g><g><title>__alloc_skb (2 samples, 0.16%)</title><rect x="98.3987%" y="437" width="0.1601%" height="15" fill="rgb(210,102,26)"/><text x="98.6487%" y="447.50"></text></g><g><title>mysql::conn::Conn::_query (39 samples, 3.12%)</title><rect x="95.5164%" y="661" width="3.1225%" height="15" fill="rgb(218,30,30)"/><text x="95.7664%" y="671.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (39 samples, 3.12%)</title><rect x="95.5164%" y="645" width="3.1225%" height="15" fill="rgb(214,67,26)"/><text x="95.7664%" y="655.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (39 samples, 3.12%)</title><rect x="95.5164%" y="629" width="3.1225%" height="15" fill="rgb(251,9,53)"/><text x="95.7664%" y="639.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (39 samples, 3.12%)</title><rect x="95.5164%" y="613" width="3.1225%" height="15" fill="rgb(228,204,25)"/><text x="95.7664%" y="623.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (39 samples, 3.12%)</title><rect x="95.5164%" y="597" width="3.1225%" height="15" fill="rgb(207,153,8)"/><text x="95.7664%" y="607.50">std..</text></g><g><title>__libc_send (39 samples, 3.12%)</title><rect x="95.5164%" y="581" width="3.1225%" height="15" fill="rgb(242,9,16)"/><text x="95.7664%" y="591.50">__l..</text></g><g><title>entry_SYSCALL_64 (39 samples, 3.12%)</title><rect x="95.5164%" y="565" width="3.1225%" height="15" fill="rgb(217,211,10)"/><text x="95.7664%" y="575.50">ent..</text></g><g><title>__libc_start_main (287 samples, 22.98%)</title><rect x="75.7406%" y="821" width="22.9784%" height="15" fill="rgb(219,228,52)"/><text x="75.9906%" y="831.50">__libc_start_main</text></g><g><title>main (287 samples, 22.98%)</title><rect x="75.7406%" y="805" width="22.9784%" height="15" fill="rgb(231,92,29)"/><text x="75.9906%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (287 samples, 22.98%)</title><rect x="75.7406%" y="789" width="22.9784%" height="15" fill="rgb(232,8,23)"/><text x="75.9906%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (287 samples, 22.98%)</title><rect x="75.7406%" y="773" width="22.9784%" height="15" fill="rgb(216,211,34)"/><text x="75.9906%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (287 samples, 22.98%)</title><rect x="75.7406%" y="757" width="22.9784%" height="15" fill="rgb(236,151,0)"/><text x="75.9906%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (287 samples, 22.98%)</title><rect x="75.7406%" y="741" width="22.9784%" height="15" fill="rgb(209,168,3)"/><text x="75.9906%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (287 samples, 22.98%)</title><rect x="75.7406%" y="725" width="22.9784%" height="15" fill="rgb(208,129,28)"/><text x="75.9906%" y="735.50">core::ops::function::impls::&lt;impl co..</text></g><g><title>std::rt::lang_start::_{{closure}} (287 samples, 22.98%)</title><rect x="75.7406%" y="709" width="22.9784%" height="15" fill="rgb(229,78,22)"/><text x="75.9906%" y="719.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (287 samples, 22.98%)</title><rect x="75.7406%" y="693" width="22.9784%" height="15" fill="rgb(228,187,13)"/><text x="75.9906%" y="703.50">std::sys_common::backtrace::__rust_b..</text></g><g><title>lobsters::main (287 samples, 22.98%)</title><rect x="75.7406%" y="677" width="22.9784%" height="15" fill="rgb(240,119,24)"/><text x="75.9906%" y="687.50">lobsters::main</text></g><g><title>_start (288 samples, 23.06%)</title><rect x="75.7406%" y="837" width="23.0584%" height="15" fill="rgb(209,194,42)"/><text x="75.9906%" y="847.50">_start</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.32%)</title><rect x="98.9592%" y="837" width="0.3203%" height="15" fill="rgb(247,200,46)"/><text x="99.2092%" y="847.50"></text></g><g><title>lobsters (1,243 samples, 99.52%)</title><rect x="0.0000%" y="853" width="99.5196%" height="15" fill="rgb(218,76,16)"/><text x="0.2500%" y="863.50">lobsters</text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(225,21,48)"/><text x="0.2500%" y="879.50"></text></g><g><title>perf (6 samples, 0.48%)</title><rect x="99.5196%" y="853" width="0.4804%" height="15" fill="rgb(239,223,50)"/><text x="99.7696%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.48%)</title><rect x="99.5196%" y="837" width="0.4804%" height="15" fill="rgb(244,45,21)"/><text x="99.7696%" y="847.50"></text></g><g><title>do_syscall_64 (6 samples, 0.48%)</title><rect x="99.5196%" y="821" width="0.4804%" height="15" fill="rgb(232,33,43)"/><text x="99.7696%" y="831.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.48%)</title><rect x="99.5196%" y="805" width="0.4804%" height="15" fill="rgb(209,8,3)"/><text x="99.7696%" y="815.50"></text></g><g><title>do_execve (6 samples, 0.48%)</title><rect x="99.5196%" y="789" width="0.4804%" height="15" fill="rgb(214,25,53)"/><text x="99.7696%" y="799.50"></text></g><g><title>__do_execve_file (6 samples, 0.48%)</title><rect x="99.5196%" y="773" width="0.4804%" height="15" fill="rgb(254,186,54)"/><text x="99.7696%" y="783.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.48%)</title><rect x="99.5196%" y="757" width="0.4804%" height="15" fill="rgb(208,174,49)"/><text x="99.7696%" y="767.50"></text></g><g><title>load_elf_binary (6 samples, 0.48%)</title><rect x="99.5196%" y="741" width="0.4804%" height="15" fill="rgb(233,191,51)"/><text x="99.7696%" y="751.50"></text></g><g><title>setup_new_exec (6 samples, 0.48%)</title><rect x="99.5196%" y="725" width="0.4804%" height="15" fill="rgb(222,134,10)"/><text x="99.7696%" y="735.50"></text></g><g><title>perf_event_exec (6 samples, 0.48%)</title><rect x="99.5196%" y="709" width="0.4804%" height="15" fill="rgb(230,226,20)"/><text x="99.7696%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.40%)</title><rect x="99.5997%" y="693" width="0.4003%" height="15" fill="rgb(251,111,25)"/><text x="99.8497%" y="703.50"></text></g><g><title>native_write_msr (5 samples, 0.40%)</title><rect x="99.5997%" y="677" width="0.4003%" height="15" fill="rgb(224,40,46)"/><text x="99.8497%" y="687.50"></text></g></svg></svg>