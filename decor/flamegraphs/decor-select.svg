<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (3 samples, 0.23%)</title><rect x="0.0000%" y="885" width="0.2271%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="895.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.15%)</title><rect x="0.6056%" y="869" width="0.1514%" height="15" fill="rgb(217,0,24)"/><text x="0.8556%" y="879.50"></text></g><g><title>[[stack]] (10 samples, 0.76%)</title><rect x="0.2271%" y="885" width="0.7570%" height="15" fill="rgb(221,193,54)"/><text x="0.4771%" y="895.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.15%)</title><rect x="0.8327%" y="869" width="0.1514%" height="15" fill="rgb(248,212,6)"/><text x="1.0827%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.30%)</title><rect x="0.9841%" y="869" width="0.3028%" height="15" fill="rgb(208,68,35)"/><text x="1.2341%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.15%)</title><rect x="1.2869%" y="869" width="0.1514%" height="15" fill="rgb(232,128,0)"/><text x="1.5369%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="1.4383%" y="869" width="0.1514%" height="15" fill="rgb(207,160,47)"/><text x="1.6883%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="1.6654%" y="869" width="0.1514%" height="15" fill="rgb(228,23,34)"/><text x="1.9154%" y="879.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="2.0439%" y="869" width="0.1514%" height="15" fill="rgb(218,30,26)"/><text x="2.2939%" y="879.50"></text></g><g><title>__libc_send (2 samples, 0.15%)</title><rect x="2.4224%" y="869" width="0.1514%" height="15" fill="rgb(220,122,19)"/><text x="2.6724%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="2.4224%" y="853" width="0.1514%" height="15" fill="rgb(250,228,42)"/><text x="2.6724%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="2.5738%" y="869" width="0.1514%" height="15" fill="rgb(240,193,28)"/><text x="2.8238%" y="879.50"></text></g><g><title>_int_free (6 samples, 0.45%)</title><rect x="2.8009%" y="869" width="0.4542%" height="15" fill="rgb(216,20,37)"/><text x="3.0509%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="3.6336%" y="869" width="0.2271%" height="15" fill="rgb(206,188,39)"/><text x="3.8836%" y="879.50"></text></g><g><title>decor::answer_rows (3 samples, 0.23%)</title><rect x="3.9364%" y="869" width="0.2271%" height="15" fill="rgb(217,207,13)"/><text x="4.1864%" y="879.50"></text></g><g><title>decor::helpers::str_subset_of_idents (4 samples, 0.30%)</title><rect x="4.1635%" y="869" width="0.3028%" height="15" fill="rgb(231,73,38)"/><text x="4.4135%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (3 samples, 0.23%)</title><rect x="4.4663%" y="869" width="0.2271%" height="15" fill="rgb(225,20,46)"/><text x="4.7163%" y="879.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="5.3747%" y="869" width="0.1514%" height="15" fill="rgb(210,31,41)"/><text x="5.6247%" y="879.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.15%)</title><rect x="5.5261%" y="869" width="0.1514%" height="15" fill="rgb(221,200,47)"/><text x="5.7761%" y="879.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.23%)</title><rect x="5.8289%" y="869" width="0.2271%" height="15" fill="rgb(226,26,5)"/><text x="6.0789%" y="879.50"></text></g><g><title>[anon] (69 samples, 5.22%)</title><rect x="0.9841%" y="885" width="5.2233%" height="15" fill="rgb(249,33,26)"/><text x="1.2341%" y="895.50">[anon]</text></g><g><title>[libc-2.31.so] (2 samples, 0.15%)</title><rect x="6.2074%" y="885" width="0.1514%" height="15" fill="rgb(235,183,28)"/><text x="6.4574%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="6.2074%" y="869" width="0.1514%" height="15" fill="rgb(221,5,38)"/><text x="6.4574%" y="879.50"></text></g><g><title>[lobsters] (2 samples, 0.15%)</title><rect x="6.3588%" y="885" width="0.1514%" height="15" fill="rgb(247,18,42)"/><text x="6.6088%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="6.6616%" y="709" width="0.1514%" height="15" fill="rgb(241,131,45)"/><text x="6.9116%" y="719.50"></text></g><g><title>do_syscall_64 (2 samples, 0.15%)</title><rect x="6.6616%" y="693" width="0.1514%" height="15" fill="rgb(249,31,29)"/><text x="6.9116%" y="703.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.15%)</title><rect x="6.6616%" y="677" width="0.1514%" height="15" fill="rgb(225,111,53)"/><text x="6.9116%" y="687.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.15%)</title><rect x="6.6616%" y="661" width="0.1514%" height="15" fill="rgb(238,160,17)"/><text x="6.9116%" y="671.50"></text></g><g><title>mprotect_fixup (2 samples, 0.15%)</title><rect x="6.6616%" y="645" width="0.1514%" height="15" fill="rgb(214,148,48)"/><text x="6.9116%" y="655.50"></text></g><g><title>perf_event_mmap (2 samples, 0.15%)</title><rect x="6.6616%" y="629" width="0.1514%" height="15" fill="rgb(232,36,49)"/><text x="6.9116%" y="639.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.15%)</title><rect x="6.6616%" y="613" width="0.1514%" height="15" fill="rgb(209,103,24)"/><text x="6.9116%" y="623.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.15%)</title><rect x="6.6616%" y="597" width="0.1514%" height="15" fill="rgb(229,88,8)"/><text x="6.9116%" y="607.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.15%)</title><rect x="6.6616%" y="581" width="0.1514%" height="15" fill="rgb(213,181,19)"/><text x="6.9116%" y="591.50"></text></g><g><title>__GI___mprotect (4 samples, 0.30%)</title><rect x="6.6616%" y="725" width="0.3028%" height="15" fill="rgb(254,191,54)"/><text x="6.9116%" y="735.50"></text></g><g><title>error_entry (2 samples, 0.15%)</title><rect x="6.8130%" y="709" width="0.1514%" height="15" fill="rgb(241,83,37)"/><text x="7.0630%" y="719.50"></text></g><g><title>page_fault (3 samples, 0.23%)</title><rect x="6.9644%" y="725" width="0.2271%" height="15" fill="rgb(233,36,39)"/><text x="7.2144%" y="735.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.23%)</title><rect x="6.9644%" y="709" width="0.2271%" height="15" fill="rgb(226,3,54)"/><text x="7.2144%" y="719.50"></text></g><g><title>handle_mm_fault (3 samples, 0.23%)</title><rect x="6.9644%" y="693" width="0.2271%" height="15" fill="rgb(245,192,40)"/><text x="7.2144%" y="703.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.23%)</title><rect x="6.9644%" y="677" width="0.2271%" height="15" fill="rgb(238,167,29)"/><text x="7.2144%" y="687.50"></text></g><g><title>mem_cgroup_try_charge_delay (2 samples, 0.15%)</title><rect x="7.0401%" y="661" width="0.1514%" height="15" fill="rgb(232,182,51)"/><text x="7.2901%" y="671.50"></text></g><g><title>mem_cgroup_try_charge (2 samples, 0.15%)</title><rect x="7.0401%" y="645" width="0.1514%" height="15" fill="rgb(231,60,39)"/><text x="7.2901%" y="655.50"></text></g><g><title>try_charge (2 samples, 0.15%)</title><rect x="7.0401%" y="629" width="0.1514%" height="15" fill="rgb(208,69,12)"/><text x="7.2901%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (8 samples, 0.61%)</title><rect x="6.6616%" y="837" width="0.6056%" height="15" fill="rgb(235,93,37)"/><text x="6.9116%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (8 samples, 0.61%)</title><rect x="6.6616%" y="821" width="0.6056%" height="15" fill="rgb(213,116,39)"/><text x="6.9116%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.61%)</title><rect x="6.6616%" y="805" width="0.6056%" height="15" fill="rgb(222,207,29)"/><text x="6.9116%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.61%)</title><rect x="6.6616%" y="789" width="0.6056%" height="15" fill="rgb(206,96,30)"/><text x="6.9116%" y="799.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.61%)</title><rect x="6.6616%" y="773" width="0.6056%" height="15" fill="rgb(218,138,4)"/><text x="6.9116%" y="783.50"></text></g><g><title>_int_malloc (8 samples, 0.61%)</title><rect x="6.6616%" y="757" width="0.6056%" height="15" fill="rgb(250,191,14)"/><text x="6.9116%" y="767.50"></text></g><g><title>sysmalloc (8 samples, 0.61%)</title><rect x="6.6616%" y="741" width="0.6056%" height="15" fill="rgb(239,60,40)"/><text x="6.9116%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.23%)</title><rect x="7.3429%" y="837" width="0.2271%" height="15" fill="rgb(206,27,48)"/><text x="7.5929%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="7.3429%" y="821" width="0.2271%" height="15" fill="rgb(225,35,8)"/><text x="7.5929%" y="831.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.15%)</title><rect x="7.8728%" y="469" width="0.1514%" height="15" fill="rgb(250,213,24)"/><text x="8.1228%" y="479.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="7.8728%" y="453" width="0.1514%" height="15" fill="rgb(247,123,22)"/><text x="8.1228%" y="463.50"></text></g><g><title>inet_recvmsg (4 samples, 0.30%)</title><rect x="7.7971%" y="581" width="0.3028%" height="15" fill="rgb(231,138,38)"/><text x="8.0471%" y="591.50"></text></g><g><title>tcp_recvmsg (4 samples, 0.30%)</title><rect x="7.7971%" y="565" width="0.3028%" height="15" fill="rgb(231,145,46)"/><text x="8.0471%" y="575.50"></text></g><g><title>sk_wait_data (4 samples, 0.30%)</title><rect x="7.7971%" y="549" width="0.3028%" height="15" fill="rgb(251,118,11)"/><text x="8.0471%" y="559.50"></text></g><g><title>wait_woken (3 samples, 0.23%)</title><rect x="7.8728%" y="533" width="0.2271%" height="15" fill="rgb(217,147,25)"/><text x="8.1228%" y="543.50"></text></g><g><title>schedule_timeout (3 samples, 0.23%)</title><rect x="7.8728%" y="517" width="0.2271%" height="15" fill="rgb(247,81,37)"/><text x="8.1228%" y="527.50"></text></g><g><title>schedule (3 samples, 0.23%)</title><rect x="7.8728%" y="501" width="0.2271%" height="15" fill="rgb(209,12,38)"/><text x="8.1228%" y="511.50"></text></g><g><title>__schedule (3 samples, 0.23%)</title><rect x="7.8728%" y="485" width="0.2271%" height="15" fill="rgb(227,1,9)"/><text x="8.1228%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (6 samples, 0.45%)</title><rect x="7.7214%" y="789" width="0.4542%" height="15" fill="rgb(248,47,43)"/><text x="7.9714%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.38%)</title><rect x="7.7971%" y="773" width="0.3785%" height="15" fill="rgb(221,10,30)"/><text x="8.0471%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.38%)</title><rect x="7.7971%" y="757" width="0.3785%" height="15" fill="rgb(210,229,1)"/><text x="8.0471%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.38%)</title><rect x="7.7971%" y="741" width="0.3785%" height="15" fill="rgb(222,148,37)"/><text x="8.0471%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.38%)</title><rect x="7.7971%" y="725" width="0.3785%" height="15" fill="rgb(234,67,33)"/><text x="8.0471%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (5 samples, 0.38%)</title><rect x="7.7971%" y="709" width="0.3785%" height="15" fill="rgb(247,98,35)"/><text x="8.0471%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (5 samples, 0.38%)</title><rect x="7.7971%" y="693" width="0.3785%" height="15" fill="rgb(247,138,52)"/><text x="8.0471%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (5 samples, 0.38%)</title><rect x="7.7971%" y="677" width="0.3785%" height="15" fill="rgb(213,79,30)"/><text x="8.0471%" y="687.50"></text></g><g><title>__libc_recv (5 samples, 0.38%)</title><rect x="7.7971%" y="661" width="0.3785%" height="15" fill="rgb(246,177,23)"/><text x="8.0471%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.38%)</title><rect x="7.7971%" y="645" width="0.3785%" height="15" fill="rgb(230,62,27)"/><text x="8.0471%" y="655.50"></text></g><g><title>do_syscall_64 (5 samples, 0.38%)</title><rect x="7.7971%" y="629" width="0.3785%" height="15" fill="rgb(216,154,8)"/><text x="8.0471%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (5 samples, 0.38%)</title><rect x="7.7971%" y="613" width="0.3785%" height="15" fill="rgb(244,35,45)"/><text x="8.0471%" y="623.50"></text></g><g><title>__sys_recvfrom (5 samples, 0.38%)</title><rect x="7.7971%" y="597" width="0.3785%" height="15" fill="rgb(251,115,12)"/><text x="8.0471%" y="607.50"></text></g><g><title>enqueue_task (2 samples, 0.15%)</title><rect x="8.7055%" y="197" width="0.1514%" height="15" fill="rgb(240,54,50)"/><text x="8.9555%" y="207.50"></text></g><g><title>sock_def_readable (4 samples, 0.30%)</title><rect x="8.6298%" y="277" width="0.3028%" height="15" fill="rgb(233,84,52)"/><text x="8.8798%" y="287.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.30%)</title><rect x="8.6298%" y="261" width="0.3028%" height="15" fill="rgb(207,117,47)"/><text x="8.8798%" y="271.50"></text></g><g><title>__wake_up_common (4 samples, 0.30%)</title><rect x="8.6298%" y="245" width="0.3028%" height="15" fill="rgb(249,43,39)"/><text x="8.8798%" y="255.50"></text></g><g><title>pollwake (4 samples, 0.30%)</title><rect x="8.6298%" y="229" width="0.3028%" height="15" fill="rgb(209,38,44)"/><text x="8.8798%" y="239.50"></text></g><g><title>try_to_wake_up (4 samples, 0.30%)</title><rect x="8.6298%" y="213" width="0.3028%" height="15" fill="rgb(236,212,23)"/><text x="8.8798%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (8 samples, 0.61%)</title><rect x="8.6298%" y="405" width="0.6056%" height="15" fill="rgb(242,79,21)"/><text x="8.8798%" y="415.50"></text></g><g><title>ip_rcv (8 samples, 0.61%)</title><rect x="8.6298%" y="389" width="0.6056%" height="15" fill="rgb(211,96,35)"/><text x="8.8798%" y="399.50"></text></g><g><title>ip_local_deliver (8 samples, 0.61%)</title><rect x="8.6298%" y="373" width="0.6056%" height="15" fill="rgb(253,215,40)"/><text x="8.8798%" y="383.50"></text></g><g><title>ip_local_deliver_finish (8 samples, 0.61%)</title><rect x="8.6298%" y="357" width="0.6056%" height="15" fill="rgb(211,81,21)"/><text x="8.8798%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (8 samples, 0.61%)</title><rect x="8.6298%" y="341" width="0.6056%" height="15" fill="rgb(208,190,38)"/><text x="8.8798%" y="351.50"></text></g><g><title>tcp_v4_rcv (8 samples, 0.61%)</title><rect x="8.6298%" y="325" width="0.6056%" height="15" fill="rgb(235,213,38)"/><text x="8.8798%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.61%)</title><rect x="8.6298%" y="309" width="0.6056%" height="15" fill="rgb(237,122,38)"/><text x="8.8798%" y="319.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.61%)</title><rect x="8.6298%" y="293" width="0.6056%" height="15" fill="rgb(244,218,35)"/><text x="8.8798%" y="303.50"></text></g><g><title>tcp_ack (4 samples, 0.30%)</title><rect x="8.9326%" y="277" width="0.3028%" height="15" fill="rgb(240,68,47)"/><text x="9.1826%" y="287.50"></text></g><g><title>__tcp_transmit_skb (13 samples, 0.98%)</title><rect x="8.3270%" y="565" width="0.9841%" height="15" fill="rgb(210,16,53)"/><text x="8.5770%" y="575.50"></text></g><g><title>__ip_queue_xmit (13 samples, 0.98%)</title><rect x="8.3270%" y="549" width="0.9841%" height="15" fill="rgb(235,124,12)"/><text x="8.5770%" y="559.50"></text></g><g><title>ip_output (12 samples, 0.91%)</title><rect x="8.4027%" y="533" width="0.9084%" height="15" fill="rgb(224,169,11)"/><text x="8.6527%" y="543.50"></text></g><g><title>ip_finish_output2 (12 samples, 0.91%)</title><rect x="8.4027%" y="517" width="0.9084%" height="15" fill="rgb(250,166,2)"/><text x="8.6527%" y="527.50"></text></g><g><title>__local_bh_enable_ip (11 samples, 0.83%)</title><rect x="8.4784%" y="501" width="0.8327%" height="15" fill="rgb(242,216,29)"/><text x="8.7284%" y="511.50"></text></g><g><title>do_softirq (11 samples, 0.83%)</title><rect x="8.4784%" y="485" width="0.8327%" height="15" fill="rgb(230,116,27)"/><text x="8.7284%" y="495.50"></text></g><g><title>do_softirq_own_stack (11 samples, 0.83%)</title><rect x="8.4784%" y="469" width="0.8327%" height="15" fill="rgb(228,99,48)"/><text x="8.7284%" y="479.50"></text></g><g><title>__do_softirq (11 samples, 0.83%)</title><rect x="8.4784%" y="453" width="0.8327%" height="15" fill="rgb(253,11,6)"/><text x="8.7284%" y="463.50"></text></g><g><title>net_rx_action (11 samples, 0.83%)</title><rect x="8.4784%" y="437" width="0.8327%" height="15" fill="rgb(247,143,39)"/><text x="8.7284%" y="447.50"></text></g><g><title>process_backlog (9 samples, 0.68%)</title><rect x="8.6298%" y="421" width="0.6813%" height="15" fill="rgb(236,97,10)"/><text x="8.8798%" y="431.50"></text></g><g><title>__tcp_push_pending_frames (14 samples, 1.06%)</title><rect x="8.3270%" y="597" width="1.0598%" height="15" fill="rgb(233,208,19)"/><text x="8.5770%" y="607.50"></text></g><g><title>tcp_write_xmit (14 samples, 1.06%)</title><rect x="8.3270%" y="581" width="1.0598%" height="15" fill="rgb(216,164,2)"/><text x="8.5770%" y="591.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (24 samples, 1.82%)</title><rect x="7.7214%" y="837" width="1.8168%" height="15" fill="rgb(220,129,5)"/><text x="7.9714%" y="847.50">d..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (24 samples, 1.82%)</title><rect x="7.7214%" y="821" width="1.8168%" height="15" fill="rgb(242,17,10)"/><text x="7.9714%" y="831.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (24 samples, 1.82%)</title><rect x="7.7214%" y="805" width="1.8168%" height="15" fill="rgb(242,107,0)"/><text x="7.9714%" y="815.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (18 samples, 1.36%)</title><rect x="8.1756%" y="789" width="1.3626%" height="15" fill="rgb(251,28,31)"/><text x="8.4256%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (17 samples, 1.29%)</title><rect x="8.2513%" y="773" width="1.2869%" height="15" fill="rgb(233,223,10)"/><text x="8.5013%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (17 samples, 1.29%)</title><rect x="8.2513%" y="757" width="1.2869%" height="15" fill="rgb(215,21,27)"/><text x="8.5013%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (17 samples, 1.29%)</title><rect x="8.2513%" y="741" width="1.2869%" height="15" fill="rgb(232,23,21)"/><text x="8.5013%" y="751.50"></text></g><g><title>__libc_send (17 samples, 1.29%)</title><rect x="8.2513%" y="725" width="1.2869%" height="15" fill="rgb(244,5,23)"/><text x="8.5013%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 1.29%)</title><rect x="8.2513%" y="709" width="1.2869%" height="15" fill="rgb(226,81,46)"/><text x="8.5013%" y="719.50"></text></g><g><title>do_syscall_64 (17 samples, 1.29%)</title><rect x="8.2513%" y="693" width="1.2869%" height="15" fill="rgb(247,70,30)"/><text x="8.5013%" y="703.50"></text></g><g><title>__x64_sys_sendto (17 samples, 1.29%)</title><rect x="8.2513%" y="677" width="1.2869%" height="15" fill="rgb(212,68,19)"/><text x="8.5013%" y="687.50"></text></g><g><title>__sys_sendto (17 samples, 1.29%)</title><rect x="8.2513%" y="661" width="1.2869%" height="15" fill="rgb(240,187,13)"/><text x="8.5013%" y="671.50"></text></g><g><title>sock_sendmsg (17 samples, 1.29%)</title><rect x="8.2513%" y="645" width="1.2869%" height="15" fill="rgb(223,113,26)"/><text x="8.5013%" y="655.50"></text></g><g><title>tcp_sendmsg (17 samples, 1.29%)</title><rect x="8.2513%" y="629" width="1.2869%" height="15" fill="rgb(206,192,2)"/><text x="8.5013%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (17 samples, 1.29%)</title><rect x="8.2513%" y="613" width="1.2869%" height="15" fill="rgb(241,108,4)"/><text x="8.5013%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="9.6896%" y="805" width="0.3785%" height="15" fill="rgb(247,173,49)"/><text x="9.9396%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="9.8410%" y="789" width="0.2271%" height="15" fill="rgb(224,114,35)"/><text x="10.0910%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.76%)</title><rect x="9.6139%" y="821" width="0.7570%" height="15" fill="rgb(245,159,27)"/><text x="9.8639%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="10.1438%" y="805" width="0.2271%" height="15" fill="rgb(245,172,44)"/><text x="10.3938%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (50 samples, 3.79%)</title><rect x="6.6616%" y="853" width="3.7850%" height="15" fill="rgb(236,23,11)"/><text x="6.9116%" y="863.50">deco..</text></g><g><title>decor::query_transformer::QueryTransformer::query_to_mv_query (12 samples, 0.91%)</title><rect x="9.5382%" y="837" width="0.9084%" height="15" fill="rgb(205,117,38)"/><text x="9.7882%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="10.5223%" y="773" width="0.2271%" height="15" fill="rgb(237,72,25)"/><text x="10.7723%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="10.5223%" y="757" width="0.2271%" height="15" fill="rgb(244,70,9)"/><text x="10.7723%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="10.5980%" y="741" width="0.1514%" height="15" fill="rgb(217,125,39)"/><text x="10.8480%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="10.5980%" y="725" width="0.1514%" height="15" fill="rgb(235,36,10)"/><text x="10.8480%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="10.5980%" y="709" width="0.1514%" height="15" fill="rgb(251,123,47)"/><text x="10.8480%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="10.5980%" y="693" width="0.1514%" height="15" fill="rgb(221,13,13)"/><text x="10.8480%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="10.5980%" y="677" width="0.1514%" height="15" fill="rgb(238,131,9)"/><text x="10.8480%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="10.5980%" y="661" width="0.1514%" height="15" fill="rgb(211,50,8)"/><text x="10.8480%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="10.5980%" y="645" width="0.1514%" height="15" fill="rgb(245,182,24)"/><text x="10.8480%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.45%)</title><rect x="10.4466%" y="789" width="0.4542%" height="15" fill="rgb(242,14,37)"/><text x="10.6966%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="10.7494%" y="773" width="0.1514%" height="15" fill="rgb(246,228,12)"/><text x="10.9994%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="10.9008%" y="789" width="0.1514%" height="15" fill="rgb(213,55,15)"/><text x="11.1508%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="10.9008%" y="773" width="0.1514%" height="15" fill="rgb(209,9,3)"/><text x="11.1508%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.23%)</title><rect x="11.0522%" y="789" width="0.2271%" height="15" fill="rgb(230,59,30)"/><text x="11.3022%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (13 samples, 0.98%)</title><rect x="10.4466%" y="837" width="0.9841%" height="15" fill="rgb(209,121,21)"/><text x="10.6966%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (13 samples, 0.98%)</title><rect x="10.4466%" y="821" width="0.9841%" height="15" fill="rgb(220,109,13)"/><text x="10.6966%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (13 samples, 0.98%)</title><rect x="10.4466%" y="805" width="0.9841%" height="15" fill="rgb(232,18,1)"/><text x="10.6966%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="11.2793%" y="789" width="0.1514%" height="15" fill="rgb(215,41,42)"/><text x="11.5293%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="11.2793%" y="773" width="0.1514%" height="15" fill="rgb(224,123,36)"/><text x="11.5293%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.15%)</title><rect x="11.5064%" y="789" width="0.1514%" height="15" fill="rgb(240,125,3)"/><text x="11.7564%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (67 samples, 5.07%)</title><rect x="6.6616%" y="869" width="5.0719%" height="15" fill="rgb(205,98,50)"/><text x="6.9116%" y="879.50">&lt;decor..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (17 samples, 1.29%)</title><rect x="10.4466%" y="853" width="1.2869%" height="15" fill="rgb(205,185,37)"/><text x="10.6966%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.30%)</title><rect x="11.4307%" y="837" width="0.3028%" height="15" fill="rgb(238,207,15)"/><text x="11.6807%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.30%)</title><rect x="11.4307%" y="821" width="0.3028%" height="15" fill="rgb(213,199,42)"/><text x="11.6807%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.23%)</title><rect x="11.5064%" y="805" width="0.2271%" height="15" fill="rgb(235,201,11)"/><text x="11.7564%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="11.8849%" y="869" width="0.1514%" height="15" fill="rgb(207,46,11)"/><text x="12.1349%" y="879.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="12.4905%" y="869" width="0.2271%" height="15" fill="rgb(241,35,35)"/><text x="12.7405%" y="879.50"></text></g><g><title>__libc_recv (4 samples, 0.30%)</title><rect x="12.7176%" y="869" width="0.3028%" height="15" fill="rgb(243,32,47)"/><text x="12.9676%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.30%)</title><rect x="12.7176%" y="853" width="0.3028%" height="15" fill="rgb(247,202,23)"/><text x="12.9676%" y="863.50"></text></g><g><title>__libc_start_main (2 samples, 0.15%)</title><rect x="13.0204%" y="869" width="0.1514%" height="15" fill="rgb(219,102,11)"/><text x="13.2704%" y="879.50"></text></g><g><title>main (2 samples, 0.15%)</title><rect x="13.0204%" y="853" width="0.1514%" height="15" fill="rgb(243,110,44)"/><text x="13.2704%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.15%)</title><rect x="13.0204%" y="837" width="0.1514%" height="15" fill="rgb(222,74,54)"/><text x="13.2704%" y="847.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.15%)</title><rect x="13.0204%" y="821" width="0.1514%" height="15" fill="rgb(216,99,12)"/><text x="13.2704%" y="831.50"></text></g><g><title>std::panicking::try (2 samples, 0.15%)</title><rect x="13.0204%" y="805" width="0.1514%" height="15" fill="rgb(226,22,26)"/><text x="13.2704%" y="815.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.15%)</title><rect x="13.0204%" y="789" width="0.1514%" height="15" fill="rgb(217,163,10)"/><text x="13.2704%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.15%)</title><rect x="13.0204%" y="773" width="0.1514%" height="15" fill="rgb(213,25,53)"/><text x="13.2704%" y="783.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.15%)</title><rect x="13.0204%" y="757" width="0.1514%" height="15" fill="rgb(252,105,26)"/><text x="13.2704%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.15%)</title><rect x="13.0204%" y="741" width="0.1514%" height="15" fill="rgb(220,39,43)"/><text x="13.2704%" y="751.50"></text></g><g><title>lobsters::main (2 samples, 0.15%)</title><rect x="13.0204%" y="725" width="0.1514%" height="15" fill="rgb(229,68,48)"/><text x="13.2704%" y="735.50"></text></g><g><title>_int_free (4 samples, 0.30%)</title><rect x="13.2475%" y="869" width="0.3028%" height="15" fill="rgb(252,8,32)"/><text x="13.4975%" y="879.50"></text></g><g><title>_int_realloc (2 samples, 0.15%)</title><rect x="13.5503%" y="869" width="0.1514%" height="15" fill="rgb(223,20,43)"/><text x="13.8003%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="13.7017%" y="869" width="0.1514%" height="15" fill="rgb(229,81,49)"/><text x="13.9517%" y="879.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.15%)</title><rect x="13.8531%" y="869" width="0.1514%" height="15" fill="rgb(236,28,36)"/><text x="14.1031%" y="879.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="14.0802%" y="869" width="0.1514%" height="15" fill="rgb(249,185,26)"/><text x="14.3302%" y="879.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="14.5344%" y="517" width="0.1514%" height="15" fill="rgb(249,174,33)"/><text x="14.7844%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.15%)</title><rect x="14.5344%" y="501" width="0.1514%" height="15" fill="rgb(233,201,37)"/><text x="14.7844%" y="511.50"></text></g><g><title>dst_release (2 samples, 0.15%)</title><rect x="14.5344%" y="485" width="0.1514%" height="15" fill="rgb(221,78,26)"/><text x="14.7844%" y="495.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.15%)</title><rect x="14.9886%" y="501" width="0.1514%" height="15" fill="rgb(250,127,30)"/><text x="15.2386%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.15%)</title><rect x="15.2914%" y="437" width="0.1514%" height="15" fill="rgb(230,49,44)"/><text x="15.5414%" y="447.50"></text></g><g><title>ctx_sched_out (2 samples, 0.15%)</title><rect x="15.2914%" y="421" width="0.1514%" height="15" fill="rgb(229,67,23)"/><text x="15.5414%" y="431.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.38%)</title><rect x="15.4428%" y="437" width="0.3785%" height="15" fill="rgb(249,83,47)"/><text x="15.6928%" y="447.50"></text></g><g><title>dequeue_entity (4 samples, 0.30%)</title><rect x="15.5185%" y="421" width="0.3028%" height="15" fill="rgb(215,43,3)"/><text x="15.7685%" y="431.50"></text></g><g><title>update_curr (4 samples, 0.30%)</title><rect x="15.5185%" y="405" width="0.3028%" height="15" fill="rgb(238,154,13)"/><text x="15.7685%" y="415.50"></text></g><g><title>finish_task_switch (2 samples, 0.15%)</title><rect x="15.8213%" y="437" width="0.1514%" height="15" fill="rgb(219,56,2)"/><text x="16.0713%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.15%)</title><rect x="15.8213%" y="421" width="0.1514%" height="15" fill="rgb(233,0,4)"/><text x="16.0713%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.15%)</title><rect x="15.8213%" y="405" width="0.1514%" height="15" fill="rgb(235,30,7)"/><text x="16.0713%" y="415.50"></text></g><g><title>psi_task_change (3 samples, 0.23%)</title><rect x="16.1241%" y="437" width="0.2271%" height="15" fill="rgb(250,79,13)"/><text x="16.3741%" y="447.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="16.1998%" y="421" width="0.1514%" height="15" fill="rgb(211,146,34)"/><text x="16.4498%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.15%)</title><rect x="16.4269%" y="437" width="0.1514%" height="15" fill="rgb(228,22,38)"/><text x="16.6769%" y="447.50"></text></g><g><title>__schedule (19 samples, 1.44%)</title><rect x="15.2157%" y="453" width="1.4383%" height="15" fill="rgb(235,168,5)"/><text x="15.4657%" y="463.50"></text></g><g><title>sk_wait_data (27 samples, 2.04%)</title><rect x="14.6858%" y="517" width="2.0439%" height="15" fill="rgb(221,155,16)"/><text x="14.9358%" y="527.50">s..</text></g><g><title>wait_woken (21 samples, 1.59%)</title><rect x="15.1400%" y="501" width="1.5897%" height="15" fill="rgb(215,215,53)"/><text x="15.3900%" y="511.50"></text></g><g><title>schedule_timeout (20 samples, 1.51%)</title><rect x="15.2157%" y="485" width="1.5140%" height="15" fill="rgb(223,4,10)"/><text x="15.4657%" y="495.50"></text></g><g><title>schedule (20 samples, 1.51%)</title><rect x="15.2157%" y="469" width="1.5140%" height="15" fill="rgb(234,103,6)"/><text x="15.4657%" y="479.50"></text></g><g><title>inet_recvmsg (34 samples, 2.57%)</title><rect x="14.3830%" y="549" width="2.5738%" height="15" fill="rgb(227,97,0)"/><text x="14.6330%" y="559.50">in..</text></g><g><title>tcp_recvmsg (34 samples, 2.57%)</title><rect x="14.3830%" y="533" width="2.5738%" height="15" fill="rgb(234,150,53)"/><text x="14.6330%" y="543.50">tc..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.23%)</title><rect x="16.7298%" y="517" width="0.2271%" height="15" fill="rgb(228,201,54)"/><text x="16.9798%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.23%)</title><rect x="16.7298%" y="501" width="0.2271%" height="15" fill="rgb(222,22,37)"/><text x="16.9798%" y="511.50"></text></g><g><title>do_syscall_64 (36 samples, 2.73%)</title><rect x="14.3073%" y="597" width="2.7252%" height="15" fill="rgb(237,53,32)"/><text x="14.5573%" y="607.50">do..</text></g><g><title>__x64_sys_recvfrom (36 samples, 2.73%)</title><rect x="14.3073%" y="581" width="2.7252%" height="15" fill="rgb(233,25,53)"/><text x="14.5573%" y="591.50">__..</text></g><g><title>__sys_recvfrom (36 samples, 2.73%)</title><rect x="14.3073%" y="565" width="2.7252%" height="15" fill="rgb(210,40,34)"/><text x="14.5573%" y="575.50">__..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (38 samples, 2.88%)</title><rect x="14.2316%" y="789" width="2.8766%" height="15" fill="rgb(241,220,44)"/><text x="14.4816%" y="799.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (38 samples, 2.88%)</title><rect x="14.2316%" y="773" width="2.8766%" height="15" fill="rgb(235,28,35)"/><text x="14.4816%" y="783.50">my..</text></g><g><title>mysql::conn::Conn::handle_result_set (38 samples, 2.88%)</title><rect x="14.2316%" y="757" width="2.8766%" height="15" fill="rgb(210,56,17)"/><text x="14.4816%" y="767.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (38 samples, 2.88%)</title><rect x="14.2316%" y="741" width="2.8766%" height="15" fill="rgb(224,130,29)"/><text x="14.4816%" y="751.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 2.88%)</title><rect x="14.2316%" y="725" width="2.8766%" height="15" fill="rgb(235,212,8)"/><text x="14.4816%" y="735.50">&lt;m..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (38 samples, 2.88%)</title><rect x="14.2316%" y="709" width="2.8766%" height="15" fill="rgb(223,33,50)"/><text x="14.4816%" y="719.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (38 samples, 2.88%)</title><rect x="14.2316%" y="693" width="2.8766%" height="15" fill="rgb(219,149,13)"/><text x="14.4816%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (38 samples, 2.88%)</title><rect x="14.2316%" y="677" width="2.8766%" height="15" fill="rgb(250,156,29)"/><text x="14.4816%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (38 samples, 2.88%)</title><rect x="14.2316%" y="661" width="2.8766%" height="15" fill="rgb(216,193,19)"/><text x="14.4816%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (38 samples, 2.88%)</title><rect x="14.2316%" y="645" width="2.8766%" height="15" fill="rgb(216,135,14)"/><text x="14.4816%" y="655.50">st..</text></g><g><title>__libc_recv (38 samples, 2.88%)</title><rect x="14.2316%" y="629" width="2.8766%" height="15" fill="rgb(241,47,5)"/><text x="14.4816%" y="639.50">__..</text></g><g><title>entry_SYSCALL_64 (37 samples, 2.80%)</title><rect x="14.3073%" y="613" width="2.8009%" height="15" fill="rgb(233,42,35)"/><text x="14.5573%" y="623.50">en..</text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.15%)</title><rect x="17.1083%" y="725" width="0.1514%" height="15" fill="rgb(231,13,6)"/><text x="17.3583%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (41 samples, 3.10%)</title><rect x="14.2316%" y="869" width="3.1037%" height="15" fill="rgb(207,181,40)"/><text x="14.4816%" y="879.50">cor..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (41 samples, 3.10%)</title><rect x="14.2316%" y="853" width="3.1037%" height="15" fill="rgb(254,173,49)"/><text x="14.4816%" y="863.50">std..</text></g><g><title>decor::Shim::run_on_tcp (41 samples, 3.10%)</title><rect x="14.2316%" y="837" width="3.1037%" height="15" fill="rgb(221,1,38)"/><text x="14.4816%" y="847.50">dec..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (41 samples, 3.10%)</title><rect x="14.2316%" y="821" width="3.1037%" height="15" fill="rgb(206,124,46)"/><text x="14.4816%" y="831.50">msq..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (41 samples, 3.10%)</title><rect x="14.2316%" y="805" width="3.1037%" height="15" fill="rgb(249,21,11)"/><text x="14.4816%" y="815.50">&lt;de..</text></g><g><title>decor::answer_rows (3 samples, 0.23%)</title><rect x="17.1083%" y="789" width="0.2271%" height="15" fill="rgb(222,201,40)"/><text x="17.3583%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="17.1083%" y="773" width="0.2271%" height="15" fill="rgb(235,61,29)"/><text x="17.3583%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.23%)</title><rect x="17.1083%" y="757" width="0.2271%" height="15" fill="rgb(219,207,3)"/><text x="17.3583%" y="767.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.23%)</title><rect x="17.1083%" y="741" width="0.2271%" height="15" fill="rgb(222,56,46)"/><text x="17.3583%" y="751.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (2 samples, 0.15%)</title><rect x="17.4111%" y="853" width="0.1514%" height="15" fill="rgb(239,76,54)"/><text x="17.6611%" y="863.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.23%)</title><rect x="17.4111%" y="869" width="0.2271%" height="15" fill="rgb(231,124,27)"/><text x="17.6611%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.23%)</title><rect x="17.6382%" y="725" width="0.2271%" height="15" fill="rgb(249,195,6)"/><text x="17.8882%" y="735.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="17.6382%" y="709" width="0.2271%" height="15" fill="rgb(237,174,47)"/><text x="17.8882%" y="719.50"></text></g><g><title>_int_malloc (3 samples, 0.23%)</title><rect x="17.6382%" y="693" width="0.2271%" height="15" fill="rgb(206,201,31)"/><text x="17.8882%" y="703.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.15%)</title><rect x="18.7737%" y="501" width="0.1514%" height="15" fill="rgb(231,57,52)"/><text x="19.0237%" y="511.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.15%)</title><rect x="18.9251%" y="501" width="0.1514%" height="15" fill="rgb(248,177,22)"/><text x="19.1751%" y="511.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.15%)</title><rect x="19.8335%" y="437" width="0.1514%" height="15" fill="rgb(215,211,37)"/><text x="20.0835%" y="447.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="19.8335%" y="421" width="0.1514%" height="15" fill="rgb(241,128,51)"/><text x="20.0835%" y="431.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="19.9849%" y="437" width="0.1514%" height="15" fill="rgb(227,165,31)"/><text x="20.2349%" y="447.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="19.9849%" y="421" width="0.1514%" height="15" fill="rgb(228,167,24)"/><text x="20.2349%" y="431.50"></text></g><g><title>__schedule (11 samples, 0.83%)</title><rect x="19.4550%" y="453" width="0.8327%" height="15" fill="rgb(228,143,12)"/><text x="19.7050%" y="463.50"></text></g><g><title>inet_recvmsg (31 samples, 2.35%)</title><rect x="18.0167%" y="549" width="2.3467%" height="15" fill="rgb(249,149,8)"/><text x="18.2667%" y="559.50">i..</text></g><g><title>tcp_recvmsg (31 samples, 2.35%)</title><rect x="18.0167%" y="533" width="2.3467%" height="15" fill="rgb(243,35,44)"/><text x="18.2667%" y="543.50">t..</text></g><g><title>sk_wait_data (21 samples, 1.59%)</title><rect x="18.7737%" y="517" width="1.5897%" height="15" fill="rgb(246,89,9)"/><text x="19.0237%" y="527.50"></text></g><g><title>wait_woken (16 samples, 1.21%)</title><rect x="19.1522%" y="501" width="1.2112%" height="15" fill="rgb(233,213,13)"/><text x="19.4022%" y="511.50"></text></g><g><title>schedule_timeout (15 samples, 1.14%)</title><rect x="19.2279%" y="485" width="1.1355%" height="15" fill="rgb(233,141,41)"/><text x="19.4779%" y="495.50"></text></g><g><title>schedule (13 samples, 0.98%)</title><rect x="19.3793%" y="469" width="0.9841%" height="15" fill="rgb(239,167,4)"/><text x="19.6293%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (32 samples, 2.42%)</title><rect x="18.0167%" y="581" width="2.4224%" height="15" fill="rgb(209,217,16)"/><text x="18.2667%" y="591.50">__..</text></g><g><title>__sys_recvfrom (32 samples, 2.42%)</title><rect x="18.0167%" y="565" width="2.4224%" height="15" fill="rgb(219,88,35)"/><text x="18.2667%" y="575.50">__..</text></g><g><title>do_syscall_64 (34 samples, 2.57%)</title><rect x="18.0167%" y="597" width="2.5738%" height="15" fill="rgb(220,193,23)"/><text x="18.2667%" y="607.50">do..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.15%)</title><rect x="20.4391%" y="581" width="0.1514%" height="15" fill="rgb(230,90,52)"/><text x="20.6891%" y="591.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.15%)</title><rect x="20.4391%" y="565" width="0.1514%" height="15" fill="rgb(252,106,19)"/><text x="20.6891%" y="575.50"></text></g><g><title>kfree (2 samples, 0.15%)</title><rect x="20.4391%" y="549" width="0.1514%" height="15" fill="rgb(206,74,20)"/><text x="20.6891%" y="559.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (38 samples, 2.88%)</title><rect x="17.8653%" y="709" width="2.8766%" height="15" fill="rgb(230,138,44)"/><text x="18.1153%" y="719.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (38 samples, 2.88%)</title><rect x="17.8653%" y="693" width="2.8766%" height="15" fill="rgb(235,182,43)"/><text x="18.1153%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (38 samples, 2.88%)</title><rect x="17.8653%" y="677" width="2.8766%" height="15" fill="rgb(242,16,51)"/><text x="18.1153%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (38 samples, 2.88%)</title><rect x="17.8653%" y="661" width="2.8766%" height="15" fill="rgb(248,9,4)"/><text x="18.1153%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (38 samples, 2.88%)</title><rect x="17.8653%" y="645" width="2.8766%" height="15" fill="rgb(210,31,22)"/><text x="18.1153%" y="655.50">st..</text></g><g><title>__libc_recv (38 samples, 2.88%)</title><rect x="17.8653%" y="629" width="2.8766%" height="15" fill="rgb(239,54,39)"/><text x="18.1153%" y="639.50">__..</text></g><g><title>entry_SYSCALL_64 (37 samples, 2.80%)</title><rect x="17.9410%" y="613" width="2.8009%" height="15" fill="rgb(230,99,41)"/><text x="18.1910%" y="623.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="20.5905%" y="597" width="0.1514%" height="15" fill="rgb(253,106,12)"/><text x="20.8405%" y="607.50"></text></g><g><title>decor::Shim::run_on_tcp (42 samples, 3.18%)</title><rect x="17.6382%" y="869" width="3.1794%" height="15" fill="rgb(213,46,41)"/><text x="17.8882%" y="879.50">dec..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (42 samples, 3.18%)</title><rect x="17.6382%" y="853" width="3.1794%" height="15" fill="rgb(215,133,35)"/><text x="17.8882%" y="863.50">msq..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (42 samples, 3.18%)</title><rect x="17.6382%" y="837" width="3.1794%" height="15" fill="rgb(213,28,5)"/><text x="17.8882%" y="847.50">&lt;de..</text></g><g><title>mysql::conn::Conn::start_transaction (42 samples, 3.18%)</title><rect x="17.6382%" y="821" width="3.1794%" height="15" fill="rgb(215,77,49)"/><text x="17.8882%" y="831.50">mys..</text></g><g><title>mysql::conn::Conn::_start_transaction (42 samples, 3.18%)</title><rect x="17.6382%" y="805" width="3.1794%" height="15" fill="rgb(248,100,22)"/><text x="17.8882%" y="815.50">mys..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (42 samples, 3.18%)</title><rect x="17.6382%" y="789" width="3.1794%" height="15" fill="rgb(208,67,9)"/><text x="17.8882%" y="799.50">mys..</text></g><g><title>mysql::conn::Conn::_query (42 samples, 3.18%)</title><rect x="17.6382%" y="773" width="3.1794%" height="15" fill="rgb(219,133,21)"/><text x="17.8882%" y="783.50">mys..</text></g><g><title>mysql::conn::Conn::handle_result_set (42 samples, 3.18%)</title><rect x="17.6382%" y="757" width="3.1794%" height="15" fill="rgb(246,46,29)"/><text x="17.8882%" y="767.50">mys..</text></g><g><title>mysql::conn::Conn::read_packet (42 samples, 3.18%)</title><rect x="17.6382%" y="741" width="3.1794%" height="15" fill="rgb(246,185,52)"/><text x="17.8882%" y="751.50">mys..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 2.95%)</title><rect x="17.8653%" y="725" width="2.9523%" height="15" fill="rgb(252,136,11)"/><text x="18.1153%" y="735.50">&lt;my..</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="20.9690%" y="789" width="0.1514%" height="15" fill="rgb(219,138,53)"/><text x="21.2190%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="20.9690%" y="805" width="0.2271%" height="15" fill="rgb(211,51,23)"/><text x="21.2190%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (7 samples, 0.53%)</title><rect x="20.8933%" y="837" width="0.5299%" height="15" fill="rgb(247,221,28)"/><text x="21.1433%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (7 samples, 0.53%)</title><rect x="20.8933%" y="821" width="0.5299%" height="15" fill="rgb(251,222,45)"/><text x="21.1433%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="21.1961%" y="805" width="0.2271%" height="15" fill="rgb(217,162,53)"/><text x="21.4461%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="21.2718%" y="789" width="0.1514%" height="15" fill="rgb(229,93,14)"/><text x="21.5218%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="21.4232%" y="805" width="0.1514%" height="15" fill="rgb(209,67,49)"/><text x="21.6732%" y="815.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.38%)</title><rect x="21.8017%" y="709" width="0.3785%" height="15" fill="rgb(213,87,29)"/><text x="22.0517%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.38%)</title><rect x="21.8017%" y="693" width="0.3785%" height="15" fill="rgb(205,151,52)"/><text x="22.0517%" y="703.50"></text></g><g><title>core::fmt::write (4 samples, 0.30%)</title><rect x="21.8774%" y="677" width="0.3028%" height="15" fill="rgb(253,215,39)"/><text x="22.1274%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.30%)</title><rect x="21.8774%" y="661" width="0.3028%" height="15" fill="rgb(221,220,41)"/><text x="22.1274%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.30%)</title><rect x="21.8774%" y="645" width="0.3028%" height="15" fill="rgb(218,133,21)"/><text x="22.1274%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.30%)</title><rect x="21.8774%" y="629" width="0.3028%" height="15" fill="rgb(221,193,43)"/><text x="22.1274%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.30%)</title><rect x="21.8774%" y="613" width="0.3028%" height="15" fill="rgb(240,128,52)"/><text x="22.1274%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="22.0288%" y="597" width="0.1514%" height="15" fill="rgb(253,114,12)"/><text x="22.2788%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="22.0288%" y="581" width="0.1514%" height="15" fill="rgb(215,223,47)"/><text x="22.2788%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="22.0288%" y="565" width="0.1514%" height="15" fill="rgb(248,225,23)"/><text x="22.2788%" y="575.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="22.0288%" y="549" width="0.1514%" height="15" fill="rgb(250,108,0)"/><text x="22.2788%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.76%)</title><rect x="22.1802%" y="693" width="0.7570%" height="15" fill="rgb(228,208,7)"/><text x="22.4302%" y="703.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.61%)</title><rect x="22.3316%" y="677" width="0.6056%" height="15" fill="rgb(244,45,10)"/><text x="22.5816%" y="687.50"></text></g><g><title>_int_malloc (5 samples, 0.38%)</title><rect x="22.5587%" y="661" width="0.3785%" height="15" fill="rgb(207,125,25)"/><text x="22.8087%" y="671.50"></text></g><g><title>decor::query_transformer::QueryTransformer::joinoperator_to_mv_joinoperator (21 samples, 1.59%)</title><rect x="21.5746%" y="773" width="1.5897%" height="15" fill="rgb(210,195,18)"/><text x="21.8246%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (21 samples, 1.59%)</title><rect x="21.5746%" y="757" width="1.5897%" height="15" fill="rgb(249,80,12)"/><text x="21.8246%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (21 samples, 1.59%)</title><rect x="21.5746%" y="741" width="1.5897%" height="15" fill="rgb(221,65,9)"/><text x="21.8246%" y="751.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (21 samples, 1.59%)</title><rect x="21.5746%" y="725" width="1.5897%" height="15" fill="rgb(235,49,36)"/><text x="21.8246%" y="735.50"></text></g><g><title>decor::helpers::str_subset_of_idents (13 samples, 0.98%)</title><rect x="22.1802%" y="709" width="0.9841%" height="15" fill="rgb(225,32,20)"/><text x="22.4302%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="23.0129%" y="693" width="0.1514%" height="15" fill="rgb(215,141,46)"/><text x="23.2629%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="23.4671%" y="709" width="0.2271%" height="15" fill="rgb(250,160,47)"/><text x="23.7171%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="23.4671%" y="693" width="0.2271%" height="15" fill="rgb(216,222,40)"/><text x="23.7171%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="23.5428%" y="677" width="0.1514%" height="15" fill="rgb(234,217,39)"/><text x="23.7928%" y="687.50"></text></g><g><title>core::fmt::write (5 samples, 0.38%)</title><rect x="23.3914%" y="741" width="0.3785%" height="15" fill="rgb(207,178,40)"/><text x="23.6414%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (5 samples, 0.38%)</title><rect x="23.3914%" y="725" width="0.3785%" height="15" fill="rgb(221,136,13)"/><text x="23.6414%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="24.0727%" y="629" width="0.1514%" height="15" fill="rgb(249,199,10)"/><text x="24.3227%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.30%)</title><rect x="23.9970%" y="661" width="0.3028%" height="15" fill="rgb(249,222,13)"/><text x="24.2470%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.30%)</title><rect x="23.9970%" y="645" width="0.3028%" height="15" fill="rgb(244,185,38)"/><text x="24.2470%" y="655.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.53%)</title><rect x="23.8456%" y="725" width="0.5299%" height="15" fill="rgb(236,202,9)"/><text x="24.0956%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.53%)</title><rect x="23.8456%" y="709" width="0.5299%" height="15" fill="rgb(250,229,37)"/><text x="24.0956%" y="719.50"></text></g><g><title>core::fmt::write (7 samples, 0.53%)</title><rect x="23.8456%" y="693" width="0.5299%" height="15" fill="rgb(206,174,23)"/><text x="24.0956%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.45%)</title><rect x="23.9213%" y="677" width="0.4542%" height="15" fill="rgb(211,33,43)"/><text x="24.1713%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 3.03%)</title><rect x="21.5746%" y="789" width="3.0280%" height="15" fill="rgb(245,58,50)"/><text x="21.8246%" y="799.50">&lt;co..</text></g><g><title>decor::query_transformer::QueryTransformer::tablefactor_to_mv_tablefactor (19 samples, 1.44%)</title><rect x="23.1643%" y="773" width="1.4383%" height="15" fill="rgb(244,68,36)"/><text x="23.4143%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (18 samples, 1.36%)</title><rect x="23.2400%" y="757" width="1.3626%" height="15" fill="rgb(232,229,15)"/><text x="23.4900%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (11 samples, 0.83%)</title><rect x="23.7699%" y="741" width="0.8327%" height="15" fill="rgb(254,30,23)"/><text x="24.0199%" y="751.50"></text></g><g><title>decor::helpers::str_subset_of_idents (3 samples, 0.23%)</title><rect x="24.3755%" y="725" width="0.2271%" height="15" fill="rgb(235,160,14)"/><text x="24.6255%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 1.51%)</title><rect x="24.6026%" y="789" width="1.5140%" height="15" fill="rgb(212,155,44)"/><text x="24.8526%" y="799.50"></text></g><g><title>__GI___libc_malloc (20 samples, 1.51%)</title><rect x="24.6026%" y="773" width="1.5140%" height="15" fill="rgb(226,2,50)"/><text x="24.8526%" y="783.50"></text></g><g><title>_int_malloc (20 samples, 1.51%)</title><rect x="24.6026%" y="757" width="1.5140%" height="15" fill="rgb(234,177,6)"/><text x="24.8526%" y="767.50"></text></g><g><title>malloc_consolidate (17 samples, 1.29%)</title><rect x="24.8297%" y="741" width="1.2869%" height="15" fill="rgb(217,24,9)"/><text x="25.0797%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="26.3437%" y="725" width="0.1514%" height="15" fill="rgb(220,13,46)"/><text x="26.5937%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.15%)</title><rect x="26.3437%" y="709" width="0.1514%" height="15" fill="rgb(239,221,27)"/><text x="26.5937%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="26.3437%" y="693" width="0.1514%" height="15" fill="rgb(222,198,25)"/><text x="26.5937%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="26.3437%" y="677" width="0.1514%" height="15" fill="rgb(211,99,13)"/><text x="26.5937%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="26.3437%" y="661" width="0.1514%" height="15" fill="rgb(232,111,31)"/><text x="26.5937%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="26.3437%" y="645" width="0.1514%" height="15" fill="rgb(245,82,37)"/><text x="26.5937%" y="655.50"></text></g><g><title>core::fmt::write (4 samples, 0.30%)</title><rect x="26.3437%" y="757" width="0.3028%" height="15" fill="rgb(227,149,46)"/><text x="26.5937%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.30%)</title><rect x="26.3437%" y="741" width="0.3028%" height="15" fill="rgb(218,36,50)"/><text x="26.5937%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.15%)</title><rect x="26.4951%" y="725" width="0.1514%" height="15" fill="rgb(226,80,48)"/><text x="26.7451%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="27.0250%" y="677" width="0.3785%" height="15" fill="rgb(238,224,15)"/><text x="27.2750%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.38%)</title><rect x="27.0250%" y="661" width="0.3785%" height="15" fill="rgb(241,136,10)"/><text x="27.2750%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.30%)</title><rect x="27.1007%" y="645" width="0.3028%" height="15" fill="rgb(208,32,45)"/><text x="27.3507%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.23%)</title><rect x="27.1764%" y="629" width="0.2271%" height="15" fill="rgb(207,135,9)"/><text x="27.4264%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="27.2521%" y="613" width="0.1514%" height="15" fill="rgb(206,86,44)"/><text x="27.5021%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="27.2521%" y="597" width="0.1514%" height="15" fill="rgb(245,177,15)"/><text x="27.5021%" y="607.50"></text></g><g><title>alloc::fmt::format (13 samples, 0.98%)</title><rect x="26.8736%" y="741" width="0.9841%" height="15" fill="rgb(206,64,50)"/><text x="27.1236%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 0.91%)</title><rect x="26.9493%" y="725" width="0.9084%" height="15" fill="rgb(234,36,40)"/><text x="27.1993%" y="735.50"></text></g><g><title>core::fmt::write (12 samples, 0.91%)</title><rect x="26.9493%" y="709" width="0.9084%" height="15" fill="rgb(213,64,8)"/><text x="27.1993%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (11 samples, 0.83%)</title><rect x="27.0250%" y="693" width="0.8327%" height="15" fill="rgb(210,75,36)"/><text x="27.2750%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.38%)</title><rect x="27.4792%" y="677" width="0.3785%" height="15" fill="rgb(229,88,21)"/><text x="27.7292%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="27.7063%" y="661" width="0.1514%" height="15" fill="rgb(252,204,47)"/><text x="27.9563%" y="671.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.76%)</title><rect x="28.1605%" y="709" width="0.7570%" height="15" fill="rgb(208,77,27)"/><text x="28.4105%" y="719.50"></text></g><g><title>_int_malloc (7 samples, 0.53%)</title><rect x="28.3876%" y="693" width="0.5299%" height="15" fill="rgb(221,76,26)"/><text x="28.6376%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.98%)</title><rect x="28.0848%" y="725" width="0.9841%" height="15" fill="rgb(225,139,18)"/><text x="28.3348%" y="735.50"></text></g><g><title>__rust_alloc (2 samples, 0.15%)</title><rect x="28.9175%" y="709" width="0.1514%" height="15" fill="rgb(230,137,11)"/><text x="29.1675%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (103 samples, 7.80%)</title><rect x="21.4232%" y="821" width="7.7971%" height="15" fill="rgb(212,28,1)"/><text x="21.6732%" y="831.50">&lt;alloc::vec..</text></g><g><title>decor::query_transformer::QueryTransformer::tablewithjoins_to_mv_tablewithjoins (101 samples, 7.65%)</title><rect x="21.5746%" y="805" width="7.6457%" height="15" fill="rgb(248,164,17)"/><text x="21.8246%" y="815.50">decor::que..</text></g><g><title>decor::query_transformer::QueryTransformer::tablefactor_to_mv_tablefactor (41 samples, 3.10%)</title><rect x="26.1166%" y="789" width="3.1037%" height="15" fill="rgb(222,171,42)"/><text x="26.3666%" y="799.50">dec..</text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (39 samples, 2.95%)</title><rect x="26.2680%" y="773" width="2.9523%" height="15" fill="rgb(243,84,45)"/><text x="26.5180%" y="783.50">dec..</text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (34 samples, 2.57%)</title><rect x="26.6465%" y="757" width="2.5738%" height="15" fill="rgb(252,49,23)"/><text x="26.8965%" y="767.50">de..</text></g><g><title>decor::helpers::str_subset_of_idents (18 samples, 1.36%)</title><rect x="27.8577%" y="741" width="1.3626%" height="15" fill="rgb(215,19,7)"/><text x="28.1077%" y="751.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="29.5988%" y="741" width="0.1514%" height="15" fill="rgb(238,81,41)"/><text x="29.8488%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.15%)</title><rect x="29.5988%" y="725" width="0.1514%" height="15" fill="rgb(210,199,37)"/><text x="29.8488%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.38%)</title><rect x="29.5231%" y="757" width="0.3785%" height="15" fill="rgb(244,192,49)"/><text x="29.7731%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.83%)</title><rect x="29.2203%" y="821" width="0.8327%" height="15" fill="rgb(226,211,11)"/><text x="29.4703%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (10 samples, 0.76%)</title><rect x="29.2960%" y="805" width="0.7570%" height="15" fill="rgb(236,162,54)"/><text x="29.5460%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (10 samples, 0.76%)</title><rect x="29.2960%" y="789" width="0.7570%" height="15" fill="rgb(220,229,9)"/><text x="29.5460%" y="799.50"></text></g><g><title>decor::helpers::str_subset_of_idents (10 samples, 0.76%)</title><rect x="29.2960%" y="773" width="0.7570%" height="15" fill="rgb(250,87,22)"/><text x="29.5460%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="30.1287%" y="805" width="0.1514%" height="15" fill="rgb(239,43,17)"/><text x="30.3787%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="30.3558%" y="773" width="0.1514%" height="15" fill="rgb(231,177,25)"/><text x="30.6058%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="30.3558%" y="757" width="0.1514%" height="15" fill="rgb(219,179,1)"/><text x="30.6058%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="30.3558%" y="741" width="0.1514%" height="15" fill="rgb(238,219,53)"/><text x="30.6058%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="30.3558%" y="725" width="0.1514%" height="15" fill="rgb(232,167,36)"/><text x="30.6058%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="30.3558%" y="709" width="0.1514%" height="15" fill="rgb(244,19,51)"/><text x="30.6058%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="30.3558%" y="693" width="0.1514%" height="15" fill="rgb(224,6,22)"/><text x="30.6058%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="30.3558%" y="677" width="0.1514%" height="15" fill="rgb(224,145,5)"/><text x="30.6058%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="30.3558%" y="661" width="0.1514%" height="15" fill="rgb(234,130,49)"/><text x="30.6058%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="30.3558%" y="645" width="0.1514%" height="15" fill="rgb(254,6,2)"/><text x="30.6058%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="30.3558%" y="629" width="0.1514%" height="15" fill="rgb(208,96,46)"/><text x="30.6058%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="30.3558%" y="613" width="0.1514%" height="15" fill="rgb(239,3,39)"/><text x="30.6058%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="30.3558%" y="597" width="0.1514%" height="15" fill="rgb(233,210,1)"/><text x="30.6058%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="30.6586%" y="709" width="0.1514%" height="15" fill="rgb(244,137,37)"/><text x="30.9086%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="30.6586%" y="693" width="0.1514%" height="15" fill="rgb(240,136,2)"/><text x="30.9086%" y="703.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.15%)</title><rect x="30.6586%" y="677" width="0.1514%" height="15" fill="rgb(239,18,37)"/><text x="30.9086%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.15%)</title><rect x="30.6586%" y="661" width="0.1514%" height="15" fill="rgb(218,185,22)"/><text x="30.9086%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.15%)</title><rect x="30.6586%" y="645" width="0.1514%" height="15" fill="rgb(225,218,4)"/><text x="30.9086%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.15%)</title><rect x="30.6586%" y="629" width="0.1514%" height="15" fill="rgb(230,182,32)"/><text x="30.9086%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.15%)</title><rect x="30.6586%" y="613" width="0.1514%" height="15" fill="rgb(242,56,43)"/><text x="30.9086%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="30.6586%" y="597" width="0.1514%" height="15" fill="rgb(233,99,24)"/><text x="30.9086%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.15%)</title><rect x="30.6586%" y="581" width="0.1514%" height="15" fill="rgb(234,209,42)"/><text x="30.9086%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.15%)</title><rect x="30.6586%" y="565" width="0.1514%" height="15" fill="rgb(227,7,12)"/><text x="30.9086%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="30.6586%" y="549" width="0.1514%" height="15" fill="rgb(245,203,43)"/><text x="30.9086%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="30.6586%" y="533" width="0.1514%" height="15" fill="rgb(238,205,33)"/><text x="30.9086%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="30.6586%" y="517" width="0.1514%" height="15" fill="rgb(231,56,7)"/><text x="30.9086%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="30.6586%" y="501" width="0.1514%" height="15" fill="rgb(244,186,29)"/><text x="30.9086%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="30.6586%" y="485" width="0.1514%" height="15" fill="rgb(234,111,31)"/><text x="30.9086%" y="495.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="30.6586%" y="469" width="0.1514%" height="15" fill="rgb(241,149,10)"/><text x="30.9086%" y="479.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.45%)</title><rect x="30.5829%" y="773" width="0.4542%" height="15" fill="rgb(249,206,44)"/><text x="30.8329%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.45%)</title><rect x="30.5829%" y="757" width="0.4542%" height="15" fill="rgb(251,153,30)"/><text x="30.8329%" y="767.50"></text></g><g><title>core::fmt::write (6 samples, 0.45%)</title><rect x="30.5829%" y="741" width="0.4542%" height="15" fill="rgb(239,152,38)"/><text x="30.8329%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (5 samples, 0.38%)</title><rect x="30.6586%" y="725" width="0.3785%" height="15" fill="rgb(249,139,47)"/><text x="30.9086%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.15%)</title><rect x="30.8857%" y="709" width="0.1514%" height="15" fill="rgb(244,64,35)"/><text x="31.1357%" y="719.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="31.3399%" y="741" width="0.1514%" height="15" fill="rgb(216,46,15)"/><text x="31.5899%" y="751.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.45%)</title><rect x="31.4913%" y="741" width="0.4542%" height="15" fill="rgb(250,74,19)"/><text x="31.7413%" y="751.50"></text></g><g><title>_int_malloc (4 samples, 0.30%)</title><rect x="31.6427%" y="725" width="0.3028%" height="15" fill="rgb(249,42,33)"/><text x="31.8927%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.68%)</title><rect x="31.3399%" y="757" width="0.6813%" height="15" fill="rgb(242,149,17)"/><text x="31.5899%" y="767.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="32.0212%" y="757" width="0.1514%" height="15" fill="rgb(244,29,21)"/><text x="32.2712%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (153 samples, 11.58%)</title><rect x="20.8176%" y="869" width="11.5821%" height="15" fill="rgb(220,130,37)"/><text x="21.0676%" y="879.50">decor::query_tran..</text></g><g><title>decor::query_transformer::QueryTransformer::query_to_mv_query (152 samples, 11.51%)</title><rect x="20.8933%" y="853" width="11.5064%" height="15" fill="rgb(211,67,2)"/><text x="21.1433%" y="863.50">decor::query_tran..</text></g><g><title>decor::query_transformer::QueryTransformer::setexpr_to_mv_setexpr (145 samples, 10.98%)</title><rect x="21.4232%" y="837" width="10.9765%" height="15" fill="rgb(235,68,52)"/><text x="21.6732%" y="847.50">decor::query_tra..</text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (30 samples, 2.27%)</title><rect x="30.1287%" y="821" width="2.2710%" height="15" fill="rgb(246,142,3)"/><text x="30.3787%" y="831.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (28 samples, 2.12%)</title><rect x="30.2801%" y="805" width="2.1196%" height="15" fill="rgb(241,25,7)"/><text x="30.5301%" y="815.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (28 samples, 2.12%)</title><rect x="30.2801%" y="789" width="2.1196%" height="15" fill="rgb(242,119,39)"/><text x="30.5301%" y="799.50">d..</text></g><g><title>decor::helpers::str_subset_of_idents (17 samples, 1.29%)</title><rect x="31.1128%" y="773" width="1.2869%" height="15" fill="rgb(241,98,45)"/><text x="31.3628%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="32.3997%" y="853" width="0.1514%" height="15" fill="rgb(254,28,30)"/><text x="32.6497%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.15%)</title><rect x="32.3997%" y="837" width="0.1514%" height="15" fill="rgb(241,142,54)"/><text x="32.6497%" y="847.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.15%)</title><rect x="32.3997%" y="821" width="0.1514%" height="15" fill="rgb(222,85,15)"/><text x="32.6497%" y="831.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.15%)</title><rect x="32.3997%" y="805" width="0.1514%" height="15" fill="rgb(210,85,47)"/><text x="32.6497%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="32.3997%" y="789" width="0.1514%" height="15" fill="rgb(224,206,25)"/><text x="32.6497%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.15%)</title><rect x="32.3997%" y="773" width="0.1514%" height="15" fill="rgb(243,201,19)"/><text x="32.6497%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.15%)</title><rect x="32.3997%" y="757" width="0.1514%" height="15" fill="rgb(236,59,4)"/><text x="32.6497%" y="767.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="32.3997%" y="741" width="0.1514%" height="15" fill="rgb(254,179,45)"/><text x="32.6497%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="32.3997%" y="725" width="0.1514%" height="15" fill="rgb(226,14,10)"/><text x="32.6497%" y="735.50"></text></g><g><title>lobsters::main (4 samples, 0.30%)</title><rect x="32.3997%" y="869" width="0.3028%" height="15" fill="rgb(244,27,41)"/><text x="32.6497%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (2 samples, 0.15%)</title><rect x="32.8539%" y="837" width="0.1514%" height="15" fill="rgb(235,35,32)"/><text x="33.1039%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="32.8539%" y="821" width="0.1514%" height="15" fill="rgb(218,68,31)"/><text x="33.1039%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="33.0810%" y="805" width="0.1514%" height="15" fill="rgb(207,120,37)"/><text x="33.3310%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (4 samples, 0.30%)</title><rect x="33.0053%" y="821" width="0.3028%" height="15" fill="rgb(227,98,0)"/><text x="33.2553%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.15%)</title><rect x="33.3838%" y="789" width="0.1514%" height="15" fill="rgb(207,7,3)"/><text x="33.6338%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (11 samples, 0.83%)</title><rect x="32.7782%" y="869" width="0.8327%" height="15" fill="rgb(206,98,19)"/><text x="33.0282%" y="879.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (10 samples, 0.76%)</title><rect x="32.8539%" y="853" width="0.7570%" height="15" fill="rgb(217,5,26)"/><text x="33.1039%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (8 samples, 0.61%)</title><rect x="33.0053%" y="837" width="0.6056%" height="15" fill="rgb(235,190,38)"/><text x="33.2553%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.30%)</title><rect x="33.3081%" y="821" width="0.3028%" height="15" fill="rgb(247,86,24)"/><text x="33.5581%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.30%)</title><rect x="33.3081%" y="805" width="0.3028%" height="15" fill="rgb(205,101,16)"/><text x="33.5581%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.15%)</title><rect x="33.6866%" y="869" width="0.1514%" height="15" fill="rgb(246,168,33)"/><text x="33.9366%" y="879.50"></text></g><g><title>regex::exec::ExecBuilder::build (2 samples, 0.15%)</title><rect x="33.9137%" y="869" width="0.1514%" height="15" fill="rgb(231,114,1)"/><text x="34.1637%" y="879.50"></text></g><g><title>regex::compile::Compiler::compile (2 samples, 0.15%)</title><rect x="33.9137%" y="853" width="0.1514%" height="15" fill="rgb(207,184,53)"/><text x="34.1637%" y="863.50"></text></g><g><title>regex::compile::Compiler::c (2 samples, 0.15%)</title><rect x="33.9137%" y="837" width="0.1514%" height="15" fill="rgb(224,95,51)"/><text x="34.1637%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (2 samples, 0.15%)</title><rect x="33.9137%" y="821" width="0.1514%" height="15" fill="rgb(212,188,45)"/><text x="34.1637%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_concat (2 samples, 0.15%)</title><rect x="33.9137%" y="805" width="0.1514%" height="15" fill="rgb(223,154,38)"/><text x="34.1637%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_class (2 samples, 0.15%)</title><rect x="33.9137%" y="789" width="0.1514%" height="15" fill="rgb(251,22,52)"/><text x="34.1637%" y="799.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (2 samples, 0.15%)</title><rect x="33.9137%" y="773" width="0.1514%" height="15" fill="rgb(229,209,22)"/><text x="34.1637%" y="783.50"></text></g><g><title>regex::compile::SuffixCache::get (2 samples, 0.15%)</title><rect x="33.9137%" y="757" width="0.1514%" height="15" fill="rgb(234,138,34)"/><text x="34.1637%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (13 samples, 0.98%)</title><rect x="34.1408%" y="693" width="0.9841%" height="15" fill="rgb(212,95,11)"/><text x="34.3908%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.98%)</title><rect x="34.1408%" y="677" width="0.9841%" height="15" fill="rgb(240,179,47)"/><text x="34.3908%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (13 samples, 0.98%)</title><rect x="34.1408%" y="661" width="0.9841%" height="15" fill="rgb(240,163,11)"/><text x="34.3908%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.98%)</title><rect x="34.1408%" y="645" width="0.9841%" height="15" fill="rgb(236,37,12)"/><text x="34.3908%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.98%)</title><rect x="34.1408%" y="629" width="0.9841%" height="15" fill="rgb(232,164,16)"/><text x="34.3908%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (14 samples, 1.06%)</title><rect x="34.1408%" y="789" width="1.0598%" height="15" fill="rgb(244,205,15)"/><text x="34.3908%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::expected (14 samples, 1.06%)</title><rect x="34.1408%" y="773" width="1.0598%" height="15" fill="rgb(223,117,47)"/><text x="34.3908%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 1.06%)</title><rect x="34.1408%" y="757" width="1.0598%" height="15" fill="rgb(244,107,35)"/><text x="34.3908%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.06%)</title><rect x="34.1408%" y="741" width="1.0598%" height="15" fill="rgb(205,140,8)"/><text x="34.3908%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.06%)</title><rect x="34.1408%" y="725" width="1.0598%" height="15" fill="rgb(228,84,46)"/><text x="34.3908%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.06%)</title><rect x="34.1408%" y="709" width="1.0598%" height="15" fill="rgb(254,188,9)"/><text x="34.3908%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (17 samples, 1.29%)</title><rect x="34.0651%" y="837" width="1.2869%" height="15" fill="rgb(206,112,54)"/><text x="34.3151%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.29%)</title><rect x="34.0651%" y="821" width="1.2869%" height="15" fill="rgb(216,84,49)"/><text x="34.3151%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (17 samples, 1.29%)</title><rect x="34.0651%" y="805" width="1.2869%" height="15" fill="rgb(214,194,35)"/><text x="34.3151%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_value (2 samples, 0.15%)</title><rect x="35.2006%" y="789" width="0.1514%" height="15" fill="rgb(249,28,3)"/><text x="35.4506%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 1.36%)</title><rect x="34.0651%" y="869" width="1.3626%" height="15" fill="rgb(222,56,52)"/><text x="34.3151%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (18 samples, 1.36%)</title><rect x="34.0651%" y="853" width="1.3626%" height="15" fill="rgb(245,217,50)"/><text x="34.3151%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.15%)</title><rect x="35.4277%" y="853" width="0.1514%" height="15" fill="rgb(213,201,24)"/><text x="35.6777%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.15%)</title><rect x="35.4277%" y="837" width="0.1514%" height="15" fill="rgb(248,116,28)"/><text x="35.6777%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.15%)</title><rect x="35.4277%" y="821" width="0.1514%" height="15" fill="rgb(219,72,43)"/><text x="35.6777%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.15%)</title><rect x="35.4277%" y="805" width="0.1514%" height="15" fill="rgb(209,138,14)"/><text x="35.6777%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.15%)</title><rect x="35.4277%" y="789" width="0.1514%" height="15" fill="rgb(222,18,33)"/><text x="35.6777%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="35.4277%" y="773" width="0.1514%" height="15" fill="rgb(213,199,7)"/><text x="35.6777%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="35.4277%" y="757" width="0.1514%" height="15" fill="rgb(250,110,10)"/><text x="35.6777%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.15%)</title><rect x="35.4277%" y="741" width="0.1514%" height="15" fill="rgb(248,123,6)"/><text x="35.6777%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="35.4277%" y="725" width="0.1514%" height="15" fill="rgb(206,91,31)"/><text x="35.6777%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="35.4277%" y="709" width="0.1514%" height="15" fill="rgb(211,154,13)"/><text x="35.6777%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.15%)</title><rect x="35.4277%" y="693" width="0.1514%" height="15" fill="rgb(225,148,7)"/><text x="35.6777%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="35.4277%" y="677" width="0.1514%" height="15" fill="rgb(220,160,43)"/><text x="35.6777%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="35.4277%" y="661" width="0.1514%" height="15" fill="rgb(213,52,39)"/><text x="35.6777%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="35.4277%" y="645" width="0.1514%" height="15" fill="rgb(243,137,7)"/><text x="35.6777%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="35.4277%" y="629" width="0.1514%" height="15" fill="rgb(230,79,13)"/><text x="35.6777%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="35.4277%" y="613" width="0.1514%" height="15" fill="rgb(247,105,23)"/><text x="35.6777%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="35.4277%" y="597" width="0.1514%" height="15" fill="rgb(223,179,41)"/><text x="35.6777%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="35.4277%" y="581" width="0.1514%" height="15" fill="rgb(218,9,34)"/><text x="35.6777%" y="591.50"></text></g><g><title>sysmalloc (2 samples, 0.15%)</title><rect x="35.4277%" y="565" width="0.1514%" height="15" fill="rgb(222,106,8)"/><text x="35.6777%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.23%)</title><rect x="35.4277%" y="869" width="0.2271%" height="15" fill="rgb(211,220,0)"/><text x="35.6777%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.15%)</title><rect x="35.7305%" y="821" width="0.1514%" height="15" fill="rgb(229,52,16)"/><text x="35.9805%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.30%)</title><rect x="35.7305%" y="869" width="0.3028%" height="15" fill="rgb(212,155,18)"/><text x="35.9805%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.30%)</title><rect x="35.7305%" y="853" width="0.3028%" height="15" fill="rgb(242,21,14)"/><text x="35.9805%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (4 samples, 0.30%)</title><rect x="35.7305%" y="837" width="0.3028%" height="15" fill="rgb(222,19,48)"/><text x="35.9805%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (2 samples, 0.15%)</title><rect x="35.8819%" y="821" width="0.1514%" height="15" fill="rgb(232,45,27)"/><text x="36.1319%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.15%)</title><rect x="36.0333%" y="805" width="0.1514%" height="15" fill="rgb(249,103,42)"/><text x="36.2833%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.23%)</title><rect x="36.0333%" y="869" width="0.2271%" height="15" fill="rgb(246,81,33)"/><text x="36.2833%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.23%)</title><rect x="36.0333%" y="853" width="0.2271%" height="15" fill="rgb(252,33,42)"/><text x="36.2833%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.23%)</title><rect x="36.0333%" y="837" width="0.2271%" height="15" fill="rgb(209,212,41)"/><text x="36.2833%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (3 samples, 0.23%)</title><rect x="36.0333%" y="821" width="0.2271%" height="15" fill="rgb(207,154,6)"/><text x="36.2833%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.15%)</title><rect x="36.2604%" y="661" width="0.1514%" height="15" fill="rgb(223,64,47)"/><text x="36.5104%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="36.2604%" y="645" width="0.1514%" height="15" fill="rgb(211,161,38)"/><text x="36.5104%" y="655.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.23%)</title><rect x="36.2604%" y="725" width="0.2271%" height="15" fill="rgb(219,138,40)"/><text x="36.5104%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.23%)</title><rect x="36.2604%" y="709" width="0.2271%" height="15" fill="rgb(241,228,46)"/><text x="36.5104%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.23%)</title><rect x="36.2604%" y="693" width="0.2271%" height="15" fill="rgb(223,209,38)"/><text x="36.5104%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="36.2604%" y="677" width="0.2271%" height="15" fill="rgb(236,164,45)"/><text x="36.5104%" y="687.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.23%)</title><rect x="37.2445%" y="373" width="0.2271%" height="15" fill="rgb(231,15,5)"/><text x="37.4945%" y="383.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.23%)</title><rect x="38.0015%" y="181" width="0.2271%" height="15" fill="rgb(252,35,15)"/><text x="38.2515%" y="191.50"></text></g><g><title>sk_reset_timer (3 samples, 0.23%)</title><rect x="38.3800%" y="149" width="0.2271%" height="15" fill="rgb(248,181,18)"/><text x="38.6300%" y="159.50"></text></g><g><title>__mod_timer (3 samples, 0.23%)</title><rect x="38.3800%" y="133" width="0.2271%" height="15" fill="rgb(233,39,42)"/><text x="38.6300%" y="143.50"></text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="38.8342%" y="69" width="0.2271%" height="15" fill="rgb(238,110,33)"/><text x="39.0842%" y="79.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.23%)</title><rect x="38.8342%" y="53" width="0.2271%" height="15" fill="rgb(233,195,10)"/><text x="39.0842%" y="63.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.15%)</title><rect x="39.0613%" y="69" width="0.1514%" height="15" fill="rgb(254,105,3)"/><text x="39.3113%" y="79.50"></text></g><g><title>enqueue_entity (2 samples, 0.15%)</title><rect x="39.0613%" y="53" width="0.1514%" height="15" fill="rgb(221,225,9)"/><text x="39.3113%" y="63.50"></text></g><g><title>__wake_up_common (8 samples, 0.61%)</title><rect x="38.7585%" y="117" width="0.6056%" height="15" fill="rgb(224,227,45)"/><text x="39.0085%" y="127.50"></text></g><g><title>pollwake (8 samples, 0.61%)</title><rect x="38.7585%" y="101" width="0.6056%" height="15" fill="rgb(229,198,43)"/><text x="39.0085%" y="111.50"></text></g><g><title>try_to_wake_up (8 samples, 0.61%)</title><rect x="38.7585%" y="85" width="0.6056%" height="15" fill="rgb(206,209,35)"/><text x="39.0085%" y="95.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.15%)</title><rect x="39.2127%" y="69" width="0.1514%" height="15" fill="rgb(245,195,53)"/><text x="39.4627%" y="79.50"></text></g><g><title>sock_def_readable (12 samples, 0.91%)</title><rect x="38.6071%" y="149" width="0.9084%" height="15" fill="rgb(240,92,26)"/><text x="38.8571%" y="159.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.76%)</title><rect x="38.7585%" y="133" width="0.7570%" height="15" fill="rgb(207,40,23)"/><text x="39.0085%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.15%)</title><rect x="39.3641%" y="117" width="0.1514%" height="15" fill="rgb(223,111,35)"/><text x="39.6141%" y="127.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="39.5912%" y="133" width="0.1514%" height="15" fill="rgb(229,147,28)"/><text x="39.8412%" y="143.50"></text></g><g><title>skb_release_data (2 samples, 0.15%)</title><rect x="39.5912%" y="117" width="0.1514%" height="15" fill="rgb(211,29,28)"/><text x="39.8412%" y="127.50"></text></g><g><title>tcp_ack (5 samples, 0.38%)</title><rect x="39.5155%" y="149" width="0.3785%" height="15" fill="rgb(228,72,33)"/><text x="39.7655%" y="159.50"></text></g><g><title>ip_local_deliver (31 samples, 2.35%)</title><rect x="37.7744%" y="245" width="2.3467%" height="15" fill="rgb(205,214,31)"/><text x="38.0244%" y="255.50">i..</text></g><g><title>ip_local_deliver_finish (31 samples, 2.35%)</title><rect x="37.7744%" y="229" width="2.3467%" height="15" fill="rgb(224,111,15)"/><text x="38.0244%" y="239.50">i..</text></g><g><title>ip_protocol_deliver_rcu (31 samples, 2.35%)</title><rect x="37.7744%" y="213" width="2.3467%" height="15" fill="rgb(253,21,26)"/><text x="38.0244%" y="223.50">i..</text></g><g><title>tcp_v4_rcv (29 samples, 2.20%)</title><rect x="37.9258%" y="197" width="2.1953%" height="15" fill="rgb(245,139,43)"/><text x="38.1758%" y="207.50">t..</text></g><g><title>tcp_v4_do_rcv (25 samples, 1.89%)</title><rect x="38.2286%" y="181" width="1.8925%" height="15" fill="rgb(252,170,7)"/><text x="38.4786%" y="191.50">t..</text></g><g><title>tcp_rcv_established (25 samples, 1.89%)</title><rect x="38.2286%" y="165" width="1.8925%" height="15" fill="rgb(231,118,14)"/><text x="38.4786%" y="175.50">t..</text></g><g><title>__tcp_transmit_skb (43 samples, 3.26%)</title><rect x="36.9417%" y="437" width="3.2551%" height="15" fill="rgb(238,83,0)"/><text x="37.1917%" y="447.50">__t..</text></g><g><title>__ip_queue_xmit (40 samples, 3.03%)</title><rect x="37.1688%" y="421" width="3.0280%" height="15" fill="rgb(221,39,39)"/><text x="37.4188%" y="431.50">__i..</text></g><g><title>ip_output (39 samples, 2.95%)</title><rect x="37.2445%" y="405" width="2.9523%" height="15" fill="rgb(222,119,46)"/><text x="37.4945%" y="415.50">ip_..</text></g><g><title>ip_finish_output2 (39 samples, 2.95%)</title><rect x="37.2445%" y="389" width="2.9523%" height="15" fill="rgb(222,165,49)"/><text x="37.4945%" y="399.50">ip_..</text></g><g><title>__local_bh_enable_ip (36 samples, 2.73%)</title><rect x="37.4716%" y="373" width="2.7252%" height="15" fill="rgb(219,113,52)"/><text x="37.7216%" y="383.50">__..</text></g><g><title>do_softirq (36 samples, 2.73%)</title><rect x="37.4716%" y="357" width="2.7252%" height="15" fill="rgb(214,7,15)"/><text x="37.7216%" y="367.50">do..</text></g><g><title>do_softirq_own_stack (36 samples, 2.73%)</title><rect x="37.4716%" y="341" width="2.7252%" height="15" fill="rgb(235,32,4)"/><text x="37.7216%" y="351.50">do..</text></g><g><title>__do_softirq (36 samples, 2.73%)</title><rect x="37.4716%" y="325" width="2.7252%" height="15" fill="rgb(238,90,54)"/><text x="37.7216%" y="335.50">__..</text></g><g><title>net_rx_action (35 samples, 2.65%)</title><rect x="37.5473%" y="309" width="2.6495%" height="15" fill="rgb(213,208,19)"/><text x="37.7973%" y="319.50">ne..</text></g><g><title>process_backlog (34 samples, 2.57%)</title><rect x="37.6230%" y="293" width="2.5738%" height="15" fill="rgb(233,156,4)"/><text x="37.8730%" y="303.50">pr..</text></g><g><title>__netif_receive_skb_one_core (33 samples, 2.50%)</title><rect x="37.6987%" y="277" width="2.4981%" height="15" fill="rgb(207,194,5)"/><text x="37.9487%" y="287.50">__..</text></g><g><title>ip_rcv (32 samples, 2.42%)</title><rect x="37.7744%" y="261" width="2.4224%" height="15" fill="rgb(206,111,30)"/><text x="38.0244%" y="271.50">ip..</text></g><g><title>__tcp_push_pending_frames (44 samples, 3.33%)</title><rect x="36.9417%" y="469" width="3.3308%" height="15" fill="rgb(243,70,54)"/><text x="37.1917%" y="479.50">__t..</text></g><g><title>tcp_write_xmit (44 samples, 3.33%)</title><rect x="36.9417%" y="453" width="3.3308%" height="15" fill="rgb(242,28,8)"/><text x="37.1917%" y="463.50">tcp..</text></g><g><title>sock_sendmsg (48 samples, 3.63%)</title><rect x="36.8660%" y="517" width="3.6336%" height="15" fill="rgb(219,106,18)"/><text x="37.1160%" y="527.50">sock..</text></g><g><title>tcp_sendmsg (48 samples, 3.63%)</title><rect x="36.8660%" y="501" width="3.6336%" height="15" fill="rgb(244,222,10)"/><text x="37.1160%" y="511.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (48 samples, 3.63%)</title><rect x="36.8660%" y="485" width="3.6336%" height="15" fill="rgb(236,179,52)"/><text x="37.1160%" y="495.50">tcp_..</text></g><g><title>__x64_sys_sendto (51 samples, 3.86%)</title><rect x="36.7903%" y="549" width="3.8607%" height="15" fill="rgb(213,23,39)"/><text x="37.0403%" y="559.50">__x6..</text></g><g><title>__sys_sendto (50 samples, 3.79%)</title><rect x="36.8660%" y="533" width="3.7850%" height="15" fill="rgb(238,48,10)"/><text x="37.1160%" y="543.50">__sy..</text></g><g><title>sockfd_lookup_light (2 samples, 0.15%)</title><rect x="40.4996%" y="517" width="0.1514%" height="15" fill="rgb(251,196,23)"/><text x="40.7496%" y="527.50"></text></g><g><title>__fget_light (2 samples, 0.15%)</title><rect x="40.4996%" y="501" width="0.1514%" height="15" fill="rgb(250,152,24)"/><text x="40.7496%" y="511.50"></text></g><g><title>do_syscall_64 (54 samples, 4.09%)</title><rect x="36.7146%" y="565" width="4.0878%" height="15" fill="rgb(209,150,17)"/><text x="36.9646%" y="575.50">do_s..</text></g><g><title>mysql::conn::Conn::start_transaction (58 samples, 4.39%)</title><rect x="36.5632%" y="725" width="4.3906%" height="15" fill="rgb(234,202,34)"/><text x="36.8132%" y="735.50">mysql..</text></g><g><title>mysql::conn::Conn::_start_transaction (58 samples, 4.39%)</title><rect x="36.5632%" y="709" width="4.3906%" height="15" fill="rgb(253,148,53)"/><text x="36.8132%" y="719.50">mysql..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (58 samples, 4.39%)</title><rect x="36.5632%" y="693" width="4.3906%" height="15" fill="rgb(218,129,16)"/><text x="36.8132%" y="703.50">mysql..</text></g><g><title>mysql::conn::Conn::_query (58 samples, 4.39%)</title><rect x="36.5632%" y="677" width="4.3906%" height="15" fill="rgb(216,85,19)"/><text x="36.8132%" y="687.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (58 samples, 4.39%)</title><rect x="36.5632%" y="661" width="4.3906%" height="15" fill="rgb(235,228,7)"/><text x="36.8132%" y="671.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (57 samples, 4.31%)</title><rect x="36.6389%" y="645" width="4.3149%" height="15" fill="rgb(245,175,0)"/><text x="36.8889%" y="655.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (56 samples, 4.24%)</title><rect x="36.7146%" y="629" width="4.2392%" height="15" fill="rgb(208,168,36)"/><text x="36.9646%" y="639.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (56 samples, 4.24%)</title><rect x="36.7146%" y="613" width="4.2392%" height="15" fill="rgb(246,171,24)"/><text x="36.9646%" y="623.50">std::..</text></g><g><title>__libc_send (56 samples, 4.24%)</title><rect x="36.7146%" y="597" width="4.2392%" height="15" fill="rgb(215,142,24)"/><text x="36.9646%" y="607.50">__lib..</text></g><g><title>entry_SYSCALL_64 (56 samples, 4.24%)</title><rect x="36.7146%" y="581" width="4.2392%" height="15" fill="rgb(250,187,7)"/><text x="36.9646%" y="591.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="40.8024%" y="565" width="0.1514%" height="15" fill="rgb(228,66,33)"/><text x="41.0524%" y="575.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.15%)</title><rect x="41.0295%" y="661" width="0.1514%" height="15" fill="rgb(234,215,21)"/><text x="41.2795%" y="671.50"></text></g><g><title>start_thread (66 samples, 5.00%)</title><rect x="36.2604%" y="869" width="4.9962%" height="15" fill="rgb(222,191,20)"/><text x="36.5104%" y="879.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (66 samples, 5.00%)</title><rect x="36.2604%" y="853" width="4.9962%" height="15" fill="rgb(245,79,54)"/><text x="36.5104%" y="863.50">std::s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (66 samples, 5.00%)</title><rect x="36.2604%" y="837" width="4.9962%" height="15" fill="rgb(240,10,37)"/><text x="36.5104%" y="847.50">&lt;alloc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (66 samples, 5.00%)</title><rect x="36.2604%" y="821" width="4.9962%" height="15" fill="rgb(214,192,32)"/><text x="36.5104%" y="831.50">&lt;alloc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (66 samples, 5.00%)</title><rect x="36.2604%" y="805" width="4.9962%" height="15" fill="rgb(209,36,54)"/><text x="36.5104%" y="815.50">core::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (66 samples, 5.00%)</title><rect x="36.2604%" y="789" width="4.9962%" height="15" fill="rgb(220,10,11)"/><text x="36.5104%" y="799.50">std::s..</text></g><g><title>decor::Shim::run_on_tcp (66 samples, 5.00%)</title><rect x="36.2604%" y="773" width="4.9962%" height="15" fill="rgb(221,106,17)"/><text x="36.5104%" y="783.50">decor:..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (66 samples, 5.00%)</title><rect x="36.2604%" y="757" width="4.9962%" height="15" fill="rgb(251,142,44)"/><text x="36.5104%" y="767.50">msql_s..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (66 samples, 5.00%)</title><rect x="36.2604%" y="741" width="4.9962%" height="15" fill="rgb(238,13,15)"/><text x="36.5104%" y="751.50">&lt;decor..</text></g><g><title>mysql::conn::transaction::Transaction::commit (4 samples, 0.30%)</title><rect x="40.9538%" y="725" width="0.3028%" height="15" fill="rgb(208,107,27)"/><text x="41.2038%" y="735.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (4 samples, 0.30%)</title><rect x="40.9538%" y="709" width="0.3028%" height="15" fill="rgb(205,136,37)"/><text x="41.2038%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.30%)</title><rect x="40.9538%" y="693" width="0.3028%" height="15" fill="rgb(250,205,27)"/><text x="41.2038%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.30%)</title><rect x="40.9538%" y="677" width="0.3028%" height="15" fill="rgb(210,80,43)"/><text x="41.2038%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.15%)</title><rect x="41.4080%" y="677" width="0.1514%" height="15" fill="rgb(247,160,36)"/><text x="41.6580%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="41.4080%" y="693" width="0.2271%" height="15" fill="rgb(234,13,49)"/><text x="41.6580%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.30%)</title><rect x="41.4080%" y="741" width="0.3028%" height="15" fill="rgb(234,122,0)"/><text x="41.6580%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.30%)</title><rect x="41.4080%" y="725" width="0.3028%" height="15" fill="rgb(207,146,38)"/><text x="41.6580%" y="735.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.30%)</title><rect x="41.4080%" y="709" width="0.3028%" height="15" fill="rgb(207,177,25)"/><text x="41.6580%" y="719.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="42.1650%" y="485" width="0.1514%" height="15" fill="rgb(211,178,42)"/><text x="42.4150%" y="495.50"></text></g><g><title>skb_release_head_state (2 samples, 0.15%)</title><rect x="42.1650%" y="469" width="0.1514%" height="15" fill="rgb(230,69,54)"/><text x="42.4150%" y="479.50"></text></g><g><title>finish_task_switch (2 samples, 0.15%)</title><rect x="42.6192%" y="405" width="0.1514%" height="15" fill="rgb(214,135,41)"/><text x="42.8692%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.15%)</title><rect x="42.6192%" y="389" width="0.1514%" height="15" fill="rgb(237,67,25)"/><text x="42.8692%" y="399.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.15%)</title><rect x="42.6192%" y="373" width="0.1514%" height="15" fill="rgb(222,189,50)"/><text x="42.8692%" y="383.50"></text></g><g><title>native_write_msr (2 samples, 0.15%)</title><rect x="42.6192%" y="357" width="0.1514%" height="15" fill="rgb(245,148,34)"/><text x="42.8692%" y="367.50"></text></g><g><title>sk_wait_data (9 samples, 0.68%)</title><rect x="42.3921%" y="485" width="0.6813%" height="15" fill="rgb(222,29,6)"/><text x="42.6421%" y="495.50"></text></g><g><title>wait_woken (9 samples, 0.68%)</title><rect x="42.3921%" y="469" width="0.6813%" height="15" fill="rgb(221,189,43)"/><text x="42.6421%" y="479.50"></text></g><g><title>schedule_timeout (9 samples, 0.68%)</title><rect x="42.3921%" y="453" width="0.6813%" height="15" fill="rgb(207,36,27)"/><text x="42.6421%" y="463.50"></text></g><g><title>schedule (9 samples, 0.68%)</title><rect x="42.3921%" y="437" width="0.6813%" height="15" fill="rgb(217,90,24)"/><text x="42.6421%" y="447.50"></text></g><g><title>__schedule (9 samples, 0.68%)</title><rect x="42.3921%" y="421" width="0.6813%" height="15" fill="rgb(224,66,35)"/><text x="42.6421%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.23%)</title><rect x="42.8463%" y="405" width="0.2271%" height="15" fill="rgb(221,13,50)"/><text x="43.0963%" y="415.50"></text></g><g><title>inet_recvmsg (16 samples, 1.21%)</title><rect x="42.0136%" y="517" width="1.2112%" height="15" fill="rgb(236,68,49)"/><text x="42.2636%" y="527.50"></text></g><g><title>tcp_recvmsg (16 samples, 1.21%)</title><rect x="42.0136%" y="501" width="1.2112%" height="15" fill="rgb(229,146,28)"/><text x="42.2636%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.15%)</title><rect x="43.0734%" y="485" width="0.1514%" height="15" fill="rgb(225,31,38)"/><text x="43.3234%" y="495.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.15%)</title><rect x="43.0734%" y="469" width="0.1514%" height="15" fill="rgb(250,208,3)"/><text x="43.3234%" y="479.50"></text></g><g><title>do_syscall_64 (18 samples, 1.36%)</title><rect x="41.9379%" y="565" width="1.3626%" height="15" fill="rgb(246,54,23)"/><text x="42.1879%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 1.36%)</title><rect x="41.9379%" y="549" width="1.3626%" height="15" fill="rgb(243,76,11)"/><text x="42.1879%" y="559.50"></text></g><g><title>__sys_recvfrom (18 samples, 1.36%)</title><rect x="41.9379%" y="533" width="1.3626%" height="15" fill="rgb(245,21,50)"/><text x="42.1879%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.59%)</title><rect x="41.7865%" y="693" width="1.5897%" height="15" fill="rgb(228,9,43)"/><text x="42.0365%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (20 samples, 1.51%)</title><rect x="41.8622%" y="677" width="1.5140%" height="15" fill="rgb(208,100,47)"/><text x="42.1122%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (20 samples, 1.51%)</title><rect x="41.8622%" y="661" width="1.5140%" height="15" fill="rgb(232,26,8)"/><text x="42.1122%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (20 samples, 1.51%)</title><rect x="41.8622%" y="645" width="1.5140%" height="15" fill="rgb(216,166,38)"/><text x="42.1122%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (20 samples, 1.51%)</title><rect x="41.8622%" y="629" width="1.5140%" height="15" fill="rgb(251,202,51)"/><text x="42.1122%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (20 samples, 1.51%)</title><rect x="41.8622%" y="613" width="1.5140%" height="15" fill="rgb(254,216,34)"/><text x="42.1122%" y="623.50"></text></g><g><title>__libc_recv (20 samples, 1.51%)</title><rect x="41.8622%" y="597" width="1.5140%" height="15" fill="rgb(251,32,27)"/><text x="42.1122%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 1.44%)</title><rect x="41.9379%" y="581" width="1.4383%" height="15" fill="rgb(208,127,28)"/><text x="42.1879%" y="591.50"></text></g><g><title>std::rt::lang_start_internal (28 samples, 2.12%)</title><rect x="41.4080%" y="869" width="2.1196%" height="15" fill="rgb(224,137,22)"/><text x="41.6580%" y="879.50">s..</text></g><g><title>std::panic::catch_unwind (28 samples, 2.12%)</title><rect x="41.4080%" y="853" width="2.1196%" height="15" fill="rgb(254,70,32)"/><text x="41.6580%" y="863.50">s..</text></g><g><title>std::panicking::try (28 samples, 2.12%)</title><rect x="41.4080%" y="837" width="2.1196%" height="15" fill="rgb(229,75,37)"/><text x="41.6580%" y="847.50">s..</text></g><g><title>std::panicking::try::do_call (28 samples, 2.12%)</title><rect x="41.4080%" y="821" width="2.1196%" height="15" fill="rgb(252,64,23)"/><text x="41.6580%" y="831.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (28 samples, 2.12%)</title><rect x="41.4080%" y="805" width="2.1196%" height="15" fill="rgb(232,162,48)"/><text x="41.6580%" y="815.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (28 samples, 2.12%)</title><rect x="41.4080%" y="789" width="2.1196%" height="15" fill="rgb(246,160,12)"/><text x="41.6580%" y="799.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 2.12%)</title><rect x="41.4080%" y="773" width="2.1196%" height="15" fill="rgb(247,166,0)"/><text x="41.6580%" y="783.50">s..</text></g><g><title>lobsters::main (28 samples, 2.12%)</title><rect x="41.4080%" y="757" width="2.1196%" height="15" fill="rgb(249,219,21)"/><text x="41.6580%" y="767.50">l..</text></g><g><title>mysql::conn::Conn::_query (23 samples, 1.74%)</title><rect x="41.7865%" y="741" width="1.7411%" height="15" fill="rgb(205,209,3)"/><text x="42.0365%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (23 samples, 1.74%)</title><rect x="41.7865%" y="725" width="1.7411%" height="15" fill="rgb(243,44,1)"/><text x="42.0365%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (23 samples, 1.74%)</title><rect x="41.7865%" y="709" width="1.7411%" height="15" fill="rgb(206,159,16)"/><text x="42.0365%" y="719.50"></text></g><g><title>std::io::error::Error::_new (2 samples, 0.15%)</title><rect x="43.3762%" y="693" width="0.1514%" height="15" fill="rgb(244,77,30)"/><text x="43.6262%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.15%)</title><rect x="43.3762%" y="677" width="0.1514%" height="15" fill="rgb(218,69,12)"/><text x="43.6262%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.15%)</title><rect x="43.3762%" y="661" width="0.1514%" height="15" fill="rgb(212,87,7)"/><text x="43.6262%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.15%)</title><rect x="43.3762%" y="645" width="0.1514%" height="15" fill="rgb(245,114,25)"/><text x="43.6262%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="43.3762%" y="629" width="0.1514%" height="15" fill="rgb(210,61,42)"/><text x="43.6262%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="43.3762%" y="613" width="0.1514%" height="15" fill="rgb(211,52,33)"/><text x="43.6262%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="43.3762%" y="597" width="0.1514%" height="15" fill="rgb(234,58,33)"/><text x="43.6262%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.23%)</title><rect x="43.5276%" y="869" width="0.2271%" height="15" fill="rgb(220,115,36)"/><text x="43.7776%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.23%)</title><rect x="43.5276%" y="853" width="0.2271%" height="15" fill="rgb(243,153,54)"/><text x="43.7776%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.23%)</title><rect x="43.5276%" y="837" width="0.2271%" height="15" fill="rgb(251,47,18)"/><text x="43.7776%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.23%)</title><rect x="43.5276%" y="821" width="0.2271%" height="15" fill="rgb(242,102,42)"/><text x="43.7776%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.23%)</title><rect x="43.5276%" y="805" width="0.2271%" height="15" fill="rgb(234,31,38)"/><text x="43.7776%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.23%)</title><rect x="43.5276%" y="789" width="0.2271%" height="15" fill="rgb(221,117,51)"/><text x="43.7776%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.23%)</title><rect x="43.5276%" y="773" width="0.2271%" height="15" fill="rgb(212,20,18)"/><text x="43.7776%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.23%)</title><rect x="43.5276%" y="757" width="0.2271%" height="15" fill="rgb(245,133,36)"/><text x="43.7776%" y="767.50"></text></g><g><title>decor::answer_rows (3 samples, 0.23%)</title><rect x="43.5276%" y="741" width="0.2271%" height="15" fill="rgb(212,6,19)"/><text x="43.7776%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="43.5276%" y="725" width="0.2271%" height="15" fill="rgb(218,1,36)"/><text x="43.7776%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.23%)</title><rect x="43.5276%" y="709" width="0.2271%" height="15" fill="rgb(246,84,54)"/><text x="43.7776%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.23%)</title><rect x="43.5276%" y="693" width="0.2271%" height="15" fill="rgb(242,110,6)"/><text x="43.7776%" y="703.50"></text></g><g><title>mysql_common::value::read_text_values (3 samples, 0.23%)</title><rect x="43.5276%" y="677" width="0.2271%" height="15" fill="rgb(214,47,5)"/><text x="43.7776%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="43.6033%" y="661" width="0.1514%" height="15" fill="rgb(218,159,25)"/><text x="43.8533%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.15%)</title><rect x="43.7547%" y="821" width="0.1514%" height="15" fill="rgb(215,211,28)"/><text x="44.0047%" y="831.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.15%)</title><rect x="43.7547%" y="805" width="0.1514%" height="15" fill="rgb(238,59,32)"/><text x="44.0047%" y="815.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.15%)</title><rect x="43.7547%" y="789" width="0.1514%" height="15" fill="rgb(226,82,3)"/><text x="44.0047%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.15%)</title><rect x="43.7547%" y="773" width="0.1514%" height="15" fill="rgb(240,164,32)"/><text x="44.0047%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.15%)</title><rect x="43.7547%" y="757" width="0.1514%" height="15" fill="rgb(232,46,7)"/><text x="44.0047%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.15%)</title><rect x="43.7547%" y="741" width="0.1514%" height="15" fill="rgb(229,129,53)"/><text x="44.0047%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.15%)</title><rect x="43.7547%" y="725" width="0.1514%" height="15" fill="rgb(234,188,29)"/><text x="44.0047%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="43.7547%" y="709" width="0.1514%" height="15" fill="rgb(246,141,4)"/><text x="44.0047%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.15%)</title><rect x="43.7547%" y="693" width="0.1514%" height="15" fill="rgb(229,23,39)"/><text x="44.0047%" y="703.50"></text></g><g><title>__libc_send (2 samples, 0.15%)</title><rect x="43.7547%" y="677" width="0.1514%" height="15" fill="rgb(206,12,3)"/><text x="44.0047%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.15%)</title><rect x="43.7547%" y="661" width="0.1514%" height="15" fill="rgb(252,226,20)"/><text x="44.0047%" y="671.50"></text></g><g><title>do_syscall_64 (2 samples, 0.15%)</title><rect x="43.7547%" y="645" width="0.1514%" height="15" fill="rgb(216,123,35)"/><text x="44.0047%" y="655.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.15%)</title><rect x="43.7547%" y="629" width="0.1514%" height="15" fill="rgb(212,68,40)"/><text x="44.0047%" y="639.50"></text></g><g><title>__sys_sendto (2 samples, 0.15%)</title><rect x="43.7547%" y="613" width="0.1514%" height="15" fill="rgb(254,125,32)"/><text x="44.0047%" y="623.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.23%)</title><rect x="43.9061%" y="805" width="0.2271%" height="15" fill="rgb(253,97,22)"/><text x="44.1561%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.23%)</title><rect x="43.9061%" y="789" width="0.2271%" height="15" fill="rgb(241,101,14)"/><text x="44.1561%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.23%)</title><rect x="43.9061%" y="773" width="0.2271%" height="15" fill="rgb(238,103,29)"/><text x="44.1561%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="43.9061%" y="757" width="0.2271%" height="15" fill="rgb(233,195,47)"/><text x="44.1561%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="43.9061%" y="741" width="0.2271%" height="15" fill="rgb(246,218,30)"/><text x="44.1561%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.23%)</title><rect x="43.9061%" y="725" width="0.2271%" height="15" fill="rgb(219,145,47)"/><text x="44.1561%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.23%)</title><rect x="43.9061%" y="709" width="0.2271%" height="15" fill="rgb(243,12,26)"/><text x="44.1561%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="43.9061%" y="693" width="0.2271%" height="15" fill="rgb(214,87,16)"/><text x="44.1561%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.23%)</title><rect x="43.9061%" y="677" width="0.2271%" height="15" fill="rgb(208,99,42)"/><text x="44.1561%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.23%)</title><rect x="43.9061%" y="661" width="0.2271%" height="15" fill="rgb(253,99,2)"/><text x="44.1561%" y="671.50"></text></g><g><title>decor::answer_rows (3 samples, 0.23%)</title><rect x="44.1332%" y="805" width="0.2271%" height="15" fill="rgb(220,168,23)"/><text x="44.3832%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="44.1332%" y="789" width="0.2271%" height="15" fill="rgb(242,38,24)"/><text x="44.3832%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.23%)</title><rect x="44.1332%" y="773" width="0.2271%" height="15" fill="rgb(225,182,9)"/><text x="44.3832%" y="783.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.23%)</title><rect x="44.1332%" y="757" width="0.2271%" height="15" fill="rgb(243,178,37)"/><text x="44.3832%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.23%)</title><rect x="44.1332%" y="741" width="0.2271%" height="15" fill="rgb(232,139,19)"/><text x="44.3832%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="44.2089%" y="725" width="0.1514%" height="15" fill="rgb(225,201,24)"/><text x="44.4589%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.15%)</title><rect x="44.2089%" y="709" width="0.1514%" height="15" fill="rgb(221,47,46)"/><text x="44.4589%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.15%)</title><rect x="44.2089%" y="693" width="0.1514%" height="15" fill="rgb(249,23,13)"/><text x="44.4589%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.15%)</title><rect x="44.2089%" y="677" width="0.1514%" height="15" fill="rgb(219,9,5)"/><text x="44.4589%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="44.2089%" y="661" width="0.1514%" height="15" fill="rgb(254,171,16)"/><text x="44.4589%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.15%)</title><rect x="44.3603%" y="789" width="0.1514%" height="15" fill="rgb(230,171,20)"/><text x="44.6103%" y="799.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.30%)</title><rect x="44.3603%" y="805" width="0.3028%" height="15" fill="rgb(210,71,41)"/><text x="44.6103%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.15%)</title><rect x="44.5117%" y="789" width="0.1514%" height="15" fill="rgb(206,173,20)"/><text x="44.7617%" y="799.50"></text></g><g><title>mysql::conn::Conn::start_transaction (4 samples, 0.30%)</title><rect x="44.6631%" y="805" width="0.3028%" height="15" fill="rgb(233,88,34)"/><text x="44.9131%" y="815.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (4 samples, 0.30%)</title><rect x="44.6631%" y="789" width="0.3028%" height="15" fill="rgb(223,209,46)"/><text x="44.9131%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (4 samples, 0.30%)</title><rect x="44.6631%" y="773" width="0.3028%" height="15" fill="rgb(250,43,18)"/><text x="44.9131%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.30%)</title><rect x="44.6631%" y="757" width="0.3028%" height="15" fill="rgb(208,13,10)"/><text x="44.9131%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.30%)</title><rect x="44.6631%" y="741" width="0.3028%" height="15" fill="rgb(212,200,36)"/><text x="44.9131%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.15%)</title><rect x="44.8145%" y="725" width="0.1514%" height="15" fill="rgb(225,90,30)"/><text x="45.0645%" y="735.50"></text></g><g><title>update_curr (3 samples, 0.23%)</title><rect x="45.9500%" y="405" width="0.2271%" height="15" fill="rgb(236,182,39)"/><text x="46.2000%" y="415.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.53%)</title><rect x="45.9500%" y="437" width="0.5299%" height="15" fill="rgb(212,144,35)"/><text x="46.2000%" y="447.50"></text></g><g><title>dequeue_entity (7 samples, 0.53%)</title><rect x="45.9500%" y="421" width="0.5299%" height="15" fill="rgb(228,63,44)"/><text x="46.2000%" y="431.50"></text></g><g><title>update_load_avg (4 samples, 0.30%)</title><rect x="46.1771%" y="405" width="0.3028%" height="15" fill="rgb(228,109,6)"/><text x="46.4271%" y="415.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.23%)</title><rect x="46.2528%" y="389" width="0.2271%" height="15" fill="rgb(238,117,24)"/><text x="46.5028%" y="399.50"></text></g><g><title>sk_wait_data (17 samples, 1.29%)</title><rect x="45.7229%" y="517" width="1.2869%" height="15" fill="rgb(242,26,26)"/><text x="45.9729%" y="527.50"></text></g><g><title>wait_woken (16 samples, 1.21%)</title><rect x="45.7986%" y="501" width="1.2112%" height="15" fill="rgb(221,92,48)"/><text x="46.0486%" y="511.50"></text></g><g><title>schedule_timeout (16 samples, 1.21%)</title><rect x="45.7986%" y="485" width="1.2112%" height="15" fill="rgb(209,209,32)"/><text x="46.0486%" y="495.50"></text></g><g><title>schedule (16 samples, 1.21%)</title><rect x="45.7986%" y="469" width="1.2112%" height="15" fill="rgb(221,70,22)"/><text x="46.0486%" y="479.50"></text></g><g><title>__schedule (16 samples, 1.21%)</title><rect x="45.7986%" y="453" width="1.2112%" height="15" fill="rgb(248,145,5)"/><text x="46.0486%" y="463.50"></text></g><g><title>inet_recvmsg (27 samples, 2.04%)</title><rect x="45.1173%" y="549" width="2.0439%" height="15" fill="rgb(226,116,26)"/><text x="45.3673%" y="559.50">i..</text></g><g><title>tcp_recvmsg (27 samples, 2.04%)</title><rect x="45.1173%" y="533" width="2.0439%" height="15" fill="rgb(244,5,17)"/><text x="45.3673%" y="543.50">t..</text></g><g><title>__x64_sys_recvfrom (29 samples, 2.20%)</title><rect x="45.0416%" y="581" width="2.1953%" height="15" fill="rgb(252,159,33)"/><text x="45.2916%" y="591.50">_..</text></g><g><title>__sys_recvfrom (29 samples, 2.20%)</title><rect x="45.0416%" y="565" width="2.1953%" height="15" fill="rgb(206,71,0)"/><text x="45.2916%" y="575.50">_..</text></g><g><title>do_syscall_64 (30 samples, 2.27%)</title><rect x="45.0416%" y="597" width="2.2710%" height="15" fill="rgb(233,118,54)"/><text x="45.2916%" y="607.50">d..</text></g><g><title>entry_SYSCALL_64 (31 samples, 2.35%)</title><rect x="45.0416%" y="613" width="2.3467%" height="15" fill="rgb(234,83,48)"/><text x="45.2916%" y="623.50">e..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 2.50%)</title><rect x="44.9659%" y="709" width="2.4981%" height="15" fill="rgb(228,3,54)"/><text x="45.2159%" y="719.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (33 samples, 2.50%)</title><rect x="44.9659%" y="693" width="2.4981%" height="15" fill="rgb(226,155,13)"/><text x="45.2159%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (33 samples, 2.50%)</title><rect x="44.9659%" y="677" width="2.4981%" height="15" fill="rgb(241,28,37)"/><text x="45.2159%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (33 samples, 2.50%)</title><rect x="44.9659%" y="661" width="2.4981%" height="15" fill="rgb(233,93,10)"/><text x="45.2159%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (33 samples, 2.50%)</title><rect x="44.9659%" y="645" width="2.4981%" height="15" fill="rgb(225,113,19)"/><text x="45.2159%" y="655.50">st..</text></g><g><title>__libc_recv (33 samples, 2.50%)</title><rect x="44.9659%" y="629" width="2.4981%" height="15" fill="rgb(241,2,18)"/><text x="45.2159%" y="639.50">__..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 4.09%)</title><rect x="43.7547%" y="869" width="4.0878%" height="15" fill="rgb(228,207,21)"/><text x="44.0047%" y="879.50">std:..</text></g><g><title>decor::Shim::run_on_tcp (54 samples, 4.09%)</title><rect x="43.7547%" y="853" width="4.0878%" height="15" fill="rgb(213,211,35)"/><text x="44.0047%" y="863.50">deco..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (54 samples, 4.09%)</title><rect x="43.7547%" y="837" width="4.0878%" height="15" fill="rgb(209,83,10)"/><text x="44.0047%" y="847.50">msql..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (52 samples, 3.94%)</title><rect x="43.9061%" y="821" width="3.9364%" height="15" fill="rgb(209,164,1)"/><text x="44.1561%" y="831.50">&lt;dec..</text></g><g><title>mysql::conn::transaction::Transaction::commit (38 samples, 2.88%)</title><rect x="44.9659%" y="805" width="2.8766%" height="15" fill="rgb(213,184,43)"/><text x="45.2159%" y="815.50">my..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (38 samples, 2.88%)</title><rect x="44.9659%" y="789" width="2.8766%" height="15" fill="rgb(231,61,34)"/><text x="45.2159%" y="799.50">my..</text></g><g><title>mysql::conn::Conn::_query (38 samples, 2.88%)</title><rect x="44.9659%" y="773" width="2.8766%" height="15" fill="rgb(235,75,3)"/><text x="45.2159%" y="783.50">my..</text></g><g><title>mysql::conn::Conn::handle_result_set (38 samples, 2.88%)</title><rect x="44.9659%" y="757" width="2.8766%" height="15" fill="rgb(220,106,47)"/><text x="45.2159%" y="767.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (38 samples, 2.88%)</title><rect x="44.9659%" y="741" width="2.8766%" height="15" fill="rgb(210,196,33)"/><text x="45.2159%" y="751.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 2.88%)</title><rect x="44.9659%" y="725" width="2.8766%" height="15" fill="rgb(229,154,42)"/><text x="45.2159%" y="735.50">&lt;m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.38%)</title><rect x="47.4640%" y="709" width="0.3785%" height="15" fill="rgb(228,114,26)"/><text x="47.7140%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.30%)</title><rect x="47.5397%" y="693" width="0.3028%" height="15" fill="rgb(208,144,1)"/><text x="47.7897%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.23%)</title><rect x="47.6154%" y="677" width="0.2271%" height="15" fill="rgb(239,112,37)"/><text x="47.8654%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="47.6911%" y="661" width="0.1514%" height="15" fill="rgb(210,96,50)"/><text x="47.9411%" y="671.50"></text></g><g><title>[unknown] (547 samples, 41.41%)</title><rect x="6.5102%" y="885" width="41.4080%" height="15" fill="rgb(222,178,2)"/><text x="6.7602%" y="895.50">[unknown]</text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (2 samples, 0.15%)</title><rect x="48.3724%" y="709" width="0.1514%" height="15" fill="rgb(226,74,18)"/><text x="48.6224%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.23%)</title><rect x="48.7509%" y="693" width="0.2271%" height="15" fill="rgb(225,67,54)"/><text x="49.0009%" y="703.50"></text></g><g><title>release_sock (2 samples, 0.15%)</title><rect x="49.3565%" y="517" width="0.1514%" height="15" fill="rgb(251,92,32)"/><text x="49.6065%" y="527.50"></text></g><g><title>tcp_release_cb (2 samples, 0.15%)</title><rect x="49.3565%" y="501" width="0.1514%" height="15" fill="rgb(228,149,22)"/><text x="49.6065%" y="511.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.38%)</title><rect x="50.2650%" y="405" width="0.3785%" height="15" fill="rgb(243,54,13)"/><text x="50.5150%" y="415.50"></text></g><g><title>enqueue_task (2 samples, 0.15%)</title><rect x="51.6276%" y="101" width="0.1514%" height="15" fill="rgb(243,180,28)"/><text x="51.8776%" y="111.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="51.6276%" y="85" width="0.1514%" height="15" fill="rgb(208,167,24)"/><text x="51.8776%" y="95.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="51.6276%" y="69" width="0.1514%" height="15" fill="rgb(245,73,45)"/><text x="51.8776%" y="79.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.23%)</title><rect x="51.7790%" y="101" width="0.2271%" height="15" fill="rgb(237,203,48)"/><text x="52.0290%" y="111.50"></text></g><g><title>enqueue_entity (3 samples, 0.23%)</title><rect x="51.7790%" y="85" width="0.2271%" height="15" fill="rgb(211,197,16)"/><text x="52.0290%" y="95.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.15%)</title><rect x="52.0061%" y="101" width="0.1514%" height="15" fill="rgb(243,99,51)"/><text x="52.2561%" y="111.50"></text></g><g><title>available_idle_cpu (2 samples, 0.15%)</title><rect x="52.0061%" y="85" width="0.1514%" height="15" fill="rgb(215,123,29)"/><text x="52.2561%" y="95.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.15%)</title><rect x="52.1575%" y="101" width="0.1514%" height="15" fill="rgb(239,186,37)"/><text x="52.4075%" y="111.50"></text></g><g><title>sock_def_readable (11 samples, 0.83%)</title><rect x="51.5519%" y="181" width="0.8327%" height="15" fill="rgb(252,136,39)"/><text x="51.8019%" y="191.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.83%)</title><rect x="51.5519%" y="165" width="0.8327%" height="15" fill="rgb(223,213,32)"/><text x="51.8019%" y="175.50"></text></g><g><title>__wake_up_common (11 samples, 0.83%)</title><rect x="51.5519%" y="149" width="0.8327%" height="15" fill="rgb(233,115,5)"/><text x="51.8019%" y="159.50"></text></g><g><title>pollwake (11 samples, 0.83%)</title><rect x="51.5519%" y="133" width="0.8327%" height="15" fill="rgb(207,226,44)"/><text x="51.8019%" y="143.50"></text></g><g><title>try_to_wake_up (10 samples, 0.76%)</title><rect x="51.6276%" y="117" width="0.7570%" height="15" fill="rgb(208,126,0)"/><text x="51.8776%" y="127.50"></text></g><g><title>tcp_ack (2 samples, 0.15%)</title><rect x="52.3846%" y="181" width="0.1514%" height="15" fill="rgb(244,66,21)"/><text x="52.6346%" y="191.50"></text></g><g><title>ip_local_deliver (19 samples, 1.44%)</title><rect x="51.2491%" y="277" width="1.4383%" height="15" fill="rgb(222,97,12)"/><text x="51.4991%" y="287.50"></text></g><g><title>ip_local_deliver_finish (19 samples, 1.44%)</title><rect x="51.2491%" y="261" width="1.4383%" height="15" fill="rgb(219,213,19)"/><text x="51.4991%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (18 samples, 1.36%)</title><rect x="51.3248%" y="245" width="1.3626%" height="15" fill="rgb(252,169,30)"/><text x="51.5748%" y="255.50"></text></g><g><title>tcp_v4_rcv (18 samples, 1.36%)</title><rect x="51.3248%" y="229" width="1.3626%" height="15" fill="rgb(206,32,51)"/><text x="51.5748%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (16 samples, 1.21%)</title><rect x="51.4762%" y="213" width="1.2112%" height="15" fill="rgb(250,172,42)"/><text x="51.7262%" y="223.50"></text></g><g><title>tcp_rcv_established (16 samples, 1.21%)</title><rect x="51.4762%" y="197" width="1.2112%" height="15" fill="rgb(209,34,43)"/><text x="51.7262%" y="207.50"></text></g><g><title>__local_bh_enable_ip (28 samples, 2.12%)</title><rect x="50.6435%" y="405" width="2.1196%" height="15" fill="rgb(223,11,35)"/><text x="50.8935%" y="415.50">_..</text></g><g><title>do_softirq (28 samples, 2.12%)</title><rect x="50.6435%" y="389" width="2.1196%" height="15" fill="rgb(251,219,26)"/><text x="50.8935%" y="399.50">d..</text></g><g><title>do_softirq_own_stack (27 samples, 2.04%)</title><rect x="50.7192%" y="373" width="2.0439%" height="15" fill="rgb(231,119,3)"/><text x="50.9692%" y="383.50">d..</text></g><g><title>__do_softirq (25 samples, 1.89%)</title><rect x="50.8706%" y="357" width="1.8925%" height="15" fill="rgb(216,97,11)"/><text x="51.1206%" y="367.50">_..</text></g><g><title>net_rx_action (24 samples, 1.82%)</title><rect x="50.9463%" y="341" width="1.8168%" height="15" fill="rgb(223,59,9)"/><text x="51.1963%" y="351.50">n..</text></g><g><title>process_backlog (21 samples, 1.59%)</title><rect x="51.1734%" y="325" width="1.5897%" height="15" fill="rgb(233,93,31)"/><text x="51.4234%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (20 samples, 1.51%)</title><rect x="51.2491%" y="309" width="1.5140%" height="15" fill="rgb(239,81,33)"/><text x="51.4991%" y="319.50"></text></g><g><title>ip_rcv (20 samples, 1.51%)</title><rect x="51.2491%" y="293" width="1.5140%" height="15" fill="rgb(213,120,34)"/><text x="51.4991%" y="303.50"></text></g><g><title>__ip_queue_xmit (40 samples, 3.03%)</title><rect x="49.8107%" y="453" width="3.0280%" height="15" fill="rgb(243,49,53)"/><text x="50.0607%" y="463.50">__i..</text></g><g><title>ip_output (39 samples, 2.95%)</title><rect x="49.8864%" y="437" width="2.9523%" height="15" fill="rgb(247,216,33)"/><text x="50.1364%" y="447.50">ip_..</text></g><g><title>ip_finish_output2 (38 samples, 2.88%)</title><rect x="49.9621%" y="421" width="2.8766%" height="15" fill="rgb(226,26,14)"/><text x="50.2121%" y="431.50">ip..</text></g><g><title>__tcp_transmit_skb (43 samples, 3.26%)</title><rect x="49.6593%" y="469" width="3.2551%" height="15" fill="rgb(215,49,53)"/><text x="49.9093%" y="479.50">__t..</text></g><g><title>__tcp_push_pending_frames (45 samples, 3.41%)</title><rect x="49.6593%" y="501" width="3.4065%" height="15" fill="rgb(245,162,40)"/><text x="49.9093%" y="511.50">__t..</text></g><g><title>tcp_write_xmit (45 samples, 3.41%)</title><rect x="49.6593%" y="485" width="3.4065%" height="15" fill="rgb(229,68,17)"/><text x="49.9093%" y="495.50">tcp..</text></g><g><title>sock_sendmsg (54 samples, 4.09%)</title><rect x="49.2808%" y="549" width="4.0878%" height="15" fill="rgb(213,182,10)"/><text x="49.5308%" y="559.50">sock..</text></g><g><title>tcp_sendmsg (54 samples, 4.09%)</title><rect x="49.2808%" y="533" width="4.0878%" height="15" fill="rgb(245,125,30)"/><text x="49.5308%" y="543.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (51 samples, 3.86%)</title><rect x="49.5079%" y="517" width="3.8607%" height="15" fill="rgb(232,202,2)"/><text x="49.7579%" y="527.50">tcp_..</text></g><g><title>do_syscall_64 (57 samples, 4.31%)</title><rect x="49.2808%" y="597" width="4.3149%" height="15" fill="rgb(237,140,51)"/><text x="49.5308%" y="607.50">do_sy..</text></g><g><title>__x64_sys_sendto (57 samples, 4.31%)</title><rect x="49.2808%" y="581" width="4.3149%" height="15" fill="rgb(236,157,25)"/><text x="49.5308%" y="591.50">__x64..</text></g><g><title>__sys_sendto (57 samples, 4.31%)</title><rect x="49.2808%" y="565" width="4.3149%" height="15" fill="rgb(219,209,0)"/><text x="49.5308%" y="575.50">__sys..</text></g><g><title>sockfd_lookup_light (3 samples, 0.23%)</title><rect x="53.3687%" y="549" width="0.2271%" height="15" fill="rgb(240,116,54)"/><text x="53.6187%" y="559.50"></text></g><g><title>__fget_light (3 samples, 0.23%)</title><rect x="53.3687%" y="533" width="0.2271%" height="15" fill="rgb(216,10,36)"/><text x="53.6187%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (74 samples, 5.60%)</title><rect x="48.2967%" y="725" width="5.6018%" height="15" fill="rgb(222,72,44)"/><text x="48.5467%" y="735.50">&lt;mysql:..</text></g><g><title>mysql::conn::Conn::_query (70 samples, 5.30%)</title><rect x="48.5995%" y="709" width="5.2990%" height="15" fill="rgb(232,159,9)"/><text x="48.8495%" y="719.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (65 samples, 4.92%)</title><rect x="48.9780%" y="693" width="4.9205%" height="15" fill="rgb(210,39,32)"/><text x="49.2280%" y="703.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (64 samples, 4.84%)</title><rect x="49.0537%" y="677" width="4.8448%" height="15" fill="rgb(216,194,45)"/><text x="49.3037%" y="687.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (62 samples, 4.69%)</title><rect x="49.2051%" y="661" width="4.6934%" height="15" fill="rgb(218,18,35)"/><text x="49.4551%" y="671.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (62 samples, 4.69%)</title><rect x="49.2051%" y="645" width="4.6934%" height="15" fill="rgb(207,83,51)"/><text x="49.4551%" y="655.50">std::..</text></g><g><title>__libc_send (62 samples, 4.69%)</title><rect x="49.2051%" y="629" width="4.6934%" height="15" fill="rgb(225,63,43)"/><text x="49.4551%" y="639.50">__lib..</text></g><g><title>entry_SYSCALL_64 (62 samples, 4.69%)</title><rect x="49.2051%" y="613" width="4.6934%" height="15" fill="rgb(207,57,36)"/><text x="49.4551%" y="623.50">entry..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.30%)</title><rect x="53.5958%" y="597" width="0.3028%" height="15" fill="rgb(216,99,33)"/><text x="53.8458%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="53.8986%" y="725" width="0.1514%" height="15" fill="rgb(225,42,16)"/><text x="54.1486%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="54.1257%" y="693" width="0.1514%" height="15" fill="rgb(220,201,45)"/><text x="54.3757%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="54.1257%" y="677" width="0.1514%" height="15" fill="rgb(225,33,4)"/><text x="54.3757%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="54.2771%" y="629" width="0.3785%" height="15" fill="rgb(224,33,50)"/><text x="54.5271%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="54.2771%" y="613" width="0.3785%" height="15" fill="rgb(246,198,51)"/><text x="54.5271%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.38%)</title><rect x="54.2771%" y="597" width="0.3785%" height="15" fill="rgb(205,22,4)"/><text x="54.5271%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.30%)</title><rect x="54.3528%" y="581" width="0.3028%" height="15" fill="rgb(206,3,8)"/><text x="54.6028%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.23%)</title><rect x="54.4285%" y="565" width="0.2271%" height="15" fill="rgb(251,23,15)"/><text x="54.6785%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="54.5042%" y="549" width="0.1514%" height="15" fill="rgb(252,88,28)"/><text x="54.7542%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="54.5042%" y="533" width="0.1514%" height="15" fill="rgb(212,127,14)"/><text x="54.7542%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="54.6556%" y="629" width="0.2271%" height="15" fill="rgb(247,145,37)"/><text x="54.9056%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="54.6556%" y="613" width="0.2271%" height="15" fill="rgb(209,117,53)"/><text x="54.9056%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="54.7313%" y="597" width="0.1514%" height="15" fill="rgb(212,90,42)"/><text x="54.9813%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="54.7313%" y="581" width="0.1514%" height="15" fill="rgb(218,164,37)"/><text x="54.9813%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.76%)</title><rect x="54.2771%" y="645" width="0.7570%" height="15" fill="rgb(246,65,34)"/><text x="54.5271%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.15%)</title><rect x="54.8827%" y="629" width="0.1514%" height="15" fill="rgb(231,100,33)"/><text x="55.1327%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.53%)</title><rect x="55.1098%" y="597" width="0.5299%" height="15" fill="rgb(228,126,14)"/><text x="55.3598%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.53%)</title><rect x="55.1098%" y="581" width="0.5299%" height="15" fill="rgb(215,173,21)"/><text x="55.3598%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.30%)</title><rect x="55.3369%" y="565" width="0.3028%" height="15" fill="rgb(210,6,40)"/><text x="55.5869%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="55.4883%" y="549" width="0.1514%" height="15" fill="rgb(212,48,18)"/><text x="55.7383%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="55.4883%" y="533" width="0.1514%" height="15" fill="rgb(230,214,11)"/><text x="55.7383%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="55.4883%" y="517" width="0.1514%" height="15" fill="rgb(254,105,39)"/><text x="55.7383%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.61%)</title><rect x="55.1098%" y="613" width="0.6056%" height="15" fill="rgb(245,158,5)"/><text x="55.3598%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.38%)</title><rect x="55.7154%" y="613" width="0.3785%" height="15" fill="rgb(249,208,11)"/><text x="55.9654%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.38%)</title><rect x="55.7154%" y="597" width="0.3785%" height="15" fill="rgb(210,39,28)"/><text x="55.9654%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.30%)</title><rect x="55.7911%" y="581" width="0.3028%" height="15" fill="rgb(211,56,53)"/><text x="56.0411%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="55.9425%" y="565" width="0.1514%" height="15" fill="rgb(226,201,30)"/><text x="56.1925%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="55.9425%" y="549" width="0.1514%" height="15" fill="rgb(239,101,34)"/><text x="56.1925%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="55.9425%" y="533" width="0.1514%" height="15" fill="rgb(226,209,5)"/><text x="56.1925%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 1.29%)</title><rect x="55.1098%" y="629" width="1.2869%" height="15" fill="rgb(250,105,47)"/><text x="55.3598%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.30%)</title><rect x="56.0939%" y="613" width="0.3028%" height="15" fill="rgb(230,72,3)"/><text x="56.3439%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="56.1696%" y="597" width="0.2271%" height="15" fill="rgb(232,218,39)"/><text x="56.4196%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="56.2453%" y="581" width="0.1514%" height="15" fill="rgb(248,166,6)"/><text x="56.4953%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="56.2453%" y="565" width="0.1514%" height="15" fill="rgb(247,89,20)"/><text x="56.4953%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="56.3967%" y="581" width="0.1514%" height="15" fill="rgb(248,130,54)"/><text x="56.6467%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="56.3967%" y="613" width="0.2271%" height="15" fill="rgb(234,196,4)"/><text x="56.6467%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.23%)</title><rect x="56.3967%" y="597" width="0.2271%" height="15" fill="rgb(250,143,31)"/><text x="56.6467%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.30%)</title><rect x="56.3967%" y="629" width="0.3028%" height="15" fill="rgb(211,110,34)"/><text x="56.6467%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (26 samples, 1.97%)</title><rect x="55.0341%" y="645" width="1.9682%" height="15" fill="rgb(215,124,48)"/><text x="55.2841%" y="655.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.30%)</title><rect x="56.6995%" y="629" width="0.3028%" height="15" fill="rgb(216,46,13)"/><text x="56.9495%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="56.8509%" y="613" width="0.1514%" height="15" fill="rgb(205,184,25)"/><text x="57.1009%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.23%)</title><rect x="57.0023%" y="645" width="0.2271%" height="15" fill="rgb(228,1,10)"/><text x="57.2523%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.15%)</title><rect x="57.0780%" y="629" width="0.1514%" height="15" fill="rgb(213,116,27)"/><text x="57.3280%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.15%)</title><rect x="57.0780%" y="613" width="0.1514%" height="15" fill="rgb(241,95,50)"/><text x="57.3280%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.15%)</title><rect x="57.0780%" y="597" width="0.1514%" height="15" fill="rgb(238,48,32)"/><text x="57.3280%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.15%)</title><rect x="57.0780%" y="581" width="0.1514%" height="15" fill="rgb(235,113,49)"/><text x="57.3280%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.15%)</title><rect x="57.0780%" y="565" width="0.1514%" height="15" fill="rgb(205,127,43)"/><text x="57.3280%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.15%)</title><rect x="57.0780%" y="549" width="0.1514%" height="15" fill="rgb(250,162,2)"/><text x="57.3280%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.15%)</title><rect x="57.4565%" y="629" width="0.1514%" height="15" fill="rgb(220,13,41)"/><text x="57.7065%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.15%)</title><rect x="57.4565%" y="613" width="0.1514%" height="15" fill="rgb(249,221,25)"/><text x="57.7065%" y="623.50"></text></g><g><title>_int_realloc (2 samples, 0.15%)</title><rect x="57.4565%" y="597" width="0.1514%" height="15" fill="rgb(215,208,19)"/><text x="57.7065%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.15%)</title><rect x="57.4565%" y="581" width="0.1514%" height="15" fill="rgb(236,175,2)"/><text x="57.7065%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (45 samples, 3.41%)</title><rect x="54.2771%" y="693" width="3.4065%" height="15" fill="rgb(241,52,2)"/><text x="54.5271%" y="703.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (45 samples, 3.41%)</title><rect x="54.2771%" y="677" width="3.4065%" height="15" fill="rgb(248,140,14)"/><text x="54.5271%" y="687.50">&lt;sq..</text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (45 samples, 3.41%)</title><rect x="54.2771%" y="661" width="3.4065%" height="15" fill="rgb(253,22,42)"/><text x="54.5271%" y="671.50">&lt;sq..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.45%)</title><rect x="57.2294%" y="645" width="0.4542%" height="15" fill="rgb(234,61,47)"/><text x="57.4794%" y="655.50"></text></g><g><title>core::fmt::write (48 samples, 3.63%)</title><rect x="54.1257%" y="725" width="3.6336%" height="15" fill="rgb(208,226,15)"/><text x="54.3757%" y="735.50">core..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (48 samples, 3.63%)</title><rect x="54.1257%" y="709" width="3.6336%" height="15" fill="rgb(217,221,4)"/><text x="54.3757%" y="719.50">&lt;sql..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.53%)</title><rect x="58.0621%" y="677" width="0.5299%" height="15" fill="rgb(212,174,34)"/><text x="58.3121%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.45%)</title><rect x="58.1378%" y="661" width="0.4542%" height="15" fill="rgb(253,83,4)"/><text x="58.3878%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.23%)</title><rect x="58.3649%" y="645" width="0.2271%" height="15" fill="rgb(250,195,49)"/><text x="58.6149%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="58.4406%" y="629" width="0.1514%" height="15" fill="rgb(241,192,25)"/><text x="58.6906%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 1.29%)</title><rect x="57.7593%" y="725" width="1.2869%" height="15" fill="rgb(208,124,10)"/><text x="58.0093%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 1.14%)</title><rect x="57.9107%" y="709" width="1.1355%" height="15" fill="rgb(222,33,0)"/><text x="58.1607%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 1.06%)</title><rect x="57.9864%" y="693" width="1.0598%" height="15" fill="rgb(234,209,28)"/><text x="58.2364%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.30%)</title><rect x="58.7434%" y="677" width="0.3028%" height="15" fill="rgb(224,11,23)"/><text x="58.9934%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="59.4247%" y="709" width="0.2271%" height="15" fill="rgb(232,99,1)"/><text x="59.6747%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.45%)</title><rect x="59.6518%" y="709" width="0.4542%" height="15" fill="rgb(237,95,45)"/><text x="59.9018%" y="719.50"></text></g><g><title>__GI___libc_free (2 samples, 0.15%)</title><rect x="60.1060%" y="709" width="0.1514%" height="15" fill="rgb(208,109,11)"/><text x="60.3560%" y="719.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.15%)</title><rect x="60.5602%" y="677" width="0.1514%" height="15" fill="rgb(216,190,48)"/><text x="60.8102%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="60.5602%" y="661" width="0.1514%" height="15" fill="rgb(251,171,36)"/><text x="60.8102%" y="671.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (4 samples, 0.30%)</title><rect x="60.4845%" y="709" width="0.3028%" height="15" fill="rgb(230,62,22)"/><text x="60.7345%" y="719.50"></text></g><g><title>msql_srv::writers::column_definitions (4 samples, 0.30%)</title><rect x="60.4845%" y="693" width="0.3028%" height="15" fill="rgb(225,114,35)"/><text x="60.7345%" y="703.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.15%)</title><rect x="60.8630%" y="677" width="0.1514%" height="15" fill="rgb(215,118,42)"/><text x="61.1130%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="60.8630%" y="661" width="0.1514%" height="15" fill="rgb(243,119,21)"/><text x="61.1130%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (3 samples, 0.23%)</title><rect x="60.8630%" y="709" width="0.2271%" height="15" fill="rgb(252,177,53)"/><text x="61.1130%" y="719.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (3 samples, 0.23%)</title><rect x="60.8630%" y="693" width="0.2271%" height="15" fill="rgb(237,209,29)"/><text x="61.1130%" y="703.50"></text></g><g><title>decor::answer_rows (33 samples, 2.50%)</title><rect x="59.0462%" y="725" width="2.4981%" height="15" fill="rgb(212,65,23)"/><text x="59.2962%" y="735.50">de..</text></g><g><title>mysql_common::row::Row::unwrap (6 samples, 0.45%)</title><rect x="61.0901%" y="709" width="0.4542%" height="15" fill="rgb(230,222,46)"/><text x="61.3401%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="61.3172%" y="693" width="0.2271%" height="15" fill="rgb(215,135,32)"/><text x="61.5672%" y="703.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.15%)</title><rect x="61.5443%" y="725" width="0.1514%" height="15" fill="rgb(246,101,22)"/><text x="61.7943%" y="735.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.15%)</title><rect x="61.5443%" y="709" width="0.1514%" height="15" fill="rgb(206,107,13)"/><text x="61.7943%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.15%)</title><rect x="61.8471%" y="677" width="0.1514%" height="15" fill="rgb(250,100,44)"/><text x="62.0971%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.15%)</title><rect x="62.1499%" y="661" width="0.1514%" height="15" fill="rgb(231,147,38)"/><text x="62.3999%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.15%)</title><rect x="62.1499%" y="645" width="0.1514%" height="15" fill="rgb(229,8,40)"/><text x="62.3999%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.15%)</title><rect x="62.1499%" y="629" width="0.1514%" height="15" fill="rgb(221,135,30)"/><text x="62.3999%" y="639.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.30%)</title><rect x="63.2854%" y="389" width="0.3028%" height="15" fill="rgb(249,193,18)"/><text x="63.5354%" y="399.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.15%)</title><rect x="63.4368%" y="373" width="0.1514%" height="15" fill="rgb(209,133,39)"/><text x="63.6868%" y="383.50"></text></g><g><title>loopback_xmit (2 samples, 0.15%)</title><rect x="63.4368%" y="357" width="0.1514%" height="15" fill="rgb(232,100,14)"/><text x="63.6868%" y="367.50"></text></g><g><title>sk_reset_timer (2 samples, 0.15%)</title><rect x="64.7237%" y="165" width="0.1514%" height="15" fill="rgb(224,185,1)"/><text x="64.9737%" y="175.50"></text></g><g><title>enqueue_task (4 samples, 0.30%)</title><rect x="65.1779%" y="85" width="0.3028%" height="15" fill="rgb(223,139,8)"/><text x="65.4279%" y="95.50"></text></g><g><title>psi_task_change (4 samples, 0.30%)</title><rect x="65.1779%" y="69" width="0.3028%" height="15" fill="rgb(232,213,38)"/><text x="65.4279%" y="79.50"></text></g><g><title>psi_group_change (2 samples, 0.15%)</title><rect x="65.3293%" y="53" width="0.1514%" height="15" fill="rgb(207,94,22)"/><text x="65.5793%" y="63.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.38%)</title><rect x="65.4807%" y="85" width="0.3785%" height="15" fill="rgb(219,183,54)"/><text x="65.7307%" y="95.50"></text></g><g><title>enqueue_entity (4 samples, 0.30%)</title><rect x="65.5564%" y="69" width="0.3028%" height="15" fill="rgb(216,185,54)"/><text x="65.8064%" y="79.50"></text></g><g><title>update_load_avg (3 samples, 0.23%)</title><rect x="65.6321%" y="53" width="0.2271%" height="15" fill="rgb(254,217,39)"/><text x="65.8821%" y="63.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.15%)</title><rect x="65.7078%" y="37" width="0.1514%" height="15" fill="rgb(240,178,23)"/><text x="65.9578%" y="47.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.15%)</title><rect x="65.8592%" y="85" width="0.1514%" height="15" fill="rgb(218,11,47)"/><text x="66.1092%" y="95.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.15%)</title><rect x="65.8592%" y="69" width="0.1514%" height="15" fill="rgb(218,51,51)"/><text x="66.1092%" y="79.50"></text></g><g><title>sock_def_readable (16 samples, 1.21%)</title><rect x="64.8751%" y="165" width="1.2112%" height="15" fill="rgb(238,126,27)"/><text x="65.1251%" y="175.50"></text></g><g><title>__wake_up_common_lock (14 samples, 1.06%)</title><rect x="65.0265%" y="149" width="1.0598%" height="15" fill="rgb(249,202,22)"/><text x="65.2765%" y="159.50"></text></g><g><title>__wake_up_common (14 samples, 1.06%)</title><rect x="65.0265%" y="133" width="1.0598%" height="15" fill="rgb(254,195,49)"/><text x="65.2765%" y="143.50"></text></g><g><title>pollwake (13 samples, 0.98%)</title><rect x="65.1022%" y="117" width="0.9841%" height="15" fill="rgb(208,123,14)"/><text x="65.3522%" y="127.50"></text></g><g><title>try_to_wake_up (13 samples, 0.98%)</title><rect x="65.1022%" y="101" width="0.9841%" height="15" fill="rgb(224,200,8)"/><text x="65.3522%" y="111.50"></text></g><g><title>tcp_ack (4 samples, 0.30%)</title><rect x="66.0863%" y="165" width="0.3028%" height="15" fill="rgb(217,61,36)"/><text x="66.3363%" y="175.50"></text></g><g><title>tcp_update_pacing_rate (3 samples, 0.23%)</title><rect x="66.1620%" y="149" width="0.2271%" height="15" fill="rgb(206,35,45)"/><text x="66.4120%" y="159.50"></text></g><g><title>ip_local_deliver (34 samples, 2.57%)</title><rect x="63.8910%" y="261" width="2.5738%" height="15" fill="rgb(217,65,33)"/><text x="64.1410%" y="271.50">ip..</text></g><g><title>ip_local_deliver_finish (34 samples, 2.57%)</title><rect x="63.8910%" y="245" width="2.5738%" height="15" fill="rgb(222,158,48)"/><text x="64.1410%" y="255.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (34 samples, 2.57%)</title><rect x="63.8910%" y="229" width="2.5738%" height="15" fill="rgb(254,2,54)"/><text x="64.1410%" y="239.50">ip..</text></g><g><title>tcp_v4_rcv (33 samples, 2.50%)</title><rect x="63.9667%" y="213" width="2.4981%" height="15" fill="rgb(250,143,38)"/><text x="64.2167%" y="223.50">tc..</text></g><g><title>tcp_v4_do_rcv (26 samples, 1.97%)</title><rect x="64.4966%" y="197" width="1.9682%" height="15" fill="rgb(248,25,0)"/><text x="64.7466%" y="207.50">t..</text></g><g><title>tcp_rcv_established (26 samples, 1.97%)</title><rect x="64.4966%" y="181" width="1.9682%" height="15" fill="rgb(206,152,27)"/><text x="64.7466%" y="191.50">t..</text></g><g><title>__netif_receive_skb_one_core (36 samples, 2.73%)</title><rect x="63.8153%" y="293" width="2.7252%" height="15" fill="rgb(240,77,30)"/><text x="64.0653%" y="303.50">__..</text></g><g><title>ip_rcv (35 samples, 2.65%)</title><rect x="63.8910%" y="277" width="2.6495%" height="15" fill="rgb(231,5,3)"/><text x="64.1410%" y="287.50">ip..</text></g><g><title>__local_bh_enable_ip (40 samples, 3.03%)</title><rect x="63.5882%" y="389" width="3.0280%" height="15" fill="rgb(207,226,32)"/><text x="63.8382%" y="399.50">__l..</text></g><g><title>do_softirq (40 samples, 3.03%)</title><rect x="63.5882%" y="373" width="3.0280%" height="15" fill="rgb(222,207,47)"/><text x="63.8382%" y="383.50">do_..</text></g><g><title>do_softirq_own_stack (39 samples, 2.95%)</title><rect x="63.6639%" y="357" width="2.9523%" height="15" fill="rgb(229,115,45)"/><text x="63.9139%" y="367.50">do_..</text></g><g><title>__do_softirq (39 samples, 2.95%)</title><rect x="63.6639%" y="341" width="2.9523%" height="15" fill="rgb(224,191,6)"/><text x="63.9139%" y="351.50">__d..</text></g><g><title>net_rx_action (38 samples, 2.88%)</title><rect x="63.7396%" y="325" width="2.8766%" height="15" fill="rgb(230,227,24)"/><text x="63.9896%" y="335.50">ne..</text></g><g><title>process_backlog (37 samples, 2.80%)</title><rect x="63.8153%" y="309" width="2.8009%" height="15" fill="rgb(228,80,19)"/><text x="64.0653%" y="319.50">pr..</text></g><g><title>__tcp_transmit_skb (49 samples, 3.71%)</title><rect x="62.9826%" y="453" width="3.7093%" height="15" fill="rgb(247,229,0)"/><text x="63.2326%" y="463.50">__tc..</text></g><g><title>__ip_queue_xmit (48 samples, 3.63%)</title><rect x="63.0583%" y="437" width="3.6336%" height="15" fill="rgb(237,194,15)"/><text x="63.3083%" y="447.50">__ip..</text></g><g><title>ip_output (46 samples, 3.48%)</title><rect x="63.2097%" y="421" width="3.4822%" height="15" fill="rgb(219,203,20)"/><text x="63.4597%" y="431.50">ip_..</text></g><g><title>ip_finish_output2 (46 samples, 3.48%)</title><rect x="63.2097%" y="405" width="3.4822%" height="15" fill="rgb(234,128,8)"/><text x="63.4597%" y="415.50">ip_..</text></g><g><title>ktime_get (2 samples, 0.15%)</title><rect x="66.6919%" y="453" width="0.1514%" height="15" fill="rgb(248,202,8)"/><text x="66.9419%" y="463.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.15%)</title><rect x="66.8433%" y="453" width="0.1514%" height="15" fill="rgb(206,104,37)"/><text x="67.0933%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (56 samples, 4.24%)</title><rect x="62.9069%" y="485" width="4.2392%" height="15" fill="rgb(223,8,27)"/><text x="63.1569%" y="495.50">__tcp..</text></g><g><title>tcp_write_xmit (56 samples, 4.24%)</title><rect x="62.9069%" y="469" width="4.2392%" height="15" fill="rgb(216,217,28)"/><text x="63.1569%" y="479.50">tcp_w..</text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.15%)</title><rect x="66.9947%" y="453" width="0.1514%" height="15" fill="rgb(249,199,1)"/><text x="67.2447%" y="463.50"></text></g><g><title>sk_reset_timer (2 samples, 0.15%)</title><rect x="66.9947%" y="437" width="0.1514%" height="15" fill="rgb(240,85,17)"/><text x="67.2447%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.23%)</title><rect x="67.2218%" y="485" width="0.2271%" height="15" fill="rgb(206,108,45)"/><text x="67.4718%" y="495.50"></text></g><g><title>__alloc_skb (3 samples, 0.23%)</title><rect x="67.2218%" y="469" width="0.2271%" height="15" fill="rgb(245,210,41)"/><text x="67.4718%" y="479.50"></text></g><g><title>__ksize (2 samples, 0.15%)</title><rect x="67.2975%" y="453" width="0.1514%" height="15" fill="rgb(206,13,37)"/><text x="67.5475%" y="463.50"></text></g><g><title>sock_sendmsg (69 samples, 5.22%)</title><rect x="62.4527%" y="533" width="5.2233%" height="15" fill="rgb(250,61,18)"/><text x="62.7027%" y="543.50">sock_s..</text></g><g><title>tcp_sendmsg (69 samples, 5.22%)</title><rect x="62.4527%" y="517" width="5.2233%" height="15" fill="rgb(235,172,48)"/><text x="62.7027%" y="527.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (67 samples, 5.07%)</title><rect x="62.6041%" y="501" width="5.0719%" height="15" fill="rgb(249,201,17)"/><text x="62.8541%" y="511.50">tcp_se..</text></g><g><title>tcp_send_mss (2 samples, 0.15%)</title><rect x="67.5246%" y="485" width="0.1514%" height="15" fill="rgb(219,208,6)"/><text x="67.7746%" y="495.50"></text></g><g><title>tcp_current_mss (2 samples, 0.15%)</title><rect x="67.5246%" y="469" width="0.1514%" height="15" fill="rgb(248,31,23)"/><text x="67.7746%" y="479.50"></text></g><g><title>__x64_sys_sendto (74 samples, 5.60%)</title><rect x="62.3770%" y="565" width="5.6018%" height="15" fill="rgb(245,15,42)"/><text x="62.6270%" y="575.50">__x64_s..</text></g><g><title>__sys_sendto (74 samples, 5.60%)</title><rect x="62.3770%" y="549" width="5.6018%" height="15" fill="rgb(222,217,39)"/><text x="62.6270%" y="559.50">__sys_s..</text></g><g><title>sockfd_lookup_light (4 samples, 0.30%)</title><rect x="67.6760%" y="533" width="0.3028%" height="15" fill="rgb(210,219,27)"/><text x="67.9260%" y="543.50"></text></g><g><title>__fget_light (4 samples, 0.30%)</title><rect x="67.6760%" y="517" width="0.3028%" height="15" fill="rgb(252,166,36)"/><text x="67.9260%" y="527.50"></text></g><g><title>__fget_files (2 samples, 0.15%)</title><rect x="67.8274%" y="501" width="0.1514%" height="15" fill="rgb(245,132,34)"/><text x="68.0774%" y="511.50"></text></g><g><title>do_syscall_64 (75 samples, 5.68%)</title><rect x="62.3770%" y="581" width="5.6775%" height="15" fill="rgb(236,54,3)"/><text x="62.6270%" y="591.50">do_sysc..</text></g><g><title>entry_SYSCALL_64 (78 samples, 5.90%)</title><rect x="62.3770%" y="597" width="5.9046%" height="15" fill="rgb(241,173,43)"/><text x="62.6270%" y="607.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="68.0545%" y="581" width="0.2271%" height="15" fill="rgb(215,190,9)"/><text x="68.3045%" y="591.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (266 samples, 20.14%)</title><rect x="48.2967%" y="741" width="20.1363%" height="15" fill="rgb(242,101,16)"/><text x="48.5467%" y="751.50">&lt;decor::Shim as msql_srv::MysqlS..</text></g><g><title>mysql::conn::transaction::Transaction::commit (89 samples, 6.74%)</title><rect x="61.6957%" y="725" width="6.7373%" height="15" fill="rgb(223,190,21)"/><text x="61.9457%" y="735.50">mysql::co..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (87 samples, 6.59%)</title><rect x="61.8471%" y="709" width="6.5859%" height="15" fill="rgb(215,228,25)"/><text x="62.0971%" y="719.50">mysql::co..</text></g><g><title>mysql::conn::Conn::_query (87 samples, 6.59%)</title><rect x="61.8471%" y="693" width="6.5859%" height="15" fill="rgb(225,36,22)"/><text x="62.0971%" y="703.50">mysql::co..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (85 samples, 6.43%)</title><rect x="61.9985%" y="677" width="6.4345%" height="15" fill="rgb(251,106,46)"/><text x="62.2485%" y="687.50">mysql_co..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (81 samples, 6.13%)</title><rect x="62.3013%" y="661" width="6.1317%" height="15" fill="rgb(208,90,1)"/><text x="62.5513%" y="671.50">std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (81 samples, 6.13%)</title><rect x="62.3013%" y="645" width="6.1317%" height="15" fill="rgb(243,10,4)"/><text x="62.5513%" y="655.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::write (81 samples, 6.13%)</title><rect x="62.3013%" y="629" width="6.1317%" height="15" fill="rgb(212,137,27)"/><text x="62.5513%" y="639.50">std::sys..</text></g><g><title>__libc_send (81 samples, 6.13%)</title><rect x="62.3013%" y="613" width="6.1317%" height="15" fill="rgb(231,220,49)"/><text x="62.5513%" y="623.50">__libc_s..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.15%)</title><rect x="68.2816%" y="597" width="0.1514%" height="15" fill="rgb(237,96,20)"/><text x="68.5316%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="68.4330%" y="741" width="0.1514%" height="15" fill="rgb(239,229,30)"/><text x="68.6830%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.15%)</title><rect x="68.4330%" y="725" width="0.1514%" height="15" fill="rgb(219,65,33)"/><text x="68.6830%" y="735.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.23%)</title><rect x="68.5844%" y="741" width="0.2271%" height="15" fill="rgb(243,134,7)"/><text x="68.8344%" y="751.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.15%)</title><rect x="68.6601%" y="725" width="0.1514%" height="15" fill="rgb(216,177,54)"/><text x="68.9101%" y="735.50"></text></g><g><title>ip_local_deliver (4 samples, 0.30%)</title><rect x="69.3414%" y="341" width="0.3028%" height="15" fill="rgb(211,160,20)"/><text x="69.5914%" y="351.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.30%)</title><rect x="69.3414%" y="325" width="0.3028%" height="15" fill="rgb(239,85,39)"/><text x="69.5914%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.30%)</title><rect x="69.3414%" y="309" width="0.3028%" height="15" fill="rgb(232,125,22)"/><text x="69.5914%" y="319.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.30%)</title><rect x="69.3414%" y="293" width="0.3028%" height="15" fill="rgb(244,57,34)"/><text x="69.5914%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.23%)</title><rect x="69.4171%" y="277" width="0.2271%" height="15" fill="rgb(214,203,32)"/><text x="69.6671%" y="287.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.23%)</title><rect x="69.4171%" y="261" width="0.2271%" height="15" fill="rgb(207,58,43)"/><text x="69.6671%" y="271.50"></text></g><g><title>tcp_ack (2 samples, 0.15%)</title><rect x="69.4928%" y="245" width="0.1514%" height="15" fill="rgb(215,193,15)"/><text x="69.7428%" y="255.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.38%)</title><rect x="69.3414%" y="533" width="0.3785%" height="15" fill="rgb(232,15,44)"/><text x="69.5914%" y="543.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.38%)</title><rect x="69.3414%" y="517" width="0.3785%" height="15" fill="rgb(212,3,48)"/><text x="69.5914%" y="527.50"></text></g><g><title>ip_output (5 samples, 0.38%)</title><rect x="69.3414%" y="501" width="0.3785%" height="15" fill="rgb(218,128,7)"/><text x="69.5914%" y="511.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.38%)</title><rect x="69.3414%" y="485" width="0.3785%" height="15" fill="rgb(226,216,39)"/><text x="69.5914%" y="495.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.38%)</title><rect x="69.3414%" y="469" width="0.3785%" height="15" fill="rgb(243,47,51)"/><text x="69.5914%" y="479.50"></text></g><g><title>do_softirq (5 samples, 0.38%)</title><rect x="69.3414%" y="453" width="0.3785%" height="15" fill="rgb(241,183,40)"/><text x="69.5914%" y="463.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.38%)</title><rect x="69.3414%" y="437" width="0.3785%" height="15" fill="rgb(231,217,32)"/><text x="69.5914%" y="447.50"></text></g><g><title>__do_softirq (5 samples, 0.38%)</title><rect x="69.3414%" y="421" width="0.3785%" height="15" fill="rgb(229,61,38)"/><text x="69.5914%" y="431.50"></text></g><g><title>net_rx_action (5 samples, 0.38%)</title><rect x="69.3414%" y="405" width="0.3785%" height="15" fill="rgb(225,210,5)"/><text x="69.5914%" y="415.50"></text></g><g><title>process_backlog (5 samples, 0.38%)</title><rect x="69.3414%" y="389" width="0.3785%" height="15" fill="rgb(231,79,45)"/><text x="69.5914%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.38%)</title><rect x="69.3414%" y="373" width="0.3785%" height="15" fill="rgb(224,100,7)"/><text x="69.5914%" y="383.50"></text></g><g><title>ip_rcv (5 samples, 0.38%)</title><rect x="69.3414%" y="357" width="0.3785%" height="15" fill="rgb(241,198,18)"/><text x="69.5914%" y="367.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.15%)</title><rect x="70.3255%" y="453" width="0.1514%" height="15" fill="rgb(252,97,53)"/><text x="70.5755%" y="463.50"></text></g><g><title>dequeue_entity (2 samples, 0.15%)</title><rect x="70.3255%" y="437" width="0.1514%" height="15" fill="rgb(220,88,7)"/><text x="70.5755%" y="447.50"></text></g><g><title>sk_wait_data (12 samples, 0.91%)</title><rect x="69.7199%" y="533" width="0.9084%" height="15" fill="rgb(213,176,14)"/><text x="69.9699%" y="543.50"></text></g><g><title>wait_woken (11 samples, 0.83%)</title><rect x="69.7956%" y="517" width="0.8327%" height="15" fill="rgb(246,73,7)"/><text x="70.0456%" y="527.50"></text></g><g><title>schedule_timeout (7 samples, 0.53%)</title><rect x="70.0984%" y="501" width="0.5299%" height="15" fill="rgb(245,64,36)"/><text x="70.3484%" y="511.50"></text></g><g><title>schedule (7 samples, 0.53%)</title><rect x="70.0984%" y="485" width="0.5299%" height="15" fill="rgb(245,80,10)"/><text x="70.3484%" y="495.50"></text></g><g><title>__schedule (7 samples, 0.53%)</title><rect x="70.0984%" y="469" width="0.5299%" height="15" fill="rgb(232,107,50)"/><text x="70.3484%" y="479.50"></text></g><g><title>do_syscall_64 (24 samples, 1.82%)</title><rect x="68.9629%" y="613" width="1.8168%" height="15" fill="rgb(253,3,0)"/><text x="69.2129%" y="623.50">d..</text></g><g><title>__x64_sys_recvfrom (24 samples, 1.82%)</title><rect x="68.9629%" y="597" width="1.8168%" height="15" fill="rgb(212,99,53)"/><text x="69.2129%" y="607.50">_..</text></g><g><title>__sys_recvfrom (23 samples, 1.74%)</title><rect x="69.0386%" y="581" width="1.7411%" height="15" fill="rgb(249,111,54)"/><text x="69.2886%" y="591.50"></text></g><g><title>inet_recvmsg (22 samples, 1.67%)</title><rect x="69.1143%" y="565" width="1.6654%" height="15" fill="rgb(249,55,30)"/><text x="69.3643%" y="575.50"></text></g><g><title>tcp_recvmsg (22 samples, 1.67%)</title><rect x="69.1143%" y="549" width="1.6654%" height="15" fill="rgb(237,47,42)"/><text x="69.3643%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.15%)</title><rect x="70.6283%" y="533" width="0.1514%" height="15" fill="rgb(211,20,18)"/><text x="70.8783%" y="543.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.15%)</title><rect x="70.6283%" y="517" width="0.1514%" height="15" fill="rgb(231,203,46)"/><text x="70.8783%" y="527.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (27 samples, 2.04%)</title><rect x="68.8115%" y="725" width="2.0439%" height="15" fill="rgb(237,142,3)"/><text x="69.0615%" y="735.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 2.04%)</title><rect x="68.8115%" y="709" width="2.0439%" height="15" fill="rgb(241,107,1)"/><text x="69.0615%" y="719.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (27 samples, 2.04%)</title><rect x="68.8115%" y="693" width="2.0439%" height="15" fill="rgb(229,83,13)"/><text x="69.0615%" y="703.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (27 samples, 2.04%)</title><rect x="68.8115%" y="677" width="2.0439%" height="15" fill="rgb(241,91,40)"/><text x="69.0615%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (27 samples, 2.04%)</title><rect x="68.8115%" y="661" width="2.0439%" height="15" fill="rgb(225,3,45)"/><text x="69.0615%" y="671.50">s..</text></g><g><title>__libc_recv (27 samples, 2.04%)</title><rect x="68.8115%" y="645" width="2.0439%" height="15" fill="rgb(244,223,14)"/><text x="69.0615%" y="655.50">_..</text></g><g><title>entry_SYSCALL_64 (25 samples, 1.89%)</title><rect x="68.9629%" y="629" width="1.8925%" height="15" fill="rgb(224,124,37)"/><text x="69.2129%" y="639.50">e..</text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (29 samples, 2.20%)</title><rect x="68.8115%" y="741" width="2.1953%" height="15" fill="rgb(251,171,30)"/><text x="69.0615%" y="751.50">m..</text></g><g><title>msql_srv::packet::packet (2 samples, 0.15%)</title><rect x="70.8554%" y="725" width="0.1514%" height="15" fill="rgb(236,46,54)"/><text x="71.1054%" y="735.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.23%)</title><rect x="72.1423%" y="453" width="0.2271%" height="15" fill="rgb(245,213,5)"/><text x="72.3923%" y="463.50"></text></g><g><title>loopback_xmit (3 samples, 0.23%)</title><rect x="72.1423%" y="437" width="0.2271%" height="15" fill="rgb(230,144,27)"/><text x="72.3923%" y="447.50"></text></g><g><title>tcp_wfree (2 samples, 0.15%)</title><rect x="72.2180%" y="421" width="0.1514%" height="15" fill="rgb(220,86,6)"/><text x="72.4680%" y="431.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.30%)</title><rect x="72.1423%" y="469" width="0.3028%" height="15" fill="rgb(240,20,13)"/><text x="72.3923%" y="479.50"></text></g><g><title>psi_task_change (2 samples, 0.15%)</title><rect x="73.2778%" y="165" width="0.1514%" height="15" fill="rgb(217,89,34)"/><text x="73.5278%" y="175.50"></text></g><g><title>enqueue_task (5 samples, 0.38%)</title><rect x="73.2021%" y="181" width="0.3785%" height="15" fill="rgb(229,13,5)"/><text x="73.4521%" y="191.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.15%)</title><rect x="73.4292%" y="165" width="0.1514%" height="15" fill="rgb(244,67,35)"/><text x="73.6792%" y="175.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.45%)</title><rect x="73.5806%" y="181" width="0.4542%" height="15" fill="rgb(221,40,2)"/><text x="73.8306%" y="191.50"></text></g><g><title>enqueue_entity (5 samples, 0.38%)</title><rect x="73.6563%" y="165" width="0.3785%" height="15" fill="rgb(237,157,21)"/><text x="73.9063%" y="175.50"></text></g><g><title>update_load_avg (2 samples, 0.15%)</title><rect x="73.8834%" y="149" width="0.1514%" height="15" fill="rgb(222,94,11)"/><text x="74.1334%" y="159.50"></text></g><g><title>__wake_up_common (13 samples, 0.98%)</title><rect x="73.1264%" y="213" width="0.9841%" height="15" fill="rgb(249,113,6)"/><text x="73.3764%" y="223.50"></text></g><g><title>try_to_wake_up (12 samples, 0.91%)</title><rect x="73.2021%" y="197" width="0.9084%" height="15" fill="rgb(238,137,36)"/><text x="73.4521%" y="207.50"></text></g><g><title>sock_def_readable (14 samples, 1.06%)</title><rect x="73.1264%" y="245" width="1.0598%" height="15" fill="rgb(210,102,26)"/><text x="73.3764%" y="255.50"></text></g><g><title>__wake_up_common_lock (14 samples, 1.06%)</title><rect x="73.1264%" y="229" width="1.0598%" height="15" fill="rgb(218,30,30)"/><text x="73.3764%" y="239.50"></text></g><g><title>__kfree_skb (3 samples, 0.23%)</title><rect x="74.3376%" y="229" width="0.2271%" height="15" fill="rgb(214,67,26)"/><text x="74.5876%" y="239.50"></text></g><g><title>skb_release_data (2 samples, 0.15%)</title><rect x="74.4133%" y="213" width="0.1514%" height="15" fill="rgb(251,9,53)"/><text x="74.6633%" y="223.50"></text></g><g><title>tcp_ack (7 samples, 0.53%)</title><rect x="74.1862%" y="245" width="0.5299%" height="15" fill="rgb(228,204,25)"/><text x="74.4362%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 1.74%)</title><rect x="73.0507%" y="277" width="1.7411%" height="15" fill="rgb(207,153,8)"/><text x="73.3007%" y="287.50"></text></g><g><title>tcp_rcv_established (23 samples, 1.74%)</title><rect x="73.0507%" y="261" width="1.7411%" height="15" fill="rgb(242,9,16)"/><text x="73.3007%" y="271.50"></text></g><g><title>ip_local_deliver (26 samples, 1.97%)</title><rect x="72.8993%" y="341" width="1.9682%" height="15" fill="rgb(217,211,10)"/><text x="73.1493%" y="351.50">i..</text></g><g><title>ip_local_deliver_finish (26 samples, 1.97%)</title><rect x="72.8993%" y="325" width="1.9682%" height="15" fill="rgb(219,228,52)"/><text x="73.1493%" y="335.50">i..</text></g><g><title>ip_protocol_deliver_rcu (26 samples, 1.97%)</title><rect x="72.8993%" y="309" width="1.9682%" height="15" fill="rgb(231,92,29)"/><text x="73.1493%" y="319.50">i..</text></g><g><title>tcp_v4_rcv (25 samples, 1.89%)</title><rect x="72.9750%" y="293" width="1.8925%" height="15" fill="rgb(232,8,23)"/><text x="73.2250%" y="303.50">t..</text></g><g><title>__ip_queue_xmit (44 samples, 3.33%)</title><rect x="71.6881%" y="517" width="3.3308%" height="15" fill="rgb(216,211,34)"/><text x="71.9381%" y="527.50">__i..</text></g><g><title>ip_output (42 samples, 3.18%)</title><rect x="71.8395%" y="501" width="3.1794%" height="15" fill="rgb(236,151,0)"/><text x="72.0895%" y="511.50">ip_..</text></g><g><title>ip_finish_output2 (41 samples, 3.10%)</title><rect x="71.9152%" y="485" width="3.1037%" height="15" fill="rgb(209,168,3)"/><text x="72.1652%" y="495.50">ip_..</text></g><g><title>__local_bh_enable_ip (34 samples, 2.57%)</title><rect x="72.4451%" y="469" width="2.5738%" height="15" fill="rgb(208,129,28)"/><text x="72.6951%" y="479.50">__..</text></g><g><title>do_softirq (34 samples, 2.57%)</title><rect x="72.4451%" y="453" width="2.5738%" height="15" fill="rgb(229,78,22)"/><text x="72.6951%" y="463.50">do..</text></g><g><title>do_softirq_own_stack (33 samples, 2.50%)</title><rect x="72.5208%" y="437" width="2.4981%" height="15" fill="rgb(228,187,13)"/><text x="72.7708%" y="447.50">do..</text></g><g><title>__do_softirq (32 samples, 2.42%)</title><rect x="72.5965%" y="421" width="2.4224%" height="15" fill="rgb(240,119,24)"/><text x="72.8465%" y="431.50">__..</text></g><g><title>net_rx_action (31 samples, 2.35%)</title><rect x="72.6722%" y="405" width="2.3467%" height="15" fill="rgb(209,194,42)"/><text x="72.9222%" y="415.50">n..</text></g><g><title>process_backlog (28 samples, 2.12%)</title><rect x="72.8993%" y="389" width="2.1196%" height="15" fill="rgb(247,200,46)"/><text x="73.1493%" y="399.50">p..</text></g><g><title>__netif_receive_skb_one_core (28 samples, 2.12%)</title><rect x="72.8993%" y="373" width="2.1196%" height="15" fill="rgb(218,76,16)"/><text x="73.1493%" y="383.50">_..</text></g><g><title>ip_rcv (28 samples, 2.12%)</title><rect x="72.8993%" y="357" width="2.1196%" height="15" fill="rgb(225,21,48)"/><text x="73.1493%" y="367.50">i..</text></g><g><title>ip_rcv_core (2 samples, 0.15%)</title><rect x="74.8675%" y="341" width="0.1514%" height="15" fill="rgb(239,223,50)"/><text x="75.1175%" y="351.50"></text></g><g><title>__tcp_transmit_skb (48 samples, 3.63%)</title><rect x="71.5367%" y="533" width="3.6336%" height="15" fill="rgb(244,45,21)"/><text x="71.7867%" y="543.50">__tc..</text></g><g><title>__tcp_push_pending_frames (50 samples, 3.79%)</title><rect x="71.4610%" y="565" width="3.7850%" height="15" fill="rgb(232,33,43)"/><text x="71.7110%" y="575.50">__tc..</text></g><g><title>tcp_write_xmit (50 samples, 3.79%)</title><rect x="71.4610%" y="549" width="3.7850%" height="15" fill="rgb(209,8,3)"/><text x="71.7110%" y="559.50">tcp_..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.15%)</title><rect x="75.2460%" y="565" width="0.1514%" height="15" fill="rgb(214,25,53)"/><text x="75.4960%" y="575.50"></text></g><g><title>__alloc_skb (2 samples, 0.15%)</title><rect x="75.2460%" y="549" width="0.1514%" height="15" fill="rgb(254,186,54)"/><text x="75.4960%" y="559.50"></text></g><g><title>sock_sendmsg (60 samples, 4.54%)</title><rect x="71.0825%" y="613" width="4.5420%" height="15" fill="rgb(208,174,49)"/><text x="71.3325%" y="623.50">sock_..</text></g><g><title>tcp_sendmsg (59 samples, 4.47%)</title><rect x="71.1582%" y="597" width="4.4663%" height="15" fill="rgb(233,191,51)"/><text x="71.4082%" y="607.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (58 samples, 4.39%)</title><rect x="71.2339%" y="581" width="4.3906%" height="15" fill="rgb(222,134,10)"/><text x="71.4839%" y="591.50">tcp_s..</text></g><g><title>tcp_send_mss (2 samples, 0.15%)</title><rect x="75.4731%" y="565" width="0.1514%" height="15" fill="rgb(230,226,20)"/><text x="75.7231%" y="575.50"></text></g><g><title>tcp_current_mss (2 samples, 0.15%)</title><rect x="75.4731%" y="549" width="0.1514%" height="15" fill="rgb(251,111,25)"/><text x="75.7231%" y="559.50"></text></g><g><title>ipv4_mtu (2 samples, 0.15%)</title><rect x="75.4731%" y="533" width="0.1514%" height="15" fill="rgb(224,40,46)"/><text x="75.7231%" y="543.50"></text></g><g><title>__x64_sys_sendto (61 samples, 4.62%)</title><rect x="71.0825%" y="645" width="4.6177%" height="15" fill="rgb(236,108,47)"/><text x="71.3325%" y="655.50">__x64..</text></g><g><title>__sys_sendto (61 samples, 4.62%)</title><rect x="71.0825%" y="629" width="4.6177%" height="15" fill="rgb(234,93,0)"/><text x="71.3325%" y="639.50">__sys..</text></g><g><title>do_syscall_64 (62 samples, 4.69%)</title><rect x="71.0825%" y="661" width="4.6934%" height="15" fill="rgb(224,213,32)"/><text x="71.3325%" y="671.50">do_sy..</text></g><g><title>entry_SYSCALL_64 (65 samples, 4.92%)</title><rect x="71.0825%" y="677" width="4.9205%" height="15" fill="rgb(251,11,48)"/><text x="71.3325%" y="687.50">entry_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="75.7759%" y="661" width="0.2271%" height="15" fill="rgb(236,173,5)"/><text x="76.0259%" y="671.50"></text></g><g><title>decor::Shim::run_on_tcp (372 samples, 28.16%)</title><rect x="47.9182%" y="773" width="28.1605%" height="15" fill="rgb(230,95,12)"/><text x="48.1682%" y="783.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (372 samples, 28.16%)</title><rect x="47.9182%" y="757" width="28.1605%" height="15" fill="rgb(232,209,1)"/><text x="48.1682%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (67 samples, 5.07%)</title><rect x="71.0068%" y="741" width="5.0719%" height="15" fill="rgb(232,6,1)"/><text x="71.2568%" y="751.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (67 samples, 5.07%)</title><rect x="71.0068%" y="725" width="5.0719%" height="15" fill="rgb(210,224,50)"/><text x="71.2568%" y="735.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (67 samples, 5.07%)</title><rect x="71.0068%" y="709" width="5.0719%" height="15" fill="rgb(228,127,35)"/><text x="71.2568%" y="719.50">std::s..</text></g><g><title>__libc_send (67 samples, 5.07%)</title><rect x="71.0068%" y="693" width="5.0719%" height="15" fill="rgb(245,102,45)"/><text x="71.2568%" y="703.50">__libc..</text></g><g><title>__GI___clone (374 samples, 28.31%)</title><rect x="47.9182%" y="885" width="28.3119%" height="15" fill="rgb(214,1,49)"/><text x="48.1682%" y="895.50">__GI___clone</text></g><g><title>start_thread (374 samples, 28.31%)</title><rect x="47.9182%" y="869" width="28.3119%" height="15" fill="rgb(226,163,40)"/><text x="48.1682%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (374 samples, 28.31%)</title><rect x="47.9182%" y="853" width="28.3119%" height="15" fill="rgb(239,212,28)"/><text x="48.1682%" y="863.50">std::sys::unix::thread::Thread::new::thread_s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (374 samples, 28.31%)</title><rect x="47.9182%" y="837" width="28.3119%" height="15" fill="rgb(220,20,13)"/><text x="48.1682%" y="847.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (374 samples, 28.31%)</title><rect x="47.9182%" y="821" width="28.3119%" height="15" fill="rgb(210,164,35)"/><text x="48.1682%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (374 samples, 28.31%)</title><rect x="47.9182%" y="805" width="28.3119%" height="15" fill="rgb(248,109,41)"/><text x="48.1682%" y="815.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (374 samples, 28.31%)</title><rect x="47.9182%" y="789" width="28.3119%" height="15" fill="rgb(238,23,50)"/><text x="48.1682%" y="799.50">std::sys_common::backtrace::__rust_begin_shor..</text></g><g><title>mysql::conn::Conn::new (2 samples, 0.15%)</title><rect x="76.0787%" y="773" width="0.1514%" height="15" fill="rgb(211,48,49)"/><text x="76.3287%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.38%)</title><rect x="76.3815%" y="709" width="0.3785%" height="15" fill="rgb(223,36,21)"/><text x="76.6315%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.38%)</title><rect x="76.8357%" y="629" width="0.3785%" height="15" fill="rgb(207,123,46)"/><text x="77.0857%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (5 samples, 0.38%)</title><rect x="76.8357%" y="613" width="0.3785%" height="15" fill="rgb(240,218,32)"/><text x="77.0857%" y="623.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 17.49%)</title><rect x="77.6684%" y="405" width="17.4868%" height="15" fill="rgb(252,5,43)"/><text x="77.9184%" y="415.50">__intel_pmu_enable_all.cons..</text></g><g><title>native_write_msr (231 samples, 17.49%)</title><rect x="77.6684%" y="389" width="17.4868%" height="15" fill="rgb(252,84,19)"/><text x="77.9184%" y="399.50">native_write_msr</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 17.71%)</title><rect x="77.5927%" y="565" width="17.7139%" height="15" fill="rgb(243,152,39)"/><text x="77.8427%" y="575.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 17.71%)</title><rect x="77.5927%" y="549" width="17.7139%" height="15" fill="rgb(234,160,15)"/><text x="77.8427%" y="559.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 17.71%)</title><rect x="77.5927%" y="533" width="17.7139%" height="15" fill="rgb(237,34,20)"/><text x="77.8427%" y="543.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 17.71%)</title><rect x="77.5927%" y="517" width="17.7139%" height="15" fill="rgb(229,97,13)"/><text x="77.8427%" y="527.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 17.71%)</title><rect x="77.5927%" y="501" width="17.7139%" height="15" fill="rgb(234,71,50)"/><text x="77.8427%" y="511.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 17.71%)</title><rect x="77.5927%" y="485" width="17.7139%" height="15" fill="rgb(253,155,4)"/><text x="77.8427%" y="495.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 17.71%)</title><rect x="77.5927%" y="469" width="17.7139%" height="15" fill="rgb(222,185,37)"/><text x="77.8427%" y="479.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 17.71%)</title><rect x="77.5927%" y="453" width="17.7139%" height="15" fill="rgb(251,177,13)"/><text x="77.8427%" y="463.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 17.71%)</title><rect x="77.5927%" y="437" width="17.7139%" height="15" fill="rgb(250,179,40)"/><text x="77.8427%" y="447.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 17.64%)</title><rect x="77.6684%" y="421" width="17.6382%" height="15" fill="rgb(242,44,2)"/><text x="77.9184%" y="431.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (2 samples, 0.15%)</title><rect x="95.1552%" y="405" width="0.1514%" height="15" fill="rgb(216,177,13)"/><text x="95.4052%" y="415.50"></text></g><g><title>do_syscall_64 (235 samples, 17.79%)</title><rect x="77.5927%" y="581" width="17.7896%" height="15" fill="rgb(216,106,43)"/><text x="77.8427%" y="591.50">do_syscall_64</text></g><g><title>__GI___sched_setaffinity_new (240 samples, 18.17%)</title><rect x="77.3656%" y="613" width="18.1681%" height="15" fill="rgb(216,183,2)"/><text x="77.6156%" y="623.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (237 samples, 17.94%)</title><rect x="77.5927%" y="597" width="17.9410%" height="15" fill="rgb(249,75,3)"/><text x="77.8427%" y="607.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="95.3823%" y="581" width="0.1514%" height="15" fill="rgb(219,67,39)"/><text x="95.6323%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (249 samples, 18.85%)</title><rect x="76.8357%" y="645" width="18.8494%" height="15" fill="rgb(253,228,2)"/><text x="77.0857%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (244 samples, 18.47%)</title><rect x="77.2142%" y="629" width="18.4709%" height="15" fill="rgb(235,138,27)"/><text x="77.4642%" y="639.50">hwloc_linux_set_tid_cpubind</text></g><g><title>_int_free (2 samples, 0.15%)</title><rect x="95.5337%" y="613" width="0.1514%" height="15" fill="rgb(236,97,51)"/><text x="95.7837%" y="623.50"></text></g><g><title>hwloc::Topology::new (250 samples, 18.93%)</title><rect x="76.8357%" y="709" width="18.9251%" height="15" fill="rgb(240,80,30)"/><text x="77.0857%" y="719.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (250 samples, 18.93%)</title><rect x="76.8357%" y="693" width="18.9251%" height="15" fill="rgb(230,178,19)"/><text x="77.0857%" y="703.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (250 samples, 18.93%)</title><rect x="76.8357%" y="677" width="18.9251%" height="15" fill="rgb(210,190,27)"/><text x="77.0857%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (250 samples, 18.93%)</title><rect x="76.8357%" y="661" width="18.9251%" height="15" fill="rgb(222,107,31)"/><text x="77.0857%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>enqueue_task (3 samples, 0.23%)</title><rect x="96.8206%" y="117" width="0.2271%" height="15" fill="rgb(216,127,34)"/><text x="97.0706%" y="127.50"></text></g><g><title>sock_def_readable (5 samples, 0.38%)</title><rect x="96.8206%" y="181" width="0.3785%" height="15" fill="rgb(234,116,52)"/><text x="97.0706%" y="191.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.38%)</title><rect x="96.8206%" y="165" width="0.3785%" height="15" fill="rgb(222,124,15)"/><text x="97.0706%" y="175.50"></text></g><g><title>__wake_up_common (5 samples, 0.38%)</title><rect x="96.8206%" y="149" width="0.3785%" height="15" fill="rgb(231,179,28)"/><text x="97.0706%" y="159.50"></text></g><g><title>try_to_wake_up (5 samples, 0.38%)</title><rect x="96.8206%" y="133" width="0.3785%" height="15" fill="rgb(226,93,45)"/><text x="97.0706%" y="143.50"></text></g><g><title>__kfree_skb (2 samples, 0.15%)</title><rect x="97.1991%" y="165" width="0.1514%" height="15" fill="rgb(215,8,51)"/><text x="97.4491%" y="175.50"></text></g><g><title>kfree (2 samples, 0.15%)</title><rect x="97.1991%" y="149" width="0.1514%" height="15" fill="rgb(223,106,5)"/><text x="97.4491%" y="159.50"></text></g><g><title>tcp_ack (6 samples, 0.45%)</title><rect x="97.1991%" y="181" width="0.4542%" height="15" fill="rgb(250,191,5)"/><text x="97.4491%" y="191.50"></text></g><g><title>ip_local_deliver (16 samples, 1.21%)</title><rect x="96.5935%" y="277" width="1.2112%" height="15" fill="rgb(242,132,44)"/><text x="96.8435%" y="287.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 1.21%)</title><rect x="96.5935%" y="261" width="1.2112%" height="15" fill="rgb(251,152,29)"/><text x="96.8435%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 1.21%)</title><rect x="96.5935%" y="245" width="1.2112%" height="15" fill="rgb(218,179,5)"/><text x="96.8435%" y="255.50"></text></g><g><title>tcp_v4_rcv (15 samples, 1.14%)</title><rect x="96.6692%" y="229" width="1.1355%" height="15" fill="rgb(227,67,19)"/><text x="96.9192%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 1.06%)</title><rect x="96.7449%" y="213" width="1.0598%" height="15" fill="rgb(233,119,31)"/><text x="96.9949%" y="223.50"></text></g><g><title>tcp_rcv_established (14 samples, 1.06%)</title><rect x="96.7449%" y="197" width="1.0598%" height="15" fill="rgb(241,120,22)"/><text x="96.9949%" y="207.50"></text></g><g><title>__ip_queue_xmit (22 samples, 1.67%)</title><rect x="96.2150%" y="453" width="1.6654%" height="15" fill="rgb(224,102,30)"/><text x="96.4650%" y="463.50"></text></g><g><title>ip_output (21 samples, 1.59%)</title><rect x="96.2907%" y="437" width="1.5897%" height="15" fill="rgb(210,164,37)"/><text x="96.5407%" y="447.50"></text></g><g><title>ip_finish_output2 (19 samples, 1.44%)</title><rect x="96.4421%" y="421" width="1.4383%" height="15" fill="rgb(226,191,16)"/><text x="96.6921%" y="431.50"></text></g><g><title>__local_bh_enable_ip (19 samples, 1.44%)</title><rect x="96.4421%" y="405" width="1.4383%" height="15" fill="rgb(214,40,45)"/><text x="96.6921%" y="415.50"></text></g><g><title>do_softirq (19 samples, 1.44%)</title><rect x="96.4421%" y="389" width="1.4383%" height="15" fill="rgb(244,29,26)"/><text x="96.6921%" y="399.50"></text></g><g><title>do_softirq_own_stack (19 samples, 1.44%)</title><rect x="96.4421%" y="373" width="1.4383%" height="15" fill="rgb(216,16,5)"/><text x="96.6921%" y="383.50"></text></g><g><title>__do_softirq (19 samples, 1.44%)</title><rect x="96.4421%" y="357" width="1.4383%" height="15" fill="rgb(249,76,35)"/><text x="96.6921%" y="367.50"></text></g><g><title>net_rx_action (19 samples, 1.44%)</title><rect x="96.4421%" y="341" width="1.4383%" height="15" fill="rgb(207,11,44)"/><text x="96.6921%" y="351.50"></text></g><g><title>process_backlog (18 samples, 1.36%)</title><rect x="96.5178%" y="325" width="1.3626%" height="15" fill="rgb(228,190,49)"/><text x="96.7678%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 1.36%)</title><rect x="96.5178%" y="309" width="1.3626%" height="15" fill="rgb(214,173,12)"/><text x="96.7678%" y="319.50"></text></g><g><title>ip_rcv (17 samples, 1.29%)</title><rect x="96.5935%" y="293" width="1.2869%" height="15" fill="rgb(218,26,35)"/><text x="96.8435%" y="303.50"></text></g><g><title>__tcp_transmit_skb (24 samples, 1.82%)</title><rect x="96.1393%" y="469" width="1.8168%" height="15" fill="rgb(220,200,19)"/><text x="96.3893%" y="479.50">_..</text></g><g><title>tcp_event_new_data_sent (3 samples, 0.23%)</title><rect x="98.0318%" y="469" width="0.2271%" height="15" fill="rgb(239,95,49)"/><text x="98.2818%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (29 samples, 2.20%)</title><rect x="96.1393%" y="501" width="2.1953%" height="15" fill="rgb(235,85,53)"/><text x="96.3893%" y="511.50">_..</text></g><g><title>tcp_write_xmit (29 samples, 2.20%)</title><rect x="96.1393%" y="485" width="2.1953%" height="15" fill="rgb(233,133,31)"/><text x="96.3893%" y="495.50">t..</text></g><g><title>do_syscall_64 (33 samples, 2.50%)</title><rect x="95.9879%" y="597" width="2.4981%" height="15" fill="rgb(218,25,20)"/><text x="96.2379%" y="607.50">do..</text></g><g><title>__x64_sys_sendto (33 samples, 2.50%)</title><rect x="95.9879%" y="581" width="2.4981%" height="15" fill="rgb(252,210,38)"/><text x="96.2379%" y="591.50">__..</text></g><g><title>__sys_sendto (33 samples, 2.50%)</title><rect x="95.9879%" y="565" width="2.4981%" height="15" fill="rgb(242,134,21)"/><text x="96.2379%" y="575.50">__..</text></g><g><title>sock_sendmsg (33 samples, 2.50%)</title><rect x="95.9879%" y="549" width="2.4981%" height="15" fill="rgb(213,28,48)"/><text x="96.2379%" y="559.50">so..</text></g><g><title>tcp_sendmsg (33 samples, 2.50%)</title><rect x="95.9879%" y="533" width="2.4981%" height="15" fill="rgb(250,196,2)"/><text x="96.2379%" y="543.50">tc..</text></g><g><title>tcp_sendmsg_locked (32 samples, 2.42%)</title><rect x="96.0636%" y="517" width="2.4224%" height="15" fill="rgb(227,5,17)"/><text x="96.3136%" y="527.50">tc..</text></g><g><title>mysql::conn::Conn::_query (38 samples, 2.88%)</title><rect x="95.7608%" y="709" width="2.8766%" height="15" fill="rgb(221,226,24)"/><text x="96.0108%" y="719.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (37 samples, 2.80%)</title><rect x="95.8365%" y="693" width="2.8009%" height="15" fill="rgb(211,5,48)"/><text x="96.0865%" y="703.50">my..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (36 samples, 2.73%)</title><rect x="95.9122%" y="677" width="2.7252%" height="15" fill="rgb(219,150,6)"/><text x="96.1622%" y="687.50">st..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (36 samples, 2.73%)</title><rect x="95.9122%" y="661" width="2.7252%" height="15" fill="rgb(251,46,16)"/><text x="96.1622%" y="671.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::write (36 samples, 2.73%)</title><rect x="95.9122%" y="645" width="2.7252%" height="15" fill="rgb(220,204,40)"/><text x="96.1622%" y="655.50">st..</text></g><g><title>__libc_send (36 samples, 2.73%)</title><rect x="95.9122%" y="629" width="2.7252%" height="15" fill="rgb(211,85,2)"/><text x="96.1622%" y="639.50">__..</text></g><g><title>entry_SYSCALL_64 (35 samples, 2.65%)</title><rect x="95.9879%" y="613" width="2.6495%" height="15" fill="rgb(229,17,7)"/><text x="96.2379%" y="623.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="98.4860%" y="597" width="0.1514%" height="15" fill="rgb(239,72,28)"/><text x="98.7360%" y="607.50"></text></g><g><title>__libc_start_main (295 samples, 22.33%)</title><rect x="76.3815%" y="869" width="22.3316%" height="15" fill="rgb(230,47,54)"/><text x="76.6315%" y="879.50">__libc_start_main</text></g><g><title>main (295 samples, 22.33%)</title><rect x="76.3815%" y="853" width="22.3316%" height="15" fill="rgb(214,50,8)"/><text x="76.6315%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (295 samples, 22.33%)</title><rect x="76.3815%" y="837" width="22.3316%" height="15" fill="rgb(216,198,43)"/><text x="76.6315%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (295 samples, 22.33%)</title><rect x="76.3815%" y="821" width="22.3316%" height="15" fill="rgb(234,20,35)"/><text x="76.6315%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (295 samples, 22.33%)</title><rect x="76.3815%" y="805" width="22.3316%" height="15" fill="rgb(254,45,19)"/><text x="76.6315%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (295 samples, 22.33%)</title><rect x="76.3815%" y="789" width="22.3316%" height="15" fill="rgb(219,14,44)"/><text x="76.6315%" y="799.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (295 samples, 22.33%)</title><rect x="76.3815%" y="773" width="22.3316%" height="15" fill="rgb(217,220,26)"/><text x="76.6315%" y="783.50">core::ops::function::impls::&lt;impl c..</text></g><g><title>std::rt::lang_start::_{{closure}} (295 samples, 22.33%)</title><rect x="76.3815%" y="757" width="22.3316%" height="15" fill="rgb(213,158,28)"/><text x="76.6315%" y="767.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (295 samples, 22.33%)</title><rect x="76.3815%" y="741" width="22.3316%" height="15" fill="rgb(252,51,52)"/><text x="76.6315%" y="751.50">std::sys_common::backtrace::__rust_..</text></g><g><title>lobsters::main (295 samples, 22.33%)</title><rect x="76.3815%" y="725" width="22.3316%" height="15" fill="rgb(246,89,16)"/><text x="76.6315%" y="735.50">lobsters::main</text></g><g><title>_start (296 samples, 22.41%)</title><rect x="76.3815%" y="885" width="22.4073%" height="15" fill="rgb(216,158,49)"/><text x="76.6315%" y="895.50">_start</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.30%)</title><rect x="98.8645%" y="885" width="0.3028%" height="15" fill="rgb(236,107,19)"/><text x="99.1145%" y="895.50"></text></g><g><title>do_syscall_64 (2 samples, 0.15%)</title><rect x="99.0159%" y="869" width="0.1514%" height="15" fill="rgb(228,185,30)"/><text x="99.2659%" y="879.50"></text></g><g><title>msql_srv::writers::column_definitions (2 samples, 0.15%)</title><rect x="99.1673%" y="885" width="0.1514%" height="15" fill="rgb(246,134,8)"/><text x="99.4173%" y="895.50"></text></g><g><title>lobsters (1,315 samples, 99.55%)</title><rect x="0.0000%" y="901" width="99.5458%" height="15" fill="rgb(214,143,50)"/><text x="0.2500%" y="911.50">lobsters</text></g><g><title>all (1,321 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(228,75,8)"/><text x="0.2500%" y="927.50"></text></g><g><title>perf (6 samples, 0.45%)</title><rect x="99.5458%" y="901" width="0.4542%" height="15" fill="rgb(207,175,4)"/><text x="99.7958%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.45%)</title><rect x="99.5458%" y="885" width="0.4542%" height="15" fill="rgb(205,108,24)"/><text x="99.7958%" y="895.50"></text></g><g><title>do_syscall_64 (6 samples, 0.45%)</title><rect x="99.5458%" y="869" width="0.4542%" height="15" fill="rgb(244,120,49)"/><text x="99.7958%" y="879.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.45%)</title><rect x="99.5458%" y="853" width="0.4542%" height="15" fill="rgb(223,47,38)"/><text x="99.7958%" y="863.50"></text></g><g><title>do_execve (6 samples, 0.45%)</title><rect x="99.5458%" y="837" width="0.4542%" height="15" fill="rgb(229,179,11)"/><text x="99.7958%" y="847.50"></text></g><g><title>__do_execve_file (6 samples, 0.45%)</title><rect x="99.5458%" y="821" width="0.4542%" height="15" fill="rgb(231,122,1)"/><text x="99.7958%" y="831.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.45%)</title><rect x="99.5458%" y="805" width="0.4542%" height="15" fill="rgb(245,119,9)"/><text x="99.7958%" y="815.50"></text></g><g><title>load_elf_binary (6 samples, 0.45%)</title><rect x="99.5458%" y="789" width="0.4542%" height="15" fill="rgb(241,163,25)"/><text x="99.7958%" y="799.50"></text></g><g><title>setup_new_exec (6 samples, 0.45%)</title><rect x="99.5458%" y="773" width="0.4542%" height="15" fill="rgb(217,214,3)"/><text x="99.7958%" y="783.50"></text></g><g><title>perf_event_exec (6 samples, 0.45%)</title><rect x="99.5458%" y="757" width="0.4542%" height="15" fill="rgb(240,86,28)"/><text x="99.7958%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.45%)</title><rect x="99.5458%" y="741" width="0.4542%" height="15" fill="rgb(215,47,9)"/><text x="99.7958%" y="751.50"></text></g><g><title>native_write_msr (6 samples, 0.45%)</title><rect x="99.5458%" y="725" width="0.4542%" height="15" fill="rgb(252,25,45)"/><text x="99.7958%" y="735.50"></text></g></svg></svg>