<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (1 samples, 0.14%)</title><rect x="0.0000%" y="917" width="0.1408%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="927.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="0.0000%" y="901" width="0.1408%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="0.0000%" y="885" width="0.1408%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="0.0000%" y="869" width="0.1408%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="0.0000%" y="853" width="0.1408%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="0.0000%" y="837" width="0.1408%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="0.0000%" y="821" width="0.1408%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="831.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.14%)</title><rect x="0.1408%" y="901" width="0.1408%" height="15" fill="rgb(228,23,34)"/><text x="0.3908%" y="911.50"></text></g><g><title>_dl_close (1 samples, 0.14%)</title><rect x="0.1408%" y="885" width="0.1408%" height="15" fill="rgb(218,30,26)"/><text x="0.3908%" y="895.50"></text></g><g><title>[libicuuc.so.67.1] (1 samples, 0.14%)</title><rect x="0.1408%" y="869" width="0.1408%" height="15" fill="rgb(220,122,19)"/><text x="0.3908%" y="879.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="0.1408%" y="853" width="0.1408%" height="15" fill="rgb(250,228,42)"/><text x="0.3908%" y="863.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="0.1408%" y="837" width="0.1408%" height="15" fill="rgb(240,193,28)"/><text x="0.3908%" y="847.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="0.1408%" y="821" width="0.1408%" height="15" fill="rgb(216,20,37)"/><text x="0.3908%" y="831.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="0.1408%" y="805" width="0.1408%" height="15" fill="rgb(206,188,39)"/><text x="0.3908%" y="815.50"></text></g><g><title>filemap_map_pages (1 samples, 0.14%)</title><rect x="0.1408%" y="789" width="0.1408%" height="15" fill="rgb(217,207,13)"/><text x="0.3908%" y="799.50"></text></g><g><title>alloc_set_pte (1 samples, 0.14%)</title><rect x="0.1408%" y="773" width="0.1408%" height="15" fill="rgb(231,73,38)"/><text x="0.3908%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="0.2817%" y="901" width="0.1408%" height="15" fill="rgb(225,20,46)"/><text x="0.5317%" y="911.50"></text></g><g><title>[[stack]] (3 samples, 0.42%)</title><rect x="0.1408%" y="917" width="0.4225%" height="15" fill="rgb(210,31,41)"/><text x="0.3908%" y="927.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="0.4225%" y="901" width="0.1408%" height="15" fill="rgb(221,200,47)"/><text x="0.6725%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="0.4225%" y="885" width="0.1408%" height="15" fill="rgb(226,26,5)"/><text x="0.6725%" y="895.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="0.5634%" y="901" width="0.1408%" height="15" fill="rgb(249,33,26)"/><text x="0.8134%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="0.7042%" y="901" width="0.1408%" height="15" fill="rgb(235,183,28)"/><text x="0.9542%" y="911.50"></text></g><g><title>__libc_send (2 samples, 0.28%)</title><rect x="0.8451%" y="901" width="0.2817%" height="15" fill="rgb(221,5,38)"/><text x="1.0951%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.28%)</title><rect x="0.8451%" y="885" width="0.2817%" height="15" fill="rgb(247,18,42)"/><text x="1.0951%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="1.1268%" y="901" width="0.1408%" height="15" fill="rgb(241,131,45)"/><text x="1.3768%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="1.2676%" y="901" width="0.1408%" height="15" fill="rgb(249,31,29)"/><text x="1.5176%" y="911.50"></text></g><g><title>[anon] (7 samples, 0.99%)</title><rect x="0.5634%" y="917" width="0.9859%" height="15" fill="rgb(225,111,53)"/><text x="0.8134%" y="927.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.14%)</title><rect x="1.4085%" y="901" width="0.1408%" height="15" fill="rgb(238,160,17)"/><text x="1.6585%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="1.5493%" y="901" width="0.1408%" height="15" fill="rgb(214,148,48)"/><text x="1.7993%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="1.6901%" y="901" width="0.1408%" height="15" fill="rgb(232,36,49)"/><text x="1.9401%" y="911.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="1.6901%" y="885" width="0.1408%" height="15" fill="rgb(209,103,24)"/><text x="1.9401%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.14%)</title><rect x="1.6901%" y="869" width="0.1408%" height="15" fill="rgb(229,88,8)"/><text x="1.9401%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="1.6901%" y="853" width="0.1408%" height="15" fill="rgb(213,181,19)"/><text x="1.9401%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="1.6901%" y="837" width="0.1408%" height="15" fill="rgb(254,191,54)"/><text x="1.9401%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="1.6901%" y="821" width="0.1408%" height="15" fill="rgb(241,83,37)"/><text x="1.9401%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="1.8310%" y="901" width="0.1408%" height="15" fill="rgb(233,36,39)"/><text x="2.0810%" y="911.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="1.9718%" y="901" width="0.1408%" height="15" fill="rgb(226,3,54)"/><text x="2.2218%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="1.9718%" y="885" width="0.1408%" height="15" fill="rgb(245,192,40)"/><text x="2.2218%" y="895.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.14%)</title><rect x="2.1127%" y="741" width="0.1408%" height="15" fill="rgb(238,167,29)"/><text x="2.3627%" y="751.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.14%)</title><rect x="2.1127%" y="725" width="0.1408%" height="15" fill="rgb(232,182,51)"/><text x="2.3627%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="2.1127%" y="709" width="0.1408%" height="15" fill="rgb(231,60,39)"/><text x="2.3627%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="2.1127%" y="693" width="0.1408%" height="15" fill="rgb(208,69,12)"/><text x="2.3627%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="2.1127%" y="677" width="0.1408%" height="15" fill="rgb(235,93,37)"/><text x="2.3627%" y="687.50"></text></g><g><title>__libc_close (1 samples, 0.14%)</title><rect x="2.1127%" y="661" width="0.1408%" height="15" fill="rgb(213,116,39)"/><text x="2.3627%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="2.1127%" y="645" width="0.1408%" height="15" fill="rgb(222,207,29)"/><text x="2.3627%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="2.1127%" y="629" width="0.1408%" height="15" fill="rgb(206,96,30)"/><text x="2.3627%" y="639.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="2.1127%" y="613" width="0.1408%" height="15" fill="rgb(218,138,4)"/><text x="2.3627%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="2.1127%" y="597" width="0.1408%" height="15" fill="rgb(250,191,14)"/><text x="2.3627%" y="607.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.14%)</title><rect x="2.2535%" y="693" width="0.1408%" height="15" fill="rgb(239,60,40)"/><text x="2.5035%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.14%)</title><rect x="2.2535%" y="677" width="0.1408%" height="15" fill="rgb(206,27,48)"/><text x="2.5035%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="2.2535%" y="661" width="0.1408%" height="15" fill="rgb(225,35,8)"/><text x="2.5035%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="2.3944%" y="693" width="0.1408%" height="15" fill="rgb(250,213,24)"/><text x="2.6444%" y="703.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="2.6761%" y="533" width="0.1408%" height="15" fill="rgb(247,123,22)"/><text x="2.9261%" y="543.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="4.3662%" y="453" width="0.1408%" height="15" fill="rgb(231,138,38)"/><text x="4.6162%" y="463.50"></text></g><g><title>__sk_dst_check (2 samples, 0.28%)</title><rect x="4.5070%" y="453" width="0.2817%" height="15" fill="rgb(231,145,46)"/><text x="4.7570%" y="463.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.28%)</title><rect x="4.5070%" y="437" width="0.2817%" height="15" fill="rgb(251,118,11)"/><text x="4.7570%" y="447.50"></text></g><g><title>ktime_get_with_offset (2 samples, 0.28%)</title><rect x="5.0704%" y="341" width="0.2817%" height="15" fill="rgb(217,147,25)"/><text x="5.3204%" y="351.50"></text></g><g><title>read_tsc (2 samples, 0.28%)</title><rect x="5.0704%" y="325" width="0.2817%" height="15" fill="rgb(247,81,37)"/><text x="5.3204%" y="335.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.42%)</title><rect x="5.0704%" y="405" width="0.4225%" height="15" fill="rgb(209,12,38)"/><text x="5.3204%" y="415.50"></text></g><g><title>loopback_xmit (3 samples, 0.42%)</title><rect x="5.0704%" y="389" width="0.4225%" height="15" fill="rgb(227,1,9)"/><text x="5.3204%" y="399.50"></text></g><g><title>netif_rx (3 samples, 0.42%)</title><rect x="5.0704%" y="373" width="0.4225%" height="15" fill="rgb(248,47,43)"/><text x="5.3204%" y="383.50"></text></g><g><title>netif_rx_internal (3 samples, 0.42%)</title><rect x="5.0704%" y="357" width="0.4225%" height="15" fill="rgb(221,10,30)"/><text x="5.3204%" y="367.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="5.3521%" y="341" width="0.1408%" height="15" fill="rgb(210,229,1)"/><text x="5.6021%" y="351.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.56%)</title><rect x="5.0704%" y="421" width="0.5634%" height="15" fill="rgb(222,148,37)"/><text x="5.3204%" y="431.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="5.4930%" y="405" width="0.1408%" height="15" fill="rgb(234,67,33)"/><text x="5.7430%" y="415.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.28%)</title><rect x="6.3380%" y="357" width="0.2817%" height="15" fill="rgb(247,98,35)"/><text x="6.5880%" y="367.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="6.4789%" y="341" width="0.1408%" height="15" fill="rgb(247,138,52)"/><text x="6.7289%" y="351.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="6.6197%" y="309" width="0.1408%" height="15" fill="rgb(213,79,30)"/><text x="6.8697%" y="319.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.42%)</title><rect x="6.7606%" y="229" width="0.4225%" height="15" fill="rgb(246,177,23)"/><text x="7.0106%" y="239.50"></text></g><g><title>inet_ehashfn (1 samples, 0.14%)</title><rect x="7.0423%" y="213" width="0.1408%" height="15" fill="rgb(230,62,27)"/><text x="7.2923%" y="223.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="7.1831%" y="229" width="0.1408%" height="15" fill="rgb(216,154,8)"/><text x="7.4331%" y="239.50"></text></g><g><title>security_sock_rcv_skb (1 samples, 0.14%)</title><rect x="7.1831%" y="213" width="0.1408%" height="15" fill="rgb(244,35,45)"/><text x="7.4331%" y="223.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="7.6056%" y="133" width="0.1408%" height="15" fill="rgb(251,115,12)"/><text x="7.8556%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="7.7465%" y="133" width="0.1408%" height="15" fill="rgb(240,54,50)"/><text x="7.9965%" y="143.50"></text></g><g><title>psi_task_change (6 samples, 0.85%)</title><rect x="7.8873%" y="117" width="0.8451%" height="15" fill="rgb(233,84,52)"/><text x="8.1373%" y="127.50"></text></g><g><title>psi_group_change (6 samples, 0.85%)</title><rect x="7.8873%" y="101" width="0.8451%" height="15" fill="rgb(207,117,47)"/><text x="8.1373%" y="111.50"></text></g><g><title>record_times (2 samples, 0.28%)</title><rect x="8.4507%" y="85" width="0.2817%" height="15" fill="rgb(249,43,39)"/><text x="8.7007%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.28%)</title><rect x="8.4507%" y="69" width="0.2817%" height="15" fill="rgb(209,38,44)"/><text x="8.7007%" y="79.50"></text></g><g><title>sched_clock (2 samples, 0.28%)</title><rect x="8.4507%" y="53" width="0.2817%" height="15" fill="rgb(236,212,23)"/><text x="8.7007%" y="63.50"></text></g><g><title>native_sched_clock (2 samples, 0.28%)</title><rect x="8.4507%" y="37" width="0.2817%" height="15" fill="rgb(242,79,21)"/><text x="8.7007%" y="47.50"></text></g><g><title>enqueue_task (7 samples, 0.99%)</title><rect x="7.8873%" y="133" width="0.9859%" height="15" fill="rgb(211,96,35)"/><text x="8.1373%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.14%)</title><rect x="8.7324%" y="117" width="0.1408%" height="15" fill="rgb(253,215,40)"/><text x="8.9824%" y="127.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.85%)</title><rect x="8.8732%" y="133" width="0.8451%" height="15" fill="rgb(211,81,21)"/><text x="9.1232%" y="143.50"></text></g><g><title>enqueue_entity (5 samples, 0.70%)</title><rect x="9.0141%" y="117" width="0.7042%" height="15" fill="rgb(208,190,38)"/><text x="9.2641%" y="127.50"></text></g><g><title>update_cfs_group (1 samples, 0.14%)</title><rect x="9.5775%" y="101" width="0.1408%" height="15" fill="rgb(235,213,38)"/><text x="9.8275%" y="111.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.14%)</title><rect x="9.7183%" y="133" width="0.1408%" height="15" fill="rgb(237,122,38)"/><text x="9.9683%" y="143.50"></text></g><g><title>check_preempt_curr (1 samples, 0.14%)</title><rect x="9.7183%" y="117" width="0.1408%" height="15" fill="rgb(244,218,35)"/><text x="9.9683%" y="127.50"></text></g><g><title>resched_curr (1 samples, 0.14%)</title><rect x="9.7183%" y="101" width="0.1408%" height="15" fill="rgb(240,68,47)"/><text x="9.9683%" y="111.50"></text></g><g><title>try_to_wake_up (18 samples, 2.54%)</title><rect x="7.4648%" y="149" width="2.5352%" height="15" fill="rgb(210,16,53)"/><text x="7.7148%" y="159.50">tr..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="9.8592%" y="133" width="0.1408%" height="15" fill="rgb(235,124,12)"/><text x="10.1092%" y="143.50"></text></g><g><title>__wake_up_common (19 samples, 2.68%)</title><rect x="7.4648%" y="165" width="2.6761%" height="15" fill="rgb(224,169,11)"/><text x="7.7148%" y="175.50">__..</text></g><g><title>woken_wake_function (1 samples, 0.14%)</title><rect x="10.0000%" y="149" width="0.1408%" height="15" fill="rgb(250,166,2)"/><text x="10.2500%" y="159.50"></text></g><g><title>sock_def_readable (20 samples, 2.82%)</title><rect x="7.4648%" y="197" width="2.8169%" height="15" fill="rgb(242,216,29)"/><text x="7.7148%" y="207.50">so..</text></g><g><title>__wake_up_common_lock (20 samples, 2.82%)</title><rect x="7.4648%" y="181" width="2.8169%" height="15" fill="rgb(230,116,27)"/><text x="7.7148%" y="191.50">__..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="10.1408%" y="165" width="0.1408%" height="15" fill="rgb(228,99,48)"/><text x="10.3908%" y="175.50"></text></g><g><title>kfree (3 samples, 0.42%)</title><rect x="10.4225%" y="165" width="0.4225%" height="15" fill="rgb(253,11,6)"/><text x="10.6725%" y="175.50"></text></g><g><title>__slab_free (2 samples, 0.28%)</title><rect x="10.5634%" y="149" width="0.2817%" height="15" fill="rgb(247,143,39)"/><text x="10.8134%" y="159.50"></text></g><g><title>__kfree_skb (6 samples, 0.85%)</title><rect x="10.4225%" y="181" width="0.8451%" height="15" fill="rgb(236,97,10)"/><text x="10.6725%" y="191.50"></text></g><g><title>skb_release_data (3 samples, 0.42%)</title><rect x="10.8451%" y="165" width="0.4225%" height="15" fill="rgb(233,208,19)"/><text x="11.0951%" y="175.50"></text></g><g><title>tcp_ack (8 samples, 1.13%)</title><rect x="10.2817%" y="197" width="1.1268%" height="15" fill="rgb(216,164,2)"/><text x="10.5317%" y="207.50"></text></g><g><title>kfree_skbmem (1 samples, 0.14%)</title><rect x="11.2676%" y="181" width="0.1408%" height="15" fill="rgb(220,129,5)"/><text x="11.5176%" y="191.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="11.4085%" y="197" width="0.1408%" height="15" fill="rgb(242,17,10)"/><text x="11.6585%" y="207.50"></text></g><g><title>ip_local_deliver (36 samples, 5.07%)</title><rect x="6.7606%" y="293" width="5.0704%" height="15" fill="rgb(242,107,0)"/><text x="7.0106%" y="303.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (36 samples, 5.07%)</title><rect x="6.7606%" y="277" width="5.0704%" height="15" fill="rgb(251,28,31)"/><text x="7.0106%" y="287.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (36 samples, 5.07%)</title><rect x="6.7606%" y="261" width="5.0704%" height="15" fill="rgb(233,223,10)"/><text x="7.0106%" y="271.50">ip_pro..</text></g><g><title>tcp_v4_rcv (36 samples, 5.07%)</title><rect x="6.7606%" y="245" width="5.0704%" height="15" fill="rgb(215,21,27)"/><text x="7.0106%" y="255.50">tcp_v4..</text></g><g><title>tcp_v4_do_rcv (32 samples, 4.51%)</title><rect x="7.3239%" y="229" width="4.5070%" height="15" fill="rgb(232,23,21)"/><text x="7.5739%" y="239.50">tcp_v..</text></g><g><title>tcp_rcv_established (32 samples, 4.51%)</title><rect x="7.3239%" y="213" width="4.5070%" height="15" fill="rgb(244,5,23)"/><text x="7.5739%" y="223.50">tcp_r..</text></g><g><title>tcp_queue_rcv (2 samples, 0.28%)</title><rect x="11.5493%" y="197" width="0.2817%" height="15" fill="rgb(226,81,46)"/><text x="11.7993%" y="207.50"></text></g><g><title>__netif_receive_skb_one_core (39 samples, 5.49%)</title><rect x="6.6197%" y="325" width="5.4930%" height="15" fill="rgb(247,70,30)"/><text x="6.8697%" y="335.50">__netif..</text></g><g><title>ip_rcv (38 samples, 5.35%)</title><rect x="6.7606%" y="309" width="5.3521%" height="15" fill="rgb(212,68,19)"/><text x="7.0106%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_core (2 samples, 0.28%)</title><rect x="11.8310%" y="293" width="0.2817%" height="15" fill="rgb(240,187,13)"/><text x="12.0810%" y="303.50"></text></g><g><title>do_softirq (47 samples, 6.62%)</title><rect x="5.6338%" y="405" width="6.6197%" height="15" fill="rgb(223,113,26)"/><text x="5.8838%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (44 samples, 6.20%)</title><rect x="6.0563%" y="389" width="6.1972%" height="15" fill="rgb(206,192,2)"/><text x="6.3063%" y="399.50">do_softi..</text></g><g><title>__do_softirq (44 samples, 6.20%)</title><rect x="6.0563%" y="373" width="6.1972%" height="15" fill="rgb(241,108,4)"/><text x="6.3063%" y="383.50">__do_sof..</text></g><g><title>net_rx_action (40 samples, 5.63%)</title><rect x="6.6197%" y="357" width="5.6338%" height="15" fill="rgb(247,173,49)"/><text x="6.8697%" y="367.50">net_rx_..</text></g><g><title>process_backlog (40 samples, 5.63%)</title><rect x="6.6197%" y="341" width="5.6338%" height="15" fill="rgb(224,114,35)"/><text x="6.8697%" y="351.50">process..</text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="12.1127%" y="325" width="0.1408%" height="15" fill="rgb(245,159,27)"/><text x="12.3627%" y="335.50"></text></g><g><title>__local_bh_enable_ip (48 samples, 6.76%)</title><rect x="5.6338%" y="421" width="6.7606%" height="15" fill="rgb(245,172,44)"/><text x="5.8838%" y="431.50">__local_b..</text></g><g><title>preempt_schedule_thunk (1 samples, 0.14%)</title><rect x="12.2535%" y="405" width="0.1408%" height="15" fill="rgb(236,23,11)"/><text x="12.5035%" y="415.50"></text></g><g><title>preempt_schedule_common (1 samples, 0.14%)</title><rect x="12.2535%" y="389" width="0.1408%" height="15" fill="rgb(205,117,38)"/><text x="12.5035%" y="399.50"></text></g><g><title>__schedule (1 samples, 0.14%)</title><rect x="12.2535%" y="373" width="0.1408%" height="15" fill="rgb(237,72,25)"/><text x="12.5035%" y="383.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.14%)</title><rect x="12.2535%" y="357" width="0.1408%" height="15" fill="rgb(244,70,9)"/><text x="12.5035%" y="367.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.14%)</title><rect x="12.2535%" y="341" width="0.1408%" height="15" fill="rgb(217,125,39)"/><text x="12.5035%" y="351.50"></text></g><g><title>ip_finish_output2 (55 samples, 7.75%)</title><rect x="4.7887%" y="437" width="7.7465%" height="15" fill="rgb(235,36,10)"/><text x="5.0387%" y="447.50">ip_finish_o..</text></g><g><title>dev_queue_xmit (1 samples, 0.14%)</title><rect x="12.3944%" y="421" width="0.1408%" height="15" fill="rgb(251,123,47)"/><text x="12.6444%" y="431.50"></text></g><g><title>__ip_queue_xmit (62 samples, 8.73%)</title><rect x="4.0845%" y="469" width="8.7324%" height="15" fill="rgb(221,13,13)"/><text x="4.3345%" y="479.50">__ip_queue_x..</text></g><g><title>ip_output (57 samples, 8.03%)</title><rect x="4.7887%" y="453" width="8.0282%" height="15" fill="rgb(238,131,9)"/><text x="5.0387%" y="463.50">ip_output</text></g><g><title>ip_finish_output (2 samples, 0.28%)</title><rect x="12.5352%" y="437" width="0.2817%" height="15" fill="rgb(211,50,8)"/><text x="12.7852%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.28%)</title><rect x="12.5352%" y="421" width="0.2817%" height="15" fill="rgb(245,182,24)"/><text x="12.7852%" y="431.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="12.6761%" y="405" width="0.1408%" height="15" fill="rgb(242,14,37)"/><text x="12.9261%" y="415.50"></text></g><g><title>__tcp_transmit_skb (66 samples, 9.30%)</title><rect x="3.6620%" y="485" width="9.2958%" height="15" fill="rgb(246,228,12)"/><text x="3.9120%" y="495.50">__tcp_transmi..</text></g><g><title>skb_clone (1 samples, 0.14%)</title><rect x="12.8169%" y="469" width="0.1408%" height="15" fill="rgb(213,55,15)"/><text x="13.0669%" y="479.50"></text></g><g><title>__copy_skb_header (1 samples, 0.14%)</title><rect x="12.8169%" y="453" width="0.1408%" height="15" fill="rgb(209,9,3)"/><text x="13.0669%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (69 samples, 9.72%)</title><rect x="3.3803%" y="517" width="9.7183%" height="15" fill="rgb(230,59,30)"/><text x="3.6303%" y="527.50">__tcp_push_pen..</text></g><g><title>tcp_write_xmit (69 samples, 9.72%)</title><rect x="3.3803%" y="501" width="9.7183%" height="15" fill="rgb(209,121,21)"/><text x="3.6303%" y="511.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="12.9577%" y="485" width="0.1408%" height="15" fill="rgb(220,109,13)"/><text x="13.2077%" y="495.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.14%)</title><rect x="13.0986%" y="517" width="0.1408%" height="15" fill="rgb(232,18,1)"/><text x="13.3486%" y="527.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.14%)</title><rect x="13.0986%" y="501" width="0.1408%" height="15" fill="rgb(215,41,42)"/><text x="13.3486%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.28%)</title><rect x="13.2394%" y="485" width="0.2817%" height="15" fill="rgb(224,123,36)"/><text x="13.4894%" y="495.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="13.3803%" y="469" width="0.1408%" height="15" fill="rgb(240,125,3)"/><text x="13.6303%" y="479.50"></text></g><g><title>__ksize (1 samples, 0.14%)</title><rect x="13.5211%" y="485" width="0.1408%" height="15" fill="rgb(205,98,50)"/><text x="13.7711%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.56%)</title><rect x="13.2394%" y="517" width="0.5634%" height="15" fill="rgb(205,185,37)"/><text x="13.4894%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.56%)</title><rect x="13.2394%" y="501" width="0.5634%" height="15" fill="rgb(238,207,15)"/><text x="13.4894%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="13.6620%" y="485" width="0.1408%" height="15" fill="rgb(213,199,42)"/><text x="13.9120%" y="495.50"></text></g><g><title>tcp_send_mss (2 samples, 0.28%)</title><rect x="13.8028%" y="517" width="0.2817%" height="15" fill="rgb(235,201,11)"/><text x="14.0528%" y="527.50"></text></g><g><title>tcp_current_mss (2 samples, 0.28%)</title><rect x="13.8028%" y="501" width="0.2817%" height="15" fill="rgb(207,46,11)"/><text x="14.0528%" y="511.50"></text></g><g><title>ipv4_mtu (1 samples, 0.14%)</title><rect x="13.9437%" y="485" width="0.1408%" height="15" fill="rgb(241,35,35)"/><text x="14.1937%" y="495.50"></text></g><g><title>sock_sendmsg (82 samples, 11.55%)</title><rect x="2.6761%" y="565" width="11.5493%" height="15" fill="rgb(243,32,47)"/><text x="2.9261%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (82 samples, 11.55%)</title><rect x="2.6761%" y="549" width="11.5493%" height="15" fill="rgb(247,202,23)"/><text x="2.9261%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (81 samples, 11.41%)</title><rect x="2.8169%" y="533" width="11.4085%" height="15" fill="rgb(219,102,11)"/><text x="3.0669%" y="543.50">tcp_sendmsg_locked</text></g><g><title>tcp_tx_timestamp (1 samples, 0.14%)</title><rect x="14.0845%" y="517" width="0.1408%" height="15" fill="rgb(243,110,44)"/><text x="14.3345%" y="527.50"></text></g><g><title>do_syscall_64 (86 samples, 12.11%)</title><rect x="2.5352%" y="613" width="12.1127%" height="15" fill="rgb(222,74,54)"/><text x="2.7852%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (85 samples, 11.97%)</title><rect x="2.6761%" y="597" width="11.9718%" height="15" fill="rgb(216,99,12)"/><text x="2.9261%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (85 samples, 11.97%)</title><rect x="2.6761%" y="581" width="11.9718%" height="15" fill="rgb(226,22,26)"/><text x="2.9261%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (3 samples, 0.42%)</title><rect x="14.2254%" y="565" width="0.4225%" height="15" fill="rgb(217,163,10)"/><text x="14.4754%" y="575.50"></text></g><g><title>__fget_light (2 samples, 0.28%)</title><rect x="14.3662%" y="549" width="0.2817%" height="15" fill="rgb(213,25,53)"/><text x="14.6162%" y="559.50"></text></g><g><title>__fget_files (2 samples, 0.28%)</title><rect x="14.3662%" y="533" width="0.2817%" height="15" fill="rgb(252,105,26)"/><text x="14.6162%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (91 samples, 12.82%)</title><rect x="2.5352%" y="629" width="12.8169%" height="15" fill="rgb(220,39,43)"/><text x="2.7852%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.70%)</title><rect x="14.6479%" y="613" width="0.7042%" height="15" fill="rgb(229,68,48)"/><text x="14.8979%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (93 samples, 13.10%)</title><rect x="2.5352%" y="677" width="13.0986%" height="15" fill="rgb(252,8,32)"/><text x="2.7852%" y="687.50">&lt;std::net::tcp::TcpS..</text></g><g><title>std::sys_common::net::TcpStream::write (93 samples, 13.10%)</title><rect x="2.5352%" y="661" width="13.0986%" height="15" fill="rgb(223,20,43)"/><text x="2.7852%" y="671.50">std::sys_common::net..</text></g><g><title>__libc_send (93 samples, 13.10%)</title><rect x="2.5352%" y="645" width="13.0986%" height="15" fill="rgb(229,81,49)"/><text x="2.7852%" y="655.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.28%)</title><rect x="15.3521%" y="629" width="0.2817%" height="15" fill="rgb(236,28,36)"/><text x="15.6021%" y="639.50"></text></g><g><title>__libc_start_main (97 samples, 13.66%)</title><rect x="2.1127%" y="901" width="13.6620%" height="15" fill="rgb(249,185,26)"/><text x="2.3627%" y="911.50">__libc_start_main</text></g><g><title>main (97 samples, 13.66%)</title><rect x="2.1127%" y="885" width="13.6620%" height="15" fill="rgb(249,174,33)"/><text x="2.3627%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (97 samples, 13.66%)</title><rect x="2.1127%" y="869" width="13.6620%" height="15" fill="rgb(233,201,37)"/><text x="2.3627%" y="879.50">std::rt::lang_start_i..</text></g><g><title>std::panic::catch_unwind (97 samples, 13.66%)</title><rect x="2.1127%" y="853" width="13.6620%" height="15" fill="rgb(221,78,26)"/><text x="2.3627%" y="863.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (97 samples, 13.66%)</title><rect x="2.1127%" y="837" width="13.6620%" height="15" fill="rgb(250,127,30)"/><text x="2.3627%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (97 samples, 13.66%)</title><rect x="2.1127%" y="821" width="13.6620%" height="15" fill="rgb(230,49,44)"/><text x="2.3627%" y="831.50">std::panicking::try::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (97 samples, 13.66%)</title><rect x="2.1127%" y="805" width="13.6620%" height="15" fill="rgb(229,67,23)"/><text x="2.3627%" y="815.50">core::ops::function::..</text></g><g><title>std::rt::lang_start::_{{closure}} (97 samples, 13.66%)</title><rect x="2.1127%" y="789" width="13.6620%" height="15" fill="rgb(249,83,47)"/><text x="2.3627%" y="799.50">std::rt::lang_start::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (97 samples, 13.66%)</title><rect x="2.1127%" y="773" width="13.6620%" height="15" fill="rgb(215,43,3)"/><text x="2.3627%" y="783.50">std::sys_common::back..</text></g><g><title>lobsters::main (97 samples, 13.66%)</title><rect x="2.1127%" y="757" width="13.6620%" height="15" fill="rgb(238,154,13)"/><text x="2.3627%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (96 samples, 13.52%)</title><rect x="2.2535%" y="741" width="13.5211%" height="15" fill="rgb(219,56,2)"/><text x="2.5035%" y="751.50">mysql::conn::queryab..</text></g><g><title>mysql::conn::Conn::_query (96 samples, 13.52%)</title><rect x="2.2535%" y="725" width="13.5211%" height="15" fill="rgb(233,0,4)"/><text x="2.5035%" y="735.50">mysql::conn::Conn::_..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (96 samples, 13.52%)</title><rect x="2.2535%" y="709" width="13.5211%" height="15" fill="rgb(235,30,7)"/><text x="2.5035%" y="719.50">mysql_common::proto:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (94 samples, 13.24%)</title><rect x="2.5352%" y="693" width="13.2394%" height="15" fill="rgb(250,79,13)"/><text x="2.7852%" y="703.50">std::io::buffered::B..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.14%)</title><rect x="15.6338%" y="677" width="0.1408%" height="15" fill="rgb(211,146,34)"/><text x="15.8838%" y="687.50"></text></g><g><title>__rdl_alloc (2 samples, 0.28%)</title><rect x="15.7746%" y="901" width="0.2817%" height="15" fill="rgb(228,22,38)"/><text x="16.0246%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.28%)</title><rect x="15.7746%" y="885" width="0.2817%" height="15" fill="rgb(235,168,5)"/><text x="16.0246%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.14%)</title><rect x="16.0563%" y="901" width="0.1408%" height="15" fill="rgb(221,155,16)"/><text x="16.3063%" y="911.50"></text></g><g><title>core::fmt::write (3 samples, 0.42%)</title><rect x="16.1972%" y="901" width="0.4225%" height="15" fill="rgb(215,215,53)"/><text x="16.4472%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="16.6197%" y="901" width="0.1408%" height="15" fill="rgb(223,4,10)"/><text x="16.8697%" y="911.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="16.7606%" y="901" width="0.1408%" height="15" fill="rgb(234,103,6)"/><text x="17.0106%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (1 samples, 0.14%)</title><rect x="16.7606%" y="885" width="0.1408%" height="15" fill="rgb(227,97,0)"/><text x="17.0106%" y="895.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="16.7606%" y="869" width="0.1408%" height="15" fill="rgb(234,150,53)"/><text x="17.0106%" y="879.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="16.7606%" y="853" width="0.1408%" height="15" fill="rgb(228,201,54)"/><text x="17.0106%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="16.7606%" y="837" width="0.1408%" height="15" fill="rgb(222,22,37)"/><text x="17.0106%" y="847.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="16.7606%" y="821" width="0.1408%" height="15" fill="rgb(237,53,32)"/><text x="17.0106%" y="831.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="16.7606%" y="805" width="0.1408%" height="15" fill="rgb(233,25,53)"/><text x="17.0106%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="16.7606%" y="789" width="0.1408%" height="15" fill="rgb(210,40,34)"/><text x="17.0106%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="16.7606%" y="773" width="0.1408%" height="15" fill="rgb(241,220,44)"/><text x="17.0106%" y="783.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="16.7606%" y="757" width="0.1408%" height="15" fill="rgb(235,28,35)"/><text x="17.0106%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="16.7606%" y="741" width="0.1408%" height="15" fill="rgb(210,56,17)"/><text x="17.0106%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="16.7606%" y="725" width="0.1408%" height="15" fill="rgb(224,130,29)"/><text x="17.0106%" y="735.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="16.7606%" y="709" width="0.1408%" height="15" fill="rgb(235,212,8)"/><text x="17.0106%" y="719.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="16.7606%" y="693" width="0.1408%" height="15" fill="rgb(223,33,50)"/><text x="17.0106%" y="703.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="16.7606%" y="677" width="0.1408%" height="15" fill="rgb(219,149,13)"/><text x="17.0106%" y="687.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="16.7606%" y="661" width="0.1408%" height="15" fill="rgb(250,156,29)"/><text x="17.0106%" y="671.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="16.7606%" y="645" width="0.1408%" height="15" fill="rgb(216,193,19)"/><text x="17.0106%" y="655.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="16.7606%" y="629" width="0.1408%" height="15" fill="rgb(216,135,14)"/><text x="17.0106%" y="639.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="16.7606%" y="613" width="0.1408%" height="15" fill="rgb(241,47,5)"/><text x="17.0106%" y="623.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="16.7606%" y="597" width="0.1408%" height="15" fill="rgb(233,42,35)"/><text x="17.0106%" y="607.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="16.7606%" y="581" width="0.1408%" height="15" fill="rgb(231,13,6)"/><text x="17.0106%" y="591.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="16.7606%" y="565" width="0.1408%" height="15" fill="rgb(207,181,40)"/><text x="17.0106%" y="575.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="16.7606%" y="549" width="0.1408%" height="15" fill="rgb(254,173,49)"/><text x="17.0106%" y="559.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="16.7606%" y="533" width="0.1408%" height="15" fill="rgb(221,1,38)"/><text x="17.0106%" y="543.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="16.7606%" y="517" width="0.1408%" height="15" fill="rgb(206,124,46)"/><text x="17.0106%" y="527.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="16.7606%" y="501" width="0.1408%" height="15" fill="rgb(249,21,11)"/><text x="17.0106%" y="511.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="16.7606%" y="485" width="0.1408%" height="15" fill="rgb(222,201,40)"/><text x="17.0106%" y="495.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="16.7606%" y="469" width="0.1408%" height="15" fill="rgb(235,61,29)"/><text x="17.0106%" y="479.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="16.7606%" y="453" width="0.1408%" height="15" fill="rgb(219,207,3)"/><text x="17.0106%" y="463.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="16.7606%" y="437" width="0.1408%" height="15" fill="rgb(222,56,46)"/><text x="17.0106%" y="447.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="16.7606%" y="421" width="0.1408%" height="15" fill="rgb(239,76,54)"/><text x="17.0106%" y="431.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="16.7606%" y="405" width="0.1408%" height="15" fill="rgb(231,124,27)"/><text x="17.0106%" y="415.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="16.7606%" y="389" width="0.1408%" height="15" fill="rgb(249,195,6)"/><text x="17.0106%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="16.7606%" y="373" width="0.1408%" height="15" fill="rgb(237,174,47)"/><text x="17.0106%" y="383.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="16.7606%" y="357" width="0.1408%" height="15" fill="rgb(206,201,31)"/><text x="17.0106%" y="367.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="16.7606%" y="341" width="0.1408%" height="15" fill="rgb(231,57,52)"/><text x="17.0106%" y="351.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="16.9014%" y="869" width="0.1408%" height="15" fill="rgb(248,177,22)"/><text x="17.1514%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="16.9014%" y="853" width="0.1408%" height="15" fill="rgb(215,211,37)"/><text x="17.1514%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="16.9014%" y="837" width="0.1408%" height="15" fill="rgb(241,128,51)"/><text x="17.1514%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.14%)</title><rect x="16.9014%" y="821" width="0.1408%" height="15" fill="rgb(227,165,31)"/><text x="17.1514%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="16.9014%" y="805" width="0.1408%" height="15" fill="rgb(228,167,24)"/><text x="17.1514%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="16.9014%" y="789" width="0.1408%" height="15" fill="rgb(228,143,12)"/><text x="17.1514%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="16.9014%" y="773" width="0.1408%" height="15" fill="rgb(249,149,8)"/><text x="17.1514%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="16.9014%" y="757" width="0.1408%" height="15" fill="rgb(243,35,44)"/><text x="17.1514%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.14%)</title><rect x="16.9014%" y="741" width="0.1408%" height="15" fill="rgb(246,89,9)"/><text x="17.1514%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="16.9014%" y="725" width="0.1408%" height="15" fill="rgb(233,213,13)"/><text x="17.1514%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.14%)</title><rect x="16.9014%" y="709" width="0.1408%" height="15" fill="rgb(233,141,41)"/><text x="17.1514%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.14%)</title><rect x="16.9014%" y="693" width="0.1408%" height="15" fill="rgb(239,167,4)"/><text x="17.1514%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.14%)</title><rect x="16.9014%" y="677" width="0.1408%" height="15" fill="rgb(209,217,16)"/><text x="17.1514%" y="687.50"></text></g><g><title>do_lookup_x (1 samples, 0.14%)</title><rect x="16.9014%" y="661" width="0.1408%" height="15" fill="rgb(219,88,35)"/><text x="17.1514%" y="671.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.28%)</title><rect x="16.9014%" y="885" width="0.2817%" height="15" fill="rgb(220,193,23)"/><text x="17.1514%" y="895.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.14%)</title><rect x="17.0423%" y="869" width="0.1408%" height="15" fill="rgb(230,90,52)"/><text x="17.2923%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="17.0423%" y="853" width="0.1408%" height="15" fill="rgb(252,106,19)"/><text x="17.2923%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="17.0423%" y="837" width="0.1408%" height="15" fill="rgb(206,74,20)"/><text x="17.2923%" y="847.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.14%)</title><rect x="17.0423%" y="821" width="0.1408%" height="15" fill="rgb(230,138,44)"/><text x="17.2923%" y="831.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.14%)</title><rect x="17.0423%" y="805" width="0.1408%" height="15" fill="rgb(235,182,43)"/><text x="17.2923%" y="815.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.14%)</title><rect x="17.0423%" y="789" width="0.1408%" height="15" fill="rgb(242,16,51)"/><text x="17.2923%" y="799.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.14%)</title><rect x="17.0423%" y="773" width="0.1408%" height="15" fill="rgb(248,9,4)"/><text x="17.2923%" y="783.50"></text></g><g><title>__GI___read (1 samples, 0.14%)</title><rect x="17.0423%" y="757" width="0.1408%" height="15" fill="rgb(210,31,22)"/><text x="17.2923%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="17.0423%" y="741" width="0.1408%" height="15" fill="rgb(239,54,39)"/><text x="17.2923%" y="751.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="17.0423%" y="725" width="0.1408%" height="15" fill="rgb(230,99,41)"/><text x="17.2923%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="17.1831%" y="837" width="0.1408%" height="15" fill="rgb(253,106,12)"/><text x="17.4331%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.28%)</title><rect x="17.6056%" y="821" width="0.2817%" height="15" fill="rgb(213,46,41)"/><text x="17.8556%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="17.7465%" y="805" width="0.1408%" height="15" fill="rgb(215,133,35)"/><text x="17.9965%" y="815.50"></text></g><g><title>kfree_skbmem (1 samples, 0.14%)</title><rect x="18.3099%" y="613" width="0.1408%" height="15" fill="rgb(213,28,5)"/><text x="18.5599%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="18.5915%" y="597" width="0.1408%" height="15" fill="rgb(215,77,49)"/><text x="18.8415%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="18.5915%" y="581" width="0.1408%" height="15" fill="rgb(248,100,22)"/><text x="18.8415%" y="591.50"></text></g><g><title>remove_wait_queue (1 samples, 0.14%)</title><rect x="18.7324%" y="597" width="0.1408%" height="15" fill="rgb(208,67,9)"/><text x="18.9824%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="18.7324%" y="581" width="0.1408%" height="15" fill="rgb(219,133,21)"/><text x="18.9824%" y="591.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.14%)</title><rect x="18.8732%" y="501" width="0.1408%" height="15" fill="rgb(246,46,29)"/><text x="19.1232%" y="511.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.28%)</title><rect x="18.8732%" y="533" width="0.2817%" height="15" fill="rgb(246,185,52)"/><text x="19.1232%" y="543.50"></text></g><g><title>ctx_sched_out (2 samples, 0.28%)</title><rect x="18.8732%" y="517" width="0.2817%" height="15" fill="rgb(252,136,11)"/><text x="19.1232%" y="527.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.14%)</title><rect x="19.0141%" y="501" width="0.1408%" height="15" fill="rgb(219,138,53)"/><text x="19.2641%" y="511.50"></text></g><g><title>__calc_delta (1 samples, 0.14%)</title><rect x="19.2958%" y="485" width="0.1408%" height="15" fill="rgb(211,51,23)"/><text x="19.5458%" y="495.50"></text></g><g><title>update_curr (2 samples, 0.28%)</title><rect x="19.2958%" y="501" width="0.2817%" height="15" fill="rgb(247,221,28)"/><text x="19.5458%" y="511.50"></text></g><g><title>cpuacct_charge (1 samples, 0.14%)</title><rect x="19.4366%" y="485" width="0.1408%" height="15" fill="rgb(251,222,45)"/><text x="19.6866%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="19.8592%" y="485" width="0.1408%" height="15" fill="rgb(217,162,53)"/><text x="20.1092%" y="495.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.99%)</title><rect x="19.1549%" y="533" width="0.9859%" height="15" fill="rgb(229,93,14)"/><text x="19.4049%" y="543.50"></text></g><g><title>dequeue_entity (6 samples, 0.85%)</title><rect x="19.2958%" y="517" width="0.8451%" height="15" fill="rgb(209,67,49)"/><text x="19.5458%" y="527.50"></text></g><g><title>update_load_avg (4 samples, 0.56%)</title><rect x="19.5775%" y="501" width="0.5634%" height="15" fill="rgb(213,87,29)"/><text x="19.8275%" y="511.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="20.0000%" y="485" width="0.1408%" height="15" fill="rgb(205,151,52)"/><text x="20.2500%" y="495.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.14%)</title><rect x="20.2817%" y="501" width="0.1408%" height="15" fill="rgb(253,215,39)"/><text x="20.5317%" y="511.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="20.2817%" y="485" width="0.1408%" height="15" fill="rgb(221,220,41)"/><text x="20.5317%" y="495.50"></text></g><g><title>finish_task_switch (3 samples, 0.42%)</title><rect x="20.1408%" y="533" width="0.4225%" height="15" fill="rgb(218,133,21)"/><text x="20.3908%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.28%)</title><rect x="20.2817%" y="517" width="0.2817%" height="15" fill="rgb(221,193,43)"/><text x="20.5317%" y="527.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="20.4225%" y="501" width="0.1408%" height="15" fill="rgb(240,128,52)"/><text x="20.6725%" y="511.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.28%)</title><rect x="20.5634%" y="533" width="0.2817%" height="15" fill="rgb(253,114,12)"/><text x="20.8134%" y="543.50"></text></g><g><title>newidle_balance (2 samples, 0.28%)</title><rect x="20.5634%" y="517" width="0.2817%" height="15" fill="rgb(215,223,47)"/><text x="20.8134%" y="527.50"></text></g><g><title>load_balance (1 samples, 0.14%)</title><rect x="20.7042%" y="501" width="0.1408%" height="15" fill="rgb(248,225,23)"/><text x="20.9542%" y="511.50"></text></g><g><title>find_busiest_group (1 samples, 0.14%)</title><rect x="20.7042%" y="485" width="0.1408%" height="15" fill="rgb(250,108,0)"/><text x="20.9542%" y="495.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (1 samples, 0.14%)</title><rect x="20.7042%" y="469" width="0.1408%" height="15" fill="rgb(228,208,7)"/><text x="20.9542%" y="479.50"></text></g><g><title>cpumask_next_and (1 samples, 0.14%)</title><rect x="20.7042%" y="453" width="0.1408%" height="15" fill="rgb(244,45,10)"/><text x="20.9542%" y="463.50"></text></g><g><title>_find_next_bit.constprop.0 (1 samples, 0.14%)</title><rect x="20.7042%" y="437" width="0.1408%" height="15" fill="rgb(207,125,25)"/><text x="20.9542%" y="447.50"></text></g><g><title>psi_task_change (6 samples, 0.85%)</title><rect x="20.8451%" y="533" width="0.8451%" height="15" fill="rgb(210,195,18)"/><text x="21.0951%" y="543.50"></text></g><g><title>psi_group_change (6 samples, 0.85%)</title><rect x="20.8451%" y="517" width="0.8451%" height="15" fill="rgb(249,80,12)"/><text x="21.0951%" y="527.50"></text></g><g><title>record_times (3 samples, 0.42%)</title><rect x="21.2676%" y="501" width="0.4225%" height="15" fill="rgb(221,65,9)"/><text x="21.5176%" y="511.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.28%)</title><rect x="21.4085%" y="485" width="0.2817%" height="15" fill="rgb(235,49,36)"/><text x="21.6585%" y="495.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="21.5493%" y="469" width="0.1408%" height="15" fill="rgb(225,32,20)"/><text x="21.7993%" y="479.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="21.5493%" y="453" width="0.1408%" height="15" fill="rgb(215,141,46)"/><text x="21.7993%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.14%)</title><rect x="21.6901%" y="533" width="0.1408%" height="15" fill="rgb(250,160,47)"/><text x="21.9401%" y="543.50"></text></g><g><title>sk_wait_data (25 samples, 3.52%)</title><rect x="18.4507%" y="613" width="3.5211%" height="15" fill="rgb(216,222,40)"/><text x="18.7007%" y="623.50">sk_..</text></g><g><title>wait_woken (22 samples, 3.10%)</title><rect x="18.8732%" y="597" width="3.0986%" height="15" fill="rgb(234,217,39)"/><text x="19.1232%" y="607.50">wai..</text></g><g><title>schedule_timeout (22 samples, 3.10%)</title><rect x="18.8732%" y="581" width="3.0986%" height="15" fill="rgb(207,178,40)"/><text x="19.1232%" y="591.50">sch..</text></g><g><title>schedule (22 samples, 3.10%)</title><rect x="18.8732%" y="565" width="3.0986%" height="15" fill="rgb(221,136,13)"/><text x="19.1232%" y="575.50">sch..</text></g><g><title>__schedule (22 samples, 3.10%)</title><rect x="18.8732%" y="549" width="3.0986%" height="15" fill="rgb(249,199,10)"/><text x="19.1232%" y="559.50">__s..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="21.8310%" y="533" width="0.1408%" height="15" fill="rgb(249,222,13)"/><text x="22.0810%" y="543.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.14%)</title><rect x="21.8310%" y="517" width="0.1408%" height="15" fill="rgb(244,185,38)"/><text x="22.0810%" y="527.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.42%)</title><rect x="21.9718%" y="613" width="0.4225%" height="15" fill="rgb(236,202,9)"/><text x="22.2218%" y="623.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.42%)</title><rect x="21.9718%" y="597" width="0.4225%" height="15" fill="rgb(250,229,37)"/><text x="22.2218%" y="607.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.14%)</title><rect x="22.2535%" y="581" width="0.1408%" height="15" fill="rgb(206,174,23)"/><text x="22.5035%" y="591.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="22.2535%" y="565" width="0.1408%" height="15" fill="rgb(211,33,43)"/><text x="22.5035%" y="575.50"></text></g><g><title>inet_recvmsg (30 samples, 4.23%)</title><rect x="18.3099%" y="645" width="4.2254%" height="15" fill="rgb(245,58,50)"/><text x="18.5599%" y="655.50">inet_..</text></g><g><title>tcp_recvmsg (30 samples, 4.23%)</title><rect x="18.3099%" y="629" width="4.2254%" height="15" fill="rgb(244,68,36)"/><text x="18.5599%" y="639.50">tcp_r..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.14%)</title><rect x="22.3944%" y="613" width="0.1408%" height="15" fill="rgb(232,229,15)"/><text x="22.6444%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (32 samples, 4.51%)</title><rect x="18.1690%" y="677" width="4.5070%" height="15" fill="rgb(254,30,23)"/><text x="18.4190%" y="687.50">__x64..</text></g><g><title>__sys_recvfrom (32 samples, 4.51%)</title><rect x="18.1690%" y="661" width="4.5070%" height="15" fill="rgb(235,160,14)"/><text x="18.4190%" y="671.50">__sys..</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="22.5352%" y="645" width="0.1408%" height="15" fill="rgb(212,155,44)"/><text x="22.7852%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="22.5352%" y="629" width="0.1408%" height="15" fill="rgb(226,2,50)"/><text x="22.7852%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="22.5352%" y="613" width="0.1408%" height="15" fill="rgb(234,177,6)"/><text x="22.7852%" y="623.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="22.5352%" y="597" width="0.1408%" height="15" fill="rgb(217,24,9)"/><text x="22.7852%" y="607.50"></text></g><g><title>do_syscall_64 (33 samples, 4.65%)</title><rect x="18.1690%" y="693" width="4.6479%" height="15" fill="rgb(220,13,46)"/><text x="18.4190%" y="703.50">do_sy..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="22.6761%" y="677" width="0.1408%" height="15" fill="rgb(239,221,27)"/><text x="22.9261%" y="687.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (42 samples, 5.92%)</title><rect x="17.8873%" y="805" width="5.9155%" height="15" fill="rgb(222,198,25)"/><text x="18.1373%" y="815.50">&lt;std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (41 samples, 5.77%)</title><rect x="18.0282%" y="789" width="5.7746%" height="15" fill="rgb(211,99,13)"/><text x="18.2782%" y="799.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (41 samples, 5.77%)</title><rect x="18.0282%" y="773" width="5.7746%" height="15" fill="rgb(232,111,31)"/><text x="18.2782%" y="783.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (41 samples, 5.77%)</title><rect x="18.0282%" y="757" width="5.7746%" height="15" fill="rgb(245,82,37)"/><text x="18.2782%" y="767.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (41 samples, 5.77%)</title><rect x="18.0282%" y="741" width="5.7746%" height="15" fill="rgb(227,149,46)"/><text x="18.2782%" y="751.50">std::sy..</text></g><g><title>__libc_recv (41 samples, 5.77%)</title><rect x="18.0282%" y="725" width="5.7746%" height="15" fill="rgb(218,36,50)"/><text x="18.2782%" y="735.50">__libc_..</text></g><g><title>entry_SYSCALL_64 (40 samples, 5.63%)</title><rect x="18.1690%" y="709" width="5.6338%" height="15" fill="rgb(226,80,48)"/><text x="18.4190%" y="719.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.99%)</title><rect x="22.8169%" y="693" width="0.9859%" height="15" fill="rgb(238,224,15)"/><text x="23.0669%" y="703.50"></text></g><g><title>lobsters::main (52 samples, 7.32%)</title><rect x="16.9014%" y="901" width="7.3239%" height="15" fill="rgb(241,136,10)"/><text x="17.1514%" y="911.50">lobsters::..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (50 samples, 7.04%)</title><rect x="17.1831%" y="885" width="7.0423%" height="15" fill="rgb(208,32,45)"/><text x="17.4331%" y="895.50">mysql::co..</text></g><g><title>mysql::conn::Conn::_query (50 samples, 7.04%)</title><rect x="17.1831%" y="869" width="7.0423%" height="15" fill="rgb(207,135,9)"/><text x="17.4331%" y="879.50">mysql::co..</text></g><g><title>mysql::conn::Conn::handle_result_set (50 samples, 7.04%)</title><rect x="17.1831%" y="853" width="7.0423%" height="15" fill="rgb(206,86,44)"/><text x="17.4331%" y="863.50">mysql::co..</text></g><g><title>mysql::conn::Conn::read_packet (49 samples, 6.90%)</title><rect x="17.3239%" y="837" width="6.9014%" height="15" fill="rgb(245,177,15)"/><text x="17.5739%" y="847.50">mysql::co..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 6.34%)</title><rect x="17.8873%" y="821" width="6.3380%" height="15" fill="rgb(206,64,50)"/><text x="18.1373%" y="831.50">&lt;mysql_c..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.42%)</title><rect x="23.8028%" y="805" width="0.4225%" height="15" fill="rgb(234,36,40)"/><text x="24.0528%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.42%)</title><rect x="23.8028%" y="789" width="0.4225%" height="15" fill="rgb(213,64,8)"/><text x="24.0528%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.42%)</title><rect x="23.8028%" y="773" width="0.4225%" height="15" fill="rgb(210,75,36)"/><text x="24.0528%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.28%)</title><rect x="23.9437%" y="757" width="0.2817%" height="15" fill="rgb(229,88,21)"/><text x="24.1937%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="23.9437%" y="741" width="0.2817%" height="15" fill="rgb(252,204,47)"/><text x="24.1937%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.14%)</title><rect x="24.2254%" y="901" width="0.1408%" height="15" fill="rgb(208,77,27)"/><text x="24.4754%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="24.2254%" y="885" width="0.1408%" height="15" fill="rgb(221,76,26)"/><text x="24.4754%" y="895.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="24.2254%" y="869" width="0.1408%" height="15" fill="rgb(225,139,18)"/><text x="24.4754%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="24.2254%" y="853" width="0.1408%" height="15" fill="rgb(230,137,11)"/><text x="24.4754%" y="863.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="24.2254%" y="837" width="0.1408%" height="15" fill="rgb(212,28,1)"/><text x="24.4754%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="24.2254%" y="821" width="0.1408%" height="15" fill="rgb(248,164,17)"/><text x="24.4754%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="24.2254%" y="805" width="0.1408%" height="15" fill="rgb(222,171,42)"/><text x="24.4754%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="24.2254%" y="789" width="0.1408%" height="15" fill="rgb(243,84,45)"/><text x="24.4754%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="24.2254%" y="773" width="0.1408%" height="15" fill="rgb(252,49,23)"/><text x="24.4754%" y="783.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="24.2254%" y="757" width="0.1408%" height="15" fill="rgb(215,19,7)"/><text x="24.4754%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="24.2254%" y="741" width="0.1408%" height="15" fill="rgb(238,81,41)"/><text x="24.4754%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="24.2254%" y="725" width="0.1408%" height="15" fill="rgb(210,199,37)"/><text x="24.4754%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="24.2254%" y="709" width="0.1408%" height="15" fill="rgb(244,192,49)"/><text x="24.4754%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="24.2254%" y="693" width="0.1408%" height="15" fill="rgb(226,211,11)"/><text x="24.4754%" y="703.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="24.2254%" y="677" width="0.1408%" height="15" fill="rgb(236,162,54)"/><text x="24.4754%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="24.2254%" y="661" width="0.1408%" height="15" fill="rgb(220,229,9)"/><text x="24.4754%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="24.2254%" y="645" width="0.1408%" height="15" fill="rgb(250,87,22)"/><text x="24.4754%" y="655.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="24.2254%" y="629" width="0.1408%" height="15" fill="rgb(239,43,17)"/><text x="24.4754%" y="639.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="24.2254%" y="613" width="0.1408%" height="15" fill="rgb(231,177,25)"/><text x="24.4754%" y="623.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="24.2254%" y="597" width="0.1408%" height="15" fill="rgb(219,179,1)"/><text x="24.4754%" y="607.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="24.2254%" y="581" width="0.1408%" height="15" fill="rgb(238,219,53)"/><text x="24.4754%" y="591.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.14%)</title><rect x="24.2254%" y="565" width="0.1408%" height="15" fill="rgb(232,167,36)"/><text x="24.4754%" y="575.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.14%)</title><rect x="24.2254%" y="549" width="0.1408%" height="15" fill="rgb(244,19,51)"/><text x="24.4754%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="24.3662%" y="901" width="0.1408%" height="15" fill="rgb(224,6,22)"/><text x="24.6162%" y="911.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="24.5070%" y="901" width="0.1408%" height="15" fill="rgb(224,145,5)"/><text x="24.7570%" y="911.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.14%)</title><rect x="24.6479%" y="901" width="0.1408%" height="15" fill="rgb(234,130,49)"/><text x="24.8979%" y="911.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.14%)</title><rect x="24.7887%" y="901" width="0.1408%" height="15" fill="rgb(254,6,2)"/><text x="25.0387%" y="911.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.14%)</title><rect x="24.9296%" y="901" width="0.1408%" height="15" fill="rgb(208,96,46)"/><text x="25.1796%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.14%)</title><rect x="25.0704%" y="901" width="0.1408%" height="15" fill="rgb(239,3,39)"/><text x="25.3204%" y="911.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="25.2113%" y="901" width="0.1408%" height="15" fill="rgb(233,210,1)"/><text x="25.4613%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.14%)</title><rect x="25.2113%" y="885" width="0.1408%" height="15" fill="rgb(244,137,37)"/><text x="25.4613%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.14%)</title><rect x="25.2113%" y="869" width="0.1408%" height="15" fill="rgb(240,136,2)"/><text x="25.4613%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.14%)</title><rect x="25.2113%" y="853" width="0.1408%" height="15" fill="rgb(239,18,37)"/><text x="25.4613%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="25.2113%" y="837" width="0.1408%" height="15" fill="rgb(218,185,22)"/><text x="25.4613%" y="847.50"></text></g><g><title>start_thread (1 samples, 0.14%)</title><rect x="25.3521%" y="901" width="0.1408%" height="15" fill="rgb(225,218,4)"/><text x="25.6021%" y="911.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.14%)</title><rect x="25.3521%" y="885" width="0.1408%" height="15" fill="rgb(230,182,32)"/><text x="25.6021%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="25.3521%" y="869" width="0.1408%" height="15" fill="rgb(242,56,43)"/><text x="25.6021%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="25.3521%" y="853" width="0.1408%" height="15" fill="rgb(233,99,24)"/><text x="25.6021%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.14%)</title><rect x="25.3521%" y="837" width="0.1408%" height="15" fill="rgb(234,209,42)"/><text x="25.6021%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="25.3521%" y="821" width="0.1408%" height="15" fill="rgb(227,7,12)"/><text x="25.6021%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.14%)</title><rect x="25.3521%" y="805" width="0.1408%" height="15" fill="rgb(245,203,43)"/><text x="25.6021%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.14%)</title><rect x="25.3521%" y="789" width="0.1408%" height="15" fill="rgb(238,205,33)"/><text x="25.6021%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="25.3521%" y="773" width="0.1408%" height="15" fill="rgb(231,56,7)"/><text x="25.6021%" y="783.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="25.3521%" y="757" width="0.1408%" height="15" fill="rgb(244,186,29)"/><text x="25.6021%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="25.3521%" y="741" width="0.1408%" height="15" fill="rgb(234,111,31)"/><text x="25.6021%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.14%)</title><rect x="25.3521%" y="725" width="0.1408%" height="15" fill="rgb(241,149,10)"/><text x="25.6021%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="25.3521%" y="709" width="0.1408%" height="15" fill="rgb(249,206,44)"/><text x="25.6021%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.14%)</title><rect x="25.3521%" y="693" width="0.1408%" height="15" fill="rgb(251,153,30)"/><text x="25.6021%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.14%)</title><rect x="25.3521%" y="677" width="0.1408%" height="15" fill="rgb(239,152,38)"/><text x="25.6021%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="25.3521%" y="661" width="0.1408%" height="15" fill="rgb(249,139,47)"/><text x="25.6021%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="25.3521%" y="645" width="0.1408%" height="15" fill="rgb(244,64,35)"/><text x="25.6021%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="25.3521%" y="629" width="0.1408%" height="15" fill="rgb(216,46,15)"/><text x="25.6021%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (1 samples, 0.14%)</title><rect x="25.4930%" y="901" width="0.1408%" height="15" fill="rgb(250,74,19)"/><text x="25.7430%" y="911.50"></text></g><g><title>std::net::tcp::TcpStream::set_write_timeout (1 samples, 0.14%)</title><rect x="25.6338%" y="901" width="0.1408%" height="15" fill="rgb(249,42,33)"/><text x="25.8838%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::set_write_timeout (1 samples, 0.14%)</title><rect x="25.6338%" y="885" width="0.1408%" height="15" fill="rgb(242,149,17)"/><text x="25.8838%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (1 samples, 0.14%)</title><rect x="25.6338%" y="869" width="0.1408%" height="15" fill="rgb(244,29,21)"/><text x="25.8838%" y="879.50"></text></g><g><title>std::io::error::Error::new (1 samples, 0.14%)</title><rect x="25.6338%" y="853" width="0.1408%" height="15" fill="rgb(220,130,37)"/><text x="25.8838%" y="863.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.14%)</title><rect x="25.6338%" y="837" width="0.1408%" height="15" fill="rgb(211,67,2)"/><text x="25.8838%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.14%)</title><rect x="25.6338%" y="821" width="0.1408%" height="15" fill="rgb(235,68,52)"/><text x="25.8838%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.14%)</title><rect x="25.6338%" y="805" width="0.1408%" height="15" fill="rgb(246,142,3)"/><text x="25.8838%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.14%)</title><rect x="25.6338%" y="789" width="0.1408%" height="15" fill="rgb(241,25,7)"/><text x="25.8838%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="25.6338%" y="773" width="0.1408%" height="15" fill="rgb(242,119,39)"/><text x="25.8838%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="25.6338%" y="757" width="0.1408%" height="15" fill="rgb(241,98,45)"/><text x="25.8838%" y="767.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="25.6338%" y="741" width="0.1408%" height="15" fill="rgb(254,28,30)"/><text x="25.8838%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="25.6338%" y="725" width="0.1408%" height="15" fill="rgb(241,142,54)"/><text x="25.8838%" y="735.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.14%)</title><rect x="25.7746%" y="901" width="0.1408%" height="15" fill="rgb(222,85,15)"/><text x="26.0246%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="25.7746%" y="885" width="0.1408%" height="15" fill="rgb(210,85,47)"/><text x="26.0246%" y="895.50"></text></g><g><title>lobsters::main (1 samples, 0.14%)</title><rect x="25.7746%" y="869" width="0.1408%" height="15" fill="rgb(224,206,25)"/><text x="26.0246%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="25.7746%" y="853" width="0.1408%" height="15" fill="rgb(243,201,19)"/><text x="26.0246%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="25.7746%" y="837" width="0.1408%" height="15" fill="rgb(236,59,4)"/><text x="26.0246%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.14%)</title><rect x="25.7746%" y="821" width="0.1408%" height="15" fill="rgb(254,179,45)"/><text x="26.0246%" y="831.50"></text></g><g><title>mysql::conn::Conn::more_results_exists (1 samples, 0.14%)</title><rect x="25.7746%" y="805" width="0.1408%" height="15" fill="rgb(226,14,10)"/><text x="26.0246%" y="815.50"></text></g><g><title>link_path_walk (1 samples, 0.14%)</title><rect x="25.9155%" y="581" width="0.1408%" height="15" fill="rgb(244,27,41)"/><text x="26.1655%" y="591.50"></text></g><g><title>security_inode_permission (1 samples, 0.14%)</title><rect x="25.9155%" y="565" width="0.1408%" height="15" fill="rgb(235,35,32)"/><text x="26.1655%" y="575.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.28%)</title><rect x="25.9155%" y="773" width="0.2817%" height="15" fill="rgb(218,68,31)"/><text x="26.1655%" y="783.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.28%)</title><rect x="25.9155%" y="757" width="0.2817%" height="15" fill="rgb(207,120,37)"/><text x="26.1655%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.28%)</title><rect x="25.9155%" y="741" width="0.2817%" height="15" fill="rgb(227,98,0)"/><text x="26.1655%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.28%)</title><rect x="25.9155%" y="725" width="0.2817%" height="15" fill="rgb(207,7,3)"/><text x="26.1655%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.28%)</title><rect x="25.9155%" y="709" width="0.2817%" height="15" fill="rgb(206,98,19)"/><text x="26.1655%" y="719.50"></text></g><g><title>__GI___openat (2 samples, 0.28%)</title><rect x="25.9155%" y="693" width="0.2817%" height="15" fill="rgb(217,5,26)"/><text x="26.1655%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.28%)</title><rect x="25.9155%" y="677" width="0.2817%" height="15" fill="rgb(235,190,38)"/><text x="26.1655%" y="687.50"></text></g><g><title>do_syscall_64 (2 samples, 0.28%)</title><rect x="25.9155%" y="661" width="0.2817%" height="15" fill="rgb(247,86,24)"/><text x="26.1655%" y="671.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.28%)</title><rect x="25.9155%" y="645" width="0.2817%" height="15" fill="rgb(205,101,16)"/><text x="26.1655%" y="655.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.28%)</title><rect x="25.9155%" y="629" width="0.2817%" height="15" fill="rgb(246,168,33)"/><text x="26.1655%" y="639.50"></text></g><g><title>do_filp_open (2 samples, 0.28%)</title><rect x="25.9155%" y="613" width="0.2817%" height="15" fill="rgb(231,114,1)"/><text x="26.1655%" y="623.50"></text></g><g><title>path_openat (2 samples, 0.28%)</title><rect x="25.9155%" y="597" width="0.2817%" height="15" fill="rgb(207,184,53)"/><text x="26.1655%" y="607.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.14%)</title><rect x="26.0563%" y="581" width="0.1408%" height="15" fill="rgb(224,95,51)"/><text x="26.3063%" y="591.50"></text></g><g><title>__d_lookup (1 samples, 0.14%)</title><rect x="26.0563%" y="565" width="0.1408%" height="15" fill="rgb(212,188,45)"/><text x="26.3063%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="26.1972%" y="741" width="0.1408%" height="15" fill="rgb(223,154,38)"/><text x="26.4472%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.56%)</title><rect x="25.9155%" y="901" width="0.5634%" height="15" fill="rgb(251,22,52)"/><text x="26.1655%" y="911.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.56%)</title><rect x="25.9155%" y="885" width="0.5634%" height="15" fill="rgb(229,209,22)"/><text x="26.1655%" y="895.50"></text></g><g><title>std::panicking::try (4 samples, 0.56%)</title><rect x="25.9155%" y="869" width="0.5634%" height="15" fill="rgb(234,138,34)"/><text x="26.1655%" y="879.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.56%)</title><rect x="25.9155%" y="853" width="0.5634%" height="15" fill="rgb(212,95,11)"/><text x="26.1655%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.56%)</title><rect x="25.9155%" y="837" width="0.5634%" height="15" fill="rgb(240,179,47)"/><text x="26.1655%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.56%)</title><rect x="25.9155%" y="821" width="0.5634%" height="15" fill="rgb(240,163,11)"/><text x="26.1655%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.56%)</title><rect x="25.9155%" y="805" width="0.5634%" height="15" fill="rgb(236,37,12)"/><text x="26.1655%" y="815.50"></text></g><g><title>lobsters::main (4 samples, 0.56%)</title><rect x="25.9155%" y="789" width="0.5634%" height="15" fill="rgb(232,164,16)"/><text x="26.1655%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.28%)</title><rect x="26.1972%" y="773" width="0.2817%" height="15" fill="rgb(244,205,15)"/><text x="26.4472%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.28%)</title><rect x="26.1972%" y="757" width="0.2817%" height="15" fill="rgb(223,117,47)"/><text x="26.4472%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="26.3380%" y="741" width="0.1408%" height="15" fill="rgb(244,107,35)"/><text x="26.5880%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.14%)</title><rect x="26.3380%" y="725" width="0.1408%" height="15" fill="rgb(205,140,8)"/><text x="26.5880%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.14%)</title><rect x="26.3380%" y="709" width="0.1408%" height="15" fill="rgb(228,84,46)"/><text x="26.5880%" y="719.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.14%)</title><rect x="26.3380%" y="693" width="0.1408%" height="15" fill="rgb(254,188,9)"/><text x="26.5880%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="26.3380%" y="677" width="0.1408%" height="15" fill="rgb(206,112,54)"/><text x="26.5880%" y="687.50"></text></g><g><title>[unknown] (178 samples, 25.07%)</title><rect x="1.5493%" y="917" width="25.0704%" height="15" fill="rgb(216,84,49)"/><text x="1.7993%" y="927.50">[unknown]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.14%)</title><rect x="26.4789%" y="901" width="0.1408%" height="15" fill="rgb(214,194,35)"/><text x="26.7289%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="26.4789%" y="885" width="0.1408%" height="15" fill="rgb(249,28,3)"/><text x="26.7289%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.14%)</title><rect x="26.4789%" y="869" width="0.1408%" height="15" fill="rgb(222,56,52)"/><text x="26.7289%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.14%)</title><rect x="26.4789%" y="853" width="0.1408%" height="15" fill="rgb(245,217,50)"/><text x="26.7289%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="26.4789%" y="837" width="0.1408%" height="15" fill="rgb(213,201,24)"/><text x="26.7289%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.14%)</title><rect x="26.4789%" y="821" width="0.1408%" height="15" fill="rgb(248,116,28)"/><text x="26.7289%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.14%)</title><rect x="26.4789%" y="805" width="0.1408%" height="15" fill="rgb(219,72,43)"/><text x="26.7289%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.14%)</title><rect x="26.4789%" y="789" width="0.1408%" height="15" fill="rgb(209,138,14)"/><text x="26.7289%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="26.4789%" y="773" width="0.1408%" height="15" fill="rgb(222,18,33)"/><text x="26.7289%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="26.4789%" y="757" width="0.1408%" height="15" fill="rgb(213,199,7)"/><text x="26.7289%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="26.4789%" y="741" width="0.1408%" height="15" fill="rgb(250,110,10)"/><text x="26.7289%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="26.4789%" y="725" width="0.1408%" height="15" fill="rgb(248,123,6)"/><text x="26.7289%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.14%)</title><rect x="26.4789%" y="709" width="0.1408%" height="15" fill="rgb(206,91,31)"/><text x="26.7289%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.14%)</title><rect x="26.4789%" y="693" width="0.1408%" height="15" fill="rgb(211,154,13)"/><text x="26.7289%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="26.4789%" y="677" width="0.1408%" height="15" fill="rgb(225,148,7)"/><text x="26.7289%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="26.4789%" y="661" width="0.1408%" height="15" fill="rgb(220,160,43)"/><text x="26.7289%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.14%)</title><rect x="26.4789%" y="645" width="0.1408%" height="15" fill="rgb(213,52,39)"/><text x="26.7289%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="26.6197%" y="789" width="0.1408%" height="15" fill="rgb(243,137,7)"/><text x="26.8697%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="26.6197%" y="773" width="0.1408%" height="15" fill="rgb(230,79,13)"/><text x="26.8697%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.14%)</title><rect x="26.6197%" y="757" width="0.1408%" height="15" fill="rgb(247,105,23)"/><text x="26.8697%" y="767.50"></text></g><g><title>__GI___mprotect (1 samples, 0.14%)</title><rect x="26.6197%" y="741" width="0.1408%" height="15" fill="rgb(223,179,41)"/><text x="26.8697%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="26.6197%" y="725" width="0.1408%" height="15" fill="rgb(218,9,34)"/><text x="26.8697%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="26.6197%" y="709" width="0.1408%" height="15" fill="rgb(222,106,8)"/><text x="26.8697%" y="719.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.14%)</title><rect x="26.6197%" y="693" width="0.1408%" height="15" fill="rgb(211,220,0)"/><text x="26.8697%" y="703.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.14%)</title><rect x="26.6197%" y="677" width="0.1408%" height="15" fill="rgb(229,52,16)"/><text x="26.8697%" y="687.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="26.6197%" y="661" width="0.1408%" height="15" fill="rgb(212,155,18)"/><text x="26.8697%" y="671.50"></text></g><g><title>perf_event_mmap (1 samples, 0.14%)</title><rect x="26.6197%" y="645" width="0.1408%" height="15" fill="rgb(242,21,14)"/><text x="26.8697%" y="655.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.14%)</title><rect x="26.6197%" y="629" width="0.1408%" height="15" fill="rgb(222,19,48)"/><text x="26.8697%" y="639.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.14%)</title><rect x="26.6197%" y="613" width="0.1408%" height="15" fill="rgb(232,45,27)"/><text x="26.8697%" y="623.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.14%)</title><rect x="26.6197%" y="597" width="0.1408%" height="15" fill="rgb(249,103,42)"/><text x="26.8697%" y="607.50"></text></g><g><title>perf_output_copy (1 samples, 0.14%)</title><rect x="26.6197%" y="581" width="0.1408%" height="15" fill="rgb(246,81,33)"/><text x="26.8697%" y="591.50"></text></g><g><title>memcpy_erms (1 samples, 0.14%)</title><rect x="26.6197%" y="565" width="0.1408%" height="15" fill="rgb(252,33,42)"/><text x="26.8697%" y="575.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="26.7606%" y="773" width="0.1408%" height="15" fill="rgb(209,212,41)"/><text x="27.0106%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="26.7606%" y="757" width="0.1408%" height="15" fill="rgb(207,154,6)"/><text x="27.0106%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="26.7606%" y="741" width="0.1408%" height="15" fill="rgb(223,64,47)"/><text x="27.0106%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="26.7606%" y="725" width="0.1408%" height="15" fill="rgb(211,161,38)"/><text x="27.0106%" y="735.50"></text></g><g><title>decor::answer_rows (2 samples, 0.28%)</title><rect x="27.3239%" y="757" width="0.2817%" height="15" fill="rgb(219,138,40)"/><text x="27.5739%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="27.4648%" y="741" width="0.1408%" height="15" fill="rgb(241,228,46)"/><text x="27.7148%" y="751.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.14%)</title><rect x="27.4648%" y="725" width="0.1408%" height="15" fill="rgb(223,209,38)"/><text x="27.7148%" y="735.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.14%)</title><rect x="27.4648%" y="709" width="0.1408%" height="15" fill="rgb(236,164,45)"/><text x="27.7148%" y="719.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.14%)</title><rect x="27.4648%" y="693" width="0.1408%" height="15" fill="rgb(231,15,5)"/><text x="27.7148%" y="703.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.14%)</title><rect x="27.4648%" y="677" width="0.1408%" height="15" fill="rgb(252,35,15)"/><text x="27.7148%" y="687.50"></text></g><g><title>tick_sched_timer (1 samples, 0.14%)</title><rect x="27.4648%" y="661" width="0.1408%" height="15" fill="rgb(248,181,18)"/><text x="27.7148%" y="671.50"></text></g><g><title>tick_sched_handle (1 samples, 0.14%)</title><rect x="27.4648%" y="645" width="0.1408%" height="15" fill="rgb(233,39,42)"/><text x="27.7148%" y="655.50"></text></g><g><title>update_process_times (1 samples, 0.14%)</title><rect x="27.4648%" y="629" width="0.1408%" height="15" fill="rgb(238,110,33)"/><text x="27.7148%" y="639.50"></text></g><g><title>scheduler_tick (1 samples, 0.14%)</title><rect x="27.4648%" y="613" width="0.1408%" height="15" fill="rgb(233,195,10)"/><text x="27.7148%" y="623.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.14%)</title><rect x="27.4648%" y="597" width="0.1408%" height="15" fill="rgb(254,105,3)"/><text x="27.7148%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_ok (4 samples, 0.56%)</title><rect x="27.8873%" y="725" width="0.5634%" height="15" fill="rgb(221,225,9)"/><text x="28.1373%" y="735.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.14%)</title><rect x="28.3099%" y="709" width="0.1408%" height="15" fill="rgb(224,227,45)"/><text x="28.5599%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="28.4507%" y="709" width="0.1408%" height="15" fill="rgb(229,198,43)"/><text x="28.7007%" y="719.50"></text></g><g><title>import_single_range (1 samples, 0.14%)</title><rect x="28.8732%" y="533" width="0.1408%" height="15" fill="rgb(206,209,35)"/><text x="29.1232%" y="543.50"></text></g><g><title>__kfree_skb (3 samples, 0.42%)</title><rect x="29.1549%" y="501" width="0.4225%" height="15" fill="rgb(245,195,53)"/><text x="29.4049%" y="511.50"></text></g><g><title>skb_release_head_state (3 samples, 0.42%)</title><rect x="29.1549%" y="485" width="0.4225%" height="15" fill="rgb(240,92,26)"/><text x="29.4049%" y="495.50"></text></g><g><title>dst_release (3 samples, 0.42%)</title><rect x="29.1549%" y="469" width="0.4225%" height="15" fill="rgb(207,40,23)"/><text x="29.4049%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="29.5775%" y="485" width="0.1408%" height="15" fill="rgb(223,111,35)"/><text x="29.8275%" y="495.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="29.7183%" y="485" width="0.1408%" height="15" fill="rgb(229,147,28)"/><text x="29.9683%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="29.7183%" y="469" width="0.1408%" height="15" fill="rgb(211,29,28)"/><text x="29.9683%" y="479.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.42%)</title><rect x="30.4225%" y="421" width="0.4225%" height="15" fill="rgb(228,72,33)"/><text x="30.6725%" y="431.50"></text></g><g><title>dequeue_entity (2 samples, 0.28%)</title><rect x="30.5634%" y="405" width="0.2817%" height="15" fill="rgb(205,214,31)"/><text x="30.8134%" y="415.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="30.7042%" y="389" width="0.1408%" height="15" fill="rgb(224,111,15)"/><text x="30.9542%" y="399.50"></text></g><g><title>update_min_vruntime (1 samples, 0.14%)</title><rect x="30.7042%" y="373" width="0.1408%" height="15" fill="rgb(253,21,26)"/><text x="30.9542%" y="383.50"></text></g><g><title>finish_task_switch (1 samples, 0.14%)</title><rect x="30.8451%" y="421" width="0.1408%" height="15" fill="rgb(245,139,43)"/><text x="31.0951%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.14%)</title><rect x="30.8451%" y="405" width="0.1408%" height="15" fill="rgb(252,170,7)"/><text x="31.0951%" y="415.50"></text></g><g><title>psi_task_change (4 samples, 0.56%)</title><rect x="30.9859%" y="421" width="0.5634%" height="15" fill="rgb(231,118,14)"/><text x="31.2359%" y="431.50"></text></g><g><title>psi_group_change (4 samples, 0.56%)</title><rect x="30.9859%" y="405" width="0.5634%" height="15" fill="rgb(238,83,0)"/><text x="31.2359%" y="415.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.14%)</title><rect x="31.5493%" y="421" width="0.1408%" height="15" fill="rgb(221,39,39)"/><text x="31.7993%" y="431.50"></text></g><g><title>__schedule (11 samples, 1.55%)</title><rect x="30.2817%" y="437" width="1.5493%" height="15" fill="rgb(222,119,46)"/><text x="30.5317%" y="447.50"></text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="31.6901%" y="421" width="0.1408%" height="15" fill="rgb(222,165,49)"/><text x="31.9401%" y="431.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.14%)</title><rect x="31.6901%" y="405" width="0.1408%" height="15" fill="rgb(219,113,52)"/><text x="31.9401%" y="415.50"></text></g><g><title>sk_wait_data (17 samples, 2.39%)</title><rect x="29.5775%" y="501" width="2.3944%" height="15" fill="rgb(214,7,15)"/><text x="29.8275%" y="511.50">sk..</text></g><g><title>wait_woken (15 samples, 2.11%)</title><rect x="29.8592%" y="485" width="2.1127%" height="15" fill="rgb(235,32,4)"/><text x="30.1092%" y="495.50">w..</text></g><g><title>schedule_timeout (12 samples, 1.69%)</title><rect x="30.2817%" y="469" width="1.6901%" height="15" fill="rgb(238,90,54)"/><text x="30.5317%" y="479.50"></text></g><g><title>schedule (12 samples, 1.69%)</title><rect x="30.2817%" y="453" width="1.6901%" height="15" fill="rgb(213,208,19)"/><text x="30.5317%" y="463.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="31.8310%" y="437" width="0.1408%" height="15" fill="rgb(233,156,4)"/><text x="32.0810%" y="447.50"></text></g><g><title>_copy_to_iter (1 samples, 0.14%)</title><rect x="31.9718%" y="469" width="0.1408%" height="15" fill="rgb(207,194,5)"/><text x="32.2218%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (25 samples, 3.52%)</title><rect x="28.7324%" y="565" width="3.5211%" height="15" fill="rgb(206,111,30)"/><text x="28.9824%" y="575.50">__x..</text></g><g><title>__sys_recvfrom (25 samples, 3.52%)</title><rect x="28.7324%" y="549" width="3.5211%" height="15" fill="rgb(243,70,54)"/><text x="28.9824%" y="559.50">__s..</text></g><g><title>inet_recvmsg (23 samples, 3.24%)</title><rect x="29.0141%" y="533" width="3.2394%" height="15" fill="rgb(242,28,8)"/><text x="29.2641%" y="543.50">ine..</text></g><g><title>tcp_recvmsg (22 samples, 3.10%)</title><rect x="29.1549%" y="517" width="3.0986%" height="15" fill="rgb(219,106,18)"/><text x="29.4049%" y="527.50">tcp..</text></g><g><title>skb_copy_datagram_iter (2 samples, 0.28%)</title><rect x="31.9718%" y="501" width="0.2817%" height="15" fill="rgb(244,222,10)"/><text x="32.2218%" y="511.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.28%)</title><rect x="31.9718%" y="485" width="0.2817%" height="15" fill="rgb(236,179,52)"/><text x="32.2218%" y="495.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.14%)</title><rect x="32.1127%" y="469" width="0.1408%" height="15" fill="rgb(213,23,39)"/><text x="32.3627%" y="479.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="32.1127%" y="453" width="0.1408%" height="15" fill="rgb(238,48,10)"/><text x="32.3627%" y="463.50"></text></g><g><title>do_syscall_64 (27 samples, 3.80%)</title><rect x="28.5915%" y="581" width="3.8028%" height="15" fill="rgb(251,196,23)"/><text x="28.8415%" y="591.50">do_s..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="32.2535%" y="565" width="0.1408%" height="15" fill="rgb(250,152,24)"/><text x="32.5035%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (32 samples, 4.51%)</title><rect x="28.5915%" y="693" width="4.5070%" height="15" fill="rgb(209,150,17)"/><text x="28.8415%" y="703.50">&lt;std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 4.51%)</title><rect x="28.5915%" y="677" width="4.5070%" height="15" fill="rgb(234,202,34)"/><text x="28.8415%" y="687.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 4.51%)</title><rect x="28.5915%" y="661" width="4.5070%" height="15" fill="rgb(253,148,53)"/><text x="28.8415%" y="671.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 4.51%)</title><rect x="28.5915%" y="645" width="4.5070%" height="15" fill="rgb(218,129,16)"/><text x="28.8415%" y="655.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 4.51%)</title><rect x="28.5915%" y="629" width="4.5070%" height="15" fill="rgb(216,85,19)"/><text x="28.8415%" y="639.50">std::..</text></g><g><title>__libc_recv (32 samples, 4.51%)</title><rect x="28.5915%" y="613" width="4.5070%" height="15" fill="rgb(235,228,7)"/><text x="28.8415%" y="623.50">__lib..</text></g><g><title>entry_SYSCALL_64 (32 samples, 4.51%)</title><rect x="28.5915%" y="597" width="4.5070%" height="15" fill="rgb(245,175,0)"/><text x="28.8415%" y="607.50">entry..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.70%)</title><rect x="32.3944%" y="581" width="0.7042%" height="15" fill="rgb(208,168,36)"/><text x="32.6444%" y="591.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 4.65%)</title><rect x="28.5915%" y="709" width="4.6479%" height="15" fill="rgb(246,171,24)"/><text x="28.8415%" y="719.50">&lt;mysq..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.14%)</title><rect x="33.0986%" y="693" width="0.1408%" height="15" fill="rgb(215,142,24)"/><text x="33.3486%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.14%)</title><rect x="33.0986%" y="677" width="0.1408%" height="15" fill="rgb(250,187,7)"/><text x="33.3486%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="33.0986%" y="661" width="0.1408%" height="15" fill="rgb(228,66,33)"/><text x="33.3486%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="33.0986%" y="645" width="0.1408%" height="15" fill="rgb(234,215,21)"/><text x="33.3486%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="33.0986%" y="629" width="0.1408%" height="15" fill="rgb(222,191,20)"/><text x="33.3486%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (35 samples, 4.93%)</title><rect x="28.4507%" y="725" width="4.9296%" height="15" fill="rgb(245,79,54)"/><text x="28.7007%" y="735.50">mysql:..</text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="33.2394%" y="709" width="0.1408%" height="15" fill="rgb(240,10,37)"/><text x="33.4894%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (40 samples, 5.63%)</title><rect x="27.8873%" y="741" width="5.6338%" height="15" fill="rgb(214,192,32)"/><text x="28.1373%" y="751.50">mysql::..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.14%)</title><rect x="33.3803%" y="725" width="0.1408%" height="15" fill="rgb(209,36,54)"/><text x="33.6303%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="33.5211%" y="725" width="0.1408%" height="15" fill="rgb(220,10,11)"/><text x="33.7711%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="33.5211%" y="709" width="0.1408%" height="15" fill="rgb(221,106,17)"/><text x="33.7711%" y="719.50"></text></g><g><title>inet_sendmsg (1 samples, 0.14%)</title><rect x="33.9437%" y="581" width="0.1408%" height="15" fill="rgb(251,142,44)"/><text x="34.1937%" y="591.50"></text></g><g><title>inet_send_prepare (1 samples, 0.14%)</title><rect x="33.9437%" y="565" width="0.1408%" height="15" fill="rgb(238,13,15)"/><text x="34.1937%" y="575.50"></text></g><g><title>release_sock (1 samples, 0.14%)</title><rect x="34.0845%" y="565" width="0.1408%" height="15" fill="rgb(208,107,27)"/><text x="34.3345%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="34.0845%" y="549" width="0.1408%" height="15" fill="rgb(205,136,37)"/><text x="34.3345%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="34.0845%" y="533" width="0.1408%" height="15" fill="rgb(250,205,27)"/><text x="34.3345%" y="543.50"></text></g><g><title>in_lock_functions (1 samples, 0.14%)</title><rect x="34.0845%" y="517" width="0.1408%" height="15" fill="rgb(210,80,43)"/><text x="34.3345%" y="527.50"></text></g><g><title>__ip_local_out (1 samples, 0.14%)</title><rect x="35.2113%" y="485" width="0.1408%" height="15" fill="rgb(247,160,36)"/><text x="35.4613%" y="495.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="35.3521%" y="485" width="0.1408%" height="15" fill="rgb(234,13,49)"/><text x="35.6021%" y="495.50"></text></g><g><title>eth_type_trans (1 samples, 0.14%)</title><rect x="36.0563%" y="405" width="0.1408%" height="15" fill="rgb(234,122,0)"/><text x="36.3063%" y="415.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.14%)</title><rect x="36.3380%" y="373" width="0.1408%" height="15" fill="rgb(207,146,38)"/><text x="36.5880%" y="383.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.56%)</title><rect x="36.0563%" y="437" width="0.5634%" height="15" fill="rgb(207,177,25)"/><text x="36.3063%" y="447.50"></text></g><g><title>loopback_xmit (4 samples, 0.56%)</title><rect x="36.0563%" y="421" width="0.5634%" height="15" fill="rgb(211,178,42)"/><text x="36.3063%" y="431.50"></text></g><g><title>netif_rx (3 samples, 0.42%)</title><rect x="36.1972%" y="405" width="0.4225%" height="15" fill="rgb(230,69,54)"/><text x="36.4472%" y="415.50"></text></g><g><title>netif_rx_internal (3 samples, 0.42%)</title><rect x="36.1972%" y="389" width="0.4225%" height="15" fill="rgb(214,135,41)"/><text x="36.4472%" y="399.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.14%)</title><rect x="36.4789%" y="373" width="0.1408%" height="15" fill="rgb(237,67,25)"/><text x="36.7289%" y="383.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.99%)</title><rect x="35.7746%" y="453" width="0.9859%" height="15" fill="rgb(222,189,50)"/><text x="36.0246%" y="463.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="36.6197%" y="437" width="0.1408%" height="15" fill="rgb(245,148,34)"/><text x="36.8697%" y="447.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="37.0423%" y="389" width="0.1408%" height="15" fill="rgb(222,29,6)"/><text x="37.2923%" y="399.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="37.1831%" y="389" width="0.1408%" height="15" fill="rgb(221,189,43)"/><text x="37.4331%" y="399.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="38.0282%" y="261" width="0.1408%" height="15" fill="rgb(207,36,27)"/><text x="38.2782%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="38.7324%" y="149" width="0.1408%" height="15" fill="rgb(217,90,24)"/><text x="38.9824%" y="159.50"></text></g><g><title>psi_task_change (2 samples, 0.28%)</title><rect x="38.8732%" y="133" width="0.2817%" height="15" fill="rgb(224,66,35)"/><text x="39.1232%" y="143.50"></text></g><g><title>psi_group_change (2 samples, 0.28%)</title><rect x="38.8732%" y="117" width="0.2817%" height="15" fill="rgb(221,13,50)"/><text x="39.1232%" y="127.50"></text></g><g><title>enqueue_task (5 samples, 0.70%)</title><rect x="38.8732%" y="149" width="0.7042%" height="15" fill="rgb(236,68,49)"/><text x="39.1232%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.42%)</title><rect x="39.1549%" y="133" width="0.4225%" height="15" fill="rgb(229,146,28)"/><text x="39.4049%" y="143.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.14%)</title><rect x="39.5775%" y="149" width="0.1408%" height="15" fill="rgb(225,31,38)"/><text x="39.8275%" y="159.50"></text></g><g><title>enqueue_entity (1 samples, 0.14%)</title><rect x="39.5775%" y="133" width="0.1408%" height="15" fill="rgb(250,208,3)"/><text x="39.8275%" y="143.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.28%)</title><rect x="39.7183%" y="149" width="0.2817%" height="15" fill="rgb(246,54,23)"/><text x="39.9683%" y="159.50"></text></g><g><title>available_idle_cpu (1 samples, 0.14%)</title><rect x="39.8592%" y="133" width="0.1408%" height="15" fill="rgb(243,76,11)"/><text x="40.1092%" y="143.50"></text></g><g><title>set_task_cpu (1 samples, 0.14%)</title><rect x="40.0000%" y="149" width="0.1408%" height="15" fill="rgb(245,21,50)"/><text x="40.2500%" y="159.50"></text></g><g><title>migrate_task_rq_fair (1 samples, 0.14%)</title><rect x="40.0000%" y="133" width="0.1408%" height="15" fill="rgb(228,9,43)"/><text x="40.2500%" y="143.50"></text></g><g><title>remove_entity_load_avg (1 samples, 0.14%)</title><rect x="40.0000%" y="117" width="0.1408%" height="15" fill="rgb(208,100,47)"/><text x="40.2500%" y="127.50"></text></g><g><title>__update_load_avg_blocked_se (1 samples, 0.14%)</title><rect x="40.0000%" y="101" width="0.1408%" height="15" fill="rgb(232,26,8)"/><text x="40.2500%" y="111.50"></text></g><g><title>sock_def_readable (16 samples, 2.25%)</title><rect x="38.1690%" y="229" width="2.2535%" height="15" fill="rgb(216,166,38)"/><text x="38.4190%" y="239.50">s..</text></g><g><title>__wake_up_common_lock (15 samples, 2.11%)</title><rect x="38.3099%" y="213" width="2.1127%" height="15" fill="rgb(251,202,51)"/><text x="38.5599%" y="223.50">_..</text></g><g><title>__wake_up_common (15 samples, 2.11%)</title><rect x="38.3099%" y="197" width="2.1127%" height="15" fill="rgb(254,216,34)"/><text x="38.5599%" y="207.50">_..</text></g><g><title>pollwake (15 samples, 2.11%)</title><rect x="38.3099%" y="181" width="2.1127%" height="15" fill="rgb(251,32,27)"/><text x="38.5599%" y="191.50">p..</text></g><g><title>try_to_wake_up (13 samples, 1.83%)</title><rect x="38.5915%" y="165" width="1.8310%" height="15" fill="rgb(208,127,28)"/><text x="38.8415%" y="175.50">t..</text></g><g><title>ttwu_do_wakeup (2 samples, 0.28%)</title><rect x="40.1408%" y="149" width="0.2817%" height="15" fill="rgb(224,137,22)"/><text x="40.3908%" y="159.50"></text></g><g><title>check_preempt_curr (2 samples, 0.28%)</title><rect x="40.1408%" y="133" width="0.2817%" height="15" fill="rgb(254,70,32)"/><text x="40.3908%" y="143.50"></text></g><g><title>resched_curr (2 samples, 0.28%)</title><rect x="40.1408%" y="117" width="0.2817%" height="15" fill="rgb(229,75,37)"/><text x="40.3908%" y="127.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="40.4225%" y="213" width="0.1408%" height="15" fill="rgb(252,64,23)"/><text x="40.6725%" y="223.50"></text></g><g><title>kfree (1 samples, 0.14%)</title><rect x="40.4225%" y="197" width="0.1408%" height="15" fill="rgb(232,162,48)"/><text x="40.6725%" y="207.50"></text></g><g><title>kmem_cache_free (3 samples, 0.42%)</title><rect x="40.5634%" y="213" width="0.4225%" height="15" fill="rgb(246,160,12)"/><text x="40.8134%" y="223.50"></text></g><g><title>__slab_free (2 samples, 0.28%)</title><rect x="40.7042%" y="197" width="0.2817%" height="15" fill="rgb(247,166,0)"/><text x="40.9542%" y="207.50"></text></g><g><title>tcp_ack (6 samples, 0.85%)</title><rect x="40.4225%" y="229" width="0.8451%" height="15" fill="rgb(249,219,21)"/><text x="40.6725%" y="239.50"></text></g><g><title>tcp_update_pacing_rate (2 samples, 0.28%)</title><rect x="40.9859%" y="213" width="0.2817%" height="15" fill="rgb(205,209,3)"/><text x="41.2359%" y="223.50"></text></g><g><title>ip_local_deliver (27 samples, 3.80%)</title><rect x="37.6056%" y="325" width="3.8028%" height="15" fill="rgb(243,44,1)"/><text x="37.8556%" y="335.50">ip_l..</text></g><g><title>ip_local_deliver_finish (27 samples, 3.80%)</title><rect x="37.6056%" y="309" width="3.8028%" height="15" fill="rgb(206,159,16)"/><text x="37.8556%" y="319.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (26 samples, 3.66%)</title><rect x="37.7465%" y="293" width="3.6620%" height="15" fill="rgb(244,77,30)"/><text x="37.9965%" y="303.50">ip_p..</text></g><g><title>tcp_v4_rcv (25 samples, 3.52%)</title><rect x="37.8873%" y="277" width="3.5211%" height="15" fill="rgb(218,69,12)"/><text x="38.1373%" y="287.50">tcp..</text></g><g><title>tcp_v4_do_rcv (23 samples, 3.24%)</title><rect x="38.1690%" y="261" width="3.2394%" height="15" fill="rgb(212,87,7)"/><text x="38.4190%" y="271.50">tcp..</text></g><g><title>tcp_rcv_established (23 samples, 3.24%)</title><rect x="38.1690%" y="245" width="3.2394%" height="15" fill="rgb(245,114,25)"/><text x="38.4190%" y="255.50">tcp..</text></g><g><title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="41.2676%" y="229" width="0.1408%" height="15" fill="rgb(210,61,42)"/><text x="41.5176%" y="239.50"></text></g><g><title>ip_finish_output2 (44 samples, 6.20%)</title><rect x="35.4930%" y="469" width="6.1972%" height="15" fill="rgb(211,52,33)"/><text x="35.7430%" y="479.50">ip_finis..</text></g><g><title>__local_bh_enable_ip (35 samples, 4.93%)</title><rect x="36.7606%" y="453" width="4.9296%" height="15" fill="rgb(234,58,33)"/><text x="37.0106%" y="463.50">__loca..</text></g><g><title>do_softirq (35 samples, 4.93%)</title><rect x="36.7606%" y="437" width="4.9296%" height="15" fill="rgb(220,115,36)"/><text x="37.0106%" y="447.50">do_sof..</text></g><g><title>do_softirq_own_stack (34 samples, 4.79%)</title><rect x="36.9014%" y="421" width="4.7887%" height="15" fill="rgb(243,153,54)"/><text x="37.1514%" y="431.50">do_sof..</text></g><g><title>__do_softirq (34 samples, 4.79%)</title><rect x="36.9014%" y="405" width="4.7887%" height="15" fill="rgb(251,47,18)"/><text x="37.1514%" y="415.50">__do_s..</text></g><g><title>net_rx_action (31 samples, 4.37%)</title><rect x="37.3239%" y="389" width="4.3662%" height="15" fill="rgb(242,102,42)"/><text x="37.5739%" y="399.50">net_r..</text></g><g><title>process_backlog (30 samples, 4.23%)</title><rect x="37.4648%" y="373" width="4.2254%" height="15" fill="rgb(234,31,38)"/><text x="37.7148%" y="383.50">proce..</text></g><g><title>__netif_receive_skb_one_core (30 samples, 4.23%)</title><rect x="37.4648%" y="357" width="4.2254%" height="15" fill="rgb(221,117,51)"/><text x="37.7148%" y="367.50">__net..</text></g><g><title>ip_rcv (29 samples, 4.08%)</title><rect x="37.6056%" y="341" width="4.0845%" height="15" fill="rgb(212,20,18)"/><text x="37.8556%" y="351.50">ip_r..</text></g><g><title>ip_rcv_finish (2 samples, 0.28%)</title><rect x="41.4085%" y="325" width="0.2817%" height="15" fill="rgb(245,133,36)"/><text x="41.6585%" y="335.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.28%)</title><rect x="41.4085%" y="309" width="0.2817%" height="15" fill="rgb(212,6,19)"/><text x="41.6585%" y="319.50"></text></g><g><title>__ip_queue_xmit (49 samples, 6.90%)</title><rect x="34.9296%" y="501" width="6.9014%" height="15" fill="rgb(218,1,36)"/><text x="35.1796%" y="511.50">__ip_queu..</text></g><g><title>ip_output (45 samples, 6.34%)</title><rect x="35.4930%" y="485" width="6.3380%" height="15" fill="rgb(246,84,54)"/><text x="35.7430%" y="495.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="41.6901%" y="469" width="0.1408%" height="15" fill="rgb(242,110,6)"/><text x="41.9401%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="41.6901%" y="453" width="0.1408%" height="15" fill="rgb(214,47,5)"/><text x="41.9401%" y="463.50"></text></g><g><title>__tcp_transmit_skb (52 samples, 7.32%)</title><rect x="34.6479%" y="517" width="7.3239%" height="15" fill="rgb(218,159,25)"/><text x="34.8979%" y="527.50">__tcp_tran..</text></g><g><title>bictcp_cwnd_event (1 samples, 0.14%)</title><rect x="41.8310%" y="501" width="0.1408%" height="15" fill="rgb(215,211,28)"/><text x="42.0810%" y="511.50"></text></g><g><title>ktime_get (2 samples, 0.28%)</title><rect x="41.9718%" y="517" width="0.2817%" height="15" fill="rgb(238,59,32)"/><text x="42.2218%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (56 samples, 7.89%)</title><rect x="34.5070%" y="549" width="7.8873%" height="15" fill="rgb(226,82,3)"/><text x="34.7570%" y="559.50">__tcp_push_..</text></g><g><title>tcp_write_xmit (56 samples, 7.89%)</title><rect x="34.5070%" y="533" width="7.8873%" height="15" fill="rgb(240,164,32)"/><text x="34.7570%" y="543.50">tcp_write_x..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.14%)</title><rect x="42.2535%" y="517" width="0.1408%" height="15" fill="rgb(232,46,7)"/><text x="42.5035%" y="527.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="42.3944%" y="549" width="0.1408%" height="15" fill="rgb(229,129,53)"/><text x="42.6444%" y="559.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="42.3944%" y="533" width="0.1408%" height="15" fill="rgb(234,188,29)"/><text x="42.6444%" y="543.50"></text></g><g><title>do_syscall_64 (64 samples, 9.01%)</title><rect x="33.6620%" y="645" width="9.0141%" height="15" fill="rgb(246,141,4)"/><text x="33.9120%" y="655.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (62 samples, 8.73%)</title><rect x="33.9437%" y="629" width="8.7324%" height="15" fill="rgb(229,23,39)"/><text x="34.1937%" y="639.50">__x64_sys_se..</text></g><g><title>__sys_sendto (62 samples, 8.73%)</title><rect x="33.9437%" y="613" width="8.7324%" height="15" fill="rgb(206,12,3)"/><text x="34.1937%" y="623.50">__sys_sendto</text></g><g><title>sock_sendmsg (62 samples, 8.73%)</title><rect x="33.9437%" y="597" width="8.7324%" height="15" fill="rgb(252,226,20)"/><text x="34.1937%" y="607.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (61 samples, 8.59%)</title><rect x="34.0845%" y="581" width="8.5915%" height="15" fill="rgb(216,123,35)"/><text x="34.3345%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (60 samples, 8.45%)</title><rect x="34.2254%" y="565" width="8.4507%" height="15" fill="rgb(212,68,40)"/><text x="34.4754%" y="575.50">tcp_sendmsg_..</text></g><g><title>tcp_send_mss (1 samples, 0.14%)</title><rect x="42.5352%" y="549" width="0.1408%" height="15" fill="rgb(254,125,32)"/><text x="42.7852%" y="559.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="42.5352%" y="533" width="0.1408%" height="15" fill="rgb(253,97,22)"/><text x="42.7852%" y="543.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (113 samples, 15.92%)</title><rect x="26.9014%" y="773" width="15.9155%" height="15" fill="rgb(241,101,14)"/><text x="27.1514%" y="783.50">&lt;decor::Shim as msql_srv..</text></g><g><title>mysql::conn::Conn::_query (108 samples, 15.21%)</title><rect x="27.6056%" y="757" width="15.2113%" height="15" fill="rgb(238,103,29)"/><text x="27.8556%" y="767.50">mysql::conn::Conn::_que..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (66 samples, 9.30%)</title><rect x="33.5211%" y="741" width="9.2958%" height="15" fill="rgb(233,195,47)"/><text x="33.7711%" y="751.50">mysql_common:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (65 samples, 9.15%)</title><rect x="33.6620%" y="725" width="9.1549%" height="15" fill="rgb(246,218,30)"/><text x="33.9120%" y="735.50">std::io::buff..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (65 samples, 9.15%)</title><rect x="33.6620%" y="709" width="9.1549%" height="15" fill="rgb(219,145,47)"/><text x="33.9120%" y="719.50">&lt;std::net::tc..</text></g><g><title>std::sys_common::net::TcpStream::write (65 samples, 9.15%)</title><rect x="33.6620%" y="693" width="9.1549%" height="15" fill="rgb(243,12,26)"/><text x="33.9120%" y="703.50">std::sys_comm..</text></g><g><title>__libc_send (65 samples, 9.15%)</title><rect x="33.6620%" y="677" width="9.1549%" height="15" fill="rgb(214,87,16)"/><text x="33.9120%" y="687.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (65 samples, 9.15%)</title><rect x="33.6620%" y="661" width="9.1549%" height="15" fill="rgb(208,99,42)"/><text x="33.9120%" y="671.50">entry_SYSCALL..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="42.6761%" y="645" width="0.1408%" height="15" fill="rgb(253,99,2)"/><text x="42.9261%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="42.8169%" y="773" width="0.1408%" height="15" fill="rgb(220,168,23)"/><text x="43.0669%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="42.8169%" y="757" width="0.1408%" height="15" fill="rgb(242,38,24)"/><text x="43.0669%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="42.8169%" y="741" width="0.1408%" height="15" fill="rgb(225,182,9)"/><text x="43.0669%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="42.8169%" y="725" width="0.1408%" height="15" fill="rgb(243,178,37)"/><text x="43.0669%" y="735.50"></text></g><g><title>__libc_close (1 samples, 0.14%)</title><rect x="42.8169%" y="709" width="0.1408%" height="15" fill="rgb(232,139,19)"/><text x="43.0669%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="42.8169%" y="693" width="0.1408%" height="15" fill="rgb(225,201,24)"/><text x="43.0669%" y="703.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="42.8169%" y="677" width="0.1408%" height="15" fill="rgb(221,47,46)"/><text x="43.0669%" y="687.50"></text></g><g><title>task_work_run (1 samples, 0.14%)</title><rect x="42.8169%" y="661" width="0.1408%" height="15" fill="rgb(249,23,13)"/><text x="43.0669%" y="671.50"></text></g><g><title>__fput (1 samples, 0.14%)</title><rect x="42.8169%" y="645" width="0.1408%" height="15" fill="rgb(219,9,5)"/><text x="43.0669%" y="655.50"></text></g><g><title>sock_close (1 samples, 0.14%)</title><rect x="42.8169%" y="629" width="0.1408%" height="15" fill="rgb(254,171,16)"/><text x="43.0669%" y="639.50"></text></g><g><title>__sock_release (1 samples, 0.14%)</title><rect x="42.8169%" y="613" width="0.1408%" height="15" fill="rgb(230,171,20)"/><text x="43.0669%" y="623.50"></text></g><g><title>inet_release (1 samples, 0.14%)</title><rect x="42.8169%" y="597" width="0.1408%" height="15" fill="rgb(210,71,41)"/><text x="43.0669%" y="607.50"></text></g><g><title>tcp_close (1 samples, 0.14%)</title><rect x="42.8169%" y="581" width="0.1408%" height="15" fill="rgb(206,173,20)"/><text x="43.0669%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="42.8169%" y="565" width="0.1408%" height="15" fill="rgb(233,88,34)"/><text x="43.0669%" y="575.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="42.8169%" y="549" width="0.1408%" height="15" fill="rgb(223,209,46)"/><text x="43.0669%" y="559.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="42.8169%" y="533" width="0.1408%" height="15" fill="rgb(250,43,18)"/><text x="43.0669%" y="543.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="42.8169%" y="517" width="0.1408%" height="15" fill="rgb(208,13,10)"/><text x="43.0669%" y="527.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="42.8169%" y="501" width="0.1408%" height="15" fill="rgb(212,200,36)"/><text x="43.0669%" y="511.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="42.8169%" y="485" width="0.1408%" height="15" fill="rgb(225,90,30)"/><text x="43.0669%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="42.8169%" y="469" width="0.1408%" height="15" fill="rgb(236,182,39)"/><text x="43.0669%" y="479.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="42.8169%" y="453" width="0.1408%" height="15" fill="rgb(212,144,35)"/><text x="43.0669%" y="463.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="42.8169%" y="437" width="0.1408%" height="15" fill="rgb(228,63,44)"/><text x="43.0669%" y="447.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="42.8169%" y="421" width="0.1408%" height="15" fill="rgb(228,109,6)"/><text x="43.0669%" y="431.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="42.8169%" y="405" width="0.1408%" height="15" fill="rgb(238,117,24)"/><text x="43.0669%" y="415.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="42.8169%" y="389" width="0.1408%" height="15" fill="rgb(242,26,26)"/><text x="43.0669%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="42.8169%" y="373" width="0.1408%" height="15" fill="rgb(221,92,48)"/><text x="43.0669%" y="383.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="42.8169%" y="357" width="0.1408%" height="15" fill="rgb(209,209,32)"/><text x="43.0669%" y="367.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="42.8169%" y="341" width="0.1408%" height="15" fill="rgb(221,70,22)"/><text x="43.0669%" y="351.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="42.8169%" y="325" width="0.1408%" height="15" fill="rgb(248,145,5)"/><text x="43.0669%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="42.8169%" y="309" width="0.1408%" height="15" fill="rgb(226,116,26)"/><text x="43.0669%" y="319.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="42.8169%" y="293" width="0.1408%" height="15" fill="rgb(244,5,17)"/><text x="43.0669%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="42.8169%" y="277" width="0.1408%" height="15" fill="rgb(252,159,33)"/><text x="43.0669%" y="287.50"></text></g><g><title>tcp_rcv_state_process (1 samples, 0.14%)</title><rect x="42.8169%" y="261" width="0.1408%" height="15" fill="rgb(206,71,0)"/><text x="43.0669%" y="271.50"></text></g><g><title>tcp_data_queue (1 samples, 0.14%)</title><rect x="42.8169%" y="245" width="0.1408%" height="15" fill="rgb(233,118,54)"/><text x="43.0669%" y="255.50"></text></g><g><title>tcp_fin (1 samples, 0.14%)</title><rect x="42.8169%" y="229" width="0.1408%" height="15" fill="rgb(234,83,48)"/><text x="43.0669%" y="239.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="42.8169%" y="213" width="0.1408%" height="15" fill="rgb(228,3,54)"/><text x="43.0669%" y="223.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="42.8169%" y="197" width="0.1408%" height="15" fill="rgb(226,155,13)"/><text x="43.0669%" y="207.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.14%)</title><rect x="42.9577%" y="773" width="0.1408%" height="15" fill="rgb(241,28,37)"/><text x="43.2077%" y="783.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.14%)</title><rect x="42.9577%" y="757" width="0.1408%" height="15" fill="rgb(233,93,10)"/><text x="43.2077%" y="767.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="43.2394%" y="549" width="0.1408%" height="15" fill="rgb(225,113,19)"/><text x="43.4894%" y="559.50"></text></g><g><title>dst_release (3 samples, 0.42%)</title><rect x="43.3803%" y="533" width="0.4225%" height="15" fill="rgb(241,2,18)"/><text x="43.6303%" y="543.50"></text></g><g><title>__kfree_skb (5 samples, 0.70%)</title><rect x="43.2394%" y="565" width="0.7042%" height="15" fill="rgb(228,207,21)"/><text x="43.4894%" y="575.50"></text></g><g><title>skb_release_head_state (4 samples, 0.56%)</title><rect x="43.3803%" y="549" width="0.5634%" height="15" fill="rgb(213,211,35)"/><text x="43.6303%" y="559.50"></text></g><g><title>sock_rfree (1 samples, 0.14%)</title><rect x="43.8028%" y="533" width="0.1408%" height="15" fill="rgb(209,83,10)"/><text x="44.0528%" y="543.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="44.0845%" y="501" width="0.1408%" height="15" fill="rgb(209,164,1)"/><text x="44.3345%" y="511.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="44.0845%" y="485" width="0.1408%" height="15" fill="rgb(213,184,43)"/><text x="44.3345%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="44.0845%" y="469" width="0.1408%" height="15" fill="rgb(231,61,34)"/><text x="44.3345%" y="479.50"></text></g><g><title>netif_rx (1 samples, 0.14%)</title><rect x="44.0845%" y="453" width="0.1408%" height="15" fill="rgb(235,75,3)"/><text x="44.3345%" y="463.50"></text></g><g><title>netif_rx_internal (1 samples, 0.14%)</title><rect x="44.0845%" y="437" width="0.1408%" height="15" fill="rgb(220,106,47)"/><text x="44.3345%" y="447.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.14%)</title><rect x="44.0845%" y="421" width="0.1408%" height="15" fill="rgb(210,196,33)"/><text x="44.3345%" y="431.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="44.2254%" y="437" width="0.1408%" height="15" fill="rgb(229,154,42)"/><text x="44.4754%" y="447.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.56%)</title><rect x="43.9437%" y="565" width="0.5634%" height="15" fill="rgb(228,114,26)"/><text x="44.1937%" y="575.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.42%)</title><rect x="44.0845%" y="549" width="0.4225%" height="15" fill="rgb(208,144,1)"/><text x="44.3345%" y="559.50"></text></g><g><title>ip_output (3 samples, 0.42%)</title><rect x="44.0845%" y="533" width="0.4225%" height="15" fill="rgb(239,112,37)"/><text x="44.3345%" y="543.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.42%)</title><rect x="44.0845%" y="517" width="0.4225%" height="15" fill="rgb(210,96,50)"/><text x="44.3345%" y="527.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.28%)</title><rect x="44.2254%" y="501" width="0.2817%" height="15" fill="rgb(222,178,2)"/><text x="44.4754%" y="511.50"></text></g><g><title>do_softirq (2 samples, 0.28%)</title><rect x="44.2254%" y="485" width="0.2817%" height="15" fill="rgb(226,74,18)"/><text x="44.4754%" y="495.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.28%)</title><rect x="44.2254%" y="469" width="0.2817%" height="15" fill="rgb(225,67,54)"/><text x="44.4754%" y="479.50"></text></g><g><title>__do_softirq (2 samples, 0.28%)</title><rect x="44.2254%" y="453" width="0.2817%" height="15" fill="rgb(251,92,32)"/><text x="44.4754%" y="463.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="44.3662%" y="437" width="0.1408%" height="15" fill="rgb(228,149,22)"/><text x="44.6162%" y="447.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="44.3662%" y="421" width="0.1408%" height="15" fill="rgb(243,54,13)"/><text x="44.6162%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="44.3662%" y="405" width="0.1408%" height="15" fill="rgb(243,180,28)"/><text x="44.6162%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="44.3662%" y="389" width="0.1408%" height="15" fill="rgb(208,167,24)"/><text x="44.6162%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="44.3662%" y="373" width="0.1408%" height="15" fill="rgb(245,73,45)"/><text x="44.6162%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="44.3662%" y="357" width="0.1408%" height="15" fill="rgb(237,203,48)"/><text x="44.6162%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="44.3662%" y="341" width="0.1408%" height="15" fill="rgb(211,197,16)"/><text x="44.6162%" y="351.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="44.3662%" y="325" width="0.1408%" height="15" fill="rgb(243,99,51)"/><text x="44.6162%" y="335.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="44.3662%" y="309" width="0.1408%" height="15" fill="rgb(215,123,29)"/><text x="44.6162%" y="319.50"></text></g><g><title>ns_to_timespec64 (2 samples, 0.28%)</title><rect x="44.5070%" y="565" width="0.2817%" height="15" fill="rgb(239,186,37)"/><text x="44.7570%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="44.9296%" y="549" width="0.1408%" height="15" fill="rgb(252,136,39)"/><text x="45.1796%" y="559.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="45.0704%" y="549" width="0.1408%" height="15" fill="rgb(223,213,32)"/><text x="45.3204%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="45.0704%" y="533" width="0.1408%" height="15" fill="rgb(233,115,5)"/><text x="45.3204%" y="543.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="45.2113%" y="549" width="0.1408%" height="15" fill="rgb(207,226,44)"/><text x="45.4613%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="45.2113%" y="533" width="0.1408%" height="15" fill="rgb(208,126,0)"/><text x="45.4613%" y="543.50"></text></g><g><title>add_wait_queue (1 samples, 0.14%)</title><rect x="45.3521%" y="549" width="0.1408%" height="15" fill="rgb(244,66,21)"/><text x="45.6021%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="45.3521%" y="533" width="0.1408%" height="15" fill="rgb(222,97,12)"/><text x="45.6021%" y="543.50"></text></g><g><title>remove_wait_queue (1 samples, 0.14%)</title><rect x="45.4930%" y="549" width="0.1408%" height="15" fill="rgb(219,213,19)"/><text x="45.7430%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="45.4930%" y="533" width="0.1408%" height="15" fill="rgb(252,169,30)"/><text x="45.7430%" y="543.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.14%)</title><rect x="45.9155%" y="485" width="0.1408%" height="15" fill="rgb(206,32,51)"/><text x="46.1655%" y="495.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="45.9155%" y="469" width="0.1408%" height="15" fill="rgb(250,172,42)"/><text x="46.1655%" y="479.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="46.0563%" y="485" width="0.1408%" height="15" fill="rgb(209,34,43)"/><text x="46.3063%" y="495.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.14%)</title><rect x="46.3380%" y="453" width="0.1408%" height="15" fill="rgb(223,11,35)"/><text x="46.5880%" y="463.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.42%)</title><rect x="46.1972%" y="485" width="0.4225%" height="15" fill="rgb(251,219,26)"/><text x="46.4472%" y="495.50"></text></g><g><title>dequeue_entity (2 samples, 0.28%)</title><rect x="46.3380%" y="469" width="0.2817%" height="15" fill="rgb(231,119,3)"/><text x="46.5880%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="46.4789%" y="453" width="0.1408%" height="15" fill="rgb(216,97,11)"/><text x="46.7289%" y="463.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.14%)</title><rect x="46.4789%" y="437" width="0.1408%" height="15" fill="rgb(223,59,9)"/><text x="46.7289%" y="447.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.14%)</title><rect x="46.4789%" y="421" width="0.1408%" height="15" fill="rgb(233,93,31)"/><text x="46.7289%" y="431.50"></text></g><g><title>finish_task_switch (3 samples, 0.42%)</title><rect x="46.6197%" y="485" width="0.4225%" height="15" fill="rgb(239,81,33)"/><text x="46.8697%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (3 samples, 0.42%)</title><rect x="46.6197%" y="469" width="0.4225%" height="15" fill="rgb(213,120,34)"/><text x="46.8697%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (3 samples, 0.42%)</title><rect x="46.6197%" y="453" width="0.4225%" height="15" fill="rgb(243,49,53)"/><text x="46.8697%" y="463.50"></text></g><g><title>native_write_msr (3 samples, 0.42%)</title><rect x="46.6197%" y="437" width="0.4225%" height="15" fill="rgb(247,216,33)"/><text x="46.8697%" y="447.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.14%)</title><rect x="47.0423%" y="485" width="0.1408%" height="15" fill="rgb(226,26,14)"/><text x="47.2923%" y="495.50"></text></g><g><title>newidle_balance (1 samples, 0.14%)</title><rect x="47.0423%" y="469" width="0.1408%" height="15" fill="rgb(215,49,53)"/><text x="47.2923%" y="479.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.14%)</title><rect x="47.0423%" y="453" width="0.1408%" height="15" fill="rgb(245,162,40)"/><text x="47.2923%" y="463.50"></text></g><g><title>psi_task_change (3 samples, 0.42%)</title><rect x="47.1831%" y="485" width="0.4225%" height="15" fill="rgb(229,68,17)"/><text x="47.4331%" y="495.50"></text></g><g><title>psi_group_change (2 samples, 0.28%)</title><rect x="47.3239%" y="469" width="0.2817%" height="15" fill="rgb(213,182,10)"/><text x="47.5739%" y="479.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="47.4648%" y="453" width="0.1408%" height="15" fill="rgb(245,125,30)"/><text x="47.7148%" y="463.50"></text></g><g><title>psi_task_switch (1 samples, 0.14%)</title><rect x="47.6056%" y="485" width="0.1408%" height="15" fill="rgb(232,202,2)"/><text x="47.8556%" y="495.50"></text></g><g><title>sk_wait_data (23 samples, 3.24%)</title><rect x="44.7887%" y="565" width="3.2394%" height="15" fill="rgb(237,140,51)"/><text x="45.0387%" y="575.50">sk_..</text></g><g><title>wait_woken (17 samples, 2.39%)</title><rect x="45.6338%" y="549" width="2.3944%" height="15" fill="rgb(236,157,25)"/><text x="45.8838%" y="559.50">wa..</text></g><g><title>schedule_timeout (16 samples, 2.25%)</title><rect x="45.7746%" y="533" width="2.2535%" height="15" fill="rgb(219,209,0)"/><text x="46.0246%" y="543.50">s..</text></g><g><title>schedule (16 samples, 2.25%)</title><rect x="45.7746%" y="517" width="2.2535%" height="15" fill="rgb(240,116,54)"/><text x="46.0246%" y="527.50">s..</text></g><g><title>__schedule (16 samples, 2.25%)</title><rect x="45.7746%" y="501" width="2.2535%" height="15" fill="rgb(216,10,36)"/><text x="46.0246%" y="511.50">_..</text></g><g><title>uclamp_rq_dec_id (2 samples, 0.28%)</title><rect x="47.7465%" y="485" width="0.2817%" height="15" fill="rgb(222,72,44)"/><text x="47.9965%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.14%)</title><rect x="48.0282%" y="565" width="0.1408%" height="15" fill="rgb(232,159,9)"/><text x="48.2782%" y="575.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.14%)</title><rect x="48.0282%" y="549" width="0.1408%" height="15" fill="rgb(210,39,32)"/><text x="48.2782%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (37 samples, 5.21%)</title><rect x="43.2394%" y="629" width="5.2113%" height="15" fill="rgb(216,194,45)"/><text x="43.4894%" y="639.50">__x64_..</text></g><g><title>__sys_recvfrom (37 samples, 5.21%)</title><rect x="43.2394%" y="613" width="5.2113%" height="15" fill="rgb(218,18,35)"/><text x="43.4894%" y="623.50">__sys_..</text></g><g><title>inet_recvmsg (37 samples, 5.21%)</title><rect x="43.2394%" y="597" width="5.2113%" height="15" fill="rgb(207,83,51)"/><text x="43.4894%" y="607.50">inet_r..</text></g><g><title>tcp_recvmsg (37 samples, 5.21%)</title><rect x="43.2394%" y="581" width="5.2113%" height="15" fill="rgb(225,63,43)"/><text x="43.4894%" y="591.50">tcp_re..</text></g><g><title>tcp_rcv_space_adjust (2 samples, 0.28%)</title><rect x="48.1690%" y="565" width="0.2817%" height="15" fill="rgb(207,57,36)"/><text x="48.4190%" y="575.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.28%)</title><rect x="48.1690%" y="549" width="0.2817%" height="15" fill="rgb(216,99,33)"/><text x="48.4190%" y="559.50"></text></g><g><title>ktime_get (1 samples, 0.14%)</title><rect x="48.3099%" y="533" width="0.1408%" height="15" fill="rgb(225,42,16)"/><text x="48.5599%" y="543.50"></text></g><g><title>read_tsc (1 samples, 0.14%)</title><rect x="48.3099%" y="517" width="0.1408%" height="15" fill="rgb(220,201,45)"/><text x="48.5599%" y="527.50"></text></g><g><title>do_syscall_64 (38 samples, 5.35%)</title><rect x="43.2394%" y="645" width="5.3521%" height="15" fill="rgb(225,33,4)"/><text x="43.4894%" y="655.50">do_sysc..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="48.4507%" y="629" width="0.1408%" height="15" fill="rgb(224,33,50)"/><text x="48.7007%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (49 samples, 6.90%)</title><rect x="43.0986%" y="741" width="6.9014%" height="15" fill="rgb(246,198,51)"/><text x="43.3486%" y="751.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (49 samples, 6.90%)</title><rect x="43.0986%" y="725" width="6.9014%" height="15" fill="rgb(205,22,4)"/><text x="43.3486%" y="735.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (49 samples, 6.90%)</title><rect x="43.0986%" y="709" width="6.9014%" height="15" fill="rgb(206,3,8)"/><text x="43.3486%" y="719.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (49 samples, 6.90%)</title><rect x="43.0986%" y="693" width="6.9014%" height="15" fill="rgb(251,23,15)"/><text x="43.3486%" y="703.50">std::sys:..</text></g><g><title>__libc_recv (49 samples, 6.90%)</title><rect x="43.0986%" y="677" width="6.9014%" height="15" fill="rgb(252,88,28)"/><text x="43.3486%" y="687.50">__libc_re..</text></g><g><title>entry_SYSCALL_64 (49 samples, 6.90%)</title><rect x="43.0986%" y="661" width="6.9014%" height="15" fill="rgb(212,127,14)"/><text x="43.3486%" y="671.50">entry_SYS..</text></g><g><title>prepare_exit_to_usermode (10 samples, 1.41%)</title><rect x="48.5915%" y="645" width="1.4085%" height="15" fill="rgb(247,145,37)"/><text x="48.8415%" y="655.50"></text></g><g><title>switch_fpu_return (1 samples, 0.14%)</title><rect x="49.8592%" y="629" width="0.1408%" height="15" fill="rgb(209,117,53)"/><text x="50.1092%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (50 samples, 7.04%)</title><rect x="43.0986%" y="757" width="7.0423%" height="15" fill="rgb(212,90,42)"/><text x="43.3486%" y="767.50">&lt;std::io:..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="50.0000%" y="741" width="0.1408%" height="15" fill="rgb(218,164,37)"/><text x="50.2500%" y="751.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (51 samples, 7.18%)</title><rect x="43.0986%" y="773" width="7.1831%" height="15" fill="rgb(246,65,34)"/><text x="43.3486%" y="783.50">msql_srv::..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.14%)</title><rect x="50.1408%" y="757" width="0.1408%" height="15" fill="rgb(231,100,33)"/><text x="50.3908%" y="767.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="50.4225%" y="709" width="0.1408%" height="15" fill="rgb(228,126,14)"/><text x="50.6725%" y="719.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="50.5634%" y="709" width="0.1408%" height="15" fill="rgb(215,173,21)"/><text x="50.8134%" y="719.50"></text></g><g><title>__release_sock (1 samples, 0.14%)</title><rect x="51.1268%" y="597" width="0.1408%" height="15" fill="rgb(210,6,40)"/><text x="51.3768%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="51.1268%" y="581" width="0.1408%" height="15" fill="rgb(212,48,18)"/><text x="51.3768%" y="591.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="51.1268%" y="565" width="0.1408%" height="15" fill="rgb(230,214,11)"/><text x="51.3768%" y="575.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="51.1268%" y="549" width="0.1408%" height="15" fill="rgb(254,105,39)"/><text x="51.3768%" y="559.50"></text></g><g><title>release_sock (2 samples, 0.28%)</title><rect x="51.1268%" y="613" width="0.2817%" height="15" fill="rgb(245,158,5)"/><text x="51.3768%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="51.2676%" y="597" width="0.1408%" height="15" fill="rgb(249,208,11)"/><text x="51.5176%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="51.2676%" y="581" width="0.1408%" height="15" fill="rgb(210,39,28)"/><text x="51.5176%" y="591.50"></text></g><g><title>__sk_dst_check (1 samples, 0.14%)</title><rect x="52.1127%" y="533" width="0.1408%" height="15" fill="rgb(211,56,53)"/><text x="52.3627%" y="543.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.14%)</title><rect x="52.1127%" y="517" width="0.1408%" height="15" fill="rgb(226,201,30)"/><text x="52.3627%" y="527.50"></text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="52.3944%" y="517" width="0.1408%" height="15" fill="rgb(239,101,34)"/><text x="52.6444%" y="527.50"></text></g><g><title>eth_type_trans (1 samples, 0.14%)</title><rect x="52.8169%" y="453" width="0.1408%" height="15" fill="rgb(226,209,5)"/><text x="53.0669%" y="463.50"></text></g><g><title>netif_rx (1 samples, 0.14%)</title><rect x="52.9577%" y="453" width="0.1408%" height="15" fill="rgb(250,105,47)"/><text x="53.2077%" y="463.50"></text></g><g><title>netif_rx_internal (1 samples, 0.14%)</title><rect x="52.9577%" y="437" width="0.1408%" height="15" fill="rgb(230,72,3)"/><text x="53.2077%" y="447.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="52.9577%" y="421" width="0.1408%" height="15" fill="rgb(232,218,39)"/><text x="53.2077%" y="431.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.42%)</title><rect x="52.8169%" y="485" width="0.4225%" height="15" fill="rgb(248,166,6)"/><text x="53.0669%" y="495.50"></text></g><g><title>loopback_xmit (3 samples, 0.42%)</title><rect x="52.8169%" y="469" width="0.4225%" height="15" fill="rgb(247,89,20)"/><text x="53.0669%" y="479.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.14%)</title><rect x="53.0986%" y="453" width="0.1408%" height="15" fill="rgb(248,130,54)"/><text x="53.3486%" y="463.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.70%)</title><rect x="52.6761%" y="501" width="0.7042%" height="15" fill="rgb(234,196,4)"/><text x="52.9261%" y="511.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="53.2394%" y="485" width="0.1408%" height="15" fill="rgb(250,143,31)"/><text x="53.4894%" y="495.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.14%)</title><rect x="54.2254%" y="389" width="0.1408%" height="15" fill="rgb(211,110,34)"/><text x="54.4754%" y="399.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="54.7887%" y="309" width="0.1408%" height="15" fill="rgb(215,124,48)"/><text x="55.0387%" y="319.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="54.9296%" y="309" width="0.1408%" height="15" fill="rgb(216,46,13)"/><text x="55.1796%" y="319.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="54.9296%" y="293" width="0.1408%" height="15" fill="rgb(205,184,25)"/><text x="55.1796%" y="303.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.28%)</title><rect x="55.4930%" y="213" width="0.2817%" height="15" fill="rgb(228,1,10)"/><text x="55.7430%" y="223.50"></text></g><g><title>update_cfs_group (1 samples, 0.14%)</title><rect x="56.1972%" y="181" width="0.1408%" height="15" fill="rgb(213,116,27)"/><text x="56.4472%" y="191.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.99%)</title><rect x="55.7746%" y="213" width="0.9859%" height="15" fill="rgb(241,95,50)"/><text x="56.0246%" y="223.50"></text></g><g><title>enqueue_entity (6 samples, 0.85%)</title><rect x="55.9155%" y="197" width="0.8451%" height="15" fill="rgb(238,48,32)"/><text x="56.1655%" y="207.50"></text></g><g><title>update_load_avg (3 samples, 0.42%)</title><rect x="56.3380%" y="181" width="0.4225%" height="15" fill="rgb(235,113,49)"/><text x="56.5880%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.28%)</title><rect x="56.4789%" y="165" width="0.2817%" height="15" fill="rgb(205,127,43)"/><text x="56.7289%" y="175.50"></text></g><g><title>find_first_bit (1 samples, 0.14%)</title><rect x="56.7606%" y="213" width="0.1408%" height="15" fill="rgb(250,162,2)"/><text x="57.0106%" y="223.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.28%)</title><rect x="56.9014%" y="213" width="0.2817%" height="15" fill="rgb(220,13,41)"/><text x="57.1514%" y="223.50"></text></g><g><title>check_preempt_curr (1 samples, 0.14%)</title><rect x="57.0423%" y="197" width="0.1408%" height="15" fill="rgb(249,221,25)"/><text x="57.2923%" y="207.50"></text></g><g><title>resched_curr (1 samples, 0.14%)</title><rect x="57.0423%" y="181" width="0.1408%" height="15" fill="rgb(215,208,19)"/><text x="57.2923%" y="191.50"></text></g><g><title>sock_def_readable (18 samples, 2.54%)</title><rect x="55.2113%" y="277" width="2.5352%" height="15" fill="rgb(236,175,2)"/><text x="55.4613%" y="287.50">so..</text></g><g><title>__wake_up_common_lock (16 samples, 2.25%)</title><rect x="55.4930%" y="261" width="2.2535%" height="15" fill="rgb(241,52,2)"/><text x="55.7430%" y="271.50">_..</text></g><g><title>__wake_up_common (16 samples, 2.25%)</title><rect x="55.4930%" y="245" width="2.2535%" height="15" fill="rgb(248,140,14)"/><text x="55.7430%" y="255.50">_..</text></g><g><title>try_to_wake_up (16 samples, 2.25%)</title><rect x="55.4930%" y="229" width="2.2535%" height="15" fill="rgb(253,22,42)"/><text x="55.7430%" y="239.50">t..</text></g><g><title>update_rq_clock (4 samples, 0.56%)</title><rect x="57.1831%" y="213" width="0.5634%" height="15" fill="rgb(234,61,47)"/><text x="57.4331%" y="223.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="58.1690%" y="261" width="0.1408%" height="15" fill="rgb(208,226,15)"/><text x="58.4190%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="58.1690%" y="245" width="0.1408%" height="15" fill="rgb(217,221,4)"/><text x="58.4190%" y="255.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="58.3099%" y="261" width="0.1408%" height="15" fill="rgb(212,174,34)"/><text x="58.5599%" y="271.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.14%)</title><rect x="58.3099%" y="245" width="0.1408%" height="15" fill="rgb(253,83,4)"/><text x="58.5599%" y="255.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.14%)</title><rect x="58.4507%" y="261" width="0.1408%" height="15" fill="rgb(250,195,49)"/><text x="58.7007%" y="271.50"></text></g><g><title>tcp_ack (7 samples, 0.99%)</title><rect x="57.7465%" y="277" width="0.9859%" height="15" fill="rgb(241,192,25)"/><text x="57.9965%" y="287.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="58.5915%" y="261" width="0.1408%" height="15" fill="rgb(208,124,10)"/><text x="58.8415%" y="271.50"></text></g><g><title>tcp_event_data_recv (2 samples, 0.28%)</title><rect x="58.7324%" y="277" width="0.2817%" height="15" fill="rgb(222,33,0)"/><text x="58.9824%" y="287.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="59.0141%" y="277" width="0.1408%" height="15" fill="rgb(234,209,28)"/><text x="59.2641%" y="287.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.14%)</title><rect x="59.1549%" y="277" width="0.1408%" height="15" fill="rgb(224,11,23)"/><text x="59.4049%" y="287.50"></text></g><g><title>net_rx_action (42 samples, 5.92%)</title><rect x="53.5211%" y="437" width="5.9155%" height="15" fill="rgb(232,99,1)"/><text x="53.7711%" y="447.50">net_rx_a..</text></g><g><title>process_backlog (40 samples, 5.63%)</title><rect x="53.8028%" y="421" width="5.6338%" height="15" fill="rgb(237,95,45)"/><text x="54.0528%" y="431.50">process..</text></g><g><title>__netif_receive_skb_one_core (39 samples, 5.49%)</title><rect x="53.9437%" y="405" width="5.4930%" height="15" fill="rgb(208,109,11)"/><text x="54.1937%" y="415.50">__netif..</text></g><g><title>ip_rcv (36 samples, 5.07%)</title><rect x="54.3662%" y="389" width="5.0704%" height="15" fill="rgb(216,190,48)"/><text x="54.6162%" y="399.50">ip_rcv</text></g><g><title>ip_local_deliver (36 samples, 5.07%)</title><rect x="54.3662%" y="373" width="5.0704%" height="15" fill="rgb(251,171,36)"/><text x="54.6162%" y="383.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (36 samples, 5.07%)</title><rect x="54.3662%" y="357" width="5.0704%" height="15" fill="rgb(230,62,22)"/><text x="54.6162%" y="367.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (36 samples, 5.07%)</title><rect x="54.3662%" y="341" width="5.0704%" height="15" fill="rgb(225,114,35)"/><text x="54.6162%" y="351.50">ip_pro..</text></g><g><title>tcp_v4_rcv (36 samples, 5.07%)</title><rect x="54.3662%" y="325" width="5.0704%" height="15" fill="rgb(215,118,42)"/><text x="54.6162%" y="335.50">tcp_v4..</text></g><g><title>tcp_v4_do_rcv (31 samples, 4.37%)</title><rect x="55.0704%" y="309" width="4.3662%" height="15" fill="rgb(243,119,21)"/><text x="55.3204%" y="319.50">tcp_v..</text></g><g><title>tcp_rcv_established (31 samples, 4.37%)</title><rect x="55.0704%" y="293" width="4.3662%" height="15" fill="rgb(252,177,53)"/><text x="55.3204%" y="303.50">tcp_r..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.14%)</title><rect x="59.2958%" y="277" width="0.1408%" height="15" fill="rgb(237,209,29)"/><text x="59.5458%" y="287.50"></text></g><g><title>__ip_queue_xmit (54 samples, 7.61%)</title><rect x="51.9718%" y="549" width="7.6056%" height="15" fill="rgb(212,65,23)"/><text x="52.2218%" y="559.50">__ip_queue..</text></g><g><title>ip_output (52 samples, 7.32%)</title><rect x="52.2535%" y="533" width="7.3239%" height="15" fill="rgb(230,222,46)"/><text x="52.5035%" y="543.50">ip_output</text></g><g><title>ip_finish_output2 (50 samples, 7.04%)</title><rect x="52.5352%" y="517" width="7.0423%" height="15" fill="rgb(215,135,32)"/><text x="52.7852%" y="527.50">ip_finish..</text></g><g><title>__local_bh_enable_ip (44 samples, 6.20%)</title><rect x="53.3803%" y="501" width="6.1972%" height="15" fill="rgb(246,101,22)"/><text x="53.6303%" y="511.50">__local_..</text></g><g><title>do_softirq (44 samples, 6.20%)</title><rect x="53.3803%" y="485" width="6.1972%" height="15" fill="rgb(206,107,13)"/><text x="53.6303%" y="495.50">do_softi..</text></g><g><title>do_softirq_own_stack (44 samples, 6.20%)</title><rect x="53.3803%" y="469" width="6.1972%" height="15" fill="rgb(250,100,44)"/><text x="53.6303%" y="479.50">do_softi..</text></g><g><title>__do_softirq (44 samples, 6.20%)</title><rect x="53.3803%" y="453" width="6.1972%" height="15" fill="rgb(231,147,38)"/><text x="53.6303%" y="463.50">__do_sof..</text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="59.4366%" y="437" width="0.1408%" height="15" fill="rgb(229,8,40)"/><text x="59.6866%" y="447.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.14%)</title><rect x="59.5775%" y="549" width="0.1408%" height="15" fill="rgb(221,135,30)"/><text x="59.8275%" y="559.50"></text></g><g><title>skb_clone (1 samples, 0.14%)</title><rect x="59.7183%" y="549" width="0.1408%" height="15" fill="rgb(249,193,18)"/><text x="59.9683%" y="559.50"></text></g><g><title>__copy_skb_header (1 samples, 0.14%)</title><rect x="59.7183%" y="533" width="0.1408%" height="15" fill="rgb(209,133,39)"/><text x="59.9683%" y="543.50"></text></g><g><title>__tcp_transmit_skb (58 samples, 8.17%)</title><rect x="51.8310%" y="565" width="8.1690%" height="15" fill="rgb(232,100,14)"/><text x="52.0810%" y="575.50">__tcp_trans..</text></g><g><title>tcp_established_options (1 samples, 0.14%)</title><rect x="59.8592%" y="549" width="0.1408%" height="15" fill="rgb(224,185,1)"/><text x="60.1092%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (60 samples, 8.45%)</title><rect x="51.6901%" y="597" width="8.4507%" height="15" fill="rgb(223,139,8)"/><text x="51.9401%" y="607.50">__tcp_push_p..</text></g><g><title>tcp_write_xmit (60 samples, 8.45%)</title><rect x="51.6901%" y="581" width="8.4507%" height="15" fill="rgb(232,213,38)"/><text x="51.9401%" y="591.50">tcp_write_xm..</text></g><g><title>ktime_get (1 samples, 0.14%)</title><rect x="60.0000%" y="565" width="0.1408%" height="15" fill="rgb(207,94,22)"/><text x="60.2500%" y="575.50"></text></g><g><title>read_tsc (1 samples, 0.14%)</title><rect x="60.0000%" y="549" width="0.1408%" height="15" fill="rgb(219,183,54)"/><text x="60.2500%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.28%)</title><rect x="60.2817%" y="565" width="0.2817%" height="15" fill="rgb(216,185,54)"/><text x="60.5317%" y="575.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="60.4225%" y="549" width="0.1408%" height="15" fill="rgb(254,217,39)"/><text x="60.6725%" y="559.50"></text></g><g><title>__ksize (3 samples, 0.42%)</title><rect x="60.5634%" y="565" width="0.4225%" height="15" fill="rgb(240,178,23)"/><text x="60.8134%" y="575.50"></text></g><g><title>sk_stream_alloc_skb (8 samples, 1.13%)</title><rect x="60.1408%" y="597" width="1.1268%" height="15" fill="rgb(218,11,47)"/><text x="60.3908%" y="607.50"></text></g><g><title>__alloc_skb (8 samples, 1.13%)</title><rect x="60.1408%" y="581" width="1.1268%" height="15" fill="rgb(218,51,51)"/><text x="60.3908%" y="591.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.28%)</title><rect x="60.9859%" y="565" width="0.2817%" height="15" fill="rgb(238,126,27)"/><text x="61.2359%" y="575.50"></text></g><g><title>should_failslab (1 samples, 0.14%)</title><rect x="61.1268%" y="549" width="0.1408%" height="15" fill="rgb(249,202,22)"/><text x="61.3768%" y="559.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="61.2676%" y="597" width="0.1408%" height="15" fill="rgb(254,195,49)"/><text x="61.5176%" y="607.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.14%)</title><rect x="61.2676%" y="581" width="0.1408%" height="15" fill="rgb(208,123,14)"/><text x="61.5176%" y="591.50"></text></g><g><title>sock_sendmsg (75 samples, 10.56%)</title><rect x="50.9859%" y="645" width="10.5634%" height="15" fill="rgb(224,200,8)"/><text x="51.2359%" y="655.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (74 samples, 10.42%)</title><rect x="51.1268%" y="629" width="10.4225%" height="15" fill="rgb(217,61,36)"/><text x="51.3768%" y="639.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (72 samples, 10.14%)</title><rect x="51.4085%" y="613" width="10.1408%" height="15" fill="rgb(206,35,45)"/><text x="51.6585%" y="623.50">tcp_sendmsg_loc..</text></g><g><title>tcp_send_mss (1 samples, 0.14%)</title><rect x="61.4085%" y="597" width="0.1408%" height="15" fill="rgb(217,65,33)"/><text x="61.6585%" y="607.50"></text></g><g><title>__x64_sys_sendto (77 samples, 10.85%)</title><rect x="50.9859%" y="677" width="10.8451%" height="15" fill="rgb(222,158,48)"/><text x="51.2359%" y="687.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (77 samples, 10.85%)</title><rect x="50.9859%" y="661" width="10.8451%" height="15" fill="rgb(254,2,54)"/><text x="51.2359%" y="671.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.28%)</title><rect x="61.5493%" y="645" width="0.2817%" height="15" fill="rgb(250,143,38)"/><text x="61.7993%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="61.6901%" y="629" width="0.1408%" height="15" fill="rgb(248,25,0)"/><text x="61.9401%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="61.6901%" y="613" width="0.1408%" height="15" fill="rgb(206,152,27)"/><text x="61.9401%" y="623.50"></text></g><g><title>do_syscall_64 (79 samples, 11.13%)</title><rect x="50.8451%" y="693" width="11.1268%" height="15" fill="rgb(240,77,30)"/><text x="51.0951%" y="703.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="61.8310%" y="677" width="0.1408%" height="15" fill="rgb(231,5,3)"/><text x="62.0810%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="61.8310%" y="661" width="0.1408%" height="15" fill="rgb(207,226,32)"/><text x="62.0810%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (83 samples, 11.69%)</title><rect x="50.7042%" y="709" width="11.6901%" height="15" fill="rgb(222,207,47)"/><text x="50.9542%" y="719.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.42%)</title><rect x="61.9718%" y="693" width="0.4225%" height="15" fill="rgb(229,115,45)"/><text x="62.2218%" y="703.50"></text></g><g><title>decor::Shim::run_on_tcp (255 samples, 35.92%)</title><rect x="26.6197%" y="805" width="35.9155%" height="15" fill="rgb(224,191,6)"/><text x="26.8697%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (254 samples, 35.77%)</title><rect x="26.7606%" y="789" width="35.7746%" height="15" fill="rgb(230,227,24)"/><text x="27.0106%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (87 samples, 12.25%)</title><rect x="50.2817%" y="773" width="12.2535%" height="15" fill="rgb(228,80,19)"/><text x="50.5317%" y="783.50">std::io::buffered:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (87 samples, 12.25%)</title><rect x="50.2817%" y="757" width="12.2535%" height="15" fill="rgb(247,229,0)"/><text x="50.5317%" y="767.50">&lt;std::net::tcp::Tc..</text></g><g><title>std::sys_common::net::TcpStream::write (87 samples, 12.25%)</title><rect x="50.2817%" y="741" width="12.2535%" height="15" fill="rgb(237,194,15)"/><text x="50.5317%" y="751.50">std::sys_common::n..</text></g><g><title>__libc_send (87 samples, 12.25%)</title><rect x="50.2817%" y="725" width="12.2535%" height="15" fill="rgb(219,203,20)"/><text x="50.5317%" y="735.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="62.3944%" y="709" width="0.1408%" height="15" fill="rgb(234,128,8)"/><text x="62.6444%" y="719.50"></text></g><g><title>__GI___clone (256 samples, 36.06%)</title><rect x="26.6197%" y="917" width="36.0563%" height="15" fill="rgb(248,202,8)"/><text x="26.8697%" y="927.50">__GI___clone</text></g><g><title>start_thread (256 samples, 36.06%)</title><rect x="26.6197%" y="901" width="36.0563%" height="15" fill="rgb(206,104,37)"/><text x="26.8697%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (256 samples, 36.06%)</title><rect x="26.6197%" y="885" width="36.0563%" height="15" fill="rgb(223,8,27)"/><text x="26.8697%" y="895.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (256 samples, 36.06%)</title><rect x="26.6197%" y="869" width="36.0563%" height="15" fill="rgb(216,217,28)"/><text x="26.8697%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (256 samples, 36.06%)</title><rect x="26.6197%" y="853" width="36.0563%" height="15" fill="rgb(249,199,1)"/><text x="26.8697%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (256 samples, 36.06%)</title><rect x="26.6197%" y="837" width="36.0563%" height="15" fill="rgb(240,85,17)"/><text x="26.8697%" y="847.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (256 samples, 36.06%)</title><rect x="26.6197%" y="821" width="36.0563%" height="15" fill="rgb(206,108,45)"/><text x="26.8697%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.14%)</title><rect x="62.5352%" y="805" width="0.1408%" height="15" fill="rgb(245,210,41)"/><text x="62.7852%" y="815.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.14%)</title><rect x="62.5352%" y="789" width="0.1408%" height="15" fill="rgb(206,13,37)"/><text x="62.7852%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="62.5352%" y="773" width="0.1408%" height="15" fill="rgb(250,61,18)"/><text x="62.7852%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="62.5352%" y="757" width="0.1408%" height="15" fill="rgb(235,172,48)"/><text x="62.7852%" y="767.50"></text></g><g><title>__GI_exit (1 samples, 0.14%)</title><rect x="62.6761%" y="885" width="0.1408%" height="15" fill="rgb(249,201,17)"/><text x="62.9261%" y="895.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.14%)</title><rect x="62.6761%" y="869" width="0.1408%" height="15" fill="rgb(219,208,6)"/><text x="62.9261%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="62.9577%" y="693" width="0.1408%" height="15" fill="rgb(248,31,23)"/><text x="63.2077%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="62.9577%" y="677" width="0.1408%" height="15" fill="rgb(245,15,42)"/><text x="63.2077%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.14%)</title><rect x="62.9577%" y="661" width="0.1408%" height="15" fill="rgb(222,217,39)"/><text x="63.2077%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="62.9577%" y="645" width="0.1408%" height="15" fill="rgb(210,219,27)"/><text x="63.2077%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="62.9577%" y="629" width="0.1408%" height="15" fill="rgb(252,166,36)"/><text x="63.2077%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.14%)</title><rect x="62.9577%" y="613" width="0.1408%" height="15" fill="rgb(245,132,34)"/><text x="63.2077%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.14%)</title><rect x="62.9577%" y="597" width="0.1408%" height="15" fill="rgb(236,54,3)"/><text x="63.2077%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="62.9577%" y="581" width="0.1408%" height="15" fill="rgb(241,173,43)"/><text x="63.2077%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.14%)</title><rect x="62.9577%" y="565" width="0.1408%" height="15" fill="rgb(215,190,9)"/><text x="63.2077%" y="575.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.28%)</title><rect x="62.9577%" y="741" width="0.2817%" height="15" fill="rgb(242,101,16)"/><text x="63.2077%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.28%)</title><rect x="62.9577%" y="725" width="0.2817%" height="15" fill="rgb(223,190,21)"/><text x="63.2077%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.28%)</title><rect x="62.9577%" y="709" width="0.2817%" height="15" fill="rgb(215,228,25)"/><text x="63.2077%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.14%)</title><rect x="63.0986%" y="693" width="0.1408%" height="15" fill="rgb(225,36,22)"/><text x="63.3486%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.14%)</title><rect x="63.0986%" y="677" width="0.1408%" height="15" fill="rgb(251,106,46)"/><text x="63.3486%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="63.0986%" y="661" width="0.1408%" height="15" fill="rgb(208,90,1)"/><text x="63.3486%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.42%)</title><rect x="63.3803%" y="661" width="0.4225%" height="15" fill="rgb(243,10,4)"/><text x="63.6303%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.28%)</title><rect x="63.5211%" y="645" width="0.2817%" height="15" fill="rgb(212,137,27)"/><text x="63.7711%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="63.8028%" y="645" width="0.2817%" height="15" fill="rgb(231,220,49)"/><text x="64.0528%" y="655.50"></text></g><g><title>cpu_stop_queue_work (232 samples, 32.68%)</title><rect x="64.2254%" y="533" width="32.6761%" height="15" fill="rgb(237,96,20)"/><text x="64.4754%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (232 samples, 32.68%)</title><rect x="64.2254%" y="517" width="32.6761%" height="15" fill="rgb(239,229,30)"/><text x="64.4754%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (232 samples, 32.68%)</title><rect x="64.2254%" y="501" width="32.6761%" height="15" fill="rgb(219,65,33)"/><text x="64.4754%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (232 samples, 32.68%)</title><rect x="64.2254%" y="485" width="32.6761%" height="15" fill="rgb(243,134,7)"/><text x="64.4754%" y="495.50">__schedule</text></g><g><title>finish_task_switch (232 samples, 32.68%)</title><rect x="64.2254%" y="469" width="32.6761%" height="15" fill="rgb(216,177,54)"/><text x="64.4754%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (230 samples, 32.39%)</title><rect x="64.5070%" y="453" width="32.3944%" height="15" fill="rgb(211,160,20)"/><text x="64.7570%" y="463.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (229 samples, 32.25%)</title><rect x="64.6479%" y="437" width="32.2535%" height="15" fill="rgb(239,85,39)"/><text x="64.8979%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (229 samples, 32.25%)</title><rect x="64.6479%" y="421" width="32.2535%" height="15" fill="rgb(232,125,22)"/><text x="64.8979%" y="431.50">native_write_msr</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 32.96%)</title><rect x="64.2254%" y="565" width="32.9577%" height="15" fill="rgb(244,57,34)"/><text x="64.4754%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 32.96%)</title><rect x="64.2254%" y="549" width="32.9577%" height="15" fill="rgb(214,203,32)"/><text x="64.4754%" y="559.50">stop_one_cpu</text></g><g><title>wait_for_completion (2 samples, 0.28%)</title><rect x="96.9014%" y="533" width="0.2817%" height="15" fill="rgb(207,58,43)"/><text x="97.1514%" y="543.50"></text></g><g><title>_raw_spin_lock_irq (2 samples, 0.28%)</title><rect x="96.9014%" y="517" width="0.2817%" height="15" fill="rgb(215,193,15)"/><text x="97.1514%" y="527.50"></text></g><g><title>hwloc::Topology::new (242 samples, 34.08%)</title><rect x="63.2394%" y="741" width="34.0845%" height="15" fill="rgb(232,15,44)"/><text x="63.4894%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 34.08%)</title><rect x="63.2394%" y="725" width="34.0845%" height="15" fill="rgb(212,3,48)"/><text x="63.4894%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 34.08%)</title><rect x="63.2394%" y="709" width="34.0845%" height="15" fill="rgb(218,128,7)"/><text x="63.4894%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 34.08%)</title><rect x="63.2394%" y="693" width="34.0845%" height="15" fill="rgb(226,216,39)"/><text x="63.4894%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 33.94%)</title><rect x="63.3803%" y="677" width="33.9437%" height="15" fill="rgb(243,47,51)"/><text x="63.6303%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 33.52%)</title><rect x="63.8028%" y="661" width="33.5211%" height="15" fill="rgb(241,183,40)"/><text x="64.0528%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (236 samples, 33.24%)</title><rect x="64.0845%" y="645" width="33.2394%" height="15" fill="rgb(231,217,32)"/><text x="64.3345%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (235 samples, 33.10%)</title><rect x="64.2254%" y="629" width="33.0986%" height="15" fill="rgb(229,61,38)"/><text x="64.4754%" y="639.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (235 samples, 33.10%)</title><rect x="64.2254%" y="613" width="33.0986%" height="15" fill="rgb(225,210,5)"/><text x="64.4754%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 33.10%)</title><rect x="64.2254%" y="597" width="33.0986%" height="15" fill="rgb(231,79,45)"/><text x="64.4754%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 33.10%)</title><rect x="64.2254%" y="581" width="33.0986%" height="15" fill="rgb(224,100,7)"/><text x="64.4754%" y="591.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (1 samples, 0.14%)</title><rect x="97.1831%" y="565" width="0.1408%" height="15" fill="rgb(241,198,18)"/><text x="97.4331%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="97.1831%" y="549" width="0.1408%" height="15" fill="rgb(252,97,53)"/><text x="97.4331%" y="559.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.42%)</title><rect x="97.3239%" y="741" width="0.4225%" height="15" fill="rgb(220,88,7)"/><text x="97.5739%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="97.6056%" y="725" width="0.1408%" height="15" fill="rgb(213,176,14)"/><text x="97.8556%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="97.6056%" y="709" width="0.1408%" height="15" fill="rgb(246,73,7)"/><text x="97.8556%" y="719.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::flush (1 samples, 0.14%)</title><rect x="97.6056%" y="693" width="0.1408%" height="15" fill="rgb(245,64,36)"/><text x="97.8556%" y="703.50"></text></g><g><title>__libc_start_main (250 samples, 35.21%)</title><rect x="62.6761%" y="901" width="35.2113%" height="15" fill="rgb(245,80,10)"/><text x="62.9261%" y="911.50">__libc_start_main</text></g><g><title>main (249 samples, 35.07%)</title><rect x="62.8169%" y="885" width="35.0704%" height="15" fill="rgb(232,107,50)"/><text x="63.0669%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (249 samples, 35.07%)</title><rect x="62.8169%" y="869" width="35.0704%" height="15" fill="rgb(253,3,0)"/><text x="63.0669%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (249 samples, 35.07%)</title><rect x="62.8169%" y="853" width="35.0704%" height="15" fill="rgb(212,99,53)"/><text x="63.0669%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (249 samples, 35.07%)</title><rect x="62.8169%" y="837" width="35.0704%" height="15" fill="rgb(249,111,54)"/><text x="63.0669%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (249 samples, 35.07%)</title><rect x="62.8169%" y="821" width="35.0704%" height="15" fill="rgb(249,55,30)"/><text x="63.0669%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (249 samples, 35.07%)</title><rect x="62.8169%" y="805" width="35.0704%" height="15" fill="rgb(237,47,42)"/><text x="63.0669%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::Fn..</text></g><g><title>std::rt::lang_start::_{{closure}} (249 samples, 35.07%)</title><rect x="62.8169%" y="789" width="35.0704%" height="15" fill="rgb(211,20,18)"/><text x="63.0669%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (249 samples, 35.07%)</title><rect x="62.8169%" y="773" width="35.0704%" height="15" fill="rgb(231,203,46)"/><text x="63.0669%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (249 samples, 35.07%)</title><rect x="62.8169%" y="757" width="35.0704%" height="15" fill="rgb(237,142,3)"/><text x="63.0669%" y="767.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.14%)</title><rect x="97.7465%" y="741" width="0.1408%" height="15" fill="rgb(241,107,1)"/><text x="97.9965%" y="751.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.14%)</title><rect x="97.7465%" y="725" width="0.1408%" height="15" fill="rgb(229,83,13)"/><text x="97.9965%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.14%)</title><rect x="97.7465%" y="709" width="0.1408%" height="15" fill="rgb(241,91,40)"/><text x="97.9965%" y="719.50"></text></g><g><title>__GI___socket (1 samples, 0.14%)</title><rect x="97.7465%" y="693" width="0.1408%" height="15" fill="rgb(225,3,45)"/><text x="97.9965%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="97.7465%" y="677" width="0.1408%" height="15" fill="rgb(244,223,14)"/><text x="97.9965%" y="687.50"></text></g><g><title>_start (251 samples, 35.35%)</title><rect x="62.6761%" y="917" width="35.3521%" height="15" fill="rgb(224,124,37)"/><text x="62.9261%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.14%)</title><rect x="97.8873%" y="901" width="0.1408%" height="15" fill="rgb(251,171,30)"/><text x="98.1373%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.14%)</title><rect x="97.8873%" y="885" width="0.1408%" height="15" fill="rgb(236,46,54)"/><text x="98.1373%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.14%)</title><rect x="97.8873%" y="869" width="0.1408%" height="15" fill="rgb(245,213,5)"/><text x="98.1373%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.14%)</title><rect x="97.8873%" y="853" width="0.1408%" height="15" fill="rgb(230,144,27)"/><text x="98.1373%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.14%)</title><rect x="97.8873%" y="837" width="0.1408%" height="15" fill="rgb(220,86,6)"/><text x="98.1373%" y="847.50"></text></g><g><title>openaux (1 samples, 0.14%)</title><rect x="97.8873%" y="821" width="0.1408%" height="15" fill="rgb(240,20,13)"/><text x="98.1373%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.14%)</title><rect x="97.8873%" y="805" width="0.1408%" height="15" fill="rgb(217,89,34)"/><text x="98.1373%" y="815.50"></text></g><g><title>[vmlinux] (1 samples, 0.14%)</title><rect x="98.7324%" y="885" width="0.1408%" height="15" fill="rgb(229,13,5)"/><text x="98.9824%" y="895.50"></text></g><g><title>do_group_exit (1 samples, 0.14%)</title><rect x="98.7324%" y="869" width="0.1408%" height="15" fill="rgb(244,67,35)"/><text x="98.9824%" y="879.50"></text></g><g><title>do_exit (1 samples, 0.14%)</title><rect x="98.7324%" y="853" width="0.1408%" height="15" fill="rgb(221,40,2)"/><text x="98.9824%" y="863.50"></text></g><g><title>mmput (1 samples, 0.14%)</title><rect x="98.7324%" y="837" width="0.1408%" height="15" fill="rgb(237,157,21)"/><text x="98.9824%" y="847.50"></text></g><g><title>exit_mmap (1 samples, 0.14%)</title><rect x="98.7324%" y="821" width="0.1408%" height="15" fill="rgb(222,94,11)"/><text x="98.9824%" y="831.50"></text></g><g><title>unmap_vmas (1 samples, 0.14%)</title><rect x="98.7324%" y="805" width="0.1408%" height="15" fill="rgb(249,113,6)"/><text x="98.9824%" y="815.50"></text></g><g><title>unmap_page_range (1 samples, 0.14%)</title><rect x="98.7324%" y="789" width="0.1408%" height="15" fill="rgb(238,137,36)"/><text x="98.9824%" y="799.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.14%)</title><rect x="98.7324%" y="773" width="0.1408%" height="15" fill="rgb(210,102,26)"/><text x="98.9824%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.99%)</title><rect x="98.0282%" y="917" width="0.9859%" height="15" fill="rgb(218,30,30)"/><text x="98.2782%" y="927.50"></text></g><g><title>do_syscall_64 (2 samples, 0.28%)</title><rect x="98.7324%" y="901" width="0.2817%" height="15" fill="rgb(214,67,26)"/><text x="98.9824%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="98.8732%" y="885" width="0.1408%" height="15" fill="rgb(251,9,53)"/><text x="99.1232%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.14%)</title><rect x="98.8732%" y="869" width="0.1408%" height="15" fill="rgb(228,204,25)"/><text x="99.1232%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.14%)</title><rect x="98.8732%" y="853" width="0.1408%" height="15" fill="rgb(207,153,8)"/><text x="99.1232%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.14%)</title><rect x="98.8732%" y="837" width="0.1408%" height="15" fill="rgb(242,9,16)"/><text x="99.1232%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.14%)</title><rect x="98.8732%" y="821" width="0.1408%" height="15" fill="rgb(217,211,10)"/><text x="99.1232%" y="831.50"></text></g><g><title>__clear_user (1 samples, 0.14%)</title><rect x="98.8732%" y="805" width="0.1408%" height="15" fill="rgb(219,228,52)"/><text x="99.1232%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="98.8732%" y="789" width="0.1408%" height="15" fill="rgb(231,92,29)"/><text x="99.1232%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="98.8732%" y="773" width="0.1408%" height="15" fill="rgb(232,8,23)"/><text x="99.1232%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="98.8732%" y="757" width="0.1408%" height="15" fill="rgb(216,211,34)"/><text x="99.1232%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="98.8732%" y="741" width="0.1408%" height="15" fill="rgb(236,151,0)"/><text x="99.1232%" y="751.50"></text></g><g><title>__anon_vma_prepare (1 samples, 0.14%)</title><rect x="98.8732%" y="725" width="0.1408%" height="15" fill="rgb(209,168,3)"/><text x="99.1232%" y="735.50"></text></g><g><title>lobsters (704 samples, 99.15%)</title><rect x="0.0000%" y="933" width="99.1549%" height="15" fill="rgb(208,129,28)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="99.0141%" y="917" width="0.1408%" height="15" fill="rgb(229,78,22)"/><text x="99.2641%" y="927.50"></text></g><g><title>all (710 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(228,187,13)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.85%)</title><rect x="99.1549%" y="933" width="0.8451%" height="15" fill="rgb(240,119,24)"/><text x="99.4049%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.85%)</title><rect x="99.1549%" y="917" width="0.8451%" height="15" fill="rgb(209,194,42)"/><text x="99.4049%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.85%)</title><rect x="99.1549%" y="901" width="0.8451%" height="15" fill="rgb(247,200,46)"/><text x="99.4049%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.85%)</title><rect x="99.1549%" y="885" width="0.8451%" height="15" fill="rgb(218,76,16)"/><text x="99.4049%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.85%)</title><rect x="99.1549%" y="869" width="0.8451%" height="15" fill="rgb(225,21,48)"/><text x="99.4049%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.85%)</title><rect x="99.1549%" y="853" width="0.8451%" height="15" fill="rgb(239,223,50)"/><text x="99.4049%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.85%)</title><rect x="99.1549%" y="837" width="0.8451%" height="15" fill="rgb(244,45,21)"/><text x="99.4049%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.85%)</title><rect x="99.1549%" y="821" width="0.8451%" height="15" fill="rgb(232,33,43)"/><text x="99.4049%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.85%)</title><rect x="99.1549%" y="805" width="0.8451%" height="15" fill="rgb(209,8,3)"/><text x="99.4049%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.85%)</title><rect x="99.1549%" y="789" width="0.8451%" height="15" fill="rgb(214,25,53)"/><text x="99.4049%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.70%)</title><rect x="99.2958%" y="773" width="0.7042%" height="15" fill="rgb(254,186,54)"/><text x="99.5458%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.70%)</title><rect x="99.2958%" y="757" width="0.7042%" height="15" fill="rgb(208,174,49)"/><text x="99.5458%" y="767.50"></text></g></svg></svg>