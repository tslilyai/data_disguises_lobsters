<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>hwloc_linux_set_tid_cpubind (1 samples, 0.14%)</title><rect x="0.0000%" y="901" width="0.1362%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.14%)</title><rect x="0.1362%" y="901" width="0.1362%" height="15" fill="rgb(217,0,24)"/><text x="0.3862%" y="911.50"></text></g><g><title>[[heap]] (3 samples, 0.41%)</title><rect x="0.0000%" y="917" width="0.4087%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="927.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.14%)</title><rect x="0.2725%" y="901" width="0.1362%" height="15" fill="rgb(248,212,6)"/><text x="0.5225%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="0.4087%" y="901" width="0.1362%" height="15" fill="rgb(208,68,35)"/><text x="0.6587%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="0.4087%" y="885" width="0.1362%" height="15" fill="rgb(232,128,0)"/><text x="0.6587%" y="895.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.14%)</title><rect x="0.4087%" y="869" width="0.1362%" height="15" fill="rgb(207,160,47)"/><text x="0.6587%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="0.4087%" y="853" width="0.1362%" height="15" fill="rgb(228,23,34)"/><text x="0.6587%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="0.4087%" y="837" width="0.1362%" height="15" fill="rgb(218,30,26)"/><text x="0.6587%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.14%)</title><rect x="0.4087%" y="821" width="0.1362%" height="15" fill="rgb(220,122,19)"/><text x="0.6587%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="0.4087%" y="805" width="0.1362%" height="15" fill="rgb(250,228,42)"/><text x="0.6587%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="0.5450%" y="901" width="0.1362%" height="15" fill="rgb(240,193,28)"/><text x="0.7950%" y="911.50"></text></g><g><title>[[stack]] (4 samples, 0.54%)</title><rect x="0.4087%" y="917" width="0.5450%" height="15" fill="rgb(216,20,37)"/><text x="0.6587%" y="927.50"></text></g><g><title>__libc_send (2 samples, 0.27%)</title><rect x="0.6812%" y="901" width="0.2725%" height="15" fill="rgb(206,188,39)"/><text x="0.9312%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="0.6812%" y="885" width="0.2725%" height="15" fill="rgb(217,207,13)"/><text x="0.9312%" y="895.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.14%)</title><rect x="0.9537%" y="901" width="0.1362%" height="15" fill="rgb(231,73,38)"/><text x="1.2037%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="1.0899%" y="901" width="0.1362%" height="15" fill="rgb(225,20,46)"/><text x="1.3399%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="1.2262%" y="901" width="0.1362%" height="15" fill="rgb(210,31,41)"/><text x="1.4762%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="1.2262%" y="885" width="0.1362%" height="15" fill="rgb(221,200,47)"/><text x="1.4762%" y="895.50"></text></g><g><title>__libc_send (2 samples, 0.27%)</title><rect x="1.3624%" y="901" width="0.2725%" height="15" fill="rgb(226,26,5)"/><text x="1.6124%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="1.3624%" y="885" width="0.2725%" height="15" fill="rgb(249,33,26)"/><text x="1.6124%" y="895.50"></text></g><g><title>[anon] (6 samples, 0.82%)</title><rect x="0.9537%" y="917" width="0.8174%" height="15" fill="rgb(235,183,28)"/><text x="1.2037%" y="927.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="1.6349%" y="901" width="0.1362%" height="15" fill="rgb(221,5,38)"/><text x="1.8849%" y="911.50"></text></g><g><title>[lobsters] (1 samples, 0.14%)</title><rect x="1.7711%" y="917" width="0.1362%" height="15" fill="rgb(247,18,42)"/><text x="2.0211%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="1.7711%" y="901" width="0.1362%" height="15" fill="rgb(241,131,45)"/><text x="2.0211%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="1.9074%" y="821" width="0.1362%" height="15" fill="rgb(249,31,29)"/><text x="2.1574%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="1.9074%" y="805" width="0.1362%" height="15" fill="rgb(225,111,53)"/><text x="2.1574%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="1.9074%" y="789" width="0.1362%" height="15" fill="rgb(238,160,17)"/><text x="2.1574%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="1.9074%" y="773" width="0.1362%" height="15" fill="rgb(214,148,48)"/><text x="2.1574%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.14%)</title><rect x="1.9074%" y="757" width="0.1362%" height="15" fill="rgb(232,36,49)"/><text x="2.1574%" y="767.50"></text></g><g><title>__GI___mprotect (1 samples, 0.14%)</title><rect x="1.9074%" y="741" width="0.1362%" height="15" fill="rgb(209,103,24)"/><text x="2.1574%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="1.9074%" y="725" width="0.1362%" height="15" fill="rgb(229,88,8)"/><text x="2.1574%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1.9074%" y="709" width="0.1362%" height="15" fill="rgb(213,181,19)"/><text x="2.1574%" y="719.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.14%)</title><rect x="1.9074%" y="693" width="0.1362%" height="15" fill="rgb(254,191,54)"/><text x="2.1574%" y="703.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.14%)</title><rect x="1.9074%" y="677" width="0.1362%" height="15" fill="rgb(241,83,37)"/><text x="2.1574%" y="687.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="1.9074%" y="661" width="0.1362%" height="15" fill="rgb(233,36,39)"/><text x="2.1574%" y="671.50"></text></g><g><title>vma_merge (1 samples, 0.14%)</title><rect x="1.9074%" y="645" width="0.1362%" height="15" fill="rgb(226,3,54)"/><text x="2.1574%" y="655.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.27%)</title><rect x="1.9074%" y="901" width="0.2725%" height="15" fill="rgb(245,192,40)"/><text x="2.1574%" y="911.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.27%)</title><rect x="1.9074%" y="885" width="0.2725%" height="15" fill="rgb(238,167,29)"/><text x="2.1574%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.27%)</title><rect x="1.9074%" y="869" width="0.2725%" height="15" fill="rgb(232,182,51)"/><text x="2.1574%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.27%)</title><rect x="1.9074%" y="853" width="0.2725%" height="15" fill="rgb(231,60,39)"/><text x="2.1574%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.27%)</title><rect x="1.9074%" y="837" width="0.2725%" height="15" fill="rgb(208,69,12)"/><text x="2.1574%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.14%)</title><rect x="2.0436%" y="821" width="0.1362%" height="15" fill="rgb(235,93,37)"/><text x="2.2936%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.14%)</title><rect x="2.0436%" y="805" width="0.1362%" height="15" fill="rgb(213,116,39)"/><text x="2.2936%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.14%)</title><rect x="2.0436%" y="789" width="0.1362%" height="15" fill="rgb(222,207,29)"/><text x="2.2936%" y="799.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="2.0436%" y="773" width="0.1362%" height="15" fill="rgb(206,96,30)"/><text x="2.2936%" y="783.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.14%)</title><rect x="2.0436%" y="757" width="0.1362%" height="15" fill="rgb(218,138,4)"/><text x="2.2936%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.27%)</title><rect x="2.1798%" y="901" width="0.2725%" height="15" fill="rgb(250,191,14)"/><text x="2.4298%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="2.4523%" y="901" width="0.1362%" height="15" fill="rgb(239,60,40)"/><text x="2.7023%" y="911.50"></text></g><g><title>__libc_recv (2 samples, 0.27%)</title><rect x="2.5886%" y="901" width="0.2725%" height="15" fill="rgb(206,27,48)"/><text x="2.8386%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="2.5886%" y="885" width="0.2725%" height="15" fill="rgb(225,35,8)"/><text x="2.8386%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.14%)</title><rect x="2.8610%" y="741" width="0.1362%" height="15" fill="rgb(250,213,24)"/><text x="3.1110%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.14%)</title><rect x="2.8610%" y="725" width="0.1362%" height="15" fill="rgb(247,123,22)"/><text x="3.1110%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="2.8610%" y="709" width="0.1362%" height="15" fill="rgb(231,138,38)"/><text x="3.1110%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="2.8610%" y="693" width="0.1362%" height="15" fill="rgb(231,145,46)"/><text x="3.1110%" y="703.50"></text></g><g><title>dlclose (1 samples, 0.14%)</title><rect x="2.8610%" y="677" width="0.1362%" height="15" fill="rgb(251,118,11)"/><text x="3.1110%" y="687.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="2.8610%" y="661" width="0.1362%" height="15" fill="rgb(217,147,25)"/><text x="3.1110%" y="671.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="2.8610%" y="645" width="0.1362%" height="15" fill="rgb(247,81,37)"/><text x="3.1110%" y="655.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="2.8610%" y="629" width="0.1362%" height="15" fill="rgb(209,12,38)"/><text x="3.1110%" y="639.50"></text></g><g><title>_dl_close (1 samples, 0.14%)</title><rect x="2.8610%" y="613" width="0.1362%" height="15" fill="rgb(227,1,9)"/><text x="3.1110%" y="623.50"></text></g><g><title>_dl_close_worker (1 samples, 0.14%)</title><rect x="2.8610%" y="597" width="0.1362%" height="15" fill="rgb(248,47,43)"/><text x="3.1110%" y="607.50"></text></g><g><title>_dl_unmap (1 samples, 0.14%)</title><rect x="2.8610%" y="581" width="0.1362%" height="15" fill="rgb(221,10,30)"/><text x="3.1110%" y="591.50"></text></g><g><title>munmap (1 samples, 0.14%)</title><rect x="2.8610%" y="565" width="0.1362%" height="15" fill="rgb(210,229,1)"/><text x="3.1110%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="2.8610%" y="549" width="0.1362%" height="15" fill="rgb(222,148,37)"/><text x="3.1110%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="2.8610%" y="533" width="0.1362%" height="15" fill="rgb(234,67,33)"/><text x="3.1110%" y="543.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.14%)</title><rect x="2.8610%" y="517" width="0.1362%" height="15" fill="rgb(247,98,35)"/><text x="3.1110%" y="527.50"></text></g><g><title>__vm_munmap (1 samples, 0.14%)</title><rect x="2.8610%" y="501" width="0.1362%" height="15" fill="rgb(247,138,52)"/><text x="3.1110%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.14%)</title><rect x="2.8610%" y="485" width="0.1362%" height="15" fill="rgb(213,79,30)"/><text x="3.1110%" y="495.50"></text></g><g><title>unmap_region (1 samples, 0.14%)</title><rect x="2.8610%" y="469" width="0.1362%" height="15" fill="rgb(246,177,23)"/><text x="3.1110%" y="479.50"></text></g><g><title>lru_add_drain (1 samples, 0.14%)</title><rect x="2.8610%" y="453" width="0.1362%" height="15" fill="rgb(230,62,27)"/><text x="3.1110%" y="463.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="2.8610%" y="437" width="0.1362%" height="15" fill="rgb(216,154,8)"/><text x="3.1110%" y="447.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="2.9973%" y="725" width="0.1362%" height="15" fill="rgb(244,35,45)"/><text x="3.2473%" y="735.50"></text></g><g><title>lock_sock_nested (1 samples, 0.14%)</title><rect x="3.5422%" y="533" width="0.1362%" height="15" fill="rgb(251,115,12)"/><text x="3.7922%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="3.5422%" y="517" width="0.1362%" height="15" fill="rgb(240,54,50)"/><text x="3.7922%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="3.5422%" y="501" width="0.1362%" height="15" fill="rgb(233,84,52)"/><text x="3.7922%" y="511.50"></text></g><g><title>release_sock (2 samples, 0.27%)</title><rect x="3.6785%" y="533" width="0.2725%" height="15" fill="rgb(207,117,47)"/><text x="3.9285%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.27%)</title><rect x="3.6785%" y="517" width="0.2725%" height="15" fill="rgb(249,43,39)"/><text x="3.9285%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="3.8147%" y="501" width="0.1362%" height="15" fill="rgb(209,38,44)"/><text x="4.0647%" y="511.50"></text></g><g><title>__sk_dst_check (1 samples, 0.14%)</title><rect x="5.0409%" y="453" width="0.1362%" height="15" fill="rgb(236,212,23)"/><text x="5.2909%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.14%)</title><rect x="5.0409%" y="437" width="0.1362%" height="15" fill="rgb(242,79,21)"/><text x="5.2909%" y="447.50"></text></g><g><title>__ip_finish_output (1 samples, 0.14%)</title><rect x="5.1771%" y="437" width="0.1362%" height="15" fill="rgb(211,96,35)"/><text x="5.4271%" y="447.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="5.8583%" y="389" width="0.1362%" height="15" fill="rgb(253,215,40)"/><text x="6.1083%" y="399.50"></text></g><g><title>ktime_get_with_offset (2 samples, 0.27%)</title><rect x="5.9946%" y="341" width="0.2725%" height="15" fill="rgb(211,81,21)"/><text x="6.2446%" y="351.50"></text></g><g><title>read_tsc (2 samples, 0.27%)</title><rect x="5.9946%" y="325" width="0.2725%" height="15" fill="rgb(208,190,38)"/><text x="6.2446%" y="335.50"></text></g><g><title>netif_rx (3 samples, 0.41%)</title><rect x="5.9946%" y="373" width="0.4087%" height="15" fill="rgb(235,213,38)"/><text x="6.2446%" y="383.50"></text></g><g><title>netif_rx_internal (3 samples, 0.41%)</title><rect x="5.9946%" y="357" width="0.4087%" height="15" fill="rgb(237,122,38)"/><text x="6.2446%" y="367.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="6.2670%" y="341" width="0.1362%" height="15" fill="rgb(244,218,35)"/><text x="6.5170%" y="351.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.82%)</title><rect x="5.8583%" y="405" width="0.8174%" height="15" fill="rgb(240,68,47)"/><text x="6.1083%" y="415.50"></text></g><g><title>loopback_xmit (5 samples, 0.68%)</title><rect x="5.9946%" y="389" width="0.6812%" height="15" fill="rgb(210,16,53)"/><text x="6.2446%" y="399.50"></text></g><g><title>tcp_wfree (2 samples, 0.27%)</title><rect x="6.4033%" y="373" width="0.2725%" height="15" fill="rgb(235,124,12)"/><text x="6.6533%" y="383.50"></text></g><g><title>__dev_queue_xmit (11 samples, 1.50%)</title><rect x="5.4496%" y="421" width="1.4986%" height="15" fill="rgb(224,169,11)"/><text x="5.6996%" y="431.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.27%)</title><rect x="6.6757%" y="405" width="0.2725%" height="15" fill="rgb(250,166,2)"/><text x="6.9257%" y="415.50"></text></g><g><title>netif_skb_features (2 samples, 0.27%)</title><rect x="6.6757%" y="389" width="0.2725%" height="15" fill="rgb(242,216,29)"/><text x="6.9257%" y="399.50"></text></g><g><title>skb_network_protocol (1 samples, 0.14%)</title><rect x="6.8120%" y="373" width="0.1362%" height="15" fill="rgb(230,116,27)"/><text x="7.0620%" y="383.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.27%)</title><rect x="7.0845%" y="357" width="0.2725%" height="15" fill="rgb(228,99,48)"/><text x="7.3345%" y="367.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="7.2207%" y="341" width="0.1362%" height="15" fill="rgb(253,11,6)"/><text x="7.4707%" y="351.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="7.2207%" y="325" width="0.1362%" height="15" fill="rgb(247,143,39)"/><text x="7.4707%" y="335.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="7.2207%" y="309" width="0.1362%" height="15" fill="rgb(236,97,10)"/><text x="7.4707%" y="319.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.27%)</title><rect x="7.3569%" y="309" width="0.2725%" height="15" fill="rgb(233,208,19)"/><text x="7.6069%" y="319.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.27%)</title><rect x="7.7657%" y="229" width="0.2725%" height="15" fill="rgb(216,164,2)"/><text x="8.0157%" y="239.50"></text></g><g><title>inet_ehashfn (1 samples, 0.14%)</title><rect x="7.9019%" y="213" width="0.1362%" height="15" fill="rgb(220,129,5)"/><text x="8.1519%" y="223.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="8.0381%" y="229" width="0.1362%" height="15" fill="rgb(242,17,10)"/><text x="8.2881%" y="239.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="8.1744%" y="229" width="0.1362%" height="15" fill="rgb(242,107,0)"/><text x="8.4244%" y="239.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="8.1744%" y="213" width="0.1362%" height="15" fill="rgb(251,28,31)"/><text x="8.4244%" y="223.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="9.4005%" y="133" width="0.1362%" height="15" fill="rgb(233,223,10)"/><text x="9.6505%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.27%)</title><rect x="9.5368%" y="133" width="0.2725%" height="15" fill="rgb(215,21,27)"/><text x="9.7868%" y="143.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="9.6730%" y="117" width="0.1362%" height="15" fill="rgb(232,23,21)"/><text x="9.9230%" y="127.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="9.8093%" y="133" width="0.1362%" height="15" fill="rgb(244,5,23)"/><text x="10.0593%" y="143.50"></text></g><g><title>psi_task_change (9 samples, 1.23%)</title><rect x="9.9455%" y="117" width="1.2262%" height="15" fill="rgb(226,81,46)"/><text x="10.1955%" y="127.50"></text></g><g><title>psi_group_change (7 samples, 0.95%)</title><rect x="10.2180%" y="101" width="0.9537%" height="15" fill="rgb(247,70,30)"/><text x="10.4680%" y="111.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="11.0354%" y="85" width="0.1362%" height="15" fill="rgb(212,68,19)"/><text x="11.2854%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="11.0354%" y="69" width="0.1362%" height="15" fill="rgb(240,187,13)"/><text x="11.2854%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="11.0354%" y="53" width="0.1362%" height="15" fill="rgb(223,113,26)"/><text x="11.2854%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="11.0354%" y="37" width="0.1362%" height="15" fill="rgb(206,192,2)"/><text x="11.2854%" y="47.50"></text></g><g><title>enqueue_task (11 samples, 1.50%)</title><rect x="9.9455%" y="133" width="1.4986%" height="15" fill="rgb(241,108,4)"/><text x="10.1955%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.27%)</title><rect x="11.1717%" y="117" width="0.2725%" height="15" fill="rgb(247,173,49)"/><text x="11.4217%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.14%)</title><rect x="11.4441%" y="101" width="0.1362%" height="15" fill="rgb(224,114,35)"/><text x="11.6941%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.27%)</title><rect x="11.5804%" y="85" width="0.2725%" height="15" fill="rgb(245,159,27)"/><text x="11.8304%" y="95.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.54%)</title><rect x="11.4441%" y="133" width="0.5450%" height="15" fill="rgb(245,172,44)"/><text x="11.6941%" y="143.50"></text></g><g><title>enqueue_entity (4 samples, 0.54%)</title><rect x="11.4441%" y="117" width="0.5450%" height="15" fill="rgb(236,23,11)"/><text x="11.6941%" y="127.50"></text></g><g><title>update_load_avg (3 samples, 0.41%)</title><rect x="11.5804%" y="101" width="0.4087%" height="15" fill="rgb(205,117,38)"/><text x="11.8304%" y="111.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="11.8529%" y="85" width="0.1362%" height="15" fill="rgb(237,72,25)"/><text x="12.1029%" y="95.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="11.9891%" y="133" width="0.1362%" height="15" fill="rgb(244,70,9)"/><text x="12.2391%" y="143.50"></text></g><g><title>ttwu_do_wakeup (4 samples, 0.54%)</title><rect x="12.1253%" y="133" width="0.5450%" height="15" fill="rgb(217,125,39)"/><text x="12.3753%" y="143.50"></text></g><g><title>check_preempt_curr (4 samples, 0.54%)</title><rect x="12.1253%" y="117" width="0.5450%" height="15" fill="rgb(235,36,10)"/><text x="12.3753%" y="127.50"></text></g><g><title>resched_curr (4 samples, 0.54%)</title><rect x="12.1253%" y="101" width="0.5450%" height="15" fill="rgb(251,123,47)"/><text x="12.3753%" y="111.50"></text></g><g><title>__wake_up_common (29 samples, 3.95%)</title><rect x="8.9918%" y="165" width="3.9510%" height="15" fill="rgb(221,13,13)"/><text x="9.2418%" y="175.50">__wa..</text></g><g><title>try_to_wake_up (29 samples, 3.95%)</title><rect x="8.9918%" y="149" width="3.9510%" height="15" fill="rgb(238,131,9)"/><text x="9.2418%" y="159.50">try_..</text></g><g><title>update_rq_clock (2 samples, 0.27%)</title><rect x="12.6703%" y="133" width="0.2725%" height="15" fill="rgb(211,50,8)"/><text x="12.9203%" y="143.50"></text></g><g><title>sock_def_readable (32 samples, 4.36%)</title><rect x="8.7193%" y="197" width="4.3597%" height="15" fill="rgb(245,182,24)"/><text x="8.9693%" y="207.50">sock_..</text></g><g><title>__wake_up_common_lock (31 samples, 4.22%)</title><rect x="8.8556%" y="181" width="4.2234%" height="15" fill="rgb(242,14,37)"/><text x="9.1056%" y="191.50">__wak..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="12.9428%" y="165" width="0.1362%" height="15" fill="rgb(246,228,12)"/><text x="13.1928%" y="175.50"></text></g><g><title>__slab_free (2 samples, 0.27%)</title><rect x="13.3515%" y="149" width="0.2725%" height="15" fill="rgb(213,55,15)"/><text x="13.6015%" y="159.50"></text></g><g><title>kfree (3 samples, 0.41%)</title><rect x="13.3515%" y="165" width="0.4087%" height="15" fill="rgb(209,9,3)"/><text x="13.6015%" y="175.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.14%)</title><rect x="13.6240%" y="149" width="0.1362%" height="15" fill="rgb(230,59,30)"/><text x="13.8740%" y="159.50"></text></g><g><title>__kfree_skb (7 samples, 0.95%)</title><rect x="13.3515%" y="181" width="0.9537%" height="15" fill="rgb(209,121,21)"/><text x="13.6015%" y="191.50"></text></g><g><title>skb_release_data (4 samples, 0.54%)</title><rect x="13.7602%" y="165" width="0.5450%" height="15" fill="rgb(220,109,13)"/><text x="14.0102%" y="175.50"></text></g><g><title>bictcp_acked (2 samples, 0.27%)</title><rect x="14.3052%" y="181" width="0.2725%" height="15" fill="rgb(232,18,1)"/><text x="14.5552%" y="191.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="14.5777%" y="181" width="0.1362%" height="15" fill="rgb(215,41,42)"/><text x="14.8277%" y="191.50"></text></g><g><title>rb_next (1 samples, 0.14%)</title><rect x="14.7139%" y="181" width="0.1362%" height="15" fill="rgb(224,123,36)"/><text x="14.9639%" y="191.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="14.8501%" y="181" width="0.1362%" height="15" fill="rgb(240,125,3)"/><text x="15.1001%" y="191.50"></text></g><g><title>tcp_ack (16 samples, 2.18%)</title><rect x="13.0790%" y="197" width="2.1798%" height="15" fill="rgb(205,98,50)"/><text x="13.3290%" y="207.50">t..</text></g><g><title>tcp_update_pacing_rate (2 samples, 0.27%)</title><rect x="14.9864%" y="181" width="0.2725%" height="15" fill="rgb(205,185,37)"/><text x="15.2364%" y="191.50"></text></g><g><title>tcp_check_space (1 samples, 0.14%)</title><rect x="15.2589%" y="197" width="0.1362%" height="15" fill="rgb(238,207,15)"/><text x="15.5089%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (53 samples, 7.22%)</title><rect x="8.3106%" y="229" width="7.2207%" height="15" fill="rgb(213,199,42)"/><text x="8.5606%" y="239.50">tcp_v4_do_..</text></g><g><title>tcp_rcv_established (53 samples, 7.22%)</title><rect x="8.3106%" y="213" width="7.2207%" height="15" fill="rgb(235,201,11)"/><text x="8.5606%" y="223.50">tcp_rcv_es..</text></g><g><title>tcp_event_data_recv (1 samples, 0.14%)</title><rect x="15.3951%" y="197" width="0.1362%" height="15" fill="rgb(207,46,11)"/><text x="15.6451%" y="207.50"></text></g><g><title>ip_local_deliver (59 samples, 8.04%)</title><rect x="7.6294%" y="293" width="8.0381%" height="15" fill="rgb(241,35,35)"/><text x="7.8794%" y="303.50">ip_local_de..</text></g><g><title>ip_local_deliver_finish (59 samples, 8.04%)</title><rect x="7.6294%" y="277" width="8.0381%" height="15" fill="rgb(243,32,47)"/><text x="7.8794%" y="287.50">ip_local_de..</text></g><g><title>ip_protocol_deliver_rcu (59 samples, 8.04%)</title><rect x="7.6294%" y="261" width="8.0381%" height="15" fill="rgb(247,202,23)"/><text x="7.8794%" y="271.50">ip_protocol..</text></g><g><title>tcp_v4_rcv (59 samples, 8.04%)</title><rect x="7.6294%" y="245" width="8.0381%" height="15" fill="rgb(219,102,11)"/><text x="7.8794%" y="255.50">tcp_v4_rcv</text></g><g><title>tcp_v4_fill_cb (1 samples, 0.14%)</title><rect x="15.5313%" y="229" width="0.1362%" height="15" fill="rgb(243,110,44)"/><text x="15.7813%" y="239.50"></text></g><g><title>__netif_receive_skb_one_core (62 samples, 8.45%)</title><rect x="7.3569%" y="325" width="8.4469%" height="15" fill="rgb(222,74,54)"/><text x="7.6069%" y="335.50">__netif_rece..</text></g><g><title>ip_rcv (60 samples, 8.17%)</title><rect x="7.6294%" y="309" width="8.1744%" height="15" fill="rgb(216,99,12)"/><text x="7.8794%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.14%)</title><rect x="15.6676%" y="293" width="0.1362%" height="15" fill="rgb(226,22,26)"/><text x="15.9176%" y="303.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="15.8038%" y="325" width="0.1362%" height="15" fill="rgb(217,163,10)"/><text x="16.0538%" y="335.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="15.9401%" y="325" width="0.1362%" height="15" fill="rgb(213,25,53)"/><text x="16.1901%" y="335.50"></text></g><g><title>__local_bh_enable_ip (68 samples, 9.26%)</title><rect x="6.9482%" y="421" width="9.2643%" height="15" fill="rgb(252,105,26)"/><text x="7.1982%" y="431.50">__local_bh_en..</text></g><g><title>do_softirq (68 samples, 9.26%)</title><rect x="6.9482%" y="405" width="9.2643%" height="15" fill="rgb(220,39,43)"/><text x="7.1982%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (67 samples, 9.13%)</title><rect x="7.0845%" y="389" width="9.1281%" height="15" fill="rgb(229,68,48)"/><text x="7.3345%" y="399.50">do_softirq_ow..</text></g><g><title>__do_softirq (67 samples, 9.13%)</title><rect x="7.0845%" y="373" width="9.1281%" height="15" fill="rgb(252,8,32)"/><text x="7.3345%" y="383.50">__do_softirq</text></g><g><title>net_rx_action (65 samples, 8.86%)</title><rect x="7.3569%" y="357" width="8.8556%" height="15" fill="rgb(223,20,43)"/><text x="7.6069%" y="367.50">net_rx_action</text></g><g><title>process_backlog (65 samples, 8.86%)</title><rect x="7.3569%" y="341" width="8.8556%" height="15" fill="rgb(229,81,49)"/><text x="7.6069%" y="351.50">process_backl..</text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="16.0763%" y="325" width="0.1362%" height="15" fill="rgb(236,28,36)"/><text x="16.3263%" y="335.50"></text></g><g><title>__ip_queue_xmit (83 samples, 11.31%)</title><rect x="5.0409%" y="469" width="11.3079%" height="15" fill="rgb(249,185,26)"/><text x="5.2909%" y="479.50">__ip_queue_xmit</text></g><g><title>ip_output (82 samples, 11.17%)</title><rect x="5.1771%" y="453" width="11.1717%" height="15" fill="rgb(249,174,33)"/><text x="5.4271%" y="463.50">ip_output</text></g><g><title>ip_finish_output2 (81 samples, 11.04%)</title><rect x="5.3134%" y="437" width="11.0354%" height="15" fill="rgb(233,201,37)"/><text x="5.5634%" y="447.50">ip_finish_output2</text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="16.2125%" y="421" width="0.1362%" height="15" fill="rgb(221,78,26)"/><text x="16.4625%" y="431.50"></text></g><g><title>__tcp_transmit_skb (86 samples, 11.72%)</title><rect x="4.7684%" y="485" width="11.7166%" height="15" fill="rgb(250,127,30)"/><text x="5.0184%" y="495.50">__tcp_transmit_skb</text></g><g><title>skb_clone (1 samples, 0.14%)</title><rect x="16.3488%" y="469" width="0.1362%" height="15" fill="rgb(230,49,44)"/><text x="16.5988%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (87 samples, 11.85%)</title><rect x="4.7684%" y="517" width="11.8529%" height="15" fill="rgb(229,67,23)"/><text x="5.0184%" y="527.50">__tcp_push_pending..</text></g><g><title>tcp_write_xmit (87 samples, 11.85%)</title><rect x="4.7684%" y="501" width="11.8529%" height="15" fill="rgb(249,83,47)"/><text x="5.0184%" y="511.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="16.4850%" y="485" width="0.1362%" height="15" fill="rgb(215,43,3)"/><text x="16.7350%" y="495.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="16.4850%" y="469" width="0.1362%" height="15" fill="rgb(238,154,13)"/><text x="16.7350%" y="479.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="16.4850%" y="453" width="0.1362%" height="15" fill="rgb(219,56,2)"/><text x="16.7350%" y="463.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.27%)</title><rect x="16.6213%" y="517" width="0.2725%" height="15" fill="rgb(233,0,4)"/><text x="16.8713%" y="527.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.27%)</title><rect x="16.6213%" y="501" width="0.2725%" height="15" fill="rgb(235,30,7)"/><text x="16.8713%" y="511.50"></text></g><g><title>__memset (1 samples, 0.14%)</title><rect x="17.4387%" y="469" width="0.1362%" height="15" fill="rgb(250,79,13)"/><text x="17.6887%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.41%)</title><rect x="17.3025%" y="485" width="0.4087%" height="15" fill="rgb(211,146,34)"/><text x="17.5525%" y="495.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="17.5749%" y="469" width="0.1362%" height="15" fill="rgb(228,22,38)"/><text x="17.8249%" y="479.50"></text></g><g><title>__ksize (2 samples, 0.27%)</title><rect x="17.7112%" y="485" width="0.2725%" height="15" fill="rgb(235,168,5)"/><text x="17.9612%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (9 samples, 1.23%)</title><rect x="16.8937%" y="517" width="1.2262%" height="15" fill="rgb(221,155,16)"/><text x="17.1437%" y="527.50"></text></g><g><title>__alloc_skb (9 samples, 1.23%)</title><rect x="16.8937%" y="501" width="1.2262%" height="15" fill="rgb(215,215,53)"/><text x="17.1437%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="17.9837%" y="485" width="0.1362%" height="15" fill="rgb(223,4,10)"/><text x="18.2337%" y="495.50"></text></g><g><title>should_failslab (1 samples, 0.14%)</title><rect x="17.9837%" y="469" width="0.1362%" height="15" fill="rgb(234,103,6)"/><text x="18.2337%" y="479.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.27%)</title><rect x="18.1199%" y="517" width="0.2725%" height="15" fill="rgb(227,97,0)"/><text x="18.3699%" y="527.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.27%)</title><rect x="18.1199%" y="501" width="0.2725%" height="15" fill="rgb(234,150,53)"/><text x="18.3699%" y="511.50"></text></g><g><title>iov_iter_advance (2 samples, 0.27%)</title><rect x="18.1199%" y="485" width="0.2725%" height="15" fill="rgb(228,201,54)"/><text x="18.3699%" y="495.50"></text></g><g><title>do_syscall_64 (112 samples, 15.26%)</title><rect x="3.4060%" y="613" width="15.2589%" height="15" fill="rgb(222,22,37)"/><text x="3.6560%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (112 samples, 15.26%)</title><rect x="3.4060%" y="597" width="15.2589%" height="15" fill="rgb(237,53,32)"/><text x="3.6560%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (112 samples, 15.26%)</title><rect x="3.4060%" y="581" width="15.2589%" height="15" fill="rgb(233,25,53)"/><text x="3.6560%" y="591.50">__sys_sendto</text></g><g><title>sock_sendmsg (111 samples, 15.12%)</title><rect x="3.5422%" y="565" width="15.1226%" height="15" fill="rgb(210,40,34)"/><text x="3.7922%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (111 samples, 15.12%)</title><rect x="3.5422%" y="549" width="15.1226%" height="15" fill="rgb(241,220,44)"/><text x="3.7922%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (108 samples, 14.71%)</title><rect x="3.9510%" y="533" width="14.7139%" height="15" fill="rgb(235,28,35)"/><text x="4.2010%" y="543.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (2 samples, 0.27%)</title><rect x="18.3924%" y="517" width="0.2725%" height="15" fill="rgb(210,56,17)"/><text x="18.6424%" y="527.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="18.5286%" y="501" width="0.1362%" height="15" fill="rgb(224,130,29)"/><text x="18.7786%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (115 samples, 15.67%)</title><rect x="3.1335%" y="629" width="15.6676%" height="15" fill="rgb(235,212,8)"/><text x="3.3835%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="18.6649%" y="613" width="0.1362%" height="15" fill="rgb(223,33,50)"/><text x="18.9149%" y="623.50"></text></g><g><title>__libc_start_main (118 samples, 16.08%)</title><rect x="2.8610%" y="901" width="16.0763%" height="15" fill="rgb(219,149,13)"/><text x="3.1110%" y="911.50">__libc_start_main</text></g><g><title>main (118 samples, 16.08%)</title><rect x="2.8610%" y="885" width="16.0763%" height="15" fill="rgb(250,156,29)"/><text x="3.1110%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (118 samples, 16.08%)</title><rect x="2.8610%" y="869" width="16.0763%" height="15" fill="rgb(216,193,19)"/><text x="3.1110%" y="879.50">std::rt::lang_start_inter..</text></g><g><title>std::panic::catch_unwind (118 samples, 16.08%)</title><rect x="2.8610%" y="853" width="16.0763%" height="15" fill="rgb(216,135,14)"/><text x="3.1110%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (118 samples, 16.08%)</title><rect x="2.8610%" y="837" width="16.0763%" height="15" fill="rgb(241,47,5)"/><text x="3.1110%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (118 samples, 16.08%)</title><rect x="2.8610%" y="821" width="16.0763%" height="15" fill="rgb(233,42,35)"/><text x="3.1110%" y="831.50">std::panicking::try::do_c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (118 samples, 16.08%)</title><rect x="2.8610%" y="805" width="16.0763%" height="15" fill="rgb(231,13,6)"/><text x="3.1110%" y="815.50">core::ops::function::impl..</text></g><g><title>std::rt::lang_start::_{{closure}} (118 samples, 16.08%)</title><rect x="2.8610%" y="789" width="16.0763%" height="15" fill="rgb(207,181,40)"/><text x="3.1110%" y="799.50">std::rt::lang_start::_{{c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (118 samples, 16.08%)</title><rect x="2.8610%" y="773" width="16.0763%" height="15" fill="rgb(254,173,49)"/><text x="3.1110%" y="783.50">std::sys_common::backtrac..</text></g><g><title>lobsters::main (118 samples, 16.08%)</title><rect x="2.8610%" y="757" width="16.0763%" height="15" fill="rgb(221,1,38)"/><text x="3.1110%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (117 samples, 15.94%)</title><rect x="2.9973%" y="741" width="15.9401%" height="15" fill="rgb(206,124,46)"/><text x="3.2473%" y="751.50">mysql::conn::queryable::Q..</text></g><g><title>mysql::conn::Conn::_query (116 samples, 15.80%)</title><rect x="3.1335%" y="725" width="15.8038%" height="15" fill="rgb(249,21,11)"/><text x="3.3835%" y="735.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (116 samples, 15.80%)</title><rect x="3.1335%" y="709" width="15.8038%" height="15" fill="rgb(222,201,40)"/><text x="3.3835%" y="719.50">mysql_common::proto::syn..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (116 samples, 15.80%)</title><rect x="3.1335%" y="693" width="15.8038%" height="15" fill="rgb(235,61,29)"/><text x="3.3835%" y="703.50">std::io::buffered::BufWr..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (116 samples, 15.80%)</title><rect x="3.1335%" y="677" width="15.8038%" height="15" fill="rgb(219,207,3)"/><text x="3.3835%" y="687.50">&lt;std::net::tcp::TcpStrea..</text></g><g><title>std::sys_common::net::TcpStream::write (116 samples, 15.80%)</title><rect x="3.1335%" y="661" width="15.8038%" height="15" fill="rgb(222,56,46)"/><text x="3.3835%" y="671.50">std::sys_common::net::Tc..</text></g><g><title>__libc_send (116 samples, 15.80%)</title><rect x="3.1335%" y="645" width="15.8038%" height="15" fill="rgb(239,76,54)"/><text x="3.3835%" y="655.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="18.8011%" y="629" width="0.1362%" height="15" fill="rgb(231,124,27)"/><text x="19.0511%" y="639.50"></text></g><g><title>__rdl_alloc (2 samples, 0.27%)</title><rect x="18.9373%" y="901" width="0.2725%" height="15" fill="rgb(249,195,6)"/><text x="19.1873%" y="911.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.14%)</title><rect x="19.2098%" y="901" width="0.1362%" height="15" fill="rgb(237,174,47)"/><text x="19.4598%" y="911.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.14%)</title><rect x="19.3460%" y="901" width="0.1362%" height="15" fill="rgb(206,201,31)"/><text x="19.5960%" y="911.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.14%)</title><rect x="19.4823%" y="901" width="0.1362%" height="15" fill="rgb(231,57,52)"/><text x="19.7323%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.14%)</title><rect x="19.6185%" y="901" width="0.1362%" height="15" fill="rgb(248,177,22)"/><text x="19.8685%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.14%)</title><rect x="19.6185%" y="885" width="0.1362%" height="15" fill="rgb(215,211,37)"/><text x="19.8685%" y="895.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="19.6185%" y="869" width="0.1362%" height="15" fill="rgb(241,128,51)"/><text x="19.8685%" y="879.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="19.6185%" y="853" width="0.1362%" height="15" fill="rgb(227,165,31)"/><text x="19.8685%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="19.6185%" y="837" width="0.1362%" height="15" fill="rgb(228,167,24)"/><text x="19.8685%" y="847.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="19.6185%" y="821" width="0.1362%" height="15" fill="rgb(228,143,12)"/><text x="19.8685%" y="831.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="19.6185%" y="805" width="0.1362%" height="15" fill="rgb(249,149,8)"/><text x="19.8685%" y="815.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="19.6185%" y="789" width="0.1362%" height="15" fill="rgb(243,35,44)"/><text x="19.8685%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="19.6185%" y="773" width="0.1362%" height="15" fill="rgb(246,89,9)"/><text x="19.8685%" y="783.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="19.6185%" y="757" width="0.1362%" height="15" fill="rgb(233,213,13)"/><text x="19.8685%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="19.6185%" y="741" width="0.1362%" height="15" fill="rgb(233,141,41)"/><text x="19.8685%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="19.6185%" y="725" width="0.1362%" height="15" fill="rgb(239,167,4)"/><text x="19.8685%" y="735.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="19.6185%" y="709" width="0.1362%" height="15" fill="rgb(209,217,16)"/><text x="19.8685%" y="719.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="19.6185%" y="693" width="0.1362%" height="15" fill="rgb(219,88,35)"/><text x="19.8685%" y="703.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="19.6185%" y="677" width="0.1362%" height="15" fill="rgb(220,193,23)"/><text x="19.8685%" y="687.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="19.6185%" y="661" width="0.1362%" height="15" fill="rgb(230,90,52)"/><text x="19.8685%" y="671.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="19.6185%" y="645" width="0.1362%" height="15" fill="rgb(252,106,19)"/><text x="19.8685%" y="655.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="19.6185%" y="629" width="0.1362%" height="15" fill="rgb(206,74,20)"/><text x="19.8685%" y="639.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="19.6185%" y="613" width="0.1362%" height="15" fill="rgb(230,138,44)"/><text x="19.8685%" y="623.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="19.6185%" y="597" width="0.1362%" height="15" fill="rgb(235,182,43)"/><text x="19.8685%" y="607.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="19.6185%" y="581" width="0.1362%" height="15" fill="rgb(242,16,51)"/><text x="19.8685%" y="591.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="19.6185%" y="565" width="0.1362%" height="15" fill="rgb(248,9,4)"/><text x="19.8685%" y="575.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="19.6185%" y="549" width="0.1362%" height="15" fill="rgb(210,31,22)"/><text x="19.8685%" y="559.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="19.6185%" y="533" width="0.1362%" height="15" fill="rgb(239,54,39)"/><text x="19.8685%" y="543.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="19.6185%" y="517" width="0.1362%" height="15" fill="rgb(230,99,41)"/><text x="19.8685%" y="527.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="19.6185%" y="501" width="0.1362%" height="15" fill="rgb(253,106,12)"/><text x="19.8685%" y="511.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="19.6185%" y="485" width="0.1362%" height="15" fill="rgb(213,46,41)"/><text x="19.8685%" y="495.50"></text></g><g><title>net_rx_action (1 samples, 0.14%)</title><rect x="19.6185%" y="469" width="0.1362%" height="15" fill="rgb(215,133,35)"/><text x="19.8685%" y="479.50"></text></g><g><title>process_backlog (1 samples, 0.14%)</title><rect x="19.6185%" y="453" width="0.1362%" height="15" fill="rgb(213,28,5)"/><text x="19.8685%" y="463.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.14%)</title><rect x="19.6185%" y="437" width="0.1362%" height="15" fill="rgb(215,77,49)"/><text x="19.8685%" y="447.50"></text></g><g><title>ip_rcv (1 samples, 0.14%)</title><rect x="19.6185%" y="421" width="0.1362%" height="15" fill="rgb(248,100,22)"/><text x="19.8685%" y="431.50"></text></g><g><title>ip_local_deliver (1 samples, 0.14%)</title><rect x="19.6185%" y="405" width="0.1362%" height="15" fill="rgb(208,67,9)"/><text x="19.8685%" y="415.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.14%)</title><rect x="19.6185%" y="389" width="0.1362%" height="15" fill="rgb(219,133,21)"/><text x="19.8685%" y="399.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.14%)</title><rect x="19.6185%" y="373" width="0.1362%" height="15" fill="rgb(246,46,29)"/><text x="19.8685%" y="383.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.14%)</title><rect x="19.6185%" y="357" width="0.1362%" height="15" fill="rgb(246,185,52)"/><text x="19.8685%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="19.6185%" y="341" width="0.1362%" height="15" fill="rgb(252,136,11)"/><text x="19.8685%" y="351.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="19.6185%" y="325" width="0.1362%" height="15" fill="rgb(219,138,53)"/><text x="19.8685%" y="335.50"></text></g><g><title>sock_def_readable (1 samples, 0.14%)</title><rect x="19.6185%" y="309" width="0.1362%" height="15" fill="rgb(211,51,23)"/><text x="19.8685%" y="319.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.14%)</title><rect x="19.6185%" y="293" width="0.1362%" height="15" fill="rgb(247,221,28)"/><text x="19.8685%" y="303.50"></text></g><g><title>__wake_up_common (1 samples, 0.14%)</title><rect x="19.6185%" y="277" width="0.1362%" height="15" fill="rgb(251,222,45)"/><text x="19.8685%" y="287.50"></text></g><g><title>pollwake (1 samples, 0.14%)</title><rect x="19.6185%" y="261" width="0.1362%" height="15" fill="rgb(217,162,53)"/><text x="19.8685%" y="271.50"></text></g><g><title>try_to_wake_up (1 samples, 0.14%)</title><rect x="19.6185%" y="245" width="0.1362%" height="15" fill="rgb(229,93,14)"/><text x="19.8685%" y="255.50"></text></g><g><title>enqueue_task (1 samples, 0.14%)</title><rect x="19.6185%" y="229" width="0.1362%" height="15" fill="rgb(209,67,49)"/><text x="19.8685%" y="239.50"></text></g><g><title>psi_task_change (1 samples, 0.14%)</title><rect x="19.6185%" y="213" width="0.1362%" height="15" fill="rgb(213,87,29)"/><text x="19.8685%" y="223.50"></text></g><g><title>psi_group_change (1 samples, 0.14%)</title><rect x="19.6185%" y="197" width="0.1362%" height="15" fill="rgb(205,151,52)"/><text x="19.8685%" y="207.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.14%)</title><rect x="19.7548%" y="885" width="0.1362%" height="15" fill="rgb(253,215,39)"/><text x="20.0048%" y="895.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="19.7548%" y="869" width="0.1362%" height="15" fill="rgb(221,220,41)"/><text x="20.0048%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="19.7548%" y="853" width="0.1362%" height="15" fill="rgb(218,133,21)"/><text x="20.0048%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="19.7548%" y="837" width="0.1362%" height="15" fill="rgb(221,193,43)"/><text x="20.0048%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.14%)</title><rect x="19.7548%" y="821" width="0.1362%" height="15" fill="rgb(240,128,52)"/><text x="20.0048%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="19.7548%" y="805" width="0.1362%" height="15" fill="rgb(253,114,12)"/><text x="20.0048%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="19.7548%" y="789" width="0.1362%" height="15" fill="rgb(215,223,47)"/><text x="20.0048%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="19.7548%" y="773" width="0.1362%" height="15" fill="rgb(248,225,23)"/><text x="20.0048%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="19.7548%" y="757" width="0.1362%" height="15" fill="rgb(250,108,0)"/><text x="20.0048%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.14%)</title><rect x="19.7548%" y="741" width="0.1362%" height="15" fill="rgb(228,208,7)"/><text x="20.0048%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="19.7548%" y="725" width="0.1362%" height="15" fill="rgb(244,45,10)"/><text x="20.0048%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.14%)</title><rect x="19.7548%" y="709" width="0.1362%" height="15" fill="rgb(207,125,25)"/><text x="20.0048%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.14%)</title><rect x="19.7548%" y="693" width="0.1362%" height="15" fill="rgb(210,195,18)"/><text x="20.0048%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.14%)</title><rect x="19.7548%" y="677" width="0.1362%" height="15" fill="rgb(249,80,12)"/><text x="20.0048%" y="687.50"></text></g><g><title>do_lookup_x (1 samples, 0.14%)</title><rect x="19.7548%" y="661" width="0.1362%" height="15" fill="rgb(221,65,9)"/><text x="20.0048%" y="671.50"></text></g><g><title>lobsters::init_database (1 samples, 0.14%)</title><rect x="19.8910%" y="885" width="0.1362%" height="15" fill="rgb(235,49,36)"/><text x="20.1410%" y="895.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="19.8910%" y="869" width="0.1362%" height="15" fill="rgb(225,32,20)"/><text x="20.1410%" y="879.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="19.8910%" y="853" width="0.1362%" height="15" fill="rgb(215,141,46)"/><text x="20.1410%" y="863.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="19.8910%" y="837" width="0.1362%" height="15" fill="rgb(250,160,47)"/><text x="20.1410%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.14%)</title><rect x="19.8910%" y="821" width="0.1362%" height="15" fill="rgb(216,222,40)"/><text x="20.1410%" y="831.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.14%)</title><rect x="19.8910%" y="805" width="0.1362%" height="15" fill="rgb(234,217,39)"/><text x="20.1410%" y="815.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.14%)</title><rect x="19.8910%" y="789" width="0.1362%" height="15" fill="rgb(207,178,40)"/><text x="20.1410%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="19.8910%" y="773" width="0.1362%" height="15" fill="rgb(221,136,13)"/><text x="20.1410%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="19.8910%" y="757" width="0.1362%" height="15" fill="rgb(249,199,10)"/><text x="20.1410%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="19.8910%" y="741" width="0.1362%" height="15" fill="rgb(249,222,13)"/><text x="20.1410%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="19.8910%" y="725" width="0.1362%" height="15" fill="rgb(244,185,38)"/><text x="20.1410%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="19.8910%" y="709" width="0.1362%" height="15" fill="rgb(236,202,9)"/><text x="20.1410%" y="719.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="19.8910%" y="693" width="0.1362%" height="15" fill="rgb(250,229,37)"/><text x="20.1410%" y="703.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="19.8910%" y="677" width="0.1362%" height="15" fill="rgb(206,174,23)"/><text x="20.1410%" y="687.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="19.8910%" y="661" width="0.1362%" height="15" fill="rgb(211,33,43)"/><text x="20.1410%" y="671.50"></text></g><g><title>prep_new_page (1 samples, 0.14%)</title><rect x="19.8910%" y="645" width="0.1362%" height="15" fill="rgb(245,58,50)"/><text x="20.1410%" y="655.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.14%)</title><rect x="19.8910%" y="629" width="0.1362%" height="15" fill="rgb(244,68,36)"/><text x="20.1410%" y="639.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="19.8910%" y="613" width="0.1362%" height="15" fill="rgb(232,229,15)"/><text x="20.1410%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="20.0272%" y="821" width="0.1362%" height="15" fill="rgb(254,30,23)"/><text x="20.2772%" y="831.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="20.0272%" y="805" width="0.1362%" height="15" fill="rgb(235,160,14)"/><text x="20.2772%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="20.0272%" y="789" width="0.1362%" height="15" fill="rgb(212,155,44)"/><text x="20.2772%" y="799.50"></text></g><g><title>dst_release (3 samples, 0.41%)</title><rect x="21.3896%" y="581" width="0.4087%" height="15" fill="rgb(226,2,50)"/><text x="21.6396%" y="591.50"></text></g><g><title>__kfree_skb (6 samples, 0.82%)</title><rect x="21.2534%" y="613" width="0.8174%" height="15" fill="rgb(234,177,6)"/><text x="21.5034%" y="623.50"></text></g><g><title>skb_release_head_state (6 samples, 0.82%)</title><rect x="21.2534%" y="597" width="0.8174%" height="15" fill="rgb(217,24,9)"/><text x="21.5034%" y="607.50"></text></g><g><title>sock_rfree (2 samples, 0.27%)</title><rect x="21.7984%" y="581" width="0.2725%" height="15" fill="rgb(220,13,46)"/><text x="22.0484%" y="591.50"></text></g><g><title>kfree_skbmem (1 samples, 0.14%)</title><rect x="22.0708%" y="613" width="0.1362%" height="15" fill="rgb(239,221,27)"/><text x="22.3208%" y="623.50"></text></g><g><title>lock_sock_nested (1 samples, 0.14%)</title><rect x="22.2071%" y="613" width="0.1362%" height="15" fill="rgb(222,198,25)"/><text x="22.4571%" y="623.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="22.2071%" y="597" width="0.1362%" height="15" fill="rgb(211,99,13)"/><text x="22.4571%" y="607.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="22.2071%" y="581" width="0.1362%" height="15" fill="rgb(232,111,31)"/><text x="22.4571%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="22.3433%" y="597" width="0.1362%" height="15" fill="rgb(245,82,37)"/><text x="22.5933%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="22.3433%" y="581" width="0.1362%" height="15" fill="rgb(227,149,46)"/><text x="22.5933%" y="591.50"></text></g><g><title>release_sock (2 samples, 0.27%)</title><rect x="22.3433%" y="613" width="0.2725%" height="15" fill="rgb(218,36,50)"/><text x="22.5933%" y="623.50"></text></g><g><title>tcp_release_cb (1 samples, 0.14%)</title><rect x="22.4796%" y="597" width="0.1362%" height="15" fill="rgb(226,80,48)"/><text x="22.7296%" y="607.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.27%)</title><rect x="22.7520%" y="597" width="0.2725%" height="15" fill="rgb(238,224,15)"/><text x="23.0020%" y="607.50"></text></g><g><title>preempt_count_sub (2 samples, 0.27%)</title><rect x="22.7520%" y="581" width="0.2725%" height="15" fill="rgb(241,136,10)"/><text x="23.0020%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="23.0245%" y="597" width="0.1362%" height="15" fill="rgb(208,32,45)"/><text x="23.2745%" y="607.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.54%)</title><rect x="23.4332%" y="533" width="0.5450%" height="15" fill="rgb(207,135,9)"/><text x="23.6832%" y="543.50"></text></g><g><title>ctx_sched_out (3 samples, 0.41%)</title><rect x="23.5695%" y="517" width="0.4087%" height="15" fill="rgb(206,86,44)"/><text x="23.8195%" y="527.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.14%)</title><rect x="23.8420%" y="501" width="0.1362%" height="15" fill="rgb(245,177,15)"/><text x="24.0920%" y="511.50"></text></g><g><title>reweight_entity (1 samples, 0.14%)</title><rect x="24.1144%" y="501" width="0.1362%" height="15" fill="rgb(206,64,50)"/><text x="24.3644%" y="511.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.14%)</title><rect x="24.5232%" y="485" width="0.1362%" height="15" fill="rgb(234,36,40)"/><text x="24.7732%" y="495.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="24.5232%" y="469" width="0.1362%" height="15" fill="rgb(213,64,8)"/><text x="24.7732%" y="479.50"></text></g><g><title>update_curr (4 samples, 0.54%)</title><rect x="24.2507%" y="501" width="0.5450%" height="15" fill="rgb(210,75,36)"/><text x="24.5007%" y="511.50"></text></g><g><title>cpuacct_charge (1 samples, 0.14%)</title><rect x="24.6594%" y="485" width="0.1362%" height="15" fill="rgb(229,88,21)"/><text x="24.9094%" y="495.50"></text></g><g><title>dequeue_task_fair (8 samples, 1.09%)</title><rect x="23.9782%" y="533" width="1.0899%" height="15" fill="rgb(252,204,47)"/><text x="24.2282%" y="543.50"></text></g><g><title>dequeue_entity (7 samples, 0.95%)</title><rect x="24.1144%" y="517" width="0.9537%" height="15" fill="rgb(208,77,27)"/><text x="24.3644%" y="527.50"></text></g><g><title>update_load_avg (2 samples, 0.27%)</title><rect x="24.7956%" y="501" width="0.2725%" height="15" fill="rgb(221,76,26)"/><text x="25.0456%" y="511.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.14%)</title><rect x="24.9319%" y="485" width="0.1362%" height="15" fill="rgb(225,139,18)"/><text x="25.1819%" y="495.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.14%)</title><rect x="25.3406%" y="501" width="0.1362%" height="15" fill="rgb(230,137,11)"/><text x="25.5906%" y="511.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="25.3406%" y="485" width="0.1362%" height="15" fill="rgb(212,28,1)"/><text x="25.5906%" y="495.50"></text></g><g><title>finish_task_switch (4 samples, 0.54%)</title><rect x="25.0681%" y="533" width="0.5450%" height="15" fill="rgb(248,164,17)"/><text x="25.3181%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.27%)</title><rect x="25.3406%" y="517" width="0.2725%" height="15" fill="rgb(222,171,42)"/><text x="25.5906%" y="527.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="25.4768%" y="501" width="0.1362%" height="15" fill="rgb(243,84,45)"/><text x="25.7268%" y="511.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.14%)</title><rect x="25.6131%" y="533" width="0.1362%" height="15" fill="rgb(252,49,23)"/><text x="25.8631%" y="543.50"></text></g><g><title>__update_idle_core (1 samples, 0.14%)</title><rect x="25.6131%" y="517" width="0.1362%" height="15" fill="rgb(215,19,7)"/><text x="25.8631%" y="527.50"></text></g><g><title>psi_task_change (6 samples, 0.82%)</title><rect x="25.7493%" y="533" width="0.8174%" height="15" fill="rgb(238,81,41)"/><text x="25.9993%" y="543.50"></text></g><g><title>psi_group_change (5 samples, 0.68%)</title><rect x="25.8856%" y="517" width="0.6812%" height="15" fill="rgb(210,199,37)"/><text x="26.1356%" y="527.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="26.4305%" y="501" width="0.1362%" height="15" fill="rgb(244,192,49)"/><text x="26.6805%" y="511.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="26.4305%" y="485" width="0.1362%" height="15" fill="rgb(226,211,11)"/><text x="26.6805%" y="495.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="26.4305%" y="469" width="0.1362%" height="15" fill="rgb(236,162,54)"/><text x="26.6805%" y="479.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="26.4305%" y="453" width="0.1362%" height="15" fill="rgb(220,229,9)"/><text x="26.6805%" y="463.50"></text></g><g><title>put_prev_task_fair (4 samples, 0.54%)</title><rect x="26.5668%" y="533" width="0.5450%" height="15" fill="rgb(250,87,22)"/><text x="26.8168%" y="543.50"></text></g><g><title>put_prev_entity (1 samples, 0.14%)</title><rect x="26.9755%" y="517" width="0.1362%" height="15" fill="rgb(239,43,17)"/><text x="27.2255%" y="527.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.14%)</title><rect x="26.9755%" y="501" width="0.1362%" height="15" fill="rgb(231,177,25)"/><text x="27.2255%" y="511.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.14%)</title><rect x="27.1117%" y="533" width="0.1362%" height="15" fill="rgb(219,179,1)"/><text x="27.3617%" y="543.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.41%)</title><rect x="27.2480%" y="533" width="0.4087%" height="15" fill="rgb(238,219,53)"/><text x="27.4980%" y="543.50"></text></g><g><title>sk_wait_data (38 samples, 5.18%)</title><rect x="22.6158%" y="613" width="5.1771%" height="15" fill="rgb(232,167,36)"/><text x="22.8658%" y="623.50">sk_wai..</text></g><g><title>wait_woken (34 samples, 4.63%)</title><rect x="23.1608%" y="597" width="4.6322%" height="15" fill="rgb(244,19,51)"/><text x="23.4108%" y="607.50">wait_..</text></g><g><title>schedule_timeout (34 samples, 4.63%)</title><rect x="23.1608%" y="581" width="4.6322%" height="15" fill="rgb(224,6,22)"/><text x="23.4108%" y="591.50">sched..</text></g><g><title>schedule (34 samples, 4.63%)</title><rect x="23.1608%" y="565" width="4.6322%" height="15" fill="rgb(224,145,5)"/><text x="23.4108%" y="575.50">sched..</text></g><g><title>__schedule (34 samples, 4.63%)</title><rect x="23.1608%" y="549" width="4.6322%" height="15" fill="rgb(234,130,49)"/><text x="23.4108%" y="559.50">__sch..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="27.6567%" y="533" width="0.1362%" height="15" fill="rgb(254,6,2)"/><text x="27.9067%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (57 samples, 7.77%)</title><rect x="20.7084%" y="677" width="7.7657%" height="15" fill="rgb(208,96,46)"/><text x="20.9584%" y="687.50">__x64_sys_r..</text></g><g><title>__sys_recvfrom (57 samples, 7.77%)</title><rect x="20.7084%" y="661" width="7.7657%" height="15" fill="rgb(239,3,39)"/><text x="20.9584%" y="671.50">__sys_recvf..</text></g><g><title>inet_recvmsg (57 samples, 7.77%)</title><rect x="20.7084%" y="645" width="7.7657%" height="15" fill="rgb(233,210,1)"/><text x="20.9584%" y="655.50">inet_recvmsg</text></g><g><title>tcp_recvmsg (56 samples, 7.63%)</title><rect x="20.8447%" y="629" width="7.6294%" height="15" fill="rgb(244,137,37)"/><text x="21.0947%" y="639.50">tcp_recvmsg</text></g><g><title>skb_copy_datagram_iter (5 samples, 0.68%)</title><rect x="27.7929%" y="613" width="0.6812%" height="15" fill="rgb(240,136,2)"/><text x="28.0429%" y="623.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.68%)</title><rect x="27.7929%" y="597" width="0.6812%" height="15" fill="rgb(239,18,37)"/><text x="28.0429%" y="607.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.41%)</title><rect x="28.0654%" y="581" width="0.4087%" height="15" fill="rgb(218,185,22)"/><text x="28.3154%" y="591.50"></text></g><g><title>__check_object_size (2 samples, 0.27%)</title><rect x="28.2016%" y="565" width="0.2725%" height="15" fill="rgb(225,218,4)"/><text x="28.4516%" y="575.50"></text></g><g><title>syscall_slow_exit_work (2 samples, 0.27%)</title><rect x="28.4741%" y="677" width="0.2725%" height="15" fill="rgb(230,182,32)"/><text x="28.7241%" y="687.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.27%)</title><rect x="28.4741%" y="661" width="0.2725%" height="15" fill="rgb(242,56,43)"/><text x="28.7241%" y="671.50"></text></g><g><title>do_syscall_64 (60 samples, 8.17%)</title><rect x="20.7084%" y="693" width="8.1744%" height="15" fill="rgb(233,99,24)"/><text x="20.9584%" y="703.50">do_syscall_..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="28.7466%" y="677" width="0.1362%" height="15" fill="rgb(234,209,42)"/><text x="28.9966%" y="687.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.14%)</title><rect x="28.7466%" y="661" width="0.1362%" height="15" fill="rgb(227,7,12)"/><text x="28.9966%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (63 samples, 8.58%)</title><rect x="20.7084%" y="709" width="8.5831%" height="15" fill="rgb(245,203,43)"/><text x="20.9584%" y="719.50">entry_SYSCAL..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.41%)</title><rect x="28.8828%" y="693" width="0.4087%" height="15" fill="rgb(238,205,33)"/><text x="29.1328%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (66 samples, 8.99%)</title><rect x="20.4360%" y="805" width="8.9918%" height="15" fill="rgb(231,56,7)"/><text x="20.6860%" y="815.50">&lt;std::io::buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (65 samples, 8.86%)</title><rect x="20.5722%" y="789" width="8.8556%" height="15" fill="rgb(244,186,29)"/><text x="20.8222%" y="799.50">&lt;std::net::tc..</text></g><g><title>std::sys_common::net::TcpStream::read (65 samples, 8.86%)</title><rect x="20.5722%" y="773" width="8.8556%" height="15" fill="rgb(234,111,31)"/><text x="20.8222%" y="783.50">std::sys_comm..</text></g><g><title>std::sys::unix::net::Socket::read (65 samples, 8.86%)</title><rect x="20.5722%" y="757" width="8.8556%" height="15" fill="rgb(241,149,10)"/><text x="20.8222%" y="767.50">std::sys::uni..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (65 samples, 8.86%)</title><rect x="20.5722%" y="741" width="8.8556%" height="15" fill="rgb(249,206,44)"/><text x="20.8222%" y="751.50">std::sys::uni..</text></g><g><title>__libc_recv (65 samples, 8.86%)</title><rect x="20.5722%" y="725" width="8.8556%" height="15" fill="rgb(251,153,30)"/><text x="20.8222%" y="735.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="29.2916%" y="709" width="0.1362%" height="15" fill="rgb(239,152,38)"/><text x="29.5416%" y="719.50"></text></g><g><title>lobsters::main (74 samples, 10.08%)</title><rect x="19.7548%" y="901" width="10.0817%" height="15" fill="rgb(249,139,47)"/><text x="20.0048%" y="911.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (72 samples, 9.81%)</title><rect x="20.0272%" y="885" width="9.8093%" height="15" fill="rgb(244,64,35)"/><text x="20.2772%" y="895.50">mysql::conn::q..</text></g><g><title>mysql::conn::Conn::_query (72 samples, 9.81%)</title><rect x="20.0272%" y="869" width="9.8093%" height="15" fill="rgb(216,46,15)"/><text x="20.2772%" y="879.50">mysql::conn::C..</text></g><g><title>mysql::conn::Conn::handle_result_set (72 samples, 9.81%)</title><rect x="20.0272%" y="853" width="9.8093%" height="15" fill="rgb(250,74,19)"/><text x="20.2772%" y="863.50">mysql::conn::C..</text></g><g><title>mysql::conn::Conn::read_packet (72 samples, 9.81%)</title><rect x="20.0272%" y="837" width="9.8093%" height="15" fill="rgb(249,42,33)"/><text x="20.2772%" y="847.50">mysql::conn::C..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 9.67%)</title><rect x="20.1635%" y="821" width="9.6730%" height="15" fill="rgb(242,149,17)"/><text x="20.4135%" y="831.50">&lt;mysql_common:..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.41%)</title><rect x="29.4278%" y="805" width="0.4087%" height="15" fill="rgb(244,29,21)"/><text x="29.6778%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.41%)</title><rect x="29.4278%" y="789" width="0.4087%" height="15" fill="rgb(220,130,37)"/><text x="29.6778%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.27%)</title><rect x="29.5640%" y="773" width="0.2725%" height="15" fill="rgb(211,67,2)"/><text x="29.8140%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.27%)</title><rect x="29.5640%" y="757" width="0.2725%" height="15" fill="rgb(235,68,52)"/><text x="29.8140%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="29.7003%" y="741" width="0.1362%" height="15" fill="rgb(246,142,3)"/><text x="29.9503%" y="751.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="30.1090%" y="837" width="0.1362%" height="15" fill="rgb(241,25,7)"/><text x="30.3590%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="30.1090%" y="821" width="0.1362%" height="15" fill="rgb(242,119,39)"/><text x="30.3590%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="30.1090%" y="805" width="0.1362%" height="15" fill="rgb(241,98,45)"/><text x="30.3590%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="30.1090%" y="789" width="0.1362%" height="15" fill="rgb(254,28,30)"/><text x="30.3590%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="30.1090%" y="773" width="0.1362%" height="15" fill="rgb(241,142,54)"/><text x="30.3590%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="30.1090%" y="757" width="0.1362%" height="15" fill="rgb(222,85,15)"/><text x="30.3590%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="30.1090%" y="741" width="0.1362%" height="15" fill="rgb(210,85,47)"/><text x="30.3590%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="30.1090%" y="725" width="0.1362%" height="15" fill="rgb(224,206,25)"/><text x="30.3590%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="30.1090%" y="709" width="0.1362%" height="15" fill="rgb(243,201,19)"/><text x="30.3590%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="30.1090%" y="693" width="0.1362%" height="15" fill="rgb(236,59,4)"/><text x="30.3590%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="30.1090%" y="677" width="0.1362%" height="15" fill="rgb(254,179,45)"/><text x="30.3590%" y="687.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="30.1090%" y="661" width="0.1362%" height="15" fill="rgb(226,14,10)"/><text x="30.3590%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="30.1090%" y="645" width="0.1362%" height="15" fill="rgb(244,27,41)"/><text x="30.3590%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="30.1090%" y="629" width="0.1362%" height="15" fill="rgb(235,35,32)"/><text x="30.3590%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="30.1090%" y="613" width="0.1362%" height="15" fill="rgb(218,68,31)"/><text x="30.3590%" y="623.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="30.1090%" y="597" width="0.1362%" height="15" fill="rgb(207,120,37)"/><text x="30.3590%" y="607.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="30.1090%" y="581" width="0.1362%" height="15" fill="rgb(227,98,0)"/><text x="30.3590%" y="591.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="30.1090%" y="565" width="0.1362%" height="15" fill="rgb(207,7,3)"/><text x="30.3590%" y="575.50"></text></g><g><title>sk_wait_data (1 samples, 0.14%)</title><rect x="30.1090%" y="549" width="0.1362%" height="15" fill="rgb(206,98,19)"/><text x="30.3590%" y="559.50"></text></g><g><title>wait_woken (1 samples, 0.14%)</title><rect x="30.1090%" y="533" width="0.1362%" height="15" fill="rgb(217,5,26)"/><text x="30.3590%" y="543.50"></text></g><g><title>schedule_timeout (1 samples, 0.14%)</title><rect x="30.1090%" y="517" width="0.1362%" height="15" fill="rgb(235,190,38)"/><text x="30.3590%" y="527.50"></text></g><g><title>schedule (1 samples, 0.14%)</title><rect x="30.1090%" y="501" width="0.1362%" height="15" fill="rgb(247,86,24)"/><text x="30.3590%" y="511.50"></text></g><g><title>__schedule (1 samples, 0.14%)</title><rect x="30.1090%" y="485" width="0.1362%" height="15" fill="rgb(205,101,16)"/><text x="30.3590%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.14%)</title><rect x="30.1090%" y="469" width="0.1362%" height="15" fill="rgb(246,168,33)"/><text x="30.3590%" y="479.50"></text></g><g><title>ctx_sched_out (1 samples, 0.14%)</title><rect x="30.1090%" y="453" width="0.1362%" height="15" fill="rgb(231,114,1)"/><text x="30.3590%" y="463.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="30.2452%" y="789" width="0.1362%" height="15" fill="rgb(207,184,53)"/><text x="30.4952%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="30.2452%" y="773" width="0.1362%" height="15" fill="rgb(224,95,51)"/><text x="30.4952%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="30.2452%" y="757" width="0.1362%" height="15" fill="rgb(212,188,45)"/><text x="30.4952%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="30.2452%" y="741" width="0.1362%" height="15" fill="rgb(223,154,38)"/><text x="30.4952%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="30.2452%" y="725" width="0.1362%" height="15" fill="rgb(251,22,52)"/><text x="30.4952%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="30.2452%" y="709" width="0.1362%" height="15" fill="rgb(229,209,22)"/><text x="30.4952%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="30.2452%" y="693" width="0.1362%" height="15" fill="rgb(234,138,34)"/><text x="30.4952%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="30.2452%" y="677" width="0.1362%" height="15" fill="rgb(212,95,11)"/><text x="30.4952%" y="687.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="30.2452%" y="661" width="0.1362%" height="15" fill="rgb(240,179,47)"/><text x="30.4952%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="30.2452%" y="645" width="0.1362%" height="15" fill="rgb(240,163,11)"/><text x="30.4952%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="30.2452%" y="629" width="0.1362%" height="15" fill="rgb(236,37,12)"/><text x="30.4952%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="30.2452%" y="613" width="0.1362%" height="15" fill="rgb(232,164,16)"/><text x="30.4952%" y="623.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="30.2452%" y="597" width="0.1362%" height="15" fill="rgb(244,205,15)"/><text x="30.4952%" y="607.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="30.2452%" y="581" width="0.1362%" height="15" fill="rgb(223,117,47)"/><text x="30.4952%" y="591.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="30.2452%" y="565" width="0.1362%" height="15" fill="rgb(244,107,35)"/><text x="30.4952%" y="575.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (5 samples, 0.68%)</title><rect x="29.8365%" y="901" width="0.6812%" height="15" fill="rgb(205,140,8)"/><text x="30.0865%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.41%)</title><rect x="30.1090%" y="885" width="0.4087%" height="15" fill="rgb(228,84,46)"/><text x="30.3590%" y="895.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.41%)</title><rect x="30.1090%" y="869" width="0.4087%" height="15" fill="rgb(254,188,9)"/><text x="30.3590%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.41%)</title><rect x="30.1090%" y="853" width="0.4087%" height="15" fill="rgb(206,112,54)"/><text x="30.3590%" y="863.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (2 samples, 0.27%)</title><rect x="30.2452%" y="837" width="0.2725%" height="15" fill="rgb(216,84,49)"/><text x="30.4952%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.27%)</title><rect x="30.2452%" y="821" width="0.2725%" height="15" fill="rgb(214,194,35)"/><text x="30.4952%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.27%)</title><rect x="30.2452%" y="805" width="0.2725%" height="15" fill="rgb(249,28,3)"/><text x="30.4952%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="30.3815%" y="789" width="0.1362%" height="15" fill="rgb(222,56,52)"/><text x="30.6315%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="30.3815%" y="773" width="0.1362%" height="15" fill="rgb(245,217,50)"/><text x="30.6315%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="30.3815%" y="757" width="0.1362%" height="15" fill="rgb(213,201,24)"/><text x="30.6315%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="30.3815%" y="741" width="0.1362%" height="15" fill="rgb(248,116,28)"/><text x="30.6315%" y="751.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="30.3815%" y="725" width="0.1362%" height="15" fill="rgb(219,72,43)"/><text x="30.6315%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="30.3815%" y="709" width="0.1362%" height="15" fill="rgb(209,138,14)"/><text x="30.6315%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="30.3815%" y="693" width="0.1362%" height="15" fill="rgb(222,18,33)"/><text x="30.6315%" y="703.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="30.3815%" y="677" width="0.1362%" height="15" fill="rgb(213,199,7)"/><text x="30.6315%" y="687.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="30.3815%" y="661" width="0.1362%" height="15" fill="rgb(250,110,10)"/><text x="30.6315%" y="671.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="30.3815%" y="645" width="0.1362%" height="15" fill="rgb(248,123,6)"/><text x="30.6315%" y="655.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="30.3815%" y="629" width="0.1362%" height="15" fill="rgb(206,91,31)"/><text x="30.6315%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="30.3815%" y="613" width="0.1362%" height="15" fill="rgb(211,154,13)"/><text x="30.6315%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="30.3815%" y="597" width="0.1362%" height="15" fill="rgb(225,148,7)"/><text x="30.6315%" y="607.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="30.3815%" y="581" width="0.1362%" height="15" fill="rgb(220,160,43)"/><text x="30.6315%" y="591.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="30.3815%" y="565" width="0.1362%" height="15" fill="rgb(213,52,39)"/><text x="30.6315%" y="575.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="30.3815%" y="549" width="0.1362%" height="15" fill="rgb(243,137,7)"/><text x="30.6315%" y="559.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="30.3815%" y="533" width="0.1362%" height="15" fill="rgb(230,79,13)"/><text x="30.6315%" y="543.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="30.3815%" y="517" width="0.1362%" height="15" fill="rgb(247,105,23)"/><text x="30.6315%" y="527.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="30.3815%" y="501" width="0.1362%" height="15" fill="rgb(223,179,41)"/><text x="30.6315%" y="511.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="30.3815%" y="485" width="0.1362%" height="15" fill="rgb(218,9,34)"/><text x="30.6315%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="30.3815%" y="469" width="0.1362%" height="15" fill="rgb(222,106,8)"/><text x="30.6315%" y="479.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.14%)</title><rect x="30.3815%" y="453" width="0.1362%" height="15" fill="rgb(211,220,0)"/><text x="30.6315%" y="463.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.14%)</title><rect x="30.5177%" y="901" width="0.1362%" height="15" fill="rgb(229,52,16)"/><text x="30.7677%" y="911.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.14%)</title><rect x="30.6540%" y="901" width="0.1362%" height="15" fill="rgb(212,155,18)"/><text x="30.9040%" y="911.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.27%)</title><rect x="30.7902%" y="901" width="0.2725%" height="15" fill="rgb(242,21,14)"/><text x="31.0402%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.14%)</title><rect x="31.0627%" y="901" width="0.1362%" height="15" fill="rgb(222,19,48)"/><text x="31.3127%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.14%)</title><rect x="31.0627%" y="885" width="0.1362%" height="15" fill="rgb(232,45,27)"/><text x="31.3127%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.14%)</title><rect x="31.0627%" y="869" width="0.1362%" height="15" fill="rgb(249,103,42)"/><text x="31.3127%" y="879.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.14%)</title><rect x="31.0627%" y="853" width="0.1362%" height="15" fill="rgb(246,81,33)"/><text x="31.3127%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.14%)</title><rect x="31.0627%" y="837" width="0.1362%" height="15" fill="rgb(252,33,42)"/><text x="31.3127%" y="847.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.14%)</title><rect x="31.0627%" y="821" width="0.1362%" height="15" fill="rgb(209,212,41)"/><text x="31.3127%" y="831.50"></text></g><g><title>regex::compile::SuffixCache::get (1 samples, 0.14%)</title><rect x="31.0627%" y="805" width="0.1362%" height="15" fill="rgb(207,154,6)"/><text x="31.3127%" y="815.50"></text></g><g><title>link_path_walk (1 samples, 0.14%)</title><rect x="31.1989%" y="581" width="0.1362%" height="15" fill="rgb(223,64,47)"/><text x="31.4489%" y="591.50"></text></g><g><title>walk_component (1 samples, 0.14%)</title><rect x="31.1989%" y="565" width="0.1362%" height="15" fill="rgb(211,161,38)"/><text x="31.4489%" y="575.50"></text></g><g><title>step_into (1 samples, 0.14%)</title><rect x="31.1989%" y="549" width="0.1362%" height="15" fill="rgb(219,138,40)"/><text x="31.4489%" y="559.50"></text></g><g><title>kernfs_iop_get_link (1 samples, 0.14%)</title><rect x="31.1989%" y="533" width="0.1362%" height="15" fill="rgb(241,228,46)"/><text x="31.4489%" y="543.50"></text></g><g><title>mutex_lock (1 samples, 0.14%)</title><rect x="31.1989%" y="517" width="0.1362%" height="15" fill="rgb(223,209,38)"/><text x="31.4489%" y="527.50"></text></g><g><title>do_syscall_64 (2 samples, 0.27%)</title><rect x="31.1989%" y="661" width="0.2725%" height="15" fill="rgb(236,164,45)"/><text x="31.4489%" y="671.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.27%)</title><rect x="31.1989%" y="645" width="0.2725%" height="15" fill="rgb(231,15,5)"/><text x="31.4489%" y="655.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.27%)</title><rect x="31.1989%" y="629" width="0.2725%" height="15" fill="rgb(252,35,15)"/><text x="31.4489%" y="639.50"></text></g><g><title>do_filp_open (2 samples, 0.27%)</title><rect x="31.1989%" y="613" width="0.2725%" height="15" fill="rgb(248,181,18)"/><text x="31.4489%" y="623.50"></text></g><g><title>path_openat (2 samples, 0.27%)</title><rect x="31.1989%" y="597" width="0.2725%" height="15" fill="rgb(233,39,42)"/><text x="31.4489%" y="607.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.14%)</title><rect x="31.3351%" y="581" width="0.1362%" height="15" fill="rgb(238,110,33)"/><text x="31.5851%" y="591.50"></text></g><g><title>__d_lookup (1 samples, 0.14%)</title><rect x="31.3351%" y="565" width="0.1362%" height="15" fill="rgb(233,195,10)"/><text x="31.5851%" y="575.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.41%)</title><rect x="31.1989%" y="901" width="0.4087%" height="15" fill="rgb(254,105,3)"/><text x="31.4489%" y="911.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.41%)</title><rect x="31.1989%" y="885" width="0.4087%" height="15" fill="rgb(221,225,9)"/><text x="31.4489%" y="895.50"></text></g><g><title>std::panicking::try (3 samples, 0.41%)</title><rect x="31.1989%" y="869" width="0.4087%" height="15" fill="rgb(224,227,45)"/><text x="31.4489%" y="879.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.41%)</title><rect x="31.1989%" y="853" width="0.4087%" height="15" fill="rgb(229,198,43)"/><text x="31.4489%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.41%)</title><rect x="31.1989%" y="837" width="0.4087%" height="15" fill="rgb(206,209,35)"/><text x="31.4489%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.41%)</title><rect x="31.1989%" y="821" width="0.4087%" height="15" fill="rgb(245,195,53)"/><text x="31.4489%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.41%)</title><rect x="31.1989%" y="805" width="0.4087%" height="15" fill="rgb(240,92,26)"/><text x="31.4489%" y="815.50"></text></g><g><title>lobsters::main (3 samples, 0.41%)</title><rect x="31.1989%" y="789" width="0.4087%" height="15" fill="rgb(207,40,23)"/><text x="31.4489%" y="799.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.41%)</title><rect x="31.1989%" y="773" width="0.4087%" height="15" fill="rgb(223,111,35)"/><text x="31.4489%" y="783.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.41%)</title><rect x="31.1989%" y="757" width="0.4087%" height="15" fill="rgb(229,147,28)"/><text x="31.4489%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.41%)</title><rect x="31.1989%" y="741" width="0.4087%" height="15" fill="rgb(211,29,28)"/><text x="31.4489%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.41%)</title><rect x="31.1989%" y="725" width="0.4087%" height="15" fill="rgb(228,72,33)"/><text x="31.4489%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.41%)</title><rect x="31.1989%" y="709" width="0.4087%" height="15" fill="rgb(205,214,31)"/><text x="31.4489%" y="719.50"></text></g><g><title>__GI___openat (3 samples, 0.41%)</title><rect x="31.1989%" y="693" width="0.4087%" height="15" fill="rgb(224,111,15)"/><text x="31.4489%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.41%)</title><rect x="31.1989%" y="677" width="0.4087%" height="15" fill="rgb(253,21,26)"/><text x="31.4489%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="31.4714%" y="661" width="0.1362%" height="15" fill="rgb(245,139,43)"/><text x="31.7214%" y="671.50"></text></g><g><title>[unknown] (219 samples, 29.84%)</title><rect x="1.9074%" y="917" width="29.8365%" height="15" fill="rgb(252,170,7)"/><text x="2.1574%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.14%)</title><rect x="31.6076%" y="901" width="0.1362%" height="15" fill="rgb(231,118,14)"/><text x="31.8576%" y="911.50"></text></g><g><title>lobsters::main (1 samples, 0.14%)</title><rect x="31.6076%" y="885" width="0.1362%" height="15" fill="rgb(238,83,0)"/><text x="31.8576%" y="895.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="31.6076%" y="869" width="0.1362%" height="15" fill="rgb(221,39,39)"/><text x="31.8576%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="31.6076%" y="853" width="0.1362%" height="15" fill="rgb(222,119,46)"/><text x="31.8576%" y="863.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.14%)</title><rect x="31.6076%" y="837" width="0.1362%" height="15" fill="rgb(222,165,49)"/><text x="31.8576%" y="847.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="31.6076%" y="821" width="0.1362%" height="15" fill="rgb(219,113,52)"/><text x="31.8576%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.27%)</title><rect x="32.0163%" y="773" width="0.2725%" height="15" fill="rgb(214,7,15)"/><text x="32.2663%" y="783.50"></text></g><g><title>mysql::conn::Conn::select_db (1 samples, 0.14%)</title><rect x="32.1526%" y="757" width="0.1362%" height="15" fill="rgb(235,32,4)"/><text x="32.4026%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="32.1526%" y="741" width="0.1362%" height="15" fill="rgb(238,90,54)"/><text x="32.4026%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="32.1526%" y="725" width="0.1362%" height="15" fill="rgb(213,208,19)"/><text x="32.4026%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="32.1526%" y="709" width="0.1362%" height="15" fill="rgb(233,156,4)"/><text x="32.4026%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="32.1526%" y="693" width="0.1362%" height="15" fill="rgb(207,194,5)"/><text x="32.4026%" y="703.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="32.1526%" y="677" width="0.1362%" height="15" fill="rgb(206,111,30)"/><text x="32.4026%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="32.1526%" y="661" width="0.1362%" height="15" fill="rgb(243,70,54)"/><text x="32.4026%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="32.1526%" y="645" width="0.1362%" height="15" fill="rgb(242,28,8)"/><text x="32.4026%" y="655.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="32.1526%" y="629" width="0.1362%" height="15" fill="rgb(219,106,18)"/><text x="32.4026%" y="639.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="32.1526%" y="613" width="0.1362%" height="15" fill="rgb(244,222,10)"/><text x="32.4026%" y="623.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="32.1526%" y="597" width="0.1362%" height="15" fill="rgb(236,179,52)"/><text x="32.4026%" y="607.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="32.1526%" y="581" width="0.1362%" height="15" fill="rgb(213,23,39)"/><text x="32.4026%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="32.1526%" y="565" width="0.1362%" height="15" fill="rgb(238,48,10)"/><text x="32.4026%" y="575.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="32.1526%" y="549" width="0.1362%" height="15" fill="rgb(251,196,23)"/><text x="32.4026%" y="559.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.14%)</title><rect x="32.1526%" y="533" width="0.1362%" height="15" fill="rgb(250,152,24)"/><text x="32.4026%" y="543.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.14%)</title><rect x="32.1526%" y="517" width="0.1362%" height="15" fill="rgb(209,150,17)"/><text x="32.4026%" y="527.50"></text></g><g><title>decor::helpers::answer_rows (2 samples, 0.27%)</title><rect x="32.2888%" y="757" width="0.2725%" height="15" fill="rgb(234,202,34)"/><text x="32.5388%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="32.4251%" y="741" width="0.1362%" height="15" fill="rgb(253,148,53)"/><text x="32.6751%" y="751.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="32.6975%" y="709" width="0.1362%" height="15" fill="rgb(218,129,16)"/><text x="32.9475%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_ok (3 samples, 0.41%)</title><rect x="32.6975%" y="725" width="0.4087%" height="15" fill="rgb(216,85,19)"/><text x="32.9475%" y="735.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (2 samples, 0.27%)</title><rect x="32.8338%" y="709" width="0.2725%" height="15" fill="rgb(235,228,7)"/><text x="33.0838%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.14%)</title><rect x="33.1063%" y="709" width="0.1362%" height="15" fill="rgb(245,175,0)"/><text x="33.3563%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="33.1063%" y="693" width="0.1362%" height="15" fill="rgb(208,168,36)"/><text x="33.3563%" y="703.50"></text></g><g><title>lock_sock_nested (1 samples, 0.14%)</title><rect x="33.7875%" y="501" width="0.1362%" height="15" fill="rgb(246,171,24)"/><text x="34.0375%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="33.7875%" y="485" width="0.1362%" height="15" fill="rgb(215,142,24)"/><text x="34.0375%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="33.7875%" y="469" width="0.1362%" height="15" fill="rgb(250,187,7)"/><text x="34.0375%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="33.9237%" y="485" width="0.1362%" height="15" fill="rgb(228,66,33)"/><text x="34.1737%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="33.9237%" y="469" width="0.1362%" height="15" fill="rgb(234,215,21)"/><text x="34.1737%" y="479.50"></text></g><g><title>remove_wait_queue (1 samples, 0.14%)</title><rect x="34.0599%" y="485" width="0.1362%" height="15" fill="rgb(222,191,20)"/><text x="34.3099%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="34.0599%" y="469" width="0.1362%" height="15" fill="rgb(245,79,54)"/><text x="34.3099%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.14%)</title><rect x="34.6049%" y="421" width="0.1362%" height="15" fill="rgb(240,10,37)"/><text x="34.8549%" y="431.50"></text></g><g><title>ctx_sched_out (1 samples, 0.14%)</title><rect x="34.6049%" y="405" width="0.1362%" height="15" fill="rgb(214,192,32)"/><text x="34.8549%" y="415.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.14%)</title><rect x="34.7411%" y="373" width="0.1362%" height="15" fill="rgb(209,36,54)"/><text x="34.9911%" y="383.50"></text></g><g><title>update_curr (3 samples, 0.41%)</title><rect x="34.7411%" y="389" width="0.4087%" height="15" fill="rgb(220,10,11)"/><text x="34.9911%" y="399.50"></text></g><g><title>update_min_vruntime (2 samples, 0.27%)</title><rect x="34.8774%" y="373" width="0.2725%" height="15" fill="rgb(221,106,17)"/><text x="35.1274%" y="383.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.54%)</title><rect x="34.7411%" y="421" width="0.5450%" height="15" fill="rgb(251,142,44)"/><text x="34.9911%" y="431.50"></text></g><g><title>dequeue_entity (4 samples, 0.54%)</title><rect x="34.7411%" y="405" width="0.5450%" height="15" fill="rgb(238,13,15)"/><text x="34.9911%" y="415.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="35.1499%" y="389" width="0.1362%" height="15" fill="rgb(208,107,27)"/><text x="35.3999%" y="399.50"></text></g><g><title>finish_task_switch (2 samples, 0.27%)</title><rect x="35.2861%" y="421" width="0.2725%" height="15" fill="rgb(205,136,37)"/><text x="35.5361%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.27%)</title><rect x="35.2861%" y="405" width="0.2725%" height="15" fill="rgb(250,205,27)"/><text x="35.5361%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.27%)</title><rect x="35.2861%" y="389" width="0.2725%" height="15" fill="rgb(210,80,43)"/><text x="35.5361%" y="399.50"></text></g><g><title>native_write_msr (2 samples, 0.27%)</title><rect x="35.2861%" y="373" width="0.2725%" height="15" fill="rgb(247,160,36)"/><text x="35.5361%" y="383.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.14%)</title><rect x="35.5586%" y="421" width="0.1362%" height="15" fill="rgb(234,13,49)"/><text x="35.8086%" y="431.50"></text></g><g><title>newidle_balance (1 samples, 0.14%)</title><rect x="35.5586%" y="405" width="0.1362%" height="15" fill="rgb(234,122,0)"/><text x="35.8086%" y="415.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.27%)</title><rect x="35.6948%" y="421" width="0.2725%" height="15" fill="rgb(207,146,38)"/><text x="35.9448%" y="431.50"></text></g><g><title>put_prev_entity (2 samples, 0.27%)</title><rect x="35.6948%" y="405" width="0.2725%" height="15" fill="rgb(207,177,25)"/><text x="35.9448%" y="415.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.14%)</title><rect x="35.9673%" y="421" width="0.1362%" height="15" fill="rgb(211,178,42)"/><text x="36.2173%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.27%)</title><rect x="36.1035%" y="421" width="0.2725%" height="15" fill="rgb(230,69,54)"/><text x="36.3535%" y="431.50"></text></g><g><title>__schedule (14 samples, 1.91%)</title><rect x="34.6049%" y="437" width="1.9074%" height="15" fill="rgb(214,135,41)"/><text x="34.8549%" y="447.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="36.3760%" y="421" width="0.1362%" height="15" fill="rgb(237,67,25)"/><text x="36.6260%" y="431.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.14%)</title><rect x="36.3760%" y="405" width="0.1362%" height="15" fill="rgb(222,189,50)"/><text x="36.6260%" y="415.50"></text></g><g><title>sk_wait_data (20 samples, 2.72%)</title><rect x="33.9237%" y="501" width="2.7248%" height="15" fill="rgb(245,148,34)"/><text x="34.1737%" y="511.50">sk..</text></g><g><title>wait_woken (18 samples, 2.45%)</title><rect x="34.1962%" y="485" width="2.4523%" height="15" fill="rgb(222,29,6)"/><text x="34.4462%" y="495.50">wa..</text></g><g><title>schedule_timeout (16 samples, 2.18%)</title><rect x="34.4687%" y="469" width="2.1798%" height="15" fill="rgb(221,189,43)"/><text x="34.7187%" y="479.50">s..</text></g><g><title>schedule (15 samples, 2.04%)</title><rect x="34.6049%" y="453" width="2.0436%" height="15" fill="rgb(207,36,27)"/><text x="34.8549%" y="463.50">s..</text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="36.5123%" y="437" width="0.1362%" height="15" fill="rgb(217,90,24)"/><text x="36.7623%" y="447.50"></text></g><g><title>__count_memcg_events (1 samples, 0.14%)</title><rect x="36.7847%" y="389" width="0.1362%" height="15" fill="rgb(224,66,35)"/><text x="37.0347%" y="399.50"></text></g><g><title>__count_memcg_events.part.0 (1 samples, 0.14%)</title><rect x="36.9210%" y="389" width="0.1362%" height="15" fill="rgb(221,13,50)"/><text x="37.1710%" y="399.50"></text></g><g><title>_copy_to_iter (3 samples, 0.41%)</title><rect x="36.7847%" y="469" width="0.4087%" height="15" fill="rgb(236,68,49)"/><text x="37.0347%" y="479.50"></text></g><g><title>copy_user_generic_unrolled (3 samples, 0.41%)</title><rect x="36.7847%" y="453" width="0.4087%" height="15" fill="rgb(229,146,28)"/><text x="37.0347%" y="463.50"></text></g><g><title>page_fault (3 samples, 0.41%)</title><rect x="36.7847%" y="437" width="0.4087%" height="15" fill="rgb(225,31,38)"/><text x="37.0347%" y="447.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.41%)</title><rect x="36.7847%" y="421" width="0.4087%" height="15" fill="rgb(250,208,3)"/><text x="37.0347%" y="431.50"></text></g><g><title>handle_mm_fault (3 samples, 0.41%)</title><rect x="36.7847%" y="405" width="0.4087%" height="15" fill="rgb(246,54,23)"/><text x="37.0347%" y="415.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="37.0572%" y="389" width="0.1362%" height="15" fill="rgb(243,76,11)"/><text x="37.3072%" y="399.50"></text></g><g><title>mem_cgroup_commit_charge (1 samples, 0.14%)</title><rect x="37.0572%" y="373" width="0.1362%" height="15" fill="rgb(245,21,50)"/><text x="37.3072%" y="383.50"></text></g><g><title>memcg_check_events (1 samples, 0.14%)</title><rect x="37.0572%" y="357" width="0.1362%" height="15" fill="rgb(228,9,43)"/><text x="37.3072%" y="367.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.68%)</title><rect x="36.6485%" y="501" width="0.6812%" height="15" fill="rgb(208,100,47)"/><text x="36.8985%" y="511.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.68%)</title><rect x="36.6485%" y="485" width="0.6812%" height="15" fill="rgb(232,26,8)"/><text x="36.8985%" y="495.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.14%)</title><rect x="37.1935%" y="469" width="0.1362%" height="15" fill="rgb(216,166,38)"/><text x="37.4435%" y="479.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="37.1935%" y="453" width="0.1362%" height="15" fill="rgb(251,202,51)"/><text x="37.4435%" y="463.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.14%)</title><rect x="37.1935%" y="437" width="0.1362%" height="15" fill="rgb(254,216,34)"/><text x="37.4435%" y="447.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.14%)</title><rect x="37.3297%" y="501" width="0.1362%" height="15" fill="rgb(251,32,27)"/><text x="37.5797%" y="511.50"></text></g><g><title>inet_recvmsg (30 samples, 4.09%)</title><rect x="33.5150%" y="533" width="4.0872%" height="15" fill="rgb(208,127,28)"/><text x="33.7650%" y="543.50">inet..</text></g><g><title>tcp_recvmsg (29 samples, 3.95%)</title><rect x="33.6512%" y="517" width="3.9510%" height="15" fill="rgb(224,137,22)"/><text x="33.9012%" y="527.50">tcp_..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.14%)</title><rect x="37.4659%" y="501" width="0.1362%" height="15" fill="rgb(254,70,32)"/><text x="37.7159%" y="511.50"></text></g><g><title>sock_recvmsg (1 samples, 0.14%)</title><rect x="37.6022%" y="533" width="0.1362%" height="15" fill="rgb(229,75,37)"/><text x="37.8522%" y="543.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.14%)</title><rect x="37.6022%" y="517" width="0.1362%" height="15" fill="rgb(252,64,23)"/><text x="37.8522%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (32 samples, 4.36%)</title><rect x="33.5150%" y="565" width="4.3597%" height="15" fill="rgb(232,162,48)"/><text x="33.7650%" y="575.50">__x64..</text></g><g><title>__sys_recvfrom (32 samples, 4.36%)</title><rect x="33.5150%" y="549" width="4.3597%" height="15" fill="rgb(246,160,12)"/><text x="33.7650%" y="559.50">__sys..</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="37.7384%" y="533" width="0.1362%" height="15" fill="rgb(247,166,0)"/><text x="37.9884%" y="543.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="37.7384%" y="517" width="0.1362%" height="15" fill="rgb(249,219,21)"/><text x="37.9884%" y="527.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="37.7384%" y="501" width="0.1362%" height="15" fill="rgb(205,209,3)"/><text x="37.9884%" y="511.50"></text></g><g><title>do_syscall_64 (35 samples, 4.77%)</title><rect x="33.3787%" y="581" width="4.7684%" height="15" fill="rgb(243,44,1)"/><text x="33.6287%" y="591.50">do_sys..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.27%)</title><rect x="37.8747%" y="565" width="0.2725%" height="15" fill="rgb(206,159,16)"/><text x="38.1247%" y="575.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.27%)</title><rect x="37.8747%" y="549" width="0.2725%" height="15" fill="rgb(244,77,30)"/><text x="38.1247%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (39 samples, 5.31%)</title><rect x="33.3787%" y="597" width="5.3134%" height="15" fill="rgb(218,69,12)"/><text x="33.6287%" y="607.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.54%)</title><rect x="38.1471%" y="581" width="0.5450%" height="15" fill="rgb(212,87,7)"/><text x="38.3971%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (40 samples, 5.45%)</title><rect x="33.3787%" y="693" width="5.4496%" height="15" fill="rgb(245,114,25)"/><text x="33.6287%" y="703.50">&lt;std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (40 samples, 5.45%)</title><rect x="33.3787%" y="677" width="5.4496%" height="15" fill="rgb(210,61,42)"/><text x="33.6287%" y="687.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (40 samples, 5.45%)</title><rect x="33.3787%" y="661" width="5.4496%" height="15" fill="rgb(211,52,33)"/><text x="33.6287%" y="671.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (40 samples, 5.45%)</title><rect x="33.3787%" y="645" width="5.4496%" height="15" fill="rgb(234,58,33)"/><text x="33.6287%" y="655.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 5.45%)</title><rect x="33.3787%" y="629" width="5.4496%" height="15" fill="rgb(220,115,36)"/><text x="33.6287%" y="639.50">std::sy..</text></g><g><title>__libc_recv (40 samples, 5.45%)</title><rect x="33.3787%" y="613" width="5.4496%" height="15" fill="rgb(243,153,54)"/><text x="33.6287%" y="623.50">__libc_..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="38.6921%" y="597" width="0.1362%" height="15" fill="rgb(251,47,18)"/><text x="38.9421%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (48 samples, 6.54%)</title><rect x="32.5613%" y="741" width="6.5395%" height="15" fill="rgb(242,102,42)"/><text x="32.8113%" y="751.50">mysql::co..</text></g><g><title>mysql::conn::Conn::read_packet (44 samples, 5.99%)</title><rect x="33.1063%" y="725" width="5.9946%" height="15" fill="rgb(234,31,38)"/><text x="33.3563%" y="735.50">mysql::c..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 5.86%)</title><rect x="33.2425%" y="709" width="5.8583%" height="15" fill="rgb(221,117,51)"/><text x="33.4925%" y="719.50">&lt;mysql_..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.27%)</title><rect x="38.8283%" y="693" width="0.2725%" height="15" fill="rgb(212,20,18)"/><text x="39.0783%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.27%)</title><rect x="38.8283%" y="677" width="0.2725%" height="15" fill="rgb(245,133,36)"/><text x="39.0783%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.14%)</title><rect x="38.9646%" y="661" width="0.1362%" height="15" fill="rgb(212,6,19)"/><text x="39.2146%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="38.9646%" y="645" width="0.1362%" height="15" fill="rgb(218,1,36)"/><text x="39.2146%" y="655.50"></text></g><g><title>fput_many (1 samples, 0.14%)</title><rect x="39.5095%" y="597" width="0.1362%" height="15" fill="rgb(246,84,54)"/><text x="39.7595%" y="607.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="39.7820%" y="565" width="0.1362%" height="15" fill="rgb(242,110,6)"/><text x="40.0320%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="39.7820%" y="549" width="0.1362%" height="15" fill="rgb(214,47,5)"/><text x="40.0320%" y="559.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="40.3270%" y="485" width="0.1362%" height="15" fill="rgb(218,159,25)"/><text x="40.5770%" y="495.50"></text></g><g><title>__sk_dst_check (1 samples, 0.14%)</title><rect x="40.4632%" y="485" width="0.1362%" height="15" fill="rgb(215,211,28)"/><text x="40.7132%" y="495.50"></text></g><g><title>__ip_finish_output (2 samples, 0.27%)</title><rect x="40.7357%" y="469" width="0.2725%" height="15" fill="rgb(238,59,32)"/><text x="40.9857%" y="479.50"></text></g><g><title>ipv4_mtu (1 samples, 0.14%)</title><rect x="40.8719%" y="453" width="0.1362%" height="15" fill="rgb(226,82,3)"/><text x="41.1219%" y="463.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="41.1444%" y="421" width="0.1362%" height="15" fill="rgb(240,164,32)"/><text x="41.3944%" y="431.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.27%)</title><rect x="41.1444%" y="437" width="0.2725%" height="15" fill="rgb(232,46,7)"/><text x="41.3944%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="41.2807%" y="421" width="0.1362%" height="15" fill="rgb(229,129,53)"/><text x="41.5307%" y="431.50"></text></g><g><title>netif_rx (1 samples, 0.14%)</title><rect x="41.2807%" y="405" width="0.1362%" height="15" fill="rgb(234,188,29)"/><text x="41.5307%" y="415.50"></text></g><g><title>netif_rx_internal (1 samples, 0.14%)</title><rect x="41.2807%" y="389" width="0.1362%" height="15" fill="rgb(246,141,4)"/><text x="41.5307%" y="399.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.14%)</title><rect x="41.2807%" y="373" width="0.1362%" height="15" fill="rgb(229,23,39)"/><text x="41.5307%" y="383.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="41.2807%" y="357" width="0.1362%" height="15" fill="rgb(206,12,3)"/><text x="41.5307%" y="367.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="41.2807%" y="341" width="0.1362%" height="15" fill="rgb(252,226,20)"/><text x="41.5307%" y="351.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.54%)</title><rect x="41.0082%" y="453" width="0.5450%" height="15" fill="rgb(216,123,35)"/><text x="41.2582%" y="463.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="41.4169%" y="437" width="0.1362%" height="15" fill="rgb(212,68,40)"/><text x="41.6669%" y="447.50"></text></g><g><title>netif_skb_features (1 samples, 0.14%)</title><rect x="41.4169%" y="421" width="0.1362%" height="15" fill="rgb(254,125,32)"/><text x="41.6669%" y="431.50"></text></g><g><title>skb_network_protocol (1 samples, 0.14%)</title><rect x="41.4169%" y="405" width="0.1362%" height="15" fill="rgb(253,97,22)"/><text x="41.6669%" y="415.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="41.5531%" y="389" width="0.1362%" height="15" fill="rgb(241,101,14)"/><text x="41.8031%" y="399.50"></text></g><g><title>raw_local_deliver (1 samples, 0.14%)</title><rect x="41.8256%" y="277" width="0.1362%" height="15" fill="rgb(238,103,29)"/><text x="42.0756%" y="287.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="41.9619%" y="261" width="0.1362%" height="15" fill="rgb(233,195,47)"/><text x="42.2119%" y="271.50"></text></g><g><title>enqueue_task (1 samples, 0.14%)</title><rect x="42.5068%" y="149" width="0.1362%" height="15" fill="rgb(246,218,30)"/><text x="42.7568%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.14%)</title><rect x="42.5068%" y="133" width="0.1362%" height="15" fill="rgb(219,145,47)"/><text x="42.7568%" y="143.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.27%)</title><rect x="42.6431%" y="117" width="0.2725%" height="15" fill="rgb(243,12,26)"/><text x="42.8931%" y="127.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="42.9155%" y="117" width="0.1362%" height="15" fill="rgb(214,87,16)"/><text x="43.1655%" y="127.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.54%)</title><rect x="42.6431%" y="149" width="0.5450%" height="15" fill="rgb(208,99,42)"/><text x="42.8931%" y="159.50"></text></g><g><title>enqueue_entity (4 samples, 0.54%)</title><rect x="42.6431%" y="133" width="0.5450%" height="15" fill="rgb(253,99,2)"/><text x="42.8931%" y="143.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="43.0518%" y="117" width="0.1362%" height="15" fill="rgb(220,168,23)"/><text x="43.3018%" y="127.50"></text></g><g><title>sock_def_readable (9 samples, 1.23%)</title><rect x="42.0981%" y="229" width="1.2262%" height="15" fill="rgb(242,38,24)"/><text x="42.3481%" y="239.50"></text></g><g><title>__wake_up_common_lock (9 samples, 1.23%)</title><rect x="42.0981%" y="213" width="1.2262%" height="15" fill="rgb(225,182,9)"/><text x="42.3481%" y="223.50"></text></g><g><title>__wake_up_common (9 samples, 1.23%)</title><rect x="42.0981%" y="197" width="1.2262%" height="15" fill="rgb(243,178,37)"/><text x="42.3481%" y="207.50"></text></g><g><title>pollwake (9 samples, 1.23%)</title><rect x="42.0981%" y="181" width="1.2262%" height="15" fill="rgb(232,139,19)"/><text x="42.3481%" y="191.50"></text></g><g><title>try_to_wake_up (7 samples, 0.95%)</title><rect x="42.3706%" y="165" width="0.9537%" height="15" fill="rgb(225,201,24)"/><text x="42.6206%" y="175.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.14%)</title><rect x="43.1880%" y="149" width="0.1362%" height="15" fill="rgb(221,47,46)"/><text x="43.4380%" y="159.50"></text></g><g><title>check_preempt_curr (1 samples, 0.14%)</title><rect x="43.1880%" y="133" width="0.1362%" height="15" fill="rgb(249,23,13)"/><text x="43.4380%" y="143.50"></text></g><g><title>__kfree_skb (2 samples, 0.27%)</title><rect x="43.3243%" y="213" width="0.2725%" height="15" fill="rgb(219,9,5)"/><text x="43.5743%" y="223.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="43.4605%" y="197" width="0.1362%" height="15" fill="rgb(254,171,16)"/><text x="43.7105%" y="207.50"></text></g><g><title>tcp_ack (4 samples, 0.54%)</title><rect x="43.3243%" y="229" width="0.5450%" height="15" fill="rgb(230,171,20)"/><text x="43.5743%" y="239.50"></text></g><g><title>tcp_rearm_rto (2 samples, 0.27%)</title><rect x="43.5967%" y="213" width="0.2725%" height="15" fill="rgb(210,71,41)"/><text x="43.8467%" y="223.50"></text></g><g><title>tcp_check_space (1 samples, 0.14%)</title><rect x="43.8692%" y="229" width="0.1362%" height="15" fill="rgb(206,173,20)"/><text x="44.1192%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (16 samples, 2.18%)</title><rect x="42.0981%" y="261" width="2.1798%" height="15" fill="rgb(233,88,34)"/><text x="42.3481%" y="271.50">t..</text></g><g><title>tcp_rcv_established (16 samples, 2.18%)</title><rect x="42.0981%" y="245" width="2.1798%" height="15" fill="rgb(223,209,46)"/><text x="42.3481%" y="255.50">t..</text></g><g><title>tcp_queue_rcv (2 samples, 0.27%)</title><rect x="44.0054%" y="229" width="0.2725%" height="15" fill="rgb(250,43,18)"/><text x="44.2554%" y="239.50"></text></g><g><title>net_rx_action (20 samples, 2.72%)</title><rect x="41.6894%" y="389" width="2.7248%" height="15" fill="rgb(208,13,10)"/><text x="41.9394%" y="399.50">ne..</text></g><g><title>process_backlog (19 samples, 2.59%)</title><rect x="41.8256%" y="373" width="2.5886%" height="15" fill="rgb(212,200,36)"/><text x="42.0756%" y="383.50">pr..</text></g><g><title>__netif_receive_skb_one_core (19 samples, 2.59%)</title><rect x="41.8256%" y="357" width="2.5886%" height="15" fill="rgb(225,90,30)"/><text x="42.0756%" y="367.50">__..</text></g><g><title>ip_rcv (19 samples, 2.59%)</title><rect x="41.8256%" y="341" width="2.5886%" height="15" fill="rgb(236,182,39)"/><text x="42.0756%" y="351.50">ip..</text></g><g><title>ip_local_deliver (19 samples, 2.59%)</title><rect x="41.8256%" y="325" width="2.5886%" height="15" fill="rgb(212,144,35)"/><text x="42.0756%" y="335.50">ip..</text></g><g><title>ip_local_deliver_finish (19 samples, 2.59%)</title><rect x="41.8256%" y="309" width="2.5886%" height="15" fill="rgb(228,63,44)"/><text x="42.0756%" y="319.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (19 samples, 2.59%)</title><rect x="41.8256%" y="293" width="2.5886%" height="15" fill="rgb(228,109,6)"/><text x="42.0756%" y="303.50">ip..</text></g><g><title>tcp_v4_rcv (18 samples, 2.45%)</title><rect x="41.9619%" y="277" width="2.4523%" height="15" fill="rgb(238,117,24)"/><text x="42.2119%" y="287.50">tc..</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.14%)</title><rect x="44.2779%" y="261" width="0.1362%" height="15" fill="rgb(242,26,26)"/><text x="44.5279%" y="271.50"></text></g><g><title>__ip_queue_xmit (31 samples, 4.22%)</title><rect x="40.3270%" y="501" width="4.2234%" height="15" fill="rgb(221,92,48)"/><text x="40.5770%" y="511.50">__ip_..</text></g><g><title>ip_output (29 samples, 3.95%)</title><rect x="40.5995%" y="485" width="3.9510%" height="15" fill="rgb(209,209,32)"/><text x="40.8495%" y="495.50">ip_o..</text></g><g><title>ip_finish_output2 (26 samples, 3.54%)</title><rect x="41.0082%" y="469" width="3.5422%" height="15" fill="rgb(221,70,22)"/><text x="41.2582%" y="479.50">ip_f..</text></g><g><title>__local_bh_enable_ip (22 samples, 3.00%)</title><rect x="41.5531%" y="453" width="2.9973%" height="15" fill="rgb(248,145,5)"/><text x="41.8031%" y="463.50">__l..</text></g><g><title>do_softirq (22 samples, 3.00%)</title><rect x="41.5531%" y="437" width="2.9973%" height="15" fill="rgb(226,116,26)"/><text x="41.8031%" y="447.50">do_..</text></g><g><title>do_softirq_own_stack (22 samples, 3.00%)</title><rect x="41.5531%" y="421" width="2.9973%" height="15" fill="rgb(244,5,17)"/><text x="41.8031%" y="431.50">do_..</text></g><g><title>__do_softirq (22 samples, 3.00%)</title><rect x="41.5531%" y="405" width="2.9973%" height="15" fill="rgb(252,159,33)"/><text x="41.8031%" y="415.50">__d..</text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="44.4142%" y="389" width="0.1362%" height="15" fill="rgb(206,71,0)"/><text x="44.6642%" y="399.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.14%)</title><rect x="44.5504%" y="501" width="0.1362%" height="15" fill="rgb(233,118,54)"/><text x="44.8004%" y="511.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="44.6866%" y="501" width="0.1362%" height="15" fill="rgb(234,83,48)"/><text x="44.9366%" y="511.50"></text></g><g><title>__tcp_transmit_skb (36 samples, 4.90%)</title><rect x="40.0545%" y="517" width="4.9046%" height="15" fill="rgb(228,3,54)"/><text x="40.3045%" y="527.50">__tcp_..</text></g><g><title>tcp_v4_send_check (1 samples, 0.14%)</title><rect x="44.8229%" y="501" width="0.1362%" height="15" fill="rgb(226,155,13)"/><text x="45.0729%" y="511.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="44.9591%" y="501" width="0.1362%" height="15" fill="rgb(241,28,37)"/><text x="45.2091%" y="511.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="44.9591%" y="485" width="0.1362%" height="15" fill="rgb(233,93,10)"/><text x="45.2091%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (39 samples, 5.31%)</title><rect x="39.9183%" y="549" width="5.3134%" height="15" fill="rgb(225,113,19)"/><text x="40.1683%" y="559.50">__tcp_p..</text></g><g><title>tcp_write_xmit (39 samples, 5.31%)</title><rect x="39.9183%" y="533" width="5.3134%" height="15" fill="rgb(241,2,18)"/><text x="40.1683%" y="543.50">tcp_wri..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.27%)</title><rect x="44.9591%" y="517" width="0.2725%" height="15" fill="rgb(228,207,21)"/><text x="45.2091%" y="527.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="45.0954%" y="501" width="0.1362%" height="15" fill="rgb(213,211,35)"/><text x="45.3454%" y="511.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.27%)</title><rect x="45.2316%" y="549" width="0.2725%" height="15" fill="rgb(209,83,10)"/><text x="45.4816%" y="559.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.14%)</title><rect x="45.3678%" y="533" width="0.1362%" height="15" fill="rgb(209,164,1)"/><text x="45.6178%" y="543.50"></text></g><g><title>__x64_sys_sendto (48 samples, 6.54%)</title><rect x="39.3733%" y="629" width="6.5395%" height="15" fill="rgb(213,184,43)"/><text x="39.6233%" y="639.50">__x64_sys..</text></g><g><title>__sys_sendto (48 samples, 6.54%)</title><rect x="39.3733%" y="613" width="6.5395%" height="15" fill="rgb(231,61,34)"/><text x="39.6233%" y="623.50">__sys_sen..</text></g><g><title>sock_sendmsg (46 samples, 6.27%)</title><rect x="39.6458%" y="597" width="6.2670%" height="15" fill="rgb(235,75,3)"/><text x="39.8958%" y="607.50">sock_sen..</text></g><g><title>tcp_sendmsg (46 samples, 6.27%)</title><rect x="39.6458%" y="581" width="6.2670%" height="15" fill="rgb(220,106,47)"/><text x="39.8958%" y="591.50">tcp_send..</text></g><g><title>tcp_sendmsg_locked (44 samples, 5.99%)</title><rect x="39.9183%" y="565" width="5.9946%" height="15" fill="rgb(210,196,33)"/><text x="40.1683%" y="575.50">tcp_send..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.41%)</title><rect x="45.5041%" y="549" width="0.4087%" height="15" fill="rgb(229,154,42)"/><text x="45.7541%" y="559.50"></text></g><g><title>__alloc_skb (3 samples, 0.41%)</title><rect x="45.5041%" y="533" width="0.4087%" height="15" fill="rgb(228,114,26)"/><text x="45.7541%" y="543.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="45.7766%" y="517" width="0.1362%" height="15" fill="rgb(208,144,1)"/><text x="46.0266%" y="527.50"></text></g><g><title>memset_erms (1 samples, 0.14%)</title><rect x="45.7766%" y="501" width="0.1362%" height="15" fill="rgb(239,112,37)"/><text x="46.0266%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (50 samples, 6.81%)</title><rect x="39.2371%" y="661" width="6.8120%" height="15" fill="rgb(210,96,50)"/><text x="39.4871%" y="671.50">entry_SYS..</text></g><g><title>do_syscall_64 (50 samples, 6.81%)</title><rect x="39.2371%" y="645" width="6.8120%" height="15" fill="rgb(222,178,2)"/><text x="39.4871%" y="655.50">do_syscal..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="45.9128%" y="629" width="0.1362%" height="15" fill="rgb(226,74,18)"/><text x="46.1628%" y="639.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.14%)</title><rect x="45.9128%" y="613" width="0.1362%" height="15" fill="rgb(225,67,54)"/><text x="46.1628%" y="623.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (102 samples, 13.90%)</title><rect x="32.2888%" y="773" width="13.8965%" height="15" fill="rgb(251,92,32)"/><text x="32.5388%" y="783.50">&lt;decor::Shim as msql_..</text></g><g><title>mysql::conn::Conn::_query (100 samples, 13.62%)</title><rect x="32.5613%" y="757" width="13.6240%" height="15" fill="rgb(228,149,22)"/><text x="32.8113%" y="767.50">mysql::conn::Conn::_q..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (52 samples, 7.08%)</title><rect x="39.1008%" y="741" width="7.0845%" height="15" fill="rgb(243,54,13)"/><text x="39.3508%" y="751.50">mysql_comm..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (51 samples, 6.95%)</title><rect x="39.2371%" y="725" width="6.9482%" height="15" fill="rgb(243,180,28)"/><text x="39.4871%" y="735.50">std::io::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (51 samples, 6.95%)</title><rect x="39.2371%" y="709" width="6.9482%" height="15" fill="rgb(208,167,24)"/><text x="39.4871%" y="719.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::write (51 samples, 6.95%)</title><rect x="39.2371%" y="693" width="6.9482%" height="15" fill="rgb(245,73,45)"/><text x="39.4871%" y="703.50">std::sys_..</text></g><g><title>__libc_send (51 samples, 6.95%)</title><rect x="39.2371%" y="677" width="6.9482%" height="15" fill="rgb(237,203,48)"/><text x="39.4871%" y="687.50">__libc_se..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="46.0490%" y="661" width="0.1362%" height="15" fill="rgb(211,197,16)"/><text x="46.2990%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="46.1853%" y="773" width="0.1362%" height="15" fill="rgb(243,99,51)"/><text x="46.4353%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.14%)</title><rect x="46.1853%" y="757" width="0.1362%" height="15" fill="rgb(215,123,29)"/><text x="46.4353%" y="767.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.14%)</title><rect x="46.1853%" y="741" width="0.1362%" height="15" fill="rgb(239,186,37)"/><text x="46.4353%" y="751.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.14%)</title><rect x="46.1853%" y="725" width="0.1362%" height="15" fill="rgb(252,136,39)"/><text x="46.4353%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.14%)</title><rect x="46.1853%" y="709" width="0.1362%" height="15" fill="rgb(223,213,32)"/><text x="46.4353%" y="719.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.14%)</title><rect x="46.1853%" y="693" width="0.1362%" height="15" fill="rgb(233,115,5)"/><text x="46.4353%" y="703.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.14%)</title><rect x="46.1853%" y="677" width="0.1362%" height="15" fill="rgb(207,226,44)"/><text x="46.4353%" y="687.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.14%)</title><rect x="46.1853%" y="661" width="0.1362%" height="15" fill="rgb(208,126,0)"/><text x="46.4353%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.14%)</title><rect x="46.1853%" y="645" width="0.1362%" height="15" fill="rgb(244,66,21)"/><text x="46.4353%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="46.1853%" y="629" width="0.1362%" height="15" fill="rgb(222,97,12)"/><text x="46.4353%" y="639.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="46.1853%" y="613" width="0.1362%" height="15" fill="rgb(219,213,19)"/><text x="46.4353%" y="623.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.14%)</title><rect x="46.1853%" y="597" width="0.1362%" height="15" fill="rgb(252,169,30)"/><text x="46.4353%" y="607.50"></text></g><g><title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.14%)</title><rect x="46.1853%" y="581" width="0.1362%" height="15" fill="rgb(206,32,51)"/><text x="46.4353%" y="591.50"></text></g><g><title>&lt;std::io::buffered::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.14%)</title><rect x="46.1853%" y="565" width="0.1362%" height="15" fill="rgb(250,172,42)"/><text x="46.4353%" y="575.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="46.1853%" y="549" width="0.1362%" height="15" fill="rgb(209,34,43)"/><text x="46.4353%" y="559.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="46.1853%" y="533" width="0.1362%" height="15" fill="rgb(223,11,35)"/><text x="46.4353%" y="543.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="46.1853%" y="517" width="0.1362%" height="15" fill="rgb(251,219,26)"/><text x="46.4353%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.14%)</title><rect x="46.1853%" y="501" width="0.1362%" height="15" fill="rgb(231,119,3)"/><text x="46.4353%" y="511.50"></text></g><g><title>__libc_write (1 samples, 0.14%)</title><rect x="46.1853%" y="485" width="0.1362%" height="15" fill="rgb(216,97,11)"/><text x="46.4353%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="46.1853%" y="469" width="0.1362%" height="15" fill="rgb(223,59,9)"/><text x="46.4353%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="46.1853%" y="453" width="0.1362%" height="15" fill="rgb(233,93,31)"/><text x="46.4353%" y="463.50"></text></g><g><title>ksys_write (1 samples, 0.14%)</title><rect x="46.1853%" y="437" width="0.1362%" height="15" fill="rgb(239,81,33)"/><text x="46.4353%" y="447.50"></text></g><g><title>vfs_write (1 samples, 0.14%)</title><rect x="46.1853%" y="421" width="0.1362%" height="15" fill="rgb(213,120,34)"/><text x="46.4353%" y="431.50"></text></g><g><title>tty_write (1 samples, 0.14%)</title><rect x="46.1853%" y="405" width="0.1362%" height="15" fill="rgb(243,49,53)"/><text x="46.4353%" y="415.50"></text></g><g><title>n_tty_write (1 samples, 0.14%)</title><rect x="46.1853%" y="389" width="0.1362%" height="15" fill="rgb(247,216,33)"/><text x="46.4353%" y="399.50"></text></g><g><title>call_function_single_interrupt (1 samples, 0.14%)</title><rect x="46.1853%" y="373" width="0.1362%" height="15" fill="rgb(226,26,14)"/><text x="46.4353%" y="383.50"></text></g><g><title>smp_call_function_single_interrupt (1 samples, 0.14%)</title><rect x="46.1853%" y="357" width="0.1362%" height="15" fill="rgb(215,49,53)"/><text x="46.4353%" y="367.50"></text></g><g><title>flush_smp_call_function_queue (1 samples, 0.14%)</title><rect x="46.1853%" y="341" width="0.1362%" height="15" fill="rgb(245,162,40)"/><text x="46.4353%" y="351.50"></text></g><g><title>flush_tlb_func_common.constprop.0 (1 samples, 0.14%)</title><rect x="46.1853%" y="325" width="0.1362%" height="15" fill="rgb(229,68,17)"/><text x="46.4353%" y="335.50"></text></g><g><title>native_flush_tlb_one_user (1 samples, 0.14%)</title><rect x="46.1853%" y="309" width="0.1362%" height="15" fill="rgb(213,182,10)"/><text x="46.4353%" y="319.50"></text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="47.1390%" y="517" width="0.1362%" height="15" fill="rgb(245,125,30)"/><text x="47.3890%" y="527.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="47.4114%" y="501" width="0.1362%" height="15" fill="rgb(232,202,2)"/><text x="47.6614%" y="511.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="47.4114%" y="485" width="0.1362%" height="15" fill="rgb(237,140,51)"/><text x="47.6614%" y="495.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="47.4114%" y="469" width="0.1362%" height="15" fill="rgb(236,157,25)"/><text x="47.6614%" y="479.50"></text></g><g><title>__sock_wfree (1 samples, 0.14%)</title><rect x="47.4114%" y="453" width="0.1362%" height="15" fill="rgb(219,209,0)"/><text x="47.6614%" y="463.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="47.5477%" y="325" width="0.1362%" height="15" fill="rgb(240,116,54)"/><text x="47.7977%" y="335.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="47.6839%" y="309" width="0.1362%" height="15" fill="rgb(216,10,36)"/><text x="47.9339%" y="319.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 1.23%)</title><rect x="47.1390%" y="565" width="1.2262%" height="15" fill="rgb(222,72,44)"/><text x="47.3890%" y="575.50"></text></g><g><title>__ip_queue_xmit (9 samples, 1.23%)</title><rect x="47.1390%" y="549" width="1.2262%" height="15" fill="rgb(232,159,9)"/><text x="47.3890%" y="559.50"></text></g><g><title>ip_output (9 samples, 1.23%)</title><rect x="47.1390%" y="533" width="1.2262%" height="15" fill="rgb(210,39,32)"/><text x="47.3890%" y="543.50"></text></g><g><title>ip_finish_output2 (8 samples, 1.09%)</title><rect x="47.2752%" y="517" width="1.0899%" height="15" fill="rgb(216,194,45)"/><text x="47.5252%" y="527.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.82%)</title><rect x="47.5477%" y="501" width="0.8174%" height="15" fill="rgb(218,18,35)"/><text x="47.7977%" y="511.50"></text></g><g><title>do_softirq (6 samples, 0.82%)</title><rect x="47.5477%" y="485" width="0.8174%" height="15" fill="rgb(207,83,51)"/><text x="47.7977%" y="495.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.82%)</title><rect x="47.5477%" y="469" width="0.8174%" height="15" fill="rgb(225,63,43)"/><text x="47.7977%" y="479.50"></text></g><g><title>__do_softirq (6 samples, 0.82%)</title><rect x="47.5477%" y="453" width="0.8174%" height="15" fill="rgb(207,57,36)"/><text x="47.7977%" y="463.50"></text></g><g><title>net_rx_action (6 samples, 0.82%)</title><rect x="47.5477%" y="437" width="0.8174%" height="15" fill="rgb(216,99,33)"/><text x="47.7977%" y="447.50"></text></g><g><title>process_backlog (6 samples, 0.82%)</title><rect x="47.5477%" y="421" width="0.8174%" height="15" fill="rgb(225,42,16)"/><text x="47.7977%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (6 samples, 0.82%)</title><rect x="47.5477%" y="405" width="0.8174%" height="15" fill="rgb(220,201,45)"/><text x="47.7977%" y="415.50"></text></g><g><title>ip_rcv (6 samples, 0.82%)</title><rect x="47.5477%" y="389" width="0.8174%" height="15" fill="rgb(225,33,4)"/><text x="47.7977%" y="399.50"></text></g><g><title>ip_local_deliver (6 samples, 0.82%)</title><rect x="47.5477%" y="373" width="0.8174%" height="15" fill="rgb(224,33,50)"/><text x="47.7977%" y="383.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.82%)</title><rect x="47.5477%" y="357" width="0.8174%" height="15" fill="rgb(246,198,51)"/><text x="47.7977%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.82%)</title><rect x="47.5477%" y="341" width="0.8174%" height="15" fill="rgb(205,22,4)"/><text x="47.7977%" y="351.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.68%)</title><rect x="47.6839%" y="325" width="0.6812%" height="15" fill="rgb(206,3,8)"/><text x="47.9339%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.54%)</title><rect x="47.8202%" y="309" width="0.5450%" height="15" fill="rgb(251,23,15)"/><text x="48.0702%" y="319.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.54%)</title><rect x="47.8202%" y="293" width="0.5450%" height="15" fill="rgb(252,88,28)"/><text x="48.0702%" y="303.50"></text></g><g><title>tcp_ack (4 samples, 0.54%)</title><rect x="47.8202%" y="277" width="0.5450%" height="15" fill="rgb(212,127,14)"/><text x="48.0702%" y="287.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="48.2289%" y="261" width="0.1362%" height="15" fill="rgb(247,145,37)"/><text x="48.4789%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="48.2289%" y="245" width="0.1362%" height="15" fill="rgb(209,117,53)"/><text x="48.4789%" y="255.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="48.5014%" y="549" width="0.1362%" height="15" fill="rgb(212,90,42)"/><text x="48.7514%" y="559.50"></text></g><g><title>remove_wait_queue (2 samples, 0.27%)</title><rect x="48.6376%" y="549" width="0.2725%" height="15" fill="rgb(218,164,37)"/><text x="48.8876%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.27%)</title><rect x="48.6376%" y="533" width="0.2725%" height="15" fill="rgb(246,65,34)"/><text x="48.8876%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="48.7738%" y="517" width="0.1362%" height="15" fill="rgb(231,100,33)"/><text x="49.0238%" y="527.50"></text></g><g><title>in_lock_functions (1 samples, 0.14%)</title><rect x="48.7738%" y="501" width="0.1362%" height="15" fill="rgb(228,126,14)"/><text x="49.0238%" y="511.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="49.3188%" y="485" width="0.1362%" height="15" fill="rgb(215,173,21)"/><text x="49.5688%" y="495.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="49.3188%" y="469" width="0.1362%" height="15" fill="rgb(210,6,40)"/><text x="49.5688%" y="479.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="49.4550%" y="453" width="0.1362%" height="15" fill="rgb(212,48,18)"/><text x="49.7050%" y="463.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.41%)</title><rect x="49.4550%" y="485" width="0.4087%" height="15" fill="rgb(230,214,11)"/><text x="49.7050%" y="495.50"></text></g><g><title>dequeue_entity (3 samples, 0.41%)</title><rect x="49.4550%" y="469" width="0.4087%" height="15" fill="rgb(254,105,39)"/><text x="49.7050%" y="479.50"></text></g><g><title>update_load_avg (2 samples, 0.27%)</title><rect x="49.5913%" y="453" width="0.2725%" height="15" fill="rgb(245,158,5)"/><text x="49.8413%" y="463.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.27%)</title><rect x="49.5913%" y="437" width="0.2725%" height="15" fill="rgb(249,208,11)"/><text x="49.8413%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.14%)</title><rect x="49.8638%" y="485" width="0.1362%" height="15" fill="rgb(210,39,28)"/><text x="50.1138%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.14%)</title><rect x="49.8638%" y="469" width="0.1362%" height="15" fill="rgb(211,56,53)"/><text x="50.1138%" y="479.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.14%)</title><rect x="50.0000%" y="485" width="0.1362%" height="15" fill="rgb(226,201,30)"/><text x="50.2500%" y="495.50"></text></g><g><title>newidle_balance (1 samples, 0.14%)</title><rect x="50.0000%" y="469" width="0.1362%" height="15" fill="rgb(239,101,34)"/><text x="50.2500%" y="479.50"></text></g><g><title>psi_flags_change (2 samples, 0.27%)</title><rect x="50.1362%" y="469" width="0.2725%" height="15" fill="rgb(226,209,5)"/><text x="50.3862%" y="479.50"></text></g><g><title>psi_task_change (5 samples, 0.68%)</title><rect x="50.1362%" y="485" width="0.6812%" height="15" fill="rgb(250,105,47)"/><text x="50.3862%" y="495.50"></text></g><g><title>psi_group_change (3 samples, 0.41%)</title><rect x="50.4087%" y="469" width="0.4087%" height="15" fill="rgb(230,72,3)"/><text x="50.6587%" y="479.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="50.6812%" y="453" width="0.1362%" height="15" fill="rgb(232,218,39)"/><text x="50.9312%" y="463.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="50.6812%" y="437" width="0.1362%" height="15" fill="rgb(248,166,6)"/><text x="50.9312%" y="447.50"></text></g><g><title>__schedule (18 samples, 2.45%)</title><rect x="49.0463%" y="501" width="2.4523%" height="15" fill="rgb(247,89,20)"/><text x="49.2963%" y="511.50">__..</text></g><g><title>uclamp_rq_dec_id (5 samples, 0.68%)</title><rect x="50.8174%" y="485" width="0.6812%" height="15" fill="rgb(248,130,54)"/><text x="51.0674%" y="495.50"></text></g><g><title>sk_wait_data (24 samples, 3.27%)</title><rect x="48.3651%" y="565" width="3.2698%" height="15" fill="rgb(234,196,4)"/><text x="48.6151%" y="575.50">sk_..</text></g><g><title>wait_woken (20 samples, 2.72%)</title><rect x="48.9101%" y="549" width="2.7248%" height="15" fill="rgb(250,143,31)"/><text x="49.1601%" y="559.50">wa..</text></g><g><title>schedule_timeout (19 samples, 2.59%)</title><rect x="49.0463%" y="533" width="2.5886%" height="15" fill="rgb(211,110,34)"/><text x="49.2963%" y="543.50">sc..</text></g><g><title>schedule (19 samples, 2.59%)</title><rect x="49.0463%" y="517" width="2.5886%" height="15" fill="rgb(215,124,48)"/><text x="49.2963%" y="527.50">sc..</text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="51.4986%" y="501" width="0.1362%" height="15" fill="rgb(216,46,13)"/><text x="51.7486%" y="511.50"></text></g><g><title>inet_recvmsg (38 samples, 5.18%)</title><rect x="46.7302%" y="597" width="5.1771%" height="15" fill="rgb(205,184,25)"/><text x="46.9802%" y="607.50">inet_r..</text></g><g><title>tcp_recvmsg (37 samples, 5.04%)</title><rect x="46.8665%" y="581" width="5.0409%" height="15" fill="rgb(228,1,10)"/><text x="47.1165%" y="591.50">tcp_re..</text></g><g><title>skb_copy_datagram_iter (2 samples, 0.27%)</title><rect x="51.6349%" y="565" width="0.2725%" height="15" fill="rgb(213,116,27)"/><text x="51.8849%" y="575.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.27%)</title><rect x="51.6349%" y="549" width="0.2725%" height="15" fill="rgb(241,95,50)"/><text x="51.8849%" y="559.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.27%)</title><rect x="51.6349%" y="533" width="0.2725%" height="15" fill="rgb(238,48,32)"/><text x="51.8849%" y="543.50"></text></g><g><title>__check_object_size (2 samples, 0.27%)</title><rect x="51.6349%" y="517" width="0.2725%" height="15" fill="rgb(235,113,49)"/><text x="51.8849%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (39 samples, 5.31%)</title><rect x="46.7302%" y="629" width="5.3134%" height="15" fill="rgb(205,127,43)"/><text x="46.9802%" y="639.50">__x64_s..</text></g><g><title>__sys_recvfrom (39 samples, 5.31%)</title><rect x="46.7302%" y="613" width="5.3134%" height="15" fill="rgb(250,162,2)"/><text x="46.9802%" y="623.50">__sys_r..</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="51.9074%" y="597" width="0.1362%" height="15" fill="rgb(220,13,41)"/><text x="52.1574%" y="607.50"></text></g><g><title>do_syscall_64 (41 samples, 5.59%)</title><rect x="46.5940%" y="645" width="5.5858%" height="15" fill="rgb(249,221,25)"/><text x="46.8440%" y="655.50">do_sysc..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="52.0436%" y="629" width="0.1362%" height="15" fill="rgb(215,208,19)"/><text x="52.2936%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="52.0436%" y="613" width="0.1362%" height="15" fill="rgb(236,175,2)"/><text x="52.2936%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (48 samples, 6.54%)</title><rect x="46.3215%" y="757" width="6.5395%" height="15" fill="rgb(241,52,2)"/><text x="46.5715%" y="767.50">&lt;std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (47 samples, 6.40%)</title><rect x="46.4578%" y="741" width="6.4033%" height="15" fill="rgb(248,140,14)"/><text x="46.7078%" y="751.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (47 samples, 6.40%)</title><rect x="46.4578%" y="725" width="6.4033%" height="15" fill="rgb(253,22,42)"/><text x="46.7078%" y="735.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (47 samples, 6.40%)</title><rect x="46.4578%" y="709" width="6.4033%" height="15" fill="rgb(234,61,47)"/><text x="46.7078%" y="719.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (47 samples, 6.40%)</title><rect x="46.4578%" y="693" width="6.4033%" height="15" fill="rgb(208,226,15)"/><text x="46.7078%" y="703.50">std::sys..</text></g><g><title>__libc_recv (47 samples, 6.40%)</title><rect x="46.4578%" y="677" width="6.4033%" height="15" fill="rgb(217,221,4)"/><text x="46.7078%" y="687.50">__libc_r..</text></g><g><title>entry_SYSCALL_64 (47 samples, 6.40%)</title><rect x="46.4578%" y="661" width="6.4033%" height="15" fill="rgb(212,174,34)"/><text x="46.7078%" y="671.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.68%)</title><rect x="52.1798%" y="645" width="0.6812%" height="15" fill="rgb(253,83,4)"/><text x="52.4298%" y="655.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.14%)</title><rect x="52.8610%" y="757" width="0.1362%" height="15" fill="rgb(250,195,49)"/><text x="53.1110%" y="767.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (51 samples, 6.95%)</title><rect x="46.3215%" y="773" width="6.9482%" height="15" fill="rgb(241,192,25)"/><text x="46.5715%" y="783.50">msql_srv:..</text></g><g><title>msql_srv::packet::packet (2 samples, 0.27%)</title><rect x="52.9973%" y="757" width="0.2725%" height="15" fill="rgb(208,124,10)"/><text x="53.2473%" y="767.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="53.4060%" y="709" width="0.1362%" height="15" fill="rgb(222,33,0)"/><text x="53.6560%" y="719.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.14%)</title><rect x="53.5422%" y="709" width="0.1362%" height="15" fill="rgb(234,209,28)"/><text x="53.7922%" y="719.50"></text></g><g><title>inet_sendmsg (1 samples, 0.14%)</title><rect x="53.8147%" y="629" width="0.1362%" height="15" fill="rgb(224,11,23)"/><text x="54.0647%" y="639.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="54.7684%" y="533" width="0.1362%" height="15" fill="rgb(232,99,1)"/><text x="55.0184%" y="543.50"></text></g><g><title>__sk_dst_check (1 samples, 0.14%)</title><rect x="54.9046%" y="533" width="0.1362%" height="15" fill="rgb(237,95,45)"/><text x="55.1546%" y="543.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.14%)</title><rect x="54.9046%" y="517" width="0.1362%" height="15" fill="rgb(208,109,11)"/><text x="55.1546%" y="527.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.27%)</title><rect x="55.4496%" y="421" width="0.2725%" height="15" fill="rgb(216,190,48)"/><text x="55.6996%" y="431.50"></text></g><g><title>__raise_softirq_irqoff (1 samples, 0.14%)</title><rect x="55.5858%" y="405" width="0.1362%" height="15" fill="rgb(251,171,36)"/><text x="55.8358%" y="415.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="55.5858%" y="389" width="0.1362%" height="15" fill="rgb(230,62,22)"/><text x="55.8358%" y="399.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.68%)</title><rect x="55.1771%" y="501" width="0.6812%" height="15" fill="rgb(225,114,35)"/><text x="55.4271%" y="511.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.68%)</title><rect x="55.1771%" y="485" width="0.6812%" height="15" fill="rgb(215,118,42)"/><text x="55.4271%" y="495.50"></text></g><g><title>loopback_xmit (4 samples, 0.54%)</title><rect x="55.3134%" y="469" width="0.5450%" height="15" fill="rgb(243,119,21)"/><text x="55.5634%" y="479.50"></text></g><g><title>netif_rx (4 samples, 0.54%)</title><rect x="55.3134%" y="453" width="0.5450%" height="15" fill="rgb(252,177,53)"/><text x="55.5634%" y="463.50"></text></g><g><title>netif_rx_internal (4 samples, 0.54%)</title><rect x="55.3134%" y="437" width="0.5450%" height="15" fill="rgb(237,209,29)"/><text x="55.5634%" y="447.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.14%)</title><rect x="55.7221%" y="421" width="0.1362%" height="15" fill="rgb(212,65,23)"/><text x="55.9721%" y="431.50"></text></g><g><title>read_tsc (1 samples, 0.14%)</title><rect x="55.7221%" y="405" width="0.1362%" height="15" fill="rgb(230,222,46)"/><text x="55.9721%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="57.0845%" y="213" width="0.1362%" height="15" fill="rgb(215,135,32)"/><text x="57.3345%" y="223.50"></text></g><g><title>psi_task_change (4 samples, 0.54%)</title><rect x="57.2207%" y="197" width="0.5450%" height="15" fill="rgb(246,101,22)"/><text x="57.4707%" y="207.50"></text></g><g><title>psi_group_change (4 samples, 0.54%)</title><rect x="57.2207%" y="181" width="0.5450%" height="15" fill="rgb(206,107,13)"/><text x="57.4707%" y="191.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="57.6294%" y="165" width="0.1362%" height="15" fill="rgb(250,100,44)"/><text x="57.8794%" y="175.50"></text></g><g><title>enqueue_task (7 samples, 0.95%)</title><rect x="57.2207%" y="213" width="0.9537%" height="15" fill="rgb(231,147,38)"/><text x="57.4707%" y="223.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.41%)</title><rect x="57.7657%" y="197" width="0.4087%" height="15" fill="rgb(229,8,40)"/><text x="58.0157%" y="207.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.95%)</title><rect x="58.1744%" y="213" width="0.9537%" height="15" fill="rgb(221,135,30)"/><text x="58.4244%" y="223.50"></text></g><g><title>enqueue_entity (7 samples, 0.95%)</title><rect x="58.1744%" y="197" width="0.9537%" height="15" fill="rgb(249,193,18)"/><text x="58.4244%" y="207.50"></text></g><g><title>update_load_avg (5 samples, 0.68%)</title><rect x="58.4469%" y="181" width="0.6812%" height="15" fill="rgb(209,133,39)"/><text x="58.6969%" y="191.50"></text></g><g><title>__update_load_avg_se (5 samples, 0.68%)</title><rect x="58.4469%" y="165" width="0.6812%" height="15" fill="rgb(232,100,14)"/><text x="58.6969%" y="175.50"></text></g><g><title>find_first_bit (1 samples, 0.14%)</title><rect x="59.1281%" y="213" width="0.1362%" height="15" fill="rgb(224,185,1)"/><text x="59.3781%" y="223.50"></text></g><g><title>sock_def_readable (19 samples, 2.59%)</title><rect x="56.8120%" y="277" width="2.5886%" height="15" fill="rgb(223,139,8)"/><text x="57.0620%" y="287.50">so..</text></g><g><title>__wake_up_common_lock (18 samples, 2.45%)</title><rect x="56.9482%" y="261" width="2.4523%" height="15" fill="rgb(232,213,38)"/><text x="57.1982%" y="271.50">__..</text></g><g><title>__wake_up_common (17 samples, 2.32%)</title><rect x="57.0845%" y="245" width="2.3161%" height="15" fill="rgb(207,94,22)"/><text x="57.3345%" y="255.50">_..</text></g><g><title>try_to_wake_up (17 samples, 2.32%)</title><rect x="57.0845%" y="229" width="2.3161%" height="15" fill="rgb(219,183,54)"/><text x="57.3345%" y="239.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="59.2643%" y="213" width="0.1362%" height="15" fill="rgb(216,185,54)"/><text x="59.5143%" y="223.50"></text></g><g><title>__slab_free (1 samples, 0.14%)</title><rect x="59.5368%" y="229" width="0.1362%" height="15" fill="rgb(254,217,39)"/><text x="59.7868%" y="239.50"></text></g><g><title>kfree (2 samples, 0.27%)</title><rect x="59.5368%" y="245" width="0.2725%" height="15" fill="rgb(240,178,23)"/><text x="59.7868%" y="255.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.14%)</title><rect x="59.6730%" y="229" width="0.1362%" height="15" fill="rgb(218,11,47)"/><text x="59.9230%" y="239.50"></text></g><g><title>__kfree_skb (3 samples, 0.41%)</title><rect x="59.5368%" y="261" width="0.4087%" height="15" fill="rgb(218,51,51)"/><text x="59.7868%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="59.8093%" y="245" width="0.1362%" height="15" fill="rgb(238,126,27)"/><text x="60.0593%" y="255.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.14%)</title><rect x="59.9455%" y="261" width="0.1362%" height="15" fill="rgb(249,202,22)"/><text x="60.1955%" y="271.50"></text></g><g><title>kfree_skbmem (1 samples, 0.14%)</title><rect x="60.0817%" y="261" width="0.1362%" height="15" fill="rgb(254,195,49)"/><text x="60.3317%" y="271.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="60.2180%" y="261" width="0.1362%" height="15" fill="rgb(208,123,14)"/><text x="60.4680%" y="271.50"></text></g><g><title>__slab_free (1 samples, 0.14%)</title><rect x="60.2180%" y="245" width="0.1362%" height="15" fill="rgb(224,200,8)"/><text x="60.4680%" y="255.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.14%)</title><rect x="60.3542%" y="261" width="0.1362%" height="15" fill="rgb(217,61,36)"/><text x="60.6042%" y="271.50"></text></g><g><title>tcp_ack (9 samples, 1.23%)</title><rect x="59.4005%" y="277" width="1.2262%" height="15" fill="rgb(206,35,45)"/><text x="59.6505%" y="287.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.14%)</title><rect x="60.4905%" y="261" width="0.1362%" height="15" fill="rgb(217,65,33)"/><text x="60.7405%" y="271.50"></text></g><g><title>ip_local_deliver (34 samples, 4.63%)</title><rect x="56.2670%" y="373" width="4.6322%" height="15" fill="rgb(222,158,48)"/><text x="56.5170%" y="383.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (33 samples, 4.50%)</title><rect x="56.4033%" y="357" width="4.4959%" height="15" fill="rgb(254,2,54)"/><text x="56.6533%" y="367.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (33 samples, 4.50%)</title><rect x="56.4033%" y="341" width="4.4959%" height="15" fill="rgb(250,143,38)"/><text x="56.6533%" y="351.50">ip_pr..</text></g><g><title>tcp_v4_rcv (33 samples, 4.50%)</title><rect x="56.4033%" y="325" width="4.4959%" height="15" fill="rgb(248,25,0)"/><text x="56.6533%" y="335.50">tcp_v..</text></g><g><title>tcp_v4_do_rcv (32 samples, 4.36%)</title><rect x="56.5395%" y="309" width="4.3597%" height="15" fill="rgb(206,152,27)"/><text x="56.7895%" y="319.50">tcp_v..</text></g><g><title>tcp_rcv_established (31 samples, 4.22%)</title><rect x="56.6757%" y="293" width="4.2234%" height="15" fill="rgb(240,77,30)"/><text x="56.9257%" y="303.50">tcp_r..</text></g><g><title>tcp_queue_rcv (2 samples, 0.27%)</title><rect x="60.6267%" y="277" width="0.2725%" height="15" fill="rgb(231,5,3)"/><text x="60.8767%" y="287.50"></text></g><g><title>ip_rcv_core (1 samples, 0.14%)</title><rect x="60.8992%" y="373" width="0.1362%" height="15" fill="rgb(207,226,32)"/><text x="61.1492%" y="383.50"></text></g><g><title>do_softirq (39 samples, 5.31%)</title><rect x="55.8583%" y="485" width="5.3134%" height="15" fill="rgb(222,207,47)"/><text x="56.1083%" y="495.50">do_soft..</text></g><g><title>do_softirq_own_stack (38 samples, 5.18%)</title><rect x="55.9946%" y="469" width="5.1771%" height="15" fill="rgb(229,115,45)"/><text x="56.2446%" y="479.50">do_sof..</text></g><g><title>__do_softirq (38 samples, 5.18%)</title><rect x="55.9946%" y="453" width="5.1771%" height="15" fill="rgb(224,191,6)"/><text x="56.2446%" y="463.50">__do_s..</text></g><g><title>net_rx_action (37 samples, 5.04%)</title><rect x="56.1308%" y="437" width="5.0409%" height="15" fill="rgb(230,227,24)"/><text x="56.3808%" y="447.50">net_rx..</text></g><g><title>process_backlog (36 samples, 4.90%)</title><rect x="56.2670%" y="421" width="4.9046%" height="15" fill="rgb(228,80,19)"/><text x="56.5170%" y="431.50">proces..</text></g><g><title>__netif_receive_skb_one_core (36 samples, 4.90%)</title><rect x="56.2670%" y="405" width="4.9046%" height="15" fill="rgb(247,229,0)"/><text x="56.5170%" y="415.50">__neti..</text></g><g><title>ip_rcv (36 samples, 4.90%)</title><rect x="56.2670%" y="389" width="4.9046%" height="15" fill="rgb(237,194,15)"/><text x="56.5170%" y="399.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.14%)</title><rect x="61.0354%" y="373" width="0.1362%" height="15" fill="rgb(219,203,20)"/><text x="61.2854%" y="383.50"></text></g><g><title>ip_finish_output2 (46 samples, 6.27%)</title><rect x="55.0409%" y="517" width="6.2670%" height="15" fill="rgb(234,128,8)"/><text x="55.2909%" y="527.50">ip_finis..</text></g><g><title>__local_bh_enable_ip (40 samples, 5.45%)</title><rect x="55.8583%" y="501" width="5.4496%" height="15" fill="rgb(248,202,8)"/><text x="56.1083%" y="511.50">__local..</text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="61.1717%" y="485" width="0.1362%" height="15" fill="rgb(206,104,37)"/><text x="61.4217%" y="495.50"></text></g><g><title>__ip_queue_xmit (50 samples, 6.81%)</title><rect x="54.6322%" y="549" width="6.8120%" height="15" fill="rgb(223,8,27)"/><text x="54.8822%" y="559.50">__ip_queu..</text></g><g><title>ip_output (47 samples, 6.40%)</title><rect x="55.0409%" y="533" width="6.4033%" height="15" fill="rgb(216,217,28)"/><text x="55.2909%" y="543.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="61.3079%" y="517" width="0.1362%" height="15" fill="rgb(249,199,1)"/><text x="61.5579%" y="527.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="61.3079%" y="501" width="0.1362%" height="15" fill="rgb(240,85,17)"/><text x="61.5579%" y="511.50"></text></g><g><title>tcp_options_write (1 samples, 0.14%)</title><rect x="61.4441%" y="549" width="0.1362%" height="15" fill="rgb(206,108,45)"/><text x="61.6941%" y="559.50"></text></g><g><title>__tcp_transmit_skb (54 samples, 7.36%)</title><rect x="54.3597%" y="565" width="7.3569%" height="15" fill="rgb(245,210,41)"/><text x="54.6097%" y="575.50">__tcp_tran..</text></g><g><title>tcp_v4_send_check (1 samples, 0.14%)</title><rect x="61.5804%" y="549" width="0.1362%" height="15" fill="rgb(206,13,37)"/><text x="61.8304%" y="559.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="61.7166%" y="565" width="0.1362%" height="15" fill="rgb(250,61,18)"/><text x="61.9666%" y="575.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="61.7166%" y="549" width="0.1362%" height="15" fill="rgb(235,172,48)"/><text x="61.9666%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (58 samples, 7.90%)</title><rect x="54.0872%" y="597" width="7.9019%" height="15" fill="rgb(249,201,17)"/><text x="54.3372%" y="607.50">__tcp_push_..</text></g><g><title>tcp_write_xmit (58 samples, 7.90%)</title><rect x="54.0872%" y="581" width="7.9019%" height="15" fill="rgb(219,208,6)"/><text x="54.3372%" y="591.50">tcp_write_x..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.14%)</title><rect x="61.8529%" y="565" width="0.1362%" height="15" fill="rgb(248,31,23)"/><text x="62.1029%" y="575.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="61.8529%" y="549" width="0.1362%" height="15" fill="rgb(245,15,42)"/><text x="62.1029%" y="559.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="61.8529%" y="533" width="0.1362%" height="15" fill="rgb(222,217,39)"/><text x="62.1029%" y="543.50"></text></g><g><title>sock_sendmsg (63 samples, 8.58%)</title><rect x="53.8147%" y="645" width="8.5831%" height="15" fill="rgb(210,219,27)"/><text x="54.0647%" y="655.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (62 samples, 8.45%)</title><rect x="53.9510%" y="629" width="8.4469%" height="15" fill="rgb(252,166,36)"/><text x="54.2010%" y="639.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (61 samples, 8.31%)</title><rect x="54.0872%" y="613" width="8.3106%" height="15" fill="rgb(245,132,34)"/><text x="54.3372%" y="623.50">tcp_sendmsg_..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.41%)</title><rect x="61.9891%" y="597" width="0.4087%" height="15" fill="rgb(236,54,3)"/><text x="62.2391%" y="607.50"></text></g><g><title>__alloc_skb (3 samples, 0.41%)</title><rect x="61.9891%" y="581" width="0.4087%" height="15" fill="rgb(241,173,43)"/><text x="62.2391%" y="591.50"></text></g><g><title>ksize (1 samples, 0.14%)</title><rect x="62.2616%" y="565" width="0.1362%" height="15" fill="rgb(215,190,9)"/><text x="62.5116%" y="575.50"></text></g><g><title>__x64_sys_sendto (65 samples, 8.86%)</title><rect x="53.6785%" y="677" width="8.8556%" height="15" fill="rgb(242,101,16)"/><text x="53.9285%" y="687.50">__x64_sys_sen..</text></g><g><title>__sys_sendto (65 samples, 8.86%)</title><rect x="53.6785%" y="661" width="8.8556%" height="15" fill="rgb(223,190,21)"/><text x="53.9285%" y="671.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="62.3978%" y="645" width="0.1362%" height="15" fill="rgb(215,228,25)"/><text x="62.6478%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="62.3978%" y="629" width="0.1362%" height="15" fill="rgb(225,36,22)"/><text x="62.6478%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="62.3978%" y="613" width="0.1362%" height="15" fill="rgb(251,106,46)"/><text x="62.6478%" y="623.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="62.5341%" y="677" width="0.1362%" height="15" fill="rgb(208,90,1)"/><text x="62.7841%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="62.5341%" y="661" width="0.1362%" height="15" fill="rgb(243,10,4)"/><text x="62.7841%" y="671.50"></text></g><g><title>do_syscall_64 (67 samples, 9.13%)</title><rect x="53.6785%" y="693" width="9.1281%" height="15" fill="rgb(212,137,27)"/><text x="53.9285%" y="703.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="62.6703%" y="677" width="0.1362%" height="15" fill="rgb(231,220,49)"/><text x="62.9203%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (71 samples, 9.67%)</title><rect x="53.6785%" y="709" width="9.6730%" height="15" fill="rgb(237,96,20)"/><text x="53.9285%" y="719.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.54%)</title><rect x="62.8065%" y="693" width="0.5450%" height="15" fill="rgb(239,229,30)"/><text x="63.0565%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (74 samples, 10.08%)</title><rect x="53.4060%" y="757" width="10.0817%" height="15" fill="rgb(219,65,33)"/><text x="53.6560%" y="767.50">&lt;std::net::tcp:..</text></g><g><title>std::sys_common::net::TcpStream::write (74 samples, 10.08%)</title><rect x="53.4060%" y="741" width="10.0817%" height="15" fill="rgb(243,134,7)"/><text x="53.6560%" y="751.50">std::sys_common..</text></g><g><title>__libc_send (74 samples, 10.08%)</title><rect x="53.4060%" y="725" width="10.0817%" height="15" fill="rgb(216,177,54)"/><text x="53.6560%" y="735.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="63.3515%" y="709" width="0.1362%" height="15" fill="rgb(211,160,20)"/><text x="63.6015%" y="719.50"></text></g><g><title>decor::Shim::run_on_tcp (234 samples, 31.88%)</title><rect x="31.7439%" y="805" width="31.8801%" height="15" fill="rgb(239,85,39)"/><text x="31.9939%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (234 samples, 31.88%)</title><rect x="31.7439%" y="789" width="31.8801%" height="15" fill="rgb(232,125,22)"/><text x="31.9939%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (76 samples, 10.35%)</title><rect x="53.2698%" y="773" width="10.3542%" height="15" fill="rgb(244,57,34)"/><text x="53.5198%" y="783.50">std::io::buffer..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::remaining (1 samples, 0.14%)</title><rect x="63.4877%" y="757" width="0.1362%" height="15" fill="rgb(214,203,32)"/><text x="63.7377%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.14%)</title><rect x="63.4877%" y="741" width="0.1362%" height="15" fill="rgb(207,58,43)"/><text x="63.7377%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.14%)</title><rect x="63.4877%" y="725" width="0.1362%" height="15" fill="rgb(215,193,15)"/><text x="63.7377%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.14%)</title><rect x="63.4877%" y="709" width="0.1362%" height="15" fill="rgb(232,15,44)"/><text x="63.7377%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.14%)</title><rect x="63.4877%" y="693" width="0.1362%" height="15" fill="rgb(212,3,48)"/><text x="63.7377%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.14%)</title><rect x="63.4877%" y="677" width="0.1362%" height="15" fill="rgb(218,128,7)"/><text x="63.7377%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.14%)</title><rect x="63.4877%" y="661" width="0.1362%" height="15" fill="rgb(226,216,39)"/><text x="63.7377%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.14%)</title><rect x="63.4877%" y="645" width="0.1362%" height="15" fill="rgb(243,47,51)"/><text x="63.7377%" y="655.50"></text></g><g><title>__GI___clone (235 samples, 32.02%)</title><rect x="31.7439%" y="917" width="32.0163%" height="15" fill="rgb(241,183,40)"/><text x="31.9939%" y="927.50">__GI___clone</text></g><g><title>start_thread (235 samples, 32.02%)</title><rect x="31.7439%" y="901" width="32.0163%" height="15" fill="rgb(231,217,32)"/><text x="31.9939%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (235 samples, 32.02%)</title><rect x="31.7439%" y="885" width="32.0163%" height="15" fill="rgb(229,61,38)"/><text x="31.9939%" y="895.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (235 samples, 32.02%)</title><rect x="31.7439%" y="869" width="32.0163%" height="15" fill="rgb(225,210,5)"/><text x="31.9939%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (235 samples, 32.02%)</title><rect x="31.7439%" y="853" width="32.0163%" height="15" fill="rgb(231,79,45)"/><text x="31.9939%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (235 samples, 32.02%)</title><rect x="31.7439%" y="837" width="32.0163%" height="15" fill="rgb(224,100,7)"/><text x="31.9939%" y="847.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (235 samples, 32.02%)</title><rect x="31.7439%" y="821" width="32.0163%" height="15" fill="rgb(241,198,18)"/><text x="31.9939%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backt..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.14%)</title><rect x="63.6240%" y="805" width="0.1362%" height="15" fill="rgb(252,97,53)"/><text x="63.8740%" y="815.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.14%)</title><rect x="63.6240%" y="789" width="0.1362%" height="15" fill="rgb(220,88,7)"/><text x="63.8740%" y="799.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.14%)</title><rect x="63.6240%" y="773" width="0.1362%" height="15" fill="rgb(213,176,14)"/><text x="63.8740%" y="783.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.14%)</title><rect x="63.6240%" y="757" width="0.1362%" height="15" fill="rgb(246,73,7)"/><text x="63.8740%" y="767.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.14%)</title><rect x="63.6240%" y="741" width="0.1362%" height="15" fill="rgb(245,64,36)"/><text x="63.8740%" y="751.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.14%)</title><rect x="63.6240%" y="725" width="0.1362%" height="15" fill="rgb(245,80,10)"/><text x="63.8740%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.14%)</title><rect x="63.6240%" y="709" width="0.1362%" height="15" fill="rgb(232,107,50)"/><text x="63.8740%" y="719.50"></text></g><g><title>unicode_normalization::lookups::composition_table (1 samples, 0.14%)</title><rect x="63.6240%" y="693" width="0.1362%" height="15" fill="rgb(253,3,0)"/><text x="63.8740%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="63.7602%" y="917" width="0.1362%" height="15" fill="rgb(212,99,53)"/><text x="64.0102%" y="927.50"></text></g><g><title>&lt;mysql::conn::Conn as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="63.8965%" y="741" width="0.1362%" height="15" fill="rgb(249,111,54)"/><text x="64.1465%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="63.8965%" y="725" width="0.1362%" height="15" fill="rgb(249,55,30)"/><text x="64.1465%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="63.8965%" y="709" width="0.1362%" height="15" fill="rgb(237,47,42)"/><text x="64.1465%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="63.8965%" y="693" width="0.1362%" height="15" fill="rgb(211,20,18)"/><text x="64.1465%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="63.8965%" y="677" width="0.1362%" height="15" fill="rgb(231,203,46)"/><text x="64.1465%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="63.8965%" y="661" width="0.1362%" height="15" fill="rgb(237,142,3)"/><text x="64.1465%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="63.8965%" y="645" width="0.1362%" height="15" fill="rgb(241,107,1)"/><text x="64.1465%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="63.8965%" y="629" width="0.1362%" height="15" fill="rgb(229,83,13)"/><text x="64.1465%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="63.8965%" y="613" width="0.1362%" height="15" fill="rgb(241,91,40)"/><text x="64.1465%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="63.8965%" y="597" width="0.1362%" height="15" fill="rgb(225,3,45)"/><text x="64.1465%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="63.8965%" y="581" width="0.1362%" height="15" fill="rgb(244,223,14)"/><text x="64.1465%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="63.8965%" y="565" width="0.1362%" height="15" fill="rgb(224,124,37)"/><text x="64.1465%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="63.8965%" y="549" width="0.1362%" height="15" fill="rgb(251,171,30)"/><text x="64.1465%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="63.8965%" y="533" width="0.1362%" height="15" fill="rgb(236,46,54)"/><text x="64.1465%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="63.8965%" y="517" width="0.1362%" height="15" fill="rgb(245,213,5)"/><text x="64.1465%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="63.8965%" y="501" width="0.1362%" height="15" fill="rgb(230,144,27)"/><text x="64.1465%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="63.8965%" y="485" width="0.1362%" height="15" fill="rgb(220,86,6)"/><text x="64.1465%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="63.8965%" y="469" width="0.1362%" height="15" fill="rgb(240,20,13)"/><text x="64.1465%" y="479.50"></text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="63.8965%" y="453" width="0.1362%" height="15" fill="rgb(217,89,34)"/><text x="64.1465%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="63.8965%" y="437" width="0.1362%" height="15" fill="rgb(229,13,5)"/><text x="64.1465%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="64.0327%" y="741" width="0.1362%" height="15" fill="rgb(244,67,35)"/><text x="64.2827%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="64.3052%" y="693" width="0.1362%" height="15" fill="rgb(221,40,2)"/><text x="64.5552%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="64.3052%" y="677" width="0.1362%" height="15" fill="rgb(237,157,21)"/><text x="64.5552%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.14%)</title><rect x="64.3052%" y="661" width="0.1362%" height="15" fill="rgb(222,94,11)"/><text x="64.5552%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.14%)</title><rect x="64.3052%" y="645" width="0.1362%" height="15" fill="rgb(249,113,6)"/><text x="64.5552%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="64.3052%" y="629" width="0.1362%" height="15" fill="rgb(238,137,36)"/><text x="64.5552%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.14%)</title><rect x="64.3052%" y="613" width="0.1362%" height="15" fill="rgb(210,102,26)"/><text x="64.5552%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="64.3052%" y="597" width="0.1362%" height="15" fill="rgb(218,30,30)"/><text x="64.5552%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="64.3052%" y="581" width="0.1362%" height="15" fill="rgb(214,67,26)"/><text x="64.5552%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (1 samples, 0.14%)</title><rect x="64.4414%" y="677" width="0.1362%" height="15" fill="rgb(251,9,53)"/><text x="64.6914%" y="687.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.54%)</title><rect x="64.1689%" y="741" width="0.5450%" height="15" fill="rgb(228,204,25)"/><text x="64.4189%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.54%)</title><rect x="64.1689%" y="725" width="0.5450%" height="15" fill="rgb(207,153,8)"/><text x="64.4189%" y="735.50"></text></g><g><title>core::fmt::write (4 samples, 0.54%)</title><rect x="64.1689%" y="709" width="0.5450%" height="15" fill="rgb(242,9,16)"/><text x="64.4189%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.27%)</title><rect x="64.4414%" y="693" width="0.2725%" height="15" fill="rgb(217,211,10)"/><text x="64.6914%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.14%)</title><rect x="64.5777%" y="677" width="0.1362%" height="15" fill="rgb(219,228,52)"/><text x="64.8277%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.14%)</title><rect x="64.5777%" y="661" width="0.1362%" height="15" fill="rgb(231,92,29)"/><text x="64.8277%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="64.8501%" y="661" width="0.1362%" height="15" fill="rgb(232,8,23)"/><text x="65.1001%" y="671.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.27%)</title><rect x="65.1226%" y="645" width="0.2725%" height="15" fill="rgb(216,211,34)"/><text x="65.3726%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="65.3951%" y="645" width="0.1362%" height="15" fill="rgb(236,151,0)"/><text x="65.6451%" y="655.50"></text></g><g><title>cpu_stop_queue_work (233 samples, 31.74%)</title><rect x="65.8038%" y="533" width="31.7439%" height="15" fill="rgb(209,168,3)"/><text x="66.0538%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (233 samples, 31.74%)</title><rect x="65.8038%" y="517" width="31.7439%" height="15" fill="rgb(208,129,28)"/><text x="66.0538%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (233 samples, 31.74%)</title><rect x="65.8038%" y="501" width="31.7439%" height="15" fill="rgb(229,78,22)"/><text x="66.0538%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (233 samples, 31.74%)</title><rect x="65.8038%" y="485" width="31.7439%" height="15" fill="rgb(228,187,13)"/><text x="66.0538%" y="495.50">__schedule</text></g><g><title>finish_task_switch (233 samples, 31.74%)</title><rect x="65.8038%" y="469" width="31.7439%" height="15" fill="rgb(240,119,24)"/><text x="66.0538%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 31.74%)</title><rect x="65.8038%" y="453" width="31.7439%" height="15" fill="rgb(209,194,42)"/><text x="66.0538%" y="463.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 31.47%)</title><rect x="66.0763%" y="437" width="31.4714%" height="15" fill="rgb(247,200,46)"/><text x="66.3263%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (229 samples, 31.20%)</title><rect x="66.3488%" y="421" width="31.1989%" height="15" fill="rgb(218,76,16)"/><text x="66.5988%" y="431.50">native_write_msr</text></g><g><title>entry_SYSCALL_64 (235 samples, 32.02%)</title><rect x="65.8038%" y="629" width="32.0163%" height="15" fill="rgb(225,21,48)"/><text x="66.0538%" y="639.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (235 samples, 32.02%)</title><rect x="65.8038%" y="613" width="32.0163%" height="15" fill="rgb(239,223,50)"/><text x="66.0538%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 32.02%)</title><rect x="65.8038%" y="597" width="32.0163%" height="15" fill="rgb(244,45,21)"/><text x="66.0538%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 32.02%)</title><rect x="65.8038%" y="581" width="32.0163%" height="15" fill="rgb(232,33,43)"/><text x="66.0538%" y="591.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 32.02%)</title><rect x="65.8038%" y="565" width="32.0163%" height="15" fill="rgb(209,8,3)"/><text x="66.0538%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 32.02%)</title><rect x="65.8038%" y="549" width="32.0163%" height="15" fill="rgb(214,25,53)"/><text x="66.0538%" y="559.50">stop_one_cpu</text></g><g><title>wait_for_completion (2 samples, 0.27%)</title><rect x="97.5477%" y="533" width="0.2725%" height="15" fill="rgb(254,186,54)"/><text x="97.7977%" y="543.50"></text></g><g><title>_raw_spin_lock_irq (2 samples, 0.27%)</title><rect x="97.5477%" y="517" width="0.2725%" height="15" fill="rgb(208,174,49)"/><text x="97.7977%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="97.6839%" y="501" width="0.1362%" height="15" fill="rgb(233,191,51)"/><text x="97.9339%" y="511.50"></text></g><g><title>in_lock_functions (1 samples, 0.14%)</title><rect x="97.6839%" y="485" width="0.1362%" height="15" fill="rgb(222,134,10)"/><text x="97.9339%" y="495.50"></text></g><g><title>__GI___sched_setaffinity_new (238 samples, 32.43%)</title><rect x="65.5313%" y="645" width="32.4251%" height="15" fill="rgb(230,226,20)"/><text x="65.7813%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="97.8202%" y="629" width="0.1362%" height="15" fill="rgb(251,111,25)"/><text x="98.0702%" y="639.50"></text></g><g><title>hwloc::Topology::new (245 samples, 33.38%)</title><rect x="64.7139%" y="741" width="33.3787%" height="15" fill="rgb(224,40,46)"/><text x="64.9639%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (245 samples, 33.38%)</title><rect x="64.7139%" y="725" width="33.3787%" height="15" fill="rgb(236,108,47)"/><text x="64.9639%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 33.38%)</title><rect x="64.7139%" y="709" width="33.3787%" height="15" fill="rgb(234,93,0)"/><text x="64.9639%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 33.38%)</title><rect x="64.7139%" y="693" width="33.3787%" height="15" fill="rgb(224,213,32)"/><text x="64.9639%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 33.38%)</title><rect x="64.7139%" y="677" width="33.3787%" height="15" fill="rgb(251,11,48)"/><text x="64.9639%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (243 samples, 33.11%)</title><rect x="64.9864%" y="661" width="33.1063%" height="15" fill="rgb(236,173,5)"/><text x="65.2364%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__sched_cpufree (1 samples, 0.14%)</title><rect x="97.9564%" y="645" width="0.1362%" height="15" fill="rgb(230,95,12)"/><text x="98.2064%" y="655.50"></text></g><g><title>hwloc::Topology::set_cpubind_for_process (1 samples, 0.14%)</title><rect x="98.0926%" y="741" width="0.1362%" height="15" fill="rgb(232,209,1)"/><text x="98.3426%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="98.0926%" y="725" width="0.1362%" height="15" fill="rgb(232,6,1)"/><text x="98.3426%" y="735.50"></text></g><g><title>__closedir (1 samples, 0.14%)</title><rect x="98.0926%" y="709" width="0.1362%" height="15" fill="rgb(210,224,50)"/><text x="98.3426%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="98.0926%" y="693" width="0.1362%" height="15" fill="rgb(228,127,35)"/><text x="98.3426%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="98.2289%" y="725" width="0.1362%" height="15" fill="rgb(245,102,45)"/><text x="98.4789%" y="735.50"></text></g><g><title>__libc_start_main (255 samples, 34.74%)</title><rect x="63.8965%" y="901" width="34.7411%" height="15" fill="rgb(214,1,49)"/><text x="64.1465%" y="911.50">__libc_start_main</text></g><g><title>main (255 samples, 34.74%)</title><rect x="63.8965%" y="885" width="34.7411%" height="15" fill="rgb(226,163,40)"/><text x="64.1465%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (255 samples, 34.74%)</title><rect x="63.8965%" y="869" width="34.7411%" height="15" fill="rgb(239,212,28)"/><text x="64.1465%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (255 samples, 34.74%)</title><rect x="63.8965%" y="853" width="34.7411%" height="15" fill="rgb(220,20,13)"/><text x="64.1465%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (255 samples, 34.74%)</title><rect x="63.8965%" y="837" width="34.7411%" height="15" fill="rgb(210,164,35)"/><text x="64.1465%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (255 samples, 34.74%)</title><rect x="63.8965%" y="821" width="34.7411%" height="15" fill="rgb(248,109,41)"/><text x="64.1465%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (255 samples, 34.74%)</title><rect x="63.8965%" y="805" width="34.7411%" height="15" fill="rgb(238,23,50)"/><text x="64.1465%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::F..</text></g><g><title>std::rt::lang_start::_{{closure}} (255 samples, 34.74%)</title><rect x="63.8965%" y="789" width="34.7411%" height="15" fill="rgb(211,48,49)"/><text x="64.1465%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (255 samples, 34.74%)</title><rect x="63.8965%" y="773" width="34.7411%" height="15" fill="rgb(223,36,21)"/><text x="64.1465%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (255 samples, 34.74%)</title><rect x="63.8965%" y="757" width="34.7411%" height="15" fill="rgb(207,123,46)"/><text x="64.1465%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.41%)</title><rect x="98.2289%" y="741" width="0.4087%" height="15" fill="rgb(240,218,32)"/><text x="98.4789%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.27%)</title><rect x="98.3651%" y="725" width="0.2725%" height="15" fill="rgb(252,5,43)"/><text x="98.6151%" y="735.50"></text></g><g><title>_start (256 samples, 34.88%)</title><rect x="63.8965%" y="917" width="34.8774%" height="15" fill="rgb(252,84,19)"/><text x="64.1465%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.14%)</title><rect x="98.6376%" y="901" width="0.1362%" height="15" fill="rgb(243,152,39)"/><text x="98.8876%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.14%)</title><rect x="98.6376%" y="885" width="0.1362%" height="15" fill="rgb(234,160,15)"/><text x="98.8876%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.14%)</title><rect x="98.6376%" y="869" width="0.1362%" height="15" fill="rgb(237,34,20)"/><text x="98.8876%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.14%)</title><rect x="98.6376%" y="853" width="0.1362%" height="15" fill="rgb(229,97,13)"/><text x="98.8876%" y="863.50"></text></g><g><title>_dl_sort_maps (1 samples, 0.14%)</title><rect x="98.6376%" y="837" width="0.1362%" height="15" fill="rgb(234,71,50)"/><text x="98.8876%" y="847.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="98.7738%" y="805" width="0.1362%" height="15" fill="rgb(253,155,4)"/><text x="99.0238%" y="815.50"></text></g><g><title>release_pages (1 samples, 0.14%)</title><rect x="98.7738%" y="789" width="0.1362%" height="15" fill="rgb(222,185,37)"/><text x="99.0238%" y="799.50"></text></g><g><title>free_unref_page_list (1 samples, 0.14%)</title><rect x="98.7738%" y="773" width="0.1362%" height="15" fill="rgb(251,177,13)"/><text x="99.0238%" y="783.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.14%)</title><rect x="98.7738%" y="757" width="0.1362%" height="15" fill="rgb(250,179,40)"/><text x="99.0238%" y="767.50"></text></g><g><title>[vmlinux] (2 samples, 0.27%)</title><rect x="98.7738%" y="885" width="0.2725%" height="15" fill="rgb(242,44,2)"/><text x="99.0238%" y="895.50"></text></g><g><title>do_group_exit (2 samples, 0.27%)</title><rect x="98.7738%" y="869" width="0.2725%" height="15" fill="rgb(216,177,13)"/><text x="99.0238%" y="879.50"></text></g><g><title>do_exit (2 samples, 0.27%)</title><rect x="98.7738%" y="853" width="0.2725%" height="15" fill="rgb(216,106,43)"/><text x="99.0238%" y="863.50"></text></g><g><title>mmput (2 samples, 0.27%)</title><rect x="98.7738%" y="837" width="0.2725%" height="15" fill="rgb(216,183,2)"/><text x="99.0238%" y="847.50"></text></g><g><title>exit_mmap (2 samples, 0.27%)</title><rect x="98.7738%" y="821" width="0.2725%" height="15" fill="rgb(249,75,3)"/><text x="99.0238%" y="831.50"></text></g><g><title>unmap_vmas (1 samples, 0.14%)</title><rect x="98.9101%" y="805" width="0.1362%" height="15" fill="rgb(219,67,39)"/><text x="99.1601%" y="815.50"></text></g><g><title>unmap_page_range (1 samples, 0.14%)</title><rect x="98.9101%" y="789" width="0.1362%" height="15" fill="rgb(253,228,2)"/><text x="99.1601%" y="799.50"></text></g><g><title>page_remove_file_rmap (1 samples, 0.14%)</title><rect x="98.9101%" y="773" width="0.1362%" height="15" fill="rgb(235,138,27)"/><text x="99.1601%" y="783.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.14%)</title><rect x="98.9101%" y="757" width="0.1362%" height="15" fill="rgb(236,97,51)"/><text x="99.1601%" y="767.50"></text></g><g><title>lobsters (728 samples, 99.18%)</title><rect x="0.0000%" y="933" width="99.1826%" height="15" fill="rgb(240,80,30)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>entry_SYSCALL_64 (3 samples, 0.41%)</title><rect x="98.7738%" y="917" width="0.4087%" height="15" fill="rgb(230,178,19)"/><text x="99.0238%" y="927.50"></text></g><g><title>do_syscall_64 (3 samples, 0.41%)</title><rect x="98.7738%" y="901" width="0.4087%" height="15" fill="rgb(210,190,27)"/><text x="99.0238%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="99.0463%" y="885" width="0.1362%" height="15" fill="rgb(222,107,31)"/><text x="99.2963%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.14%)</title><rect x="99.0463%" y="869" width="0.1362%" height="15" fill="rgb(216,127,34)"/><text x="99.2963%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.14%)</title><rect x="99.0463%" y="853" width="0.1362%" height="15" fill="rgb(234,116,52)"/><text x="99.2963%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.14%)</title><rect x="99.0463%" y="837" width="0.1362%" height="15" fill="rgb(222,124,15)"/><text x="99.2963%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.14%)</title><rect x="99.0463%" y="821" width="0.1362%" height="15" fill="rgb(231,179,28)"/><text x="99.2963%" y="831.50"></text></g><g><title>__clear_user (1 samples, 0.14%)</title><rect x="99.0463%" y="805" width="0.1362%" height="15" fill="rgb(226,93,45)"/><text x="99.2963%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="99.0463%" y="789" width="0.1362%" height="15" fill="rgb(215,8,51)"/><text x="99.2963%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="99.0463%" y="773" width="0.1362%" height="15" fill="rgb(223,106,5)"/><text x="99.2963%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="99.0463%" y="757" width="0.1362%" height="15" fill="rgb(250,191,5)"/><text x="99.2963%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="99.0463%" y="741" width="0.1362%" height="15" fill="rgb(242,132,44)"/><text x="99.2963%" y="751.50"></text></g><g><title>copy_page (1 samples, 0.14%)</title><rect x="99.0463%" y="725" width="0.1362%" height="15" fill="rgb(251,152,29)"/><text x="99.2963%" y="735.50"></text></g><g><title>all (734 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(218,179,5)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.82%)</title><rect x="99.1826%" y="933" width="0.8174%" height="15" fill="rgb(227,67,19)"/><text x="99.4326%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.82%)</title><rect x="99.1826%" y="917" width="0.8174%" height="15" fill="rgb(233,119,31)"/><text x="99.4326%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.82%)</title><rect x="99.1826%" y="901" width="0.8174%" height="15" fill="rgb(241,120,22)"/><text x="99.4326%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.82%)</title><rect x="99.1826%" y="885" width="0.8174%" height="15" fill="rgb(224,102,30)"/><text x="99.4326%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.82%)</title><rect x="99.1826%" y="869" width="0.8174%" height="15" fill="rgb(210,164,37)"/><text x="99.4326%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.82%)</title><rect x="99.1826%" y="853" width="0.8174%" height="15" fill="rgb(226,191,16)"/><text x="99.4326%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.82%)</title><rect x="99.1826%" y="837" width="0.8174%" height="15" fill="rgb(214,40,45)"/><text x="99.4326%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.82%)</title><rect x="99.1826%" y="821" width="0.8174%" height="15" fill="rgb(244,29,26)"/><text x="99.4326%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.82%)</title><rect x="99.1826%" y="805" width="0.8174%" height="15" fill="rgb(216,16,5)"/><text x="99.4326%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.82%)</title><rect x="99.1826%" y="789" width="0.8174%" height="15" fill="rgb(249,76,35)"/><text x="99.4326%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.68%)</title><rect x="99.3188%" y="773" width="0.6812%" height="15" fill="rgb(207,11,44)"/><text x="99.5688%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.68%)</title><rect x="99.3188%" y="757" width="0.6812%" height="15" fill="rgb(228,190,49)"/><text x="99.5688%" y="767.50"></text></g></svg></svg>