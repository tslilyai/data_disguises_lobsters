<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1029.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1029.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="0.0000%" y="949" width="0.1332%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="959.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="0.1332%" y="949" width="0.1332%" height="15" fill="rgb(217,0,24)"/><text x="0.3832%" y="959.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.13%)</title><rect x="0.1332%" y="933" width="0.1332%" height="15" fill="rgb(221,193,54)"/><text x="0.3832%" y="943.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.13%)</title><rect x="0.1332%" y="917" width="0.1332%" height="15" fill="rgb(248,212,6)"/><text x="0.3832%" y="927.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.13%)</title><rect x="0.1332%" y="901" width="0.1332%" height="15" fill="rgb(208,68,35)"/><text x="0.3832%" y="911.50"></text></g><g><title>__libc_recv (1 samples, 0.13%)</title><rect x="0.1332%" y="885" width="0.1332%" height="15" fill="rgb(232,128,0)"/><text x="0.3832%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="0.1332%" y="869" width="0.1332%" height="15" fill="rgb(207,160,47)"/><text x="0.3832%" y="879.50"></text></g><g><title>[[heap]] (3 samples, 0.40%)</title><rect x="0.0000%" y="965" width="0.3995%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="975.50"></text></g><g><title>hwloc_linux_set_tid_cpubind (1 samples, 0.13%)</title><rect x="0.2663%" y="949" width="0.1332%" height="15" fill="rgb(218,30,26)"/><text x="0.5163%" y="959.50"></text></g><g><title>__libc_send (1 samples, 0.13%)</title><rect x="0.3995%" y="949" width="0.1332%" height="15" fill="rgb(220,122,19)"/><text x="0.6495%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="0.3995%" y="933" width="0.1332%" height="15" fill="rgb(250,228,42)"/><text x="0.6495%" y="943.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="0.5326%" y="949" width="0.1332%" height="15" fill="rgb(240,193,28)"/><text x="0.7826%" y="959.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.13%)</title><rect x="0.6658%" y="949" width="0.1332%" height="15" fill="rgb(216,20,37)"/><text x="0.9158%" y="959.50"></text></g><g><title>[[stack]] (4 samples, 0.53%)</title><rect x="0.3995%" y="965" width="0.5326%" height="15" fill="rgb(206,188,39)"/><text x="0.6495%" y="975.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.13%)</title><rect x="0.7989%" y="949" width="0.1332%" height="15" fill="rgb(217,207,13)"/><text x="1.0489%" y="959.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="0.9321%" y="949" width="0.1332%" height="15" fill="rgb(231,73,38)"/><text x="1.1821%" y="959.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="1.0652%" y="949" width="0.1332%" height="15" fill="rgb(225,20,46)"/><text x="1.3152%" y="959.50"></text></g><g><title>__libc_send (2 samples, 0.27%)</title><rect x="1.1984%" y="949" width="0.2663%" height="15" fill="rgb(210,31,41)"/><text x="1.4484%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="1.1984%" y="933" width="0.2663%" height="15" fill="rgb(221,200,47)"/><text x="1.4484%" y="943.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="1.4647%" y="949" width="0.1332%" height="15" fill="rgb(226,26,5)"/><text x="1.7147%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="1.5979%" y="949" width="0.1332%" height="15" fill="rgb(249,33,26)"/><text x="1.8479%" y="959.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.27%)</title><rect x="1.7310%" y="949" width="0.2663%" height="15" fill="rgb(235,183,28)"/><text x="1.9810%" y="959.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.13%)</title><rect x="1.9973%" y="949" width="0.1332%" height="15" fill="rgb(221,5,38)"/><text x="2.2473%" y="959.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.13%)</title><rect x="2.1305%" y="949" width="0.1332%" height="15" fill="rgb(247,18,42)"/><text x="2.3805%" y="959.50"></text></g><g><title>[anon] (11 samples, 1.46%)</title><rect x="0.9321%" y="965" width="1.4647%" height="15" fill="rgb(241,131,45)"/><text x="1.1821%" y="975.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.13%)</title><rect x="2.2636%" y="949" width="0.1332%" height="15" fill="rgb(249,31,29)"/><text x="2.5136%" y="959.50"></text></g><g><title>__libc_send (1 samples, 0.13%)</title><rect x="2.3968%" y="949" width="0.1332%" height="15" fill="rgb(225,111,53)"/><text x="2.6468%" y="959.50"></text></g><g><title>[lobsters] (2 samples, 0.27%)</title><rect x="2.3968%" y="965" width="0.2663%" height="15" fill="rgb(238,160,17)"/><text x="2.6468%" y="975.50"></text></g><g><title>url::parser::Parser::parse_url (1 samples, 0.13%)</title><rect x="2.5300%" y="949" width="0.1332%" height="15" fill="rgb(214,148,48)"/><text x="2.7800%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="2.6631%" y="869" width="0.1332%" height="15" fill="rgb(232,36,49)"/><text x="2.9131%" y="879.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="2.6631%" y="853" width="0.1332%" height="15" fill="rgb(209,103,24)"/><text x="2.9131%" y="863.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="2.6631%" y="837" width="0.1332%" height="15" fill="rgb(229,88,8)"/><text x="2.9131%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.13%)</title><rect x="2.6631%" y="821" width="0.1332%" height="15" fill="rgb(213,181,19)"/><text x="2.9131%" y="831.50"></text></g><g><title>sysmalloc (1 samples, 0.13%)</title><rect x="2.6631%" y="805" width="0.1332%" height="15" fill="rgb(254,191,54)"/><text x="2.9131%" y="815.50"></text></g><g><title>__GI___mprotect (1 samples, 0.13%)</title><rect x="2.6631%" y="789" width="0.1332%" height="15" fill="rgb(241,83,37)"/><text x="2.9131%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="2.6631%" y="773" width="0.1332%" height="15" fill="rgb(233,36,39)"/><text x="2.9131%" y="783.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="2.6631%" y="757" width="0.1332%" height="15" fill="rgb(226,3,54)"/><text x="2.9131%" y="767.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.13%)</title><rect x="2.6631%" y="741" width="0.1332%" height="15" fill="rgb(245,192,40)"/><text x="2.9131%" y="751.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.13%)</title><rect x="2.6631%" y="725" width="0.1332%" height="15" fill="rgb(238,167,29)"/><text x="2.9131%" y="735.50"></text></g><g><title>mprotect_fixup (1 samples, 0.13%)</title><rect x="2.6631%" y="709" width="0.1332%" height="15" fill="rgb(232,182,51)"/><text x="2.9131%" y="719.50"></text></g><g><title>vma_merge (1 samples, 0.13%)</title><rect x="2.6631%" y="693" width="0.1332%" height="15" fill="rgb(231,60,39)"/><text x="2.9131%" y="703.50"></text></g><g><title>__vma_adjust (1 samples, 0.13%)</title><rect x="2.6631%" y="677" width="0.1332%" height="15" fill="rgb(208,69,12)"/><text x="2.9131%" y="687.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="2.7963%" y="869" width="0.1332%" height="15" fill="rgb(235,93,37)"/><text x="3.0463%" y="879.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="2.7963%" y="853" width="0.1332%" height="15" fill="rgb(213,116,39)"/><text x="3.0463%" y="863.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="2.7963%" y="837" width="0.1332%" height="15" fill="rgb(222,207,29)"/><text x="3.0463%" y="847.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="2.7963%" y="821" width="0.1332%" height="15" fill="rgb(206,96,30)"/><text x="3.0463%" y="831.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.13%)</title><rect x="2.7963%" y="805" width="0.1332%" height="15" fill="rgb(218,138,4)"/><text x="3.0463%" y="815.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.13%)</title><rect x="2.7963%" y="789" width="0.1332%" height="15" fill="rgb(250,191,14)"/><text x="3.0463%" y="799.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="2.7963%" y="773" width="0.1332%" height="15" fill="rgb(239,60,40)"/><text x="3.0463%" y="783.50"></text></g><g><title>prep_new_page (1 samples, 0.13%)</title><rect x="2.7963%" y="757" width="0.1332%" height="15" fill="rgb(206,27,48)"/><text x="3.0463%" y="767.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.13%)</title><rect x="2.7963%" y="741" width="0.1332%" height="15" fill="rgb(225,35,8)"/><text x="3.0463%" y="751.50"></text></g><g><title>clear_page_erms (1 samples, 0.13%)</title><rect x="2.7963%" y="725" width="0.1332%" height="15" fill="rgb(250,213,24)"/><text x="3.0463%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.53%)</title><rect x="2.6631%" y="949" width="0.5326%" height="15" fill="rgb(247,123,22)"/><text x="2.9131%" y="959.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.53%)</title><rect x="2.6631%" y="933" width="0.5326%" height="15" fill="rgb(231,138,38)"/><text x="2.9131%" y="943.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.53%)</title><rect x="2.6631%" y="917" width="0.5326%" height="15" fill="rgb(231,145,46)"/><text x="2.9131%" y="927.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.53%)</title><rect x="2.6631%" y="901" width="0.5326%" height="15" fill="rgb(251,118,11)"/><text x="2.9131%" y="911.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.53%)</title><rect x="2.6631%" y="885" width="0.5326%" height="15" fill="rgb(217,147,25)"/><text x="2.9131%" y="895.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.27%)</title><rect x="2.9294%" y="869" width="0.2663%" height="15" fill="rgb(247,81,37)"/><text x="3.1794%" y="879.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.27%)</title><rect x="2.9294%" y="853" width="0.2663%" height="15" fill="rgb(209,12,38)"/><text x="3.1794%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="3.1957%" y="949" width="0.1332%" height="15" fill="rgb(227,1,9)"/><text x="3.4457%" y="959.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="3.1957%" y="933" width="0.1332%" height="15" fill="rgb(248,47,43)"/><text x="3.4457%" y="943.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.27%)</title><rect x="3.3289%" y="949" width="0.2663%" height="15" fill="rgb(221,10,30)"/><text x="3.5789%" y="959.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="3.5952%" y="949" width="0.1332%" height="15" fill="rgb(210,229,1)"/><text x="3.8452%" y="959.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="3.7284%" y="949" width="0.1332%" height="15" fill="rgb(222,148,37)"/><text x="3.9784%" y="959.50"></text></g><g><title>__libc_recv (2 samples, 0.27%)</title><rect x="3.8615%" y="949" width="0.2663%" height="15" fill="rgb(234,67,33)"/><text x="4.1115%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="3.8615%" y="933" width="0.2663%" height="15" fill="rgb(247,98,35)"/><text x="4.1115%" y="943.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="4.1278%" y="709" width="0.1332%" height="15" fill="rgb(247,138,52)"/><text x="4.3778%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="4.1278%" y="693" width="0.1332%" height="15" fill="rgb(213,79,30)"/><text x="4.3778%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="4.1278%" y="677" width="0.1332%" height="15" fill="rgb(246,177,23)"/><text x="4.3778%" y="687.50"></text></g><g><title>__libc_close (1 samples, 0.13%)</title><rect x="4.2610%" y="709" width="0.1332%" height="15" fill="rgb(230,62,27)"/><text x="4.5110%" y="719.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.13%)</title><rect x="4.2610%" y="693" width="0.1332%" height="15" fill="rgb(216,154,8)"/><text x="4.5110%" y="703.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.40%)</title><rect x="4.1278%" y="789" width="0.3995%" height="15" fill="rgb(244,35,45)"/><text x="4.3778%" y="799.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.40%)</title><rect x="4.1278%" y="773" width="0.3995%" height="15" fill="rgb(251,115,12)"/><text x="4.3778%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.40%)</title><rect x="4.1278%" y="757" width="0.3995%" height="15" fill="rgb(240,54,50)"/><text x="4.3778%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.40%)</title><rect x="4.1278%" y="741" width="0.3995%" height="15" fill="rgb(233,84,52)"/><text x="4.3778%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.40%)</title><rect x="4.1278%" y="725" width="0.3995%" height="15" fill="rgb(207,117,47)"/><text x="4.3778%" y="735.50"></text></g><g><title>__libc_read (1 samples, 0.13%)</title><rect x="4.3941%" y="709" width="0.1332%" height="15" fill="rgb(249,43,39)"/><text x="4.6441%" y="719.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.13%)</title><rect x="4.3941%" y="693" width="0.1332%" height="15" fill="rgb(209,38,44)"/><text x="4.6441%" y="703.50"></text></g><g><title>fput_many (2 samples, 0.27%)</title><rect x="4.9268%" y="613" width="0.2663%" height="15" fill="rgb(236,212,23)"/><text x="5.1768%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="5.1931%" y="565" width="0.1332%" height="15" fill="rgb(242,79,21)"/><text x="5.4431%" y="575.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="5.1931%" y="549" width="0.1332%" height="15" fill="rgb(211,96,35)"/><text x="5.4431%" y="559.50"></text></g><g><title>in_lock_functions (1 samples, 0.13%)</title><rect x="5.1931%" y="533" width="0.1332%" height="15" fill="rgb(253,215,40)"/><text x="5.4431%" y="543.50"></text></g><g><title>release_sock (2 samples, 0.27%)</title><rect x="5.1931%" y="581" width="0.2663%" height="15" fill="rgb(211,81,21)"/><text x="5.4431%" y="591.50"></text></g><g><title>tcp_release_cb (1 samples, 0.13%)</title><rect x="5.3262%" y="565" width="0.1332%" height="15" fill="rgb(208,190,38)"/><text x="5.5762%" y="575.50"></text></g><g><title>__ip_local_out (1 samples, 0.13%)</title><rect x="6.5246%" y="501" width="0.1332%" height="15" fill="rgb(235,213,38)"/><text x="6.7746%" y="511.50"></text></g><g><title>__sk_dst_check (1 samples, 0.13%)</title><rect x="6.6578%" y="501" width="0.1332%" height="15" fill="rgb(237,122,38)"/><text x="6.9078%" y="511.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.13%)</title><rect x="6.6578%" y="485" width="0.1332%" height="15" fill="rgb(244,218,35)"/><text x="6.9078%" y="495.50"></text></g><g><title>__ip_finish_output (2 samples, 0.27%)</title><rect x="6.7909%" y="485" width="0.2663%" height="15" fill="rgb(240,68,47)"/><text x="7.0409%" y="495.50"></text></g><g><title>ip_finish_output (1 samples, 0.13%)</title><rect x="7.0573%" y="485" width="0.1332%" height="15" fill="rgb(210,16,53)"/><text x="7.3073%" y="495.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.13%)</title><rect x="7.4567%" y="421" width="0.1332%" height="15" fill="rgb(235,124,12)"/><text x="7.7067%" y="431.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.53%)</title><rect x="7.3236%" y="469" width="0.5326%" height="15" fill="rgb(224,169,11)"/><text x="7.5736%" y="479.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.40%)</title><rect x="7.4567%" y="453" width="0.3995%" height="15" fill="rgb(250,166,2)"/><text x="7.7067%" y="463.50"></text></g><g><title>loopback_xmit (3 samples, 0.40%)</title><rect x="7.4567%" y="437" width="0.3995%" height="15" fill="rgb(242,216,29)"/><text x="7.7067%" y="447.50"></text></g><g><title>netif_rx (2 samples, 0.27%)</title><rect x="7.5899%" y="421" width="0.2663%" height="15" fill="rgb(230,116,27)"/><text x="7.8399%" y="431.50"></text></g><g><title>netif_rx_internal (2 samples, 0.27%)</title><rect x="7.5899%" y="405" width="0.2663%" height="15" fill="rgb(228,99,48)"/><text x="7.8399%" y="415.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.13%)</title><rect x="7.7230%" y="389" width="0.1332%" height="15" fill="rgb(253,11,6)"/><text x="7.9730%" y="399.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.13%)</title><rect x="8.1225%" y="389" width="0.1332%" height="15" fill="rgb(247,143,39)"/><text x="8.3725%" y="399.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.13%)</title><rect x="8.2557%" y="389" width="0.1332%" height="15" fill="rgb(236,97,10)"/><text x="8.5057%" y="399.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.27%)</title><rect x="8.6551%" y="357" width="0.2663%" height="15" fill="rgb(233,208,19)"/><text x="8.9051%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="9.1877%" y="309" width="0.1332%" height="15" fill="rgb(216,164,2)"/><text x="9.4377%" y="319.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.13%)</title><rect x="9.4541%" y="293" width="0.1332%" height="15" fill="rgb(220,129,5)"/><text x="9.7041%" y="303.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="10.2530%" y="277" width="0.1332%" height="15" fill="rgb(242,17,10)"/><text x="10.5030%" y="287.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.27%)</title><rect x="10.3862%" y="277" width="0.2663%" height="15" fill="rgb(242,107,0)"/><text x="10.6362%" y="287.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="10.5193%" y="261" width="0.1332%" height="15" fill="rgb(251,28,31)"/><text x="10.7693%" y="271.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="10.5193%" y="245" width="0.1332%" height="15" fill="rgb(233,223,10)"/><text x="10.7693%" y="255.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.13%)</title><rect x="11.0519%" y="245" width="0.1332%" height="15" fill="rgb(215,21,27)"/><text x="11.3019%" y="255.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.13%)</title><rect x="11.1851%" y="245" width="0.1332%" height="15" fill="rgb(232,23,21)"/><text x="11.4351%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="11.7177%" y="181" width="0.1332%" height="15" fill="rgb(244,5,23)"/><text x="11.9677%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="11.8509%" y="181" width="0.1332%" height="15" fill="rgb(226,81,46)"/><text x="12.1009%" y="191.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.13%)</title><rect x="11.9840%" y="181" width="0.1332%" height="15" fill="rgb(247,70,30)"/><text x="12.2340%" y="191.50"></text></g><g><title>psi_task_change (6 samples, 0.80%)</title><rect x="12.1172%" y="165" width="0.7989%" height="15" fill="rgb(212,68,19)"/><text x="12.3672%" y="175.50"></text></g><g><title>psi_group_change (5 samples, 0.67%)</title><rect x="12.2503%" y="149" width="0.6658%" height="15" fill="rgb(240,187,13)"/><text x="12.5003%" y="159.50"></text></g><g><title>record_times (2 samples, 0.27%)</title><rect x="12.6498%" y="133" width="0.2663%" height="15" fill="rgb(223,113,26)"/><text x="12.8998%" y="143.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.27%)</title><rect x="12.6498%" y="117" width="0.2663%" height="15" fill="rgb(206,192,2)"/><text x="12.8998%" y="127.50"></text></g><g><title>sched_clock (2 samples, 0.27%)</title><rect x="12.6498%" y="101" width="0.2663%" height="15" fill="rgb(241,108,4)"/><text x="12.8998%" y="111.50"></text></g><g><title>native_sched_clock (2 samples, 0.27%)</title><rect x="12.6498%" y="85" width="0.2663%" height="15" fill="rgb(247,173,49)"/><text x="12.8998%" y="95.50"></text></g><g><title>enqueue_task (8 samples, 1.07%)</title><rect x="12.1172%" y="181" width="1.0652%" height="15" fill="rgb(224,114,35)"/><text x="12.3672%" y="191.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.27%)</title><rect x="12.9161%" y="165" width="0.2663%" height="15" fill="rgb(245,159,27)"/><text x="13.1661%" y="175.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.13%)</title><rect x="13.3156%" y="133" width="0.1332%" height="15" fill="rgb(245,172,44)"/><text x="13.5656%" y="143.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.67%)</title><rect x="13.1824%" y="181" width="0.6658%" height="15" fill="rgb(236,23,11)"/><text x="13.4324%" y="191.50"></text></g><g><title>enqueue_entity (5 samples, 0.67%)</title><rect x="13.1824%" y="165" width="0.6658%" height="15" fill="rgb(205,117,38)"/><text x="13.4324%" y="175.50"></text></g><g><title>update_load_avg (4 samples, 0.53%)</title><rect x="13.3156%" y="149" width="0.5326%" height="15" fill="rgb(237,72,25)"/><text x="13.5656%" y="159.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.40%)</title><rect x="13.4487%" y="133" width="0.3995%" height="15" fill="rgb(244,70,9)"/><text x="13.6987%" y="143.50"></text></g><g><title>find_first_bit (1 samples, 0.13%)</title><rect x="13.8482%" y="181" width="0.1332%" height="15" fill="rgb(217,125,39)"/><text x="14.0982%" y="191.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="13.9814%" y="181" width="0.1332%" height="15" fill="rgb(235,36,10)"/><text x="14.2314%" y="191.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.40%)</title><rect x="14.1145%" y="181" width="0.3995%" height="15" fill="rgb(251,123,47)"/><text x="14.3645%" y="191.50"></text></g><g><title>check_preempt_curr (2 samples, 0.27%)</title><rect x="14.2477%" y="165" width="0.2663%" height="15" fill="rgb(221,13,13)"/><text x="14.4977%" y="175.50"></text></g><g><title>resched_curr (2 samples, 0.27%)</title><rect x="14.2477%" y="149" width="0.2663%" height="15" fill="rgb(238,131,9)"/><text x="14.4977%" y="159.50"></text></g><g><title>__wake_up_common (25 samples, 3.33%)</title><rect x="11.4514%" y="213" width="3.3289%" height="15" fill="rgb(211,50,8)"/><text x="11.7014%" y="223.50">__w..</text></g><g><title>try_to_wake_up (25 samples, 3.33%)</title><rect x="11.4514%" y="197" width="3.3289%" height="15" fill="rgb(245,182,24)"/><text x="11.7014%" y="207.50">try..</text></g><g><title>update_rq_clock (2 samples, 0.27%)</title><rect x="14.5140%" y="181" width="0.2663%" height="15" fill="rgb(242,14,37)"/><text x="14.7640%" y="191.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="14.6471%" y="165" width="0.1332%" height="15" fill="rgb(246,228,12)"/><text x="14.8971%" y="175.50"></text></g><g><title>sched_clock (1 samples, 0.13%)</title><rect x="14.6471%" y="149" width="0.1332%" height="15" fill="rgb(213,55,15)"/><text x="14.8971%" y="159.50"></text></g><g><title>native_sched_clock (1 samples, 0.13%)</title><rect x="14.6471%" y="133" width="0.1332%" height="15" fill="rgb(209,9,3)"/><text x="14.8971%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="14.7803%" y="213" width="0.1332%" height="15" fill="rgb(230,59,30)"/><text x="15.0303%" y="223.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="14.7803%" y="197" width="0.1332%" height="15" fill="rgb(209,121,21)"/><text x="15.0303%" y="207.50"></text></g><g><title>sock_def_readable (28 samples, 3.73%)</title><rect x="11.3182%" y="245" width="3.7284%" height="15" fill="rgb(220,109,13)"/><text x="11.5682%" y="255.50">sock..</text></g><g><title>__wake_up_common_lock (27 samples, 3.60%)</title><rect x="11.4514%" y="229" width="3.5952%" height="15" fill="rgb(232,18,1)"/><text x="11.7014%" y="239.50">__wa..</text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.13%)</title><rect x="14.9134%" y="213" width="0.1332%" height="15" fill="rgb(215,41,42)"/><text x="15.1634%" y="223.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.13%)</title><rect x="14.9134%" y="197" width="0.1332%" height="15" fill="rgb(224,123,36)"/><text x="15.1634%" y="207.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.13%)</title><rect x="14.9134%" y="181" width="0.1332%" height="15" fill="rgb(240,125,3)"/><text x="15.1634%" y="191.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.13%)</title><rect x="14.9134%" y="165" width="0.1332%" height="15" fill="rgb(205,98,50)"/><text x="15.1634%" y="175.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.13%)</title><rect x="14.9134%" y="149" width="0.1332%" height="15" fill="rgb(205,185,37)"/><text x="15.1634%" y="159.50"></text></g><g><title>tick_sched_timer (1 samples, 0.13%)</title><rect x="14.9134%" y="133" width="0.1332%" height="15" fill="rgb(238,207,15)"/><text x="15.1634%" y="143.50"></text></g><g><title>tick_sched_handle (1 samples, 0.13%)</title><rect x="14.9134%" y="117" width="0.1332%" height="15" fill="rgb(213,199,42)"/><text x="15.1634%" y="127.50"></text></g><g><title>update_process_times (1 samples, 0.13%)</title><rect x="14.9134%" y="101" width="0.1332%" height="15" fill="rgb(235,201,11)"/><text x="15.1634%" y="111.50"></text></g><g><title>scheduler_tick (1 samples, 0.13%)</title><rect x="14.9134%" y="85" width="0.1332%" height="15" fill="rgb(207,46,11)"/><text x="15.1634%" y="95.50"></text></g><g><title>task_tick_fair (1 samples, 0.13%)</title><rect x="14.9134%" y="69" width="0.1332%" height="15" fill="rgb(241,35,35)"/><text x="15.1634%" y="79.50"></text></g><g><title>update_curr (1 samples, 0.13%)</title><rect x="14.9134%" y="53" width="0.1332%" height="15" fill="rgb(243,32,47)"/><text x="15.1634%" y="63.50"></text></g><g><title>__calc_delta (1 samples, 0.13%)</title><rect x="14.9134%" y="37" width="0.1332%" height="15" fill="rgb(247,202,23)"/><text x="15.1634%" y="47.50"></text></g><g><title>kfree (3 samples, 0.40%)</title><rect x="15.8455%" y="213" width="0.3995%" height="15" fill="rgb(219,102,11)"/><text x="16.0955%" y="223.50"></text></g><g><title>__slab_free (3 samples, 0.40%)</title><rect x="15.8455%" y="197" width="0.3995%" height="15" fill="rgb(243,110,44)"/><text x="16.0955%" y="207.50"></text></g><g><title>__kfree_skb (6 samples, 0.80%)</title><rect x="15.8455%" y="229" width="0.7989%" height="15" fill="rgb(222,74,54)"/><text x="16.0955%" y="239.50"></text></g><g><title>skb_release_data (3 samples, 0.40%)</title><rect x="16.2450%" y="213" width="0.3995%" height="15" fill="rgb(216,99,12)"/><text x="16.4950%" y="223.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.13%)</title><rect x="16.6445%" y="229" width="0.1332%" height="15" fill="rgb(226,22,26)"/><text x="16.8945%" y="239.50"></text></g><g><title>kmem_cache_free (1 samples, 0.13%)</title><rect x="16.7776%" y="229" width="0.1332%" height="15" fill="rgb(217,163,10)"/><text x="17.0276%" y="239.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.13%)</title><rect x="16.7776%" y="213" width="0.1332%" height="15" fill="rgb(213,25,53)"/><text x="17.0276%" y="223.50"></text></g><g><title>rb_first (1 samples, 0.13%)</title><rect x="16.9108%" y="229" width="0.1332%" height="15" fill="rgb(252,105,26)"/><text x="17.1608%" y="239.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.13%)</title><rect x="17.0439%" y="229" width="0.1332%" height="15" fill="rgb(220,39,43)"/><text x="17.2939%" y="239.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.13%)</title><rect x="17.1771%" y="229" width="0.1332%" height="15" fill="rgb(229,68,48)"/><text x="17.4271%" y="239.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.13%)</title><rect x="17.3103%" y="229" width="0.1332%" height="15" fill="rgb(252,8,32)"/><text x="17.5603%" y="239.50"></text></g><g><title>tcp_ack (19 samples, 2.53%)</title><rect x="15.0466%" y="245" width="2.5300%" height="15" fill="rgb(223,20,43)"/><text x="15.2966%" y="255.50">tc..</text></g><g><title>tcp_update_pacing_rate (1 samples, 0.13%)</title><rect x="17.4434%" y="229" width="0.1332%" height="15" fill="rgb(229,81,49)"/><text x="17.6934%" y="239.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.13%)</title><rect x="17.5766%" y="245" width="0.1332%" height="15" fill="rgb(236,28,36)"/><text x="17.8266%" y="255.50"></text></g><g><title>ip_local_deliver (68 samples, 9.05%)</title><rect x="8.9214%" y="341" width="9.0546%" height="15" fill="rgb(249,185,26)"/><text x="9.1714%" y="351.50">ip_local_deli..</text></g><g><title>ip_local_deliver_finish (68 samples, 9.05%)</title><rect x="8.9214%" y="325" width="9.0546%" height="15" fill="rgb(249,174,33)"/><text x="9.1714%" y="335.50">ip_local_deli..</text></g><g><title>ip_protocol_deliver_rcu (65 samples, 8.66%)</title><rect x="9.3209%" y="309" width="8.6551%" height="15" fill="rgb(233,201,37)"/><text x="9.5709%" y="319.50">ip_protocol_..</text></g><g><title>tcp_v4_rcv (63 samples, 8.39%)</title><rect x="9.5872%" y="293" width="8.3888%" height="15" fill="rgb(221,78,26)"/><text x="9.8372%" y="303.50">tcp_v4_rcv</text></g><g><title>tcp_v4_do_rcv (55 samples, 7.32%)</title><rect x="10.6525%" y="277" width="7.3236%" height="15" fill="rgb(250,127,30)"/><text x="10.9025%" y="287.50">tcp_v4_do_..</text></g><g><title>tcp_rcv_established (55 samples, 7.32%)</title><rect x="10.6525%" y="261" width="7.3236%" height="15" fill="rgb(230,49,44)"/><text x="10.9025%" y="271.50">tcp_rcv_es..</text></g><g><title>tcp_queue_rcv (2 samples, 0.27%)</title><rect x="17.7097%" y="245" width="0.2663%" height="15" fill="rgb(229,67,23)"/><text x="17.9597%" y="255.50"></text></g><g><title>ip_rcv_core (2 samples, 0.27%)</title><rect x="17.9760%" y="341" width="0.2663%" height="15" fill="rgb(249,83,47)"/><text x="18.2260%" y="351.50"></text></g><g><title>do_softirq (81 samples, 10.79%)</title><rect x="7.8562%" y="453" width="10.7856%" height="15" fill="rgb(215,43,3)"/><text x="8.1062%" y="463.50">do_softirq</text></g><g><title>do_softirq_own_stack (81 samples, 10.79%)</title><rect x="7.8562%" y="437" width="10.7856%" height="15" fill="rgb(238,154,13)"/><text x="8.1062%" y="447.50">do_softirq_own_s..</text></g><g><title>__do_softirq (81 samples, 10.79%)</title><rect x="7.8562%" y="421" width="10.7856%" height="15" fill="rgb(219,56,2)"/><text x="8.1062%" y="431.50">__do_softirq</text></g><g><title>net_rx_action (80 samples, 10.65%)</title><rect x="7.9893%" y="405" width="10.6525%" height="15" fill="rgb(233,0,4)"/><text x="8.2393%" y="415.50">net_rx_action</text></g><g><title>process_backlog (77 samples, 10.25%)</title><rect x="8.3888%" y="389" width="10.2530%" height="15" fill="rgb(235,30,7)"/><text x="8.6388%" y="399.50">process_backlog</text></g><g><title>__netif_receive_skb_one_core (75 samples, 9.99%)</title><rect x="8.6551%" y="373" width="9.9867%" height="15" fill="rgb(250,79,13)"/><text x="8.9051%" y="383.50">__netif_receiv..</text></g><g><title>ip_rcv (73 samples, 9.72%)</title><rect x="8.9214%" y="357" width="9.7204%" height="15" fill="rgb(211,146,34)"/><text x="9.1714%" y="367.50">ip_rcv</text></g><g><title>ip_rcv_finish (3 samples, 0.40%)</title><rect x="18.2423%" y="341" width="0.3995%" height="15" fill="rgb(228,22,38)"/><text x="18.4923%" y="351.50"></text></g><g><title>ip_finish_output2 (87 samples, 11.58%)</title><rect x="7.1904%" y="485" width="11.5846%" height="15" fill="rgb(235,168,5)"/><text x="7.4404%" y="495.50">ip_finish_output2</text></g><g><title>__local_bh_enable_ip (82 samples, 10.92%)</title><rect x="7.8562%" y="469" width="10.9188%" height="15" fill="rgb(221,155,16)"/><text x="8.1062%" y="479.50">__local_bh_enabl..</text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="18.6418%" y="453" width="0.1332%" height="15" fill="rgb(215,215,53)"/><text x="18.8918%" y="463.50"></text></g><g><title>__ip_queue_xmit (93 samples, 12.38%)</title><rect x="6.5246%" y="517" width="12.3835%" height="15" fill="rgb(223,4,10)"/><text x="6.7746%" y="527.50">__ip_queue_xmit</text></g><g><title>ip_output (91 samples, 12.12%)</title><rect x="6.7909%" y="501" width="12.1172%" height="15" fill="rgb(234,103,6)"/><text x="7.0409%" y="511.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.13%)</title><rect x="18.7750%" y="485" width="0.1332%" height="15" fill="rgb(227,97,0)"/><text x="19.0250%" y="495.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="18.7750%" y="469" width="0.1332%" height="15" fill="rgb(234,150,53)"/><text x="19.0250%" y="479.50"></text></g><g><title>__tcp_select_window (1 samples, 0.13%)</title><rect x="18.9081%" y="517" width="0.1332%" height="15" fill="rgb(228,201,54)"/><text x="19.1581%" y="527.50"></text></g><g><title>__tcp_transmit_skb (97 samples, 12.92%)</title><rect x="6.2583%" y="533" width="12.9161%" height="15" fill="rgb(222,22,37)"/><text x="6.5083%" y="543.50">__tcp_transmit_skb</text></g><g><title>skb_clone (1 samples, 0.13%)</title><rect x="19.0413%" y="517" width="0.1332%" height="15" fill="rgb(237,53,32)"/><text x="19.2913%" y="527.50"></text></g><g><title>__copy_skb_header (1 samples, 0.13%)</title><rect x="19.0413%" y="501" width="0.1332%" height="15" fill="rgb(233,25,53)"/><text x="19.2913%" y="511.50"></text></g><g><title>ktime_get (3 samples, 0.40%)</title><rect x="19.1744%" y="533" width="0.3995%" height="15" fill="rgb(210,40,34)"/><text x="19.4244%" y="543.50"></text></g><g><title>read_tsc (2 samples, 0.27%)</title><rect x="19.3076%" y="517" width="0.2663%" height="15" fill="rgb(241,220,44)"/><text x="19.5576%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (108 samples, 14.38%)</title><rect x="5.8589%" y="565" width="14.3808%" height="15" fill="rgb(235,28,35)"/><text x="6.1089%" y="575.50">__tcp_push_pending_fra..</text></g><g><title>tcp_write_xmit (108 samples, 14.38%)</title><rect x="5.8589%" y="549" width="14.3808%" height="15" fill="rgb(210,56,17)"/><text x="6.1089%" y="559.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (5 samples, 0.67%)</title><rect x="19.5739%" y="533" width="0.6658%" height="15" fill="rgb(224,130,29)"/><text x="19.8239%" y="543.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="20.1065%" y="517" width="0.1332%" height="15" fill="rgb(235,212,8)"/><text x="20.3565%" y="527.50"></text></g><g><title>__mod_timer (1 samples, 0.13%)</title><rect x="20.1065%" y="501" width="0.1332%" height="15" fill="rgb(223,33,50)"/><text x="20.3565%" y="511.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.27%)</title><rect x="20.2397%" y="565" width="0.2663%" height="15" fill="rgb(219,149,13)"/><text x="20.4897%" y="575.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.27%)</title><rect x="20.2397%" y="549" width="0.2663%" height="15" fill="rgb(250,156,29)"/><text x="20.4897%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.27%)</title><rect x="20.5060%" y="565" width="0.2663%" height="15" fill="rgb(216,193,19)"/><text x="20.7560%" y="575.50"></text></g><g><title>__alloc_skb (2 samples, 0.27%)</title><rect x="20.5060%" y="549" width="0.2663%" height="15" fill="rgb(216,135,14)"/><text x="20.7560%" y="559.50"></text></g><g><title>__ksize (1 samples, 0.13%)</title><rect x="20.6391%" y="533" width="0.1332%" height="15" fill="rgb(241,47,5)"/><text x="20.8891%" y="543.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.27%)</title><rect x="20.7723%" y="565" width="0.2663%" height="15" fill="rgb(233,42,35)"/><text x="21.0223%" y="575.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="20.9055%" y="549" width="0.1332%" height="15" fill="rgb(231,13,6)"/><text x="21.1555%" y="559.50"></text></g><g><title>skb_entail (1 samples, 0.13%)</title><rect x="21.0386%" y="565" width="0.1332%" height="15" fill="rgb(207,181,40)"/><text x="21.2886%" y="575.50"></text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.13%)</title><rect x="21.1718%" y="565" width="0.1332%" height="15" fill="rgb(254,173,49)"/><text x="21.4218%" y="575.50"></text></g><g><title>__x64_sys_sendto (129 samples, 17.18%)</title><rect x="4.5273%" y="645" width="17.1771%" height="15" fill="rgb(221,1,38)"/><text x="4.7773%" y="655.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (128 samples, 17.04%)</title><rect x="4.6605%" y="629" width="17.0439%" height="15" fill="rgb(206,124,46)"/><text x="4.9105%" y="639.50">__sys_sendto</text></g><g><title>sock_sendmsg (124 samples, 16.51%)</title><rect x="5.1931%" y="613" width="16.5113%" height="15" fill="rgb(249,21,11)"/><text x="5.4431%" y="623.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (124 samples, 16.51%)</title><rect x="5.1931%" y="597" width="16.5113%" height="15" fill="rgb(222,201,40)"/><text x="5.4431%" y="607.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (122 samples, 16.25%)</title><rect x="5.4594%" y="581" width="16.2450%" height="15" fill="rgb(235,61,29)"/><text x="5.7094%" y="591.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (3 samples, 0.40%)</title><rect x="21.3049%" y="565" width="0.3995%" height="15" fill="rgb(219,207,3)"/><text x="21.5549%" y="575.50"></text></g><g><title>tcp_current_mss (3 samples, 0.40%)</title><rect x="21.3049%" y="549" width="0.3995%" height="15" fill="rgb(222,56,46)"/><text x="21.5549%" y="559.50"></text></g><g><title>ipv4_mtu (2 samples, 0.27%)</title><rect x="21.4381%" y="533" width="0.2663%" height="15" fill="rgb(239,76,54)"/><text x="21.6881%" y="543.50"></text></g><g><title>do_syscall_64 (131 samples, 17.44%)</title><rect x="4.5273%" y="661" width="17.4434%" height="15" fill="rgb(231,124,27)"/><text x="4.7773%" y="671.50">do_syscall_64</text></g><g><title>syscall_trace_enter (2 samples, 0.27%)</title><rect x="21.7044%" y="645" width="0.2663%" height="15" fill="rgb(249,195,6)"/><text x="21.9544%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (138 samples, 18.38%)</title><rect x="4.5273%" y="677" width="18.3755%" height="15" fill="rgb(237,174,47)"/><text x="4.7773%" y="687.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.93%)</title><rect x="21.9707%" y="661" width="0.9321%" height="15" fill="rgb(206,201,31)"/><text x="22.2207%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (140 samples, 18.64%)</title><rect x="4.5273%" y="725" width="18.6418%" height="15" fill="rgb(231,57,52)"/><text x="4.7773%" y="735.50">&lt;std::net::tcp::TcpStream as ..</text></g><g><title>std::sys_common::net::TcpStream::write (140 samples, 18.64%)</title><rect x="4.5273%" y="709" width="18.6418%" height="15" fill="rgb(248,177,22)"/><text x="4.7773%" y="719.50">std::sys_common::net::TcpStre..</text></g><g><title>__libc_send (140 samples, 18.64%)</title><rect x="4.5273%" y="693" width="18.6418%" height="15" fill="rgb(215,211,37)"/><text x="4.7773%" y="703.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.27%)</title><rect x="22.9028%" y="677" width="0.2663%" height="15" fill="rgb(241,128,51)"/><text x="23.1528%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.13%)</title><rect x="23.1691%" y="725" width="0.1332%" height="15" fill="rgb(227,165,31)"/><text x="23.4191%" y="735.50"></text></g><g><title>__libc_start_main (145 samples, 19.31%)</title><rect x="4.1278%" y="949" width="19.3076%" height="15" fill="rgb(228,167,24)"/><text x="4.3778%" y="959.50">__libc_start_main</text></g><g><title>main (145 samples, 19.31%)</title><rect x="4.1278%" y="933" width="19.3076%" height="15" fill="rgb(228,143,12)"/><text x="4.3778%" y="943.50">main</text></g><g><title>std::rt::lang_start_internal (145 samples, 19.31%)</title><rect x="4.1278%" y="917" width="19.3076%" height="15" fill="rgb(249,149,8)"/><text x="4.3778%" y="927.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (145 samples, 19.31%)</title><rect x="4.1278%" y="901" width="19.3076%" height="15" fill="rgb(243,35,44)"/><text x="4.3778%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (145 samples, 19.31%)</title><rect x="4.1278%" y="885" width="19.3076%" height="15" fill="rgb(246,89,9)"/><text x="4.3778%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (145 samples, 19.31%)</title><rect x="4.1278%" y="869" width="19.3076%" height="15" fill="rgb(233,213,13)"/><text x="4.3778%" y="879.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (145 samples, 19.31%)</title><rect x="4.1278%" y="853" width="19.3076%" height="15" fill="rgb(233,141,41)"/><text x="4.3778%" y="863.50">core::ops::function::impls::&lt;i..</text></g><g><title>std::rt::lang_start::_{{closure}} (145 samples, 19.31%)</title><rect x="4.1278%" y="837" width="19.3076%" height="15" fill="rgb(239,167,4)"/><text x="4.3778%" y="847.50">std::rt::lang_start::_{{closur..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (145 samples, 19.31%)</title><rect x="4.1278%" y="821" width="19.3076%" height="15" fill="rgb(209,217,16)"/><text x="4.3778%" y="831.50">std::sys_common::backtrace::__..</text></g><g><title>lobsters::main (145 samples, 19.31%)</title><rect x="4.1278%" y="805" width="19.3076%" height="15" fill="rgb(219,88,35)"/><text x="4.3778%" y="815.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (142 samples, 18.91%)</title><rect x="4.5273%" y="789" width="18.9081%" height="15" fill="rgb(220,193,23)"/><text x="4.7773%" y="799.50">mysql::conn::queryable::Querya..</text></g><g><title>mysql::conn::Conn::_query (142 samples, 18.91%)</title><rect x="4.5273%" y="773" width="18.9081%" height="15" fill="rgb(230,90,52)"/><text x="4.7773%" y="783.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (142 samples, 18.91%)</title><rect x="4.5273%" y="757" width="18.9081%" height="15" fill="rgb(252,106,19)"/><text x="4.7773%" y="767.50">mysql_common::proto::sync_fram..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (142 samples, 18.91%)</title><rect x="4.5273%" y="741" width="18.9081%" height="15" fill="rgb(206,74,20)"/><text x="4.7773%" y="751.50">std::io::buffered::BufWriter&lt;W..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::remaining (1 samples, 0.13%)</title><rect x="23.3023%" y="725" width="0.1332%" height="15" fill="rgb(230,138,44)"/><text x="23.5523%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.13%)</title><rect x="23.3023%" y="709" width="0.1332%" height="15" fill="rgb(235,182,43)"/><text x="23.5523%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.13%)</title><rect x="23.3023%" y="693" width="0.1332%" height="15" fill="rgb(242,16,51)"/><text x="23.5523%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.13%)</title><rect x="23.3023%" y="677" width="0.1332%" height="15" fill="rgb(248,9,4)"/><text x="23.5523%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.13%)</title><rect x="23.3023%" y="661" width="0.1332%" height="15" fill="rgb(210,31,22)"/><text x="23.5523%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.13%)</title><rect x="23.3023%" y="645" width="0.1332%" height="15" fill="rgb(239,54,39)"/><text x="23.5523%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.13%)</title><rect x="23.3023%" y="629" width="0.1332%" height="15" fill="rgb(230,99,41)"/><text x="23.5523%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.13%)</title><rect x="23.3023%" y="613" width="0.1332%" height="15" fill="rgb(253,106,12)"/><text x="23.5523%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="23.4354%" y="949" width="0.1332%" height="15" fill="rgb(213,46,41)"/><text x="23.6854%" y="959.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.13%)</title><rect x="23.5686%" y="949" width="0.1332%" height="15" fill="rgb(215,133,35)"/><text x="23.8186%" y="959.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.13%)</title><rect x="23.7017%" y="949" width="0.1332%" height="15" fill="rgb(213,28,5)"/><text x="23.9517%" y="959.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="23.8349%" y="949" width="0.1332%" height="15" fill="rgb(215,77,49)"/><text x="24.0849%" y="959.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="23.9680%" y="949" width="0.2663%" height="15" fill="rgb(248,100,22)"/><text x="24.2180%" y="959.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.3675%" y="917" width="0.1332%" height="15" fill="rgb(208,67,9)"/><text x="24.6175%" y="927.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.3675%" y="901" width="0.1332%" height="15" fill="rgb(219,133,21)"/><text x="24.6175%" y="911.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.3675%" y="885" width="0.1332%" height="15" fill="rgb(246,46,29)"/><text x="24.6175%" y="895.50"></text></g><g><title>dlopen (1 samples, 0.13%)</title><rect x="24.3675%" y="869" width="0.1332%" height="15" fill="rgb(246,185,52)"/><text x="24.6175%" y="879.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="24.3675%" y="853" width="0.1332%" height="15" fill="rgb(252,136,11)"/><text x="24.6175%" y="863.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.13%)</title><rect x="24.3675%" y="837" width="0.1332%" height="15" fill="rgb(219,138,53)"/><text x="24.6175%" y="847.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="24.3675%" y="821" width="0.1332%" height="15" fill="rgb(211,51,23)"/><text x="24.6175%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="24.3675%" y="805" width="0.1332%" height="15" fill="rgb(247,221,28)"/><text x="24.6175%" y="815.50"></text></g><g><title>_dl_open (1 samples, 0.13%)</title><rect x="24.3675%" y="789" width="0.1332%" height="15" fill="rgb(251,222,45)"/><text x="24.6175%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="24.3675%" y="773" width="0.1332%" height="15" fill="rgb(217,162,53)"/><text x="24.6175%" y="783.50"></text></g><g><title>dl_open_worker (1 samples, 0.13%)</title><rect x="24.3675%" y="757" width="0.1332%" height="15" fill="rgb(229,93,14)"/><text x="24.6175%" y="767.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.13%)</title><rect x="24.3675%" y="741" width="0.1332%" height="15" fill="rgb(209,67,49)"/><text x="24.6175%" y="751.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.13%)</title><rect x="24.3675%" y="725" width="0.1332%" height="15" fill="rgb(213,87,29)"/><text x="24.6175%" y="735.50"></text></g><g><title>do_lookup_x (1 samples, 0.13%)</title><rect x="24.3675%" y="709" width="0.1332%" height="15" fill="rgb(205,151,52)"/><text x="24.6175%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.5007%" y="869" width="0.1332%" height="15" fill="rgb(253,215,39)"/><text x="24.7507%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.5007%" y="853" width="0.1332%" height="15" fill="rgb(221,220,41)"/><text x="24.7507%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.5007%" y="837" width="0.1332%" height="15" fill="rgb(218,133,21)"/><text x="24.7507%" y="847.50"></text></g><g><title>___snprintf_chk (1 samples, 0.13%)</title><rect x="24.5007%" y="821" width="0.1332%" height="15" fill="rgb(221,193,43)"/><text x="24.7507%" y="831.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.13%)</title><rect x="24.5007%" y="805" width="0.1332%" height="15" fill="rgb(240,128,52)"/><text x="24.7507%" y="815.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.13%)</title><rect x="24.5007%" y="789" width="0.1332%" height="15" fill="rgb(253,114,12)"/><text x="24.7507%" y="799.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.40%)</title><rect x="24.3675%" y="933" width="0.3995%" height="15" fill="rgb(215,223,47)"/><text x="24.6175%" y="943.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.27%)</title><rect x="24.5007%" y="917" width="0.2663%" height="15" fill="rgb(248,225,23)"/><text x="24.7507%" y="927.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.27%)</title><rect x="24.5007%" y="901" width="0.2663%" height="15" fill="rgb(250,108,0)"/><text x="24.7507%" y="911.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.27%)</title><rect x="24.5007%" y="885" width="0.2663%" height="15" fill="rgb(228,208,7)"/><text x="24.7507%" y="895.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.13%)</title><rect x="24.6338%" y="869" width="0.1332%" height="15" fill="rgb(244,45,10)"/><text x="24.8838%" y="879.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.13%)</title><rect x="24.6338%" y="853" width="0.1332%" height="15" fill="rgb(207,125,25)"/><text x="24.8838%" y="863.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.13%)</title><rect x="24.6338%" y="837" width="0.1332%" height="15" fill="rgb(210,195,18)"/><text x="24.8838%" y="847.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.13%)</title><rect x="24.6338%" y="821" width="0.1332%" height="15" fill="rgb(249,80,12)"/><text x="24.8838%" y="831.50"></text></g><g><title>__GI___read (1 samples, 0.13%)</title><rect x="24.6338%" y="805" width="0.1332%" height="15" fill="rgb(221,65,9)"/><text x="24.8838%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="24.6338%" y="789" width="0.1332%" height="15" fill="rgb(235,49,36)"/><text x="24.8838%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="24.6338%" y="773" width="0.1332%" height="15" fill="rgb(225,32,20)"/><text x="24.8838%" y="783.50"></text></g><g><title>ksys_read (1 samples, 0.13%)</title><rect x="24.6338%" y="757" width="0.1332%" height="15" fill="rgb(215,141,46)"/><text x="24.8838%" y="767.50"></text></g><g><title>vfs_read (1 samples, 0.13%)</title><rect x="24.6338%" y="741" width="0.1332%" height="15" fill="rgb(250,160,47)"/><text x="24.8838%" y="751.50"></text></g><g><title>seq_read (1 samples, 0.13%)</title><rect x="24.6338%" y="725" width="0.1332%" height="15" fill="rgb(216,222,40)"/><text x="24.8838%" y="735.50"></text></g><g><title>show_cpuinfo (1 samples, 0.13%)</title><rect x="24.6338%" y="709" width="0.1332%" height="15" fill="rgb(234,217,39)"/><text x="24.8838%" y="719.50"></text></g><g><title>seq_printf (1 samples, 0.13%)</title><rect x="24.6338%" y="693" width="0.1332%" height="15" fill="rgb(207,178,40)"/><text x="24.8838%" y="703.50"></text></g><g><title>vsnprintf (1 samples, 0.13%)</title><rect x="24.6338%" y="677" width="0.1332%" height="15" fill="rgb(221,136,13)"/><text x="24.8838%" y="687.50"></text></g><g><title>format_decode (1 samples, 0.13%)</title><rect x="24.6338%" y="661" width="0.1332%" height="15" fill="rgb(249,199,10)"/><text x="24.8838%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.13%)</title><rect x="24.7670%" y="885" width="0.1332%" height="15" fill="rgb(249,222,13)"/><text x="25.0170%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.13%)</title><rect x="25.0333%" y="869" width="0.1332%" height="15" fill="rgb(244,185,38)"/><text x="25.2833%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="25.0333%" y="853" width="0.1332%" height="15" fill="rgb(236,202,9)"/><text x="25.2833%" y="863.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.13%)</title><rect x="25.2996%" y="757" width="0.1332%" height="15" fill="rgb(250,229,37)"/><text x="25.5496%" y="767.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.13%)</title><rect x="25.4328%" y="757" width="0.1332%" height="15" fill="rgb(206,174,23)"/><text x="25.6828%" y="767.50"></text></g><g><title>skb_release_data (1 samples, 0.13%)</title><rect x="26.2317%" y="645" width="0.1332%" height="15" fill="rgb(211,33,43)"/><text x="26.4817%" y="655.50"></text></g><g><title>__kfree_skb (2 samples, 0.27%)</title><rect x="26.2317%" y="661" width="0.2663%" height="15" fill="rgb(245,58,50)"/><text x="26.4817%" y="671.50"></text></g><g><title>skb_release_head_state (1 samples, 0.13%)</title><rect x="26.3648%" y="645" width="0.1332%" height="15" fill="rgb(244,68,36)"/><text x="26.6148%" y="655.50"></text></g><g><title>sock_rfree (1 samples, 0.13%)</title><rect x="26.3648%" y="629" width="0.1332%" height="15" fill="rgb(232,229,15)"/><text x="26.6148%" y="639.50"></text></g><g><title>kfree_skbmem (1 samples, 0.13%)</title><rect x="26.4980%" y="661" width="0.1332%" height="15" fill="rgb(254,30,23)"/><text x="26.7480%" y="671.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.27%)</title><rect x="26.7643%" y="645" width="0.2663%" height="15" fill="rgb(235,160,14)"/><text x="27.0143%" y="655.50"></text></g><g><title>add_wait_queue (1 samples, 0.13%)</title><rect x="27.0306%" y="645" width="0.1332%" height="15" fill="rgb(212,155,44)"/><text x="27.2806%" y="655.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="27.0306%" y="629" width="0.1332%" height="15" fill="rgb(226,2,50)"/><text x="27.2806%" y="639.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="27.0306%" y="613" width="0.1332%" height="15" fill="rgb(234,177,6)"/><text x="27.2806%" y="623.50"></text></g><g><title>remove_wait_queue (1 samples, 0.13%)</title><rect x="27.1638%" y="645" width="0.1332%" height="15" fill="rgb(217,24,9)"/><text x="27.4138%" y="655.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="27.1638%" y="629" width="0.1332%" height="15" fill="rgb(220,13,46)"/><text x="27.4138%" y="639.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.27%)</title><rect x="27.8296%" y="581" width="0.2663%" height="15" fill="rgb(239,221,27)"/><text x="28.0796%" y="591.50"></text></g><g><title>ctx_sched_out (2 samples, 0.27%)</title><rect x="27.8296%" y="565" width="0.2663%" height="15" fill="rgb(222,198,25)"/><text x="28.0796%" y="575.50"></text></g><g><title>x86_pmu_disable (2 samples, 0.27%)</title><rect x="27.8296%" y="549" width="0.2663%" height="15" fill="rgb(211,99,13)"/><text x="28.0796%" y="559.50"></text></g><g><title>reweight_entity (1 samples, 0.13%)</title><rect x="28.0959%" y="549" width="0.1332%" height="15" fill="rgb(232,111,31)"/><text x="28.3459%" y="559.50"></text></g><g><title>update_curr (1 samples, 0.13%)</title><rect x="28.2290%" y="549" width="0.1332%" height="15" fill="rgb(245,82,37)"/><text x="28.4790%" y="559.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.13%)</title><rect x="28.2290%" y="533" width="0.1332%" height="15" fill="rgb(227,149,46)"/><text x="28.4790%" y="543.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="28.2290%" y="517" width="0.1332%" height="15" fill="rgb(218,36,50)"/><text x="28.4790%" y="527.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.40%)</title><rect x="28.0959%" y="581" width="0.3995%" height="15" fill="rgb(226,80,48)"/><text x="28.3459%" y="591.50"></text></g><g><title>dequeue_entity (3 samples, 0.40%)</title><rect x="28.0959%" y="565" width="0.3995%" height="15" fill="rgb(238,224,15)"/><text x="28.3459%" y="575.50"></text></g><g><title>update_load_avg (1 samples, 0.13%)</title><rect x="28.3622%" y="549" width="0.1332%" height="15" fill="rgb(241,136,10)"/><text x="28.6122%" y="559.50"></text></g><g><title>finish_task_switch (1 samples, 0.13%)</title><rect x="28.4953%" y="581" width="0.1332%" height="15" fill="rgb(208,32,45)"/><text x="28.7453%" y="591.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.13%)</title><rect x="28.4953%" y="565" width="0.1332%" height="15" fill="rgb(207,135,9)"/><text x="28.7453%" y="575.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="28.4953%" y="549" width="0.1332%" height="15" fill="rgb(206,86,44)"/><text x="28.7453%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="28.4953%" y="533" width="0.1332%" height="15" fill="rgb(245,177,15)"/><text x="28.7453%" y="543.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.13%)</title><rect x="28.6285%" y="581" width="0.1332%" height="15" fill="rgb(206,64,50)"/><text x="28.8785%" y="591.50"></text></g><g><title>newidle_balance (1 samples, 0.13%)</title><rect x="28.6285%" y="565" width="0.1332%" height="15" fill="rgb(234,36,40)"/><text x="28.8785%" y="575.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="28.6285%" y="549" width="0.1332%" height="15" fill="rgb(213,64,8)"/><text x="28.8785%" y="559.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.27%)</title><rect x="28.7617%" y="581" width="0.2663%" height="15" fill="rgb(210,75,36)"/><text x="29.0117%" y="591.50"></text></g><g><title>__update_idle_core (2 samples, 0.27%)</title><rect x="28.7617%" y="565" width="0.2663%" height="15" fill="rgb(229,88,21)"/><text x="29.0117%" y="575.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="28.8948%" y="549" width="0.1332%" height="15" fill="rgb(252,204,47)"/><text x="29.1448%" y="559.50"></text></g><g><title>psi_task_change (2 samples, 0.27%)</title><rect x="29.0280%" y="581" width="0.2663%" height="15" fill="rgb(208,77,27)"/><text x="29.2780%" y="591.50"></text></g><g><title>psi_group_change (2 samples, 0.27%)</title><rect x="29.0280%" y="565" width="0.2663%" height="15" fill="rgb(221,76,26)"/><text x="29.2780%" y="575.50"></text></g><g><title>record_times (1 samples, 0.13%)</title><rect x="29.1611%" y="549" width="0.1332%" height="15" fill="rgb(225,139,18)"/><text x="29.4111%" y="559.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="29.1611%" y="533" width="0.1332%" height="15" fill="rgb(230,137,11)"/><text x="29.4111%" y="543.50"></text></g><g><title>sched_clock (1 samples, 0.13%)</title><rect x="29.1611%" y="517" width="0.1332%" height="15" fill="rgb(212,28,1)"/><text x="29.4111%" y="527.50"></text></g><g><title>native_sched_clock (1 samples, 0.13%)</title><rect x="29.1611%" y="501" width="0.1332%" height="15" fill="rgb(248,164,17)"/><text x="29.4111%" y="511.50"></text></g><g><title>put_prev_task_fair (3 samples, 0.40%)</title><rect x="29.2943%" y="581" width="0.3995%" height="15" fill="rgb(222,171,42)"/><text x="29.5443%" y="591.50"></text></g><g><title>put_prev_entity (3 samples, 0.40%)</title><rect x="29.2943%" y="565" width="0.3995%" height="15" fill="rgb(243,84,45)"/><text x="29.5443%" y="575.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.13%)</title><rect x="29.5606%" y="549" width="0.1332%" height="15" fill="rgb(252,49,23)"/><text x="29.8106%" y="559.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.13%)</title><rect x="29.6937%" y="581" width="0.1332%" height="15" fill="rgb(215,19,7)"/><text x="29.9437%" y="591.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.13%)</title><rect x="29.6937%" y="565" width="0.1332%" height="15" fill="rgb(238,81,41)"/><text x="29.9437%" y="575.50"></text></g><g><title>sk_wait_data (27 samples, 3.60%)</title><rect x="26.6312%" y="661" width="3.5952%" height="15" fill="rgb(210,199,37)"/><text x="26.8812%" y="671.50">sk_w..</text></g><g><title>wait_woken (22 samples, 2.93%)</title><rect x="27.2969%" y="645" width="2.9294%" height="15" fill="rgb(244,192,49)"/><text x="27.5469%" y="655.50">wa..</text></g><g><title>schedule_timeout (21 samples, 2.80%)</title><rect x="27.4301%" y="629" width="2.7963%" height="15" fill="rgb(226,211,11)"/><text x="27.6801%" y="639.50">sc..</text></g><g><title>schedule (21 samples, 2.80%)</title><rect x="27.4301%" y="613" width="2.7963%" height="15" fill="rgb(236,162,54)"/><text x="27.6801%" y="623.50">sc..</text></g><g><title>__schedule (21 samples, 2.80%)</title><rect x="27.4301%" y="597" width="2.7963%" height="15" fill="rgb(220,229,9)"/><text x="27.6801%" y="607.50">__..</text></g><g><title>uclamp_rq_dec_id (3 samples, 0.40%)</title><rect x="29.8269%" y="581" width="0.3995%" height="15" fill="rgb(250,87,22)"/><text x="30.0769%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (35 samples, 4.66%)</title><rect x="25.8322%" y="725" width="4.6605%" height="15" fill="rgb(239,43,17)"/><text x="26.0822%" y="735.50">__x64..</text></g><g><title>__sys_recvfrom (35 samples, 4.66%)</title><rect x="25.8322%" y="709" width="4.6605%" height="15" fill="rgb(231,177,25)"/><text x="26.0822%" y="719.50">__sys..</text></g><g><title>inet_recvmsg (33 samples, 4.39%)</title><rect x="26.0985%" y="693" width="4.3941%" height="15" fill="rgb(219,179,1)"/><text x="26.3485%" y="703.50">inet_..</text></g><g><title>tcp_recvmsg (33 samples, 4.39%)</title><rect x="26.0985%" y="677" width="4.3941%" height="15" fill="rgb(238,219,53)"/><text x="26.3485%" y="687.50">tcp_r..</text></g><g><title>tcp_cleanup_rbuf (2 samples, 0.27%)</title><rect x="30.2264%" y="661" width="0.2663%" height="15" fill="rgb(232,167,36)"/><text x="30.4764%" y="671.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="30.4927%" y="725" width="0.1332%" height="15" fill="rgb(244,19,51)"/><text x="30.7427%" y="735.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="30.4927%" y="709" width="0.1332%" height="15" fill="rgb(224,6,22)"/><text x="30.7427%" y="719.50"></text></g><g><title>kfree (1 samples, 0.13%)</title><rect x="30.4927%" y="693" width="0.1332%" height="15" fill="rgb(224,145,5)"/><text x="30.7427%" y="703.50"></text></g><g><title>do_syscall_64 (39 samples, 5.19%)</title><rect x="25.5659%" y="741" width="5.1931%" height="15" fill="rgb(234,130,49)"/><text x="25.8159%" y="751.50">do_sys..</text></g><g><title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="30.6258%" y="725" width="0.1332%" height="15" fill="rgb(254,6,2)"/><text x="30.8758%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (42 samples, 5.59%)</title><rect x="25.5659%" y="757" width="5.5925%" height="15" fill="rgb(208,96,46)"/><text x="25.8159%" y="767.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.40%)</title><rect x="30.7590%" y="741" width="0.3995%" height="15" fill="rgb(239,3,39)"/><text x="31.0090%" y="751.50"></text></g><g><title>__libc_recv (46 samples, 6.13%)</title><rect x="25.2996%" y="773" width="6.1252%" height="15" fill="rgb(233,210,1)"/><text x="25.5496%" y="783.50">__libc_r..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.27%)</title><rect x="31.1585%" y="757" width="0.2663%" height="15" fill="rgb(244,137,37)"/><text x="31.4085%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 6.39%)</title><rect x="25.1664%" y="869" width="6.3915%" height="15" fill="rgb(240,136,2)"/><text x="25.4164%" y="879.50">&lt;mysql_c..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (47 samples, 6.26%)</title><rect x="25.2996%" y="853" width="6.2583%" height="15" fill="rgb(239,18,37)"/><text x="25.5496%" y="863.50">&lt;std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (47 samples, 6.26%)</title><rect x="25.2996%" y="837" width="6.2583%" height="15" fill="rgb(218,185,22)"/><text x="25.5496%" y="847.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (47 samples, 6.26%)</title><rect x="25.2996%" y="821" width="6.2583%" height="15" fill="rgb(225,218,4)"/><text x="25.5496%" y="831.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (47 samples, 6.26%)</title><rect x="25.2996%" y="805" width="6.2583%" height="15" fill="rgb(230,182,32)"/><text x="25.5496%" y="815.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (47 samples, 6.26%)</title><rect x="25.2996%" y="789" width="6.2583%" height="15" fill="rgb(242,56,43)"/><text x="25.5496%" y="799.50">std::sys..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.13%)</title><rect x="31.4248%" y="773" width="0.1332%" height="15" fill="rgb(233,99,24)"/><text x="31.6748%" y="783.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.13%)</title><rect x="31.4248%" y="757" width="0.1332%" height="15" fill="rgb(234,209,42)"/><text x="31.6748%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (53 samples, 7.06%)</title><rect x="24.9001%" y="885" width="7.0573%" height="15" fill="rgb(227,7,12)"/><text x="25.1501%" y="895.50">mysql::co..</text></g><g><title>_int_free (3 samples, 0.40%)</title><rect x="31.5579%" y="869" width="0.3995%" height="15" fill="rgb(245,203,43)"/><text x="31.8079%" y="879.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.13%)</title><rect x="31.9574%" y="885" width="0.1332%" height="15" fill="rgb(238,205,33)"/><text x="32.2074%" y="895.50"></text></g><g><title>lobsters::main (60 samples, 7.99%)</title><rect x="24.2344%" y="949" width="7.9893%" height="15" fill="rgb(231,56,7)"/><text x="24.4844%" y="959.50">lobsters::m..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (56 samples, 7.46%)</title><rect x="24.7670%" y="933" width="7.4567%" height="15" fill="rgb(244,186,29)"/><text x="25.0170%" y="943.50">mysql::con..</text></g><g><title>mysql::conn::Conn::_query (56 samples, 7.46%)</title><rect x="24.7670%" y="917" width="7.4567%" height="15" fill="rgb(234,111,31)"/><text x="25.0170%" y="927.50">mysql::con..</text></g><g><title>mysql::conn::Conn::handle_result_set (56 samples, 7.46%)</title><rect x="24.7670%" y="901" width="7.4567%" height="15" fill="rgb(241,149,10)"/><text x="25.0170%" y="911.50">mysql::con..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.13%)</title><rect x="32.0905%" y="885" width="0.1332%" height="15" fill="rgb(249,206,44)"/><text x="32.3405%" y="895.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.13%)</title><rect x="32.0905%" y="869" width="0.1332%" height="15" fill="rgb(251,153,30)"/><text x="32.3405%" y="879.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.13%)</title><rect x="32.2237%" y="565" width="0.1332%" height="15" fill="rgb(239,152,38)"/><text x="32.4737%" y="575.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.27%)</title><rect x="32.2237%" y="949" width="0.2663%" height="15" fill="rgb(249,139,47)"/><text x="32.4737%" y="959.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.27%)</title><rect x="32.2237%" y="933" width="0.2663%" height="15" fill="rgb(244,64,35)"/><text x="32.4737%" y="943.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.27%)</title><rect x="32.2237%" y="917" width="0.2663%" height="15" fill="rgb(216,46,15)"/><text x="32.4737%" y="927.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.27%)</title><rect x="32.2237%" y="901" width="0.2663%" height="15" fill="rgb(250,74,19)"/><text x="32.4737%" y="911.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.27%)</title><rect x="32.2237%" y="885" width="0.2663%" height="15" fill="rgb(249,42,33)"/><text x="32.4737%" y="895.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.27%)</title><rect x="32.2237%" y="869" width="0.2663%" height="15" fill="rgb(242,149,17)"/><text x="32.4737%" y="879.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.27%)</title><rect x="32.2237%" y="853" width="0.2663%" height="15" fill="rgb(244,29,21)"/><text x="32.4737%" y="863.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.27%)</title><rect x="32.2237%" y="837" width="0.2663%" height="15" fill="rgb(220,130,37)"/><text x="32.4737%" y="847.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.27%)</title><rect x="32.2237%" y="821" width="0.2663%" height="15" fill="rgb(211,67,2)"/><text x="32.4737%" y="831.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.27%)</title><rect x="32.2237%" y="805" width="0.2663%" height="15" fill="rgb(235,68,52)"/><text x="32.4737%" y="815.50"></text></g><g><title>__libc_send (2 samples, 0.27%)</title><rect x="32.2237%" y="789" width="0.2663%" height="15" fill="rgb(246,142,3)"/><text x="32.4737%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="32.2237%" y="773" width="0.2663%" height="15" fill="rgb(241,25,7)"/><text x="32.4737%" y="783.50"></text></g><g><title>do_syscall_64 (2 samples, 0.27%)</title><rect x="32.2237%" y="757" width="0.2663%" height="15" fill="rgb(242,119,39)"/><text x="32.4737%" y="767.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.27%)</title><rect x="32.2237%" y="741" width="0.2663%" height="15" fill="rgb(241,98,45)"/><text x="32.4737%" y="751.50"></text></g><g><title>__sys_sendto (2 samples, 0.27%)</title><rect x="32.2237%" y="725" width="0.2663%" height="15" fill="rgb(254,28,30)"/><text x="32.4737%" y="735.50"></text></g><g><title>sock_sendmsg (2 samples, 0.27%)</title><rect x="32.2237%" y="709" width="0.2663%" height="15" fill="rgb(241,142,54)"/><text x="32.4737%" y="719.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.27%)</title><rect x="32.2237%" y="693" width="0.2663%" height="15" fill="rgb(222,85,15)"/><text x="32.4737%" y="703.50"></text></g><g><title>tcp_sendmsg_locked (2 samples, 0.27%)</title><rect x="32.2237%" y="677" width="0.2663%" height="15" fill="rgb(210,85,47)"/><text x="32.4737%" y="687.50"></text></g><g><title>__tcp_push_pending_frames (2 samples, 0.27%)</title><rect x="32.2237%" y="661" width="0.2663%" height="15" fill="rgb(224,206,25)"/><text x="32.4737%" y="671.50"></text></g><g><title>tcp_write_xmit (2 samples, 0.27%)</title><rect x="32.2237%" y="645" width="0.2663%" height="15" fill="rgb(243,201,19)"/><text x="32.4737%" y="655.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.27%)</title><rect x="32.2237%" y="629" width="0.2663%" height="15" fill="rgb(236,59,4)"/><text x="32.4737%" y="639.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.27%)</title><rect x="32.2237%" y="613" width="0.2663%" height="15" fill="rgb(254,179,45)"/><text x="32.4737%" y="623.50"></text></g><g><title>ip_output (2 samples, 0.27%)</title><rect x="32.2237%" y="597" width="0.2663%" height="15" fill="rgb(226,14,10)"/><text x="32.4737%" y="607.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.27%)</title><rect x="32.2237%" y="581" width="0.2663%" height="15" fill="rgb(244,27,41)"/><text x="32.4737%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="32.3569%" y="565" width="0.1332%" height="15" fill="rgb(235,35,32)"/><text x="32.6069%" y="575.50"></text></g><g><title>do_softirq (1 samples, 0.13%)</title><rect x="32.3569%" y="549" width="0.1332%" height="15" fill="rgb(218,68,31)"/><text x="32.6069%" y="559.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.13%)</title><rect x="32.3569%" y="533" width="0.1332%" height="15" fill="rgb(207,120,37)"/><text x="32.6069%" y="543.50"></text></g><g><title>__do_softirq (1 samples, 0.13%)</title><rect x="32.3569%" y="517" width="0.1332%" height="15" fill="rgb(227,98,0)"/><text x="32.6069%" y="527.50"></text></g><g><title>net_rx_action (1 samples, 0.13%)</title><rect x="32.3569%" y="501" width="0.1332%" height="15" fill="rgb(207,7,3)"/><text x="32.6069%" y="511.50"></text></g><g><title>process_backlog (1 samples, 0.13%)</title><rect x="32.3569%" y="485" width="0.1332%" height="15" fill="rgb(206,98,19)"/><text x="32.6069%" y="495.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.13%)</title><rect x="32.3569%" y="469" width="0.1332%" height="15" fill="rgb(217,5,26)"/><text x="32.6069%" y="479.50"></text></g><g><title>ip_rcv (1 samples, 0.13%)</title><rect x="32.3569%" y="453" width="0.1332%" height="15" fill="rgb(235,190,38)"/><text x="32.6069%" y="463.50"></text></g><g><title>ip_local_deliver (1 samples, 0.13%)</title><rect x="32.3569%" y="437" width="0.1332%" height="15" fill="rgb(247,86,24)"/><text x="32.6069%" y="447.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.13%)</title><rect x="32.3569%" y="421" width="0.1332%" height="15" fill="rgb(205,101,16)"/><text x="32.6069%" y="431.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.13%)</title><rect x="32.3569%" y="405" width="0.1332%" height="15" fill="rgb(246,168,33)"/><text x="32.6069%" y="415.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.13%)</title><rect x="32.3569%" y="389" width="0.1332%" height="15" fill="rgb(231,114,1)"/><text x="32.6069%" y="399.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.13%)</title><rect x="32.3569%" y="373" width="0.1332%" height="15" fill="rgb(207,184,53)"/><text x="32.6069%" y="383.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.13%)</title><rect x="32.3569%" y="357" width="0.1332%" height="15" fill="rgb(224,95,51)"/><text x="32.6069%" y="367.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.13%)</title><rect x="32.4900%" y="949" width="0.1332%" height="15" fill="rgb(212,188,45)"/><text x="32.7400%" y="959.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.13%)</title><rect x="32.6232%" y="949" width="0.1332%" height="15" fill="rgb(223,154,38)"/><text x="32.8732%" y="959.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.13%)</title><rect x="32.7563%" y="949" width="0.1332%" height="15" fill="rgb(251,22,52)"/><text x="33.0063%" y="959.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.13%)</title><rect x="32.7563%" y="933" width="0.1332%" height="15" fill="rgb(229,209,22)"/><text x="33.0063%" y="943.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.13%)</title><rect x="32.7563%" y="917" width="0.1332%" height="15" fill="rgb(234,138,34)"/><text x="33.0063%" y="927.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.13%)</title><rect x="32.7563%" y="901" width="0.1332%" height="15" fill="rgb(212,95,11)"/><text x="33.0063%" y="911.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.13%)</title><rect x="32.7563%" y="885" width="0.1332%" height="15" fill="rgb(240,179,47)"/><text x="33.0063%" y="895.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.13%)</title><rect x="32.7563%" y="869" width="0.1332%" height="15" fill="rgb(240,163,11)"/><text x="33.0063%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.13%)</title><rect x="32.8895%" y="949" width="0.1332%" height="15" fill="rgb(236,37,12)"/><text x="33.1395%" y="959.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.13%)</title><rect x="32.8895%" y="933" width="0.1332%" height="15" fill="rgb(232,164,16)"/><text x="33.1395%" y="943.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.13%)</title><rect x="32.8895%" y="917" width="0.1332%" height="15" fill="rgb(244,205,15)"/><text x="33.1395%" y="927.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="32.8895%" y="901" width="0.1332%" height="15" fill="rgb(223,117,47)"/><text x="33.1395%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="32.8895%" y="885" width="0.1332%" height="15" fill="rgb(244,107,35)"/><text x="33.1395%" y="895.50"></text></g><g><title>start_thread (1 samples, 0.13%)</title><rect x="33.0226%" y="949" width="0.1332%" height="15" fill="rgb(205,140,8)"/><text x="33.2726%" y="959.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.13%)</title><rect x="33.0226%" y="933" width="0.1332%" height="15" fill="rgb(228,84,46)"/><text x="33.2726%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.13%)</title><rect x="33.0226%" y="917" width="0.1332%" height="15" fill="rgb(254,188,9)"/><text x="33.2726%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.13%)</title><rect x="33.0226%" y="901" width="0.1332%" height="15" fill="rgb(206,112,54)"/><text x="33.2726%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.13%)</title><rect x="33.0226%" y="885" width="0.1332%" height="15" fill="rgb(216,84,49)"/><text x="33.2726%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.13%)</title><rect x="33.0226%" y="869" width="0.1332%" height="15" fill="rgb(214,194,35)"/><text x="33.2726%" y="879.50"></text></g><g><title>decor::Shim::run_on_tcp (1 samples, 0.13%)</title><rect x="33.0226%" y="853" width="0.1332%" height="15" fill="rgb(249,28,3)"/><text x="33.2726%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (1 samples, 0.13%)</title><rect x="33.0226%" y="837" width="0.1332%" height="15" fill="rgb(222,56,52)"/><text x="33.2726%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.13%)</title><rect x="33.0226%" y="821" width="0.1332%" height="15" fill="rgb(245,217,50)"/><text x="33.2726%" y="831.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.13%)</title><rect x="33.0226%" y="805" width="0.1332%" height="15" fill="rgb(213,201,24)"/><text x="33.2726%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="33.0226%" y="789" width="0.1332%" height="15" fill="rgb(248,116,28)"/><text x="33.2726%" y="799.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.13%)</title><rect x="33.0226%" y="773" width="0.1332%" height="15" fill="rgb(219,72,43)"/><text x="33.2726%" y="783.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.13%)</title><rect x="33.1558%" y="949" width="0.1332%" height="15" fill="rgb(209,138,14)"/><text x="33.4058%" y="959.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.13%)</title><rect x="33.2889%" y="949" width="0.1332%" height="15" fill="rgb(222,18,33)"/><text x="33.5389%" y="959.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.13%)</title><rect x="33.4221%" y="821" width="0.1332%" height="15" fill="rgb(213,199,7)"/><text x="33.6721%" y="831.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.13%)</title><rect x="33.4221%" y="805" width="0.1332%" height="15" fill="rgb(250,110,10)"/><text x="33.6721%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="33.4221%" y="789" width="0.1332%" height="15" fill="rgb(248,123,6)"/><text x="33.6721%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="33.4221%" y="773" width="0.1332%" height="15" fill="rgb(206,91,31)"/><text x="33.6721%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="33.4221%" y="757" width="0.1332%" height="15" fill="rgb(211,154,13)"/><text x="33.6721%" y="767.50"></text></g><g><title>__GI___openat (1 samples, 0.13%)</title><rect x="33.4221%" y="741" width="0.1332%" height="15" fill="rgb(225,148,7)"/><text x="33.6721%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="33.4221%" y="725" width="0.1332%" height="15" fill="rgb(220,160,43)"/><text x="33.6721%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="33.4221%" y="709" width="0.1332%" height="15" fill="rgb(213,52,39)"/><text x="33.6721%" y="719.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.13%)</title><rect x="33.4221%" y="693" width="0.1332%" height="15" fill="rgb(243,137,7)"/><text x="33.6721%" y="703.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.13%)</title><rect x="33.4221%" y="677" width="0.1332%" height="15" fill="rgb(230,79,13)"/><text x="33.6721%" y="687.50"></text></g><g><title>do_filp_open (1 samples, 0.13%)</title><rect x="33.4221%" y="661" width="0.1332%" height="15" fill="rgb(247,105,23)"/><text x="33.6721%" y="671.50"></text></g><g><title>path_openat (1 samples, 0.13%)</title><rect x="33.4221%" y="645" width="0.1332%" height="15" fill="rgb(223,179,41)"/><text x="33.6721%" y="655.50"></text></g><g><title>link_path_walk (1 samples, 0.13%)</title><rect x="33.4221%" y="629" width="0.1332%" height="15" fill="rgb(218,9,34)"/><text x="33.6721%" y="639.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.13%)</title><rect x="33.4221%" y="613" width="0.1332%" height="15" fill="rgb(222,106,8)"/><text x="33.6721%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.13%)</title><rect x="33.5553%" y="789" width="0.1332%" height="15" fill="rgb(211,220,0)"/><text x="33.8053%" y="799.50"></text></g><g><title>[unknown] (234 samples, 31.16%)</title><rect x="2.6631%" y="965" width="31.1585%" height="15" fill="rgb(229,52,16)"/><text x="2.9131%" y="975.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (3 samples, 0.40%)</title><rect x="33.4221%" y="949" width="0.3995%" height="15" fill="rgb(212,155,18)"/><text x="33.6721%" y="959.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.40%)</title><rect x="33.4221%" y="933" width="0.3995%" height="15" fill="rgb(242,21,14)"/><text x="33.6721%" y="943.50"></text></g><g><title>std::panicking::try (3 samples, 0.40%)</title><rect x="33.4221%" y="917" width="0.3995%" height="15" fill="rgb(222,19,48)"/><text x="33.6721%" y="927.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.40%)</title><rect x="33.4221%" y="901" width="0.3995%" height="15" fill="rgb(232,45,27)"/><text x="33.6721%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.40%)</title><rect x="33.4221%" y="885" width="0.3995%" height="15" fill="rgb(249,103,42)"/><text x="33.6721%" y="895.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.40%)</title><rect x="33.4221%" y="869" width="0.3995%" height="15" fill="rgb(246,81,33)"/><text x="33.6721%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.40%)</title><rect x="33.4221%" y="853" width="0.3995%" height="15" fill="rgb(252,33,42)"/><text x="33.6721%" y="863.50"></text></g><g><title>lobsters::main (3 samples, 0.40%)</title><rect x="33.4221%" y="837" width="0.3995%" height="15" fill="rgb(209,212,41)"/><text x="33.6721%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.27%)</title><rect x="33.5553%" y="821" width="0.2663%" height="15" fill="rgb(207,154,6)"/><text x="33.8053%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.27%)</title><rect x="33.5553%" y="805" width="0.2663%" height="15" fill="rgb(223,64,47)"/><text x="33.8053%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.13%)</title><rect x="33.6884%" y="789" width="0.1332%" height="15" fill="rgb(211,161,38)"/><text x="33.9384%" y="799.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.13%)</title><rect x="33.6884%" y="773" width="0.1332%" height="15" fill="rgb(219,138,40)"/><text x="33.9384%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.13%)</title><rect x="33.6884%" y="757" width="0.1332%" height="15" fill="rgb(241,228,46)"/><text x="33.9384%" y="767.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.13%)</title><rect x="33.6884%" y="741" width="0.1332%" height="15" fill="rgb(223,209,38)"/><text x="33.9384%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.13%)</title><rect x="33.8216%" y="821" width="0.1332%" height="15" fill="rgb(236,164,45)"/><text x="34.0716%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="33.8216%" y="805" width="0.1332%" height="15" fill="rgb(231,15,5)"/><text x="34.0716%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.13%)</title><rect x="33.8216%" y="789" width="0.1332%" height="15" fill="rgb(252,35,15)"/><text x="34.0716%" y="799.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.13%)</title><rect x="33.8216%" y="773" width="0.1332%" height="15" fill="rgb(248,181,18)"/><text x="34.0716%" y="783.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.13%)</title><rect x="33.8216%" y="757" width="0.1332%" height="15" fill="rgb(233,39,42)"/><text x="34.0716%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (1 samples, 0.13%)</title><rect x="34.0879%" y="805" width="0.1332%" height="15" fill="rgb(238,110,33)"/><text x="34.3379%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.27%)</title><rect x="34.2210%" y="789" width="0.2663%" height="15" fill="rgb(233,195,10)"/><text x="34.4710%" y="799.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.13%)</title><rect x="34.4874%" y="757" width="0.1332%" height="15" fill="rgb(254,105,3)"/><text x="34.7374%" y="767.50"></text></g><g><title>decor::helpers::answer_rows (6 samples, 0.80%)</title><rect x="34.2210%" y="805" width="0.7989%" height="15" fill="rgb(221,225,9)"/><text x="34.4710%" y="815.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (4 samples, 0.53%)</title><rect x="34.4874%" y="789" width="0.5326%" height="15" fill="rgb(224,227,45)"/><text x="34.7374%" y="799.50"></text></g><g><title>msql_srv::writers::write_ok_packet (4 samples, 0.53%)</title><rect x="34.4874%" y="773" width="0.5326%" height="15" fill="rgb(229,198,43)"/><text x="34.7374%" y="783.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.40%)</title><rect x="34.6205%" y="757" width="0.3995%" height="15" fill="rgb(206,209,35)"/><text x="34.8705%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="34.8868%" y="741" width="0.1332%" height="15" fill="rgb(245,195,53)"/><text x="35.1368%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="35.2863%" y="789" width="0.1332%" height="15" fill="rgb(240,92,26)"/><text x="35.5363%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.27%)</title><rect x="35.5526%" y="757" width="0.2663%" height="15" fill="rgb(207,40,23)"/><text x="35.8026%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.27%)</title><rect x="35.5526%" y="741" width="0.2663%" height="15" fill="rgb(223,111,35)"/><text x="35.8026%" y="751.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.13%)</title><rect x="36.0852%" y="645" width="0.1332%" height="15" fill="rgb(229,147,28)"/><text x="36.3352%" y="655.50"></text></g><g><title>lock_sock_nested (1 samples, 0.13%)</title><rect x="36.3515%" y="549" width="0.1332%" height="15" fill="rgb(211,29,28)"/><text x="36.6015%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="36.3515%" y="533" width="0.1332%" height="15" fill="rgb(228,72,33)"/><text x="36.6015%" y="543.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="36.4847%" y="469" width="0.1332%" height="15" fill="rgb(205,214,31)"/><text x="36.7347%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="36.4847%" y="453" width="0.1332%" height="15" fill="rgb(224,111,15)"/><text x="36.7347%" y="463.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.13%)</title><rect x="36.6178%" y="469" width="0.1332%" height="15" fill="rgb(253,21,26)"/><text x="36.8678%" y="479.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.27%)</title><rect x="36.7510%" y="469" width="0.2663%" height="15" fill="rgb(245,139,43)"/><text x="37.0010%" y="479.50"></text></g><g><title>dequeue_entity (2 samples, 0.27%)</title><rect x="36.7510%" y="453" width="0.2663%" height="15" fill="rgb(252,170,7)"/><text x="37.0010%" y="463.50"></text></g><g><title>update_curr (2 samples, 0.27%)</title><rect x="36.7510%" y="437" width="0.2663%" height="15" fill="rgb(231,118,14)"/><text x="37.0010%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.13%)</title><rect x="36.8842%" y="421" width="0.1332%" height="15" fill="rgb(238,83,0)"/><text x="37.1342%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.13%)</title><rect x="37.0173%" y="437" width="0.1332%" height="15" fill="rgb(221,39,39)"/><text x="37.2673%" y="447.50"></text></g><g><title>native_write_msr (1 samples, 0.13%)</title><rect x="37.0173%" y="421" width="0.1332%" height="15" fill="rgb(222,119,46)"/><text x="37.2673%" y="431.50"></text></g><g><title>finish_task_switch (2 samples, 0.27%)</title><rect x="37.0173%" y="469" width="0.2663%" height="15" fill="rgb(222,165,49)"/><text x="37.2673%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.27%)</title><rect x="37.0173%" y="453" width="0.2663%" height="15" fill="rgb(219,113,52)"/><text x="37.2673%" y="463.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="37.1505%" y="437" width="0.1332%" height="15" fill="rgb(214,7,15)"/><text x="37.4005%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="37.1505%" y="421" width="0.1332%" height="15" fill="rgb(235,32,4)"/><text x="37.4005%" y="431.50"></text></g><g><title>psi_task_change (2 samples, 0.27%)</title><rect x="37.2836%" y="469" width="0.2663%" height="15" fill="rgb(238,90,54)"/><text x="37.5336%" y="479.50"></text></g><g><title>psi_group_change (2 samples, 0.27%)</title><rect x="37.2836%" y="453" width="0.2663%" height="15" fill="rgb(213,208,19)"/><text x="37.5336%" y="463.50"></text></g><g><title>sk_wait_data (9 samples, 1.20%)</title><rect x="36.4847%" y="549" width="1.1984%" height="15" fill="rgb(233,156,4)"/><text x="36.7347%" y="559.50"></text></g><g><title>wait_woken (9 samples, 1.20%)</title><rect x="36.4847%" y="533" width="1.1984%" height="15" fill="rgb(207,194,5)"/><text x="36.7347%" y="543.50"></text></g><g><title>schedule_timeout (9 samples, 1.20%)</title><rect x="36.4847%" y="517" width="1.1984%" height="15" fill="rgb(206,111,30)"/><text x="36.7347%" y="527.50"></text></g><g><title>schedule (9 samples, 1.20%)</title><rect x="36.4847%" y="501" width="1.1984%" height="15" fill="rgb(243,70,54)"/><text x="36.7347%" y="511.50"></text></g><g><title>__schedule (9 samples, 1.20%)</title><rect x="36.4847%" y="485" width="1.1984%" height="15" fill="rgb(242,28,8)"/><text x="36.7347%" y="495.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.13%)</title><rect x="37.5499%" y="469" width="0.1332%" height="15" fill="rgb(219,106,18)"/><text x="37.7999%" y="479.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.13%)</title><rect x="37.5499%" y="453" width="0.1332%" height="15" fill="rgb(244,222,10)"/><text x="37.7999%" y="463.50"></text></g><g><title>_copy_to_iter (1 samples, 0.13%)</title><rect x="37.9494%" y="517" width="0.1332%" height="15" fill="rgb(236,179,52)"/><text x="38.1994%" y="527.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.53%)</title><rect x="37.6831%" y="549" width="0.5326%" height="15" fill="rgb(213,23,39)"/><text x="37.9331%" y="559.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.53%)</title><rect x="37.6831%" y="533" width="0.5326%" height="15" fill="rgb(238,48,10)"/><text x="37.9331%" y="543.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.13%)</title><rect x="38.0826%" y="517" width="0.1332%" height="15" fill="rgb(251,196,23)"/><text x="38.3326%" y="527.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="38.0826%" y="501" width="0.1332%" height="15" fill="rgb(250,152,24)"/><text x="38.3326%" y="511.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="38.0826%" y="485" width="0.1332%" height="15" fill="rgb(209,150,17)"/><text x="38.3326%" y="495.50"></text></g><g><title>tcp_rcv_space_adjust (2 samples, 0.27%)</title><rect x="38.2157%" y="549" width="0.2663%" height="15" fill="rgb(234,202,34)"/><text x="38.4657%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 2.40%)</title><rect x="36.2184%" y="613" width="2.3968%" height="15" fill="rgb(253,148,53)"/><text x="36.4684%" y="623.50">__..</text></g><g><title>__sys_recvfrom (18 samples, 2.40%)</title><rect x="36.2184%" y="597" width="2.3968%" height="15" fill="rgb(218,129,16)"/><text x="36.4684%" y="607.50">__..</text></g><g><title>inet_recvmsg (17 samples, 2.26%)</title><rect x="36.3515%" y="581" width="2.2636%" height="15" fill="rgb(216,85,19)"/><text x="36.6015%" y="591.50">i..</text></g><g><title>tcp_recvmsg (17 samples, 2.26%)</title><rect x="36.3515%" y="565" width="2.2636%" height="15" fill="rgb(235,228,7)"/><text x="36.6015%" y="575.50">t..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.13%)</title><rect x="38.4820%" y="549" width="0.1332%" height="15" fill="rgb(245,175,0)"/><text x="38.7320%" y="559.50"></text></g><g><title>do_syscall_64 (19 samples, 2.53%)</title><rect x="36.2184%" y="629" width="2.5300%" height="15" fill="rgb(208,168,36)"/><text x="36.4684%" y="639.50">do..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="38.6152%" y="613" width="0.1332%" height="15" fill="rgb(246,171,24)"/><text x="38.8652%" y="623.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="38.6152%" y="597" width="0.1332%" height="15" fill="rgb(215,142,24)"/><text x="38.8652%" y="607.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.13%)</title><rect x="38.6152%" y="581" width="0.1332%" height="15" fill="rgb(250,187,7)"/><text x="38.8652%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 2.66%)</title><rect x="36.2184%" y="645" width="2.6631%" height="15" fill="rgb(228,66,33)"/><text x="36.4684%" y="655.50">en..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="38.7483%" y="629" width="0.1332%" height="15" fill="rgb(234,215,21)"/><text x="38.9983%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 2.93%)</title><rect x="36.0852%" y="741" width="2.9294%" height="15" fill="rgb(222,191,20)"/><text x="36.3352%" y="751.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 2.93%)</title><rect x="36.0852%" y="725" width="2.9294%" height="15" fill="rgb(245,79,54)"/><text x="36.3352%" y="735.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 2.93%)</title><rect x="36.0852%" y="709" width="2.9294%" height="15" fill="rgb(240,10,37)"/><text x="36.3352%" y="719.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 2.93%)</title><rect x="36.0852%" y="693" width="2.9294%" height="15" fill="rgb(214,192,32)"/><text x="36.3352%" y="703.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 2.93%)</title><rect x="36.0852%" y="677" width="2.9294%" height="15" fill="rgb(209,36,54)"/><text x="36.3352%" y="687.50">st..</text></g><g><title>__libc_recv (22 samples, 2.93%)</title><rect x="36.0852%" y="661" width="2.9294%" height="15" fill="rgb(220,10,11)"/><text x="36.3352%" y="671.50">__..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.13%)</title><rect x="38.8815%" y="645" width="0.1332%" height="15" fill="rgb(221,106,17)"/><text x="39.1315%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (29 samples, 3.86%)</title><rect x="35.4194%" y="789" width="3.8615%" height="15" fill="rgb(251,142,44)"/><text x="35.6694%" y="799.50">mysq..</text></g><g><title>mysql::conn::Conn::read_packet (29 samples, 3.86%)</title><rect x="35.4194%" y="773" width="3.8615%" height="15" fill="rgb(238,13,15)"/><text x="35.6694%" y="783.50">mysq..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 3.46%)</title><rect x="35.8189%" y="757" width="3.4621%" height="15" fill="rgb(208,107,27)"/><text x="36.0689%" y="767.50">&lt;my..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.27%)</title><rect x="39.0146%" y="741" width="0.2663%" height="15" fill="rgb(205,136,37)"/><text x="39.2646%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.13%)</title><rect x="39.1478%" y="725" width="0.1332%" height="15" fill="rgb(250,205,27)"/><text x="39.3978%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (3 samples, 0.40%)</title><rect x="39.2810%" y="773" width="0.3995%" height="15" fill="rgb(210,80,43)"/><text x="39.5310%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.27%)</title><rect x="39.4141%" y="757" width="0.2663%" height="15" fill="rgb(247,160,36)"/><text x="39.6641%" y="767.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.27%)</title><rect x="39.4141%" y="741" width="0.2663%" height="15" fill="rgb(234,13,49)"/><text x="39.6641%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.27%)</title><rect x="39.4141%" y="725" width="0.2663%" height="15" fill="rgb(234,122,0)"/><text x="39.6641%" y="735.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="39.5473%" y="709" width="0.1332%" height="15" fill="rgb(207,146,38)"/><text x="39.7973%" y="719.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="39.5473%" y="693" width="0.1332%" height="15" fill="rgb(207,177,25)"/><text x="39.7973%" y="703.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="39.5473%" y="677" width="0.1332%" height="15" fill="rgb(211,178,42)"/><text x="39.7973%" y="687.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="39.5473%" y="661" width="0.1332%" height="15" fill="rgb(230,69,54)"/><text x="39.7973%" y="671.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.13%)</title><rect x="39.5473%" y="645" width="0.1332%" height="15" fill="rgb(214,135,41)"/><text x="39.7973%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.13%)</title><rect x="39.5473%" y="629" width="0.1332%" height="15" fill="rgb(237,67,25)"/><text x="39.7973%" y="639.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.13%)</title><rect x="39.5473%" y="613" width="0.1332%" height="15" fill="rgb(222,189,50)"/><text x="39.7973%" y="623.50"></text></g><g><title>release_sock (2 samples, 0.27%)</title><rect x="40.0799%" y="613" width="0.2663%" height="15" fill="rgb(245,148,34)"/><text x="40.3299%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.27%)</title><rect x="40.0799%" y="597" width="0.2663%" height="15" fill="rgb(222,29,6)"/><text x="40.3299%" y="607.50"></text></g><g><title>preempt_count_add (2 samples, 0.27%)</title><rect x="40.0799%" y="581" width="0.2663%" height="15" fill="rgb(221,189,43)"/><text x="40.3299%" y="591.50"></text></g><g><title>in_lock_functions (2 samples, 0.27%)</title><rect x="40.0799%" y="565" width="0.2663%" height="15" fill="rgb(207,36,27)"/><text x="40.3299%" y="575.50"></text></g><g><title>__ip_local_out (2 samples, 0.27%)</title><rect x="41.0120%" y="533" width="0.2663%" height="15" fill="rgb(217,90,24)"/><text x="41.2620%" y="543.50"></text></g><g><title>ip_send_check (2 samples, 0.27%)</title><rect x="41.0120%" y="517" width="0.2663%" height="15" fill="rgb(224,66,35)"/><text x="41.2620%" y="527.50"></text></g><g><title>__sk_dst_check (1 samples, 0.13%)</title><rect x="41.2783%" y="533" width="0.1332%" height="15" fill="rgb(221,13,50)"/><text x="41.5283%" y="543.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.13%)</title><rect x="41.2783%" y="517" width="0.1332%" height="15" fill="rgb(236,68,49)"/><text x="41.5283%" y="527.50"></text></g><g><title>netif_rx (1 samples, 0.13%)</title><rect x="41.8109%" y="453" width="0.1332%" height="15" fill="rgb(229,146,28)"/><text x="42.0609%" y="463.50"></text></g><g><title>netif_rx_internal (1 samples, 0.13%)</title><rect x="41.8109%" y="437" width="0.1332%" height="15" fill="rgb(225,31,38)"/><text x="42.0609%" y="447.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.53%)</title><rect x="41.5446%" y="501" width="0.5326%" height="15" fill="rgb(250,208,3)"/><text x="41.7946%" y="511.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.53%)</title><rect x="41.5446%" y="485" width="0.5326%" height="15" fill="rgb(246,54,23)"/><text x="41.7946%" y="495.50"></text></g><g><title>loopback_xmit (3 samples, 0.40%)</title><rect x="41.6778%" y="469" width="0.3995%" height="15" fill="rgb(243,76,11)"/><text x="41.9278%" y="479.50"></text></g><g><title>tcp_wfree (1 samples, 0.13%)</title><rect x="41.9441%" y="453" width="0.1332%" height="15" fill="rgb(245,21,50)"/><text x="42.1941%" y="463.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="42.2104%" y="389" width="0.1332%" height="15" fill="rgb(228,9,43)"/><text x="42.4604%" y="399.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="42.7430%" y="309" width="0.1332%" height="15" fill="rgb(208,100,47)"/><text x="42.9930%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="42.8762%" y="309" width="0.1332%" height="15" fill="rgb(232,26,8)"/><text x="43.1262%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="43.4088%" y="197" width="0.1332%" height="15" fill="rgb(216,166,38)"/><text x="43.6588%" y="207.50"></text></g><g><title>psi_task_change (3 samples, 0.40%)</title><rect x="43.5419%" y="181" width="0.3995%" height="15" fill="rgb(251,202,51)"/><text x="43.7919%" y="191.50"></text></g><g><title>psi_group_change (3 samples, 0.40%)</title><rect x="43.5419%" y="165" width="0.3995%" height="15" fill="rgb(254,216,34)"/><text x="43.7919%" y="175.50"></text></g><g><title>record_times (1 samples, 0.13%)</title><rect x="43.8083%" y="149" width="0.1332%" height="15" fill="rgb(251,32,27)"/><text x="44.0583%" y="159.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="43.8083%" y="133" width="0.1332%" height="15" fill="rgb(208,127,28)"/><text x="44.0583%" y="143.50"></text></g><g><title>sched_clock (1 samples, 0.13%)</title><rect x="43.8083%" y="117" width="0.1332%" height="15" fill="rgb(224,137,22)"/><text x="44.0583%" y="127.50"></text></g><g><title>native_sched_clock (1 samples, 0.13%)</title><rect x="43.8083%" y="101" width="0.1332%" height="15" fill="rgb(254,70,32)"/><text x="44.0583%" y="111.50"></text></g><g><title>enqueue_task (5 samples, 0.67%)</title><rect x="43.5419%" y="197" width="0.6658%" height="15" fill="rgb(229,75,37)"/><text x="43.7919%" y="207.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.27%)</title><rect x="43.9414%" y="181" width="0.2663%" height="15" fill="rgb(252,64,23)"/><text x="44.1914%" y="191.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.13%)</title><rect x="44.2077%" y="165" width="0.1332%" height="15" fill="rgb(232,162,48)"/><text x="44.4577%" y="175.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.27%)</title><rect x="44.2077%" y="197" width="0.2663%" height="15" fill="rgb(246,160,12)"/><text x="44.4577%" y="207.50"></text></g><g><title>enqueue_entity (2 samples, 0.27%)</title><rect x="44.2077%" y="181" width="0.2663%" height="15" fill="rgb(247,166,0)"/><text x="44.4577%" y="191.50"></text></g><g><title>update_load_avg (1 samples, 0.13%)</title><rect x="44.3409%" y="165" width="0.1332%" height="15" fill="rgb(249,219,21)"/><text x="44.5909%" y="175.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.13%)</title><rect x="44.3409%" y="149" width="0.1332%" height="15" fill="rgb(205,209,3)"/><text x="44.5909%" y="159.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.13%)</title><rect x="44.4740%" y="197" width="0.1332%" height="15" fill="rgb(243,44,1)"/><text x="44.7240%" y="207.50"></text></g><g><title>available_idle_cpu (1 samples, 0.13%)</title><rect x="44.4740%" y="181" width="0.1332%" height="15" fill="rgb(206,159,16)"/><text x="44.7240%" y="191.50"></text></g><g><title>sock_def_readable (16 samples, 2.13%)</title><rect x="43.0093%" y="277" width="2.1305%" height="15" fill="rgb(244,77,30)"/><text x="43.2593%" y="287.50">s..</text></g><g><title>__wake_up_common_lock (14 samples, 1.86%)</title><rect x="43.2756%" y="261" width="1.8642%" height="15" fill="rgb(218,69,12)"/><text x="43.5256%" y="271.50">_..</text></g><g><title>__wake_up_common (14 samples, 1.86%)</title><rect x="43.2756%" y="245" width="1.8642%" height="15" fill="rgb(212,87,7)"/><text x="43.5256%" y="255.50">_..</text></g><g><title>pollwake (14 samples, 1.86%)</title><rect x="43.2756%" y="229" width="1.8642%" height="15" fill="rgb(245,114,25)"/><text x="43.5256%" y="239.50">p..</text></g><g><title>try_to_wake_up (13 samples, 1.73%)</title><rect x="43.4088%" y="213" width="1.7310%" height="15" fill="rgb(210,61,42)"/><text x="43.6588%" y="223.50"></text></g><g><title>ttwu_do_wakeup (4 samples, 0.53%)</title><rect x="44.6072%" y="197" width="0.5326%" height="15" fill="rgb(211,52,33)"/><text x="44.8572%" y="207.50"></text></g><g><title>check_preempt_curr (3 samples, 0.40%)</title><rect x="44.7403%" y="181" width="0.3995%" height="15" fill="rgb(234,58,33)"/><text x="44.9903%" y="191.50"></text></g><g><title>resched_curr (3 samples, 0.40%)</title><rect x="44.7403%" y="165" width="0.3995%" height="15" fill="rgb(220,115,36)"/><text x="44.9903%" y="175.50"></text></g><g><title>bictcp_cong_avoid (2 samples, 0.27%)</title><rect x="45.2730%" y="261" width="0.2663%" height="15" fill="rgb(243,153,54)"/><text x="45.5230%" y="271.50"></text></g><g><title>kmem_cache_free (1 samples, 0.13%)</title><rect x="45.5393%" y="261" width="0.1332%" height="15" fill="rgb(251,47,18)"/><text x="45.7893%" y="271.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.13%)</title><rect x="45.6724%" y="261" width="0.1332%" height="15" fill="rgb(242,102,42)"/><text x="45.9224%" y="271.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.13%)</title><rect x="45.8056%" y="261" width="0.1332%" height="15" fill="rgb(234,31,38)"/><text x="46.0556%" y="271.50"></text></g><g><title>tcp_ack (7 samples, 0.93%)</title><rect x="45.1398%" y="277" width="0.9321%" height="15" fill="rgb(221,117,51)"/><text x="45.3898%" y="287.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.13%)</title><rect x="45.9387%" y="261" width="0.1332%" height="15" fill="rgb(212,20,18)"/><text x="46.1887%" y="271.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.13%)</title><rect x="46.0719%" y="277" width="0.1332%" height="15" fill="rgb(245,133,36)"/><text x="46.3219%" y="287.50"></text></g><g><title>ktime_get (1 samples, 0.13%)</title><rect x="46.0719%" y="261" width="0.1332%" height="15" fill="rgb(212,6,19)"/><text x="46.3219%" y="271.50"></text></g><g><title>ip_local_deliver (29 samples, 3.86%)</title><rect x="42.4767%" y="373" width="3.8615%" height="15" fill="rgb(218,1,36)"/><text x="42.7267%" y="383.50">ip_l..</text></g><g><title>ip_local_deliver_finish (29 samples, 3.86%)</title><rect x="42.4767%" y="357" width="3.8615%" height="15" fill="rgb(246,84,54)"/><text x="42.7267%" y="367.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (29 samples, 3.86%)</title><rect x="42.4767%" y="341" width="3.8615%" height="15" fill="rgb(242,110,6)"/><text x="42.7267%" y="351.50">ip_p..</text></g><g><title>tcp_v4_rcv (28 samples, 3.73%)</title><rect x="42.6099%" y="325" width="3.7284%" height="15" fill="rgb(214,47,5)"/><text x="42.8599%" y="335.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (25 samples, 3.33%)</title><rect x="43.0093%" y="309" width="3.3289%" height="15" fill="rgb(218,159,25)"/><text x="43.2593%" y="319.50">tcp..</text></g><g><title>tcp_rcv_established (25 samples, 3.33%)</title><rect x="43.0093%" y="293" width="3.3289%" height="15" fill="rgb(215,211,28)"/><text x="43.2593%" y="303.50">tcp..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.13%)</title><rect x="46.2051%" y="277" width="0.1332%" height="15" fill="rgb(238,59,32)"/><text x="46.4551%" y="287.50"></text></g><g><title>ip_rcv_core (1 samples, 0.13%)</title><rect x="46.3382%" y="373" width="0.1332%" height="15" fill="rgb(226,82,3)"/><text x="46.5882%" y="383.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.13%)</title><rect x="46.3382%" y="357" width="0.1332%" height="15" fill="rgb(240,164,32)"/><text x="46.5882%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (33 samples, 4.39%)</title><rect x="42.2104%" y="405" width="4.3941%" height="15" fill="rgb(232,46,7)"/><text x="42.4604%" y="415.50">__net..</text></g><g><title>ip_rcv (32 samples, 4.26%)</title><rect x="42.3435%" y="389" width="4.2610%" height="15" fill="rgb(229,129,53)"/><text x="42.5935%" y="399.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.13%)</title><rect x="46.4714%" y="373" width="0.1332%" height="15" fill="rgb(234,188,29)"/><text x="46.7214%" y="383.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.13%)</title><rect x="46.4714%" y="357" width="0.1332%" height="15" fill="rgb(246,141,4)"/><text x="46.7214%" y="367.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="46.6045%" y="405" width="0.1332%" height="15" fill="rgb(229,23,39)"/><text x="46.8545%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="46.6045%" y="389" width="0.1332%" height="15" fill="rgb(206,12,3)"/><text x="46.8545%" y="399.50"></text></g><g><title>do_softirq (36 samples, 4.79%)</title><rect x="42.0772%" y="485" width="4.7936%" height="15" fill="rgb(252,226,20)"/><text x="42.3272%" y="495.50">do_sof..</text></g><g><title>do_softirq_own_stack (36 samples, 4.79%)</title><rect x="42.0772%" y="469" width="4.7936%" height="15" fill="rgb(216,123,35)"/><text x="42.3272%" y="479.50">do_sof..</text></g><g><title>__do_softirq (36 samples, 4.79%)</title><rect x="42.0772%" y="453" width="4.7936%" height="15" fill="rgb(212,68,40)"/><text x="42.3272%" y="463.50">__do_s..</text></g><g><title>net_rx_action (36 samples, 4.79%)</title><rect x="42.0772%" y="437" width="4.7936%" height="15" fill="rgb(254,125,32)"/><text x="42.3272%" y="447.50">net_rx..</text></g><g><title>process_backlog (35 samples, 4.66%)</title><rect x="42.2104%" y="421" width="4.6605%" height="15" fill="rgb(253,97,22)"/><text x="42.4604%" y="431.50">proce..</text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="46.7377%" y="405" width="0.1332%" height="15" fill="rgb(241,101,14)"/><text x="46.9877%" y="415.50"></text></g><g><title>ip_finish_output2 (42 samples, 5.59%)</title><rect x="41.4115%" y="517" width="5.5925%" height="15" fill="rgb(238,103,29)"/><text x="41.6615%" y="527.50">ip_fini..</text></g><g><title>__local_bh_enable_ip (37 samples, 4.93%)</title><rect x="42.0772%" y="501" width="4.9268%" height="15" fill="rgb(233,195,47)"/><text x="42.3272%" y="511.50">__loca..</text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="46.8708%" y="485" width="0.1332%" height="15" fill="rgb(246,218,30)"/><text x="47.1208%" y="495.50"></text></g><g><title>__ip_queue_xmit (48 samples, 6.39%)</title><rect x="40.8788%" y="549" width="6.3915%" height="15" fill="rgb(219,145,47)"/><text x="41.1288%" y="559.50">__ip_que..</text></g><g><title>ip_output (44 samples, 5.86%)</title><rect x="41.4115%" y="533" width="5.8589%" height="15" fill="rgb(243,12,26)"/><text x="41.6615%" y="543.50">ip_outp..</text></g><g><title>ip_finish_output (2 samples, 0.27%)</title><rect x="47.0040%" y="517" width="0.2663%" height="15" fill="rgb(214,87,16)"/><text x="47.2540%" y="527.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.27%)</title><rect x="47.0040%" y="501" width="0.2663%" height="15" fill="rgb(208,99,42)"/><text x="47.2540%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="47.1372%" y="485" width="0.1332%" height="15" fill="rgb(253,99,2)"/><text x="47.3872%" y="495.50"></text></g><g><title>skb_clone (1 samples, 0.13%)</title><rect x="47.2703%" y="549" width="0.1332%" height="15" fill="rgb(220,168,23)"/><text x="47.5203%" y="559.50"></text></g><g><title>__copy_skb_header (1 samples, 0.13%)</title><rect x="47.2703%" y="533" width="0.1332%" height="15" fill="rgb(242,38,24)"/><text x="47.5203%" y="543.50"></text></g><g><title>__tcp_transmit_skb (52 samples, 6.92%)</title><rect x="40.6125%" y="565" width="6.9241%" height="15" fill="rgb(225,182,9)"/><text x="40.8625%" y="575.50">__tcp_tra..</text></g><g><title>tcp_rate_skb_sent (1 samples, 0.13%)</title><rect x="47.4035%" y="549" width="0.1332%" height="15" fill="rgb(243,178,37)"/><text x="47.6535%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (53 samples, 7.06%)</title><rect x="40.6125%" y="597" width="7.0573%" height="15" fill="rgb(232,139,19)"/><text x="40.8625%" y="607.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (53 samples, 7.06%)</title><rect x="40.6125%" y="581" width="7.0573%" height="15" fill="rgb(225,201,24)"/><text x="40.8625%" y="591.50">tcp_write..</text></g><g><title>tcp_chrono_stop (1 samples, 0.13%)</title><rect x="47.5366%" y="565" width="0.1332%" height="15" fill="rgb(221,47,46)"/><text x="47.7866%" y="575.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.13%)</title><rect x="47.6698%" y="597" width="0.1332%" height="15" fill="rgb(249,23,13)"/><text x="47.9198%" y="607.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.13%)</title><rect x="47.6698%" y="581" width="0.1332%" height="15" fill="rgb(219,9,5)"/><text x="47.9198%" y="591.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="47.9361%" y="565" width="0.1332%" height="15" fill="rgb(254,171,16)"/><text x="48.1861%" y="575.50"></text></g><g><title>kmalloc_slab (1 samples, 0.13%)</title><rect x="47.9361%" y="549" width="0.1332%" height="15" fill="rgb(230,171,20)"/><text x="48.1861%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.40%)</title><rect x="47.8029%" y="597" width="0.3995%" height="15" fill="rgb(210,71,41)"/><text x="48.0529%" y="607.50"></text></g><g><title>__alloc_skb (2 samples, 0.27%)</title><rect x="47.9361%" y="581" width="0.2663%" height="15" fill="rgb(206,173,20)"/><text x="48.1861%" y="591.50"></text></g><g><title>__ksize (1 samples, 0.13%)</title><rect x="48.0692%" y="565" width="0.1332%" height="15" fill="rgb(233,88,34)"/><text x="48.3192%" y="575.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="48.3356%" y="581" width="0.1332%" height="15" fill="rgb(223,209,46)"/><text x="48.5856%" y="591.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="48.3356%" y="565" width="0.1332%" height="15" fill="rgb(250,43,18)"/><text x="48.5856%" y="575.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.40%)</title><rect x="48.2024%" y="597" width="0.3995%" height="15" fill="rgb(208,13,10)"/><text x="48.4524%" y="607.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.13%)</title><rect x="48.4687%" y="581" width="0.1332%" height="15" fill="rgb(212,200,36)"/><text x="48.7187%" y="591.50"></text></g><g><title>do_syscall_64 (66 samples, 8.79%)</title><rect x="39.9467%" y="693" width="8.7883%" height="15" fill="rgb(225,90,30)"/><text x="40.1967%" y="703.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (66 samples, 8.79%)</title><rect x="39.9467%" y="677" width="8.7883%" height="15" fill="rgb(236,182,39)"/><text x="40.1967%" y="687.50">__x64_sys_se..</text></g><g><title>__sys_sendto (65 samples, 8.66%)</title><rect x="40.0799%" y="661" width="8.6551%" height="15" fill="rgb(212,144,35)"/><text x="40.3299%" y="671.50">__sys_sendto</text></g><g><title>sock_sendmsg (65 samples, 8.66%)</title><rect x="40.0799%" y="645" width="8.6551%" height="15" fill="rgb(228,63,44)"/><text x="40.3299%" y="655.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (65 samples, 8.66%)</title><rect x="40.0799%" y="629" width="8.6551%" height="15" fill="rgb(228,109,6)"/><text x="40.3299%" y="639.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (63 samples, 8.39%)</title><rect x="40.3462%" y="613" width="8.3888%" height="15" fill="rgb(238,117,24)"/><text x="40.5962%" y="623.50">tcp_sendmsg_..</text></g><g><title>tcp_tx_timestamp (1 samples, 0.13%)</title><rect x="48.6019%" y="597" width="0.1332%" height="15" fill="rgb(242,26,26)"/><text x="48.8519%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (73 samples, 9.72%)</title><rect x="39.6804%" y="709" width="9.7204%" height="15" fill="rgb(221,92,48)"/><text x="39.9304%" y="719.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.67%)</title><rect x="48.7350%" y="693" width="0.6658%" height="15" fill="rgb(209,209,32)"/><text x="48.9850%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (118 samples, 15.71%)</title><rect x="33.9547%" y="821" width="15.7124%" height="15" fill="rgb(221,70,22)"/><text x="34.2047%" y="831.50">&lt;decor::Shim as msql_srv..</text></g><g><title>mysql::conn::Conn::_query (110 samples, 14.65%)</title><rect x="35.0200%" y="805" width="14.6471%" height="15" fill="rgb(248,145,5)"/><text x="35.2700%" y="815.50">mysql::conn::Conn::_qu..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (78 samples, 10.39%)</title><rect x="39.2810%" y="789" width="10.3862%" height="15" fill="rgb(226,116,26)"/><text x="39.5310%" y="799.50">mysql_common::p..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (75 samples, 9.99%)</title><rect x="39.6804%" y="773" width="9.9867%" height="15" fill="rgb(244,5,17)"/><text x="39.9304%" y="783.50">std::io::buffe..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (75 samples, 9.99%)</title><rect x="39.6804%" y="757" width="9.9867%" height="15" fill="rgb(252,159,33)"/><text x="39.9304%" y="767.50">&lt;std::net::tcp..</text></g><g><title>std::sys_common::net::TcpStream::write (75 samples, 9.99%)</title><rect x="39.6804%" y="741" width="9.9867%" height="15" fill="rgb(206,71,0)"/><text x="39.9304%" y="751.50">std::sys_commo..</text></g><g><title>__libc_send (75 samples, 9.99%)</title><rect x="39.6804%" y="725" width="9.9867%" height="15" fill="rgb(233,118,54)"/><text x="39.9304%" y="735.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.27%)</title><rect x="49.4008%" y="709" width="0.2663%" height="15" fill="rgb(234,83,48)"/><text x="49.6508%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="49.6671%" y="821" width="0.1332%" height="15" fill="rgb(228,3,54)"/><text x="49.9171%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="49.6671%" y="805" width="0.1332%" height="15" fill="rgb(226,155,13)"/><text x="49.9171%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="49.6671%" y="789" width="0.1332%" height="15" fill="rgb(241,28,37)"/><text x="49.9171%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="49.6671%" y="773" width="0.1332%" height="15" fill="rgb(233,93,10)"/><text x="49.9171%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="49.6671%" y="757" width="0.1332%" height="15" fill="rgb(225,113,19)"/><text x="49.9171%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="49.6671%" y="741" width="0.1332%" height="15" fill="rgb(241,2,18)"/><text x="49.9171%" y="751.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.13%)</title><rect x="49.8003%" y="821" width="0.1332%" height="15" fill="rgb(228,207,21)"/><text x="50.0503%" y="831.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.13%)</title><rect x="49.8003%" y="805" width="0.1332%" height="15" fill="rgb(213,211,35)"/><text x="50.0503%" y="815.50"></text></g><g><title>msql_srv::commands::parse (1 samples, 0.13%)</title><rect x="49.9334%" y="821" width="0.1332%" height="15" fill="rgb(209,83,10)"/><text x="50.1834%" y="831.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.13%)</title><rect x="49.9334%" y="805" width="0.1332%" height="15" fill="rgb(209,164,1)"/><text x="50.1834%" y="815.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.13%)</title><rect x="50.1997%" y="709" width="0.1332%" height="15" fill="rgb(213,184,43)"/><text x="50.4497%" y="719.50"></text></g><g><title>import_single_range (1 samples, 0.13%)</title><rect x="50.3329%" y="645" width="0.1332%" height="15" fill="rgb(231,61,34)"/><text x="50.5829%" y="655.50"></text></g><g><title>__kfree_skb (2 samples, 0.27%)</title><rect x="50.7324%" y="613" width="0.2663%" height="15" fill="rgb(235,75,3)"/><text x="50.9824%" y="623.50"></text></g><g><title>skb_release_head_state (2 samples, 0.27%)</title><rect x="50.7324%" y="597" width="0.2663%" height="15" fill="rgb(220,106,47)"/><text x="50.9824%" y="607.50"></text></g><g><title>dst_release (2 samples, 0.27%)</title><rect x="50.7324%" y="581" width="0.2663%" height="15" fill="rgb(210,196,33)"/><text x="50.9824%" y="591.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.13%)</title><rect x="50.9987%" y="613" width="0.1332%" height="15" fill="rgb(229,154,42)"/><text x="51.2487%" y="623.50"></text></g><g><title>__alloc_skb (1 samples, 0.13%)</title><rect x="50.9987%" y="597" width="0.1332%" height="15" fill="rgb(228,114,26)"/><text x="51.2487%" y="607.50"></text></g><g><title>__ksize (1 samples, 0.13%)</title><rect x="50.9987%" y="581" width="0.1332%" height="15" fill="rgb(208,144,1)"/><text x="51.2487%" y="591.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.13%)</title><rect x="51.1318%" y="613" width="0.1332%" height="15" fill="rgb(239,112,37)"/><text x="51.3818%" y="623.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.13%)</title><rect x="51.1318%" y="597" width="0.1332%" height="15" fill="rgb(210,96,50)"/><text x="51.3818%" y="607.50"></text></g><g><title>ip_output (1 samples, 0.13%)</title><rect x="51.1318%" y="581" width="0.1332%" height="15" fill="rgb(222,178,2)"/><text x="51.3818%" y="591.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.13%)</title><rect x="51.1318%" y="565" width="0.1332%" height="15" fill="rgb(226,74,18)"/><text x="51.3818%" y="575.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="51.1318%" y="549" width="0.1332%" height="15" fill="rgb(225,67,54)"/><text x="51.3818%" y="559.50"></text></g><g><title>do_softirq (1 samples, 0.13%)</title><rect x="51.1318%" y="533" width="0.1332%" height="15" fill="rgb(251,92,32)"/><text x="51.3818%" y="543.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.13%)</title><rect x="51.1318%" y="517" width="0.1332%" height="15" fill="rgb(228,149,22)"/><text x="51.3818%" y="527.50"></text></g><g><title>__do_softirq (1 samples, 0.13%)</title><rect x="51.1318%" y="501" width="0.1332%" height="15" fill="rgb(243,54,13)"/><text x="51.3818%" y="511.50"></text></g><g><title>net_rx_action (1 samples, 0.13%)</title><rect x="51.1318%" y="485" width="0.1332%" height="15" fill="rgb(243,180,28)"/><text x="51.3818%" y="495.50"></text></g><g><title>process_backlog (1 samples, 0.13%)</title><rect x="51.1318%" y="469" width="0.1332%" height="15" fill="rgb(208,167,24)"/><text x="51.3818%" y="479.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.13%)</title><rect x="51.1318%" y="453" width="0.1332%" height="15" fill="rgb(245,73,45)"/><text x="51.3818%" y="463.50"></text></g><g><title>ip_rcv (1 samples, 0.13%)</title><rect x="51.1318%" y="437" width="0.1332%" height="15" fill="rgb(237,203,48)"/><text x="51.3818%" y="447.50"></text></g><g><title>ip_rcv_core (1 samples, 0.13%)</title><rect x="51.1318%" y="421" width="0.1332%" height="15" fill="rgb(211,197,16)"/><text x="51.3818%" y="431.50"></text></g><g><title>release_sock (1 samples, 0.13%)</title><rect x="51.2650%" y="613" width="0.1332%" height="15" fill="rgb(243,99,51)"/><text x="51.5150%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="51.2650%" y="597" width="0.1332%" height="15" fill="rgb(215,123,29)"/><text x="51.5150%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="51.2650%" y="581" width="0.1332%" height="15" fill="rgb(239,186,37)"/><text x="51.5150%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="51.3981%" y="597" width="0.1332%" height="15" fill="rgb(252,136,39)"/><text x="51.6481%" y="607.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="51.3981%" y="581" width="0.1332%" height="15" fill="rgb(223,213,32)"/><text x="51.6481%" y="591.50"></text></g><g><title>in_lock_functions (1 samples, 0.13%)</title><rect x="51.3981%" y="565" width="0.1332%" height="15" fill="rgb(233,115,5)"/><text x="51.6481%" y="575.50"></text></g><g><title>add_wait_queue (1 samples, 0.13%)</title><rect x="51.5313%" y="597" width="0.1332%" height="15" fill="rgb(207,226,44)"/><text x="51.7813%" y="607.50"></text></g><g><title>remove_wait_queue (1 samples, 0.13%)</title><rect x="51.6644%" y="597" width="0.1332%" height="15" fill="rgb(208,126,0)"/><text x="51.9144%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="51.6644%" y="581" width="0.1332%" height="15" fill="rgb(244,66,21)"/><text x="51.9144%" y="591.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.27%)</title><rect x="52.1971%" y="533" width="0.2663%" height="15" fill="rgb(222,97,12)"/><text x="52.4471%" y="543.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.27%)</title><rect x="52.1971%" y="517" width="0.2663%" height="15" fill="rgb(219,213,19)"/><text x="52.4471%" y="527.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.13%)</title><rect x="52.4634%" y="485" width="0.1332%" height="15" fill="rgb(252,169,30)"/><text x="52.7134%" y="495.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.27%)</title><rect x="52.4634%" y="533" width="0.2663%" height="15" fill="rgb(206,32,51)"/><text x="52.7134%" y="543.50"></text></g><g><title>dequeue_entity (2 samples, 0.27%)</title><rect x="52.4634%" y="517" width="0.2663%" height="15" fill="rgb(250,172,42)"/><text x="52.7134%" y="527.50"></text></g><g><title>update_curr (2 samples, 0.27%)</title><rect x="52.4634%" y="501" width="0.2663%" height="15" fill="rgb(209,34,43)"/><text x="52.7134%" y="511.50"></text></g><g><title>cpuacct_charge (1 samples, 0.13%)</title><rect x="52.5965%" y="485" width="0.1332%" height="15" fill="rgb(223,11,35)"/><text x="52.8465%" y="495.50"></text></g><g><title>finish_task_switch (2 samples, 0.27%)</title><rect x="52.7297%" y="533" width="0.2663%" height="15" fill="rgb(251,219,26)"/><text x="52.9797%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.27%)</title><rect x="52.7297%" y="517" width="0.2663%" height="15" fill="rgb(231,119,3)"/><text x="52.9797%" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.27%)</title><rect x="52.7297%" y="501" width="0.2663%" height="15" fill="rgb(216,97,11)"/><text x="52.9797%" y="511.50"></text></g><g><title>native_write_msr (2 samples, 0.27%)</title><rect x="52.7297%" y="485" width="0.2663%" height="15" fill="rgb(223,59,9)"/><text x="52.9797%" y="495.50"></text></g><g><title>psi_task_change (2 samples, 0.27%)</title><rect x="52.9960%" y="533" width="0.2663%" height="15" fill="rgb(233,93,31)"/><text x="53.2460%" y="543.50"></text></g><g><title>psi_group_change (2 samples, 0.27%)</title><rect x="52.9960%" y="517" width="0.2663%" height="15" fill="rgb(239,81,33)"/><text x="53.2460%" y="527.50"></text></g><g><title>psi_task_switch (2 samples, 0.27%)</title><rect x="53.2623%" y="533" width="0.2663%" height="15" fill="rgb(213,120,34)"/><text x="53.5123%" y="543.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.13%)</title><rect x="53.5286%" y="533" width="0.1332%" height="15" fill="rgb(243,49,53)"/><text x="53.7786%" y="543.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.27%)</title><rect x="53.6618%" y="533" width="0.2663%" height="15" fill="rgb(247,216,33)"/><text x="53.9118%" y="543.50"></text></g><g><title>sk_wait_data (20 samples, 2.66%)</title><rect x="51.3981%" y="613" width="2.6631%" height="15" fill="rgb(226,26,14)"/><text x="51.6481%" y="623.50">sk..</text></g><g><title>wait_woken (17 samples, 2.26%)</title><rect x="51.7976%" y="597" width="2.2636%" height="15" fill="rgb(215,49,53)"/><text x="52.0476%" y="607.50">w..</text></g><g><title>schedule_timeout (16 samples, 2.13%)</title><rect x="51.9308%" y="581" width="2.1305%" height="15" fill="rgb(245,162,40)"/><text x="52.1808%" y="591.50">s..</text></g><g><title>schedule (16 samples, 2.13%)</title><rect x="51.9308%" y="565" width="2.1305%" height="15" fill="rgb(229,68,17)"/><text x="52.1808%" y="575.50">s..</text></g><g><title>__schedule (15 samples, 2.00%)</title><rect x="52.0639%" y="549" width="1.9973%" height="15" fill="rgb(213,182,10)"/><text x="52.3139%" y="559.50">_..</text></g><g><title>update_rq_clock (1 samples, 0.13%)</title><rect x="53.9281%" y="533" width="0.1332%" height="15" fill="rgb(245,125,30)"/><text x="54.1781%" y="543.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.27%)</title><rect x="54.0613%" y="613" width="0.2663%" height="15" fill="rgb(232,202,2)"/><text x="54.3113%" y="623.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.27%)</title><rect x="54.0613%" y="597" width="0.2663%" height="15" fill="rgb(237,140,51)"/><text x="54.3113%" y="607.50"></text></g><g><title>do_syscall_64 (31 samples, 4.13%)</title><rect x="50.3329%" y="693" width="4.1278%" height="15" fill="rgb(236,157,25)"/><text x="50.5829%" y="703.50">do_s..</text></g><g><title>__x64_sys_recvfrom (31 samples, 4.13%)</title><rect x="50.3329%" y="677" width="4.1278%" height="15" fill="rgb(219,209,0)"/><text x="50.5829%" y="687.50">__x6..</text></g><g><title>__sys_recvfrom (31 samples, 4.13%)</title><rect x="50.3329%" y="661" width="4.1278%" height="15" fill="rgb(240,116,54)"/><text x="50.5829%" y="671.50">__sy..</text></g><g><title>inet_recvmsg (30 samples, 3.99%)</title><rect x="50.4660%" y="645" width="3.9947%" height="15" fill="rgb(216,10,36)"/><text x="50.7160%" y="655.50">inet..</text></g><g><title>tcp_recvmsg (30 samples, 3.99%)</title><rect x="50.4660%" y="629" width="3.9947%" height="15" fill="rgb(222,72,44)"/><text x="50.7160%" y="639.50">tcp_..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.13%)</title><rect x="54.3276%" y="613" width="0.1332%" height="15" fill="rgb(232,159,9)"/><text x="54.5776%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 4.26%)</title><rect x="50.3329%" y="709" width="4.2610%" height="15" fill="rgb(210,39,32)"/><text x="50.5829%" y="719.50">entry..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="54.4607%" y="693" width="0.1332%" height="15" fill="rgb(216,194,45)"/><text x="54.7107%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 4.66%)</title><rect x="50.0666%" y="805" width="4.6605%" height="15" fill="rgb(218,18,35)"/><text x="50.3166%" y="815.50">&lt;std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (35 samples, 4.66%)</title><rect x="50.0666%" y="789" width="4.6605%" height="15" fill="rgb(207,83,51)"/><text x="50.3166%" y="799.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read (35 samples, 4.66%)</title><rect x="50.0666%" y="773" width="4.6605%" height="15" fill="rgb(225,63,43)"/><text x="50.3166%" y="783.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read (35 samples, 4.66%)</title><rect x="50.0666%" y="757" width="4.6605%" height="15" fill="rgb(207,57,36)"/><text x="50.3166%" y="767.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (35 samples, 4.66%)</title><rect x="50.0666%" y="741" width="4.6605%" height="15" fill="rgb(216,99,33)"/><text x="50.3166%" y="751.50">std::..</text></g><g><title>__libc_recv (35 samples, 4.66%)</title><rect x="50.0666%" y="725" width="4.6605%" height="15" fill="rgb(225,42,16)"/><text x="50.3166%" y="735.50">__lib..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.13%)</title><rect x="54.5939%" y="709" width="0.1332%" height="15" fill="rgb(220,201,45)"/><text x="54.8439%" y="719.50"></text></g><g><title>__memset_avx2_erms (2 samples, 0.27%)</title><rect x="54.7270%" y="805" width="0.2663%" height="15" fill="rgb(225,33,4)"/><text x="54.9770%" y="815.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (38 samples, 5.06%)</title><rect x="50.0666%" y="821" width="5.0599%" height="15" fill="rgb(224,33,50)"/><text x="50.3166%" y="831.50">msql_s..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.13%)</title><rect x="54.9933%" y="805" width="0.1332%" height="15" fill="rgb(246,198,51)"/><text x="55.2433%" y="815.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="55.2597%" y="661" width="0.1332%" height="15" fill="rgb(205,22,4)"/><text x="55.5097%" y="671.50"></text></g><g><title>__sk_dst_check (1 samples, 0.13%)</title><rect x="56.0586%" y="581" width="0.1332%" height="15" fill="rgb(206,3,8)"/><text x="56.3086%" y="591.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.13%)</title><rect x="56.4581%" y="533" width="0.1332%" height="15" fill="rgb(251,23,15)"/><text x="56.7081%" y="543.50"></text></g><g><title>loopback_xmit (1 samples, 0.13%)</title><rect x="56.4581%" y="517" width="0.1332%" height="15" fill="rgb(252,88,28)"/><text x="56.7081%" y="527.50"></text></g><g><title>netif_rx (1 samples, 0.13%)</title><rect x="56.4581%" y="501" width="0.1332%" height="15" fill="rgb(212,127,14)"/><text x="56.7081%" y="511.50"></text></g><g><title>netif_rx_internal (1 samples, 0.13%)</title><rect x="56.4581%" y="485" width="0.1332%" height="15" fill="rgb(247,145,37)"/><text x="56.7081%" y="495.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.13%)</title><rect x="56.4581%" y="469" width="0.1332%" height="15" fill="rgb(209,117,53)"/><text x="56.7081%" y="479.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="56.4581%" y="453" width="0.1332%" height="15" fill="rgb(212,90,42)"/><text x="56.7081%" y="463.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="56.4581%" y="437" width="0.1332%" height="15" fill="rgb(218,164,37)"/><text x="56.7081%" y="447.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.40%)</title><rect x="56.5912%" y="533" width="0.3995%" height="15" fill="rgb(246,65,34)"/><text x="56.8412%" y="543.50"></text></g><g><title>netif_skb_features (1 samples, 0.13%)</title><rect x="56.8575%" y="517" width="0.1332%" height="15" fill="rgb(231,100,33)"/><text x="57.1075%" y="527.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.67%)</title><rect x="56.4581%" y="549" width="0.6658%" height="15" fill="rgb(228,126,14)"/><text x="56.7081%" y="559.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.13%)</title><rect x="56.9907%" y="533" width="0.1332%" height="15" fill="rgb(215,173,21)"/><text x="57.2407%" y="543.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.13%)</title><rect x="57.5233%" y="485" width="0.1332%" height="15" fill="rgb(210,6,40)"/><text x="57.7733%" y="495.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.13%)</title><rect x="57.5233%" y="469" width="0.1332%" height="15" fill="rgb(212,48,18)"/><text x="57.7733%" y="479.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="57.9228%" y="437" width="0.1332%" height="15" fill="rgb(230,214,11)"/><text x="58.1728%" y="447.50"></text></g><g><title>raw_local_deliver (1 samples, 0.13%)</title><rect x="58.4554%" y="373" width="0.1332%" height="15" fill="rgb(254,105,39)"/><text x="58.7054%" y="383.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="58.5885%" y="357" width="0.1332%" height="15" fill="rgb(245,158,5)"/><text x="58.8385%" y="367.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.13%)</title><rect x="58.7217%" y="357" width="0.1332%" height="15" fill="rgb(249,208,11)"/><text x="58.9717%" y="367.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="58.7217%" y="341" width="0.1332%" height="15" fill="rgb(210,39,28)"/><text x="58.9717%" y="351.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="58.8549%" y="325" width="0.1332%" height="15" fill="rgb(211,56,53)"/><text x="59.1049%" y="335.50"></text></g><g><title>mod_timer (1 samples, 0.13%)</title><rect x="58.8549%" y="309" width="0.1332%" height="15" fill="rgb(226,201,30)"/><text x="59.1049%" y="319.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="59.6538%" y="261" width="0.1332%" height="15" fill="rgb(239,101,34)"/><text x="59.9038%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="59.7870%" y="261" width="0.1332%" height="15" fill="rgb(226,209,5)"/><text x="60.0370%" y="271.50"></text></g><g><title>psi_task_change (3 samples, 0.40%)</title><rect x="59.9201%" y="245" width="0.3995%" height="15" fill="rgb(250,105,47)"/><text x="60.1701%" y="255.50"></text></g><g><title>psi_group_change (3 samples, 0.40%)</title><rect x="59.9201%" y="229" width="0.3995%" height="15" fill="rgb(230,72,3)"/><text x="60.1701%" y="239.50"></text></g><g><title>enqueue_task (4 samples, 0.53%)</title><rect x="59.9201%" y="261" width="0.5326%" height="15" fill="rgb(232,218,39)"/><text x="60.1701%" y="271.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.13%)</title><rect x="60.3196%" y="245" width="0.1332%" height="15" fill="rgb(248,166,6)"/><text x="60.5696%" y="255.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.40%)</title><rect x="60.4527%" y="261" width="0.3995%" height="15" fill="rgb(247,89,20)"/><text x="60.7027%" y="271.50"></text></g><g><title>enqueue_entity (1 samples, 0.13%)</title><rect x="60.7190%" y="245" width="0.1332%" height="15" fill="rgb(248,130,54)"/><text x="60.9690%" y="255.50"></text></g><g><title>update_load_avg (1 samples, 0.13%)</title><rect x="60.7190%" y="229" width="0.1332%" height="15" fill="rgb(234,196,4)"/><text x="60.9690%" y="239.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.13%)</title><rect x="60.7190%" y="213" width="0.1332%" height="15" fill="rgb(250,143,31)"/><text x="60.9690%" y="223.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="60.8522%" y="261" width="0.1332%" height="15" fill="rgb(211,110,34)"/><text x="61.1022%" y="271.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.27%)</title><rect x="60.9854%" y="261" width="0.2663%" height="15" fill="rgb(215,124,48)"/><text x="61.2354%" y="271.50"></text></g><g><title>__wake_up_common (18 samples, 2.40%)</title><rect x="59.1212%" y="293" width="2.3968%" height="15" fill="rgb(216,46,13)"/><text x="59.3712%" y="303.50">__..</text></g><g><title>try_to_wake_up (18 samples, 2.40%)</title><rect x="59.1212%" y="277" width="2.3968%" height="15" fill="rgb(205,184,25)"/><text x="59.3712%" y="287.50">tr..</text></g><g><title>update_rq_clock (2 samples, 0.27%)</title><rect x="61.2517%" y="261" width="0.2663%" height="15" fill="rgb(228,1,10)"/><text x="61.5017%" y="271.50"></text></g><g><title>sock_def_readable (21 samples, 2.80%)</title><rect x="58.9880%" y="325" width="2.7963%" height="15" fill="rgb(213,116,27)"/><text x="59.2380%" y="335.50">so..</text></g><g><title>__wake_up_common_lock (20 samples, 2.66%)</title><rect x="59.1212%" y="309" width="2.6631%" height="15" fill="rgb(241,95,50)"/><text x="59.3712%" y="319.50">__..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.27%)</title><rect x="61.5180%" y="293" width="0.2663%" height="15" fill="rgb(238,48,32)"/><text x="61.7680%" y="303.50"></text></g><g><title>kfree (1 samples, 0.13%)</title><rect x="62.0506%" y="293" width="0.1332%" height="15" fill="rgb(235,113,49)"/><text x="62.3006%" y="303.50"></text></g><g><title>__slab_free (1 samples, 0.13%)</title><rect x="62.0506%" y="277" width="0.1332%" height="15" fill="rgb(205,127,43)"/><text x="62.3006%" y="287.50"></text></g><g><title>__kfree_skb (3 samples, 0.40%)</title><rect x="62.0506%" y="309" width="0.3995%" height="15" fill="rgb(250,162,2)"/><text x="62.3006%" y="319.50"></text></g><g><title>skb_release_data (2 samples, 0.27%)</title><rect x="62.1838%" y="293" width="0.2663%" height="15" fill="rgb(220,13,41)"/><text x="62.4338%" y="303.50"></text></g><g><title>bictcp_acked (1 samples, 0.13%)</title><rect x="62.4501%" y="309" width="0.1332%" height="15" fill="rgb(249,221,25)"/><text x="62.7001%" y="319.50"></text></g><g><title>tcp_ack (7 samples, 0.93%)</title><rect x="61.7843%" y="325" width="0.9321%" height="15" fill="rgb(215,208,19)"/><text x="62.0343%" y="335.50"></text></g><g><title>kmem_cache_free (1 samples, 0.13%)</title><rect x="62.5832%" y="309" width="0.1332%" height="15" fill="rgb(236,175,2)"/><text x="62.8332%" y="319.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.13%)</title><rect x="62.7164%" y="325" width="0.1332%" height="15" fill="rgb(241,52,2)"/><text x="62.9664%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (38 samples, 5.06%)</title><rect x="57.9228%" y="453" width="5.0599%" height="15" fill="rgb(248,140,14)"/><text x="58.1728%" y="463.50">__neti..</text></g><g><title>ip_rcv (37 samples, 4.93%)</title><rect x="58.0559%" y="437" width="4.9268%" height="15" fill="rgb(253,22,42)"/><text x="58.3059%" y="447.50">ip_rcv</text></g><g><title>ip_local_deliver (37 samples, 4.93%)</title><rect x="58.0559%" y="421" width="4.9268%" height="15" fill="rgb(234,61,47)"/><text x="58.3059%" y="431.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (37 samples, 4.93%)</title><rect x="58.0559%" y="405" width="4.9268%" height="15" fill="rgb(208,226,15)"/><text x="58.3059%" y="415.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (36 samples, 4.79%)</title><rect x="58.1891%" y="389" width="4.7936%" height="15" fill="rgb(217,221,4)"/><text x="58.4391%" y="399.50">ip_pro..</text></g><g><title>tcp_v4_rcv (33 samples, 4.39%)</title><rect x="58.5885%" y="373" width="4.3941%" height="15" fill="rgb(212,174,34)"/><text x="58.8385%" y="383.50">tcp_v..</text></g><g><title>tcp_v4_do_rcv (31 samples, 4.13%)</title><rect x="58.8549%" y="357" width="4.1278%" height="15" fill="rgb(253,83,4)"/><text x="59.1049%" y="367.50">tcp_..</text></g><g><title>tcp_rcv_established (31 samples, 4.13%)</title><rect x="58.8549%" y="341" width="4.1278%" height="15" fill="rgb(250,195,49)"/><text x="59.1049%" y="351.50">tcp_..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.13%)</title><rect x="62.8495%" y="325" width="0.1332%" height="15" fill="rgb(241,192,25)"/><text x="63.0995%" y="335.50"></text></g><g><title>do_softirq (45 samples, 5.99%)</title><rect x="57.2570%" y="533" width="5.9920%" height="15" fill="rgb(208,124,10)"/><text x="57.5070%" y="543.50">do_softi..</text></g><g><title>do_softirq_own_stack (43 samples, 5.73%)</title><rect x="57.5233%" y="517" width="5.7257%" height="15" fill="rgb(222,33,0)"/><text x="57.7733%" y="527.50">do_soft..</text></g><g><title>__do_softirq (43 samples, 5.73%)</title><rect x="57.5233%" y="501" width="5.7257%" height="15" fill="rgb(234,209,28)"/><text x="57.7733%" y="511.50">__do_so..</text></g><g><title>net_rx_action (42 samples, 5.59%)</title><rect x="57.6565%" y="485" width="5.5925%" height="15" fill="rgb(224,11,23)"/><text x="57.9065%" y="495.50">net_rx_..</text></g><g><title>process_backlog (40 samples, 5.33%)</title><rect x="57.9228%" y="469" width="5.3262%" height="15" fill="rgb(232,99,1)"/><text x="58.1728%" y="479.50">process..</text></g><g><title>_raw_spin_lock (2 samples, 0.27%)</title><rect x="62.9827%" y="453" width="0.2663%" height="15" fill="rgb(237,95,45)"/><text x="63.2327%" y="463.50"></text></g><g><title>__local_bh_enable_ip (47 samples, 6.26%)</title><rect x="57.1238%" y="549" width="6.2583%" height="15" fill="rgb(208,109,11)"/><text x="57.3738%" y="559.50">__local_..</text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="63.2490%" y="533" width="0.1332%" height="15" fill="rgb(216,190,48)"/><text x="63.4990%" y="543.50"></text></g><g><title>ip_finish_output2 (54 samples, 7.19%)</title><rect x="56.3249%" y="565" width="7.1904%" height="15" fill="rgb(251,171,36)"/><text x="56.5749%" y="575.50">ip_finish_..</text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="63.3822%" y="549" width="0.1332%" height="15" fill="rgb(230,62,22)"/><text x="63.6322%" y="559.50"></text></g><g><title>__ip_queue_xmit (58 samples, 7.72%)</title><rect x="55.9254%" y="597" width="7.7230%" height="15" fill="rgb(225,114,35)"/><text x="56.1754%" y="607.50">__ip_queue_..</text></g><g><title>ip_output (56 samples, 7.46%)</title><rect x="56.1917%" y="581" width="7.4567%" height="15" fill="rgb(215,118,42)"/><text x="56.4417%" y="591.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.13%)</title><rect x="63.5153%" y="565" width="0.1332%" height="15" fill="rgb(243,119,21)"/><text x="63.7653%" y="575.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="63.5153%" y="549" width="0.1332%" height="15" fill="rgb(252,177,53)"/><text x="63.7653%" y="559.50"></text></g><g><title>__tcp_transmit_skb (60 samples, 7.99%)</title><rect x="55.7923%" y="613" width="7.9893%" height="15" fill="rgb(237,209,29)"/><text x="56.0423%" y="623.50">__tcp_trans..</text></g><g><title>tcp_established_options (1 samples, 0.13%)</title><rect x="63.6485%" y="597" width="0.1332%" height="15" fill="rgb(212,65,23)"/><text x="63.8985%" y="607.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.13%)</title><rect x="63.7816%" y="613" width="0.1332%" height="15" fill="rgb(230,222,46)"/><text x="64.0316%" y="623.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="63.7816%" y="597" width="0.1332%" height="15" fill="rgb(215,135,32)"/><text x="64.0316%" y="607.50"></text></g><g><title>__mod_timer (1 samples, 0.13%)</title><rect x="63.7816%" y="581" width="0.1332%" height="15" fill="rgb(246,101,22)"/><text x="64.0316%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (64 samples, 8.52%)</title><rect x="55.5260%" y="645" width="8.5220%" height="15" fill="rgb(206,107,13)"/><text x="55.7760%" y="655.50">__tcp_push_p..</text></g><g><title>tcp_write_xmit (64 samples, 8.52%)</title><rect x="55.5260%" y="629" width="8.5220%" height="15" fill="rgb(250,100,44)"/><text x="55.7760%" y="639.50">tcp_write_xm..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.13%)</title><rect x="63.9148%" y="613" width="0.1332%" height="15" fill="rgb(231,147,38)"/><text x="64.1648%" y="623.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="63.9148%" y="597" width="0.1332%" height="15" fill="rgb(229,8,40)"/><text x="64.1648%" y="607.50"></text></g><g><title>__mod_timer (1 samples, 0.13%)</title><rect x="63.9148%" y="581" width="0.1332%" height="15" fill="rgb(221,135,30)"/><text x="64.1648%" y="591.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.13%)</title><rect x="64.0479%" y="645" width="0.1332%" height="15" fill="rgb(249,193,18)"/><text x="64.2979%" y="655.50"></text></g><g><title>__alloc_skb (1 samples, 0.13%)</title><rect x="64.0479%" y="629" width="0.1332%" height="15" fill="rgb(209,133,39)"/><text x="64.2979%" y="639.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="64.0479%" y="613" width="0.1332%" height="15" fill="rgb(232,100,14)"/><text x="64.2979%" y="623.50"></text></g><g><title>sock_sendmsg (69 samples, 9.19%)</title><rect x="55.2597%" y="693" width="9.1877%" height="15" fill="rgb(224,185,1)"/><text x="55.5097%" y="703.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (69 samples, 9.19%)</title><rect x="55.2597%" y="677" width="9.1877%" height="15" fill="rgb(223,139,8)"/><text x="55.5097%" y="687.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (68 samples, 9.05%)</title><rect x="55.3928%" y="661" width="9.0546%" height="15" fill="rgb(232,213,38)"/><text x="55.6428%" y="671.50">tcp_sendmsg_l..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.27%)</title><rect x="64.1811%" y="645" width="0.2663%" height="15" fill="rgb(207,94,22)"/><text x="64.4311%" y="655.50"></text></g><g><title>__x64_sys_sendto (71 samples, 9.45%)</title><rect x="55.1265%" y="725" width="9.4541%" height="15" fill="rgb(219,183,54)"/><text x="55.3765%" y="735.50">__x64_sys_send..</text></g><g><title>__sys_sendto (71 samples, 9.45%)</title><rect x="55.1265%" y="709" width="9.4541%" height="15" fill="rgb(216,185,54)"/><text x="55.3765%" y="719.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="64.4474%" y="693" width="0.1332%" height="15" fill="rgb(254,217,39)"/><text x="64.6974%" y="703.50"></text></g><g><title>__fget_light (1 samples, 0.13%)</title><rect x="64.4474%" y="677" width="0.1332%" height="15" fill="rgb(240,178,23)"/><text x="64.6974%" y="687.50"></text></g><g><title>__fget_files (1 samples, 0.13%)</title><rect x="64.4474%" y="661" width="0.1332%" height="15" fill="rgb(218,11,47)"/><text x="64.6974%" y="671.50"></text></g><g><title>do_syscall_64 (72 samples, 9.59%)</title><rect x="55.1265%" y="741" width="9.5872%" height="15" fill="rgb(218,51,51)"/><text x="55.3765%" y="751.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="64.5806%" y="725" width="0.1332%" height="15" fill="rgb(238,126,27)"/><text x="64.8306%" y="735.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.13%)</title><rect x="64.5806%" y="709" width="0.1332%" height="15" fill="rgb(249,202,22)"/><text x="64.8306%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (75 samples, 9.99%)</title><rect x="55.1265%" y="757" width="9.9867%" height="15" fill="rgb(254,195,49)"/><text x="55.3765%" y="767.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.40%)</title><rect x="64.7137%" y="741" width="0.3995%" height="15" fill="rgb(208,123,14)"/><text x="64.9637%" y="751.50"></text></g><g><title>__GI___clone (236 samples, 31.42%)</title><rect x="33.8216%" y="965" width="31.4248%" height="15" fill="rgb(224,200,8)"/><text x="34.0716%" y="975.50">__GI___clone</text></g><g><title>start_thread (236 samples, 31.42%)</title><rect x="33.8216%" y="949" width="31.4248%" height="15" fill="rgb(217,61,36)"/><text x="34.0716%" y="959.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (236 samples, 31.42%)</title><rect x="33.8216%" y="933" width="31.4248%" height="15" fill="rgb(206,35,45)"/><text x="34.0716%" y="943.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (236 samples, 31.42%)</title><rect x="33.8216%" y="917" width="31.4248%" height="15" fill="rgb(217,65,33)"/><text x="34.0716%" y="927.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (236 samples, 31.42%)</title><rect x="33.8216%" y="901" width="31.4248%" height="15" fill="rgb(222,158,48)"/><text x="34.0716%" y="911.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (236 samples, 31.42%)</title><rect x="33.8216%" y="885" width="31.4248%" height="15" fill="rgb(254,2,54)"/><text x="34.0716%" y="895.50">core::ops::function::FnOnce::call_once{{vtable-shim..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (236 samples, 31.42%)</title><rect x="33.8216%" y="869" width="31.4248%" height="15" fill="rgb(250,143,38)"/><text x="34.0716%" y="879.50">std::sys_common::backtrace::__rust_begin_short_back..</text></g><g><title>decor::Shim::run_on_tcp (236 samples, 31.42%)</title><rect x="33.8216%" y="853" width="31.4248%" height="15" fill="rgb(248,25,0)"/><text x="34.0716%" y="863.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (236 samples, 31.42%)</title><rect x="33.8216%" y="837" width="31.4248%" height="15" fill="rgb(206,152,27)"/><text x="34.0716%" y="847.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (76 samples, 10.12%)</title><rect x="55.1265%" y="821" width="10.1198%" height="15" fill="rgb(240,77,30)"/><text x="55.3765%" y="831.50">std::io::buffer..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (76 samples, 10.12%)</title><rect x="55.1265%" y="805" width="10.1198%" height="15" fill="rgb(231,5,3)"/><text x="55.3765%" y="815.50">&lt;std::net::tcp:..</text></g><g><title>std::sys_common::net::TcpStream::write (76 samples, 10.12%)</title><rect x="55.1265%" y="789" width="10.1198%" height="15" fill="rgb(207,226,32)"/><text x="55.3765%" y="799.50">std::sys_common..</text></g><g><title>__libc_send (76 samples, 10.12%)</title><rect x="55.1265%" y="773" width="10.1198%" height="15" fill="rgb(222,207,47)"/><text x="55.3765%" y="783.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.13%)</title><rect x="65.1132%" y="757" width="0.1332%" height="15" fill="rgb(229,115,45)"/><text x="65.3632%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="65.2463%" y="789" width="0.1332%" height="15" fill="rgb(224,191,6)"/><text x="65.4963%" y="799.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.27%)</title><rect x="65.3795%" y="789" width="0.2663%" height="15" fill="rgb(230,227,24)"/><text x="65.6295%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.27%)</title><rect x="65.3795%" y="773" width="0.2663%" height="15" fill="rgb(228,80,19)"/><text x="65.6295%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="65.5126%" y="757" width="0.1332%" height="15" fill="rgb(247,229,0)"/><text x="65.7626%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.13%)</title><rect x="65.5126%" y="741" width="0.1332%" height="15" fill="rgb(237,194,15)"/><text x="65.7626%" y="751.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.13%)</title><rect x="65.5126%" y="725" width="0.1332%" height="15" fill="rgb(219,203,20)"/><text x="65.7626%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="65.5126%" y="709" width="0.1332%" height="15" fill="rgb(234,128,8)"/><text x="65.7626%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.13%)</title><rect x="65.5126%" y="693" width="0.1332%" height="15" fill="rgb(248,202,8)"/><text x="65.7626%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.13%)</title><rect x="65.5126%" y="677" width="0.1332%" height="15" fill="rgb(206,104,37)"/><text x="65.7626%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.13%)</title><rect x="65.5126%" y="661" width="0.1332%" height="15" fill="rgb(223,8,27)"/><text x="65.7626%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.13%)</title><rect x="65.5126%" y="645" width="0.1332%" height="15" fill="rgb(216,217,28)"/><text x="65.7626%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.13%)</title><rect x="65.5126%" y="629" width="0.1332%" height="15" fill="rgb(249,199,1)"/><text x="65.7626%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.13%)</title><rect x="65.5126%" y="613" width="0.1332%" height="15" fill="rgb(240,85,17)"/><text x="65.7626%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="65.5126%" y="597" width="0.1332%" height="15" fill="rgb(206,108,45)"/><text x="65.7626%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (6 samples, 0.80%)</title><rect x="65.6458%" y="709" width="0.7989%" height="15" fill="rgb(245,210,41)"/><text x="65.8958%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (6 samples, 0.80%)</title><rect x="65.6458%" y="693" width="0.7989%" height="15" fill="rgb(206,13,37)"/><text x="65.8958%" y="703.50"></text></g><g><title>__GI___sysconf (1 samples, 0.13%)</title><rect x="66.4447%" y="709" width="0.1332%" height="15" fill="rgb(250,61,18)"/><text x="66.6947%" y="719.50"></text></g><g><title>__GI___get_nprocs_conf (1 samples, 0.13%)</title><rect x="66.4447%" y="693" width="0.1332%" height="15" fill="rgb(235,172,48)"/><text x="66.6947%" y="703.50"></text></g><g><title>__readdir64 (1 samples, 0.13%)</title><rect x="66.4447%" y="677" width="0.1332%" height="15" fill="rgb(249,201,17)"/><text x="66.6947%" y="687.50"></text></g><g><title>__GI___getdents64 (1 samples, 0.13%)</title><rect x="66.4447%" y="661" width="0.1332%" height="15" fill="rgb(219,208,6)"/><text x="66.6947%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="66.4447%" y="645" width="0.1332%" height="15" fill="rgb(248,31,23)"/><text x="66.6947%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="66.4447%" y="629" width="0.1332%" height="15" fill="rgb(245,15,42)"/><text x="66.6947%" y="639.50"></text></g><g><title>__x64_sys_getdents64 (1 samples, 0.13%)</title><rect x="66.4447%" y="613" width="0.1332%" height="15" fill="rgb(222,217,39)"/><text x="66.6947%" y="623.50"></text></g><g><title>ksys_getdents64 (1 samples, 0.13%)</title><rect x="66.4447%" y="597" width="0.1332%" height="15" fill="rgb(210,219,27)"/><text x="66.6947%" y="607.50"></text></g><g><title>iterate_dir (1 samples, 0.13%)</title><rect x="66.4447%" y="581" width="0.1332%" height="15" fill="rgb(252,166,36)"/><text x="66.6947%" y="591.50"></text></g><g><title>kernfs_fop_readdir (1 samples, 0.13%)</title><rect x="66.4447%" y="565" width="0.1332%" height="15" fill="rgb(245,132,34)"/><text x="66.6947%" y="575.50"></text></g><g><title>filldir64 (1 samples, 0.13%)</title><rect x="66.4447%" y="549" width="0.1332%" height="15" fill="rgb(236,54,3)"/><text x="66.6947%" y="559.50"></text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="66.5779%" y="693" width="0.1332%" height="15" fill="rgb(241,173,43)"/><text x="66.8279%" y="703.50"></text></g><g><title>__perf_event_task_sched_in (234 samples, 31.16%)</title><rect x="66.8442%" y="501" width="31.1585%" height="15" fill="rgb(215,190,9)"/><text x="67.0942%" y="511.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (233 samples, 31.03%)</title><rect x="66.9774%" y="485" width="31.0253%" height="15" fill="rgb(242,101,16)"/><text x="67.2274%" y="495.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (232 samples, 30.89%)</title><rect x="67.1105%" y="469" width="30.8921%" height="15" fill="rgb(223,190,21)"/><text x="67.3605%" y="479.50">native_write_msr</text></g><g><title>do_syscall_64 (235 samples, 31.29%)</title><rect x="66.8442%" y="661" width="31.2916%" height="15" fill="rgb(215,228,25)"/><text x="67.0942%" y="671.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 31.29%)</title><rect x="66.8442%" y="645" width="31.2916%" height="15" fill="rgb(225,36,22)"/><text x="67.0942%" y="655.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 31.29%)</title><rect x="66.8442%" y="629" width="31.2916%" height="15" fill="rgb(251,106,46)"/><text x="67.0942%" y="639.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 31.29%)</title><rect x="66.8442%" y="613" width="31.2916%" height="15" fill="rgb(208,90,1)"/><text x="67.0942%" y="623.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 31.29%)</title><rect x="66.8442%" y="597" width="31.2916%" height="15" fill="rgb(243,10,4)"/><text x="67.0942%" y="607.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 31.29%)</title><rect x="66.8442%" y="581" width="31.2916%" height="15" fill="rgb(212,137,27)"/><text x="67.0942%" y="591.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 31.29%)</title><rect x="66.8442%" y="565" width="31.2916%" height="15" fill="rgb(231,220,49)"/><text x="67.0942%" y="575.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 31.29%)</title><rect x="66.8442%" y="549" width="31.2916%" height="15" fill="rgb(237,96,20)"/><text x="67.0942%" y="559.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 31.29%)</title><rect x="66.8442%" y="533" width="31.2916%" height="15" fill="rgb(239,229,30)"/><text x="67.0942%" y="543.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 31.29%)</title><rect x="66.8442%" y="517" width="31.2916%" height="15" fill="rgb(219,65,33)"/><text x="67.0942%" y="527.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.13%)</title><rect x="98.0027%" y="501" width="0.1332%" height="15" fill="rgb(243,134,7)"/><text x="98.2527%" y="511.50"></text></g><g><title>hwloc::Topology::new (246 samples, 32.76%)</title><rect x="65.6458%" y="789" width="32.7563%" height="15" fill="rgb(216,177,54)"/><text x="65.8958%" y="799.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (246 samples, 32.76%)</title><rect x="65.6458%" y="773" width="32.7563%" height="15" fill="rgb(211,160,20)"/><text x="65.8958%" y="783.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 32.76%)</title><rect x="65.6458%" y="757" width="32.7563%" height="15" fill="rgb(239,85,39)"/><text x="65.8958%" y="767.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 32.76%)</title><rect x="65.6458%" y="741" width="32.7563%" height="15" fill="rgb(232,125,22)"/><text x="65.8958%" y="751.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 32.76%)</title><rect x="65.6458%" y="725" width="32.7563%" height="15" fill="rgb(244,57,34)"/><text x="65.8958%" y="735.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (239 samples, 31.82%)</title><rect x="66.5779%" y="709" width="31.8242%" height="15" fill="rgb(214,203,32)"/><text x="66.8279%" y="719.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (238 samples, 31.69%)</title><rect x="66.7111%" y="693" width="31.6911%" height="15" fill="rgb(207,58,43)"/><text x="66.9611%" y="703.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (237 samples, 31.56%)</title><rect x="66.8442%" y="677" width="31.5579%" height="15" fill="rgb(215,193,15)"/><text x="67.0942%" y="687.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.27%)</title><rect x="98.1358%" y="661" width="0.2663%" height="15" fill="rgb(232,15,44)"/><text x="98.3858%" y="671.50"></text></g><g><title>switch_fpu_return (2 samples, 0.27%)</title><rect x="98.1358%" y="645" width="0.2663%" height="15" fill="rgb(212,3,48)"/><text x="98.3858%" y="655.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.13%)</title><rect x="98.2690%" y="629" width="0.1332%" height="15" fill="rgb(218,128,7)"/><text x="98.5190%" y="639.50"></text></g><g><title>__libc_start_main (250 samples, 33.29%)</title><rect x="65.2463%" y="949" width="33.2889%" height="15" fill="rgb(226,216,39)"/><text x="65.4963%" y="959.50">__libc_start_main</text></g><g><title>main (250 samples, 33.29%)</title><rect x="65.2463%" y="933" width="33.2889%" height="15" fill="rgb(243,47,51)"/><text x="65.4963%" y="943.50">main</text></g><g><title>std::rt::lang_start_internal (250 samples, 33.29%)</title><rect x="65.2463%" y="917" width="33.2889%" height="15" fill="rgb(241,183,40)"/><text x="65.4963%" y="927.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (250 samples, 33.29%)</title><rect x="65.2463%" y="901" width="33.2889%" height="15" fill="rgb(231,217,32)"/><text x="65.4963%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (250 samples, 33.29%)</title><rect x="65.2463%" y="885" width="33.2889%" height="15" fill="rgb(229,61,38)"/><text x="65.4963%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (250 samples, 33.29%)</title><rect x="65.2463%" y="869" width="33.2889%" height="15" fill="rgb(225,210,5)"/><text x="65.4963%" y="879.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (250 samples, 33.29%)</title><rect x="65.2463%" y="853" width="33.2889%" height="15" fill="rgb(231,79,45)"/><text x="65.4963%" y="863.50">core::ops::function::impls::&lt;impl core::ops::function:..</text></g><g><title>std::rt::lang_start::_{{closure}} (250 samples, 33.29%)</title><rect x="65.2463%" y="837" width="33.2889%" height="15" fill="rgb(224,100,7)"/><text x="65.4963%" y="847.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (250 samples, 33.29%)</title><rect x="65.2463%" y="821" width="33.2889%" height="15" fill="rgb(241,198,18)"/><text x="65.4963%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtra..</text></g><g><title>lobsters::main (250 samples, 33.29%)</title><rect x="65.2463%" y="805" width="33.2889%" height="15" fill="rgb(252,97,53)"/><text x="65.4963%" y="815.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.13%)</title><rect x="98.4021%" y="789" width="0.1332%" height="15" fill="rgb(220,88,7)"/><text x="98.6521%" y="799.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.13%)</title><rect x="98.4021%" y="773" width="0.1332%" height="15" fill="rgb(213,176,14)"/><text x="98.6521%" y="783.50"></text></g><g><title>__bind (1 samples, 0.13%)</title><rect x="98.4021%" y="757" width="0.1332%" height="15" fill="rgb(246,73,7)"/><text x="98.6521%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="98.4021%" y="741" width="0.1332%" height="15" fill="rgb(245,64,36)"/><text x="98.6521%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="98.4021%" y="725" width="0.1332%" height="15" fill="rgb(245,80,10)"/><text x="98.6521%" y="735.50"></text></g><g><title>__x64_sys_bind (1 samples, 0.13%)</title><rect x="98.4021%" y="709" width="0.1332%" height="15" fill="rgb(232,107,50)"/><text x="98.6521%" y="719.50"></text></g><g><title>_start (251 samples, 33.42%)</title><rect x="65.2463%" y="965" width="33.4221%" height="15" fill="rgb(253,3,0)"/><text x="65.4963%" y="975.50">_start</text></g><g><title>_dl_start (1 samples, 0.13%)</title><rect x="98.5353%" y="949" width="0.1332%" height="15" fill="rgb(212,99,53)"/><text x="98.7853%" y="959.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.13%)</title><rect x="98.5353%" y="933" width="0.1332%" height="15" fill="rgb(249,111,54)"/><text x="98.7853%" y="943.50"></text></g><g><title>dl_main (1 samples, 0.13%)</title><rect x="98.5353%" y="917" width="0.1332%" height="15" fill="rgb(249,55,30)"/><text x="98.7853%" y="927.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.13%)</title><rect x="98.5353%" y="901" width="0.1332%" height="15" fill="rgb(237,47,42)"/><text x="98.7853%" y="911.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.13%)</title><rect x="98.5353%" y="885" width="0.1332%" height="15" fill="rgb(211,20,18)"/><text x="98.7853%" y="895.50"></text></g><g><title>openaux (1 samples, 0.13%)</title><rect x="98.5353%" y="869" width="0.1332%" height="15" fill="rgb(231,203,46)"/><text x="98.7853%" y="879.50"></text></g><g><title>_dl_map_object (1 samples, 0.13%)</title><rect x="98.5353%" y="853" width="0.1332%" height="15" fill="rgb(237,142,3)"/><text x="98.7853%" y="863.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.13%)</title><rect x="98.5353%" y="837" width="0.1332%" height="15" fill="rgb(241,107,1)"/><text x="98.7853%" y="847.50"></text></g><g><title>__GI___fxstat (1 samples, 0.13%)</title><rect x="98.5353%" y="821" width="0.1332%" height="15" fill="rgb(229,83,13)"/><text x="98.7853%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="98.5353%" y="805" width="0.1332%" height="15" fill="rgb(241,91,40)"/><text x="98.7853%" y="815.50"></text></g><g><title>[vmlinux] (1 samples, 0.13%)</title><rect x="98.9348%" y="933" width="0.1332%" height="15" fill="rgb(225,3,45)"/><text x="99.1848%" y="943.50"></text></g><g><title>do_group_exit (1 samples, 0.13%)</title><rect x="98.9348%" y="917" width="0.1332%" height="15" fill="rgb(244,223,14)"/><text x="99.1848%" y="927.50"></text></g><g><title>do_exit (1 samples, 0.13%)</title><rect x="98.9348%" y="901" width="0.1332%" height="15" fill="rgb(224,124,37)"/><text x="99.1848%" y="911.50"></text></g><g><title>mmput (1 samples, 0.13%)</title><rect x="98.9348%" y="885" width="0.1332%" height="15" fill="rgb(251,171,30)"/><text x="99.1848%" y="895.50"></text></g><g><title>exit_mmap (1 samples, 0.13%)</title><rect x="98.9348%" y="869" width="0.1332%" height="15" fill="rgb(236,46,54)"/><text x="99.1848%" y="879.50"></text></g><g><title>unmap_vmas (1 samples, 0.13%)</title><rect x="98.9348%" y="853" width="0.1332%" height="15" fill="rgb(245,213,5)"/><text x="99.1848%" y="863.50"></text></g><g><title>unmap_page_range (1 samples, 0.13%)</title><rect x="98.9348%" y="837" width="0.1332%" height="15" fill="rgb(230,144,27)"/><text x="99.1848%" y="847.50"></text></g><g><title>lobsters (745 samples, 99.20%)</title><rect x="0.0000%" y="981" width="99.2011%" height="15" fill="rgb(220,86,6)"/><text x="0.2500%" y="991.50">lobsters</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.53%)</title><rect x="98.6684%" y="965" width="0.5326%" height="15" fill="rgb(240,20,13)"/><text x="98.9184%" y="975.50"></text></g><g><title>do_syscall_64 (2 samples, 0.27%)</title><rect x="98.9348%" y="949" width="0.2663%" height="15" fill="rgb(217,89,34)"/><text x="99.1848%" y="959.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.13%)</title><rect x="99.0679%" y="933" width="0.1332%" height="15" fill="rgb(229,13,5)"/><text x="99.3179%" y="943.50"></text></g><g><title>do_execve (1 samples, 0.13%)</title><rect x="99.0679%" y="917" width="0.1332%" height="15" fill="rgb(244,67,35)"/><text x="99.3179%" y="927.50"></text></g><g><title>__do_execve_file (1 samples, 0.13%)</title><rect x="99.0679%" y="901" width="0.1332%" height="15" fill="rgb(221,40,2)"/><text x="99.3179%" y="911.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.13%)</title><rect x="99.0679%" y="885" width="0.1332%" height="15" fill="rgb(237,157,21)"/><text x="99.3179%" y="895.50"></text></g><g><title>load_elf_binary (1 samples, 0.13%)</title><rect x="99.0679%" y="869" width="0.1332%" height="15" fill="rgb(222,94,11)"/><text x="99.3179%" y="879.50"></text></g><g><title>__clear_user (1 samples, 0.13%)</title><rect x="99.0679%" y="853" width="0.1332%" height="15" fill="rgb(249,113,6)"/><text x="99.3179%" y="863.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="99.0679%" y="837" width="0.1332%" height="15" fill="rgb(238,137,36)"/><text x="99.3179%" y="847.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="99.0679%" y="821" width="0.1332%" height="15" fill="rgb(210,102,26)"/><text x="99.3179%" y="831.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="99.0679%" y="805" width="0.1332%" height="15" fill="rgb(218,30,30)"/><text x="99.3179%" y="815.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.13%)</title><rect x="99.0679%" y="789" width="0.1332%" height="15" fill="rgb(214,67,26)"/><text x="99.3179%" y="799.50"></text></g><g><title>__do_fault (1 samples, 0.13%)</title><rect x="99.0679%" y="773" width="0.1332%" height="15" fill="rgb(251,9,53)"/><text x="99.3179%" y="783.50"></text></g><g><title>[[ext4]] (1 samples, 0.13%)</title><rect x="99.0679%" y="757" width="0.1332%" height="15" fill="rgb(228,204,25)"/><text x="99.3179%" y="767.50"></text></g><g><title>down_read (1 samples, 0.13%)</title><rect x="99.0679%" y="741" width="0.1332%" height="15" fill="rgb(207,153,8)"/><text x="99.3179%" y="751.50"></text></g><g><title>all (751 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(242,9,16)"/><text x="0.2500%" y="1007.50"></text></g><g><title>perf (6 samples, 0.80%)</title><rect x="99.2011%" y="981" width="0.7989%" height="15" fill="rgb(217,211,10)"/><text x="99.4511%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.80%)</title><rect x="99.2011%" y="965" width="0.7989%" height="15" fill="rgb(219,228,52)"/><text x="99.4511%" y="975.50"></text></g><g><title>do_syscall_64 (6 samples, 0.80%)</title><rect x="99.2011%" y="949" width="0.7989%" height="15" fill="rgb(231,92,29)"/><text x="99.4511%" y="959.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.80%)</title><rect x="99.2011%" y="933" width="0.7989%" height="15" fill="rgb(232,8,23)"/><text x="99.4511%" y="943.50"></text></g><g><title>do_execve (6 samples, 0.80%)</title><rect x="99.2011%" y="917" width="0.7989%" height="15" fill="rgb(216,211,34)"/><text x="99.4511%" y="927.50"></text></g><g><title>__do_execve_file (6 samples, 0.80%)</title><rect x="99.2011%" y="901" width="0.7989%" height="15" fill="rgb(236,151,0)"/><text x="99.4511%" y="911.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.80%)</title><rect x="99.2011%" y="885" width="0.7989%" height="15" fill="rgb(209,168,3)"/><text x="99.4511%" y="895.50"></text></g><g><title>load_elf_binary (6 samples, 0.80%)</title><rect x="99.2011%" y="869" width="0.7989%" height="15" fill="rgb(208,129,28)"/><text x="99.4511%" y="879.50"></text></g><g><title>setup_new_exec (6 samples, 0.80%)</title><rect x="99.2011%" y="853" width="0.7989%" height="15" fill="rgb(229,78,22)"/><text x="99.4511%" y="863.50"></text></g><g><title>perf_event_exec (6 samples, 0.80%)</title><rect x="99.2011%" y="837" width="0.7989%" height="15" fill="rgb(228,187,13)"/><text x="99.4511%" y="847.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.67%)</title><rect x="99.3342%" y="821" width="0.6658%" height="15" fill="rgb(240,119,24)"/><text x="99.5842%" y="831.50"></text></g><g><title>native_write_msr (5 samples, 0.67%)</title><rect x="99.3342%" y="805" width="0.6658%" height="15" fill="rgb(209,194,42)"/><text x="99.5842%" y="815.50"></text></g></svg></svg>