<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (3 samples, 0.40%)</title><rect x="0.0000%" y="901" width="0.4043%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.13%)</title><rect x="0.4043%" y="901" width="0.1348%" height="15" fill="rgb(217,0,24)"/><text x="0.6543%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.13%)</title><rect x="0.4043%" y="885" width="0.1348%" height="15" fill="rgb(221,193,54)"/><text x="0.6543%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.13%)</title><rect x="0.4043%" y="869" width="0.1348%" height="15" fill="rgb(248,212,6)"/><text x="0.6543%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.13%)</title><rect x="0.4043%" y="853" width="0.1348%" height="15" fill="rgb(208,68,35)"/><text x="0.6543%" y="863.50"></text></g><g><title>__libc_recv (1 samples, 0.13%)</title><rect x="0.4043%" y="837" width="0.1348%" height="15" fill="rgb(232,128,0)"/><text x="0.6543%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="0.4043%" y="821" width="0.1348%" height="15" fill="rgb(207,160,47)"/><text x="0.6543%" y="831.50"></text></g><g><title>__rdl_alloc (1 samples, 0.13%)</title><rect x="0.5391%" y="901" width="0.1348%" height="15" fill="rgb(228,23,34)"/><text x="0.7891%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.13%)</title><rect x="0.5391%" y="885" width="0.1348%" height="15" fill="rgb(218,30,26)"/><text x="0.7891%" y="895.50"></text></g><g><title>_int_free (2 samples, 0.27%)</title><rect x="0.6739%" y="901" width="0.2695%" height="15" fill="rgb(220,122,19)"/><text x="0.9239%" y="911.50"></text></g><g><title>[[heap]] (8 samples, 1.08%)</title><rect x="0.0000%" y="917" width="1.0782%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="927.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.13%)</title><rect x="0.9434%" y="901" width="0.1348%" height="15" fill="rgb(240,193,28)"/><text x="1.1934%" y="911.50"></text></g><g><title>[[stack]] (3 samples, 0.40%)</title><rect x="1.0782%" y="917" width="0.4043%" height="15" fill="rgb(216,20,37)"/><text x="1.3282%" y="927.50"></text></g><g><title>__libc_send (3 samples, 0.40%)</title><rect x="1.0782%" y="901" width="0.4043%" height="15" fill="rgb(206,188,39)"/><text x="1.3282%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="1.2129%" y="885" width="0.2695%" height="15" fill="rgb(217,207,13)"/><text x="1.4629%" y="895.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="1.4825%" y="901" width="0.1348%" height="15" fill="rgb(231,73,38)"/><text x="1.7325%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="1.6173%" y="901" width="0.1348%" height="15" fill="rgb(225,20,46)"/><text x="1.8673%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.13%)</title><rect x="1.6173%" y="885" width="0.1348%" height="15" fill="rgb(210,31,41)"/><text x="1.8673%" y="895.50"></text></g><g><title>__libc_send (2 samples, 0.27%)</title><rect x="1.7520%" y="901" width="0.2695%" height="15" fill="rgb(221,200,47)"/><text x="2.0020%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.27%)</title><rect x="1.7520%" y="885" width="0.2695%" height="15" fill="rgb(226,26,5)"/><text x="2.0020%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="2.0216%" y="901" width="0.1348%" height="15" fill="rgb(249,33,26)"/><text x="2.2716%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="2.1563%" y="901" width="0.1348%" height="15" fill="rgb(235,183,28)"/><text x="2.4063%" y="911.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.13%)</title><rect x="2.2911%" y="901" width="0.1348%" height="15" fill="rgb(221,5,38)"/><text x="2.5411%" y="911.50"></text></g><g><title>[anon] (8 samples, 1.08%)</title><rect x="1.4825%" y="917" width="1.0782%" height="15" fill="rgb(247,18,42)"/><text x="1.7325%" y="927.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.13%)</title><rect x="2.4259%" y="901" width="0.1348%" height="15" fill="rgb(241,131,45)"/><text x="2.6759%" y="911.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="2.5606%" y="901" width="0.1348%" height="15" fill="rgb(249,31,29)"/><text x="2.8106%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="2.6954%" y="901" width="0.1348%" height="15" fill="rgb(225,111,53)"/><text x="2.9454%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.27%)</title><rect x="2.8302%" y="901" width="0.2695%" height="15" fill="rgb(238,160,17)"/><text x="3.0802%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.13%)</title><rect x="3.0997%" y="741" width="0.1348%" height="15" fill="rgb(214,148,48)"/><text x="3.3497%" y="751.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.13%)</title><rect x="3.0997%" y="725" width="0.1348%" height="15" fill="rgb(232,36,49)"/><text x="3.3497%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="3.0997%" y="709" width="0.1348%" height="15" fill="rgb(209,103,24)"/><text x="3.3497%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="3.0997%" y="693" width="0.1348%" height="15" fill="rgb(229,88,8)"/><text x="3.3497%" y="703.50"></text></g><g><title>dlclose (1 samples, 0.13%)</title><rect x="3.0997%" y="677" width="0.1348%" height="15" fill="rgb(213,181,19)"/><text x="3.3497%" y="687.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="3.0997%" y="661" width="0.1348%" height="15" fill="rgb(254,191,54)"/><text x="3.3497%" y="671.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.13%)</title><rect x="3.0997%" y="645" width="0.1348%" height="15" fill="rgb(241,83,37)"/><text x="3.3497%" y="655.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="3.0997%" y="629" width="0.1348%" height="15" fill="rgb(233,36,39)"/><text x="3.3497%" y="639.50"></text></g><g><title>_dl_close (1 samples, 0.13%)</title><rect x="3.0997%" y="613" width="0.1348%" height="15" fill="rgb(226,3,54)"/><text x="3.3497%" y="623.50"></text></g><g><title>_dl_close_worker (1 samples, 0.13%)</title><rect x="3.0997%" y="597" width="0.1348%" height="15" fill="rgb(245,192,40)"/><text x="3.3497%" y="607.50"></text></g><g><title>_dl_unmap (1 samples, 0.13%)</title><rect x="3.0997%" y="581" width="0.1348%" height="15" fill="rgb(238,167,29)"/><text x="3.3497%" y="591.50"></text></g><g><title>munmap (1 samples, 0.13%)</title><rect x="3.0997%" y="565" width="0.1348%" height="15" fill="rgb(232,182,51)"/><text x="3.3497%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="3.0997%" y="549" width="0.1348%" height="15" fill="rgb(231,60,39)"/><text x="3.3497%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="3.0997%" y="533" width="0.1348%" height="15" fill="rgb(208,69,12)"/><text x="3.3497%" y="543.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.13%)</title><rect x="3.0997%" y="517" width="0.1348%" height="15" fill="rgb(235,93,37)"/><text x="3.3497%" y="527.50"></text></g><g><title>__vm_munmap (1 samples, 0.13%)</title><rect x="3.0997%" y="501" width="0.1348%" height="15" fill="rgb(213,116,39)"/><text x="3.3497%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.13%)</title><rect x="3.0997%" y="485" width="0.1348%" height="15" fill="rgb(222,207,29)"/><text x="3.3497%" y="495.50"></text></g><g><title>remove_vma (1 samples, 0.13%)</title><rect x="3.0997%" y="469" width="0.1348%" height="15" fill="rgb(206,96,30)"/><text x="3.3497%" y="479.50"></text></g><g><title>fput_many (1 samples, 0.13%)</title><rect x="3.0997%" y="453" width="0.1348%" height="15" fill="rgb(218,138,4)"/><text x="3.3497%" y="463.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.13%)</title><rect x="3.2345%" y="741" width="0.1348%" height="15" fill="rgb(250,191,14)"/><text x="3.4845%" y="751.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.13%)</title><rect x="3.2345%" y="725" width="0.1348%" height="15" fill="rgb(239,60,40)"/><text x="3.4845%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="3.2345%" y="709" width="0.1348%" height="15" fill="rgb(206,27,48)"/><text x="3.4845%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="3.2345%" y="693" width="0.1348%" height="15" fill="rgb(225,35,8)"/><text x="3.4845%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="3.2345%" y="677" width="0.1348%" height="15" fill="rgb(250,213,24)"/><text x="3.4845%" y="687.50"></text></g><g><title>__libc_read (1 samples, 0.13%)</title><rect x="3.2345%" y="661" width="0.1348%" height="15" fill="rgb(247,123,22)"/><text x="3.4845%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="3.2345%" y="645" width="0.1348%" height="15" fill="rgb(231,138,38)"/><text x="3.4845%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="3.2345%" y="629" width="0.1348%" height="15" fill="rgb(231,145,46)"/><text x="3.4845%" y="639.50"></text></g><g><title>ksys_read (1 samples, 0.13%)</title><rect x="3.2345%" y="613" width="0.1348%" height="15" fill="rgb(251,118,11)"/><text x="3.4845%" y="623.50"></text></g><g><title>vfs_read (1 samples, 0.13%)</title><rect x="3.2345%" y="597" width="0.1348%" height="15" fill="rgb(217,147,25)"/><text x="3.4845%" y="607.50"></text></g><g><title>seq_read (1 samples, 0.13%)</title><rect x="3.2345%" y="581" width="0.1348%" height="15" fill="rgb(247,81,37)"/><text x="3.4845%" y="591.50"></text></g><g><title>__kmalloc_node (1 samples, 0.13%)</title><rect x="3.2345%" y="565" width="0.1348%" height="15" fill="rgb(209,12,38)"/><text x="3.4845%" y="575.50"></text></g><g><title>memset_erms (1 samples, 0.13%)</title><rect x="3.2345%" y="549" width="0.1348%" height="15" fill="rgb(227,1,9)"/><text x="3.4845%" y="559.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.13%)</title><rect x="3.3693%" y="693" width="0.1348%" height="15" fill="rgb(248,47,43)"/><text x="3.6193%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.13%)</title><rect x="3.3693%" y="677" width="0.1348%" height="15" fill="rgb(221,10,30)"/><text x="3.6193%" y="687.50"></text></g><g><title>fput (1 samples, 0.13%)</title><rect x="3.9084%" y="565" width="0.1348%" height="15" fill="rgb(210,229,1)"/><text x="4.1584%" y="575.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="4.1779%" y="533" width="0.1348%" height="15" fill="rgb(222,148,37)"/><text x="4.4279%" y="543.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.13%)</title><rect x="4.3127%" y="533" width="0.1348%" height="15" fill="rgb(234,67,33)"/><text x="4.5627%" y="543.50"></text></g><g><title>lock_sock_nested (1 samples, 0.13%)</title><rect x="4.4474%" y="533" width="0.1348%" height="15" fill="rgb(247,98,35)"/><text x="4.6974%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="4.4474%" y="517" width="0.1348%" height="15" fill="rgb(247,138,52)"/><text x="4.6974%" y="527.50"></text></g><g><title>__ip_local_out (1 samples, 0.13%)</title><rect x="6.1995%" y="453" width="0.1348%" height="15" fill="rgb(213,79,30)"/><text x="6.4495%" y="463.50"></text></g><g><title>ip_send_check (1 samples, 0.13%)</title><rect x="6.1995%" y="437" width="0.1348%" height="15" fill="rgb(246,177,23)"/><text x="6.4495%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.13%)</title><rect x="6.3342%" y="453" width="0.1348%" height="15" fill="rgb(230,62,27)"/><text x="6.5842%" y="463.50"></text></g><g><title>ip_finish_output (2 samples, 0.27%)</title><rect x="6.4690%" y="437" width="0.2695%" height="15" fill="rgb(216,154,8)"/><text x="6.7190%" y="447.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="7.5472%" y="405" width="0.1348%" height="15" fill="rgb(244,35,45)"/><text x="7.7972%" y="415.50"></text></g><g><title>eth_type_trans (1 samples, 0.13%)</title><rect x="7.6819%" y="373" width="0.1348%" height="15" fill="rgb(251,115,12)"/><text x="7.9319%" y="383.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.13%)</title><rect x="8.0863%" y="341" width="0.1348%" height="15" fill="rgb(240,54,50)"/><text x="8.3363%" y="351.50"></text></g><g><title>netif_rx (4 samples, 0.54%)</title><rect x="7.8167%" y="373" width="0.5391%" height="15" fill="rgb(233,84,52)"/><text x="8.0667%" y="383.50"></text></g><g><title>netif_rx_internal (4 samples, 0.54%)</title><rect x="7.8167%" y="357" width="0.5391%" height="15" fill="rgb(207,117,47)"/><text x="8.0667%" y="367.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.13%)</title><rect x="8.2210%" y="341" width="0.1348%" height="15" fill="rgb(249,43,39)"/><text x="8.4710%" y="351.50"></text></g><g><title>read_tsc (1 samples, 0.13%)</title><rect x="8.2210%" y="325" width="0.1348%" height="15" fill="rgb(209,38,44)"/><text x="8.4710%" y="335.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.81%)</title><rect x="7.6819%" y="405" width="0.8086%" height="15" fill="rgb(236,212,23)"/><text x="7.9319%" y="415.50"></text></g><g><title>loopback_xmit (6 samples, 0.81%)</title><rect x="7.6819%" y="389" width="0.8086%" height="15" fill="rgb(242,79,21)"/><text x="7.9319%" y="399.50"></text></g><g><title>tcp_wfree (1 samples, 0.13%)</title><rect x="8.3558%" y="373" width="0.1348%" height="15" fill="rgb(211,96,35)"/><text x="8.6058%" y="383.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.13%)</title><rect x="8.4906%" y="405" width="0.1348%" height="15" fill="rgb(253,215,40)"/><text x="8.7406%" y="415.50"></text></g><g><title>__dev_queue_xmit (12 samples, 1.62%)</title><rect x="7.1429%" y="421" width="1.6173%" height="15" fill="rgb(211,81,21)"/><text x="7.3929%" y="431.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.13%)</title><rect x="8.6253%" y="405" width="0.1348%" height="15" fill="rgb(208,190,38)"/><text x="8.8753%" y="415.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="9.1644%" y="309" width="0.1348%" height="15" fill="rgb(235,213,38)"/><text x="9.4144%" y="319.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="9.7035%" y="261" width="0.1348%" height="15" fill="rgb(237,122,38)"/><text x="9.9535%" y="271.50"></text></g><g><title>raw_local_deliver (1 samples, 0.13%)</title><rect x="9.8383%" y="245" width="0.1348%" height="15" fill="rgb(244,218,35)"/><text x="10.0883%" y="255.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.27%)</title><rect x="10.3774%" y="229" width="0.2695%" height="15" fill="rgb(240,68,47)"/><text x="10.6274%" y="239.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="10.6469%" y="229" width="0.1348%" height="15" fill="rgb(210,16,53)"/><text x="10.8969%" y="239.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="10.6469%" y="213" width="0.1348%" height="15" fill="rgb(235,124,12)"/><text x="10.8969%" y="223.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="11.3208%" y="133" width="0.1348%" height="15" fill="rgb(224,169,11)"/><text x="11.5708%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.27%)</title><rect x="11.4555%" y="133" width="0.2695%" height="15" fill="rgb(250,166,2)"/><text x="11.7055%" y="143.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="11.7251%" y="133" width="0.1348%" height="15" fill="rgb(242,216,29)"/><text x="11.9751%" y="143.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.13%)</title><rect x="11.8598%" y="133" width="0.1348%" height="15" fill="rgb(230,116,27)"/><text x="12.1098%" y="143.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="11.8598%" y="117" width="0.1348%" height="15" fill="rgb(228,99,48)"/><text x="12.1098%" y="127.50"></text></g><g><title>psi_flags_change (1 samples, 0.13%)</title><rect x="11.9946%" y="101" width="0.1348%" height="15" fill="rgb(253,11,6)"/><text x="12.2446%" y="111.50"></text></g><g><title>psi_task_change (11 samples, 1.48%)</title><rect x="11.9946%" y="117" width="1.4825%" height="15" fill="rgb(247,143,39)"/><text x="12.2446%" y="127.50"></text></g><g><title>psi_group_change (10 samples, 1.35%)</title><rect x="12.1294%" y="101" width="1.3477%" height="15" fill="rgb(236,97,10)"/><text x="12.3794%" y="111.50"></text></g><g><title>record_times (3 samples, 0.40%)</title><rect x="13.0728%" y="85" width="0.4043%" height="15" fill="rgb(233,208,19)"/><text x="13.3228%" y="95.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.27%)</title><rect x="13.2075%" y="69" width="0.2695%" height="15" fill="rgb(216,164,2)"/><text x="13.4575%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.13%)</title><rect x="13.3423%" y="53" width="0.1348%" height="15" fill="rgb(220,129,5)"/><text x="13.5923%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.13%)</title><rect x="13.3423%" y="37" width="0.1348%" height="15" fill="rgb(242,17,10)"/><text x="13.5923%" y="47.50"></text></g><g><title>enqueue_task (19 samples, 2.56%)</title><rect x="11.9946%" y="133" width="2.5606%" height="15" fill="rgb(242,107,0)"/><text x="12.2446%" y="143.50">en..</text></g><g><title>uclamp_rq_inc_id (8 samples, 1.08%)</title><rect x="13.4771%" y="117" width="1.0782%" height="15" fill="rgb(251,28,31)"/><text x="13.7271%" y="127.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.13%)</title><rect x="14.9596%" y="101" width="0.1348%" height="15" fill="rgb(233,223,10)"/><text x="15.2096%" y="111.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.94%)</title><rect x="14.5553%" y="133" width="0.9434%" height="15" fill="rgb(215,21,27)"/><text x="14.8053%" y="143.50"></text></g><g><title>enqueue_entity (7 samples, 0.94%)</title><rect x="14.5553%" y="117" width="0.9434%" height="15" fill="rgb(232,23,21)"/><text x="14.8053%" y="127.50"></text></g><g><title>update_load_avg (3 samples, 0.40%)</title><rect x="15.0943%" y="101" width="0.4043%" height="15" fill="rgb(244,5,23)"/><text x="15.3443%" y="111.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.27%)</title><rect x="15.2291%" y="85" width="0.2695%" height="15" fill="rgb(226,81,46)"/><text x="15.4791%" y="95.50"></text></g><g><title>ttwu_do_wakeup (5 samples, 0.67%)</title><rect x="15.4987%" y="133" width="0.6739%" height="15" fill="rgb(247,70,30)"/><text x="15.7487%" y="143.50"></text></g><g><title>check_preempt_curr (5 samples, 0.67%)</title><rect x="15.4987%" y="117" width="0.6739%" height="15" fill="rgb(212,68,19)"/><text x="15.7487%" y="127.50"></text></g><g><title>resched_curr (4 samples, 0.54%)</title><rect x="15.6334%" y="101" width="0.5391%" height="15" fill="rgb(240,187,13)"/><text x="15.8834%" y="111.50"></text></g><g><title>sock_def_readable (39 samples, 5.26%)</title><rect x="11.0512%" y="197" width="5.2561%" height="15" fill="rgb(223,113,26)"/><text x="11.3012%" y="207.50">sock_d..</text></g><g><title>__wake_up_common_lock (39 samples, 5.26%)</title><rect x="11.0512%" y="181" width="5.2561%" height="15" fill="rgb(206,192,2)"/><text x="11.3012%" y="191.50">__wake..</text></g><g><title>__wake_up_common (39 samples, 5.26%)</title><rect x="11.0512%" y="165" width="5.2561%" height="15" fill="rgb(241,108,4)"/><text x="11.3012%" y="175.50">__wake..</text></g><g><title>try_to_wake_up (39 samples, 5.26%)</title><rect x="11.0512%" y="149" width="5.2561%" height="15" fill="rgb(247,173,49)"/><text x="11.3012%" y="159.50">try_to..</text></g><g><title>update_rq_clock (1 samples, 0.13%)</title><rect x="16.1725%" y="133" width="0.1348%" height="15" fill="rgb(224,114,35)"/><text x="16.4225%" y="143.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="16.1725%" y="117" width="0.1348%" height="15" fill="rgb(245,159,27)"/><text x="16.4225%" y="127.50"></text></g><g><title>sched_clock (1 samples, 0.13%)</title><rect x="16.1725%" y="101" width="0.1348%" height="15" fill="rgb(245,172,44)"/><text x="16.4225%" y="111.50"></text></g><g><title>native_sched_clock (1 samples, 0.13%)</title><rect x="16.1725%" y="85" width="0.1348%" height="15" fill="rgb(236,23,11)"/><text x="16.4225%" y="95.50"></text></g><g><title>__kfree_skb (4 samples, 0.54%)</title><rect x="17.1159%" y="181" width="0.5391%" height="15" fill="rgb(205,117,38)"/><text x="17.3659%" y="191.50"></text></g><g><title>skb_release_data (3 samples, 0.40%)</title><rect x="17.2507%" y="165" width="0.4043%" height="15" fill="rgb(237,72,25)"/><text x="17.5007%" y="175.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.13%)</title><rect x="17.6550%" y="181" width="0.1348%" height="15" fill="rgb(244,70,9)"/><text x="17.9050%" y="191.50"></text></g><g><title>__slab_free (1 samples, 0.13%)</title><rect x="17.7898%" y="165" width="0.1348%" height="15" fill="rgb(217,125,39)"/><text x="18.0398%" y="175.50"></text></g><g><title>kmem_cache_free (2 samples, 0.27%)</title><rect x="17.7898%" y="181" width="0.2695%" height="15" fill="rgb(235,36,10)"/><text x="18.0398%" y="191.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.13%)</title><rect x="17.9245%" y="165" width="0.1348%" height="15" fill="rgb(251,123,47)"/><text x="18.1745%" y="175.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.13%)</title><rect x="18.0593%" y="181" width="0.1348%" height="15" fill="rgb(221,13,13)"/><text x="18.3093%" y="191.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.13%)</title><rect x="18.0593%" y="165" width="0.1348%" height="15" fill="rgb(238,131,9)"/><text x="18.3093%" y="175.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.13%)</title><rect x="18.1941%" y="181" width="0.1348%" height="15" fill="rgb(211,50,8)"/><text x="18.4441%" y="191.50"></text></g><g><title>tcp_ack (16 samples, 2.16%)</title><rect x="16.3073%" y="197" width="2.1563%" height="15" fill="rgb(245,182,24)"/><text x="16.5573%" y="207.50">t..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.13%)</title><rect x="18.3288%" y="181" width="0.1348%" height="15" fill="rgb(242,14,37)"/><text x="18.5788%" y="191.50"></text></g><g><title>tcp_check_space (2 samples, 0.27%)</title><rect x="18.4636%" y="197" width="0.2695%" height="15" fill="rgb(246,228,12)"/><text x="18.7136%" y="207.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.27%)</title><rect x="18.7332%" y="197" width="0.2695%" height="15" fill="rgb(213,55,15)"/><text x="18.9832%" y="207.50"></text></g><g><title>ip_local_deliver (74 samples, 9.97%)</title><rect x="9.2992%" y="293" width="9.9730%" height="15" fill="rgb(209,9,3)"/><text x="9.5492%" y="303.50">ip_local_deliv..</text></g><g><title>ip_local_deliver_finish (73 samples, 9.84%)</title><rect x="9.4340%" y="277" width="9.8383%" height="15" fill="rgb(230,59,30)"/><text x="9.6840%" y="287.50">ip_local_deliv..</text></g><g><title>ip_protocol_deliver_rcu (70 samples, 9.43%)</title><rect x="9.8383%" y="261" width="9.4340%" height="15" fill="rgb(209,121,21)"/><text x="10.0883%" y="271.50">ip_protocol_d..</text></g><g><title>tcp_v4_rcv (69 samples, 9.30%)</title><rect x="9.9730%" y="245" width="9.2992%" height="15" fill="rgb(220,109,13)"/><text x="10.2230%" y="255.50">tcp_v4_rcv</text></g><g><title>tcp_v4_do_rcv (63 samples, 8.49%)</title><rect x="10.7817%" y="229" width="8.4906%" height="15" fill="rgb(232,18,1)"/><text x="11.0317%" y="239.50">tcp_v4_do_rcv</text></g><g><title>tcp_rcv_established (63 samples, 8.49%)</title><rect x="10.7817%" y="213" width="8.4906%" height="15" fill="rgb(215,41,42)"/><text x="11.0317%" y="223.50">tcp_rcv_esta..</text></g><g><title>tcp_send_delayed_ack (2 samples, 0.27%)</title><rect x="19.0027%" y="197" width="0.2695%" height="15" fill="rgb(224,123,36)"/><text x="19.2527%" y="207.50"></text></g><g><title>ip_rcv_core (2 samples, 0.27%)</title><rect x="19.2722%" y="293" width="0.2695%" height="15" fill="rgb(240,125,3)"/><text x="19.5222%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (78 samples, 10.51%)</title><rect x="9.1644%" y="325" width="10.5121%" height="15" fill="rgb(205,98,50)"/><text x="9.4144%" y="335.50">__netif_receive..</text></g><g><title>ip_rcv (77 samples, 10.38%)</title><rect x="9.2992%" y="309" width="10.3774%" height="15" fill="rgb(205,185,37)"/><text x="9.5492%" y="319.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.13%)</title><rect x="19.5418%" y="293" width="0.1348%" height="15" fill="rgb(238,207,15)"/><text x="19.7918%" y="303.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.13%)</title><rect x="19.5418%" y="277" width="0.1348%" height="15" fill="rgb(213,199,42)"/><text x="19.7918%" y="287.50"></text></g><g><title>__local_bh_enable_ip (82 samples, 11.05%)</title><rect x="8.7601%" y="421" width="11.0512%" height="15" fill="rgb(235,201,11)"/><text x="9.0101%" y="431.50">__local_bh_enabl..</text></g><g><title>do_softirq (82 samples, 11.05%)</title><rect x="8.7601%" y="405" width="11.0512%" height="15" fill="rgb(207,46,11)"/><text x="9.0101%" y="415.50">do_softirq</text></g><g><title>do_softirq_own_stack (81 samples, 10.92%)</title><rect x="8.8949%" y="389" width="10.9164%" height="15" fill="rgb(241,35,35)"/><text x="9.1449%" y="399.50">do_softirq_own_s..</text></g><g><title>__do_softirq (81 samples, 10.92%)</title><rect x="8.8949%" y="373" width="10.9164%" height="15" fill="rgb(243,32,47)"/><text x="9.1449%" y="383.50">__do_softirq</text></g><g><title>net_rx_action (80 samples, 10.78%)</title><rect x="9.0296%" y="357" width="10.7817%" height="15" fill="rgb(247,202,23)"/><text x="9.2796%" y="367.50">net_rx_action</text></g><g><title>process_backlog (80 samples, 10.78%)</title><rect x="9.0296%" y="341" width="10.7817%" height="15" fill="rgb(219,102,11)"/><text x="9.2796%" y="351.50">process_backlog</text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="19.6765%" y="325" width="0.1348%" height="15" fill="rgb(243,110,44)"/><text x="19.9265%" y="335.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="19.6765%" y="309" width="0.1348%" height="15" fill="rgb(222,74,54)"/><text x="19.9265%" y="319.50"></text></g><g><title>ip_finish_output2 (98 samples, 13.21%)</title><rect x="6.7385%" y="437" width="13.2075%" height="15" fill="rgb(216,99,12)"/><text x="6.9885%" y="447.50">ip_finish_output2</text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="19.8113%" y="421" width="0.1348%" height="15" fill="rgb(226,22,26)"/><text x="20.0613%" y="431.50"></text></g><g><title>__ip_queue_xmit (104 samples, 14.02%)</title><rect x="6.0647%" y="469" width="14.0162%" height="15" fill="rgb(217,163,10)"/><text x="6.3147%" y="479.50">__ip_queue_xmit</text></g><g><title>ip_output (101 samples, 13.61%)</title><rect x="6.4690%" y="453" width="13.6119%" height="15" fill="rgb(213,25,53)"/><text x="6.7190%" y="463.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.13%)</title><rect x="19.9461%" y="437" width="0.1348%" height="15" fill="rgb(252,105,26)"/><text x="20.1961%" y="447.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="19.9461%" y="421" width="0.1348%" height="15" fill="rgb(220,39,43)"/><text x="20.1961%" y="431.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.13%)</title><rect x="20.0809%" y="469" width="0.1348%" height="15" fill="rgb(229,68,48)"/><text x="20.3309%" y="479.50"></text></g><g><title>__tcp_transmit_skb (109 samples, 14.69%)</title><rect x="5.6604%" y="485" width="14.6900%" height="15" fill="rgb(252,8,32)"/><text x="5.9104%" y="495.50">__tcp_transmit_skb</text></g><g><title>tcp_rate_skb_sent (1 samples, 0.13%)</title><rect x="20.2156%" y="469" width="0.1348%" height="15" fill="rgb(223,20,43)"/><text x="20.4656%" y="479.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.40%)</title><rect x="20.3504%" y="485" width="0.4043%" height="15" fill="rgb(229,81,49)"/><text x="20.6004%" y="495.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="20.6199%" y="469" width="0.1348%" height="15" fill="rgb(236,28,36)"/><text x="20.8699%" y="479.50"></text></g><g><title>__mod_timer (1 samples, 0.13%)</title><rect x="20.6199%" y="453" width="0.1348%" height="15" fill="rgb(249,185,26)"/><text x="20.8699%" y="463.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.13%)</title><rect x="20.7547%" y="485" width="0.1348%" height="15" fill="rgb(249,174,33)"/><text x="21.0047%" y="495.50"></text></g><g><title>sk_reset_timer (1 samples, 0.13%)</title><rect x="20.7547%" y="469" width="0.1348%" height="15" fill="rgb(233,201,37)"/><text x="21.0047%" y="479.50"></text></g><g><title>__tcp_push_pending_frames (117 samples, 15.77%)</title><rect x="5.2561%" y="517" width="15.7682%" height="15" fill="rgb(221,78,26)"/><text x="5.5061%" y="527.50">__tcp_push_pending_frames</text></g><g><title>tcp_write_xmit (116 samples, 15.63%)</title><rect x="5.3908%" y="501" width="15.6334%" height="15" fill="rgb(250,127,30)"/><text x="5.6408%" y="511.50">tcp_write_xmit</text></g><g><title>tcp_small_queue_check.isra.0 (1 samples, 0.13%)</title><rect x="20.8895%" y="485" width="0.1348%" height="15" fill="rgb(230,49,44)"/><text x="21.1395%" y="495.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.13%)</title><rect x="21.0243%" y="517" width="0.1348%" height="15" fill="rgb(229,67,23)"/><text x="21.2743%" y="527.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.13%)</title><rect x="21.0243%" y="501" width="0.1348%" height="15" fill="rgb(249,83,47)"/><text x="21.2743%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.27%)</title><rect x="21.1590%" y="517" width="0.2695%" height="15" fill="rgb(215,43,3)"/><text x="21.4090%" y="527.50"></text></g><g><title>__alloc_skb (2 samples, 0.27%)</title><rect x="21.1590%" y="501" width="0.2695%" height="15" fill="rgb(238,154,13)"/><text x="21.4090%" y="511.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.27%)</title><rect x="21.1590%" y="485" width="0.2695%" height="15" fill="rgb(219,56,2)"/><text x="21.4090%" y="495.50"></text></g><g><title>memset_erms (2 samples, 0.27%)</title><rect x="21.1590%" y="469" width="0.2695%" height="15" fill="rgb(233,0,4)"/><text x="21.4090%" y="479.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="21.5633%" y="501" width="0.1348%" height="15" fill="rgb(235,30,7)"/><text x="21.8133%" y="511.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="21.5633%" y="485" width="0.1348%" height="15" fill="rgb(250,79,13)"/><text x="21.8133%" y="495.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.40%)</title><rect x="21.4286%" y="517" width="0.4043%" height="15" fill="rgb(211,146,34)"/><text x="21.6786%" y="527.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.13%)</title><rect x="21.6981%" y="501" width="0.1348%" height="15" fill="rgb(228,22,38)"/><text x="21.9481%" y="511.50"></text></g><g><title>sock_sendmsg (133 samples, 17.92%)</title><rect x="4.0431%" y="565" width="17.9245%" height="15" fill="rgb(235,168,5)"/><text x="4.2931%" y="575.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (133 samples, 17.92%)</title><rect x="4.0431%" y="549" width="17.9245%" height="15" fill="rgb(221,155,16)"/><text x="4.2931%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (129 samples, 17.39%)</title><rect x="4.5822%" y="533" width="17.3854%" height="15" fill="rgb(215,215,53)"/><text x="4.8322%" y="543.50">tcp_sendmsg_locked</text></g><g><title>skb_entail (1 samples, 0.13%)</title><rect x="21.8329%" y="517" width="0.1348%" height="15" fill="rgb(223,4,10)"/><text x="22.0829%" y="527.50"></text></g><g><title>__x64_sys_sendto (136 samples, 18.33%)</title><rect x="3.7736%" y="597" width="18.3288%" height="15" fill="rgb(234,103,6)"/><text x="4.0236%" y="607.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (136 samples, 18.33%)</title><rect x="3.7736%" y="581" width="18.3288%" height="15" fill="rgb(227,97,0)"/><text x="4.0236%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="21.9677%" y="565" width="0.1348%" height="15" fill="rgb(234,150,53)"/><text x="22.2177%" y="575.50"></text></g><g><title>do_syscall_64 (140 samples, 18.87%)</title><rect x="3.6388%" y="613" width="18.8679%" height="15" fill="rgb(228,201,54)"/><text x="3.8888%" y="623.50">do_syscall_64</text></g><g><title>syscall_trace_enter (3 samples, 0.40%)</title><rect x="22.1024%" y="597" width="0.4043%" height="15" fill="rgb(222,22,37)"/><text x="22.3524%" y="607.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.27%)</title><rect x="22.2372%" y="581" width="0.2695%" height="15" fill="rgb(237,53,32)"/><text x="22.4872%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (146 samples, 19.68%)</title><rect x="3.5040%" y="629" width="19.6765%" height="15" fill="rgb(233,25,53)"/><text x="3.7540%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.67%)</title><rect x="22.5067%" y="613" width="0.6739%" height="15" fill="rgb(210,40,34)"/><text x="22.7567%" y="623.50"></text></g><g><title>__libc_start_main (152 samples, 20.49%)</title><rect x="3.0997%" y="901" width="20.4852%" height="15" fill="rgb(241,220,44)"/><text x="3.3497%" y="911.50">__libc_start_main</text></g><g><title>main (152 samples, 20.49%)</title><rect x="3.0997%" y="885" width="20.4852%" height="15" fill="rgb(235,28,35)"/><text x="3.3497%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (152 samples, 20.49%)</title><rect x="3.0997%" y="869" width="20.4852%" height="15" fill="rgb(210,56,17)"/><text x="3.3497%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (152 samples, 20.49%)</title><rect x="3.0997%" y="853" width="20.4852%" height="15" fill="rgb(224,130,29)"/><text x="3.3497%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (152 samples, 20.49%)</title><rect x="3.0997%" y="837" width="20.4852%" height="15" fill="rgb(235,212,8)"/><text x="3.3497%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (152 samples, 20.49%)</title><rect x="3.0997%" y="821" width="20.4852%" height="15" fill="rgb(223,33,50)"/><text x="3.3497%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (152 samples, 20.49%)</title><rect x="3.0997%" y="805" width="20.4852%" height="15" fill="rgb(219,149,13)"/><text x="3.3497%" y="815.50">core::ops::function::impls::&lt;imp..</text></g><g><title>std::rt::lang_start::_{{closure}} (152 samples, 20.49%)</title><rect x="3.0997%" y="789" width="20.4852%" height="15" fill="rgb(250,156,29)"/><text x="3.3497%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (152 samples, 20.49%)</title><rect x="3.0997%" y="773" width="20.4852%" height="15" fill="rgb(216,193,19)"/><text x="3.3497%" y="783.50">std::sys_common::backtrace::__ru..</text></g><g><title>lobsters::main (152 samples, 20.49%)</title><rect x="3.0997%" y="757" width="20.4852%" height="15" fill="rgb(216,135,14)"/><text x="3.3497%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (150 samples, 20.22%)</title><rect x="3.3693%" y="741" width="20.2156%" height="15" fill="rgb(241,47,5)"/><text x="3.6193%" y="751.50">mysql::conn::queryable::Queryabl..</text></g><g><title>mysql::conn::Conn::_query (150 samples, 20.22%)</title><rect x="3.3693%" y="725" width="20.2156%" height="15" fill="rgb(233,42,35)"/><text x="3.6193%" y="735.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (150 samples, 20.22%)</title><rect x="3.3693%" y="709" width="20.2156%" height="15" fill="rgb(231,13,6)"/><text x="3.6193%" y="719.50">mysql_common::proto::sync_framed..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (149 samples, 20.08%)</title><rect x="3.5040%" y="693" width="20.0809%" height="15" fill="rgb(207,181,40)"/><text x="3.7540%" y="703.50">std::io::buffered::BufWriter&lt;W&gt;:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (149 samples, 20.08%)</title><rect x="3.5040%" y="677" width="20.0809%" height="15" fill="rgb(254,173,49)"/><text x="3.7540%" y="687.50">&lt;std::net::tcp::TcpStream as std..</text></g><g><title>std::sys_common::net::TcpStream::write (149 samples, 20.08%)</title><rect x="3.5040%" y="661" width="20.0809%" height="15" fill="rgb(221,1,38)"/><text x="3.7540%" y="671.50">std::sys_common::net::TcpStream:..</text></g><g><title>__libc_send (149 samples, 20.08%)</title><rect x="3.5040%" y="645" width="20.0809%" height="15" fill="rgb(206,124,46)"/><text x="3.7540%" y="655.50">__libc_send</text></g><g><title>syscall_return_via_sysret (3 samples, 0.40%)</title><rect x="23.1806%" y="629" width="0.4043%" height="15" fill="rgb(249,21,11)"/><text x="23.4306%" y="639.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.13%)</title><rect x="23.5849%" y="901" width="0.1348%" height="15" fill="rgb(222,201,40)"/><text x="23.8349%" y="911.50"></text></g><g><title>__rdl_alloc (1 samples, 0.13%)</title><rect x="23.7197%" y="901" width="0.1348%" height="15" fill="rgb(235,61,29)"/><text x="23.9697%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="23.8544%" y="901" width="0.1348%" height="15" fill="rgb(219,207,3)"/><text x="24.1044%" y="911.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.13%)</title><rect x="23.9892%" y="901" width="0.1348%" height="15" fill="rgb(222,56,46)"/><text x="24.2392%" y="911.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="23.9892%" y="885" width="0.1348%" height="15" fill="rgb(239,76,54)"/><text x="24.2392%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="23.9892%" y="869" width="0.1348%" height="15" fill="rgb(231,124,27)"/><text x="24.2392%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="23.9892%" y="853" width="0.1348%" height="15" fill="rgb(249,195,6)"/><text x="24.2392%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="23.9892%" y="837" width="0.1348%" height="15" fill="rgb(237,174,47)"/><text x="24.2392%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="23.9892%" y="821" width="0.1348%" height="15" fill="rgb(206,201,31)"/><text x="24.2392%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="23.9892%" y="805" width="0.1348%" height="15" fill="rgb(231,57,52)"/><text x="24.2392%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="23.9892%" y="789" width="0.1348%" height="15" fill="rgb(248,177,22)"/><text x="24.2392%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="23.9892%" y="773" width="0.1348%" height="15" fill="rgb(215,211,37)"/><text x="24.2392%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.13%)</title><rect x="24.1240%" y="901" width="0.1348%" height="15" fill="rgb(241,128,51)"/><text x="24.3740%" y="911.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.13%)</title><rect x="24.2588%" y="901" width="0.1348%" height="15" fill="rgb(227,165,31)"/><text x="24.5088%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (1 samples, 0.13%)</title><rect x="24.2588%" y="885" width="0.1348%" height="15" fill="rgb(228,167,24)"/><text x="24.5088%" y="895.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (1 samples, 0.13%)</title><rect x="24.2588%" y="869" width="0.1348%" height="15" fill="rgb(228,143,12)"/><text x="24.5088%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (1 samples, 0.13%)</title><rect x="24.2588%" y="853" width="0.1348%" height="15" fill="rgb(249,149,8)"/><text x="24.5088%" y="863.50"></text></g><g><title>decor::helpers::str_subset_of_idents (1 samples, 0.13%)</title><rect x="24.2588%" y="837" width="0.1348%" height="15" fill="rgb(243,35,44)"/><text x="24.5088%" y="847.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.13%)</title><rect x="24.2588%" y="821" width="0.1348%" height="15" fill="rgb(246,89,9)"/><text x="24.5088%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.13%)</title><rect x="24.2588%" y="805" width="0.1348%" height="15" fill="rgb(233,213,13)"/><text x="24.5088%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.13%)</title><rect x="24.2588%" y="789" width="0.1348%" height="15" fill="rgb(233,141,41)"/><text x="24.5088%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.13%)</title><rect x="24.2588%" y="773" width="0.1348%" height="15" fill="rgb(239,167,4)"/><text x="24.5088%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.3935%" y="869" width="0.1348%" height="15" fill="rgb(209,217,16)"/><text x="24.6435%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.3935%" y="853" width="0.1348%" height="15" fill="rgb(219,88,35)"/><text x="24.6435%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.3935%" y="837" width="0.1348%" height="15" fill="rgb(220,193,23)"/><text x="24.6435%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.13%)</title><rect x="24.3935%" y="821" width="0.1348%" height="15" fill="rgb(230,90,52)"/><text x="24.6435%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="24.3935%" y="805" width="0.1348%" height="15" fill="rgb(252,106,19)"/><text x="24.6435%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.13%)</title><rect x="24.3935%" y="789" width="0.1348%" height="15" fill="rgb(206,74,20)"/><text x="24.6435%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="24.3935%" y="773" width="0.1348%" height="15" fill="rgb(230,138,44)"/><text x="24.6435%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="24.3935%" y="757" width="0.1348%" height="15" fill="rgb(235,182,43)"/><text x="24.6435%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.13%)</title><rect x="24.3935%" y="741" width="0.1348%" height="15" fill="rgb(242,16,51)"/><text x="24.6435%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="24.3935%" y="725" width="0.1348%" height="15" fill="rgb(248,9,4)"/><text x="24.6435%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.13%)</title><rect x="24.3935%" y="709" width="0.1348%" height="15" fill="rgb(210,31,22)"/><text x="24.6435%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.13%)</title><rect x="24.3935%" y="693" width="0.1348%" height="15" fill="rgb(239,54,39)"/><text x="24.6435%" y="703.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.27%)</title><rect x="24.3935%" y="885" width="0.2695%" height="15" fill="rgb(230,99,41)"/><text x="24.6435%" y="895.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.13%)</title><rect x="24.5283%" y="869" width="0.1348%" height="15" fill="rgb(253,106,12)"/><text x="24.7783%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.5283%" y="853" width="0.1348%" height="15" fill="rgb(213,46,41)"/><text x="24.7783%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.5283%" y="837" width="0.1348%" height="15" fill="rgb(215,133,35)"/><text x="24.7783%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.13%)</title><rect x="24.5283%" y="821" width="0.1348%" height="15" fill="rgb(213,28,5)"/><text x="24.7783%" y="831.50"></text></g><g><title>__GI___isoc99_sscanf (1 samples, 0.13%)</title><rect x="24.5283%" y="805" width="0.1348%" height="15" fill="rgb(215,77,49)"/><text x="24.7783%" y="815.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.13%)</title><rect x="24.5283%" y="789" width="0.1348%" height="15" fill="rgb(248,100,22)"/><text x="24.7783%" y="799.50"></text></g><g><title>__rawmemchr_avx2 (1 samples, 0.13%)</title><rect x="24.5283%" y="773" width="0.1348%" height="15" fill="rgb(208,67,9)"/><text x="24.7783%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.27%)</title><rect x="24.6631%" y="821" width="0.2695%" height="15" fill="rgb(219,133,21)"/><text x="24.9131%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.27%)</title><rect x="24.6631%" y="805" width="0.2695%" height="15" fill="rgb(246,46,29)"/><text x="24.9131%" y="815.50"></text></g><g><title>import_single_range (1 samples, 0.13%)</title><rect x="25.3369%" y="645" width="0.1348%" height="15" fill="rgb(246,185,52)"/><text x="25.5869%" y="655.50"></text></g><g><title>dst_release (2 samples, 0.27%)</title><rect x="25.8760%" y="581" width="0.2695%" height="15" fill="rgb(252,136,11)"/><text x="26.1260%" y="591.50"></text></g><g><title>__kfree_skb (5 samples, 0.67%)</title><rect x="25.8760%" y="613" width="0.6739%" height="15" fill="rgb(219,138,53)"/><text x="26.1260%" y="623.50"></text></g><g><title>skb_release_head_state (5 samples, 0.67%)</title><rect x="25.8760%" y="597" width="0.6739%" height="15" fill="rgb(211,51,23)"/><text x="26.1260%" y="607.50"></text></g><g><title>sock_rfree (3 samples, 0.40%)</title><rect x="26.1456%" y="581" width="0.4043%" height="15" fill="rgb(247,221,28)"/><text x="26.3956%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="26.5499%" y="597" width="0.1348%" height="15" fill="rgb(251,222,45)"/><text x="26.7999%" y="607.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.13%)</title><rect x="26.5499%" y="581" width="0.1348%" height="15" fill="rgb(217,162,53)"/><text x="26.7999%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.40%)</title><rect x="26.6846%" y="597" width="0.4043%" height="15" fill="rgb(229,93,14)"/><text x="26.9346%" y="607.50"></text></g><g><title>add_wait_queue (1 samples, 0.13%)</title><rect x="27.0889%" y="597" width="0.1348%" height="15" fill="rgb(209,67,49)"/><text x="27.3389%" y="607.50"></text></g><g><title>remove_wait_queue (1 samples, 0.13%)</title><rect x="27.2237%" y="597" width="0.1348%" height="15" fill="rgb(213,87,29)"/><text x="27.4737%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="27.2237%" y="581" width="0.1348%" height="15" fill="rgb(205,151,52)"/><text x="27.4737%" y="591.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="27.2237%" y="565" width="0.1348%" height="15" fill="rgb(253,215,39)"/><text x="27.4737%" y="575.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.13%)</title><rect x="27.6280%" y="533" width="0.1348%" height="15" fill="rgb(221,220,41)"/><text x="27.8780%" y="543.50"></text></g><g><title>ctx_sched_out (1 samples, 0.13%)</title><rect x="27.6280%" y="517" width="0.1348%" height="15" fill="rgb(218,133,21)"/><text x="27.8780%" y="527.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.13%)</title><rect x="27.6280%" y="501" width="0.1348%" height="15" fill="rgb(221,193,43)"/><text x="27.8780%" y="511.50"></text></g><g><title>native_write_msr (1 samples, 0.13%)</title><rect x="27.6280%" y="485" width="0.1348%" height="15" fill="rgb(240,128,52)"/><text x="27.8780%" y="495.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.13%)</title><rect x="27.7628%" y="501" width="0.1348%" height="15" fill="rgb(253,114,12)"/><text x="28.0128%" y="511.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.27%)</title><rect x="27.7628%" y="533" width="0.2695%" height="15" fill="rgb(215,223,47)"/><text x="28.0128%" y="543.50"></text></g><g><title>dequeue_entity (2 samples, 0.27%)</title><rect x="27.7628%" y="517" width="0.2695%" height="15" fill="rgb(248,225,23)"/><text x="28.0128%" y="527.50"></text></g><g><title>update_curr (1 samples, 0.13%)</title><rect x="27.8976%" y="501" width="0.1348%" height="15" fill="rgb(250,108,0)"/><text x="28.1476%" y="511.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.13%)</title><rect x="27.8976%" y="485" width="0.1348%" height="15" fill="rgb(228,208,7)"/><text x="28.1476%" y="495.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.13%)</title><rect x="27.8976%" y="469" width="0.1348%" height="15" fill="rgb(244,45,10)"/><text x="28.1476%" y="479.50"></text></g><g><title>finish_task_switch (2 samples, 0.27%)</title><rect x="28.0323%" y="533" width="0.2695%" height="15" fill="rgb(207,125,25)"/><text x="28.2823%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.13%)</title><rect x="28.1671%" y="517" width="0.1348%" height="15" fill="rgb(210,195,18)"/><text x="28.4171%" y="527.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.13%)</title><rect x="28.3019%" y="533" width="0.1348%" height="15" fill="rgb(249,80,12)"/><text x="28.5519%" y="543.50"></text></g><g><title>newidle_balance (1 samples, 0.13%)</title><rect x="28.3019%" y="517" width="0.1348%" height="15" fill="rgb(221,65,9)"/><text x="28.5519%" y="527.50"></text></g><g><title>__msecs_to_jiffies (1 samples, 0.13%)</title><rect x="28.3019%" y="501" width="0.1348%" height="15" fill="rgb(235,49,36)"/><text x="28.5519%" y="511.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.13%)</title><rect x="28.4367%" y="533" width="0.1348%" height="15" fill="rgb(225,32,20)"/><text x="28.6867%" y="543.50"></text></g><g><title>psi_flags_change (1 samples, 0.13%)</title><rect x="28.5714%" y="517" width="0.1348%" height="15" fill="rgb(215,141,46)"/><text x="28.8214%" y="527.50"></text></g><g><title>psi_task_change (3 samples, 0.40%)</title><rect x="28.5714%" y="533" width="0.4043%" height="15" fill="rgb(250,160,47)"/><text x="28.8214%" y="543.50"></text></g><g><title>psi_group_change (2 samples, 0.27%)</title><rect x="28.7062%" y="517" width="0.2695%" height="15" fill="rgb(216,222,40)"/><text x="28.9562%" y="527.50"></text></g><g><title>record_times (1 samples, 0.13%)</title><rect x="28.8410%" y="501" width="0.1348%" height="15" fill="rgb(234,217,39)"/><text x="29.0910%" y="511.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="28.8410%" y="485" width="0.1348%" height="15" fill="rgb(207,178,40)"/><text x="29.0910%" y="495.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.27%)</title><rect x="28.9757%" y="533" width="0.2695%" height="15" fill="rgb(221,136,13)"/><text x="29.2257%" y="543.50"></text></g><g><title>sk_wait_data (22 samples, 2.96%)</title><rect x="26.5499%" y="613" width="2.9650%" height="15" fill="rgb(249,199,10)"/><text x="26.7999%" y="623.50">sk_..</text></g><g><title>wait_woken (16 samples, 2.16%)</title><rect x="27.3585%" y="597" width="2.1563%" height="15" fill="rgb(249,222,13)"/><text x="27.6085%" y="607.50">w..</text></g><g><title>schedule_timeout (16 samples, 2.16%)</title><rect x="27.3585%" y="581" width="2.1563%" height="15" fill="rgb(244,185,38)"/><text x="27.6085%" y="591.50">s..</text></g><g><title>schedule (16 samples, 2.16%)</title><rect x="27.3585%" y="565" width="2.1563%" height="15" fill="rgb(236,202,9)"/><text x="27.6085%" y="575.50">s..</text></g><g><title>__schedule (15 samples, 2.02%)</title><rect x="27.4933%" y="549" width="2.0216%" height="15" fill="rgb(250,229,37)"/><text x="27.7433%" y="559.50">_..</text></g><g><title>update_rq_clock (2 samples, 0.27%)</title><rect x="29.2453%" y="533" width="0.2695%" height="15" fill="rgb(206,174,23)"/><text x="29.4953%" y="543.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.13%)</title><rect x="29.3801%" y="517" width="0.1348%" height="15" fill="rgb(211,33,43)"/><text x="29.6301%" y="527.50"></text></g><g><title>_copy_to_iter (2 samples, 0.27%)</title><rect x="29.5148%" y="581" width="0.2695%" height="15" fill="rgb(245,58,50)"/><text x="29.7648%" y="591.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.13%)</title><rect x="29.6496%" y="565" width="0.1348%" height="15" fill="rgb(244,68,36)"/><text x="29.8996%" y="575.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.40%)</title><rect x="29.5148%" y="613" width="0.4043%" height="15" fill="rgb(232,229,15)"/><text x="29.7648%" y="623.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.40%)</title><rect x="29.5148%" y="597" width="0.4043%" height="15" fill="rgb(254,30,23)"/><text x="29.7648%" y="607.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.13%)</title><rect x="29.7844%" y="581" width="0.1348%" height="15" fill="rgb(235,160,14)"/><text x="30.0344%" y="591.50"></text></g><g><title>__check_object_size (1 samples, 0.13%)</title><rect x="29.7844%" y="565" width="0.1348%" height="15" fill="rgb(212,155,44)"/><text x="30.0344%" y="575.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.13%)</title><rect x="29.9191%" y="613" width="0.1348%" height="15" fill="rgb(226,2,50)"/><text x="30.1691%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (36 samples, 4.85%)</title><rect x="25.3369%" y="677" width="4.8518%" height="15" fill="rgb(234,177,6)"/><text x="25.5869%" y="687.50">__x64_..</text></g><g><title>__sys_recvfrom (36 samples, 4.85%)</title><rect x="25.3369%" y="661" width="4.8518%" height="15" fill="rgb(217,24,9)"/><text x="25.5869%" y="671.50">__sys_..</text></g><g><title>inet_recvmsg (35 samples, 4.72%)</title><rect x="25.4717%" y="645" width="4.7170%" height="15" fill="rgb(220,13,46)"/><text x="25.7217%" y="655.50">inet_..</text></g><g><title>tcp_recvmsg (35 samples, 4.72%)</title><rect x="25.4717%" y="629" width="4.7170%" height="15" fill="rgb(239,221,27)"/><text x="25.7217%" y="639.50">tcp_r..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.13%)</title><rect x="30.0539%" y="613" width="0.1348%" height="15" fill="rgb(222,198,25)"/><text x="30.3039%" y="623.50"></text></g><g><title>do_syscall_64 (37 samples, 4.99%)</title><rect x="25.3369%" y="693" width="4.9865%" height="15" fill="rgb(211,99,13)"/><text x="25.5869%" y="703.50">do_sys..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="30.1887%" y="677" width="0.1348%" height="15" fill="rgb(232,111,31)"/><text x="30.4387%" y="687.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="30.1887%" y="661" width="0.1348%" height="15" fill="rgb(245,82,37)"/><text x="30.4387%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (43 samples, 5.80%)</title><rect x="25.2022%" y="709" width="5.7951%" height="15" fill="rgb(227,149,46)"/><text x="25.4522%" y="719.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.67%)</title><rect x="30.3235%" y="693" width="0.6739%" height="15" fill="rgb(218,36,50)"/><text x="30.5735%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (47 samples, 6.33%)</title><rect x="25.0674%" y="805" width="6.3342%" height="15" fill="rgb(226,80,48)"/><text x="25.3174%" y="815.50">&lt;std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (47 samples, 6.33%)</title><rect x="25.0674%" y="789" width="6.3342%" height="15" fill="rgb(238,224,15)"/><text x="25.3174%" y="799.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (47 samples, 6.33%)</title><rect x="25.0674%" y="773" width="6.3342%" height="15" fill="rgb(241,136,10)"/><text x="25.3174%" y="783.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (47 samples, 6.33%)</title><rect x="25.0674%" y="757" width="6.3342%" height="15" fill="rgb(208,32,45)"/><text x="25.3174%" y="767.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (47 samples, 6.33%)</title><rect x="25.0674%" y="741" width="6.3342%" height="15" fill="rgb(207,135,9)"/><text x="25.3174%" y="751.50">std::sys..</text></g><g><title>__libc_recv (47 samples, 6.33%)</title><rect x="25.0674%" y="725" width="6.3342%" height="15" fill="rgb(206,86,44)"/><text x="25.3174%" y="735.50">__libc_r..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.40%)</title><rect x="30.9973%" y="709" width="0.4043%" height="15" fill="rgb(245,177,15)"/><text x="31.2473%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 7.01%)</title><rect x="24.9326%" y="821" width="7.0081%" height="15" fill="rgb(206,64,50)"/><text x="25.1826%" y="831.50">&lt;mysql_co..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.54%)</title><rect x="31.4016%" y="805" width="0.5391%" height="15" fill="rgb(234,36,40)"/><text x="31.6516%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.54%)</title><rect x="31.4016%" y="789" width="0.5391%" height="15" fill="rgb(213,64,8)"/><text x="31.6516%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.54%)</title><rect x="31.4016%" y="773" width="0.5391%" height="15" fill="rgb(210,75,36)"/><text x="31.6516%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.54%)</title><rect x="31.4016%" y="757" width="0.5391%" height="15" fill="rgb(229,88,21)"/><text x="31.6516%" y="767.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.54%)</title><rect x="31.4016%" y="741" width="0.5391%" height="15" fill="rgb(252,204,47)"/><text x="31.6516%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (55 samples, 7.41%)</title><rect x="24.6631%" y="837" width="7.4124%" height="15" fill="rgb(208,77,27)"/><text x="24.9131%" y="847.50">mysql::con..</text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="31.9407%" y="821" width="0.1348%" height="15" fill="rgb(221,76,26)"/><text x="32.1907%" y="831.50"></text></g><g><title>lobsters::main (59 samples, 7.95%)</title><rect x="24.3935%" y="901" width="7.9515%" height="15" fill="rgb(225,139,18)"/><text x="24.6435%" y="911.50">lobsters::m..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (57 samples, 7.68%)</title><rect x="24.6631%" y="885" width="7.6819%" height="15" fill="rgb(230,137,11)"/><text x="24.9131%" y="895.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::_query (57 samples, 7.68%)</title><rect x="24.6631%" y="869" width="7.6819%" height="15" fill="rgb(212,28,1)"/><text x="24.9131%" y="879.50">mysql::conn..</text></g><g><title>mysql::conn::Conn::handle_result_set (57 samples, 7.68%)</title><rect x="24.6631%" y="853" width="7.6819%" height="15" fill="rgb(248,164,17)"/><text x="24.9131%" y="863.50">mysql::conn..</text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.27%)</title><rect x="32.0755%" y="837" width="0.2695%" height="15" fill="rgb(222,171,42)"/><text x="32.3255%" y="847.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.13%)</title><rect x="32.2102%" y="821" width="0.1348%" height="15" fill="rgb(243,84,45)"/><text x="32.4602%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.27%)</title><rect x="32.3450%" y="901" width="0.2695%" height="15" fill="rgb(252,49,23)"/><text x="32.5950%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.27%)</title><rect x="32.3450%" y="885" width="0.2695%" height="15" fill="rgb(215,19,7)"/><text x="32.5950%" y="895.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.27%)</title><rect x="32.3450%" y="869" width="0.2695%" height="15" fill="rgb(238,81,41)"/><text x="32.5950%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.27%)</title><rect x="32.3450%" y="853" width="0.2695%" height="15" fill="rgb(210,199,37)"/><text x="32.5950%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.27%)</title><rect x="32.3450%" y="837" width="0.2695%" height="15" fill="rgb(244,192,49)"/><text x="32.5950%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="32.4798%" y="821" width="0.1348%" height="15" fill="rgb(226,211,11)"/><text x="32.7298%" y="831.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="32.4798%" y="805" width="0.1348%" height="15" fill="rgb(236,162,54)"/><text x="32.7298%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="32.4798%" y="789" width="0.1348%" height="15" fill="rgb(220,229,9)"/><text x="32.7298%" y="799.50"></text></g><g><title>handle_mm_fault (1 samples, 0.13%)</title><rect x="32.4798%" y="773" width="0.1348%" height="15" fill="rgb(250,87,22)"/><text x="32.7298%" y="783.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.13%)</title><rect x="32.6146%" y="901" width="0.1348%" height="15" fill="rgb(239,43,17)"/><text x="32.8646%" y="911.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.13%)</title><rect x="32.7493%" y="901" width="0.1348%" height="15" fill="rgb(231,177,25)"/><text x="32.9993%" y="911.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.13%)</title><rect x="32.8841%" y="901" width="0.1348%" height="15" fill="rgb(219,179,1)"/><text x="33.1341%" y="911.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.13%)</title><rect x="33.0189%" y="901" width="0.1348%" height="15" fill="rgb(238,219,53)"/><text x="33.2689%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.13%)</title><rect x="33.1536%" y="901" width="0.1348%" height="15" fill="rgb(232,167,36)"/><text x="33.4036%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.13%)</title><rect x="33.1536%" y="885" width="0.1348%" height="15" fill="rgb(244,19,51)"/><text x="33.4036%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.13%)</title><rect x="33.1536%" y="869" width="0.1348%" height="15" fill="rgb(224,6,22)"/><text x="33.4036%" y="879.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.13%)</title><rect x="33.1536%" y="853" width="0.1348%" height="15" fill="rgb(224,145,5)"/><text x="33.4036%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.13%)</title><rect x="33.1536%" y="837" width="0.1348%" height="15" fill="rgb(234,130,49)"/><text x="33.4036%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.13%)</title><rect x="33.1536%" y="821" width="0.1348%" height="15" fill="rgb(254,6,2)"/><text x="33.4036%" y="831.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.13%)</title><rect x="33.1536%" y="805" width="0.1348%" height="15" fill="rgb(208,96,46)"/><text x="33.4036%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="33.1536%" y="789" width="0.1348%" height="15" fill="rgb(239,3,39)"/><text x="33.4036%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.13%)</title><rect x="33.1536%" y="773" width="0.1348%" height="15" fill="rgb(233,210,1)"/><text x="33.4036%" y="783.50"></text></g><g><title>_int_realloc (1 samples, 0.13%)</title><rect x="33.1536%" y="757" width="0.1348%" height="15" fill="rgb(244,137,37)"/><text x="33.4036%" y="767.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.13%)</title><rect x="33.1536%" y="741" width="0.1348%" height="15" fill="rgb(240,136,2)"/><text x="33.4036%" y="751.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="33.1536%" y="725" width="0.1348%" height="15" fill="rgb(239,18,37)"/><text x="33.4036%" y="735.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.13%)</title><rect x="33.2884%" y="901" width="0.1348%" height="15" fill="rgb(218,185,22)"/><text x="33.5384%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.13%)</title><rect x="33.2884%" y="885" width="0.1348%" height="15" fill="rgb(225,218,4)"/><text x="33.5384%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.13%)</title><rect x="33.2884%" y="869" width="0.1348%" height="15" fill="rgb(230,182,32)"/><text x="33.5384%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.13%)</title><rect x="33.2884%" y="853" width="0.1348%" height="15" fill="rgb(242,56,43)"/><text x="33.5384%" y="863.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="33.2884%" y="837" width="0.1348%" height="15" fill="rgb(233,99,24)"/><text x="33.5384%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="33.2884%" y="821" width="0.1348%" height="15" fill="rgb(234,209,42)"/><text x="33.5384%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="33.2884%" y="805" width="0.1348%" height="15" fill="rgb(227,7,12)"/><text x="33.5384%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.13%)</title><rect x="33.2884%" y="789" width="0.1348%" height="15" fill="rgb(245,203,43)"/><text x="33.5384%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.13%)</title><rect x="33.2884%" y="773" width="0.1348%" height="15" fill="rgb(238,205,33)"/><text x="33.5384%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="33.2884%" y="757" width="0.1348%" height="15" fill="rgb(231,56,7)"/><text x="33.5384%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.13%)</title><rect x="33.2884%" y="741" width="0.1348%" height="15" fill="rgb(244,186,29)"/><text x="33.5384%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="33.2884%" y="725" width="0.1348%" height="15" fill="rgb(234,111,31)"/><text x="33.5384%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.13%)</title><rect x="33.2884%" y="709" width="0.1348%" height="15" fill="rgb(241,149,10)"/><text x="33.5384%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.13%)</title><rect x="33.2884%" y="693" width="0.1348%" height="15" fill="rgb(249,206,44)"/><text x="33.5384%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="33.2884%" y="677" width="0.1348%" height="15" fill="rgb(251,153,30)"/><text x="33.5384%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="33.2884%" y="661" width="0.1348%" height="15" fill="rgb(239,152,38)"/><text x="33.5384%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="33.2884%" y="645" width="0.1348%" height="15" fill="rgb(249,139,47)"/><text x="33.5384%" y="655.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.13%)</title><rect x="33.4232%" y="901" width="0.1348%" height="15" fill="rgb(244,64,35)"/><text x="33.6732%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.13%)</title><rect x="33.4232%" y="885" width="0.1348%" height="15" fill="rgb(216,46,15)"/><text x="33.6732%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.13%)</title><rect x="33.4232%" y="869" width="0.1348%" height="15" fill="rgb(250,74,19)"/><text x="33.6732%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="33.4232%" y="853" width="0.1348%" height="15" fill="rgb(249,42,33)"/><text x="33.6732%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.13%)</title><rect x="33.4232%" y="837" width="0.1348%" height="15" fill="rgb(242,149,17)"/><text x="33.6732%" y="847.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.13%)</title><rect x="33.4232%" y="821" width="0.1348%" height="15" fill="rgb(244,29,21)"/><text x="33.6732%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.13%)</title><rect x="33.4232%" y="805" width="0.1348%" height="15" fill="rgb(220,130,37)"/><text x="33.6732%" y="815.50"></text></g><g><title>lobsters::main (1 samples, 0.13%)</title><rect x="33.4232%" y="789" width="0.1348%" height="15" fill="rgb(211,67,2)"/><text x="33.6732%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.13%)</title><rect x="33.4232%" y="773" width="0.1348%" height="15" fill="rgb(235,68,52)"/><text x="33.6732%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.13%)</title><rect x="33.4232%" y="757" width="0.1348%" height="15" fill="rgb(246,142,3)"/><text x="33.6732%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.13%)</title><rect x="33.4232%" y="741" width="0.1348%" height="15" fill="rgb(241,25,7)"/><text x="33.6732%" y="751.50"></text></g><g><title>[unknown] (231 samples, 31.13%)</title><rect x="2.5606%" y="917" width="31.1321%" height="15" fill="rgb(242,119,39)"/><text x="2.8106%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.13%)</title><rect x="33.5580%" y="901" width="0.1348%" height="15" fill="rgb(241,98,45)"/><text x="33.8080%" y="911.50"></text></g><g><title>lobsters::main (1 samples, 0.13%)</title><rect x="33.5580%" y="885" width="0.1348%" height="15" fill="rgb(254,28,30)"/><text x="33.8080%" y="895.50"></text></g><g><title>std::thread::spawn (1 samples, 0.13%)</title><rect x="33.5580%" y="869" width="0.1348%" height="15" fill="rgb(241,142,54)"/><text x="33.8080%" y="879.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.13%)</title><rect x="33.5580%" y="853" width="0.1348%" height="15" fill="rgb(222,85,15)"/><text x="33.8080%" y="863.50"></text></g><g><title>std::sys::unix::thread::min_stack_size (1 samples, 0.13%)</title><rect x="33.5580%" y="837" width="0.1348%" height="15" fill="rgb(210,85,47)"/><text x="33.8080%" y="847.50"></text></g><g><title>std::sys::unix::weak::Weak&lt;F&gt;::get (1 samples, 0.13%)</title><rect x="33.5580%" y="821" width="0.1348%" height="15" fill="rgb(224,206,25)"/><text x="33.8080%" y="831.50"></text></g><g><title>std::sys::unix::weak::fetch (1 samples, 0.13%)</title><rect x="33.5580%" y="805" width="0.1348%" height="15" fill="rgb(243,201,19)"/><text x="33.8080%" y="815.50"></text></g><g><title>dlsym (1 samples, 0.13%)</title><rect x="33.5580%" y="789" width="0.1348%" height="15" fill="rgb(236,59,4)"/><text x="33.8080%" y="799.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="33.5580%" y="773" width="0.1348%" height="15" fill="rgb(254,179,45)"/><text x="33.8080%" y="783.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.13%)</title><rect x="33.5580%" y="757" width="0.1348%" height="15" fill="rgb(226,14,10)"/><text x="33.8080%" y="767.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.13%)</title><rect x="33.5580%" y="741" width="0.1348%" height="15" fill="rgb(244,27,41)"/><text x="33.8080%" y="751.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.13%)</title><rect x="33.5580%" y="725" width="0.1348%" height="15" fill="rgb(235,35,32)"/><text x="33.8080%" y="735.50"></text></g><g><title>do_sym (1 samples, 0.13%)</title><rect x="33.5580%" y="709" width="0.1348%" height="15" fill="rgb(218,68,31)"/><text x="33.8080%" y="719.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.13%)</title><rect x="33.5580%" y="693" width="0.1348%" height="15" fill="rgb(207,120,37)"/><text x="33.8080%" y="703.50"></text></g><g><title>do_lookup_x (1 samples, 0.13%)</title><rect x="33.5580%" y="677" width="0.1348%" height="15" fill="rgb(227,98,0)"/><text x="33.8080%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.13%)</title><rect x="33.6927%" y="805" width="0.1348%" height="15" fill="rgb(207,7,3)"/><text x="33.9427%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.13%)</title><rect x="33.6927%" y="789" width="0.1348%" height="15" fill="rgb(206,98,19)"/><text x="33.9427%" y="799.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.13%)</title><rect x="33.6927%" y="773" width="0.1348%" height="15" fill="rgb(217,5,26)"/><text x="33.9427%" y="783.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.13%)</title><rect x="33.6927%" y="757" width="0.1348%" height="15" fill="rgb(235,190,38)"/><text x="33.9427%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="33.6927%" y="741" width="0.1348%" height="15" fill="rgb(247,86,24)"/><text x="33.9427%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.13%)</title><rect x="33.6927%" y="725" width="0.1348%" height="15" fill="rgb(205,101,16)"/><text x="33.9427%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.13%)</title><rect x="33.6927%" y="709" width="0.1348%" height="15" fill="rgb(246,168,33)"/><text x="33.9427%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="33.6927%" y="693" width="0.1348%" height="15" fill="rgb(231,114,1)"/><text x="33.9427%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="33.6927%" y="677" width="0.1348%" height="15" fill="rgb(207,184,53)"/><text x="33.9427%" y="687.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.13%)</title><rect x="33.6927%" y="661" width="0.1348%" height="15" fill="rgb(224,95,51)"/><text x="33.9427%" y="671.50"></text></g><g><title>__sys_sendto (1 samples, 0.13%)</title><rect x="33.6927%" y="645" width="0.1348%" height="15" fill="rgb(212,188,45)"/><text x="33.9427%" y="655.50"></text></g><g><title>sock_sendmsg (1 samples, 0.13%)</title><rect x="33.6927%" y="629" width="0.1348%" height="15" fill="rgb(223,154,38)"/><text x="33.9427%" y="639.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.13%)</title><rect x="33.6927%" y="613" width="0.1348%" height="15" fill="rgb(251,22,52)"/><text x="33.9427%" y="623.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.13%)</title><rect x="33.6927%" y="597" width="0.1348%" height="15" fill="rgb(229,209,22)"/><text x="33.9427%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.13%)</title><rect x="33.6927%" y="581" width="0.1348%" height="15" fill="rgb(234,138,34)"/><text x="33.9427%" y="591.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.13%)</title><rect x="33.6927%" y="565" width="0.1348%" height="15" fill="rgb(212,95,11)"/><text x="33.9427%" y="575.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.13%)</title><rect x="33.6927%" y="549" width="0.1348%" height="15" fill="rgb(240,179,47)"/><text x="33.9427%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.13%)</title><rect x="33.6927%" y="533" width="0.1348%" height="15" fill="rgb(240,163,11)"/><text x="33.9427%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.13%)</title><rect x="33.6927%" y="517" width="0.1348%" height="15" fill="rgb(236,37,12)"/><text x="33.9427%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.13%)</title><rect x="33.6927%" y="501" width="0.1348%" height="15" fill="rgb(232,164,16)"/><text x="33.9427%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="33.6927%" y="485" width="0.1348%" height="15" fill="rgb(244,205,15)"/><text x="33.9427%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.13%)</title><rect x="33.6927%" y="469" width="0.1348%" height="15" fill="rgb(223,117,47)"/><text x="33.9427%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.13%)</title><rect x="33.6927%" y="453" width="0.1348%" height="15" fill="rgb(244,107,35)"/><text x="33.9427%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.13%)</title><rect x="33.6927%" y="437" width="0.1348%" height="15" fill="rgb(205,140,8)"/><text x="33.9427%" y="447.50"></text></g><g><title>net_rx_action (1 samples, 0.13%)</title><rect x="33.6927%" y="421" width="0.1348%" height="15" fill="rgb(228,84,46)"/><text x="33.9427%" y="431.50"></text></g><g><title>process_backlog (1 samples, 0.13%)</title><rect x="33.6927%" y="405" width="0.1348%" height="15" fill="rgb(254,188,9)"/><text x="33.9427%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.13%)</title><rect x="33.6927%" y="389" width="0.1348%" height="15" fill="rgb(206,112,54)"/><text x="33.9427%" y="399.50"></text></g><g><title>ip_rcv (1 samples, 0.13%)</title><rect x="33.6927%" y="373" width="0.1348%" height="15" fill="rgb(216,84,49)"/><text x="33.9427%" y="383.50"></text></g><g><title>ip_local_deliver (1 samples, 0.13%)</title><rect x="33.6927%" y="357" width="0.1348%" height="15" fill="rgb(214,194,35)"/><text x="33.9427%" y="367.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.13%)</title><rect x="33.6927%" y="341" width="0.1348%" height="15" fill="rgb(249,28,3)"/><text x="33.9427%" y="351.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.13%)</title><rect x="33.6927%" y="325" width="0.1348%" height="15" fill="rgb(222,56,52)"/><text x="33.9427%" y="335.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.13%)</title><rect x="33.6927%" y="309" width="0.1348%" height="15" fill="rgb(245,217,50)"/><text x="33.9427%" y="319.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.13%)</title><rect x="33.6927%" y="293" width="0.1348%" height="15" fill="rgb(213,201,24)"/><text x="33.9427%" y="303.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.13%)</title><rect x="33.6927%" y="277" width="0.1348%" height="15" fill="rgb(248,116,28)"/><text x="33.9427%" y="287.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.13%)</title><rect x="33.6927%" y="261" width="0.1348%" height="15" fill="rgb(219,72,43)"/><text x="33.9427%" y="271.50"></text></g><g><title>__alloc_skb (1 samples, 0.13%)</title><rect x="33.6927%" y="245" width="0.1348%" height="15" fill="rgb(209,138,14)"/><text x="33.9427%" y="255.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="33.6927%" y="229" width="0.1348%" height="15" fill="rgb(222,18,33)"/><text x="33.9427%" y="239.50"></text></g><g><title>kmalloc_slab (1 samples, 0.13%)</title><rect x="33.6927%" y="213" width="0.1348%" height="15" fill="rgb(213,199,7)"/><text x="33.9427%" y="223.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.13%)</title><rect x="34.2318%" y="773" width="0.1348%" height="15" fill="rgb(250,110,10)"/><text x="34.4818%" y="783.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.13%)</title><rect x="34.2318%" y="757" width="0.1348%" height="15" fill="rgb(248,123,6)"/><text x="34.4818%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="34.2318%" y="741" width="0.1348%" height="15" fill="rgb(206,91,31)"/><text x="34.4818%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="34.2318%" y="725" width="0.1348%" height="15" fill="rgb(211,154,13)"/><text x="34.4818%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="34.6361%" y="757" width="0.1348%" height="15" fill="rgb(225,148,7)"/><text x="34.8861%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.27%)</title><rect x="34.9057%" y="741" width="0.2695%" height="15" fill="rgb(220,160,43)"/><text x="35.1557%" y="751.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.27%)</title><rect x="34.9057%" y="725" width="0.2695%" height="15" fill="rgb(213,52,39)"/><text x="35.1557%" y="735.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::Deref&gt;::deref (1 samples, 0.13%)</title><rect x="35.0404%" y="709" width="0.1348%" height="15" fill="rgb(243,137,7)"/><text x="35.2904%" y="719.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (1 samples, 0.13%)</title><rect x="35.1752%" y="741" width="0.1348%" height="15" fill="rgb(230,79,13)"/><text x="35.4252%" y="751.50"></text></g><g><title>decor::answer_rows (6 samples, 0.81%)</title><rect x="34.7709%" y="757" width="0.8086%" height="15" fill="rgb(247,105,23)"/><text x="35.0209%" y="767.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.27%)</title><rect x="35.3100%" y="741" width="0.2695%" height="15" fill="rgb(223,179,41)"/><text x="35.5600%" y="751.50"></text></g><g><title>msql_srv::writers::write_ok_packet (1 samples, 0.13%)</title><rect x="35.4447%" y="725" width="0.1348%" height="15" fill="rgb(218,9,34)"/><text x="35.6947%" y="735.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.13%)</title><rect x="35.4447%" y="709" width="0.1348%" height="15" fill="rgb(222,106,8)"/><text x="35.6947%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.13%)</title><rect x="35.4447%" y="693" width="0.1348%" height="15" fill="rgb(211,220,0)"/><text x="35.6947%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="35.4447%" y="677" width="0.1348%" height="15" fill="rgb(229,52,16)"/><text x="35.6947%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="35.7143%" y="741" width="0.1348%" height="15" fill="rgb(212,155,18)"/><text x="35.9643%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.13%)</title><rect x="35.8491%" y="709" width="0.1348%" height="15" fill="rgb(242,21,14)"/><text x="36.0991%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.27%)</title><rect x="35.8491%" y="725" width="0.2695%" height="15" fill="rgb(222,19,48)"/><text x="36.0991%" y="735.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.13%)</title><rect x="35.9838%" y="709" width="0.1348%" height="15" fill="rgb(232,45,27)"/><text x="36.2338%" y="719.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.13%)</title><rect x="36.1186%" y="597" width="0.1348%" height="15" fill="rgb(249,103,42)"/><text x="36.3686%" y="607.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.13%)</title><rect x="36.2534%" y="597" width="0.1348%" height="15" fill="rgb(246,81,33)"/><text x="36.5034%" y="607.50"></text></g><g><title>fput_many (1 samples, 0.13%)</title><rect x="36.5229%" y="533" width="0.1348%" height="15" fill="rgb(252,33,42)"/><text x="36.7729%" y="543.50"></text></g><g><title>import_single_range (1 samples, 0.13%)</title><rect x="36.6577%" y="533" width="0.1348%" height="15" fill="rgb(209,212,41)"/><text x="36.9077%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="37.0620%" y="485" width="0.1348%" height="15" fill="rgb(207,154,6)"/><text x="37.3120%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="37.1968%" y="485" width="0.1348%" height="15" fill="rgb(223,64,47)"/><text x="37.4468%" y="495.50"></text></g><g><title>add_wait_queue (1 samples, 0.13%)</title><rect x="37.3315%" y="485" width="0.1348%" height="15" fill="rgb(211,161,38)"/><text x="37.5815%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="37.3315%" y="469" width="0.1348%" height="15" fill="rgb(219,138,40)"/><text x="37.5815%" y="479.50"></text></g><g><title>remove_wait_queue (3 samples, 0.40%)</title><rect x="37.4663%" y="485" width="0.4043%" height="15" fill="rgb(241,228,46)"/><text x="37.7163%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (3 samples, 0.40%)</title><rect x="37.4663%" y="469" width="0.4043%" height="15" fill="rgb(223,209,38)"/><text x="37.7163%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="37.7358%" y="453" width="0.1348%" height="15" fill="rgb(236,164,45)"/><text x="37.9858%" y="463.50"></text></g><g><title>update_curr (1 samples, 0.13%)</title><rect x="38.0054%" y="389" width="0.1348%" height="15" fill="rgb(231,15,5)"/><text x="38.2554%" y="399.50"></text></g><g><title>__calc_delta (1 samples, 0.13%)</title><rect x="38.0054%" y="373" width="0.1348%" height="15" fill="rgb(252,35,15)"/><text x="38.2554%" y="383.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.27%)</title><rect x="38.0054%" y="421" width="0.2695%" height="15" fill="rgb(248,181,18)"/><text x="38.2554%" y="431.50"></text></g><g><title>dequeue_entity (2 samples, 0.27%)</title><rect x="38.0054%" y="405" width="0.2695%" height="15" fill="rgb(233,39,42)"/><text x="38.2554%" y="415.50"></text></g><g><title>update_load_avg (1 samples, 0.13%)</title><rect x="38.1402%" y="389" width="0.1348%" height="15" fill="rgb(238,110,33)"/><text x="38.3902%" y="399.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.13%)</title><rect x="38.1402%" y="373" width="0.1348%" height="15" fill="rgb(233,195,10)"/><text x="38.3902%" y="383.50"></text></g><g><title>finish_task_switch (2 samples, 0.27%)</title><rect x="38.2749%" y="421" width="0.2695%" height="15" fill="rgb(254,105,3)"/><text x="38.5249%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.27%)</title><rect x="38.2749%" y="405" width="0.2695%" height="15" fill="rgb(221,225,9)"/><text x="38.5249%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.27%)</title><rect x="38.2749%" y="389" width="0.2695%" height="15" fill="rgb(224,227,45)"/><text x="38.5249%" y="399.50"></text></g><g><title>native_write_msr (2 samples, 0.27%)</title><rect x="38.2749%" y="373" width="0.2695%" height="15" fill="rgb(229,198,43)"/><text x="38.5249%" y="383.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.13%)</title><rect x="38.5445%" y="421" width="0.1348%" height="15" fill="rgb(206,209,35)"/><text x="38.7945%" y="431.50"></text></g><g><title>newidle_balance (1 samples, 0.13%)</title><rect x="38.5445%" y="405" width="0.1348%" height="15" fill="rgb(245,195,53)"/><text x="38.7945%" y="415.50"></text></g><g><title>__msecs_to_jiffies (1 samples, 0.13%)</title><rect x="38.5445%" y="389" width="0.1348%" height="15" fill="rgb(240,92,26)"/><text x="38.7945%" y="399.50"></text></g><g><title>psi_task_change (5 samples, 0.67%)</title><rect x="38.6792%" y="421" width="0.6739%" height="15" fill="rgb(207,40,23)"/><text x="38.9292%" y="431.50"></text></g><g><title>psi_group_change (5 samples, 0.67%)</title><rect x="38.6792%" y="405" width="0.6739%" height="15" fill="rgb(223,111,35)"/><text x="38.9292%" y="415.50"></text></g><g><title>record_times (4 samples, 0.54%)</title><rect x="38.8140%" y="389" width="0.5391%" height="15" fill="rgb(229,147,28)"/><text x="39.0640%" y="399.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.27%)</title><rect x="39.0836%" y="373" width="0.2695%" height="15" fill="rgb(211,29,28)"/><text x="39.3336%" y="383.50"></text></g><g><title>sched_clock (2 samples, 0.27%)</title><rect x="39.0836%" y="357" width="0.2695%" height="15" fill="rgb(228,72,33)"/><text x="39.3336%" y="367.50"></text></g><g><title>native_sched_clock (2 samples, 0.27%)</title><rect x="39.0836%" y="341" width="0.2695%" height="15" fill="rgb(205,214,31)"/><text x="39.3336%" y="351.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.13%)</title><rect x="39.3531%" y="421" width="0.1348%" height="15" fill="rgb(224,111,15)"/><text x="39.6031%" y="431.50"></text></g><g><title>sk_wait_data (21 samples, 2.83%)</title><rect x="36.9272%" y="501" width="2.8302%" height="15" fill="rgb(253,21,26)"/><text x="37.1772%" y="511.50">sk..</text></g><g><title>wait_woken (14 samples, 1.89%)</title><rect x="37.8706%" y="485" width="1.8868%" height="15" fill="rgb(245,139,43)"/><text x="38.1206%" y="495.50">w..</text></g><g><title>schedule_timeout (13 samples, 1.75%)</title><rect x="38.0054%" y="469" width="1.7520%" height="15" fill="rgb(252,170,7)"/><text x="38.2554%" y="479.50"></text></g><g><title>schedule (13 samples, 1.75%)</title><rect x="38.0054%" y="453" width="1.7520%" height="15" fill="rgb(231,118,14)"/><text x="38.2554%" y="463.50"></text></g><g><title>__schedule (13 samples, 1.75%)</title><rect x="38.0054%" y="437" width="1.7520%" height="15" fill="rgb(238,83,0)"/><text x="38.2554%" y="447.50"></text></g><g><title>update_rq_clock (2 samples, 0.27%)</title><rect x="39.4879%" y="421" width="0.2695%" height="15" fill="rgb(221,39,39)"/><text x="39.7379%" y="431.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.27%)</title><rect x="39.4879%" y="405" width="0.2695%" height="15" fill="rgb(222,119,46)"/><text x="39.7379%" y="415.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.13%)</title><rect x="39.7574%" y="501" width="0.1348%" height="15" fill="rgb(222,165,49)"/><text x="40.0074%" y="511.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.13%)</title><rect x="39.7574%" y="485" width="0.1348%" height="15" fill="rgb(219,113,52)"/><text x="40.0074%" y="495.50"></text></g><g><title>_copy_to_iter (1 samples, 0.13%)</title><rect x="39.7574%" y="469" width="0.1348%" height="15" fill="rgb(214,7,15)"/><text x="40.0074%" y="479.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.13%)</title><rect x="39.7574%" y="453" width="0.1348%" height="15" fill="rgb(235,32,4)"/><text x="40.0074%" y="463.50"></text></g><g><title>do_syscall_64 (26 samples, 3.50%)</title><rect x="36.5229%" y="581" width="3.5040%" height="15" fill="rgb(238,90,54)"/><text x="36.7729%" y="591.50">do_..</text></g><g><title>__x64_sys_recvfrom (26 samples, 3.50%)</title><rect x="36.5229%" y="565" width="3.5040%" height="15" fill="rgb(213,208,19)"/><text x="36.7729%" y="575.50">__x..</text></g><g><title>__sys_recvfrom (26 samples, 3.50%)</title><rect x="36.5229%" y="549" width="3.5040%" height="15" fill="rgb(233,156,4)"/><text x="36.7729%" y="559.50">__s..</text></g><g><title>inet_recvmsg (24 samples, 3.23%)</title><rect x="36.7925%" y="533" width="3.2345%" height="15" fill="rgb(207,194,5)"/><text x="37.0425%" y="543.50">ine..</text></g><g><title>tcp_recvmsg (24 samples, 3.23%)</title><rect x="36.7925%" y="517" width="3.2345%" height="15" fill="rgb(206,111,30)"/><text x="37.0425%" y="527.50">tcp..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.13%)</title><rect x="39.8922%" y="501" width="0.1348%" height="15" fill="rgb(243,70,54)"/><text x="40.1422%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (32 samples, 4.31%)</title><rect x="36.1186%" y="693" width="4.3127%" height="15" fill="rgb(242,28,8)"/><text x="36.3686%" y="703.50">&lt;std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 4.31%)</title><rect x="36.1186%" y="677" width="4.3127%" height="15" fill="rgb(219,106,18)"/><text x="36.3686%" y="687.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 4.31%)</title><rect x="36.1186%" y="661" width="4.3127%" height="15" fill="rgb(244,222,10)"/><text x="36.3686%" y="671.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 4.31%)</title><rect x="36.1186%" y="645" width="4.3127%" height="15" fill="rgb(236,179,52)"/><text x="36.3686%" y="655.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 4.31%)</title><rect x="36.1186%" y="629" width="4.3127%" height="15" fill="rgb(213,23,39)"/><text x="36.3686%" y="639.50">std::..</text></g><g><title>__libc_recv (32 samples, 4.31%)</title><rect x="36.1186%" y="613" width="4.3127%" height="15" fill="rgb(238,48,10)"/><text x="36.3686%" y="623.50">__lib..</text></g><g><title>entry_SYSCALL_64 (30 samples, 4.04%)</title><rect x="36.3881%" y="597" width="4.0431%" height="15" fill="rgb(251,196,23)"/><text x="36.6381%" y="607.50">entr..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.40%)</title><rect x="40.0270%" y="581" width="0.4043%" height="15" fill="rgb(250,152,24)"/><text x="40.2770%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.13%)</title><rect x="40.4313%" y="645" width="0.1348%" height="15" fill="rgb(209,150,17)"/><text x="40.6813%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.13%)</title><rect x="40.4313%" y="629" width="0.1348%" height="15" fill="rgb(234,202,34)"/><text x="40.6813%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.13%)</title><rect x="40.4313%" y="613" width="0.1348%" height="15" fill="rgb(253,148,53)"/><text x="40.6813%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 4.58%)</title><rect x="36.1186%" y="709" width="4.5822%" height="15" fill="rgb(218,129,16)"/><text x="36.3686%" y="719.50">&lt;mysq..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.27%)</title><rect x="40.4313%" y="693" width="0.2695%" height="15" fill="rgb(216,85,19)"/><text x="40.6813%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.27%)</title><rect x="40.4313%" y="677" width="0.2695%" height="15" fill="rgb(235,228,7)"/><text x="40.6813%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.27%)</title><rect x="40.4313%" y="661" width="0.2695%" height="15" fill="rgb(245,175,0)"/><text x="40.6813%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.13%)</title><rect x="40.5660%" y="645" width="0.1348%" height="15" fill="rgb(208,168,36)"/><text x="40.8160%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (35 samples, 4.72%)</title><rect x="36.1186%" y="725" width="4.7170%" height="15" fill="rgb(246,171,24)"/><text x="36.3686%" y="735.50">mysql..</text></g><g><title>__GI___libc_free (1 samples, 0.13%)</title><rect x="40.7008%" y="709" width="0.1348%" height="15" fill="rgb(215,142,24)"/><text x="40.9508%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (38 samples, 5.12%)</title><rect x="35.8491%" y="741" width="5.1213%" height="15" fill="rgb(250,187,7)"/><text x="36.0991%" y="751.50">mysql:..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.13%)</title><rect x="40.8356%" y="725" width="0.1348%" height="15" fill="rgb(228,66,33)"/><text x="41.0856%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.13%)</title><rect x="40.9704%" y="725" width="0.1348%" height="15" fill="rgb(234,215,21)"/><text x="41.2204%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.13%)</title><rect x="40.9704%" y="709" width="0.1348%" height="15" fill="rgb(222,191,20)"/><text x="41.2204%" y="719.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.13%)</title><rect x="40.9704%" y="693" width="0.1348%" height="15" fill="rgb(245,79,54)"/><text x="41.2204%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="40.9704%" y="677" width="0.1348%" height="15" fill="rgb(240,10,37)"/><text x="41.2204%" y="687.50"></text></g><g><title>page_fault (1 samples, 0.13%)</title><rect x="40.9704%" y="661" width="0.1348%" height="15" fill="rgb(214,192,32)"/><text x="41.2204%" y="671.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.13%)</title><rect x="40.9704%" y="645" width="0.1348%" height="15" fill="rgb(209,36,54)"/><text x="41.2204%" y="655.50"></text></g><g><title>find_vma (1 samples, 0.13%)</title><rect x="40.9704%" y="629" width="0.1348%" height="15" fill="rgb(220,10,11)"/><text x="41.2204%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.13%)</title><rect x="41.1051%" y="725" width="0.1348%" height="15" fill="rgb(221,106,17)"/><text x="41.3551%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="41.1051%" y="709" width="0.1348%" height="15" fill="rgb(251,142,44)"/><text x="41.3551%" y="719.50"></text></g><g><title>inet_sendmsg (1 samples, 0.13%)</title><rect x="41.5094%" y="581" width="0.1348%" height="15" fill="rgb(238,13,15)"/><text x="41.7594%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="41.6442%" y="565" width="0.1348%" height="15" fill="rgb(208,107,27)"/><text x="41.8942%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="41.6442%" y="549" width="0.1348%" height="15" fill="rgb(205,136,37)"/><text x="41.8942%" y="559.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="42.1833%" y="485" width="0.1348%" height="15" fill="rgb(250,205,27)"/><text x="42.4333%" y="495.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.13%)</title><rect x="42.4528%" y="453" width="0.1348%" height="15" fill="rgb(210,80,43)"/><text x="42.7028%" y="463.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.13%)</title><rect x="42.4528%" y="437" width="0.1348%" height="15" fill="rgb(247,160,36)"/><text x="42.7028%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.13%)</title><rect x="42.4528%" y="421" width="0.1348%" height="15" fill="rgb(234,13,49)"/><text x="42.7028%" y="431.50"></text></g><g><title>tcp_wfree (1 samples, 0.13%)</title><rect x="42.4528%" y="405" width="0.1348%" height="15" fill="rgb(234,122,0)"/><text x="42.7028%" y="415.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.13%)</title><rect x="42.7224%" y="421" width="0.1348%" height="15" fill="rgb(207,146,38)"/><text x="42.9724%" y="431.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.13%)</title><rect x="42.8571%" y="389" width="0.1348%" height="15" fill="rgb(207,177,25)"/><text x="43.1071%" y="399.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="43.2615%" y="341" width="0.1348%" height="15" fill="rgb(211,178,42)"/><text x="43.5115%" y="351.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="43.5310%" y="261" width="0.1348%" height="15" fill="rgb(230,69,54)"/><text x="43.7810%" y="271.50"></text></g><g><title>inet_ehashfn (1 samples, 0.13%)</title><rect x="43.5310%" y="245" width="0.1348%" height="15" fill="rgb(214,135,41)"/><text x="43.7810%" y="255.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.13%)</title><rect x="43.6658%" y="261" width="0.1348%" height="15" fill="rgb(237,67,25)"/><text x="43.9158%" y="271.50"></text></g><g><title>sock_put (1 samples, 0.13%)</title><rect x="43.8005%" y="261" width="0.1348%" height="15" fill="rgb(222,189,50)"/><text x="44.0505%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="44.4744%" y="149" width="0.1348%" height="15" fill="rgb(245,148,34)"/><text x="44.7244%" y="159.50"></text></g><g><title>psi_task_change (2 samples, 0.27%)</title><rect x="44.6092%" y="133" width="0.2695%" height="15" fill="rgb(222,29,6)"/><text x="44.8592%" y="143.50"></text></g><g><title>psi_group_change (2 samples, 0.27%)</title><rect x="44.6092%" y="117" width="0.2695%" height="15" fill="rgb(221,189,43)"/><text x="44.8592%" y="127.50"></text></g><g><title>enqueue_task (3 samples, 0.40%)</title><rect x="44.6092%" y="149" width="0.4043%" height="15" fill="rgb(207,36,27)"/><text x="44.8592%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.13%)</title><rect x="44.8787%" y="133" width="0.1348%" height="15" fill="rgb(217,90,24)"/><text x="45.1287%" y="143.50"></text></g><g><title>reweight_entity (1 samples, 0.13%)</title><rect x="45.2830%" y="117" width="0.1348%" height="15" fill="rgb(224,66,35)"/><text x="45.5330%" y="127.50"></text></g><g><title>update_cfs_group (1 samples, 0.13%)</title><rect x="45.4178%" y="117" width="0.1348%" height="15" fill="rgb(221,13,50)"/><text x="45.6678%" y="127.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.81%)</title><rect x="45.0135%" y="149" width="0.8086%" height="15" fill="rgb(236,68,49)"/><text x="45.2635%" y="159.50"></text></g><g><title>enqueue_entity (5 samples, 0.67%)</title><rect x="45.1482%" y="133" width="0.6739%" height="15" fill="rgb(229,146,28)"/><text x="45.3982%" y="143.50"></text></g><g><title>update_load_avg (2 samples, 0.27%)</title><rect x="45.5526%" y="117" width="0.2695%" height="15" fill="rgb(225,31,38)"/><text x="45.8026%" y="127.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.27%)</title><rect x="45.5526%" y="101" width="0.2695%" height="15" fill="rgb(250,208,3)"/><text x="45.8026%" y="111.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.27%)</title><rect x="45.8221%" y="149" width="0.2695%" height="15" fill="rgb(246,54,23)"/><text x="46.0721%" y="159.50"></text></g><g><title>check_preempt_curr (2 samples, 0.27%)</title><rect x="45.8221%" y="133" width="0.2695%" height="15" fill="rgb(243,76,11)"/><text x="46.0721%" y="143.50"></text></g><g><title>resched_curr (2 samples, 0.27%)</title><rect x="45.8221%" y="117" width="0.2695%" height="15" fill="rgb(245,21,50)"/><text x="46.0721%" y="127.50"></text></g><g><title>__wake_up_common (16 samples, 2.16%)</title><rect x="44.3396%" y="197" width="2.1563%" height="15" fill="rgb(228,9,43)"/><text x="44.5896%" y="207.50">_..</text></g><g><title>pollwake (16 samples, 2.16%)</title><rect x="44.3396%" y="181" width="2.1563%" height="15" fill="rgb(208,100,47)"/><text x="44.5896%" y="191.50">p..</text></g><g><title>try_to_wake_up (16 samples, 2.16%)</title><rect x="44.3396%" y="165" width="2.1563%" height="15" fill="rgb(232,26,8)"/><text x="44.5896%" y="175.50">t..</text></g><g><title>update_rq_clock (3 samples, 0.40%)</title><rect x="46.0916%" y="149" width="0.4043%" height="15" fill="rgb(216,166,38)"/><text x="46.3416%" y="159.50"></text></g><g><title>sock_def_readable (20 samples, 2.70%)</title><rect x="44.0701%" y="229" width="2.6954%" height="15" fill="rgb(251,202,51)"/><text x="44.3201%" y="239.50">so..</text></g><g><title>__wake_up_common_lock (18 samples, 2.43%)</title><rect x="44.3396%" y="213" width="2.4259%" height="15" fill="rgb(254,216,34)"/><text x="44.5896%" y="223.50">__..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.27%)</title><rect x="46.4960%" y="197" width="0.2695%" height="15" fill="rgb(251,32,27)"/><text x="46.7460%" y="207.50"></text></g><g><title>__kfree_skb (2 samples, 0.27%)</title><rect x="46.9003%" y="213" width="0.2695%" height="15" fill="rgb(208,127,28)"/><text x="47.1503%" y="223.50"></text></g><g><title>skb_release_data (2 samples, 0.27%)</title><rect x="46.9003%" y="197" width="0.2695%" height="15" fill="rgb(224,137,22)"/><text x="47.1503%" y="207.50"></text></g><g><title>kmem_cache_free (1 samples, 0.13%)</title><rect x="47.1698%" y="213" width="0.1348%" height="15" fill="rgb(254,70,32)"/><text x="47.4198%" y="223.50"></text></g><g><title>__slab_free (1 samples, 0.13%)</title><rect x="47.1698%" y="197" width="0.1348%" height="15" fill="rgb(229,75,37)"/><text x="47.4198%" y="207.50"></text></g><g><title>ip_local_deliver (30 samples, 4.04%)</title><rect x="43.3962%" y="325" width="4.0431%" height="15" fill="rgb(252,64,23)"/><text x="43.6462%" y="335.50">ip_l..</text></g><g><title>ip_local_deliver_finish (30 samples, 4.04%)</title><rect x="43.3962%" y="309" width="4.0431%" height="15" fill="rgb(232,162,48)"/><text x="43.6462%" y="319.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (30 samples, 4.04%)</title><rect x="43.3962%" y="293" width="4.0431%" height="15" fill="rgb(246,160,12)"/><text x="43.6462%" y="303.50">ip_p..</text></g><g><title>tcp_v4_rcv (30 samples, 4.04%)</title><rect x="43.3962%" y="277" width="4.0431%" height="15" fill="rgb(247,166,0)"/><text x="43.6462%" y="287.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (26 samples, 3.50%)</title><rect x="43.9353%" y="261" width="3.5040%" height="15" fill="rgb(249,219,21)"/><text x="44.1853%" y="271.50">tcp..</text></g><g><title>tcp_rcv_established (26 samples, 3.50%)</title><rect x="43.9353%" y="245" width="3.5040%" height="15" fill="rgb(205,209,3)"/><text x="44.1853%" y="255.50">tcp..</text></g><g><title>tcp_ack (5 samples, 0.67%)</title><rect x="46.7655%" y="229" width="0.6739%" height="15" fill="rgb(243,44,1)"/><text x="47.0155%" y="239.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.13%)</title><rect x="47.3046%" y="213" width="0.1348%" height="15" fill="rgb(206,159,16)"/><text x="47.5546%" y="223.50"></text></g><g><title>ip_finish_output2 (40 samples, 5.39%)</title><rect x="42.3181%" y="469" width="5.3908%" height="15" fill="rgb(244,77,30)"/><text x="42.5681%" y="479.50">ip_fini..</text></g><g><title>__local_bh_enable_ip (38 samples, 5.12%)</title><rect x="42.5876%" y="453" width="5.1213%" height="15" fill="rgb(218,69,12)"/><text x="42.8376%" y="463.50">__loca..</text></g><g><title>do_softirq (38 samples, 5.12%)</title><rect x="42.5876%" y="437" width="5.1213%" height="15" fill="rgb(212,87,7)"/><text x="42.8376%" y="447.50">do_sof..</text></g><g><title>do_softirq_own_stack (36 samples, 4.85%)</title><rect x="42.8571%" y="421" width="4.8518%" height="15" fill="rgb(245,114,25)"/><text x="43.1071%" y="431.50">do_sof..</text></g><g><title>__do_softirq (36 samples, 4.85%)</title><rect x="42.8571%" y="405" width="4.8518%" height="15" fill="rgb(210,61,42)"/><text x="43.1071%" y="415.50">__do_s..</text></g><g><title>net_rx_action (35 samples, 4.72%)</title><rect x="42.9919%" y="389" width="4.7170%" height="15" fill="rgb(211,52,33)"/><text x="43.2419%" y="399.50">net_r..</text></g><g><title>process_backlog (34 samples, 4.58%)</title><rect x="43.1267%" y="373" width="4.5822%" height="15" fill="rgb(234,58,33)"/><text x="43.3767%" y="383.50">proce..</text></g><g><title>__netif_receive_skb_one_core (33 samples, 4.45%)</title><rect x="43.2615%" y="357" width="4.4474%" height="15" fill="rgb(220,115,36)"/><text x="43.5115%" y="367.50">__net..</text></g><g><title>ip_rcv (32 samples, 4.31%)</title><rect x="43.3962%" y="341" width="4.3127%" height="15" fill="rgb(243,153,54)"/><text x="43.6462%" y="351.50">ip_rcv</text></g><g><title>ip_rcv_finish (2 samples, 0.27%)</title><rect x="47.4394%" y="325" width="0.2695%" height="15" fill="rgb(251,47,18)"/><text x="47.6894%" y="335.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.27%)</title><rect x="47.4394%" y="309" width="0.2695%" height="15" fill="rgb(242,102,42)"/><text x="47.6894%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (44 samples, 5.93%)</title><rect x="41.9137%" y="549" width="5.9299%" height="15" fill="rgb(234,31,38)"/><text x="42.1637%" y="559.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (44 samples, 5.93%)</title><rect x="41.9137%" y="533" width="5.9299%" height="15" fill="rgb(221,117,51)"/><text x="42.1637%" y="543.50">tcp_writ..</text></g><g><title>__tcp_transmit_skb (44 samples, 5.93%)</title><rect x="41.9137%" y="517" width="5.9299%" height="15" fill="rgb(212,20,18)"/><text x="42.1637%" y="527.50">__tcp_tr..</text></g><g><title>__ip_queue_xmit (42 samples, 5.66%)</title><rect x="42.1833%" y="501" width="5.6604%" height="15" fill="rgb(245,133,36)"/><text x="42.4333%" y="511.50">__ip_qu..</text></g><g><title>ip_output (41 samples, 5.53%)</title><rect x="42.3181%" y="485" width="5.5256%" height="15" fill="rgb(212,6,19)"/><text x="42.5681%" y="495.50">ip_outp..</text></g><g><title>ip_finish_output (1 samples, 0.13%)</title><rect x="47.7089%" y="469" width="0.1348%" height="15" fill="rgb(218,1,36)"/><text x="47.9589%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="47.7089%" y="453" width="0.1348%" height="15" fill="rgb(246,84,54)"/><text x="47.9589%" y="463.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.13%)</title><rect x="47.8437%" y="549" width="0.1348%" height="15" fill="rgb(242,110,6)"/><text x="48.0937%" y="559.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.13%)</title><rect x="47.8437%" y="533" width="0.1348%" height="15" fill="rgb(214,47,5)"/><text x="48.0937%" y="543.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.13%)</title><rect x="47.9784%" y="549" width="0.1348%" height="15" fill="rgb(218,159,25)"/><text x="48.2284%" y="559.50"></text></g><g><title>__alloc_skb (1 samples, 0.13%)</title><rect x="47.9784%" y="533" width="0.1348%" height="15" fill="rgb(215,211,28)"/><text x="48.2284%" y="543.50"></text></g><g><title>do_syscall_64 (52 samples, 7.01%)</title><rect x="41.2399%" y="645" width="7.0081%" height="15" fill="rgb(238,59,32)"/><text x="41.4899%" y="655.50">do_syscal..</text></g><g><title>__x64_sys_sendto (51 samples, 6.87%)</title><rect x="41.3747%" y="629" width="6.8733%" height="15" fill="rgb(226,82,3)"/><text x="41.6247%" y="639.50">__x64_sys..</text></g><g><title>__sys_sendto (51 samples, 6.87%)</title><rect x="41.3747%" y="613" width="6.8733%" height="15" fill="rgb(240,164,32)"/><text x="41.6247%" y="623.50">__sys_sen..</text></g><g><title>sock_sendmsg (51 samples, 6.87%)</title><rect x="41.3747%" y="597" width="6.8733%" height="15" fill="rgb(232,46,7)"/><text x="41.6247%" y="607.50">sock_send..</text></g><g><title>tcp_sendmsg (49 samples, 6.60%)</title><rect x="41.6442%" y="581" width="6.6038%" height="15" fill="rgb(229,129,53)"/><text x="41.8942%" y="591.50">tcp_sendm..</text></g><g><title>tcp_sendmsg_locked (48 samples, 6.47%)</title><rect x="41.7790%" y="565" width="6.4690%" height="15" fill="rgb(234,188,29)"/><text x="42.0290%" y="575.50">tcp_send..</text></g><g><title>skb_entail (1 samples, 0.13%)</title><rect x="48.1132%" y="549" width="0.1348%" height="15" fill="rgb(246,141,4)"/><text x="48.3632%" y="559.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (105 samples, 14.15%)</title><rect x="34.3666%" y="773" width="14.1509%" height="15" fill="rgb(229,23,39)"/><text x="34.6166%" y="783.50">&lt;decor::Shim as msql_..</text></g><g><title>mysql::conn::Conn::_query (96 samples, 12.94%)</title><rect x="35.5795%" y="757" width="12.9380%" height="15" fill="rgb(206,12,3)"/><text x="35.8295%" y="767.50">mysql::conn::Conn::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (56 samples, 7.55%)</title><rect x="40.9704%" y="741" width="7.5472%" height="15" fill="rgb(252,226,20)"/><text x="41.2204%" y="751.50">mysql_comm..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (54 samples, 7.28%)</title><rect x="41.2399%" y="725" width="7.2776%" height="15" fill="rgb(216,123,35)"/><text x="41.4899%" y="735.50">std::io::b..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (54 samples, 7.28%)</title><rect x="41.2399%" y="709" width="7.2776%" height="15" fill="rgb(212,68,40)"/><text x="41.4899%" y="719.50">&lt;std::net:..</text></g><g><title>std::sys_common::net::TcpStream::write (54 samples, 7.28%)</title><rect x="41.2399%" y="693" width="7.2776%" height="15" fill="rgb(254,125,32)"/><text x="41.4899%" y="703.50">std::sys_c..</text></g><g><title>__libc_send (54 samples, 7.28%)</title><rect x="41.2399%" y="677" width="7.2776%" height="15" fill="rgb(253,97,22)"/><text x="41.4899%" y="687.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (54 samples, 7.28%)</title><rect x="41.2399%" y="661" width="7.2776%" height="15" fill="rgb(241,101,14)"/><text x="41.4899%" y="671.50">entry_SYSC..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.27%)</title><rect x="48.2480%" y="645" width="0.2695%" height="15" fill="rgb(238,103,29)"/><text x="48.4980%" y="655.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.13%)</title><rect x="48.5175%" y="773" width="0.1348%" height="15" fill="rgb(233,195,47)"/><text x="48.7675%" y="783.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.13%)</title><rect x="48.5175%" y="757" width="0.1348%" height="15" fill="rgb(246,218,30)"/><text x="48.7675%" y="767.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.13%)</title><rect x="48.6523%" y="661" width="0.1348%" height="15" fill="rgb(219,145,47)"/><text x="48.9023%" y="671.50"></text></g><g><title>__kfree_skb (2 samples, 0.27%)</title><rect x="49.4609%" y="565" width="0.2695%" height="15" fill="rgb(243,12,26)"/><text x="49.7109%" y="575.50"></text></g><g><title>skb_release_head_state (2 samples, 0.27%)</title><rect x="49.4609%" y="549" width="0.2695%" height="15" fill="rgb(214,87,16)"/><text x="49.7109%" y="559.50"></text></g><g><title>dst_release (2 samples, 0.27%)</title><rect x="49.4609%" y="533" width="0.2695%" height="15" fill="rgb(208,99,42)"/><text x="49.7109%" y="543.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.13%)</title><rect x="49.7305%" y="565" width="0.1348%" height="15" fill="rgb(253,99,2)"/><text x="49.9805%" y="575.50"></text></g><g><title>__alloc_skb (1 samples, 0.13%)</title><rect x="49.7305%" y="549" width="0.1348%" height="15" fill="rgb(220,168,23)"/><text x="49.9805%" y="559.50"></text></g><g><title>__ksize (1 samples, 0.13%)</title><rect x="49.7305%" y="533" width="0.1348%" height="15" fill="rgb(242,38,24)"/><text x="49.9805%" y="543.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.13%)</title><rect x="50.0000%" y="501" width="0.1348%" height="15" fill="rgb(225,182,9)"/><text x="50.2500%" y="511.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.13%)</title><rect x="50.0000%" y="485" width="0.1348%" height="15" fill="rgb(243,178,37)"/><text x="50.2500%" y="495.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="50.5391%" y="309" width="0.1348%" height="15" fill="rgb(232,139,19)"/><text x="50.7891%" y="319.50"></text></g><g><title>net_rx_action (4 samples, 0.54%)</title><rect x="50.2695%" y="437" width="0.5391%" height="15" fill="rgb(225,201,24)"/><text x="50.5195%" y="447.50"></text></g><g><title>process_backlog (3 samples, 0.40%)</title><rect x="50.4043%" y="421" width="0.4043%" height="15" fill="rgb(221,47,46)"/><text x="50.6543%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.27%)</title><rect x="50.5391%" y="405" width="0.2695%" height="15" fill="rgb(249,23,13)"/><text x="50.7891%" y="415.50"></text></g><g><title>ip_rcv (2 samples, 0.27%)</title><rect x="50.5391%" y="389" width="0.2695%" height="15" fill="rgb(219,9,5)"/><text x="50.7891%" y="399.50"></text></g><g><title>ip_local_deliver (2 samples, 0.27%)</title><rect x="50.5391%" y="373" width="0.2695%" height="15" fill="rgb(254,171,16)"/><text x="50.7891%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.27%)</title><rect x="50.5391%" y="357" width="0.2695%" height="15" fill="rgb(230,171,20)"/><text x="50.7891%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.27%)</title><rect x="50.5391%" y="341" width="0.2695%" height="15" fill="rgb(210,71,41)"/><text x="50.7891%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.27%)</title><rect x="50.5391%" y="325" width="0.2695%" height="15" fill="rgb(206,173,20)"/><text x="50.7891%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.13%)</title><rect x="50.6739%" y="309" width="0.1348%" height="15" fill="rgb(233,88,34)"/><text x="50.9239%" y="319.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.13%)</title><rect x="50.6739%" y="293" width="0.1348%" height="15" fill="rgb(223,209,46)"/><text x="50.9239%" y="303.50"></text></g><g><title>tcp_ack (1 samples, 0.13%)</title><rect x="50.6739%" y="277" width="0.1348%" height="15" fill="rgb(250,43,18)"/><text x="50.9239%" y="287.50"></text></g><g><title>__kfree_skb (1 samples, 0.13%)</title><rect x="50.6739%" y="261" width="0.1348%" height="15" fill="rgb(208,13,10)"/><text x="50.9239%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.13%)</title><rect x="50.6739%" y="245" width="0.1348%" height="15" fill="rgb(212,200,36)"/><text x="50.9239%" y="255.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 1.08%)</title><rect x="49.8652%" y="565" width="1.0782%" height="15" fill="rgb(225,90,30)"/><text x="50.1152%" y="575.50"></text></g><g><title>__ip_queue_xmit (8 samples, 1.08%)</title><rect x="49.8652%" y="549" width="1.0782%" height="15" fill="rgb(236,182,39)"/><text x="50.1152%" y="559.50"></text></g><g><title>ip_output (8 samples, 1.08%)</title><rect x="49.8652%" y="533" width="1.0782%" height="15" fill="rgb(212,144,35)"/><text x="50.1152%" y="543.50"></text></g><g><title>ip_finish_output2 (8 samples, 1.08%)</title><rect x="49.8652%" y="517" width="1.0782%" height="15" fill="rgb(228,63,44)"/><text x="50.1152%" y="527.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.81%)</title><rect x="50.1348%" y="501" width="0.8086%" height="15" fill="rgb(228,109,6)"/><text x="50.3848%" y="511.50"></text></g><g><title>do_softirq (6 samples, 0.81%)</title><rect x="50.1348%" y="485" width="0.8086%" height="15" fill="rgb(238,117,24)"/><text x="50.3848%" y="495.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.81%)</title><rect x="50.1348%" y="469" width="0.8086%" height="15" fill="rgb(242,26,26)"/><text x="50.3848%" y="479.50"></text></g><g><title>__do_softirq (6 samples, 0.81%)</title><rect x="50.1348%" y="453" width="0.8086%" height="15" fill="rgb(221,92,48)"/><text x="50.3848%" y="463.50"></text></g><g><title>try_to_wake_up (1 samples, 0.13%)</title><rect x="50.8086%" y="437" width="0.1348%" height="15" fill="rgb(209,209,32)"/><text x="51.0586%" y="447.50"></text></g><g><title>enqueue_task (1 samples, 0.13%)</title><rect x="50.8086%" y="421" width="0.1348%" height="15" fill="rgb(221,70,22)"/><text x="51.0586%" y="431.50"></text></g><g><title>psi_task_change (1 samples, 0.13%)</title><rect x="50.8086%" y="405" width="0.1348%" height="15" fill="rgb(248,145,5)"/><text x="51.0586%" y="415.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.13%)</title><rect x="50.9434%" y="565" width="0.1348%" height="15" fill="rgb(226,116,26)"/><text x="51.1934%" y="575.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="51.2129%" y="549" width="0.1348%" height="15" fill="rgb(244,5,17)"/><text x="51.4629%" y="559.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.13%)</title><rect x="51.2129%" y="533" width="0.1348%" height="15" fill="rgb(252,159,33)"/><text x="51.4629%" y="543.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.40%)</title><rect x="51.6173%" y="485" width="0.4043%" height="15" fill="rgb(206,71,0)"/><text x="51.8673%" y="495.50"></text></g><g><title>dequeue_entity (3 samples, 0.40%)</title><rect x="51.6173%" y="469" width="0.4043%" height="15" fill="rgb(233,118,54)"/><text x="51.8673%" y="479.50"></text></g><g><title>update_load_avg (3 samples, 0.40%)</title><rect x="51.6173%" y="453" width="0.4043%" height="15" fill="rgb(234,83,48)"/><text x="51.8673%" y="463.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.13%)</title><rect x="51.8868%" y="437" width="0.1348%" height="15" fill="rgb(228,3,54)"/><text x="52.1368%" y="447.50"></text></g><g><title>finish_task_switch (2 samples, 0.27%)</title><rect x="52.0216%" y="485" width="0.2695%" height="15" fill="rgb(226,155,13)"/><text x="52.2716%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.27%)</title><rect x="52.0216%" y="469" width="0.2695%" height="15" fill="rgb(241,28,37)"/><text x="52.2716%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.27%)</title><rect x="52.0216%" y="453" width="0.2695%" height="15" fill="rgb(233,93,10)"/><text x="52.2716%" y="463.50"></text></g><g><title>native_write_msr (2 samples, 0.27%)</title><rect x="52.0216%" y="437" width="0.2695%" height="15" fill="rgb(225,113,19)"/><text x="52.2716%" y="447.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.27%)</title><rect x="52.2911%" y="485" width="0.2695%" height="15" fill="rgb(241,2,18)"/><text x="52.5411%" y="495.50"></text></g><g><title>newidle_balance (2 samples, 0.27%)</title><rect x="52.2911%" y="469" width="0.2695%" height="15" fill="rgb(228,207,21)"/><text x="52.5411%" y="479.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="52.4259%" y="453" width="0.1348%" height="15" fill="rgb(213,211,35)"/><text x="52.6759%" y="463.50"></text></g><g><title>psi_task_change (1 samples, 0.13%)</title><rect x="52.5606%" y="485" width="0.1348%" height="15" fill="rgb(209,83,10)"/><text x="52.8106%" y="495.50"></text></g><g><title>psi_group_change (1 samples, 0.13%)</title><rect x="52.5606%" y="469" width="0.1348%" height="15" fill="rgb(209,164,1)"/><text x="52.8106%" y="479.50"></text></g><g><title>__schedule (9 samples, 1.21%)</title><rect x="51.6173%" y="501" width="1.2129%" height="15" fill="rgb(213,184,43)"/><text x="51.8673%" y="511.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.13%)</title><rect x="52.6954%" y="485" width="0.1348%" height="15" fill="rgb(231,61,34)"/><text x="52.9454%" y="495.50"></text></g><g><title>sk_wait_data (14 samples, 1.89%)</title><rect x="51.0782%" y="565" width="1.8868%" height="15" fill="rgb(235,75,3)"/><text x="51.3282%" y="575.50">s..</text></g><g><title>wait_woken (12 samples, 1.62%)</title><rect x="51.3477%" y="549" width="1.6173%" height="15" fill="rgb(220,106,47)"/><text x="51.5977%" y="559.50"></text></g><g><title>schedule_timeout (12 samples, 1.62%)</title><rect x="51.3477%" y="533" width="1.6173%" height="15" fill="rgb(210,196,33)"/><text x="51.5977%" y="543.50"></text></g><g><title>schedule (10 samples, 1.35%)</title><rect x="51.6173%" y="517" width="1.3477%" height="15" fill="rgb(229,154,42)"/><text x="51.8673%" y="527.50"></text></g><g><title>preempt_count_add (1 samples, 0.13%)</title><rect x="52.8302%" y="501" width="0.1348%" height="15" fill="rgb(228,114,26)"/><text x="53.0802%" y="511.50"></text></g><g><title>in_lock_functions (1 samples, 0.13%)</title><rect x="52.8302%" y="485" width="0.1348%" height="15" fill="rgb(208,144,1)"/><text x="53.0802%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.40%)</title><rect x="52.9650%" y="565" width="0.4043%" height="15" fill="rgb(239,112,37)"/><text x="53.2150%" y="575.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.40%)</title><rect x="52.9650%" y="549" width="0.4043%" height="15" fill="rgb(210,96,50)"/><text x="53.2150%" y="559.50"></text></g><g><title>_copy_to_iter (3 samples, 0.40%)</title><rect x="52.9650%" y="533" width="0.4043%" height="15" fill="rgb(222,178,2)"/><text x="53.2150%" y="543.50"></text></g><g><title>copy_user_enhanced_fast_string (2 samples, 0.27%)</title><rect x="53.0997%" y="517" width="0.2695%" height="15" fill="rgb(226,74,18)"/><text x="53.3497%" y="527.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.13%)</title><rect x="53.3693%" y="565" width="0.1348%" height="15" fill="rgb(225,67,54)"/><text x="53.6193%" y="575.50"></text></g><g><title>inet_recvmsg (32 samples, 4.31%)</title><rect x="49.3261%" y="597" width="4.3127%" height="15" fill="rgb(251,92,32)"/><text x="49.5761%" y="607.50">inet_..</text></g><g><title>tcp_recvmsg (32 samples, 4.31%)</title><rect x="49.3261%" y="581" width="4.3127%" height="15" fill="rgb(228,149,22)"/><text x="49.5761%" y="591.50">tcp_r..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.13%)</title><rect x="53.5040%" y="565" width="0.1348%" height="15" fill="rgb(243,54,13)"/><text x="53.7540%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (35 samples, 4.72%)</title><rect x="49.0566%" y="629" width="4.7170%" height="15" fill="rgb(243,180,28)"/><text x="49.3066%" y="639.50">__x64..</text></g><g><title>__sys_recvfrom (34 samples, 4.58%)</title><rect x="49.1914%" y="613" width="4.5822%" height="15" fill="rgb(208,167,24)"/><text x="49.4414%" y="623.50">__sys..</text></g><g><title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="53.6388%" y="597" width="0.1348%" height="15" fill="rgb(245,73,45)"/><text x="53.8888%" y="607.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="53.7736%" y="629" width="0.1348%" height="15" fill="rgb(237,203,48)"/><text x="54.0236%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="53.7736%" y="613" width="0.1348%" height="15" fill="rgb(211,197,16)"/><text x="54.0236%" y="623.50"></text></g><g><title>kfree (1 samples, 0.13%)</title><rect x="53.7736%" y="597" width="0.1348%" height="15" fill="rgb(243,99,51)"/><text x="54.0236%" y="607.50"></text></g><g><title>do_syscall_64 (37 samples, 4.99%)</title><rect x="49.0566%" y="645" width="4.9865%" height="15" fill="rgb(215,123,29)"/><text x="49.3066%" y="655.50">do_sys..</text></g><g><title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="53.9084%" y="629" width="0.1348%" height="15" fill="rgb(239,186,37)"/><text x="54.1584%" y="639.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.13%)</title><rect x="53.9084%" y="613" width="0.1348%" height="15" fill="rgb(252,136,39)"/><text x="54.1584%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (45 samples, 6.06%)</title><rect x="48.7871%" y="661" width="6.0647%" height="15" fill="rgb(223,213,32)"/><text x="49.0371%" y="671.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.81%)</title><rect x="54.0431%" y="645" width="0.8086%" height="15" fill="rgb(233,115,5)"/><text x="54.2931%" y="655.50"></text></g><g><title>switch_fpu_return (1 samples, 0.13%)</title><rect x="54.7170%" y="629" width="0.1348%" height="15" fill="rgb(207,226,44)"/><text x="54.9670%" y="639.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.13%)</title><rect x="54.7170%" y="613" width="0.1348%" height="15" fill="rgb(208,126,0)"/><text x="54.9670%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (48 samples, 6.47%)</title><rect x="48.6523%" y="741" width="6.4690%" height="15" fill="rgb(244,66,21)"/><text x="48.9023%" y="751.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (48 samples, 6.47%)</title><rect x="48.6523%" y="725" width="6.4690%" height="15" fill="rgb(222,97,12)"/><text x="48.9023%" y="735.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (48 samples, 6.47%)</title><rect x="48.6523%" y="709" width="6.4690%" height="15" fill="rgb(219,213,19)"/><text x="48.9023%" y="719.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (48 samples, 6.47%)</title><rect x="48.6523%" y="693" width="6.4690%" height="15" fill="rgb(252,169,30)"/><text x="48.9023%" y="703.50">std::sys..</text></g><g><title>__libc_recv (48 samples, 6.47%)</title><rect x="48.6523%" y="677" width="6.4690%" height="15" fill="rgb(206,32,51)"/><text x="48.9023%" y="687.50">__libc_r..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.27%)</title><rect x="54.8518%" y="661" width="0.2695%" height="15" fill="rgb(250,172,42)"/><text x="55.1018%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (49 samples, 6.60%)</title><rect x="48.6523%" y="757" width="6.6038%" height="15" fill="rgb(209,34,43)"/><text x="48.9023%" y="767.50">&lt;std::io:..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="55.1213%" y="741" width="0.1348%" height="15" fill="rgb(223,11,35)"/><text x="55.3713%" y="751.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (50 samples, 6.74%)</title><rect x="48.6523%" y="773" width="6.7385%" height="15" fill="rgb(251,219,26)"/><text x="48.9023%" y="783.50">msql_srv:..</text></g><g><title>__memset_avx2_erms (1 samples, 0.13%)</title><rect x="55.2561%" y="757" width="0.1348%" height="15" fill="rgb(231,119,3)"/><text x="55.5061%" y="767.50"></text></g><g><title>release_sock (1 samples, 0.13%)</title><rect x="55.3908%" y="613" width="0.1348%" height="15" fill="rgb(216,97,11)"/><text x="55.6408%" y="623.50"></text></g><g><title>tcp_release_cb (1 samples, 0.13%)</title><rect x="55.3908%" y="597" width="0.1348%" height="15" fill="rgb(223,59,9)"/><text x="55.6408%" y="607.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.13%)</title><rect x="56.3342%" y="533" width="0.1348%" height="15" fill="rgb(233,93,31)"/><text x="56.5842%" y="543.50"></text></g><g><title>__sk_dst_check (1 samples, 0.13%)</title><rect x="56.4690%" y="533" width="0.1348%" height="15" fill="rgb(239,81,33)"/><text x="56.7190%" y="543.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.13%)</title><rect x="56.4690%" y="517" width="0.1348%" height="15" fill="rgb(213,120,34)"/><text x="56.7190%" y="527.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.13%)</title><rect x="57.0081%" y="453" width="0.1348%" height="15" fill="rgb(243,49,53)"/><text x="57.2581%" y="463.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.67%)</title><rect x="56.7385%" y="501" width="0.6739%" height="15" fill="rgb(247,216,33)"/><text x="56.9885%" y="511.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.54%)</title><rect x="56.8733%" y="485" width="0.5391%" height="15" fill="rgb(226,26,14)"/><text x="57.1233%" y="495.50"></text></g><g><title>loopback_xmit (4 samples, 0.54%)</title><rect x="56.8733%" y="469" width="0.5391%" height="15" fill="rgb(215,49,53)"/><text x="57.1233%" y="479.50"></text></g><g><title>tcp_wfree (2 samples, 0.27%)</title><rect x="57.1429%" y="453" width="0.2695%" height="15" fill="rgb(245,162,40)"/><text x="57.3929%" y="463.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="57.6819%" y="389" width="0.1348%" height="15" fill="rgb(229,68,17)"/><text x="57.9319%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.13%)</title><rect x="58.2210%" y="213" width="0.1348%" height="15" fill="rgb(213,182,10)"/><text x="58.4710%" y="223.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="58.3558%" y="213" width="0.1348%" height="15" fill="rgb(245,125,30)"/><text x="58.6058%" y="223.50"></text></g><g><title>psi_task_change (8 samples, 1.08%)</title><rect x="58.4906%" y="197" width="1.0782%" height="15" fill="rgb(232,202,2)"/><text x="58.7406%" y="207.50"></text></g><g><title>psi_group_change (7 samples, 0.94%)</title><rect x="58.6253%" y="181" width="0.9434%" height="15" fill="rgb(237,140,51)"/><text x="58.8753%" y="191.50"></text></g><g><title>record_times (1 samples, 0.13%)</title><rect x="59.4340%" y="165" width="0.1348%" height="15" fill="rgb(236,157,25)"/><text x="59.6840%" y="175.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.13%)</title><rect x="59.4340%" y="149" width="0.1348%" height="15" fill="rgb(219,209,0)"/><text x="59.6840%" y="159.50"></text></g><g><title>enqueue_task (9 samples, 1.21%)</title><rect x="58.4906%" y="213" width="1.2129%" height="15" fill="rgb(240,116,54)"/><text x="58.7406%" y="223.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.13%)</title><rect x="59.5687%" y="197" width="0.1348%" height="15" fill="rgb(216,10,36)"/><text x="59.8187%" y="207.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.13%)</title><rect x="59.9730%" y="165" width="0.1348%" height="15" fill="rgb(222,72,44)"/><text x="60.2230%" y="175.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.54%)</title><rect x="59.7035%" y="213" width="0.5391%" height="15" fill="rgb(232,159,9)"/><text x="59.9535%" y="223.50"></text></g><g><title>enqueue_entity (3 samples, 0.40%)</title><rect x="59.8383%" y="197" width="0.4043%" height="15" fill="rgb(210,39,32)"/><text x="60.0883%" y="207.50"></text></g><g><title>update_load_avg (3 samples, 0.40%)</title><rect x="59.8383%" y="181" width="0.4043%" height="15" fill="rgb(216,194,45)"/><text x="60.0883%" y="191.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.13%)</title><rect x="60.1078%" y="165" width="0.1348%" height="15" fill="rgb(218,18,35)"/><text x="60.3578%" y="175.50"></text></g><g><title>sock_def_readable (17 samples, 2.29%)</title><rect x="58.0863%" y="277" width="2.2911%" height="15" fill="rgb(207,83,51)"/><text x="58.3363%" y="287.50">s..</text></g><g><title>__wake_up_common_lock (16 samples, 2.16%)</title><rect x="58.2210%" y="261" width="2.1563%" height="15" fill="rgb(225,63,43)"/><text x="58.4710%" y="271.50">_..</text></g><g><title>__wake_up_common (16 samples, 2.16%)</title><rect x="58.2210%" y="245" width="2.1563%" height="15" fill="rgb(207,57,36)"/><text x="58.4710%" y="255.50">_..</text></g><g><title>try_to_wake_up (16 samples, 2.16%)</title><rect x="58.2210%" y="229" width="2.1563%" height="15" fill="rgb(216,99,33)"/><text x="58.4710%" y="239.50">t..</text></g><g><title>ttwu_do_wakeup (1 samples, 0.13%)</title><rect x="60.2426%" y="213" width="0.1348%" height="15" fill="rgb(225,42,16)"/><text x="60.4926%" y="223.50"></text></g><g><title>check_preempt_curr (1 samples, 0.13%)</title><rect x="60.2426%" y="197" width="0.1348%" height="15" fill="rgb(220,201,45)"/><text x="60.4926%" y="207.50"></text></g><g><title>resched_curr (1 samples, 0.13%)</title><rect x="60.2426%" y="181" width="0.1348%" height="15" fill="rgb(225,33,4)"/><text x="60.4926%" y="191.50"></text></g><g><title>kfree (2 samples, 0.27%)</title><rect x="60.7817%" y="245" width="0.2695%" height="15" fill="rgb(224,33,50)"/><text x="61.0317%" y="255.50"></text></g><g><title>ip_local_deliver (25 samples, 3.37%)</title><rect x="57.8167%" y="373" width="3.3693%" height="15" fill="rgb(246,198,51)"/><text x="58.0667%" y="383.50">ip_..</text></g><g><title>ip_local_deliver_finish (25 samples, 3.37%)</title><rect x="57.8167%" y="357" width="3.3693%" height="15" fill="rgb(205,22,4)"/><text x="58.0667%" y="367.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (25 samples, 3.37%)</title><rect x="57.8167%" y="341" width="3.3693%" height="15" fill="rgb(206,3,8)"/><text x="58.0667%" y="351.50">ip_..</text></g><g><title>tcp_v4_rcv (25 samples, 3.37%)</title><rect x="57.8167%" y="325" width="3.3693%" height="15" fill="rgb(251,23,15)"/><text x="58.0667%" y="335.50">tcp..</text></g><g><title>tcp_v4_do_rcv (24 samples, 3.23%)</title><rect x="57.9515%" y="309" width="3.2345%" height="15" fill="rgb(252,88,28)"/><text x="58.2015%" y="319.50">tcp..</text></g><g><title>tcp_rcv_established (24 samples, 3.23%)</title><rect x="57.9515%" y="293" width="3.2345%" height="15" fill="rgb(212,127,14)"/><text x="58.2015%" y="303.50">tcp..</text></g><g><title>tcp_ack (6 samples, 0.81%)</title><rect x="60.3774%" y="277" width="0.8086%" height="15" fill="rgb(247,145,37)"/><text x="60.6274%" y="287.50"></text></g><g><title>__kfree_skb (3 samples, 0.40%)</title><rect x="60.7817%" y="261" width="0.4043%" height="15" fill="rgb(209,117,53)"/><text x="61.0317%" y="271.50"></text></g><g><title>skb_release_data (1 samples, 0.13%)</title><rect x="61.0512%" y="245" width="0.1348%" height="15" fill="rgb(212,90,42)"/><text x="61.3012%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (27 samples, 3.64%)</title><rect x="57.6819%" y="405" width="3.6388%" height="15" fill="rgb(218,164,37)"/><text x="57.9319%" y="415.50">__ne..</text></g><g><title>ip_rcv (26 samples, 3.50%)</title><rect x="57.8167%" y="389" width="3.5040%" height="15" fill="rgb(246,65,34)"/><text x="58.0667%" y="399.50">ip_..</text></g><g><title>ip_rcv_finish (1 samples, 0.13%)</title><rect x="61.1860%" y="373" width="0.1348%" height="15" fill="rgb(231,100,33)"/><text x="61.4360%" y="383.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.13%)</title><rect x="61.1860%" y="357" width="0.1348%" height="15" fill="rgb(228,126,14)"/><text x="61.4360%" y="367.50"></text></g><g><title>__ip_queue_xmit (39 samples, 5.26%)</title><rect x="56.1995%" y="549" width="5.2561%" height="15" fill="rgb(215,173,21)"/><text x="56.4495%" y="559.50">__ip_q..</text></g><g><title>ip_output (36 samples, 4.85%)</title><rect x="56.6038%" y="533" width="4.8518%" height="15" fill="rgb(210,6,40)"/><text x="56.8538%" y="543.50">ip_out..</text></g><g><title>ip_finish_output2 (36 samples, 4.85%)</title><rect x="56.6038%" y="517" width="4.8518%" height="15" fill="rgb(212,48,18)"/><text x="56.8538%" y="527.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (30 samples, 4.04%)</title><rect x="57.4124%" y="501" width="4.0431%" height="15" fill="rgb(230,214,11)"/><text x="57.6624%" y="511.50">__lo..</text></g><g><title>do_softirq (30 samples, 4.04%)</title><rect x="57.4124%" y="485" width="4.0431%" height="15" fill="rgb(254,105,39)"/><text x="57.6624%" y="495.50">do_s..</text></g><g><title>do_softirq_own_stack (30 samples, 4.04%)</title><rect x="57.4124%" y="469" width="4.0431%" height="15" fill="rgb(245,158,5)"/><text x="57.6624%" y="479.50">do_s..</text></g><g><title>__do_softirq (30 samples, 4.04%)</title><rect x="57.4124%" y="453" width="4.0431%" height="15" fill="rgb(249,208,11)"/><text x="57.6624%" y="463.50">__do..</text></g><g><title>net_rx_action (29 samples, 3.91%)</title><rect x="57.5472%" y="437" width="3.9084%" height="15" fill="rgb(210,39,28)"/><text x="57.7972%" y="447.50">net_..</text></g><g><title>process_backlog (28 samples, 3.77%)</title><rect x="57.6819%" y="421" width="3.7736%" height="15" fill="rgb(211,56,53)"/><text x="57.9319%" y="431.50">proc..</text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="61.3208%" y="405" width="0.1348%" height="15" fill="rgb(226,201,30)"/><text x="61.5708%" y="415.50"></text></g><g><title>preempt_count_sub (1 samples, 0.13%)</title><rect x="61.3208%" y="389" width="0.1348%" height="15" fill="rgb(239,101,34)"/><text x="61.5708%" y="399.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.13%)</title><rect x="61.4555%" y="549" width="0.1348%" height="15" fill="rgb(226,209,5)"/><text x="61.7055%" y="559.50"></text></g><g><title>__tcp_transmit_skb (42 samples, 5.66%)</title><rect x="56.0647%" y="565" width="5.6604%" height="15" fill="rgb(250,105,47)"/><text x="56.3147%" y="575.50">__tcp_t..</text></g><g><title>tcp_v4_send_check (1 samples, 0.13%)</title><rect x="61.5903%" y="549" width="0.1348%" height="15" fill="rgb(230,72,3)"/><text x="61.8403%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (44 samples, 5.93%)</title><rect x="56.0647%" y="597" width="5.9299%" height="15" fill="rgb(232,218,39)"/><text x="56.3147%" y="607.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (44 samples, 5.93%)</title><rect x="56.0647%" y="581" width="5.9299%" height="15" fill="rgb(248,166,6)"/><text x="56.3147%" y="591.50">tcp_writ..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.27%)</title><rect x="61.7251%" y="565" width="0.2695%" height="15" fill="rgb(247,89,20)"/><text x="61.9751%" y="575.50"></text></g><g><title>sk_reset_timer (2 samples, 0.27%)</title><rect x="61.7251%" y="549" width="0.2695%" height="15" fill="rgb(248,130,54)"/><text x="61.9751%" y="559.50"></text></g><g><title>__mod_timer (2 samples, 0.27%)</title><rect x="61.7251%" y="533" width="0.2695%" height="15" fill="rgb(234,196,4)"/><text x="61.9751%" y="543.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.13%)</title><rect x="61.9946%" y="597" width="0.1348%" height="15" fill="rgb(250,143,31)"/><text x="62.2446%" y="607.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.13%)</title><rect x="61.9946%" y="581" width="0.1348%" height="15" fill="rgb(211,110,34)"/><text x="62.2446%" y="591.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="62.2642%" y="565" width="0.1348%" height="15" fill="rgb(215,124,48)"/><text x="62.5142%" y="575.50"></text></g><g><title>memset_erms (1 samples, 0.13%)</title><rect x="62.2642%" y="549" width="0.1348%" height="15" fill="rgb(216,46,13)"/><text x="62.5142%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.40%)</title><rect x="62.1294%" y="597" width="0.4043%" height="15" fill="rgb(205,184,25)"/><text x="62.3794%" y="607.50"></text></g><g><title>__alloc_skb (3 samples, 0.40%)</title><rect x="62.1294%" y="581" width="0.4043%" height="15" fill="rgb(228,1,10)"/><text x="62.3794%" y="591.50"></text></g><g><title>ksize (1 samples, 0.13%)</title><rect x="62.3989%" y="565" width="0.1348%" height="15" fill="rgb(213,116,27)"/><text x="62.6489%" y="575.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.13%)</title><rect x="62.5337%" y="597" width="0.1348%" height="15" fill="rgb(241,95,50)"/><text x="62.7837%" y="607.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.13%)</title><rect x="62.5337%" y="581" width="0.1348%" height="15" fill="rgb(238,48,32)"/><text x="62.7837%" y="591.50"></text></g><g><title>__x64_sys_sendto (55 samples, 7.41%)</title><rect x="55.3908%" y="677" width="7.4124%" height="15" fill="rgb(235,113,49)"/><text x="55.6408%" y="687.50">__x64_sys_..</text></g><g><title>__sys_sendto (55 samples, 7.41%)</title><rect x="55.3908%" y="661" width="7.4124%" height="15" fill="rgb(205,127,43)"/><text x="55.6408%" y="671.50">__sys_send..</text></g><g><title>sock_sendmsg (55 samples, 7.41%)</title><rect x="55.3908%" y="645" width="7.4124%" height="15" fill="rgb(250,162,2)"/><text x="55.6408%" y="655.50">sock_sendm..</text></g><g><title>tcp_sendmsg (55 samples, 7.41%)</title><rect x="55.3908%" y="629" width="7.4124%" height="15" fill="rgb(220,13,41)"/><text x="55.6408%" y="639.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (54 samples, 7.28%)</title><rect x="55.5256%" y="613" width="7.2776%" height="15" fill="rgb(249,221,25)"/><text x="55.7756%" y="623.50">tcp_sendms..</text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.13%)</title><rect x="62.6685%" y="597" width="0.1348%" height="15" fill="rgb(215,208,19)"/><text x="62.9185%" y="607.50"></text></g><g><title>do_syscall_64 (58 samples, 7.82%)</title><rect x="55.3908%" y="693" width="7.8167%" height="15" fill="rgb(236,175,2)"/><text x="55.6408%" y="703.50">do_syscall_..</text></g><g><title>syscall_trace_enter (3 samples, 0.40%)</title><rect x="62.8032%" y="677" width="0.4043%" height="15" fill="rgb(241,52,2)"/><text x="63.0532%" y="687.50"></text></g><g><title>__audit_syscall_entry (3 samples, 0.40%)</title><rect x="62.8032%" y="661" width="0.4043%" height="15" fill="rgb(248,140,14)"/><text x="63.0532%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (62 samples, 8.36%)</title><rect x="55.3908%" y="709" width="8.3558%" height="15" fill="rgb(253,22,42)"/><text x="55.6408%" y="719.50">entry_SYSCAL..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.54%)</title><rect x="63.2075%" y="693" width="0.5391%" height="15" fill="rgb(234,61,47)"/><text x="63.4575%" y="703.50"></text></g><g><title>decor::Shim::run_on_tcp (224 samples, 30.19%)</title><rect x="33.8275%" y="805" width="30.1887%" height="15" fill="rgb(208,226,15)"/><text x="34.0775%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (224 samples, 30.19%)</title><rect x="33.8275%" y="789" width="30.1887%" height="15" fill="rgb(217,221,4)"/><text x="34.0775%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (64 samples, 8.63%)</title><rect x="55.3908%" y="773" width="8.6253%" height="15" fill="rgb(212,174,34)"/><text x="55.6408%" y="783.50">std::io::buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (64 samples, 8.63%)</title><rect x="55.3908%" y="757" width="8.6253%" height="15" fill="rgb(253,83,4)"/><text x="55.6408%" y="767.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::write (64 samples, 8.63%)</title><rect x="55.3908%" y="741" width="8.6253%" height="15" fill="rgb(250,195,49)"/><text x="55.6408%" y="751.50">std::sys_com..</text></g><g><title>__libc_send (64 samples, 8.63%)</title><rect x="55.3908%" y="725" width="8.6253%" height="15" fill="rgb(241,192,25)"/><text x="55.6408%" y="735.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.27%)</title><rect x="63.7466%" y="709" width="0.2695%" height="15" fill="rgb(208,124,10)"/><text x="63.9966%" y="719.50"></text></g><g><title>__GI___clone (226 samples, 30.46%)</title><rect x="33.6927%" y="917" width="30.4582%" height="15" fill="rgb(222,33,0)"/><text x="33.9427%" y="927.50">__GI___clone</text></g><g><title>start_thread (226 samples, 30.46%)</title><rect x="33.6927%" y="901" width="30.4582%" height="15" fill="rgb(234,209,28)"/><text x="33.9427%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (226 samples, 30.46%)</title><rect x="33.6927%" y="885" width="30.4582%" height="15" fill="rgb(224,11,23)"/><text x="33.9427%" y="895.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (226 samples, 30.46%)</title><rect x="33.6927%" y="869" width="30.4582%" height="15" fill="rgb(232,99,1)"/><text x="33.9427%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnO..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (226 samples, 30.46%)</title><rect x="33.6927%" y="853" width="30.4582%" height="15" fill="rgb(237,95,45)"/><text x="33.9427%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnO..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (226 samples, 30.46%)</title><rect x="33.6927%" y="837" width="30.4582%" height="15" fill="rgb(208,109,11)"/><text x="33.9427%" y="847.50">core::ops::function::FnOnce::call_once{{vtable-sh..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (226 samples, 30.46%)</title><rect x="33.6927%" y="821" width="30.4582%" height="15" fill="rgb(216,190,48)"/><text x="33.9427%" y="831.50">std::sys_common::backtrace::__rust_begin_short_ba..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.13%)</title><rect x="64.0162%" y="805" width="0.1348%" height="15" fill="rgb(251,171,36)"/><text x="64.2662%" y="815.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.13%)</title><rect x="64.0162%" y="789" width="0.1348%" height="15" fill="rgb(230,62,22)"/><text x="64.2662%" y="799.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.13%)</title><rect x="64.0162%" y="773" width="0.1348%" height="15" fill="rgb(225,114,35)"/><text x="64.2662%" y="783.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.13%)</title><rect x="64.0162%" y="757" width="0.1348%" height="15" fill="rgb(215,118,42)"/><text x="64.2662%" y="767.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.13%)</title><rect x="64.0162%" y="741" width="0.1348%" height="15" fill="rgb(243,119,21)"/><text x="64.2662%" y="751.50"></text></g><g><title>idna::uts46::processing (1 samples, 0.13%)</title><rect x="64.0162%" y="725" width="0.1348%" height="15" fill="rgb(252,177,53)"/><text x="64.2662%" y="735.50"></text></g><g><title>idna::uts46::validate (1 samples, 0.13%)</title><rect x="64.0162%" y="709" width="0.1348%" height="15" fill="rgb(237,209,29)"/><text x="64.2662%" y="719.50"></text></g><g><title>unicode_normalization::lookups::is_combining_mark (1 samples, 0.13%)</title><rect x="64.0162%" y="693" width="0.1348%" height="15" fill="rgb(212,65,23)"/><text x="64.2662%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as core::ops::drop::Drop&gt;::drop (1 samples, 0.13%)</title><rect x="64.2857%" y="741" width="0.1348%" height="15" fill="rgb(230,222,46)"/><text x="64.5357%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.13%)</title><rect x="64.2857%" y="725" width="0.1348%" height="15" fill="rgb(215,135,32)"/><text x="64.5357%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.13%)</title><rect x="64.2857%" y="709" width="0.1348%" height="15" fill="rgb(246,101,22)"/><text x="64.5357%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.13%)</title><rect x="64.2857%" y="693" width="0.1348%" height="15" fill="rgb(206,107,13)"/><text x="64.5357%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.13%)</title><rect x="64.2857%" y="677" width="0.1348%" height="15" fill="rgb(250,100,44)"/><text x="64.5357%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.13%)</title><rect x="64.2857%" y="661" width="0.1348%" height="15" fill="rgb(231,147,38)"/><text x="64.5357%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="64.2857%" y="645" width="0.1348%" height="15" fill="rgb(229,8,40)"/><text x="64.5357%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="64.2857%" y="629" width="0.1348%" height="15" fill="rgb(221,135,30)"/><text x="64.5357%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.13%)</title><rect x="64.2857%" y="613" width="0.1348%" height="15" fill="rgb(249,193,18)"/><text x="64.5357%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.13%)</title><rect x="64.2857%" y="597" width="0.1348%" height="15" fill="rgb(209,133,39)"/><text x="64.5357%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.13%)</title><rect x="64.2857%" y="581" width="0.1348%" height="15" fill="rgb(232,100,14)"/><text x="64.5357%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.13%)</title><rect x="64.2857%" y="565" width="0.1348%" height="15" fill="rgb(224,185,1)"/><text x="64.5357%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.13%)</title><rect x="64.2857%" y="549" width="0.1348%" height="15" fill="rgb(223,139,8)"/><text x="64.5357%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (1 samples, 0.13%)</title><rect x="64.2857%" y="533" width="0.1348%" height="15" fill="rgb(232,213,38)"/><text x="64.5357%" y="543.50"></text></g><g><title>__alloc_skb (1 samples, 0.13%)</title><rect x="64.2857%" y="517" width="0.1348%" height="15" fill="rgb(207,94,22)"/><text x="64.5357%" y="527.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="64.2857%" y="501" width="0.1348%" height="15" fill="rgb(219,183,54)"/><text x="64.5357%" y="511.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.27%)</title><rect x="64.4205%" y="741" width="0.2695%" height="15" fill="rgb(216,185,54)"/><text x="64.6705%" y="751.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.13%)</title><rect x="64.5553%" y="725" width="0.1348%" height="15" fill="rgb(254,217,39)"/><text x="64.8053%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.13%)</title><rect x="64.5553%" y="709" width="0.1348%" height="15" fill="rgb(240,178,23)"/><text x="64.8053%" y="719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.13%)</title><rect x="64.5553%" y="693" width="0.1348%" height="15" fill="rgb(218,11,47)"/><text x="64.8053%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.13%)</title><rect x="64.5553%" y="677" width="0.1348%" height="15" fill="rgb(218,51,51)"/><text x="64.8053%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.13%)</title><rect x="64.5553%" y="661" width="0.1348%" height="15" fill="rgb(238,126,27)"/><text x="64.8053%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.13%)</title><rect x="64.5553%" y="645" width="0.1348%" height="15" fill="rgb(249,202,22)"/><text x="64.8053%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.27%)</title><rect x="64.6900%" y="645" width="0.2695%" height="15" fill="rgb(254,195,49)"/><text x="64.9400%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.40%)</title><rect x="64.6900%" y="661" width="0.4043%" height="15" fill="rgb(208,123,14)"/><text x="64.9400%" y="671.50"></text></g><g><title>hwloc_bitmap_alloc (1 samples, 0.13%)</title><rect x="64.9596%" y="645" width="0.1348%" height="15" fill="rgb(224,200,8)"/><text x="65.2096%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="64.9596%" y="629" width="0.1348%" height="15" fill="rgb(217,61,36)"/><text x="65.2096%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.27%)</title><rect x="65.0943%" y="645" width="0.2695%" height="15" fill="rgb(206,35,45)"/><text x="65.3443%" y="655.50"></text></g><g><title>__mmdrop (1 samples, 0.13%)</title><rect x="65.6334%" y="453" width="0.1348%" height="15" fill="rgb(217,65,33)"/><text x="65.8834%" y="463.50"></text></g><g><title>__free_pages_ok (1 samples, 0.13%)</title><rect x="65.6334%" y="437" width="0.1348%" height="15" fill="rgb(222,158,48)"/><text x="65.8834%" y="447.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (229 samples, 30.86%)</title><rect x="65.9030%" y="437" width="30.8625%" height="15" fill="rgb(254,2,54)"/><text x="66.1530%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (229 samples, 30.86%)</title><rect x="65.9030%" y="421" width="30.8625%" height="15" fill="rgb(250,143,38)"/><text x="66.1530%" y="431.50">native_write_msr</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 31.54%)</title><rect x="65.3639%" y="597" width="31.5364%" height="15" fill="rgb(248,25,0)"/><text x="65.6139%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 31.54%)</title><rect x="65.3639%" y="581" width="31.5364%" height="15" fill="rgb(206,152,27)"/><text x="65.6139%" y="591.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 31.54%)</title><rect x="65.3639%" y="565" width="31.5364%" height="15" fill="rgb(240,77,30)"/><text x="65.6139%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 31.54%)</title><rect x="65.3639%" y="549" width="31.5364%" height="15" fill="rgb(231,5,3)"/><text x="65.6139%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 31.54%)</title><rect x="65.3639%" y="533" width="31.5364%" height="15" fill="rgb(207,226,32)"/><text x="65.6139%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 31.54%)</title><rect x="65.3639%" y="517" width="31.5364%" height="15" fill="rgb(222,207,47)"/><text x="65.6139%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 31.54%)</title><rect x="65.3639%" y="501" width="31.5364%" height="15" fill="rgb(229,115,45)"/><text x="65.6139%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 31.54%)</title><rect x="65.3639%" y="485" width="31.5364%" height="15" fill="rgb(224,191,6)"/><text x="65.6139%" y="495.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 31.54%)</title><rect x="65.3639%" y="469" width="31.5364%" height="15" fill="rgb(230,227,24)"/><text x="65.6139%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (231 samples, 31.13%)</title><rect x="65.7682%" y="453" width="31.1321%" height="15" fill="rgb(228,80,19)"/><text x="66.0182%" y="463.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.13%)</title><rect x="96.7655%" y="437" width="0.1348%" height="15" fill="rgb(247,229,0)"/><text x="97.0155%" y="447.50"></text></g><g><title>do_syscall_64 (235 samples, 31.67%)</title><rect x="65.3639%" y="613" width="31.6712%" height="15" fill="rgb(237,194,15)"/><text x="65.6139%" y="623.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="96.9003%" y="597" width="0.1348%" height="15" fill="rgb(219,203,20)"/><text x="97.1503%" y="607.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="96.9003%" y="581" width="0.1348%" height="15" fill="rgb(234,128,8)"/><text x="97.1503%" y="591.50"></text></g><g><title>kfree (1 samples, 0.13%)</title><rect x="96.9003%" y="565" width="0.1348%" height="15" fill="rgb(248,202,8)"/><text x="97.1503%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (236 samples, 31.81%)</title><rect x="65.3639%" y="629" width="31.8059%" height="15" fill="rgb(206,104,37)"/><text x="65.6139%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="97.0350%" y="613" width="0.1348%" height="15" fill="rgb(223,8,27)"/><text x="97.2850%" y="623.50"></text></g><g><title>switch_fpu_return (1 samples, 0.13%)</title><rect x="97.0350%" y="597" width="0.1348%" height="15" fill="rgb(216,217,28)"/><text x="97.2850%" y="607.50"></text></g><g><title>copy_kernel_to_fpregs (1 samples, 0.13%)</title><rect x="97.0350%" y="581" width="0.1348%" height="15" fill="rgb(249,199,1)"/><text x="97.2850%" y="591.50"></text></g><g><title>__GI___sched_setaffinity_new (237 samples, 31.94%)</title><rect x="65.3639%" y="645" width="31.9407%" height="15" fill="rgb(240,85,17)"/><text x="65.6139%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (1 samples, 0.13%)</title><rect x="97.1698%" y="629" width="0.1348%" height="15" fill="rgb(206,108,45)"/><text x="97.4198%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (244 samples, 32.88%)</title><rect x="64.6900%" y="677" width="32.8841%" height="15" fill="rgb(245,210,41)"/><text x="64.9400%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (241 samples, 32.48%)</title><rect x="65.0943%" y="661" width="32.4798%" height="15" fill="rgb(206,13,37)"/><text x="65.3443%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>_int_free (2 samples, 0.27%)</title><rect x="97.3046%" y="645" width="0.2695%" height="15" fill="rgb(250,61,18)"/><text x="97.5546%" y="655.50"></text></g><g><title>hwloc::Topology::new (245 samples, 33.02%)</title><rect x="64.6900%" y="741" width="33.0189%" height="15" fill="rgb(235,172,48)"/><text x="64.9400%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (245 samples, 33.02%)</title><rect x="64.6900%" y="725" width="33.0189%" height="15" fill="rgb(249,201,17)"/><text x="64.9400%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 33.02%)</title><rect x="64.6900%" y="709" width="33.0189%" height="15" fill="rgb(219,208,6)"/><text x="64.9400%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 33.02%)</title><rect x="64.6900%" y="693" width="33.0189%" height="15" fill="rgb(248,31,23)"/><text x="64.9400%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.13%)</title><rect x="97.5741%" y="677" width="0.1348%" height="15" fill="rgb(245,15,42)"/><text x="97.8241%" y="687.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.13%)</title><rect x="97.5741%" y="661" width="0.1348%" height="15" fill="rgb(222,217,39)"/><text x="97.8241%" y="671.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.13%)</title><rect x="97.5741%" y="645" width="0.1348%" height="15" fill="rgb(210,219,27)"/><text x="97.8241%" y="655.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.13%)</title><rect x="97.5741%" y="629" width="0.1348%" height="15" fill="rgb(252,166,36)"/><text x="97.8241%" y="639.50"></text></g><g><title>__GI___read (1 samples, 0.13%)</title><rect x="97.5741%" y="613" width="0.1348%" height="15" fill="rgb(245,132,34)"/><text x="97.8241%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.13%)</title><rect x="97.5741%" y="597" width="0.1348%" height="15" fill="rgb(236,54,3)"/><text x="97.8241%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.13%)</title><rect x="97.5741%" y="581" width="0.1348%" height="15" fill="rgb(241,173,43)"/><text x="97.8241%" y="591.50"></text></g><g><title>ksys_read (1 samples, 0.13%)</title><rect x="97.5741%" y="565" width="0.1348%" height="15" fill="rgb(215,190,9)"/><text x="97.8241%" y="575.50"></text></g><g><title>vfs_read (1 samples, 0.13%)</title><rect x="97.5741%" y="549" width="0.1348%" height="15" fill="rgb(242,101,16)"/><text x="97.8241%" y="559.50"></text></g><g><title>seq_read (1 samples, 0.13%)</title><rect x="97.5741%" y="533" width="0.1348%" height="15" fill="rgb(223,190,21)"/><text x="97.8241%" y="543.50"></text></g><g><title>show_cpuinfo (1 samples, 0.13%)</title><rect x="97.5741%" y="517" width="0.1348%" height="15" fill="rgb(215,228,25)"/><text x="97.8241%" y="527.50"></text></g><g><title>seq_printf (1 samples, 0.13%)</title><rect x="97.5741%" y="501" width="0.1348%" height="15" fill="rgb(225,36,22)"/><text x="97.8241%" y="511.50"></text></g><g><title>vsnprintf (1 samples, 0.13%)</title><rect x="97.5741%" y="485" width="0.1348%" height="15" fill="rgb(251,106,46)"/><text x="97.8241%" y="495.50"></text></g><g><title>format_decode (1 samples, 0.13%)</title><rect x="97.5741%" y="469" width="0.1348%" height="15" fill="rgb(208,90,1)"/><text x="97.8241%" y="479.50"></text></g><g><title>lobsters::init_database (1 samples, 0.13%)</title><rect x="97.7089%" y="741" width="0.1348%" height="15" fill="rgb(243,10,4)"/><text x="97.9589%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.27%)</title><rect x="97.9784%" y="725" width="0.2695%" height="15" fill="rgb(212,137,27)"/><text x="98.2284%" y="735.50"></text></g><g><title>_start (255 samples, 34.37%)</title><rect x="64.1509%" y="917" width="34.3666%" height="15" fill="rgb(231,220,49)"/><text x="64.4009%" y="927.50">_start</text></g><g><title>__libc_start_main (255 samples, 34.37%)</title><rect x="64.1509%" y="901" width="34.3666%" height="15" fill="rgb(237,96,20)"/><text x="64.4009%" y="911.50">__libc_start_main</text></g><g><title>main (255 samples, 34.37%)</title><rect x="64.1509%" y="885" width="34.3666%" height="15" fill="rgb(239,229,30)"/><text x="64.4009%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (255 samples, 34.37%)</title><rect x="64.1509%" y="869" width="34.3666%" height="15" fill="rgb(219,65,33)"/><text x="64.4009%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (255 samples, 34.37%)</title><rect x="64.1509%" y="853" width="34.3666%" height="15" fill="rgb(243,134,7)"/><text x="64.4009%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (255 samples, 34.37%)</title><rect x="64.1509%" y="837" width="34.3666%" height="15" fill="rgb(216,177,54)"/><text x="64.4009%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (255 samples, 34.37%)</title><rect x="64.1509%" y="821" width="34.3666%" height="15" fill="rgb(211,160,20)"/><text x="64.4009%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (255 samples, 34.37%)</title><rect x="64.1509%" y="805" width="34.3666%" height="15" fill="rgb(239,85,39)"/><text x="64.4009%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::F..</text></g><g><title>std::rt::lang_start::_{{closure}} (255 samples, 34.37%)</title><rect x="64.1509%" y="789" width="34.3666%" height="15" fill="rgb(232,125,22)"/><text x="64.4009%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (255 samples, 34.37%)</title><rect x="64.1509%" y="773" width="34.3666%" height="15" fill="rgb(244,57,34)"/><text x="64.4009%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (255 samples, 34.37%)</title><rect x="64.1509%" y="757" width="34.3666%" height="15" fill="rgb(214,203,32)"/><text x="64.4009%" y="767.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (5 samples, 0.67%)</title><rect x="97.8437%" y="741" width="0.6739%" height="15" fill="rgb(207,58,43)"/><text x="98.0937%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.27%)</title><rect x="98.2480%" y="725" width="0.2695%" height="15" fill="rgb(215,193,15)"/><text x="98.4980%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.13%)</title><rect x="98.3827%" y="709" width="0.1348%" height="15" fill="rgb(232,15,44)"/><text x="98.6327%" y="719.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.13%)</title><rect x="98.7871%" y="805" width="0.1348%" height="15" fill="rgb(212,3,48)"/><text x="99.0371%" y="815.50"></text></g><g><title>release_pages (1 samples, 0.13%)</title><rect x="98.7871%" y="789" width="0.1348%" height="15" fill="rgb(218,128,7)"/><text x="99.0371%" y="799.50"></text></g><g><title>free_unref_page_list (1 samples, 0.13%)</title><rect x="98.7871%" y="773" width="0.1348%" height="15" fill="rgb(226,216,39)"/><text x="99.0371%" y="783.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.13%)</title><rect x="98.7871%" y="757" width="0.1348%" height="15" fill="rgb(243,47,51)"/><text x="99.0371%" y="767.50"></text></g><g><title>[vmlinux] (2 samples, 0.27%)</title><rect x="98.7871%" y="885" width="0.2695%" height="15" fill="rgb(241,183,40)"/><text x="99.0371%" y="895.50"></text></g><g><title>do_group_exit (2 samples, 0.27%)</title><rect x="98.7871%" y="869" width="0.2695%" height="15" fill="rgb(231,217,32)"/><text x="99.0371%" y="879.50"></text></g><g><title>do_exit (2 samples, 0.27%)</title><rect x="98.7871%" y="853" width="0.2695%" height="15" fill="rgb(229,61,38)"/><text x="99.0371%" y="863.50"></text></g><g><title>mmput (2 samples, 0.27%)</title><rect x="98.7871%" y="837" width="0.2695%" height="15" fill="rgb(225,210,5)"/><text x="99.0371%" y="847.50"></text></g><g><title>exit_mmap (2 samples, 0.27%)</title><rect x="98.7871%" y="821" width="0.2695%" height="15" fill="rgb(231,79,45)"/><text x="99.0371%" y="831.50"></text></g><g><title>unmap_vmas (1 samples, 0.13%)</title><rect x="98.9218%" y="805" width="0.1348%" height="15" fill="rgb(224,100,7)"/><text x="99.1718%" y="815.50"></text></g><g><title>unmap_page_range (1 samples, 0.13%)</title><rect x="98.9218%" y="789" width="0.1348%" height="15" fill="rgb(241,198,18)"/><text x="99.1718%" y="799.50"></text></g><g><title>mark_page_accessed (1 samples, 0.13%)</title><rect x="98.9218%" y="773" width="0.1348%" height="15" fill="rgb(252,97,53)"/><text x="99.1718%" y="783.50"></text></g><g><title>lobsters (736 samples, 99.19%)</title><rect x="0.0000%" y="933" width="99.1914%" height="15" fill="rgb(220,88,7)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>entry_SYSCALL_64 (5 samples, 0.67%)</title><rect x="98.5175%" y="917" width="0.6739%" height="15" fill="rgb(213,176,14)"/><text x="98.7675%" y="927.50"></text></g><g><title>do_syscall_64 (3 samples, 0.40%)</title><rect x="98.7871%" y="901" width="0.4043%" height="15" fill="rgb(246,73,7)"/><text x="99.0371%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.13%)</title><rect x="99.0566%" y="885" width="0.1348%" height="15" fill="rgb(245,64,36)"/><text x="99.3066%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.13%)</title><rect x="99.0566%" y="869" width="0.1348%" height="15" fill="rgb(245,80,10)"/><text x="99.3066%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.13%)</title><rect x="99.0566%" y="853" width="0.1348%" height="15" fill="rgb(232,107,50)"/><text x="99.3066%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.13%)</title><rect x="99.0566%" y="837" width="0.1348%" height="15" fill="rgb(253,3,0)"/><text x="99.3066%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.13%)</title><rect x="99.0566%" y="821" width="0.1348%" height="15" fill="rgb(212,99,53)"/><text x="99.3066%" y="831.50"></text></g><g><title>elf_map (1 samples, 0.13%)</title><rect x="99.0566%" y="805" width="0.1348%" height="15" fill="rgb(249,111,54)"/><text x="99.3066%" y="815.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.13%)</title><rect x="99.0566%" y="789" width="0.1348%" height="15" fill="rgb(249,55,30)"/><text x="99.3066%" y="799.50"></text></g><g><title>do_mmap (1 samples, 0.13%)</title><rect x="99.0566%" y="773" width="0.1348%" height="15" fill="rgb(237,47,42)"/><text x="99.3066%" y="783.50"></text></g><g><title>mmap_region (1 samples, 0.13%)</title><rect x="99.0566%" y="757" width="0.1348%" height="15" fill="rgb(211,20,18)"/><text x="99.3066%" y="767.50"></text></g><g><title>vm_area_alloc (1 samples, 0.13%)</title><rect x="99.0566%" y="741" width="0.1348%" height="15" fill="rgb(231,203,46)"/><text x="99.3066%" y="751.50"></text></g><g><title>all (742 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(237,142,3)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.81%)</title><rect x="99.1914%" y="933" width="0.8086%" height="15" fill="rgb(241,107,1)"/><text x="99.4414%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.81%)</title><rect x="99.1914%" y="917" width="0.8086%" height="15" fill="rgb(229,83,13)"/><text x="99.4414%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.81%)</title><rect x="99.1914%" y="901" width="0.8086%" height="15" fill="rgb(241,91,40)"/><text x="99.4414%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.81%)</title><rect x="99.1914%" y="885" width="0.8086%" height="15" fill="rgb(225,3,45)"/><text x="99.4414%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.81%)</title><rect x="99.1914%" y="869" width="0.8086%" height="15" fill="rgb(244,223,14)"/><text x="99.4414%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.81%)</title><rect x="99.1914%" y="853" width="0.8086%" height="15" fill="rgb(224,124,37)"/><text x="99.4414%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.81%)</title><rect x="99.1914%" y="837" width="0.8086%" height="15" fill="rgb(251,171,30)"/><text x="99.4414%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.81%)</title><rect x="99.1914%" y="821" width="0.8086%" height="15" fill="rgb(236,46,54)"/><text x="99.4414%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.81%)</title><rect x="99.1914%" y="805" width="0.8086%" height="15" fill="rgb(245,213,5)"/><text x="99.4414%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.81%)</title><rect x="99.1914%" y="789" width="0.8086%" height="15" fill="rgb(230,144,27)"/><text x="99.4414%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.67%)</title><rect x="99.3261%" y="773" width="0.6739%" height="15" fill="rgb(220,86,6)"/><text x="99.5761%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.67%)</title><rect x="99.3261%" y="757" width="0.6739%" height="15" fill="rgb(240,20,13)"/><text x="99.5761%" y="767.50"></text></g></svg></svg>