<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.29%)</title><rect x="0.0000%" y="885" width="0.2869%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.29%)</title><rect x="0.0000%" y="869" width="0.2869%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="879.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.29%)</title><rect x="0.0000%" y="853" width="0.2869%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="863.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.29%)</title><rect x="0.0000%" y="837" width="0.2869%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.29%)</title><rect x="0.0000%" y="821" width="0.2869%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="831.50"></text></g><g><title>__libc_recv (2 samples, 0.29%)</title><rect x="0.0000%" y="805" width="0.2869%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.29%)</title><rect x="0.0000%" y="789" width="0.2869%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="0.2869%" y="869" width="0.1435%" height="15" fill="rgb(228,23,34)"/><text x="0.5369%" y="879.50"></text></g><g><title>[[stack]] (2 samples, 0.29%)</title><rect x="0.2869%" y="885" width="0.2869%" height="15" fill="rgb(218,30,26)"/><text x="0.5369%" y="895.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="0.4304%" y="869" width="0.1435%" height="15" fill="rgb(220,122,19)"/><text x="0.6804%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="0.4304%" y="853" width="0.1435%" height="15" fill="rgb(250,228,42)"/><text x="0.6804%" y="863.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="0.5739%" y="869" width="0.1435%" height="15" fill="rgb(240,193,28)"/><text x="0.8239%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="0.7174%" y="869" width="0.1435%" height="15" fill="rgb(216,20,37)"/><text x="0.9674%" y="879.50"></text></g><g><title>[anon] (3 samples, 0.43%)</title><rect x="0.5739%" y="885" width="0.4304%" height="15" fill="rgb(206,188,39)"/><text x="0.8239%" y="895.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (1 samples, 0.14%)</title><rect x="0.8608%" y="869" width="0.1435%" height="15" fill="rgb(217,207,13)"/><text x="1.1108%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="1.0043%" y="789" width="0.1435%" height="15" fill="rgb(231,73,38)"/><text x="1.2543%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="1.0043%" y="773" width="0.1435%" height="15" fill="rgb(225,20,46)"/><text x="1.2543%" y="783.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="1.0043%" y="757" width="0.1435%" height="15" fill="rgb(210,31,41)"/><text x="1.2543%" y="767.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="1.0043%" y="741" width="0.1435%" height="15" fill="rgb(221,200,47)"/><text x="1.2543%" y="751.50"></text></g><g><title>sysmalloc (1 samples, 0.14%)</title><rect x="1.0043%" y="725" width="0.1435%" height="15" fill="rgb(226,26,5)"/><text x="1.2543%" y="735.50"></text></g><g><title>__GI___mprotect (1 samples, 0.14%)</title><rect x="1.0043%" y="709" width="0.1435%" height="15" fill="rgb(249,33,26)"/><text x="1.2543%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="1.0043%" y="693" width="0.1435%" height="15" fill="rgb(235,183,28)"/><text x="1.2543%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1.0043%" y="677" width="0.1435%" height="15" fill="rgb(221,5,38)"/><text x="1.2543%" y="687.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.14%)</title><rect x="1.0043%" y="661" width="0.1435%" height="15" fill="rgb(247,18,42)"/><text x="1.2543%" y="671.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.14%)</title><rect x="1.0043%" y="645" width="0.1435%" height="15" fill="rgb(241,131,45)"/><text x="1.2543%" y="655.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="1.0043%" y="629" width="0.1435%" height="15" fill="rgb(249,31,29)"/><text x="1.2543%" y="639.50"></text></g><g><title>perf_event_mmap (1 samples, 0.14%)</title><rect x="1.0043%" y="613" width="0.1435%" height="15" fill="rgb(225,111,53)"/><text x="1.2543%" y="623.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.14%)</title><rect x="1.0043%" y="597" width="0.1435%" height="15" fill="rgb(238,160,17)"/><text x="1.2543%" y="607.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.14%)</title><rect x="1.0043%" y="581" width="0.1435%" height="15" fill="rgb(214,148,48)"/><text x="1.2543%" y="591.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.29%)</title><rect x="1.0043%" y="869" width="0.2869%" height="15" fill="rgb(232,36,49)"/><text x="1.2543%" y="879.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.29%)</title><rect x="1.0043%" y="853" width="0.2869%" height="15" fill="rgb(209,103,24)"/><text x="1.2543%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.29%)</title><rect x="1.0043%" y="837" width="0.2869%" height="15" fill="rgb(229,88,8)"/><text x="1.2543%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.29%)</title><rect x="1.0043%" y="821" width="0.2869%" height="15" fill="rgb(213,181,19)"/><text x="1.2543%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.29%)</title><rect x="1.0043%" y="805" width="0.2869%" height="15" fill="rgb(254,191,54)"/><text x="1.2543%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.14%)</title><rect x="1.1478%" y="789" width="0.1435%" height="15" fill="rgb(241,83,37)"/><text x="1.3978%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.14%)</title><rect x="1.1478%" y="773" width="0.1435%" height="15" fill="rgb(233,36,39)"/><text x="1.3978%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="1.1478%" y="757" width="0.1435%" height="15" fill="rgb(226,3,54)"/><text x="1.3978%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="1.2912%" y="869" width="0.1435%" height="15" fill="rgb(245,192,40)"/><text x="1.5412%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="1.4347%" y="869" width="0.1435%" height="15" fill="rgb(238,167,29)"/><text x="1.6847%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="1.5782%" y="869" width="0.1435%" height="15" fill="rgb(232,182,51)"/><text x="1.8282%" y="879.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="1.7217%" y="869" width="0.1435%" height="15" fill="rgb(231,60,39)"/><text x="1.9717%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="1.8651%" y="869" width="0.1435%" height="15" fill="rgb(208,69,12)"/><text x="2.1151%" y="879.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="2.0086%" y="869" width="0.1435%" height="15" fill="rgb(235,93,37)"/><text x="2.2586%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="2.0086%" y="853" width="0.1435%" height="15" fill="rgb(213,116,39)"/><text x="2.2586%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.14%)</title><rect x="2.1521%" y="709" width="0.1435%" height="15" fill="rgb(222,207,29)"/><text x="2.4021%" y="719.50"></text></g><g><title>hwloc_topology_destroy (1 samples, 0.14%)</title><rect x="2.1521%" y="693" width="0.1435%" height="15" fill="rgb(206,96,30)"/><text x="2.4021%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="2.1521%" y="677" width="0.1435%" height="15" fill="rgb(218,138,4)"/><text x="2.4021%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="2.1521%" y="661" width="0.1435%" height="15" fill="rgb(250,191,14)"/><text x="2.4021%" y="671.50"></text></g><g><title>dlclose (1 samples, 0.14%)</title><rect x="2.1521%" y="645" width="0.1435%" height="15" fill="rgb(239,60,40)"/><text x="2.4021%" y="655.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="2.1521%" y="629" width="0.1435%" height="15" fill="rgb(206,27,48)"/><text x="2.4021%" y="639.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="2.1521%" y="613" width="0.1435%" height="15" fill="rgb(225,35,8)"/><text x="2.4021%" y="623.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="2.1521%" y="597" width="0.1435%" height="15" fill="rgb(250,213,24)"/><text x="2.4021%" y="607.50"></text></g><g><title>_dl_close (1 samples, 0.14%)</title><rect x="2.1521%" y="581" width="0.1435%" height="15" fill="rgb(247,123,22)"/><text x="2.4021%" y="591.50"></text></g><g><title>_dl_close_worker (1 samples, 0.14%)</title><rect x="2.1521%" y="565" width="0.1435%" height="15" fill="rgb(231,138,38)"/><text x="2.4021%" y="575.50"></text></g><g><title>_dl_unmap (1 samples, 0.14%)</title><rect x="2.1521%" y="549" width="0.1435%" height="15" fill="rgb(231,145,46)"/><text x="2.4021%" y="559.50"></text></g><g><title>munmap (1 samples, 0.14%)</title><rect x="2.1521%" y="533" width="0.1435%" height="15" fill="rgb(251,118,11)"/><text x="2.4021%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="2.1521%" y="517" width="0.1435%" height="15" fill="rgb(217,147,25)"/><text x="2.4021%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="2.1521%" y="501" width="0.1435%" height="15" fill="rgb(247,81,37)"/><text x="2.4021%" y="511.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.14%)</title><rect x="2.1521%" y="485" width="0.1435%" height="15" fill="rgb(209,12,38)"/><text x="2.4021%" y="495.50"></text></g><g><title>__vm_munmap (1 samples, 0.14%)</title><rect x="2.1521%" y="469" width="0.1435%" height="15" fill="rgb(227,1,9)"/><text x="2.4021%" y="479.50"></text></g><g><title>__do_munmap (1 samples, 0.14%)</title><rect x="2.1521%" y="453" width="0.1435%" height="15" fill="rgb(248,47,43)"/><text x="2.4021%" y="463.50"></text></g><g><title>unmap_region (1 samples, 0.14%)</title><rect x="2.1521%" y="437" width="0.1435%" height="15" fill="rgb(221,10,30)"/><text x="2.4021%" y="447.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="2.1521%" y="421" width="0.1435%" height="15" fill="rgb(210,229,1)"/><text x="2.4021%" y="431.50"></text></g><g><title>release_pages (1 samples, 0.14%)</title><rect x="2.1521%" y="405" width="0.1435%" height="15" fill="rgb(222,148,37)"/><text x="2.4021%" y="415.50"></text></g><g><title>mem_cgroup_uncharge_list (1 samples, 0.14%)</title><rect x="2.1521%" y="389" width="0.1435%" height="15" fill="rgb(234,67,33)"/><text x="2.4021%" y="399.50"></text></g><g><title>uncharge_batch (1 samples, 0.14%)</title><rect x="2.1521%" y="373" width="0.1435%" height="15" fill="rgb(247,98,35)"/><text x="2.4021%" y="383.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.14%)</title><rect x="2.1521%" y="357" width="0.1435%" height="15" fill="rgb(247,138,52)"/><text x="2.4021%" y="367.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.14%)</title><rect x="2.1521%" y="341" width="0.1435%" height="15" fill="rgb(213,79,30)"/><text x="2.4021%" y="351.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="2.2956%" y="661" width="0.1435%" height="15" fill="rgb(246,177,23)"/><text x="2.5456%" y="671.50"></text></g><g><title>inet_sendmsg (1 samples, 0.14%)</title><rect x="2.7260%" y="517" width="0.1435%" height="15" fill="rgb(230,62,27)"/><text x="2.9760%" y="527.50"></text></g><g><title>inet_send_prepare (1 samples, 0.14%)</title><rect x="2.7260%" y="501" width="0.1435%" height="15" fill="rgb(216,154,8)"/><text x="2.9760%" y="511.50"></text></g><g><title>__ip_local_out (2 samples, 0.29%)</title><rect x="3.5868%" y="421" width="0.2869%" height="15" fill="rgb(244,35,45)"/><text x="3.8368%" y="431.50"></text></g><g><title>ip_send_check (2 samples, 0.29%)</title><rect x="3.5868%" y="405" width="0.2869%" height="15" fill="rgb(251,115,12)"/><text x="3.8368%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="3.8737%" y="421" width="0.1435%" height="15" fill="rgb(240,54,50)"/><text x="4.1237%" y="431.50"></text></g><g><title>__sk_dst_check (2 samples, 0.29%)</title><rect x="4.0172%" y="421" width="0.2869%" height="15" fill="rgb(233,84,52)"/><text x="4.2672%" y="431.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.14%)</title><rect x="4.1607%" y="405" width="0.1435%" height="15" fill="rgb(207,117,47)"/><text x="4.4107%" y="415.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.14%)</title><rect x="4.8780%" y="373" width="0.1435%" height="15" fill="rgb(249,43,39)"/><text x="5.1280%" y="383.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="5.3085%" y="341" width="0.1435%" height="15" fill="rgb(209,38,44)"/><text x="5.5585%" y="351.50"></text></g><g><title>sk_free (1 samples, 0.14%)</title><rect x="5.4519%" y="341" width="0.1435%" height="15" fill="rgb(236,212,23)"/><text x="5.7019%" y="351.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.86%)</title><rect x="5.0215%" y="373" width="0.8608%" height="15" fill="rgb(242,79,21)"/><text x="5.2715%" y="383.50"></text></g><g><title>loopback_xmit (6 samples, 0.86%)</title><rect x="5.0215%" y="357" width="0.8608%" height="15" fill="rgb(211,96,35)"/><text x="5.2715%" y="367.50"></text></g><g><title>tcp_wfree (2 samples, 0.29%)</title><rect x="5.5954%" y="341" width="0.2869%" height="15" fill="rgb(253,215,40)"/><text x="5.8454%" y="351.50"></text></g><g><title>__dev_queue_xmit (12 samples, 1.72%)</title><rect x="4.4476%" y="389" width="1.7217%" height="15" fill="rgb(211,81,21)"/><text x="4.6976%" y="399.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.29%)</title><rect x="5.8824%" y="373" width="0.2869%" height="15" fill="rgb(208,190,38)"/><text x="6.1324%" y="383.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.14%)</title><rect x="6.7432%" y="229" width="0.1435%" height="15" fill="rgb(235,213,38)"/><text x="6.9932%" y="239.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.43%)</title><rect x="7.0301%" y="197" width="0.4304%" height="15" fill="rgb(237,122,38)"/><text x="7.2801%" y="207.50"></text></g><g><title>inet_ehashfn (2 samples, 0.29%)</title><rect x="7.1736%" y="181" width="0.2869%" height="15" fill="rgb(244,218,35)"/><text x="7.4236%" y="191.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="7.4605%" y="197" width="0.1435%" height="15" fill="rgb(240,68,47)"/><text x="7.7105%" y="207.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="7.4605%" y="181" width="0.1435%" height="15" fill="rgb(210,16,53)"/><text x="7.7105%" y="191.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="7.4605%" y="165" width="0.1435%" height="15" fill="rgb(235,124,12)"/><text x="7.7105%" y="175.50"></text></g><g><title>default_wake_function (1 samples, 0.14%)</title><rect x="8.3214%" y="117" width="0.1435%" height="15" fill="rgb(224,169,11)"/><text x="8.5714%" y="127.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="8.7518%" y="101" width="0.1435%" height="15" fill="rgb(250,166,2)"/><text x="9.0018%" y="111.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="8.7518%" y="85" width="0.1435%" height="15" fill="rgb(242,216,29)"/><text x="9.0018%" y="95.50"></text></g><g><title>psi_task_change (8 samples, 1.15%)</title><rect x="9.1822%" y="85" width="1.1478%" height="15" fill="rgb(230,116,27)"/><text x="9.4322%" y="95.50"></text></g><g><title>psi_group_change (7 samples, 1.00%)</title><rect x="9.3257%" y="69" width="1.0043%" height="15" fill="rgb(228,99,48)"/><text x="9.5757%" y="79.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="10.1865%" y="53" width="0.1435%" height="15" fill="rgb(253,11,6)"/><text x="10.4365%" y="63.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="10.1865%" y="37" width="0.1435%" height="15" fill="rgb(247,143,39)"/><text x="10.4365%" y="47.50"></text></g><g><title>enqueue_task (13 samples, 1.87%)</title><rect x="8.8953%" y="101" width="1.8651%" height="15" fill="rgb(236,97,10)"/><text x="9.1453%" y="111.50">e..</text></g><g><title>uclamp_rq_inc_id (3 samples, 0.43%)</title><rect x="10.3300%" y="85" width="0.4304%" height="15" fill="rgb(233,208,19)"/><text x="10.5800%" y="95.50"></text></g><g><title>account_entity_enqueue (3 samples, 0.43%)</title><rect x="11.0473%" y="69" width="0.4304%" height="15" fill="rgb(216,164,2)"/><text x="11.2973%" y="79.50"></text></g><g><title>reweight_entity (1 samples, 0.14%)</title><rect x="11.4778%" y="69" width="0.1435%" height="15" fill="rgb(220,129,5)"/><text x="11.7278%" y="79.50"></text></g><g><title>try_to_wake_up (27 samples, 3.87%)</title><rect x="8.4648%" y="117" width="3.8737%" height="15" fill="rgb(242,17,10)"/><text x="8.7148%" y="127.50">try_..</text></g><g><title>enqueue_task_fair (11 samples, 1.58%)</title><rect x="10.7604%" y="101" width="1.5782%" height="15" fill="rgb(242,107,0)"/><text x="11.0104%" y="111.50"></text></g><g><title>enqueue_entity (11 samples, 1.58%)</title><rect x="10.7604%" y="85" width="1.5782%" height="15" fill="rgb(251,28,31)"/><text x="11.0104%" y="95.50"></text></g><g><title>update_load_avg (5 samples, 0.72%)</title><rect x="11.6212%" y="69" width="0.7174%" height="15" fill="rgb(233,223,10)"/><text x="11.8712%" y="79.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.43%)</title><rect x="11.9082%" y="53" width="0.4304%" height="15" fill="rgb(215,21,27)"/><text x="12.1582%" y="63.50"></text></g><g><title>sock_def_readable (32 samples, 4.59%)</title><rect x="7.8910%" y="165" width="4.5911%" height="15" fill="rgb(232,23,21)"/><text x="8.1410%" y="175.50">sock_..</text></g><g><title>__wake_up_common_lock (30 samples, 4.30%)</title><rect x="8.1779%" y="149" width="4.3042%" height="15" fill="rgb(244,5,23)"/><text x="8.4279%" y="159.50">__wak..</text></g><g><title>__wake_up_common (29 samples, 4.16%)</title><rect x="8.3214%" y="133" width="4.1607%" height="15" fill="rgb(226,81,46)"/><text x="8.5714%" y="143.50">__wak..</text></g><g><title>woken_wake_function (1 samples, 0.14%)</title><rect x="12.3386%" y="117" width="0.1435%" height="15" fill="rgb(247,70,30)"/><text x="12.5886%" y="127.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="12.7690%" y="149" width="0.1435%" height="15" fill="rgb(212,68,19)"/><text x="13.0190%" y="159.50"></text></g><g><title>kfree (1 samples, 0.14%)</title><rect x="12.7690%" y="133" width="0.1435%" height="15" fill="rgb(240,187,13)"/><text x="13.0190%" y="143.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.14%)</title><rect x="12.7690%" y="117" width="0.1435%" height="15" fill="rgb(223,113,26)"/><text x="13.0190%" y="127.50"></text></g><g><title>kfree_skbmem (1 samples, 0.14%)</title><rect x="12.9125%" y="149" width="0.1435%" height="15" fill="rgb(206,192,2)"/><text x="13.1625%" y="159.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="13.0560%" y="149" width="0.1435%" height="15" fill="rgb(241,108,4)"/><text x="13.3060%" y="159.50"></text></g><g><title>cache_from_obj (1 samples, 0.14%)</title><rect x="13.0560%" y="133" width="0.1435%" height="15" fill="rgb(247,173,49)"/><text x="13.3060%" y="143.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.14%)</title><rect x="13.1994%" y="149" width="0.1435%" height="15" fill="rgb(224,114,35)"/><text x="13.4494%" y="159.50"></text></g><g><title>tcp_ack (8 samples, 1.15%)</title><rect x="12.4821%" y="165" width="1.1478%" height="15" fill="rgb(245,159,27)"/><text x="12.7321%" y="175.50"></text></g><g><title>tcp_rearm_rto (2 samples, 0.29%)</title><rect x="13.3429%" y="149" width="0.2869%" height="15" fill="rgb(245,172,44)"/><text x="13.5929%" y="159.50"></text></g><g><title>tcp_check_space (1 samples, 0.14%)</title><rect x="13.6298%" y="165" width="0.1435%" height="15" fill="rgb(236,23,11)"/><text x="13.8798%" y="175.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.14%)</title><rect x="13.7733%" y="165" width="0.1435%" height="15" fill="rgb(205,117,38)"/><text x="14.0233%" y="175.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="13.9168%" y="165" width="0.1435%" height="15" fill="rgb(237,72,25)"/><text x="14.1668%" y="175.50"></text></g><g><title>ip_local_deliver (53 samples, 7.60%)</title><rect x="6.5997%" y="261" width="7.6040%" height="15" fill="rgb(244,70,9)"/><text x="6.8497%" y="271.50">ip_local_d..</text></g><g><title>ip_local_deliver_finish (53 samples, 7.60%)</title><rect x="6.5997%" y="245" width="7.6040%" height="15" fill="rgb(217,125,39)"/><text x="6.8497%" y="255.50">ip_local_d..</text></g><g><title>ip_protocol_deliver_rcu (51 samples, 7.32%)</title><rect x="6.8867%" y="229" width="7.3171%" height="15" fill="rgb(235,36,10)"/><text x="7.1367%" y="239.50">ip_protoco..</text></g><g><title>tcp_v4_rcv (51 samples, 7.32%)</title><rect x="6.8867%" y="213" width="7.3171%" height="15" fill="rgb(251,123,47)"/><text x="7.1367%" y="223.50">tcp_v4_rcv</text></g><g><title>tcp_v4_do_rcv (46 samples, 6.60%)</title><rect x="7.6040%" y="197" width="6.5997%" height="15" fill="rgb(221,13,13)"/><text x="7.8540%" y="207.50">tcp_v4_do..</text></g><g><title>tcp_rcv_established (46 samples, 6.60%)</title><rect x="7.6040%" y="181" width="6.5997%" height="15" fill="rgb(238,131,9)"/><text x="7.8540%" y="191.50">tcp_rcv_e..</text></g><g><title>tcp_queue_rcv (1 samples, 0.14%)</title><rect x="14.0603%" y="165" width="0.1435%" height="15" fill="rgb(211,50,8)"/><text x="14.3103%" y="175.50"></text></g><g><title>__netif_receive_skb_one_core (55 samples, 7.89%)</title><rect x="6.5997%" y="293" width="7.8910%" height="15" fill="rgb(245,182,24)"/><text x="6.8497%" y="303.50">__netif_rec..</text></g><g><title>ip_rcv (55 samples, 7.89%)</title><rect x="6.5997%" y="277" width="7.8910%" height="15" fill="rgb(242,14,37)"/><text x="6.8497%" y="287.50">ip_rcv</text></g><g><title>ip_rcv_core (2 samples, 0.29%)</title><rect x="14.2037%" y="261" width="0.2869%" height="15" fill="rgb(246,228,12)"/><text x="14.4537%" y="271.50"></text></g><g><title>ip_finish_output2 (71 samples, 10.19%)</title><rect x="4.4476%" y="405" width="10.1865%" height="15" fill="rgb(213,55,15)"/><text x="4.6976%" y="415.50">ip_finish_outpu..</text></g><g><title>__local_bh_enable_ip (59 samples, 8.46%)</title><rect x="6.1693%" y="389" width="8.4648%" height="15" fill="rgb(209,9,3)"/><text x="6.4193%" y="399.50">__local_bh_e..</text></g><g><title>do_softirq (58 samples, 8.32%)</title><rect x="6.3128%" y="373" width="8.3214%" height="15" fill="rgb(230,59,30)"/><text x="6.5628%" y="383.50">do_softirq</text></g><g><title>do_softirq_own_stack (58 samples, 8.32%)</title><rect x="6.3128%" y="357" width="8.3214%" height="15" fill="rgb(209,121,21)"/><text x="6.5628%" y="367.50">do_softirq_o..</text></g><g><title>__do_softirq (57 samples, 8.18%)</title><rect x="6.4562%" y="341" width="8.1779%" height="15" fill="rgb(220,109,13)"/><text x="6.7062%" y="351.50">__do_softirq</text></g><g><title>net_rx_action (57 samples, 8.18%)</title><rect x="6.4562%" y="325" width="8.1779%" height="15" fill="rgb(232,18,1)"/><text x="6.7062%" y="335.50">net_rx_acti..</text></g><g><title>process_backlog (56 samples, 8.03%)</title><rect x="6.5997%" y="309" width="8.0344%" height="15" fill="rgb(215,41,42)"/><text x="6.8497%" y="319.50">process_bac..</text></g><g><title>_raw_spin_lock (1 samples, 0.14%)</title><rect x="14.4907%" y="293" width="0.1435%" height="15" fill="rgb(224,123,36)"/><text x="14.7407%" y="303.50"></text></g><g><title>__ip_queue_xmit (79 samples, 11.33%)</title><rect x="3.4433%" y="437" width="11.3343%" height="15" fill="rgb(240,125,3)"/><text x="3.6933%" y="447.50">__ip_queue_xmit</text></g><g><title>ip_output (73 samples, 10.47%)</title><rect x="4.3042%" y="421" width="10.4735%" height="15" fill="rgb(205,98,50)"/><text x="4.5542%" y="431.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="14.6341%" y="405" width="0.1435%" height="15" fill="rgb(205,185,37)"/><text x="14.8841%" y="415.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="14.6341%" y="389" width="0.1435%" height="15" fill="rgb(238,207,15)"/><text x="14.8841%" y="399.50"></text></g><g><title>tcp_update_skb_after_send (1 samples, 0.14%)</title><rect x="14.7776%" y="437" width="0.1435%" height="15" fill="rgb(213,199,42)"/><text x="15.0276%" y="447.50"></text></g><g><title>__tcp_transmit_skb (83 samples, 11.91%)</title><rect x="3.1564%" y="453" width="11.9082%" height="15" fill="rgb(235,201,11)"/><text x="3.4064%" y="463.50">__tcp_transmit_skb</text></g><g><title>tcp_v4_send_check (1 samples, 0.14%)</title><rect x="14.9211%" y="437" width="0.1435%" height="15" fill="rgb(207,46,11)"/><text x="15.1711%" y="447.50"></text></g><g><title>ktime_get (1 samples, 0.14%)</title><rect x="15.0646%" y="453" width="0.1435%" height="15" fill="rgb(241,35,35)"/><text x="15.3146%" y="463.50"></text></g><g><title>read_tsc (1 samples, 0.14%)</title><rect x="15.0646%" y="437" width="0.1435%" height="15" fill="rgb(243,32,47)"/><text x="15.3146%" y="447.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="15.2080%" y="453" width="0.1435%" height="15" fill="rgb(247,202,23)"/><text x="15.4580%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (86 samples, 12.34%)</title><rect x="3.1564%" y="485" width="12.3386%" height="15" fill="rgb(219,102,11)"/><text x="3.4064%" y="495.50">__tcp_push_pending..</text></g><g><title>tcp_write_xmit (86 samples, 12.34%)</title><rect x="3.1564%" y="469" width="12.3386%" height="15" fill="rgb(243,110,44)"/><text x="3.4064%" y="479.50">tcp_write_xmit</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.14%)</title><rect x="15.3515%" y="453" width="0.1435%" height="15" fill="rgb(222,74,54)"/><text x="15.6015%" y="463.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.14%)</title><rect x="15.4950%" y="485" width="0.1435%" height="15" fill="rgb(216,99,12)"/><text x="15.7450%" y="495.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.14%)</title><rect x="15.7819%" y="453" width="0.1435%" height="15" fill="rgb(226,22,26)"/><text x="16.0319%" y="463.50"></text></g><g><title>__ksize (2 samples, 0.29%)</title><rect x="15.9254%" y="453" width="0.2869%" height="15" fill="rgb(217,163,10)"/><text x="16.1754%" y="463.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.72%)</title><rect x="15.6385%" y="485" width="0.7174%" height="15" fill="rgb(213,25,53)"/><text x="15.8885%" y="495.50"></text></g><g><title>__alloc_skb (5 samples, 0.72%)</title><rect x="15.6385%" y="469" width="0.7174%" height="15" fill="rgb(252,105,26)"/><text x="15.8885%" y="479.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="16.2123%" y="453" width="0.1435%" height="15" fill="rgb(220,39,43)"/><text x="16.4623%" y="463.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.14%)</title><rect x="16.2123%" y="437" width="0.1435%" height="15" fill="rgb(229,68,48)"/><text x="16.4623%" y="447.50"></text></g><g><title>___slab_alloc (1 samples, 0.14%)</title><rect x="16.2123%" y="421" width="0.1435%" height="15" fill="rgb(252,8,32)"/><text x="16.4623%" y="431.50"></text></g><g><title>sock_sendmsg (97 samples, 13.92%)</title><rect x="2.7260%" y="533" width="13.9168%" height="15" fill="rgb(223,20,43)"/><text x="2.9760%" y="543.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (96 samples, 13.77%)</title><rect x="2.8694%" y="517" width="13.7733%" height="15" fill="rgb(229,81,49)"/><text x="3.1194%" y="527.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (95 samples, 13.63%)</title><rect x="3.0129%" y="501" width="13.6298%" height="15" fill="rgb(236,28,36)"/><text x="3.2629%" y="511.50">tcp_sendmsg_locked</text></g><g><title>tcp_send_mss (2 samples, 0.29%)</title><rect x="16.3558%" y="485" width="0.2869%" height="15" fill="rgb(249,185,26)"/><text x="16.6058%" y="495.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="16.4993%" y="469" width="0.1435%" height="15" fill="rgb(249,174,33)"/><text x="16.7493%" y="479.50"></text></g><g><title>__x64_sys_sendto (98 samples, 14.06%)</title><rect x="2.7260%" y="565" width="14.0603%" height="15" fill="rgb(233,201,37)"/><text x="2.9760%" y="575.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (98 samples, 14.06%)</title><rect x="2.7260%" y="549" width="14.0603%" height="15" fill="rgb(221,78,26)"/><text x="2.9760%" y="559.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="16.6428%" y="533" width="0.1435%" height="15" fill="rgb(250,127,30)"/><text x="16.8928%" y="543.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="16.6428%" y="517" width="0.1435%" height="15" fill="rgb(230,49,44)"/><text x="16.8928%" y="527.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="16.6428%" y="501" width="0.1435%" height="15" fill="rgb(229,67,23)"/><text x="16.8928%" y="511.50"></text></g><g><title>do_syscall_64 (100 samples, 14.35%)</title><rect x="2.7260%" y="581" width="14.3472%" height="15" fill="rgb(249,83,47)"/><text x="2.9760%" y="591.50">do_syscall_64</text></g><g><title>syscall_trace_enter (2 samples, 0.29%)</title><rect x="16.7862%" y="565" width="0.2869%" height="15" fill="rgb(215,43,3)"/><text x="17.0362%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (105 samples, 15.06%)</title><rect x="2.5825%" y="597" width="15.0646%" height="15" fill="rgb(238,154,13)"/><text x="2.8325%" y="607.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.57%)</title><rect x="17.0732%" y="581" width="0.5739%" height="15" fill="rgb(219,56,2)"/><text x="17.3232%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (106 samples, 15.21%)</title><rect x="2.5825%" y="645" width="15.2080%" height="15" fill="rgb(233,0,4)"/><text x="2.8325%" y="655.50">&lt;std::net::tcp::TcpStre..</text></g><g><title>std::sys_common::net::TcpStream::write (106 samples, 15.21%)</title><rect x="2.5825%" y="629" width="15.2080%" height="15" fill="rgb(235,30,7)"/><text x="2.8325%" y="639.50">std::sys_common::net::T..</text></g><g><title>__libc_send (106 samples, 15.21%)</title><rect x="2.5825%" y="613" width="15.2080%" height="15" fill="rgb(250,79,13)"/><text x="2.8325%" y="623.50">__libc_send</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="17.6471%" y="597" width="0.1435%" height="15" fill="rgb(211,146,34)"/><text x="17.8971%" y="607.50"></text></g><g><title>__libc_start_main (110 samples, 15.78%)</title><rect x="2.1521%" y="869" width="15.7819%" height="15" fill="rgb(228,22,38)"/><text x="2.4021%" y="879.50">__libc_start_main</text></g><g><title>main (110 samples, 15.78%)</title><rect x="2.1521%" y="853" width="15.7819%" height="15" fill="rgb(235,168,5)"/><text x="2.4021%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (110 samples, 15.78%)</title><rect x="2.1521%" y="837" width="15.7819%" height="15" fill="rgb(221,155,16)"/><text x="2.4021%" y="847.50">std::rt::lang_start_inte..</text></g><g><title>std::panic::catch_unwind (110 samples, 15.78%)</title><rect x="2.1521%" y="821" width="15.7819%" height="15" fill="rgb(215,215,53)"/><text x="2.4021%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (110 samples, 15.78%)</title><rect x="2.1521%" y="805" width="15.7819%" height="15" fill="rgb(223,4,10)"/><text x="2.4021%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (110 samples, 15.78%)</title><rect x="2.1521%" y="789" width="15.7819%" height="15" fill="rgb(234,103,6)"/><text x="2.4021%" y="799.50">std::panicking::try::do_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (110 samples, 15.78%)</title><rect x="2.1521%" y="773" width="15.7819%" height="15" fill="rgb(227,97,0)"/><text x="2.4021%" y="783.50">core::ops::function::imp..</text></g><g><title>std::rt::lang_start::_{{closure}} (110 samples, 15.78%)</title><rect x="2.1521%" y="757" width="15.7819%" height="15" fill="rgb(234,150,53)"/><text x="2.4021%" y="767.50">std::rt::lang_start::_{{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (110 samples, 15.78%)</title><rect x="2.1521%" y="741" width="15.7819%" height="15" fill="rgb(228,201,54)"/><text x="2.4021%" y="751.50">std::sys_common::backtra..</text></g><g><title>lobsters::main (110 samples, 15.78%)</title><rect x="2.1521%" y="725" width="15.7819%" height="15" fill="rgb(222,22,37)"/><text x="2.4021%" y="735.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (109 samples, 15.64%)</title><rect x="2.2956%" y="709" width="15.6385%" height="15" fill="rgb(237,53,32)"/><text x="2.5456%" y="719.50">mysql::conn::queryable::..</text></g><g><title>mysql::conn::Conn::_query (109 samples, 15.64%)</title><rect x="2.2956%" y="693" width="15.6385%" height="15" fill="rgb(233,25,53)"/><text x="2.5456%" y="703.50">mysql::conn::Conn::_query</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (109 samples, 15.64%)</title><rect x="2.2956%" y="677" width="15.6385%" height="15" fill="rgb(210,40,34)"/><text x="2.5456%" y="687.50">mysql_common::proto::syn..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (108 samples, 15.49%)</title><rect x="2.4390%" y="661" width="15.4950%" height="15" fill="rgb(241,220,44)"/><text x="2.6890%" y="671.50">std::io::buffered::BufWr..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (1 samples, 0.14%)</title><rect x="17.7905%" y="645" width="0.1435%" height="15" fill="rgb(235,28,35)"/><text x="18.0405%" y="655.50"></text></g><g><title>__rdl_alloc (2 samples, 0.29%)</title><rect x="17.9340%" y="869" width="0.2869%" height="15" fill="rgb(210,56,17)"/><text x="18.1840%" y="879.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.14%)</title><rect x="18.2209%" y="869" width="0.1435%" height="15" fill="rgb(224,130,29)"/><text x="18.4709%" y="879.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="18.3644%" y="789" width="0.1435%" height="15" fill="rgb(235,212,8)"/><text x="18.6144%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="18.3644%" y="773" width="0.1435%" height="15" fill="rgb(223,33,50)"/><text x="18.6144%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="18.3644%" y="757" width="0.1435%" height="15" fill="rgb(219,149,13)"/><text x="18.6144%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="18.3644%" y="741" width="0.1435%" height="15" fill="rgb(250,156,29)"/><text x="18.6144%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="18.3644%" y="725" width="0.1435%" height="15" fill="rgb(216,193,19)"/><text x="18.6144%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="18.3644%" y="709" width="0.1435%" height="15" fill="rgb(216,135,14)"/><text x="18.6144%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="18.3644%" y="693" width="0.1435%" height="15" fill="rgb(241,47,5)"/><text x="18.6144%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="18.3644%" y="677" width="0.1435%" height="15" fill="rgb(233,42,35)"/><text x="18.6144%" y="687.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="18.3644%" y="661" width="0.1435%" height="15" fill="rgb(231,13,6)"/><text x="18.6144%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="18.3644%" y="645" width="0.1435%" height="15" fill="rgb(207,181,40)"/><text x="18.6144%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="18.3644%" y="629" width="0.1435%" height="15" fill="rgb(254,173,49)"/><text x="18.6144%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="18.3644%" y="613" width="0.1435%" height="15" fill="rgb(221,1,38)"/><text x="18.6144%" y="623.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="18.3644%" y="597" width="0.1435%" height="15" fill="rgb(206,124,46)"/><text x="18.6144%" y="607.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="18.3644%" y="581" width="0.1435%" height="15" fill="rgb(249,21,11)"/><text x="18.6144%" y="591.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="18.3644%" y="565" width="0.1435%" height="15" fill="rgb(222,201,40)"/><text x="18.6144%" y="575.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="18.3644%" y="549" width="0.1435%" height="15" fill="rgb(235,61,29)"/><text x="18.6144%" y="559.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="18.3644%" y="533" width="0.1435%" height="15" fill="rgb(219,207,3)"/><text x="18.6144%" y="543.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="18.3644%" y="517" width="0.1435%" height="15" fill="rgb(222,56,46)"/><text x="18.6144%" y="527.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="18.3644%" y="501" width="0.1435%" height="15" fill="rgb(239,76,54)"/><text x="18.6144%" y="511.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="18.3644%" y="485" width="0.1435%" height="15" fill="rgb(231,124,27)"/><text x="18.6144%" y="495.50"></text></g><g><title>do_softirq (1 samples, 0.14%)</title><rect x="18.3644%" y="469" width="0.1435%" height="15" fill="rgb(249,195,6)"/><text x="18.6144%" y="479.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.14%)</title><rect x="18.3644%" y="453" width="0.1435%" height="15" fill="rgb(237,174,47)"/><text x="18.6144%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.14%)</title><rect x="18.3644%" y="437" width="0.1435%" height="15" fill="rgb(206,201,31)"/><text x="18.6144%" y="447.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="18.3644%" y="421" width="0.1435%" height="15" fill="rgb(231,57,52)"/><text x="18.6144%" y="431.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="18.3644%" y="405" width="0.1435%" height="15" fill="rgb(248,177,22)"/><text x="18.6144%" y="415.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.29%)</title><rect x="18.3644%" y="869" width="0.2869%" height="15" fill="rgb(215,211,37)"/><text x="18.6144%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (2 samples, 0.29%)</title><rect x="18.3644%" y="853" width="0.2869%" height="15" fill="rgb(241,128,51)"/><text x="18.6144%" y="863.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.29%)</title><rect x="18.3644%" y="837" width="0.2869%" height="15" fill="rgb(227,165,31)"/><text x="18.6144%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.29%)</title><rect x="18.3644%" y="821" width="0.2869%" height="15" fill="rgb(228,167,24)"/><text x="18.6144%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.29%)</title><rect x="18.3644%" y="805" width="0.2869%" height="15" fill="rgb(228,143,12)"/><text x="18.6144%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="18.5079%" y="789" width="0.1435%" height="15" fill="rgb(249,149,8)"/><text x="18.7579%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="18.5079%" y="773" width="0.1435%" height="15" fill="rgb(243,35,44)"/><text x="18.7579%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="18.5079%" y="757" width="0.1435%" height="15" fill="rgb(246,89,9)"/><text x="18.7579%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.14%)</title><rect x="18.5079%" y="741" width="0.1435%" height="15" fill="rgb(233,213,13)"/><text x="18.7579%" y="751.50"></text></g><g><title>__libc_send (1 samples, 0.14%)</title><rect x="18.5079%" y="725" width="0.1435%" height="15" fill="rgb(233,141,41)"/><text x="18.7579%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="18.5079%" y="709" width="0.1435%" height="15" fill="rgb(239,167,4)"/><text x="18.7579%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="18.5079%" y="693" width="0.1435%" height="15" fill="rgb(209,217,16)"/><text x="18.7579%" y="703.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="18.5079%" y="677" width="0.1435%" height="15" fill="rgb(219,88,35)"/><text x="18.7579%" y="687.50"></text></g><g><title>__sys_sendto (1 samples, 0.14%)</title><rect x="18.5079%" y="661" width="0.1435%" height="15" fill="rgb(220,193,23)"/><text x="18.7579%" y="671.50"></text></g><g><title>sock_sendmsg (1 samples, 0.14%)</title><rect x="18.5079%" y="645" width="0.1435%" height="15" fill="rgb(230,90,52)"/><text x="18.7579%" y="655.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.14%)</title><rect x="18.5079%" y="629" width="0.1435%" height="15" fill="rgb(252,106,19)"/><text x="18.7579%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.14%)</title><rect x="18.5079%" y="613" width="0.1435%" height="15" fill="rgb(206,74,20)"/><text x="18.7579%" y="623.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="18.5079%" y="597" width="0.1435%" height="15" fill="rgb(230,138,44)"/><text x="18.7579%" y="607.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.14%)</title><rect x="18.5079%" y="581" width="0.1435%" height="15" fill="rgb(235,182,43)"/><text x="18.7579%" y="591.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="18.5079%" y="565" width="0.1435%" height="15" fill="rgb(242,16,51)"/><text x="18.7579%" y="575.50"></text></g><g><title>skb_push (1 samples, 0.14%)</title><rect x="18.5079%" y="549" width="0.1435%" height="15" fill="rgb(248,9,4)"/><text x="18.7579%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="18.6514%" y="837" width="0.1435%" height="15" fill="rgb(210,31,22)"/><text x="18.9014%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="18.6514%" y="821" width="0.1435%" height="15" fill="rgb(239,54,39)"/><text x="18.9014%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="18.6514%" y="805" width="0.1435%" height="15" fill="rgb(230,99,41)"/><text x="18.9014%" y="815.50"></text></g><g><title>dlopen (1 samples, 0.14%)</title><rect x="18.6514%" y="789" width="0.1435%" height="15" fill="rgb(253,106,12)"/><text x="18.9014%" y="799.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="18.6514%" y="773" width="0.1435%" height="15" fill="rgb(213,46,41)"/><text x="18.9014%" y="783.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.14%)</title><rect x="18.6514%" y="757" width="0.1435%" height="15" fill="rgb(215,133,35)"/><text x="18.9014%" y="767.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="18.6514%" y="741" width="0.1435%" height="15" fill="rgb(213,28,5)"/><text x="18.9014%" y="751.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.14%)</title><rect x="18.6514%" y="725" width="0.1435%" height="15" fill="rgb(215,77,49)"/><text x="18.9014%" y="735.50"></text></g><g><title>_dl_open (1 samples, 0.14%)</title><rect x="18.6514%" y="709" width="0.1435%" height="15" fill="rgb(248,100,22)"/><text x="18.9014%" y="719.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.14%)</title><rect x="18.6514%" y="693" width="0.1435%" height="15" fill="rgb(208,67,9)"/><text x="18.9014%" y="703.50"></text></g><g><title>dl_open_worker (1 samples, 0.14%)</title><rect x="18.6514%" y="677" width="0.1435%" height="15" fill="rgb(219,133,21)"/><text x="18.9014%" y="687.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.14%)</title><rect x="18.6514%" y="661" width="0.1435%" height="15" fill="rgb(246,46,29)"/><text x="18.9014%" y="671.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="18.6514%" y="645" width="0.1435%" height="15" fill="rgb(246,185,52)"/><text x="18.9014%" y="655.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="18.6514%" y="629" width="0.1435%" height="15" fill="rgb(252,136,11)"/><text x="18.9014%" y="639.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="18.6514%" y="613" width="0.1435%" height="15" fill="rgb(219,138,53)"/><text x="18.9014%" y="623.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="18.6514%" y="597" width="0.1435%" height="15" fill="rgb(211,51,23)"/><text x="18.9014%" y="607.50"></text></g><g><title>do_wp_page (1 samples, 0.14%)</title><rect x="18.6514%" y="581" width="0.1435%" height="15" fill="rgb(247,221,28)"/><text x="18.9014%" y="591.50"></text></g><g><title>wp_page_copy (1 samples, 0.14%)</title><rect x="18.6514%" y="565" width="0.1435%" height="15" fill="rgb(251,222,45)"/><text x="18.9014%" y="575.50"></text></g><g><title>copy_page (1 samples, 0.14%)</title><rect x="18.6514%" y="549" width="0.1435%" height="15" fill="rgb(217,162,53)"/><text x="18.9014%" y="559.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.29%)</title><rect x="18.6514%" y="853" width="0.2869%" height="15" fill="rgb(229,93,14)"/><text x="18.9014%" y="863.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.14%)</title><rect x="18.7948%" y="837" width="0.1435%" height="15" fill="rgb(209,67,49)"/><text x="19.0448%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="18.7948%" y="821" width="0.1435%" height="15" fill="rgb(213,87,29)"/><text x="19.0448%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="18.7948%" y="805" width="0.1435%" height="15" fill="rgb(205,151,52)"/><text x="19.0448%" y="815.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.14%)</title><rect x="18.7948%" y="789" width="0.1435%" height="15" fill="rgb(253,215,39)"/><text x="19.0448%" y="799.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.14%)</title><rect x="18.7948%" y="773" width="0.1435%" height="15" fill="rgb(221,220,41)"/><text x="19.0448%" y="783.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.14%)</title><rect x="18.7948%" y="757" width="0.1435%" height="15" fill="rgb(218,133,21)"/><text x="19.0448%" y="767.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.14%)</title><rect x="18.7948%" y="741" width="0.1435%" height="15" fill="rgb(221,193,43)"/><text x="19.0448%" y="751.50"></text></g><g><title>__GI___read (1 samples, 0.14%)</title><rect x="18.7948%" y="725" width="0.1435%" height="15" fill="rgb(240,128,52)"/><text x="19.0448%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="18.7948%" y="709" width="0.1435%" height="15" fill="rgb(253,114,12)"/><text x="19.0448%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="18.7948%" y="693" width="0.1435%" height="15" fill="rgb(215,223,47)"/><text x="19.0448%" y="703.50"></text></g><g><title>ksys_read (1 samples, 0.14%)</title><rect x="18.7948%" y="677" width="0.1435%" height="15" fill="rgb(248,225,23)"/><text x="19.0448%" y="687.50"></text></g><g><title>vfs_read (1 samples, 0.14%)</title><rect x="18.7948%" y="661" width="0.1435%" height="15" fill="rgb(250,108,0)"/><text x="19.0448%" y="671.50"></text></g><g><title>seq_read (1 samples, 0.14%)</title><rect x="18.7948%" y="645" width="0.1435%" height="15" fill="rgb(228,208,7)"/><text x="19.0448%" y="655.50"></text></g><g><title>show_cpuinfo (1 samples, 0.14%)</title><rect x="18.7948%" y="629" width="0.1435%" height="15" fill="rgb(244,45,10)"/><text x="19.0448%" y="639.50"></text></g><g><title>seq_printf (1 samples, 0.14%)</title><rect x="18.7948%" y="613" width="0.1435%" height="15" fill="rgb(207,125,25)"/><text x="19.0448%" y="623.50"></text></g><g><title>vsnprintf (1 samples, 0.14%)</title><rect x="18.7948%" y="597" width="0.1435%" height="15" fill="rgb(210,195,18)"/><text x="19.0448%" y="607.50"></text></g><g><title>format_decode (1 samples, 0.14%)</title><rect x="18.7948%" y="581" width="0.1435%" height="15" fill="rgb(249,80,12)"/><text x="19.0448%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.14%)</title><rect x="18.9383%" y="805" width="0.1435%" height="15" fill="rgb(221,65,9)"/><text x="19.1883%" y="815.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="19.3687%" y="677" width="0.1435%" height="15" fill="rgb(235,49,36)"/><text x="19.6187%" y="687.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="19.5122%" y="677" width="0.1435%" height="15" fill="rgb(225,32,20)"/><text x="19.7622%" y="687.50"></text></g><g><title>fput (1 samples, 0.14%)</title><rect x="19.7991%" y="613" width="0.1435%" height="15" fill="rgb(215,141,46)"/><text x="20.0491%" y="623.50"></text></g><g><title>import_single_range (1 samples, 0.14%)</title><rect x="19.9426%" y="613" width="0.1435%" height="15" fill="rgb(250,160,47)"/><text x="20.1926%" y="623.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="20.3730%" y="565" width="0.1435%" height="15" fill="rgb(216,222,40)"/><text x="20.6230%" y="575.50"></text></g><g><title>__kfree_skb (4 samples, 0.57%)</title><rect x="20.3730%" y="581" width="0.5739%" height="15" fill="rgb(234,217,39)"/><text x="20.6230%" y="591.50"></text></g><g><title>skb_release_head_state (3 samples, 0.43%)</title><rect x="20.5165%" y="565" width="0.4304%" height="15" fill="rgb(207,178,40)"/><text x="20.7665%" y="575.50"></text></g><g><title>dst_release (3 samples, 0.43%)</title><rect x="20.5165%" y="549" width="0.4304%" height="15" fill="rgb(221,136,13)"/><text x="20.7665%" y="559.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="20.9469%" y="581" width="0.1435%" height="15" fill="rgb(249,199,10)"/><text x="21.1969%" y="591.50"></text></g><g><title>kfree_skbmem (1 samples, 0.14%)</title><rect x="21.0904%" y="581" width="0.1435%" height="15" fill="rgb(249,222,13)"/><text x="21.3404%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="21.3773%" y="565" width="0.1435%" height="15" fill="rgb(244,185,38)"/><text x="21.6273%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="21.5208%" y="565" width="0.1435%" height="15" fill="rgb(236,202,9)"/><text x="21.7708%" y="575.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="21.5208%" y="549" width="0.1435%" height="15" fill="rgb(250,229,37)"/><text x="21.7708%" y="559.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="21.6643%" y="565" width="0.1435%" height="15" fill="rgb(206,174,23)"/><text x="21.9143%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="21.6643%" y="549" width="0.1435%" height="15" fill="rgb(211,33,43)"/><text x="21.9143%" y="559.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.29%)</title><rect x="22.5251%" y="501" width="0.2869%" height="15" fill="rgb(245,58,50)"/><text x="22.7751%" y="511.50"></text></g><g><title>ctx_sched_out (1 samples, 0.14%)</title><rect x="22.6686%" y="485" width="0.1435%" height="15" fill="rgb(244,68,36)"/><text x="22.9186%" y="495.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.14%)</title><rect x="22.6686%" y="469" width="0.1435%" height="15" fill="rgb(232,229,15)"/><text x="22.9186%" y="479.50"></text></g><g><title>update_cfs_group (1 samples, 0.14%)</title><rect x="23.0990%" y="469" width="0.1435%" height="15" fill="rgb(254,30,23)"/><text x="23.3490%" y="479.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.14%)</title><rect x="23.3859%" y="453" width="0.1435%" height="15" fill="rgb(235,160,14)"/><text x="23.6359%" y="463.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.14%)</title><rect x="23.3859%" y="437" width="0.1435%" height="15" fill="rgb(212,155,44)"/><text x="23.6359%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="23.5294%" y="453" width="0.1435%" height="15" fill="rgb(226,2,50)"/><text x="23.7794%" y="463.50"></text></g><g><title>update_curr (4 samples, 0.57%)</title><rect x="23.2425%" y="469" width="0.5739%" height="15" fill="rgb(234,177,6)"/><text x="23.4925%" y="479.50"></text></g><g><title>update_min_vruntime (1 samples, 0.14%)</title><rect x="23.6729%" y="453" width="0.1435%" height="15" fill="rgb(217,24,9)"/><text x="23.9229%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="23.9598%" y="453" width="0.1435%" height="15" fill="rgb(220,13,46)"/><text x="24.2098%" y="463.50"></text></g><g><title>dequeue_task_fair (11 samples, 1.58%)</title><rect x="22.8121%" y="501" width="1.5782%" height="15" fill="rgb(239,221,27)"/><text x="23.0621%" y="511.50"></text></g><g><title>dequeue_entity (11 samples, 1.58%)</title><rect x="22.8121%" y="485" width="1.5782%" height="15" fill="rgb(222,198,25)"/><text x="23.0621%" y="495.50"></text></g><g><title>update_load_avg (4 samples, 0.57%)</title><rect x="23.8164%" y="469" width="0.5739%" height="15" fill="rgb(211,99,13)"/><text x="24.0664%" y="479.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.29%)</title><rect x="24.1033%" y="453" width="0.2869%" height="15" fill="rgb(232,111,31)"/><text x="24.3533%" y="463.50"></text></g><g><title>finish_task_switch (2 samples, 0.29%)</title><rect x="24.3902%" y="501" width="0.2869%" height="15" fill="rgb(245,82,37)"/><text x="24.6402%" y="511.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.14%)</title><rect x="24.5337%" y="485" width="0.1435%" height="15" fill="rgb(227,149,46)"/><text x="24.7837%" y="495.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.14%)</title><rect x="24.5337%" y="469" width="0.1435%" height="15" fill="rgb(218,36,50)"/><text x="24.7837%" y="479.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="24.5337%" y="453" width="0.1435%" height="15" fill="rgb(226,80,48)"/><text x="24.7837%" y="463.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.14%)</title><rect x="24.6772%" y="501" width="0.1435%" height="15" fill="rgb(238,224,15)"/><text x="24.9272%" y="511.50"></text></g><g><title>newidle_balance (1 samples, 0.14%)</title><rect x="24.6772%" y="485" width="0.1435%" height="15" fill="rgb(241,136,10)"/><text x="24.9272%" y="495.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.14%)</title><rect x="24.8207%" y="501" width="0.1435%" height="15" fill="rgb(208,32,45)"/><text x="25.0707%" y="511.50"></text></g><g><title>__update_idle_core (1 samples, 0.14%)</title><rect x="24.8207%" y="485" width="0.1435%" height="15" fill="rgb(207,135,9)"/><text x="25.0707%" y="495.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.14%)</title><rect x="24.8207%" y="469" width="0.1435%" height="15" fill="rgb(206,86,44)"/><text x="25.0707%" y="479.50"></text></g><g><title>psi_task_change (4 samples, 0.57%)</title><rect x="24.9641%" y="501" width="0.5739%" height="15" fill="rgb(245,177,15)"/><text x="25.2141%" y="511.50"></text></g><g><title>psi_group_change (4 samples, 0.57%)</title><rect x="24.9641%" y="485" width="0.5739%" height="15" fill="rgb(206,64,50)"/><text x="25.2141%" y="495.50"></text></g><g><title>record_times (2 samples, 0.29%)</title><rect x="25.2511%" y="469" width="0.2869%" height="15" fill="rgb(234,36,40)"/><text x="25.5011%" y="479.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="25.3945%" y="453" width="0.1435%" height="15" fill="rgb(213,64,8)"/><text x="25.6445%" y="463.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.14%)</title><rect x="25.5380%" y="501" width="0.1435%" height="15" fill="rgb(210,75,36)"/><text x="25.7880%" y="511.50"></text></g><g><title>uclamp_rq_dec_id (6 samples, 0.86%)</title><rect x="25.6815%" y="501" width="0.8608%" height="15" fill="rgb(229,88,21)"/><text x="25.9315%" y="511.50"></text></g><g><title>__schedule (30 samples, 4.30%)</title><rect x="22.3816%" y="517" width="4.3042%" height="15" fill="rgb(252,204,47)"/><text x="22.6316%" y="527.50">__sch..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="26.5423%" y="501" width="0.1435%" height="15" fill="rgb(208,77,27)"/><text x="26.7923%" y="511.50"></text></g><g><title>sk_wait_data (39 samples, 5.60%)</title><rect x="21.2339%" y="581" width="5.5954%" height="15" fill="rgb(221,76,26)"/><text x="21.4839%" y="591.50">sk_wait..</text></g><g><title>wait_woken (35 samples, 5.02%)</title><rect x="21.8077%" y="565" width="5.0215%" height="15" fill="rgb(225,139,18)"/><text x="22.0577%" y="575.50">wait_w..</text></g><g><title>schedule_timeout (32 samples, 4.59%)</title><rect x="22.2382%" y="549" width="4.5911%" height="15" fill="rgb(230,137,11)"/><text x="22.4882%" y="559.50">sched..</text></g><g><title>schedule (32 samples, 4.59%)</title><rect x="22.2382%" y="533" width="4.5911%" height="15" fill="rgb(212,28,1)"/><text x="22.4882%" y="543.50">sched..</text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="26.6858%" y="517" width="0.1435%" height="15" fill="rgb(248,164,17)"/><text x="26.9358%" y="527.50"></text></g><g><title>in_lock_functions (1 samples, 0.14%)</title><rect x="26.6858%" y="501" width="0.1435%" height="15" fill="rgb(222,171,42)"/><text x="26.9358%" y="511.50"></text></g><g><title>do_syscall_64 (51 samples, 7.32%)</title><rect x="19.6557%" y="661" width="7.3171%" height="15" fill="rgb(243,84,45)"/><text x="19.9057%" y="671.50">do_syscall..</text></g><g><title>__x64_sys_recvfrom (50 samples, 7.17%)</title><rect x="19.7991%" y="645" width="7.1736%" height="15" fill="rgb(252,49,23)"/><text x="20.0491%" y="655.50">__x64_sys_..</text></g><g><title>__sys_recvfrom (50 samples, 7.17%)</title><rect x="19.7991%" y="629" width="7.1736%" height="15" fill="rgb(215,19,7)"/><text x="20.0491%" y="639.50">__sys_recv..</text></g><g><title>inet_recvmsg (48 samples, 6.89%)</title><rect x="20.0861%" y="613" width="6.8867%" height="15" fill="rgb(238,81,41)"/><text x="20.3361%" y="623.50">inet_recv..</text></g><g><title>tcp_recvmsg (48 samples, 6.89%)</title><rect x="20.0861%" y="597" width="6.8867%" height="15" fill="rgb(210,199,37)"/><text x="20.3361%" y="607.50">tcp_recvm..</text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.14%)</title><rect x="26.8293%" y="581" width="0.1435%" height="15" fill="rgb(244,192,49)"/><text x="27.0793%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (55 samples, 7.89%)</title><rect x="19.6557%" y="677" width="7.8910%" height="15" fill="rgb(226,211,11)"/><text x="19.9057%" y="687.50">entry_SYSCA..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.57%)</title><rect x="26.9727%" y="661" width="0.5739%" height="15" fill="rgb(236,162,54)"/><text x="27.2227%" y="671.50"></text></g><g><title>switch_fpu_return (1 samples, 0.14%)</title><rect x="27.4032%" y="645" width="0.1435%" height="15" fill="rgb(220,229,9)"/><text x="27.6532%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (62 samples, 8.90%)</title><rect x="19.0818%" y="805" width="8.8953%" height="15" fill="rgb(250,87,22)"/><text x="19.3318%" y="815.50">mysql::conn::..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 8.90%)</title><rect x="19.0818%" y="789" width="8.8953%" height="15" fill="rgb(239,43,17)"/><text x="19.3318%" y="799.50">&lt;mysql_common..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (61 samples, 8.75%)</title><rect x="19.2253%" y="773" width="8.7518%" height="15" fill="rgb(231,177,25)"/><text x="19.4753%" y="783.50">&lt;std::io::bu..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (61 samples, 8.75%)</title><rect x="19.2253%" y="757" width="8.7518%" height="15" fill="rgb(219,179,1)"/><text x="19.4753%" y="767.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::read (61 samples, 8.75%)</title><rect x="19.2253%" y="741" width="8.7518%" height="15" fill="rgb(238,219,53)"/><text x="19.4753%" y="751.50">std::sys_com..</text></g><g><title>std::sys::unix::net::Socket::read (61 samples, 8.75%)</title><rect x="19.2253%" y="725" width="8.7518%" height="15" fill="rgb(232,167,36)"/><text x="19.4753%" y="735.50">std::sys::un..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (61 samples, 8.75%)</title><rect x="19.2253%" y="709" width="8.7518%" height="15" fill="rgb(244,19,51)"/><text x="19.4753%" y="719.50">std::sys::un..</text></g><g><title>__libc_recv (60 samples, 8.61%)</title><rect x="19.3687%" y="693" width="8.6083%" height="15" fill="rgb(224,6,22)"/><text x="19.6187%" y="703.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (3 samples, 0.43%)</title><rect x="27.5466%" y="677" width="0.4304%" height="15" fill="rgb(224,145,5)"/><text x="27.7966%" y="687.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.14%)</title><rect x="27.9770%" y="805" width="0.1435%" height="15" fill="rgb(234,130,49)"/><text x="28.2270%" y="815.50"></text></g><g><title>lobsters::main (67 samples, 9.61%)</title><rect x="18.6514%" y="869" width="9.6126%" height="15" fill="rgb(254,6,2)"/><text x="18.9014%" y="879.50">lobsters::main</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (65 samples, 9.33%)</title><rect x="18.9383%" y="853" width="9.3257%" height="15" fill="rgb(208,96,46)"/><text x="19.1883%" y="863.50">mysql::conn::..</text></g><g><title>mysql::conn::Conn::_query (65 samples, 9.33%)</title><rect x="18.9383%" y="837" width="9.3257%" height="15" fill="rgb(239,3,39)"/><text x="19.1883%" y="847.50">mysql::conn::..</text></g><g><title>mysql::conn::Conn::handle_result_set (65 samples, 9.33%)</title><rect x="18.9383%" y="821" width="9.3257%" height="15" fill="rgb(233,210,1)"/><text x="19.1883%" y="831.50">mysql::conn::..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.14%)</title><rect x="28.1205%" y="805" width="0.1435%" height="15" fill="rgb(244,137,37)"/><text x="28.3705%" y="815.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.14%)</title><rect x="28.1205%" y="789" width="0.1435%" height="15" fill="rgb(240,136,2)"/><text x="28.3705%" y="799.50"></text></g><g><title>mysql::conn::Conn::start_transaction (1 samples, 0.14%)</title><rect x="28.2640%" y="805" width="0.1435%" height="15" fill="rgb(239,18,37)"/><text x="28.5140%" y="815.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (1 samples, 0.14%)</title><rect x="28.2640%" y="789" width="0.1435%" height="15" fill="rgb(218,185,22)"/><text x="28.5140%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="28.2640%" y="773" width="0.1435%" height="15" fill="rgb(225,218,4)"/><text x="28.5140%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="28.2640%" y="757" width="0.1435%" height="15" fill="rgb(230,182,32)"/><text x="28.5140%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="28.2640%" y="741" width="0.1435%" height="15" fill="rgb(242,56,43)"/><text x="28.5140%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="28.2640%" y="725" width="0.1435%" height="15" fill="rgb(233,99,24)"/><text x="28.5140%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="28.2640%" y="709" width="0.1435%" height="15" fill="rgb(234,209,42)"/><text x="28.5140%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="28.2640%" y="693" width="0.1435%" height="15" fill="rgb(227,7,12)"/><text x="28.5140%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="28.2640%" y="677" width="0.1435%" height="15" fill="rgb(245,203,43)"/><text x="28.5140%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="28.2640%" y="661" width="0.1435%" height="15" fill="rgb(238,205,33)"/><text x="28.5140%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="28.2640%" y="645" width="0.1435%" height="15" fill="rgb(231,56,7)"/><text x="28.5140%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="28.2640%" y="629" width="0.1435%" height="15" fill="rgb(244,186,29)"/><text x="28.5140%" y="639.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="28.2640%" y="613" width="0.1435%" height="15" fill="rgb(234,111,31)"/><text x="28.5140%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="28.2640%" y="597" width="0.1435%" height="15" fill="rgb(241,149,10)"/><text x="28.5140%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="28.2640%" y="581" width="0.1435%" height="15" fill="rgb(249,206,44)"/><text x="28.5140%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="28.2640%" y="565" width="0.1435%" height="15" fill="rgb(251,153,30)"/><text x="28.5140%" y="575.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="28.2640%" y="549" width="0.1435%" height="15" fill="rgb(239,152,38)"/><text x="28.5140%" y="559.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="28.2640%" y="533" width="0.1435%" height="15" fill="rgb(249,139,47)"/><text x="28.5140%" y="543.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="28.2640%" y="517" width="0.1435%" height="15" fill="rgb(244,64,35)"/><text x="28.5140%" y="527.50"></text></g><g><title>sk_wait_data (1 samples, 0.14%)</title><rect x="28.2640%" y="501" width="0.1435%" height="15" fill="rgb(216,46,15)"/><text x="28.5140%" y="511.50"></text></g><g><title>wait_woken (1 samples, 0.14%)</title><rect x="28.2640%" y="485" width="0.1435%" height="15" fill="rgb(250,74,19)"/><text x="28.5140%" y="495.50"></text></g><g><title>schedule_timeout (1 samples, 0.14%)</title><rect x="28.2640%" y="469" width="0.1435%" height="15" fill="rgb(249,42,33)"/><text x="28.5140%" y="479.50"></text></g><g><title>schedule (1 samples, 0.14%)</title><rect x="28.2640%" y="453" width="0.1435%" height="15" fill="rgb(242,149,17)"/><text x="28.5140%" y="463.50"></text></g><g><title>__schedule (1 samples, 0.14%)</title><rect x="28.2640%" y="437" width="0.1435%" height="15" fill="rgb(244,29,21)"/><text x="28.5140%" y="447.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.14%)</title><rect x="28.2640%" y="421" width="0.1435%" height="15" fill="rgb(220,130,37)"/><text x="28.5140%" y="431.50"></text></g><g><title>dequeue_entity (1 samples, 0.14%)</title><rect x="28.2640%" y="405" width="0.1435%" height="15" fill="rgb(211,67,2)"/><text x="28.5140%" y="415.50"></text></g><g><title>update_curr (1 samples, 0.14%)</title><rect x="28.2640%" y="389" width="0.1435%" height="15" fill="rgb(235,68,52)"/><text x="28.5140%" y="399.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.29%)</title><rect x="28.2640%" y="869" width="0.2869%" height="15" fill="rgb(246,142,3)"/><text x="28.5140%" y="879.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.29%)</title><rect x="28.2640%" y="853" width="0.2869%" height="15" fill="rgb(241,25,7)"/><text x="28.5140%" y="863.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.29%)</title><rect x="28.2640%" y="837" width="0.2869%" height="15" fill="rgb(242,119,39)"/><text x="28.5140%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.29%)</title><rect x="28.2640%" y="821" width="0.2869%" height="15" fill="rgb(241,98,45)"/><text x="28.5140%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="28.4075%" y="805" width="0.1435%" height="15" fill="rgb(254,28,30)"/><text x="28.6575%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.14%)</title><rect x="28.4075%" y="789" width="0.1435%" height="15" fill="rgb(241,142,54)"/><text x="28.6575%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.14%)</title><rect x="28.4075%" y="773" width="0.1435%" height="15" fill="rgb(222,85,15)"/><text x="28.6575%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="28.4075%" y="757" width="0.1435%" height="15" fill="rgb(210,85,47)"/><text x="28.6575%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.14%)</title><rect x="28.4075%" y="741" width="0.1435%" height="15" fill="rgb(224,206,25)"/><text x="28.6575%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="28.4075%" y="725" width="0.1435%" height="15" fill="rgb(243,201,19)"/><text x="28.6575%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="28.4075%" y="709" width="0.1435%" height="15" fill="rgb(236,59,4)"/><text x="28.6575%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="28.4075%" y="693" width="0.1435%" height="15" fill="rgb(254,179,45)"/><text x="28.6575%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.14%)</title><rect x="28.4075%" y="677" width="0.1435%" height="15" fill="rgb(226,14,10)"/><text x="28.6575%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.14%)</title><rect x="28.4075%" y="661" width="0.1435%" height="15" fill="rgb(244,27,41)"/><text x="28.6575%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.14%)</title><rect x="28.4075%" y="645" width="0.1435%" height="15" fill="rgb(235,35,32)"/><text x="28.6575%" y="655.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="28.4075%" y="629" width="0.1435%" height="15" fill="rgb(218,68,31)"/><text x="28.6575%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="28.4075%" y="613" width="0.1435%" height="15" fill="rgb(207,120,37)"/><text x="28.6575%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="28.4075%" y="597" width="0.1435%" height="15" fill="rgb(227,98,0)"/><text x="28.6575%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.14%)</title><rect x="28.4075%" y="581" width="0.1435%" height="15" fill="rgb(207,7,3)"/><text x="28.6575%" y="591.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="28.4075%" y="565" width="0.1435%" height="15" fill="rgb(206,98,19)"/><text x="28.6575%" y="575.50"></text></g><g><title>inet_recvmsg (1 samples, 0.14%)</title><rect x="28.4075%" y="549" width="0.1435%" height="15" fill="rgb(217,5,26)"/><text x="28.6575%" y="559.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.14%)</title><rect x="28.4075%" y="533" width="0.1435%" height="15" fill="rgb(235,190,38)"/><text x="28.6575%" y="543.50"></text></g><g><title>sk_wait_data (1 samples, 0.14%)</title><rect x="28.4075%" y="517" width="0.1435%" height="15" fill="rgb(247,86,24)"/><text x="28.6575%" y="527.50"></text></g><g><title>remove_wait_queue (1 samples, 0.14%)</title><rect x="28.4075%" y="501" width="0.1435%" height="15" fill="rgb(205,101,16)"/><text x="28.6575%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="28.4075%" y="485" width="0.1435%" height="15" fill="rgb(246,168,33)"/><text x="28.6575%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.14%)</title><rect x="28.5509%" y="869" width="0.1435%" height="15" fill="rgb(231,114,1)"/><text x="28.8009%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.14%)</title><rect x="28.6944%" y="869" width="0.1435%" height="15" fill="rgb(207,184,53)"/><text x="28.9444%" y="879.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.14%)</title><rect x="28.8379%" y="869" width="0.1435%" height="15" fill="rgb(224,95,51)"/><text x="29.0879%" y="879.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.14%)</title><rect x="28.8379%" y="853" width="0.1435%" height="15" fill="rgb(212,188,45)"/><text x="29.0879%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.14%)</title><rect x="28.8379%" y="837" width="0.1435%" height="15" fill="rgb(223,154,38)"/><text x="29.0879%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="28.8379%" y="821" width="0.1435%" height="15" fill="rgb(251,22,52)"/><text x="29.0879%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.14%)</title><rect x="28.9813%" y="869" width="0.1435%" height="15" fill="rgb(229,209,22)"/><text x="29.2313%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (1 samples, 0.14%)</title><rect x="28.9813%" y="853" width="0.1435%" height="15" fill="rgb(234,138,34)"/><text x="29.2313%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.14%)</title><rect x="28.9813%" y="837" width="0.1435%" height="15" fill="rgb(212,95,11)"/><text x="29.2313%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.14%)</title><rect x="28.9813%" y="821" width="0.1435%" height="15" fill="rgb(240,179,47)"/><text x="29.2313%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::get_next_precedence (1 samples, 0.14%)</title><rect x="28.9813%" y="805" width="0.1435%" height="15" fill="rgb(240,163,11)"/><text x="29.2313%" y="815.50"></text></g><g><title>start_thread (2 samples, 0.29%)</title><rect x="29.1248%" y="869" width="0.2869%" height="15" fill="rgb(236,37,12)"/><text x="29.3748%" y="879.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.29%)</title><rect x="29.1248%" y="853" width="0.2869%" height="15" fill="rgb(232,164,16)"/><text x="29.3748%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.29%)</title><rect x="29.1248%" y="837" width="0.2869%" height="15" fill="rgb(244,205,15)"/><text x="29.3748%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.29%)</title><rect x="29.1248%" y="821" width="0.2869%" height="15" fill="rgb(223,117,47)"/><text x="29.3748%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.29%)</title><rect x="29.1248%" y="805" width="0.2869%" height="15" fill="rgb(244,107,35)"/><text x="29.3748%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.29%)</title><rect x="29.1248%" y="789" width="0.2869%" height="15" fill="rgb(205,140,8)"/><text x="29.3748%" y="799.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.29%)</title><rect x="29.1248%" y="773" width="0.2869%" height="15" fill="rgb(228,84,46)"/><text x="29.3748%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.29%)</title><rect x="29.1248%" y="757" width="0.2869%" height="15" fill="rgb(254,188,9)"/><text x="29.3748%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.29%)</title><rect x="29.1248%" y="741" width="0.2869%" height="15" fill="rgb(206,112,54)"/><text x="29.3748%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.29%)</title><rect x="29.1248%" y="725" width="0.2869%" height="15" fill="rgb(216,84,49)"/><text x="29.3748%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.29%)</title><rect x="29.1248%" y="709" width="0.2869%" height="15" fill="rgb(214,194,35)"/><text x="29.3748%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.29%)</title><rect x="29.1248%" y="693" width="0.2869%" height="15" fill="rgb(249,28,3)"/><text x="29.3748%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.29%)</title><rect x="29.1248%" y="677" width="0.2869%" height="15" fill="rgb(222,56,52)"/><text x="29.3748%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.29%)</title><rect x="29.1248%" y="661" width="0.2869%" height="15" fill="rgb(245,217,50)"/><text x="29.3748%" y="671.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.29%)</title><rect x="29.1248%" y="645" width="0.2869%" height="15" fill="rgb(213,201,24)"/><text x="29.3748%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.29%)</title><rect x="29.1248%" y="629" width="0.2869%" height="15" fill="rgb(248,116,28)"/><text x="29.3748%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.29%)</title><rect x="29.1248%" y="613" width="0.2869%" height="15" fill="rgb(219,72,43)"/><text x="29.3748%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="29.2683%" y="597" width="0.1435%" height="15" fill="rgb(209,138,14)"/><text x="29.5183%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="29.4118%" y="869" width="0.1435%" height="15" fill="rgb(222,18,33)"/><text x="29.6618%" y="879.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="29.5552%" y="869" width="0.1435%" height="15" fill="rgb(213,199,7)"/><text x="29.8052%" y="879.50"></text></g><g><title>inode_permission.part.0 (1 samples, 0.14%)</title><rect x="29.6987%" y="533" width="0.1435%" height="15" fill="rgb(250,110,10)"/><text x="29.9487%" y="543.50"></text></g><g><title>kernfs_iop_permission (1 samples, 0.14%)</title><rect x="29.6987%" y="517" width="0.1435%" height="15" fill="rgb(248,123,6)"/><text x="29.9487%" y="527.50"></text></g><g><title>mutex_unlock (1 samples, 0.14%)</title><rect x="29.6987%" y="501" width="0.1435%" height="15" fill="rgb(206,91,31)"/><text x="29.9487%" y="511.50"></text></g><g><title>handle_dots (1 samples, 0.14%)</title><rect x="29.8422%" y="517" width="0.1435%" height="15" fill="rgb(211,154,13)"/><text x="30.0922%" y="527.50"></text></g><g><title>step_into (1 samples, 0.14%)</title><rect x="29.8422%" y="501" width="0.1435%" height="15" fill="rgb(225,148,7)"/><text x="30.0922%" y="511.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.43%)</title><rect x="29.6987%" y="741" width="0.4304%" height="15" fill="rgb(220,160,43)"/><text x="29.9487%" y="751.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.43%)</title><rect x="29.6987%" y="725" width="0.4304%" height="15" fill="rgb(213,52,39)"/><text x="29.9487%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.43%)</title><rect x="29.6987%" y="709" width="0.4304%" height="15" fill="rgb(243,137,7)"/><text x="29.9487%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.43%)</title><rect x="29.6987%" y="693" width="0.4304%" height="15" fill="rgb(230,79,13)"/><text x="29.9487%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.43%)</title><rect x="29.6987%" y="677" width="0.4304%" height="15" fill="rgb(247,105,23)"/><text x="29.9487%" y="687.50"></text></g><g><title>__GI___openat (3 samples, 0.43%)</title><rect x="29.6987%" y="661" width="0.4304%" height="15" fill="rgb(223,179,41)"/><text x="29.9487%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.43%)</title><rect x="29.6987%" y="645" width="0.4304%" height="15" fill="rgb(218,9,34)"/><text x="29.9487%" y="655.50"></text></g><g><title>do_syscall_64 (3 samples, 0.43%)</title><rect x="29.6987%" y="629" width="0.4304%" height="15" fill="rgb(222,106,8)"/><text x="29.9487%" y="639.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.43%)</title><rect x="29.6987%" y="613" width="0.4304%" height="15" fill="rgb(211,220,0)"/><text x="29.9487%" y="623.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.43%)</title><rect x="29.6987%" y="597" width="0.4304%" height="15" fill="rgb(229,52,16)"/><text x="29.9487%" y="607.50"></text></g><g><title>do_filp_open (3 samples, 0.43%)</title><rect x="29.6987%" y="581" width="0.4304%" height="15" fill="rgb(212,155,18)"/><text x="29.9487%" y="591.50"></text></g><g><title>path_openat (3 samples, 0.43%)</title><rect x="29.6987%" y="565" width="0.4304%" height="15" fill="rgb(242,21,14)"/><text x="29.9487%" y="575.50"></text></g><g><title>link_path_walk (3 samples, 0.43%)</title><rect x="29.6987%" y="549" width="0.4304%" height="15" fill="rgb(222,19,48)"/><text x="29.9487%" y="559.50"></text></g><g><title>walk_component (2 samples, 0.29%)</title><rect x="29.8422%" y="533" width="0.2869%" height="15" fill="rgb(232,45,27)"/><text x="30.0922%" y="543.50"></text></g><g><title>step_into (1 samples, 0.14%)</title><rect x="29.9857%" y="517" width="0.1435%" height="15" fill="rgb(249,103,42)"/><text x="30.2357%" y="527.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.29%)</title><rect x="30.1291%" y="709" width="0.2869%" height="15" fill="rgb(246,81,33)"/><text x="30.3791%" y="719.50"></text></g><g><title>[unknown] (206 samples, 29.56%)</title><rect x="1.0043%" y="885" width="29.5552%" height="15" fill="rgb(252,33,42)"/><text x="1.2543%" y="895.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (6 samples, 0.86%)</title><rect x="29.6987%" y="869" width="0.8608%" height="15" fill="rgb(209,212,41)"/><text x="29.9487%" y="879.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.86%)</title><rect x="29.6987%" y="853" width="0.8608%" height="15" fill="rgb(207,154,6)"/><text x="29.9487%" y="863.50"></text></g><g><title>std::panicking::try (6 samples, 0.86%)</title><rect x="29.6987%" y="837" width="0.8608%" height="15" fill="rgb(223,64,47)"/><text x="29.9487%" y="847.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.86%)</title><rect x="29.6987%" y="821" width="0.8608%" height="15" fill="rgb(211,161,38)"/><text x="29.9487%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.86%)</title><rect x="29.6987%" y="805" width="0.8608%" height="15" fill="rgb(219,138,40)"/><text x="29.9487%" y="815.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.86%)</title><rect x="29.6987%" y="789" width="0.8608%" height="15" fill="rgb(241,228,46)"/><text x="29.9487%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.86%)</title><rect x="29.6987%" y="773" width="0.8608%" height="15" fill="rgb(223,209,38)"/><text x="29.9487%" y="783.50"></text></g><g><title>lobsters::main (6 samples, 0.86%)</title><rect x="29.6987%" y="757" width="0.8608%" height="15" fill="rgb(236,164,45)"/><text x="29.9487%" y="767.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.43%)</title><rect x="30.1291%" y="741" width="0.4304%" height="15" fill="rgb(231,15,5)"/><text x="30.3791%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.43%)</title><rect x="30.1291%" y="725" width="0.4304%" height="15" fill="rgb(252,35,15)"/><text x="30.3791%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="30.4161%" y="709" width="0.1435%" height="15" fill="rgb(248,181,18)"/><text x="30.6661%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.14%)</title><rect x="30.4161%" y="693" width="0.1435%" height="15" fill="rgb(233,39,42)"/><text x="30.6661%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.14%)</title><rect x="30.4161%" y="677" width="0.1435%" height="15" fill="rgb(238,110,33)"/><text x="30.6661%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="30.4161%" y="661" width="0.1435%" height="15" fill="rgb(233,195,10)"/><text x="30.6661%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.14%)</title><rect x="30.5595%" y="741" width="0.1435%" height="15" fill="rgb(254,105,3)"/><text x="30.8095%" y="751.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.14%)</title><rect x="30.5595%" y="725" width="0.1435%" height="15" fill="rgb(221,225,9)"/><text x="30.8095%" y="735.50"></text></g><g><title>decor::helpers::process_schema_stmt (1 samples, 0.14%)</title><rect x="30.5595%" y="709" width="0.1435%" height="15" fill="rgb(224,227,45)"/><text x="30.8095%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.14%)</title><rect x="30.5595%" y="693" width="0.1435%" height="15" fill="rgb(229,198,43)"/><text x="30.8095%" y="703.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.14%)</title><rect x="30.5595%" y="677" width="0.1435%" height="15" fill="rgb(206,209,35)"/><text x="30.8095%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.14%)</title><rect x="30.5595%" y="661" width="0.1435%" height="15" fill="rgb(245,195,53)"/><text x="30.8095%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="30.9900%" y="709" width="0.1435%" height="15" fill="rgb(240,92,26)"/><text x="31.2400%" y="719.50"></text></g><g><title>decor::helpers::answer_rows (3 samples, 0.43%)</title><rect x="30.8465%" y="725" width="0.4304%" height="15" fill="rgb(207,40,23)"/><text x="31.0965%" y="735.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (1 samples, 0.14%)</title><rect x="31.1334%" y="709" width="0.1435%" height="15" fill="rgb(223,111,35)"/><text x="31.3834%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.14%)</title><rect x="31.7073%" y="693" width="0.1435%" height="15" fill="rgb(229,147,28)"/><text x="31.9573%" y="703.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.14%)</title><rect x="31.7073%" y="677" width="0.1435%" height="15" fill="rgb(211,29,28)"/><text x="31.9573%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="31.7073%" y="661" width="0.1435%" height="15" fill="rgb(228,72,33)"/><text x="31.9573%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="31.7073%" y="645" width="0.1435%" height="15" fill="rgb(205,214,31)"/><text x="31.9573%" y="655.50"></text></g><g><title>skb_release_data (1 samples, 0.14%)</title><rect x="32.7116%" y="453" width="0.1435%" height="15" fill="rgb(224,111,15)"/><text x="32.9616%" y="463.50"></text></g><g><title>__kfree_skb (2 samples, 0.29%)</title><rect x="32.7116%" y="469" width="0.2869%" height="15" fill="rgb(253,21,26)"/><text x="32.9616%" y="479.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="32.8551%" y="453" width="0.1435%" height="15" fill="rgb(245,139,43)"/><text x="33.1051%" y="463.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="32.8551%" y="437" width="0.1435%" height="15" fill="rgb(252,170,7)"/><text x="33.1051%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.29%)</title><rect x="32.9986%" y="453" width="0.2869%" height="15" fill="rgb(231,118,14)"/><text x="33.2486%" y="463.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="33.2855%" y="453" width="0.1435%" height="15" fill="rgb(238,83,0)"/><text x="33.5355%" y="463.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="33.2855%" y="437" width="0.1435%" height="15" fill="rgb(221,39,39)"/><text x="33.5355%" y="447.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.29%)</title><rect x="33.4290%" y="389" width="0.2869%" height="15" fill="rgb(222,119,46)"/><text x="33.6790%" y="399.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.14%)</title><rect x="33.7159%" y="341" width="0.1435%" height="15" fill="rgb(222,165,49)"/><text x="33.9659%" y="351.50"></text></g><g><title>update_curr (2 samples, 0.29%)</title><rect x="33.7159%" y="357" width="0.2869%" height="15" fill="rgb(219,113,52)"/><text x="33.9659%" y="367.50"></text></g><g><title>update_min_vruntime (1 samples, 0.14%)</title><rect x="33.8594%" y="341" width="0.1435%" height="15" fill="rgb(214,7,15)"/><text x="34.1094%" y="351.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.57%)</title><rect x="33.7159%" y="389" width="0.5739%" height="15" fill="rgb(235,32,4)"/><text x="33.9659%" y="399.50"></text></g><g><title>dequeue_entity (4 samples, 0.57%)</title><rect x="33.7159%" y="373" width="0.5739%" height="15" fill="rgb(238,90,54)"/><text x="33.9659%" y="383.50"></text></g><g><title>update_load_avg (2 samples, 0.29%)</title><rect x="34.0029%" y="357" width="0.2869%" height="15" fill="rgb(213,208,19)"/><text x="34.2529%" y="367.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="34.1463%" y="341" width="0.1435%" height="15" fill="rgb(233,156,4)"/><text x="34.3963%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.14%)</title><rect x="34.2898%" y="357" width="0.1435%" height="15" fill="rgb(207,194,5)"/><text x="34.5398%" y="367.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="34.2898%" y="341" width="0.1435%" height="15" fill="rgb(206,111,30)"/><text x="34.5398%" y="351.50"></text></g><g><title>finish_task_switch (2 samples, 0.29%)</title><rect x="34.2898%" y="389" width="0.2869%" height="15" fill="rgb(243,70,54)"/><text x="34.5398%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.29%)</title><rect x="34.2898%" y="373" width="0.2869%" height="15" fill="rgb(242,28,8)"/><text x="34.5398%" y="383.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="34.4333%" y="357" width="0.1435%" height="15" fill="rgb(219,106,18)"/><text x="34.6833%" y="367.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="34.4333%" y="341" width="0.1435%" height="15" fill="rgb(244,222,10)"/><text x="34.6833%" y="351.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.14%)</title><rect x="34.5768%" y="389" width="0.1435%" height="15" fill="rgb(236,179,52)"/><text x="34.8268%" y="399.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="34.5768%" y="373" width="0.1435%" height="15" fill="rgb(213,23,39)"/><text x="34.8268%" y="383.50"></text></g><g><title>sk_wait_data (15 samples, 2.15%)</title><rect x="32.9986%" y="469" width="2.1521%" height="15" fill="rgb(238,48,10)"/><text x="33.2486%" y="479.50">s..</text></g><g><title>wait_woken (12 samples, 1.72%)</title><rect x="33.4290%" y="453" width="1.7217%" height="15" fill="rgb(251,196,23)"/><text x="33.6790%" y="463.50"></text></g><g><title>schedule_timeout (12 samples, 1.72%)</title><rect x="33.4290%" y="437" width="1.7217%" height="15" fill="rgb(250,152,24)"/><text x="33.6790%" y="447.50"></text></g><g><title>schedule (12 samples, 1.72%)</title><rect x="33.4290%" y="421" width="1.7217%" height="15" fill="rgb(209,150,17)"/><text x="33.6790%" y="431.50"></text></g><g><title>__schedule (12 samples, 1.72%)</title><rect x="33.4290%" y="405" width="1.7217%" height="15" fill="rgb(234,202,34)"/><text x="33.6790%" y="415.50"></text></g><g><title>psi_task_change (3 samples, 0.43%)</title><rect x="34.7202%" y="389" width="0.4304%" height="15" fill="rgb(253,148,53)"/><text x="34.9702%" y="399.50"></text></g><g><title>psi_group_change (3 samples, 0.43%)</title><rect x="34.7202%" y="373" width="0.4304%" height="15" fill="rgb(218,129,16)"/><text x="34.9702%" y="383.50"></text></g><g><title>record_times (2 samples, 0.29%)</title><rect x="34.8637%" y="357" width="0.2869%" height="15" fill="rgb(216,85,19)"/><text x="35.1137%" y="367.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.29%)</title><rect x="34.8637%" y="341" width="0.2869%" height="15" fill="rgb(235,228,7)"/><text x="35.1137%" y="351.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="35.0072%" y="325" width="0.1435%" height="15" fill="rgb(245,175,0)"/><text x="35.2572%" y="335.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="35.0072%" y="309" width="0.1435%" height="15" fill="rgb(208,168,36)"/><text x="35.2572%" y="319.50"></text></g><g><title>__x64_sys_recvfrom (22 samples, 3.16%)</title><rect x="32.4247%" y="533" width="3.1564%" height="15" fill="rgb(246,171,24)"/><text x="32.6747%" y="543.50">__x..</text></g><g><title>__sys_recvfrom (22 samples, 3.16%)</title><rect x="32.4247%" y="517" width="3.1564%" height="15" fill="rgb(215,142,24)"/><text x="32.6747%" y="527.50">__s..</text></g><g><title>inet_recvmsg (22 samples, 3.16%)</title><rect x="32.4247%" y="501" width="3.1564%" height="15" fill="rgb(250,187,7)"/><text x="32.6747%" y="511.50">ine..</text></g><g><title>tcp_recvmsg (22 samples, 3.16%)</title><rect x="32.4247%" y="485" width="3.1564%" height="15" fill="rgb(228,66,33)"/><text x="32.6747%" y="495.50">tcp..</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.43%)</title><rect x="35.1506%" y="469" width="0.4304%" height="15" fill="rgb(234,215,21)"/><text x="35.4006%" y="479.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.43%)</title><rect x="35.1506%" y="453" width="0.4304%" height="15" fill="rgb(222,191,20)"/><text x="35.4006%" y="463.50"></text></g><g><title>_copy_to_iter (2 samples, 0.29%)</title><rect x="35.2941%" y="437" width="0.2869%" height="15" fill="rgb(245,79,54)"/><text x="35.5441%" y="447.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.14%)</title><rect x="35.4376%" y="421" width="0.1435%" height="15" fill="rgb(240,10,37)"/><text x="35.6876%" y="431.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="35.5811%" y="533" width="0.1435%" height="15" fill="rgb(214,192,32)"/><text x="35.8311%" y="543.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="35.5811%" y="517" width="0.1435%" height="15" fill="rgb(209,36,54)"/><text x="35.8311%" y="527.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.14%)</title><rect x="35.5811%" y="501" width="0.1435%" height="15" fill="rgb(220,10,11)"/><text x="35.8311%" y="511.50"></text></g><g><title>do_syscall_64 (25 samples, 3.59%)</title><rect x="32.2812%" y="549" width="3.5868%" height="15" fill="rgb(221,106,17)"/><text x="32.5312%" y="559.50">do_s..</text></g><g><title>syscall_trace_enter (1 samples, 0.14%)</title><rect x="35.7245%" y="533" width="0.1435%" height="15" fill="rgb(251,142,44)"/><text x="35.9745%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (32 samples, 4.59%)</title><rect x="31.9943%" y="565" width="4.5911%" height="15" fill="rgb(238,13,15)"/><text x="32.2443%" y="575.50">entry..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.72%)</title><rect x="35.8680%" y="549" width="0.7174%" height="15" fill="rgb(208,107,27)"/><text x="36.1180%" y="559.50"></text></g><g><title>switch_fpu_return (1 samples, 0.14%)</title><rect x="36.4419%" y="533" width="0.1435%" height="15" fill="rgb(205,136,37)"/><text x="36.6919%" y="543.50"></text></g><g><title>mysql::conn::Conn::read_packet (34 samples, 4.88%)</title><rect x="31.8508%" y="693" width="4.8780%" height="15" fill="rgb(250,205,27)"/><text x="32.1008%" y="703.50">mysql:..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 4.88%)</title><rect x="31.8508%" y="677" width="4.8780%" height="15" fill="rgb(210,80,43)"/><text x="32.1008%" y="687.50">&lt;mysql..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 4.88%)</title><rect x="31.8508%" y="661" width="4.8780%" height="15" fill="rgb(247,160,36)"/><text x="32.1008%" y="671.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (33 samples, 4.73%)</title><rect x="31.9943%" y="645" width="4.7346%" height="15" fill="rgb(234,13,49)"/><text x="32.2443%" y="655.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (33 samples, 4.73%)</title><rect x="31.9943%" y="629" width="4.7346%" height="15" fill="rgb(234,122,0)"/><text x="32.2443%" y="639.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (33 samples, 4.73%)</title><rect x="31.9943%" y="613" width="4.7346%" height="15" fill="rgb(207,146,38)"/><text x="32.2443%" y="623.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (33 samples, 4.73%)</title><rect x="31.9943%" y="597" width="4.7346%" height="15" fill="rgb(207,177,25)"/><text x="32.2443%" y="607.50">std::s..</text></g><g><title>__libc_recv (33 samples, 4.73%)</title><rect x="31.9943%" y="581" width="4.7346%" height="15" fill="rgb(211,178,42)"/><text x="32.2443%" y="591.50">__libc..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="36.5854%" y="565" width="0.1435%" height="15" fill="rgb(230,69,54)"/><text x="36.8354%" y="575.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (39 samples, 5.60%)</title><rect x="31.2769%" y="709" width="5.5954%" height="15" fill="rgb(214,135,41)"/><text x="31.5269%" y="719.50">mysql::..</text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.14%)</title><rect x="36.7288%" y="693" width="0.1435%" height="15" fill="rgb(237,67,25)"/><text x="36.9788%" y="703.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.14%)</title><rect x="36.7288%" y="677" width="0.1435%" height="15" fill="rgb(222,189,50)"/><text x="36.9788%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.29%)</title><rect x="37.0158%" y="693" width="0.2869%" height="15" fill="rgb(245,148,34)"/><text x="37.2658%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.29%)</title><rect x="37.0158%" y="677" width="0.2869%" height="15" fill="rgb(222,29,6)"/><text x="37.2658%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.29%)</title><rect x="37.0158%" y="661" width="0.2869%" height="15" fill="rgb(221,189,43)"/><text x="37.2658%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.29%)</title><rect x="37.0158%" y="645" width="0.2869%" height="15" fill="rgb(207,36,27)"/><text x="37.2658%" y="655.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="37.1593%" y="629" width="0.1435%" height="15" fill="rgb(217,90,24)"/><text x="37.4093%" y="639.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="37.1593%" y="613" width="0.1435%" height="15" fill="rgb(224,66,35)"/><text x="37.4093%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.14%)</title><rect x="37.3027%" y="693" width="0.1435%" height="15" fill="rgb(221,13,50)"/><text x="37.5527%" y="703.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="37.4462%" y="629" width="0.1435%" height="15" fill="rgb(236,68,49)"/><text x="37.6962%" y="639.50"></text></g><g><title>fput (1 samples, 0.14%)</title><rect x="37.7331%" y="565" width="0.1435%" height="15" fill="rgb(229,146,28)"/><text x="37.9831%" y="575.50"></text></g><g><title>release_sock (2 samples, 0.29%)</title><rect x="37.8766%" y="533" width="0.2869%" height="15" fill="rgb(225,31,38)"/><text x="38.1266%" y="543.50"></text></g><g><title>tcp_release_cb (1 samples, 0.14%)</title><rect x="38.0201%" y="517" width="0.1435%" height="15" fill="rgb(250,208,3)"/><text x="38.2701%" y="527.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="38.8809%" y="453" width="0.1435%" height="15" fill="rgb(246,54,23)"/><text x="39.1309%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.29%)</title><rect x="39.1679%" y="405" width="0.2869%" height="15" fill="rgb(243,76,11)"/><text x="39.4179%" y="415.50"></text></g><g><title>loopback_xmit (2 samples, 0.29%)</title><rect x="39.1679%" y="389" width="0.2869%" height="15" fill="rgb(245,21,50)"/><text x="39.4179%" y="399.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="39.3113%" y="373" width="0.1435%" height="15" fill="rgb(228,9,43)"/><text x="39.5613%" y="383.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.43%)</title><rect x="39.1679%" y="421" width="0.4304%" height="15" fill="rgb(208,100,47)"/><text x="39.4179%" y="431.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="39.4548%" y="405" width="0.1435%" height="15" fill="rgb(232,26,8)"/><text x="39.7048%" y="415.50"></text></g><g><title>__kfree_skb_flush (1 samples, 0.14%)</title><rect x="39.7418%" y="341" width="0.1435%" height="15" fill="rgb(216,166,38)"/><text x="39.9918%" y="351.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="39.7418%" y="325" width="0.1435%" height="15" fill="rgb(251,202,51)"/><text x="39.9918%" y="335.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="40.3156%" y="197" width="0.1435%" height="15" fill="rgb(254,216,34)"/><text x="40.5656%" y="207.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="40.3156%" y="181" width="0.1435%" height="15" fill="rgb(251,32,27)"/><text x="40.5656%" y="191.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="40.6026%" y="117" width="0.1435%" height="15" fill="rgb(208,127,28)"/><text x="40.8526%" y="127.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="40.6026%" y="101" width="0.1435%" height="15" fill="rgb(224,137,22)"/><text x="40.8526%" y="111.50"></text></g><g><title>psi_flags_change (1 samples, 0.14%)</title><rect x="40.7461%" y="85" width="0.1435%" height="15" fill="rgb(254,70,32)"/><text x="40.9961%" y="95.50"></text></g><g><title>enqueue_task (3 samples, 0.43%)</title><rect x="40.7461%" y="117" width="0.4304%" height="15" fill="rgb(229,75,37)"/><text x="40.9961%" y="127.50"></text></g><g><title>psi_task_change (3 samples, 0.43%)</title><rect x="40.7461%" y="101" width="0.4304%" height="15" fill="rgb(252,64,23)"/><text x="40.9961%" y="111.50"></text></g><g><title>psi_group_change (2 samples, 0.29%)</title><rect x="40.8895%" y="85" width="0.2869%" height="15" fill="rgb(232,162,48)"/><text x="41.1395%" y="95.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="41.0330%" y="69" width="0.1435%" height="15" fill="rgb(246,160,12)"/><text x="41.2830%" y="79.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="41.0330%" y="53" width="0.1435%" height="15" fill="rgb(247,166,0)"/><text x="41.2830%" y="63.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.14%)</title><rect x="41.1765%" y="117" width="0.1435%" height="15" fill="rgb(249,219,21)"/><text x="41.4265%" y="127.50"></text></g><g><title>sock_def_readable (9 samples, 1.29%)</title><rect x="40.4591%" y="197" width="1.2912%" height="15" fill="rgb(205,209,3)"/><text x="40.7091%" y="207.50"></text></g><g><title>__wake_up_common_lock (9 samples, 1.29%)</title><rect x="40.4591%" y="181" width="1.2912%" height="15" fill="rgb(243,44,1)"/><text x="40.7091%" y="191.50"></text></g><g><title>__wake_up_common (9 samples, 1.29%)</title><rect x="40.4591%" y="165" width="1.2912%" height="15" fill="rgb(206,159,16)"/><text x="40.7091%" y="175.50"></text></g><g><title>pollwake (9 samples, 1.29%)</title><rect x="40.4591%" y="149" width="1.2912%" height="15" fill="rgb(244,77,30)"/><text x="40.7091%" y="159.50"></text></g><g><title>try_to_wake_up (8 samples, 1.15%)</title><rect x="40.6026%" y="133" width="1.1478%" height="15" fill="rgb(218,69,12)"/><text x="40.8526%" y="143.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.43%)</title><rect x="41.3199%" y="117" width="0.4304%" height="15" fill="rgb(212,87,7)"/><text x="41.5699%" y="127.50"></text></g><g><title>available_idle_cpu (1 samples, 0.14%)</title><rect x="41.6069%" y="101" width="0.1435%" height="15" fill="rgb(245,114,25)"/><text x="41.8569%" y="111.50"></text></g><g><title>kfree (1 samples, 0.14%)</title><rect x="41.8938%" y="165" width="0.1435%" height="15" fill="rgb(210,61,42)"/><text x="42.1438%" y="175.50"></text></g><g><title>__slab_free (1 samples, 0.14%)</title><rect x="41.8938%" y="149" width="0.1435%" height="15" fill="rgb(211,52,33)"/><text x="42.1438%" y="159.50"></text></g><g><title>__kfree_skb (3 samples, 0.43%)</title><rect x="41.8938%" y="181" width="0.4304%" height="15" fill="rgb(234,58,33)"/><text x="42.1438%" y="191.50"></text></g><g><title>skb_release_data (2 samples, 0.29%)</title><rect x="42.0373%" y="165" width="0.2869%" height="15" fill="rgb(220,115,36)"/><text x="42.2873%" y="175.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="42.3242%" y="181" width="0.1435%" height="15" fill="rgb(243,153,54)"/><text x="42.5742%" y="191.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.29%)</title><rect x="42.4677%" y="181" width="0.2869%" height="15" fill="rgb(251,47,18)"/><text x="42.7177%" y="191.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.14%)</title><rect x="42.7547%" y="181" width="0.1435%" height="15" fill="rgb(242,102,42)"/><text x="43.0047%" y="191.50"></text></g><g><title>tcp_ack (9 samples, 1.29%)</title><rect x="41.7504%" y="197" width="1.2912%" height="15" fill="rgb(234,31,38)"/><text x="42.0004%" y="207.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.14%)</title><rect x="42.8981%" y="181" width="0.1435%" height="15" fill="rgb(221,117,51)"/><text x="43.1481%" y="191.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="43.0416%" y="197" width="0.1435%" height="15" fill="rgb(212,20,18)"/><text x="43.2916%" y="207.50"></text></g><g><title>ktime_get (1 samples, 0.14%)</title><rect x="43.0416%" y="181" width="0.1435%" height="15" fill="rgb(245,133,36)"/><text x="43.2916%" y="191.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.14%)</title><rect x="43.1851%" y="197" width="0.1435%" height="15" fill="rgb(212,6,19)"/><text x="43.4351%" y="207.50"></text></g><g><title>ip_local_deliver (25 samples, 3.59%)</title><rect x="40.0287%" y="293" width="3.5868%" height="15" fill="rgb(218,1,36)"/><text x="40.2787%" y="303.50">ip_l..</text></g><g><title>ip_local_deliver_finish (25 samples, 3.59%)</title><rect x="40.0287%" y="277" width="3.5868%" height="15" fill="rgb(246,84,54)"/><text x="40.2787%" y="287.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (25 samples, 3.59%)</title><rect x="40.0287%" y="261" width="3.5868%" height="15" fill="rgb(242,110,6)"/><text x="40.2787%" y="271.50">ip_p..</text></g><g><title>tcp_v4_rcv (25 samples, 3.59%)</title><rect x="40.0287%" y="245" width="3.5868%" height="15" fill="rgb(214,47,5)"/><text x="40.2787%" y="255.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (23 samples, 3.30%)</title><rect x="40.3156%" y="229" width="3.2999%" height="15" fill="rgb(218,159,25)"/><text x="40.5656%" y="239.50">tcp..</text></g><g><title>tcp_rcv_established (23 samples, 3.30%)</title><rect x="40.3156%" y="213" width="3.2999%" height="15" fill="rgb(215,211,28)"/><text x="40.5656%" y="223.50">tcp..</text></g><g><title>tcp_send_delayed_ack (2 samples, 0.29%)</title><rect x="43.3286%" y="197" width="0.2869%" height="15" fill="rgb(238,59,32)"/><text x="43.5786%" y="207.50"></text></g><g><title>do_softirq (29 samples, 4.16%)</title><rect x="39.5983%" y="405" width="4.1607%" height="15" fill="rgb(226,82,3)"/><text x="39.8483%" y="415.50">do_so..</text></g><g><title>do_softirq_own_stack (28 samples, 4.02%)</title><rect x="39.7418%" y="389" width="4.0172%" height="15" fill="rgb(240,164,32)"/><text x="39.9918%" y="399.50">do_s..</text></g><g><title>__do_softirq (28 samples, 4.02%)</title><rect x="39.7418%" y="373" width="4.0172%" height="15" fill="rgb(232,46,7)"/><text x="39.9918%" y="383.50">__do..</text></g><g><title>net_rx_action (28 samples, 4.02%)</title><rect x="39.7418%" y="357" width="4.0172%" height="15" fill="rgb(229,129,53)"/><text x="39.9918%" y="367.50">net_..</text></g><g><title>process_backlog (27 samples, 3.87%)</title><rect x="39.8852%" y="341" width="3.8737%" height="15" fill="rgb(234,188,29)"/><text x="40.1352%" y="351.50">proc..</text></g><g><title>__netif_receive_skb_one_core (27 samples, 3.87%)</title><rect x="39.8852%" y="325" width="3.8737%" height="15" fill="rgb(246,141,4)"/><text x="40.1352%" y="335.50">__ne..</text></g><g><title>ip_rcv (27 samples, 3.87%)</title><rect x="39.8852%" y="309" width="3.8737%" height="15" fill="rgb(229,23,39)"/><text x="40.1352%" y="319.50">ip_r..</text></g><g><title>ip_rcv_core (1 samples, 0.14%)</title><rect x="43.6155%" y="293" width="0.1435%" height="15" fill="rgb(206,12,3)"/><text x="43.8655%" y="303.50"></text></g><g><title>__ip_queue_xmit (35 samples, 5.02%)</title><rect x="38.8809%" y="469" width="5.0215%" height="15" fill="rgb(252,226,20)"/><text x="39.1309%" y="479.50">__ip_q..</text></g><g><title>ip_output (34 samples, 4.88%)</title><rect x="39.0244%" y="453" width="4.8780%" height="15" fill="rgb(216,123,35)"/><text x="39.2744%" y="463.50">ip_out..</text></g><g><title>ip_finish_output2 (34 samples, 4.88%)</title><rect x="39.0244%" y="437" width="4.8780%" height="15" fill="rgb(212,68,40)"/><text x="39.2744%" y="447.50">ip_fin..</text></g><g><title>__local_bh_enable_ip (30 samples, 4.30%)</title><rect x="39.5983%" y="421" width="4.3042%" height="15" fill="rgb(254,125,32)"/><text x="39.8483%" y="431.50">__loc..</text></g><g><title>preempt_schedule_thunk (1 samples, 0.14%)</title><rect x="43.7590%" y="405" width="0.1435%" height="15" fill="rgb(253,97,22)"/><text x="44.0090%" y="415.50"></text></g><g><title>preempt_schedule (1 samples, 0.14%)</title><rect x="43.7590%" y="389" width="0.1435%" height="15" fill="rgb(241,101,14)"/><text x="44.0090%" y="399.50"></text></g><g><title>__tcp_transmit_skb (37 samples, 5.31%)</title><rect x="38.7374%" y="485" width="5.3085%" height="15" fill="rgb(238,103,29)"/><text x="38.9874%" y="495.50">__tcp_..</text></g><g><title>__tcp_select_window (1 samples, 0.14%)</title><rect x="43.9024%" y="469" width="0.1435%" height="15" fill="rgb(233,195,47)"/><text x="44.1524%" y="479.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="44.0459%" y="485" width="0.1435%" height="15" fill="rgb(246,218,30)"/><text x="44.2959%" y="495.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="44.0459%" y="469" width="0.1435%" height="15" fill="rgb(219,145,47)"/><text x="44.2959%" y="479.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="44.0459%" y="453" width="0.1435%" height="15" fill="rgb(243,12,26)"/><text x="44.2959%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (42 samples, 6.03%)</title><rect x="38.3070%" y="517" width="6.0258%" height="15" fill="rgb(214,87,16)"/><text x="38.5570%" y="527.50">__tcp_pu..</text></g><g><title>tcp_write_xmit (42 samples, 6.03%)</title><rect x="38.3070%" y="501" width="6.0258%" height="15" fill="rgb(208,99,42)"/><text x="38.5570%" y="511.50">tcp_writ..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.14%)</title><rect x="44.1894%" y="485" width="0.1435%" height="15" fill="rgb(253,99,2)"/><text x="44.4394%" y="495.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.29%)</title><rect x="44.3329%" y="517" width="0.2869%" height="15" fill="rgb(220,168,23)"/><text x="44.5829%" y="527.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.29%)</title><rect x="44.3329%" y="501" width="0.2869%" height="15" fill="rgb(242,38,24)"/><text x="44.5829%" y="511.50"></text></g><g><title>__ksize (1 samples, 0.14%)</title><rect x="44.7633%" y="485" width="0.1435%" height="15" fill="rgb(225,182,9)"/><text x="45.0133%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.57%)</title><rect x="44.6198%" y="517" width="0.5739%" height="15" fill="rgb(243,178,37)"/><text x="44.8698%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.57%)</title><rect x="44.6198%" y="501" width="0.5739%" height="15" fill="rgb(232,139,19)"/><text x="44.8698%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.29%)</title><rect x="44.9067%" y="485" width="0.2869%" height="15" fill="rgb(225,201,24)"/><text x="45.1567%" y="495.50"></text></g><g><title>sock_sendmsg (52 samples, 7.46%)</title><rect x="37.8766%" y="565" width="7.4605%" height="15" fill="rgb(221,47,46)"/><text x="38.1266%" y="575.50">sock_sendm..</text></g><g><title>tcp_sendmsg (52 samples, 7.46%)</title><rect x="37.8766%" y="549" width="7.4605%" height="15" fill="rgb(249,23,13)"/><text x="38.1266%" y="559.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (50 samples, 7.17%)</title><rect x="38.1636%" y="533" width="7.1736%" height="15" fill="rgb(219,9,5)"/><text x="38.4136%" y="543.50">tcp_sendms..</text></g><g><title>tcp_send_mss (1 samples, 0.14%)</title><rect x="45.1937%" y="517" width="0.1435%" height="15" fill="rgb(254,171,16)"/><text x="45.4437%" y="527.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="45.1937%" y="501" width="0.1435%" height="15" fill="rgb(230,171,20)"/><text x="45.4437%" y="511.50"></text></g><g><title>__x64_sys_sendto (54 samples, 7.75%)</title><rect x="37.7331%" y="597" width="7.7475%" height="15" fill="rgb(210,71,41)"/><text x="37.9831%" y="607.50">__x64_sys_s..</text></g><g><title>__sys_sendto (54 samples, 7.75%)</title><rect x="37.7331%" y="581" width="7.7475%" height="15" fill="rgb(206,173,20)"/><text x="37.9831%" y="591.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.14%)</title><rect x="45.3372%" y="565" width="0.1435%" height="15" fill="rgb(233,88,34)"/><text x="45.5872%" y="575.50"></text></g><g><title>__fget_light (1 samples, 0.14%)</title><rect x="45.3372%" y="549" width="0.1435%" height="15" fill="rgb(223,209,46)"/><text x="45.5872%" y="559.50"></text></g><g><title>__fget_files (1 samples, 0.14%)</title><rect x="45.3372%" y="533" width="0.1435%" height="15" fill="rgb(250,43,18)"/><text x="45.5872%" y="543.50"></text></g><g><title>do_syscall_64 (56 samples, 8.03%)</title><rect x="37.5897%" y="613" width="8.0344%" height="15" fill="rgb(208,13,10)"/><text x="37.8397%" y="623.50">do_syscall_..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="45.4806%" y="597" width="0.1435%" height="15" fill="rgb(212,200,36)"/><text x="45.7306%" y="607.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="45.4806%" y="581" width="0.1435%" height="15" fill="rgb(225,90,30)"/><text x="45.7306%" y="591.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (107 samples, 15.35%)</title><rect x="30.7030%" y="741" width="15.3515%" height="15" fill="rgb(236,182,39)"/><text x="30.9530%" y="751.50">&lt;decor::Shim as msql_srv..</text></g><g><title>mysql::conn::Conn::_query (103 samples, 14.78%)</title><rect x="31.2769%" y="725" width="14.7776%" height="15" fill="rgb(212,144,35)"/><text x="31.5269%" y="735.50">mysql::conn::Conn::_que..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (64 samples, 9.18%)</title><rect x="36.8723%" y="709" width="9.1822%" height="15" fill="rgb(228,63,44)"/><text x="37.1223%" y="719.50">mysql_common:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (60 samples, 8.61%)</title><rect x="37.4462%" y="693" width="8.6083%" height="15" fill="rgb(228,109,6)"/><text x="37.6962%" y="703.50">std::io::buf..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (60 samples, 8.61%)</title><rect x="37.4462%" y="677" width="8.6083%" height="15" fill="rgb(238,117,24)"/><text x="37.6962%" y="687.50">&lt;std::net::t..</text></g><g><title>std::sys_common::net::TcpStream::write (60 samples, 8.61%)</title><rect x="37.4462%" y="661" width="8.6083%" height="15" fill="rgb(242,26,26)"/><text x="37.6962%" y="671.50">std::sys_com..</text></g><g><title>__libc_send (60 samples, 8.61%)</title><rect x="37.4462%" y="645" width="8.6083%" height="15" fill="rgb(221,92,48)"/><text x="37.6962%" y="655.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (59 samples, 8.46%)</title><rect x="37.5897%" y="629" width="8.4648%" height="15" fill="rgb(209,209,32)"/><text x="37.8397%" y="639.50">entry_SYSCAL..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.43%)</title><rect x="45.6241%" y="613" width="0.4304%" height="15" fill="rgb(221,70,22)"/><text x="45.8741%" y="623.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.14%)</title><rect x="46.0545%" y="741" width="0.1435%" height="15" fill="rgb(248,145,5)"/><text x="46.3045%" y="751.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.14%)</title><rect x="46.0545%" y="725" width="0.1435%" height="15" fill="rgb(226,116,26)"/><text x="46.3045%" y="735.50"></text></g><g><title>msql_srv::commands::parse (2 samples, 0.29%)</title><rect x="46.1980%" y="741" width="0.2869%" height="15" fill="rgb(244,5,17)"/><text x="46.4480%" y="751.50"></text></g><g><title>&lt;(A,B,C,D,E,F,G,H,I) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.29%)</title><rect x="46.1980%" y="725" width="0.2869%" height="15" fill="rgb(252,159,33)"/><text x="46.4480%" y="735.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.14%)</title><rect x="46.7719%" y="629" width="0.1435%" height="15" fill="rgb(206,71,0)"/><text x="47.0219%" y="639.50"></text></g><g><title>fput_many (1 samples, 0.14%)</title><rect x="46.9154%" y="565" width="0.1435%" height="15" fill="rgb(233,118,54)"/><text x="47.1654%" y="575.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="47.4892%" y="533" width="0.1435%" height="15" fill="rgb(234,83,48)"/><text x="47.7392%" y="543.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="47.4892%" y="517" width="0.1435%" height="15" fill="rgb(228,3,54)"/><text x="47.7392%" y="527.50"></text></g><g><title>__kfree_skb (1 samples, 0.14%)</title><rect x="47.9197%" y="245" width="0.1435%" height="15" fill="rgb(226,155,13)"/><text x="48.1697%" y="255.50"></text></g><g><title>skb_release_head_state (1 samples, 0.14%)</title><rect x="47.9197%" y="229" width="0.1435%" height="15" fill="rgb(241,28,37)"/><text x="48.1697%" y="239.50"></text></g><g><title>dst_release (1 samples, 0.14%)</title><rect x="47.9197%" y="213" width="0.1435%" height="15" fill="rgb(233,93,10)"/><text x="48.1697%" y="223.50"></text></g><g><title>kmem_cache_free (1 samples, 0.14%)</title><rect x="48.0631%" y="245" width="0.1435%" height="15" fill="rgb(225,113,19)"/><text x="48.3131%" y="255.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.14%)</title><rect x="48.0631%" y="229" width="0.1435%" height="15" fill="rgb(241,2,18)"/><text x="48.3131%" y="239.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.57%)</title><rect x="47.7762%" y="485" width="0.5739%" height="15" fill="rgb(228,207,21)"/><text x="48.0262%" y="495.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.57%)</title><rect x="47.7762%" y="469" width="0.5739%" height="15" fill="rgb(213,211,35)"/><text x="48.0262%" y="479.50"></text></g><g><title>do_softirq (4 samples, 0.57%)</title><rect x="47.7762%" y="453" width="0.5739%" height="15" fill="rgb(209,83,10)"/><text x="48.0262%" y="463.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.57%)</title><rect x="47.7762%" y="437" width="0.5739%" height="15" fill="rgb(209,164,1)"/><text x="48.0262%" y="447.50"></text></g><g><title>__do_softirq (4 samples, 0.57%)</title><rect x="47.7762%" y="421" width="0.5739%" height="15" fill="rgb(213,184,43)"/><text x="48.0262%" y="431.50"></text></g><g><title>net_rx_action (4 samples, 0.57%)</title><rect x="47.7762%" y="405" width="0.5739%" height="15" fill="rgb(231,61,34)"/><text x="48.0262%" y="415.50"></text></g><g><title>process_backlog (4 samples, 0.57%)</title><rect x="47.7762%" y="389" width="0.5739%" height="15" fill="rgb(235,75,3)"/><text x="48.0262%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.57%)</title><rect x="47.7762%" y="373" width="0.5739%" height="15" fill="rgb(220,106,47)"/><text x="48.0262%" y="383.50"></text></g><g><title>ip_rcv (3 samples, 0.43%)</title><rect x="47.9197%" y="357" width="0.4304%" height="15" fill="rgb(210,196,33)"/><text x="48.1697%" y="367.50"></text></g><g><title>ip_local_deliver (3 samples, 0.43%)</title><rect x="47.9197%" y="341" width="0.4304%" height="15" fill="rgb(229,154,42)"/><text x="48.1697%" y="351.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.43%)</title><rect x="47.9197%" y="325" width="0.4304%" height="15" fill="rgb(228,114,26)"/><text x="48.1697%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.43%)</title><rect x="47.9197%" y="309" width="0.4304%" height="15" fill="rgb(208,144,1)"/><text x="48.1697%" y="319.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.43%)</title><rect x="47.9197%" y="293" width="0.4304%" height="15" fill="rgb(239,112,37)"/><text x="48.1697%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.43%)</title><rect x="47.9197%" y="277" width="0.4304%" height="15" fill="rgb(210,96,50)"/><text x="48.1697%" y="287.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.43%)</title><rect x="47.9197%" y="261" width="0.4304%" height="15" fill="rgb(222,178,2)"/><text x="48.1697%" y="271.50"></text></g><g><title>tcp_ack (1 samples, 0.14%)</title><rect x="48.2066%" y="245" width="0.1435%" height="15" fill="rgb(226,74,18)"/><text x="48.4566%" y="255.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.86%)</title><rect x="47.6327%" y="533" width="0.8608%" height="15" fill="rgb(225,67,54)"/><text x="47.8827%" y="543.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.86%)</title><rect x="47.6327%" y="517" width="0.8608%" height="15" fill="rgb(251,92,32)"/><text x="47.8827%" y="527.50"></text></g><g><title>ip_output (6 samples, 0.86%)</title><rect x="47.6327%" y="501" width="0.8608%" height="15" fill="rgb(228,149,22)"/><text x="47.8827%" y="511.50"></text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="48.3501%" y="485" width="0.1435%" height="15" fill="rgb(243,54,13)"/><text x="48.6001%" y="495.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="48.3501%" y="469" width="0.1435%" height="15" fill="rgb(243,180,28)"/><text x="48.6001%" y="479.50"></text></g><g><title>reweight_entity (1 samples, 0.14%)</title><rect x="48.9240%" y="421" width="0.1435%" height="15" fill="rgb(208,167,24)"/><text x="49.1740%" y="431.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.86%)</title><rect x="48.6370%" y="453" width="0.8608%" height="15" fill="rgb(245,73,45)"/><text x="48.8870%" y="463.50"></text></g><g><title>dequeue_entity (6 samples, 0.86%)</title><rect x="48.6370%" y="437" width="0.8608%" height="15" fill="rgb(237,203,48)"/><text x="48.8870%" y="447.50"></text></g><g><title>update_curr (3 samples, 0.43%)</title><rect x="49.0674%" y="421" width="0.4304%" height="15" fill="rgb(211,197,16)"/><text x="49.3174%" y="431.50"></text></g><g><title>finish_task_switch (1 samples, 0.14%)</title><rect x="49.4978%" y="453" width="0.1435%" height="15" fill="rgb(243,99,51)"/><text x="49.7478%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.14%)</title><rect x="49.4978%" y="437" width="0.1435%" height="15" fill="rgb(215,123,29)"/><text x="49.7478%" y="447.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.14%)</title><rect x="49.4978%" y="421" width="0.1435%" height="15" fill="rgb(239,186,37)"/><text x="49.7478%" y="431.50"></text></g><g><title>native_write_msr (1 samples, 0.14%)</title><rect x="49.4978%" y="405" width="0.1435%" height="15" fill="rgb(252,136,39)"/><text x="49.7478%" y="415.50"></text></g><g><title>psi_task_change (5 samples, 0.72%)</title><rect x="49.6413%" y="453" width="0.7174%" height="15" fill="rgb(223,213,32)"/><text x="49.8913%" y="463.50"></text></g><g><title>psi_group_change (5 samples, 0.72%)</title><rect x="49.6413%" y="437" width="0.7174%" height="15" fill="rgb(233,115,5)"/><text x="49.8913%" y="447.50"></text></g><g><title>record_times (3 samples, 0.43%)</title><rect x="49.9283%" y="421" width="0.4304%" height="15" fill="rgb(207,226,44)"/><text x="50.1783%" y="431.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.29%)</title><rect x="50.0717%" y="405" width="0.2869%" height="15" fill="rgb(208,126,0)"/><text x="50.3217%" y="415.50"></text></g><g><title>sched_clock (2 samples, 0.29%)</title><rect x="50.0717%" y="389" width="0.2869%" height="15" fill="rgb(244,66,21)"/><text x="50.3217%" y="399.50"></text></g><g><title>native_sched_clock (2 samples, 0.29%)</title><rect x="50.0717%" y="373" width="0.2869%" height="15" fill="rgb(222,97,12)"/><text x="50.3217%" y="383.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.14%)</title><rect x="50.3587%" y="453" width="0.1435%" height="15" fill="rgb(219,213,19)"/><text x="50.6087%" y="463.50"></text></g><g><title>sk_wait_data (16 samples, 2.30%)</title><rect x="48.4935%" y="533" width="2.2956%" height="15" fill="rgb(252,169,30)"/><text x="48.7435%" y="543.50">s..</text></g><g><title>wait_woken (16 samples, 2.30%)</title><rect x="48.4935%" y="517" width="2.2956%" height="15" fill="rgb(206,32,51)"/><text x="48.7435%" y="527.50">w..</text></g><g><title>schedule_timeout (16 samples, 2.30%)</title><rect x="48.4935%" y="501" width="2.2956%" height="15" fill="rgb(250,172,42)"/><text x="48.7435%" y="511.50">s..</text></g><g><title>schedule (16 samples, 2.30%)</title><rect x="48.4935%" y="485" width="2.2956%" height="15" fill="rgb(209,34,43)"/><text x="48.7435%" y="495.50">s..</text></g><g><title>__schedule (16 samples, 2.30%)</title><rect x="48.4935%" y="469" width="2.2956%" height="15" fill="rgb(223,11,35)"/><text x="48.7435%" y="479.50">_..</text></g><g><title>update_rq_clock (2 samples, 0.29%)</title><rect x="50.5022%" y="453" width="0.2869%" height="15" fill="rgb(251,219,26)"/><text x="50.7522%" y="463.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.14%)</title><rect x="50.6456%" y="437" width="0.1435%" height="15" fill="rgb(231,119,3)"/><text x="50.8956%" y="447.50"></text></g><g><title>do_syscall_64 (28 samples, 4.02%)</title><rect x="46.9154%" y="613" width="4.0172%" height="15" fill="rgb(216,97,11)"/><text x="47.1654%" y="623.50">do_s..</text></g><g><title>__x64_sys_recvfrom (28 samples, 4.02%)</title><rect x="46.9154%" y="597" width="4.0172%" height="15" fill="rgb(223,59,9)"/><text x="47.1654%" y="607.50">__x6..</text></g><g><title>__sys_recvfrom (28 samples, 4.02%)</title><rect x="46.9154%" y="581" width="4.0172%" height="15" fill="rgb(233,93,31)"/><text x="47.1654%" y="591.50">__sy..</text></g><g><title>inet_recvmsg (27 samples, 3.87%)</title><rect x="47.0588%" y="565" width="3.8737%" height="15" fill="rgb(239,81,33)"/><text x="47.3088%" y="575.50">inet..</text></g><g><title>tcp_recvmsg (27 samples, 3.87%)</title><rect x="47.0588%" y="549" width="3.8737%" height="15" fill="rgb(213,120,34)"/><text x="47.3088%" y="559.50">tcp_..</text></g><g><title>skb_copy_datagram_iter (1 samples, 0.14%)</title><rect x="50.7891%" y="533" width="0.1435%" height="15" fill="rgb(243,49,53)"/><text x="51.0391%" y="543.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.14%)</title><rect x="50.7891%" y="517" width="0.1435%" height="15" fill="rgb(247,216,33)"/><text x="51.0391%" y="527.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.14%)</title><rect x="50.7891%" y="501" width="0.1435%" height="15" fill="rgb(226,26,14)"/><text x="51.0391%" y="511.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="50.7891%" y="485" width="0.1435%" height="15" fill="rgb(215,49,53)"/><text x="51.0391%" y="495.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.14%)</title><rect x="50.7891%" y="469" width="0.1435%" height="15" fill="rgb(245,162,40)"/><text x="51.0391%" y="479.50"></text></g><g><title>__libc_recv (32 samples, 4.59%)</title><rect x="46.6284%" y="645" width="4.5911%" height="15" fill="rgb(229,68,17)"/><text x="46.8784%" y="655.50">__lib..</text></g><g><title>entry_SYSCALL_64 (30 samples, 4.30%)</title><rect x="46.9154%" y="629" width="4.3042%" height="15" fill="rgb(213,182,10)"/><text x="47.1654%" y="639.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.29%)</title><rect x="50.9326%" y="613" width="0.2869%" height="15" fill="rgb(245,125,30)"/><text x="51.1826%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (33 samples, 4.73%)</title><rect x="46.6284%" y="709" width="4.7346%" height="15" fill="rgb(232,202,2)"/><text x="46.8784%" y="719.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (33 samples, 4.73%)</title><rect x="46.6284%" y="693" width="4.7346%" height="15" fill="rgb(237,140,51)"/><text x="46.8784%" y="703.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (33 samples, 4.73%)</title><rect x="46.6284%" y="677" width="4.7346%" height="15" fill="rgb(236,157,25)"/><text x="46.8784%" y="687.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (33 samples, 4.73%)</title><rect x="46.6284%" y="661" width="4.7346%" height="15" fill="rgb(219,209,0)"/><text x="46.8784%" y="671.50">std::s..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.14%)</title><rect x="51.2195%" y="645" width="0.1435%" height="15" fill="rgb(240,116,54)"/><text x="51.4695%" y="655.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.14%)</title><rect x="51.2195%" y="629" width="0.1435%" height="15" fill="rgb(216,10,36)"/><text x="51.4695%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 5.02%)</title><rect x="46.4849%" y="725" width="5.0215%" height="15" fill="rgb(222,72,44)"/><text x="46.7349%" y="735.50">&lt;std::..</text></g><g><title>std::net::tcp::TcpStream::set_nodelay (1 samples, 0.14%)</title><rect x="51.3630%" y="709" width="0.1435%" height="15" fill="rgb(232,159,9)"/><text x="51.6130%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::set_nodelay (1 samples, 0.14%)</title><rect x="51.3630%" y="693" width="0.1435%" height="15" fill="rgb(210,39,32)"/><text x="51.6130%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::set_nodelay (1 samples, 0.14%)</title><rect x="51.3630%" y="677" width="0.1435%" height="15" fill="rgb(216,194,45)"/><text x="51.6130%" y="687.50"></text></g><g><title>std::sys_common::net::setsockopt (1 samples, 0.14%)</title><rect x="51.3630%" y="661" width="0.1435%" height="15" fill="rgb(218,18,35)"/><text x="51.6130%" y="671.50"></text></g><g><title>__libc_recv (1 samples, 0.14%)</title><rect x="51.3630%" y="645" width="0.1435%" height="15" fill="rgb(207,83,51)"/><text x="51.6130%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="51.3630%" y="629" width="0.1435%" height="15" fill="rgb(225,63,43)"/><text x="51.6130%" y="639.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (36 samples, 5.16%)</title><rect x="46.4849%" y="741" width="5.1650%" height="15" fill="rgb(207,57,36)"/><text x="46.7349%" y="751.50">msql_s..</text></g><g><title>__memset_avx2_erms (1 samples, 0.14%)</title><rect x="51.5065%" y="725" width="0.1435%" height="15" fill="rgb(216,99,33)"/><text x="51.7565%" y="735.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.14%)</title><rect x="51.6499%" y="677" width="0.1435%" height="15" fill="rgb(225,42,16)"/><text x="51.8999%" y="687.50"></text></g><g><title>fput (1 samples, 0.14%)</title><rect x="52.2238%" y="613" width="0.1435%" height="15" fill="rgb(220,201,45)"/><text x="52.4738%" y="623.50"></text></g><g><title>__ip_local_out (1 samples, 0.14%)</title><rect x="53.3716%" y="501" width="0.1435%" height="15" fill="rgb(225,33,4)"/><text x="53.6216%" y="511.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="53.5151%" y="501" width="0.1435%" height="15" fill="rgb(224,33,50)"/><text x="53.7651%" y="511.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.14%)</title><rect x="54.2324%" y="389" width="0.1435%" height="15" fill="rgb(246,198,51)"/><text x="54.4824%" y="399.50"></text></g><g><title>netif_rx (2 samples, 0.29%)</title><rect x="54.2324%" y="421" width="0.2869%" height="15" fill="rgb(205,22,4)"/><text x="54.4824%" y="431.50"></text></g><g><title>netif_rx_internal (2 samples, 0.29%)</title><rect x="54.2324%" y="405" width="0.2869%" height="15" fill="rgb(206,3,8)"/><text x="54.4824%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.14%)</title><rect x="54.3759%" y="389" width="0.1435%" height="15" fill="rgb(251,23,15)"/><text x="54.6259%" y="399.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.57%)</title><rect x="54.0890%" y="453" width="0.5739%" height="15" fill="rgb(252,88,28)"/><text x="54.3390%" y="463.50"></text></g><g><title>loopback_xmit (3 samples, 0.43%)</title><rect x="54.2324%" y="437" width="0.4304%" height="15" fill="rgb(212,127,14)"/><text x="54.4824%" y="447.50"></text></g><g><title>tcp_wfree (1 samples, 0.14%)</title><rect x="54.5194%" y="421" width="0.1435%" height="15" fill="rgb(247,145,37)"/><text x="54.7694%" y="431.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="54.6628%" y="453" width="0.1435%" height="15" fill="rgb(209,117,53)"/><text x="54.9128%" y="463.50"></text></g><g><title>netif_skb_features (1 samples, 0.14%)</title><rect x="54.6628%" y="437" width="0.1435%" height="15" fill="rgb(212,90,42)"/><text x="54.9128%" y="447.50"></text></g><g><title>__dev_queue_xmit (9 samples, 1.29%)</title><rect x="53.6585%" y="469" width="1.2912%" height="15" fill="rgb(218,164,37)"/><text x="53.9085%" y="479.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.14%)</title><rect x="54.8063%" y="453" width="0.1435%" height="15" fill="rgb(246,65,34)"/><text x="55.0563%" y="463.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.14%)</title><rect x="54.9498%" y="405" width="0.1435%" height="15" fill="rgb(231,100,33)"/><text x="55.1998%" y="415.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="54.9498%" y="389" width="0.1435%" height="15" fill="rgb(228,126,14)"/><text x="55.1998%" y="399.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="55.5237%" y="277" width="0.1435%" height="15" fill="rgb(215,173,21)"/><text x="55.7737%" y="287.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.14%)</title><rect x="55.6671%" y="277" width="0.1435%" height="15" fill="rgb(210,6,40)"/><text x="55.9171%" y="287.50"></text></g><g><title>preempt_count_sub (1 samples, 0.14%)</title><rect x="55.6671%" y="261" width="0.1435%" height="15" fill="rgb(212,48,18)"/><text x="55.9171%" y="271.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.14%)</title><rect x="55.8106%" y="245" width="0.1435%" height="15" fill="rgb(230,214,11)"/><text x="56.0606%" y="255.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="55.9541%" y="245" width="0.1435%" height="15" fill="rgb(254,105,39)"/><text x="56.2041%" y="255.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.14%)</title><rect x="55.9541%" y="229" width="0.1435%" height="15" fill="rgb(245,158,5)"/><text x="56.2041%" y="239.50"></text></g><g><title>ip_output (1 samples, 0.14%)</title><rect x="55.9541%" y="213" width="0.1435%" height="15" fill="rgb(249,208,11)"/><text x="56.2041%" y="223.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.14%)</title><rect x="55.9541%" y="197" width="0.1435%" height="15" fill="rgb(210,39,28)"/><text x="56.2041%" y="207.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.14%)</title><rect x="55.9541%" y="181" width="0.1435%" height="15" fill="rgb(211,56,53)"/><text x="56.2041%" y="191.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.14%)</title><rect x="55.9541%" y="165" width="0.1435%" height="15" fill="rgb(226,201,30)"/><text x="56.2041%" y="175.50"></text></g><g><title>loopback_xmit (1 samples, 0.14%)</title><rect x="55.9541%" y="149" width="0.1435%" height="15" fill="rgb(239,101,34)"/><text x="56.2041%" y="159.50"></text></g><g><title>eth_type_trans (1 samples, 0.14%)</title><rect x="55.9541%" y="133" width="0.1435%" height="15" fill="rgb(226,209,5)"/><text x="56.2041%" y="143.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="56.0976%" y="245" width="0.1435%" height="15" fill="rgb(250,105,47)"/><text x="56.3476%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="56.5280%" y="181" width="0.1435%" height="15" fill="rgb(230,72,3)"/><text x="56.7780%" y="191.50"></text></g><g><title>enqueue_task (3 samples, 0.43%)</title><rect x="56.6714%" y="181" width="0.4304%" height="15" fill="rgb(232,218,39)"/><text x="56.9214%" y="191.50"></text></g><g><title>psi_task_change (3 samples, 0.43%)</title><rect x="56.6714%" y="165" width="0.4304%" height="15" fill="rgb(248,166,6)"/><text x="56.9214%" y="175.50"></text></g><g><title>psi_group_change (3 samples, 0.43%)</title><rect x="56.6714%" y="149" width="0.4304%" height="15" fill="rgb(247,89,20)"/><text x="56.9214%" y="159.50"></text></g><g><title>record_times (1 samples, 0.14%)</title><rect x="56.9584%" y="133" width="0.1435%" height="15" fill="rgb(248,130,54)"/><text x="57.2084%" y="143.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.14%)</title><rect x="56.9584%" y="117" width="0.1435%" height="15" fill="rgb(234,196,4)"/><text x="57.2084%" y="127.50"></text></g><g><title>sched_clock (1 samples, 0.14%)</title><rect x="56.9584%" y="101" width="0.1435%" height="15" fill="rgb(250,143,31)"/><text x="57.2084%" y="111.50"></text></g><g><title>native_sched_clock (1 samples, 0.14%)</title><rect x="56.9584%" y="85" width="0.1435%" height="15" fill="rgb(211,110,34)"/><text x="57.2084%" y="95.50"></text></g><g><title>reweight_entity (1 samples, 0.14%)</title><rect x="57.3888%" y="149" width="0.1435%" height="15" fill="rgb(215,124,48)"/><text x="57.6388%" y="159.50"></text></g><g><title>update_cfs_group (1 samples, 0.14%)</title><rect x="57.5323%" y="149" width="0.1435%" height="15" fill="rgb(216,46,13)"/><text x="57.7823%" y="159.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.72%)</title><rect x="57.1019%" y="181" width="0.7174%" height="15" fill="rgb(205,184,25)"/><text x="57.3519%" y="191.50"></text></g><g><title>enqueue_entity (5 samples, 0.72%)</title><rect x="57.1019%" y="165" width="0.7174%" height="15" fill="rgb(228,1,10)"/><text x="57.3519%" y="175.50"></text></g><g><title>update_load_avg (1 samples, 0.14%)</title><rect x="57.6758%" y="149" width="0.1435%" height="15" fill="rgb(213,116,27)"/><text x="57.9258%" y="159.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.14%)</title><rect x="57.6758%" y="133" width="0.1435%" height="15" fill="rgb(241,95,50)"/><text x="57.9258%" y="143.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.29%)</title><rect x="57.8192%" y="181" width="0.2869%" height="15" fill="rgb(238,48,32)"/><text x="58.0692%" y="191.50"></text></g><g><title>check_preempt_curr (2 samples, 0.29%)</title><rect x="57.8192%" y="165" width="0.2869%" height="15" fill="rgb(235,113,49)"/><text x="58.0692%" y="175.50"></text></g><g><title>resched_curr (2 samples, 0.29%)</title><rect x="57.8192%" y="149" width="0.2869%" height="15" fill="rgb(205,127,43)"/><text x="58.0692%" y="159.50"></text></g><g><title>sock_def_readable (14 samples, 2.01%)</title><rect x="56.2410%" y="245" width="2.0086%" height="15" fill="rgb(250,162,2)"/><text x="56.4910%" y="255.50">s..</text></g><g><title>__wake_up_common_lock (14 samples, 2.01%)</title><rect x="56.2410%" y="229" width="2.0086%" height="15" fill="rgb(220,13,41)"/><text x="56.4910%" y="239.50">_..</text></g><g><title>__wake_up_common (14 samples, 2.01%)</title><rect x="56.2410%" y="213" width="2.0086%" height="15" fill="rgb(249,221,25)"/><text x="56.4910%" y="223.50">_..</text></g><g><title>try_to_wake_up (13 samples, 1.87%)</title><rect x="56.3845%" y="197" width="1.8651%" height="15" fill="rgb(215,208,19)"/><text x="56.6345%" y="207.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.14%)</title><rect x="58.1062%" y="181" width="0.1435%" height="15" fill="rgb(236,175,2)"/><text x="58.3562%" y="191.50"></text></g><g><title>rb_erase (1 samples, 0.14%)</title><rect x="58.2496%" y="229" width="0.1435%" height="15" fill="rgb(241,52,2)"/><text x="58.4996%" y="239.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.14%)</title><rect x="58.3931%" y="229" width="0.1435%" height="15" fill="rgb(248,140,14)"/><text x="58.6431%" y="239.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.14%)</title><rect x="58.5366%" y="229" width="0.1435%" height="15" fill="rgb(253,22,42)"/><text x="58.7866%" y="239.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="58.6801%" y="229" width="0.1435%" height="15" fill="rgb(234,61,47)"/><text x="58.9301%" y="239.50"></text></g><g><title>tcp_ack (7 samples, 1.00%)</title><rect x="58.2496%" y="245" width="1.0043%" height="15" fill="rgb(208,226,15)"/><text x="58.4996%" y="255.50"></text></g><g><title>tcp_update_pacing_rate (3 samples, 0.43%)</title><rect x="58.8235%" y="229" width="0.4304%" height="15" fill="rgb(217,221,4)"/><text x="59.0735%" y="239.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.14%)</title><rect x="59.2539%" y="245" width="0.1435%" height="15" fill="rgb(212,174,34)"/><text x="59.5039%" y="255.50"></text></g><g><title>ip_local_deliver (30 samples, 4.30%)</title><rect x="55.3802%" y="341" width="4.3042%" height="15" fill="rgb(253,83,4)"/><text x="55.6302%" y="351.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (30 samples, 4.30%)</title><rect x="55.3802%" y="325" width="4.3042%" height="15" fill="rgb(250,195,49)"/><text x="55.6302%" y="335.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (30 samples, 4.30%)</title><rect x="55.3802%" y="309" width="4.3042%" height="15" fill="rgb(241,192,25)"/><text x="55.6302%" y="319.50">ip_pr..</text></g><g><title>tcp_v4_rcv (30 samples, 4.30%)</title><rect x="55.3802%" y="293" width="4.3042%" height="15" fill="rgb(208,124,10)"/><text x="55.6302%" y="303.50">tcp_v..</text></g><g><title>tcp_v4_do_rcv (27 samples, 3.87%)</title><rect x="55.8106%" y="277" width="3.8737%" height="15" fill="rgb(222,33,0)"/><text x="56.0606%" y="287.50">tcp_..</text></g><g><title>tcp_rcv_established (27 samples, 3.87%)</title><rect x="55.8106%" y="261" width="3.8737%" height="15" fill="rgb(234,209,28)"/><text x="56.0606%" y="271.50">tcp_..</text></g><g><title>tcp_send_delayed_ack (2 samples, 0.29%)</title><rect x="59.3974%" y="245" width="0.2869%" height="15" fill="rgb(224,11,23)"/><text x="59.6474%" y="255.50"></text></g><g><title>ip_finish_output2 (43 samples, 6.17%)</title><rect x="53.6585%" y="485" width="6.1693%" height="15" fill="rgb(232,99,1)"/><text x="53.9085%" y="495.50">ip_finis..</text></g><g><title>__local_bh_enable_ip (34 samples, 4.88%)</title><rect x="54.9498%" y="469" width="4.8780%" height="15" fill="rgb(237,95,45)"/><text x="55.1998%" y="479.50">__loca..</text></g><g><title>do_softirq (34 samples, 4.88%)</title><rect x="54.9498%" y="453" width="4.8780%" height="15" fill="rgb(208,109,11)"/><text x="55.1998%" y="463.50">do_sof..</text></g><g><title>do_softirq_own_stack (34 samples, 4.88%)</title><rect x="54.9498%" y="437" width="4.8780%" height="15" fill="rgb(216,190,48)"/><text x="55.1998%" y="447.50">do_sof..</text></g><g><title>__do_softirq (34 samples, 4.88%)</title><rect x="54.9498%" y="421" width="4.8780%" height="15" fill="rgb(251,171,36)"/><text x="55.1998%" y="431.50">__do_s..</text></g><g><title>net_rx_action (33 samples, 4.73%)</title><rect x="55.0933%" y="405" width="4.7346%" height="15" fill="rgb(230,62,22)"/><text x="55.3433%" y="415.50">net_rx..</text></g><g><title>process_backlog (32 samples, 4.59%)</title><rect x="55.2367%" y="389" width="4.5911%" height="15" fill="rgb(225,114,35)"/><text x="55.4867%" y="399.50">proce..</text></g><g><title>__netif_receive_skb_one_core (31 samples, 4.45%)</title><rect x="55.3802%" y="373" width="4.4476%" height="15" fill="rgb(215,118,42)"/><text x="55.6302%" y="383.50">__net..</text></g><g><title>ip_rcv (31 samples, 4.45%)</title><rect x="55.3802%" y="357" width="4.4476%" height="15" fill="rgb(243,119,21)"/><text x="55.6302%" y="367.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.14%)</title><rect x="59.6844%" y="341" width="0.1435%" height="15" fill="rgb(252,177,53)"/><text x="59.9344%" y="351.50"></text></g><g><title>__ip_queue_xmit (48 samples, 6.89%)</title><rect x="53.0846%" y="517" width="6.8867%" height="15" fill="rgb(237,209,29)"/><text x="53.3346%" y="527.50">__ip_queu..</text></g><g><title>ip_output (44 samples, 6.31%)</title><rect x="53.6585%" y="501" width="6.3128%" height="15" fill="rgb(212,65,23)"/><text x="53.9085%" y="511.50">ip_output</text></g><g><title>ip_finish_output (1 samples, 0.14%)</title><rect x="59.8278%" y="485" width="0.1435%" height="15" fill="rgb(230,222,46)"/><text x="60.0778%" y="495.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="59.8278%" y="469" width="0.1435%" height="15" fill="rgb(215,135,32)"/><text x="60.0778%" y="479.50"></text></g><g><title>__tcp_transmit_skb (50 samples, 7.17%)</title><rect x="52.9412%" y="533" width="7.1736%" height="15" fill="rgb(246,101,22)"/><text x="53.1912%" y="543.50">__tcp_tran..</text></g><g><title>tcp_options_write (1 samples, 0.14%)</title><rect x="59.9713%" y="517" width="0.1435%" height="15" fill="rgb(206,107,13)"/><text x="60.2213%" y="527.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.43%)</title><rect x="60.1148%" y="533" width="0.4304%" height="15" fill="rgb(250,100,44)"/><text x="60.3648%" y="543.50"></text></g><g><title>sk_reset_timer (1 samples, 0.14%)</title><rect x="60.4017%" y="517" width="0.1435%" height="15" fill="rgb(231,147,38)"/><text x="60.6517%" y="527.50"></text></g><g><title>__mod_timer (1 samples, 0.14%)</title><rect x="60.4017%" y="501" width="0.1435%" height="15" fill="rgb(229,8,40)"/><text x="60.6517%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (56 samples, 8.03%)</title><rect x="52.6542%" y="565" width="8.0344%" height="15" fill="rgb(221,135,30)"/><text x="52.9042%" y="575.50">__tcp_push_..</text></g><g><title>tcp_write_xmit (55 samples, 7.89%)</title><rect x="52.7977%" y="549" width="7.8910%" height="15" fill="rgb(249,193,18)"/><text x="53.0477%" y="559.50">tcp_write_x..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.14%)</title><rect x="60.5452%" y="533" width="0.1435%" height="15" fill="rgb(209,133,39)"/><text x="60.7952%" y="543.50"></text></g><g><title>__ksize (1 samples, 0.14%)</title><rect x="60.8321%" y="533" width="0.1435%" height="15" fill="rgb(232,100,14)"/><text x="61.0821%" y="543.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.57%)</title><rect x="60.6887%" y="565" width="0.5739%" height="15" fill="rgb(224,185,1)"/><text x="60.9387%" y="575.50"></text></g><g><title>__alloc_skb (4 samples, 0.57%)</title><rect x="60.6887%" y="549" width="0.5739%" height="15" fill="rgb(223,139,8)"/><text x="60.9387%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.29%)</title><rect x="60.9756%" y="533" width="0.2869%" height="15" fill="rgb(232,213,38)"/><text x="61.2256%" y="543.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.14%)</title><rect x="61.2626%" y="565" width="0.1435%" height="15" fill="rgb(207,94,22)"/><text x="61.5126%" y="575.50"></text></g><g><title>__check_object_size (1 samples, 0.14%)</title><rect x="61.2626%" y="549" width="0.1435%" height="15" fill="rgb(219,183,54)"/><text x="61.5126%" y="559.50"></text></g><g><title>sock_sendmsg (65 samples, 9.33%)</title><rect x="52.3673%" y="613" width="9.3257%" height="15" fill="rgb(216,185,54)"/><text x="52.6173%" y="623.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (65 samples, 9.33%)</title><rect x="52.3673%" y="597" width="9.3257%" height="15" fill="rgb(254,217,39)"/><text x="52.6173%" y="607.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (65 samples, 9.33%)</title><rect x="52.3673%" y="581" width="9.3257%" height="15" fill="rgb(240,178,23)"/><text x="52.6173%" y="591.50">tcp_sendmsg_l..</text></g><g><title>tcp_send_mss (2 samples, 0.29%)</title><rect x="61.4060%" y="565" width="0.2869%" height="15" fill="rgb(218,11,47)"/><text x="61.6560%" y="575.50"></text></g><g><title>tcp_current_mss (1 samples, 0.14%)</title><rect x="61.5495%" y="549" width="0.1435%" height="15" fill="rgb(218,51,51)"/><text x="61.7995%" y="559.50"></text></g><g><title>do_syscall_64 (70 samples, 10.04%)</title><rect x="51.9369%" y="661" width="10.0430%" height="15" fill="rgb(238,126,27)"/><text x="52.1869%" y="671.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (69 samples, 9.90%)</title><rect x="52.0803%" y="645" width="9.8996%" height="15" fill="rgb(249,202,22)"/><text x="52.3303%" y="655.50">__x64_sys_send..</text></g><g><title>__sys_sendto (69 samples, 9.90%)</title><rect x="52.0803%" y="629" width="9.8996%" height="15" fill="rgb(254,195,49)"/><text x="52.3303%" y="639.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.29%)</title><rect x="61.6930%" y="613" width="0.2869%" height="15" fill="rgb(208,123,14)"/><text x="61.9430%" y="623.50"></text></g><g><title>__fget_light (2 samples, 0.29%)</title><rect x="61.6930%" y="597" width="0.2869%" height="15" fill="rgb(224,200,8)"/><text x="61.9430%" y="607.50"></text></g><g><title>__fget_files (2 samples, 0.29%)</title><rect x="61.6930%" y="581" width="0.2869%" height="15" fill="rgb(217,61,36)"/><text x="61.9430%" y="591.50"></text></g><g><title>decor::Shim::run_on_tcp (223 samples, 31.99%)</title><rect x="30.5595%" y="773" width="31.9943%" height="15" fill="rgb(206,35,45)"/><text x="30.8095%" y="783.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (223 samples, 31.99%)</title><rect x="30.5595%" y="757" width="31.9943%" height="15" fill="rgb(217,65,33)"/><text x="30.8095%" y="767.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (76 samples, 10.90%)</title><rect x="51.6499%" y="741" width="10.9039%" height="15" fill="rgb(222,158,48)"/><text x="51.8999%" y="751.50">std::io::buffere..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (76 samples, 10.90%)</title><rect x="51.6499%" y="725" width="10.9039%" height="15" fill="rgb(254,2,54)"/><text x="51.8999%" y="735.50">&lt;std::net::tcp::..</text></g><g><title>std::sys_common::net::TcpStream::write (76 samples, 10.90%)</title><rect x="51.6499%" y="709" width="10.9039%" height="15" fill="rgb(250,143,38)"/><text x="51.8999%" y="719.50">std::sys_common:..</text></g><g><title>__libc_send (76 samples, 10.90%)</title><rect x="51.6499%" y="693" width="10.9039%" height="15" fill="rgb(248,25,0)"/><text x="51.8999%" y="703.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (75 samples, 10.76%)</title><rect x="51.7934%" y="677" width="10.7604%" height="15" fill="rgb(206,152,27)"/><text x="52.0434%" y="687.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.57%)</title><rect x="61.9799%" y="661" width="0.5739%" height="15" fill="rgb(240,77,30)"/><text x="62.2299%" y="671.50"></text></g><g><title>__GI___clone (224 samples, 32.14%)</title><rect x="30.5595%" y="885" width="32.1377%" height="15" fill="rgb(231,5,3)"/><text x="30.8095%" y="895.50">__GI___clone</text></g><g><title>start_thread (224 samples, 32.14%)</title><rect x="30.5595%" y="869" width="32.1377%" height="15" fill="rgb(207,226,32)"/><text x="30.8095%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (224 samples, 32.14%)</title><rect x="30.5595%" y="853" width="32.1377%" height="15" fill="rgb(222,207,47)"/><text x="30.8095%" y="863.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (224 samples, 32.14%)</title><rect x="30.5595%" y="837" width="32.1377%" height="15" fill="rgb(229,115,45)"/><text x="30.8095%" y="847.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (224 samples, 32.14%)</title><rect x="30.5595%" y="821" width="32.1377%" height="15" fill="rgb(224,191,6)"/><text x="30.8095%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (224 samples, 32.14%)</title><rect x="30.5595%" y="805" width="32.1377%" height="15" fill="rgb(230,227,24)"/><text x="30.8095%" y="815.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (224 samples, 32.14%)</title><rect x="30.5595%" y="789" width="32.1377%" height="15" fill="rgb(228,80,19)"/><text x="30.8095%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backt..</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.14%)</title><rect x="62.5538%" y="773" width="0.1435%" height="15" fill="rgb(247,229,0)"/><text x="62.8038%" y="783.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.14%)</title><rect x="62.5538%" y="757" width="0.1435%" height="15" fill="rgb(237,194,15)"/><text x="62.8038%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="62.5538%" y="741" width="0.1435%" height="15" fill="rgb(219,203,20)"/><text x="62.8038%" y="751.50"></text></g><g><title>__GI_exit (1 samples, 0.14%)</title><rect x="62.6973%" y="853" width="0.1435%" height="15" fill="rgb(234,128,8)"/><text x="62.9473%" y="863.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.14%)</title><rect x="62.6973%" y="837" width="0.1435%" height="15" fill="rgb(248,202,8)"/><text x="62.9473%" y="847.50"></text></g><g><title>__GI__exit (1 samples, 0.14%)</title><rect x="62.6973%" y="821" width="0.1435%" height="15" fill="rgb(206,104,37)"/><text x="62.9473%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="62.6973%" y="805" width="0.1435%" height="15" fill="rgb(223,8,27)"/><text x="62.9473%" y="815.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="62.6973%" y="789" width="0.1435%" height="15" fill="rgb(216,217,28)"/><text x="62.9473%" y="799.50"></text></g><g><title>[vmlinux] (1 samples, 0.14%)</title><rect x="62.6973%" y="773" width="0.1435%" height="15" fill="rgb(249,199,1)"/><text x="62.9473%" y="783.50"></text></g><g><title>do_group_exit (1 samples, 0.14%)</title><rect x="62.6973%" y="757" width="0.1435%" height="15" fill="rgb(240,85,17)"/><text x="62.9473%" y="767.50"></text></g><g><title>do_exit (1 samples, 0.14%)</title><rect x="62.6973%" y="741" width="0.1435%" height="15" fill="rgb(206,108,45)"/><text x="62.9473%" y="751.50"></text></g><g><title>taskstats_exit (1 samples, 0.14%)</title><rect x="62.6973%" y="725" width="0.1435%" height="15" fill="rgb(245,210,41)"/><text x="62.9473%" y="735.50"></text></g><g><title>__delayacct_add_tsk (1 samples, 0.14%)</title><rect x="62.6973%" y="709" width="0.1435%" height="15" fill="rgb(206,13,37)"/><text x="62.9473%" y="719.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="62.6973%" y="693" width="0.1435%" height="15" fill="rgb(250,61,18)"/><text x="62.9473%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.43%)</title><rect x="63.1277%" y="629" width="0.4304%" height="15" fill="rgb(235,172,48)"/><text x="63.3777%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.43%)</title><rect x="63.1277%" y="613" width="0.4304%" height="15" fill="rgb(249,201,17)"/><text x="63.3777%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.4146%" y="597" width="0.1435%" height="15" fill="rgb(219,208,6)"/><text x="63.6646%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.14%)</title><rect x="63.4146%" y="581" width="0.1435%" height="15" fill="rgb(248,31,23)"/><text x="63.6646%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="63.4146%" y="565" width="0.1435%" height="15" fill="rgb(245,15,42)"/><text x="63.6646%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="63.4146%" y="549" width="0.1435%" height="15" fill="rgb(222,217,39)"/><text x="63.6646%" y="559.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.14%)</title><rect x="63.5581%" y="597" width="0.1435%" height="15" fill="rgb(210,219,27)"/><text x="63.8081%" y="607.50"></text></g><g><title>__perf_event_task_sched_in (233 samples, 33.43%)</title><rect x="63.7016%" y="421" width="33.4290%" height="15" fill="rgb(252,166,36)"/><text x="63.9516%" y="431.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (233 samples, 33.43%)</title><rect x="63.7016%" y="405" width="33.4290%" height="15" fill="rgb(245,132,34)"/><text x="63.9516%" y="415.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (233 samples, 33.43%)</title><rect x="63.7016%" y="389" width="33.4290%" height="15" fill="rgb(236,54,3)"/><text x="63.9516%" y="399.50">native_write_msr</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 33.57%)</title><rect x="63.7016%" y="565" width="33.5725%" height="15" fill="rgb(241,173,43)"/><text x="63.9516%" y="575.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 33.57%)</title><rect x="63.7016%" y="549" width="33.5725%" height="15" fill="rgb(215,190,9)"/><text x="63.9516%" y="559.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 33.57%)</title><rect x="63.7016%" y="533" width="33.5725%" height="15" fill="rgb(242,101,16)"/><text x="63.9516%" y="543.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 33.57%)</title><rect x="63.7016%" y="517" width="33.5725%" height="15" fill="rgb(223,190,21)"/><text x="63.9516%" y="527.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 33.57%)</title><rect x="63.7016%" y="501" width="33.5725%" height="15" fill="rgb(215,228,25)"/><text x="63.9516%" y="511.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 33.57%)</title><rect x="63.7016%" y="485" width="33.5725%" height="15" fill="rgb(225,36,22)"/><text x="63.9516%" y="495.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 33.57%)</title><rect x="63.7016%" y="469" width="33.5725%" height="15" fill="rgb(251,106,46)"/><text x="63.9516%" y="479.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 33.57%)</title><rect x="63.7016%" y="453" width="33.5725%" height="15" fill="rgb(208,90,1)"/><text x="63.9516%" y="463.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 33.57%)</title><rect x="63.7016%" y="437" width="33.5725%" height="15" fill="rgb(243,10,4)"/><text x="63.9516%" y="447.50">finish_task_switch</text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.14%)</title><rect x="97.1306%" y="421" width="0.1435%" height="15" fill="rgb(212,137,27)"/><text x="97.3806%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (235 samples, 33.72%)</title><rect x="63.7016%" y="597" width="33.7159%" height="15" fill="rgb(231,220,49)"/><text x="63.9516%" y="607.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (235 samples, 33.72%)</title><rect x="63.7016%" y="581" width="33.7159%" height="15" fill="rgb(237,96,20)"/><text x="63.9516%" y="591.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.14%)</title><rect x="97.2740%" y="565" width="0.1435%" height="15" fill="rgb(239,229,30)"/><text x="97.5240%" y="575.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.14%)</title><rect x="97.2740%" y="549" width="0.1435%" height="15" fill="rgb(219,65,33)"/><text x="97.5240%" y="559.50"></text></g><g><title>hwloc::Topology::new (240 samples, 34.43%)</title><rect x="63.1277%" y="709" width="34.4333%" height="15" fill="rgb(243,134,7)"/><text x="63.3777%" y="719.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (240 samples, 34.43%)</title><rect x="63.1277%" y="693" width="34.4333%" height="15" fill="rgb(216,177,54)"/><text x="63.3777%" y="703.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 34.43%)</title><rect x="63.1277%" y="677" width="34.4333%" height="15" fill="rgb(211,160,20)"/><text x="63.3777%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 34.43%)</title><rect x="63.1277%" y="661" width="34.4333%" height="15" fill="rgb(239,85,39)"/><text x="63.3777%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (240 samples, 34.43%)</title><rect x="63.1277%" y="645" width="34.4333%" height="15" fill="rgb(232,125,22)"/><text x="63.3777%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (237 samples, 34.00%)</title><rect x="63.5581%" y="629" width="34.0029%" height="15" fill="rgb(244,57,34)"/><text x="63.8081%" y="639.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 34.00%)</title><rect x="63.5581%" y="613" width="34.0029%" height="15" fill="rgb(214,203,32)"/><text x="63.8081%" y="623.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (1 samples, 0.14%)</title><rect x="97.4175%" y="597" width="0.1435%" height="15" fill="rgb(207,58,43)"/><text x="97.6675%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="97.8479%" y="677" width="0.1435%" height="15" fill="rgb(215,193,15)"/><text x="98.0979%" y="687.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (4 samples, 0.57%)</title><rect x="97.5610%" y="709" width="0.5739%" height="15" fill="rgb(232,15,44)"/><text x="97.8110%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.57%)</title><rect x="97.5610%" y="693" width="0.5739%" height="15" fill="rgb(212,3,48)"/><text x="97.8110%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.14%)</title><rect x="97.9914%" y="677" width="0.1435%" height="15" fill="rgb(218,128,7)"/><text x="98.2414%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::clear (1 samples, 0.14%)</title><rect x="97.9914%" y="661" width="0.1435%" height="15" fill="rgb(226,216,39)"/><text x="98.2414%" y="671.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.14%)</title><rect x="98.1349%" y="709" width="0.1435%" height="15" fill="rgb(243,47,51)"/><text x="98.3849%" y="719.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.14%)</title><rect x="98.1349%" y="693" width="0.1435%" height="15" fill="rgb(241,183,40)"/><text x="98.3849%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.14%)</title><rect x="98.1349%" y="677" width="0.1435%" height="15" fill="rgb(231,217,32)"/><text x="98.3849%" y="687.50"></text></g><g><title>std::io::stdio::print_to::{{closure}} (1 samples, 0.14%)</title><rect x="98.1349%" y="661" width="0.1435%" height="15" fill="rgb(229,61,38)"/><text x="98.3849%" y="671.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.14%)</title><rect x="98.1349%" y="645" width="0.1435%" height="15" fill="rgb(225,210,5)"/><text x="98.3849%" y="655.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.14%)</title><rect x="98.1349%" y="629" width="0.1435%" height="15" fill="rgb(231,79,45)"/><text x="98.3849%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.14%)</title><rect x="98.1349%" y="613" width="0.1435%" height="15" fill="rgb(224,100,7)"/><text x="98.3849%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.14%)</title><rect x="98.1349%" y="597" width="0.1435%" height="15" fill="rgb(241,198,18)"/><text x="98.3849%" y="607.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.14%)</title><rect x="98.1349%" y="581" width="0.1435%" height="15" fill="rgb(252,97,53)"/><text x="98.3849%" y="591.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.14%)</title><rect x="98.1349%" y="565" width="0.1435%" height="15" fill="rgb(220,88,7)"/><text x="98.3849%" y="575.50"></text></g><g><title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.14%)</title><rect x="98.1349%" y="549" width="0.1435%" height="15" fill="rgb(213,176,14)"/><text x="98.3849%" y="559.50"></text></g><g><title>&lt;std::io::buffered::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.14%)</title><rect x="98.1349%" y="533" width="0.1435%" height="15" fill="rgb(246,73,7)"/><text x="98.3849%" y="543.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.14%)</title><rect x="98.1349%" y="517" width="0.1435%" height="15" fill="rgb(245,64,36)"/><text x="98.3849%" y="527.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="98.1349%" y="501" width="0.1435%" height="15" fill="rgb(245,80,10)"/><text x="98.3849%" y="511.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.14%)</title><rect x="98.1349%" y="485" width="0.1435%" height="15" fill="rgb(232,107,50)"/><text x="98.3849%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.14%)</title><rect x="98.1349%" y="469" width="0.1435%" height="15" fill="rgb(253,3,0)"/><text x="98.3849%" y="479.50"></text></g><g><title>__libc_write (1 samples, 0.14%)</title><rect x="98.1349%" y="453" width="0.1435%" height="15" fill="rgb(212,99,53)"/><text x="98.3849%" y="463.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.14%)</title><rect x="98.1349%" y="437" width="0.1435%" height="15" fill="rgb(249,111,54)"/><text x="98.3849%" y="447.50"></text></g><g><title>__libc_start_main (249 samples, 35.72%)</title><rect x="62.6973%" y="869" width="35.7245%" height="15" fill="rgb(249,55,30)"/><text x="62.9473%" y="879.50">__libc_start_main</text></g><g><title>main (248 samples, 35.58%)</title><rect x="62.8407%" y="853" width="35.5811%" height="15" fill="rgb(237,47,42)"/><text x="63.0907%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (248 samples, 35.58%)</title><rect x="62.8407%" y="837" width="35.5811%" height="15" fill="rgb(211,20,18)"/><text x="63.0907%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (248 samples, 35.58%)</title><rect x="62.8407%" y="821" width="35.5811%" height="15" fill="rgb(231,203,46)"/><text x="63.0907%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (248 samples, 35.58%)</title><rect x="62.8407%" y="805" width="35.5811%" height="15" fill="rgb(237,142,3)"/><text x="63.0907%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (248 samples, 35.58%)</title><rect x="62.8407%" y="789" width="35.5811%" height="15" fill="rgb(241,107,1)"/><text x="63.0907%" y="799.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (248 samples, 35.58%)</title><rect x="62.8407%" y="773" width="35.5811%" height="15" fill="rgb(229,83,13)"/><text x="63.0907%" y="783.50">core::ops::function::impls::&lt;impl core::ops::function::FnO..</text></g><g><title>std::rt::lang_start::_{{closure}} (248 samples, 35.58%)</title><rect x="62.8407%" y="757" width="35.5811%" height="15" fill="rgb(241,91,40)"/><text x="63.0907%" y="767.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (248 samples, 35.58%)</title><rect x="62.8407%" y="741" width="35.5811%" height="15" fill="rgb(225,3,45)"/><text x="63.0907%" y="751.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lobsters::main (248 samples, 35.58%)</title><rect x="62.8407%" y="725" width="35.5811%" height="15" fill="rgb(244,223,14)"/><text x="63.0907%" y="735.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.14%)</title><rect x="98.2783%" y="709" width="0.1435%" height="15" fill="rgb(224,124,37)"/><text x="98.5283%" y="719.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.14%)</title><rect x="98.2783%" y="693" width="0.1435%" height="15" fill="rgb(251,171,30)"/><text x="98.5283%" y="703.50"></text></g><g><title>std::sys_common::net::setsockopt (1 samples, 0.14%)</title><rect x="98.2783%" y="677" width="0.1435%" height="15" fill="rgb(236,46,54)"/><text x="98.5283%" y="687.50"></text></g><g><title>__setsockopt (1 samples, 0.14%)</title><rect x="98.2783%" y="661" width="0.1435%" height="15" fill="rgb(245,213,5)"/><text x="98.5283%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.2783%" y="645" width="0.1435%" height="15" fill="rgb(230,144,27)"/><text x="98.5283%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="98.2783%" y="629" width="0.1435%" height="15" fill="rgb(220,86,6)"/><text x="98.5283%" y="639.50"></text></g><g><title>__x64_sys_setsockopt (1 samples, 0.14%)</title><rect x="98.2783%" y="613" width="0.1435%" height="15" fill="rgb(240,20,13)"/><text x="98.5283%" y="623.50"></text></g><g><title>__sys_setsockopt (1 samples, 0.14%)</title><rect x="98.2783%" y="597" width="0.1435%" height="15" fill="rgb(217,89,34)"/><text x="98.5283%" y="607.50"></text></g><g><title>sock_setsockopt (1 samples, 0.14%)</title><rect x="98.2783%" y="581" width="0.1435%" height="15" fill="rgb(229,13,5)"/><text x="98.5283%" y="591.50"></text></g><g><title>_start (250 samples, 35.87%)</title><rect x="62.6973%" y="885" width="35.8680%" height="15" fill="rgb(244,67,35)"/><text x="62.9473%" y="895.50">_start</text></g><g><title>_dl_start (1 samples, 0.14%)</title><rect x="98.4218%" y="869" width="0.1435%" height="15" fill="rgb(221,40,2)"/><text x="98.6718%" y="879.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.14%)</title><rect x="98.4218%" y="853" width="0.1435%" height="15" fill="rgb(237,157,21)"/><text x="98.6718%" y="863.50"></text></g><g><title>dl_main (1 samples, 0.14%)</title><rect x="98.4218%" y="837" width="0.1435%" height="15" fill="rgb(222,94,11)"/><text x="98.6718%" y="847.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.14%)</title><rect x="98.4218%" y="821" width="0.1435%" height="15" fill="rgb(249,113,6)"/><text x="98.6718%" y="831.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.14%)</title><rect x="98.4218%" y="805" width="0.1435%" height="15" fill="rgb(238,137,36)"/><text x="98.6718%" y="815.50"></text></g><g><title>openaux (1 samples, 0.14%)</title><rect x="98.4218%" y="789" width="0.1435%" height="15" fill="rgb(210,102,26)"/><text x="98.6718%" y="799.50"></text></g><g><title>_dl_map_object (1 samples, 0.14%)</title><rect x="98.4218%" y="773" width="0.1435%" height="15" fill="rgb(218,30,30)"/><text x="98.6718%" y="783.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.14%)</title><rect x="98.4218%" y="757" width="0.1435%" height="15" fill="rgb(214,67,26)"/><text x="98.6718%" y="767.50"></text></g><g><title>__mprotect (1 samples, 0.14%)</title><rect x="98.4218%" y="741" width="0.1435%" height="15" fill="rgb(251,9,53)"/><text x="98.6718%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.14%)</title><rect x="98.4218%" y="725" width="0.1435%" height="15" fill="rgb(228,204,25)"/><text x="98.6718%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="98.4218%" y="709" width="0.1435%" height="15" fill="rgb(207,153,8)"/><text x="98.6718%" y="719.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.14%)</title><rect x="98.4218%" y="693" width="0.1435%" height="15" fill="rgb(242,9,16)"/><text x="98.6718%" y="703.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.14%)</title><rect x="98.4218%" y="677" width="0.1435%" height="15" fill="rgb(217,211,10)"/><text x="98.6718%" y="687.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="98.4218%" y="661" width="0.1435%" height="15" fill="rgb(219,228,52)"/><text x="98.6718%" y="671.50"></text></g><g><title>__split_vma (1 samples, 0.14%)</title><rect x="98.4218%" y="645" width="0.1435%" height="15" fill="rgb(231,92,29)"/><text x="98.6718%" y="655.50"></text></g><g><title>__vma_adjust (1 samples, 0.14%)</title><rect x="98.4218%" y="629" width="0.1435%" height="15" fill="rgb(232,8,23)"/><text x="98.6718%" y="639.50"></text></g><g><title>vma_interval_tree_insert (1 samples, 0.14%)</title><rect x="98.4218%" y="613" width="0.1435%" height="15" fill="rgb(216,211,34)"/><text x="98.6718%" y="623.50"></text></g><g><title>[vmlinux] (1 samples, 0.14%)</title><rect x="98.8522%" y="853" width="0.1435%" height="15" fill="rgb(236,151,0)"/><text x="99.1022%" y="863.50"></text></g><g><title>do_group_exit (1 samples, 0.14%)</title><rect x="98.8522%" y="837" width="0.1435%" height="15" fill="rgb(209,168,3)"/><text x="99.1022%" y="847.50"></text></g><g><title>do_exit (1 samples, 0.14%)</title><rect x="98.8522%" y="821" width="0.1435%" height="15" fill="rgb(208,129,28)"/><text x="99.1022%" y="831.50"></text></g><g><title>mmput (1 samples, 0.14%)</title><rect x="98.8522%" y="805" width="0.1435%" height="15" fill="rgb(229,78,22)"/><text x="99.1022%" y="815.50"></text></g><g><title>exit_mmap (1 samples, 0.14%)</title><rect x="98.8522%" y="789" width="0.1435%" height="15" fill="rgb(228,187,13)"/><text x="99.1022%" y="799.50"></text></g><g><title>unmap_vmas (1 samples, 0.14%)</title><rect x="98.8522%" y="773" width="0.1435%" height="15" fill="rgb(240,119,24)"/><text x="99.1022%" y="783.50"></text></g><g><title>unmap_page_range (1 samples, 0.14%)</title><rect x="98.8522%" y="757" width="0.1435%" height="15" fill="rgb(209,194,42)"/><text x="99.1022%" y="767.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.14%)</title><rect x="98.8522%" y="741" width="0.1435%" height="15" fill="rgb(247,200,46)"/><text x="99.1022%" y="751.50"></text></g><g><title>lobsters (691 samples, 99.14%)</title><rect x="0.0000%" y="901" width="99.1392%" height="15" fill="rgb(218,76,16)"/><text x="0.2500%" y="911.50">lobsters</text></g><g><title>entry_SYSCALL_64 (4 samples, 0.57%)</title><rect x="98.5653%" y="885" width="0.5739%" height="15" fill="rgb(225,21,48)"/><text x="98.8153%" y="895.50"></text></g><g><title>do_syscall_64 (2 samples, 0.29%)</title><rect x="98.8522%" y="869" width="0.2869%" height="15" fill="rgb(239,223,50)"/><text x="99.1022%" y="879.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="98.9957%" y="853" width="0.1435%" height="15" fill="rgb(244,45,21)"/><text x="99.2457%" y="863.50"></text></g><g><title>do_execve (1 samples, 0.14%)</title><rect x="98.9957%" y="837" width="0.1435%" height="15" fill="rgb(232,33,43)"/><text x="99.2457%" y="847.50"></text></g><g><title>__do_execve_file (1 samples, 0.14%)</title><rect x="98.9957%" y="821" width="0.1435%" height="15" fill="rgb(209,8,3)"/><text x="99.2457%" y="831.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.14%)</title><rect x="98.9957%" y="805" width="0.1435%" height="15" fill="rgb(214,25,53)"/><text x="99.2457%" y="815.50"></text></g><g><title>load_elf_binary (1 samples, 0.14%)</title><rect x="98.9957%" y="789" width="0.1435%" height="15" fill="rgb(254,186,54)"/><text x="99.2457%" y="799.50"></text></g><g><title>__clear_user (1 samples, 0.14%)</title><rect x="98.9957%" y="773" width="0.1435%" height="15" fill="rgb(208,174,49)"/><text x="99.2457%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.14%)</title><rect x="98.9957%" y="757" width="0.1435%" height="15" fill="rgb(233,191,51)"/><text x="99.2457%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="98.9957%" y="741" width="0.1435%" height="15" fill="rgb(222,134,10)"/><text x="99.2457%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="98.9957%" y="725" width="0.1435%" height="15" fill="rgb(230,226,20)"/><text x="99.2457%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="98.9957%" y="709" width="0.1435%" height="15" fill="rgb(251,111,25)"/><text x="99.2457%" y="719.50"></text></g><g><title>__pud_alloc (1 samples, 0.14%)</title><rect x="98.9957%" y="693" width="0.1435%" height="15" fill="rgb(224,40,46)"/><text x="99.2457%" y="703.50"></text></g><g><title>get_zeroed_page (1 samples, 0.14%)</title><rect x="98.9957%" y="677" width="0.1435%" height="15" fill="rgb(236,108,47)"/><text x="99.2457%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="98.9957%" y="661" width="0.1435%" height="15" fill="rgb(234,93,0)"/><text x="99.2457%" y="671.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.14%)</title><rect x="98.9957%" y="645" width="0.1435%" height="15" fill="rgb(224,213,32)"/><text x="99.2457%" y="655.50"></text></g><g><title>__memcg_kmem_charge (1 samples, 0.14%)</title><rect x="98.9957%" y="629" width="0.1435%" height="15" fill="rgb(251,11,48)"/><text x="99.2457%" y="639.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.14%)</title><rect x="98.9957%" y="613" width="0.1435%" height="15" fill="rgb(236,173,5)"/><text x="99.2457%" y="623.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.14%)</title><rect x="98.9957%" y="597" width="0.1435%" height="15" fill="rgb(230,95,12)"/><text x="99.2457%" y="607.50"></text></g><g><title>all (697 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(232,209,1)"/><text x="0.2500%" y="927.50"></text></g><g><title>perf (6 samples, 0.86%)</title><rect x="99.1392%" y="901" width="0.8608%" height="15" fill="rgb(232,6,1)"/><text x="99.3892%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.86%)</title><rect x="99.1392%" y="885" width="0.8608%" height="15" fill="rgb(210,224,50)"/><text x="99.3892%" y="895.50"></text></g><g><title>do_syscall_64 (6 samples, 0.86%)</title><rect x="99.1392%" y="869" width="0.8608%" height="15" fill="rgb(228,127,35)"/><text x="99.3892%" y="879.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.86%)</title><rect x="99.1392%" y="853" width="0.8608%" height="15" fill="rgb(245,102,45)"/><text x="99.3892%" y="863.50"></text></g><g><title>do_execve (6 samples, 0.86%)</title><rect x="99.1392%" y="837" width="0.8608%" height="15" fill="rgb(214,1,49)"/><text x="99.3892%" y="847.50"></text></g><g><title>__do_execve_file (6 samples, 0.86%)</title><rect x="99.1392%" y="821" width="0.8608%" height="15" fill="rgb(226,163,40)"/><text x="99.3892%" y="831.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.86%)</title><rect x="99.1392%" y="805" width="0.8608%" height="15" fill="rgb(239,212,28)"/><text x="99.3892%" y="815.50"></text></g><g><title>load_elf_binary (6 samples, 0.86%)</title><rect x="99.1392%" y="789" width="0.8608%" height="15" fill="rgb(220,20,13)"/><text x="99.3892%" y="799.50"></text></g><g><title>setup_new_exec (6 samples, 0.86%)</title><rect x="99.1392%" y="773" width="0.8608%" height="15" fill="rgb(210,164,35)"/><text x="99.3892%" y="783.50"></text></g><g><title>perf_event_exec (6 samples, 0.86%)</title><rect x="99.1392%" y="757" width="0.8608%" height="15" fill="rgb(248,109,41)"/><text x="99.3892%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.72%)</title><rect x="99.2826%" y="741" width="0.7174%" height="15" fill="rgb(238,23,50)"/><text x="99.5326%" y="751.50"></text></g><g><title>native_write_msr (5 samples, 0.72%)</title><rect x="99.2826%" y="725" width="0.7174%" height="15" fill="rgb(211,48,49)"/><text x="99.5326%" y="735.50"></text></g></svg></svg>