<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="885.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="885.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.58%)</title><rect x="0.0724%" y="805" width="0.5793%" height="15" fill="rgb(227,0,7)"/><text x="0.3224%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.22%)</title><rect x="0.6517%" y="805" width="0.2172%" height="15" fill="rgb(217,0,24)"/><text x="0.9017%" y="815.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="1.1586%" y="805" width="0.1448%" height="15" fill="rgb(221,193,54)"/><text x="1.4086%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="1.3034%" y="805" width="0.1448%" height="15" fill="rgb(248,212,6)"/><text x="1.5534%" y="815.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.58%)</title><rect x="1.4482%" y="805" width="0.5793%" height="15" fill="rgb(208,68,35)"/><text x="1.6982%" y="815.50"></text></g><g><title>__libc_send (2 samples, 0.14%)</title><rect x="2.0275%" y="805" width="0.1448%" height="15" fill="rgb(232,128,0)"/><text x="2.2775%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.14%)</title><rect x="2.0275%" y="789" width="0.1448%" height="15" fill="rgb(207,160,47)"/><text x="2.2775%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.51%)</title><rect x="2.1723%" y="805" width="0.5069%" height="15" fill="rgb(228,23,34)"/><text x="2.4223%" y="815.50"></text></g><g><title>__rdl_realloc (6 samples, 0.43%)</title><rect x="2.7516%" y="805" width="0.4345%" height="15" fill="rgb(218,30,26)"/><text x="3.0016%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.43%)</title><rect x="2.7516%" y="789" width="0.4345%" height="15" fill="rgb(220,122,19)"/><text x="3.0016%" y="799.50"></text></g><g><title>_int_free (4 samples, 0.29%)</title><rect x="3.1861%" y="805" width="0.2896%" height="15" fill="rgb(250,228,42)"/><text x="3.4361%" y="815.50"></text></g><g><title>_int_malloc (4 samples, 0.29%)</title><rect x="3.4757%" y="805" width="0.2896%" height="15" fill="rgb(240,193,28)"/><text x="3.7257%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 1.30%)</title><rect x="3.8378%" y="805" width="1.3034%" height="15" fill="rgb(216,20,37)"/><text x="4.0878%" y="815.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.14%)</title><rect x="5.3584%" y="805" width="0.1448%" height="15" fill="rgb(206,188,39)"/><text x="5.6084%" y="815.50"></text></g><g><title>core::fmt::write (5 samples, 0.36%)</title><rect x="5.5033%" y="805" width="0.3621%" height="15" fill="rgb(217,207,13)"/><text x="5.7533%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.22%)</title><rect x="5.8653%" y="805" width="0.2172%" height="15" fill="rgb(231,73,38)"/><text x="6.1153%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.14%)</title><rect x="6.0825%" y="805" width="0.1448%" height="15" fill="rgb(225,20,46)"/><text x="6.3325%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (2 samples, 0.14%)</title><rect x="6.3722%" y="805" width="0.1448%" height="15" fill="rgb(210,31,41)"/><text x="6.6222%" y="815.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.14%)</title><rect x="6.8067%" y="805" width="0.1448%" height="15" fill="rgb(221,200,47)"/><text x="7.0567%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.14%)</title><rect x="7.0963%" y="805" width="0.1448%" height="15" fill="rgb(226,26,5)"/><text x="7.3463%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.36%)</title><rect x="7.3135%" y="805" width="0.3621%" height="15" fill="rgb(249,33,26)"/><text x="7.5635%" y="815.50"></text></g><g><title>[anon] (106 samples, 7.68%)</title><rect x="0.0724%" y="821" width="7.6756%" height="15" fill="rgb(235,183,28)"/><text x="0.3224%" y="831.50">[anon]</text></g><g><title>__GI___libc_malloc (4 samples, 0.29%)</title><rect x="7.8928%" y="805" width="0.2896%" height="15" fill="rgb(221,5,38)"/><text x="8.1428%" y="815.50"></text></g><g><title>_int_free (3 samples, 0.22%)</title><rect x="8.1825%" y="805" width="0.2172%" height="15" fill="rgb(247,18,42)"/><text x="8.4325%" y="815.50"></text></g><g><title>_int_realloc (7 samples, 0.51%)</title><rect x="8.3997%" y="805" width="0.5069%" height="15" fill="rgb(241,131,45)"/><text x="8.6497%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.22%)</title><rect x="8.9066%" y="805" width="0.2172%" height="15" fill="rgb(249,31,29)"/><text x="9.1566%" y="815.50"></text></g><g><title>[lobsters] (20 samples, 1.45%)</title><rect x="7.7480%" y="821" width="1.4482%" height="15" fill="rgb(225,111,53)"/><text x="7.9980%" y="831.50"></text></g><g><title>release_sock (2 samples, 0.14%)</title><rect x="10.1376%" y="549" width="0.1448%" height="15" fill="rgb(238,160,17)"/><text x="10.3876%" y="559.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.14%)</title><rect x="10.9341%" y="421" width="0.1448%" height="15" fill="rgb(214,148,48)"/><text x="11.1841%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.14%)</title><rect x="10.9341%" y="405" width="0.1448%" height="15" fill="rgb(232,36,49)"/><text x="11.1841%" y="415.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.22%)</title><rect x="10.9341%" y="437" width="0.2172%" height="15" fill="rgb(209,103,24)"/><text x="11.1841%" y="447.50"></text></g><g><title>enqueue_task (3 samples, 0.22%)</title><rect x="11.9479%" y="133" width="0.2172%" height="15" fill="rgb(229,88,8)"/><text x="12.1979%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.14%)</title><rect x="12.0203%" y="117" width="0.1448%" height="15" fill="rgb(213,181,19)"/><text x="12.2703%" y="127.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.22%)</title><rect x="12.2375%" y="133" width="0.2172%" height="15" fill="rgb(254,191,54)"/><text x="12.4875%" y="143.50"></text></g><g><title>sock_def_readable (9 samples, 0.65%)</title><rect x="11.8755%" y="213" width="0.6517%" height="15" fill="rgb(241,83,37)"/><text x="12.1255%" y="223.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.65%)</title><rect x="11.8755%" y="197" width="0.6517%" height="15" fill="rgb(233,36,39)"/><text x="12.1255%" y="207.50"></text></g><g><title>__wake_up_common (9 samples, 0.65%)</title><rect x="11.8755%" y="181" width="0.6517%" height="15" fill="rgb(226,3,54)"/><text x="12.1255%" y="191.50"></text></g><g><title>pollwake (8 samples, 0.58%)</title><rect x="11.9479%" y="165" width="0.5793%" height="15" fill="rgb(245,192,40)"/><text x="12.1979%" y="175.50"></text></g><g><title>try_to_wake_up (8 samples, 0.58%)</title><rect x="11.9479%" y="149" width="0.5793%" height="15" fill="rgb(238,167,29)"/><text x="12.1979%" y="159.50"></text></g><g><title>kfree (2 samples, 0.14%)</title><rect x="12.8168%" y="181" width="0.1448%" height="15" fill="rgb(232,182,51)"/><text x="13.0668%" y="191.50"></text></g><g><title>__slab_free (2 samples, 0.14%)</title><rect x="12.8168%" y="165" width="0.1448%" height="15" fill="rgb(231,60,39)"/><text x="13.0668%" y="175.50"></text></g><g><title>__kfree_skb (4 samples, 0.29%)</title><rect x="12.8168%" y="197" width="0.2896%" height="15" fill="rgb(208,69,12)"/><text x="13.0668%" y="207.50"></text></g><g><title>skb_release_data (2 samples, 0.14%)</title><rect x="12.9616%" y="181" width="0.1448%" height="15" fill="rgb(235,93,37)"/><text x="13.2116%" y="191.50"></text></g><g><title>tcp_ack (14 samples, 1.01%)</title><rect x="12.5272%" y="213" width="1.0138%" height="15" fill="rgb(213,116,39)"/><text x="12.7772%" y="223.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.14%)</title><rect x="13.6857%" y="213" width="0.1448%" height="15" fill="rgb(222,207,29)"/><text x="13.9357%" y="223.50"></text></g><g><title>ip_local_deliver (33 samples, 2.39%)</title><rect x="11.5134%" y="309" width="2.3896%" height="15" fill="rgb(206,96,30)"/><text x="11.7634%" y="319.50">ip..</text></g><g><title>ip_local_deliver_finish (33 samples, 2.39%)</title><rect x="11.5134%" y="293" width="2.3896%" height="15" fill="rgb(218,138,4)"/><text x="11.7634%" y="303.50">ip..</text></g><g><title>ip_protocol_deliver_rcu (31 samples, 2.24%)</title><rect x="11.6582%" y="277" width="2.2448%" height="15" fill="rgb(250,191,14)"/><text x="11.9082%" y="287.50">i..</text></g><g><title>tcp_v4_rcv (31 samples, 2.24%)</title><rect x="11.6582%" y="261" width="2.2448%" height="15" fill="rgb(239,60,40)"/><text x="11.9082%" y="271.50">t..</text></g><g><title>tcp_v4_do_rcv (29 samples, 2.10%)</title><rect x="11.8030%" y="245" width="2.0999%" height="15" fill="rgb(206,27,48)"/><text x="12.0530%" y="255.50">t..</text></g><g><title>tcp_rcv_established (29 samples, 2.10%)</title><rect x="11.8030%" y="229" width="2.0999%" height="15" fill="rgb(225,35,8)"/><text x="12.0530%" y="239.50">t..</text></g><g><title>__netif_receive_skb_one_core (35 samples, 2.53%)</title><rect x="11.4410%" y="341" width="2.5344%" height="15" fill="rgb(250,213,24)"/><text x="11.6910%" y="351.50">__..</text></g><g><title>ip_rcv (35 samples, 2.53%)</title><rect x="11.4410%" y="325" width="2.5344%" height="15" fill="rgb(247,123,22)"/><text x="11.6910%" y="335.50">ip..</text></g><g><title>__ip_queue_xmit (47 samples, 3.40%)</title><rect x="10.6445%" y="485" width="3.4033%" height="15" fill="rgb(231,138,38)"/><text x="10.8945%" y="495.50">__i..</text></g><g><title>ip_output (45 samples, 3.26%)</title><rect x="10.7893%" y="469" width="3.2585%" height="15" fill="rgb(231,145,46)"/><text x="11.0393%" y="479.50">ip_..</text></g><g><title>ip_finish_output2 (45 samples, 3.26%)</title><rect x="10.7893%" y="453" width="3.2585%" height="15" fill="rgb(251,118,11)"/><text x="11.0393%" y="463.50">ip_..</text></g><g><title>__local_bh_enable_ip (40 samples, 2.90%)</title><rect x="11.1513%" y="437" width="2.8965%" height="15" fill="rgb(217,147,25)"/><text x="11.4013%" y="447.50">__..</text></g><g><title>do_softirq (40 samples, 2.90%)</title><rect x="11.1513%" y="421" width="2.8965%" height="15" fill="rgb(247,81,37)"/><text x="11.4013%" y="431.50">do..</text></g><g><title>do_softirq_own_stack (40 samples, 2.90%)</title><rect x="11.1513%" y="405" width="2.8965%" height="15" fill="rgb(209,12,38)"/><text x="11.4013%" y="415.50">do..</text></g><g><title>__do_softirq (40 samples, 2.90%)</title><rect x="11.1513%" y="389" width="2.8965%" height="15" fill="rgb(227,1,9)"/><text x="11.4013%" y="399.50">__..</text></g><g><title>net_rx_action (39 samples, 2.82%)</title><rect x="11.2238%" y="373" width="2.8240%" height="15" fill="rgb(248,47,43)"/><text x="11.4738%" y="383.50">ne..</text></g><g><title>process_backlog (36 samples, 2.61%)</title><rect x="11.4410%" y="357" width="2.6068%" height="15" fill="rgb(221,10,30)"/><text x="11.6910%" y="367.50">pr..</text></g><g><title>__tcp_transmit_skb (53 samples, 3.84%)</title><rect x="10.4272%" y="501" width="3.8378%" height="15" fill="rgb(210,229,1)"/><text x="10.6772%" y="511.50">__tc..</text></g><g><title>tcp_update_skb_after_send (2 samples, 0.14%)</title><rect x="14.1202%" y="485" width="0.1448%" height="15" fill="rgb(222,148,37)"/><text x="14.3702%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (59 samples, 4.27%)</title><rect x="10.3548%" y="533" width="4.2723%" height="15" fill="rgb(234,67,33)"/><text x="10.6048%" y="543.50">__tcp..</text></g><g><title>tcp_write_xmit (59 samples, 4.27%)</title><rect x="10.3548%" y="517" width="4.2723%" height="15" fill="rgb(247,98,35)"/><text x="10.6048%" y="527.50">tcp_w..</text></g><g><title>tcp_event_new_data_sent (4 samples, 0.29%)</title><rect x="14.3374%" y="501" width="0.2896%" height="15" fill="rgb(247,138,52)"/><text x="14.5874%" y="511.50"></text></g><g><title>tcp_rearm_rto (3 samples, 0.22%)</title><rect x="14.4098%" y="485" width="0.2172%" height="15" fill="rgb(213,79,30)"/><text x="14.6598%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.29%)</title><rect x="14.6995%" y="533" width="0.2896%" height="15" fill="rgb(246,177,23)"/><text x="14.9495%" y="543.50"></text></g><g><title>__alloc_skb (4 samples, 0.29%)</title><rect x="14.6995%" y="517" width="0.2896%" height="15" fill="rgb(230,62,27)"/><text x="14.9495%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.22%)</title><rect x="14.7719%" y="501" width="0.2172%" height="15" fill="rgb(216,154,8)"/><text x="15.0219%" y="511.50"></text></g><g><title>sock_sendmsg (68 samples, 4.92%)</title><rect x="10.1376%" y="581" width="4.9240%" height="15" fill="rgb(244,35,45)"/><text x="10.3876%" y="591.50">sock_s..</text></g><g><title>tcp_sendmsg (68 samples, 4.92%)</title><rect x="10.1376%" y="565" width="4.9240%" height="15" fill="rgb(251,115,12)"/><text x="10.3876%" y="575.50">tcp_se..</text></g><g><title>tcp_sendmsg_locked (66 samples, 4.78%)</title><rect x="10.2824%" y="549" width="4.7791%" height="15" fill="rgb(240,54,50)"/><text x="10.5324%" y="559.50">tcp_se..</text></g><g><title>__x64_sys_sendto (72 samples, 5.21%)</title><rect x="10.0652%" y="613" width="5.2136%" height="15" fill="rgb(233,84,52)"/><text x="10.3152%" y="623.50">__x64_..</text></g><g><title>__sys_sendto (72 samples, 5.21%)</title><rect x="10.0652%" y="597" width="5.2136%" height="15" fill="rgb(207,117,47)"/><text x="10.3152%" y="607.50">__sys_..</text></g><g><title>sockfd_lookup_light (3 samples, 0.22%)</title><rect x="15.0615%" y="581" width="0.2172%" height="15" fill="rgb(249,43,39)"/><text x="15.3115%" y="591.50"></text></g><g><title>__fget_light (2 samples, 0.14%)</title><rect x="15.1340%" y="565" width="0.1448%" height="15" fill="rgb(209,38,44)"/><text x="15.3840%" y="575.50"></text></g><g><title>do_syscall_64 (74 samples, 5.36%)</title><rect x="10.0652%" y="629" width="5.3584%" height="15" fill="rgb(236,212,23)"/><text x="10.3152%" y="639.50">do_sysc..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.14%)</title><rect x="15.2788%" y="613" width="0.1448%" height="15" fill="rgb(242,79,21)"/><text x="15.5288%" y="623.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.14%)</title><rect x="15.2788%" y="597" width="0.1448%" height="15" fill="rgb(211,96,35)"/><text x="15.5288%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (76 samples, 5.50%)</title><rect x="10.0652%" y="645" width="5.5033%" height="15" fill="rgb(253,215,40)"/><text x="10.3152%" y="655.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="15.4236%" y="629" width="0.1448%" height="15" fill="rgb(211,81,21)"/><text x="15.6736%" y="639.50"></text></g><g><title>__libc_send (78 samples, 5.65%)</title><rect x="10.0652%" y="661" width="5.6481%" height="15" fill="rgb(208,190,38)"/><text x="10.3152%" y="671.50">__libc_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.14%)</title><rect x="15.5684%" y="645" width="0.1448%" height="15" fill="rgb(235,213,38)"/><text x="15.8184%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (79 samples, 5.72%)</title><rect x="10.0652%" y="693" width="5.7205%" height="15" fill="rgb(237,122,38)"/><text x="10.3152%" y="703.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::write (79 samples, 5.72%)</title><rect x="10.0652%" y="677" width="5.7205%" height="15" fill="rgb(244,218,35)"/><text x="10.3152%" y="687.50">std::sy..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (84 samples, 6.08%)</title><rect x="9.7755%" y="757" width="6.0825%" height="15" fill="rgb(240,68,47)"/><text x="10.0255%" y="767.50">&lt;mysql::..</text></g><g><title>mysql::conn::Conn::_query (83 samples, 6.01%)</title><rect x="9.8479%" y="741" width="6.0101%" height="15" fill="rgb(210,16,53)"/><text x="10.0979%" y="751.50">mysql::c..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (82 samples, 5.94%)</title><rect x="9.9203%" y="725" width="5.9377%" height="15" fill="rgb(235,124,12)"/><text x="10.1703%" y="735.50">mysql_co..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (81 samples, 5.87%)</title><rect x="9.9928%" y="709" width="5.8653%" height="15" fill="rgb(224,169,11)"/><text x="10.2428%" y="719.50">std::io..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="16.0753%" y="725" width="0.1448%" height="15" fill="rgb(250,166,2)"/><text x="16.3253%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (10 samples, 0.72%)</title><rect x="15.9305%" y="757" width="0.7241%" height="15" fill="rgb(242,216,29)"/><text x="16.1805%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.58%)</title><rect x="16.0753%" y="741" width="0.5793%" height="15" fill="rgb(230,116,27)"/><text x="16.3253%" y="751.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.43%)</title><rect x="16.2201%" y="725" width="0.4345%" height="15" fill="rgb(228,99,48)"/><text x="16.4701%" y="735.50"></text></g><g><title>_int_malloc (4 samples, 0.29%)</title><rect x="16.3650%" y="709" width="0.2896%" height="15" fill="rgb(253,11,6)"/><text x="16.6150%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="16.6546%" y="757" width="0.1448%" height="15" fill="rgb(247,143,39)"/><text x="16.9046%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="16.9442%" y="741" width="0.1448%" height="15" fill="rgb(236,97,10)"/><text x="17.1942%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.29%)</title><rect x="16.8718%" y="757" width="0.2896%" height="15" fill="rgb(233,208,19)"/><text x="17.1218%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.22%)</title><rect x="17.1615%" y="757" width="0.2172%" height="15" fill="rgb(216,164,2)"/><text x="17.4115%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.22%)</title><rect x="17.1615%" y="741" width="0.2172%" height="15" fill="rgb(220,129,5)"/><text x="17.4115%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="17.2339%" y="725" width="0.1448%" height="15" fill="rgb(242,17,10)"/><text x="17.4839%" y="735.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="17.2339%" y="709" width="0.1448%" height="15" fill="rgb(242,107,0)"/><text x="17.4839%" y="719.50"></text></g><g><title>sysmalloc (2 samples, 0.14%)</title><rect x="17.2339%" y="693" width="0.1448%" height="15" fill="rgb(251,28,31)"/><text x="17.4839%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.14%)</title><rect x="17.5235%" y="741" width="0.1448%" height="15" fill="rgb(233,223,10)"/><text x="17.7735%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="17.5235%" y="725" width="0.1448%" height="15" fill="rgb(215,21,27)"/><text x="17.7735%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.14%)</title><rect x="17.5235%" y="709" width="0.1448%" height="15" fill="rgb(232,23,21)"/><text x="17.7735%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="17.5235%" y="693" width="0.1448%" height="15" fill="rgb(244,5,23)"/><text x="17.7735%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="17.5235%" y="677" width="0.1448%" height="15" fill="rgb(226,81,46)"/><text x="17.7735%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="17.5235%" y="661" width="0.1448%" height="15" fill="rgb(247,70,30)"/><text x="17.7735%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="17.5235%" y="645" width="0.1448%" height="15" fill="rgb(212,68,19)"/><text x="17.7735%" y="655.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.14%)</title><rect x="17.7408%" y="677" width="0.1448%" height="15" fill="rgb(240,187,13)"/><text x="17.9908%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.14%)</title><rect x="17.7408%" y="661" width="0.1448%" height="15" fill="rgb(223,113,26)"/><text x="17.9908%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.51%)</title><rect x="17.6684%" y="725" width="0.5069%" height="15" fill="rgb(206,192,2)"/><text x="17.9184%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.51%)</title><rect x="17.6684%" y="709" width="0.5069%" height="15" fill="rgb(241,108,4)"/><text x="17.9184%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.43%)</title><rect x="17.7408%" y="693" width="0.4345%" height="15" fill="rgb(247,173,49)"/><text x="17.9908%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.29%)</title><rect x="17.8856%" y="677" width="0.2896%" height="15" fill="rgb(224,114,35)"/><text x="18.1356%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="18.0304%" y="661" width="0.1448%" height="15" fill="rgb(245,159,27)"/><text x="18.2804%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="18.0304%" y="645" width="0.1448%" height="15" fill="rgb(245,172,44)"/><text x="18.2804%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (8 samples, 0.58%)</title><rect x="17.6684%" y="741" width="0.5793%" height="15" fill="rgb(236,23,11)"/><text x="17.9184%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="18.2476%" y="725" width="0.1448%" height="15" fill="rgb(205,117,38)"/><text x="18.4976%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="18.2476%" y="709" width="0.1448%" height="15" fill="rgb(237,72,25)"/><text x="18.4976%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="18.2476%" y="693" width="0.1448%" height="15" fill="rgb(244,70,9)"/><text x="18.4976%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="18.2476%" y="677" width="0.1448%" height="15" fill="rgb(217,125,39)"/><text x="18.4976%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="18.6097%" y="693" width="0.2172%" height="15" fill="rgb(235,36,10)"/><text x="18.8597%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="18.6097%" y="677" width="0.2172%" height="15" fill="rgb(251,123,47)"/><text x="18.8597%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.22%)</title><rect x="18.6097%" y="661" width="0.2172%" height="15" fill="rgb(221,13,13)"/><text x="18.8597%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.22%)</title><rect x="18.6097%" y="645" width="0.2172%" height="15" fill="rgb(238,131,9)"/><text x="18.8597%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="18.6821%" y="629" width="0.1448%" height="15" fill="rgb(211,50,8)"/><text x="18.9321%" y="639.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="18.8269%" y="645" width="0.1448%" height="15" fill="rgb(245,182,24)"/><text x="19.0769%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.36%)</title><rect x="18.8269%" y="693" width="0.3621%" height="15" fill="rgb(242,14,37)"/><text x="19.0769%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.36%)</title><rect x="18.8269%" y="677" width="0.3621%" height="15" fill="rgb(246,228,12)"/><text x="19.0769%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.36%)</title><rect x="18.8269%" y="661" width="0.3621%" height="15" fill="rgb(213,55,15)"/><text x="19.0769%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.22%)</title><rect x="18.9718%" y="645" width="0.2172%" height="15" fill="rgb(209,9,3)"/><text x="19.2218%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="19.0442%" y="629" width="0.1448%" height="15" fill="rgb(230,59,30)"/><text x="19.2942%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="19.0442%" y="613" width="0.1448%" height="15" fill="rgb(209,121,21)"/><text x="19.2942%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.16%)</title><rect x="18.3925%" y="709" width="1.1586%" height="15" fill="rgb(220,109,13)"/><text x="18.6425%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.36%)</title><rect x="19.1890%" y="693" width="0.3621%" height="15" fill="rgb(232,18,1)"/><text x="19.4390%" y="703.50"></text></g><g><title>core::fmt::write (3 samples, 0.22%)</title><rect x="19.3338%" y="677" width="0.2172%" height="15" fill="rgb(215,41,42)"/><text x="19.5838%" y="687.50"></text></g><g><title>__GI___libc_free (7 samples, 0.51%)</title><rect x="20.3476%" y="693" width="0.5069%" height="15" fill="rgb(224,123,36)"/><text x="20.5976%" y="703.50"></text></g><g><title>__GI___libc_realloc (39 samples, 2.82%)</title><rect x="20.8545%" y="693" width="2.8240%" height="15" fill="rgb(240,125,3)"/><text x="21.1045%" y="703.50">__..</text></g><g><title>_int_realloc (10 samples, 0.72%)</title><rect x="22.9544%" y="677" width="0.7241%" height="15" fill="rgb(205,98,50)"/><text x="23.2044%" y="687.50"></text></g><g><title>__rdl_realloc (5 samples, 0.36%)</title><rect x="23.6785%" y="693" width="0.3621%" height="15" fill="rgb(205,185,37)"/><text x="23.9285%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.22%)</title><rect x="23.8233%" y="677" width="0.2172%" height="15" fill="rgb(238,207,15)"/><text x="24.0733%" y="687.50"></text></g><g><title>__rust_dealloc (3 samples, 0.22%)</title><rect x="24.0406%" y="693" width="0.2172%" height="15" fill="rgb(213,199,42)"/><text x="24.2906%" y="703.50"></text></g><g><title>_int_free (8 samples, 0.58%)</title><rect x="24.2578%" y="693" width="0.5793%" height="15" fill="rgb(235,201,11)"/><text x="24.5078%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.36%)</title><rect x="24.8371%" y="693" width="0.3621%" height="15" fill="rgb(207,46,11)"/><text x="25.0871%" y="703.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.22%)</title><rect x="24.9819%" y="677" width="0.2172%" height="15" fill="rgb(241,35,35)"/><text x="25.2319%" y="687.50"></text></g><g><title>_int_realloc (3 samples, 0.22%)</title><rect x="24.9819%" y="661" width="0.2172%" height="15" fill="rgb(243,32,47)"/><text x="25.2319%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="25.0543%" y="645" width="0.1448%" height="15" fill="rgb(247,202,23)"/><text x="25.3043%" y="655.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.43%)</title><rect x="26.5025%" y="645" width="0.4345%" height="15" fill="rgb(219,102,11)"/><text x="26.7525%" y="655.50"></text></g><g><title>__rdl_alloc (2 samples, 0.14%)</title><rect x="26.9370%" y="645" width="0.1448%" height="15" fill="rgb(243,110,44)"/><text x="27.1870%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.14%)</title><rect x="26.9370%" y="629" width="0.1448%" height="15" fill="rgb(222,74,54)"/><text x="27.1870%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 1.52%)</title><rect x="25.6336%" y="677" width="1.5206%" height="15" fill="rgb(216,99,12)"/><text x="25.8836%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 1.09%)</title><rect x="26.0681%" y="661" width="1.0862%" height="15" fill="rgb(226,22,26)"/><text x="26.3181%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.22%)</title><rect x="27.1542%" y="677" width="0.2172%" height="15" fill="rgb(217,163,10)"/><text x="27.4042%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.22%)</title><rect x="27.1542%" y="661" width="0.2172%" height="15" fill="rgb(213,25,53)"/><text x="27.4042%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.36%)</title><rect x="27.3715%" y="677" width="0.3621%" height="15" fill="rgb(252,105,26)"/><text x="27.6215%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (133 samples, 9.63%)</title><rect x="18.3925%" y="725" width="9.6307%" height="15" fill="rgb(220,39,43)"/><text x="18.6425%" y="735.50">&lt;sql_parser::a..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (117 samples, 8.47%)</title><rect x="19.5510%" y="709" width="8.4721%" height="15" fill="rgb(229,68,48)"/><text x="19.8010%" y="719.50">sql_parser::..</text></g><g><title>core::fmt::write (39 samples, 2.82%)</title><rect x="25.1991%" y="693" width="2.8240%" height="15" fill="rgb(252,8,32)"/><text x="25.4491%" y="703.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::zip (4 samples, 0.29%)</title><rect x="27.7335%" y="677" width="0.2896%" height="15" fill="rgb(223,20,43)"/><text x="27.9835%" y="687.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (4 samples, 0.29%)</title><rect x="27.7335%" y="661" width="0.2896%" height="15" fill="rgb(229,81,49)"/><text x="27.9835%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (4 samples, 0.29%)</title><rect x="27.7335%" y="645" width="0.2896%" height="15" fill="rgb(236,28,36)"/><text x="27.9835%" y="655.50"></text></g><g><title>core::cmp::min (4 samples, 0.29%)</title><rect x="27.7335%" y="629" width="0.2896%" height="15" fill="rgb(249,185,26)"/><text x="27.9835%" y="639.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.29%)</title><rect x="27.7335%" y="613" width="0.2896%" height="15" fill="rgb(249,174,33)"/><text x="27.9835%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.22%)</title><rect x="27.8059%" y="597" width="0.2172%" height="15" fill="rgb(233,201,37)"/><text x="28.0559%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="28.0232%" y="693" width="0.1448%" height="15" fill="rgb(221,78,26)"/><text x="28.2732%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="28.0232%" y="725" width="0.2172%" height="15" fill="rgb(250,127,30)"/><text x="28.2732%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="28.0232%" y="709" width="0.2172%" height="15" fill="rgb(230,49,44)"/><text x="28.2732%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.29%)</title><rect x="28.3852%" y="709" width="0.2896%" height="15" fill="rgb(229,67,23)"/><text x="28.6352%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.29%)</title><rect x="28.3852%" y="693" width="0.2896%" height="15" fill="rgb(249,83,47)"/><text x="28.6352%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.22%)</title><rect x="28.4576%" y="677" width="0.2172%" height="15" fill="rgb(215,43,3)"/><text x="28.7076%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="28.5301%" y="661" width="0.1448%" height="15" fill="rgb(238,154,13)"/><text x="28.7801%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="28.5301%" y="645" width="0.1448%" height="15" fill="rgb(219,56,2)"/><text x="28.7801%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="28.5301%" y="629" width="0.1448%" height="15" fill="rgb(233,0,4)"/><text x="28.7801%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="28.6749%" y="709" width="0.1448%" height="15" fill="rgb(235,30,7)"/><text x="28.9249%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="28.9645%" y="693" width="0.1448%" height="15" fill="rgb(250,79,13)"/><text x="29.2145%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.80%)</title><rect x="28.3852%" y="725" width="0.7965%" height="15" fill="rgb(211,146,34)"/><text x="28.6352%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.36%)</title><rect x="28.8197%" y="709" width="0.3621%" height="15" fill="rgb(228,22,38)"/><text x="29.0697%" y="719.50"></text></g><g><title>core::fmt::write (164 samples, 11.88%)</title><rect x="17.3787%" y="757" width="11.8755%" height="15" fill="rgb(235,168,5)"/><text x="17.6287%" y="767.50">core::fmt::write</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (152 samples, 11.01%)</title><rect x="18.2476%" y="741" width="11.0065%" height="15" fill="rgb(221,155,16)"/><text x="18.4976%" y="751.50">&lt;sql_parser::ast..</text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="29.2542%" y="741" width="0.1448%" height="15" fill="rgb(215,215,53)"/><text x="29.5042%" y="751.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="29.3990%" y="741" width="0.1448%" height="15" fill="rgb(223,4,10)"/><text x="29.6490%" y="751.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="29.7610%" y="725" width="0.1448%" height="15" fill="rgb(234,103,6)"/><text x="30.0110%" y="735.50"></text></g><g><title>_int_free (7 samples, 0.51%)</title><rect x="30.0507%" y="725" width="0.5069%" height="15" fill="rgb(227,97,0)"/><text x="30.3007%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.59%)</title><rect x="29.2542%" y="757" width="1.5930%" height="15" fill="rgb(234,150,53)"/><text x="29.5042%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (18 samples, 1.30%)</title><rect x="29.5438%" y="741" width="1.3034%" height="15" fill="rgb(228,201,54)"/><text x="29.7938%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.29%)</title><rect x="30.5576%" y="725" width="0.2896%" height="15" fill="rgb(222,22,37)"/><text x="30.8076%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="30.9920%" y="741" width="0.1448%" height="15" fill="rgb(237,53,32)"/><text x="31.2420%" y="751.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (4 samples, 0.29%)</title><rect x="30.9196%" y="757" width="0.2896%" height="15" fill="rgb(233,25,53)"/><text x="31.1696%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="31.5713%" y="709" width="0.2172%" height="15" fill="rgb(210,40,34)"/><text x="31.8213%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.22%)</title><rect x="31.5713%" y="693" width="0.2172%" height="15" fill="rgb(241,220,44)"/><text x="31.8213%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="31.6437%" y="677" width="0.1448%" height="15" fill="rgb(235,28,35)"/><text x="31.8937%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="31.6437%" y="661" width="0.1448%" height="15" fill="rgb(210,56,17)"/><text x="31.8937%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="31.6437%" y="645" width="0.1448%" height="15" fill="rgb(224,130,29)"/><text x="31.8937%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="31.6437%" y="629" width="0.1448%" height="15" fill="rgb(235,212,8)"/><text x="31.8937%" y="639.50"></text></g><g><title>core::fmt::write (7 samples, 0.51%)</title><rect x="31.3541%" y="741" width="0.5069%" height="15" fill="rgb(223,33,50)"/><text x="31.6041%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (4 samples, 0.29%)</title><rect x="31.5713%" y="725" width="0.2896%" height="15" fill="rgb(219,149,13)"/><text x="31.8213%" y="735.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.43%)</title><rect x="31.9334%" y="725" width="0.4345%" height="15" fill="rgb(250,156,29)"/><text x="32.1834%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.36%)</title><rect x="32.0058%" y="709" width="0.3621%" height="15" fill="rgb(216,193,19)"/><text x="32.2558%" y="719.50"></text></g><g><title>core::fmt::write (5 samples, 0.36%)</title><rect x="32.0058%" y="693" width="0.3621%" height="15" fill="rgb(216,135,14)"/><text x="32.2558%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.29%)</title><rect x="32.0782%" y="677" width="0.2896%" height="15" fill="rgb(241,47,5)"/><text x="32.3282%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.29%)</title><rect x="32.0782%" y="661" width="0.2896%" height="15" fill="rgb(233,42,35)"/><text x="32.3282%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.29%)</title><rect x="32.0782%" y="645" width="0.2896%" height="15" fill="rgb(231,13,6)"/><text x="32.3282%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.22%)</title><rect x="32.1506%" y="629" width="0.2172%" height="15" fill="rgb(207,181,40)"/><text x="32.4006%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="32.2230%" y="613" width="0.1448%" height="15" fill="rgb(254,173,49)"/><text x="32.4730%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="32.2230%" y="597" width="0.1448%" height="15" fill="rgb(221,1,38)"/><text x="32.4730%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="32.2230%" y="581" width="0.1448%" height="15" fill="rgb(206,124,46)"/><text x="32.4730%" y="591.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (318 samples, 23.03%)</title><rect x="9.4135%" y="789" width="23.0268%" height="15" fill="rgb(249,21,11)"/><text x="9.6635%" y="799.50">decor::query_transformer::QueryTransf..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (318 samples, 23.03%)</title><rect x="9.4135%" y="773" width="23.0268%" height="15" fill="rgb(222,201,40)"/><text x="9.6635%" y="783.50">decor::query_transformer::QueryTransf..</text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (15 samples, 1.09%)</title><rect x="31.3541%" y="757" width="1.0862%" height="15" fill="rgb(235,61,29)"/><text x="31.6041%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (8 samples, 0.58%)</title><rect x="31.8610%" y="741" width="0.5793%" height="15" fill="rgb(219,207,3)"/><text x="32.1110%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.22%)</title><rect x="32.4403%" y="773" width="0.2172%" height="15" fill="rgb(222,56,46)"/><text x="32.6903%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (3 samples, 0.22%)</title><rect x="32.4403%" y="757" width="0.2172%" height="15" fill="rgb(239,76,54)"/><text x="32.6903%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (3 samples, 0.22%)</title><rect x="32.4403%" y="741" width="0.2172%" height="15" fill="rgb(231,124,27)"/><text x="32.6903%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.22%)</title><rect x="32.4403%" y="725" width="0.2172%" height="15" fill="rgb(249,195,6)"/><text x="32.6903%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.22%)</title><rect x="32.4403%" y="709" width="0.2172%" height="15" fill="rgb(237,174,47)"/><text x="32.6903%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="32.5127%" y="693" width="0.1448%" height="15" fill="rgb(206,201,31)"/><text x="32.7627%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="32.5127%" y="677" width="0.1448%" height="15" fill="rgb(231,57,52)"/><text x="32.7627%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (324 samples, 23.46%)</title><rect x="9.4135%" y="805" width="23.4613%" height="15" fill="rgb(248,177,22)"/><text x="9.6635%" y="815.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (6 samples, 0.43%)</title><rect x="32.4403%" y="789" width="0.4345%" height="15" fill="rgb(215,211,37)"/><text x="32.6903%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.22%)</title><rect x="32.6575%" y="773" width="0.2172%" height="15" fill="rgb(241,128,51)"/><text x="32.9075%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.22%)</title><rect x="32.6575%" y="757" width="0.2172%" height="15" fill="rgb(227,165,31)"/><text x="32.9075%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.22%)</title><rect x="32.6575%" y="741" width="0.2172%" height="15" fill="rgb(228,167,24)"/><text x="32.9075%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (3 samples, 0.22%)</title><rect x="32.6575%" y="725" width="0.2172%" height="15" fill="rgb(228,143,12)"/><text x="32.9075%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="33.0196%" y="805" width="0.1448%" height="15" fill="rgb(249,149,8)"/><text x="33.2696%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="33.1644%" y="805" width="0.1448%" height="15" fill="rgb(243,35,44)"/><text x="33.4144%" y="815.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.14%)</title><rect x="34.1781%" y="37" width="0.1448%" height="15" fill="rgb(246,89,9)"/><text x="34.4281%" y="47.50"></text></g><g><title>sock_def_readable (5 samples, 0.36%)</title><rect x="34.1781%" y="101" width="0.3621%" height="15" fill="rgb(233,213,13)"/><text x="34.4281%" y="111.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.36%)</title><rect x="34.1781%" y="85" width="0.3621%" height="15" fill="rgb(233,141,41)"/><text x="34.4281%" y="95.50"></text></g><g><title>__wake_up_common (5 samples, 0.36%)</title><rect x="34.1781%" y="69" width="0.3621%" height="15" fill="rgb(239,167,4)"/><text x="34.4281%" y="79.50"></text></g><g><title>try_to_wake_up (5 samples, 0.36%)</title><rect x="34.1781%" y="53" width="0.3621%" height="15" fill="rgb(209,217,16)"/><text x="34.4281%" y="63.50"></text></g><g><title>tcp_ack (4 samples, 0.29%)</title><rect x="34.5402%" y="101" width="0.2896%" height="15" fill="rgb(219,88,35)"/><text x="34.7902%" y="111.50"></text></g><g><title>__kfree_skb (3 samples, 0.22%)</title><rect x="34.6126%" y="85" width="0.2172%" height="15" fill="rgb(220,193,23)"/><text x="34.8626%" y="95.50"></text></g><g><title>skb_release_data (2 samples, 0.14%)</title><rect x="34.6850%" y="69" width="0.1448%" height="15" fill="rgb(230,90,52)"/><text x="34.9350%" y="79.50"></text></g><g><title>ip_local_deliver (11 samples, 0.80%)</title><rect x="34.1057%" y="197" width="0.7965%" height="15" fill="rgb(252,106,19)"/><text x="34.3557%" y="207.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.80%)</title><rect x="34.1057%" y="181" width="0.7965%" height="15" fill="rgb(206,74,20)"/><text x="34.3557%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.80%)</title><rect x="34.1057%" y="165" width="0.7965%" height="15" fill="rgb(230,138,44)"/><text x="34.3557%" y="175.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.80%)</title><rect x="34.1057%" y="149" width="0.7965%" height="15" fill="rgb(235,182,43)"/><text x="34.3557%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.80%)</title><rect x="34.1057%" y="133" width="0.7965%" height="15" fill="rgb(242,16,51)"/><text x="34.3557%" y="143.50"></text></g><g><title>tcp_rcv_established (11 samples, 0.80%)</title><rect x="34.1057%" y="117" width="0.7965%" height="15" fill="rgb(248,9,4)"/><text x="34.3557%" y="127.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 0.87%)</title><rect x="34.1057%" y="229" width="0.8689%" height="15" fill="rgb(210,31,22)"/><text x="34.3557%" y="239.50"></text></g><g><title>ip_rcv (12 samples, 0.87%)</title><rect x="34.1057%" y="213" width="0.8689%" height="15" fill="rgb(239,54,39)"/><text x="34.3557%" y="223.50"></text></g><g><title>ip_finish_output2 (18 samples, 1.30%)</title><rect x="33.8161%" y="341" width="1.3034%" height="15" fill="rgb(230,99,41)"/><text x="34.0661%" y="351.50"></text></g><g><title>__local_bh_enable_ip (16 samples, 1.16%)</title><rect x="33.9609%" y="325" width="1.1586%" height="15" fill="rgb(253,106,12)"/><text x="34.2109%" y="335.50"></text></g><g><title>do_softirq (16 samples, 1.16%)</title><rect x="33.9609%" y="309" width="1.1586%" height="15" fill="rgb(213,46,41)"/><text x="34.2109%" y="319.50"></text></g><g><title>do_softirq_own_stack (16 samples, 1.16%)</title><rect x="33.9609%" y="293" width="1.1586%" height="15" fill="rgb(215,133,35)"/><text x="34.2109%" y="303.50"></text></g><g><title>__do_softirq (16 samples, 1.16%)</title><rect x="33.9609%" y="277" width="1.1586%" height="15" fill="rgb(213,28,5)"/><text x="34.2109%" y="287.50"></text></g><g><title>net_rx_action (15 samples, 1.09%)</title><rect x="34.0333%" y="261" width="1.0862%" height="15" fill="rgb(215,77,49)"/><text x="34.2833%" y="271.50"></text></g><g><title>process_backlog (15 samples, 1.09%)</title><rect x="34.0333%" y="245" width="1.0862%" height="15" fill="rgb(248,100,22)"/><text x="34.2833%" y="255.50"></text></g><g><title>__ip_queue_xmit (20 samples, 1.45%)</title><rect x="33.7437%" y="373" width="1.4482%" height="15" fill="rgb(208,67,9)"/><text x="33.9937%" y="383.50"></text></g><g><title>ip_output (19 samples, 1.38%)</title><rect x="33.8161%" y="357" width="1.3758%" height="15" fill="rgb(219,133,21)"/><text x="34.0661%" y="367.50"></text></g><g><title>__tcp_push_pending_frames (22 samples, 1.59%)</title><rect x="33.7437%" y="421" width="1.5930%" height="15" fill="rgb(246,46,29)"/><text x="33.9937%" y="431.50"></text></g><g><title>tcp_write_xmit (22 samples, 1.59%)</title><rect x="33.7437%" y="405" width="1.5930%" height="15" fill="rgb(246,185,52)"/><text x="33.9937%" y="415.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 1.59%)</title><rect x="33.7437%" y="389" width="1.5930%" height="15" fill="rgb(252,136,11)"/><text x="33.9937%" y="399.50"></text></g><g><title>sock_sendmsg (25 samples, 1.81%)</title><rect x="33.5988%" y="469" width="1.8103%" height="15" fill="rgb(219,138,53)"/><text x="33.8488%" y="479.50">s..</text></g><g><title>tcp_sendmsg (25 samples, 1.81%)</title><rect x="33.5988%" y="453" width="1.8103%" height="15" fill="rgb(211,51,23)"/><text x="33.8488%" y="463.50">t..</text></g><g><title>tcp_sendmsg_locked (25 samples, 1.81%)</title><rect x="33.5988%" y="437" width="1.8103%" height="15" fill="rgb(247,221,28)"/><text x="33.8488%" y="447.50">t..</text></g><g><title>__libc_start_main (28 samples, 2.03%)</title><rect x="33.4540%" y="805" width="2.0275%" height="15" fill="rgb(251,222,45)"/><text x="33.7040%" y="815.50">_..</text></g><g><title>main (28 samples, 2.03%)</title><rect x="33.4540%" y="789" width="2.0275%" height="15" fill="rgb(217,162,53)"/><text x="33.7040%" y="799.50">m..</text></g><g><title>std::rt::lang_start_internal (28 samples, 2.03%)</title><rect x="33.4540%" y="773" width="2.0275%" height="15" fill="rgb(229,93,14)"/><text x="33.7040%" y="783.50">s..</text></g><g><title>std::panic::catch_unwind (28 samples, 2.03%)</title><rect x="33.4540%" y="757" width="2.0275%" height="15" fill="rgb(209,67,49)"/><text x="33.7040%" y="767.50">s..</text></g><g><title>std::panicking::try (28 samples, 2.03%)</title><rect x="33.4540%" y="741" width="2.0275%" height="15" fill="rgb(213,87,29)"/><text x="33.7040%" y="751.50">s..</text></g><g><title>std::panicking::try::do_call (28 samples, 2.03%)</title><rect x="33.4540%" y="725" width="2.0275%" height="15" fill="rgb(205,151,52)"/><text x="33.7040%" y="735.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (28 samples, 2.03%)</title><rect x="33.4540%" y="709" width="2.0275%" height="15" fill="rgb(253,215,39)"/><text x="33.7040%" y="719.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (28 samples, 2.03%)</title><rect x="33.4540%" y="693" width="2.0275%" height="15" fill="rgb(221,220,41)"/><text x="33.7040%" y="703.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 2.03%)</title><rect x="33.4540%" y="677" width="2.0275%" height="15" fill="rgb(218,133,21)"/><text x="33.7040%" y="687.50">s..</text></g><g><title>lobsters::main (28 samples, 2.03%)</title><rect x="33.4540%" y="661" width="2.0275%" height="15" fill="rgb(221,193,43)"/><text x="33.7040%" y="671.50">l..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (28 samples, 2.03%)</title><rect x="33.4540%" y="645" width="2.0275%" height="15" fill="rgb(240,128,52)"/><text x="33.7040%" y="655.50">m..</text></g><g><title>mysql::conn::Conn::_query (28 samples, 2.03%)</title><rect x="33.4540%" y="629" width="2.0275%" height="15" fill="rgb(253,114,12)"/><text x="33.7040%" y="639.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (28 samples, 2.03%)</title><rect x="33.4540%" y="613" width="2.0275%" height="15" fill="rgb(215,223,47)"/><text x="33.7040%" y="623.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (28 samples, 2.03%)</title><rect x="33.4540%" y="597" width="2.0275%" height="15" fill="rgb(248,225,23)"/><text x="33.7040%" y="607.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (28 samples, 2.03%)</title><rect x="33.4540%" y="581" width="2.0275%" height="15" fill="rgb(250,108,0)"/><text x="33.7040%" y="591.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (28 samples, 2.03%)</title><rect x="33.4540%" y="565" width="2.0275%" height="15" fill="rgb(228,208,7)"/><text x="33.7040%" y="575.50">s..</text></g><g><title>__libc_send (28 samples, 2.03%)</title><rect x="33.4540%" y="549" width="2.0275%" height="15" fill="rgb(244,45,10)"/><text x="33.7040%" y="559.50">_..</text></g><g><title>entry_SYSCALL_64 (27 samples, 1.96%)</title><rect x="33.5264%" y="533" width="1.9551%" height="15" fill="rgb(207,125,25)"/><text x="33.7764%" y="543.50">e..</text></g><g><title>do_syscall_64 (27 samples, 1.96%)</title><rect x="33.5264%" y="517" width="1.9551%" height="15" fill="rgb(210,195,18)"/><text x="33.7764%" y="527.50">d..</text></g><g><title>__x64_sys_sendto (26 samples, 1.88%)</title><rect x="33.5988%" y="501" width="1.8827%" height="15" fill="rgb(249,80,12)"/><text x="33.8488%" y="511.50">_..</text></g><g><title>__sys_sendto (26 samples, 1.88%)</title><rect x="33.5988%" y="485" width="1.8827%" height="15" fill="rgb(221,65,9)"/><text x="33.8488%" y="495.50">_..</text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="35.5539%" y="805" width="0.1448%" height="15" fill="rgb(235,49,36)"/><text x="35.8039%" y="815.50"></text></g><g><title>_int_realloc (3 samples, 0.22%)</title><rect x="35.6988%" y="805" width="0.2172%" height="15" fill="rgb(225,32,20)"/><text x="35.9488%" y="815.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.29%)</title><rect x="36.1332%" y="805" width="0.2896%" height="15" fill="rgb(215,141,46)"/><text x="36.3832%" y="815.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.14%)</title><rect x="36.5677%" y="805" width="0.1448%" height="15" fill="rgb(250,160,47)"/><text x="36.8177%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (3 samples, 0.22%)</title><rect x="36.7125%" y="805" width="0.2172%" height="15" fill="rgb(216,222,40)"/><text x="36.9625%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.22%)</title><rect x="36.7125%" y="789" width="0.2172%" height="15" fill="rgb(234,217,39)"/><text x="36.9625%" y="799.50"></text></g><g><title>core::fmt::write (4 samples, 0.29%)</title><rect x="36.9298%" y="805" width="0.2896%" height="15" fill="rgb(207,178,40)"/><text x="37.1798%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.29%)</title><rect x="37.2194%" y="805" width="0.2896%" height="15" fill="rgb(221,136,13)"/><text x="37.4694%" y="815.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.14%)</title><rect x="38.5952%" y="405" width="0.1448%" height="15" fill="rgb(249,199,10)"/><text x="38.8452%" y="415.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.29%)</title><rect x="38.5228%" y="421" width="0.2896%" height="15" fill="rgb(249,222,13)"/><text x="38.7728%" y="431.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.14%)</title><rect x="39.0297%" y="357" width="0.1448%" height="15" fill="rgb(244,185,38)"/><text x="39.2797%" y="367.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.14%)</title><rect x="39.0297%" y="341" width="0.1448%" height="15" fill="rgb(236,202,9)"/><text x="39.2797%" y="351.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.14%)</title><rect x="39.9710%" y="69" width="0.1448%" height="15" fill="rgb(250,229,37)"/><text x="40.2210%" y="79.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.29%)</title><rect x="39.8986%" y="117" width="0.2896%" height="15" fill="rgb(206,174,23)"/><text x="40.1486%" y="127.50"></text></g><g><title>enqueue_entity (4 samples, 0.29%)</title><rect x="39.8986%" y="101" width="0.2896%" height="15" fill="rgb(211,33,43)"/><text x="40.1486%" y="111.50"></text></g><g><title>update_load_avg (4 samples, 0.29%)</title><rect x="39.8986%" y="85" width="0.2896%" height="15" fill="rgb(245,58,50)"/><text x="40.1486%" y="95.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.14%)</title><rect x="40.1883%" y="117" width="0.1448%" height="15" fill="rgb(244,68,36)"/><text x="40.4383%" y="127.50"></text></g><g><title>available_idle_cpu (2 samples, 0.14%)</title><rect x="40.1883%" y="101" width="0.1448%" height="15" fill="rgb(232,229,15)"/><text x="40.4383%" y="111.50"></text></g><g><title>sock_def_readable (13 samples, 0.94%)</title><rect x="39.5366%" y="197" width="0.9413%" height="15" fill="rgb(254,30,23)"/><text x="39.7866%" y="207.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.80%)</title><rect x="39.6814%" y="181" width="0.7965%" height="15" fill="rgb(235,160,14)"/><text x="39.9314%" y="191.50"></text></g><g><title>__wake_up_common (11 samples, 0.80%)</title><rect x="39.6814%" y="165" width="0.7965%" height="15" fill="rgb(212,155,44)"/><text x="39.9314%" y="175.50"></text></g><g><title>pollwake (11 samples, 0.80%)</title><rect x="39.6814%" y="149" width="0.7965%" height="15" fill="rgb(226,2,50)"/><text x="39.9314%" y="159.50"></text></g><g><title>try_to_wake_up (9 samples, 0.65%)</title><rect x="39.8262%" y="133" width="0.6517%" height="15" fill="rgb(234,177,6)"/><text x="40.0762%" y="143.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.14%)</title><rect x="40.3331%" y="117" width="0.1448%" height="15" fill="rgb(217,24,9)"/><text x="40.5831%" y="127.50"></text></g><g><title>tcp_ack (5 samples, 0.36%)</title><rect x="40.4779%" y="197" width="0.3621%" height="15" fill="rgb(220,13,46)"/><text x="40.7279%" y="207.50"></text></g><g><title>ip_local_deliver (23 samples, 1.67%)</title><rect x="39.2469%" y="293" width="1.6655%" height="15" fill="rgb(239,221,27)"/><text x="39.4969%" y="303.50"></text></g><g><title>ip_local_deliver_finish (22 samples, 1.59%)</title><rect x="39.3193%" y="277" width="1.5930%" height="15" fill="rgb(222,198,25)"/><text x="39.5693%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (22 samples, 1.59%)</title><rect x="39.3193%" y="261" width="1.5930%" height="15" fill="rgb(211,99,13)"/><text x="39.5693%" y="271.50"></text></g><g><title>tcp_v4_rcv (22 samples, 1.59%)</title><rect x="39.3193%" y="245" width="1.5930%" height="15" fill="rgb(232,111,31)"/><text x="39.5693%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (20 samples, 1.45%)</title><rect x="39.4642%" y="229" width="1.4482%" height="15" fill="rgb(245,82,37)"/><text x="39.7142%" y="239.50"></text></g><g><title>tcp_rcv_established (20 samples, 1.45%)</title><rect x="39.4642%" y="213" width="1.4482%" height="15" fill="rgb(227,149,46)"/><text x="39.7142%" y="223.50"></text></g><g><title>__local_bh_enable_ip (30 samples, 2.17%)</title><rect x="38.8125%" y="421" width="2.1723%" height="15" fill="rgb(218,36,50)"/><text x="39.0625%" y="431.50">_..</text></g><g><title>do_softirq (29 samples, 2.10%)</title><rect x="38.8849%" y="405" width="2.0999%" height="15" fill="rgb(226,80,48)"/><text x="39.1349%" y="415.50">d..</text></g><g><title>do_softirq_own_stack (27 samples, 1.96%)</title><rect x="39.0297%" y="389" width="1.9551%" height="15" fill="rgb(238,224,15)"/><text x="39.2797%" y="399.50">d..</text></g><g><title>__do_softirq (27 samples, 1.96%)</title><rect x="39.0297%" y="373" width="1.9551%" height="15" fill="rgb(241,136,10)"/><text x="39.2797%" y="383.50">_..</text></g><g><title>net_rx_action (25 samples, 1.81%)</title><rect x="39.1745%" y="357" width="1.8103%" height="15" fill="rgb(208,32,45)"/><text x="39.4245%" y="367.50">n..</text></g><g><title>process_backlog (25 samples, 1.81%)</title><rect x="39.1745%" y="341" width="1.8103%" height="15" fill="rgb(207,135,9)"/><text x="39.4245%" y="351.50">p..</text></g><g><title>__netif_receive_skb_one_core (25 samples, 1.81%)</title><rect x="39.1745%" y="325" width="1.8103%" height="15" fill="rgb(206,86,44)"/><text x="39.4245%" y="335.50">_..</text></g><g><title>ip_rcv (24 samples, 1.74%)</title><rect x="39.2469%" y="309" width="1.7379%" height="15" fill="rgb(245,177,15)"/><text x="39.4969%" y="319.50"></text></g><g><title>__ip_queue_xmit (38 samples, 2.75%)</title><rect x="38.3056%" y="469" width="2.7516%" height="15" fill="rgb(206,64,50)"/><text x="38.5556%" y="479.50">__..</text></g><g><title>ip_output (37 samples, 2.68%)</title><rect x="38.3780%" y="453" width="2.6792%" height="15" fill="rgb(234,36,40)"/><text x="38.6280%" y="463.50">ip..</text></g><g><title>ip_finish_output2 (37 samples, 2.68%)</title><rect x="38.3780%" y="437" width="2.6792%" height="15" fill="rgb(213,64,8)"/><text x="38.6280%" y="447.50">ip..</text></g><g><title>__tcp_transmit_skb (42 samples, 3.04%)</title><rect x="38.0883%" y="485" width="3.0413%" height="15" fill="rgb(210,75,36)"/><text x="38.3383%" y="495.50">__t..</text></g><g><title>ktime_get (2 samples, 0.14%)</title><rect x="41.1296%" y="485" width="0.1448%" height="15" fill="rgb(229,88,21)"/><text x="41.3796%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (45 samples, 3.26%)</title><rect x="38.0883%" y="517" width="3.2585%" height="15" fill="rgb(252,204,47)"/><text x="38.3383%" y="527.50">__t..</text></g><g><title>tcp_write_xmit (45 samples, 3.26%)</title><rect x="38.0883%" y="501" width="3.2585%" height="15" fill="rgb(208,77,27)"/><text x="38.3383%" y="511.50">tcp..</text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.14%)</title><rect x="41.3469%" y="485" width="0.1448%" height="15" fill="rgb(221,76,26)"/><text x="41.5969%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.29%)</title><rect x="41.3469%" y="517" width="0.2896%" height="15" fill="rgb(225,139,18)"/><text x="41.5969%" y="527.50"></text></g><g><title>__alloc_skb (4 samples, 0.29%)</title><rect x="41.3469%" y="501" width="0.2896%" height="15" fill="rgb(230,137,11)"/><text x="41.5969%" y="511.50"></text></g><g><title>skb_entail (2 samples, 0.14%)</title><rect x="41.7089%" y="517" width="0.1448%" height="15" fill="rgb(212,28,1)"/><text x="41.9589%" y="527.50"></text></g><g><title>sock_sendmsg (56 samples, 4.06%)</title><rect x="37.8711%" y="565" width="4.0550%" height="15" fill="rgb(248,164,17)"/><text x="38.1211%" y="575.50">sock..</text></g><g><title>tcp_sendmsg (55 samples, 3.98%)</title><rect x="37.9435%" y="549" width="3.9826%" height="15" fill="rgb(222,171,42)"/><text x="38.1935%" y="559.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (53 samples, 3.84%)</title><rect x="38.0883%" y="533" width="3.8378%" height="15" fill="rgb(243,84,45)"/><text x="38.3383%" y="543.50">tcp_..</text></g><g><title>__x64_sys_sendto (58 samples, 4.20%)</title><rect x="37.8711%" y="597" width="4.1999%" height="15" fill="rgb(252,49,23)"/><text x="38.1211%" y="607.50">__x64..</text></g><g><title>__sys_sendto (58 samples, 4.20%)</title><rect x="37.8711%" y="581" width="4.1999%" height="15" fill="rgb(215,19,7)"/><text x="38.1211%" y="591.50">__sys..</text></g><g><title>sockfd_lookup_light (2 samples, 0.14%)</title><rect x="41.9261%" y="565" width="0.1448%" height="15" fill="rgb(238,81,41)"/><text x="42.1761%" y="575.50"></text></g><g><title>__fget_light (2 samples, 0.14%)</title><rect x="41.9261%" y="549" width="0.1448%" height="15" fill="rgb(210,199,37)"/><text x="42.1761%" y="559.50"></text></g><g><title>__fget_files (2 samples, 0.14%)</title><rect x="41.9261%" y="533" width="0.1448%" height="15" fill="rgb(244,192,49)"/><text x="42.1761%" y="543.50"></text></g><g><title>do_syscall_64 (59 samples, 4.27%)</title><rect x="37.8711%" y="613" width="4.2723%" height="15" fill="rgb(226,211,11)"/><text x="38.1211%" y="623.50">do_sy..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (67 samples, 4.85%)</title><rect x="37.5091%" y="741" width="4.8516%" height="15" fill="rgb(236,162,54)"/><text x="37.7591%" y="751.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (64 samples, 4.63%)</title><rect x="37.7263%" y="725" width="4.6343%" height="15" fill="rgb(220,229,9)"/><text x="37.9763%" y="735.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (63 samples, 4.56%)</title><rect x="37.7987%" y="709" width="4.5619%" height="15" fill="rgb(250,87,22)"/><text x="38.0487%" y="719.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (63 samples, 4.56%)</title><rect x="37.7987%" y="693" width="4.5619%" height="15" fill="rgb(239,43,17)"/><text x="38.0487%" y="703.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (63 samples, 4.56%)</title><rect x="37.7987%" y="677" width="4.5619%" height="15" fill="rgb(231,177,25)"/><text x="38.0487%" y="687.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (63 samples, 4.56%)</title><rect x="37.7987%" y="661" width="4.5619%" height="15" fill="rgb(219,179,1)"/><text x="38.0487%" y="671.50">std::..</text></g><g><title>__libc_send (63 samples, 4.56%)</title><rect x="37.7987%" y="645" width="4.5619%" height="15" fill="rgb(238,219,53)"/><text x="38.0487%" y="655.50">__lib..</text></g><g><title>entry_SYSCALL_64 (62 samples, 4.49%)</title><rect x="37.8711%" y="629" width="4.4895%" height="15" fill="rgb(232,167,36)"/><text x="38.1211%" y="639.50">entry..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.22%)</title><rect x="42.1434%" y="613" width="0.2172%" height="15" fill="rgb(244,19,51)"/><text x="42.3934%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="42.3606%" y="677" width="0.2172%" height="15" fill="rgb(224,6,22)"/><text x="42.6106%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="42.3606%" y="661" width="0.2172%" height="15" fill="rgb(224,145,5)"/><text x="42.6106%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.22%)</title><rect x="42.3606%" y="645" width="0.2172%" height="15" fill="rgb(234,130,49)"/><text x="42.6106%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="42.4330%" y="629" width="0.1448%" height="15" fill="rgb(254,6,2)"/><text x="42.6830%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="42.4330%" y="613" width="0.1448%" height="15" fill="rgb(208,96,46)"/><text x="42.6830%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.29%)</title><rect x="42.5778%" y="677" width="0.2896%" height="15" fill="rgb(239,3,39)"/><text x="42.8278%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.29%)</title><rect x="42.5778%" y="661" width="0.2896%" height="15" fill="rgb(233,210,1)"/><text x="42.8278%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.29%)</title><rect x="42.5778%" y="645" width="0.2896%" height="15" fill="rgb(244,137,37)"/><text x="42.8278%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.14%)</title><rect x="42.7227%" y="629" width="0.1448%" height="15" fill="rgb(240,136,2)"/><text x="42.9727%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.14%)</title><rect x="42.7227%" y="613" width="0.1448%" height="15" fill="rgb(239,18,37)"/><text x="42.9727%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.14%)</title><rect x="42.7227%" y="597" width="0.1448%" height="15" fill="rgb(218,185,22)"/><text x="42.9727%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.87%)</title><rect x="42.3606%" y="693" width="0.8689%" height="15" fill="rgb(225,218,4)"/><text x="42.6106%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.36%)</title><rect x="42.8675%" y="677" width="0.3621%" height="15" fill="rgb(230,182,32)"/><text x="43.1175%" y="687.50"></text></g><g><title>core::fmt::write (4 samples, 0.29%)</title><rect x="42.9399%" y="661" width="0.2896%" height="15" fill="rgb(242,56,43)"/><text x="43.1899%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.14%)</title><rect x="43.0847%" y="645" width="0.1448%" height="15" fill="rgb(233,99,24)"/><text x="43.3347%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="43.0847%" y="629" width="0.1448%" height="15" fill="rgb(234,209,42)"/><text x="43.3347%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 1.38%)</title><rect x="42.3606%" y="709" width="1.3758%" height="15" fill="rgb(227,7,12)"/><text x="42.6106%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.51%)</title><rect x="43.2295%" y="693" width="0.5069%" height="15" fill="rgb(245,203,43)"/><text x="43.4795%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="43.5916%" y="677" width="0.1448%" height="15" fill="rgb(238,205,33)"/><text x="43.8416%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="43.7364%" y="677" width="0.1448%" height="15" fill="rgb(231,56,7)"/><text x="43.9864%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="43.7364%" y="661" width="0.1448%" height="15" fill="rgb(244,186,29)"/><text x="43.9864%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="43.7364%" y="645" width="0.1448%" height="15" fill="rgb(234,111,31)"/><text x="43.9864%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="43.7364%" y="709" width="0.2172%" height="15" fill="rgb(241,149,10)"/><text x="43.9864%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.22%)</title><rect x="43.7364%" y="693" width="0.2172%" height="15" fill="rgb(249,206,44)"/><text x="43.9864%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="43.9537%" y="693" width="0.1448%" height="15" fill="rgb(251,153,30)"/><text x="44.2037%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.14%)</title><rect x="43.9537%" y="677" width="0.1448%" height="15" fill="rgb(239,152,38)"/><text x="44.2037%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.14%)</title><rect x="43.9537%" y="661" width="0.1448%" height="15" fill="rgb(249,139,47)"/><text x="44.2037%" y="671.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="43.9537%" y="645" width="0.1448%" height="15" fill="rgb(244,64,35)"/><text x="44.2037%" y="655.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.14%)</title><rect x="43.9537%" y="629" width="0.1448%" height="15" fill="rgb(216,46,15)"/><text x="44.2037%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.14%)</title><rect x="44.0985%" y="677" width="0.1448%" height="15" fill="rgb(250,74,19)"/><text x="44.3485%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="44.0985%" y="661" width="0.1448%" height="15" fill="rgb(249,42,33)"/><text x="44.3485%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.29%)</title><rect x="44.0985%" y="693" width="0.2896%" height="15" fill="rgb(242,149,17)"/><text x="44.3485%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="44.2433%" y="677" width="0.1448%" height="15" fill="rgb(244,29,21)"/><text x="44.4933%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.36%)</title><rect x="44.3881%" y="677" width="0.3621%" height="15" fill="rgb(220,130,37)"/><text x="44.6381%" y="687.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.29%)</title><rect x="44.4605%" y="661" width="0.2896%" height="15" fill="rgb(211,67,2)"/><text x="44.7105%" y="671.50"></text></g><g><title>_int_realloc (3 samples, 0.22%)</title><rect x="44.5329%" y="645" width="0.2172%" height="15" fill="rgb(235,68,52)"/><text x="44.7829%" y="655.50"></text></g><g><title>core::fmt::write (34 samples, 2.46%)</title><rect x="42.3606%" y="741" width="2.4620%" height="15" fill="rgb(246,142,3)"/><text x="42.6106%" y="751.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (34 samples, 2.46%)</title><rect x="42.3606%" y="725" width="2.4620%" height="15" fill="rgb(241,25,7)"/><text x="42.6106%" y="735.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.87%)</title><rect x="43.9537%" y="709" width="0.8689%" height="15" fill="rgb(242,119,39)"/><text x="44.2037%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.43%)</title><rect x="44.3881%" y="693" width="0.4345%" height="15" fill="rgb(241,98,45)"/><text x="44.6381%" y="703.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (102 samples, 7.39%)</title><rect x="37.5091%" y="757" width="7.3860%" height="15" fill="rgb(254,28,30)"/><text x="37.7591%" y="767.50">decor::que..</text></g><g><title>decor::Shim::run_on_tcp (110 samples, 7.97%)</title><rect x="37.5091%" y="805" width="7.9652%" height="15" fill="rgb(241,142,54)"/><text x="37.7591%" y="815.50">decor::Shim..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (110 samples, 7.97%)</title><rect x="37.5091%" y="789" width="7.9652%" height="15" fill="rgb(222,85,15)"/><text x="37.7591%" y="799.50">msql_srv::M..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (110 samples, 7.97%)</title><rect x="37.5091%" y="773" width="7.9652%" height="15" fill="rgb(210,85,47)"/><text x="37.7591%" y="783.50">&lt;decor::Shi..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (8 samples, 0.58%)</title><rect x="44.8950%" y="757" width="0.5793%" height="15" fill="rgb(224,206,25)"/><text x="45.1450%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.29%)</title><rect x="45.1846%" y="741" width="0.2896%" height="15" fill="rgb(243,201,19)"/><text x="45.4346%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="45.3295%" y="725" width="0.1448%" height="15" fill="rgb(236,59,4)"/><text x="45.5795%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="45.5467%" y="741" width="0.1448%" height="15" fill="rgb(254,179,45)"/><text x="45.7967%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="45.5467%" y="725" width="0.1448%" height="15" fill="rgb(226,14,10)"/><text x="45.7967%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="45.6915%" y="741" width="0.1448%" height="15" fill="rgb(244,27,41)"/><text x="45.9415%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="45.8364%" y="741" width="0.1448%" height="15" fill="rgb(235,35,32)"/><text x="46.0864%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.14%)</title><rect x="45.8364%" y="725" width="0.1448%" height="15" fill="rgb(218,68,31)"/><text x="46.0864%" y="735.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.14%)</title><rect x="45.8364%" y="709" width="0.1448%" height="15" fill="rgb(207,120,37)"/><text x="46.0864%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="45.9812%" y="741" width="0.1448%" height="15" fill="rgb(227,98,0)"/><text x="46.2312%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="45.9812%" y="725" width="0.1448%" height="15" fill="rgb(207,7,3)"/><text x="46.2312%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (10 samples, 0.72%)</title><rect x="45.4743%" y="805" width="0.7241%" height="15" fill="rgb(206,98,19)"/><text x="45.7243%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (10 samples, 0.72%)</title><rect x="45.4743%" y="789" width="0.7241%" height="15" fill="rgb(217,5,26)"/><text x="45.7243%" y="799.50"></text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (10 samples, 0.72%)</title><rect x="45.4743%" y="773" width="0.7241%" height="15" fill="rgb(235,190,38)"/><text x="45.7243%" y="783.50"></text></g><g><title>decor::qtcache::QueryCache::cache_uid2gids_for_uids (10 samples, 0.72%)</title><rect x="45.4743%" y="757" width="0.7241%" height="15" fill="rgb(247,86,24)"/><text x="45.7243%" y="767.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.29%)</title><rect x="46.7777%" y="693" width="0.2896%" height="15" fill="rgb(205,101,16)"/><text x="47.0277%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (4 samples, 0.29%)</title><rect x="46.7777%" y="677" width="0.2896%" height="15" fill="rgb(246,168,33)"/><text x="47.0277%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.65%)</title><rect x="46.4881%" y="709" width="0.6517%" height="15" fill="rgb(231,114,1)"/><text x="46.7381%" y="719.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (18 samples, 1.30%)</title><rect x="46.1984%" y="789" width="1.3034%" height="15" fill="rgb(207,184,53)"/><text x="46.4484%" y="799.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (18 samples, 1.30%)</title><rect x="46.1984%" y="773" width="1.3034%" height="15" fill="rgb(224,95,51)"/><text x="46.4484%" y="783.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (18 samples, 1.30%)</title><rect x="46.1984%" y="757" width="1.3034%" height="15" fill="rgb(212,188,45)"/><text x="46.4484%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (17 samples, 1.23%)</title><rect x="46.2708%" y="741" width="1.2310%" height="15" fill="rgb(223,154,38)"/><text x="46.5208%" y="751.50"></text></g><g><title>decor::helpers::str_subset_of_idents (17 samples, 1.23%)</title><rect x="46.2708%" y="725" width="1.2310%" height="15" fill="rgb(251,22,52)"/><text x="46.5208%" y="735.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.22%)</title><rect x="47.2846%" y="709" width="0.2172%" height="15" fill="rgb(229,209,22)"/><text x="47.5346%" y="719.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (25 samples, 1.81%)</title><rect x="46.1984%" y="805" width="1.8103%" height="15" fill="rgb(234,138,34)"/><text x="46.4484%" y="815.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (7 samples, 0.51%)</title><rect x="47.5018%" y="789" width="0.5069%" height="15" fill="rgb(212,95,11)"/><text x="47.7518%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (6 samples, 0.43%)</title><rect x="47.5742%" y="773" width="0.4345%" height="15" fill="rgb(240,179,47)"/><text x="47.8242%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.22%)</title><rect x="47.7915%" y="757" width="0.2172%" height="15" fill="rgb(240,163,11)"/><text x="48.0415%" y="767.50"></text></g><g><title>__kfree_skb (3 samples, 0.22%)</title><rect x="48.5156%" y="501" width="0.2172%" height="15" fill="rgb(236,37,12)"/><text x="48.7656%" y="511.50"></text></g><g><title>skb_release_head_state (3 samples, 0.22%)</title><rect x="48.5156%" y="485" width="0.2172%" height="15" fill="rgb(232,164,16)"/><text x="48.7656%" y="495.50"></text></g><g><title>sock_rfree (2 samples, 0.14%)</title><rect x="48.5880%" y="469" width="0.1448%" height="15" fill="rgb(244,205,15)"/><text x="48.8380%" y="479.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.14%)</title><rect x="48.7328%" y="501" width="0.1448%" height="15" fill="rgb(223,117,47)"/><text x="48.9828%" y="511.50"></text></g><g><title>remove_wait_queue (2 samples, 0.14%)</title><rect x="49.0224%" y="485" width="0.1448%" height="15" fill="rgb(244,107,35)"/><text x="49.2724%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.14%)</title><rect x="49.0224%" y="469" width="0.1448%" height="15" fill="rgb(205,140,8)"/><text x="49.2724%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (6 samples, 0.43%)</title><rect x="49.5293%" y="421" width="0.4345%" height="15" fill="rgb(228,84,46)"/><text x="49.7793%" y="431.50"></text></g><g><title>ctx_sched_out (4 samples, 0.29%)</title><rect x="49.6741%" y="405" width="0.2896%" height="15" fill="rgb(254,188,9)"/><text x="49.9241%" y="415.50"></text></g><g><title>update_curr (4 samples, 0.29%)</title><rect x="50.1810%" y="389" width="0.2896%" height="15" fill="rgb(206,112,54)"/><text x="50.4310%" y="399.50"></text></g><g><title>dequeue_task_fair (9 samples, 0.65%)</title><rect x="49.9638%" y="421" width="0.6517%" height="15" fill="rgb(216,84,49)"/><text x="50.2138%" y="431.50"></text></g><g><title>dequeue_entity (7 samples, 0.51%)</title><rect x="50.1086%" y="405" width="0.5069%" height="15" fill="rgb(214,194,35)"/><text x="50.3586%" y="415.50"></text></g><g><title>update_load_avg (2 samples, 0.14%)</title><rect x="50.4707%" y="389" width="0.1448%" height="15" fill="rgb(249,28,3)"/><text x="50.7207%" y="399.50"></text></g><g><title>finish_task_switch (3 samples, 0.22%)</title><rect x="50.6155%" y="421" width="0.2172%" height="15" fill="rgb(222,56,52)"/><text x="50.8655%" y="431.50"></text></g><g><title>sk_wait_data (32 samples, 2.32%)</title><rect x="48.8776%" y="501" width="2.3172%" height="15" fill="rgb(245,217,50)"/><text x="49.1276%" y="511.50">s..</text></g><g><title>wait_woken (28 samples, 2.03%)</title><rect x="49.1673%" y="485" width="2.0275%" height="15" fill="rgb(213,201,24)"/><text x="49.4173%" y="495.50">w..</text></g><g><title>schedule_timeout (24 samples, 1.74%)</title><rect x="49.4569%" y="469" width="1.7379%" height="15" fill="rgb(248,116,28)"/><text x="49.7069%" y="479.50"></text></g><g><title>schedule (23 samples, 1.67%)</title><rect x="49.5293%" y="453" width="1.6655%" height="15" fill="rgb(219,72,43)"/><text x="49.7793%" y="463.50"></text></g><g><title>__schedule (23 samples, 1.67%)</title><rect x="49.5293%" y="437" width="1.6655%" height="15" fill="rgb(209,138,14)"/><text x="49.7793%" y="447.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.14%)</title><rect x="51.1948%" y="501" width="0.1448%" height="15" fill="rgb(222,18,33)"/><text x="51.4448%" y="511.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.14%)</title><rect x="51.1948%" y="485" width="0.1448%" height="15" fill="rgb(213,199,7)"/><text x="51.4448%" y="495.50"></text></g><g><title>do_syscall_64 (43 samples, 3.11%)</title><rect x="48.3707%" y="581" width="3.1137%" height="15" fill="rgb(250,110,10)"/><text x="48.6207%" y="591.50">do_..</text></g><g><title>__x64_sys_recvfrom (43 samples, 3.11%)</title><rect x="48.3707%" y="565" width="3.1137%" height="15" fill="rgb(248,123,6)"/><text x="48.6207%" y="575.50">__x..</text></g><g><title>__sys_recvfrom (43 samples, 3.11%)</title><rect x="48.3707%" y="549" width="3.1137%" height="15" fill="rgb(206,91,31)"/><text x="48.6207%" y="559.50">__s..</text></g><g><title>inet_recvmsg (43 samples, 3.11%)</title><rect x="48.3707%" y="533" width="3.1137%" height="15" fill="rgb(211,154,13)"/><text x="48.6207%" y="543.50">ine..</text></g><g><title>tcp_recvmsg (43 samples, 3.11%)</title><rect x="48.3707%" y="517" width="3.1137%" height="15" fill="rgb(225,148,7)"/><text x="48.6207%" y="527.50">tcp..</text></g><g><title>entry_SYSCALL_64 (46 samples, 3.33%)</title><rect x="48.3707%" y="597" width="3.3309%" height="15" fill="rgb(220,160,43)"/><text x="48.6207%" y="607.50">ent..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.22%)</title><rect x="51.4844%" y="581" width="0.2172%" height="15" fill="rgb(213,52,39)"/><text x="51.7344%" y="591.50"></text></g><g><title>__libc_recv (48 samples, 3.48%)</title><rect x="48.2983%" y="613" width="3.4757%" height="15" fill="rgb(243,137,7)"/><text x="48.5483%" y="623.50">__l..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (49 samples, 3.55%)</title><rect x="48.2983%" y="693" width="3.5482%" height="15" fill="rgb(230,79,13)"/><text x="48.5483%" y="703.50">&lt;std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (49 samples, 3.55%)</title><rect x="48.2983%" y="677" width="3.5482%" height="15" fill="rgb(247,105,23)"/><text x="48.5483%" y="687.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::read (49 samples, 3.55%)</title><rect x="48.2983%" y="661" width="3.5482%" height="15" fill="rgb(223,179,41)"/><text x="48.5483%" y="671.50">std:..</text></g><g><title>std::sys::unix::net::Socket::read (49 samples, 3.55%)</title><rect x="48.2983%" y="645" width="3.5482%" height="15" fill="rgb(218,9,34)"/><text x="48.5483%" y="655.50">std:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (49 samples, 3.55%)</title><rect x="48.2983%" y="629" width="3.5482%" height="15" fill="rgb(222,106,8)"/><text x="48.5483%" y="639.50">std:..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 3.77%)</title><rect x="48.2983%" y="709" width="3.7654%" height="15" fill="rgb(211,220,0)"/><text x="48.5483%" y="719.50">&lt;mys..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.22%)</title><rect x="51.8465%" y="693" width="0.2172%" height="15" fill="rgb(229,52,16)"/><text x="52.0965%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.22%)</title><rect x="51.8465%" y="677" width="0.2172%" height="15" fill="rgb(212,155,18)"/><text x="52.0965%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.22%)</title><rect x="51.8465%" y="661" width="0.2172%" height="15" fill="rgb(242,21,14)"/><text x="52.0965%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.14%)</title><rect x="51.9189%" y="645" width="0.1448%" height="15" fill="rgb(222,19,48)"/><text x="52.1689%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="52.0637%" y="709" width="0.1448%" height="15" fill="rgb(232,45,27)"/><text x="52.3137%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (60 samples, 4.34%)</title><rect x="48.0811%" y="741" width="4.3447%" height="15" fill="rgb(249,103,42)"/><text x="48.3311%" y="751.50">mysql..</text></g><g><title>mysql::conn::Conn::read_packet (59 samples, 4.27%)</title><rect x="48.1535%" y="725" width="4.2723%" height="15" fill="rgb(246,81,33)"/><text x="48.4035%" y="735.50">mysql..</text></g><g><title>std::io::error::Error::_new (3 samples, 0.22%)</title><rect x="52.2085%" y="709" width="0.2172%" height="15" fill="rgb(252,33,42)"/><text x="52.4585%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.22%)</title><rect x="52.2085%" y="693" width="0.2172%" height="15" fill="rgb(209,212,41)"/><text x="52.4585%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.22%)</title><rect x="52.2085%" y="677" width="0.2172%" height="15" fill="rgb(207,154,6)"/><text x="52.4585%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.22%)</title><rect x="52.2085%" y="661" width="0.2172%" height="15" fill="rgb(223,64,47)"/><text x="52.4585%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.22%)</title><rect x="52.2085%" y="645" width="0.2172%" height="15" fill="rgb(211,161,38)"/><text x="52.4585%" y="655.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.22%)</title><rect x="52.2085%" y="629" width="0.2172%" height="15" fill="rgb(219,138,40)"/><text x="52.4585%" y="639.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.22%)</title><rect x="52.2085%" y="613" width="0.2172%" height="15" fill="rgb(241,228,46)"/><text x="52.4585%" y="623.50"></text></g><g><title>_int_malloc (3 samples, 0.22%)</title><rect x="52.2085%" y="597" width="0.2172%" height="15" fill="rgb(223,209,38)"/><text x="52.4585%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (61 samples, 4.42%)</title><rect x="48.0811%" y="773" width="4.4171%" height="15" fill="rgb(236,164,45)"/><text x="48.3311%" y="783.50">&lt;mysq..</text></g><g><title>mysql::conn::Conn::_query (61 samples, 4.42%)</title><rect x="48.0811%" y="757" width="4.4171%" height="15" fill="rgb(231,15,5)"/><text x="48.3311%" y="767.50">mysql..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="52.5706%" y="709" width="0.1448%" height="15" fill="rgb(252,35,15)"/><text x="52.8206%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="52.5706%" y="693" width="0.1448%" height="15" fill="rgb(248,181,18)"/><text x="52.8206%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="52.5706%" y="677" width="0.1448%" height="15" fill="rgb(233,39,42)"/><text x="52.8206%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="52.5706%" y="661" width="0.1448%" height="15" fill="rgb(238,110,33)"/><text x="52.8206%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="52.5706%" y="645" width="0.1448%" height="15" fill="rgb(233,195,10)"/><text x="52.8206%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="52.5706%" y="629" width="0.1448%" height="15" fill="rgb(254,105,3)"/><text x="52.8206%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="52.5706%" y="613" width="0.1448%" height="15" fill="rgb(221,225,9)"/><text x="52.8206%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="52.5706%" y="597" width="0.1448%" height="15" fill="rgb(224,227,45)"/><text x="52.8206%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="52.5706%" y="581" width="0.1448%" height="15" fill="rgb(229,198,43)"/><text x="52.8206%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="52.5706%" y="565" width="0.1448%" height="15" fill="rgb(206,209,35)"/><text x="52.8206%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="52.5706%" y="549" width="0.1448%" height="15" fill="rgb(245,195,53)"/><text x="52.8206%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="52.5706%" y="533" width="0.1448%" height="15" fill="rgb(240,92,26)"/><text x="52.8206%" y="543.50"></text></g><g><title>__GI___mprotect (2 samples, 0.14%)</title><rect x="52.7878%" y="661" width="0.1448%" height="15" fill="rgb(207,40,23)"/><text x="53.0378%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.14%)</title><rect x="52.7878%" y="645" width="0.1448%" height="15" fill="rgb(223,111,35)"/><text x="53.0378%" y="655.50"></text></g><g><title>page_fault (2 samples, 0.14%)</title><rect x="52.9327%" y="661" width="0.1448%" height="15" fill="rgb(229,147,28)"/><text x="53.1827%" y="671.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.14%)</title><rect x="52.9327%" y="645" width="0.1448%" height="15" fill="rgb(211,29,28)"/><text x="53.1827%" y="655.50"></text></g><g><title>handle_mm_fault (2 samples, 0.14%)</title><rect x="52.9327%" y="629" width="0.1448%" height="15" fill="rgb(228,72,33)"/><text x="53.1827%" y="639.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.43%)</title><rect x="52.7154%" y="709" width="0.4345%" height="15" fill="rgb(205,214,31)"/><text x="52.9654%" y="719.50"></text></g><g><title>_int_malloc (6 samples, 0.43%)</title><rect x="52.7154%" y="693" width="0.4345%" height="15" fill="rgb(224,111,15)"/><text x="52.9654%" y="703.50"></text></g><g><title>sysmalloc (6 samples, 0.43%)</title><rect x="52.7154%" y="677" width="0.4345%" height="15" fill="rgb(253,21,26)"/><text x="52.9654%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (9 samples, 0.65%)</title><rect x="52.5706%" y="773" width="0.6517%" height="15" fill="rgb(245,139,43)"/><text x="52.8206%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (9 samples, 0.65%)</title><rect x="52.5706%" y="757" width="0.6517%" height="15" fill="rgb(252,170,7)"/><text x="52.8206%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (9 samples, 0.65%)</title><rect x="52.5706%" y="741" width="0.6517%" height="15" fill="rgb(231,118,14)"/><text x="52.8206%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.65%)</title><rect x="52.5706%" y="725" width="0.6517%" height="15" fill="rgb(238,83,0)"/><text x="52.8206%" y="735.50"></text></g><g><title>decor::helpers::str_ident_match (2 samples, 0.14%)</title><rect x="53.2947%" y="773" width="0.1448%" height="15" fill="rgb(221,39,39)"/><text x="53.5447%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="53.2947%" y="757" width="0.1448%" height="15" fill="rgb(222,119,46)"/><text x="53.5447%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="53.2947%" y="741" width="0.1448%" height="15" fill="rgb(222,165,49)"/><text x="53.5447%" y="751.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="53.2947%" y="725" width="0.1448%" height="15" fill="rgb(219,113,52)"/><text x="53.5447%" y="735.50"></text></g><g><title>_int_realloc (2 samples, 0.14%)</title><rect x="53.2947%" y="709" width="0.1448%" height="15" fill="rgb(214,7,15)"/><text x="53.5447%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="53.4395%" y="757" width="0.1448%" height="15" fill="rgb(235,32,4)"/><text x="53.6895%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="53.4395%" y="741" width="0.1448%" height="15" fill="rgb(238,90,54)"/><text x="53.6895%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="53.4395%" y="725" width="0.1448%" height="15" fill="rgb(213,208,19)"/><text x="53.6895%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="53.4395%" y="709" width="0.1448%" height="15" fill="rgb(233,156,4)"/><text x="53.6895%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="53.4395%" y="693" width="0.1448%" height="15" fill="rgb(207,194,5)"/><text x="53.6895%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="53.4395%" y="677" width="0.1448%" height="15" fill="rgb(206,111,30)"/><text x="53.6895%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="53.4395%" y="661" width="0.1448%" height="15" fill="rgb(243,70,54)"/><text x="53.6895%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="53.4395%" y="645" width="0.1448%" height="15" fill="rgb(242,28,8)"/><text x="53.6895%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="53.4395%" y="629" width="0.1448%" height="15" fill="rgb(219,106,18)"/><text x="53.6895%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="53.4395%" y="613" width="0.1448%" height="15" fill="rgb(244,222,10)"/><text x="53.6895%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="53.4395%" y="597" width="0.1448%" height="15" fill="rgb(236,179,52)"/><text x="53.6895%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="53.4395%" y="581" width="0.1448%" height="15" fill="rgb(213,23,39)"/><text x="53.6895%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="53.4395%" y="565" width="0.1448%" height="15" fill="rgb(238,48,10)"/><text x="53.6895%" y="575.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="53.4395%" y="549" width="0.1448%" height="15" fill="rgb(251,196,23)"/><text x="53.6895%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.22%)</title><rect x="53.5844%" y="757" width="0.2172%" height="15" fill="rgb(250,152,24)"/><text x="53.8344%" y="767.50"></text></g><g><title>_int_malloc (3 samples, 0.22%)</title><rect x="53.5844%" y="741" width="0.2172%" height="15" fill="rgb(209,150,17)"/><text x="53.8344%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="53.8016%" y="741" width="0.1448%" height="15" fill="rgb(234,202,34)"/><text x="54.0516%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="53.8016%" y="725" width="0.1448%" height="15" fill="rgb(253,148,53)"/><text x="54.0516%" y="735.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (9 samples, 0.65%)</title><rect x="53.4395%" y="773" width="0.6517%" height="15" fill="rgb(218,129,16)"/><text x="53.6895%" y="783.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (4 samples, 0.29%)</title><rect x="53.8016%" y="757" width="0.2896%" height="15" fill="rgb(216,85,19)"/><text x="54.0516%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (2 samples, 0.14%)</title><rect x="53.9464%" y="741" width="0.1448%" height="15" fill="rgb(235,228,7)"/><text x="54.1964%" y="751.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (2 samples, 0.14%)</title><rect x="53.9464%" y="725" width="0.1448%" height="15" fill="rgb(245,175,0)"/><text x="54.1964%" y="735.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (3 samples, 0.22%)</title><rect x="54.0912%" y="773" width="0.2172%" height="15" fill="rgb(208,168,36)"/><text x="54.3412%" y="783.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (3 samples, 0.22%)</title><rect x="54.0912%" y="757" width="0.2172%" height="15" fill="rgb(246,171,24)"/><text x="54.3412%" y="767.50"></text></g><g><title>decor::helpers::str_subset_of_idents (3 samples, 0.22%)</title><rect x="54.0912%" y="741" width="0.2172%" height="15" fill="rgb(215,142,24)"/><text x="54.3412%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.22%)</title><rect x="54.0912%" y="725" width="0.2172%" height="15" fill="rgb(250,187,7)"/><text x="54.3412%" y="735.50"></text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="54.3809%" y="501" width="0.1448%" height="15" fill="rgb(228,66,33)"/><text x="54.6309%" y="511.50"></text></g><g><title>skb_release_head_state (2 samples, 0.14%)</title><rect x="54.3809%" y="485" width="0.1448%" height="15" fill="rgb(234,215,21)"/><text x="54.6309%" y="495.50"></text></g><g><title>dst_release (2 samples, 0.14%)</title><rect x="54.3809%" y="469" width="0.1448%" height="15" fill="rgb(222,191,20)"/><text x="54.6309%" y="479.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="54.7429%" y="421" width="0.1448%" height="15" fill="rgb(245,79,54)"/><text x="54.9929%" y="431.50"></text></g><g><title>sk_wait_data (6 samples, 0.43%)</title><rect x="54.5257%" y="501" width="0.4345%" height="15" fill="rgb(240,10,37)"/><text x="54.7757%" y="511.50"></text></g><g><title>wait_woken (4 samples, 0.29%)</title><rect x="54.6705%" y="485" width="0.2896%" height="15" fill="rgb(214,192,32)"/><text x="54.9205%" y="495.50"></text></g><g><title>schedule_timeout (4 samples, 0.29%)</title><rect x="54.6705%" y="469" width="0.2896%" height="15" fill="rgb(209,36,54)"/><text x="54.9205%" y="479.50"></text></g><g><title>schedule (4 samples, 0.29%)</title><rect x="54.6705%" y="453" width="0.2896%" height="15" fill="rgb(220,10,11)"/><text x="54.9205%" y="463.50"></text></g><g><title>__schedule (4 samples, 0.29%)</title><rect x="54.6705%" y="437" width="0.2896%" height="15" fill="rgb(221,106,17)"/><text x="54.9205%" y="447.50"></text></g><g><title>do_syscall_64 (9 samples, 0.65%)</title><rect x="54.3809%" y="581" width="0.6517%" height="15" fill="rgb(251,142,44)"/><text x="54.6309%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 0.65%)</title><rect x="54.3809%" y="565" width="0.6517%" height="15" fill="rgb(238,13,15)"/><text x="54.6309%" y="575.50"></text></g><g><title>__sys_recvfrom (9 samples, 0.65%)</title><rect x="54.3809%" y="549" width="0.6517%" height="15" fill="rgb(208,107,27)"/><text x="54.6309%" y="559.50"></text></g><g><title>inet_recvmsg (9 samples, 0.65%)</title><rect x="54.3809%" y="533" width="0.6517%" height="15" fill="rgb(205,136,37)"/><text x="54.6309%" y="543.50"></text></g><g><title>tcp_recvmsg (9 samples, 0.65%)</title><rect x="54.3809%" y="517" width="0.6517%" height="15" fill="rgb(250,205,27)"/><text x="54.6309%" y="527.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (10 samples, 0.72%)</title><rect x="54.3809%" y="741" width="0.7241%" height="15" fill="rgb(210,80,43)"/><text x="54.6309%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (10 samples, 0.72%)</title><rect x="54.3809%" y="725" width="0.7241%" height="15" fill="rgb(247,160,36)"/><text x="54.6309%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.72%)</title><rect x="54.3809%" y="709" width="0.7241%" height="15" fill="rgb(234,13,49)"/><text x="54.6309%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 0.72%)</title><rect x="54.3809%" y="693" width="0.7241%" height="15" fill="rgb(234,122,0)"/><text x="54.6309%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (10 samples, 0.72%)</title><rect x="54.3809%" y="677" width="0.7241%" height="15" fill="rgb(207,146,38)"/><text x="54.6309%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (10 samples, 0.72%)</title><rect x="54.3809%" y="661" width="0.7241%" height="15" fill="rgb(207,177,25)"/><text x="54.6309%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (10 samples, 0.72%)</title><rect x="54.3809%" y="645" width="0.7241%" height="15" fill="rgb(211,178,42)"/><text x="54.6309%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (10 samples, 0.72%)</title><rect x="54.3809%" y="629" width="0.7241%" height="15" fill="rgb(230,69,54)"/><text x="54.6309%" y="639.50"></text></g><g><title>__libc_recv (10 samples, 0.72%)</title><rect x="54.3809%" y="613" width="0.7241%" height="15" fill="rgb(214,135,41)"/><text x="54.6309%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.72%)</title><rect x="54.3809%" y="597" width="0.7241%" height="15" fill="rgb(237,67,25)"/><text x="54.6309%" y="607.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.14%)</title><rect x="55.2498%" y="453" width="0.1448%" height="15" fill="rgb(222,189,50)"/><text x="55.4998%" y="463.50"></text></g><g><title>sock_def_readable (2 samples, 0.14%)</title><rect x="55.4671%" y="229" width="0.1448%" height="15" fill="rgb(245,148,34)"/><text x="55.7171%" y="239.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.51%)</title><rect x="55.1774%" y="469" width="0.5069%" height="15" fill="rgb(222,29,6)"/><text x="55.4274%" y="479.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.29%)</title><rect x="55.3946%" y="453" width="0.2896%" height="15" fill="rgb(221,189,43)"/><text x="55.6446%" y="463.50"></text></g><g><title>do_softirq (4 samples, 0.29%)</title><rect x="55.3946%" y="437" width="0.2896%" height="15" fill="rgb(207,36,27)"/><text x="55.6446%" y="447.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.29%)</title><rect x="55.3946%" y="421" width="0.2896%" height="15" fill="rgb(217,90,24)"/><text x="55.6446%" y="431.50"></text></g><g><title>__do_softirq (4 samples, 0.29%)</title><rect x="55.3946%" y="405" width="0.2896%" height="15" fill="rgb(224,66,35)"/><text x="55.6446%" y="415.50"></text></g><g><title>net_rx_action (4 samples, 0.29%)</title><rect x="55.3946%" y="389" width="0.2896%" height="15" fill="rgb(221,13,50)"/><text x="55.6446%" y="399.50"></text></g><g><title>process_backlog (4 samples, 0.29%)</title><rect x="55.3946%" y="373" width="0.2896%" height="15" fill="rgb(236,68,49)"/><text x="55.6446%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.29%)</title><rect x="55.3946%" y="357" width="0.2896%" height="15" fill="rgb(229,146,28)"/><text x="55.6446%" y="367.50"></text></g><g><title>ip_rcv (4 samples, 0.29%)</title><rect x="55.3946%" y="341" width="0.2896%" height="15" fill="rgb(225,31,38)"/><text x="55.6446%" y="351.50"></text></g><g><title>ip_local_deliver (4 samples, 0.29%)</title><rect x="55.3946%" y="325" width="0.2896%" height="15" fill="rgb(250,208,3)"/><text x="55.6446%" y="335.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.29%)</title><rect x="55.3946%" y="309" width="0.2896%" height="15" fill="rgb(246,54,23)"/><text x="55.6446%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.29%)</title><rect x="55.3946%" y="293" width="0.2896%" height="15" fill="rgb(243,76,11)"/><text x="55.6446%" y="303.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.29%)</title><rect x="55.3946%" y="277" width="0.2896%" height="15" fill="rgb(245,21,50)"/><text x="55.6446%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.29%)</title><rect x="55.3946%" y="261" width="0.2896%" height="15" fill="rgb(228,9,43)"/><text x="55.6446%" y="271.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.22%)</title><rect x="55.4671%" y="245" width="0.2172%" height="15" fill="rgb(208,100,47)"/><text x="55.7171%" y="255.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (20 samples, 1.45%)</title><rect x="54.3085%" y="773" width="1.4482%" height="15" fill="rgb(232,26,8)"/><text x="54.5585%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (19 samples, 1.38%)</title><rect x="54.3809%" y="757" width="1.3758%" height="15" fill="rgb(216,166,38)"/><text x="54.6309%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (9 samples, 0.65%)</title><rect x="55.1050%" y="741" width="0.6517%" height="15" fill="rgb(251,202,51)"/><text x="55.3550%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (9 samples, 0.65%)</title><rect x="55.1050%" y="725" width="0.6517%" height="15" fill="rgb(254,216,34)"/><text x="55.3550%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (9 samples, 0.65%)</title><rect x="55.1050%" y="709" width="0.6517%" height="15" fill="rgb(251,32,27)"/><text x="55.3550%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (9 samples, 0.65%)</title><rect x="55.1050%" y="693" width="0.6517%" height="15" fill="rgb(208,127,28)"/><text x="55.3550%" y="703.50"></text></g><g><title>__libc_send (9 samples, 0.65%)</title><rect x="55.1050%" y="677" width="0.6517%" height="15" fill="rgb(224,137,22)"/><text x="55.3550%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.65%)</title><rect x="55.1050%" y="661" width="0.6517%" height="15" fill="rgb(254,70,32)"/><text x="55.3550%" y="671.50"></text></g><g><title>do_syscall_64 (9 samples, 0.65%)</title><rect x="55.1050%" y="645" width="0.6517%" height="15" fill="rgb(229,75,37)"/><text x="55.3550%" y="655.50"></text></g><g><title>__x64_sys_sendto (9 samples, 0.65%)</title><rect x="55.1050%" y="629" width="0.6517%" height="15" fill="rgb(252,64,23)"/><text x="55.3550%" y="639.50"></text></g><g><title>__sys_sendto (9 samples, 0.65%)</title><rect x="55.1050%" y="613" width="0.6517%" height="15" fill="rgb(232,162,48)"/><text x="55.3550%" y="623.50"></text></g><g><title>sock_sendmsg (9 samples, 0.65%)</title><rect x="55.1050%" y="597" width="0.6517%" height="15" fill="rgb(246,160,12)"/><text x="55.3550%" y="607.50"></text></g><g><title>tcp_sendmsg (9 samples, 0.65%)</title><rect x="55.1050%" y="581" width="0.6517%" height="15" fill="rgb(247,166,0)"/><text x="55.3550%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (9 samples, 0.65%)</title><rect x="55.1050%" y="565" width="0.6517%" height="15" fill="rgb(249,219,21)"/><text x="55.3550%" y="575.50"></text></g><g><title>__tcp_push_pending_frames (9 samples, 0.65%)</title><rect x="55.1050%" y="549" width="0.6517%" height="15" fill="rgb(205,209,3)"/><text x="55.3550%" y="559.50"></text></g><g><title>tcp_write_xmit (9 samples, 0.65%)</title><rect x="55.1050%" y="533" width="0.6517%" height="15" fill="rgb(243,44,1)"/><text x="55.3550%" y="543.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.65%)</title><rect x="55.1050%" y="517" width="0.6517%" height="15" fill="rgb(206,159,16)"/><text x="55.3550%" y="527.50"></text></g><g><title>__ip_queue_xmit (9 samples, 0.65%)</title><rect x="55.1050%" y="501" width="0.6517%" height="15" fill="rgb(244,77,30)"/><text x="55.3550%" y="511.50"></text></g><g><title>ip_output (8 samples, 0.58%)</title><rect x="55.1774%" y="485" width="0.5793%" height="15" fill="rgb(218,69,12)"/><text x="55.4274%" y="495.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (108 samples, 7.82%)</title><rect x="48.0087%" y="805" width="7.8204%" height="15" fill="rgb(212,87,7)"/><text x="48.2587%" y="815.50">decor::quer..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (108 samples, 7.82%)</title><rect x="48.0087%" y="789" width="7.8204%" height="15" fill="rgb(245,114,25)"/><text x="48.2587%" y="799.50">decor::quer..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.22%)</title><rect x="56.6980%" y="757" width="0.2172%" height="15" fill="rgb(210,61,42)"/><text x="56.9480%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="56.7705%" y="741" width="0.1448%" height="15" fill="rgb(211,52,33)"/><text x="57.0205%" y="751.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.72%)</title><rect x="56.9153%" y="757" width="0.7241%" height="15" fill="rgb(234,58,33)"/><text x="57.1653%" y="767.50"></text></g><g><title>_int_realloc (4 samples, 0.29%)</title><rect x="57.3497%" y="741" width="0.2896%" height="15" fill="rgb(220,115,36)"/><text x="57.5997%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.58%)</title><rect x="57.6394%" y="757" width="0.5793%" height="15" fill="rgb(243,153,54)"/><text x="57.8894%" y="767.50"></text></g><g><title>__rdl_realloc (3 samples, 0.22%)</title><rect x="58.2187%" y="757" width="0.2172%" height="15" fill="rgb(251,47,18)"/><text x="58.4687%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.14%)</title><rect x="58.2911%" y="741" width="0.1448%" height="15" fill="rgb(242,102,42)"/><text x="58.5411%" y="751.50"></text></g><g><title>__GI___libc_realloc (21 samples, 1.52%)</title><rect x="58.5083%" y="741" width="1.5206%" height="15" fill="rgb(234,31,38)"/><text x="58.7583%" y="751.50"></text></g><g><title>_int_realloc (19 samples, 1.38%)</title><rect x="58.6531%" y="725" width="1.3758%" height="15" fill="rgb(221,117,51)"/><text x="58.9031%" y="735.50"></text></g><g><title>_int_malloc (19 samples, 1.38%)</title><rect x="58.6531%" y="709" width="1.3758%" height="15" fill="rgb(212,20,18)"/><text x="58.9031%" y="719.50"></text></g><g><title>malloc_consolidate (12 samples, 0.87%)</title><rect x="59.1600%" y="693" width="0.8689%" height="15" fill="rgb(245,133,36)"/><text x="59.4100%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 1.74%)</title><rect x="58.4359%" y="757" width="1.7379%" height="15" fill="rgb(212,6,19)"/><text x="58.6859%" y="767.50"></text></g><g><title>__rdl_realloc (2 samples, 0.14%)</title><rect x="60.0290%" y="741" width="0.1448%" height="15" fill="rgb(218,1,36)"/><text x="60.2790%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (23 samples, 1.67%)</title><rect x="61.0427%" y="709" width="1.6655%" height="15" fill="rgb(246,84,54)"/><text x="61.2927%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 1.45%)</title><rect x="61.2600%" y="693" width="1.4482%" height="15" fill="rgb(242,110,6)"/><text x="61.5100%" y="703.50"></text></g><g><title>__GI___libc_malloc (19 samples, 1.38%)</title><rect x="61.3324%" y="677" width="1.3758%" height="15" fill="rgb(214,47,5)"/><text x="61.5824%" y="687.50"></text></g><g><title>_int_malloc (14 samples, 1.01%)</title><rect x="61.6944%" y="661" width="1.0138%" height="15" fill="rgb(218,159,25)"/><text x="61.9444%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (3 samples, 0.22%)</title><rect x="63.2151%" y="693" width="0.2172%" height="15" fill="rgb(215,211,28)"/><text x="63.4651%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad_integral (12 samples, 0.87%)</title><rect x="62.7082%" y="709" width="0.8689%" height="15" fill="rgb(238,59,32)"/><text x="62.9582%" y="719.50"></text></g><g><title>core::fmt::Formatter::sign_plus (2 samples, 0.14%)</title><rect x="63.4323%" y="693" width="0.1448%" height="15" fill="rgb(226,82,3)"/><text x="63.6823%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="63.5771%" y="709" width="0.1448%" height="15" fill="rgb(240,164,32)"/><text x="63.8271%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (47 samples, 3.40%)</title><rect x="60.3910%" y="741" width="3.4033%" height="15" fill="rgb(232,46,7)"/><text x="60.6410%" y="751.50">cor..</text></g><g><title>core::fmt::num::imp::fmt_u64 (47 samples, 3.40%)</title><rect x="60.3910%" y="725" width="3.4033%" height="15" fill="rgb(229,129,53)"/><text x="60.6410%" y="735.50">cor..</text></g><g><title>core::fmt::write (51 samples, 3.69%)</title><rect x="60.1738%" y="757" width="3.6930%" height="15" fill="rgb(234,188,29)"/><text x="60.4238%" y="767.50">core..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.65%)</title><rect x="64.0116%" y="693" width="0.6517%" height="15" fill="rgb(246,141,4)"/><text x="64.2616%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.65%)</title><rect x="64.0116%" y="677" width="0.6517%" height="15" fill="rgb(229,23,39)"/><text x="64.2616%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.65%)</title><rect x="64.0116%" y="661" width="0.6517%" height="15" fill="rgb(206,12,3)"/><text x="64.2616%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.43%)</title><rect x="64.2288%" y="645" width="0.4345%" height="15" fill="rgb(252,226,20)"/><text x="64.4788%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.43%)</title><rect x="64.2288%" y="629" width="0.4345%" height="15" fill="rgb(216,123,35)"/><text x="64.4788%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.43%)</title><rect x="64.2288%" y="613" width="0.4345%" height="15" fill="rgb(212,68,40)"/><text x="64.4788%" y="623.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.22%)</title><rect x="64.4461%" y="597" width="0.2172%" height="15" fill="rgb(254,125,32)"/><text x="64.6961%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.72%)</title><rect x="64.0116%" y="709" width="0.7241%" height="15" fill="rgb(253,97,22)"/><text x="64.2616%" y="719.50"></text></g><g><title>decor::helpers::expr_is_ucol (13 samples, 0.94%)</title><rect x="63.8668%" y="757" width="0.9413%" height="15" fill="rgb(241,101,14)"/><text x="64.1168%" y="767.50"></text></g><g><title>core::fmt::write (11 samples, 0.80%)</title><rect x="64.0116%" y="741" width="0.7965%" height="15" fill="rgb(238,103,29)"/><text x="64.2616%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (11 samples, 0.80%)</title><rect x="64.0116%" y="725" width="0.7965%" height="15" fill="rgb(233,195,47)"/><text x="64.2616%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (128 samples, 9.27%)</title><rect x="55.8291%" y="805" width="9.2686%" height="15" fill="rgb(246,218,30)"/><text x="56.0791%" y="815.50">decor::query_..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (128 samples, 9.27%)</title><rect x="55.8291%" y="789" width="9.2686%" height="15" fill="rgb(219,145,47)"/><text x="56.0791%" y="799.50">decor::query_..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (128 samples, 9.27%)</title><rect x="55.8291%" y="773" width="9.2686%" height="15" fill="rgb(243,12,26)"/><text x="56.0791%" y="783.50">decor::query_..</text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (4 samples, 0.29%)</title><rect x="64.8081%" y="757" width="0.2896%" height="15" fill="rgb(214,87,16)"/><text x="65.0581%" y="767.50"></text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="65.3874%" y="517" width="0.1448%" height="15" fill="rgb(208,99,42)"/><text x="65.6374%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.14%)</title><rect x="65.3874%" y="501" width="0.1448%" height="15" fill="rgb(253,99,2)"/><text x="65.6374%" y="511.50"></text></g><g><title>dst_release (2 samples, 0.14%)</title><rect x="65.3874%" y="485" width="0.1448%" height="15" fill="rgb(220,168,23)"/><text x="65.6374%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.14%)</title><rect x="65.6046%" y="437" width="0.1448%" height="15" fill="rgb(242,38,24)"/><text x="65.8546%" y="447.50"></text></g><g><title>ctx_sched_out (2 samples, 0.14%)</title><rect x="65.6046%" y="421" width="0.1448%" height="15" fill="rgb(225,182,9)"/><text x="65.8546%" y="431.50"></text></g><g><title>sk_wait_data (9 samples, 0.65%)</title><rect x="65.5322%" y="517" width="0.6517%" height="15" fill="rgb(243,178,37)"/><text x="65.7822%" y="527.50"></text></g><g><title>wait_woken (8 samples, 0.58%)</title><rect x="65.6046%" y="501" width="0.5793%" height="15" fill="rgb(232,139,19)"/><text x="65.8546%" y="511.50"></text></g><g><title>schedule_timeout (8 samples, 0.58%)</title><rect x="65.6046%" y="485" width="0.5793%" height="15" fill="rgb(225,201,24)"/><text x="65.8546%" y="495.50"></text></g><g><title>schedule (8 samples, 0.58%)</title><rect x="65.6046%" y="469" width="0.5793%" height="15" fill="rgb(221,47,46)"/><text x="65.8546%" y="479.50"></text></g><g><title>__schedule (8 samples, 0.58%)</title><rect x="65.6046%" y="453" width="0.5793%" height="15" fill="rgb(249,23,13)"/><text x="65.8546%" y="463.50"></text></g><g><title>inet_recvmsg (12 samples, 0.87%)</title><rect x="65.3874%" y="549" width="0.8689%" height="15" fill="rgb(219,9,5)"/><text x="65.6374%" y="559.50"></text></g><g><title>tcp_recvmsg (12 samples, 0.87%)</title><rect x="65.3874%" y="533" width="0.8689%" height="15" fill="rgb(254,171,16)"/><text x="65.6374%" y="543.50"></text></g><g><title>do_syscall_64 (15 samples, 1.09%)</title><rect x="65.2426%" y="597" width="1.0862%" height="15" fill="rgb(230,171,20)"/><text x="65.4926%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (15 samples, 1.09%)</title><rect x="65.2426%" y="581" width="1.0862%" height="15" fill="rgb(210,71,41)"/><text x="65.4926%" y="591.50"></text></g><g><title>__sys_recvfrom (15 samples, 1.09%)</title><rect x="65.2426%" y="565" width="1.0862%" height="15" fill="rgb(206,173,20)"/><text x="65.4926%" y="575.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.38%)</title><rect x="65.1702%" y="725" width="1.3758%" height="15" fill="rgb(233,88,34)"/><text x="65.4202%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (19 samples, 1.38%)</title><rect x="65.1702%" y="709" width="1.3758%" height="15" fill="rgb(223,209,46)"/><text x="65.4202%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 1.38%)</title><rect x="65.1702%" y="693" width="1.3758%" height="15" fill="rgb(250,43,18)"/><text x="65.4202%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (19 samples, 1.38%)</title><rect x="65.1702%" y="677" width="1.3758%" height="15" fill="rgb(208,13,10)"/><text x="65.4202%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (19 samples, 1.38%)</title><rect x="65.1702%" y="661" width="1.3758%" height="15" fill="rgb(212,200,36)"/><text x="65.4202%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (19 samples, 1.38%)</title><rect x="65.1702%" y="645" width="1.3758%" height="15" fill="rgb(225,90,30)"/><text x="65.4202%" y="655.50"></text></g><g><title>__libc_recv (19 samples, 1.38%)</title><rect x="65.1702%" y="629" width="1.3758%" height="15" fill="rgb(236,182,39)"/><text x="65.4202%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 1.30%)</title><rect x="65.2426%" y="613" width="1.3034%" height="15" fill="rgb(212,144,35)"/><text x="65.4926%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (3 samples, 0.22%)</title><rect x="66.3287%" y="597" width="0.2172%" height="15" fill="rgb(228,63,44)"/><text x="66.5787%" y="607.50"></text></g><g><title>mysql::conn::Conn::read_packet (20 samples, 1.45%)</title><rect x="65.1702%" y="741" width="1.4482%" height="15" fill="rgb(228,109,6)"/><text x="65.4202%" y="751.50"></text></g><g><title>lobsters::main (22 samples, 1.59%)</title><rect x="65.0978%" y="805" width="1.5930%" height="15" fill="rgb(238,117,24)"/><text x="65.3478%" y="815.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (21 samples, 1.52%)</title><rect x="65.1702%" y="789" width="1.5206%" height="15" fill="rgb(242,26,26)"/><text x="65.4202%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (21 samples, 1.52%)</title><rect x="65.1702%" y="773" width="1.5206%" height="15" fill="rgb(221,92,48)"/><text x="65.4202%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (21 samples, 1.52%)</title><rect x="65.1702%" y="757" width="1.5206%" height="15" fill="rgb(209,209,32)"/><text x="65.4202%" y="767.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.22%)</title><rect x="66.6908%" y="741" width="0.2172%" height="15" fill="rgb(221,70,22)"/><text x="66.9408%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.22%)</title><rect x="66.6908%" y="725" width="0.2172%" height="15" fill="rgb(248,145,5)"/><text x="66.9408%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.14%)</title><rect x="66.7632%" y="709" width="0.1448%" height="15" fill="rgb(226,116,26)"/><text x="67.0132%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.14%)</title><rect x="66.7632%" y="693" width="0.1448%" height="15" fill="rgb(244,5,17)"/><text x="67.0132%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.29%)</title><rect x="66.6908%" y="789" width="0.2896%" height="15" fill="rgb(252,159,33)"/><text x="66.9408%" y="799.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.29%)</title><rect x="66.6908%" y="773" width="0.2896%" height="15" fill="rgb(206,71,0)"/><text x="66.9408%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (4 samples, 0.29%)</title><rect x="66.6908%" y="757" width="0.2896%" height="15" fill="rgb(233,118,54)"/><text x="66.9408%" y="767.50"></text></g><g><title>dst_release (3 samples, 0.22%)</title><rect x="67.4873%" y="453" width="0.2172%" height="15" fill="rgb(234,83,48)"/><text x="67.7373%" y="463.50"></text></g><g><title>__kfree_skb (4 samples, 0.29%)</title><rect x="67.4873%" y="485" width="0.2896%" height="15" fill="rgb(228,3,54)"/><text x="67.7373%" y="495.50"></text></g><g><title>skb_release_head_state (4 samples, 0.29%)</title><rect x="67.4873%" y="469" width="0.2896%" height="15" fill="rgb(226,155,13)"/><text x="67.7373%" y="479.50"></text></g><g><title>account_entity_dequeue (2 samples, 0.14%)</title><rect x="68.3563%" y="373" width="0.1448%" height="15" fill="rgb(241,28,37)"/><text x="68.6063%" y="383.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.22%)</title><rect x="68.3563%" y="405" width="0.2172%" height="15" fill="rgb(233,93,10)"/><text x="68.6063%" y="415.50"></text></g><g><title>dequeue_entity (3 samples, 0.22%)</title><rect x="68.3563%" y="389" width="0.2172%" height="15" fill="rgb(225,113,19)"/><text x="68.6063%" y="399.50"></text></g><g><title>finish_task_switch (2 samples, 0.14%)</title><rect x="68.5735%" y="405" width="0.1448%" height="15" fill="rgb(241,2,18)"/><text x="68.8235%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.14%)</title><rect x="68.5735%" y="389" width="0.1448%" height="15" fill="rgb(228,207,21)"/><text x="68.8235%" y="399.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="68.7907%" y="405" width="0.1448%" height="15" fill="rgb(213,211,35)"/><text x="69.0407%" y="415.50"></text></g><g><title>psi_group_change (2 samples, 0.14%)</title><rect x="68.7907%" y="389" width="0.1448%" height="15" fill="rgb(209,83,10)"/><text x="69.0407%" y="399.50"></text></g><g><title>__schedule (11 samples, 0.80%)</title><rect x="68.2114%" y="421" width="0.7965%" height="15" fill="rgb(209,164,1)"/><text x="68.4614%" y="431.50"></text></g><g><title>sk_wait_data (17 samples, 1.23%)</title><rect x="67.8494%" y="485" width="1.2310%" height="15" fill="rgb(213,184,43)"/><text x="68.0994%" y="495.50"></text></g><g><title>wait_woken (15 samples, 1.09%)</title><rect x="67.9942%" y="469" width="1.0862%" height="15" fill="rgb(231,61,34)"/><text x="68.2442%" y="479.50"></text></g><g><title>schedule_timeout (13 samples, 0.94%)</title><rect x="68.1390%" y="453" width="0.9413%" height="15" fill="rgb(235,75,3)"/><text x="68.3890%" y="463.50"></text></g><g><title>schedule (12 samples, 0.87%)</title><rect x="68.2114%" y="437" width="0.8689%" height="15" fill="rgb(220,106,47)"/><text x="68.4614%" y="447.50"></text></g><g><title>inet_recvmsg (26 samples, 1.88%)</title><rect x="67.2701%" y="517" width="1.8827%" height="15" fill="rgb(210,196,33)"/><text x="67.5201%" y="527.50">i..</text></g><g><title>tcp_recvmsg (26 samples, 1.88%)</title><rect x="67.2701%" y="501" width="1.8827%" height="15" fill="rgb(229,154,42)"/><text x="67.5201%" y="511.50">t..</text></g><g><title>do_syscall_64 (28 samples, 2.03%)</title><rect x="67.1977%" y="565" width="2.0275%" height="15" fill="rgb(228,114,26)"/><text x="67.4477%" y="575.50">d..</text></g><g><title>__x64_sys_recvfrom (28 samples, 2.03%)</title><rect x="67.1977%" y="549" width="2.0275%" height="15" fill="rgb(208,144,1)"/><text x="67.4477%" y="559.50">_..</text></g><g><title>__sys_recvfrom (27 samples, 1.96%)</title><rect x="67.2701%" y="533" width="1.9551%" height="15" fill="rgb(239,112,37)"/><text x="67.5201%" y="543.50">_..</text></g><g><title>entry_SYSCALL_64 (30 samples, 2.17%)</title><rect x="67.1977%" y="581" width="2.1723%" height="15" fill="rgb(210,96,50)"/><text x="67.4477%" y="591.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="69.2252%" y="565" width="0.1448%" height="15" fill="rgb(222,178,2)"/><text x="69.4752%" y="575.50"></text></g><g><title>__libc_recv (33 samples, 2.39%)</title><rect x="67.0529%" y="597" width="2.3896%" height="15" fill="rgb(226,74,18)"/><text x="67.3029%" y="607.50">__..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 2.46%)</title><rect x="67.0529%" y="677" width="2.4620%" height="15" fill="rgb(225,67,54)"/><text x="67.3029%" y="687.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 2.46%)</title><rect x="67.0529%" y="661" width="2.4620%" height="15" fill="rgb(251,92,32)"/><text x="67.3029%" y="671.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 2.46%)</title><rect x="67.0529%" y="645" width="2.4620%" height="15" fill="rgb(228,149,22)"/><text x="67.3029%" y="655.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 2.46%)</title><rect x="67.0529%" y="629" width="2.4620%" height="15" fill="rgb(243,54,13)"/><text x="67.3029%" y="639.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 2.46%)</title><rect x="67.0529%" y="613" width="2.4620%" height="15" fill="rgb(243,180,28)"/><text x="67.3029%" y="623.50">st..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (37 samples, 2.68%)</title><rect x="66.9804%" y="757" width="2.6792%" height="15" fill="rgb(208,167,24)"/><text x="67.2304%" y="767.50">&lt;m..</text></g><g><title>mysql::conn::Conn::_query (37 samples, 2.68%)</title><rect x="66.9804%" y="741" width="2.6792%" height="15" fill="rgb(245,73,45)"/><text x="67.2304%" y="751.50">my..</text></g><g><title>mysql::conn::Conn::handle_result_set (37 samples, 2.68%)</title><rect x="66.9804%" y="725" width="2.6792%" height="15" fill="rgb(237,203,48)"/><text x="67.2304%" y="735.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (36 samples, 2.61%)</title><rect x="67.0529%" y="709" width="2.6068%" height="15" fill="rgb(211,197,16)"/><text x="67.3029%" y="719.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 2.61%)</title><rect x="67.0529%" y="693" width="2.6068%" height="15" fill="rgb(243,99,51)"/><text x="67.3029%" y="703.50">&lt;m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.14%)</title><rect x="69.5148%" y="677" width="0.1448%" height="15" fill="rgb(215,123,29)"/><text x="69.7648%" y="687.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (39 samples, 2.82%)</title><rect x="66.9804%" y="773" width="2.8240%" height="15" fill="rgb(239,186,37)"/><text x="67.2304%" y="783.50">de..</text></g><g><title>decor::helpers::answer_rows (2 samples, 0.14%)</title><rect x="69.6597%" y="757" width="0.1448%" height="15" fill="rgb(252,136,39)"/><text x="69.9097%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="69.6597%" y="741" width="0.1448%" height="15" fill="rgb(223,213,32)"/><text x="69.9097%" y="751.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.14%)</title><rect x="69.6597%" y="725" width="0.1448%" height="15" fill="rgb(233,115,5)"/><text x="69.9097%" y="735.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.29%)</title><rect x="69.8769%" y="693" width="0.2896%" height="15" fill="rgb(207,226,44)"/><text x="70.1269%" y="703.50"></text></g><g><title>_int_malloc (3 samples, 0.22%)</title><rect x="69.9493%" y="677" width="0.2172%" height="15" fill="rgb(208,126,0)"/><text x="70.1993%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.36%)</title><rect x="69.8769%" y="725" width="0.3621%" height="15" fill="rgb(244,66,21)"/><text x="70.1269%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.36%)</title><rect x="69.8769%" y="709" width="0.3621%" height="15" fill="rgb(222,97,12)"/><text x="70.1269%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (6 samples, 0.43%)</title><rect x="69.8769%" y="741" width="0.4345%" height="15" fill="rgb(219,213,19)"/><text x="70.1269%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (10 samples, 0.72%)</title><rect x="69.8045%" y="757" width="0.7241%" height="15" fill="rgb(252,169,30)"/><text x="70.0545%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="70.3838%" y="741" width="0.1448%" height="15" fill="rgb(206,32,51)"/><text x="70.6338%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="70.3838%" y="725" width="0.1448%" height="15" fill="rgb(250,172,42)"/><text x="70.6338%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="70.3838%" y="709" width="0.1448%" height="15" fill="rgb(209,34,43)"/><text x="70.6338%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.14%)</title><rect x="70.3838%" y="693" width="0.1448%" height="15" fill="rgb(223,11,35)"/><text x="70.6338%" y="703.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (57 samples, 4.13%)</title><rect x="66.6908%" y="805" width="4.1274%" height="15" fill="rgb(251,219,26)"/><text x="66.9408%" y="815.50">msql..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (53 samples, 3.84%)</title><rect x="66.9804%" y="789" width="3.8378%" height="15" fill="rgb(231,119,3)"/><text x="67.2304%" y="799.50">&lt;dec..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (14 samples, 1.01%)</title><rect x="69.8045%" y="773" width="1.0138%" height="15" fill="rgb(216,97,11)"/><text x="70.0545%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.29%)</title><rect x="70.5286%" y="757" width="0.2896%" height="15" fill="rgb(223,59,9)"/><text x="70.7786%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.22%)</title><rect x="70.6010%" y="741" width="0.2172%" height="15" fill="rgb(233,93,31)"/><text x="70.8510%" y="751.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="71.1803%" y="725" width="0.1448%" height="15" fill="rgb(239,81,33)"/><text x="71.4303%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.87%)</title><rect x="71.3975%" y="693" width="0.8689%" height="15" fill="rgb(213,120,34)"/><text x="71.6475%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.87%)</title><rect x="71.3975%" y="677" width="0.8689%" height="15" fill="rgb(243,49,53)"/><text x="71.6475%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.87%)</title><rect x="71.3975%" y="661" width="0.8689%" height="15" fill="rgb(247,216,33)"/><text x="71.6475%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.87%)</title><rect x="71.3975%" y="645" width="0.8689%" height="15" fill="rgb(226,26,14)"/><text x="71.6475%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (12 samples, 0.87%)</title><rect x="71.3975%" y="629" width="0.8689%" height="15" fill="rgb(215,49,53)"/><text x="71.6475%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.87%)</title><rect x="71.3975%" y="613" width="0.8689%" height="15" fill="rgb(245,162,40)"/><text x="71.6475%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (12 samples, 0.87%)</title><rect x="71.3975%" y="597" width="0.8689%" height="15" fill="rgb(229,68,17)"/><text x="71.6475%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.87%)</title><rect x="71.3975%" y="581" width="0.8689%" height="15" fill="rgb(213,182,10)"/><text x="71.6475%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.87%)</title><rect x="71.3975%" y="565" width="0.8689%" height="15" fill="rgb(245,125,30)"/><text x="71.6475%" y="575.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.16%)</title><rect x="71.1803%" y="805" width="1.1586%" height="15" fill="rgb(232,202,2)"/><text x="71.4303%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (16 samples, 1.16%)</title><rect x="71.1803%" y="789" width="1.1586%" height="15" fill="rgb(237,140,51)"/><text x="71.4303%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (16 samples, 1.16%)</title><rect x="71.1803%" y="773" width="1.1586%" height="15" fill="rgb(236,157,25)"/><text x="71.4303%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.16%)</title><rect x="71.1803%" y="757" width="1.1586%" height="15" fill="rgb(219,209,0)"/><text x="71.4303%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (16 samples, 1.16%)</title><rect x="71.1803%" y="741" width="1.1586%" height="15" fill="rgb(240,116,54)"/><text x="71.4303%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (14 samples, 1.01%)</title><rect x="71.3251%" y="725" width="1.0138%" height="15" fill="rgb(216,10,36)"/><text x="71.5751%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::expected (13 samples, 0.94%)</title><rect x="71.3975%" y="709" width="0.9413%" height="15" fill="rgb(222,72,44)"/><text x="71.6475%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (2 samples, 0.14%)</title><rect x="72.3389%" y="805" width="0.1448%" height="15" fill="rgb(232,159,9)"/><text x="72.5889%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.14%)</title><rect x="72.3389%" y="789" width="0.1448%" height="15" fill="rgb(210,39,32)"/><text x="72.5889%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.14%)</title><rect x="72.3389%" y="773" width="0.1448%" height="15" fill="rgb(216,194,45)"/><text x="72.5889%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.14%)</title><rect x="72.3389%" y="757" width="0.1448%" height="15" fill="rgb(218,18,35)"/><text x="72.5889%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.14%)</title><rect x="72.3389%" y="741" width="0.1448%" height="15" fill="rgb(207,83,51)"/><text x="72.5889%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.14%)</title><rect x="72.3389%" y="725" width="0.1448%" height="15" fill="rgb(225,63,43)"/><text x="72.5889%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="72.3389%" y="709" width="0.1448%" height="15" fill="rgb(207,57,36)"/><text x="72.5889%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="72.3389%" y="693" width="0.1448%" height="15" fill="rgb(216,99,33)"/><text x="72.5889%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="72.3389%" y="677" width="0.1448%" height="15" fill="rgb(225,42,16)"/><text x="72.5889%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="72.3389%" y="661" width="0.1448%" height="15" fill="rgb(220,201,45)"/><text x="72.5889%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="72.3389%" y="645" width="0.1448%" height="15" fill="rgb(225,33,4)"/><text x="72.5889%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.14%)</title><rect x="72.3389%" y="629" width="0.1448%" height="15" fill="rgb(224,33,50)"/><text x="72.5889%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="72.3389%" y="613" width="0.1448%" height="15" fill="rgb(246,198,51)"/><text x="72.5889%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="72.3389%" y="597" width="0.1448%" height="15" fill="rgb(205,22,4)"/><text x="72.5889%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.14%)</title><rect x="72.3389%" y="581" width="0.1448%" height="15" fill="rgb(206,3,8)"/><text x="72.5889%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="72.3389%" y="565" width="0.1448%" height="15" fill="rgb(251,23,15)"/><text x="72.5889%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="72.3389%" y="549" width="0.1448%" height="15" fill="rgb(252,88,28)"/><text x="72.5889%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="72.3389%" y="533" width="0.1448%" height="15" fill="rgb(212,127,14)"/><text x="72.5889%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="72.3389%" y="517" width="0.1448%" height="15" fill="rgb(247,145,37)"/><text x="72.5889%" y="527.50"></text></g><g><title>sysmalloc (2 samples, 0.14%)</title><rect x="72.3389%" y="501" width="0.1448%" height="15" fill="rgb(209,117,53)"/><text x="72.5889%" y="511.50"></text></g><g><title>do_syscall_64 (2 samples, 0.14%)</title><rect x="72.7734%" y="565" width="0.1448%" height="15" fill="rgb(212,90,42)"/><text x="73.0234%" y="575.50"></text></g><g><title>__x64_sys_openat (2 samples, 0.14%)</title><rect x="72.7734%" y="549" width="0.1448%" height="15" fill="rgb(218,164,37)"/><text x="73.0234%" y="559.50"></text></g><g><title>do_sys_openat2 (2 samples, 0.14%)</title><rect x="72.7734%" y="533" width="0.1448%" height="15" fill="rgb(246,65,34)"/><text x="73.0234%" y="543.50"></text></g><g><title>do_filp_open (2 samples, 0.14%)</title><rect x="72.7734%" y="517" width="0.1448%" height="15" fill="rgb(231,100,33)"/><text x="73.0234%" y="527.50"></text></g><g><title>path_openat (2 samples, 0.14%)</title><rect x="72.7734%" y="501" width="0.1448%" height="15" fill="rgb(228,126,14)"/><text x="73.0234%" y="511.50"></text></g><g><title>link_path_walk (2 samples, 0.14%)</title><rect x="72.7734%" y="485" width="0.1448%" height="15" fill="rgb(215,173,21)"/><text x="73.0234%" y="495.50"></text></g><g><title>inode_permission.part.0 (2 samples, 0.14%)</title><rect x="72.7734%" y="469" width="0.1448%" height="15" fill="rgb(210,6,40)"/><text x="73.0234%" y="479.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.22%)</title><rect x="72.7734%" y="805" width="0.2172%" height="15" fill="rgb(212,48,18)"/><text x="73.0234%" y="815.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.22%)</title><rect x="72.7734%" y="789" width="0.2172%" height="15" fill="rgb(230,214,11)"/><text x="73.0234%" y="799.50"></text></g><g><title>std::panicking::try (3 samples, 0.22%)</title><rect x="72.7734%" y="773" width="0.2172%" height="15" fill="rgb(254,105,39)"/><text x="73.0234%" y="783.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.22%)</title><rect x="72.7734%" y="757" width="0.2172%" height="15" fill="rgb(245,158,5)"/><text x="73.0234%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.22%)</title><rect x="72.7734%" y="741" width="0.2172%" height="15" fill="rgb(249,208,11)"/><text x="73.0234%" y="751.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.22%)</title><rect x="72.7734%" y="725" width="0.2172%" height="15" fill="rgb(210,39,28)"/><text x="73.0234%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.22%)</title><rect x="72.7734%" y="709" width="0.2172%" height="15" fill="rgb(211,56,53)"/><text x="73.0234%" y="719.50"></text></g><g><title>lobsters::main (3 samples, 0.22%)</title><rect x="72.7734%" y="693" width="0.2172%" height="15" fill="rgb(226,201,30)"/><text x="73.0234%" y="703.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.22%)</title><rect x="72.7734%" y="677" width="0.2172%" height="15" fill="rgb(239,101,34)"/><text x="73.0234%" y="687.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.22%)</title><rect x="72.7734%" y="661" width="0.2172%" height="15" fill="rgb(226,209,5)"/><text x="73.0234%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.22%)</title><rect x="72.7734%" y="645" width="0.2172%" height="15" fill="rgb(250,105,47)"/><text x="73.0234%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.22%)</title><rect x="72.7734%" y="629" width="0.2172%" height="15" fill="rgb(230,72,3)"/><text x="73.0234%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.22%)</title><rect x="72.7734%" y="613" width="0.2172%" height="15" fill="rgb(232,218,39)"/><text x="73.0234%" y="623.50"></text></g><g><title>__GI___openat (3 samples, 0.22%)</title><rect x="72.7734%" y="597" width="0.2172%" height="15" fill="rgb(248,166,6)"/><text x="73.0234%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.22%)</title><rect x="72.7734%" y="581" width="0.2172%" height="15" fill="rgb(247,89,20)"/><text x="73.0234%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.14%)</title><rect x="73.2078%" y="725" width="0.1448%" height="15" fill="rgb(248,130,54)"/><text x="73.4578%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (2 samples, 0.14%)</title><rect x="73.2078%" y="709" width="0.1448%" height="15" fill="rgb(234,196,4)"/><text x="73.4578%" y="719.50"></text></g><g><title>_int_free (3 samples, 0.22%)</title><rect x="73.5699%" y="709" width="0.2172%" height="15" fill="rgb(250,143,31)"/><text x="73.8199%" y="719.50"></text></g><g><title>[unknown] (895 samples, 64.81%)</title><rect x="9.1962%" y="821" width="64.8081%" height="15" fill="rgb(211,110,34)"/><text x="9.4462%" y="831.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.94%)</title><rect x="73.0630%" y="805" width="0.9413%" height="15" fill="rgb(215,124,48)"/><text x="73.3130%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (13 samples, 0.94%)</title><rect x="73.0630%" y="789" width="0.9413%" height="15" fill="rgb(216,46,13)"/><text x="73.3130%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (13 samples, 0.94%)</title><rect x="73.0630%" y="773" width="0.9413%" height="15" fill="rgb(205,184,25)"/><text x="73.3130%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (13 samples, 0.94%)</title><rect x="73.0630%" y="757" width="0.9413%" height="15" fill="rgb(228,1,10)"/><text x="73.3130%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (13 samples, 0.94%)</title><rect x="73.0630%" y="741" width="0.9413%" height="15" fill="rgb(213,116,27)"/><text x="73.3130%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.65%)</title><rect x="73.3526%" y="725" width="0.6517%" height="15" fill="rgb(241,95,50)"/><text x="73.6026%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.22%)</title><rect x="73.7871%" y="709" width="0.2172%" height="15" fill="rgb(238,48,32)"/><text x="74.0371%" y="719.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.22%)</title><rect x="74.2216%" y="677" width="0.2172%" height="15" fill="rgb(235,113,49)"/><text x="74.4716%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.22%)</title><rect x="74.2216%" y="661" width="0.2172%" height="15" fill="rgb(205,127,43)"/><text x="74.4716%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="74.2940%" y="645" width="0.1448%" height="15" fill="rgb(250,162,2)"/><text x="74.5440%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.14%)</title><rect x="74.2940%" y="629" width="0.1448%" height="15" fill="rgb(220,13,41)"/><text x="74.5440%" y="639.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.14%)</title><rect x="74.5112%" y="677" width="0.1448%" height="15" fill="rgb(249,221,25)"/><text x="74.7612%" y="687.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.14%)</title><rect x="75.0905%" y="469" width="0.1448%" height="15" fill="rgb(215,208,19)"/><text x="75.3405%" y="479.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.14%)</title><rect x="75.0905%" y="453" width="0.1448%" height="15" fill="rgb(236,175,2)"/><text x="75.3405%" y="463.50"></text></g><g><title>ip_output (2 samples, 0.14%)</title><rect x="75.0905%" y="437" width="0.1448%" height="15" fill="rgb(241,52,2)"/><text x="75.3405%" y="447.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.14%)</title><rect x="75.0905%" y="421" width="0.1448%" height="15" fill="rgb(248,140,14)"/><text x="75.3405%" y="431.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.14%)</title><rect x="75.4526%" y="389" width="0.1448%" height="15" fill="rgb(253,22,42)"/><text x="75.7026%" y="399.50"></text></g><g><title>dequeue_entity (2 samples, 0.14%)</title><rect x="75.4526%" y="373" width="0.1448%" height="15" fill="rgb(234,61,47)"/><text x="75.7026%" y="383.50"></text></g><g><title>update_load_avg (2 samples, 0.14%)</title><rect x="75.4526%" y="357" width="0.1448%" height="15" fill="rgb(208,226,15)"/><text x="75.7026%" y="367.50"></text></g><g><title>psi_task_change (2 samples, 0.14%)</title><rect x="75.6698%" y="389" width="0.1448%" height="15" fill="rgb(217,221,4)"/><text x="75.9198%" y="399.50"></text></g><g><title>psi_group_change (2 samples, 0.14%)</title><rect x="75.6698%" y="373" width="0.1448%" height="15" fill="rgb(212,174,34)"/><text x="75.9198%" y="383.50"></text></g><g><title>sk_wait_data (11 samples, 0.80%)</title><rect x="75.2353%" y="469" width="0.7965%" height="15" fill="rgb(253,83,4)"/><text x="75.4853%" y="479.50"></text></g><g><title>wait_woken (8 samples, 0.58%)</title><rect x="75.4526%" y="453" width="0.5793%" height="15" fill="rgb(250,195,49)"/><text x="75.7026%" y="463.50"></text></g><g><title>schedule_timeout (8 samples, 0.58%)</title><rect x="75.4526%" y="437" width="0.5793%" height="15" fill="rgb(241,192,25)"/><text x="75.7026%" y="447.50"></text></g><g><title>schedule (8 samples, 0.58%)</title><rect x="75.4526%" y="421" width="0.5793%" height="15" fill="rgb(208,124,10)"/><text x="75.7026%" y="431.50"></text></g><g><title>__schedule (8 samples, 0.58%)</title><rect x="75.4526%" y="405" width="0.5793%" height="15" fill="rgb(222,33,0)"/><text x="75.7026%" y="415.50"></text></g><g><title>update_rq_clock (2 samples, 0.14%)</title><rect x="75.8870%" y="389" width="0.1448%" height="15" fill="rgb(234,209,28)"/><text x="76.1370%" y="399.50"></text></g><g><title>inet_recvmsg (18 samples, 1.30%)</title><rect x="74.8733%" y="501" width="1.3034%" height="15" fill="rgb(224,11,23)"/><text x="75.1233%" y="511.50"></text></g><g><title>tcp_recvmsg (18 samples, 1.30%)</title><rect x="74.8733%" y="485" width="1.3034%" height="15" fill="rgb(232,99,1)"/><text x="75.1233%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.14%)</title><rect x="76.0319%" y="469" width="0.1448%" height="15" fill="rgb(237,95,45)"/><text x="76.2819%" y="479.50"></text></g><g><title>do_syscall_64 (20 samples, 1.45%)</title><rect x="74.8009%" y="549" width="1.4482%" height="15" fill="rgb(208,109,11)"/><text x="75.0509%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 1.45%)</title><rect x="74.8009%" y="533" width="1.4482%" height="15" fill="rgb(216,190,48)"/><text x="75.0509%" y="543.50"></text></g><g><title>__sys_recvfrom (20 samples, 1.45%)</title><rect x="74.8009%" y="517" width="1.4482%" height="15" fill="rgb(251,171,36)"/><text x="75.0509%" y="527.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 1.59%)</title><rect x="74.7285%" y="645" width="1.5930%" height="15" fill="rgb(230,62,22)"/><text x="74.9785%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 1.59%)</title><rect x="74.7285%" y="629" width="1.5930%" height="15" fill="rgb(225,114,35)"/><text x="74.9785%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 1.59%)</title><rect x="74.7285%" y="613" width="1.5930%" height="15" fill="rgb(215,118,42)"/><text x="74.9785%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 1.59%)</title><rect x="74.7285%" y="597" width="1.5930%" height="15" fill="rgb(243,119,21)"/><text x="74.9785%" y="607.50"></text></g><g><title>__libc_recv (22 samples, 1.59%)</title><rect x="74.7285%" y="581" width="1.5930%" height="15" fill="rgb(252,177,53)"/><text x="74.9785%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 1.52%)</title><rect x="74.8009%" y="565" width="1.5206%" height="15" fill="rgb(237,209,29)"/><text x="75.0509%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (23 samples, 1.67%)</title><rect x="74.7285%" y="661" width="1.6655%" height="15" fill="rgb(212,65,23)"/><text x="74.9785%" y="671.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (24 samples, 1.74%)</title><rect x="74.7285%" y="677" width="1.7379%" height="15" fill="rgb(230,222,46)"/><text x="74.9785%" y="687.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.29%)</title><rect x="76.9732%" y="405" width="0.2896%" height="15" fill="rgb(215,135,32)"/><text x="77.2232%" y="415.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.14%)</title><rect x="77.1180%" y="389" width="0.1448%" height="15" fill="rgb(246,101,22)"/><text x="77.3680%" y="399.50"></text></g><g><title>loopback_xmit (2 samples, 0.14%)</title><rect x="77.1180%" y="373" width="0.1448%" height="15" fill="rgb(206,107,13)"/><text x="77.3680%" y="383.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.14%)</title><rect x="77.7697%" y="213" width="0.1448%" height="15" fill="rgb(250,100,44)"/><text x="78.0197%" y="223.50"></text></g><g><title>enqueue_task (5 samples, 0.36%)</title><rect x="78.2766%" y="117" width="0.3621%" height="15" fill="rgb(231,147,38)"/><text x="78.5266%" y="127.50"></text></g><g><title>psi_task_change (5 samples, 0.36%)</title><rect x="78.2766%" y="101" width="0.3621%" height="15" fill="rgb(229,8,40)"/><text x="78.5266%" y="111.50"></text></g><g><title>psi_group_change (3 samples, 0.22%)</title><rect x="78.4214%" y="85" width="0.2172%" height="15" fill="rgb(221,135,30)"/><text x="78.6714%" y="95.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.14%)</title><rect x="78.6387%" y="117" width="0.1448%" height="15" fill="rgb(249,193,18)"/><text x="78.8887%" y="127.50"></text></g><g><title>enqueue_entity (2 samples, 0.14%)</title><rect x="78.6387%" y="101" width="0.1448%" height="15" fill="rgb(209,133,39)"/><text x="78.8887%" y="111.50"></text></g><g><title>sock_def_readable (10 samples, 0.72%)</title><rect x="78.2042%" y="181" width="0.7241%" height="15" fill="rgb(232,100,14)"/><text x="78.4542%" y="191.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.72%)</title><rect x="78.2042%" y="165" width="0.7241%" height="15" fill="rgb(224,185,1)"/><text x="78.4542%" y="175.50"></text></g><g><title>__wake_up_common (10 samples, 0.72%)</title><rect x="78.2042%" y="149" width="0.7241%" height="15" fill="rgb(223,139,8)"/><text x="78.4542%" y="159.50"></text></g><g><title>try_to_wake_up (9 samples, 0.65%)</title><rect x="78.2766%" y="133" width="0.6517%" height="15" fill="rgb(232,213,38)"/><text x="78.5266%" y="143.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.14%)</title><rect x="78.7835%" y="117" width="0.1448%" height="15" fill="rgb(207,94,22)"/><text x="79.0335%" y="127.50"></text></g><g><title>check_preempt_curr (2 samples, 0.14%)</title><rect x="78.7835%" y="101" width="0.1448%" height="15" fill="rgb(219,183,54)"/><text x="79.0335%" y="111.50"></text></g><g><title>__kfree_skb (2 samples, 0.14%)</title><rect x="79.0007%" y="165" width="0.1448%" height="15" fill="rgb(216,185,54)"/><text x="79.2507%" y="175.50"></text></g><g><title>tcp_ack (6 samples, 0.43%)</title><rect x="78.9283%" y="181" width="0.4345%" height="15" fill="rgb(254,217,39)"/><text x="79.1783%" y="191.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.14%)</title><rect x="79.2180%" y="165" width="0.1448%" height="15" fill="rgb(240,178,23)"/><text x="79.4680%" y="175.50"></text></g><g><title>__ip_queue_xmit (37 samples, 2.68%)</title><rect x="76.8284%" y="453" width="2.6792%" height="15" fill="rgb(218,11,47)"/><text x="77.0784%" y="463.50">__..</text></g><g><title>ip_output (36 samples, 2.61%)</title><rect x="76.9008%" y="437" width="2.6068%" height="15" fill="rgb(218,51,51)"/><text x="77.1508%" y="447.50">ip..</text></g><g><title>ip_finish_output2 (36 samples, 2.61%)</title><rect x="76.9008%" y="421" width="2.6068%" height="15" fill="rgb(238,126,27)"/><text x="77.1508%" y="431.50">ip..</text></g><g><title>__local_bh_enable_ip (31 samples, 2.24%)</title><rect x="77.2629%" y="405" width="2.2448%" height="15" fill="rgb(249,202,22)"/><text x="77.5129%" y="415.50">_..</text></g><g><title>do_softirq (31 samples, 2.24%)</title><rect x="77.2629%" y="389" width="2.2448%" height="15" fill="rgb(254,195,49)"/><text x="77.5129%" y="399.50">d..</text></g><g><title>do_softirq_own_stack (29 samples, 2.10%)</title><rect x="77.4077%" y="373" width="2.0999%" height="15" fill="rgb(208,123,14)"/><text x="77.6577%" y="383.50">d..</text></g><g><title>__do_softirq (29 samples, 2.10%)</title><rect x="77.4077%" y="357" width="2.0999%" height="15" fill="rgb(224,200,8)"/><text x="77.6577%" y="367.50">_..</text></g><g><title>net_rx_action (29 samples, 2.10%)</title><rect x="77.4077%" y="341" width="2.0999%" height="15" fill="rgb(217,61,36)"/><text x="77.6577%" y="351.50">n..</text></g><g><title>process_backlog (28 samples, 2.03%)</title><rect x="77.4801%" y="325" width="2.0275%" height="15" fill="rgb(206,35,45)"/><text x="77.7301%" y="335.50">p..</text></g><g><title>__netif_receive_skb_one_core (26 samples, 1.88%)</title><rect x="77.6249%" y="309" width="1.8827%" height="15" fill="rgb(217,65,33)"/><text x="77.8749%" y="319.50">_..</text></g><g><title>ip_rcv (26 samples, 1.88%)</title><rect x="77.6249%" y="293" width="1.8827%" height="15" fill="rgb(222,158,48)"/><text x="77.8749%" y="303.50">i..</text></g><g><title>ip_local_deliver (26 samples, 1.88%)</title><rect x="77.6249%" y="277" width="1.8827%" height="15" fill="rgb(254,2,54)"/><text x="77.8749%" y="287.50">i..</text></g><g><title>ip_local_deliver_finish (26 samples, 1.88%)</title><rect x="77.6249%" y="261" width="1.8827%" height="15" fill="rgb(250,143,38)"/><text x="77.8749%" y="271.50">i..</text></g><g><title>ip_protocol_deliver_rcu (26 samples, 1.88%)</title><rect x="77.6249%" y="245" width="1.8827%" height="15" fill="rgb(248,25,0)"/><text x="77.8749%" y="255.50">i..</text></g><g><title>tcp_v4_rcv (26 samples, 1.88%)</title><rect x="77.6249%" y="229" width="1.8827%" height="15" fill="rgb(206,152,27)"/><text x="77.8749%" y="239.50">t..</text></g><g><title>tcp_v4_do_rcv (20 samples, 1.45%)</title><rect x="78.0594%" y="213" width="1.4482%" height="15" fill="rgb(240,77,30)"/><text x="78.3094%" y="223.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.38%)</title><rect x="78.1318%" y="197" width="1.3758%" height="15" fill="rgb(231,5,3)"/><text x="78.3818%" y="207.50"></text></g><g><title>tcp_check_space (2 samples, 0.14%)</title><rect x="79.3628%" y="181" width="0.1448%" height="15" fill="rgb(207,226,32)"/><text x="79.6128%" y="191.50"></text></g><g><title>__tcp_transmit_skb (39 samples, 2.82%)</title><rect x="76.8284%" y="469" width="2.8240%" height="15" fill="rgb(222,207,47)"/><text x="77.0784%" y="479.50">__..</text></g><g><title>__tcp_push_pending_frames (42 samples, 3.04%)</title><rect x="76.7560%" y="501" width="3.0413%" height="15" fill="rgb(229,115,45)"/><text x="77.0060%" y="511.50">__t..</text></g><g><title>tcp_write_xmit (42 samples, 3.04%)</title><rect x="76.7560%" y="485" width="3.0413%" height="15" fill="rgb(224,191,6)"/><text x="77.0060%" y="495.50">tcp..</text></g><g><title>do_syscall_64 (49 samples, 3.55%)</title><rect x="76.4663%" y="597" width="3.5482%" height="15" fill="rgb(230,227,24)"/><text x="76.7163%" y="607.50">do_s..</text></g><g><title>__x64_sys_sendto (49 samples, 3.55%)</title><rect x="76.4663%" y="581" width="3.5482%" height="15" fill="rgb(228,80,19)"/><text x="76.7163%" y="591.50">__x6..</text></g><g><title>__sys_sendto (48 samples, 3.48%)</title><rect x="76.5387%" y="565" width="3.4757%" height="15" fill="rgb(247,229,0)"/><text x="76.7887%" y="575.50">__s..</text></g><g><title>sock_sendmsg (48 samples, 3.48%)</title><rect x="76.5387%" y="549" width="3.4757%" height="15" fill="rgb(237,194,15)"/><text x="76.7887%" y="559.50">soc..</text></g><g><title>tcp_sendmsg (48 samples, 3.48%)</title><rect x="76.5387%" y="533" width="3.4757%" height="15" fill="rgb(219,203,20)"/><text x="76.7887%" y="543.50">tcp..</text></g><g><title>tcp_sendmsg_locked (47 samples, 3.40%)</title><rect x="76.6112%" y="517" width="3.4033%" height="15" fill="rgb(234,128,8)"/><text x="76.8612%" y="527.50">tcp..</text></g><g><title>tcp_send_mss (2 samples, 0.14%)</title><rect x="79.8697%" y="501" width="0.1448%" height="15" fill="rgb(248,202,8)"/><text x="80.1197%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (51 samples, 3.69%)</title><rect x="76.4663%" y="613" width="3.6930%" height="15" fill="rgb(206,104,37)"/><text x="76.7163%" y="623.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="80.0145%" y="597" width="0.1448%" height="15" fill="rgb(223,8,27)"/><text x="80.2645%" y="607.50"></text></g><g><title>decor::Shim::run_on_tcp (85 samples, 6.15%)</title><rect x="74.1492%" y="709" width="6.1550%" height="15" fill="rgb(216,217,28)"/><text x="74.3992%" y="719.50">decor::S..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (85 samples, 6.15%)</title><rect x="74.1492%" y="693" width="6.1550%" height="15" fill="rgb(249,199,1)"/><text x="74.3992%" y="703.50">msql_srv..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (53 samples, 3.84%)</title><rect x="76.4663%" y="677" width="3.8378%" height="15" fill="rgb(240,85,17)"/><text x="76.7163%" y="687.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (53 samples, 3.84%)</title><rect x="76.4663%" y="661" width="3.8378%" height="15" fill="rgb(206,108,45)"/><text x="76.7163%" y="671.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (53 samples, 3.84%)</title><rect x="76.4663%" y="645" width="3.8378%" height="15" fill="rgb(245,210,41)"/><text x="76.7163%" y="655.50">std:..</text></g><g><title>__libc_send (53 samples, 3.84%)</title><rect x="76.4663%" y="629" width="3.8378%" height="15" fill="rgb(206,13,37)"/><text x="76.7163%" y="639.50">__li..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.14%)</title><rect x="80.1593%" y="613" width="0.1448%" height="15" fill="rgb(250,61,18)"/><text x="80.4093%" y="623.50"></text></g><g><title>__GI___clone (88 samples, 6.37%)</title><rect x="74.0043%" y="821" width="6.3722%" height="15" fill="rgb(235,172,48)"/><text x="74.2543%" y="831.50">__GI___c..</text></g><g><title>start_thread (88 samples, 6.37%)</title><rect x="74.0043%" y="805" width="6.3722%" height="15" fill="rgb(249,201,17)"/><text x="74.2543%" y="815.50">start_th..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (86 samples, 6.23%)</title><rect x="74.1492%" y="789" width="6.2274%" height="15" fill="rgb(219,208,6)"/><text x="74.3992%" y="799.50">std::sys..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (86 samples, 6.23%)</title><rect x="74.1492%" y="773" width="6.2274%" height="15" fill="rgb(248,31,23)"/><text x="74.3992%" y="783.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (86 samples, 6.23%)</title><rect x="74.1492%" y="757" width="6.2274%" height="15" fill="rgb(245,15,42)"/><text x="74.3992%" y="767.50">&lt;alloc::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (86 samples, 6.23%)</title><rect x="74.1492%" y="741" width="6.2274%" height="15" fill="rgb(222,217,39)"/><text x="74.3992%" y="751.50">core::op..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (86 samples, 6.23%)</title><rect x="74.1492%" y="725" width="6.2274%" height="15" fill="rgb(210,219,27)"/><text x="74.3992%" y="735.50">std::sys..</text></g><g><title>alloc::fmt::format (2 samples, 0.14%)</title><rect x="80.4490%" y="645" width="0.1448%" height="15" fill="rgb(252,166,36)"/><text x="80.6990%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.29%)</title><rect x="80.6662%" y="565" width="0.2896%" height="15" fill="rgb(245,132,34)"/><text x="80.9162%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.29%)</title><rect x="80.6662%" y="549" width="0.2896%" height="15" fill="rgb(236,54,3)"/><text x="80.9162%" y="559.50"></text></g><g><title>__set_cpus_allowed_ptr (234 samples, 16.94%)</title><rect x="81.1007%" y="469" width="16.9442%" height="15" fill="rgb(241,173,43)"/><text x="81.3507%" y="479.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 16.94%)</title><rect x="81.1007%" y="453" width="16.9442%" height="15" fill="rgb(215,190,9)"/><text x="81.3507%" y="463.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 16.94%)</title><rect x="81.1007%" y="437" width="16.9442%" height="15" fill="rgb(242,101,16)"/><text x="81.3507%" y="447.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 16.94%)</title><rect x="81.1007%" y="421" width="16.9442%" height="15" fill="rgb(223,190,21)"/><text x="81.3507%" y="431.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 16.94%)</title><rect x="81.1007%" y="405" width="16.9442%" height="15" fill="rgb(215,228,25)"/><text x="81.3507%" y="415.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 16.94%)</title><rect x="81.1007%" y="389" width="16.9442%" height="15" fill="rgb(225,36,22)"/><text x="81.3507%" y="399.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 16.94%)</title><rect x="81.1007%" y="373" width="16.9442%" height="15" fill="rgb(251,106,46)"/><text x="81.3507%" y="383.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 16.94%)</title><rect x="81.1007%" y="357" width="16.9442%" height="15" fill="rgb(208,90,1)"/><text x="81.3507%" y="367.50">__perf_event_task_sched_in</text></g><g><title>__intel_pmu_enable_all.constprop.0 (234 samples, 16.94%)</title><rect x="81.1007%" y="341" width="16.9442%" height="15" fill="rgb(243,10,4)"/><text x="81.3507%" y="351.50">__intel_pmu_enable_all.con..</text></g><g><title>native_write_msr (234 samples, 16.94%)</title><rect x="81.1007%" y="325" width="16.9442%" height="15" fill="rgb(212,137,27)"/><text x="81.3507%" y="335.50">native_write_msr</text></g><g><title>do_syscall_64 (235 samples, 17.02%)</title><rect x="81.1007%" y="517" width="17.0167%" height="15" fill="rgb(231,220,49)"/><text x="81.3507%" y="527.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 17.02%)</title><rect x="81.1007%" y="501" width="17.0167%" height="15" fill="rgb(237,96,20)"/><text x="81.3507%" y="511.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 17.02%)</title><rect x="81.1007%" y="485" width="17.0167%" height="15" fill="rgb(239,229,30)"/><text x="81.3507%" y="495.50">sched_setaffinity</text></g><g><title>entry_SYSCALL_64 (237 samples, 17.16%)</title><rect x="81.1007%" y="533" width="17.1615%" height="15" fill="rgb(219,65,33)"/><text x="81.3507%" y="543.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.14%)</title><rect x="98.1173%" y="517" width="0.1448%" height="15" fill="rgb(243,134,7)"/><text x="98.3673%" y="527.50"></text></g><g><title>__GI___sched_setaffinity_new (239 samples, 17.31%)</title><rect x="81.0282%" y="549" width="17.3063%" height="15" fill="rgb(216,177,54)"/><text x="81.2782%" y="559.50">__GI___sched_setaffinity_new</text></g><g><title>[libhwloc.so.15.2.0] (245 samples, 17.74%)</title><rect x="80.6662%" y="581" width="17.7408%" height="15" fill="rgb(211,160,20)"/><text x="80.9162%" y="591.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (241 samples, 17.45%)</title><rect x="80.9558%" y="565" width="17.4511%" height="15" fill="rgb(239,85,39)"/><text x="81.2058%" y="575.50">hwloc_linux_set_tid_cpubind</text></g><g><title>hwloc::Topology::new (246 samples, 17.81%)</title><rect x="80.6662%" y="645" width="17.8132%" height="15" fill="rgb(232,125,22)"/><text x="80.9162%" y="655.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (246 samples, 17.81%)</title><rect x="80.6662%" y="629" width="17.8132%" height="15" fill="rgb(244,57,34)"/><text x="80.9162%" y="639.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 17.81%)</title><rect x="80.6662%" y="613" width="17.8132%" height="15" fill="rgb(214,203,32)"/><text x="80.9162%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (246 samples, 17.81%)</title><rect x="80.6662%" y="597" width="17.8132%" height="15" fill="rgb(207,58,43)"/><text x="80.9162%" y="607.50">[libhwloc.so.15.2.0]</text></g><g><title>__libc_start_main (251 samples, 18.18%)</title><rect x="80.3765%" y="805" width="18.1752%" height="15" fill="rgb(215,193,15)"/><text x="80.6265%" y="815.50">__libc_start_main</text></g><g><title>main (251 samples, 18.18%)</title><rect x="80.3765%" y="789" width="18.1752%" height="15" fill="rgb(232,15,44)"/><text x="80.6265%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (251 samples, 18.18%)</title><rect x="80.3765%" y="773" width="18.1752%" height="15" fill="rgb(212,3,48)"/><text x="80.6265%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (251 samples, 18.18%)</title><rect x="80.3765%" y="757" width="18.1752%" height="15" fill="rgb(218,128,7)"/><text x="80.6265%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (251 samples, 18.18%)</title><rect x="80.3765%" y="741" width="18.1752%" height="15" fill="rgb(226,216,39)"/><text x="80.6265%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (251 samples, 18.18%)</title><rect x="80.3765%" y="725" width="18.1752%" height="15" fill="rgb(243,47,51)"/><text x="80.6265%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (251 samples, 18.18%)</title><rect x="80.3765%" y="709" width="18.1752%" height="15" fill="rgb(241,183,40)"/><text x="80.6265%" y="719.50">core::ops::function::impls::..</text></g><g><title>std::rt::lang_start::_{{closure}} (251 samples, 18.18%)</title><rect x="80.3765%" y="693" width="18.1752%" height="15" fill="rgb(231,217,32)"/><text x="80.6265%" y="703.50">std::rt::lang_start::_{{clos..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (251 samples, 18.18%)</title><rect x="80.3765%" y="677" width="18.1752%" height="15" fill="rgb(229,61,38)"/><text x="80.6265%" y="687.50">std::sys_common::backtrace::..</text></g><g><title>lobsters::main (251 samples, 18.18%)</title><rect x="80.3765%" y="661" width="18.1752%" height="15" fill="rgb(225,210,5)"/><text x="80.6265%" y="671.50">lobsters::main</text></g><g><title>_start (252 samples, 18.25%)</title><rect x="80.3765%" y="821" width="18.2476%" height="15" fill="rgb(231,79,45)"/><text x="80.6265%" y="831.50">_start</text></g><g><title>anon.6d3fe666058a5f5c5b5e1d071d173673.4.llvm.14443395898877840367 (2 samples, 0.14%)</title><rect x="98.7690%" y="821" width="0.1448%" height="15" fill="rgb(224,100,7)"/><text x="99.0190%" y="831.50"></text></g><g><title>_int_realloc (2 samples, 0.14%)</title><rect x="98.7690%" y="805" width="0.1448%" height="15" fill="rgb(241,198,18)"/><text x="99.0190%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.29%)</title><rect x="98.9862%" y="821" width="0.2896%" height="15" fill="rgb(252,97,53)"/><text x="99.2362%" y="831.50"></text></g><g><title>do_syscall_64 (2 samples, 0.14%)</title><rect x="99.1311%" y="805" width="0.1448%" height="15" fill="rgb(220,88,7)"/><text x="99.3811%" y="815.50"></text></g><g><title>lobsters (1,375 samples, 99.57%)</title><rect x="0.0000%" y="837" width="99.5655%" height="15" fill="rgb(213,176,14)"/><text x="0.2500%" y="847.50">lobsters</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.14%)</title><rect x="99.4207%" y="821" width="0.1448%" height="15" fill="rgb(246,73,7)"/><text x="99.6707%" y="831.50"></text></g><g><title>all (1,381 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(245,64,36)"/><text x="0.2500%" y="863.50"></text></g><g><title>perf (6 samples, 0.43%)</title><rect x="99.5655%" y="837" width="0.4345%" height="15" fill="rgb(245,80,10)"/><text x="99.8155%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.43%)</title><rect x="99.5655%" y="821" width="0.4345%" height="15" fill="rgb(232,107,50)"/><text x="99.8155%" y="831.50"></text></g><g><title>do_syscall_64 (6 samples, 0.43%)</title><rect x="99.5655%" y="805" width="0.4345%" height="15" fill="rgb(253,3,0)"/><text x="99.8155%" y="815.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.43%)</title><rect x="99.5655%" y="789" width="0.4345%" height="15" fill="rgb(212,99,53)"/><text x="99.8155%" y="799.50"></text></g><g><title>do_execve (6 samples, 0.43%)</title><rect x="99.5655%" y="773" width="0.4345%" height="15" fill="rgb(249,111,54)"/><text x="99.8155%" y="783.50"></text></g><g><title>__do_execve_file (6 samples, 0.43%)</title><rect x="99.5655%" y="757" width="0.4345%" height="15" fill="rgb(249,55,30)"/><text x="99.8155%" y="767.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.43%)</title><rect x="99.5655%" y="741" width="0.4345%" height="15" fill="rgb(237,47,42)"/><text x="99.8155%" y="751.50"></text></g><g><title>load_elf_binary (6 samples, 0.43%)</title><rect x="99.5655%" y="725" width="0.4345%" height="15" fill="rgb(211,20,18)"/><text x="99.8155%" y="735.50"></text></g><g><title>setup_new_exec (6 samples, 0.43%)</title><rect x="99.5655%" y="709" width="0.4345%" height="15" fill="rgb(231,203,46)"/><text x="99.8155%" y="719.50"></text></g><g><title>perf_event_exec (6 samples, 0.43%)</title><rect x="99.5655%" y="693" width="0.4345%" height="15" fill="rgb(237,142,3)"/><text x="99.8155%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.36%)</title><rect x="99.6379%" y="677" width="0.3621%" height="15" fill="rgb(241,107,1)"/><text x="99.8879%" y="687.50"></text></g><g><title>native_write_msr (5 samples, 0.36%)</title><rect x="99.6379%" y="661" width="0.3621%" height="15" fill="rgb(229,83,13)"/><text x="99.8879%" y="671.50"></text></g></svg></svg>