<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="901.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="901.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (54 samples, 0.71%)</title><rect x="0.2377%" y="821" width="0.7132%" height="15" fill="rgb(227,0,7)"/><text x="0.4877%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.11%)</title><rect x="0.9642%" y="821" width="0.1057%" height="15" fill="rgb(217,0,24)"/><text x="1.2142%" y="831.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.11%)</title><rect x="1.1095%" y="821" width="0.1057%" height="15" fill="rgb(221,193,54)"/><text x="1.3595%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.17%)</title><rect x="1.4397%" y="821" width="0.1717%" height="15" fill="rgb(248,212,6)"/><text x="1.6897%" y="831.50"></text></g><g><title>__GI___libc_free (14 samples, 0.18%)</title><rect x="1.6775%" y="821" width="0.1849%" height="15" fill="rgb(208,68,35)"/><text x="1.9275%" y="831.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.36%)</title><rect x="1.8624%" y="821" width="0.3566%" height="15" fill="rgb(232,128,0)"/><text x="2.1124%" y="831.50"></text></g><g><title>__GI___libc_realloc (38 samples, 0.50%)</title><rect x="2.2190%" y="821" width="0.5019%" height="15" fill="rgb(207,160,47)"/><text x="2.4690%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (57 samples, 0.75%)</title><rect x="2.7737%" y="821" width="0.7529%" height="15" fill="rgb(228,23,34)"/><text x="3.0237%" y="831.50"></text></g><g><title>__rdl_realloc (13 samples, 0.17%)</title><rect x="3.5662%" y="821" width="0.1717%" height="15" fill="rgb(218,30,26)"/><text x="3.8162%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (11 samples, 0.15%)</title><rect x="3.5927%" y="805" width="0.1453%" height="15" fill="rgb(220,122,19)"/><text x="3.8427%" y="815.50"></text></g><g><title>_int_free (117 samples, 1.55%)</title><rect x="3.7379%" y="821" width="1.5454%" height="15" fill="rgb(250,228,42)"/><text x="3.9879%" y="831.50"></text></g><g><title>_int_malloc (24 samples, 0.32%)</title><rect x="5.2833%" y="821" width="0.3170%" height="15" fill="rgb(240,193,28)"/><text x="5.5333%" y="831.50"></text></g><g><title>_int_realloc (19 samples, 0.25%)</title><rect x="5.6003%" y="821" width="0.2510%" height="15" fill="rgb(216,20,37)"/><text x="5.8503%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (100 samples, 1.32%)</title><rect x="5.8645%" y="821" width="1.3208%" height="15" fill="rgb(206,188,39)"/><text x="6.1145%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (24 samples, 0.32%)</title><rect x="7.1853%" y="821" width="0.3170%" height="15" fill="rgb(217,207,13)"/><text x="7.4353%" y="831.50"></text></g><g><title>alloc::string::String::push (13 samples, 0.17%)</title><rect x="7.5155%" y="821" width="0.1717%" height="15" fill="rgb(231,73,38)"/><text x="7.7655%" y="831.50"></text></g><g><title>core::fmt::write (27 samples, 0.36%)</title><rect x="7.7401%" y="821" width="0.3566%" height="15" fill="rgb(225,20,46)"/><text x="7.9901%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.16%)</title><rect x="8.1231%" y="821" width="0.1585%" height="15" fill="rgb(210,31,41)"/><text x="8.3731%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (12 samples, 0.16%)</title><rect x="8.4665%" y="821" width="0.1585%" height="15" fill="rgb(221,200,47)"/><text x="8.7165%" y="831.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (182 samples, 2.40%)</title><rect x="8.9948%" y="821" width="2.4039%" height="15" fill="rgb(226,26,5)"/><text x="9.2448%" y="831.50">sq..</text></g><g><title>[anon] (857 samples, 11.32%)</title><rect x="0.2377%" y="837" width="11.3195%" height="15" fill="rgb(249,33,26)"/><text x="0.4877%" y="847.50">[anon]</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.21%)</title><rect x="11.5837%" y="821" width="0.2113%" height="15" fill="rgb(235,183,28)"/><text x="11.8337%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (35 samples, 0.46%)</title><rect x="11.9931%" y="821" width="0.4623%" height="15" fill="rgb(221,5,38)"/><text x="12.2431%" y="831.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.12%)</title><rect x="12.5215%" y="821" width="0.1189%" height="15" fill="rgb(247,18,42)"/><text x="12.7715%" y="831.50"></text></g><g><title>_int_realloc (34 samples, 0.45%)</title><rect x="12.7592%" y="821" width="0.4491%" height="15" fill="rgb(241,131,45)"/><text x="13.0092%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.15%)</title><rect x="13.2083%" y="821" width="0.1453%" height="15" fill="rgb(249,31,29)"/><text x="13.4583%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad (14 samples, 0.18%)</title><rect x="13.3932%" y="821" width="0.1849%" height="15" fill="rgb(225,111,53)"/><text x="13.6432%" y="831.50"></text></g><g><title>[lobsters] (180 samples, 2.38%)</title><rect x="11.5837%" y="837" width="2.3775%" height="15" fill="rgb(238,160,17)"/><text x="11.8337%" y="847.50">[l..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.18%)</title><rect x="13.7763%" y="821" width="0.1849%" height="15" fill="rgb(214,148,48)"/><text x="14.0263%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.12%)</title><rect x="15.3480%" y="453" width="0.1189%" height="15" fill="rgb(232,36,49)"/><text x="15.5980%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (39 samples, 0.52%)</title><rect x="15.0178%" y="501" width="0.5151%" height="15" fill="rgb(209,103,24)"/><text x="15.2678%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (39 samples, 0.52%)</title><rect x="15.0178%" y="485" width="0.5151%" height="15" fill="rgb(229,88,8)"/><text x="15.2678%" y="495.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (35 samples, 0.46%)</title><rect x="15.0707%" y="469" width="0.4623%" height="15" fill="rgb(213,181,19)"/><text x="15.3207%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (81 samples, 1.07%)</title><rect x="14.8461%" y="517" width="1.0699%" height="15" fill="rgb(254,191,54)"/><text x="15.0961%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (29 samples, 0.38%)</title><rect x="15.5330%" y="501" width="0.3830%" height="15" fill="rgb(241,83,37)"/><text x="15.7830%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (21 samples, 0.28%)</title><rect x="15.9160%" y="517" width="0.2774%" height="15" fill="rgb(233,36,39)"/><text x="16.1660%" y="527.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (21 samples, 0.28%)</title><rect x="15.9160%" y="501" width="0.2774%" height="15" fill="rgb(226,3,54)"/><text x="16.1660%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (19 samples, 0.25%)</title><rect x="15.9424%" y="485" width="0.2510%" height="15" fill="rgb(245,192,40)"/><text x="16.1924%" y="495.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (11 samples, 0.15%)</title><rect x="16.0481%" y="469" width="0.1453%" height="15" fill="rgb(238,167,29)"/><text x="16.2981%" y="479.50"></text></g><g><title>__GI___libc_free (12 samples, 0.16%)</title><rect x="16.6953%" y="469" width="0.1585%" height="15" fill="rgb(232,182,51)"/><text x="16.9453%" y="479.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.16%)</title><rect x="16.8538%" y="469" width="0.1585%" height="15" fill="rgb(231,60,39)"/><text x="17.1038%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.17%)</title><rect x="17.0123%" y="469" width="0.1717%" height="15" fill="rgb(208,69,12)"/><text x="17.2623%" y="479.50"></text></g><g><title>_int_free (18 samples, 0.24%)</title><rect x="17.2897%" y="469" width="0.2377%" height="15" fill="rgb(235,93,37)"/><text x="17.5397%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (101 samples, 1.33%)</title><rect x="16.2462%" y="501" width="1.3340%" height="15" fill="rgb(213,116,39)"/><text x="16.4962%" y="511.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (99 samples, 1.31%)</title><rect x="16.2726%" y="485" width="1.3076%" height="15" fill="rgb(222,207,29)"/><text x="16.5226%" y="495.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.12%)</title><rect x="17.6859%" y="485" width="0.1189%" height="15" fill="rgb(206,96,30)"/><text x="17.9359%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (136 samples, 1.80%)</title><rect x="16.1934%" y="517" width="1.7963%" height="15" fill="rgb(218,138,4)"/><text x="16.4434%" y="527.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (31 samples, 0.41%)</title><rect x="17.5802%" y="501" width="0.4095%" height="15" fill="rgb(250,191,14)"/><text x="17.8302%" y="511.50"></text></g><g><title>__GI___libc_realloc (26 samples, 0.34%)</title><rect x="18.2407%" y="501" width="0.3434%" height="15" fill="rgb(239,60,40)"/><text x="18.4907%" y="511.50"></text></g><g><title>_int_realloc (9 samples, 0.12%)</title><rect x="18.4652%" y="485" width="0.1189%" height="15" fill="rgb(206,27,48)"/><text x="18.7152%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.22%)</title><rect x="18.8350%" y="485" width="0.2245%" height="15" fill="rgb(225,35,8)"/><text x="19.0850%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.13%)</title><rect x="18.9275%" y="469" width="0.1321%" height="15" fill="rgb(250,213,24)"/><text x="19.1775%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (333 samples, 4.40%)</title><rect x="14.7669%" y="533" width="4.3984%" height="15" fill="rgb(247,123,22)"/><text x="15.0169%" y="543.50">&lt;sql_..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (89 samples, 1.18%)</title><rect x="17.9897%" y="517" width="1.1755%" height="15" fill="rgb(231,138,38)"/><text x="18.2397%" y="527.50"></text></g><g><title>core::fmt::write (32 samples, 0.42%)</title><rect x="18.7426%" y="501" width="0.4227%" height="15" fill="rgb(231,145,46)"/><text x="18.9926%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (17 samples, 0.22%)</title><rect x="19.1784%" y="501" width="0.2245%" height="15" fill="rgb(251,118,11)"/><text x="19.4284%" y="511.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (13 samples, 0.17%)</title><rect x="19.2313%" y="485" width="0.1717%" height="15" fill="rgb(217,147,25)"/><text x="19.4813%" y="495.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (13 samples, 0.17%)</title><rect x="19.2313%" y="469" width="0.1717%" height="15" fill="rgb(247,81,37)"/><text x="19.4813%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (13 samples, 0.17%)</title><rect x="19.2313%" y="453" width="0.1717%" height="15" fill="rgb(209,12,38)"/><text x="19.4813%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (20 samples, 0.26%)</title><rect x="19.1652%" y="533" width="0.2642%" height="15" fill="rgb(227,1,9)"/><text x="19.4152%" y="543.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (20 samples, 0.26%)</title><rect x="19.1652%" y="517" width="0.2642%" height="15" fill="rgb(248,47,43)"/><text x="19.4152%" y="527.50"></text></g><g><title>_int_free (11 samples, 0.15%)</title><rect x="19.7992%" y="485" width="0.1453%" height="15" fill="rgb(221,10,30)"/><text x="20.0492%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (39 samples, 0.52%)</title><rect x="19.4426%" y="517" width="0.5151%" height="15" fill="rgb(210,229,1)"/><text x="19.6926%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (37 samples, 0.49%)</title><rect x="19.4690%" y="501" width="0.4887%" height="15" fill="rgb(222,148,37)"/><text x="19.7190%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (54 samples, 0.71%)</title><rect x="19.4294%" y="533" width="0.7132%" height="15" fill="rgb(234,67,33)"/><text x="19.6794%" y="543.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.18%)</title><rect x="19.9577%" y="517" width="0.1849%" height="15" fill="rgb(247,98,35)"/><text x="20.2077%" y="527.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.18%)</title><rect x="20.2615%" y="517" width="0.1849%" height="15" fill="rgb(247,138,52)"/><text x="20.5115%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.21%)</title><rect x="20.5917%" y="501" width="0.2113%" height="15" fill="rgb(213,79,30)"/><text x="20.8417%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (466 samples, 6.16%)</title><rect x="14.7537%" y="549" width="6.1551%" height="15" fill="rgb(246,177,23)"/><text x="15.0037%" y="559.50">&lt;sql_par..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (58 samples, 0.77%)</title><rect x="20.1426%" y="533" width="0.7661%" height="15" fill="rgb(230,62,27)"/><text x="20.3926%" y="543.50"></text></g><g><title>core::fmt::write (29 samples, 0.38%)</title><rect x="20.5257%" y="517" width="0.3830%" height="15" fill="rgb(216,154,8)"/><text x="20.7757%" y="527.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 0.16%)</title><rect x="20.9219%" y="517" width="0.1585%" height="15" fill="rgb(244,35,45)"/><text x="21.1719%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 0.20%)</title><rect x="20.9087%" y="549" width="0.1981%" height="15" fill="rgb(251,115,12)"/><text x="21.1587%" y="559.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (15 samples, 0.20%)</title><rect x="20.9087%" y="533" width="0.1981%" height="15" fill="rgb(240,54,50)"/><text x="21.1587%" y="543.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.20%)</title><rect x="21.4767%" y="501" width="0.1981%" height="15" fill="rgb(233,84,52)"/><text x="21.7267%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.13%)</title><rect x="21.6748%" y="501" width="0.1321%" height="15" fill="rgb(207,117,47)"/><text x="21.9248%" y="511.50"></text></g><g><title>_int_free (12 samples, 0.16%)</title><rect x="21.9522%" y="501" width="0.1585%" height="15" fill="rgb(249,43,39)"/><text x="22.2022%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (77 samples, 1.02%)</title><rect x="21.1333%" y="533" width="1.0170%" height="15" fill="rgb(209,38,44)"/><text x="21.3833%" y="543.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (76 samples, 1.00%)</title><rect x="21.1465%" y="517" width="1.0038%" height="15" fill="rgb(236,212,23)"/><text x="21.3965%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (105 samples, 1.39%)</title><rect x="21.1069%" y="549" width="1.3869%" height="15" fill="rgb(242,79,21)"/><text x="21.3569%" y="559.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (26 samples, 0.34%)</title><rect x="22.1503%" y="533" width="0.3434%" height="15" fill="rgb(211,96,35)"/><text x="22.4003%" y="543.50"></text></g><g><title>core::fmt::write (8 samples, 0.11%)</title><rect x="22.3881%" y="517" width="0.1057%" height="15" fill="rgb(253,215,40)"/><text x="22.6381%" y="527.50"></text></g><g><title>__GI___libc_realloc (24 samples, 0.32%)</title><rect x="22.7315%" y="533" width="0.3170%" height="15" fill="rgb(211,81,21)"/><text x="22.9815%" y="543.50"></text></g><g><title>_int_realloc (10 samples, 0.13%)</title><rect x="22.9164%" y="517" width="0.1321%" height="15" fill="rgb(208,190,38)"/><text x="23.1664%" y="527.50"></text></g><g><title>_int_free (8 samples, 0.11%)</title><rect x="23.1409%" y="533" width="0.1057%" height="15" fill="rgb(235,213,38)"/><text x="23.3909%" y="543.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.16%)</title><rect x="23.4843%" y="485" width="0.1585%" height="15" fill="rgb(237,122,38)"/><text x="23.7343%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (23 samples, 0.30%)</title><rect x="23.3523%" y="517" width="0.3038%" height="15" fill="rgb(244,218,35)"/><text x="23.6023%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.20%)</title><rect x="23.4579%" y="501" width="0.1981%" height="15" fill="rgb(240,68,47)"/><text x="23.7079%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (684 samples, 9.03%)</title><rect x="14.7140%" y="565" width="9.0345%" height="15" fill="rgb(210,16,53)"/><text x="14.9640%" y="575.50">&lt;sql_parser::..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (94 samples, 1.24%)</title><rect x="22.5069%" y="549" width="1.2416%" height="15" fill="rgb(235,124,12)"/><text x="22.7569%" y="559.50"></text></g><g><title>core::fmt::write (38 samples, 0.50%)</title><rect x="23.2466%" y="533" width="0.5019%" height="15" fill="rgb(224,169,11)"/><text x="23.4966%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (19 samples, 0.25%)</title><rect x="23.7485%" y="533" width="0.2510%" height="15" fill="rgb(250,166,2)"/><text x="23.9985%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (12 samples, 0.16%)</title><rect x="23.8410%" y="517" width="0.1585%" height="15" fill="rgb(242,216,29)"/><text x="24.0910%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (20 samples, 0.26%)</title><rect x="23.7485%" y="565" width="0.2642%" height="15" fill="rgb(230,116,27)"/><text x="23.9985%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (20 samples, 0.26%)</title><rect x="23.7485%" y="549" width="0.2642%" height="15" fill="rgb(228,99,48)"/><text x="23.9985%" y="559.50"></text></g><g><title>__GI___libc_free (9 samples, 0.12%)</title><rect x="24.2768%" y="517" width="0.1189%" height="15" fill="rgb(253,11,6)"/><text x="24.5268%" y="527.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.16%)</title><rect x="24.3957%" y="517" width="0.1585%" height="15" fill="rgb(247,143,39)"/><text x="24.6457%" y="527.50"></text></g><g><title>_int_free (14 samples, 0.18%)</title><rect x="24.6995%" y="517" width="0.1849%" height="15" fill="rgb(236,97,10)"/><text x="24.9495%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (71 samples, 0.94%)</title><rect x="24.0391%" y="549" width="0.9378%" height="15" fill="rgb(233,208,19)"/><text x="24.2891%" y="559.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (68 samples, 0.90%)</title><rect x="24.0787%" y="533" width="0.8982%" height="15" fill="rgb(216,164,2)"/><text x="24.3287%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (97 samples, 1.28%)</title><rect x="24.0127%" y="565" width="1.2812%" height="15" fill="rgb(220,129,5)"/><text x="24.2627%" y="575.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (24 samples, 0.32%)</title><rect x="24.9769%" y="549" width="0.3170%" height="15" fill="rgb(242,17,10)"/><text x="25.2269%" y="559.50"></text></g><g><title>core::fmt::write (10 samples, 0.13%)</title><rect x="25.1618%" y="533" width="0.1321%" height="15" fill="rgb(242,107,0)"/><text x="25.4118%" y="543.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.26%)</title><rect x="25.4392%" y="549" width="0.2642%" height="15" fill="rgb(251,28,31)"/><text x="25.6892%" y="559.50"></text></g><g><title>_int_free (12 samples, 0.16%)</title><rect x="25.7562%" y="549" width="0.1585%" height="15" fill="rgb(233,223,10)"/><text x="26.0062%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.11%)</title><rect x="25.9939%" y="517" width="0.1057%" height="15" fill="rgb(215,21,27)"/><text x="26.2439%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (19 samples, 0.25%)</title><rect x="25.9543%" y="533" width="0.2510%" height="15" fill="rgb(232,23,21)"/><text x="26.2043%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.11%)</title><rect x="26.0996%" y="517" width="0.1057%" height="15" fill="rgb(244,5,23)"/><text x="26.3496%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (881 samples, 11.64%)</title><rect x="14.6480%" y="581" width="11.6365%" height="15" fill="rgb(226,81,46)"/><text x="14.8980%" y="591.50">&lt;sql_parser::ast:..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (75 samples, 0.99%)</title><rect x="25.2939%" y="565" width="0.9906%" height="15" fill="rgb(247,70,30)"/><text x="25.5439%" y="575.50"></text></g><g><title>core::fmt::write (27 samples, 0.36%)</title><rect x="25.9279%" y="549" width="0.3566%" height="15" fill="rgb(212,68,19)"/><text x="26.1779%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (16 samples, 0.21%)</title><rect x="26.3373%" y="549" width="0.2113%" height="15" fill="rgb(240,187,13)"/><text x="26.5873%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 0.13%)</title><rect x="26.4166%" y="533" width="0.1321%" height="15" fill="rgb(223,113,26)"/><text x="26.6666%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (8 samples, 0.11%)</title><rect x="26.4430%" y="517" width="0.1057%" height="15" fill="rgb(206,192,2)"/><text x="26.6930%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (8 samples, 0.11%)</title><rect x="26.4430%" y="501" width="0.1057%" height="15" fill="rgb(241,108,4)"/><text x="26.6930%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (21 samples, 0.28%)</title><rect x="26.2845%" y="581" width="0.2774%" height="15" fill="rgb(247,173,49)"/><text x="26.5345%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (21 samples, 0.28%)</title><rect x="26.2845%" y="565" width="0.2774%" height="15" fill="rgb(224,114,35)"/><text x="26.5345%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (939 samples, 12.40%)</title><rect x="14.6348%" y="597" width="12.4026%" height="15" fill="rgb(245,159,27)"/><text x="14.8848%" y="607.50">&lt;sql_parser::ast::d..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (30 samples, 0.40%)</title><rect x="26.6411%" y="581" width="0.3962%" height="15" fill="rgb(245,172,44)"/><text x="26.8911%" y="591.50"></text></g><g><title>core::fmt::write (13 samples, 0.17%)</title><rect x="26.8657%" y="565" width="0.1717%" height="15" fill="rgb(236,23,11)"/><text x="27.1157%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 0.22%)</title><rect x="27.0374%" y="597" width="0.2245%" height="15" fill="rgb(205,117,38)"/><text x="27.2874%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (17 samples, 0.22%)</title><rect x="27.0374%" y="581" width="0.2245%" height="15" fill="rgb(237,72,25)"/><text x="27.2874%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (14 samples, 0.18%)</title><rect x="27.0770%" y="565" width="0.1849%" height="15" fill="rgb(244,70,9)"/><text x="27.3270%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.11%)</title><rect x="27.1563%" y="549" width="0.1057%" height="15" fill="rgb(217,125,39)"/><text x="27.4063%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.11%)</title><rect x="27.5393%" y="565" width="0.1057%" height="15" fill="rgb(235,36,10)"/><text x="27.7893%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (987 samples, 13.04%)</title><rect x="14.6216%" y="613" width="13.0366%" height="15" fill="rgb(251,123,47)"/><text x="14.8716%" y="623.50">&lt;sql_parser::ast::de..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (24 samples, 0.32%)</title><rect x="27.3412%" y="597" width="0.3170%" height="15" fill="rgb(221,13,13)"/><text x="27.5912%" y="607.50"></text></g><g><title>core::fmt::write (12 samples, 0.16%)</title><rect x="27.4997%" y="581" width="0.1585%" height="15" fill="rgb(238,131,9)"/><text x="27.7497%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.13%)</title><rect x="27.6582%" y="613" width="0.1321%" height="15" fill="rgb(211,50,8)"/><text x="27.9082%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 0.13%)</title><rect x="27.6582%" y="597" width="0.1321%" height="15" fill="rgb(245,182,24)"/><text x="27.9082%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.12%)</title><rect x="27.7903%" y="613" width="0.1189%" height="15" fill="rgb(242,14,37)"/><text x="28.0403%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.12%)</title><rect x="28.1205%" y="581" width="0.1189%" height="15" fill="rgb(246,228,12)"/><text x="28.3705%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,037 samples, 13.70%)</title><rect x="14.5952%" y="629" width="13.6970%" height="15" fill="rgb(213,55,15)"/><text x="14.8452%" y="639.50">&lt;sql_parser::ast::def..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (29 samples, 0.38%)</title><rect x="27.9091%" y="613" width="0.3830%" height="15" fill="rgb(209,9,3)"/><text x="28.1591%" y="623.50"></text></g><g><title>core::fmt::write (15 samples, 0.20%)</title><rect x="28.0940%" y="597" width="0.1981%" height="15" fill="rgb(230,59,30)"/><text x="28.3440%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.16%)</title><rect x="28.2922%" y="629" width="0.1585%" height="15" fill="rgb(209,121,21)"/><text x="28.5422%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 0.16%)</title><rect x="28.2922%" y="613" width="0.1585%" height="15" fill="rgb(220,109,13)"/><text x="28.5422%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.13%)</title><rect x="28.3186%" y="597" width="0.1321%" height="15" fill="rgb(232,18,1)"/><text x="28.5686%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.11%)</title><rect x="28.4507%" y="629" width="0.1057%" height="15" fill="rgb(215,41,42)"/><text x="28.7007%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,074 samples, 14.19%)</title><rect x="14.5687%" y="645" width="14.1857%" height="15" fill="rgb(224,123,36)"/><text x="14.8187%" y="655.50">&lt;sql_parser::ast::defs..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.20%)</title><rect x="28.5563%" y="629" width="0.1981%" height="15" fill="rgb(240,125,3)"/><text x="28.8063%" y="639.50"></text></g><g><title>core::fmt::write (8 samples, 0.11%)</title><rect x="28.6488%" y="613" width="0.1057%" height="15" fill="rgb(205,98,50)"/><text x="28.8988%" y="623.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.13%)</title><rect x="28.7809%" y="613" width="0.1321%" height="15" fill="rgb(205,185,37)"/><text x="29.0309%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.11%)</title><rect x="28.8073%" y="597" width="0.1057%" height="15" fill="rgb(238,207,15)"/><text x="29.0573%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 0.20%)</title><rect x="28.7545%" y="645" width="0.1981%" height="15" fill="rgb(213,199,42)"/><text x="29.0045%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (15 samples, 0.20%)</title><rect x="28.7545%" y="629" width="0.1981%" height="15" fill="rgb(235,201,11)"/><text x="29.0045%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.11%)</title><rect x="28.9526%" y="645" width="0.1057%" height="15" fill="rgb(207,46,11)"/><text x="29.2026%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,111 samples, 14.67%)</title><rect x="14.5687%" y="661" width="14.6744%" height="15" fill="rgb(241,35,35)"/><text x="14.8187%" y="671.50">&lt;sql_parser::ast::defs..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (14 samples, 0.18%)</title><rect x="29.0582%" y="645" width="0.1849%" height="15" fill="rgb(243,32,47)"/><text x="29.3082%" y="655.50"></text></g><g><title>core::fmt::write (8 samples, 0.11%)</title><rect x="29.1375%" y="629" width="0.1057%" height="15" fill="rgb(247,202,23)"/><text x="29.3875%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (10 samples, 0.13%)</title><rect x="29.2828%" y="629" width="0.1321%" height="15" fill="rgb(219,102,11)"/><text x="29.5328%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.18%)</title><rect x="29.2432%" y="661" width="0.1849%" height="15" fill="rgb(243,110,44)"/><text x="29.4932%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (14 samples, 0.18%)</title><rect x="29.2432%" y="645" width="0.1849%" height="15" fill="rgb(222,74,54)"/><text x="29.4932%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,151 samples, 15.20%)</title><rect x="14.5687%" y="677" width="15.2027%" height="15" fill="rgb(216,99,12)"/><text x="14.8187%" y="687.50">&lt;sql_parser::ast::defs:..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (19 samples, 0.25%)</title><rect x="29.5205%" y="661" width="0.2510%" height="15" fill="rgb(226,22,26)"/><text x="29.7705%" y="671.50"></text></g><g><title>core::fmt::write (8 samples, 0.11%)</title><rect x="29.6658%" y="645" width="0.1057%" height="15" fill="rgb(217,163,10)"/><text x="29.9158%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.12%)</title><rect x="29.7715%" y="677" width="0.1189%" height="15" fill="rgb(213,25,53)"/><text x="30.0215%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.12%)</title><rect x="29.7715%" y="661" width="0.1189%" height="15" fill="rgb(252,105,26)"/><text x="30.0215%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,171 samples, 15.47%)</title><rect x="14.5555%" y="693" width="15.4669%" height="15" fill="rgb(220,39,43)"/><text x="14.8055%" y="703.50">&lt;sql_parser::ast::defs::..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,189 samples, 15.70%)</title><rect x="14.5423%" y="709" width="15.7047%" height="15" fill="rgb(229,68,48)"/><text x="14.7923%" y="719.50">&lt;sql_parser::ast::defs::..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,198 samples, 15.82%)</title><rect x="14.5423%" y="725" width="15.8235%" height="15" fill="rgb(252,8,32)"/><text x="14.7923%" y="735.50">&lt;sql_parser::ast::defs::..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,204 samples, 15.90%)</title><rect x="14.5423%" y="741" width="15.9028%" height="15" fill="rgb(223,20,43)"/><text x="14.7923%" y="751.50">&lt;sql_parser::ast::defs::..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,207 samples, 15.94%)</title><rect x="14.5423%" y="757" width="15.9424%" height="15" fill="rgb(229,81,49)"/><text x="14.7923%" y="767.50">&lt;sql_parser::ast::defs::e..</text></g><g><title>core::fmt::write (1,214 samples, 16.03%)</title><rect x="14.5291%" y="789" width="16.0349%" height="15" fill="rgb(236,28,36)"/><text x="14.7791%" y="799.50">core::fmt::write</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1,213 samples, 16.02%)</title><rect x="14.5423%" y="773" width="16.0217%" height="15" fill="rgb(249,185,26)"/><text x="14.7923%" y="783.50">&lt;sql_parser::ast::defs::s..</text></g><g><title>_int_free (11 samples, 0.15%)</title><rect x="31.3169%" y="533" width="0.1453%" height="15" fill="rgb(249,174,33)"/><text x="31.5669%" y="543.50"></text></g><g><title>_int_free (12 samples, 0.16%)</title><rect x="31.5150%" y="517" width="0.1585%" height="15" fill="rgb(233,201,37)"/><text x="31.7650%" y="527.50"></text></g><g><title>_int_free (14 samples, 0.18%)</title><rect x="31.7659%" y="501" width="0.1849%" height="15" fill="rgb(221,78,26)"/><text x="32.0159%" y="511.50"></text></g><g><title>_int_free (9 samples, 0.12%)</title><rect x="32.2018%" y="469" width="0.1189%" height="15" fill="rgb(250,127,30)"/><text x="32.4518%" y="479.50"></text></g><g><title>_int_free (13 samples, 0.17%)</title><rect x="32.3867%" y="453" width="0.1717%" height="15" fill="rgb(230,49,44)"/><text x="32.6367%" y="463.50"></text></g><g><title>_int_free (13 samples, 0.17%)</title><rect x="32.8887%" y="421" width="0.1717%" height="15" fill="rgb(229,67,23)"/><text x="33.1387%" y="431.50"></text></g><g><title>core::ptr::drop_in_place (206 samples, 2.72%)</title><rect x="30.5640%" y="789" width="2.7209%" height="15" fill="rgb(249,83,47)"/><text x="30.8140%" y="799.50">co..</text></g><g><title>core::ptr::drop_in_place (206 samples, 2.72%)</title><rect x="30.5640%" y="773" width="2.7209%" height="15" fill="rgb(215,43,3)"/><text x="30.8140%" y="783.50">co..</text></g><g><title>core::ptr::drop_in_place (206 samples, 2.72%)</title><rect x="30.5640%" y="757" width="2.7209%" height="15" fill="rgb(238,154,13)"/><text x="30.8140%" y="767.50">co..</text></g><g><title>core::ptr::drop_in_place (206 samples, 2.72%)</title><rect x="30.5640%" y="741" width="2.7209%" height="15" fill="rgb(219,56,2)"/><text x="30.8140%" y="751.50">co..</text></g><g><title>core::ptr::drop_in_place (206 samples, 2.72%)</title><rect x="30.5640%" y="725" width="2.7209%" height="15" fill="rgb(233,0,4)"/><text x="30.8140%" y="735.50">co..</text></g><g><title>core::ptr::drop_in_place (206 samples, 2.72%)</title><rect x="30.5640%" y="709" width="2.7209%" height="15" fill="rgb(235,30,7)"/><text x="30.8140%" y="719.50">co..</text></g><g><title>core::ptr::drop_in_place (205 samples, 2.71%)</title><rect x="30.5772%" y="693" width="2.7077%" height="15" fill="rgb(250,79,13)"/><text x="30.8272%" y="703.50">co..</text></g><g><title>core::ptr::drop_in_place (205 samples, 2.71%)</title><rect x="30.5772%" y="677" width="2.7077%" height="15" fill="rgb(211,146,34)"/><text x="30.8272%" y="687.50">co..</text></g><g><title>core::ptr::drop_in_place (201 samples, 2.65%)</title><rect x="30.6300%" y="661" width="2.6549%" height="15" fill="rgb(228,22,38)"/><text x="30.8800%" y="671.50">co..</text></g><g><title>core::ptr::drop_in_place (199 samples, 2.63%)</title><rect x="30.6565%" y="645" width="2.6285%" height="15" fill="rgb(235,168,5)"/><text x="30.9065%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place (193 samples, 2.55%)</title><rect x="30.7357%" y="629" width="2.5492%" height="15" fill="rgb(221,155,16)"/><text x="30.9857%" y="639.50">co..</text></g><g><title>core::ptr::drop_in_place (186 samples, 2.46%)</title><rect x="30.8282%" y="613" width="2.4567%" height="15" fill="rgb(215,215,53)"/><text x="31.0782%" y="623.50">co..</text></g><g><title>core::ptr::drop_in_place (182 samples, 2.40%)</title><rect x="30.8810%" y="597" width="2.4039%" height="15" fill="rgb(223,4,10)"/><text x="31.1310%" y="607.50">co..</text></g><g><title>core::ptr::drop_in_place (171 samples, 2.26%)</title><rect x="31.0263%" y="581" width="2.2586%" height="15" fill="rgb(234,103,6)"/><text x="31.2763%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place (162 samples, 2.14%)</title><rect x="31.1452%" y="565" width="2.1397%" height="15" fill="rgb(227,97,0)"/><text x="31.3952%" y="575.50">c..</text></g><g><title>core::ptr::drop_in_place (150 samples, 1.98%)</title><rect x="31.3037%" y="549" width="1.9812%" height="15" fill="rgb(234,150,53)"/><text x="31.5537%" y="559.50">c..</text></g><g><title>core::ptr::drop_in_place (138 samples, 1.82%)</title><rect x="31.4622%" y="533" width="1.8227%" height="15" fill="rgb(228,201,54)"/><text x="31.7122%" y="543.50">c..</text></g><g><title>core::ptr::drop_in_place (122 samples, 1.61%)</title><rect x="31.6735%" y="517" width="1.6114%" height="15" fill="rgb(222,22,37)"/><text x="31.9235%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (101 samples, 1.33%)</title><rect x="31.9509%" y="501" width="1.3340%" height="15" fill="rgb(237,53,32)"/><text x="32.2009%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (89 samples, 1.18%)</title><rect x="32.1094%" y="485" width="1.1755%" height="15" fill="rgb(233,25,53)"/><text x="32.3594%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (73 samples, 0.96%)</title><rect x="32.3207%" y="469" width="0.9642%" height="15" fill="rgb(210,40,34)"/><text x="32.5707%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (55 samples, 0.73%)</title><rect x="32.5584%" y="453" width="0.7265%" height="15" fill="rgb(241,220,44)"/><text x="32.8084%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (37 samples, 0.49%)</title><rect x="32.7962%" y="437" width="0.4887%" height="15" fill="rgb(235,28,35)"/><text x="33.0462%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.22%)</title><rect x="33.0604%" y="421" width="0.2245%" height="15" fill="rgb(210,56,17)"/><text x="33.3104%" y="431.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.11%)</title><rect x="33.1792%" y="405" width="0.1057%" height="15" fill="rgb(224,130,29)"/><text x="33.4292%" y="415.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (10 samples, 0.13%)</title><rect x="33.3642%" y="789" width="0.1321%" height="15" fill="rgb(235,212,8)"/><text x="33.6142%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (8 samples, 0.11%)</title><rect x="33.3906%" y="773" width="0.1057%" height="15" fill="rgb(223,33,50)"/><text x="33.6406%" y="783.50"></text></g><g><title>alloc::fmt::format (9 samples, 0.12%)</title><rect x="33.5623%" y="757" width="0.1189%" height="15" fill="rgb(219,149,13)"/><text x="33.8123%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.12%)</title><rect x="33.5623%" y="741" width="0.1189%" height="15" fill="rgb(250,156,29)"/><text x="33.8123%" y="751.50"></text></g><g><title>core::fmt::write (9 samples, 0.12%)</title><rect x="33.5623%" y="725" width="0.1189%" height="15" fill="rgb(216,193,19)"/><text x="33.8123%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (9 samples, 0.12%)</title><rect x="33.5623%" y="709" width="0.1189%" height="15" fill="rgb(216,135,14)"/><text x="33.8123%" y="719.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (15 samples, 0.20%)</title><rect x="33.4962%" y="789" width="0.1981%" height="15" fill="rgb(241,47,5)"/><text x="33.7462%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (10 samples, 0.13%)</title><rect x="33.5623%" y="773" width="0.1321%" height="15" fill="rgb(233,42,35)"/><text x="33.8123%" y="783.50"></text></g><g><title>__GI___libc_free (10 samples, 0.13%)</title><rect x="34.3416%" y="773" width="0.1321%" height="15" fill="rgb(231,13,6)"/><text x="34.5916%" y="783.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.79%)</title><rect x="34.4736%" y="773" width="0.7925%" height="15" fill="rgb(207,181,40)"/><text x="34.7236%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (26 samples, 0.34%)</title><rect x="35.2661%" y="773" width="0.3434%" height="15" fill="rgb(254,173,49)"/><text x="35.5161%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.12%)</title><rect x="35.7416%" y="773" width="0.1189%" height="15" fill="rgb(221,1,38)"/><text x="35.9916%" y="783.50"></text></g><g><title>core::str::pattern::StrSearcher::new (16 samples, 0.21%)</title><rect x="35.9001%" y="773" width="0.2113%" height="15" fill="rgb(206,124,46)"/><text x="36.1501%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (10 samples, 0.13%)</title><rect x="35.9794%" y="757" width="0.1321%" height="15" fill="rgb(249,21,11)"/><text x="36.2294%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (187 samples, 2.47%)</title><rect x="33.6944%" y="789" width="2.4700%" height="15" fill="rgb(222,201,40)"/><text x="33.9444%" y="799.50">de..</text></g><g><title>inet_recvmsg (20 samples, 0.26%)</title><rect x="36.3889%" y="533" width="0.2642%" height="15" fill="rgb(235,61,29)"/><text x="36.6389%" y="543.50"></text></g><g><title>tcp_recvmsg (20 samples, 0.26%)</title><rect x="36.3889%" y="517" width="0.2642%" height="15" fill="rgb(219,207,3)"/><text x="36.6389%" y="527.50"></text></g><g><title>sk_wait_data (17 samples, 0.22%)</title><rect x="36.4285%" y="501" width="0.2245%" height="15" fill="rgb(222,56,46)"/><text x="36.6785%" y="511.50"></text></g><g><title>wait_woken (16 samples, 0.21%)</title><rect x="36.4417%" y="485" width="0.2113%" height="15" fill="rgb(239,76,54)"/><text x="36.6917%" y="495.50"></text></g><g><title>schedule_timeout (15 samples, 0.20%)</title><rect x="36.4549%" y="469" width="0.1981%" height="15" fill="rgb(231,124,27)"/><text x="36.7049%" y="479.50"></text></g><g><title>schedule (15 samples, 0.20%)</title><rect x="36.4549%" y="453" width="0.1981%" height="15" fill="rgb(249,195,6)"/><text x="36.7049%" y="463.50"></text></g><g><title>__schedule (15 samples, 0.20%)</title><rect x="36.4549%" y="437" width="0.1981%" height="15" fill="rgb(237,174,47)"/><text x="36.7049%" y="447.50"></text></g><g><title>do_syscall_64 (22 samples, 0.29%)</title><rect x="36.3756%" y="581" width="0.2906%" height="15" fill="rgb(206,201,31)"/><text x="36.6256%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (22 samples, 0.29%)</title><rect x="36.3756%" y="565" width="0.2906%" height="15" fill="rgb(231,57,52)"/><text x="36.6256%" y="575.50"></text></g><g><title>__sys_recvfrom (22 samples, 0.29%)</title><rect x="36.3756%" y="549" width="0.2906%" height="15" fill="rgb(248,177,22)"/><text x="36.6256%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.33%)</title><rect x="36.3624%" y="709" width="0.3302%" height="15" fill="rgb(215,211,37)"/><text x="36.6124%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 0.33%)</title><rect x="36.3624%" y="693" width="0.3302%" height="15" fill="rgb(241,128,51)"/><text x="36.6124%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 0.33%)</title><rect x="36.3624%" y="677" width="0.3302%" height="15" fill="rgb(227,165,31)"/><text x="36.6124%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 0.33%)</title><rect x="36.3624%" y="661" width="0.3302%" height="15" fill="rgb(228,167,24)"/><text x="36.6124%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 0.33%)</title><rect x="36.3624%" y="645" width="0.3302%" height="15" fill="rgb(228,143,12)"/><text x="36.6124%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 0.33%)</title><rect x="36.3624%" y="629" width="0.3302%" height="15" fill="rgb(249,149,8)"/><text x="36.6124%" y="639.50"></text></g><g><title>__libc_recv (25 samples, 0.33%)</title><rect x="36.3624%" y="613" width="0.3302%" height="15" fill="rgb(243,35,44)"/><text x="36.6124%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (24 samples, 0.32%)</title><rect x="36.3756%" y="597" width="0.3170%" height="15" fill="rgb(246,89,9)"/><text x="36.6256%" y="607.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (29 samples, 0.38%)</title><rect x="36.3228%" y="741" width="0.3830%" height="15" fill="rgb(233,213,13)"/><text x="36.5728%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (27 samples, 0.36%)</title><rect x="36.3492%" y="725" width="0.3566%" height="15" fill="rgb(233,141,41)"/><text x="36.5992%" y="735.50"></text></g><g><title>__wake_up_common (9 samples, 0.12%)</title><rect x="37.1946%" y="197" width="0.1189%" height="15" fill="rgb(239,167,4)"/><text x="37.4446%" y="207.50"></text></g><g><title>pollwake (9 samples, 0.12%)</title><rect x="37.1946%" y="181" width="0.1189%" height="15" fill="rgb(209,217,16)"/><text x="37.4446%" y="191.50"></text></g><g><title>try_to_wake_up (9 samples, 0.12%)</title><rect x="37.1946%" y="165" width="0.1189%" height="15" fill="rgb(219,88,35)"/><text x="37.4446%" y="175.50"></text></g><g><title>sock_def_readable (10 samples, 0.13%)</title><rect x="37.1946%" y="229" width="0.1321%" height="15" fill="rgb(220,193,23)"/><text x="37.4446%" y="239.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.13%)</title><rect x="37.1946%" y="213" width="0.1321%" height="15" fill="rgb(230,90,52)"/><text x="37.4446%" y="223.50"></text></g><g><title>tcp_ack (8 samples, 0.11%)</title><rect x="37.3266%" y="229" width="0.1057%" height="15" fill="rgb(252,106,19)"/><text x="37.5766%" y="239.50"></text></g><g><title>ip_local_deliver (26 samples, 0.34%)</title><rect x="37.1153%" y="325" width="0.3434%" height="15" fill="rgb(206,74,20)"/><text x="37.3653%" y="335.50"></text></g><g><title>ip_local_deliver_finish (25 samples, 0.33%)</title><rect x="37.1285%" y="309" width="0.3302%" height="15" fill="rgb(230,138,44)"/><text x="37.3785%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (24 samples, 0.32%)</title><rect x="37.1417%" y="293" width="0.3170%" height="15" fill="rgb(235,182,43)"/><text x="37.3917%" y="303.50"></text></g><g><title>tcp_v4_rcv (23 samples, 0.30%)</title><rect x="37.1549%" y="277" width="0.3038%" height="15" fill="rgb(242,16,51)"/><text x="37.4049%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (22 samples, 0.29%)</title><rect x="37.1681%" y="261" width="0.2906%" height="15" fill="rgb(248,9,4)"/><text x="37.4181%" y="271.50"></text></g><g><title>tcp_rcv_established (22 samples, 0.29%)</title><rect x="37.1681%" y="245" width="0.2906%" height="15" fill="rgb(210,31,22)"/><text x="37.4181%" y="255.50"></text></g><g><title>__local_bh_enable_ip (30 samples, 0.40%)</title><rect x="37.0757%" y="453" width="0.3962%" height="15" fill="rgb(239,54,39)"/><text x="37.3257%" y="463.50"></text></g><g><title>do_softirq (29 samples, 0.38%)</title><rect x="37.0889%" y="437" width="0.3830%" height="15" fill="rgb(230,99,41)"/><text x="37.3389%" y="447.50"></text></g><g><title>do_softirq_own_stack (29 samples, 0.38%)</title><rect x="37.0889%" y="421" width="0.3830%" height="15" fill="rgb(253,106,12)"/><text x="37.3389%" y="431.50"></text></g><g><title>__do_softirq (29 samples, 0.38%)</title><rect x="37.0889%" y="405" width="0.3830%" height="15" fill="rgb(213,46,41)"/><text x="37.3389%" y="415.50"></text></g><g><title>net_rx_action (28 samples, 0.37%)</title><rect x="37.1021%" y="389" width="0.3698%" height="15" fill="rgb(215,133,35)"/><text x="37.3521%" y="399.50"></text></g><g><title>process_backlog (28 samples, 0.37%)</title><rect x="37.1021%" y="373" width="0.3698%" height="15" fill="rgb(213,28,5)"/><text x="37.3521%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 0.37%)</title><rect x="37.1021%" y="357" width="0.3698%" height="15" fill="rgb(215,77,49)"/><text x="37.3521%" y="367.50"></text></g><g><title>ip_rcv (27 samples, 0.36%)</title><rect x="37.1153%" y="341" width="0.3566%" height="15" fill="rgb(248,100,22)"/><text x="37.3653%" y="351.50"></text></g><g><title>ip_finish_output2 (42 samples, 0.55%)</title><rect x="36.9304%" y="469" width="0.5547%" height="15" fill="rgb(208,67,9)"/><text x="37.1804%" y="479.50"></text></g><g><title>__ip_queue_xmit (43 samples, 0.57%)</title><rect x="36.9304%" y="501" width="0.5680%" height="15" fill="rgb(219,133,21)"/><text x="37.1804%" y="511.50"></text></g><g><title>ip_output (43 samples, 0.57%)</title><rect x="36.9304%" y="485" width="0.5680%" height="15" fill="rgb(246,46,29)"/><text x="37.1804%" y="495.50"></text></g><g><title>__tcp_transmit_skb (46 samples, 0.61%)</title><rect x="36.9172%" y="517" width="0.6076%" height="15" fill="rgb(246,185,52)"/><text x="37.1672%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (52 samples, 0.69%)</title><rect x="36.8511%" y="549" width="0.6868%" height="15" fill="rgb(252,136,11)"/><text x="37.1011%" y="559.50"></text></g><g><title>tcp_write_xmit (52 samples, 0.69%)</title><rect x="36.8511%" y="533" width="0.6868%" height="15" fill="rgb(219,138,53)"/><text x="37.1011%" y="543.50"></text></g><g><title>skb_do_copy_data_nocache (9 samples, 0.12%)</title><rect x="37.5776%" y="549" width="0.1189%" height="15" fill="rgb(211,51,23)"/><text x="37.8276%" y="559.50"></text></g><g><title>_copy_from_iter_full (9 samples, 0.12%)</title><rect x="37.5776%" y="533" width="0.1189%" height="15" fill="rgb(247,221,28)"/><text x="37.8276%" y="543.50"></text></g><g><title>copy_user_enhanced_fast_string (9 samples, 0.12%)</title><rect x="37.5776%" y="517" width="0.1189%" height="15" fill="rgb(251,222,45)"/><text x="37.8276%" y="527.50"></text></g><g><title>do_syscall_64 (71 samples, 0.94%)</title><rect x="36.8115%" y="645" width="0.9378%" height="15" fill="rgb(217,162,53)"/><text x="37.0615%" y="655.50"></text></g><g><title>__x64_sys_sendto (71 samples, 0.94%)</title><rect x="36.8115%" y="629" width="0.9378%" height="15" fill="rgb(229,93,14)"/><text x="37.0615%" y="639.50"></text></g><g><title>__sys_sendto (71 samples, 0.94%)</title><rect x="36.8115%" y="613" width="0.9378%" height="15" fill="rgb(209,67,49)"/><text x="37.0615%" y="623.50"></text></g><g><title>sock_sendmsg (71 samples, 0.94%)</title><rect x="36.8115%" y="597" width="0.9378%" height="15" fill="rgb(213,87,29)"/><text x="37.0615%" y="607.50"></text></g><g><title>tcp_sendmsg (71 samples, 0.94%)</title><rect x="36.8115%" y="581" width="0.9378%" height="15" fill="rgb(205,151,52)"/><text x="37.0615%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (70 samples, 0.92%)</title><rect x="36.8247%" y="565" width="0.9246%" height="15" fill="rgb(253,215,39)"/><text x="37.0747%" y="575.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (73 samples, 0.96%)</title><rect x="36.8115%" y="709" width="0.9642%" height="15" fill="rgb(221,220,41)"/><text x="37.0615%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (73 samples, 0.96%)</title><rect x="36.8115%" y="693" width="0.9642%" height="15" fill="rgb(218,133,21)"/><text x="37.0615%" y="703.50"></text></g><g><title>__libc_send (73 samples, 0.96%)</title><rect x="36.8115%" y="677" width="0.9642%" height="15" fill="rgb(221,193,43)"/><text x="37.0615%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (73 samples, 0.96%)</title><rect x="36.8115%" y="661" width="0.9642%" height="15" fill="rgb(240,128,52)"/><text x="37.0615%" y="671.50"></text></g><g><title>std::io::Write::write_all (74 samples, 0.98%)</title><rect x="36.8115%" y="725" width="0.9774%" height="15" fill="rgb(253,114,12)"/><text x="37.0615%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (119 samples, 1.57%)</title><rect x="36.2304%" y="773" width="1.5718%" height="15" fill="rgb(215,223,47)"/><text x="36.4804%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (117 samples, 1.55%)</title><rect x="36.2568%" y="757" width="1.5454%" height="15" fill="rgb(248,225,23)"/><text x="36.5068%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (83 samples, 1.10%)</title><rect x="36.7059%" y="741" width="1.0963%" height="15" fill="rgb(250,108,0)"/><text x="36.9559%" y="751.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (1,778 samples, 23.48%)</title><rect x="14.3310%" y="805" width="23.4843%" height="15" fill="rgb(228,208,7)"/><text x="14.5810%" y="815.50">decor::query_transformer::QueryTransf..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (120 samples, 1.58%)</title><rect x="36.2304%" y="789" width="1.5850%" height="15" fill="rgb(244,45,10)"/><text x="36.4804%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (16 samples, 0.21%)</title><rect x="37.9474%" y="773" width="0.2113%" height="15" fill="rgb(207,125,25)"/><text x="38.1974%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1,806 samples, 23.85%)</title><rect x="14.3310%" y="821" width="23.8542%" height="15" fill="rgb(210,195,18)"/><text x="14.5810%" y="831.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;..</text></g><g><title>sql_parser::parser::parse_statements (28 samples, 0.37%)</title><rect x="37.8153%" y="805" width="0.3698%" height="15" fill="rgb(249,80,12)"/><text x="38.0653%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (28 samples, 0.37%)</title><rect x="37.8153%" y="789" width="0.3698%" height="15" fill="rgb(221,65,9)"/><text x="38.0653%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (22 samples, 0.29%)</title><rect x="38.2512%" y="821" width="0.2906%" height="15" fill="rgb(235,49,36)"/><text x="38.5012%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.24%)</title><rect x="38.3041%" y="805" width="0.2377%" height="15" fill="rgb(225,32,20)"/><text x="38.5541%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.11%)</title><rect x="38.5418%" y="821" width="0.1057%" height="15" fill="rgb(215,141,46)"/><text x="38.7918%" y="831.50"></text></g><g><title>__GI___libc_free (17 samples, 0.22%)</title><rect x="38.8324%" y="821" width="0.2245%" height="15" fill="rgb(250,160,47)"/><text x="39.0824%" y="831.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.45%)</title><rect x="39.0569%" y="821" width="0.4491%" height="15" fill="rgb(216,222,40)"/><text x="39.3069%" y="831.50"></text></g><g><title>ip_local_deliver (12 samples, 0.16%)</title><rect x="39.7041%" y="213" width="0.1585%" height="15" fill="rgb(234,217,39)"/><text x="39.9541%" y="223.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.16%)</title><rect x="39.7041%" y="197" width="0.1585%" height="15" fill="rgb(207,178,40)"/><text x="39.9541%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (12 samples, 0.16%)</title><rect x="39.7041%" y="181" width="0.1585%" height="15" fill="rgb(221,136,13)"/><text x="39.9541%" y="191.50"></text></g><g><title>tcp_v4_rcv (10 samples, 0.13%)</title><rect x="39.7306%" y="165" width="0.1321%" height="15" fill="rgb(249,199,10)"/><text x="39.9806%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.11%)</title><rect x="39.7570%" y="149" width="0.1057%" height="15" fill="rgb(249,222,13)"/><text x="40.0070%" y="159.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.11%)</title><rect x="39.7570%" y="133" width="0.1057%" height="15" fill="rgb(244,185,38)"/><text x="40.0070%" y="143.50"></text></g><g><title>__local_bh_enable_ip (17 samples, 0.22%)</title><rect x="39.6513%" y="341" width="0.2245%" height="15" fill="rgb(236,202,9)"/><text x="39.9013%" y="351.50"></text></g><g><title>do_softirq (17 samples, 0.22%)</title><rect x="39.6513%" y="325" width="0.2245%" height="15" fill="rgb(250,229,37)"/><text x="39.9013%" y="335.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.22%)</title><rect x="39.6513%" y="309" width="0.2245%" height="15" fill="rgb(206,174,23)"/><text x="39.9013%" y="319.50"></text></g><g><title>__do_softirq (17 samples, 0.22%)</title><rect x="39.6513%" y="293" width="0.2245%" height="15" fill="rgb(211,33,43)"/><text x="39.9013%" y="303.50"></text></g><g><title>net_rx_action (17 samples, 0.22%)</title><rect x="39.6513%" y="277" width="0.2245%" height="15" fill="rgb(245,58,50)"/><text x="39.9013%" y="287.50"></text></g><g><title>process_backlog (16 samples, 0.21%)</title><rect x="39.6645%" y="261" width="0.2113%" height="15" fill="rgb(244,68,36)"/><text x="39.9145%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 0.20%)</title><rect x="39.6777%" y="245" width="0.1981%" height="15" fill="rgb(232,229,15)"/><text x="39.9277%" y="255.50"></text></g><g><title>ip_rcv (14 samples, 0.18%)</title><rect x="39.6909%" y="229" width="0.1849%" height="15" fill="rgb(254,30,23)"/><text x="39.9409%" y="239.50"></text></g><g><title>__tcp_push_pending_frames (24 samples, 0.32%)</title><rect x="39.5721%" y="437" width="0.3170%" height="15" fill="rgb(235,160,14)"/><text x="39.8221%" y="447.50"></text></g><g><title>tcp_write_xmit (24 samples, 0.32%)</title><rect x="39.5721%" y="421" width="0.3170%" height="15" fill="rgb(212,155,44)"/><text x="39.8221%" y="431.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 0.29%)</title><rect x="39.5985%" y="405" width="0.2906%" height="15" fill="rgb(226,2,50)"/><text x="39.8485%" y="415.50"></text></g><g><title>__ip_queue_xmit (21 samples, 0.28%)</title><rect x="39.6117%" y="389" width="0.2774%" height="15" fill="rgb(234,177,6)"/><text x="39.8617%" y="399.50"></text></g><g><title>ip_output (21 samples, 0.28%)</title><rect x="39.6117%" y="373" width="0.2774%" height="15" fill="rgb(217,24,9)"/><text x="39.8617%" y="383.50"></text></g><g><title>ip_finish_output2 (21 samples, 0.28%)</title><rect x="39.6117%" y="357" width="0.2774%" height="15" fill="rgb(220,13,46)"/><text x="39.8617%" y="367.50"></text></g><g><title>do_syscall_64 (29 samples, 0.38%)</title><rect x="39.5456%" y="533" width="0.3830%" height="15" fill="rgb(239,221,27)"/><text x="39.7956%" y="543.50"></text></g><g><title>__x64_sys_sendto (28 samples, 0.37%)</title><rect x="39.5588%" y="517" width="0.3698%" height="15" fill="rgb(222,198,25)"/><text x="39.8088%" y="527.50"></text></g><g><title>__sys_sendto (28 samples, 0.37%)</title><rect x="39.5588%" y="501" width="0.3698%" height="15" fill="rgb(211,99,13)"/><text x="39.8088%" y="511.50"></text></g><g><title>sock_sendmsg (28 samples, 0.37%)</title><rect x="39.5588%" y="485" width="0.3698%" height="15" fill="rgb(232,111,31)"/><text x="39.8088%" y="495.50"></text></g><g><title>tcp_sendmsg (28 samples, 0.37%)</title><rect x="39.5588%" y="469" width="0.3698%" height="15" fill="rgb(245,82,37)"/><text x="39.8088%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (27 samples, 0.36%)</title><rect x="39.5721%" y="453" width="0.3566%" height="15" fill="rgb(227,149,46)"/><text x="39.8221%" y="463.50"></text></g><g><title>__libc_start_main (32 samples, 0.42%)</title><rect x="39.5192%" y="821" width="0.4227%" height="15" fill="rgb(218,36,50)"/><text x="39.7692%" y="831.50"></text></g><g><title>main (32 samples, 0.42%)</title><rect x="39.5192%" y="805" width="0.4227%" height="15" fill="rgb(226,80,48)"/><text x="39.7692%" y="815.50"></text></g><g><title>std::rt::lang_start_internal (32 samples, 0.42%)</title><rect x="39.5192%" y="789" width="0.4227%" height="15" fill="rgb(238,224,15)"/><text x="39.7692%" y="799.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.42%)</title><rect x="39.5192%" y="773" width="0.4227%" height="15" fill="rgb(241,136,10)"/><text x="39.7692%" y="783.50"></text></g><g><title>std::panicking::try (32 samples, 0.42%)</title><rect x="39.5192%" y="757" width="0.4227%" height="15" fill="rgb(208,32,45)"/><text x="39.7692%" y="767.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.42%)</title><rect x="39.5192%" y="741" width="0.4227%" height="15" fill="rgb(207,135,9)"/><text x="39.7692%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (32 samples, 0.42%)</title><rect x="39.5192%" y="725" width="0.4227%" height="15" fill="rgb(206,86,44)"/><text x="39.7692%" y="735.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (32 samples, 0.42%)</title><rect x="39.5192%" y="709" width="0.4227%" height="15" fill="rgb(245,177,15)"/><text x="39.7692%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (32 samples, 0.42%)</title><rect x="39.5192%" y="693" width="0.4227%" height="15" fill="rgb(206,64,50)"/><text x="39.7692%" y="703.50"></text></g><g><title>lobsters::main (32 samples, 0.42%)</title><rect x="39.5192%" y="677" width="0.4227%" height="15" fill="rgb(234,36,40)"/><text x="39.7692%" y="687.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (31 samples, 0.41%)</title><rect x="39.5324%" y="661" width="0.4095%" height="15" fill="rgb(213,64,8)"/><text x="39.7824%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (31 samples, 0.41%)</title><rect x="39.5324%" y="645" width="0.4095%" height="15" fill="rgb(210,75,36)"/><text x="39.7824%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (31 samples, 0.41%)</title><rect x="39.5324%" y="629" width="0.4095%" height="15" fill="rgb(229,88,21)"/><text x="39.7824%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (30 samples, 0.40%)</title><rect x="39.5456%" y="613" width="0.3962%" height="15" fill="rgb(252,204,47)"/><text x="39.7956%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (30 samples, 0.40%)</title><rect x="39.5456%" y="597" width="0.3962%" height="15" fill="rgb(208,77,27)"/><text x="39.7956%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (30 samples, 0.40%)</title><rect x="39.5456%" y="581" width="0.3962%" height="15" fill="rgb(221,76,26)"/><text x="39.7956%" y="591.50"></text></g><g><title>__libc_send (30 samples, 0.40%)</title><rect x="39.5456%" y="565" width="0.3962%" height="15" fill="rgb(225,139,18)"/><text x="39.7956%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (30 samples, 0.40%)</title><rect x="39.5456%" y="549" width="0.3962%" height="15" fill="rgb(230,137,11)"/><text x="39.7956%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (74 samples, 0.98%)</title><rect x="39.9551%" y="821" width="0.9774%" height="15" fill="rgb(212,28,1)"/><text x="40.2051%" y="831.50"></text></g><g><title>_int_free (69 samples, 0.91%)</title><rect x="41.0118%" y="821" width="0.9114%" height="15" fill="rgb(248,164,17)"/><text x="41.2618%" y="831.50"></text></g><g><title>_int_malloc (9 samples, 0.12%)</title><rect x="41.9231%" y="821" width="0.1189%" height="15" fill="rgb(222,171,42)"/><text x="42.1731%" y="831.50"></text></g><g><title>_int_realloc (15 samples, 0.20%)</title><rect x="42.0420%" y="821" width="0.1981%" height="15" fill="rgb(243,84,45)"/><text x="42.2920%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (44 samples, 0.58%)</title><rect x="42.2401%" y="821" width="0.5812%" height="15" fill="rgb(252,49,23)"/><text x="42.4901%" y="831.50"></text></g><g><title>alloc::string::String::push (8 samples, 0.11%)</title><rect x="42.9270%" y="821" width="0.1057%" height="15" fill="rgb(215,19,7)"/><text x="43.1770%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad (23 samples, 0.30%)</title><rect x="43.0855%" y="821" width="0.3038%" height="15" fill="rgb(238,81,41)"/><text x="43.3355%" y="831.50"></text></g><g><title>core::fmt::write (32 samples, 0.42%)</title><rect x="43.3892%" y="821" width="0.4227%" height="15" fill="rgb(210,199,37)"/><text x="43.6392%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 0.18%)</title><rect x="43.8515%" y="821" width="0.1849%" height="15" fill="rgb(244,192,49)"/><text x="44.1015%" y="831.50"></text></g><g><title>core::fmt::write (8 samples, 0.11%)</title><rect x="44.3931%" y="773" width="0.1057%" height="15" fill="rgb(226,211,11)"/><text x="44.6431%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (8 samples, 0.11%)</title><rect x="44.3931%" y="757" width="0.1057%" height="15" fill="rgb(236,162,54)"/><text x="44.6431%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.11%)</title><rect x="44.3931%" y="741" width="0.1057%" height="15" fill="rgb(220,229,9)"/><text x="44.6431%" y="751.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (15 samples, 0.20%)</title><rect x="44.3667%" y="821" width="0.1981%" height="15" fill="rgb(250,87,22)"/><text x="44.6167%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (15 samples, 0.20%)</title><rect x="44.3667%" y="805" width="0.1981%" height="15" fill="rgb(239,43,17)"/><text x="44.6167%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_value_expr (15 samples, 0.20%)</title><rect x="44.3667%" y="789" width="0.1981%" height="15" fill="rgb(231,177,25)"/><text x="44.6167%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 0.21%)</title><rect x="44.8290%" y="389" width="0.2113%" height="15" fill="rgb(219,179,1)"/><text x="45.0790%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (24 samples, 0.32%)</title><rect x="44.8290%" y="405" width="0.3170%" height="15" fill="rgb(238,219,53)"/><text x="45.0790%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (43 samples, 0.57%)</title><rect x="44.8025%" y="421" width="0.5680%" height="15" fill="rgb(232,167,36)"/><text x="45.0525%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (8 samples, 0.11%)</title><rect x="45.2648%" y="405" width="0.1057%" height="15" fill="rgb(244,19,51)"/><text x="45.5148%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.11%)</title><rect x="45.4630%" y="421" width="0.1057%" height="15" fill="rgb(224,6,22)"/><text x="45.7130%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (77 samples, 1.02%)</title><rect x="44.7629%" y="437" width="1.0170%" height="15" fill="rgb(224,145,5)"/><text x="45.0129%" y="447.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (16 samples, 0.21%)</title><rect x="45.5686%" y="421" width="0.2113%" height="15" fill="rgb(234,130,49)"/><text x="45.8186%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.17%)</title><rect x="45.7799%" y="437" width="0.1717%" height="15" fill="rgb(254,6,2)"/><text x="46.0299%" y="447.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 0.17%)</title><rect x="45.7799%" y="421" width="0.1717%" height="15" fill="rgb(208,96,46)"/><text x="46.0299%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.15%)</title><rect x="45.8064%" y="405" width="0.1453%" height="15" fill="rgb(239,3,39)"/><text x="46.0564%" y="415.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.11%)</title><rect x="45.8460%" y="389" width="0.1057%" height="15" fill="rgb(233,210,1)"/><text x="46.0960%" y="399.50"></text></g><g><title>__GI___libc_free (11 samples, 0.15%)</title><rect x="46.4272%" y="389" width="0.1453%" height="15" fill="rgb(244,137,37)"/><text x="46.6772%" y="399.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.16%)</title><rect x="46.5724%" y="389" width="0.1585%" height="15" fill="rgb(240,136,2)"/><text x="46.8224%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.11%)</title><rect x="46.7309%" y="389" width="0.1057%" height="15" fill="rgb(239,18,37)"/><text x="46.9809%" y="399.50"></text></g><g><title>_int_free (17 samples, 0.22%)</title><rect x="46.9555%" y="389" width="0.2245%" height="15" fill="rgb(218,185,22)"/><text x="47.2055%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (104 samples, 1.37%)</title><rect x="46.0177%" y="421" width="1.3737%" height="15" fill="rgb(225,218,4)"/><text x="46.2677%" y="431.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (103 samples, 1.36%)</title><rect x="46.0309%" y="405" width="1.3605%" height="15" fill="rgb(230,182,32)"/><text x="46.2809%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.21%)</title><rect x="47.1800%" y="389" width="0.2113%" height="15" fill="rgb(242,56,43)"/><text x="47.4300%" y="399.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.16%)</title><rect x="47.2329%" y="373" width="0.1585%" height="15" fill="rgb(233,99,24)"/><text x="47.4829%" y="383.50"></text></g><g><title>_int_realloc (12 samples, 0.16%)</title><rect x="47.2329%" y="357" width="0.1585%" height="15" fill="rgb(234,209,42)"/><text x="47.4829%" y="367.50"></text></g><g><title>_int_malloc (11 samples, 0.15%)</title><rect x="47.2461%" y="341" width="0.1453%" height="15" fill="rgb(227,7,12)"/><text x="47.4961%" y="351.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.17%)</title><rect x="47.4970%" y="405" width="0.1717%" height="15" fill="rgb(245,203,43)"/><text x="47.7470%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.15%)</title><rect x="47.7612%" y="389" width="0.1453%" height="15" fill="rgb(238,205,33)"/><text x="48.0112%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (151 samples, 1.99%)</title><rect x="45.9517%" y="437" width="1.9945%" height="15" fill="rgb(231,56,7)"/><text x="46.2017%" y="447.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (42 samples, 0.55%)</title><rect x="47.3914%" y="421" width="0.5547%" height="15" fill="rgb(244,186,29)"/><text x="47.6414%" y="431.50"></text></g><g><title>core::fmt::write (18 samples, 0.24%)</title><rect x="47.7084%" y="405" width="0.2377%" height="15" fill="rgb(234,111,31)"/><text x="47.9584%" y="415.50"></text></g><g><title>__GI___libc_realloc (24 samples, 0.32%)</title><rect x="48.1442%" y="421" width="0.3170%" height="15" fill="rgb(241,149,10)"/><text x="48.3942%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (19 samples, 0.25%)</title><rect x="48.7518%" y="405" width="0.2510%" height="15" fill="rgb(249,206,44)"/><text x="49.0018%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.12%)</title><rect x="48.8839%" y="389" width="0.1189%" height="15" fill="rgb(251,153,30)"/><text x="49.1339%" y="399.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (328 samples, 4.33%)</title><rect x="44.7233%" y="453" width="4.3323%" height="15" fill="rgb(239,152,38)"/><text x="44.9733%" y="463.50">&lt;sql_..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (84 samples, 1.11%)</title><rect x="47.9461%" y="437" width="1.1095%" height="15" fill="rgb(249,139,47)"/><text x="48.1961%" y="447.50"></text></g><g><title>core::fmt::write (33 samples, 0.44%)</title><rect x="48.6197%" y="421" width="0.4359%" height="15" fill="rgb(244,64,35)"/><text x="48.8697%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (20 samples, 0.26%)</title><rect x="49.0688%" y="421" width="0.2642%" height="15" fill="rgb(216,46,15)"/><text x="49.3188%" y="431.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (12 samples, 0.16%)</title><rect x="49.1745%" y="405" width="0.1585%" height="15" fill="rgb(250,74,19)"/><text x="49.4245%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (22 samples, 0.29%)</title><rect x="49.0556%" y="453" width="0.2906%" height="15" fill="rgb(249,42,33)"/><text x="49.3056%" y="463.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (22 samples, 0.29%)</title><rect x="49.0556%" y="437" width="0.2906%" height="15" fill="rgb(242,149,17)"/><text x="49.3056%" y="447.50"></text></g><g><title>__GI___libc_free (10 samples, 0.13%)</title><rect x="49.6500%" y="405" width="0.1321%" height="15" fill="rgb(244,29,21)"/><text x="49.9000%" y="415.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.20%)</title><rect x="49.7821%" y="405" width="0.1981%" height="15" fill="rgb(220,130,37)"/><text x="50.0321%" y="415.50"></text></g><g><title>_int_free (25 samples, 0.33%)</title><rect x="50.1387%" y="405" width="0.3302%" height="15" fill="rgb(211,67,2)"/><text x="50.3887%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (90 samples, 1.19%)</title><rect x="49.3594%" y="437" width="1.1887%" height="15" fill="rgb(235,68,52)"/><text x="49.6094%" y="447.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (83 samples, 1.10%)</title><rect x="49.4519%" y="421" width="1.0963%" height="15" fill="rgb(246,142,3)"/><text x="49.7019%" y="431.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.13%)</title><rect x="50.5878%" y="421" width="0.1321%" height="15" fill="rgb(241,25,7)"/><text x="50.8378%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (121 samples, 1.60%)</title><rect x="49.3462%" y="453" width="1.5982%" height="15" fill="rgb(242,119,39)"/><text x="49.5962%" y="463.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (30 samples, 0.40%)</title><rect x="50.5481%" y="437" width="0.3962%" height="15" fill="rgb(241,98,45)"/><text x="50.7981%" y="447.50"></text></g><g><title>core::fmt::write (10 samples, 0.13%)</title><rect x="50.8123%" y="421" width="0.1321%" height="15" fill="rgb(254,28,30)"/><text x="51.0623%" y="431.50"></text></g><g><title>__GI___libc_realloc (24 samples, 0.32%)</title><rect x="51.1425%" y="437" width="0.3170%" height="15" fill="rgb(241,142,54)"/><text x="51.3925%" y="447.50"></text></g><g><title>_int_realloc (9 samples, 0.12%)</title><rect x="51.3406%" y="421" width="0.1189%" height="15" fill="rgb(222,85,15)"/><text x="51.5906%" y="431.50"></text></g><g><title>_int_free (16 samples, 0.21%)</title><rect x="51.5256%" y="437" width="0.2113%" height="15" fill="rgb(210,85,47)"/><text x="51.7756%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.15%)</title><rect x="51.8426%" y="405" width="0.1453%" height="15" fill="rgb(224,206,25)"/><text x="52.0926%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (31 samples, 0.41%)</title><rect x="51.8029%" y="421" width="0.4095%" height="15" fill="rgb(243,201,19)"/><text x="52.0529%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.22%)</title><rect x="51.9878%" y="405" width="0.2245%" height="15" fill="rgb(236,59,4)"/><text x="52.2378%" y="415.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (578 samples, 7.63%)</title><rect x="44.6837%" y="469" width="7.6344%" height="15" fill="rgb(254,179,45)"/><text x="44.9337%" y="479.50">&lt;sql_parse..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (104 samples, 1.37%)</title><rect x="50.9444%" y="453" width="1.3737%" height="15" fill="rgb(226,14,10)"/><text x="51.1944%" y="463.50"></text></g><g><title>core::fmt::write (43 samples, 0.57%)</title><rect x="51.7501%" y="437" width="0.5680%" height="15" fill="rgb(244,27,41)"/><text x="52.0001%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.17%)</title><rect x="52.3181%" y="469" width="0.1717%" height="15" fill="rgb(235,35,32)"/><text x="52.5681%" y="479.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (13 samples, 0.17%)</title><rect x="52.3181%" y="453" width="0.1717%" height="15" fill="rgb(218,68,31)"/><text x="52.5681%" y="463.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 0.16%)</title><rect x="52.3313%" y="437" width="0.1585%" height="15" fill="rgb(207,120,37)"/><text x="52.5813%" y="447.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (8 samples, 0.11%)</title><rect x="52.3841%" y="421" width="0.1057%" height="15" fill="rgb(227,98,0)"/><text x="52.6341%" y="431.50"></text></g><g><title>__GI___libc_free (11 samples, 0.15%)</title><rect x="52.7143%" y="421" width="0.1453%" height="15" fill="rgb(207,7,3)"/><text x="52.9643%" y="431.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.17%)</title><rect x="52.8596%" y="421" width="0.1717%" height="15" fill="rgb(206,98,19)"/><text x="53.1096%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.11%)</title><rect x="53.0313%" y="421" width="0.1057%" height="15" fill="rgb(217,5,26)"/><text x="53.2813%" y="431.50"></text></g><g><title>_int_free (18 samples, 0.24%)</title><rect x="53.1634%" y="421" width="0.2377%" height="15" fill="rgb(235,190,38)"/><text x="53.4134%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (71 samples, 0.94%)</title><rect x="52.5162%" y="453" width="0.9378%" height="15" fill="rgb(247,86,24)"/><text x="52.7662%" y="463.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (67 samples, 0.88%)</title><rect x="52.5690%" y="437" width="0.8850%" height="15" fill="rgb(205,101,16)"/><text x="52.8190%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.13%)</title><rect x="53.6917%" y="421" width="0.1321%" height="15" fill="rgb(246,168,33)"/><text x="53.9417%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (103 samples, 1.36%)</title><rect x="52.4898%" y="469" width="1.3605%" height="15" fill="rgb(231,114,1)"/><text x="52.7398%" y="479.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (30 samples, 0.40%)</title><rect x="53.4540%" y="453" width="0.3962%" height="15" fill="rgb(207,184,53)"/><text x="53.7040%" y="463.50"></text></g><g><title>core::fmt::write (15 samples, 0.20%)</title><rect x="53.6521%" y="437" width="0.1981%" height="15" fill="rgb(224,95,51)"/><text x="53.9021%" y="447.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.25%)</title><rect x="54.0616%" y="453" width="0.2510%" height="15" fill="rgb(212,188,45)"/><text x="54.3116%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.21%)</title><rect x="54.5767%" y="437" width="0.2113%" height="15" fill="rgb(223,154,38)"/><text x="54.8267%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.12%)</title><rect x="54.6691%" y="421" width="0.1189%" height="15" fill="rgb(251,22,52)"/><text x="54.9191%" y="431.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (779 samples, 10.29%)</title><rect x="44.6308%" y="485" width="10.2893%" height="15" fill="rgb(229,209,22)"/><text x="44.8808%" y="495.50">&lt;sql_parser::as..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (81 samples, 1.07%)</title><rect x="53.8502%" y="469" width="1.0699%" height="15" fill="rgb(234,138,34)"/><text x="54.1002%" y="479.50"></text></g><g><title>core::fmt::write (34 samples, 0.45%)</title><rect x="54.4710%" y="453" width="0.4491%" height="15" fill="rgb(212,95,11)"/><text x="54.7210%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 0.20%)</title><rect x="54.9201%" y="485" width="0.1981%" height="15" fill="rgb(240,179,47)"/><text x="55.1701%" y="495.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (15 samples, 0.20%)</title><rect x="54.9201%" y="469" width="0.1981%" height="15" fill="rgb(240,163,11)"/><text x="55.1701%" y="479.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 0.16%)</title><rect x="54.9597%" y="453" width="0.1585%" height="15" fill="rgb(236,37,12)"/><text x="55.2097%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (31 samples, 0.41%)</title><rect x="55.1182%" y="469" width="0.4095%" height="15" fill="rgb(232,164,16)"/><text x="55.3682%" y="479.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (30 samples, 0.40%)</title><rect x="55.1314%" y="453" width="0.3962%" height="15" fill="rgb(244,205,15)"/><text x="55.3814%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (49 samples, 0.65%)</title><rect x="55.1182%" y="485" width="0.6472%" height="15" fill="rgb(223,117,47)"/><text x="55.3682%" y="495.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (18 samples, 0.24%)</title><rect x="55.5277%" y="469" width="0.2377%" height="15" fill="rgb(244,107,35)"/><text x="55.7777%" y="479.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.17%)</title><rect x="55.9239%" y="469" width="0.1717%" height="15" fill="rgb(205,140,8)"/><text x="56.1739%" y="479.50"></text></g><g><title>_int_free (8 samples, 0.11%)</title><rect x="56.1353%" y="469" width="0.1057%" height="15" fill="rgb(228,84,46)"/><text x="56.3853%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (900 samples, 11.89%)</title><rect x="44.5780%" y="501" width="11.8875%" height="15" fill="rgb(254,188,9)"/><text x="44.8280%" y="511.50">&lt;sql_parser::ast::..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (53 samples, 0.70%)</title><rect x="55.7654%" y="485" width="0.7000%" height="15" fill="rgb(206,112,54)"/><text x="56.0154%" y="495.50"></text></g><g><title>core::fmt::write (17 samples, 0.22%)</title><rect x="56.2409%" y="469" width="0.2245%" height="15" fill="rgb(216,84,49)"/><text x="56.4909%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.15%)</title><rect x="56.3202%" y="453" width="0.1453%" height="15" fill="rgb(214,194,35)"/><text x="56.5702%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.11%)</title><rect x="56.3598%" y="437" width="0.1057%" height="15" fill="rgb(249,28,3)"/><text x="56.6098%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.18%)</title><rect x="56.4655%" y="501" width="0.1849%" height="15" fill="rgb(222,56,52)"/><text x="56.7155%" y="511.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (14 samples, 0.18%)</title><rect x="56.4655%" y="485" width="0.1849%" height="15" fill="rgb(245,217,50)"/><text x="56.7155%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (14 samples, 0.18%)</title><rect x="56.4655%" y="469" width="0.1849%" height="15" fill="rgb(213,201,24)"/><text x="56.7155%" y="479.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (10 samples, 0.13%)</title><rect x="56.5183%" y="453" width="0.1321%" height="15" fill="rgb(248,116,28)"/><text x="56.7683%" y="463.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (9 samples, 0.12%)</title><rect x="56.5315%" y="437" width="0.1189%" height="15" fill="rgb(219,72,43)"/><text x="56.7815%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 0.12%)</title><rect x="56.5315%" y="421" width="0.1189%" height="15" fill="rgb(209,138,14)"/><text x="56.7815%" y="431.50"></text></g><g><title>__GI___libc_free (8 samples, 0.11%)</title><rect x="56.9542%" y="453" width="0.1057%" height="15" fill="rgb(222,18,33)"/><text x="57.2042%" y="463.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.18%)</title><rect x="57.0598%" y="453" width="0.1849%" height="15" fill="rgb(213,199,7)"/><text x="57.3098%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.17%)</title><rect x="57.2447%" y="453" width="0.1717%" height="15" fill="rgb(250,110,10)"/><text x="57.4947%" y="463.50"></text></g><g><title>_int_free (19 samples, 0.25%)</title><rect x="57.5221%" y="453" width="0.2510%" height="15" fill="rgb(248,123,6)"/><text x="57.7721%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (90 samples, 1.19%)</title><rect x="56.6636%" y="485" width="1.1887%" height="15" fill="rgb(206,91,31)"/><text x="56.9136%" y="495.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (86 samples, 1.14%)</title><rect x="56.7164%" y="469" width="1.1359%" height="15" fill="rgb(211,154,13)"/><text x="56.9664%" y="479.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.15%)</title><rect x="57.8920%" y="469" width="0.1453%" height="15" fill="rgb(225,148,7)"/><text x="58.1420%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (122 samples, 1.61%)</title><rect x="56.6504%" y="501" width="1.6114%" height="15" fill="rgb(220,160,43)"/><text x="56.9004%" y="511.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (31 samples, 0.41%)</title><rect x="57.8523%" y="485" width="0.4095%" height="15" fill="rgb(213,52,39)"/><text x="58.1023%" y="495.50"></text></g><g><title>core::fmt::write (10 samples, 0.13%)</title><rect x="58.1297%" y="469" width="0.1321%" height="15" fill="rgb(243,137,7)"/><text x="58.3797%" y="479.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.22%)</title><rect x="58.4599%" y="485" width="0.2245%" height="15" fill="rgb(230,79,13)"/><text x="58.7099%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (27 samples, 0.36%)</title><rect x="59.0147%" y="469" width="0.3566%" height="15" fill="rgb(247,105,23)"/><text x="59.2647%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.25%)</title><rect x="59.1203%" y="453" width="0.2510%" height="15" fill="rgb(223,179,41)"/><text x="59.3703%" y="463.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.18%)</title><rect x="59.1864%" y="437" width="0.1849%" height="15" fill="rgb(218,9,34)"/><text x="59.4364%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,131 samples, 14.94%)</title><rect x="44.5780%" y="517" width="14.9386%" height="15" fill="rgb(222,106,8)"/><text x="44.8280%" y="527.50">&lt;sql_parser::ast::defs:..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (95 samples, 1.25%)</title><rect x="58.2618%" y="501" width="1.2548%" height="15" fill="rgb(211,220,0)"/><text x="58.5118%" y="511.50"></text></g><g><title>core::fmt::write (48 samples, 0.63%)</title><rect x="58.8826%" y="485" width="0.6340%" height="15" fill="rgb(229,52,16)"/><text x="59.1326%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.15%)</title><rect x="59.5166%" y="485" width="0.1453%" height="15" fill="rgb(212,155,18)"/><text x="59.7666%" y="495.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (11 samples, 0.15%)</title><rect x="59.5166%" y="469" width="0.1453%" height="15" fill="rgb(242,21,14)"/><text x="59.7666%" y="479.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (8 samples, 0.11%)</title><rect x="59.5562%" y="453" width="0.1057%" height="15" fill="rgb(222,19,48)"/><text x="59.8062%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (8 samples, 0.11%)</title><rect x="59.5562%" y="437" width="0.1057%" height="15" fill="rgb(232,45,27)"/><text x="59.8062%" y="447.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (12 samples, 0.16%)</title><rect x="59.5166%" y="517" width="0.1585%" height="15" fill="rgb(249,103,42)"/><text x="59.7666%" y="527.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (12 samples, 0.16%)</title><rect x="59.5166%" y="501" width="0.1585%" height="15" fill="rgb(246,81,33)"/><text x="59.7666%" y="511.50"></text></g><g><title>__GI___libc_free (8 samples, 0.11%)</title><rect x="59.6751%" y="469" width="0.1057%" height="15" fill="rgb(252,33,42)"/><text x="59.9251%" y="479.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.21%)</title><rect x="59.7807%" y="469" width="0.2113%" height="15" fill="rgb(209,212,41)"/><text x="60.0307%" y="479.50"></text></g><g><title>_int_free (16 samples, 0.21%)</title><rect x="60.0317%" y="469" width="0.2113%" height="15" fill="rgb(207,154,6)"/><text x="60.2817%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (48 samples, 0.63%)</title><rect x="59.6751%" y="501" width="0.6340%" height="15" fill="rgb(223,64,47)"/><text x="59.9251%" y="511.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (48 samples, 0.63%)</title><rect x="59.6751%" y="485" width="0.6340%" height="15" fill="rgb(211,161,38)"/><text x="59.9251%" y="495.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.18%)</title><rect x="60.4147%" y="485" width="0.1849%" height="15" fill="rgb(219,138,40)"/><text x="60.6647%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (80 samples, 1.06%)</title><rect x="59.6751%" y="517" width="1.0567%" height="15" fill="rgb(241,228,46)"/><text x="59.9251%" y="527.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (32 samples, 0.42%)</title><rect x="60.3091%" y="501" width="0.4227%" height="15" fill="rgb(223,209,38)"/><text x="60.5591%" y="511.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.33%)</title><rect x="60.7317%" y="501" width="0.3302%" height="15" fill="rgb(236,164,45)"/><text x="60.9817%" y="511.50"></text></g><g><title>_int_realloc (10 samples, 0.13%)</title><rect x="60.9299%" y="485" width="0.1321%" height="15" fill="rgb(231,15,5)"/><text x="61.1799%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (19 samples, 0.25%)</title><rect x="61.1148%" y="485" width="0.2510%" height="15" fill="rgb(252,35,15)"/><text x="61.3648%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.16%)</title><rect x="61.2072%" y="469" width="0.1585%" height="15" fill="rgb(248,181,18)"/><text x="61.4572%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,282 samples, 16.93%)</title><rect x="44.5780%" y="533" width="16.9330%" height="15" fill="rgb(233,39,42)"/><text x="44.8280%" y="543.50">&lt;sql_parser::ast::defs::ex..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (59 samples, 0.78%)</title><rect x="60.7317%" y="517" width="0.7793%" height="15" fill="rgb(238,110,33)"/><text x="60.9817%" y="527.50"></text></g><g><title>core::fmt::write (33 samples, 0.44%)</title><rect x="61.0752%" y="501" width="0.4359%" height="15" fill="rgb(233,195,10)"/><text x="61.3252%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.11%)</title><rect x="61.5374%" y="485" width="0.1057%" height="15" fill="rgb(254,105,3)"/><text x="61.7874%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.11%)</title><rect x="61.5374%" y="469" width="0.1057%" height="15" fill="rgb(221,225,9)"/><text x="61.7874%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 0.17%)</title><rect x="61.5110%" y="533" width="0.1717%" height="15" fill="rgb(224,227,45)"/><text x="61.7610%" y="543.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (13 samples, 0.17%)</title><rect x="61.5110%" y="517" width="0.1717%" height="15" fill="rgb(229,198,43)"/><text x="61.7610%" y="527.50"></text></g><g><title>core::fmt::write (11 samples, 0.15%)</title><rect x="61.5374%" y="501" width="0.1453%" height="15" fill="rgb(206,209,35)"/><text x="61.7874%" y="511.50"></text></g><g><title>core::fmt::write (1,301 samples, 17.18%)</title><rect x="44.5780%" y="805" width="17.1840%" height="15" fill="rgb(245,195,53)"/><text x="44.8280%" y="815.50">core::fmt::write</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="789" width="17.1840%" height="15" fill="rgb(240,92,26)"/><text x="44.8280%" y="799.50">&lt;sql_parser::ast::defs::sta..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="773" width="17.1840%" height="15" fill="rgb(207,40,23)"/><text x="44.8280%" y="783.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="757" width="17.1840%" height="15" fill="rgb(223,111,35)"/><text x="44.8280%" y="767.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="741" width="17.1840%" height="15" fill="rgb(229,147,28)"/><text x="44.8280%" y="751.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="725" width="17.1840%" height="15" fill="rgb(211,29,28)"/><text x="44.8280%" y="735.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="709" width="17.1840%" height="15" fill="rgb(228,72,33)"/><text x="44.8280%" y="719.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="693" width="17.1840%" height="15" fill="rgb(205,214,31)"/><text x="44.8280%" y="703.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="677" width="17.1840%" height="15" fill="rgb(224,111,15)"/><text x="44.8280%" y="687.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="661" width="17.1840%" height="15" fill="rgb(253,21,26)"/><text x="44.8280%" y="671.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="645" width="17.1840%" height="15" fill="rgb(245,139,43)"/><text x="44.8280%" y="655.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="629" width="17.1840%" height="15" fill="rgb(252,170,7)"/><text x="44.8280%" y="639.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="613" width="17.1840%" height="15" fill="rgb(231,118,14)"/><text x="44.8280%" y="623.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="597" width="17.1840%" height="15" fill="rgb(238,83,0)"/><text x="44.8280%" y="607.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="581" width="17.1840%" height="15" fill="rgb(221,39,39)"/><text x="44.8280%" y="591.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="565" width="17.1840%" height="15" fill="rgb(222,119,46)"/><text x="44.8280%" y="575.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1,301 samples, 17.18%)</title><rect x="44.5780%" y="549" width="17.1840%" height="15" fill="rgb(222,165,49)"/><text x="44.8280%" y="559.50">&lt;sql_parser::ast::defs::exp..</text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (11 samples, 0.15%)</title><rect x="61.7752%" y="805" width="0.1453%" height="15" fill="rgb(219,113,52)"/><text x="62.0252%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (11 samples, 0.15%)</title><rect x="61.7752%" y="789" width="0.1453%" height="15" fill="rgb(214,7,15)"/><text x="62.0252%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (11 samples, 0.15%)</title><rect x="61.7752%" y="773" width="0.1453%" height="15" fill="rgb(235,32,4)"/><text x="62.0252%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (11 samples, 0.15%)</title><rect x="61.7752%" y="757" width="0.1453%" height="15" fill="rgb(238,90,54)"/><text x="62.0252%" y="767.50"></text></g><g><title>decor::helpers::str_subset_of_idents (10 samples, 0.13%)</title><rect x="61.7884%" y="741" width="0.1321%" height="15" fill="rgb(213,208,19)"/><text x="62.0384%" y="751.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.37%)</title><rect x="62.1714%" y="773" width="0.3698%" height="15" fill="rgb(233,156,4)"/><text x="62.4214%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (20 samples, 0.26%)</title><rect x="62.2771%" y="757" width="0.2642%" height="15" fill="rgb(207,194,5)"/><text x="62.5271%" y="767.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.33%)</title><rect x="62.5413%" y="773" width="0.3302%" height="15" fill="rgb(206,111,30)"/><text x="62.7913%" y="783.50"></text></g><g><title>_int_malloc (9 samples, 0.12%)</title><rect x="62.7526%" y="757" width="0.1189%" height="15" fill="rgb(243,70,54)"/><text x="63.0026%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (87 samples, 1.15%)</title><rect x="61.9469%" y="789" width="1.1491%" height="15" fill="rgb(242,28,8)"/><text x="62.1969%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17 samples, 0.22%)</title><rect x="62.8715%" y="773" width="0.2245%" height="15" fill="rgb(219,106,18)"/><text x="63.1215%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (11 samples, 0.15%)</title><rect x="64.0602%" y="693" width="0.1453%" height="15" fill="rgb(244,222,10)"/><text x="64.3102%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.15%)</title><rect x="64.0602%" y="677" width="0.1453%" height="15" fill="rgb(236,179,52)"/><text x="64.3102%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (11 samples, 0.15%)</title><rect x="64.0602%" y="661" width="0.1453%" height="15" fill="rgb(213,23,39)"/><text x="64.3102%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.15%)</title><rect x="64.0602%" y="645" width="0.1453%" height="15" fill="rgb(238,48,10)"/><text x="64.3102%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.11%)</title><rect x="64.0999%" y="629" width="0.1057%" height="15" fill="rgb(251,196,23)"/><text x="64.3499%" y="639.50"></text></g><g><title>__GI___libc_malloc (180 samples, 2.38%)</title><rect x="64.2716%" y="581" width="2.3775%" height="15" fill="rgb(250,152,24)"/><text x="64.5216%" y="591.50">__..</text></g><g><title>_int_malloc (140 samples, 1.85%)</title><rect x="64.7999%" y="565" width="1.8492%" height="15" fill="rgb(209,150,17)"/><text x="65.0499%" y="575.50">_..</text></g><g><title>__rdl_alloc (9 samples, 0.12%)</title><rect x="66.6491%" y="581" width="0.1189%" height="15" fill="rgb(234,202,34)"/><text x="66.8991%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.12%)</title><rect x="66.6491%" y="565" width="0.1189%" height="15" fill="rgb(253,148,53)"/><text x="66.8991%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (279 samples, 3.69%)</title><rect x="63.1753%" y="773" width="3.6851%" height="15" fill="rgb(218,129,16)"/><text x="63.4253%" y="783.50">&lt;sql..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (228 samples, 3.01%)</title><rect x="63.8489%" y="757" width="3.0115%" height="15" fill="rgb(216,85,19)"/><text x="64.0989%" y="767.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (224 samples, 2.96%)</title><rect x="63.9017%" y="741" width="2.9587%" height="15" fill="rgb(235,228,7)"/><text x="64.1517%" y="751.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (218 samples, 2.88%)</title><rect x="63.9810%" y="725" width="2.8794%" height="15" fill="rgb(245,175,0)"/><text x="64.2310%" y="735.50">al..</text></g><g><title>alloc::slice::hack::to_vec (212 samples, 2.80%)</title><rect x="64.0602%" y="709" width="2.8002%" height="15" fill="rgb(208,168,36)"/><text x="64.3102%" y="719.50">al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (201 samples, 2.65%)</title><rect x="64.2055%" y="693" width="2.6549%" height="15" fill="rgb(246,171,24)"/><text x="64.4555%" y="703.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (201 samples, 2.65%)</title><rect x="64.2055%" y="677" width="2.6549%" height="15" fill="rgb(215,142,24)"/><text x="64.4555%" y="687.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (201 samples, 2.65%)</title><rect x="64.2055%" y="661" width="2.6549%" height="15" fill="rgb(250,187,7)"/><text x="64.4555%" y="671.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (201 samples, 2.65%)</title><rect x="64.2055%" y="645" width="2.6549%" height="15" fill="rgb(228,66,33)"/><text x="64.4555%" y="655.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (201 samples, 2.65%)</title><rect x="64.2055%" y="629" width="2.6549%" height="15" fill="rgb(234,215,21)"/><text x="64.4555%" y="639.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (201 samples, 2.65%)</title><rect x="64.2055%" y="613" width="2.6549%" height="15" fill="rgb(222,191,20)"/><text x="64.4555%" y="623.50">al..</text></g><g><title>alloc::alloc::alloc (201 samples, 2.65%)</title><rect x="64.2055%" y="597" width="2.6549%" height="15" fill="rgb(245,79,54)"/><text x="64.4555%" y="607.50">al..</text></g><g><title>__GI___libc_malloc (13 samples, 0.17%)</title><rect x="66.8604%" y="773" width="0.1717%" height="15" fill="rgb(240,10,37)"/><text x="67.1104%" y="783.50"></text></g><g><title>_int_malloc (13 samples, 0.17%)</title><rect x="66.8604%" y="757" width="0.1717%" height="15" fill="rgb(214,192,32)"/><text x="67.1104%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (345 samples, 4.56%)</title><rect x="63.0960%" y="789" width="4.5569%" height="15" fill="rgb(209,36,54)"/><text x="63.3460%" y="799.50">&lt;allo..</text></g><g><title>__memmove_avx_unaligned_erms (47 samples, 0.62%)</title><rect x="67.0321%" y="773" width="0.6208%" height="15" fill="rgb(220,10,11)"/><text x="67.2821%" y="783.50"></text></g><g><title>sk_wait_data (18 samples, 0.24%)</title><rect x="67.9435%" y="517" width="0.2377%" height="15" fill="rgb(221,106,17)"/><text x="68.1935%" y="527.50"></text></g><g><title>wait_woken (14 samples, 0.18%)</title><rect x="67.9963%" y="501" width="0.1849%" height="15" fill="rgb(251,142,44)"/><text x="68.2463%" y="511.50"></text></g><g><title>schedule_timeout (13 samples, 0.17%)</title><rect x="68.0095%" y="485" width="0.1717%" height="15" fill="rgb(238,13,15)"/><text x="68.2595%" y="495.50"></text></g><g><title>schedule (13 samples, 0.17%)</title><rect x="68.0095%" y="469" width="0.1717%" height="15" fill="rgb(208,107,27)"/><text x="68.2595%" y="479.50"></text></g><g><title>__schedule (13 samples, 0.17%)</title><rect x="68.0095%" y="453" width="0.1717%" height="15" fill="rgb(205,136,37)"/><text x="68.2595%" y="463.50"></text></g><g><title>skb_copy_datagram_iter (15 samples, 0.20%)</title><rect x="68.1812%" y="517" width="0.1981%" height="15" fill="rgb(250,205,27)"/><text x="68.4312%" y="527.50"></text></g><g><title>__skb_datagram_iter (15 samples, 0.20%)</title><rect x="68.1812%" y="501" width="0.1981%" height="15" fill="rgb(210,80,43)"/><text x="68.4312%" y="511.50"></text></g><g><title>_copy_to_iter (15 samples, 0.20%)</title><rect x="68.1812%" y="485" width="0.1981%" height="15" fill="rgb(247,160,36)"/><text x="68.4312%" y="495.50"></text></g><g><title>copy_user_enhanced_fast_string (15 samples, 0.20%)</title><rect x="68.1812%" y="469" width="0.1981%" height="15" fill="rgb(234,13,49)"/><text x="68.4312%" y="479.50"></text></g><g><title>page_fault (13 samples, 0.17%)</title><rect x="68.2076%" y="453" width="0.1717%" height="15" fill="rgb(234,122,0)"/><text x="68.4576%" y="463.50"></text></g><g><title>do_user_addr_fault (8 samples, 0.11%)</title><rect x="68.2737%" y="437" width="0.1057%" height="15" fill="rgb(207,146,38)"/><text x="68.5237%" y="447.50"></text></g><g><title>handle_mm_fault (8 samples, 0.11%)</title><rect x="68.2737%" y="421" width="0.1057%" height="15" fill="rgb(207,177,25)"/><text x="68.5237%" y="431.50"></text></g><g><title>inet_recvmsg (38 samples, 0.50%)</title><rect x="67.9038%" y="549" width="0.5019%" height="15" fill="rgb(211,178,42)"/><text x="68.1538%" y="559.50"></text></g><g><title>tcp_recvmsg (38 samples, 0.50%)</title><rect x="67.9038%" y="533" width="0.5019%" height="15" fill="rgb(230,69,54)"/><text x="68.1538%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (40 samples, 0.53%)</title><rect x="67.8906%" y="581" width="0.5283%" height="15" fill="rgb(214,135,41)"/><text x="68.1406%" y="591.50"></text></g><g><title>__sys_recvfrom (40 samples, 0.53%)</title><rect x="67.8906%" y="565" width="0.5283%" height="15" fill="rgb(237,67,25)"/><text x="68.1406%" y="575.50"></text></g><g><title>do_syscall_64 (41 samples, 0.54%)</title><rect x="67.8906%" y="597" width="0.5415%" height="15" fill="rgb(222,189,50)"/><text x="68.1406%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (44 samples, 0.58%)</title><rect x="67.8906%" y="709" width="0.5812%" height="15" fill="rgb(245,148,34)"/><text x="68.1406%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (44 samples, 0.58%)</title><rect x="67.8906%" y="693" width="0.5812%" height="15" fill="rgb(222,29,6)"/><text x="68.1406%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (44 samples, 0.58%)</title><rect x="67.8906%" y="677" width="0.5812%" height="15" fill="rgb(221,189,43)"/><text x="68.1406%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (44 samples, 0.58%)</title><rect x="67.8906%" y="661" width="0.5812%" height="15" fill="rgb(207,36,27)"/><text x="68.1406%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (44 samples, 0.58%)</title><rect x="67.8906%" y="645" width="0.5812%" height="15" fill="rgb(217,90,24)"/><text x="68.1406%" y="655.50"></text></g><g><title>__libc_recv (44 samples, 0.58%)</title><rect x="67.8906%" y="629" width="0.5812%" height="15" fill="rgb(224,66,35)"/><text x="68.1406%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (44 samples, 0.58%)</title><rect x="67.8906%" y="613" width="0.5812%" height="15" fill="rgb(221,13,50)"/><text x="68.1406%" y="623.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.77%)</title><rect x="67.8642%" y="725" width="0.7661%" height="15" fill="rgb(236,68,49)"/><text x="68.1142%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (12 samples, 0.16%)</title><rect x="68.4718%" y="709" width="0.1585%" height="15" fill="rgb(229,146,28)"/><text x="68.7218%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (12 samples, 0.16%)</title><rect x="68.4718%" y="693" width="0.1585%" height="15" fill="rgb(225,31,38)"/><text x="68.7218%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (12 samples, 0.16%)</title><rect x="68.4718%" y="677" width="0.1585%" height="15" fill="rgb(250,208,3)"/><text x="68.7218%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (70 samples, 0.92%)</title><rect x="67.7850%" y="741" width="0.9246%" height="15" fill="rgb(246,54,23)"/><text x="68.0350%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (86 samples, 1.14%)</title><rect x="67.6661%" y="757" width="1.1359%" height="15" fill="rgb(243,76,11)"/><text x="67.9161%" y="767.50"></text></g><g><title>__dev_queue_xmit (9 samples, 0.12%)</title><rect x="68.9605%" y="469" width="0.1189%" height="15" fill="rgb(245,21,50)"/><text x="69.2105%" y="479.50"></text></g><g><title>sock_def_readable (11 samples, 0.15%)</title><rect x="69.2247%" y="245" width="0.1453%" height="15" fill="rgb(228,9,43)"/><text x="69.4747%" y="255.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.13%)</title><rect x="69.2379%" y="229" width="0.1321%" height="15" fill="rgb(208,100,47)"/><text x="69.4879%" y="239.50"></text></g><g><title>__wake_up_common (10 samples, 0.13%)</title><rect x="69.2379%" y="213" width="0.1321%" height="15" fill="rgb(232,26,8)"/><text x="69.4879%" y="223.50"></text></g><g><title>pollwake (10 samples, 0.13%)</title><rect x="69.2379%" y="197" width="0.1321%" height="15" fill="rgb(216,166,38)"/><text x="69.4879%" y="207.50"></text></g><g><title>try_to_wake_up (10 samples, 0.13%)</title><rect x="69.2379%" y="181" width="0.1321%" height="15" fill="rgb(251,202,51)"/><text x="69.4879%" y="191.50"></text></g><g><title>tcp_ack (8 samples, 0.11%)</title><rect x="69.3700%" y="245" width="0.1057%" height="15" fill="rgb(254,216,34)"/><text x="69.6200%" y="255.50"></text></g><g><title>ip_local_deliver (28 samples, 0.37%)</title><rect x="69.1322%" y="341" width="0.3698%" height="15" fill="rgb(251,32,27)"/><text x="69.3822%" y="351.50"></text></g><g><title>ip_local_deliver_finish (28 samples, 0.37%)</title><rect x="69.1322%" y="325" width="0.3698%" height="15" fill="rgb(208,127,28)"/><text x="69.3822%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (27 samples, 0.36%)</title><rect x="69.1454%" y="309" width="0.3566%" height="15" fill="rgb(224,137,22)"/><text x="69.3954%" y="319.50"></text></g><g><title>tcp_v4_rcv (26 samples, 0.34%)</title><rect x="69.1586%" y="293" width="0.3434%" height="15" fill="rgb(254,70,32)"/><text x="69.4086%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 0.28%)</title><rect x="69.2247%" y="277" width="0.2774%" height="15" fill="rgb(229,75,37)"/><text x="69.4747%" y="287.50"></text></g><g><title>tcp_rcv_established (21 samples, 0.28%)</title><rect x="69.2247%" y="261" width="0.2774%" height="15" fill="rgb(252,64,23)"/><text x="69.4747%" y="271.50"></text></g><g><title>ip_finish_output2 (44 samples, 0.58%)</title><rect x="68.9473%" y="485" width="0.5812%" height="15" fill="rgb(232,162,48)"/><text x="69.1973%" y="495.50"></text></g><g><title>__local_bh_enable_ip (34 samples, 0.45%)</title><rect x="69.0794%" y="469" width="0.4491%" height="15" fill="rgb(246,160,12)"/><text x="69.3294%" y="479.50"></text></g><g><title>do_softirq (34 samples, 0.45%)</title><rect x="69.0794%" y="453" width="0.4491%" height="15" fill="rgb(247,166,0)"/><text x="69.3294%" y="463.50"></text></g><g><title>do_softirq_own_stack (32 samples, 0.42%)</title><rect x="69.1058%" y="437" width="0.4227%" height="15" fill="rgb(249,219,21)"/><text x="69.3558%" y="447.50"></text></g><g><title>__do_softirq (32 samples, 0.42%)</title><rect x="69.1058%" y="421" width="0.4227%" height="15" fill="rgb(205,209,3)"/><text x="69.3558%" y="431.50"></text></g><g><title>net_rx_action (32 samples, 0.42%)</title><rect x="69.1058%" y="405" width="0.4227%" height="15" fill="rgb(243,44,1)"/><text x="69.3558%" y="415.50"></text></g><g><title>process_backlog (32 samples, 0.42%)</title><rect x="69.1058%" y="389" width="0.4227%" height="15" fill="rgb(206,159,16)"/><text x="69.3558%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (32 samples, 0.42%)</title><rect x="69.1058%" y="373" width="0.4227%" height="15" fill="rgb(244,77,30)"/><text x="69.3558%" y="383.50"></text></g><g><title>ip_rcv (30 samples, 0.40%)</title><rect x="69.1322%" y="357" width="0.3962%" height="15" fill="rgb(218,69,12)"/><text x="69.3822%" y="367.50"></text></g><g><title>__ip_queue_xmit (49 samples, 0.65%)</title><rect x="68.9077%" y="517" width="0.6472%" height="15" fill="rgb(212,87,7)"/><text x="69.1577%" y="527.50"></text></g><g><title>ip_output (47 samples, 0.62%)</title><rect x="68.9341%" y="501" width="0.6208%" height="15" fill="rgb(245,114,25)"/><text x="69.1841%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (54 samples, 0.71%)</title><rect x="68.8813%" y="565" width="0.7132%" height="15" fill="rgb(210,61,42)"/><text x="69.1313%" y="575.50"></text></g><g><title>tcp_write_xmit (54 samples, 0.71%)</title><rect x="68.8813%" y="549" width="0.7132%" height="15" fill="rgb(211,52,33)"/><text x="69.1313%" y="559.50"></text></g><g><title>__tcp_transmit_skb (53 samples, 0.70%)</title><rect x="68.8945%" y="533" width="0.7000%" height="15" fill="rgb(234,58,33)"/><text x="69.1445%" y="543.50"></text></g><g><title>__x64_sys_sendto (65 samples, 0.86%)</title><rect x="68.8284%" y="645" width="0.8585%" height="15" fill="rgb(220,115,36)"/><text x="69.0784%" y="655.50"></text></g><g><title>__sys_sendto (65 samples, 0.86%)</title><rect x="68.8284%" y="629" width="0.8585%" height="15" fill="rgb(243,153,54)"/><text x="69.0784%" y="639.50"></text></g><g><title>sock_sendmsg (64 samples, 0.85%)</title><rect x="68.8416%" y="613" width="0.8453%" height="15" fill="rgb(251,47,18)"/><text x="69.0916%" y="623.50"></text></g><g><title>tcp_sendmsg (63 samples, 0.83%)</title><rect x="68.8548%" y="597" width="0.8321%" height="15" fill="rgb(242,102,42)"/><text x="69.1048%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (62 samples, 0.82%)</title><rect x="68.8680%" y="581" width="0.8189%" height="15" fill="rgb(234,31,38)"/><text x="69.1180%" y="591.50"></text></g><g><title>do_syscall_64 (67 samples, 0.88%)</title><rect x="68.8152%" y="661" width="0.8850%" height="15" fill="rgb(221,117,51)"/><text x="69.0652%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (69 samples, 0.91%)</title><rect x="68.8152%" y="677" width="0.9114%" height="15" fill="rgb(212,20,18)"/><text x="69.0652%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (158 samples, 2.09%)</title><rect x="67.6529%" y="789" width="2.0869%" height="15" fill="rgb(245,133,36)"/><text x="67.9029%" y="799.50">&lt;..</text></g><g><title>mysql::conn::Conn::_query (157 samples, 2.07%)</title><rect x="67.6661%" y="773" width="2.0737%" height="15" fill="rgb(212,6,19)"/><text x="67.9161%" y="783.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (71 samples, 0.94%)</title><rect x="68.8020%" y="757" width="0.9378%" height="15" fill="rgb(218,1,36)"/><text x="69.0520%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (70 samples, 0.92%)</title><rect x="68.8152%" y="741" width="0.9246%" height="15" fill="rgb(246,84,54)"/><text x="69.0652%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (70 samples, 0.92%)</title><rect x="68.8152%" y="725" width="0.9246%" height="15" fill="rgb(242,110,6)"/><text x="69.0652%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (70 samples, 0.92%)</title><rect x="68.8152%" y="709" width="0.9246%" height="15" fill="rgb(214,47,5)"/><text x="69.0652%" y="719.50"></text></g><g><title>__libc_send (70 samples, 0.92%)</title><rect x="68.8152%" y="693" width="0.9246%" height="15" fill="rgb(218,159,25)"/><text x="69.0652%" y="703.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.20%)</title><rect x="70.0568%" y="709" width="0.1981%" height="15" fill="rgb(215,211,28)"/><text x="70.3068%" y="719.50"></text></g><g><title>_int_realloc (13 samples, 0.17%)</title><rect x="70.0832%" y="693" width="0.1717%" height="15" fill="rgb(238,59,32)"/><text x="70.3332%" y="703.50"></text></g><g><title>_int_malloc (8 samples, 0.11%)</title><rect x="70.1493%" y="677" width="0.1057%" height="15" fill="rgb(226,82,3)"/><text x="70.3993%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.26%)</title><rect x="70.0040%" y="725" width="0.2642%" height="15" fill="rgb(240,164,32)"/><text x="70.2540%" y="735.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.17%)</title><rect x="70.3474%" y="709" width="0.1717%" height="15" fill="rgb(232,46,7)"/><text x="70.5974%" y="719.50"></text></g><g><title>_int_malloc (9 samples, 0.12%)</title><rect x="70.4002%" y="693" width="0.1189%" height="15" fill="rgb(229,129,53)"/><text x="70.6502%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (63 samples, 0.83%)</title><rect x="69.7530%" y="773" width="0.8321%" height="15" fill="rgb(234,188,29)"/><text x="70.0030%" y="783.50"></text></g><g><title>mysql::conn::Conn::next_text (63 samples, 0.83%)</title><rect x="69.7530%" y="757" width="0.8321%" height="15" fill="rgb(246,141,4)"/><text x="70.0030%" y="767.50"></text></g><g><title>mysql_common::value::read_text_values (52 samples, 0.69%)</title><rect x="69.8983%" y="741" width="0.6868%" height="15" fill="rgb(229,23,39)"/><text x="70.1483%" y="751.50"></text></g><g><title>mysql_common::value::read_text_value (24 samples, 0.32%)</title><rect x="70.2681%" y="725" width="0.3170%" height="15" fill="rgb(206,12,3)"/><text x="70.5181%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.98%)</title><rect x="69.7398%" y="789" width="0.9774%" height="15" fill="rgb(252,226,20)"/><text x="69.9898%" y="799.50"></text></g><g><title>mysql_common::row::new_row (8 samples, 0.11%)</title><rect x="70.6115%" y="773" width="0.1057%" height="15" fill="rgb(216,123,35)"/><text x="70.8615%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.11%)</title><rect x="70.6115%" y="757" width="0.1057%" height="15" fill="rgb(212,68,40)"/><text x="70.8615%" y="767.50"></text></g><g><title>__GI___libc_malloc (94 samples, 1.24%)</title><rect x="70.7172%" y="789" width="1.2416%" height="15" fill="rgb(254,125,32)"/><text x="70.9672%" y="799.50"></text></g><g><title>_int_malloc (94 samples, 1.24%)</title><rect x="70.7172%" y="773" width="1.2416%" height="15" fill="rgb(253,97,22)"/><text x="70.9672%" y="783.50"></text></g><g><title>_int_free (38 samples, 0.50%)</title><rect x="71.9588%" y="789" width="0.5019%" height="15" fill="rgb(241,101,14)"/><text x="72.2088%" y="799.50"></text></g><g><title>malloc_consolidate (18 samples, 0.24%)</title><rect x="72.7117%" y="725" width="0.2377%" height="15" fill="rgb(238,103,29)"/><text x="72.9617%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.49%)</title><rect x="72.4739%" y="789" width="0.4887%" height="15" fill="rgb(233,195,47)"/><text x="72.7239%" y="799.50"></text></g><g><title>__GI___libc_realloc (34 samples, 0.45%)</title><rect x="72.5135%" y="773" width="0.4491%" height="15" fill="rgb(246,218,30)"/><text x="72.7635%" y="783.50"></text></g><g><title>_int_realloc (34 samples, 0.45%)</title><rect x="72.5135%" y="757" width="0.4491%" height="15" fill="rgb(219,145,47)"/><text x="72.7635%" y="767.50"></text></g><g><title>_int_malloc (30 samples, 0.40%)</title><rect x="72.5664%" y="741" width="0.3962%" height="15" fill="rgb(243,12,26)"/><text x="72.8164%" y="751.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.20%)</title><rect x="73.0551%" y="757" width="0.1981%" height="15" fill="rgb(214,87,16)"/><text x="73.3051%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (27 samples, 0.36%)</title><rect x="72.9626%" y="789" width="0.3566%" height="15" fill="rgb(208,99,42)"/><text x="73.2126%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.36%)</title><rect x="72.9626%" y="773" width="0.3566%" height="15" fill="rgb(253,99,2)"/><text x="73.2126%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.15%)</title><rect x="73.3457%" y="709" width="0.1453%" height="15" fill="rgb(220,168,23)"/><text x="73.5957%" y="719.50"></text></g><g><title>core::fmt::write (21 samples, 0.28%)</title><rect x="73.3192%" y="789" width="0.2774%" height="15" fill="rgb(242,38,24)"/><text x="73.5692%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (20 samples, 0.26%)</title><rect x="73.3325%" y="773" width="0.2642%" height="15" fill="rgb(225,182,9)"/><text x="73.5825%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (20 samples, 0.26%)</title><rect x="73.3325%" y="757" width="0.2642%" height="15" fill="rgb(243,178,37)"/><text x="73.5825%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.25%)</title><rect x="73.3457%" y="741" width="0.2510%" height="15" fill="rgb(232,139,19)"/><text x="73.5957%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 0.25%)</title><rect x="73.3457%" y="725" width="0.2510%" height="15" fill="rgb(225,201,24)"/><text x="73.5957%" y="735.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.12%)</title><rect x="73.6891%" y="773" width="0.1189%" height="15" fill="rgb(221,47,46)"/><text x="73.9391%" y="783.50"></text></g><g><title>decor::helpers::mysql_val_to_parser_val (20 samples, 0.26%)</title><rect x="73.6230%" y="789" width="0.2642%" height="15" fill="rgb(249,23,13)"/><text x="73.8730%" y="799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 1.32%)</title><rect x="75.0495%" y="757" width="1.3208%" height="15" fill="rgb(219,9,5)"/><text x="75.2995%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (86 samples, 1.14%)</title><rect x="75.2344%" y="741" width="1.1359%" height="15" fill="rgb(254,171,16)"/><text x="75.4844%" y="751.50"></text></g><g><title>__GI___libc_malloc (101 samples, 1.33%)</title><rect x="76.3704%" y="757" width="1.3340%" height="15" fill="rgb(230,171,20)"/><text x="76.6204%" y="767.50"></text></g><g><title>_int_malloc (72 samples, 0.95%)</title><rect x="76.7534%" y="741" width="0.9510%" height="15" fill="rgb(210,71,41)"/><text x="77.0034%" y="751.50"></text></g><g><title>_int_free (17 samples, 0.22%)</title><rect x="78.2724%" y="709" width="0.2245%" height="15" fill="rgb(206,173,20)"/><text x="78.5224%" y="719.50"></text></g><g><title>__GI___libc_realloc (50 samples, 0.66%)</title><rect x="77.9025%" y="741" width="0.6604%" height="15" fill="rgb(233,88,34)"/><text x="78.1525%" y="751.50"></text></g><g><title>_int_realloc (35 samples, 0.46%)</title><rect x="78.1006%" y="725" width="0.4623%" height="15" fill="rgb(223,209,46)"/><text x="78.3506%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (322 samples, 4.25%)</title><rect x="74.3231%" y="773" width="4.2531%" height="15" fill="rgb(250,43,18)"/><text x="74.5731%" y="783.50">&lt;allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (65 samples, 0.86%)</title><rect x="77.7176%" y="757" width="0.8585%" height="15" fill="rgb(208,13,10)"/><text x="77.9676%" y="767.50"></text></g><g><title>__GI___libc_free (14 samples, 0.18%)</title><rect x="78.5761%" y="773" width="0.1849%" height="15" fill="rgb(212,200,36)"/><text x="78.8261%" y="783.50"></text></g><g><title>_int_free (14 samples, 0.18%)</title><rect x="78.8007%" y="773" width="0.1849%" height="15" fill="rgb(225,90,30)"/><text x="79.0507%" y="783.50"></text></g><g><title>decor::helpers::str_ident_match (435 samples, 5.75%)</title><rect x="73.8872%" y="789" width="5.7456%" height="15" fill="rgb(236,182,39)"/><text x="74.1372%" y="799.50">decor::..</text></g><g><title>core::str::pattern::StrSearcher::new (49 samples, 0.65%)</title><rect x="78.9856%" y="773" width="0.6472%" height="15" fill="rgb(212,144,35)"/><text x="79.2356%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (25 samples, 0.33%)</title><rect x="79.3026%" y="757" width="0.3302%" height="15" fill="rgb(228,63,44)"/><text x="79.5526%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.18%)</title><rect x="79.7253%" y="709" width="0.1849%" height="15" fill="rgb(228,109,6)"/><text x="79.9753%" y="719.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (28 samples, 0.37%)</title><rect x="79.6328%" y="789" width="0.3698%" height="15" fill="rgb(238,117,24)"/><text x="79.8828%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (26 samples, 0.34%)</title><rect x="79.6592%" y="773" width="0.3434%" height="15" fill="rgb(242,26,26)"/><text x="79.9092%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (22 samples, 0.29%)</title><rect x="79.7121%" y="757" width="0.2906%" height="15" fill="rgb(221,92,48)"/><text x="79.9621%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (21 samples, 0.28%)</title><rect x="79.7253%" y="741" width="0.2774%" height="15" fill="rgb(209,209,32)"/><text x="79.9753%" y="751.50"></text></g><g><title>decor::helpers::str_subset_of_idents (21 samples, 0.28%)</title><rect x="79.7253%" y="725" width="0.2774%" height="15" fill="rgb(221,70,22)"/><text x="79.9753%" y="735.50"></text></g><g><title>sk_wait_data (9 samples, 0.12%)</title><rect x="80.3593%" y="501" width="0.1189%" height="15" fill="rgb(248,145,5)"/><text x="80.6093%" y="511.50"></text></g><g><title>wait_woken (8 samples, 0.11%)</title><rect x="80.3725%" y="485" width="0.1057%" height="15" fill="rgb(226,116,26)"/><text x="80.6225%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.26%)</title><rect x="80.3196%" y="597" width="0.2642%" height="15" fill="rgb(244,5,17)"/><text x="80.5696%" y="607.50"></text></g><g><title>do_syscall_64 (20 samples, 0.26%)</title><rect x="80.3196%" y="581" width="0.2642%" height="15" fill="rgb(252,159,33)"/><text x="80.5696%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 0.26%)</title><rect x="80.3196%" y="565" width="0.2642%" height="15" fill="rgb(206,71,0)"/><text x="80.5696%" y="575.50"></text></g><g><title>__sys_recvfrom (20 samples, 0.26%)</title><rect x="80.3196%" y="549" width="0.2642%" height="15" fill="rgb(233,118,54)"/><text x="80.5696%" y="559.50"></text></g><g><title>inet_recvmsg (19 samples, 0.25%)</title><rect x="80.3328%" y="533" width="0.2510%" height="15" fill="rgb(234,83,48)"/><text x="80.5828%" y="543.50"></text></g><g><title>tcp_recvmsg (19 samples, 0.25%)</title><rect x="80.3328%" y="517" width="0.2510%" height="15" fill="rgb(228,3,54)"/><text x="80.5828%" y="527.50"></text></g><g><title>skb_copy_datagram_iter (8 samples, 0.11%)</title><rect x="80.4781%" y="501" width="0.1057%" height="15" fill="rgb(226,155,13)"/><text x="80.7281%" y="511.50"></text></g><g><title>__skb_datagram_iter (8 samples, 0.11%)</title><rect x="80.4781%" y="485" width="0.1057%" height="15" fill="rgb(241,28,37)"/><text x="80.7281%" y="495.50"></text></g><g><title>_copy_to_iter (8 samples, 0.11%)</title><rect x="80.4781%" y="469" width="0.1057%" height="15" fill="rgb(233,93,10)"/><text x="80.7281%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (8 samples, 0.11%)</title><rect x="80.4781%" y="453" width="0.1057%" height="15" fill="rgb(225,113,19)"/><text x="80.7281%" y="463.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (22 samples, 0.29%)</title><rect x="80.3064%" y="741" width="0.2906%" height="15" fill="rgb(241,2,18)"/><text x="80.5564%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (22 samples, 0.29%)</title><rect x="80.3064%" y="725" width="0.2906%" height="15" fill="rgb(228,207,21)"/><text x="80.5564%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.28%)</title><rect x="80.3196%" y="709" width="0.2774%" height="15" fill="rgb(213,211,35)"/><text x="80.5696%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (21 samples, 0.28%)</title><rect x="80.3196%" y="693" width="0.2774%" height="15" fill="rgb(209,83,10)"/><text x="80.5696%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 0.28%)</title><rect x="80.3196%" y="677" width="0.2774%" height="15" fill="rgb(209,164,1)"/><text x="80.5696%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 0.28%)</title><rect x="80.3196%" y="661" width="0.2774%" height="15" fill="rgb(213,184,43)"/><text x="80.5696%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (21 samples, 0.28%)</title><rect x="80.3196%" y="645" width="0.2774%" height="15" fill="rgb(231,61,34)"/><text x="80.5696%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (21 samples, 0.28%)</title><rect x="80.3196%" y="629" width="0.2774%" height="15" fill="rgb(235,75,3)"/><text x="80.5696%" y="639.50"></text></g><g><title>__libc_recv (21 samples, 0.28%)</title><rect x="80.3196%" y="613" width="0.2774%" height="15" fill="rgb(220,106,47)"/><text x="80.5696%" y="623.50"></text></g><g><title>sock_def_readable (8 samples, 0.11%)</title><rect x="80.8083%" y="229" width="0.1057%" height="15" fill="rgb(210,196,33)"/><text x="81.0583%" y="239.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.11%)</title><rect x="80.8083%" y="213" width="0.1057%" height="15" fill="rgb(229,154,42)"/><text x="81.0583%" y="223.50"></text></g><g><title>__wake_up_common (8 samples, 0.11%)</title><rect x="80.8083%" y="197" width="0.1057%" height="15" fill="rgb(228,114,26)"/><text x="81.0583%" y="207.50"></text></g><g><title>pollwake (8 samples, 0.11%)</title><rect x="80.8083%" y="181" width="0.1057%" height="15" fill="rgb(208,144,1)"/><text x="81.0583%" y="191.50"></text></g><g><title>__ip_queue_xmit (23 samples, 0.30%)</title><rect x="80.6631%" y="501" width="0.3038%" height="15" fill="rgb(239,112,37)"/><text x="80.9131%" y="511.50"></text></g><g><title>ip_output (22 samples, 0.29%)</title><rect x="80.6763%" y="485" width="0.2906%" height="15" fill="rgb(210,96,50)"/><text x="80.9263%" y="495.50"></text></g><g><title>ip_finish_output2 (22 samples, 0.29%)</title><rect x="80.6763%" y="469" width="0.2906%" height="15" fill="rgb(222,178,2)"/><text x="80.9263%" y="479.50"></text></g><g><title>__local_bh_enable_ip (17 samples, 0.22%)</title><rect x="80.7423%" y="453" width="0.2245%" height="15" fill="rgb(226,74,18)"/><text x="80.9923%" y="463.50"></text></g><g><title>do_softirq (17 samples, 0.22%)</title><rect x="80.7423%" y="437" width="0.2245%" height="15" fill="rgb(225,67,54)"/><text x="80.9923%" y="447.50"></text></g><g><title>do_softirq_own_stack (17 samples, 0.22%)</title><rect x="80.7423%" y="421" width="0.2245%" height="15" fill="rgb(251,92,32)"/><text x="80.9923%" y="431.50"></text></g><g><title>__do_softirq (17 samples, 0.22%)</title><rect x="80.7423%" y="405" width="0.2245%" height="15" fill="rgb(228,149,22)"/><text x="80.9923%" y="415.50"></text></g><g><title>net_rx_action (17 samples, 0.22%)</title><rect x="80.7423%" y="389" width="0.2245%" height="15" fill="rgb(243,54,13)"/><text x="80.9923%" y="399.50"></text></g><g><title>process_backlog (16 samples, 0.21%)</title><rect x="80.7555%" y="373" width="0.2113%" height="15" fill="rgb(243,180,28)"/><text x="81.0055%" y="383.50"></text></g><g><title>__netif_receive_skb_one_core (14 samples, 0.18%)</title><rect x="80.7819%" y="357" width="0.1849%" height="15" fill="rgb(208,167,24)"/><text x="81.0319%" y="367.50"></text></g><g><title>ip_rcv (14 samples, 0.18%)</title><rect x="80.7819%" y="341" width="0.1849%" height="15" fill="rgb(245,73,45)"/><text x="81.0319%" y="351.50"></text></g><g><title>ip_local_deliver (14 samples, 0.18%)</title><rect x="80.7819%" y="325" width="0.1849%" height="15" fill="rgb(237,203,48)"/><text x="81.0319%" y="335.50"></text></g><g><title>ip_local_deliver_finish (14 samples, 0.18%)</title><rect x="80.7819%" y="309" width="0.1849%" height="15" fill="rgb(211,197,16)"/><text x="81.0319%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (14 samples, 0.18%)</title><rect x="80.7819%" y="293" width="0.1849%" height="15" fill="rgb(243,99,51)"/><text x="81.0319%" y="303.50"></text></g><g><title>tcp_v4_rcv (14 samples, 0.18%)</title><rect x="80.7819%" y="277" width="0.1849%" height="15" fill="rgb(215,123,29)"/><text x="81.0319%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 0.17%)</title><rect x="80.7951%" y="261" width="0.1717%" height="15" fill="rgb(239,186,37)"/><text x="81.0451%" y="271.50"></text></g><g><title>tcp_rcv_established (13 samples, 0.17%)</title><rect x="80.7951%" y="245" width="0.1717%" height="15" fill="rgb(252,136,39)"/><text x="81.0451%" y="255.50"></text></g><g><title>__tcp_transmit_skb (24 samples, 0.32%)</title><rect x="80.6631%" y="517" width="0.3170%" height="15" fill="rgb(223,213,32)"/><text x="80.9131%" y="527.50"></text></g><g><title>__tcp_push_pending_frames (27 samples, 0.36%)</title><rect x="80.6498%" y="549" width="0.3566%" height="15" fill="rgb(233,115,5)"/><text x="80.8998%" y="559.50"></text></g><g><title>tcp_write_xmit (27 samples, 0.36%)</title><rect x="80.6498%" y="533" width="0.3566%" height="15" fill="rgb(207,226,44)"/><text x="80.8998%" y="543.50"></text></g><g><title>do_syscall_64 (36 samples, 0.48%)</title><rect x="80.6234%" y="645" width="0.4755%" height="15" fill="rgb(208,126,0)"/><text x="80.8734%" y="655.50"></text></g><g><title>__x64_sys_sendto (36 samples, 0.48%)</title><rect x="80.6234%" y="629" width="0.4755%" height="15" fill="rgb(244,66,21)"/><text x="80.8734%" y="639.50"></text></g><g><title>__sys_sendto (35 samples, 0.46%)</title><rect x="80.6366%" y="613" width="0.4623%" height="15" fill="rgb(222,97,12)"/><text x="80.8866%" y="623.50"></text></g><g><title>sock_sendmsg (34 samples, 0.45%)</title><rect x="80.6498%" y="597" width="0.4491%" height="15" fill="rgb(219,213,19)"/><text x="80.8998%" y="607.50"></text></g><g><title>tcp_sendmsg (34 samples, 0.45%)</title><rect x="80.6498%" y="581" width="0.4491%" height="15" fill="rgb(252,169,30)"/><text x="80.8998%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (34 samples, 0.45%)</title><rect x="80.6498%" y="565" width="0.4491%" height="15" fill="rgb(206,32,51)"/><text x="80.8998%" y="575.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (37 samples, 0.49%)</title><rect x="80.6234%" y="709" width="0.4887%" height="15" fill="rgb(250,172,42)"/><text x="80.8734%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (37 samples, 0.49%)</title><rect x="80.6234%" y="693" width="0.4887%" height="15" fill="rgb(209,34,43)"/><text x="80.8734%" y="703.50"></text></g><g><title>__libc_send (37 samples, 0.49%)</title><rect x="80.6234%" y="677" width="0.4887%" height="15" fill="rgb(223,11,35)"/><text x="80.8734%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (37 samples, 0.49%)</title><rect x="80.6234%" y="661" width="0.4887%" height="15" fill="rgb(251,219,26)"/><text x="80.8734%" y="671.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (64 samples, 0.85%)</title><rect x="80.2800%" y="773" width="0.8453%" height="15" fill="rgb(231,119,3)"/><text x="80.5300%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (63 samples, 0.83%)</title><rect x="80.2932%" y="757" width="0.8321%" height="15" fill="rgb(216,97,11)"/><text x="80.5432%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (40 samples, 0.53%)</title><rect x="80.5970%" y="741" width="0.5283%" height="15" fill="rgb(223,59,9)"/><text x="80.8470%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (39 samples, 0.52%)</title><rect x="80.6102%" y="725" width="0.5151%" height="15" fill="rgb(233,93,31)"/><text x="80.8602%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (10 samples, 0.13%)</title><rect x="81.4423%" y="709" width="0.1321%" height="15" fill="rgb(239,81,33)"/><text x="81.6923%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.36%)</title><rect x="81.5744%" y="709" width="0.3566%" height="15" fill="rgb(213,120,34)"/><text x="81.8244%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (22 samples, 0.29%)</title><rect x="81.6405%" y="693" width="0.2906%" height="15" fill="rgb(243,49,53)"/><text x="81.8905%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (17 samples, 0.22%)</title><rect x="81.7065%" y="677" width="0.2245%" height="15" fill="rgb(247,216,33)"/><text x="81.9565%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (15 samples, 0.20%)</title><rect x="81.7329%" y="661" width="0.1981%" height="15" fill="rgb(226,26,14)"/><text x="81.9829%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (11 samples, 0.15%)</title><rect x="81.7858%" y="645" width="0.1453%" height="15" fill="rgb(215,49,53)"/><text x="82.0358%" y="655.50"></text></g><g><title>_int_free (12 samples, 0.16%)</title><rect x="81.9707%" y="709" width="0.1585%" height="15" fill="rgb(245,162,40)"/><text x="82.2207%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (75 samples, 0.99%)</title><rect x="81.4159%" y="725" width="0.9906%" height="15" fill="rgb(229,68,17)"/><text x="81.6659%" y="735.50"></text></g><g><title>std::io::error::Error::_new (21 samples, 0.28%)</title><rect x="82.1292%" y="709" width="0.2774%" height="15" fill="rgb(213,182,10)"/><text x="82.3792%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.28%)</title><rect x="82.1292%" y="693" width="0.2774%" height="15" fill="rgb(245,125,30)"/><text x="82.3792%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.28%)</title><rect x="82.1292%" y="677" width="0.2774%" height="15" fill="rgb(232,202,2)"/><text x="82.3792%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (21 samples, 0.28%)</title><rect x="82.1292%" y="661" width="0.2774%" height="15" fill="rgb(237,140,51)"/><text x="82.3792%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.28%)</title><rect x="82.1292%" y="645" width="0.2774%" height="15" fill="rgb(236,157,25)"/><text x="82.3792%" y="655.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.28%)</title><rect x="82.1292%" y="629" width="0.2774%" height="15" fill="rgb(219,209,0)"/><text x="82.3792%" y="639.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.28%)</title><rect x="82.1292%" y="613" width="0.2774%" height="15" fill="rgb(240,116,54)"/><text x="82.3792%" y="623.50"></text></g><g><title>_int_malloc (18 samples, 0.24%)</title><rect x="82.1688%" y="597" width="0.2377%" height="15" fill="rgb(216,10,36)"/><text x="82.4188%" y="607.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (112 samples, 1.48%)</title><rect x="81.2310%" y="757" width="1.4793%" height="15" fill="rgb(222,72,44)"/><text x="81.4810%" y="767.50"></text></g><g><title>mysql::conn::Conn::next_text (112 samples, 1.48%)</title><rect x="81.2310%" y="741" width="1.4793%" height="15" fill="rgb(232,159,9)"/><text x="81.4810%" y="751.50"></text></g><g><title>mysql_common::value::read_text_values (23 samples, 0.30%)</title><rect x="82.4066%" y="725" width="0.3038%" height="15" fill="rgb(210,39,32)"/><text x="82.6566%" y="735.50"></text></g><g><title>mysql_common::value::read_text_value (15 samples, 0.20%)</title><rect x="82.5122%" y="709" width="0.1981%" height="15" fill="rgb(216,194,45)"/><text x="82.7622%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 1.80%)</title><rect x="81.1253%" y="773" width="1.7963%" height="15" fill="rgb(218,18,35)"/><text x="81.3753%" y="783.50">&lt;..</text></g><g><title>mysql_common::row::new_row (15 samples, 0.20%)</title><rect x="82.7236%" y="757" width="0.1981%" height="15" fill="rgb(207,83,51)"/><text x="82.9736%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.17%)</title><rect x="82.7500%" y="741" width="0.1717%" height="15" fill="rgb(225,63,43)"/><text x="83.0000%" y="751.50"></text></g><g><title>_int_free (17 samples, 0.22%)</title><rect x="83.1198%" y="773" width="0.2245%" height="15" fill="rgb(207,57,36)"/><text x="83.3698%" y="783.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.11%)</title><rect x="83.4236%" y="757" width="0.1057%" height="15" fill="rgb(216,99,33)"/><text x="83.6736%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.20%)</title><rect x="83.3443%" y="773" width="0.1981%" height="15" fill="rgb(225,42,16)"/><text x="83.5943%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (21 samples, 0.28%)</title><rect x="83.5557%" y="709" width="0.2774%" height="15" fill="rgb(220,201,45)"/><text x="83.8057%" y="719.50"></text></g><g><title>core::fmt::write (26 samples, 0.34%)</title><rect x="83.5425%" y="773" width="0.3434%" height="15" fill="rgb(225,33,4)"/><text x="83.7925%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::fmt::Display&gt;::fmt (26 samples, 0.34%)</title><rect x="83.5425%" y="757" width="0.3434%" height="15" fill="rgb(224,33,50)"/><text x="83.7925%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (26 samples, 0.34%)</title><rect x="83.5425%" y="741" width="0.3434%" height="15" fill="rgb(246,198,51)"/><text x="83.7925%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (26 samples, 0.34%)</title><rect x="83.5425%" y="725" width="0.3434%" height="15" fill="rgb(205,22,4)"/><text x="83.7925%" y="735.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.11%)</title><rect x="84.0576%" y="757" width="0.1057%" height="15" fill="rgb(206,3,8)"/><text x="84.3076%" y="767.50"></text></g><g><title>decor::helpers::mysql_val_to_parser_val (24 samples, 0.32%)</title><rect x="83.9783%" y="773" width="0.3170%" height="15" fill="rgb(251,23,15)"/><text x="84.2283%" y="783.50"></text></g><g><title>core::str::converts::from_utf8 (8 samples, 0.11%)</title><rect x="84.1897%" y="757" width="0.1057%" height="15" fill="rgb(252,88,28)"/><text x="84.4397%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (17 samples, 0.22%)</title><rect x="84.2953%" y="773" width="0.2245%" height="15" fill="rgb(212,127,14)"/><text x="84.5453%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as core::hash::Hash&gt;::hash (8 samples, 0.11%)</title><rect x="84.4142%" y="757" width="0.1057%" height="15" fill="rgb(247,145,37)"/><text x="84.6642%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_uid2gids_for_uids (376 samples, 4.97%)</title><rect x="80.0291%" y="789" width="4.9663%" height="15" fill="rgb(209,117,53)"/><text x="80.2791%" y="799.50">decor:..</text></g><g><title>mysql_common::row::Row::unwrap (35 samples, 0.46%)</title><rect x="84.5331%" y="773" width="0.4623%" height="15" fill="rgb(212,90,42)"/><text x="84.7831%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30 samples, 0.40%)</title><rect x="84.5991%" y="757" width="0.3962%" height="15" fill="rgb(218,164,37)"/><text x="84.8491%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (8 samples, 0.11%)</title><rect x="84.9954%" y="789" width="0.1057%" height="15" fill="rgb(246,65,34)"/><text x="85.2454%" y="799.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.30%)</title><rect x="85.1275%" y="757" width="0.3038%" height="15" fill="rgb(231,100,33)"/><text x="85.3775%" y="767.50"></text></g><g><title>mysql_common::packets::Column::name_str (27 samples, 0.36%)</title><rect x="85.1010%" y="789" width="0.3566%" height="15" fill="rgb(228,126,14)"/><text x="85.3510%" y="799.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (27 samples, 0.36%)</title><rect x="85.1010%" y="773" width="0.3566%" height="15" fill="rgb(215,173,21)"/><text x="85.3510%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (3,097 samples, 40.91%)</title><rect x="44.5648%" y="821" width="40.9061%" height="15" fill="rgb(210,6,40)"/><text x="44.8148%" y="831.50">decor::query_transformer::QueryTransformer::get_mv_stmt</text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (1,781 samples, 23.52%)</title><rect x="61.9469%" y="805" width="23.5240%" height="15" fill="rgb(212,48,18)"/><text x="62.1969%" y="815.50">decor::query_transformer::QueryTransf..</text></g><g><title>lobsters::main (15 samples, 0.20%)</title><rect x="85.6030%" y="821" width="0.1981%" height="15" fill="rgb(230,214,11)"/><text x="85.8530%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (11 samples, 0.15%)</title><rect x="85.6558%" y="805" width="0.1453%" height="15" fill="rgb(254,105,39)"/><text x="85.9058%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (11 samples, 0.15%)</title><rect x="85.6558%" y="789" width="0.1453%" height="15" fill="rgb(245,158,5)"/><text x="85.9058%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (11 samples, 0.15%)</title><rect x="85.6558%" y="773" width="0.1453%" height="15" fill="rgb(249,208,11)"/><text x="85.9058%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 0.15%)</title><rect x="85.6558%" y="757" width="0.1453%" height="15" fill="rgb(210,39,28)"/><text x="85.9058%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.15%)</title><rect x="85.6558%" y="741" width="0.1453%" height="15" fill="rgb(211,56,53)"/><text x="85.9058%" y="751.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 0.15%)</title><rect x="85.6558%" y="725" width="0.1453%" height="15" fill="rgb(226,201,30)"/><text x="85.9058%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.15%)</title><rect x="85.6558%" y="709" width="0.1453%" height="15" fill="rgb(239,101,34)"/><text x="85.9058%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 0.15%)</title><rect x="85.6558%" y="693" width="0.1453%" height="15" fill="rgb(226,209,5)"/><text x="85.9058%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.15%)</title><rect x="85.6558%" y="677" width="0.1453%" height="15" fill="rgb(250,105,47)"/><text x="85.9058%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.15%)</title><rect x="85.6558%" y="661" width="0.1453%" height="15" fill="rgb(230,72,3)"/><text x="85.9058%" y="671.50"></text></g><g><title>__libc_recv (11 samples, 0.15%)</title><rect x="85.6558%" y="645" width="0.1453%" height="15" fill="rgb(232,218,39)"/><text x="85.9058%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (10 samples, 0.13%)</title><rect x="85.6690%" y="629" width="0.1321%" height="15" fill="rgb(248,166,6)"/><text x="85.9190%" y="639.50"></text></g><g><title>do_syscall_64 (10 samples, 0.13%)</title><rect x="85.6690%" y="613" width="0.1321%" height="15" fill="rgb(247,89,20)"/><text x="85.9190%" y="623.50"></text></g><g><title>__x64_sys_recvfrom (10 samples, 0.13%)</title><rect x="85.6690%" y="597" width="0.1321%" height="15" fill="rgb(248,130,54)"/><text x="85.9190%" y="607.50"></text></g><g><title>__sys_recvfrom (10 samples, 0.13%)</title><rect x="85.6690%" y="581" width="0.1321%" height="15" fill="rgb(234,196,4)"/><text x="85.9190%" y="591.50"></text></g><g><title>inet_recvmsg (10 samples, 0.13%)</title><rect x="85.6690%" y="565" width="0.1321%" height="15" fill="rgb(250,143,31)"/><text x="85.9190%" y="575.50"></text></g><g><title>tcp_recvmsg (10 samples, 0.13%)</title><rect x="85.6690%" y="549" width="0.1321%" height="15" fill="rgb(211,110,34)"/><text x="85.9190%" y="559.50"></text></g><g><title>sk_wait_data (8 samples, 0.11%)</title><rect x="85.6954%" y="533" width="0.1057%" height="15" fill="rgb(215,124,48)"/><text x="85.9454%" y="543.50"></text></g><g><title>wait_woken (8 samples, 0.11%)</title><rect x="85.6954%" y="517" width="0.1057%" height="15" fill="rgb(216,46,13)"/><text x="85.9454%" y="527.50"></text></g><g><title>_int_free (54 samples, 0.71%)</title><rect x="85.9992%" y="773" width="0.7132%" height="15" fill="rgb(205,184,25)"/><text x="86.2492%" y="783.50"></text></g><g><title>malloc_consolidate (54 samples, 0.71%)</title><rect x="85.9992%" y="757" width="0.7132%" height="15" fill="rgb(228,1,10)"/><text x="86.2492%" y="767.50"></text></g><g><title>unlink_chunk.constprop.0 (13 samples, 0.17%)</title><rect x="86.5407%" y="741" width="0.1717%" height="15" fill="rgb(213,116,27)"/><text x="86.7907%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.11%)</title><rect x="86.8842%" y="725" width="0.1057%" height="15" fill="rgb(241,95,50)"/><text x="87.1342%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.13%)</title><rect x="86.8842%" y="741" width="0.1321%" height="15" fill="rgb(238,48,32)"/><text x="87.1342%" y="751.50"></text></g><g><title>core::fmt::write (25 samples, 0.33%)</title><rect x="86.7389%" y="773" width="0.3302%" height="15" fill="rgb(235,113,49)"/><text x="86.9889%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (14 samples, 0.18%)</title><rect x="86.8842%" y="757" width="0.1849%" height="15" fill="rgb(205,127,43)"/><text x="87.1342%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.20%)</title><rect x="87.0691%" y="773" width="0.1981%" height="15" fill="rgb(250,162,2)"/><text x="87.3191%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.16%)</title><rect x="87.1087%" y="757" width="0.1585%" height="15" fill="rgb(220,13,41)"/><text x="87.3587%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.13%)</title><rect x="87.1351%" y="741" width="0.1321%" height="15" fill="rgb(249,221,25)"/><text x="87.3851%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.12%)</title><rect x="87.1483%" y="725" width="0.1189%" height="15" fill="rgb(215,208,19)"/><text x="87.3983%" y="735.50"></text></g><g><title>ip_local_deliver (11 samples, 0.15%)</title><rect x="87.4389%" y="341" width="0.1453%" height="15" fill="rgb(236,175,2)"/><text x="87.6889%" y="351.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.15%)</title><rect x="87.4389%" y="325" width="0.1453%" height="15" fill="rgb(241,52,2)"/><text x="87.6889%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.15%)</title><rect x="87.4389%" y="309" width="0.1453%" height="15" fill="rgb(248,140,14)"/><text x="87.6889%" y="319.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.15%)</title><rect x="87.4389%" y="293" width="0.1453%" height="15" fill="rgb(253,22,42)"/><text x="87.6889%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (10 samples, 0.13%)</title><rect x="87.4521%" y="277" width="0.1321%" height="15" fill="rgb(234,61,47)"/><text x="87.7021%" y="287.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.12%)</title><rect x="87.4653%" y="261" width="0.1189%" height="15" fill="rgb(208,226,15)"/><text x="87.7153%" y="271.50"></text></g><g><title>__ip_queue_xmit (17 samples, 0.22%)</title><rect x="87.3729%" y="517" width="0.2245%" height="15" fill="rgb(217,221,4)"/><text x="87.6229%" y="527.50"></text></g><g><title>ip_output (17 samples, 0.22%)</title><rect x="87.3729%" y="501" width="0.2245%" height="15" fill="rgb(212,174,34)"/><text x="87.6229%" y="511.50"></text></g><g><title>ip_finish_output2 (17 samples, 0.22%)</title><rect x="87.3729%" y="485" width="0.2245%" height="15" fill="rgb(253,83,4)"/><text x="87.6229%" y="495.50"></text></g><g><title>__local_bh_enable_ip (14 samples, 0.18%)</title><rect x="87.4125%" y="469" width="0.1849%" height="15" fill="rgb(250,195,49)"/><text x="87.6625%" y="479.50"></text></g><g><title>do_softirq (14 samples, 0.18%)</title><rect x="87.4125%" y="453" width="0.1849%" height="15" fill="rgb(241,192,25)"/><text x="87.6625%" y="463.50"></text></g><g><title>do_softirq_own_stack (13 samples, 0.17%)</title><rect x="87.4257%" y="437" width="0.1717%" height="15" fill="rgb(208,124,10)"/><text x="87.6757%" y="447.50"></text></g><g><title>__do_softirq (13 samples, 0.17%)</title><rect x="87.4257%" y="421" width="0.1717%" height="15" fill="rgb(222,33,0)"/><text x="87.6757%" y="431.50"></text></g><g><title>net_rx_action (13 samples, 0.17%)</title><rect x="87.4257%" y="405" width="0.1717%" height="15" fill="rgb(234,209,28)"/><text x="87.6757%" y="415.50"></text></g><g><title>process_backlog (13 samples, 0.17%)</title><rect x="87.4257%" y="389" width="0.1717%" height="15" fill="rgb(224,11,23)"/><text x="87.6757%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 0.16%)</title><rect x="87.4389%" y="373" width="0.1585%" height="15" fill="rgb(232,99,1)"/><text x="87.6889%" y="383.50"></text></g><g><title>ip_rcv (12 samples, 0.16%)</title><rect x="87.4389%" y="357" width="0.1585%" height="15" fill="rgb(237,95,45)"/><text x="87.6889%" y="367.50"></text></g><g><title>__tcp_transmit_skb (18 samples, 0.24%)</title><rect x="87.3729%" y="533" width="0.2377%" height="15" fill="rgb(208,109,11)"/><text x="87.6229%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (19 samples, 0.25%)</title><rect x="87.3729%" y="565" width="0.2510%" height="15" fill="rgb(216,190,48)"/><text x="87.6229%" y="575.50"></text></g><g><title>tcp_write_xmit (19 samples, 0.25%)</title><rect x="87.3729%" y="549" width="0.2510%" height="15" fill="rgb(251,171,36)"/><text x="87.6229%" y="559.50"></text></g><g><title>mysql::conn::Conn::_query (23 samples, 0.30%)</title><rect x="87.3465%" y="773" width="0.3038%" height="15" fill="rgb(230,62,22)"/><text x="87.5965%" y="783.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (23 samples, 0.30%)</title><rect x="87.3465%" y="757" width="0.3038%" height="15" fill="rgb(225,114,35)"/><text x="87.5965%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (21 samples, 0.28%)</title><rect x="87.3729%" y="741" width="0.2774%" height="15" fill="rgb(215,118,42)"/><text x="87.6229%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (21 samples, 0.28%)</title><rect x="87.3729%" y="725" width="0.2774%" height="15" fill="rgb(243,119,21)"/><text x="87.6229%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (21 samples, 0.28%)</title><rect x="87.3729%" y="709" width="0.2774%" height="15" fill="rgb(252,177,53)"/><text x="87.6229%" y="719.50"></text></g><g><title>__libc_send (21 samples, 0.28%)</title><rect x="87.3729%" y="693" width="0.2774%" height="15" fill="rgb(237,209,29)"/><text x="87.6229%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 0.28%)</title><rect x="87.3729%" y="677" width="0.2774%" height="15" fill="rgb(212,65,23)"/><text x="87.6229%" y="687.50"></text></g><g><title>do_syscall_64 (21 samples, 0.28%)</title><rect x="87.3729%" y="661" width="0.2774%" height="15" fill="rgb(230,222,46)"/><text x="87.6229%" y="671.50"></text></g><g><title>__x64_sys_sendto (21 samples, 0.28%)</title><rect x="87.3729%" y="645" width="0.2774%" height="15" fill="rgb(215,135,32)"/><text x="87.6229%" y="655.50"></text></g><g><title>__sys_sendto (21 samples, 0.28%)</title><rect x="87.3729%" y="629" width="0.2774%" height="15" fill="rgb(246,101,22)"/><text x="87.6229%" y="639.50"></text></g><g><title>sock_sendmsg (21 samples, 0.28%)</title><rect x="87.3729%" y="613" width="0.2774%" height="15" fill="rgb(206,107,13)"/><text x="87.6229%" y="623.50"></text></g><g><title>tcp_sendmsg (21 samples, 0.28%)</title><rect x="87.3729%" y="597" width="0.2774%" height="15" fill="rgb(250,100,44)"/><text x="87.6229%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (21 samples, 0.28%)</title><rect x="87.3729%" y="581" width="0.2774%" height="15" fill="rgb(231,147,38)"/><text x="87.6229%" y="591.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (141 samples, 1.86%)</title><rect x="85.8011%" y="821" width="1.8624%" height="15" fill="rgb(229,8,40)"/><text x="86.0511%" y="831.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (141 samples, 1.86%)</title><rect x="85.8011%" y="805" width="1.8624%" height="15" fill="rgb(221,135,30)"/><text x="86.0511%" y="815.50">&lt;..</text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (141 samples, 1.86%)</title><rect x="85.8011%" y="789" width="1.8624%" height="15" fill="rgb(249,193,18)"/><text x="86.0511%" y="799.50">d..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (12 samples, 0.16%)</title><rect x="87.9672%" y="821" width="0.1585%" height="15" fill="rgb(209,133,39)"/><text x="88.2172%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (8 samples, 0.11%)</title><rect x="88.1257%" y="805" width="0.1057%" height="15" fill="rgb(232,100,14)"/><text x="88.3757%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (8 samples, 0.11%)</title><rect x="88.1257%" y="789" width="0.1057%" height="15" fill="rgb(224,185,1)"/><text x="88.3757%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 0.11%)</title><rect x="88.1257%" y="773" width="0.1057%" height="15" fill="rgb(223,139,8)"/><text x="88.3757%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (26 samples, 0.34%)</title><rect x="88.1257%" y="821" width="0.3434%" height="15" fill="rgb(232,213,38)"/><text x="88.3757%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (18 samples, 0.24%)</title><rect x="88.2314%" y="805" width="0.2377%" height="15" fill="rgb(207,94,22)"/><text x="88.4814%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (18 samples, 0.24%)</title><rect x="88.2314%" y="789" width="0.2377%" height="15" fill="rgb(219,183,54)"/><text x="88.4814%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 0.24%)</title><rect x="88.2314%" y="773" width="0.2377%" height="15" fill="rgb(216,185,54)"/><text x="88.4814%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (18 samples, 0.24%)</title><rect x="88.2314%" y="757" width="0.2377%" height="15" fill="rgb(254,217,39)"/><text x="88.4814%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (17 samples, 0.22%)</title><rect x="88.2446%" y="741" width="0.2245%" height="15" fill="rgb(240,178,23)"/><text x="88.4946%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::expected (17 samples, 0.22%)</title><rect x="88.2446%" y="725" width="0.2245%" height="15" fill="rgb(218,11,47)"/><text x="88.4946%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.22%)</title><rect x="88.2446%" y="709" width="0.2245%" height="15" fill="rgb(218,51,51)"/><text x="88.4946%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.22%)</title><rect x="88.2446%" y="693" width="0.2245%" height="15" fill="rgb(238,126,27)"/><text x="88.4946%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.22%)</title><rect x="88.2446%" y="677" width="0.2245%" height="15" fill="rgb(249,202,22)"/><text x="88.4946%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.22%)</title><rect x="88.2446%" y="661" width="0.2245%" height="15" fill="rgb(254,195,49)"/><text x="88.4946%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (17 samples, 0.22%)</title><rect x="88.2446%" y="645" width="0.2245%" height="15" fill="rgb(208,123,14)"/><text x="88.4946%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.22%)</title><rect x="88.2446%" y="629" width="0.2245%" height="15" fill="rgb(224,200,8)"/><text x="88.4946%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (17 samples, 0.22%)</title><rect x="88.2446%" y="613" width="0.2245%" height="15" fill="rgb(217,61,36)"/><text x="88.4946%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.22%)</title><rect x="88.2446%" y="597" width="0.2245%" height="15" fill="rgb(206,35,45)"/><text x="88.4946%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.22%)</title><rect x="88.2446%" y="581" width="0.2245%" height="15" fill="rgb(217,65,33)"/><text x="88.4946%" y="591.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (18 samples, 0.24%)</title><rect x="88.4956%" y="789" width="0.2377%" height="15" fill="rgb(222,158,48)"/><text x="88.7456%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 0.24%)</title><rect x="88.4956%" y="773" width="0.2377%" height="15" fill="rgb(254,2,54)"/><text x="88.7456%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (11 samples, 0.15%)</title><rect x="88.5880%" y="757" width="0.1453%" height="15" fill="rgb(250,143,38)"/><text x="88.8380%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (10 samples, 0.13%)</title><rect x="88.7333%" y="789" width="0.1321%" height="15" fill="rgb(248,25,0)"/><text x="88.9833%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (30 samples, 0.40%)</title><rect x="88.4956%" y="821" width="0.3962%" height="15" fill="rgb(206,152,27)"/><text x="88.7456%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (30 samples, 0.40%)</title><rect x="88.4956%" y="805" width="0.3962%" height="15" fill="rgb(240,77,30)"/><text x="88.7456%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (14 samples, 0.18%)</title><rect x="88.8918%" y="773" width="0.1849%" height="15" fill="rgb(231,5,3)"/><text x="89.1418%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (9 samples, 0.12%)</title><rect x="88.9579%" y="757" width="0.1189%" height="15" fill="rgb(207,226,32)"/><text x="89.2079%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (22 samples, 0.29%)</title><rect x="88.8918%" y="821" width="0.2906%" height="15" fill="rgb(222,207,47)"/><text x="89.1418%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (22 samples, 0.29%)</title><rect x="88.8918%" y="805" width="0.2906%" height="15" fill="rgb(229,115,45)"/><text x="89.1418%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (22 samples, 0.29%)</title><rect x="88.8918%" y="789" width="0.2906%" height="15" fill="rgb(224,191,6)"/><text x="89.1418%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (8 samples, 0.11%)</title><rect x="89.0767%" y="773" width="0.1057%" height="15" fill="rgb(230,227,24)"/><text x="89.3267%" y="783.50"></text></g><g><title>sk_wait_data (12 samples, 0.16%)</title><rect x="89.2088%" y="373" width="0.1585%" height="15" fill="rgb(228,80,19)"/><text x="89.4588%" y="383.50"></text></g><g><title>wait_woken (11 samples, 0.15%)</title><rect x="89.2220%" y="357" width="0.1453%" height="15" fill="rgb(247,229,0)"/><text x="89.4720%" y="367.50"></text></g><g><title>schedule_timeout (10 samples, 0.13%)</title><rect x="89.2352%" y="341" width="0.1321%" height="15" fill="rgb(237,194,15)"/><text x="89.4852%" y="351.50"></text></g><g><title>schedule (9 samples, 0.12%)</title><rect x="89.2484%" y="325" width="0.1189%" height="15" fill="rgb(219,203,20)"/><text x="89.4984%" y="335.50"></text></g><g><title>__schedule (9 samples, 0.12%)</title><rect x="89.2484%" y="309" width="0.1189%" height="15" fill="rgb(234,128,8)"/><text x="89.4984%" y="319.50"></text></g><g><title>inet_recvmsg (15 samples, 0.20%)</title><rect x="89.1956%" y="405" width="0.1981%" height="15" fill="rgb(248,202,8)"/><text x="89.4456%" y="415.50"></text></g><g><title>tcp_recvmsg (15 samples, 0.20%)</title><rect x="89.1956%" y="389" width="0.1981%" height="15" fill="rgb(206,104,37)"/><text x="89.4456%" y="399.50"></text></g><g><title>do_syscall_64 (16 samples, 0.21%)</title><rect x="89.1956%" y="453" width="0.2113%" height="15" fill="rgb(223,8,27)"/><text x="89.4456%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (16 samples, 0.21%)</title><rect x="89.1956%" y="437" width="0.2113%" height="15" fill="rgb(216,217,28)"/><text x="89.4456%" y="447.50"></text></g><g><title>__sys_recvfrom (16 samples, 0.21%)</title><rect x="89.1956%" y="421" width="0.2113%" height="15" fill="rgb(249,199,1)"/><text x="89.4456%" y="431.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (18 samples, 0.24%)</title><rect x="89.1956%" y="565" width="0.2377%" height="15" fill="rgb(240,85,17)"/><text x="89.4456%" y="575.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (18 samples, 0.24%)</title><rect x="89.1956%" y="549" width="0.2377%" height="15" fill="rgb(206,108,45)"/><text x="89.4456%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (18 samples, 0.24%)</title><rect x="89.1956%" y="533" width="0.2377%" height="15" fill="rgb(245,210,41)"/><text x="89.4456%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::read (18 samples, 0.24%)</title><rect x="89.1956%" y="517" width="0.2377%" height="15" fill="rgb(206,13,37)"/><text x="89.4456%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (18 samples, 0.24%)</title><rect x="89.1956%" y="501" width="0.2377%" height="15" fill="rgb(250,61,18)"/><text x="89.4456%" y="511.50"></text></g><g><title>__libc_recv (18 samples, 0.24%)</title><rect x="89.1956%" y="485" width="0.2377%" height="15" fill="rgb(235,172,48)"/><text x="89.4456%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (18 samples, 0.24%)</title><rect x="89.1956%" y="469" width="0.2377%" height="15" fill="rgb(249,201,17)"/><text x="89.4456%" y="479.50"></text></g><g><title>mysql::conn::Conn::start_transaction (21 samples, 0.28%)</title><rect x="89.1824%" y="677" width="0.2774%" height="15" fill="rgb(219,208,6)"/><text x="89.4324%" y="687.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (21 samples, 0.28%)</title><rect x="89.1824%" y="661" width="0.2774%" height="15" fill="rgb(248,31,23)"/><text x="89.4324%" y="671.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (21 samples, 0.28%)</title><rect x="89.1824%" y="645" width="0.2774%" height="15" fill="rgb(245,15,42)"/><text x="89.4324%" y="655.50"></text></g><g><title>mysql::conn::Conn::_query (21 samples, 0.28%)</title><rect x="89.1824%" y="629" width="0.2774%" height="15" fill="rgb(222,217,39)"/><text x="89.4324%" y="639.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (21 samples, 0.28%)</title><rect x="89.1824%" y="613" width="0.2774%" height="15" fill="rgb(210,219,27)"/><text x="89.4324%" y="623.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 0.28%)</title><rect x="89.1824%" y="597" width="0.2774%" height="15" fill="rgb(252,166,36)"/><text x="89.4324%" y="607.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.28%)</title><rect x="89.1824%" y="581" width="0.2774%" height="15" fill="rgb(245,132,34)"/><text x="89.4324%" y="591.50"></text></g><g><title>start_thread (25 samples, 0.33%)</title><rect x="89.1824%" y="821" width="0.3302%" height="15" fill="rgb(236,54,3)"/><text x="89.4324%" y="831.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (25 samples, 0.33%)</title><rect x="89.1824%" y="805" width="0.3302%" height="15" fill="rgb(241,173,43)"/><text x="89.4324%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (25 samples, 0.33%)</title><rect x="89.1824%" y="789" width="0.3302%" height="15" fill="rgb(215,190,9)"/><text x="89.4324%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (25 samples, 0.33%)</title><rect x="89.1824%" y="773" width="0.3302%" height="15" fill="rgb(242,101,16)"/><text x="89.4324%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (25 samples, 0.33%)</title><rect x="89.1824%" y="757" width="0.3302%" height="15" fill="rgb(223,190,21)"/><text x="89.4324%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 0.33%)</title><rect x="89.1824%" y="741" width="0.3302%" height="15" fill="rgb(215,228,25)"/><text x="89.4324%" y="751.50"></text></g><g><title>decor::Shim::run_on_tcp (25 samples, 0.33%)</title><rect x="89.1824%" y="725" width="0.3302%" height="15" fill="rgb(225,36,22)"/><text x="89.4324%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (25 samples, 0.33%)</title><rect x="89.1824%" y="709" width="0.3302%" height="15" fill="rgb(251,106,46)"/><text x="89.4324%" y="719.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (25 samples, 0.33%)</title><rect x="89.1824%" y="693" width="0.3302%" height="15" fill="rgb(208,90,1)"/><text x="89.4324%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 0.11%)</title><rect x="90.0277%" y="693" width="0.1057%" height="15" fill="rgb(243,10,4)"/><text x="90.2777%" y="703.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (42 samples, 0.55%)</title><rect x="89.7372%" y="709" width="0.5547%" height="15" fill="rgb(212,137,27)"/><text x="89.9872%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.15%)</title><rect x="90.1466%" y="693" width="0.1453%" height="15" fill="rgb(231,220,49)"/><text x="90.3966%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (56 samples, 0.74%)</title><rect x="89.6447%" y="821" width="0.7397%" height="15" fill="rgb(237,96,20)"/><text x="89.8947%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (56 samples, 0.74%)</title><rect x="89.6447%" y="805" width="0.7397%" height="15" fill="rgb(239,229,30)"/><text x="89.8947%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (56 samples, 0.74%)</title><rect x="89.6447%" y="789" width="0.7397%" height="15" fill="rgb(219,65,33)"/><text x="89.8947%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (56 samples, 0.74%)</title><rect x="89.6447%" y="773" width="0.7397%" height="15" fill="rgb(243,134,7)"/><text x="89.8947%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (56 samples, 0.74%)</title><rect x="89.6447%" y="757" width="0.7397%" height="15" fill="rgb(216,177,54)"/><text x="89.8947%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (56 samples, 0.74%)</title><rect x="89.6447%" y="741" width="0.7397%" height="15" fill="rgb(211,160,20)"/><text x="89.8947%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (49 samples, 0.65%)</title><rect x="89.7372%" y="725" width="0.6472%" height="15" fill="rgb(239,85,39)"/><text x="89.9872%" y="735.50"></text></g><g><title>[unknown] (5,792 samples, 76.50%)</title><rect x="13.9612%" y="837" width="76.5024%" height="15" fill="rgb(232,125,22)"/><text x="14.2112%" y="847.50">[unknown]</text></g><g><title>__x64_sys_recvfrom (20 samples, 0.26%)</title><rect x="90.4900%" y="469" width="0.2642%" height="15" fill="rgb(244,57,34)"/><text x="90.7400%" y="479.50"></text></g><g><title>__sys_recvfrom (20 samples, 0.26%)</title><rect x="90.4900%" y="453" width="0.2642%" height="15" fill="rgb(214,203,32)"/><text x="90.7400%" y="463.50"></text></g><g><title>inet_recvmsg (18 samples, 0.24%)</title><rect x="90.5164%" y="437" width="0.2377%" height="15" fill="rgb(207,58,43)"/><text x="90.7664%" y="447.50"></text></g><g><title>tcp_recvmsg (17 samples, 0.22%)</title><rect x="90.5297%" y="421" width="0.2245%" height="15" fill="rgb(215,193,15)"/><text x="90.7797%" y="431.50"></text></g><g><title>sk_wait_data (16 samples, 0.21%)</title><rect x="90.5429%" y="405" width="0.2113%" height="15" fill="rgb(232,15,44)"/><text x="90.7929%" y="415.50"></text></g><g><title>wait_woken (13 samples, 0.17%)</title><rect x="90.5825%" y="389" width="0.1717%" height="15" fill="rgb(212,3,48)"/><text x="90.8325%" y="399.50"></text></g><g><title>schedule_timeout (13 samples, 0.17%)</title><rect x="90.5825%" y="373" width="0.1717%" height="15" fill="rgb(218,128,7)"/><text x="90.8325%" y="383.50"></text></g><g><title>schedule (13 samples, 0.17%)</title><rect x="90.5825%" y="357" width="0.1717%" height="15" fill="rgb(226,216,39)"/><text x="90.8325%" y="367.50"></text></g><g><title>__schedule (12 samples, 0.16%)</title><rect x="90.5957%" y="341" width="0.1585%" height="15" fill="rgb(243,47,51)"/><text x="90.8457%" y="351.50"></text></g><g><title>do_syscall_64 (21 samples, 0.28%)</title><rect x="90.4900%" y="485" width="0.2774%" height="15" fill="rgb(241,183,40)"/><text x="90.7400%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (22 samples, 0.29%)</title><rect x="90.4900%" y="501" width="0.2906%" height="15" fill="rgb(231,217,32)"/><text x="90.7400%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (23 samples, 0.30%)</title><rect x="90.4900%" y="597" width="0.3038%" height="15" fill="rgb(229,61,38)"/><text x="90.7400%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (23 samples, 0.30%)</title><rect x="90.4900%" y="581" width="0.3038%" height="15" fill="rgb(225,210,5)"/><text x="90.7400%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (23 samples, 0.30%)</title><rect x="90.4900%" y="565" width="0.3038%" height="15" fill="rgb(231,79,45)"/><text x="90.7400%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (23 samples, 0.30%)</title><rect x="90.4900%" y="549" width="0.3038%" height="15" fill="rgb(224,100,7)"/><text x="90.7400%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (23 samples, 0.30%)</title><rect x="90.4900%" y="533" width="0.3038%" height="15" fill="rgb(241,198,18)"/><text x="90.7400%" y="543.50"></text></g><g><title>__libc_recv (23 samples, 0.30%)</title><rect x="90.4900%" y="517" width="0.3038%" height="15" fill="rgb(252,97,53)"/><text x="90.7400%" y="527.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (25 samples, 0.33%)</title><rect x="90.4900%" y="645" width="0.3302%" height="15" fill="rgb(220,88,7)"/><text x="90.7400%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (25 samples, 0.33%)</title><rect x="90.4900%" y="629" width="0.3302%" height="15" fill="rgb(213,176,14)"/><text x="90.7400%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.33%)</title><rect x="90.4900%" y="613" width="0.3302%" height="15" fill="rgb(246,73,7)"/><text x="90.7400%" y="623.50"></text></g><g><title>__ip_queue_xmit (29 samples, 0.38%)</title><rect x="90.8731%" y="405" width="0.3830%" height="15" fill="rgb(245,64,36)"/><text x="91.1231%" y="415.50"></text></g><g><title>ip_output (29 samples, 0.38%)</title><rect x="90.8731%" y="389" width="0.3830%" height="15" fill="rgb(245,80,10)"/><text x="91.1231%" y="399.50"></text></g><g><title>ip_finish_output2 (27 samples, 0.36%)</title><rect x="90.8995%" y="373" width="0.3566%" height="15" fill="rgb(232,107,50)"/><text x="91.1495%" y="383.50"></text></g><g><title>__local_bh_enable_ip (21 samples, 0.28%)</title><rect x="90.9787%" y="357" width="0.2774%" height="15" fill="rgb(253,3,0)"/><text x="91.2287%" y="367.50"></text></g><g><title>do_softirq (21 samples, 0.28%)</title><rect x="90.9787%" y="341" width="0.2774%" height="15" fill="rgb(212,99,53)"/><text x="91.2287%" y="351.50"></text></g><g><title>do_softirq_own_stack (21 samples, 0.28%)</title><rect x="90.9787%" y="325" width="0.2774%" height="15" fill="rgb(249,111,54)"/><text x="91.2287%" y="335.50"></text></g><g><title>__do_softirq (21 samples, 0.28%)</title><rect x="90.9787%" y="309" width="0.2774%" height="15" fill="rgb(249,55,30)"/><text x="91.2287%" y="319.50"></text></g><g><title>net_rx_action (20 samples, 0.26%)</title><rect x="90.9919%" y="293" width="0.2642%" height="15" fill="rgb(237,47,42)"/><text x="91.2419%" y="303.50"></text></g><g><title>process_backlog (19 samples, 0.25%)</title><rect x="91.0052%" y="277" width="0.2510%" height="15" fill="rgb(211,20,18)"/><text x="91.2552%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (19 samples, 0.25%)</title><rect x="91.0052%" y="261" width="0.2510%" height="15" fill="rgb(231,203,46)"/><text x="91.2552%" y="271.50"></text></g><g><title>ip_rcv (16 samples, 0.21%)</title><rect x="91.0448%" y="245" width="0.2113%" height="15" fill="rgb(237,142,3)"/><text x="91.2948%" y="255.50"></text></g><g><title>ip_local_deliver (16 samples, 0.21%)</title><rect x="91.0448%" y="229" width="0.2113%" height="15" fill="rgb(241,107,1)"/><text x="91.2948%" y="239.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 0.21%)</title><rect x="91.0448%" y="213" width="0.2113%" height="15" fill="rgb(229,83,13)"/><text x="91.2948%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 0.21%)</title><rect x="91.0448%" y="197" width="0.2113%" height="15" fill="rgb(241,91,40)"/><text x="91.2948%" y="207.50"></text></g><g><title>tcp_v4_rcv (16 samples, 0.21%)</title><rect x="91.0448%" y="181" width="0.2113%" height="15" fill="rgb(225,3,45)"/><text x="91.2948%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 0.16%)</title><rect x="91.0976%" y="165" width="0.1585%" height="15" fill="rgb(244,223,14)"/><text x="91.3476%" y="175.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.16%)</title><rect x="91.0976%" y="149" width="0.1585%" height="15" fill="rgb(224,124,37)"/><text x="91.3476%" y="159.50"></text></g><g><title>__tcp_push_pending_frames (33 samples, 0.44%)</title><rect x="90.8599%" y="453" width="0.4359%" height="15" fill="rgb(251,171,30)"/><text x="91.1099%" y="463.50"></text></g><g><title>tcp_write_xmit (33 samples, 0.44%)</title><rect x="90.8599%" y="437" width="0.4359%" height="15" fill="rgb(236,46,54)"/><text x="91.1099%" y="447.50"></text></g><g><title>__tcp_transmit_skb (32 samples, 0.42%)</title><rect x="90.8731%" y="421" width="0.4227%" height="15" fill="rgb(245,213,5)"/><text x="91.1231%" y="431.50"></text></g><g><title>sock_sendmsg (37 samples, 0.49%)</title><rect x="90.8599%" y="501" width="0.4887%" height="15" fill="rgb(230,144,27)"/><text x="91.1099%" y="511.50"></text></g><g><title>tcp_sendmsg (37 samples, 0.49%)</title><rect x="90.8599%" y="485" width="0.4887%" height="15" fill="rgb(220,86,6)"/><text x="91.1099%" y="495.50"></text></g><g><title>tcp_sendmsg_locked (37 samples, 0.49%)</title><rect x="90.8599%" y="469" width="0.4887%" height="15" fill="rgb(240,20,13)"/><text x="91.1099%" y="479.50"></text></g><g><title>do_syscall_64 (39 samples, 0.52%)</title><rect x="90.8467%" y="549" width="0.5151%" height="15" fill="rgb(217,89,34)"/><text x="91.0967%" y="559.50"></text></g><g><title>__x64_sys_sendto (39 samples, 0.52%)</title><rect x="90.8467%" y="533" width="0.5151%" height="15" fill="rgb(229,13,5)"/><text x="91.0967%" y="543.50"></text></g><g><title>__sys_sendto (39 samples, 0.52%)</title><rect x="90.8467%" y="517" width="0.5151%" height="15" fill="rgb(244,67,35)"/><text x="91.0967%" y="527.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (67 samples, 0.88%)</title><rect x="90.4900%" y="677" width="0.8850%" height="15" fill="rgb(221,40,2)"/><text x="90.7400%" y="687.50"></text></g><g><title>mysql::conn::Conn::_query (67 samples, 0.88%)</title><rect x="90.4900%" y="661" width="0.8850%" height="15" fill="rgb(237,157,21)"/><text x="90.7400%" y="671.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (42 samples, 0.55%)</title><rect x="90.8202%" y="645" width="0.5547%" height="15" fill="rgb(222,94,11)"/><text x="91.0702%" y="655.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (42 samples, 0.55%)</title><rect x="90.8202%" y="629" width="0.5547%" height="15" fill="rgb(249,113,6)"/><text x="91.0702%" y="639.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (42 samples, 0.55%)</title><rect x="90.8202%" y="613" width="0.5547%" height="15" fill="rgb(238,137,36)"/><text x="91.0702%" y="623.50"></text></g><g><title>std::sys_common::net::TcpStream::write (42 samples, 0.55%)</title><rect x="90.8202%" y="597" width="0.5547%" height="15" fill="rgb(210,102,26)"/><text x="91.0702%" y="607.50"></text></g><g><title>__libc_send (42 samples, 0.55%)</title><rect x="90.8202%" y="581" width="0.5547%" height="15" fill="rgb(218,30,30)"/><text x="91.0702%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (41 samples, 0.54%)</title><rect x="90.8334%" y="565" width="0.5415%" height="15" fill="rgb(214,67,26)"/><text x="91.0834%" y="575.50"></text></g><g><title>core::fmt::write (15 samples, 0.20%)</title><rect x="91.4014%" y="677" width="0.1981%" height="15" fill="rgb(251,9,53)"/><text x="91.6514%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (15 samples, 0.20%)</title><rect x="91.4014%" y="661" width="0.1981%" height="15" fill="rgb(228,204,25)"/><text x="91.6514%" y="671.50"></text></g><g><title>__wake_up_common (12 samples, 0.16%)</title><rect x="92.0618%" y="69" width="0.1585%" height="15" fill="rgb(207,153,8)"/><text x="92.3118%" y="79.50"></text></g><g><title>pollwake (12 samples, 0.16%)</title><rect x="92.0618%" y="53" width="0.1585%" height="15" fill="rgb(242,9,16)"/><text x="92.3118%" y="63.50"></text></g><g><title>try_to_wake_up (12 samples, 0.16%)</title><rect x="92.0618%" y="37" width="0.1585%" height="15" fill="rgb(217,211,10)"/><text x="92.3118%" y="47.50"></text></g><g><title>sock_def_readable (14 samples, 0.18%)</title><rect x="92.0618%" y="101" width="0.1849%" height="15" fill="rgb(219,228,52)"/><text x="92.3118%" y="111.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.18%)</title><rect x="92.0618%" y="85" width="0.1849%" height="15" fill="rgb(231,92,29)"/><text x="92.3118%" y="95.50"></text></g><g><title>__netif_receive_skb_one_core (25 samples, 0.33%)</title><rect x="91.9694%" y="229" width="0.3302%" height="15" fill="rgb(232,8,23)"/><text x="92.2194%" y="239.50"></text></g><g><title>ip_rcv (25 samples, 0.33%)</title><rect x="91.9694%" y="213" width="0.3302%" height="15" fill="rgb(216,211,34)"/><text x="92.2194%" y="223.50"></text></g><g><title>ip_local_deliver (25 samples, 0.33%)</title><rect x="91.9694%" y="197" width="0.3302%" height="15" fill="rgb(236,151,0)"/><text x="92.2194%" y="207.50"></text></g><g><title>ip_local_deliver_finish (24 samples, 0.32%)</title><rect x="91.9826%" y="181" width="0.3170%" height="15" fill="rgb(209,168,3)"/><text x="92.2326%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (24 samples, 0.32%)</title><rect x="91.9826%" y="165" width="0.3170%" height="15" fill="rgb(208,129,28)"/><text x="92.2326%" y="175.50"></text></g><g><title>tcp_v4_rcv (23 samples, 0.30%)</title><rect x="91.9958%" y="149" width="0.3038%" height="15" fill="rgb(229,78,22)"/><text x="92.2458%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (20 samples, 0.26%)</title><rect x="92.0354%" y="133" width="0.2642%" height="15" fill="rgb(228,187,13)"/><text x="92.2854%" y="143.50"></text></g><g><title>tcp_rcv_established (20 samples, 0.26%)</title><rect x="92.0354%" y="117" width="0.2642%" height="15" fill="rgb(240,119,24)"/><text x="92.2854%" y="127.50"></text></g><g><title>__local_bh_enable_ip (29 samples, 0.38%)</title><rect x="91.9297%" y="325" width="0.3830%" height="15" fill="rgb(209,194,42)"/><text x="92.1797%" y="335.50"></text></g><g><title>do_softirq (29 samples, 0.38%)</title><rect x="91.9297%" y="309" width="0.3830%" height="15" fill="rgb(247,200,46)"/><text x="92.1797%" y="319.50"></text></g><g><title>do_softirq_own_stack (28 samples, 0.37%)</title><rect x="91.9429%" y="293" width="0.3698%" height="15" fill="rgb(218,76,16)"/><text x="92.1929%" y="303.50"></text></g><g><title>__do_softirq (28 samples, 0.37%)</title><rect x="91.9429%" y="277" width="0.3698%" height="15" fill="rgb(225,21,48)"/><text x="92.1929%" y="287.50"></text></g><g><title>net_rx_action (27 samples, 0.36%)</title><rect x="91.9561%" y="261" width="0.3566%" height="15" fill="rgb(239,223,50)"/><text x="92.2061%" y="271.50"></text></g><g><title>process_backlog (26 samples, 0.34%)</title><rect x="91.9694%" y="245" width="0.3434%" height="15" fill="rgb(244,45,21)"/><text x="92.2194%" y="255.50"></text></g><g><title>__ip_queue_xmit (33 samples, 0.44%)</title><rect x="91.8901%" y="373" width="0.4359%" height="15" fill="rgb(232,33,43)"/><text x="92.1401%" y="383.50"></text></g><g><title>ip_output (33 samples, 0.44%)</title><rect x="91.8901%" y="357" width="0.4359%" height="15" fill="rgb(209,8,3)"/><text x="92.1401%" y="367.50"></text></g><g><title>ip_finish_output2 (33 samples, 0.44%)</title><rect x="91.8901%" y="341" width="0.4359%" height="15" fill="rgb(214,25,53)"/><text x="92.1401%" y="351.50"></text></g><g><title>__tcp_transmit_skb (35 samples, 0.46%)</title><rect x="91.8769%" y="389" width="0.4623%" height="15" fill="rgb(254,186,54)"/><text x="92.1269%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (38 samples, 0.50%)</title><rect x="91.8769%" y="421" width="0.5019%" height="15" fill="rgb(208,174,49)"/><text x="92.1269%" y="431.50"></text></g><g><title>tcp_write_xmit (38 samples, 0.50%)</title><rect x="91.8769%" y="405" width="0.5019%" height="15" fill="rgb(233,191,51)"/><text x="92.1269%" y="415.50"></text></g><g><title>sock_sendmsg (46 samples, 0.61%)</title><rect x="91.8373%" y="469" width="0.6076%" height="15" fill="rgb(222,134,10)"/><text x="92.0873%" y="479.50"></text></g><g><title>tcp_sendmsg (45 samples, 0.59%)</title><rect x="91.8505%" y="453" width="0.5944%" height="15" fill="rgb(230,226,20)"/><text x="92.1005%" y="463.50"></text></g><g><title>tcp_sendmsg_locked (45 samples, 0.59%)</title><rect x="91.8505%" y="437" width="0.5944%" height="15" fill="rgb(251,111,25)"/><text x="92.1005%" y="447.50"></text></g><g><title>__x64_sys_sendto (50 samples, 0.66%)</title><rect x="91.7976%" y="501" width="0.6604%" height="15" fill="rgb(224,40,46)"/><text x="92.0476%" y="511.50"></text></g><g><title>__sys_sendto (50 samples, 0.66%)</title><rect x="91.7976%" y="485" width="0.6604%" height="15" fill="rgb(236,108,47)"/><text x="92.0476%" y="495.50"></text></g><g><title>do_syscall_64 (52 samples, 0.69%)</title><rect x="91.7976%" y="517" width="0.6868%" height="15" fill="rgb(234,93,0)"/><text x="92.0476%" y="527.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 0.77%)</title><rect x="91.7580%" y="581" width="0.7661%" height="15" fill="rgb(224,213,32)"/><text x="92.0080%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (58 samples, 0.77%)</title><rect x="91.7580%" y="565" width="0.7661%" height="15" fill="rgb(251,11,48)"/><text x="92.0080%" y="575.50"></text></g><g><title>__libc_send (58 samples, 0.77%)</title><rect x="91.7580%" y="549" width="0.7661%" height="15" fill="rgb(236,173,5)"/><text x="92.0080%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (56 samples, 0.74%)</title><rect x="91.7844%" y="533" width="0.7397%" height="15" fill="rgb(230,95,12)"/><text x="92.0344%" y="543.50"></text></g><g><title>mysql::conn::Conn::start_transaction (66 samples, 0.87%)</title><rect x="91.6656%" y="677" width="0.8717%" height="15" fill="rgb(232,209,1)"/><text x="91.9156%" y="687.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (65 samples, 0.86%)</title><rect x="91.6788%" y="661" width="0.8585%" height="15" fill="rgb(232,6,1)"/><text x="91.9288%" y="671.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (65 samples, 0.86%)</title><rect x="91.6788%" y="645" width="0.8585%" height="15" fill="rgb(210,224,50)"/><text x="91.9288%" y="655.50"></text></g><g><title>mysql::conn::Conn::_query (64 samples, 0.85%)</title><rect x="91.6920%" y="629" width="0.8453%" height="15" fill="rgb(228,127,35)"/><text x="91.9420%" y="639.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (62 samples, 0.82%)</title><rect x="91.7184%" y="613" width="0.8189%" height="15" fill="rgb(245,102,45)"/><text x="91.9684%" y="623.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (59 samples, 0.78%)</title><rect x="91.7580%" y="597" width="0.7793%" height="15" fill="rgb(214,1,49)"/><text x="92.0080%" y="607.50"></text></g><g><title>sk_wait_data (9 samples, 0.12%)</title><rect x="92.6166%" y="389" width="0.1189%" height="15" fill="rgb(226,163,40)"/><text x="92.8666%" y="399.50"></text></g><g><title>wait_woken (8 samples, 0.11%)</title><rect x="92.6298%" y="373" width="0.1057%" height="15" fill="rgb(239,212,28)"/><text x="92.8798%" y="383.50"></text></g><g><title>schedule_timeout (8 samples, 0.11%)</title><rect x="92.6298%" y="357" width="0.1057%" height="15" fill="rgb(220,20,13)"/><text x="92.8798%" y="367.50"></text></g><g><title>schedule (8 samples, 0.11%)</title><rect x="92.6298%" y="341" width="0.1057%" height="15" fill="rgb(210,164,35)"/><text x="92.8798%" y="351.50"></text></g><g><title>__schedule (8 samples, 0.11%)</title><rect x="92.6298%" y="325" width="0.1057%" height="15" fill="rgb(248,109,41)"/><text x="92.8798%" y="335.50"></text></g><g><title>inet_recvmsg (14 samples, 0.18%)</title><rect x="92.5901%" y="421" width="0.1849%" height="15" fill="rgb(238,23,50)"/><text x="92.8401%" y="431.50"></text></g><g><title>tcp_recvmsg (14 samples, 0.18%)</title><rect x="92.5901%" y="405" width="0.1849%" height="15" fill="rgb(211,48,49)"/><text x="92.8401%" y="415.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.21%)</title><rect x="92.5769%" y="597" width="0.2113%" height="15" fill="rgb(223,36,21)"/><text x="92.8269%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (16 samples, 0.21%)</title><rect x="92.5769%" y="581" width="0.2113%" height="15" fill="rgb(207,123,46)"/><text x="92.8269%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (16 samples, 0.21%)</title><rect x="92.5769%" y="565" width="0.2113%" height="15" fill="rgb(240,218,32)"/><text x="92.8269%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::read (16 samples, 0.21%)</title><rect x="92.5769%" y="549" width="0.2113%" height="15" fill="rgb(252,5,43)"/><text x="92.8269%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (16 samples, 0.21%)</title><rect x="92.5769%" y="533" width="0.2113%" height="15" fill="rgb(252,84,19)"/><text x="92.8269%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (16 samples, 0.21%)</title><rect x="92.5769%" y="517" width="0.2113%" height="15" fill="rgb(243,152,39)"/><text x="92.8269%" y="527.50"></text></g><g><title>__libc_recv (16 samples, 0.21%)</title><rect x="92.5769%" y="501" width="0.2113%" height="15" fill="rgb(234,160,15)"/><text x="92.8269%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (16 samples, 0.21%)</title><rect x="92.5769%" y="485" width="0.2113%" height="15" fill="rgb(237,34,20)"/><text x="92.8269%" y="495.50"></text></g><g><title>do_syscall_64 (16 samples, 0.21%)</title><rect x="92.5769%" y="469" width="0.2113%" height="15" fill="rgb(229,97,13)"/><text x="92.8269%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (16 samples, 0.21%)</title><rect x="92.5769%" y="453" width="0.2113%" height="15" fill="rgb(234,71,50)"/><text x="92.8269%" y="463.50"></text></g><g><title>__sys_recvfrom (16 samples, 0.21%)</title><rect x="92.5769%" y="437" width="0.2113%" height="15" fill="rgb(253,155,4)"/><text x="92.8269%" y="447.50"></text></g><g><title>mysql::conn::Conn::read_packet (19 samples, 0.25%)</title><rect x="92.5505%" y="613" width="0.2510%" height="15" fill="rgb(222,185,37)"/><text x="92.8005%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (21 samples, 0.28%)</title><rect x="92.5505%" y="629" width="0.2774%" height="15" fill="rgb(251,177,13)"/><text x="92.8005%" y="639.50"></text></g><g><title>ip_local_deliver (11 samples, 0.15%)</title><rect x="92.9732%" y="213" width="0.1453%" height="15" fill="rgb(250,179,40)"/><text x="93.2232%" y="223.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.15%)</title><rect x="92.9732%" y="197" width="0.1453%" height="15" fill="rgb(242,44,2)"/><text x="93.2232%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.15%)</title><rect x="92.9732%" y="181" width="0.1453%" height="15" fill="rgb(216,177,13)"/><text x="93.2232%" y="191.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.15%)</title><rect x="92.9732%" y="165" width="0.1453%" height="15" fill="rgb(216,106,43)"/><text x="93.2232%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (10 samples, 0.13%)</title><rect x="92.9864%" y="149" width="0.1321%" height="15" fill="rgb(216,183,2)"/><text x="93.2364%" y="159.50"></text></g><g><title>tcp_rcv_established (10 samples, 0.13%)</title><rect x="92.9864%" y="133" width="0.1321%" height="15" fill="rgb(249,75,3)"/><text x="93.2364%" y="143.50"></text></g><g><title>__ip_queue_xmit (17 samples, 0.22%)</title><rect x="92.9071%" y="389" width="0.2245%" height="15" fill="rgb(219,67,39)"/><text x="93.1571%" y="399.50"></text></g><g><title>ip_output (17 samples, 0.22%)</title><rect x="92.9071%" y="373" width="0.2245%" height="15" fill="rgb(253,228,2)"/><text x="93.1571%" y="383.50"></text></g><g><title>ip_finish_output2 (16 samples, 0.21%)</title><rect x="92.9204%" y="357" width="0.2113%" height="15" fill="rgb(235,138,27)"/><text x="93.1704%" y="367.50"></text></g><g><title>__local_bh_enable_ip (13 samples, 0.17%)</title><rect x="92.9600%" y="341" width="0.1717%" height="15" fill="rgb(236,97,51)"/><text x="93.2100%" y="351.50"></text></g><g><title>do_softirq (13 samples, 0.17%)</title><rect x="92.9600%" y="325" width="0.1717%" height="15" fill="rgb(240,80,30)"/><text x="93.2100%" y="335.50"></text></g><g><title>do_softirq_own_stack (12 samples, 0.16%)</title><rect x="92.9732%" y="309" width="0.1585%" height="15" fill="rgb(230,178,19)"/><text x="93.2232%" y="319.50"></text></g><g><title>__do_softirq (12 samples, 0.16%)</title><rect x="92.9732%" y="293" width="0.1585%" height="15" fill="rgb(210,190,27)"/><text x="93.2232%" y="303.50"></text></g><g><title>net_rx_action (12 samples, 0.16%)</title><rect x="92.9732%" y="277" width="0.1585%" height="15" fill="rgb(222,107,31)"/><text x="93.2232%" y="287.50"></text></g><g><title>process_backlog (12 samples, 0.16%)</title><rect x="92.9732%" y="261" width="0.1585%" height="15" fill="rgb(216,127,34)"/><text x="93.2232%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 0.16%)</title><rect x="92.9732%" y="245" width="0.1585%" height="15" fill="rgb(234,116,52)"/><text x="93.2232%" y="255.50"></text></g><g><title>ip_rcv (12 samples, 0.16%)</title><rect x="92.9732%" y="229" width="0.1585%" height="15" fill="rgb(222,124,15)"/><text x="93.2232%" y="239.50"></text></g><g><title>__tcp_push_pending_frames (20 samples, 0.26%)</title><rect x="92.8939%" y="437" width="0.2642%" height="15" fill="rgb(231,179,28)"/><text x="93.1439%" y="447.50"></text></g><g><title>tcp_write_xmit (20 samples, 0.26%)</title><rect x="92.8939%" y="421" width="0.2642%" height="15" fill="rgb(226,93,45)"/><text x="93.1439%" y="431.50"></text></g><g><title>__tcp_transmit_skb (20 samples, 0.26%)</title><rect x="92.8939%" y="405" width="0.2642%" height="15" fill="rgb(215,8,51)"/><text x="93.1439%" y="415.50"></text></g><g><title>do_syscall_64 (29 samples, 0.38%)</title><rect x="92.8279%" y="533" width="0.3830%" height="15" fill="rgb(223,106,5)"/><text x="93.0779%" y="543.50"></text></g><g><title>__x64_sys_sendto (29 samples, 0.38%)</title><rect x="92.8279%" y="517" width="0.3830%" height="15" fill="rgb(250,191,5)"/><text x="93.0779%" y="527.50"></text></g><g><title>__sys_sendto (29 samples, 0.38%)</title><rect x="92.8279%" y="501" width="0.3830%" height="15" fill="rgb(242,132,44)"/><text x="93.0779%" y="511.50"></text></g><g><title>sock_sendmsg (28 samples, 0.37%)</title><rect x="92.8411%" y="485" width="0.3698%" height="15" fill="rgb(251,152,29)"/><text x="93.0911%" y="495.50"></text></g><g><title>tcp_sendmsg (28 samples, 0.37%)</title><rect x="92.8411%" y="469" width="0.3698%" height="15" fill="rgb(218,179,5)"/><text x="93.0911%" y="479.50"></text></g><g><title>tcp_sendmsg_locked (25 samples, 0.33%)</title><rect x="92.8807%" y="453" width="0.3302%" height="15" fill="rgb(227,67,19)"/><text x="93.1307%" y="463.50"></text></g><g><title>entry_SYSCALL_64 (31 samples, 0.41%)</title><rect x="92.8279%" y="549" width="0.4095%" height="15" fill="rgb(233,119,31)"/><text x="93.0779%" y="559.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (54 samples, 0.71%)</title><rect x="92.5373%" y="677" width="0.7132%" height="15" fill="rgb(241,120,22)"/><text x="92.7873%" y="687.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (54 samples, 0.71%)</title><rect x="92.5373%" y="661" width="0.7132%" height="15" fill="rgb(224,102,30)"/><text x="92.7873%" y="671.50"></text></g><g><title>mysql::conn::Conn::_query (53 samples, 0.70%)</title><rect x="92.5505%" y="645" width="0.7000%" height="15" fill="rgb(210,164,37)"/><text x="92.8005%" y="655.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (32 samples, 0.42%)</title><rect x="92.8279%" y="629" width="0.4227%" height="15" fill="rgb(226,191,16)"/><text x="93.0779%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (32 samples, 0.42%)</title><rect x="92.8279%" y="613" width="0.4227%" height="15" fill="rgb(214,40,45)"/><text x="93.0779%" y="623.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (32 samples, 0.42%)</title><rect x="92.8279%" y="597" width="0.4227%" height="15" fill="rgb(244,29,26)"/><text x="93.0779%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (32 samples, 0.42%)</title><rect x="92.8279%" y="581" width="0.4227%" height="15" fill="rgb(216,16,5)"/><text x="93.0779%" y="591.50"></text></g><g><title>__libc_send (32 samples, 0.42%)</title><rect x="92.8279%" y="565" width="0.4227%" height="15" fill="rgb(249,76,35)"/><text x="93.0779%" y="575.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (217 samples, 2.87%)</title><rect x="90.4900%" y="693" width="2.8662%" height="15" fill="rgb(207,11,44)"/><text x="90.7400%" y="703.50">&lt;d..</text></g><g><title>sql_parser::parser::parse_statements (8 samples, 0.11%)</title><rect x="93.2506%" y="677" width="0.1057%" height="15" fill="rgb(228,190,49)"/><text x="93.5006%" y="687.50"></text></g><g><title>do_syscall_64 (9 samples, 0.12%)</title><rect x="93.4223%" y="565" width="0.1189%" height="15" fill="rgb(214,173,12)"/><text x="93.6723%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (9 samples, 0.12%)</title><rect x="93.4223%" y="549" width="0.1189%" height="15" fill="rgb(218,26,35)"/><text x="93.6723%" y="559.50"></text></g><g><title>__sys_recvfrom (9 samples, 0.12%)</title><rect x="93.4223%" y="533" width="0.1189%" height="15" fill="rgb(220,200,19)"/><text x="93.6723%" y="543.50"></text></g><g><title>inet_recvmsg (9 samples, 0.12%)</title><rect x="93.4223%" y="517" width="0.1189%" height="15" fill="rgb(239,95,49)"/><text x="93.6723%" y="527.50"></text></g><g><title>tcp_recvmsg (9 samples, 0.12%)</title><rect x="93.4223%" y="501" width="0.1189%" height="15" fill="rgb(235,85,53)"/><text x="93.6723%" y="511.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (13 samples, 0.17%)</title><rect x="93.3959%" y="677" width="0.1717%" height="15" fill="rgb(233,133,31)"/><text x="93.6459%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.15%)</title><rect x="93.4223%" y="661" width="0.1453%" height="15" fill="rgb(218,25,20)"/><text x="93.6723%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 0.15%)</title><rect x="93.4223%" y="645" width="0.1453%" height="15" fill="rgb(252,210,38)"/><text x="93.6723%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.15%)</title><rect x="93.4223%" y="629" width="0.1453%" height="15" fill="rgb(242,134,21)"/><text x="93.6723%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.15%)</title><rect x="93.4223%" y="613" width="0.1453%" height="15" fill="rgb(213,28,48)"/><text x="93.6723%" y="623.50"></text></g><g><title>__libc_recv (11 samples, 0.15%)</title><rect x="93.4223%" y="597" width="0.1453%" height="15" fill="rgb(250,196,2)"/><text x="93.6723%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.15%)</title><rect x="93.4223%" y="581" width="0.1453%" height="15" fill="rgb(227,5,17)"/><text x="93.6723%" y="591.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (14 samples, 0.18%)</title><rect x="93.3959%" y="693" width="0.1849%" height="15" fill="rgb(221,226,24)"/><text x="93.6459%" y="703.50"></text></g><g><title>sock_def_readable (8 samples, 0.11%)</title><rect x="93.8053%" y="197" width="0.1057%" height="15" fill="rgb(211,5,48)"/><text x="94.0553%" y="207.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.11%)</title><rect x="93.8053%" y="181" width="0.1057%" height="15" fill="rgb(219,150,6)"/><text x="94.0553%" y="191.50"></text></g><g><title>__wake_up_common (8 samples, 0.11%)</title><rect x="93.8053%" y="165" width="0.1057%" height="15" fill="rgb(251,46,16)"/><text x="94.0553%" y="175.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 0.24%)</title><rect x="93.6996%" y="325" width="0.2377%" height="15" fill="rgb(220,204,40)"/><text x="93.9496%" y="335.50"></text></g><g><title>ip_rcv (17 samples, 0.22%)</title><rect x="93.7129%" y="309" width="0.2245%" height="15" fill="rgb(211,85,2)"/><text x="93.9629%" y="319.50"></text></g><g><title>ip_local_deliver (16 samples, 0.21%)</title><rect x="93.7261%" y="293" width="0.2113%" height="15" fill="rgb(229,17,7)"/><text x="93.9761%" y="303.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 0.21%)</title><rect x="93.7261%" y="277" width="0.2113%" height="15" fill="rgb(239,72,28)"/><text x="93.9761%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 0.21%)</title><rect x="93.7261%" y="261" width="0.2113%" height="15" fill="rgb(230,47,54)"/><text x="93.9761%" y="271.50"></text></g><g><title>tcp_v4_rcv (15 samples, 0.20%)</title><rect x="93.7393%" y="245" width="0.1981%" height="15" fill="rgb(214,50,8)"/><text x="93.9893%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 0.18%)</title><rect x="93.7525%" y="229" width="0.1849%" height="15" fill="rgb(216,198,43)"/><text x="94.0025%" y="239.50"></text></g><g><title>tcp_rcv_established (14 samples, 0.18%)</title><rect x="93.7525%" y="213" width="0.1849%" height="15" fill="rgb(234,20,35)"/><text x="94.0025%" y="223.50"></text></g><g><title>ip_finish_output2 (24 samples, 0.32%)</title><rect x="93.6336%" y="437" width="0.3170%" height="15" fill="rgb(254,45,19)"/><text x="93.8836%" y="447.50"></text></g><g><title>__local_bh_enable_ip (22 samples, 0.29%)</title><rect x="93.6600%" y="421" width="0.2906%" height="15" fill="rgb(219,14,44)"/><text x="93.9100%" y="431.50"></text></g><g><title>do_softirq (22 samples, 0.29%)</title><rect x="93.6600%" y="405" width="0.2906%" height="15" fill="rgb(217,220,26)"/><text x="93.9100%" y="415.50"></text></g><g><title>do_softirq_own_stack (20 samples, 0.26%)</title><rect x="93.6864%" y="389" width="0.2642%" height="15" fill="rgb(213,158,28)"/><text x="93.9364%" y="399.50"></text></g><g><title>__do_softirq (20 samples, 0.26%)</title><rect x="93.6864%" y="373" width="0.2642%" height="15" fill="rgb(252,51,52)"/><text x="93.9364%" y="383.50"></text></g><g><title>net_rx_action (20 samples, 0.26%)</title><rect x="93.6864%" y="357" width="0.2642%" height="15" fill="rgb(246,89,16)"/><text x="93.9364%" y="367.50"></text></g><g><title>process_backlog (19 samples, 0.25%)</title><rect x="93.6996%" y="341" width="0.2510%" height="15" fill="rgb(216,158,49)"/><text x="93.9496%" y="351.50"></text></g><g><title>__ip_queue_xmit (27 samples, 0.36%)</title><rect x="93.6204%" y="469" width="0.3566%" height="15" fill="rgb(236,107,19)"/><text x="93.8704%" y="479.50"></text></g><g><title>ip_output (26 samples, 0.34%)</title><rect x="93.6336%" y="453" width="0.3434%" height="15" fill="rgb(228,185,30)"/><text x="93.8836%" y="463.50"></text></g><g><title>__tcp_transmit_skb (29 samples, 0.38%)</title><rect x="93.6204%" y="485" width="0.3830%" height="15" fill="rgb(246,134,8)"/><text x="93.8704%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (31 samples, 0.41%)</title><rect x="93.6072%" y="517" width="0.4095%" height="15" fill="rgb(214,143,50)"/><text x="93.8572%" y="527.50"></text></g><g><title>tcp_write_xmit (31 samples, 0.41%)</title><rect x="93.6072%" y="501" width="0.4095%" height="15" fill="rgb(228,75,8)"/><text x="93.8572%" y="511.50"></text></g><g><title>sock_sendmsg (33 samples, 0.44%)</title><rect x="93.6072%" y="565" width="0.4359%" height="15" fill="rgb(207,175,4)"/><text x="93.8572%" y="575.50"></text></g><g><title>tcp_sendmsg (33 samples, 0.44%)</title><rect x="93.6072%" y="549" width="0.4359%" height="15" fill="rgb(205,108,24)"/><text x="93.8572%" y="559.50"></text></g><g><title>tcp_sendmsg_locked (33 samples, 0.44%)</title><rect x="93.6072%" y="533" width="0.4359%" height="15" fill="rgb(244,120,49)"/><text x="93.8572%" y="543.50"></text></g><g><title>do_syscall_64 (36 samples, 0.48%)</title><rect x="93.5940%" y="613" width="0.4755%" height="15" fill="rgb(223,47,38)"/><text x="93.8440%" y="623.50"></text></g><g><title>__x64_sys_sendto (36 samples, 0.48%)</title><rect x="93.5940%" y="597" width="0.4755%" height="15" fill="rgb(229,179,11)"/><text x="93.8440%" y="607.50"></text></g><g><title>__sys_sendto (36 samples, 0.48%)</title><rect x="93.5940%" y="581" width="0.4755%" height="15" fill="rgb(231,122,1)"/><text x="93.8440%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (38 samples, 0.50%)</title><rect x="93.5808%" y="677" width="0.5019%" height="15" fill="rgb(245,119,9)"/><text x="93.8308%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (38 samples, 0.50%)</title><rect x="93.5808%" y="661" width="0.5019%" height="15" fill="rgb(241,163,25)"/><text x="93.8308%" y="671.50"></text></g><g><title>__libc_send (38 samples, 0.50%)</title><rect x="93.5808%" y="645" width="0.5019%" height="15" fill="rgb(217,214,3)"/><text x="93.8308%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (38 samples, 0.50%)</title><rect x="93.5808%" y="629" width="0.5019%" height="15" fill="rgb(240,86,28)"/><text x="93.8308%" y="639.50"></text></g><g><title>decor::Shim::run_on_tcp (274 samples, 3.62%)</title><rect x="90.4768%" y="725" width="3.6191%" height="15" fill="rgb(215,47,9)"/><text x="90.7268%" y="735.50">deco..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (274 samples, 3.62%)</title><rect x="90.4768%" y="709" width="3.6191%" height="15" fill="rgb(252,25,45)"/><text x="90.7268%" y="719.50">msql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (39 samples, 0.52%)</title><rect x="93.5808%" y="693" width="0.5151%" height="15" fill="rgb(251,164,9)"/><text x="93.8308%" y="703.50"></text></g><g><title>__GI___clone (276 samples, 3.65%)</title><rect x="90.4636%" y="837" width="3.6455%" height="15" fill="rgb(233,194,0)"/><text x="90.7136%" y="847.50">__GI..</text></g><g><title>start_thread (276 samples, 3.65%)</title><rect x="90.4636%" y="821" width="3.6455%" height="15" fill="rgb(249,111,24)"/><text x="90.7136%" y="831.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (275 samples, 3.63%)</title><rect x="90.4768%" y="805" width="3.6323%" height="15" fill="rgb(250,223,3)"/><text x="90.7268%" y="815.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (275 samples, 3.63%)</title><rect x="90.4768%" y="789" width="3.6323%" height="15" fill="rgb(236,178,37)"/><text x="90.7268%" y="799.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (275 samples, 3.63%)</title><rect x="90.4768%" y="773" width="3.6323%" height="15" fill="rgb(241,158,50)"/><text x="90.7268%" y="783.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (275 samples, 3.63%)</title><rect x="90.4768%" y="757" width="3.6323%" height="15" fill="rgb(213,121,41)"/><text x="90.7268%" y="767.50">core..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (275 samples, 3.63%)</title><rect x="90.4768%" y="741" width="3.6323%" height="15" fill="rgb(240,92,3)"/><text x="90.7268%" y="751.50">std:..</text></g><g><title>__GI___libc_free (31 samples, 0.41%)</title><rect x="94.1091%" y="837" width="0.4095%" height="15" fill="rgb(205,123,3)"/><text x="94.3591%" y="847.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.20%)</title><rect x="94.5450%" y="837" width="0.1981%" height="15" fill="rgb(205,97,47)"/><text x="94.7950%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.21%)</title><rect x="94.7431%" y="837" width="0.2113%" height="15" fill="rgb(247,152,14)"/><text x="94.9931%" y="847.50"></text></g><g><title>__rdl_realloc (10 samples, 0.13%)</title><rect x="94.9544%" y="837" width="0.1321%" height="15" fill="rgb(248,195,53)"/><text x="95.2044%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (10 samples, 0.13%)</title><rect x="94.9544%" y="821" width="0.1321%" height="15" fill="rgb(226,201,16)"/><text x="95.2044%" y="831.50"></text></g><g><title>_int_free (8 samples, 0.11%)</title><rect x="95.0997%" y="837" width="0.1057%" height="15" fill="rgb(205,98,0)"/><text x="95.3497%" y="847.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (230 samples, 3.04%)</title><rect x="95.3771%" y="357" width="3.0379%" height="15" fill="rgb(214,191,48)"/><text x="95.6271%" y="367.50">__i..</text></g><g><title>native_write_msr (230 samples, 3.04%)</title><rect x="95.3771%" y="341" width="3.0379%" height="15" fill="rgb(237,112,39)"/><text x="95.6271%" y="351.50">nat..</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 3.09%)</title><rect x="95.3375%" y="517" width="3.0907%" height="15" fill="rgb(247,203,27)"/><text x="95.5875%" y="527.50">__x..</text></g><g><title>sched_setaffinity (234 samples, 3.09%)</title><rect x="95.3375%" y="501" width="3.0907%" height="15" fill="rgb(235,124,28)"/><text x="95.5875%" y="511.50">sch..</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 3.09%)</title><rect x="95.3375%" y="485" width="3.0907%" height="15" fill="rgb(208,207,46)"/><text x="95.5875%" y="495.50">__s..</text></g><g><title>stop_one_cpu (234 samples, 3.09%)</title><rect x="95.3375%" y="469" width="3.0907%" height="15" fill="rgb(234,176,4)"/><text x="95.5875%" y="479.50">sto..</text></g><g><title>cpu_stop_queue_work (234 samples, 3.09%)</title><rect x="95.3375%" y="453" width="3.0907%" height="15" fill="rgb(230,133,28)"/><text x="95.5875%" y="463.50">cpu..</text></g><g><title>preempt_schedule_thunk (234 samples, 3.09%)</title><rect x="95.3375%" y="437" width="3.0907%" height="15" fill="rgb(211,137,40)"/><text x="95.5875%" y="447.50">pre..</text></g><g><title>preempt_schedule_common (234 samples, 3.09%)</title><rect x="95.3375%" y="421" width="3.0907%" height="15" fill="rgb(254,35,13)"/><text x="95.5875%" y="431.50">pre..</text></g><g><title>__schedule (234 samples, 3.09%)</title><rect x="95.3375%" y="405" width="3.0907%" height="15" fill="rgb(225,49,51)"/><text x="95.5875%" y="415.50">__s..</text></g><g><title>finish_task_switch (234 samples, 3.09%)</title><rect x="95.3375%" y="389" width="3.0907%" height="15" fill="rgb(251,10,15)"/><text x="95.5875%" y="399.50">fin..</text></g><g><title>__perf_event_task_sched_in (234 samples, 3.09%)</title><rect x="95.3375%" y="373" width="3.0907%" height="15" fill="rgb(228,207,15)"/><text x="95.5875%" y="383.50">__p..</text></g><g><title>hwloc::Topology::new (238 samples, 3.14%)</title><rect x="95.2978%" y="661" width="3.1436%" height="15" fill="rgb(241,99,19)"/><text x="95.5478%" y="671.50">hwl..</text></g><g><title>hwloc_topology_load (238 samples, 3.14%)</title><rect x="95.2978%" y="645" width="3.1436%" height="15" fill="rgb(207,104,49)"/><text x="95.5478%" y="655.50">hwl..</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 3.14%)</title><rect x="95.2978%" y="629" width="3.1436%" height="15" fill="rgb(234,99,18)"/><text x="95.5478%" y="639.50">[li..</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 3.14%)</title><rect x="95.2978%" y="613" width="3.1436%" height="15" fill="rgb(213,191,49)"/><text x="95.5478%" y="623.50">[li..</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 3.14%)</title><rect x="95.2978%" y="597" width="3.1436%" height="15" fill="rgb(210,226,19)"/><text x="95.5478%" y="607.50">[li..</text></g><g><title>hwloc_linux_set_tid_cpubind (236 samples, 3.12%)</title><rect x="95.3243%" y="581" width="3.1172%" height="15" fill="rgb(229,97,18)"/><text x="95.5743%" y="591.50">hwl..</text></g><g><title>__GI___sched_setaffinity_new (235 samples, 3.10%)</title><rect x="95.3375%" y="565" width="3.1039%" height="15" fill="rgb(211,167,15)"/><text x="95.5875%" y="575.50">__G..</text></g><g><title>entry_SYSCALL_64 (235 samples, 3.10%)</title><rect x="95.3375%" y="549" width="3.1039%" height="15" fill="rgb(210,169,34)"/><text x="95.5875%" y="559.50">ent..</text></g><g><title>do_syscall_64 (235 samples, 3.10%)</title><rect x="95.3375%" y="533" width="3.1039%" height="15" fill="rgb(241,121,31)"/><text x="95.5875%" y="543.50">do_..</text></g><g><title>__libc_start_main (240 samples, 3.17%)</title><rect x="95.2846%" y="821" width="3.1700%" height="15" fill="rgb(232,40,11)"/><text x="95.5346%" y="831.50">__l..</text></g><g><title>main (240 samples, 3.17%)</title><rect x="95.2846%" y="805" width="3.1700%" height="15" fill="rgb(205,86,26)"/><text x="95.5346%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (240 samples, 3.17%)</title><rect x="95.2846%" y="789" width="3.1700%" height="15" fill="rgb(231,126,28)"/><text x="95.5346%" y="799.50">std..</text></g><g><title>std::panic::catch_unwind (240 samples, 3.17%)</title><rect x="95.2846%" y="773" width="3.1700%" height="15" fill="rgb(219,221,18)"/><text x="95.5346%" y="783.50">std..</text></g><g><title>std::panicking::try (240 samples, 3.17%)</title><rect x="95.2846%" y="757" width="3.1700%" height="15" fill="rgb(211,40,0)"/><text x="95.5346%" y="767.50">std..</text></g><g><title>std::panicking::try::do_call (240 samples, 3.17%)</title><rect x="95.2846%" y="741" width="3.1700%" height="15" fill="rgb(239,85,43)"/><text x="95.5346%" y="751.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (240 samples, 3.17%)</title><rect x="95.2846%" y="725" width="3.1700%" height="15" fill="rgb(231,55,21)"/><text x="95.5346%" y="735.50">cor..</text></g><g><title>std::rt::lang_start::_{{closure}} (240 samples, 3.17%)</title><rect x="95.2846%" y="709" width="3.1700%" height="15" fill="rgb(225,184,43)"/><text x="95.5346%" y="719.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (240 samples, 3.17%)</title><rect x="95.2846%" y="693" width="3.1700%" height="15" fill="rgb(251,158,41)"/><text x="95.5346%" y="703.50">std..</text></g><g><title>lobsters::main (240 samples, 3.17%)</title><rect x="95.2846%" y="677" width="3.1700%" height="15" fill="rgb(234,159,37)"/><text x="95.5346%" y="687.50">lob..</text></g><g><title>_start (241 samples, 3.18%)</title><rect x="95.2846%" y="837" width="3.1832%" height="15" fill="rgb(216,204,22)"/><text x="95.5346%" y="847.50">_st..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.37%)</title><rect x="98.4678%" y="837" width="0.3698%" height="15" fill="rgb(214,17,3)"/><text x="98.7178%" y="847.50"></text></g><g><title>anon.5d78f01d0c76bb6b8aa47fe516d3530c.58.llvm.16501999531583085355 (28 samples, 0.37%)</title><rect x="98.9830%" y="837" width="0.3698%" height="15" fill="rgb(212,111,17)"/><text x="99.2330%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.37%)</title><rect x="98.9830%" y="821" width="0.3698%" height="15" fill="rgb(221,157,24)"/><text x="99.2330%" y="831.50"></text></g><g><title>core::fmt::write (24 samples, 0.32%)</title><rect x="99.3528%" y="837" width="0.3170%" height="15" fill="rgb(252,16,13)"/><text x="99.6028%" y="847.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.12%)</title><rect x="99.7755%" y="837" width="0.1189%" height="15" fill="rgb(221,62,2)"/><text x="100.0255%" y="847.50"></text></g><g><title>lobsters (7,565 samples, 99.92%)</title><rect x="0.0000%" y="853" width="99.9208%" height="15" fill="rgb(247,87,22)"/><text x="0.2500%" y="863.50">lobsters</text></g><g><title>all (7,571 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(215,73,9)"/><text x="0.2500%" y="879.50"></text></g></svg></svg>