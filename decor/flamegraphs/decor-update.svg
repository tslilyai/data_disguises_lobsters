<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[stack]] (2 samples, 0.13%)</title><rect x="0.0645%" y="853" width="0.1290%" height="15" fill="rgb(227,0,7)"/><text x="0.3145%" y="863.50"></text></g><g><title>__libc_send (2 samples, 0.13%)</title><rect x="0.0645%" y="837" width="0.1290%" height="15" fill="rgb(217,0,24)"/><text x="0.3145%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.13%)</title><rect x="0.0645%" y="821" width="0.1290%" height="15" fill="rgb(221,193,54)"/><text x="0.3145%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.45%)</title><rect x="0.1935%" y="837" width="0.4516%" height="15" fill="rgb(248,212,6)"/><text x="0.4435%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.13%)</title><rect x="0.8387%" y="837" width="0.1290%" height="15" fill="rgb(208,68,35)"/><text x="1.0887%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="1.0968%" y="837" width="0.1290%" height="15" fill="rgb(232,128,0)"/><text x="1.3468%" y="847.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.13%)</title><rect x="1.2903%" y="837" width="0.1290%" height="15" fill="rgb(207,160,47)"/><text x="1.5403%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.19%)</title><rect x="1.6129%" y="837" width="0.1935%" height="15" fill="rgb(228,23,34)"/><text x="1.8629%" y="847.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.45%)</title><rect x="1.8065%" y="837" width="0.4516%" height="15" fill="rgb(218,30,26)"/><text x="2.0565%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.32%)</title><rect x="2.3871%" y="837" width="0.3226%" height="15" fill="rgb(220,122,19)"/><text x="2.6371%" y="847.50"></text></g><g><title>__rdl_realloc (6 samples, 0.39%)</title><rect x="2.7742%" y="837" width="0.3871%" height="15" fill="rgb(250,228,42)"/><text x="3.0242%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.32%)</title><rect x="2.8387%" y="821" width="0.3226%" height="15" fill="rgb(240,193,28)"/><text x="3.0887%" y="831.50"></text></g><g><title>_int_free (7 samples, 0.45%)</title><rect x="3.1613%" y="837" width="0.4516%" height="15" fill="rgb(216,20,37)"/><text x="3.4113%" y="847.50"></text></g><g><title>_int_malloc (3 samples, 0.19%)</title><rect x="3.6129%" y="837" width="0.1935%" height="15" fill="rgb(206,188,39)"/><text x="3.8629%" y="847.50"></text></g><g><title>__libc_recv (2 samples, 0.13%)</title><rect x="3.6774%" y="821" width="0.1290%" height="15" fill="rgb(217,207,13)"/><text x="3.9274%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.13%)</title><rect x="3.6774%" y="805" width="0.1290%" height="15" fill="rgb(231,73,38)"/><text x="3.9274%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.77%)</title><rect x="3.8065%" y="837" width="0.7742%" height="15" fill="rgb(225,20,46)"/><text x="4.0565%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.13%)</title><rect x="4.7097%" y="837" width="0.1290%" height="15" fill="rgb(210,31,41)"/><text x="4.9597%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.13%)</title><rect x="4.8387%" y="837" width="0.1290%" height="15" fill="rgb(221,200,47)"/><text x="5.0887%" y="847.50"></text></g><g><title>core::fmt::write (9 samples, 0.58%)</title><rect x="4.9677%" y="837" width="0.5806%" height="15" fill="rgb(226,26,5)"/><text x="5.2177%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="5.5484%" y="837" width="0.1290%" height="15" fill="rgb(249,33,26)"/><text x="5.7984%" y="847.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.13%)</title><rect x="5.8065%" y="837" width="0.1290%" height="15" fill="rgb(235,183,28)"/><text x="6.0565%" y="847.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (2 samples, 0.13%)</title><rect x="6.0000%" y="837" width="0.1290%" height="15" fill="rgb(221,5,38)"/><text x="6.2500%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.13%)</title><rect x="6.1935%" y="837" width="0.1290%" height="15" fill="rgb(247,18,42)"/><text x="6.4435%" y="847.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.32%)</title><rect x="6.3871%" y="837" width="0.3226%" height="15" fill="rgb(241,131,45)"/><text x="6.6371%" y="847.50"></text></g><g><title>[anon] (102 samples, 6.58%)</title><rect x="0.1935%" y="853" width="6.5806%" height="15" fill="rgb(249,31,29)"/><text x="0.4435%" y="863.50">[anon]</text></g><g><title>_int_realloc (2 samples, 0.13%)</title><rect x="6.9032%" y="837" width="0.1290%" height="15" fill="rgb(225,111,53)"/><text x="7.1532%" y="847.50"></text></g><g><title>[lobsters] (7 samples, 0.45%)</title><rect x="6.7742%" y="853" width="0.4516%" height="15" fill="rgb(238,160,17)"/><text x="7.0242%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="7.5484%" y="789" width="0.1290%" height="15" fill="rgb(214,148,48)"/><text x="7.7984%" y="799.50"></text></g><g><title>_int_free (3 samples, 0.19%)</title><rect x="7.8710%" y="789" width="0.1935%" height="15" fill="rgb(232,36,49)"/><text x="8.1210%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="8.0645%" y="789" width="0.1290%" height="15" fill="rgb(209,103,24)"/><text x="8.3145%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.19%)</title><rect x="8.1935%" y="789" width="0.1935%" height="15" fill="rgb(229,88,8)"/><text x="8.4435%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.19%)</title><rect x="8.1935%" y="773" width="0.1935%" height="15" fill="rgb(213,181,19)"/><text x="8.4435%" y="783.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.19%)</title><rect x="8.1935%" y="757" width="0.1935%" height="15" fill="rgb(254,191,54)"/><text x="8.4435%" y="767.50"></text></g><g><title>_int_malloc (3 samples, 0.19%)</title><rect x="8.1935%" y="741" width="0.1935%" height="15" fill="rgb(241,83,37)"/><text x="8.4435%" y="751.50"></text></g><g><title>sysmalloc (3 samples, 0.19%)</title><rect x="8.1935%" y="725" width="0.1935%" height="15" fill="rgb(233,36,39)"/><text x="8.4435%" y="735.50"></text></g><g><title>page_fault (2 samples, 0.13%)</title><rect x="8.2581%" y="709" width="0.1290%" height="15" fill="rgb(226,3,54)"/><text x="8.5081%" y="719.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="8.2581%" y="693" width="0.1290%" height="15" fill="rgb(245,192,40)"/><text x="8.5081%" y="703.50"></text></g><g><title>handle_mm_fault (2 samples, 0.13%)</title><rect x="8.2581%" y="677" width="0.1290%" height="15" fill="rgb(238,167,29)"/><text x="8.5081%" y="687.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="8.2581%" y="661" width="0.1290%" height="15" fill="rgb(232,182,51)"/><text x="8.5081%" y="671.50"></text></g><g><title>__lru_cache_add (2 samples, 0.13%)</title><rect x="8.2581%" y="645" width="0.1290%" height="15" fill="rgb(231,60,39)"/><text x="8.5081%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (3 samples, 0.19%)</title><rect x="8.3871%" y="773" width="0.1935%" height="15" fill="rgb(208,69,12)"/><text x="8.6371%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="8.4516%" y="757" width="0.1290%" height="15" fill="rgb(235,93,37)"/><text x="8.7016%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.13%)</title><rect x="8.4516%" y="741" width="0.1290%" height="15" fill="rgb(213,116,39)"/><text x="8.7016%" y="751.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.19%)</title><rect x="8.5806%" y="709" width="0.1935%" height="15" fill="rgb(222,207,29)"/><text x="8.8306%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 0.19%)</title><rect x="8.5806%" y="693" width="0.1935%" height="15" fill="rgb(206,96,30)"/><text x="8.8306%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.52%)</title><rect x="8.5806%" y="725" width="0.5161%" height="15" fill="rgb(218,138,4)"/><text x="8.8306%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.26%)</title><rect x="8.8387%" y="709" width="0.2581%" height="15" fill="rgb(250,191,14)"/><text x="9.0887%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.19%)</title><rect x="8.9032%" y="693" width="0.1935%" height="15" fill="rgb(239,60,40)"/><text x="9.1532%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.19%)</title><rect x="8.9032%" y="677" width="0.1935%" height="15" fill="rgb(206,27,48)"/><text x="9.1532%" y="687.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="8.9677%" y="661" width="0.1290%" height="15" fill="rgb(225,35,8)"/><text x="9.2177%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.58%)</title><rect x="8.5806%" y="757" width="0.5806%" height="15" fill="rgb(250,213,24)"/><text x="8.8306%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.58%)</title><rect x="8.5806%" y="741" width="0.5806%" height="15" fill="rgb(247,123,22)"/><text x="8.8306%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (10 samples, 0.65%)</title><rect x="8.5806%" y="773" width="0.6452%" height="15" fill="rgb(231,138,38)"/><text x="8.8306%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="9.4194%" y="741" width="0.1290%" height="15" fill="rgb(231,145,46)"/><text x="9.6694%" y="751.50"></text></g><g><title>__GI___libc_free (5 samples, 0.32%)</title><rect x="9.9355%" y="725" width="0.3226%" height="15" fill="rgb(251,118,11)"/><text x="10.1855%" y="735.50"></text></g><g><title>__GI___libc_realloc (34 samples, 2.19%)</title><rect x="10.2581%" y="725" width="2.1935%" height="15" fill="rgb(217,147,25)"/><text x="10.5081%" y="735.50">_..</text></g><g><title>_int_realloc (14 samples, 0.90%)</title><rect x="11.5484%" y="709" width="0.9032%" height="15" fill="rgb(247,81,37)"/><text x="11.7984%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.32%)</title><rect x="12.4516%" y="725" width="0.3226%" height="15" fill="rgb(209,12,38)"/><text x="12.7016%" y="735.50"></text></g><g><title>__rdl_realloc (2 samples, 0.13%)</title><rect x="12.7742%" y="725" width="0.1290%" height="15" fill="rgb(227,1,9)"/><text x="13.0242%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.13%)</title><rect x="12.7742%" y="709" width="0.1290%" height="15" fill="rgb(248,47,43)"/><text x="13.0242%" y="719.50"></text></g><g><title>_int_free (7 samples, 0.45%)</title><rect x="12.9677%" y="725" width="0.4516%" height="15" fill="rgb(221,10,30)"/><text x="13.2177%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="13.4194%" y="725" width="0.1290%" height="15" fill="rgb(210,229,1)"/><text x="13.6694%" y="735.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="13.4194%" y="709" width="0.1290%" height="15" fill="rgb(222,148,37)"/><text x="13.6694%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.39%)</title><rect x="14.1935%" y="693" width="0.3871%" height="15" fill="rgb(234,67,33)"/><text x="14.4435%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.84%)</title><rect x="13.8710%" y="709" width="0.8387%" height="15" fill="rgb(247,98,35)"/><text x="14.1210%" y="719.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.13%)</title><rect x="14.7097%" y="709" width="0.1290%" height="15" fill="rgb(247,138,52)"/><text x="14.9597%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.13%)</title><rect x="14.8387%" y="709" width="0.1290%" height="15" fill="rgb(213,79,30)"/><text x="15.0887%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (89 samples, 5.74%)</title><rect x="9.2903%" y="757" width="5.7419%" height="15" fill="rgb(246,177,23)"/><text x="9.5403%" y="767.50">&lt;sql_pa..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (84 samples, 5.42%)</title><rect x="9.6129%" y="741" width="5.4194%" height="15" fill="rgb(230,62,27)"/><text x="9.8629%" y="751.50">sql_par..</text></g><g><title>core::fmt::write (23 samples, 1.48%)</title><rect x="13.5484%" y="725" width="1.4839%" height="15" fill="rgb(216,154,8)"/><text x="13.7984%" y="735.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.13%)</title><rect x="15.1613%" y="693" width="0.1290%" height="15" fill="rgb(244,35,45)"/><text x="15.4113%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.52%)</title><rect x="15.0968%" y="741" width="0.5161%" height="15" fill="rgb(251,115,12)"/><text x="15.3468%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.52%)</title><rect x="15.0968%" y="725" width="0.5161%" height="15" fill="rgb(240,54,50)"/><text x="15.3468%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.52%)</title><rect x="15.0968%" y="709" width="0.5161%" height="15" fill="rgb(233,84,52)"/><text x="15.3468%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.32%)</title><rect x="15.2903%" y="693" width="0.3226%" height="15" fill="rgb(207,117,47)"/><text x="15.5403%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.26%)</title><rect x="15.3548%" y="677" width="0.2581%" height="15" fill="rgb(249,43,39)"/><text x="15.6048%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.26%)</title><rect x="15.3548%" y="661" width="0.2581%" height="15" fill="rgb(209,38,44)"/><text x="15.6048%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="15.4839%" y="645" width="0.1290%" height="15" fill="rgb(236,212,23)"/><text x="15.7339%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="15.6129%" y="741" width="0.1290%" height="15" fill="rgb(242,79,21)"/><text x="15.8629%" y="751.50"></text></g><g><title>core::fmt::write (118 samples, 7.61%)</title><rect x="8.3871%" y="789" width="7.6129%" height="15" fill="rgb(211,96,35)"/><text x="8.6371%" y="799.50">core::fmt:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (105 samples, 6.77%)</title><rect x="9.2258%" y="773" width="6.7742%" height="15" fill="rgb(253,215,40)"/><text x="9.4758%" y="783.50">&lt;sql_pars..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.90%)</title><rect x="15.0968%" y="757" width="0.9032%" height="15" fill="rgb(211,81,21)"/><text x="15.3468%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.26%)</title><rect x="15.7419%" y="741" width="0.2581%" height="15" fill="rgb(208,190,38)"/><text x="15.9919%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.19%)</title><rect x="15.8065%" y="725" width="0.1935%" height="15" fill="rgb(235,213,38)"/><text x="16.0565%" y="735.50"></text></g><g><title>_int_free (3 samples, 0.19%)</title><rect x="16.0645%" y="773" width="0.1935%" height="15" fill="rgb(237,122,38)"/><text x="16.3145%" y="783.50"></text></g><g><title>__GI___libc_free (2 samples, 0.13%)</title><rect x="16.3226%" y="757" width="0.1290%" height="15" fill="rgb(244,218,35)"/><text x="16.5726%" y="767.50"></text></g><g><title>_int_free (9 samples, 0.58%)</title><rect x="16.5161%" y="757" width="0.5806%" height="15" fill="rgb(240,68,47)"/><text x="16.7661%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (26 samples, 1.68%)</title><rect x="16.0000%" y="789" width="1.6774%" height="15" fill="rgb(210,16,53)"/><text x="16.2500%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.42%)</title><rect x="16.2581%" y="773" width="1.4194%" height="15" fill="rgb(235,124,12)"/><text x="16.5081%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.58%)</title><rect x="17.0968%" y="757" width="0.5806%" height="15" fill="rgb(224,169,11)"/><text x="17.3468%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.32%)</title><rect x="17.7419%" y="741" width="0.3226%" height="15" fill="rgb(250,166,2)"/><text x="17.9919%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.32%)</title><rect x="17.7419%" y="725" width="0.3226%" height="15" fill="rgb(242,216,29)"/><text x="17.9919%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.26%)</title><rect x="17.8065%" y="709" width="0.2581%" height="15" fill="rgb(230,116,27)"/><text x="18.0565%" y="719.50"></text></g><g><title>core::fmt::write (6 samples, 0.39%)</title><rect x="17.7419%" y="773" width="0.3871%" height="15" fill="rgb(228,99,48)"/><text x="17.9919%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (6 samples, 0.39%)</title><rect x="17.7419%" y="757" width="0.3871%" height="15" fill="rgb(253,11,6)"/><text x="17.9919%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (10 samples, 0.65%)</title><rect x="17.7419%" y="789" width="0.6452%" height="15" fill="rgb(247,143,39)"/><text x="17.9919%" y="799.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (4 samples, 0.26%)</title><rect x="18.1290%" y="773" width="0.2581%" height="15" fill="rgb(236,97,10)"/><text x="18.3790%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (171 samples, 11.03%)</title><rect x="7.4194%" y="821" width="11.0323%" height="15" fill="rgb(233,208,19)"/><text x="7.6694%" y="831.50">decor::query_tra..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (171 samples, 11.03%)</title><rect x="7.4194%" y="805" width="11.0323%" height="15" fill="rgb(216,164,2)"/><text x="7.6694%" y="815.50">decor::query_tra..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (174 samples, 11.23%)</title><rect x="7.4194%" y="837" width="11.2258%" height="15" fill="rgb(220,129,5)"/><text x="7.6694%" y="847.50">&lt;decor::Shim as m..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.19%)</title><rect x="18.4516%" y="821" width="0.1935%" height="15" fill="rgb(242,17,10)"/><text x="18.7016%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.19%)</title><rect x="18.4516%" y="805" width="0.1935%" height="15" fill="rgb(242,107,0)"/><text x="18.7016%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (3 samples, 0.19%)</title><rect x="18.4516%" y="789" width="0.1935%" height="15" fill="rgb(251,28,31)"/><text x="18.7016%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.13%)</title><rect x="18.5161%" y="773" width="0.1290%" height="15" fill="rgb(233,223,10)"/><text x="18.7661%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.13%)</title><rect x="18.5161%" y="757" width="0.1290%" height="15" fill="rgb(215,21,27)"/><text x="18.7661%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (2 samples, 0.13%)</title><rect x="18.8387%" y="837" width="0.1290%" height="15" fill="rgb(232,23,21)"/><text x="19.0887%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="18.9677%" y="837" width="0.1290%" height="15" fill="rgb(244,5,23)"/><text x="19.2177%" y="847.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.13%)</title><rect x="19.8710%" y="357" width="0.1290%" height="15" fill="rgb(226,81,46)"/><text x="20.1210%" y="367.50"></text></g><g><title>enqueue_task (2 samples, 0.13%)</title><rect x="20.3226%" y="69" width="0.1290%" height="15" fill="rgb(247,70,30)"/><text x="20.5726%" y="79.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.19%)</title><rect x="20.4516%" y="69" width="0.1935%" height="15" fill="rgb(212,68,19)"/><text x="20.7016%" y="79.50"></text></g><g><title>enqueue_entity (3 samples, 0.19%)</title><rect x="20.4516%" y="53" width="0.1935%" height="15" fill="rgb(240,187,13)"/><text x="20.7016%" y="63.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="20.5161%" y="37" width="0.1290%" height="15" fill="rgb(223,113,26)"/><text x="20.7661%" y="47.50"></text></g><g><title>sock_def_readable (7 samples, 0.45%)</title><rect x="20.2581%" y="133" width="0.4516%" height="15" fill="rgb(206,192,2)"/><text x="20.5081%" y="143.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.45%)</title><rect x="20.2581%" y="117" width="0.4516%" height="15" fill="rgb(241,108,4)"/><text x="20.5081%" y="127.50"></text></g><g><title>__wake_up_common (7 samples, 0.45%)</title><rect x="20.2581%" y="101" width="0.4516%" height="15" fill="rgb(247,173,49)"/><text x="20.5081%" y="111.50"></text></g><g><title>try_to_wake_up (7 samples, 0.45%)</title><rect x="20.2581%" y="85" width="0.4516%" height="15" fill="rgb(224,114,35)"/><text x="20.5081%" y="95.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="20.8387%" y="117" width="0.1290%" height="15" fill="rgb(245,159,27)"/><text x="21.0887%" y="127.50"></text></g><g><title>tcp_ack (5 samples, 0.32%)</title><rect x="20.7097%" y="133" width="0.3226%" height="15" fill="rgb(245,172,44)"/><text x="20.9597%" y="143.50"></text></g><g><title>__ip_queue_xmit (23 samples, 1.48%)</title><rect x="19.6774%" y="405" width="1.4839%" height="15" fill="rgb(236,23,11)"/><text x="19.9274%" y="415.50"></text></g><g><title>ip_output (23 samples, 1.48%)</title><rect x="19.6774%" y="389" width="1.4839%" height="15" fill="rgb(205,117,38)"/><text x="19.9274%" y="399.50"></text></g><g><title>ip_finish_output2 (22 samples, 1.42%)</title><rect x="19.7419%" y="373" width="1.4194%" height="15" fill="rgb(237,72,25)"/><text x="19.9919%" y="383.50"></text></g><g><title>__local_bh_enable_ip (18 samples, 1.16%)</title><rect x="20.0000%" y="357" width="1.1613%" height="15" fill="rgb(244,70,9)"/><text x="20.2500%" y="367.50"></text></g><g><title>do_softirq (18 samples, 1.16%)</title><rect x="20.0000%" y="341" width="1.1613%" height="15" fill="rgb(217,125,39)"/><text x="20.2500%" y="351.50"></text></g><g><title>do_softirq_own_stack (18 samples, 1.16%)</title><rect x="20.0000%" y="325" width="1.1613%" height="15" fill="rgb(235,36,10)"/><text x="20.2500%" y="335.50"></text></g><g><title>__do_softirq (18 samples, 1.16%)</title><rect x="20.0000%" y="309" width="1.1613%" height="15" fill="rgb(251,123,47)"/><text x="20.2500%" y="319.50"></text></g><g><title>net_rx_action (18 samples, 1.16%)</title><rect x="20.0000%" y="293" width="1.1613%" height="15" fill="rgb(221,13,13)"/><text x="20.2500%" y="303.50"></text></g><g><title>process_backlog (18 samples, 1.16%)</title><rect x="20.0000%" y="277" width="1.1613%" height="15" fill="rgb(238,131,9)"/><text x="20.2500%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 1.16%)</title><rect x="20.0000%" y="261" width="1.1613%" height="15" fill="rgb(211,50,8)"/><text x="20.2500%" y="271.50"></text></g><g><title>ip_rcv (18 samples, 1.16%)</title><rect x="20.0000%" y="245" width="1.1613%" height="15" fill="rgb(245,182,24)"/><text x="20.2500%" y="255.50"></text></g><g><title>ip_local_deliver (18 samples, 1.16%)</title><rect x="20.0000%" y="229" width="1.1613%" height="15" fill="rgb(242,14,37)"/><text x="20.2500%" y="239.50"></text></g><g><title>ip_local_deliver_finish (18 samples, 1.16%)</title><rect x="20.0000%" y="213" width="1.1613%" height="15" fill="rgb(246,228,12)"/><text x="20.2500%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (18 samples, 1.16%)</title><rect x="20.0000%" y="197" width="1.1613%" height="15" fill="rgb(213,55,15)"/><text x="20.2500%" y="207.50"></text></g><g><title>tcp_v4_rcv (17 samples, 1.10%)</title><rect x="20.0645%" y="181" width="1.0968%" height="15" fill="rgb(209,9,3)"/><text x="20.3145%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 0.97%)</title><rect x="20.1935%" y="165" width="0.9677%" height="15" fill="rgb(230,59,30)"/><text x="20.4435%" y="175.50"></text></g><g><title>tcp_rcv_established (15 samples, 0.97%)</title><rect x="20.1935%" y="149" width="0.9677%" height="15" fill="rgb(209,121,21)"/><text x="20.4435%" y="159.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.13%)</title><rect x="21.0323%" y="133" width="0.1290%" height="15" fill="rgb(220,109,13)"/><text x="21.2823%" y="143.50"></text></g><g><title>__tcp_transmit_skb (24 samples, 1.55%)</title><rect x="19.6774%" y="421" width="1.5484%" height="15" fill="rgb(232,18,1)"/><text x="19.9274%" y="431.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.13%)</title><rect x="21.2258%" y="421" width="0.1290%" height="15" fill="rgb(215,41,42)"/><text x="21.4758%" y="431.50"></text></g><g><title>sk_reset_timer (2 samples, 0.13%)</title><rect x="21.2258%" y="405" width="0.1290%" height="15" fill="rgb(224,123,36)"/><text x="21.4758%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (28 samples, 1.81%)</title><rect x="19.6129%" y="453" width="1.8065%" height="15" fill="rgb(240,125,3)"/><text x="19.8629%" y="463.50">_..</text></g><g><title>tcp_write_xmit (28 samples, 1.81%)</title><rect x="19.6129%" y="437" width="1.8065%" height="15" fill="rgb(205,98,50)"/><text x="19.8629%" y="447.50">t..</text></g><g><title>entry_SYSCALL_64 (34 samples, 2.19%)</title><rect x="19.4194%" y="565" width="2.1935%" height="15" fill="rgb(205,185,37)"/><text x="19.6694%" y="575.50">e..</text></g><g><title>do_syscall_64 (34 samples, 2.19%)</title><rect x="19.4194%" y="549" width="2.1935%" height="15" fill="rgb(238,207,15)"/><text x="19.6694%" y="559.50">d..</text></g><g><title>__x64_sys_sendto (34 samples, 2.19%)</title><rect x="19.4194%" y="533" width="2.1935%" height="15" fill="rgb(213,199,42)"/><text x="19.6694%" y="543.50">_..</text></g><g><title>__sys_sendto (34 samples, 2.19%)</title><rect x="19.4194%" y="517" width="2.1935%" height="15" fill="rgb(235,201,11)"/><text x="19.6694%" y="527.50">_..</text></g><g><title>sock_sendmsg (33 samples, 2.13%)</title><rect x="19.4839%" y="501" width="2.1290%" height="15" fill="rgb(207,46,11)"/><text x="19.7339%" y="511.50">s..</text></g><g><title>tcp_sendmsg (33 samples, 2.13%)</title><rect x="19.4839%" y="485" width="2.1290%" height="15" fill="rgb(241,35,35)"/><text x="19.7339%" y="495.50">t..</text></g><g><title>tcp_sendmsg_locked (32 samples, 2.06%)</title><rect x="19.5484%" y="469" width="2.0645%" height="15" fill="rgb(243,32,47)"/><text x="19.7984%" y="479.50">t..</text></g><g><title>__libc_start_main (36 samples, 2.32%)</title><rect x="19.3548%" y="837" width="2.3226%" height="15" fill="rgb(247,202,23)"/><text x="19.6048%" y="847.50">_..</text></g><g><title>main (36 samples, 2.32%)</title><rect x="19.3548%" y="821" width="2.3226%" height="15" fill="rgb(219,102,11)"/><text x="19.6048%" y="831.50">m..</text></g><g><title>std::rt::lang_start_internal (36 samples, 2.32%)</title><rect x="19.3548%" y="805" width="2.3226%" height="15" fill="rgb(243,110,44)"/><text x="19.6048%" y="815.50">s..</text></g><g><title>std::panic::catch_unwind (36 samples, 2.32%)</title><rect x="19.3548%" y="789" width="2.3226%" height="15" fill="rgb(222,74,54)"/><text x="19.6048%" y="799.50">s..</text></g><g><title>std::panicking::try (36 samples, 2.32%)</title><rect x="19.3548%" y="773" width="2.3226%" height="15" fill="rgb(216,99,12)"/><text x="19.6048%" y="783.50">s..</text></g><g><title>std::panicking::try::do_call (36 samples, 2.32%)</title><rect x="19.3548%" y="757" width="2.3226%" height="15" fill="rgb(226,22,26)"/><text x="19.6048%" y="767.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (36 samples, 2.32%)</title><rect x="19.3548%" y="741" width="2.3226%" height="15" fill="rgb(217,163,10)"/><text x="19.6048%" y="751.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (36 samples, 2.32%)</title><rect x="19.3548%" y="725" width="2.3226%" height="15" fill="rgb(213,25,53)"/><text x="19.6048%" y="735.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 2.32%)</title><rect x="19.3548%" y="709" width="2.3226%" height="15" fill="rgb(252,105,26)"/><text x="19.6048%" y="719.50">s..</text></g><g><title>lobsters::main (36 samples, 2.32%)</title><rect x="19.3548%" y="693" width="2.3226%" height="15" fill="rgb(220,39,43)"/><text x="19.6048%" y="703.50">l..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (35 samples, 2.26%)</title><rect x="19.4194%" y="677" width="2.2581%" height="15" fill="rgb(229,68,48)"/><text x="19.6694%" y="687.50">m..</text></g><g><title>mysql::conn::Conn::_query (35 samples, 2.26%)</title><rect x="19.4194%" y="661" width="2.2581%" height="15" fill="rgb(252,8,32)"/><text x="19.6694%" y="671.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (35 samples, 2.26%)</title><rect x="19.4194%" y="645" width="2.2581%" height="15" fill="rgb(223,20,43)"/><text x="19.6694%" y="655.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (35 samples, 2.26%)</title><rect x="19.4194%" y="629" width="2.2581%" height="15" fill="rgb(229,81,49)"/><text x="19.6694%" y="639.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (35 samples, 2.26%)</title><rect x="19.4194%" y="613" width="2.2581%" height="15" fill="rgb(236,28,36)"/><text x="19.6694%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (35 samples, 2.26%)</title><rect x="19.4194%" y="597" width="2.2581%" height="15" fill="rgb(249,185,26)"/><text x="19.6694%" y="607.50">s..</text></g><g><title>__libc_send (35 samples, 2.26%)</title><rect x="19.4194%" y="581" width="2.2581%" height="15" fill="rgb(249,174,33)"/><text x="19.6694%" y="591.50">_..</text></g><g><title>_int_free (4 samples, 0.26%)</title><rect x="21.8065%" y="837" width="0.2581%" height="15" fill="rgb(233,201,37)"/><text x="22.0565%" y="847.50"></text></g><g><title>_int_realloc (8 samples, 0.52%)</title><rect x="22.1290%" y="837" width="0.5161%" height="15" fill="rgb(221,78,26)"/><text x="22.3790%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.13%)</title><rect x="22.6452%" y="837" width="0.1290%" height="15" fill="rgb(250,127,30)"/><text x="22.8952%" y="847.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.13%)</title><rect x="22.7742%" y="837" width="0.1290%" height="15" fill="rgb(230,49,44)"/><text x="23.0242%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.13%)</title><rect x="22.9032%" y="837" width="0.1290%" height="15" fill="rgb(229,67,23)"/><text x="23.1532%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.13%)</title><rect x="23.0968%" y="837" width="0.1290%" height="15" fill="rgb(249,83,47)"/><text x="23.3468%" y="847.50"></text></g><g><title>core::fmt::write (5 samples, 0.32%)</title><rect x="23.2903%" y="837" width="0.3226%" height="15" fill="rgb(215,43,3)"/><text x="23.5403%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="23.6129%" y="837" width="0.1290%" height="15" fill="rgb(238,154,13)"/><text x="23.8629%" y="847.50"></text></g><g><title>lock_sock_nested (2 samples, 0.13%)</title><rect x="24.0645%" y="565" width="0.1290%" height="15" fill="rgb(219,56,2)"/><text x="24.3145%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.13%)</title><rect x="24.0645%" y="549" width="0.1290%" height="15" fill="rgb(233,0,4)"/><text x="24.3145%" y="559.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.26%)</title><rect x="24.5161%" y="453" width="0.2581%" height="15" fill="rgb(235,30,7)"/><text x="24.7661%" y="463.50"></text></g><g><title>sock_put (2 samples, 0.13%)</title><rect x="25.4839%" y="261" width="0.1290%" height="15" fill="rgb(250,79,13)"/><text x="25.7339%" y="271.50"></text></g><g><title>enqueue_task (3 samples, 0.19%)</title><rect x="25.8065%" y="149" width="0.1935%" height="15" fill="rgb(211,146,34)"/><text x="26.0565%" y="159.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.26%)</title><rect x="26.0000%" y="149" width="0.2581%" height="15" fill="rgb(228,22,38)"/><text x="26.2500%" y="159.50"></text></g><g><title>enqueue_entity (2 samples, 0.13%)</title><rect x="26.1290%" y="133" width="0.1290%" height="15" fill="rgb(235,168,5)"/><text x="26.3790%" y="143.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="26.1290%" y="117" width="0.1290%" height="15" fill="rgb(221,155,16)"/><text x="26.3790%" y="127.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.19%)</title><rect x="26.2581%" y="149" width="0.1935%" height="15" fill="rgb(215,215,53)"/><text x="26.5081%" y="159.50"></text></g><g><title>sock_def_readable (15 samples, 0.97%)</title><rect x="25.6774%" y="229" width="0.9677%" height="15" fill="rgb(223,4,10)"/><text x="25.9274%" y="239.50"></text></g><g><title>__wake_up_common_lock (13 samples, 0.84%)</title><rect x="25.8065%" y="213" width="0.8387%" height="15" fill="rgb(234,103,6)"/><text x="26.0565%" y="223.50"></text></g><g><title>__wake_up_common (13 samples, 0.84%)</title><rect x="25.8065%" y="197" width="0.8387%" height="15" fill="rgb(227,97,0)"/><text x="26.0565%" y="207.50"></text></g><g><title>pollwake (13 samples, 0.84%)</title><rect x="25.8065%" y="181" width="0.8387%" height="15" fill="rgb(234,150,53)"/><text x="26.0565%" y="191.50"></text></g><g><title>try_to_wake_up (13 samples, 0.84%)</title><rect x="25.8065%" y="165" width="0.8387%" height="15" fill="rgb(228,201,54)"/><text x="26.0565%" y="175.50"></text></g><g><title>update_rq_clock (2 samples, 0.13%)</title><rect x="26.5161%" y="149" width="0.1290%" height="15" fill="rgb(222,22,37)"/><text x="26.7661%" y="159.50"></text></g><g><title>rb_next (2 samples, 0.13%)</title><rect x="26.9032%" y="213" width="0.1290%" height="15" fill="rgb(237,53,32)"/><text x="27.1532%" y="223.50"></text></g><g><title>tcp_ack (7 samples, 0.45%)</title><rect x="26.6452%" y="229" width="0.4516%" height="15" fill="rgb(233,25,53)"/><text x="26.8952%" y="239.50"></text></g><g><title>__local_bh_enable_ip (41 samples, 2.65%)</title><rect x="24.7742%" y="453" width="2.6452%" height="15" fill="rgb(210,40,34)"/><text x="25.0242%" y="463.50">__..</text></g><g><title>do_softirq (41 samples, 2.65%)</title><rect x="24.7742%" y="437" width="2.6452%" height="15" fill="rgb(241,220,44)"/><text x="25.0242%" y="447.50">do..</text></g><g><title>do_softirq_own_stack (41 samples, 2.65%)</title><rect x="24.7742%" y="421" width="2.6452%" height="15" fill="rgb(235,28,35)"/><text x="25.0242%" y="431.50">do..</text></g><g><title>__do_softirq (41 samples, 2.65%)</title><rect x="24.7742%" y="405" width="2.6452%" height="15" fill="rgb(210,56,17)"/><text x="25.0242%" y="415.50">__..</text></g><g><title>net_rx_action (40 samples, 2.58%)</title><rect x="24.8387%" y="389" width="2.5806%" height="15" fill="rgb(224,130,29)"/><text x="25.0887%" y="399.50">ne..</text></g><g><title>process_backlog (38 samples, 2.45%)</title><rect x="24.9677%" y="373" width="2.4516%" height="15" fill="rgb(235,212,8)"/><text x="25.2177%" y="383.50">pr..</text></g><g><title>__netif_receive_skb_one_core (37 samples, 2.39%)</title><rect x="25.0323%" y="357" width="2.3871%" height="15" fill="rgb(223,33,50)"/><text x="25.2823%" y="367.50">__..</text></g><g><title>ip_rcv (36 samples, 2.32%)</title><rect x="25.0968%" y="341" width="2.3226%" height="15" fill="rgb(219,149,13)"/><text x="25.3468%" y="351.50">i..</text></g><g><title>ip_local_deliver (34 samples, 2.19%)</title><rect x="25.2258%" y="325" width="2.1935%" height="15" fill="rgb(250,156,29)"/><text x="25.4758%" y="335.50">i..</text></g><g><title>ip_local_deliver_finish (34 samples, 2.19%)</title><rect x="25.2258%" y="309" width="2.1935%" height="15" fill="rgb(216,193,19)"/><text x="25.4758%" y="319.50">i..</text></g><g><title>ip_protocol_deliver_rcu (33 samples, 2.13%)</title><rect x="25.2903%" y="293" width="2.1290%" height="15" fill="rgb(216,135,14)"/><text x="25.5403%" y="303.50">i..</text></g><g><title>tcp_v4_rcv (32 samples, 2.06%)</title><rect x="25.3548%" y="277" width="2.0645%" height="15" fill="rgb(241,47,5)"/><text x="25.6048%" y="287.50">t..</text></g><g><title>tcp_v4_do_rcv (28 samples, 1.81%)</title><rect x="25.6129%" y="261" width="1.8065%" height="15" fill="rgb(233,42,35)"/><text x="25.8629%" y="271.50">t..</text></g><g><title>tcp_rcv_established (28 samples, 1.81%)</title><rect x="25.6129%" y="245" width="1.8065%" height="15" fill="rgb(231,13,6)"/><text x="25.8629%" y="255.50">t..</text></g><g><title>tcp_queue_rcv (5 samples, 0.32%)</title><rect x="27.0968%" y="229" width="0.3226%" height="15" fill="rgb(207,181,40)"/><text x="27.3468%" y="239.50"></text></g><g><title>ip_finish_output2 (47 samples, 3.03%)</title><rect x="24.4516%" y="469" width="3.0323%" height="15" fill="rgb(254,173,49)"/><text x="24.7016%" y="479.50">ip_..</text></g><g><title>__ip_queue_xmit (50 samples, 3.23%)</title><rect x="24.3226%" y="501" width="3.2258%" height="15" fill="rgb(221,1,38)"/><text x="24.5726%" y="511.50">__i..</text></g><g><title>ip_output (48 samples, 3.10%)</title><rect x="24.4516%" y="485" width="3.0968%" height="15" fill="rgb(206,124,46)"/><text x="24.7016%" y="495.50">ip_..</text></g><g><title>__tcp_transmit_skb (51 samples, 3.29%)</title><rect x="24.3226%" y="517" width="3.2903%" height="15" fill="rgb(249,21,11)"/><text x="24.5726%" y="527.50">__t..</text></g><g><title>__tcp_push_pending_frames (54 samples, 3.48%)</title><rect x="24.2581%" y="549" width="3.4839%" height="15" fill="rgb(222,201,40)"/><text x="24.5081%" y="559.50">__t..</text></g><g><title>tcp_write_xmit (54 samples, 3.48%)</title><rect x="24.2581%" y="533" width="3.4839%" height="15" fill="rgb(235,61,29)"/><text x="24.5081%" y="543.50">tcp..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.19%)</title><rect x="27.7419%" y="549" width="0.1935%" height="15" fill="rgb(219,207,3)"/><text x="27.9919%" y="559.50"></text></g><g><title>__alloc_skb (3 samples, 0.19%)</title><rect x="27.7419%" y="533" width="0.1935%" height="15" fill="rgb(222,56,46)"/><text x="27.9919%" y="543.50"></text></g><g><title>sock_sendmsg (63 samples, 4.06%)</title><rect x="24.0645%" y="597" width="4.0645%" height="15" fill="rgb(239,76,54)"/><text x="24.3145%" y="607.50">sock..</text></g><g><title>tcp_sendmsg (63 samples, 4.06%)</title><rect x="24.0645%" y="581" width="4.0645%" height="15" fill="rgb(231,124,27)"/><text x="24.3145%" y="591.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (60 samples, 3.87%)</title><rect x="24.2581%" y="565" width="3.8710%" height="15" fill="rgb(249,195,6)"/><text x="24.5081%" y="575.50">tcp_..</text></g><g><title>__x64_sys_sendto (67 samples, 4.32%)</title><rect x="23.8710%" y="629" width="4.3226%" height="15" fill="rgb(237,174,47)"/><text x="24.1210%" y="639.50">__x64..</text></g><g><title>__sys_sendto (65 samples, 4.19%)</title><rect x="24.0000%" y="613" width="4.1935%" height="15" fill="rgb(206,201,31)"/><text x="24.2500%" y="623.50">__sys..</text></g><g><title>do_syscall_64 (69 samples, 4.45%)</title><rect x="23.8710%" y="645" width="4.4516%" height="15" fill="rgb(231,57,52)"/><text x="24.1210%" y="655.50">do_sy..</text></g><g><title>entry_SYSCALL_64 (71 samples, 4.58%)</title><rect x="23.8710%" y="661" width="4.5806%" height="15" fill="rgb(248,177,22)"/><text x="24.1210%" y="671.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="28.3226%" y="645" width="0.1290%" height="15" fill="rgb(215,211,37)"/><text x="28.5726%" y="655.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (73 samples, 4.71%)</title><rect x="23.8065%" y="773" width="4.7097%" height="15" fill="rgb(241,128,51)"/><text x="24.0565%" y="783.50">&lt;mysq..</text></g><g><title>mysql::conn::Conn::_query (73 samples, 4.71%)</title><rect x="23.8065%" y="757" width="4.7097%" height="15" fill="rgb(227,165,31)"/><text x="24.0565%" y="767.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (73 samples, 4.71%)</title><rect x="23.8065%" y="741" width="4.7097%" height="15" fill="rgb(228,167,24)"/><text x="24.0565%" y="751.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (73 samples, 4.71%)</title><rect x="23.8065%" y="725" width="4.7097%" height="15" fill="rgb(228,143,12)"/><text x="24.0565%" y="735.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (73 samples, 4.71%)</title><rect x="23.8065%" y="709" width="4.7097%" height="15" fill="rgb(249,149,8)"/><text x="24.0565%" y="719.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (73 samples, 4.71%)</title><rect x="23.8065%" y="693" width="4.7097%" height="15" fill="rgb(243,35,44)"/><text x="24.0565%" y="703.50">std::..</text></g><g><title>__libc_send (72 samples, 4.65%)</title><rect x="23.8710%" y="677" width="4.6452%" height="15" fill="rgb(246,89,9)"/><text x="24.1210%" y="687.50">__lib..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="28.5161%" y="709" width="0.2581%" height="15" fill="rgb(233,213,13)"/><text x="28.7661%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="28.5161%" y="693" width="0.2581%" height="15" fill="rgb(233,141,41)"/><text x="28.7661%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.26%)</title><rect x="28.5161%" y="677" width="0.2581%" height="15" fill="rgb(239,167,4)"/><text x="28.7661%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.26%)</title><rect x="28.5161%" y="661" width="0.2581%" height="15" fill="rgb(209,217,16)"/><text x="28.7661%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.19%)</title><rect x="28.5806%" y="645" width="0.1935%" height="15" fill="rgb(219,88,35)"/><text x="28.8306%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="28.7742%" y="709" width="0.1935%" height="15" fill="rgb(220,193,23)"/><text x="29.0242%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.19%)</title><rect x="28.7742%" y="693" width="0.1935%" height="15" fill="rgb(230,90,52)"/><text x="29.0242%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="28.7742%" y="677" width="0.1935%" height="15" fill="rgb(252,106,19)"/><text x="29.0242%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="28.8387%" y="661" width="0.1290%" height="15" fill="rgb(206,74,20)"/><text x="29.0887%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="28.8387%" y="645" width="0.1290%" height="15" fill="rgb(230,138,44)"/><text x="29.0887%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="28.8387%" y="629" width="0.1290%" height="15" fill="rgb(235,182,43)"/><text x="29.0887%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="28.8387%" y="613" width="0.1290%" height="15" fill="rgb(242,16,51)"/><text x="29.0887%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.65%)</title><rect x="28.5161%" y="725" width="0.6452%" height="15" fill="rgb(248,9,4)"/><text x="28.7661%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.19%)</title><rect x="28.9677%" y="709" width="0.1935%" height="15" fill="rgb(210,31,22)"/><text x="29.2177%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.90%)</title><rect x="28.5161%" y="741" width="0.9032%" height="15" fill="rgb(239,54,39)"/><text x="28.7661%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.26%)</title><rect x="29.1613%" y="725" width="0.2581%" height="15" fill="rgb(230,99,41)"/><text x="29.4113%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="29.4194%" y="709" width="0.1290%" height="15" fill="rgb(253,106,12)"/><text x="29.6694%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="29.4194%" y="693" width="0.1290%" height="15" fill="rgb(213,46,41)"/><text x="29.6694%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="29.4194%" y="741" width="0.2581%" height="15" fill="rgb(215,133,35)"/><text x="29.6694%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="29.4194%" y="725" width="0.2581%" height="15" fill="rgb(213,28,5)"/><text x="29.6694%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="29.5484%" y="709" width="0.1290%" height="15" fill="rgb(215,77,49)"/><text x="29.7984%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.32%)</title><rect x="29.6774%" y="725" width="0.3226%" height="15" fill="rgb(248,100,22)"/><text x="29.9274%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.32%)</title><rect x="29.6774%" y="709" width="0.3226%" height="15" fill="rgb(208,67,9)"/><text x="29.9274%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="29.8065%" y="693" width="0.1935%" height="15" fill="rgb(219,133,21)"/><text x="30.0565%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.19%)</title><rect x="29.8065%" y="677" width="0.1935%" height="15" fill="rgb(246,46,29)"/><text x="30.0565%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.19%)</title><rect x="29.8065%" y="661" width="0.1935%" height="15" fill="rgb(246,185,52)"/><text x="30.0565%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.19%)</title><rect x="29.8065%" y="645" width="0.1935%" height="15" fill="rgb(252,136,11)"/><text x="30.0565%" y="655.50"></text></g><g><title>__GI___libc_free (2 samples, 0.13%)</title><rect x="30.0000%" y="677" width="0.1290%" height="15" fill="rgb(219,138,53)"/><text x="30.2500%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="30.0000%" y="725" width="0.1935%" height="15" fill="rgb(211,51,23)"/><text x="30.2500%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="30.0000%" y="709" width="0.1935%" height="15" fill="rgb(247,221,28)"/><text x="30.2500%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.19%)</title><rect x="30.0000%" y="693" width="0.1935%" height="15" fill="rgb(251,222,45)"/><text x="30.2500%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="30.1935%" y="709" width="0.1290%" height="15" fill="rgb(217,162,53)"/><text x="30.4435%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.19%)</title><rect x="30.3871%" y="709" width="0.1935%" height="15" fill="rgb(229,93,14)"/><text x="30.6371%" y="719.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="30.4516%" y="693" width="0.1290%" height="15" fill="rgb(209,67,49)"/><text x="30.7016%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 0.97%)</title><rect x="29.6774%" y="741" width="0.9677%" height="15" fill="rgb(213,87,29)"/><text x="29.9274%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.45%)</title><rect x="30.1935%" y="725" width="0.4516%" height="15" fill="rgb(205,151,52)"/><text x="30.4435%" y="735.50"></text></g><g><title>core::fmt::write (34 samples, 2.19%)</title><rect x="28.5161%" y="773" width="2.1935%" height="15" fill="rgb(253,215,39)"/><text x="28.7661%" y="783.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (34 samples, 2.19%)</title><rect x="28.5161%" y="757" width="2.1935%" height="15" fill="rgb(221,220,41)"/><text x="28.7661%" y="767.50">&lt;..</text></g><g><title>decor::query_transformer::QueryTransformer::query (108 samples, 6.97%)</title><rect x="23.8065%" y="789" width="6.9677%" height="15" fill="rgb(218,133,21)"/><text x="24.0565%" y="799.50">decor::qu..</text></g><g><title>decor::Shim::run_on_tcp (110 samples, 7.10%)</title><rect x="23.8065%" y="837" width="7.0968%" height="15" fill="rgb(221,193,43)"/><text x="24.0565%" y="847.50">decor::Shi..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (110 samples, 7.10%)</title><rect x="23.8065%" y="821" width="7.0968%" height="15" fill="rgb(240,128,52)"/><text x="24.0565%" y="831.50">msql_srv::..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (110 samples, 7.10%)</title><rect x="23.8065%" y="805" width="7.0968%" height="15" fill="rgb(253,114,12)"/><text x="24.0565%" y="815.50">&lt;decor::Sh..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.13%)</title><rect x="30.7742%" y="789" width="0.1290%" height="15" fill="rgb(215,223,47)"/><text x="31.0242%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (4 samples, 0.26%)</title><rect x="30.9677%" y="837" width="0.2581%" height="15" fill="rgb(248,225,23)"/><text x="31.2177%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (4 samples, 0.26%)</title><rect x="30.9677%" y="821" width="0.2581%" height="15" fill="rgb(250,108,0)"/><text x="31.2177%" y="831.50"></text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (4 samples, 0.26%)</title><rect x="30.9677%" y="805" width="0.2581%" height="15" fill="rgb(228,208,7)"/><text x="31.2177%" y="815.50"></text></g><g><title>decor::qtcache::QueryCache::cache_uid2gids_for_uids (4 samples, 0.26%)</title><rect x="30.9677%" y="789" width="0.2581%" height="15" fill="rgb(244,45,10)"/><text x="31.2177%" y="799.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.13%)</title><rect x="31.0968%" y="773" width="0.1290%" height="15" fill="rgb(207,125,25)"/><text x="31.3468%" y="783.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="31.6129%" y="725" width="0.3871%" height="15" fill="rgb(210,195,18)"/><text x="31.8629%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (3 samples, 0.19%)</title><rect x="31.8065%" y="709" width="0.1935%" height="15" fill="rgb(249,80,12)"/><text x="32.0565%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="31.4839%" y="741" width="0.5806%" height="15" fill="rgb(221,65,9)"/><text x="31.7339%" y="751.50"></text></g><g><title>__GI___libc_free (2 samples, 0.13%)</title><rect x="32.0645%" y="741" width="0.1290%" height="15" fill="rgb(235,49,36)"/><text x="32.3145%" y="751.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (18 samples, 1.16%)</title><rect x="31.2903%" y="821" width="1.1613%" height="15" fill="rgb(225,32,20)"/><text x="31.5403%" y="831.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (18 samples, 1.16%)</title><rect x="31.2903%" y="805" width="1.1613%" height="15" fill="rgb(215,141,46)"/><text x="31.5403%" y="815.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (18 samples, 1.16%)</title><rect x="31.2903%" y="789" width="1.1613%" height="15" fill="rgb(250,160,47)"/><text x="31.5403%" y="799.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (18 samples, 1.16%)</title><rect x="31.2903%" y="773" width="1.1613%" height="15" fill="rgb(216,222,40)"/><text x="31.5403%" y="783.50"></text></g><g><title>decor::helpers::str_subset_of_idents (18 samples, 1.16%)</title><rect x="31.2903%" y="757" width="1.1613%" height="15" fill="rgb(234,217,39)"/><text x="31.5403%" y="767.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.13%)</title><rect x="32.3226%" y="741" width="0.1290%" height="15" fill="rgb(207,178,40)"/><text x="32.5726%" y="751.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (20 samples, 1.29%)</title><rect x="31.2258%" y="837" width="1.2903%" height="15" fill="rgb(221,136,13)"/><text x="31.4758%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="32.5161%" y="805" width="0.1290%" height="15" fill="rgb(249,199,10)"/><text x="32.7661%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="32.5161%" y="789" width="0.1290%" height="15" fill="rgb(249,222,13)"/><text x="32.7661%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="32.5161%" y="773" width="0.1290%" height="15" fill="rgb(244,185,38)"/><text x="32.7661%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="32.5161%" y="757" width="0.1290%" height="15" fill="rgb(236,202,9)"/><text x="32.7661%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.13%)</title><rect x="32.5161%" y="741" width="0.1290%" height="15" fill="rgb(250,229,37)"/><text x="32.7661%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.13%)</title><rect x="32.5161%" y="725" width="0.1290%" height="15" fill="rgb(206,174,23)"/><text x="32.7661%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="32.5161%" y="709" width="0.1290%" height="15" fill="rgb(211,33,43)"/><text x="32.7661%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="32.5161%" y="693" width="0.1290%" height="15" fill="rgb(245,58,50)"/><text x="32.7661%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="32.5161%" y="677" width="0.1290%" height="15" fill="rgb(244,68,36)"/><text x="32.7661%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="32.5161%" y="661" width="0.1290%" height="15" fill="rgb(232,229,15)"/><text x="32.7661%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.13%)</title><rect x="32.5161%" y="645" width="0.1290%" height="15" fill="rgb(254,30,23)"/><text x="32.7661%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="32.5161%" y="629" width="0.1290%" height="15" fill="rgb(235,160,14)"/><text x="32.7661%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="32.5161%" y="613" width="0.1290%" height="15" fill="rgb(212,155,44)"/><text x="32.7661%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="32.5161%" y="597" width="0.1290%" height="15" fill="rgb(226,2,50)"/><text x="32.7661%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="32.5161%" y="581" width="0.1290%" height="15" fill="rgb(234,177,6)"/><text x="32.7661%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="32.6452%" y="773" width="0.2581%" height="15" fill="rgb(217,24,9)"/><text x="32.8952%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.19%)</title><rect x="32.7097%" y="757" width="0.1935%" height="15" fill="rgb(220,13,46)"/><text x="32.9597%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (6 samples, 0.39%)</title><rect x="32.6452%" y="805" width="0.3871%" height="15" fill="rgb(239,221,27)"/><text x="32.8952%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (6 samples, 0.39%)</title><rect x="32.6452%" y="789" width="0.3871%" height="15" fill="rgb(222,198,25)"/><text x="32.8952%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="32.9032%" y="773" width="0.1290%" height="15" fill="rgb(211,99,13)"/><text x="33.1532%" y="783.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="32.9032%" y="757" width="0.1290%" height="15" fill="rgb(232,111,31)"/><text x="33.1532%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="33.0323%" y="741" width="0.1290%" height="15" fill="rgb(245,82,37)"/><text x="33.2823%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="33.0323%" y="725" width="0.1290%" height="15" fill="rgb(227,149,46)"/><text x="33.2823%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="33.0323%" y="709" width="0.1290%" height="15" fill="rgb(218,36,50)"/><text x="33.2823%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.13%)</title><rect x="33.0323%" y="693" width="0.1290%" height="15" fill="rgb(226,80,48)"/><text x="33.2823%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.13%)</title><rect x="33.0323%" y="677" width="0.1290%" height="15" fill="rgb(238,224,15)"/><text x="33.2823%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="33.0323%" y="661" width="0.1290%" height="15" fill="rgb(241,136,10)"/><text x="33.2823%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="33.0323%" y="645" width="0.1290%" height="15" fill="rgb(208,32,45)"/><text x="33.2823%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="33.0323%" y="629" width="0.1290%" height="15" fill="rgb(207,135,9)"/><text x="33.2823%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="33.0323%" y="613" width="0.1290%" height="15" fill="rgb(206,86,44)"/><text x="33.2823%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.13%)</title><rect x="33.0323%" y="597" width="0.1290%" height="15" fill="rgb(245,177,15)"/><text x="33.2823%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="33.0323%" y="581" width="0.1290%" height="15" fill="rgb(206,64,50)"/><text x="33.2823%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="33.0323%" y="565" width="0.1290%" height="15" fill="rgb(234,36,40)"/><text x="33.2823%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="33.0323%" y="549" width="0.1290%" height="15" fill="rgb(213,64,8)"/><text x="33.2823%" y="559.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="33.0323%" y="533" width="0.1290%" height="15" fill="rgb(210,75,36)"/><text x="33.2823%" y="543.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.26%)</title><rect x="33.1613%" y="741" width="0.2581%" height="15" fill="rgb(229,88,21)"/><text x="33.4113%" y="751.50"></text></g><g><title>_int_malloc (4 samples, 0.26%)</title><rect x="33.1613%" y="725" width="0.2581%" height="15" fill="rgb(252,204,47)"/><text x="33.4113%" y="735.50"></text></g><g><title>sysmalloc (3 samples, 0.19%)</title><rect x="33.2258%" y="709" width="0.1935%" height="15" fill="rgb(208,77,27)"/><text x="33.4758%" y="719.50"></text></g><g><title>page_fault (2 samples, 0.13%)</title><rect x="33.2903%" y="693" width="0.1290%" height="15" fill="rgb(221,76,26)"/><text x="33.5403%" y="703.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="33.2903%" y="677" width="0.1290%" height="15" fill="rgb(225,139,18)"/><text x="33.5403%" y="687.50"></text></g><g><title>handle_mm_fault (2 samples, 0.13%)</title><rect x="33.2903%" y="661" width="0.1290%" height="15" fill="rgb(230,137,11)"/><text x="33.5403%" y="671.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="33.2903%" y="645" width="0.1290%" height="15" fill="rgb(212,28,1)"/><text x="33.5403%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (8 samples, 0.52%)</title><rect x="33.0323%" y="805" width="0.5161%" height="15" fill="rgb(248,164,17)"/><text x="33.2823%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (8 samples, 0.52%)</title><rect x="33.0323%" y="789" width="0.5161%" height="15" fill="rgb(222,171,42)"/><text x="33.2823%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.52%)</title><rect x="33.0323%" y="773" width="0.5161%" height="15" fill="rgb(243,84,45)"/><text x="33.2823%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.52%)</title><rect x="33.0323%" y="757" width="0.5161%" height="15" fill="rgb(252,49,23)"/><text x="33.2823%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="33.4194%" y="741" width="0.1290%" height="15" fill="rgb(215,19,7)"/><text x="33.6694%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.32%)</title><rect x="33.5484%" y="741" width="0.3226%" height="15" fill="rgb(238,81,41)"/><text x="33.7984%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.32%)</title><rect x="33.5484%" y="725" width="0.3226%" height="15" fill="rgb(210,199,37)"/><text x="33.7984%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.32%)</title><rect x="33.5484%" y="709" width="0.3226%" height="15" fill="rgb(244,192,49)"/><text x="33.7984%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="33.6774%" y="693" width="0.1935%" height="15" fill="rgb(226,211,11)"/><text x="33.9274%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="33.8710%" y="741" width="0.1290%" height="15" fill="rgb(236,162,54)"/><text x="34.1210%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.13%)</title><rect x="33.8710%" y="725" width="0.1290%" height="15" fill="rgb(220,229,9)"/><text x="34.1210%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.13%)</title><rect x="33.8710%" y="709" width="0.1290%" height="15" fill="rgb(250,87,22)"/><text x="34.1210%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.58%)</title><rect x="33.5484%" y="757" width="0.5806%" height="15" fill="rgb(239,43,17)"/><text x="33.7984%" y="767.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="34.0000%" y="741" width="0.1290%" height="15" fill="rgb(231,177,25)"/><text x="34.2500%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="34.0000%" y="725" width="0.1290%" height="15" fill="rgb(219,179,1)"/><text x="34.2500%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.26%)</title><rect x="34.1290%" y="741" width="0.2581%" height="15" fill="rgb(238,219,53)"/><text x="34.3790%" y="751.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.26%)</title><rect x="34.1290%" y="725" width="0.2581%" height="15" fill="rgb(232,167,36)"/><text x="34.3790%" y="735.50"></text></g><g><title>_int_realloc (4 samples, 0.26%)</title><rect x="34.1290%" y="709" width="0.2581%" height="15" fill="rgb(244,19,51)"/><text x="34.3790%" y="719.50"></text></g><g><title>_int_malloc (4 samples, 0.26%)</title><rect x="34.1290%" y="693" width="0.2581%" height="15" fill="rgb(224,6,22)"/><text x="34.3790%" y="703.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.13%)</title><rect x="34.2581%" y="677" width="0.1290%" height="15" fill="rgb(224,145,5)"/><text x="34.5081%" y="687.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.58%)</title><rect x="34.6452%" y="693" width="0.5806%" height="15" fill="rgb(234,130,49)"/><text x="34.8952%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.90%)</title><rect x="34.3871%" y="725" width="0.9032%" height="15" fill="rgb(254,6,2)"/><text x="34.6371%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.90%)</title><rect x="34.3871%" y="709" width="0.9032%" height="15" fill="rgb(208,96,46)"/><text x="34.6371%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (28 samples, 1.81%)</title><rect x="33.5484%" y="773" width="1.8065%" height="15" fill="rgb(239,3,39)"/><text x="33.7984%" y="783.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (19 samples, 1.23%)</title><rect x="34.1290%" y="757" width="1.2258%" height="15" fill="rgb(233,210,1)"/><text x="34.3790%" y="767.50"></text></g><g><title>core::fmt::write (15 samples, 0.97%)</title><rect x="34.3871%" y="741" width="0.9677%" height="15" fill="rgb(244,137,37)"/><text x="34.6371%" y="751.50"></text></g><g><title>core::fmt::write (30 samples, 1.94%)</title><rect x="33.5484%" y="805" width="1.9355%" height="15" fill="rgb(240,136,2)"/><text x="33.7984%" y="815.50">c..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (30 samples, 1.94%)</title><rect x="33.5484%" y="789" width="1.9355%" height="15" fill="rgb(239,18,37)"/><text x="33.7984%" y="799.50">&lt;..</text></g><g><title>decor::helpers::get_user_cols_of_datatable (2 samples, 0.13%)</title><rect x="35.4839%" y="805" width="0.1290%" height="15" fill="rgb(218,185,22)"/><text x="35.7339%" y="815.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="35.4839%" y="789" width="0.1290%" height="15" fill="rgb(225,218,4)"/><text x="35.7339%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (2 samples, 0.13%)</title><rect x="35.4839%" y="773" width="0.1290%" height="15" fill="rgb(230,182,32)"/><text x="35.7339%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="35.4839%" y="757" width="0.1290%" height="15" fill="rgb(242,56,43)"/><text x="35.7339%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.19%)</title><rect x="35.6774%" y="789" width="0.1935%" height="15" fill="rgb(233,99,24)"/><text x="35.9274%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="35.9355%" y="773" width="0.1290%" height="15" fill="rgb(234,209,42)"/><text x="36.1855%" y="783.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="35.9355%" y="757" width="0.1290%" height="15" fill="rgb(227,7,12)"/><text x="36.1855%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (7 samples, 0.45%)</title><rect x="35.6774%" y="805" width="0.4516%" height="15" fill="rgb(245,203,43)"/><text x="35.9274%" y="815.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (3 samples, 0.19%)</title><rect x="35.9355%" y="789" width="0.1935%" height="15" fill="rgb(238,205,33)"/><text x="36.1855%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="36.1290%" y="725" width="0.1290%" height="15" fill="rgb(231,56,7)"/><text x="36.3790%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="36.1290%" y="709" width="0.1290%" height="15" fill="rgb(244,186,29)"/><text x="36.3790%" y="719.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.13%)</title><rect x="36.1290%" y="693" width="0.1290%" height="15" fill="rgb(234,111,31)"/><text x="36.3790%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.13%)</title><rect x="36.1290%" y="677" width="0.1290%" height="15" fill="rgb(241,149,10)"/><text x="36.3790%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="36.1290%" y="661" width="0.1290%" height="15" fill="rgb(249,206,44)"/><text x="36.3790%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.13%)</title><rect x="36.1290%" y="645" width="0.1290%" height="15" fill="rgb(251,153,30)"/><text x="36.3790%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.13%)</title><rect x="36.1290%" y="629" width="0.1290%" height="15" fill="rgb(239,152,38)"/><text x="36.3790%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="36.1290%" y="613" width="0.1290%" height="15" fill="rgb(249,139,47)"/><text x="36.3790%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 0.13%)</title><rect x="36.1290%" y="597" width="0.1290%" height="15" fill="rgb(244,64,35)"/><text x="36.3790%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.13%)</title><rect x="36.1290%" y="581" width="0.1290%" height="15" fill="rgb(216,46,15)"/><text x="36.3790%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.13%)</title><rect x="36.1290%" y="565" width="0.1290%" height="15" fill="rgb(250,74,19)"/><text x="36.3790%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (2 samples, 0.13%)</title><rect x="36.1290%" y="549" width="0.1290%" height="15" fill="rgb(249,42,33)"/><text x="36.3790%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.13%)</title><rect x="36.1290%" y="533" width="0.1290%" height="15" fill="rgb(242,149,17)"/><text x="36.3790%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.13%)</title><rect x="36.1290%" y="517" width="0.1290%" height="15" fill="rgb(244,29,21)"/><text x="36.3790%" y="527.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="36.1290%" y="501" width="0.1290%" height="15" fill="rgb(220,130,37)"/><text x="36.3790%" y="511.50"></text></g><g><title>_int_realloc (2 samples, 0.13%)</title><rect x="36.1290%" y="485" width="0.1290%" height="15" fill="rgb(211,67,2)"/><text x="36.3790%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="36.3226%" y="677" width="0.1935%" height="15" fill="rgb(235,68,52)"/><text x="36.5726%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="36.3871%" y="661" width="0.1290%" height="15" fill="rgb(246,142,3)"/><text x="36.6371%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="36.3871%" y="645" width="0.1290%" height="15" fill="rgb(241,25,7)"/><text x="36.6371%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="36.3871%" y="629" width="0.1290%" height="15" fill="rgb(242,119,39)"/><text x="36.6371%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="36.3871%" y="613" width="0.1290%" height="15" fill="rgb(241,98,45)"/><text x="36.6371%" y="623.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (8 samples, 0.52%)</title><rect x="36.1290%" y="805" width="0.5161%" height="15" fill="rgb(254,28,30)"/><text x="36.3790%" y="815.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (8 samples, 0.52%)</title><rect x="36.1290%" y="789" width="0.5161%" height="15" fill="rgb(241,142,54)"/><text x="36.3790%" y="799.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.52%)</title><rect x="36.1290%" y="773" width="0.5161%" height="15" fill="rgb(222,85,15)"/><text x="36.3790%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.52%)</title><rect x="36.1290%" y="757" width="0.5161%" height="15" fill="rgb(210,85,47)"/><text x="36.3790%" y="767.50"></text></g><g><title>core::fmt::write (8 samples, 0.52%)</title><rect x="36.1290%" y="741" width="0.5161%" height="15" fill="rgb(224,206,25)"/><text x="36.3790%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (6 samples, 0.39%)</title><rect x="36.2581%" y="725" width="0.3871%" height="15" fill="rgb(243,201,19)"/><text x="36.5081%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.32%)</title><rect x="36.3226%" y="709" width="0.3226%" height="15" fill="rgb(236,59,4)"/><text x="36.5726%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.32%)</title><rect x="36.3226%" y="693" width="0.3226%" height="15" fill="rgb(254,179,45)"/><text x="36.5726%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.13%)</title><rect x="36.5161%" y="677" width="0.1290%" height="15" fill="rgb(226,14,10)"/><text x="36.7661%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.13%)</title><rect x="36.5161%" y="661" width="0.1290%" height="15" fill="rgb(244,27,41)"/><text x="36.7661%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (5 samples, 0.32%)</title><rect x="36.7742%" y="757" width="0.3226%" height="15" fill="rgb(235,35,32)"/><text x="37.0242%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.26%)</title><rect x="36.8387%" y="741" width="0.2581%" height="15" fill="rgb(218,68,31)"/><text x="37.0887%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="36.9032%" y="725" width="0.1935%" height="15" fill="rgb(207,120,37)"/><text x="37.1532%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.19%)</title><rect x="36.9032%" y="709" width="0.1935%" height="15" fill="rgb(227,98,0)"/><text x="37.1532%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.19%)</title><rect x="36.9032%" y="693" width="0.1935%" height="15" fill="rgb(207,7,3)"/><text x="37.1532%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.19%)</title><rect x="36.9032%" y="677" width="0.1935%" height="15" fill="rgb(206,98,19)"/><text x="37.1532%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (3 samples, 0.19%)</title><rect x="36.9032%" y="661" width="0.1935%" height="15" fill="rgb(217,5,26)"/><text x="37.1532%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.19%)</title><rect x="36.9032%" y="645" width="0.1935%" height="15" fill="rgb(235,190,38)"/><text x="37.1532%" y="655.50"></text></g><g><title>__libc_recv (3 samples, 0.19%)</title><rect x="36.9032%" y="629" width="0.1935%" height="15" fill="rgb(247,86,24)"/><text x="37.1532%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.19%)</title><rect x="36.9032%" y="613" width="0.1935%" height="15" fill="rgb(205,101,16)"/><text x="37.1532%" y="623.50"></text></g><g><title>do_syscall_64 (3 samples, 0.19%)</title><rect x="36.9032%" y="597" width="0.1935%" height="15" fill="rgb(246,168,33)"/><text x="37.1532%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (3 samples, 0.19%)</title><rect x="36.9032%" y="581" width="0.1935%" height="15" fill="rgb(231,114,1)"/><text x="37.1532%" y="591.50"></text></g><g><title>__sys_recvfrom (3 samples, 0.19%)</title><rect x="36.9032%" y="565" width="0.1935%" height="15" fill="rgb(207,184,53)"/><text x="37.1532%" y="575.50"></text></g><g><title>inet_recvmsg (3 samples, 0.19%)</title><rect x="36.9032%" y="549" width="0.1935%" height="15" fill="rgb(224,95,51)"/><text x="37.1532%" y="559.50"></text></g><g><title>tcp_recvmsg (3 samples, 0.19%)</title><rect x="36.9032%" y="533" width="0.1935%" height="15" fill="rgb(212,188,45)"/><text x="37.1532%" y="543.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.13%)</title><rect x="37.2258%" y="469" width="0.1290%" height="15" fill="rgb(223,154,38)"/><text x="37.4758%" y="479.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.13%)</title><rect x="37.2258%" y="453" width="0.1290%" height="15" fill="rgb(251,22,52)"/><text x="37.4758%" y="463.50"></text></g><g><title>loopback_xmit (2 samples, 0.13%)</title><rect x="37.2258%" y="437" width="0.1290%" height="15" fill="rgb(229,209,22)"/><text x="37.4758%" y="447.50"></text></g><g><title>netif_rx (2 samples, 0.13%)</title><rect x="37.2258%" y="421" width="0.1290%" height="15" fill="rgb(234,138,34)"/><text x="37.4758%" y="431.50"></text></g><g><title>netif_rx_internal (2 samples, 0.13%)</title><rect x="37.2258%" y="405" width="0.1290%" height="15" fill="rgb(212,95,11)"/><text x="37.4758%" y="415.50"></text></g><g><title>sock_def_readable (2 samples, 0.13%)</title><rect x="37.4194%" y="245" width="0.1290%" height="15" fill="rgb(240,179,47)"/><text x="37.6694%" y="255.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.13%)</title><rect x="37.4194%" y="229" width="0.1290%" height="15" fill="rgb(240,163,11)"/><text x="37.6694%" y="239.50"></text></g><g><title>__wake_up_common (2 samples, 0.13%)</title><rect x="37.4194%" y="213" width="0.1290%" height="15" fill="rgb(236,37,12)"/><text x="37.6694%" y="223.50"></text></g><g><title>pollwake (2 samples, 0.13%)</title><rect x="37.4194%" y="197" width="0.1290%" height="15" fill="rgb(232,164,16)"/><text x="37.6694%" y="207.50"></text></g><g><title>try_to_wake_up (2 samples, 0.13%)</title><rect x="37.4194%" y="181" width="0.1290%" height="15" fill="rgb(244,205,15)"/><text x="37.6694%" y="191.50"></text></g><g><title>tcp_ack (2 samples, 0.13%)</title><rect x="37.5484%" y="245" width="0.1290%" height="15" fill="rgb(223,117,47)"/><text x="37.7984%" y="255.50"></text></g><g><title>ip_local_deliver (6 samples, 0.39%)</title><rect x="37.3548%" y="341" width="0.3871%" height="15" fill="rgb(244,107,35)"/><text x="37.6048%" y="351.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.39%)</title><rect x="37.3548%" y="325" width="0.3871%" height="15" fill="rgb(205,140,8)"/><text x="37.6048%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.39%)</title><rect x="37.3548%" y="309" width="0.3871%" height="15" fill="rgb(228,84,46)"/><text x="37.6048%" y="319.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.39%)</title><rect x="37.3548%" y="293" width="0.3871%" height="15" fill="rgb(254,188,9)"/><text x="37.6048%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.32%)</title><rect x="37.4194%" y="277" width="0.3226%" height="15" fill="rgb(206,112,54)"/><text x="37.6694%" y="287.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.32%)</title><rect x="37.4194%" y="261" width="0.3226%" height="15" fill="rgb(216,84,49)"/><text x="37.6694%" y="271.50"></text></g><g><title>ip_finish_output2 (10 samples, 0.65%)</title><rect x="37.1613%" y="485" width="0.6452%" height="15" fill="rgb(214,194,35)"/><text x="37.4113%" y="495.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.45%)</title><rect x="37.3548%" y="469" width="0.4516%" height="15" fill="rgb(249,28,3)"/><text x="37.6048%" y="479.50"></text></g><g><title>do_softirq (7 samples, 0.45%)</title><rect x="37.3548%" y="453" width="0.4516%" height="15" fill="rgb(222,56,52)"/><text x="37.6048%" y="463.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.45%)</title><rect x="37.3548%" y="437" width="0.4516%" height="15" fill="rgb(245,217,50)"/><text x="37.6048%" y="447.50"></text></g><g><title>__do_softirq (7 samples, 0.45%)</title><rect x="37.3548%" y="421" width="0.4516%" height="15" fill="rgb(213,201,24)"/><text x="37.6048%" y="431.50"></text></g><g><title>net_rx_action (7 samples, 0.45%)</title><rect x="37.3548%" y="405" width="0.4516%" height="15" fill="rgb(248,116,28)"/><text x="37.6048%" y="415.50"></text></g><g><title>process_backlog (7 samples, 0.45%)</title><rect x="37.3548%" y="389" width="0.4516%" height="15" fill="rgb(219,72,43)"/><text x="37.6048%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.45%)</title><rect x="37.3548%" y="373" width="0.4516%" height="15" fill="rgb(209,138,14)"/><text x="37.6048%" y="383.50"></text></g><g><title>ip_rcv (7 samples, 0.45%)</title><rect x="37.3548%" y="357" width="0.4516%" height="15" fill="rgb(222,18,33)"/><text x="37.6048%" y="367.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.71%)</title><rect x="37.1613%" y="533" width="0.7097%" height="15" fill="rgb(213,199,7)"/><text x="37.4113%" y="543.50"></text></g><g><title>__ip_queue_xmit (11 samples, 0.71%)</title><rect x="37.1613%" y="517" width="0.7097%" height="15" fill="rgb(250,110,10)"/><text x="37.4113%" y="527.50"></text></g><g><title>ip_output (11 samples, 0.71%)</title><rect x="37.1613%" y="501" width="0.7097%" height="15" fill="rgb(248,123,6)"/><text x="37.4113%" y="511.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (18 samples, 1.16%)</title><rect x="36.7742%" y="789" width="1.1613%" height="15" fill="rgb(206,91,31)"/><text x="37.0242%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (18 samples, 1.16%)</title><rect x="36.7742%" y="773" width="1.1613%" height="15" fill="rgb(211,154,13)"/><text x="37.0242%" y="783.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (13 samples, 0.84%)</title><rect x="37.0968%" y="757" width="0.8387%" height="15" fill="rgb(225,148,7)"/><text x="37.3468%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.84%)</title><rect x="37.0968%" y="741" width="0.8387%" height="15" fill="rgb(220,160,43)"/><text x="37.3468%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (13 samples, 0.84%)</title><rect x="37.0968%" y="725" width="0.8387%" height="15" fill="rgb(213,52,39)"/><text x="37.3468%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::write (13 samples, 0.84%)</title><rect x="37.0968%" y="709" width="0.8387%" height="15" fill="rgb(243,137,7)"/><text x="37.3468%" y="719.50"></text></g><g><title>__libc_send (13 samples, 0.84%)</title><rect x="37.0968%" y="693" width="0.8387%" height="15" fill="rgb(230,79,13)"/><text x="37.3468%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.84%)</title><rect x="37.0968%" y="677" width="0.8387%" height="15" fill="rgb(247,105,23)"/><text x="37.3468%" y="687.50"></text></g><g><title>do_syscall_64 (13 samples, 0.84%)</title><rect x="37.0968%" y="661" width="0.8387%" height="15" fill="rgb(223,179,41)"/><text x="37.3468%" y="671.50"></text></g><g><title>__x64_sys_sendto (13 samples, 0.84%)</title><rect x="37.0968%" y="645" width="0.8387%" height="15" fill="rgb(218,9,34)"/><text x="37.3468%" y="655.50"></text></g><g><title>__sys_sendto (13 samples, 0.84%)</title><rect x="37.0968%" y="629" width="0.8387%" height="15" fill="rgb(222,106,8)"/><text x="37.3468%" y="639.50"></text></g><g><title>sock_sendmsg (13 samples, 0.84%)</title><rect x="37.0968%" y="613" width="0.8387%" height="15" fill="rgb(211,220,0)"/><text x="37.3468%" y="623.50"></text></g><g><title>tcp_sendmsg (13 samples, 0.84%)</title><rect x="37.0968%" y="597" width="0.8387%" height="15" fill="rgb(229,52,16)"/><text x="37.3468%" y="607.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 0.77%)</title><rect x="37.1613%" y="581" width="0.7742%" height="15" fill="rgb(212,155,18)"/><text x="37.4113%" y="591.50"></text></g><g><title>__tcp_push_pending_frames (12 samples, 0.77%)</title><rect x="37.1613%" y="565" width="0.7742%" height="15" fill="rgb(242,21,14)"/><text x="37.4113%" y="575.50"></text></g><g><title>tcp_write_xmit (12 samples, 0.77%)</title><rect x="37.1613%" y="549" width="0.7742%" height="15" fill="rgb(222,19,48)"/><text x="37.4113%" y="559.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (22 samples, 1.42%)</title><rect x="36.6452%" y="805" width="1.4194%" height="15" fill="rgb(232,45,27)"/><text x="36.8952%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.13%)</title><rect x="38.3226%" y="741" width="0.1290%" height="15" fill="rgb(249,103,42)"/><text x="38.5726%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.13%)</title><rect x="38.4516%" y="725" width="0.1290%" height="15" fill="rgb(246,81,33)"/><text x="38.7016%" y="735.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="38.9677%" y="517" width="0.1290%" height="15" fill="rgb(252,33,42)"/><text x="39.2177%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.13%)</title><rect x="38.9677%" y="501" width="0.1290%" height="15" fill="rgb(209,212,41)"/><text x="39.2177%" y="511.50"></text></g><g><title>sock_rfree (2 samples, 0.13%)</title><rect x="38.9677%" y="485" width="0.1290%" height="15" fill="rgb(207,154,6)"/><text x="39.2177%" y="495.50"></text></g><g><title>update_curr (4 samples, 0.26%)</title><rect x="39.5484%" y="405" width="0.2581%" height="15" fill="rgb(223,64,47)"/><text x="39.7984%" y="415.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.45%)</title><rect x="39.4194%" y="437" width="0.4516%" height="15" fill="rgb(211,161,38)"/><text x="39.6694%" y="447.50"></text></g><g><title>dequeue_entity (7 samples, 0.45%)</title><rect x="39.4194%" y="421" width="0.4516%" height="15" fill="rgb(219,138,40)"/><text x="39.6694%" y="431.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.13%)</title><rect x="40.0000%" y="437" width="0.1290%" height="15" fill="rgb(241,228,46)"/><text x="40.2500%" y="447.50"></text></g><g><title>sk_wait_data (18 samples, 1.16%)</title><rect x="39.0968%" y="517" width="1.1613%" height="15" fill="rgb(223,209,38)"/><text x="39.3468%" y="527.50"></text></g><g><title>wait_woken (14 samples, 0.90%)</title><rect x="39.3548%" y="501" width="0.9032%" height="15" fill="rgb(236,164,45)"/><text x="39.6048%" y="511.50"></text></g><g><title>schedule_timeout (14 samples, 0.90%)</title><rect x="39.3548%" y="485" width="0.9032%" height="15" fill="rgb(231,15,5)"/><text x="39.6048%" y="495.50"></text></g><g><title>schedule (14 samples, 0.90%)</title><rect x="39.3548%" y="469" width="0.9032%" height="15" fill="rgb(252,35,15)"/><text x="39.6048%" y="479.50"></text></g><g><title>__schedule (14 samples, 0.90%)</title><rect x="39.3548%" y="453" width="0.9032%" height="15" fill="rgb(248,181,18)"/><text x="39.6048%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.13%)</title><rect x="40.1290%" y="437" width="0.1290%" height="15" fill="rgb(233,39,42)"/><text x="40.3790%" y="447.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.19%)</title><rect x="40.2581%" y="517" width="0.1935%" height="15" fill="rgb(238,110,33)"/><text x="40.5081%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.19%)</title><rect x="40.2581%" y="501" width="0.1935%" height="15" fill="rgb(233,195,10)"/><text x="40.5081%" y="511.50"></text></g><g><title>inet_recvmsg (27 samples, 1.74%)</title><rect x="38.8387%" y="549" width="1.7419%" height="15" fill="rgb(254,105,3)"/><text x="39.0887%" y="559.50"></text></g><g><title>tcp_recvmsg (27 samples, 1.74%)</title><rect x="38.8387%" y="533" width="1.7419%" height="15" fill="rgb(221,225,9)"/><text x="39.0887%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (29 samples, 1.87%)</title><rect x="38.7742%" y="581" width="1.8710%" height="15" fill="rgb(224,227,45)"/><text x="39.0242%" y="591.50">_..</text></g><g><title>__sys_recvfrom (29 samples, 1.87%)</title><rect x="38.7742%" y="565" width="1.8710%" height="15" fill="rgb(229,198,43)"/><text x="39.0242%" y="575.50">_..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 2.13%)</title><rect x="38.5806%" y="709" width="2.1290%" height="15" fill="rgb(206,209,35)"/><text x="38.8306%" y="719.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (33 samples, 2.13%)</title><rect x="38.5806%" y="693" width="2.1290%" height="15" fill="rgb(245,195,53)"/><text x="38.8306%" y="703.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (33 samples, 2.13%)</title><rect x="38.5806%" y="677" width="2.1290%" height="15" fill="rgb(240,92,26)"/><text x="38.8306%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (33 samples, 2.13%)</title><rect x="38.5806%" y="661" width="2.1290%" height="15" fill="rgb(207,40,23)"/><text x="38.8306%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (33 samples, 2.13%)</title><rect x="38.5806%" y="645" width="2.1290%" height="15" fill="rgb(223,111,35)"/><text x="38.8306%" y="655.50">s..</text></g><g><title>__libc_recv (33 samples, 2.13%)</title><rect x="38.5806%" y="629" width="2.1290%" height="15" fill="rgb(229,147,28)"/><text x="38.8306%" y="639.50">_..</text></g><g><title>entry_SYSCALL_64 (32 samples, 2.06%)</title><rect x="38.6452%" y="613" width="2.0645%" height="15" fill="rgb(211,29,28)"/><text x="38.8952%" y="623.50">e..</text></g><g><title>do_syscall_64 (30 samples, 1.94%)</title><rect x="38.7742%" y="597" width="1.9355%" height="15" fill="rgb(228,72,33)"/><text x="39.0242%" y="607.50">d..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 2.26%)</title><rect x="38.5806%" y="725" width="2.2581%" height="15" fill="rgb(205,214,31)"/><text x="38.8306%" y="735.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.13%)</title><rect x="40.7097%" y="709" width="0.1290%" height="15" fill="rgb(224,111,15)"/><text x="40.9597%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.13%)</title><rect x="40.7097%" y="693" width="0.1290%" height="15" fill="rgb(253,21,26)"/><text x="40.9597%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.13%)</title><rect x="40.7097%" y="677" width="0.1290%" height="15" fill="rgb(245,139,43)"/><text x="40.9597%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="40.7097%" y="661" width="0.1290%" height="15" fill="rgb(252,170,7)"/><text x="40.9597%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="40.7097%" y="645" width="0.1290%" height="15" fill="rgb(231,118,14)"/><text x="40.9597%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (38 samples, 2.45%)</title><rect x="38.4516%" y="741" width="2.4516%" height="15" fill="rgb(238,83,0)"/><text x="38.7016%" y="751.50">my..</text></g><g><title>mysql::conn::Conn::handle_result_set (44 samples, 2.84%)</title><rect x="38.1935%" y="757" width="2.8387%" height="15" fill="rgb(221,39,39)"/><text x="38.4435%" y="767.50">my..</text></g><g><title>__dev_queue_xmit (3 samples, 0.19%)</title><rect x="42.3871%" y="469" width="0.1935%" height="15" fill="rgb(222,119,46)"/><text x="42.6371%" y="479.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.13%)</title><rect x="42.4516%" y="453" width="0.1290%" height="15" fill="rgb(222,165,49)"/><text x="42.7016%" y="463.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.13%)</title><rect x="42.7097%" y="405" width="0.1290%" height="15" fill="rgb(219,113,52)"/><text x="42.9597%" y="415.50"></text></g><g><title>enqueue_task (5 samples, 0.32%)</title><rect x="43.4839%" y="165" width="0.3226%" height="15" fill="rgb(214,7,15)"/><text x="43.7339%" y="175.50"></text></g><g><title>psi_task_change (5 samples, 0.32%)</title><rect x="43.4839%" y="149" width="0.3226%" height="15" fill="rgb(235,32,4)"/><text x="43.7339%" y="159.50"></text></g><g><title>psi_group_change (5 samples, 0.32%)</title><rect x="43.4839%" y="133" width="0.3226%" height="15" fill="rgb(238,90,54)"/><text x="43.7339%" y="143.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.32%)</title><rect x="43.8065%" y="165" width="0.3226%" height="15" fill="rgb(213,208,19)"/><text x="44.0565%" y="175.50"></text></g><g><title>enqueue_entity (4 samples, 0.26%)</title><rect x="43.8710%" y="149" width="0.2581%" height="15" fill="rgb(233,156,4)"/><text x="44.1210%" y="159.50"></text></g><g><title>update_load_avg (4 samples, 0.26%)</title><rect x="43.8710%" y="133" width="0.2581%" height="15" fill="rgb(207,194,5)"/><text x="44.1210%" y="143.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.13%)</title><rect x="44.0000%" y="117" width="0.1290%" height="15" fill="rgb(206,111,30)"/><text x="44.2500%" y="127.50"></text></g><g><title>__wake_up_common (14 samples, 0.90%)</title><rect x="43.4194%" y="213" width="0.9032%" height="15" fill="rgb(243,70,54)"/><text x="43.6694%" y="223.50"></text></g><g><title>pollwake (14 samples, 0.90%)</title><rect x="43.4194%" y="197" width="0.9032%" height="15" fill="rgb(242,28,8)"/><text x="43.6694%" y="207.50"></text></g><g><title>try_to_wake_up (14 samples, 0.90%)</title><rect x="43.4194%" y="181" width="0.9032%" height="15" fill="rgb(219,106,18)"/><text x="43.6694%" y="191.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.13%)</title><rect x="44.1935%" y="165" width="0.1290%" height="15" fill="rgb(244,222,10)"/><text x="44.4435%" y="175.50"></text></g><g><title>check_preempt_curr (2 samples, 0.13%)</title><rect x="44.1935%" y="149" width="0.1290%" height="15" fill="rgb(236,179,52)"/><text x="44.4435%" y="159.50"></text></g><g><title>sock_def_readable (16 samples, 1.03%)</title><rect x="43.3548%" y="245" width="1.0323%" height="15" fill="rgb(213,23,39)"/><text x="43.6048%" y="255.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.97%)</title><rect x="43.4194%" y="229" width="0.9677%" height="15" fill="rgb(238,48,10)"/><text x="43.6694%" y="239.50"></text></g><g><title>kfree (2 samples, 0.13%)</title><rect x="44.4516%" y="213" width="0.1290%" height="15" fill="rgb(251,196,23)"/><text x="44.7016%" y="223.50"></text></g><g><title>__kfree_skb (4 samples, 0.26%)</title><rect x="44.4516%" y="229" width="0.2581%" height="15" fill="rgb(250,152,24)"/><text x="44.7016%" y="239.50"></text></g><g><title>tcp_ack (8 samples, 0.52%)</title><rect x="44.3871%" y="245" width="0.5161%" height="15" fill="rgb(209,150,17)"/><text x="44.6371%" y="255.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.13%)</title><rect x="44.7742%" y="229" width="0.1290%" height="15" fill="rgb(234,202,34)"/><text x="45.0242%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (27 samples, 1.74%)</title><rect x="43.2258%" y="277" width="1.7419%" height="15" fill="rgb(253,148,53)"/><text x="43.4758%" y="287.50"></text></g><g><title>tcp_rcv_established (27 samples, 1.74%)</title><rect x="43.2258%" y="261" width="1.7419%" height="15" fill="rgb(218,129,16)"/><text x="43.4758%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (33 samples, 2.13%)</title><rect x="42.9677%" y="373" width="2.1290%" height="15" fill="rgb(216,85,19)"/><text x="43.2177%" y="383.50">_..</text></g><g><title>ip_rcv (32 samples, 2.06%)</title><rect x="43.0323%" y="357" width="2.0645%" height="15" fill="rgb(235,228,7)"/><text x="43.2823%" y="367.50">i..</text></g><g><title>ip_local_deliver (32 samples, 2.06%)</title><rect x="43.0323%" y="341" width="2.0645%" height="15" fill="rgb(245,175,0)"/><text x="43.2823%" y="351.50">i..</text></g><g><title>ip_local_deliver_finish (32 samples, 2.06%)</title><rect x="43.0323%" y="325" width="2.0645%" height="15" fill="rgb(208,168,36)"/><text x="43.2823%" y="335.50">i..</text></g><g><title>ip_protocol_deliver_rcu (32 samples, 2.06%)</title><rect x="43.0323%" y="309" width="2.0645%" height="15" fill="rgb(246,171,24)"/><text x="43.2823%" y="319.50">i..</text></g><g><title>tcp_v4_rcv (32 samples, 2.06%)</title><rect x="43.0323%" y="293" width="2.0645%" height="15" fill="rgb(215,142,24)"/><text x="43.2823%" y="303.50">t..</text></g><g><title>tcp_v4_fill_cb (2 samples, 0.13%)</title><rect x="44.9677%" y="277" width="0.1290%" height="15" fill="rgb(250,187,7)"/><text x="45.2177%" y="287.50"></text></g><g><title>ip_finish_output2 (45 samples, 2.90%)</title><rect x="42.2581%" y="485" width="2.9032%" height="15" fill="rgb(228,66,33)"/><text x="42.5081%" y="495.50">ip..</text></g><g><title>__local_bh_enable_ip (40 samples, 2.58%)</title><rect x="42.5806%" y="469" width="2.5806%" height="15" fill="rgb(234,215,21)"/><text x="42.8306%" y="479.50">__..</text></g><g><title>do_softirq (40 samples, 2.58%)</title><rect x="42.5806%" y="453" width="2.5806%" height="15" fill="rgb(222,191,20)"/><text x="42.8306%" y="463.50">do..</text></g><g><title>do_softirq_own_stack (38 samples, 2.45%)</title><rect x="42.7097%" y="437" width="2.4516%" height="15" fill="rgb(245,79,54)"/><text x="42.9597%" y="447.50">do..</text></g><g><title>__do_softirq (38 samples, 2.45%)</title><rect x="42.7097%" y="421" width="2.4516%" height="15" fill="rgb(240,10,37)"/><text x="42.9597%" y="431.50">__..</text></g><g><title>net_rx_action (36 samples, 2.32%)</title><rect x="42.8387%" y="405" width="2.3226%" height="15" fill="rgb(214,192,32)"/><text x="43.0887%" y="415.50">n..</text></g><g><title>process_backlog (36 samples, 2.32%)</title><rect x="42.8387%" y="389" width="2.3226%" height="15" fill="rgb(209,36,54)"/><text x="43.0887%" y="399.50">p..</text></g><g><title>__tcp_transmit_skb (53 samples, 3.42%)</title><rect x="41.8065%" y="533" width="3.4194%" height="15" fill="rgb(220,10,11)"/><text x="42.0565%" y="543.50">__t..</text></g><g><title>__ip_queue_xmit (50 samples, 3.23%)</title><rect x="42.0000%" y="517" width="3.2258%" height="15" fill="rgb(221,106,17)"/><text x="42.2500%" y="527.50">__i..</text></g><g><title>ip_output (47 samples, 3.03%)</title><rect x="42.1935%" y="501" width="3.0323%" height="15" fill="rgb(251,142,44)"/><text x="42.4435%" y="511.50">ip_..</text></g><g><title>__tcp_push_pending_frames (55 samples, 3.55%)</title><rect x="41.7419%" y="565" width="3.5484%" height="15" fill="rgb(238,13,15)"/><text x="41.9919%" y="575.50">__tc..</text></g><g><title>tcp_write_xmit (55 samples, 3.55%)</title><rect x="41.7419%" y="549" width="3.5484%" height="15" fill="rgb(208,107,27)"/><text x="41.9919%" y="559.50">tcp_..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.19%)</title><rect x="45.2903%" y="565" width="0.1935%" height="15" fill="rgb(205,136,37)"/><text x="45.5403%" y="575.50"></text></g><g><title>__alloc_skb (3 samples, 0.19%)</title><rect x="45.2903%" y="549" width="0.1935%" height="15" fill="rgb(250,205,27)"/><text x="45.5403%" y="559.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.13%)</title><rect x="45.3548%" y="533" width="0.1290%" height="15" fill="rgb(210,80,43)"/><text x="45.6048%" y="543.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.13%)</title><rect x="45.4839%" y="565" width="0.1290%" height="15" fill="rgb(247,160,36)"/><text x="45.7339%" y="575.50"></text></g><g><title>sock_sendmsg (69 samples, 4.45%)</title><rect x="41.4839%" y="613" width="4.4516%" height="15" fill="rgb(234,13,49)"/><text x="41.7339%" y="623.50">sock_..</text></g><g><title>tcp_sendmsg (68 samples, 4.39%)</title><rect x="41.5484%" y="597" width="4.3871%" height="15" fill="rgb(234,122,0)"/><text x="41.7984%" y="607.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (67 samples, 4.32%)</title><rect x="41.6129%" y="581" width="4.3226%" height="15" fill="rgb(207,146,38)"/><text x="41.8629%" y="591.50">tcp_s..</text></g><g><title>tcp_send_mss (4 samples, 0.26%)</title><rect x="45.6774%" y="565" width="0.2581%" height="15" fill="rgb(207,177,25)"/><text x="45.9274%" y="575.50"></text></g><g><title>tcp_current_mss (4 samples, 0.26%)</title><rect x="45.6774%" y="549" width="0.2581%" height="15" fill="rgb(211,178,42)"/><text x="45.9274%" y="559.50"></text></g><g><title>ipv4_mtu (3 samples, 0.19%)</title><rect x="45.7419%" y="533" width="0.1935%" height="15" fill="rgb(230,69,54)"/><text x="45.9919%" y="543.50"></text></g><g><title>__x64_sys_sendto (70 samples, 4.52%)</title><rect x="41.4839%" y="645" width="4.5161%" height="15" fill="rgb(214,135,41)"/><text x="41.7339%" y="655.50">__x64..</text></g><g><title>__sys_sendto (70 samples, 4.52%)</title><rect x="41.4839%" y="629" width="4.5161%" height="15" fill="rgb(237,67,25)"/><text x="41.7339%" y="639.50">__sys..</text></g><g><title>do_syscall_64 (72 samples, 4.65%)</title><rect x="41.4194%" y="661" width="4.6452%" height="15" fill="rgb(222,189,50)"/><text x="41.6694%" y="671.50">do_sy..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (126 samples, 8.13%)</title><rect x="38.1290%" y="789" width="8.1290%" height="15" fill="rgb(245,148,34)"/><text x="38.3790%" y="799.50">&lt;mysql::con..</text></g><g><title>mysql::conn::Conn::_query (126 samples, 8.13%)</title><rect x="38.1290%" y="773" width="8.1290%" height="15" fill="rgb(222,29,6)"/><text x="38.3790%" y="783.50">mysql::conn..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (80 samples, 5.16%)</title><rect x="41.0968%" y="757" width="5.1613%" height="15" fill="rgb(221,189,43)"/><text x="41.3468%" y="767.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (78 samples, 5.03%)</title><rect x="41.2258%" y="741" width="5.0323%" height="15" fill="rgb(207,36,27)"/><text x="41.4758%" y="751.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (77 samples, 4.97%)</title><rect x="41.2903%" y="725" width="4.9677%" height="15" fill="rgb(217,90,24)"/><text x="41.5403%" y="735.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (77 samples, 4.97%)</title><rect x="41.2903%" y="709" width="4.9677%" height="15" fill="rgb(224,66,35)"/><text x="41.5403%" y="719.50">std::s..</text></g><g><title>__libc_send (77 samples, 4.97%)</title><rect x="41.2903%" y="693" width="4.9677%" height="15" fill="rgb(221,13,50)"/><text x="41.5403%" y="703.50">__libc..</text></g><g><title>entry_SYSCALL_64 (76 samples, 4.90%)</title><rect x="41.3548%" y="677" width="4.9032%" height="15" fill="rgb(236,68,49)"/><text x="41.6048%" y="687.50">entry_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.19%)</title><rect x="46.0645%" y="661" width="0.1935%" height="15" fill="rgb(229,146,28)"/><text x="46.3145%" y="671.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (216 samples, 13.94%)</title><rect x="32.5161%" y="837" width="13.9355%" height="15" fill="rgb(225,31,38)"/><text x="32.7661%" y="847.50">decor::query_transfor..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (216 samples, 13.94%)</title><rect x="32.5161%" y="821" width="13.9355%" height="15" fill="rgb(250,208,3)"/><text x="32.7661%" y="831.50">decor::query_transfor..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (129 samples, 8.32%)</title><rect x="38.1290%" y="805" width="8.3226%" height="15" fill="rgb(246,54,23)"/><text x="38.3790%" y="815.50">mysql::conn:..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.19%)</title><rect x="46.2581%" y="789" width="0.1935%" height="15" fill="rgb(243,76,11)"/><text x="46.5081%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="46.2581%" y="773" width="0.1935%" height="15" fill="rgb(245,21,50)"/><text x="46.5081%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.13%)</title><rect x="46.4516%" y="837" width="0.1290%" height="15" fill="rgb(228,9,43)"/><text x="46.7016%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (2 samples, 0.13%)</title><rect x="46.4516%" y="821" width="0.1290%" height="15" fill="rgb(208,100,47)"/><text x="46.7016%" y="831.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.13%)</title><rect x="46.4516%" y="805" width="0.1290%" height="15" fill="rgb(232,26,8)"/><text x="46.7016%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.13%)</title><rect x="46.4516%" y="789" width="0.1290%" height="15" fill="rgb(216,166,38)"/><text x="46.7016%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.13%)</title><rect x="46.4516%" y="773" width="0.1290%" height="15" fill="rgb(251,202,51)"/><text x="46.7016%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.13%)</title><rect x="46.4516%" y="757" width="0.1290%" height="15" fill="rgb(254,216,34)"/><text x="46.7016%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.13%)</title><rect x="46.4516%" y="741" width="0.1290%" height="15" fill="rgb(251,32,27)"/><text x="46.7016%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="47.5484%" y="789" width="0.2581%" height="15" fill="rgb(208,127,28)"/><text x="47.7984%" y="799.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.26%)</title><rect x="47.5484%" y="773" width="0.2581%" height="15" fill="rgb(224,137,22)"/><text x="47.7984%" y="783.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="47.6774%" y="757" width="0.1290%" height="15" fill="rgb(254,70,32)"/><text x="47.9274%" y="767.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.97%)</title><rect x="47.8710%" y="789" width="0.9677%" height="15" fill="rgb(229,75,37)"/><text x="48.1210%" y="799.50"></text></g><g><title>_int_realloc (3 samples, 0.19%)</title><rect x="48.6452%" y="773" width="0.1935%" height="15" fill="rgb(252,64,23)"/><text x="48.8952%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.45%)</title><rect x="48.8387%" y="789" width="0.4516%" height="15" fill="rgb(232,162,48)"/><text x="49.0887%" y="799.50"></text></g><g><title>__rdl_realloc (4 samples, 0.26%)</title><rect x="49.2903%" y="789" width="0.2581%" height="15" fill="rgb(246,160,12)"/><text x="49.5403%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.13%)</title><rect x="49.4194%" y="773" width="0.1290%" height="15" fill="rgb(247,166,0)"/><text x="49.6694%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 1.16%)</title><rect x="49.5484%" y="789" width="1.1613%" height="15" fill="rgb(249,219,21)"/><text x="49.7984%" y="799.50"></text></g><g><title>__GI___libc_realloc (17 samples, 1.10%)</title><rect x="49.6129%" y="773" width="1.0968%" height="15" fill="rgb(205,209,3)"/><text x="49.8629%" y="783.50"></text></g><g><title>_int_realloc (17 samples, 1.10%)</title><rect x="49.6129%" y="757" width="1.0968%" height="15" fill="rgb(243,44,1)"/><text x="49.8629%" y="767.50"></text></g><g><title>_int_malloc (15 samples, 0.97%)</title><rect x="49.7419%" y="741" width="0.9677%" height="15" fill="rgb(206,159,16)"/><text x="49.9919%" y="751.50"></text></g><g><title>malloc_consolidate (11 samples, 0.71%)</title><rect x="50.0000%" y="725" width="0.7097%" height="15" fill="rgb(244,77,30)"/><text x="50.2500%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.32%)</title><rect x="50.8387%" y="773" width="0.3226%" height="15" fill="rgb(218,69,12)"/><text x="51.0887%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.19%)</title><rect x="50.9677%" y="757" width="0.1935%" height="15" fill="rgb(212,87,7)"/><text x="51.2177%" y="767.50"></text></g><g><title>__GI___libc_malloc (19 samples, 1.23%)</title><rect x="52.0645%" y="709" width="1.2258%" height="15" fill="rgb(245,114,25)"/><text x="52.3145%" y="719.50"></text></g><g><title>_int_malloc (14 samples, 0.90%)</title><rect x="52.3871%" y="693" width="0.9032%" height="15" fill="rgb(210,61,42)"/><text x="52.6371%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 1.68%)</title><rect x="51.6774%" y="741" width="1.6774%" height="15" fill="rgb(211,52,33)"/><text x="51.9274%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 1.55%)</title><rect x="51.8065%" y="725" width="1.5484%" height="15" fill="rgb(234,58,33)"/><text x="52.0565%" y="735.50"></text></g><g><title>core::fmt::Formatter::pad_integral (6 samples, 0.39%)</title><rect x="53.3548%" y="741" width="0.3871%" height="15" fill="rgb(220,115,36)"/><text x="53.6048%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (40 samples, 2.58%)</title><rect x="51.2258%" y="773" width="2.5806%" height="15" fill="rgb(243,153,54)"/><text x="51.4758%" y="783.50">co..</text></g><g><title>core::fmt::num::imp::fmt_u64 (39 samples, 2.52%)</title><rect x="51.2903%" y="757" width="2.5161%" height="15" fill="rgb(251,47,18)"/><text x="51.5403%" y="767.50">co..</text></g><g><title>core::fmt::write (50 samples, 3.23%)</title><rect x="50.7097%" y="789" width="3.2258%" height="15" fill="rgb(242,102,42)"/><text x="50.9597%" y="799.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.13%)</title><rect x="53.8065%" y="773" width="0.1290%" height="15" fill="rgb(234,31,38)"/><text x="54.0565%" y="783.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.13%)</title><rect x="53.8065%" y="757" width="0.1290%" height="15" fill="rgb(221,117,51)"/><text x="54.0565%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.13%)</title><rect x="53.8065%" y="741" width="0.1290%" height="15" fill="rgb(212,20,18)"/><text x="54.0565%" y="751.50"></text></g><g><title>core::cmp::min (2 samples, 0.13%)</title><rect x="53.8065%" y="725" width="0.1290%" height="15" fill="rgb(245,133,36)"/><text x="54.0565%" y="735.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.13%)</title><rect x="53.8065%" y="709" width="0.1290%" height="15" fill="rgb(212,6,19)"/><text x="54.0565%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="53.8065%" y="693" width="0.1290%" height="15" fill="rgb(218,1,36)"/><text x="54.0565%" y="703.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.26%)</title><rect x="54.2581%" y="677" width="0.2581%" height="15" fill="rgb(246,84,54)"/><text x="54.5081%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (4 samples, 0.26%)</title><rect x="54.2581%" y="661" width="0.2581%" height="15" fill="rgb(242,110,6)"/><text x="54.5081%" y="671.50"></text></g><g><title>decor::helpers::expr_is_ucol (12 samples, 0.77%)</title><rect x="53.9355%" y="789" width="0.7742%" height="15" fill="rgb(214,47,5)"/><text x="54.1855%" y="799.50"></text></g><g><title>core::fmt::write (10 samples, 0.65%)</title><rect x="54.0645%" y="773" width="0.6452%" height="15" fill="rgb(218,159,25)"/><text x="54.3145%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (9 samples, 0.58%)</title><rect x="54.1290%" y="757" width="0.5806%" height="15" fill="rgb(215,211,28)"/><text x="54.3790%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.58%)</title><rect x="54.1290%" y="741" width="0.5806%" height="15" fill="rgb(238,59,32)"/><text x="54.3790%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.58%)</title><rect x="54.1290%" y="725" width="0.5806%" height="15" fill="rgb(226,82,3)"/><text x="54.3790%" y="735.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.58%)</title><rect x="54.1290%" y="709" width="0.5806%" height="15" fill="rgb(240,164,32)"/><text x="54.3790%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (8 samples, 0.52%)</title><rect x="54.1935%" y="693" width="0.5161%" height="15" fill="rgb(232,46,7)"/><text x="54.4435%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.19%)</title><rect x="54.5161%" y="677" width="0.1935%" height="15" fill="rgb(229,129,53)"/><text x="54.7661%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="54.5806%" y="661" width="0.1290%" height="15" fill="rgb(234,188,29)"/><text x="54.8306%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="54.5806%" y="645" width="0.1290%" height="15" fill="rgb(246,141,4)"/><text x="54.8306%" y="655.50"></text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (129 samples, 8.32%)</title><rect x="46.5806%" y="837" width="8.3226%" height="15" fill="rgb(229,23,39)"/><text x="46.8306%" y="847.50">decor::query..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (129 samples, 8.32%)</title><rect x="46.5806%" y="821" width="8.3226%" height="15" fill="rgb(206,12,3)"/><text x="46.8306%" y="831.50">decor::query..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (129 samples, 8.32%)</title><rect x="46.5806%" y="805" width="8.3226%" height="15" fill="rgb(252,226,20)"/><text x="46.8306%" y="815.50">decor::query..</text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (3 samples, 0.19%)</title><rect x="54.7097%" y="789" width="0.1935%" height="15" fill="rgb(216,123,35)"/><text x="54.9597%" y="799.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.13%)</title><rect x="54.9032%" y="837" width="0.1290%" height="15" fill="rgb(212,68,40)"/><text x="55.1532%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.13%)</title><rect x="54.9032%" y="821" width="0.1290%" height="15" fill="rgb(254,125,32)"/><text x="55.1532%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.13%)</title><rect x="54.9032%" y="805" width="0.1290%" height="15" fill="rgb(253,97,22)"/><text x="55.1532%" y="815.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.19%)</title><rect x="55.6774%" y="469" width="0.1935%" height="15" fill="rgb(241,101,14)"/><text x="55.9274%" y="479.50"></text></g><g><title>dequeue_entity (3 samples, 0.19%)</title><rect x="55.6774%" y="453" width="0.1935%" height="15" fill="rgb(238,103,29)"/><text x="55.9274%" y="463.50"></text></g><g><title>update_curr (3 samples, 0.19%)</title><rect x="55.6774%" y="437" width="0.1935%" height="15" fill="rgb(233,195,47)"/><text x="55.9274%" y="447.50"></text></g><g><title>cpuacct_charge (2 samples, 0.13%)</title><rect x="55.7419%" y="421" width="0.1290%" height="15" fill="rgb(246,218,30)"/><text x="55.9919%" y="431.50"></text></g><g><title>__schedule (9 samples, 0.58%)</title><rect x="55.6129%" y="485" width="0.5806%" height="15" fill="rgb(219,145,47)"/><text x="55.8629%" y="495.50"></text></g><g><title>sk_wait_data (13 samples, 0.84%)</title><rect x="55.4194%" y="549" width="0.8387%" height="15" fill="rgb(243,12,26)"/><text x="55.6694%" y="559.50"></text></g><g><title>wait_woken (11 samples, 0.71%)</title><rect x="55.5484%" y="533" width="0.7097%" height="15" fill="rgb(214,87,16)"/><text x="55.7984%" y="543.50"></text></g><g><title>schedule_timeout (10 samples, 0.65%)</title><rect x="55.6129%" y="517" width="0.6452%" height="15" fill="rgb(208,99,42)"/><text x="55.8629%" y="527.50"></text></g><g><title>schedule (10 samples, 0.65%)</title><rect x="55.6129%" y="501" width="0.6452%" height="15" fill="rgb(253,99,2)"/><text x="55.8629%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (19 samples, 1.23%)</title><rect x="55.1613%" y="613" width="1.2258%" height="15" fill="rgb(220,168,23)"/><text x="55.4113%" y="623.50"></text></g><g><title>__sys_recvfrom (19 samples, 1.23%)</title><rect x="55.1613%" y="597" width="1.2258%" height="15" fill="rgb(242,38,24)"/><text x="55.4113%" y="607.50"></text></g><g><title>inet_recvmsg (19 samples, 1.23%)</title><rect x="55.1613%" y="581" width="1.2258%" height="15" fill="rgb(225,182,9)"/><text x="55.4113%" y="591.50"></text></g><g><title>tcp_recvmsg (19 samples, 1.23%)</title><rect x="55.1613%" y="565" width="1.2258%" height="15" fill="rgb(243,178,37)"/><text x="55.4113%" y="575.50"></text></g><g><title>tcp_rcv_space_adjust (2 samples, 0.13%)</title><rect x="56.2581%" y="549" width="0.1290%" height="15" fill="rgb(232,139,19)"/><text x="56.5081%" y="559.50"></text></g><g><title>do_syscall_64 (21 samples, 1.35%)</title><rect x="55.0968%" y="629" width="1.3548%" height="15" fill="rgb(225,201,24)"/><text x="55.3468%" y="639.50"></text></g><g><title>lobsters::main (24 samples, 1.55%)</title><rect x="55.0323%" y="837" width="1.5484%" height="15" fill="rgb(221,47,46)"/><text x="55.2823%" y="847.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (24 samples, 1.55%)</title><rect x="55.0323%" y="821" width="1.5484%" height="15" fill="rgb(249,23,13)"/><text x="55.2823%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (24 samples, 1.55%)</title><rect x="55.0323%" y="805" width="1.5484%" height="15" fill="rgb(219,9,5)"/><text x="55.2823%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (24 samples, 1.55%)</title><rect x="55.0323%" y="789" width="1.5484%" height="15" fill="rgb(254,171,16)"/><text x="55.2823%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (24 samples, 1.55%)</title><rect x="55.0323%" y="773" width="1.5484%" height="15" fill="rgb(230,171,20)"/><text x="55.2823%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 1.55%)</title><rect x="55.0323%" y="757" width="1.5484%" height="15" fill="rgb(210,71,41)"/><text x="55.2823%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (24 samples, 1.55%)</title><rect x="55.0323%" y="741" width="1.5484%" height="15" fill="rgb(206,173,20)"/><text x="55.2823%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (24 samples, 1.55%)</title><rect x="55.0323%" y="725" width="1.5484%" height="15" fill="rgb(233,88,34)"/><text x="55.2823%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (24 samples, 1.55%)</title><rect x="55.0323%" y="709" width="1.5484%" height="15" fill="rgb(223,209,46)"/><text x="55.2823%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (24 samples, 1.55%)</title><rect x="55.0323%" y="693" width="1.5484%" height="15" fill="rgb(250,43,18)"/><text x="55.2823%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (24 samples, 1.55%)</title><rect x="55.0323%" y="677" width="1.5484%" height="15" fill="rgb(208,13,10)"/><text x="55.2823%" y="687.50"></text></g><g><title>__libc_recv (24 samples, 1.55%)</title><rect x="55.0323%" y="661" width="1.5484%" height="15" fill="rgb(212,200,36)"/><text x="55.2823%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 1.48%)</title><rect x="55.0968%" y="645" width="1.4839%" height="15" fill="rgb(225,90,30)"/><text x="55.3468%" y="655.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="56.4516%" y="629" width="0.1290%" height="15" fill="rgb(236,182,39)"/><text x="56.7016%" y="639.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.13%)</title><rect x="56.5806%" y="789" width="0.1290%" height="15" fill="rgb(212,144,35)"/><text x="56.8306%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.19%)</title><rect x="56.5806%" y="821" width="0.1935%" height="15" fill="rgb(228,63,44)"/><text x="56.8306%" y="831.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.19%)</title><rect x="56.5806%" y="805" width="0.1935%" height="15" fill="rgb(228,109,6)"/><text x="56.8306%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_ok (3 samples, 0.19%)</title><rect x="56.8387%" y="741" width="0.1935%" height="15" fill="rgb(238,117,24)"/><text x="57.0887%" y="751.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (2 samples, 0.13%)</title><rect x="56.9032%" y="725" width="0.1290%" height="15" fill="rgb(242,26,26)"/><text x="57.1532%" y="735.50"></text></g><g><title>__kfree_skb (3 samples, 0.19%)</title><rect x="57.5484%" y="517" width="0.1935%" height="15" fill="rgb(221,92,48)"/><text x="57.7984%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.13%)</title><rect x="57.6129%" y="501" width="0.1290%" height="15" fill="rgb(209,209,32)"/><text x="57.8629%" y="511.50"></text></g><g><title>lock_sock_nested (2 samples, 0.13%)</title><rect x="57.7419%" y="517" width="0.1290%" height="15" fill="rgb(221,70,22)"/><text x="57.9919%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.13%)</title><rect x="57.7419%" y="501" width="0.1290%" height="15" fill="rgb(248,145,5)"/><text x="57.9919%" y="511.50"></text></g><g><title>preempt_count_add (2 samples, 0.13%)</title><rect x="57.7419%" y="485" width="0.1290%" height="15" fill="rgb(226,116,26)"/><text x="57.9919%" y="495.50"></text></g><g><title>intel_pmu_disable_all (2 samples, 0.13%)</title><rect x="58.1935%" y="405" width="0.1290%" height="15" fill="rgb(244,5,17)"/><text x="58.4435%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.26%)</title><rect x="58.1290%" y="437" width="0.2581%" height="15" fill="rgb(252,159,33)"/><text x="58.3790%" y="447.50"></text></g><g><title>ctx_sched_out (4 samples, 0.26%)</title><rect x="58.1290%" y="421" width="0.2581%" height="15" fill="rgb(206,71,0)"/><text x="58.3790%" y="431.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.39%)</title><rect x="58.3871%" y="437" width="0.3871%" height="15" fill="rgb(233,118,54)"/><text x="58.6371%" y="447.50"></text></g><g><title>dequeue_entity (6 samples, 0.39%)</title><rect x="58.3871%" y="421" width="0.3871%" height="15" fill="rgb(234,83,48)"/><text x="58.6371%" y="431.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="58.6452%" y="405" width="0.1290%" height="15" fill="rgb(228,3,54)"/><text x="58.8952%" y="415.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.13%)</title><rect x="58.6452%" y="389" width="0.1290%" height="15" fill="rgb(226,155,13)"/><text x="58.8952%" y="399.50"></text></g><g><title>sk_wait_data (21 samples, 1.35%)</title><rect x="57.8710%" y="517" width="1.3548%" height="15" fill="rgb(241,28,37)"/><text x="58.1210%" y="527.50"></text></g><g><title>wait_woken (19 samples, 1.23%)</title><rect x="58.0000%" y="501" width="1.2258%" height="15" fill="rgb(233,93,10)"/><text x="58.2500%" y="511.50"></text></g><g><title>schedule_timeout (17 samples, 1.10%)</title><rect x="58.1290%" y="485" width="1.0968%" height="15" fill="rgb(225,113,19)"/><text x="58.3790%" y="495.50"></text></g><g><title>schedule (17 samples, 1.10%)</title><rect x="58.1290%" y="469" width="1.0968%" height="15" fill="rgb(241,2,18)"/><text x="58.3790%" y="479.50"></text></g><g><title>__schedule (17 samples, 1.10%)</title><rect x="58.1290%" y="453" width="1.0968%" height="15" fill="rgb(228,207,21)"/><text x="58.3790%" y="463.50"></text></g><g><title>update_rq_clock (2 samples, 0.13%)</title><rect x="59.0968%" y="437" width="0.1290%" height="15" fill="rgb(213,211,35)"/><text x="59.3468%" y="447.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.13%)</title><rect x="59.0968%" y="421" width="0.1290%" height="15" fill="rgb(209,83,10)"/><text x="59.3468%" y="431.50"></text></g><g><title>sched_clock (2 samples, 0.13%)</title><rect x="59.0968%" y="405" width="0.1290%" height="15" fill="rgb(209,164,1)"/><text x="59.3468%" y="415.50"></text></g><g><title>native_sched_clock (2 samples, 0.13%)</title><rect x="59.0968%" y="389" width="0.1290%" height="15" fill="rgb(213,184,43)"/><text x="59.3468%" y="399.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.19%)</title><rect x="59.2258%" y="517" width="0.1935%" height="15" fill="rgb(231,61,34)"/><text x="59.4758%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.19%)</title><rect x="59.2258%" y="501" width="0.1935%" height="15" fill="rgb(235,75,3)"/><text x="59.4758%" y="511.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.13%)</title><rect x="59.2903%" y="485" width="0.1290%" height="15" fill="rgb(220,106,47)"/><text x="59.5403%" y="495.50"></text></g><g><title>__check_object_size (2 samples, 0.13%)</title><rect x="59.2903%" y="469" width="0.1290%" height="15" fill="rgb(210,196,33)"/><text x="59.5403%" y="479.50"></text></g><g><title>inet_recvmsg (32 samples, 2.06%)</title><rect x="57.4194%" y="549" width="2.0645%" height="15" fill="rgb(229,154,42)"/><text x="57.6694%" y="559.50">i..</text></g><g><title>tcp_recvmsg (32 samples, 2.06%)</title><rect x="57.4194%" y="533" width="2.0645%" height="15" fill="rgb(228,114,26)"/><text x="57.6694%" y="543.50">t..</text></g><g><title>do_syscall_64 (34 samples, 2.19%)</title><rect x="57.3548%" y="597" width="2.1935%" height="15" fill="rgb(208,144,1)"/><text x="57.6048%" y="607.50">d..</text></g><g><title>__x64_sys_recvfrom (34 samples, 2.19%)</title><rect x="57.3548%" y="581" width="2.1935%" height="15" fill="rgb(239,112,37)"/><text x="57.6048%" y="591.50">_..</text></g><g><title>__sys_recvfrom (34 samples, 2.19%)</title><rect x="57.3548%" y="565" width="2.1935%" height="15" fill="rgb(210,96,50)"/><text x="57.6048%" y="575.50">_..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 2.52%)</title><rect x="57.1613%" y="709" width="2.5161%" height="15" fill="rgb(222,178,2)"/><text x="57.4113%" y="719.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (39 samples, 2.52%)</title><rect x="57.1613%" y="693" width="2.5161%" height="15" fill="rgb(226,74,18)"/><text x="57.4113%" y="703.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (39 samples, 2.52%)</title><rect x="57.1613%" y="677" width="2.5161%" height="15" fill="rgb(225,67,54)"/><text x="57.4113%" y="687.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (39 samples, 2.52%)</title><rect x="57.1613%" y="661" width="2.5161%" height="15" fill="rgb(251,92,32)"/><text x="57.4113%" y="671.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (39 samples, 2.52%)</title><rect x="57.1613%" y="645" width="2.5161%" height="15" fill="rgb(228,149,22)"/><text x="57.4113%" y="655.50">st..</text></g><g><title>__libc_recv (38 samples, 2.45%)</title><rect x="57.2258%" y="629" width="2.4516%" height="15" fill="rgb(243,54,13)"/><text x="57.4758%" y="639.50">__..</text></g><g><title>entry_SYSCALL_64 (38 samples, 2.45%)</title><rect x="57.2258%" y="613" width="2.4516%" height="15" fill="rgb(243,180,28)"/><text x="57.4758%" y="623.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="59.5484%" y="597" width="0.1290%" height="15" fill="rgb(208,167,24)"/><text x="59.7984%" y="607.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 2.71%)</title><rect x="57.1613%" y="725" width="2.7097%" height="15" fill="rgb(245,73,45)"/><text x="57.4113%" y="735.50">&lt;m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.19%)</title><rect x="59.6774%" y="709" width="0.1935%" height="15" fill="rgb(237,203,48)"/><text x="59.9274%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.19%)</title><rect x="59.6774%" y="693" width="0.1935%" height="15" fill="rgb(211,197,16)"/><text x="59.9274%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.19%)</title><rect x="59.6774%" y="677" width="0.1935%" height="15" fill="rgb(243,99,51)"/><text x="59.9274%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.19%)</title><rect x="59.6774%" y="661" width="0.1935%" height="15" fill="rgb(215,123,29)"/><text x="59.9274%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.19%)</title><rect x="59.6774%" y="645" width="0.1935%" height="15" fill="rgb(239,186,37)"/><text x="59.9274%" y="655.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (50 samples, 3.23%)</title><rect x="56.7742%" y="757" width="3.2258%" height="15" fill="rgb(252,136,39)"/><text x="57.0242%" y="767.50">mys..</text></g><g><title>mysql::conn::Conn::read_packet (46 samples, 2.97%)</title><rect x="57.0323%" y="741" width="2.9677%" height="15" fill="rgb(223,213,32)"/><text x="57.2823%" y="751.50">mys..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (51 samples, 3.29%)</title><rect x="56.7742%" y="789" width="3.2903%" height="15" fill="rgb(233,115,5)"/><text x="57.0242%" y="799.50">&lt;my..</text></g><g><title>mysql::conn::Conn::_query (51 samples, 3.29%)</title><rect x="56.7742%" y="773" width="3.2903%" height="15" fill="rgb(207,226,44)"/><text x="57.0242%" y="783.50">mys..</text></g><g><title>decor::helpers::answer_rows (2 samples, 0.13%)</title><rect x="60.0645%" y="789" width="0.1290%" height="15" fill="rgb(208,126,0)"/><text x="60.3145%" y="799.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (2 samples, 0.13%)</title><rect x="60.0645%" y="773" width="0.1290%" height="15" fill="rgb(244,66,21)"/><text x="60.3145%" y="783.50"></text></g><g><title>msql_srv::writers::write_ok_packet (2 samples, 0.13%)</title><rect x="60.0645%" y="757" width="0.1290%" height="15" fill="rgb(222,97,12)"/><text x="60.3145%" y="767.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.13%)</title><rect x="61.4194%" y="405" width="0.1290%" height="15" fill="rgb(219,213,19)"/><text x="61.6694%" y="415.50"></text></g><g><title>update_curr (3 samples, 0.19%)</title><rect x="61.5484%" y="373" width="0.1935%" height="15" fill="rgb(252,169,30)"/><text x="61.7984%" y="383.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.26%)</title><rect x="61.5484%" y="405" width="0.2581%" height="15" fill="rgb(206,32,51)"/><text x="61.7984%" y="415.50"></text></g><g><title>dequeue_entity (4 samples, 0.26%)</title><rect x="61.5484%" y="389" width="0.2581%" height="15" fill="rgb(250,172,42)"/><text x="61.7984%" y="399.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="61.8065%" y="405" width="0.1290%" height="15" fill="rgb(209,34,43)"/><text x="62.0565%" y="415.50"></text></g><g><title>sk_wait_data (16 samples, 1.03%)</title><rect x="60.9677%" y="485" width="1.0323%" height="15" fill="rgb(223,11,35)"/><text x="61.2177%" y="495.50"></text></g><g><title>wait_woken (12 samples, 0.77%)</title><rect x="61.2258%" y="469" width="0.7742%" height="15" fill="rgb(251,219,26)"/><text x="61.4758%" y="479.50"></text></g><g><title>schedule_timeout (9 samples, 0.58%)</title><rect x="61.4194%" y="453" width="0.5806%" height="15" fill="rgb(231,119,3)"/><text x="61.6694%" y="463.50"></text></g><g><title>schedule (9 samples, 0.58%)</title><rect x="61.4194%" y="437" width="0.5806%" height="15" fill="rgb(216,97,11)"/><text x="61.6694%" y="447.50"></text></g><g><title>__schedule (9 samples, 0.58%)</title><rect x="61.4194%" y="421" width="0.5806%" height="15" fill="rgb(223,59,9)"/><text x="61.6694%" y="431.50"></text></g><g><title>do_syscall_64 (23 samples, 1.48%)</title><rect x="60.6452%" y="565" width="1.4839%" height="15" fill="rgb(233,93,31)"/><text x="60.8952%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 1.48%)</title><rect x="60.6452%" y="549" width="1.4839%" height="15" fill="rgb(239,81,33)"/><text x="60.8952%" y="559.50"></text></g><g><title>__sys_recvfrom (22 samples, 1.42%)</title><rect x="60.7097%" y="533" width="1.4194%" height="15" fill="rgb(213,120,34)"/><text x="60.9597%" y="543.50"></text></g><g><title>inet_recvmsg (21 samples, 1.35%)</title><rect x="60.7742%" y="517" width="1.3548%" height="15" fill="rgb(243,49,53)"/><text x="61.0242%" y="527.50"></text></g><g><title>tcp_recvmsg (20 samples, 1.29%)</title><rect x="60.8387%" y="501" width="1.2903%" height="15" fill="rgb(247,216,33)"/><text x="61.0887%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.13%)</title><rect x="62.0000%" y="485" width="0.1290%" height="15" fill="rgb(226,26,14)"/><text x="62.2500%" y="495.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.13%)</title><rect x="62.0000%" y="469" width="0.1290%" height="15" fill="rgb(215,49,53)"/><text x="62.2500%" y="479.50"></text></g><g><title>mysql::conn::Conn::read_packet (28 samples, 1.81%)</title><rect x="60.3871%" y="709" width="1.8065%" height="15" fill="rgb(245,162,40)"/><text x="60.6371%" y="719.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 1.81%)</title><rect x="60.3871%" y="693" width="1.8065%" height="15" fill="rgb(229,68,17)"/><text x="60.6371%" y="703.50">&lt;..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (26 samples, 1.68%)</title><rect x="60.5161%" y="677" width="1.6774%" height="15" fill="rgb(213,182,10)"/><text x="60.7661%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 1.61%)</title><rect x="60.5806%" y="661" width="1.6129%" height="15" fill="rgb(245,125,30)"/><text x="60.8306%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 1.61%)</title><rect x="60.5806%" y="645" width="1.6129%" height="15" fill="rgb(232,202,2)"/><text x="60.8306%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 1.61%)</title><rect x="60.5806%" y="629" width="1.6129%" height="15" fill="rgb(237,140,51)"/><text x="60.8306%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 1.61%)</title><rect x="60.5806%" y="613" width="1.6129%" height="15" fill="rgb(236,157,25)"/><text x="60.8306%" y="623.50"></text></g><g><title>__libc_recv (25 samples, 1.61%)</title><rect x="60.5806%" y="597" width="1.6129%" height="15" fill="rgb(219,209,0)"/><text x="60.8306%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 1.61%)</title><rect x="60.5806%" y="581" width="1.6129%" height="15" fill="rgb(240,116,54)"/><text x="60.8306%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (31 samples, 2.00%)</title><rect x="60.2581%" y="725" width="2.0000%" height="15" fill="rgb(216,10,36)"/><text x="60.5081%" y="735.50">m..</text></g><g><title>__dev_queue_xmit (4 samples, 0.26%)</title><rect x="62.6452%" y="437" width="0.2581%" height="15" fill="rgb(222,72,44)"/><text x="62.8952%" y="447.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.26%)</title><rect x="62.6452%" y="421" width="0.2581%" height="15" fill="rgb(232,159,9)"/><text x="62.8952%" y="431.50"></text></g><g><title>loopback_xmit (3 samples, 0.19%)</title><rect x="62.7097%" y="405" width="0.1935%" height="15" fill="rgb(210,39,32)"/><text x="62.9597%" y="415.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.13%)</title><rect x="62.9677%" y="373" width="0.1290%" height="15" fill="rgb(216,194,45)"/><text x="63.2177%" y="383.50"></text></g><g><title>enqueue_task (2 samples, 0.13%)</title><rect x="63.4839%" y="133" width="0.1290%" height="15" fill="rgb(218,18,35)"/><text x="63.7339%" y="143.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.19%)</title><rect x="63.7419%" y="133" width="0.1935%" height="15" fill="rgb(207,83,51)"/><text x="63.9919%" y="143.50"></text></g><g><title>sock_def_readable (10 samples, 0.65%)</title><rect x="63.3548%" y="213" width="0.6452%" height="15" fill="rgb(225,63,43)"/><text x="63.6048%" y="223.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.58%)</title><rect x="63.4194%" y="197" width="0.5806%" height="15" fill="rgb(207,57,36)"/><text x="63.6694%" y="207.50"></text></g><g><title>__wake_up_common (9 samples, 0.58%)</title><rect x="63.4194%" y="181" width="0.5806%" height="15" fill="rgb(216,99,33)"/><text x="63.6694%" y="191.50"></text></g><g><title>pollwake (9 samples, 0.58%)</title><rect x="63.4194%" y="165" width="0.5806%" height="15" fill="rgb(225,42,16)"/><text x="63.6694%" y="175.50"></text></g><g><title>try_to_wake_up (9 samples, 0.58%)</title><rect x="63.4194%" y="149" width="0.5806%" height="15" fill="rgb(220,201,45)"/><text x="63.6694%" y="159.50"></text></g><g><title>tcp_ack (4 samples, 0.26%)</title><rect x="64.0000%" y="213" width="0.2581%" height="15" fill="rgb(225,33,4)"/><text x="64.2500%" y="223.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.13%)</title><rect x="64.2581%" y="213" width="0.1290%" height="15" fill="rgb(224,33,50)"/><text x="64.5081%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (21 samples, 1.35%)</title><rect x="63.0968%" y="341" width="1.3548%" height="15" fill="rgb(246,198,51)"/><text x="63.3468%" y="351.50"></text></g><g><title>ip_rcv (20 samples, 1.29%)</title><rect x="63.1613%" y="325" width="1.2903%" height="15" fill="rgb(205,22,4)"/><text x="63.4113%" y="335.50"></text></g><g><title>ip_local_deliver (20 samples, 1.29%)</title><rect x="63.1613%" y="309" width="1.2903%" height="15" fill="rgb(206,3,8)"/><text x="63.4113%" y="319.50"></text></g><g><title>ip_local_deliver_finish (20 samples, 1.29%)</title><rect x="63.1613%" y="293" width="1.2903%" height="15" fill="rgb(251,23,15)"/><text x="63.4113%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (20 samples, 1.29%)</title><rect x="63.1613%" y="277" width="1.2903%" height="15" fill="rgb(252,88,28)"/><text x="63.4113%" y="287.50"></text></g><g><title>tcp_v4_rcv (18 samples, 1.16%)</title><rect x="63.2903%" y="261" width="1.1613%" height="15" fill="rgb(212,127,14)"/><text x="63.5403%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (18 samples, 1.16%)</title><rect x="63.2903%" y="245" width="1.1613%" height="15" fill="rgb(247,145,37)"/><text x="63.5403%" y="255.50"></text></g><g><title>tcp_rcv_established (18 samples, 1.16%)</title><rect x="63.2903%" y="229" width="1.1613%" height="15" fill="rgb(209,117,53)"/><text x="63.5403%" y="239.50"></text></g><g><title>ip_finish_output2 (30 samples, 1.94%)</title><rect x="62.5806%" y="453" width="1.9355%" height="15" fill="rgb(212,90,42)"/><text x="62.8306%" y="463.50">i..</text></g><g><title>__local_bh_enable_ip (25 samples, 1.61%)</title><rect x="62.9032%" y="437" width="1.6129%" height="15" fill="rgb(218,164,37)"/><text x="63.1532%" y="447.50"></text></g><g><title>do_softirq (25 samples, 1.61%)</title><rect x="62.9032%" y="421" width="1.6129%" height="15" fill="rgb(246,65,34)"/><text x="63.1532%" y="431.50"></text></g><g><title>do_softirq_own_stack (24 samples, 1.55%)</title><rect x="62.9677%" y="405" width="1.5484%" height="15" fill="rgb(231,100,33)"/><text x="63.2177%" y="415.50"></text></g><g><title>__do_softirq (24 samples, 1.55%)</title><rect x="62.9677%" y="389" width="1.5484%" height="15" fill="rgb(228,126,14)"/><text x="63.2177%" y="399.50"></text></g><g><title>net_rx_action (22 samples, 1.42%)</title><rect x="63.0968%" y="373" width="1.4194%" height="15" fill="rgb(215,173,21)"/><text x="63.3468%" y="383.50"></text></g><g><title>process_backlog (22 samples, 1.42%)</title><rect x="63.0968%" y="357" width="1.4194%" height="15" fill="rgb(210,6,40)"/><text x="63.3468%" y="367.50"></text></g><g><title>__tcp_transmit_skb (33 samples, 2.13%)</title><rect x="62.4516%" y="501" width="2.1290%" height="15" fill="rgb(212,48,18)"/><text x="62.7016%" y="511.50">_..</text></g><g><title>__ip_queue_xmit (33 samples, 2.13%)</title><rect x="62.4516%" y="485" width="2.1290%" height="15" fill="rgb(230,214,11)"/><text x="62.7016%" y="495.50">_..</text></g><g><title>ip_output (33 samples, 2.13%)</title><rect x="62.4516%" y="469" width="2.1290%" height="15" fill="rgb(254,105,39)"/><text x="62.7016%" y="479.50">i..</text></g><g><title>__tcp_push_pending_frames (35 samples, 2.26%)</title><rect x="62.3871%" y="533" width="2.2581%" height="15" fill="rgb(245,158,5)"/><text x="62.6371%" y="543.50">_..</text></g><g><title>tcp_write_xmit (34 samples, 2.19%)</title><rect x="62.4516%" y="517" width="2.1935%" height="15" fill="rgb(249,208,11)"/><text x="62.7016%" y="527.50">t..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.19%)</title><rect x="64.6452%" y="533" width="0.1935%" height="15" fill="rgb(210,39,28)"/><text x="64.8952%" y="543.50"></text></g><g><title>__alloc_skb (3 samples, 0.19%)</title><rect x="64.6452%" y="517" width="0.1935%" height="15" fill="rgb(211,56,53)"/><text x="64.8952%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.13%)</title><rect x="64.7097%" y="501" width="0.1290%" height="15" fill="rgb(226,201,30)"/><text x="64.9597%" y="511.50"></text></g><g><title>__x64_sys_sendto (42 samples, 2.71%)</title><rect x="62.3226%" y="613" width="2.7097%" height="15" fill="rgb(239,101,34)"/><text x="62.5726%" y="623.50">__..</text></g><g><title>__sys_sendto (42 samples, 2.71%)</title><rect x="62.3226%" y="597" width="2.7097%" height="15" fill="rgb(226,209,5)"/><text x="62.5726%" y="607.50">__..</text></g><g><title>sock_sendmsg (42 samples, 2.71%)</title><rect x="62.3226%" y="581" width="2.7097%" height="15" fill="rgb(250,105,47)"/><text x="62.5726%" y="591.50">so..</text></g><g><title>tcp_sendmsg (42 samples, 2.71%)</title><rect x="62.3226%" y="565" width="2.7097%" height="15" fill="rgb(230,72,3)"/><text x="62.5726%" y="575.50">tc..</text></g><g><title>tcp_sendmsg_locked (42 samples, 2.71%)</title><rect x="62.3226%" y="549" width="2.7097%" height="15" fill="rgb(232,218,39)"/><text x="62.5726%" y="559.50">tc..</text></g><g><title>tcp_send_mss (2 samples, 0.13%)</title><rect x="64.9032%" y="533" width="0.1290%" height="15" fill="rgb(248,166,6)"/><text x="65.1532%" y="543.50"></text></g><g><title>tcp_current_mss (2 samples, 0.13%)</title><rect x="64.9032%" y="517" width="0.1290%" height="15" fill="rgb(247,89,20)"/><text x="65.1532%" y="527.50"></text></g><g><title>do_syscall_64 (43 samples, 2.77%)</title><rect x="62.3226%" y="629" width="2.7742%" height="15" fill="rgb(248,130,54)"/><text x="62.5726%" y="639.50">do..</text></g><g><title>mysql::conn::Conn::start_transaction (80 samples, 5.16%)</title><rect x="60.1935%" y="789" width="5.1613%" height="15" fill="rgb(234,196,4)"/><text x="60.4435%" y="799.50">mysql:..</text></g><g><title>mysql::conn::Conn::_start_transaction (80 samples, 5.16%)</title><rect x="60.1935%" y="773" width="5.1613%" height="15" fill="rgb(250,143,31)"/><text x="60.4435%" y="783.50">mysql:..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (80 samples, 5.16%)</title><rect x="60.1935%" y="757" width="5.1613%" height="15" fill="rgb(211,110,34)"/><text x="60.4435%" y="767.50">mysql:..</text></g><g><title>mysql::conn::Conn::_query (79 samples, 5.10%)</title><rect x="60.2581%" y="741" width="5.0968%" height="15" fill="rgb(215,124,48)"/><text x="60.5081%" y="751.50">mysql:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (48 samples, 3.10%)</title><rect x="62.2581%" y="725" width="3.0968%" height="15" fill="rgb(216,46,13)"/><text x="62.5081%" y="735.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (48 samples, 3.10%)</title><rect x="62.2581%" y="709" width="3.0968%" height="15" fill="rgb(205,184,25)"/><text x="62.5081%" y="719.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (48 samples, 3.10%)</title><rect x="62.2581%" y="693" width="3.0968%" height="15" fill="rgb(228,1,10)"/><text x="62.5081%" y="703.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (48 samples, 3.10%)</title><rect x="62.2581%" y="677" width="3.0968%" height="15" fill="rgb(213,116,27)"/><text x="62.5081%" y="687.50">std..</text></g><g><title>__libc_send (48 samples, 3.10%)</title><rect x="62.2581%" y="661" width="3.0968%" height="15" fill="rgb(241,95,50)"/><text x="62.5081%" y="671.50">__l..</text></g><g><title>entry_SYSCALL_64 (48 samples, 3.10%)</title><rect x="62.2581%" y="645" width="3.0968%" height="15" fill="rgb(238,48,32)"/><text x="62.5081%" y="655.50">ent..</text></g><g><title>prepare_exit_to_usermode (4 samples, 0.26%)</title><rect x="65.0968%" y="629" width="0.2581%" height="15" fill="rgb(235,113,49)"/><text x="65.3468%" y="639.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.13%)</title><rect x="65.9355%" y="485" width="0.1290%" height="15" fill="rgb(205,127,43)"/><text x="66.1855%" y="495.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.13%)</title><rect x="66.0645%" y="485" width="0.1290%" height="15" fill="rgb(250,162,2)"/><text x="66.3145%" y="495.50"></text></g><g><title>preempt_count_sub (2 samples, 0.13%)</title><rect x="66.0645%" y="469" width="0.1290%" height="15" fill="rgb(220,13,41)"/><text x="66.3145%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.26%)</title><rect x="66.5806%" y="421" width="0.2581%" height="15" fill="rgb(249,221,25)"/><text x="66.8306%" y="431.50"></text></g><g><title>ctx_sched_out (3 samples, 0.19%)</title><rect x="66.6452%" y="405" width="0.1935%" height="15" fill="rgb(215,208,19)"/><text x="66.8952%" y="415.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.32%)</title><rect x="66.8387%" y="421" width="0.3226%" height="15" fill="rgb(236,175,2)"/><text x="67.0887%" y="431.50"></text></g><g><title>dequeue_entity (5 samples, 0.32%)</title><rect x="66.8387%" y="405" width="0.3226%" height="15" fill="rgb(241,52,2)"/><text x="67.0887%" y="415.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="67.0323%" y="389" width="0.1290%" height="15" fill="rgb(248,140,14)"/><text x="67.2823%" y="399.50"></text></g><g><title>finish_task_switch (2 samples, 0.13%)</title><rect x="67.1613%" y="421" width="0.1290%" height="15" fill="rgb(253,22,42)"/><text x="67.4113%" y="431.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="67.2903%" y="421" width="0.1290%" height="15" fill="rgb(234,61,47)"/><text x="67.5403%" y="431.50"></text></g><g><title>__schedule (17 samples, 1.10%)</title><rect x="66.4516%" y="437" width="1.0968%" height="15" fill="rgb(208,226,15)"/><text x="66.7016%" y="447.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.13%)</title><rect x="67.4194%" y="421" width="0.1290%" height="15" fill="rgb(217,221,4)"/><text x="67.6694%" y="431.50"></text></g><g><title>sk_wait_data (27 samples, 1.74%)</title><rect x="65.8710%" y="501" width="1.7419%" height="15" fill="rgb(212,174,34)"/><text x="66.1210%" y="511.50"></text></g><g><title>wait_woken (21 samples, 1.35%)</title><rect x="66.2581%" y="485" width="1.3548%" height="15" fill="rgb(253,83,4)"/><text x="66.5081%" y="495.50"></text></g><g><title>schedule_timeout (18 samples, 1.16%)</title><rect x="66.4516%" y="469" width="1.1613%" height="15" fill="rgb(250,195,49)"/><text x="66.7016%" y="479.50"></text></g><g><title>schedule (18 samples, 1.16%)</title><rect x="66.4516%" y="453" width="1.1613%" height="15" fill="rgb(241,192,25)"/><text x="66.7016%" y="463.50"></text></g><g><title>do_syscall_64 (32 samples, 2.06%)</title><rect x="65.6774%" y="581" width="2.0645%" height="15" fill="rgb(208,124,10)"/><text x="65.9274%" y="591.50">d..</text></g><g><title>__x64_sys_recvfrom (32 samples, 2.06%)</title><rect x="65.6774%" y="565" width="2.0645%" height="15" fill="rgb(222,33,0)"/><text x="65.9274%" y="575.50">_..</text></g><g><title>__sys_recvfrom (32 samples, 2.06%)</title><rect x="65.6774%" y="549" width="2.0645%" height="15" fill="rgb(234,209,28)"/><text x="65.9274%" y="559.50">_..</text></g><g><title>inet_recvmsg (32 samples, 2.06%)</title><rect x="65.6774%" y="533" width="2.0645%" height="15" fill="rgb(224,11,23)"/><text x="65.9274%" y="543.50">i..</text></g><g><title>tcp_recvmsg (32 samples, 2.06%)</title><rect x="65.6774%" y="517" width="2.0645%" height="15" fill="rgb(232,99,1)"/><text x="65.9274%" y="527.50">t..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 2.26%)</title><rect x="65.6129%" y="693" width="2.2581%" height="15" fill="rgb(237,95,45)"/><text x="65.8629%" y="703.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 2.19%)</title><rect x="65.6774%" y="677" width="2.1935%" height="15" fill="rgb(208,109,11)"/><text x="65.9274%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 2.19%)</title><rect x="65.6774%" y="661" width="2.1935%" height="15" fill="rgb(216,190,48)"/><text x="65.9274%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 2.19%)</title><rect x="65.6774%" y="645" width="2.1935%" height="15" fill="rgb(251,171,36)"/><text x="65.9274%" y="655.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 2.19%)</title><rect x="65.6774%" y="629" width="2.1935%" height="15" fill="rgb(230,62,22)"/><text x="65.9274%" y="639.50">s..</text></g><g><title>__libc_recv (34 samples, 2.19%)</title><rect x="65.6774%" y="613" width="2.1935%" height="15" fill="rgb(225,114,35)"/><text x="65.9274%" y="623.50">_..</text></g><g><title>entry_SYSCALL_64 (34 samples, 2.19%)</title><rect x="65.6774%" y="597" width="2.1935%" height="15" fill="rgb(215,118,42)"/><text x="65.9274%" y="607.50">e..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="67.7419%" y="581" width="0.1290%" height="15" fill="rgb(243,119,21)"/><text x="67.9919%" y="591.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (42 samples, 2.71%)</title><rect x="65.3548%" y="741" width="2.7097%" height="15" fill="rgb(252,177,53)"/><text x="65.6048%" y="751.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (39 samples, 2.52%)</title><rect x="65.5484%" y="725" width="2.5161%" height="15" fill="rgb(237,209,29)"/><text x="65.7984%" y="735.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 2.52%)</title><rect x="65.5484%" y="709" width="2.5161%" height="15" fill="rgb(212,65,23)"/><text x="65.7984%" y="719.50">&lt;m..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.19%)</title><rect x="67.8710%" y="693" width="0.1935%" height="15" fill="rgb(230,222,46)"/><text x="68.1210%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.19%)</title><rect x="67.8710%" y="677" width="0.1935%" height="15" fill="rgb(215,135,32)"/><text x="68.1210%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.19%)</title><rect x="67.8710%" y="661" width="0.1935%" height="15" fill="rgb(246,101,22)"/><text x="68.1210%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.13%)</title><rect x="67.9355%" y="645" width="0.1290%" height="15" fill="rgb(206,107,13)"/><text x="68.1855%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.13%)</title><rect x="67.9355%" y="629" width="0.1290%" height="15" fill="rgb(250,100,44)"/><text x="68.1855%" y="639.50"></text></g><g><title>release_sock (2 samples, 0.13%)</title><rect x="68.4516%" y="565" width="0.1290%" height="15" fill="rgb(231,147,38)"/><text x="68.7016%" y="575.50"></text></g><g><title>__netif_receive_skb_core (4 samples, 0.26%)</title><rect x="69.0323%" y="341" width="0.2581%" height="15" fill="rgb(229,8,40)"/><text x="69.2823%" y="351.50"></text></g><g><title>enqueue_task (4 samples, 0.26%)</title><rect x="69.6129%" y="149" width="0.2581%" height="15" fill="rgb(221,135,30)"/><text x="69.8629%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.19%)</title><rect x="69.6774%" y="133" width="0.1935%" height="15" fill="rgb(249,193,18)"/><text x="69.9274%" y="143.50"></text></g><g><title>__wake_up_common (6 samples, 0.39%)</title><rect x="69.6129%" y="197" width="0.3871%" height="15" fill="rgb(209,133,39)"/><text x="69.8629%" y="207.50"></text></g><g><title>pollwake (6 samples, 0.39%)</title><rect x="69.6129%" y="181" width="0.3871%" height="15" fill="rgb(232,100,14)"/><text x="69.8629%" y="191.50"></text></g><g><title>try_to_wake_up (6 samples, 0.39%)</title><rect x="69.6129%" y="165" width="0.3871%" height="15" fill="rgb(224,185,1)"/><text x="69.8629%" y="175.50"></text></g><g><title>sock_def_readable (8 samples, 0.52%)</title><rect x="69.6129%" y="229" width="0.5161%" height="15" fill="rgb(223,139,8)"/><text x="69.8629%" y="239.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.52%)</title><rect x="69.6129%" y="213" width="0.5161%" height="15" fill="rgb(232,213,38)"/><text x="69.8629%" y="223.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.13%)</title><rect x="70.0000%" y="197" width="0.1290%" height="15" fill="rgb(207,94,22)"/><text x="70.2500%" y="207.50"></text></g><g><title>tcp_ack (4 samples, 0.26%)</title><rect x="70.1290%" y="229" width="0.2581%" height="15" fill="rgb(219,183,54)"/><text x="70.3790%" y="239.50"></text></g><g><title>ip_local_deliver (18 samples, 1.16%)</title><rect x="69.2903%" y="325" width="1.1613%" height="15" fill="rgb(216,185,54)"/><text x="69.5403%" y="335.50"></text></g><g><title>ip_local_deliver_finish (17 samples, 1.10%)</title><rect x="69.3548%" y="309" width="1.0968%" height="15" fill="rgb(254,217,39)"/><text x="69.6048%" y="319.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 1.03%)</title><rect x="69.4194%" y="293" width="1.0323%" height="15" fill="rgb(240,178,23)"/><text x="69.6694%" y="303.50"></text></g><g><title>tcp_v4_rcv (14 samples, 0.90%)</title><rect x="69.5484%" y="277" width="0.9032%" height="15" fill="rgb(218,11,47)"/><text x="69.7984%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 0.84%)</title><rect x="69.6129%" y="261" width="0.8387%" height="15" fill="rgb(218,51,51)"/><text x="69.8629%" y="271.50"></text></g><g><title>tcp_rcv_established (13 samples, 0.84%)</title><rect x="69.6129%" y="245" width="0.8387%" height="15" fill="rgb(238,126,27)"/><text x="69.8629%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (23 samples, 1.48%)</title><rect x="69.0323%" y="357" width="1.4839%" height="15" fill="rgb(249,202,22)"/><text x="69.2823%" y="367.50"></text></g><g><title>ip_rcv (19 samples, 1.23%)</title><rect x="69.2903%" y="341" width="1.2258%" height="15" fill="rgb(254,195,49)"/><text x="69.5403%" y="351.50"></text></g><g><title>ip_finish_output2 (26 samples, 1.68%)</title><rect x="68.9032%" y="469" width="1.6774%" height="15" fill="rgb(208,123,14)"/><text x="69.1532%" y="479.50"></text></g><g><title>__local_bh_enable_ip (25 samples, 1.61%)</title><rect x="68.9677%" y="453" width="1.6129%" height="15" fill="rgb(224,200,8)"/><text x="69.2177%" y="463.50"></text></g><g><title>do_softirq (25 samples, 1.61%)</title><rect x="68.9677%" y="437" width="1.6129%" height="15" fill="rgb(217,61,36)"/><text x="69.2177%" y="447.50"></text></g><g><title>do_softirq_own_stack (25 samples, 1.61%)</title><rect x="68.9677%" y="421" width="1.6129%" height="15" fill="rgb(206,35,45)"/><text x="69.2177%" y="431.50"></text></g><g><title>__do_softirq (25 samples, 1.61%)</title><rect x="68.9677%" y="405" width="1.6129%" height="15" fill="rgb(217,65,33)"/><text x="69.2177%" y="415.50"></text></g><g><title>net_rx_action (24 samples, 1.55%)</title><rect x="69.0323%" y="389" width="1.5484%" height="15" fill="rgb(222,158,48)"/><text x="69.2823%" y="399.50"></text></g><g><title>process_backlog (24 samples, 1.55%)</title><rect x="69.0323%" y="373" width="1.5484%" height="15" fill="rgb(254,2,54)"/><text x="69.2823%" y="383.50"></text></g><g><title>__tcp_transmit_skb (28 samples, 1.81%)</title><rect x="68.9032%" y="517" width="1.8065%" height="15" fill="rgb(250,143,38)"/><text x="69.1532%" y="527.50">_..</text></g><g><title>__ip_queue_xmit (28 samples, 1.81%)</title><rect x="68.9032%" y="501" width="1.8065%" height="15" fill="rgb(248,25,0)"/><text x="69.1532%" y="511.50">_..</text></g><g><title>ip_output (28 samples, 1.81%)</title><rect x="68.9032%" y="485" width="1.8065%" height="15" fill="rgb(206,152,27)"/><text x="69.1532%" y="495.50">i..</text></g><g><title>ip_finish_output (2 samples, 0.13%)</title><rect x="70.5806%" y="469" width="0.1290%" height="15" fill="rgb(240,77,30)"/><text x="70.8306%" y="479.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.13%)</title><rect x="70.5806%" y="453" width="0.1290%" height="15" fill="rgb(231,5,3)"/><text x="70.8306%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (32 samples, 2.06%)</title><rect x="68.7742%" y="549" width="2.0645%" height="15" fill="rgb(207,226,32)"/><text x="69.0242%" y="559.50">_..</text></g><g><title>tcp_write_xmit (31 samples, 2.00%)</title><rect x="68.8387%" y="533" width="2.0000%" height="15" fill="rgb(222,207,47)"/><text x="69.0887%" y="543.50">t..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.19%)</title><rect x="70.9032%" y="549" width="0.1935%" height="15" fill="rgb(229,115,45)"/><text x="71.1532%" y="559.50"></text></g><g><title>__alloc_skb (3 samples, 0.19%)</title><rect x="70.9032%" y="533" width="0.1935%" height="15" fill="rgb(224,191,6)"/><text x="71.1532%" y="543.50"></text></g><g><title>__x64_sys_sendto (45 samples, 2.90%)</title><rect x="68.3226%" y="629" width="2.9032%" height="15" fill="rgb(230,227,24)"/><text x="68.5726%" y="639.50">__..</text></g><g><title>__sys_sendto (45 samples, 2.90%)</title><rect x="68.3226%" y="613" width="2.9032%" height="15" fill="rgb(228,80,19)"/><text x="68.5726%" y="623.50">__..</text></g><g><title>sock_sendmsg (43 samples, 2.77%)</title><rect x="68.4516%" y="597" width="2.7742%" height="15" fill="rgb(247,229,0)"/><text x="68.7016%" y="607.50">so..</text></g><g><title>tcp_sendmsg (43 samples, 2.77%)</title><rect x="68.4516%" y="581" width="2.7742%" height="15" fill="rgb(237,194,15)"/><text x="68.7016%" y="591.50">tc..</text></g><g><title>tcp_sendmsg_locked (41 samples, 2.65%)</title><rect x="68.5806%" y="565" width="2.6452%" height="15" fill="rgb(219,203,20)"/><text x="68.8306%" y="575.50">tc..</text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.13%)</title><rect x="71.0968%" y="549" width="0.1290%" height="15" fill="rgb(234,128,8)"/><text x="71.3468%" y="559.50"></text></g><g><title>__check_object_size (2 samples, 0.13%)</title><rect x="71.0968%" y="533" width="0.1290%" height="15" fill="rgb(248,202,8)"/><text x="71.3468%" y="543.50"></text></g><g><title>do_syscall_64 (47 samples, 3.03%)</title><rect x="68.3226%" y="645" width="3.0323%" height="15" fill="rgb(206,104,37)"/><text x="68.5726%" y="655.50">do_..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.13%)</title><rect x="71.2258%" y="629" width="0.1290%" height="15" fill="rgb(223,8,27)"/><text x="71.4758%" y="639.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.13%)</title><rect x="71.2258%" y="613" width="0.1290%" height="15" fill="rgb(216,217,28)"/><text x="71.4758%" y="623.50"></text></g><g><title>kfree (2 samples, 0.13%)</title><rect x="71.2258%" y="597" width="0.1290%" height="15" fill="rgb(249,199,1)"/><text x="71.4758%" y="607.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (229 samples, 14.77%)</title><rect x="56.7742%" y="805" width="14.7742%" height="15" fill="rgb(240,85,17)"/><text x="57.0242%" y="815.50">decor::query_transforme..</text></g><g><title>mysql::conn::transaction::Transaction::commit (96 samples, 6.19%)</title><rect x="65.3548%" y="789" width="6.1935%" height="15" fill="rgb(206,108,45)"/><text x="65.6048%" y="799.50">mysql::c..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (96 samples, 6.19%)</title><rect x="65.3548%" y="773" width="6.1935%" height="15" fill="rgb(245,210,41)"/><text x="65.6048%" y="783.50">mysql::c..</text></g><g><title>mysql::conn::Conn::_query (96 samples, 6.19%)</title><rect x="65.3548%" y="757" width="6.1935%" height="15" fill="rgb(206,13,37)"/><text x="65.6048%" y="767.50">mysql::c..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (54 samples, 3.48%)</title><rect x="68.0645%" y="741" width="3.4839%" height="15" fill="rgb(250,61,18)"/><text x="68.3145%" y="751.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (53 samples, 3.42%)</title><rect x="68.1290%" y="725" width="3.4194%" height="15" fill="rgb(235,172,48)"/><text x="68.3790%" y="735.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (53 samples, 3.42%)</title><rect x="68.1290%" y="709" width="3.4194%" height="15" fill="rgb(249,201,17)"/><text x="68.3790%" y="719.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (53 samples, 3.42%)</title><rect x="68.1290%" y="693" width="3.4194%" height="15" fill="rgb(219,208,6)"/><text x="68.3790%" y="703.50">std..</text></g><g><title>__libc_send (53 samples, 3.42%)</title><rect x="68.1290%" y="677" width="3.4194%" height="15" fill="rgb(248,31,23)"/><text x="68.3790%" y="687.50">__l..</text></g><g><title>entry_SYSCALL_64 (51 samples, 3.29%)</title><rect x="68.2581%" y="661" width="3.2903%" height="15" fill="rgb(245,15,42)"/><text x="68.5081%" y="671.50">ent..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.19%)</title><rect x="71.3548%" y="645" width="0.1935%" height="15" fill="rgb(222,217,39)"/><text x="71.6048%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="71.5484%" y="773" width="0.1290%" height="15" fill="rgb(210,219,27)"/><text x="71.7984%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="71.8065%" y="741" width="0.1290%" height="15" fill="rgb(252,166,36)"/><text x="72.0565%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (7 samples, 0.45%)</title><rect x="71.5484%" y="789" width="0.4516%" height="15" fill="rgb(245,132,34)"/><text x="71.7984%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.32%)</title><rect x="71.6774%" y="773" width="0.3226%" height="15" fill="rgb(236,54,3)"/><text x="71.9274%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="71.7419%" y="757" width="0.2581%" height="15" fill="rgb(241,173,43)"/><text x="71.9919%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.13%)</title><rect x="72.1935%" y="757" width="0.1290%" height="15" fill="rgb(215,190,9)"/><text x="72.4435%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (245 samples, 15.81%)</title><rect x="56.5806%" y="837" width="15.8065%" height="15" fill="rgb(242,101,16)"/><text x="56.8306%" y="847.50">msql_srv::MysqlIntermedi..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (242 samples, 15.61%)</title><rect x="56.7742%" y="821" width="15.6129%" height="15" fill="rgb(223,190,21)"/><text x="57.0242%" y="831.50">&lt;decor::Shim as msql_srv..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (13 samples, 0.84%)</title><rect x="71.5484%" y="805" width="0.8387%" height="15" fill="rgb(215,228,25)"/><text x="71.7984%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (6 samples, 0.39%)</title><rect x="72.0000%" y="789" width="0.3871%" height="15" fill="rgb(225,36,22)"/><text x="72.2500%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (5 samples, 0.32%)</title><rect x="72.0645%" y="773" width="0.3226%" height="15" fill="rgb(251,106,46)"/><text x="72.3145%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.13%)</title><rect x="72.3871%" y="837" width="0.1290%" height="15" fill="rgb(208,90,1)"/><text x="72.6371%" y="847.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.19%)</title><rect x="72.5161%" y="837" width="0.1935%" height="15" fill="rgb(243,10,4)"/><text x="72.7661%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (19 samples, 1.23%)</title><rect x="72.9032%" y="837" width="1.2258%" height="15" fill="rgb(212,137,27)"/><text x="73.1532%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (19 samples, 1.23%)</title><rect x="72.9032%" y="821" width="1.2258%" height="15" fill="rgb(231,220,49)"/><text x="73.1532%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (19 samples, 1.23%)</title><rect x="72.9032%" y="805" width="1.2258%" height="15" fill="rgb(237,96,20)"/><text x="73.1532%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (19 samples, 1.23%)</title><rect x="72.9032%" y="789" width="1.2258%" height="15" fill="rgb(239,229,30)"/><text x="73.1532%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (19 samples, 1.23%)</title><rect x="72.9032%" y="773" width="1.2258%" height="15" fill="rgb(219,65,33)"/><text x="73.1532%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (19 samples, 1.23%)</title><rect x="72.9032%" y="757" width="1.2258%" height="15" fill="rgb(243,134,7)"/><text x="73.1532%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (19 samples, 1.23%)</title><rect x="72.9032%" y="741" width="1.2258%" height="15" fill="rgb(216,177,54)"/><text x="73.1532%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19 samples, 1.23%)</title><rect x="72.9032%" y="725" width="1.2258%" height="15" fill="rgb(211,160,20)"/><text x="73.1532%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 1.23%)</title><rect x="72.9032%" y="709" width="1.2258%" height="15" fill="rgb(239,85,39)"/><text x="73.1532%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 1.23%)</title><rect x="72.9032%" y="693" width="1.2258%" height="15" fill="rgb(232,125,22)"/><text x="73.1532%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 1.23%)</title><rect x="72.9032%" y="677" width="1.2258%" height="15" fill="rgb(244,57,34)"/><text x="73.1532%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (19 samples, 1.23%)</title><rect x="72.9032%" y="661" width="1.2258%" height="15" fill="rgb(214,203,32)"/><text x="73.1532%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 1.23%)</title><rect x="72.9032%" y="645" width="1.2258%" height="15" fill="rgb(207,58,43)"/><text x="73.1532%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (19 samples, 1.23%)</title><rect x="72.9032%" y="629" width="1.2258%" height="15" fill="rgb(215,193,15)"/><text x="73.1532%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 1.23%)</title><rect x="72.9032%" y="613" width="1.2258%" height="15" fill="rgb(232,15,44)"/><text x="73.1532%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (19 samples, 1.23%)</title><rect x="72.9032%" y="597" width="1.2258%" height="15" fill="rgb(212,3,48)"/><text x="73.1532%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.19%)</title><rect x="74.1290%" y="837" width="0.1935%" height="15" fill="rgb(218,128,7)"/><text x="74.3790%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.13%)</title><rect x="74.3871%" y="837" width="0.1290%" height="15" fill="rgb(226,216,39)"/><text x="74.6371%" y="847.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.13%)</title><rect x="74.3871%" y="821" width="0.1290%" height="15" fill="rgb(243,47,51)"/><text x="74.6371%" y="831.50"></text></g><g><title>std::panicking::try (2 samples, 0.13%)</title><rect x="74.3871%" y="805" width="0.1290%" height="15" fill="rgb(241,183,40)"/><text x="74.6371%" y="815.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.13%)</title><rect x="74.3871%" y="789" width="0.1290%" height="15" fill="rgb(231,217,32)"/><text x="74.6371%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.13%)</title><rect x="74.3871%" y="773" width="0.1290%" height="15" fill="rgb(229,61,38)"/><text x="74.6371%" y="783.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.13%)</title><rect x="74.3871%" y="757" width="0.1290%" height="15" fill="rgb(225,210,5)"/><text x="74.6371%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.13%)</title><rect x="74.3871%" y="741" width="0.1290%" height="15" fill="rgb(231,79,45)"/><text x="74.6371%" y="751.50"></text></g><g><title>lobsters::main (2 samples, 0.13%)</title><rect x="74.3871%" y="725" width="0.1290%" height="15" fill="rgb(224,100,7)"/><text x="74.6371%" y="735.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="74.6452%" y="741" width="0.1290%" height="15" fill="rgb(241,198,18)"/><text x="74.8952%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.26%)</title><rect x="74.6452%" y="757" width="0.2581%" height="15" fill="rgb(252,97,53)"/><text x="74.8952%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="74.7742%" y="741" width="0.1290%" height="15" fill="rgb(220,88,7)"/><text x="75.0242%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="74.7742%" y="725" width="0.1290%" height="15" fill="rgb(213,176,14)"/><text x="75.0242%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.58%)</title><rect x="74.5161%" y="837" width="0.5806%" height="15" fill="rgb(246,73,7)"/><text x="74.7661%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (9 samples, 0.58%)</title><rect x="74.5161%" y="821" width="0.5806%" height="15" fill="rgb(245,64,36)"/><text x="74.7661%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (9 samples, 0.58%)</title><rect x="74.5161%" y="805" width="0.5806%" height="15" fill="rgb(245,80,10)"/><text x="74.7661%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.58%)</title><rect x="74.5161%" y="789" width="0.5806%" height="15" fill="rgb(232,107,50)"/><text x="74.7661%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (9 samples, 0.58%)</title><rect x="74.5161%" y="773" width="0.5806%" height="15" fill="rgb(253,3,0)"/><text x="74.7661%" y="783.50"></text></g><g><title>mysql::conn::transaction::Transaction::commit (2 samples, 0.13%)</title><rect x="74.9677%" y="757" width="0.1290%" height="15" fill="rgb(212,99,53)"/><text x="75.2177%" y="767.50"></text></g><g><title>[unknown] (1,054 samples, 68.00%)</title><rect x="7.2258%" y="853" width="68.0000%" height="15" fill="rgb(249,111,54)"/><text x="7.4758%" y="863.50">[unknown]</text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="75.5484%" y="677" width="0.1290%" height="15" fill="rgb(249,55,30)"/><text x="75.7984%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.58%)</title><rect x="75.4839%" y="709" width="0.5806%" height="15" fill="rgb(237,47,42)"/><text x="75.7339%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.52%)</title><rect x="75.5484%" y="693" width="0.5161%" height="15" fill="rgb(211,20,18)"/><text x="75.7984%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.39%)</title><rect x="75.6774%" y="677" width="0.3871%" height="15" fill="rgb(231,203,46)"/><text x="75.9274%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.26%)</title><rect x="75.8065%" y="661" width="0.2581%" height="15" fill="rgb(237,142,3)"/><text x="76.0565%" y="671.50"></text></g><g><title>__kfree_skb (3 samples, 0.19%)</title><rect x="76.3226%" y="501" width="0.1935%" height="15" fill="rgb(241,107,1)"/><text x="76.5726%" y="511.50"></text></g><g><title>skb_release_head_state (2 samples, 0.13%)</title><rect x="76.3871%" y="485" width="0.1290%" height="15" fill="rgb(229,83,13)"/><text x="76.6371%" y="495.50"></text></g><g><title>dst_release (2 samples, 0.13%)</title><rect x="76.3871%" y="469" width="0.1290%" height="15" fill="rgb(241,91,40)"/><text x="76.6371%" y="479.50"></text></g><g><title>ip_local_deliver (3 samples, 0.19%)</title><rect x="76.7097%" y="309" width="0.1935%" height="15" fill="rgb(225,3,45)"/><text x="76.9597%" y="319.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.19%)</title><rect x="76.7097%" y="293" width="0.1935%" height="15" fill="rgb(244,223,14)"/><text x="76.9597%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.19%)</title><rect x="76.7097%" y="277" width="0.1935%" height="15" fill="rgb(224,124,37)"/><text x="76.9597%" y="287.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.19%)</title><rect x="76.7097%" y="261" width="0.1935%" height="15" fill="rgb(251,171,30)"/><text x="76.9597%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.19%)</title><rect x="76.7097%" y="245" width="0.1935%" height="15" fill="rgb(236,46,54)"/><text x="76.9597%" y="255.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.19%)</title><rect x="76.7097%" y="229" width="0.1935%" height="15" fill="rgb(245,213,5)"/><text x="76.9597%" y="239.50"></text></g><g><title>tcp_ack (2 samples, 0.13%)</title><rect x="76.7742%" y="213" width="0.1290%" height="15" fill="rgb(230,144,27)"/><text x="77.0242%" y="223.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.39%)</title><rect x="76.5806%" y="501" width="0.3871%" height="15" fill="rgb(220,86,6)"/><text x="76.8306%" y="511.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.39%)</title><rect x="76.5806%" y="485" width="0.3871%" height="15" fill="rgb(240,20,13)"/><text x="76.8306%" y="495.50"></text></g><g><title>ip_output (5 samples, 0.32%)</title><rect x="76.6452%" y="469" width="0.3226%" height="15" fill="rgb(217,89,34)"/><text x="76.8952%" y="479.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.32%)</title><rect x="76.6452%" y="453" width="0.3226%" height="15" fill="rgb(229,13,5)"/><text x="76.8952%" y="463.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.26%)</title><rect x="76.7097%" y="437" width="0.2581%" height="15" fill="rgb(244,67,35)"/><text x="76.9597%" y="447.50"></text></g><g><title>do_softirq (4 samples, 0.26%)</title><rect x="76.7097%" y="421" width="0.2581%" height="15" fill="rgb(221,40,2)"/><text x="76.9597%" y="431.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.26%)</title><rect x="76.7097%" y="405" width="0.2581%" height="15" fill="rgb(237,157,21)"/><text x="76.9597%" y="415.50"></text></g><g><title>__do_softirq (4 samples, 0.26%)</title><rect x="76.7097%" y="389" width="0.2581%" height="15" fill="rgb(222,94,11)"/><text x="76.9597%" y="399.50"></text></g><g><title>net_rx_action (4 samples, 0.26%)</title><rect x="76.7097%" y="373" width="0.2581%" height="15" fill="rgb(249,113,6)"/><text x="76.9597%" y="383.50"></text></g><g><title>process_backlog (4 samples, 0.26%)</title><rect x="76.7097%" y="357" width="0.2581%" height="15" fill="rgb(238,137,36)"/><text x="76.9597%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.26%)</title><rect x="76.7097%" y="341" width="0.2581%" height="15" fill="rgb(210,102,26)"/><text x="76.9597%" y="351.50"></text></g><g><title>ip_rcv (4 samples, 0.26%)</title><rect x="76.7097%" y="325" width="0.2581%" height="15" fill="rgb(218,30,30)"/><text x="76.9597%" y="335.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="77.4194%" y="421" width="0.1290%" height="15" fill="rgb(214,67,26)"/><text x="77.6694%" y="431.50"></text></g><g><title>psi_group_change (2 samples, 0.13%)</title><rect x="77.4194%" y="405" width="0.1290%" height="15" fill="rgb(251,9,53)"/><text x="77.6694%" y="415.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.13%)</title><rect x="77.5484%" y="421" width="0.1290%" height="15" fill="rgb(228,204,25)"/><text x="77.7984%" y="431.50"></text></g><g><title>__schedule (9 samples, 0.58%)</title><rect x="77.2258%" y="437" width="0.5806%" height="15" fill="rgb(207,153,8)"/><text x="77.4758%" y="447.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.13%)</title><rect x="77.6774%" y="421" width="0.1290%" height="15" fill="rgb(242,9,16)"/><text x="77.9274%" y="431.50"></text></g><g><title>sk_wait_data (12 samples, 0.77%)</title><rect x="77.0968%" y="501" width="0.7742%" height="15" fill="rgb(217,211,10)"/><text x="77.3468%" y="511.50"></text></g><g><title>wait_woken (11 samples, 0.71%)</title><rect x="77.1613%" y="485" width="0.7097%" height="15" fill="rgb(219,228,52)"/><text x="77.4113%" y="495.50"></text></g><g><title>schedule_timeout (10 samples, 0.65%)</title><rect x="77.2258%" y="469" width="0.6452%" height="15" fill="rgb(231,92,29)"/><text x="77.4758%" y="479.50"></text></g><g><title>schedule (10 samples, 0.65%)</title><rect x="77.2258%" y="453" width="0.6452%" height="15" fill="rgb(232,8,23)"/><text x="77.4758%" y="463.50"></text></g><g><title>inet_recvmsg (27 samples, 1.74%)</title><rect x="76.2581%" y="533" width="1.7419%" height="15" fill="rgb(216,211,34)"/><text x="76.5081%" y="543.50"></text></g><g><title>tcp_recvmsg (26 samples, 1.68%)</title><rect x="76.3226%" y="517" width="1.6774%" height="15" fill="rgb(236,151,0)"/><text x="76.5726%" y="527.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.13%)</title><rect x="77.8710%" y="501" width="0.1290%" height="15" fill="rgb(209,168,3)"/><text x="78.1210%" y="511.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.13%)</title><rect x="77.8710%" y="485" width="0.1290%" height="15" fill="rgb(208,129,28)"/><text x="78.1210%" y="495.50"></text></g><g><title>do_syscall_64 (28 samples, 1.81%)</title><rect x="76.2581%" y="581" width="1.8065%" height="15" fill="rgb(229,78,22)"/><text x="76.5081%" y="591.50">d..</text></g><g><title>__x64_sys_recvfrom (28 samples, 1.81%)</title><rect x="76.2581%" y="565" width="1.8065%" height="15" fill="rgb(228,187,13)"/><text x="76.5081%" y="575.50">_..</text></g><g><title>__sys_recvfrom (28 samples, 1.81%)</title><rect x="76.2581%" y="549" width="1.8065%" height="15" fill="rgb(240,119,24)"/><text x="76.5081%" y="559.50">_..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (30 samples, 1.94%)</title><rect x="76.1935%" y="693" width="1.9355%" height="15" fill="rgb(209,194,42)"/><text x="76.4435%" y="703.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (30 samples, 1.94%)</title><rect x="76.1935%" y="677" width="1.9355%" height="15" fill="rgb(247,200,46)"/><text x="76.4435%" y="687.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (30 samples, 1.94%)</title><rect x="76.1935%" y="661" width="1.9355%" height="15" fill="rgb(218,76,16)"/><text x="76.4435%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (30 samples, 1.94%)</title><rect x="76.1935%" y="645" width="1.9355%" height="15" fill="rgb(225,21,48)"/><text x="76.4435%" y="655.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (30 samples, 1.94%)</title><rect x="76.1935%" y="629" width="1.9355%" height="15" fill="rgb(239,223,50)"/><text x="76.4435%" y="639.50">s..</text></g><g><title>__libc_recv (30 samples, 1.94%)</title><rect x="76.1935%" y="613" width="1.9355%" height="15" fill="rgb(244,45,21)"/><text x="76.4435%" y="623.50">_..</text></g><g><title>entry_SYSCALL_64 (30 samples, 1.94%)</title><rect x="76.1935%" y="597" width="1.9355%" height="15" fill="rgb(232,33,43)"/><text x="76.4435%" y="607.50">e..</text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (33 samples, 2.13%)</title><rect x="76.1935%" y="709" width="2.1290%" height="15" fill="rgb(209,8,3)"/><text x="76.4435%" y="719.50">m..</text></g><g><title>msql_srv::packet::packet (2 samples, 0.13%)</title><rect x="78.1935%" y="693" width="0.1290%" height="15" fill="rgb(214,25,53)"/><text x="78.4435%" y="703.50"></text></g><g><title>netif_rx (2 samples, 0.13%)</title><rect x="78.9677%" y="389" width="0.1290%" height="15" fill="rgb(254,186,54)"/><text x="79.2177%" y="399.50"></text></g><g><title>netif_rx_internal (2 samples, 0.13%)</title><rect x="78.9677%" y="373" width="0.1290%" height="15" fill="rgb(208,174,49)"/><text x="79.2177%" y="383.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.26%)</title><rect x="78.9032%" y="437" width="0.2581%" height="15" fill="rgb(233,191,51)"/><text x="79.1532%" y="447.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.26%)</title><rect x="78.9032%" y="421" width="0.2581%" height="15" fill="rgb(222,134,10)"/><text x="79.1532%" y="431.50"></text></g><g><title>loopback_xmit (4 samples, 0.26%)</title><rect x="78.9032%" y="405" width="0.2581%" height="15" fill="rgb(230,226,20)"/><text x="79.1532%" y="415.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.19%)</title><rect x="79.4839%" y="245" width="0.1935%" height="15" fill="rgb(251,111,25)"/><text x="79.7339%" y="255.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.26%)</title><rect x="79.9355%" y="149" width="0.2581%" height="15" fill="rgb(224,40,46)"/><text x="80.1855%" y="159.50"></text></g><g><title>enqueue_entity (4 samples, 0.26%)</title><rect x="79.9355%" y="133" width="0.2581%" height="15" fill="rgb(236,108,47)"/><text x="80.1855%" y="143.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="80.0645%" y="117" width="0.1290%" height="15" fill="rgb(234,93,0)"/><text x="80.3145%" y="127.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.13%)</title><rect x="80.2581%" y="149" width="0.1290%" height="15" fill="rgb(224,213,32)"/><text x="80.5081%" y="159.50"></text></g><g><title>check_preempt_curr (2 samples, 0.13%)</title><rect x="80.2581%" y="133" width="0.1290%" height="15" fill="rgb(251,11,48)"/><text x="80.5081%" y="143.50"></text></g><g><title>resched_curr (2 samples, 0.13%)</title><rect x="80.2581%" y="117" width="0.1290%" height="15" fill="rgb(236,173,5)"/><text x="80.5081%" y="127.50"></text></g><g><title>sock_def_readable (10 samples, 0.65%)</title><rect x="79.8710%" y="213" width="0.6452%" height="15" fill="rgb(230,95,12)"/><text x="80.1210%" y="223.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.65%)</title><rect x="79.8710%" y="197" width="0.6452%" height="15" fill="rgb(232,209,1)"/><text x="80.1210%" y="207.50"></text></g><g><title>__wake_up_common (10 samples, 0.65%)</title><rect x="79.8710%" y="181" width="0.6452%" height="15" fill="rgb(232,6,1)"/><text x="80.1210%" y="191.50"></text></g><g><title>try_to_wake_up (10 samples, 0.65%)</title><rect x="79.8710%" y="165" width="0.6452%" height="15" fill="rgb(210,224,50)"/><text x="80.1210%" y="175.50"></text></g><g><title>update_rq_clock (2 samples, 0.13%)</title><rect x="80.3871%" y="149" width="0.1290%" height="15" fill="rgb(228,127,35)"/><text x="80.6371%" y="159.50"></text></g><g><title>ip_local_deliver (22 samples, 1.42%)</title><rect x="79.2903%" y="309" width="1.4194%" height="15" fill="rgb(245,102,45)"/><text x="79.5403%" y="319.50"></text></g><g><title>ip_local_deliver_finish (22 samples, 1.42%)</title><rect x="79.2903%" y="293" width="1.4194%" height="15" fill="rgb(214,1,49)"/><text x="79.5403%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (21 samples, 1.35%)</title><rect x="79.3548%" y="277" width="1.3548%" height="15" fill="rgb(226,163,40)"/><text x="79.6048%" y="287.50"></text></g><g><title>tcp_v4_rcv (21 samples, 1.35%)</title><rect x="79.3548%" y="261" width="1.3548%" height="15" fill="rgb(239,212,28)"/><text x="79.6048%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 0.97%)</title><rect x="79.7419%" y="245" width="0.9677%" height="15" fill="rgb(220,20,13)"/><text x="79.9919%" y="255.50"></text></g><g><title>tcp_rcv_established (15 samples, 0.97%)</title><rect x="79.7419%" y="229" width="0.9677%" height="15" fill="rgb(210,164,35)"/><text x="79.9919%" y="239.50"></text></g><g><title>tcp_ack (3 samples, 0.19%)</title><rect x="80.5161%" y="213" width="0.1935%" height="15" fill="rgb(248,109,41)"/><text x="80.7661%" y="223.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="80.5806%" y="197" width="0.1290%" height="15" fill="rgb(238,23,50)"/><text x="80.8306%" y="207.50"></text></g><g><title>skb_release_data (2 samples, 0.13%)</title><rect x="80.5806%" y="181" width="0.1290%" height="15" fill="rgb(211,48,49)"/><text x="80.8306%" y="191.50"></text></g><g><title>__netif_receive_skb_one_core (25 samples, 1.61%)</title><rect x="79.2258%" y="341" width="1.6129%" height="15" fill="rgb(223,36,21)"/><text x="79.4758%" y="351.50"></text></g><g><title>ip_rcv (25 samples, 1.61%)</title><rect x="79.2258%" y="325" width="1.6129%" height="15" fill="rgb(207,123,46)"/><text x="79.4758%" y="335.50"></text></g><g><title>ip_rcv_core (2 samples, 0.13%)</title><rect x="80.7097%" y="309" width="0.1290%" height="15" fill="rgb(240,218,32)"/><text x="80.9597%" y="319.50"></text></g><g><title>__ip_queue_xmit (36 samples, 2.32%)</title><rect x="78.5806%" y="485" width="2.3226%" height="15" fill="rgb(252,5,43)"/><text x="78.8306%" y="495.50">_..</text></g><g><title>ip_output (33 samples, 2.13%)</title><rect x="78.7742%" y="469" width="2.1290%" height="15" fill="rgb(252,84,19)"/><text x="79.0242%" y="479.50">i..</text></g><g><title>ip_finish_output2 (32 samples, 2.06%)</title><rect x="78.8387%" y="453" width="2.0645%" height="15" fill="rgb(243,152,39)"/><text x="79.0887%" y="463.50">i..</text></g><g><title>__local_bh_enable_ip (27 samples, 1.74%)</title><rect x="79.1613%" y="437" width="1.7419%" height="15" fill="rgb(234,160,15)"/><text x="79.4113%" y="447.50"></text></g><g><title>do_softirq (27 samples, 1.74%)</title><rect x="79.1613%" y="421" width="1.7419%" height="15" fill="rgb(237,34,20)"/><text x="79.4113%" y="431.50"></text></g><g><title>do_softirq_own_stack (27 samples, 1.74%)</title><rect x="79.1613%" y="405" width="1.7419%" height="15" fill="rgb(229,97,13)"/><text x="79.4113%" y="415.50"></text></g><g><title>__do_softirq (27 samples, 1.74%)</title><rect x="79.1613%" y="389" width="1.7419%" height="15" fill="rgb(234,71,50)"/><text x="79.4113%" y="399.50"></text></g><g><title>net_rx_action (27 samples, 1.74%)</title><rect x="79.1613%" y="373" width="1.7419%" height="15" fill="rgb(253,155,4)"/><text x="79.4113%" y="383.50"></text></g><g><title>process_backlog (27 samples, 1.74%)</title><rect x="79.1613%" y="357" width="1.7419%" height="15" fill="rgb(222,185,37)"/><text x="79.4113%" y="367.50"></text></g><g><title>__tcp_transmit_skb (39 samples, 2.52%)</title><rect x="78.5806%" y="501" width="2.5161%" height="15" fill="rgb(251,177,13)"/><text x="78.8306%" y="511.50">__..</text></g><g><title>__tcp_push_pending_frames (40 samples, 2.58%)</title><rect x="78.5806%" y="533" width="2.5806%" height="15" fill="rgb(250,179,40)"/><text x="78.8306%" y="543.50">__..</text></g><g><title>tcp_write_xmit (40 samples, 2.58%)</title><rect x="78.5806%" y="517" width="2.5806%" height="15" fill="rgb(242,44,2)"/><text x="78.8306%" y="527.50">tc..</text></g><g><title>sock_sendmsg (46 samples, 2.97%)</title><rect x="78.3871%" y="581" width="2.9677%" height="15" fill="rgb(216,177,13)"/><text x="78.6371%" y="591.50">soc..</text></g><g><title>tcp_sendmsg (46 samples, 2.97%)</title><rect x="78.3871%" y="565" width="2.9677%" height="15" fill="rgb(216,106,43)"/><text x="78.6371%" y="575.50">tcp..</text></g><g><title>tcp_sendmsg_locked (43 samples, 2.77%)</title><rect x="78.5806%" y="549" width="2.7742%" height="15" fill="rgb(216,183,2)"/><text x="78.8306%" y="559.50">tc..</text></g><g><title>__x64_sys_sendto (47 samples, 3.03%)</title><rect x="78.3871%" y="613" width="3.0323%" height="15" fill="rgb(249,75,3)"/><text x="78.6371%" y="623.50">__x..</text></g><g><title>__sys_sendto (47 samples, 3.03%)</title><rect x="78.3871%" y="597" width="3.0323%" height="15" fill="rgb(219,67,39)"/><text x="78.6371%" y="607.50">__s..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.13%)</title><rect x="81.4194%" y="613" width="0.1290%" height="15" fill="rgb(253,228,2)"/><text x="81.6694%" y="623.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.13%)</title><rect x="81.4194%" y="597" width="0.1290%" height="15" fill="rgb(235,138,27)"/><text x="81.6694%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (50 samples, 3.23%)</title><rect x="78.3871%" y="645" width="3.2258%" height="15" fill="rgb(236,97,51)"/><text x="78.6371%" y="655.50">ent..</text></g><g><title>do_syscall_64 (50 samples, 3.23%)</title><rect x="78.3871%" y="629" width="3.2258%" height="15" fill="rgb(240,80,30)"/><text x="78.6371%" y="639.50">do_..</text></g><g><title>__GI___clone (100 samples, 6.45%)</title><rect x="75.2258%" y="853" width="6.4516%" height="15" fill="rgb(230,178,19)"/><text x="75.4758%" y="863.50">__GI___c..</text></g><g><title>start_thread (100 samples, 6.45%)</title><rect x="75.2258%" y="837" width="6.4516%" height="15" fill="rgb(210,190,27)"/><text x="75.4758%" y="847.50">start_th..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (99 samples, 6.39%)</title><rect x="75.2903%" y="821" width="6.3871%" height="15" fill="rgb(222,107,31)"/><text x="75.5403%" y="831.50">std::sys..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (99 samples, 6.39%)</title><rect x="75.2903%" y="805" width="6.3871%" height="15" fill="rgb(216,127,34)"/><text x="75.5403%" y="815.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (99 samples, 6.39%)</title><rect x="75.2903%" y="789" width="6.3871%" height="15" fill="rgb(234,116,52)"/><text x="75.5403%" y="799.50">&lt;alloc::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (99 samples, 6.39%)</title><rect x="75.2903%" y="773" width="6.3871%" height="15" fill="rgb(222,124,15)"/><text x="75.5403%" y="783.50">core::op..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (99 samples, 6.39%)</title><rect x="75.2903%" y="757" width="6.3871%" height="15" fill="rgb(231,179,28)"/><text x="75.5403%" y="767.50">std::sys..</text></g><g><title>decor::Shim::run_on_tcp (99 samples, 6.39%)</title><rect x="75.2903%" y="741" width="6.3871%" height="15" fill="rgb(226,93,45)"/><text x="75.5403%" y="751.50">decor::S..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (99 samples, 6.39%)</title><rect x="75.2903%" y="725" width="6.3871%" height="15" fill="rgb(215,8,51)"/><text x="75.5403%" y="735.50">msql_srv..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 3.35%)</title><rect x="78.3226%" y="709" width="3.3548%" height="15" fill="rgb(223,106,5)"/><text x="78.5726%" y="719.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (52 samples, 3.35%)</title><rect x="78.3226%" y="693" width="3.3548%" height="15" fill="rgb(250,191,5)"/><text x="78.5726%" y="703.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (52 samples, 3.35%)</title><rect x="78.3226%" y="677" width="3.3548%" height="15" fill="rgb(242,132,44)"/><text x="78.5726%" y="687.50">std..</text></g><g><title>__libc_send (52 samples, 3.35%)</title><rect x="78.3226%" y="661" width="3.3548%" height="15" fill="rgb(251,152,29)"/><text x="78.5726%" y="671.50">__l..</text></g><g><title>alloc::fmt::format (2 samples, 0.13%)</title><rect x="81.8710%" y="677" width="0.1290%" height="15" fill="rgb(218,179,5)"/><text x="82.1210%" y="687.50"></text></g><g><title>__GI___libc_free (2 samples, 0.13%)</title><rect x="82.1290%" y="581" width="0.1290%" height="15" fill="rgb(227,67,19)"/><text x="82.3790%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (231 samples, 14.90%)</title><rect x="82.5161%" y="373" width="14.9032%" height="15" fill="rgb(233,119,31)"/><text x="82.7661%" y="383.50">__intel_pmu_enable_all...</text></g><g><title>native_write_msr (231 samples, 14.90%)</title><rect x="82.5161%" y="357" width="14.9032%" height="15" fill="rgb(241,120,22)"/><text x="82.7661%" y="367.50">native_write_msr</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 15.10%)</title><rect x="82.3871%" y="533" width="15.0968%" height="15" fill="rgb(224,102,30)"/><text x="82.6371%" y="543.50">__x64_sys_sched_setaffi..</text></g><g><title>sched_setaffinity (234 samples, 15.10%)</title><rect x="82.3871%" y="517" width="15.0968%" height="15" fill="rgb(210,164,37)"/><text x="82.6371%" y="527.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 15.10%)</title><rect x="82.3871%" y="501" width="15.0968%" height="15" fill="rgb(226,191,16)"/><text x="82.6371%" y="511.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 15.10%)</title><rect x="82.3871%" y="485" width="15.0968%" height="15" fill="rgb(214,40,45)"/><text x="82.6371%" y="495.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 15.10%)</title><rect x="82.3871%" y="469" width="15.0968%" height="15" fill="rgb(244,29,26)"/><text x="82.6371%" y="479.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 15.10%)</title><rect x="82.3871%" y="453" width="15.0968%" height="15" fill="rgb(216,16,5)"/><text x="82.6371%" y="463.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 15.10%)</title><rect x="82.3871%" y="437" width="15.0968%" height="15" fill="rgb(249,76,35)"/><text x="82.6371%" y="447.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 15.10%)</title><rect x="82.3871%" y="421" width="15.0968%" height="15" fill="rgb(207,11,44)"/><text x="82.6371%" y="431.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 15.10%)</title><rect x="82.3871%" y="405" width="15.0968%" height="15" fill="rgb(228,190,49)"/><text x="82.6371%" y="415.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 15.10%)</title><rect x="82.3871%" y="389" width="15.0968%" height="15" fill="rgb(214,173,12)"/><text x="82.6371%" y="399.50">__perf_event_task_sched..</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 15.29%)</title><rect x="82.2581%" y="581" width="15.2903%" height="15" fill="rgb(218,26,35)"/><text x="82.5081%" y="591.50">__GI___sched_setaffinit..</text></g><g><title>entry_SYSCALL_64 (235 samples, 15.16%)</title><rect x="82.3871%" y="565" width="15.1613%" height="15" fill="rgb(220,200,19)"/><text x="82.6371%" y="575.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (235 samples, 15.16%)</title><rect x="82.3871%" y="549" width="15.1613%" height="15" fill="rgb(239,95,49)"/><text x="82.6371%" y="559.50">do_syscall_64</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 15.61%)</title><rect x="82.0000%" y="613" width="15.6129%" height="15" fill="rgb(235,85,53)"/><text x="82.2500%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 15.48%)</title><rect x="82.1290%" y="597" width="15.4839%" height="15" fill="rgb(233,133,31)"/><text x="82.3790%" y="607.50">hwloc_linux_set_tid_cpub..</text></g><g><title>hwloc::Topology::new (243 samples, 15.68%)</title><rect x="82.0000%" y="677" width="15.6774%" height="15" fill="rgb(218,25,20)"/><text x="82.2500%" y="687.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (243 samples, 15.68%)</title><rect x="82.0000%" y="661" width="15.6774%" height="15" fill="rgb(252,210,38)"/><text x="82.2500%" y="671.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 15.68%)</title><rect x="82.0000%" y="645" width="15.6774%" height="15" fill="rgb(242,134,21)"/><text x="82.2500%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (243 samples, 15.68%)</title><rect x="82.0000%" y="629" width="15.6774%" height="15" fill="rgb(213,28,48)"/><text x="82.2500%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>__libc_start_main (246 samples, 15.87%)</title><rect x="81.8710%" y="837" width="15.8710%" height="15" fill="rgb(250,196,2)"/><text x="82.1210%" y="847.50">__libc_start_main</text></g><g><title>main (246 samples, 15.87%)</title><rect x="81.8710%" y="821" width="15.8710%" height="15" fill="rgb(227,5,17)"/><text x="82.1210%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (246 samples, 15.87%)</title><rect x="81.8710%" y="805" width="15.8710%" height="15" fill="rgb(221,226,24)"/><text x="82.1210%" y="815.50">std::rt::lang_start_inte..</text></g><g><title>std::panic::catch_unwind (246 samples, 15.87%)</title><rect x="81.8710%" y="789" width="15.8710%" height="15" fill="rgb(211,5,48)"/><text x="82.1210%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (246 samples, 15.87%)</title><rect x="81.8710%" y="773" width="15.8710%" height="15" fill="rgb(219,150,6)"/><text x="82.1210%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (246 samples, 15.87%)</title><rect x="81.8710%" y="757" width="15.8710%" height="15" fill="rgb(251,46,16)"/><text x="82.1210%" y="767.50">std::panicking::try::do_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (246 samples, 15.87%)</title><rect x="81.8710%" y="741" width="15.8710%" height="15" fill="rgb(220,204,40)"/><text x="82.1210%" y="751.50">core::ops::function::imp..</text></g><g><title>std::rt::lang_start::_{{closure}} (246 samples, 15.87%)</title><rect x="81.8710%" y="725" width="15.8710%" height="15" fill="rgb(211,85,2)"/><text x="82.1210%" y="735.50">std::rt::lang_start::_{{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (246 samples, 15.87%)</title><rect x="81.8710%" y="709" width="15.8710%" height="15" fill="rgb(229,17,7)"/><text x="82.1210%" y="719.50">std::sys_common::backtra..</text></g><g><title>lobsters::main (246 samples, 15.87%)</title><rect x="81.8710%" y="693" width="15.8710%" height="15" fill="rgb(239,72,28)"/><text x="82.1210%" y="703.50">lobsters::main</text></g><g><title>_start (247 samples, 15.94%)</title><rect x="81.8710%" y="853" width="15.9355%" height="15" fill="rgb(230,47,54)"/><text x="82.1210%" y="863.50">_start</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="97.8065%" y="853" width="0.1290%" height="15" fill="rgb(214,50,8)"/><text x="98.0565%" y="863.50"></text></g><g><title>anon.5d78f01d0c76bb6b8aa47fe516d3530c.58.llvm.16501999531583085355 (5 samples, 0.32%)</title><rect x="98.0000%" y="853" width="0.3226%" height="15" fill="rgb(216,198,43)"/><text x="98.2500%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.32%)</title><rect x="98.0000%" y="837" width="0.3226%" height="15" fill="rgb(234,20,35)"/><text x="98.2500%" y="847.50"></text></g><g><title>anon.6a93c2b9c98c64aff0cd8fc76b30f961.10.llvm.13736081390416656097 (2 samples, 0.13%)</title><rect x="98.3226%" y="853" width="0.1290%" height="15" fill="rgb(254,45,19)"/><text x="98.5726%" y="863.50"></text></g><g><title>_int_realloc (2 samples, 0.13%)</title><rect x="98.3226%" y="837" width="0.1290%" height="15" fill="rgb(219,14,44)"/><text x="98.5726%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.26%)</title><rect x="98.6452%" y="853" width="0.2581%" height="15" fill="rgb(217,220,26)"/><text x="98.8952%" y="863.50"></text></g><g><title>do_syscall_64 (2 samples, 0.13%)</title><rect x="98.7742%" y="837" width="0.1290%" height="15" fill="rgb(213,158,28)"/><text x="99.0242%" y="847.50"></text></g><g><title>page_fault (5 samples, 0.32%)</title><rect x="98.9677%" y="853" width="0.3226%" height="15" fill="rgb(252,51,52)"/><text x="99.2177%" y="863.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.13%)</title><rect x="99.4194%" y="853" width="0.1290%" height="15" fill="rgb(246,89,16)"/><text x="99.6694%" y="863.50"></text></g><g><title>lobsters (1,544 samples, 99.61%)</title><rect x="0.0000%" y="869" width="99.6129%" height="15" fill="rgb(216,158,49)"/><text x="0.2500%" y="879.50">lobsters</text></g><g><title>all (1,550 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(236,107,19)"/><text x="0.2500%" y="895.50"></text></g><g><title>perf (6 samples, 0.39%)</title><rect x="99.6129%" y="869" width="0.3871%" height="15" fill="rgb(228,185,30)"/><text x="99.8629%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.39%)</title><rect x="99.6129%" y="853" width="0.3871%" height="15" fill="rgb(246,134,8)"/><text x="99.8629%" y="863.50"></text></g><g><title>do_syscall_64 (6 samples, 0.39%)</title><rect x="99.6129%" y="837" width="0.3871%" height="15" fill="rgb(214,143,50)"/><text x="99.8629%" y="847.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.39%)</title><rect x="99.6129%" y="821" width="0.3871%" height="15" fill="rgb(228,75,8)"/><text x="99.8629%" y="831.50"></text></g><g><title>do_execve (6 samples, 0.39%)</title><rect x="99.6129%" y="805" width="0.3871%" height="15" fill="rgb(207,175,4)"/><text x="99.8629%" y="815.50"></text></g><g><title>__do_execve_file (6 samples, 0.39%)</title><rect x="99.6129%" y="789" width="0.3871%" height="15" fill="rgb(205,108,24)"/><text x="99.8629%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.39%)</title><rect x="99.6129%" y="773" width="0.3871%" height="15" fill="rgb(244,120,49)"/><text x="99.8629%" y="783.50"></text></g><g><title>load_elf_binary (6 samples, 0.39%)</title><rect x="99.6129%" y="757" width="0.3871%" height="15" fill="rgb(223,47,38)"/><text x="99.8629%" y="767.50"></text></g><g><title>setup_new_exec (6 samples, 0.39%)</title><rect x="99.6129%" y="741" width="0.3871%" height="15" fill="rgb(229,179,11)"/><text x="99.8629%" y="751.50"></text></g><g><title>perf_event_exec (6 samples, 0.39%)</title><rect x="99.6129%" y="725" width="0.3871%" height="15" fill="rgb(231,122,1)"/><text x="99.8629%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.32%)</title><rect x="99.6774%" y="709" width="0.3226%" height="15" fill="rgb(245,119,9)"/><text x="99.9274%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.32%)</title><rect x="99.6774%" y="693" width="0.3226%" height="15" fill="rgb(241,163,25)"/><text x="99.9274%" y="703.50"></text></g></svg></svg>