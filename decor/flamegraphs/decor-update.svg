<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180"><g><title>hwloc_linux_set_tid_cpubind (2 samples, 0.13%)</title><rect x="0.0000%" y="869" width="0.1300%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="879.50"></text></g><g><title>[[heap]] (3 samples, 0.19%)</title><rect x="0.0000%" y="885" width="0.1949%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.65%)</title><rect x="0.2599%" y="869" width="0.6498%" height="15" fill="rgb(221,193,54)"/><text x="0.5099%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="0.9097%" y="869" width="0.1300%" height="15" fill="rgb(248,212,6)"/><text x="1.1597%" y="879.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="1.2346%" y="869" width="0.1300%" height="15" fill="rgb(208,68,35)"/><text x="1.4846%" y="879.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.19%)</title><rect x="1.3645%" y="869" width="0.1949%" height="15" fill="rgb(232,128,0)"/><text x="1.6145%" y="879.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.19%)</title><rect x="1.3645%" y="853" width="0.1949%" height="15" fill="rgb(207,160,47)"/><text x="1.6145%" y="863.50"></text></g><g><title>std::sys::unix::net::Socket::read (3 samples, 0.19%)</title><rect x="1.3645%" y="837" width="0.1949%" height="15" fill="rgb(228,23,34)"/><text x="1.6145%" y="847.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.19%)</title><rect x="1.3645%" y="821" width="0.1949%" height="15" fill="rgb(218,30,26)"/><text x="1.6145%" y="831.50"></text></g><g><title>__libc_recv (3 samples, 0.19%)</title><rect x="1.3645%" y="805" width="0.1949%" height="15" fill="rgb(220,122,19)"/><text x="1.6145%" y="815.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.19%)</title><rect x="1.3645%" y="789" width="0.1949%" height="15" fill="rgb(250,228,42)"/><text x="1.6145%" y="799.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.19%)</title><rect x="1.6244%" y="869" width="0.1949%" height="15" fill="rgb(240,193,28)"/><text x="1.8744%" y="879.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.84%)</title><rect x="1.8194%" y="869" width="0.8447%" height="15" fill="rgb(216,20,37)"/><text x="2.0694%" y="879.50"></text></g><g><title>__libc_recv (2 samples, 0.13%)</title><rect x="2.6641%" y="869" width="0.1300%" height="15" fill="rgb(206,188,39)"/><text x="2.9141%" y="879.50"></text></g><g><title>__libc_send (4 samples, 0.26%)</title><rect x="2.7940%" y="869" width="0.2599%" height="15" fill="rgb(217,207,13)"/><text x="3.0440%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.26%)</title><rect x="2.7940%" y="853" width="0.2599%" height="15" fill="rgb(231,73,38)"/><text x="3.0440%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.45%)</title><rect x="3.0539%" y="869" width="0.4548%" height="15" fill="rgb(225,20,46)"/><text x="3.3039%" y="879.50"></text></g><g><title>__rdl_realloc (2 samples, 0.13%)</title><rect x="3.5088%" y="869" width="0.1300%" height="15" fill="rgb(210,31,41)"/><text x="3.7588%" y="879.50"></text></g><g><title>_int_free (10 samples, 0.65%)</title><rect x="3.6387%" y="869" width="0.6498%" height="15" fill="rgb(221,200,47)"/><text x="3.8887%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.58%)</title><rect x="4.3535%" y="869" width="0.5848%" height="15" fill="rgb(226,26,5)"/><text x="4.6035%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.19%)</title><rect x="5.1332%" y="869" width="0.1949%" height="15" fill="rgb(249,33,26)"/><text x="5.3832%" y="879.50"></text></g><g><title>core::fmt::write (9 samples, 0.58%)</title><rect x="5.3281%" y="869" width="0.5848%" height="15" fill="rgb(235,183,28)"/><text x="5.5781%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="5.9129%" y="869" width="0.1300%" height="15" fill="rgb(221,5,38)"/><text x="6.1629%" y="879.50"></text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (2 samples, 0.13%)</title><rect x="6.1728%" y="869" width="0.1300%" height="15" fill="rgb(247,18,42)"/><text x="6.4228%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (2 samples, 0.13%)</title><rect x="6.3028%" y="869" width="0.1300%" height="15" fill="rgb(241,131,45)"/><text x="6.5528%" y="879.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (4 samples, 0.26%)</title><rect x="6.7576%" y="869" width="0.2599%" height="15" fill="rgb(249,31,29)"/><text x="7.0076%" y="879.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.65%)</title><rect x="7.0825%" y="869" width="0.6498%" height="15" fill="rgb(225,111,53)"/><text x="7.3325%" y="879.50"></text></g><g><title>[anon] (118 samples, 7.67%)</title><rect x="0.2599%" y="885" width="7.6673%" height="15" fill="rgb(238,160,17)"/><text x="0.5099%" y="895.50">[anon]</text></g><g><title>_int_free (3 samples, 0.19%)</title><rect x="8.0572%" y="869" width="0.1949%" height="15" fill="rgb(214,148,48)"/><text x="8.3072%" y="879.50"></text></g><g><title>_int_realloc (9 samples, 0.58%)</title><rect x="8.2521%" y="869" width="0.5848%" height="15" fill="rgb(232,36,49)"/><text x="8.5021%" y="879.50"></text></g><g><title>[lobsters] (15 samples, 0.97%)</title><rect x="7.9272%" y="885" width="0.9747%" height="15" fill="rgb(209,103,24)"/><text x="8.1772%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.19%)</title><rect x="9.0318%" y="837" width="0.1949%" height="15" fill="rgb(229,88,8)"/><text x="9.2818%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.19%)</title><rect x="9.0318%" y="821" width="0.1949%" height="15" fill="rgb(213,181,19)"/><text x="9.2818%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="9.0968%" y="805" width="0.1300%" height="15" fill="rgb(254,191,54)"/><text x="9.3468%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="9.0968%" y="789" width="0.1300%" height="15" fill="rgb(241,83,37)"/><text x="9.3468%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.13%)</title><rect x="9.0968%" y="773" width="0.1300%" height="15" fill="rgb(233,36,39)"/><text x="9.3468%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.13%)</title><rect x="9.0968%" y="757" width="0.1300%" height="15" fill="rgb(226,3,54)"/><text x="9.3468%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="9.0968%" y="741" width="0.1300%" height="15" fill="rgb(245,192,40)"/><text x="9.3468%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="9.0968%" y="725" width="0.1300%" height="15" fill="rgb(238,167,29)"/><text x="9.3468%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="9.0968%" y="709" width="0.1300%" height="15" fill="rgb(232,182,51)"/><text x="9.3468%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="9.0968%" y="693" width="0.1300%" height="15" fill="rgb(231,60,39)"/><text x="9.3468%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.13%)</title><rect x="9.0968%" y="677" width="0.1300%" height="15" fill="rgb(208,69,12)"/><text x="9.3468%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="9.0968%" y="661" width="0.1300%" height="15" fill="rgb(235,93,37)"/><text x="9.3468%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="9.0968%" y="645" width="0.1300%" height="15" fill="rgb(213,116,39)"/><text x="9.3468%" y="655.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="9.0968%" y="629" width="0.1300%" height="15" fill="rgb(222,207,29)"/><text x="9.3468%" y="639.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="9.0968%" y="613" width="0.1300%" height="15" fill="rgb(206,96,30)"/><text x="9.3468%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="9.2268%" y="805" width="0.1300%" height="15" fill="rgb(218,138,4)"/><text x="9.4768%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (6 samples, 0.39%)</title><rect x="9.2268%" y="821" width="0.3899%" height="15" fill="rgb(250,191,14)"/><text x="9.4768%" y="831.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.26%)</title><rect x="9.3567%" y="805" width="0.2599%" height="15" fill="rgb(239,60,40)"/><text x="9.6067%" y="815.50"></text></g><g><title>_int_malloc (3 samples, 0.19%)</title><rect x="9.4217%" y="789" width="0.1949%" height="15" fill="rgb(206,27,48)"/><text x="9.6717%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.45%)</title><rect x="9.2268%" y="837" width="0.4548%" height="15" fill="rgb(225,35,8)"/><text x="9.4768%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="9.6816%" y="773" width="0.2599%" height="15" fill="rgb(250,213,24)"/><text x="9.9316%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="9.8116%" y="757" width="0.1300%" height="15" fill="rgb(247,123,22)"/><text x="10.0616%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="9.8116%" y="741" width="0.1300%" height="15" fill="rgb(231,138,38)"/><text x="10.0616%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.13%)</title><rect x="9.8116%" y="725" width="0.1300%" height="15" fill="rgb(231,145,46)"/><text x="10.0616%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.13%)</title><rect x="9.8116%" y="709" width="0.1300%" height="15" fill="rgb(251,118,11)"/><text x="10.0616%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="9.8116%" y="693" width="0.1300%" height="15" fill="rgb(217,147,25)"/><text x="10.0616%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="9.8116%" y="677" width="0.1300%" height="15" fill="rgb(247,81,37)"/><text x="10.0616%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="9.8116%" y="661" width="0.1300%" height="15" fill="rgb(209,12,38)"/><text x="10.0616%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="9.8116%" y="645" width="0.1300%" height="15" fill="rgb(227,1,9)"/><text x="10.0616%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.13%)</title><rect x="9.8116%" y="629" width="0.1300%" height="15" fill="rgb(248,47,43)"/><text x="10.0616%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="9.8116%" y="613" width="0.1300%" height="15" fill="rgb(221,10,30)"/><text x="10.0616%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="9.8116%" y="597" width="0.1300%" height="15" fill="rgb(210,229,1)"/><text x="10.0616%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="9.8116%" y="581" width="0.1300%" height="15" fill="rgb(222,148,37)"/><text x="10.0616%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="9.8116%" y="565" width="0.1300%" height="15" fill="rgb(234,67,33)"/><text x="10.0616%" y="575.50"></text></g><g><title>sysmalloc (2 samples, 0.13%)</title><rect x="9.8116%" y="549" width="0.1300%" height="15" fill="rgb(247,98,35)"/><text x="10.0616%" y="559.50"></text></g><g><title>__GI___mprotect (2 samples, 0.13%)</title><rect x="9.8116%" y="533" width="0.1300%" height="15" fill="rgb(247,138,52)"/><text x="10.0616%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.13%)</title><rect x="9.8116%" y="517" width="0.1300%" height="15" fill="rgb(213,79,30)"/><text x="10.0616%" y="527.50"></text></g><g><title>do_syscall_64 (2 samples, 0.13%)</title><rect x="9.8116%" y="501" width="0.1300%" height="15" fill="rgb(246,177,23)"/><text x="10.0616%" y="511.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.13%)</title><rect x="9.8116%" y="485" width="0.1300%" height="15" fill="rgb(230,62,27)"/><text x="10.0616%" y="495.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.13%)</title><rect x="9.8116%" y="469" width="0.1300%" height="15" fill="rgb(216,154,8)"/><text x="10.0616%" y="479.50"></text></g><g><title>mprotect_fixup (2 samples, 0.13%)</title><rect x="9.8116%" y="453" width="0.1300%" height="15" fill="rgb(244,35,45)"/><text x="10.0616%" y="463.50"></text></g><g><title>perf_event_mmap (2 samples, 0.13%)</title><rect x="9.8116%" y="437" width="0.1300%" height="15" fill="rgb(251,115,12)"/><text x="10.0616%" y="447.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.13%)</title><rect x="9.8116%" y="421" width="0.1300%" height="15" fill="rgb(240,54,50)"/><text x="10.0616%" y="431.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.13%)</title><rect x="9.8116%" y="405" width="0.1300%" height="15" fill="rgb(233,84,52)"/><text x="10.0616%" y="415.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.26%)</title><rect x="9.9415%" y="773" width="0.2599%" height="15" fill="rgb(207,117,47)"/><text x="10.1915%" y="783.50"></text></g><g><title>_int_malloc (4 samples, 0.26%)</title><rect x="9.9415%" y="757" width="0.2599%" height="15" fill="rgb(249,43,39)"/><text x="10.1915%" y="767.50"></text></g><g><title>sysmalloc (4 samples, 0.26%)</title><rect x="9.9415%" y="741" width="0.2599%" height="15" fill="rgb(209,38,44)"/><text x="10.1915%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (9 samples, 0.58%)</title><rect x="9.6816%" y="837" width="0.5848%" height="15" fill="rgb(236,212,23)"/><text x="9.9316%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (9 samples, 0.58%)</title><rect x="9.6816%" y="821" width="0.5848%" height="15" fill="rgb(242,79,21)"/><text x="9.9316%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (9 samples, 0.58%)</title><rect x="9.6816%" y="805" width="0.5848%" height="15" fill="rgb(211,96,35)"/><text x="9.9316%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.58%)</title><rect x="9.6816%" y="789" width="0.5848%" height="15" fill="rgb(253,215,40)"/><text x="9.9316%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.19%)</title><rect x="10.2664%" y="837" width="0.1949%" height="15" fill="rgb(211,81,21)"/><text x="10.5164%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.19%)</title><rect x="10.2664%" y="821" width="0.1949%" height="15" fill="rgb(208,190,38)"/><text x="10.5164%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.19%)</title><rect x="10.2664%" y="805" width="0.1949%" height="15" fill="rgb(235,213,38)"/><text x="10.5164%" y="815.50"></text></g><g><title>_int_malloc (3 samples, 0.19%)</title><rect x="10.2664%" y="789" width="0.1949%" height="15" fill="rgb(237,122,38)"/><text x="10.5164%" y="799.50"></text></g><g><title>sysmalloc (3 samples, 0.19%)</title><rect x="10.2664%" y="773" width="0.1949%" height="15" fill="rgb(244,218,35)"/><text x="10.5164%" y="783.50"></text></g><g><title>page_fault (2 samples, 0.13%)</title><rect x="10.3314%" y="757" width="0.1300%" height="15" fill="rgb(240,68,47)"/><text x="10.5814%" y="767.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="10.3314%" y="741" width="0.1300%" height="15" fill="rgb(210,16,53)"/><text x="10.5814%" y="751.50"></text></g><g><title>handle_mm_fault (2 samples, 0.13%)</title><rect x="10.3314%" y="725" width="0.1300%" height="15" fill="rgb(235,124,12)"/><text x="10.5814%" y="735.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="10.3314%" y="709" width="0.1300%" height="15" fill="rgb(224,169,11)"/><text x="10.5814%" y="719.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.13%)</title><rect x="10.3314%" y="693" width="0.1300%" height="15" fill="rgb(250,166,2)"/><text x="10.5814%" y="703.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.13%)</title><rect x="10.3314%" y="677" width="0.1300%" height="15" fill="rgb(242,216,29)"/><text x="10.5814%" y="687.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.13%)</title><rect x="10.3314%" y="661" width="0.1300%" height="15" fill="rgb(230,116,27)"/><text x="10.5814%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="10.7862%" y="805" width="0.1949%" height="15" fill="rgb(228,99,48)"/><text x="11.0362%" y="815.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.19%)</title><rect x="10.7862%" y="789" width="0.1949%" height="15" fill="rgb(253,11,6)"/><text x="11.0362%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="10.7862%" y="773" width="0.1949%" height="15" fill="rgb(247,143,39)"/><text x="11.0362%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (4 samples, 0.26%)</title><rect x="10.7862%" y="821" width="0.2599%" height="15" fill="rgb(236,97,10)"/><text x="11.0362%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.45%)</title><rect x="11.1111%" y="773" width="0.4548%" height="15" fill="rgb(233,208,19)"/><text x="11.3611%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (7 samples, 0.45%)</title><rect x="11.1111%" y="757" width="0.4548%" height="15" fill="rgb(216,164,2)"/><text x="11.3611%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.39%)</title><rect x="11.1761%" y="741" width="0.3899%" height="15" fill="rgb(220,129,5)"/><text x="11.4261%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.39%)</title><rect x="11.1761%" y="725" width="0.3899%" height="15" fill="rgb(242,17,10)"/><text x="11.4261%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.26%)</title><rect x="11.3060%" y="709" width="0.2599%" height="15" fill="rgb(242,107,0)"/><text x="11.5560%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.58%)</title><rect x="11.1111%" y="805" width="0.5848%" height="15" fill="rgb(251,28,31)"/><text x="11.3611%" y="815.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 0.58%)</title><rect x="11.1111%" y="789" width="0.5848%" height="15" fill="rgb(233,223,10)"/><text x="11.3611%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.13%)</title><rect x="11.5660%" y="773" width="0.1300%" height="15" fill="rgb(215,21,27)"/><text x="11.8160%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (11 samples, 0.71%)</title><rect x="11.0461%" y="821" width="0.7147%" height="15" fill="rgb(232,23,21)"/><text x="11.2961%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="11.7609%" y="805" width="0.1300%" height="15" fill="rgb(244,5,23)"/><text x="12.0109%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="11.8908%" y="757" width="0.1949%" height="15" fill="rgb(226,81,46)"/><text x="12.1408%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.19%)</title><rect x="11.8908%" y="741" width="0.1949%" height="15" fill="rgb(247,70,30)"/><text x="12.1408%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="11.8908%" y="725" width="0.1949%" height="15" fill="rgb(212,68,19)"/><text x="12.1408%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="11.9558%" y="709" width="0.1300%" height="15" fill="rgb(240,187,13)"/><text x="12.2058%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="11.9558%" y="693" width="0.1300%" height="15" fill="rgb(223,113,26)"/><text x="12.2058%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="11.9558%" y="677" width="0.1300%" height="15" fill="rgb(206,192,2)"/><text x="12.2058%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="11.8908%" y="773" width="0.2599%" height="15" fill="rgb(241,108,4)"/><text x="12.1408%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="12.1507%" y="773" width="0.1949%" height="15" fill="rgb(247,173,49)"/><text x="12.4007%" y="783.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.19%)</title><rect x="12.1507%" y="757" width="0.1949%" height="15" fill="rgb(224,114,35)"/><text x="12.4007%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="12.1507%" y="741" width="0.1949%" height="15" fill="rgb(245,159,27)"/><text x="12.4007%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="12.2157%" y="725" width="0.1300%" height="15" fill="rgb(245,172,44)"/><text x="12.4657%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="12.2157%" y="709" width="0.1300%" height="15" fill="rgb(236,23,11)"/><text x="12.4657%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="12.2157%" y="693" width="0.1300%" height="15" fill="rgb(205,117,38)"/><text x="12.4657%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.52%)</title><rect x="11.8908%" y="789" width="0.5198%" height="15" fill="rgb(237,72,25)"/><text x="12.1408%" y="799.50"></text></g><g><title>__GI___libc_free (4 samples, 0.26%)</title><rect x="13.3853%" y="773" width="0.2599%" height="15" fill="rgb(244,70,9)"/><text x="13.6353%" y="783.50"></text></g><g><title>__GI___libc_realloc (19 samples, 1.23%)</title><rect x="13.6452%" y="773" width="1.2346%" height="15" fill="rgb(217,125,39)"/><text x="13.8952%" y="783.50"></text></g><g><title>_int_realloc (5 samples, 0.32%)</title><rect x="14.5549%" y="757" width="0.3249%" height="15" fill="rgb(235,36,10)"/><text x="14.8049%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.26%)</title><rect x="14.8798%" y="773" width="0.2599%" height="15" fill="rgb(251,123,47)"/><text x="15.1298%" y="783.50"></text></g><g><title>__rdl_realloc (2 samples, 0.13%)</title><rect x="15.1397%" y="773" width="0.1300%" height="15" fill="rgb(221,13,13)"/><text x="15.3897%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.13%)</title><rect x="15.1397%" y="757" width="0.1300%" height="15" fill="rgb(238,131,9)"/><text x="15.3897%" y="767.50"></text></g><g><title>_int_free (9 samples, 0.58%)</title><rect x="15.3346%" y="773" width="0.5848%" height="15" fill="rgb(211,50,8)"/><text x="15.5846%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.39%)</title><rect x="15.9194%" y="773" width="0.3899%" height="15" fill="rgb(245,182,24)"/><text x="16.1694%" y="783.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.19%)</title><rect x="16.1144%" y="757" width="0.1949%" height="15" fill="rgb(242,14,37)"/><text x="16.3644%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.52%)</title><rect x="16.7641%" y="741" width="0.5198%" height="15" fill="rgb(246,228,12)"/><text x="17.0141%" y="751.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.78%)</title><rect x="17.6738%" y="725" width="0.7797%" height="15" fill="rgb(213,55,15)"/><text x="17.9238%" y="735.50"></text></g><g><title>__rdl_alloc (2 samples, 0.13%)</title><rect x="18.4535%" y="725" width="0.1300%" height="15" fill="rgb(209,9,3)"/><text x="18.7035%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.13%)</title><rect x="18.4535%" y="709" width="0.1300%" height="15" fill="rgb(230,59,30)"/><text x="18.7035%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (33 samples, 2.14%)</title><rect x="16.5042%" y="757" width="2.1442%" height="15" fill="rgb(209,121,21)"/><text x="16.7542%" y="767.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 1.36%)</title><rect x="17.2840%" y="741" width="1.3645%" height="15" fill="rgb(220,109,13)"/><text x="17.5340%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.32%)</title><rect x="18.6485%" y="757" width="0.3249%" height="15" fill="rgb(232,18,1)"/><text x="18.8985%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.32%)</title><rect x="18.6485%" y="741" width="0.3249%" height="15" fill="rgb(215,41,42)"/><text x="18.8985%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.32%)</title><rect x="19.0383%" y="757" width="0.3249%" height="15" fill="rgb(224,123,36)"/><text x="19.2883%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (117 samples, 7.60%)</title><rect x="11.8908%" y="805" width="7.6023%" height="15" fill="rgb(240,125,3)"/><text x="12.1408%" y="815.50">&lt;sql_parse..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (108 samples, 7.02%)</title><rect x="12.4756%" y="789" width="7.0175%" height="15" fill="rgb(205,98,50)"/><text x="12.7256%" y="799.50">sql_parse..</text></g><g><title>core::fmt::write (49 samples, 3.18%)</title><rect x="16.3093%" y="773" width="3.1839%" height="15" fill="rgb(205,185,37)"/><text x="16.5593%" y="783.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.13%)</title><rect x="19.3632%" y="757" width="0.1300%" height="15" fill="rgb(238,207,15)"/><text x="19.6132%" y="767.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.13%)</title><rect x="19.3632%" y="741" width="0.1300%" height="15" fill="rgb(213,199,42)"/><text x="19.6132%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.13%)</title><rect x="19.3632%" y="725" width="0.1300%" height="15" fill="rgb(235,201,11)"/><text x="19.6132%" y="735.50"></text></g><g><title>core::cmp::min (2 samples, 0.13%)</title><rect x="19.3632%" y="709" width="0.1300%" height="15" fill="rgb(207,46,11)"/><text x="19.6132%" y="719.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.13%)</title><rect x="19.3632%" y="693" width="0.1300%" height="15" fill="rgb(241,35,35)"/><text x="19.6132%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="19.3632%" y="677" width="0.1300%" height="15" fill="rgb(243,32,47)"/><text x="19.6132%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="19.4932%" y="773" width="0.1300%" height="15" fill="rgb(247,202,23)"/><text x="19.7432%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="19.4932%" y="805" width="0.2599%" height="15" fill="rgb(219,102,11)"/><text x="19.7432%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="19.4932%" y="789" width="0.2599%" height="15" fill="rgb(243,110,44)"/><text x="19.7432%" y="799.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="19.6231%" y="773" width="0.1300%" height="15" fill="rgb(222,74,54)"/><text x="19.8731%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.32%)</title><rect x="19.7531%" y="789" width="0.3249%" height="15" fill="rgb(216,99,12)"/><text x="20.0031%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.32%)</title><rect x="19.7531%" y="773" width="0.3249%" height="15" fill="rgb(226,22,26)"/><text x="20.0031%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.19%)</title><rect x="19.8830%" y="757" width="0.1949%" height="15" fill="rgb(217,163,10)"/><text x="20.1330%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="20.0780%" y="789" width="0.1300%" height="15" fill="rgb(213,25,53)"/><text x="20.3280%" y="799.50"></text></g><g><title>core::fmt::write (152 samples, 9.88%)</title><rect x="10.4613%" y="837" width="9.8765%" height="15" fill="rgb(252,105,26)"/><text x="10.7113%" y="847.50">core::fmt::wri..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (132 samples, 8.58%)</title><rect x="11.7609%" y="821" width="8.5770%" height="15" fill="rgb(220,39,43)"/><text x="12.0109%" y="831.50">&lt;sql_parser:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.58%)</title><rect x="19.7531%" y="805" width="0.5848%" height="15" fill="rgb(229,68,48)"/><text x="20.0031%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="20.2079%" y="789" width="0.1300%" height="15" fill="rgb(252,8,32)"/><text x="20.4579%" y="799.50"></text></g><g><title>__GI___libc_free (3 samples, 0.19%)</title><rect x="20.4029%" y="805" width="0.1949%" height="15" fill="rgb(223,20,43)"/><text x="20.6529%" y="815.50"></text></g><g><title>_int_free (6 samples, 0.39%)</title><rect x="20.6628%" y="805" width="0.3899%" height="15" fill="rgb(229,81,49)"/><text x="20.9128%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 1.23%)</title><rect x="20.3379%" y="837" width="1.2346%" height="15" fill="rgb(236,28,36)"/><text x="20.5879%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 1.23%)</title><rect x="20.3379%" y="821" width="1.2346%" height="15" fill="rgb(249,185,26)"/><text x="20.5879%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.52%)</title><rect x="21.0526%" y="805" width="0.5198%" height="15" fill="rgb(249,174,33)"/><text x="21.3026%" y="815.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (4 samples, 0.26%)</title><rect x="21.5724%" y="837" width="0.2599%" height="15" fill="rgb(233,201,37)"/><text x="21.8224%" y="847.50"></text></g><g><title>core::fmt::write (3 samples, 0.19%)</title><rect x="21.6374%" y="821" width="0.1949%" height="15" fill="rgb(221,78,26)"/><text x="21.8874%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (3 samples, 0.19%)</title><rect x="21.6374%" y="805" width="0.1949%" height="15" fill="rgb(250,127,30)"/><text x="21.8874%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="21.7024%" y="789" width="0.1300%" height="15" fill="rgb(230,49,44)"/><text x="21.9524%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="21.7024%" y="773" width="0.1300%" height="15" fill="rgb(229,67,23)"/><text x="21.9524%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="21.7024%" y="757" width="0.1300%" height="15" fill="rgb(249,83,47)"/><text x="21.9524%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="21.7024%" y="741" width="0.1300%" height="15" fill="rgb(215,43,3)"/><text x="21.9524%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.8324%" y="821" width="0.1300%" height="15" fill="rgb(238,154,13)"/><text x="22.0824%" y="831.50"></text></g><g><title>decor::helpers::str_ident_match (4 samples, 0.26%)</title><rect x="21.8324%" y="837" width="0.2599%" height="15" fill="rgb(219,56,2)"/><text x="22.0824%" y="847.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.13%)</title><rect x="21.9623%" y="821" width="0.1300%" height="15" fill="rgb(233,0,4)"/><text x="22.2123%" y="831.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.13%)</title><rect x="22.3522%" y="469" width="0.1300%" height="15" fill="rgb(235,30,7)"/><text x="22.6022%" y="479.50"></text></g><g><title>dequeue_entity (2 samples, 0.13%)</title><rect x="22.3522%" y="453" width="0.1300%" height="15" fill="rgb(250,79,13)"/><text x="22.6022%" y="463.50"></text></g><g><title>do_syscall_64 (6 samples, 0.39%)</title><rect x="22.1572%" y="629" width="0.3899%" height="15" fill="rgb(211,146,34)"/><text x="22.4072%" y="639.50"></text></g><g><title>__x64_sys_recvfrom (6 samples, 0.39%)</title><rect x="22.1572%" y="613" width="0.3899%" height="15" fill="rgb(228,22,38)"/><text x="22.4072%" y="623.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.39%)</title><rect x="22.1572%" y="597" width="0.3899%" height="15" fill="rgb(235,168,5)"/><text x="22.4072%" y="607.50"></text></g><g><title>inet_recvmsg (6 samples, 0.39%)</title><rect x="22.1572%" y="581" width="0.3899%" height="15" fill="rgb(221,155,16)"/><text x="22.4072%" y="591.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.39%)</title><rect x="22.1572%" y="565" width="0.3899%" height="15" fill="rgb(215,215,53)"/><text x="22.4072%" y="575.50"></text></g><g><title>sk_wait_data (6 samples, 0.39%)</title><rect x="22.1572%" y="549" width="0.3899%" height="15" fill="rgb(223,4,10)"/><text x="22.4072%" y="559.50"></text></g><g><title>wait_woken (6 samples, 0.39%)</title><rect x="22.1572%" y="533" width="0.3899%" height="15" fill="rgb(234,103,6)"/><text x="22.4072%" y="543.50"></text></g><g><title>schedule_timeout (5 samples, 0.32%)</title><rect x="22.2222%" y="517" width="0.3249%" height="15" fill="rgb(227,97,0)"/><text x="22.4722%" y="527.50"></text></g><g><title>schedule (5 samples, 0.32%)</title><rect x="22.2222%" y="501" width="0.3249%" height="15" fill="rgb(234,150,53)"/><text x="22.4722%" y="511.50"></text></g><g><title>__schedule (5 samples, 0.32%)</title><rect x="22.2222%" y="485" width="0.3249%" height="15" fill="rgb(228,201,54)"/><text x="22.4722%" y="495.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (8 samples, 0.52%)</title><rect x="22.0923%" y="789" width="0.5198%" height="15" fill="rgb(222,22,37)"/><text x="22.3423%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (8 samples, 0.52%)</title><rect x="22.0923%" y="773" width="0.5198%" height="15" fill="rgb(237,53,32)"/><text x="22.3423%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.45%)</title><rect x="22.1572%" y="757" width="0.4548%" height="15" fill="rgb(233,25,53)"/><text x="22.4072%" y="767.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (7 samples, 0.45%)</title><rect x="22.1572%" y="741" width="0.4548%" height="15" fill="rgb(210,40,34)"/><text x="22.4072%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (7 samples, 0.45%)</title><rect x="22.1572%" y="725" width="0.4548%" height="15" fill="rgb(241,220,44)"/><text x="22.4072%" y="735.50"></text></g><g><title>std::sys_common::net::TcpStream::read (7 samples, 0.45%)</title><rect x="22.1572%" y="709" width="0.4548%" height="15" fill="rgb(235,28,35)"/><text x="22.4072%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::read (7 samples, 0.45%)</title><rect x="22.1572%" y="693" width="0.4548%" height="15" fill="rgb(210,56,17)"/><text x="22.4072%" y="703.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (7 samples, 0.45%)</title><rect x="22.1572%" y="677" width="0.4548%" height="15" fill="rgb(224,130,29)"/><text x="22.4072%" y="687.50"></text></g><g><title>__libc_recv (7 samples, 0.45%)</title><rect x="22.1572%" y="661" width="0.4548%" height="15" fill="rgb(235,212,8)"/><text x="22.4072%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.45%)</title><rect x="22.1572%" y="645" width="0.4548%" height="15" fill="rgb(223,33,50)"/><text x="22.4072%" y="655.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.13%)</title><rect x="22.9370%" y="501" width="0.1300%" height="15" fill="rgb(219,149,13)"/><text x="23.1870%" y="511.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.13%)</title><rect x="22.9370%" y="485" width="0.1300%" height="15" fill="rgb(250,156,29)"/><text x="23.1870%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (8 samples, 0.52%)</title><rect x="22.7420%" y="597" width="0.5198%" height="15" fill="rgb(216,193,19)"/><text x="22.9920%" y="607.50"></text></g><g><title>tcp_write_xmit (8 samples, 0.52%)</title><rect x="22.7420%" y="581" width="0.5198%" height="15" fill="rgb(216,135,14)"/><text x="22.9920%" y="591.50"></text></g><g><title>__tcp_transmit_skb (7 samples, 0.45%)</title><rect x="22.8070%" y="565" width="0.4548%" height="15" fill="rgb(241,47,5)"/><text x="23.0570%" y="575.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.39%)</title><rect x="22.8720%" y="549" width="0.3899%" height="15" fill="rgb(233,42,35)"/><text x="23.1220%" y="559.50"></text></g><g><title>ip_output (5 samples, 0.32%)</title><rect x="22.9370%" y="533" width="0.3249%" height="15" fill="rgb(231,13,6)"/><text x="23.1870%" y="543.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.32%)</title><rect x="22.9370%" y="517" width="0.3249%" height="15" fill="rgb(207,181,40)"/><text x="23.1870%" y="527.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.19%)</title><rect x="23.0669%" y="501" width="0.1949%" height="15" fill="rgb(254,173,49)"/><text x="23.3169%" y="511.50"></text></g><g><title>do_softirq (3 samples, 0.19%)</title><rect x="23.0669%" y="485" width="0.1949%" height="15" fill="rgb(221,1,38)"/><text x="23.3169%" y="495.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.19%)</title><rect x="23.0669%" y="469" width="0.1949%" height="15" fill="rgb(206,124,46)"/><text x="23.3169%" y="479.50"></text></g><g><title>__do_softirq (3 samples, 0.19%)</title><rect x="23.0669%" y="453" width="0.1949%" height="15" fill="rgb(249,21,11)"/><text x="23.3169%" y="463.50"></text></g><g><title>net_rx_action (2 samples, 0.13%)</title><rect x="23.1319%" y="437" width="0.1300%" height="15" fill="rgb(222,201,40)"/><text x="23.3819%" y="447.50"></text></g><g><title>process_backlog (2 samples, 0.13%)</title><rect x="23.1319%" y="421" width="0.1300%" height="15" fill="rgb(235,61,29)"/><text x="23.3819%" y="431.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.13%)</title><rect x="23.1319%" y="405" width="0.1300%" height="15" fill="rgb(219,207,3)"/><text x="23.3819%" y="415.50"></text></g><g><title>ip_rcv (2 samples, 0.13%)</title><rect x="23.1319%" y="389" width="0.1300%" height="15" fill="rgb(222,56,46)"/><text x="23.3819%" y="399.50"></text></g><g><title>ip_local_deliver (2 samples, 0.13%)</title><rect x="23.1319%" y="373" width="0.1300%" height="15" fill="rgb(239,76,54)"/><text x="23.3819%" y="383.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.13%)</title><rect x="23.1319%" y="357" width="0.1300%" height="15" fill="rgb(231,124,27)"/><text x="23.3819%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.13%)</title><rect x="23.1319%" y="341" width="0.1300%" height="15" fill="rgb(249,195,6)"/><text x="23.3819%" y="351.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.13%)</title><rect x="23.1319%" y="325" width="0.1300%" height="15" fill="rgb(237,174,47)"/><text x="23.3819%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.13%)</title><rect x="23.1319%" y="309" width="0.1300%" height="15" fill="rgb(206,201,31)"/><text x="23.3819%" y="319.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.13%)</title><rect x="23.1319%" y="293" width="0.1300%" height="15" fill="rgb(231,57,52)"/><text x="23.3819%" y="303.50"></text></g><g><title>do_syscall_64 (11 samples, 0.71%)</title><rect x="22.6121%" y="693" width="0.7147%" height="15" fill="rgb(248,177,22)"/><text x="22.8621%" y="703.50"></text></g><g><title>__x64_sys_sendto (11 samples, 0.71%)</title><rect x="22.6121%" y="677" width="0.7147%" height="15" fill="rgb(215,211,37)"/><text x="22.8621%" y="687.50"></text></g><g><title>__sys_sendto (11 samples, 0.71%)</title><rect x="22.6121%" y="661" width="0.7147%" height="15" fill="rgb(241,128,51)"/><text x="22.8621%" y="671.50"></text></g><g><title>sock_sendmsg (11 samples, 0.71%)</title><rect x="22.6121%" y="645" width="0.7147%" height="15" fill="rgb(227,165,31)"/><text x="22.8621%" y="655.50"></text></g><g><title>tcp_sendmsg (11 samples, 0.71%)</title><rect x="22.6121%" y="629" width="0.7147%" height="15" fill="rgb(228,167,24)"/><text x="22.8621%" y="639.50"></text></g><g><title>tcp_sendmsg_locked (10 samples, 0.65%)</title><rect x="22.6771%" y="613" width="0.6498%" height="15" fill="rgb(228,143,12)"/><text x="22.9271%" y="623.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (20 samples, 1.30%)</title><rect x="22.0923%" y="821" width="1.2995%" height="15" fill="rgb(249,149,8)"/><text x="22.3423%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (20 samples, 1.30%)</title><rect x="22.0923%" y="805" width="1.2995%" height="15" fill="rgb(243,35,44)"/><text x="22.3423%" y="815.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (12 samples, 0.78%)</title><rect x="22.6121%" y="789" width="0.7797%" height="15" fill="rgb(246,89,9)"/><text x="22.8621%" y="799.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (12 samples, 0.78%)</title><rect x="22.6121%" y="773" width="0.7797%" height="15" fill="rgb(233,213,13)"/><text x="22.8621%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (12 samples, 0.78%)</title><rect x="22.6121%" y="757" width="0.7797%" height="15" fill="rgb(233,141,41)"/><text x="22.8621%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (12 samples, 0.78%)</title><rect x="22.6121%" y="741" width="0.7797%" height="15" fill="rgb(239,167,4)"/><text x="22.8621%" y="751.50"></text></g><g><title>__libc_send (12 samples, 0.78%)</title><rect x="22.6121%" y="725" width="0.7797%" height="15" fill="rgb(209,217,16)"/><text x="22.8621%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.78%)</title><rect x="22.6121%" y="709" width="0.7797%" height="15" fill="rgb(219,88,35)"/><text x="22.8621%" y="719.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (22 samples, 1.43%)</title><rect x="22.0923%" y="837" width="1.4295%" height="15" fill="rgb(220,193,23)"/><text x="22.3423%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.19%)</title><rect x="23.5218%" y="821" width="0.1949%" height="15" fill="rgb(230,90,52)"/><text x="23.7718%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="23.5867%" y="805" width="0.1300%" height="15" fill="rgb(252,106,19)"/><text x="23.8367%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="23.5867%" y="789" width="0.1300%" height="15" fill="rgb(206,74,20)"/><text x="23.8367%" y="799.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.39%)</title><rect x="23.7817%" y="805" width="0.3899%" height="15" fill="rgb(230,138,44)"/><text x="24.0317%" y="815.50"></text></g><g><title>_int_malloc (6 samples, 0.39%)</title><rect x="23.7817%" y="789" width="0.3899%" height="15" fill="rgb(235,182,43)"/><text x="24.0317%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (12 samples, 0.78%)</title><rect x="23.5218%" y="837" width="0.7797%" height="15" fill="rgb(242,16,51)"/><text x="23.7718%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (9 samples, 0.58%)</title><rect x="23.7167%" y="821" width="0.5848%" height="15" fill="rgb(248,9,4)"/><text x="23.9667%" y="831.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.13%)</title><rect x="24.4964%" y="741" width="0.1300%" height="15" fill="rgb(210,31,22)"/><text x="24.7464%" y="751.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.13%)</title><rect x="24.4964%" y="725" width="0.1300%" height="15" fill="rgb(239,54,39)"/><text x="24.7464%" y="735.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.13%)</title><rect x="24.4964%" y="709" width="0.1300%" height="15" fill="rgb(230,99,41)"/><text x="24.7464%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.26%)</title><rect x="24.4964%" y="757" width="0.2599%" height="15" fill="rgb(253,106,12)"/><text x="24.7464%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="24.6264%" y="741" width="0.1300%" height="15" fill="rgb(213,46,41)"/><text x="24.8764%" y="751.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="24.6264%" y="725" width="0.1300%" height="15" fill="rgb(215,133,35)"/><text x="24.8764%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="24.6264%" y="709" width="0.1300%" height="15" fill="rgb(213,28,5)"/><text x="24.8764%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.32%)</title><rect x="24.4964%" y="789" width="0.3249%" height="15" fill="rgb(215,77,49)"/><text x="24.7464%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.32%)</title><rect x="24.4964%" y="773" width="0.3249%" height="15" fill="rgb(248,100,22)"/><text x="24.7464%" y="783.50"></text></g><g><title>core::fmt::write (9 samples, 0.58%)</title><rect x="24.3665%" y="821" width="0.5848%" height="15" fill="rgb(208,67,9)"/><text x="24.6165%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (9 samples, 0.58%)</title><rect x="24.3665%" y="805" width="0.5848%" height="15" fill="rgb(219,133,21)"/><text x="24.6165%" y="815.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="24.8213%" y="789" width="0.1300%" height="15" fill="rgb(246,46,29)"/><text x="25.0713%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="24.9513%" y="757" width="0.1300%" height="15" fill="rgb(246,185,52)"/><text x="25.2013%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="24.9513%" y="741" width="0.1300%" height="15" fill="rgb(252,136,11)"/><text x="25.2013%" y="751.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.13%)</title><rect x="24.9513%" y="725" width="0.1300%" height="15" fill="rgb(219,138,53)"/><text x="25.2013%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.13%)</title><rect x="24.9513%" y="709" width="0.1300%" height="15" fill="rgb(211,51,23)"/><text x="25.2013%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="24.9513%" y="693" width="0.1300%" height="15" fill="rgb(247,221,28)"/><text x="25.2013%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (2 samples, 0.13%)</title><rect x="24.9513%" y="677" width="0.1300%" height="15" fill="rgb(251,222,45)"/><text x="25.2013%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="25.2112%" y="693" width="0.1300%" height="15" fill="rgb(217,162,53)"/><text x="25.4612%" y="703.50"></text></g><g><title>alloc::fmt::format (10 samples, 0.65%)</title><rect x="24.9513%" y="805" width="0.6498%" height="15" fill="rgb(229,93,14)"/><text x="25.2013%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.65%)</title><rect x="24.9513%" y="789" width="0.6498%" height="15" fill="rgb(209,67,49)"/><text x="25.2013%" y="799.50"></text></g><g><title>core::fmt::write (10 samples, 0.65%)</title><rect x="24.9513%" y="773" width="0.6498%" height="15" fill="rgb(213,87,29)"/><text x="25.2013%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (8 samples, 0.52%)</title><rect x="25.0812%" y="757" width="0.5198%" height="15" fill="rgb(205,151,52)"/><text x="25.3312%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.45%)</title><rect x="25.1462%" y="741" width="0.4548%" height="15" fill="rgb(253,215,39)"/><text x="25.3962%" y="751.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.45%)</title><rect x="25.1462%" y="725" width="0.4548%" height="15" fill="rgb(221,220,41)"/><text x="25.3962%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.39%)</title><rect x="25.2112%" y="709" width="0.3899%" height="15" fill="rgb(218,133,21)"/><text x="25.4612%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.19%)</title><rect x="25.4061%" y="693" width="0.1949%" height="15" fill="rgb(221,193,43)"/><text x="25.6561%" y="703.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.19%)</title><rect x="25.4061%" y="677" width="0.1949%" height="15" fill="rgb(240,128,52)"/><text x="25.6561%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.19%)</title><rect x="25.4061%" y="661" width="0.1949%" height="15" fill="rgb(253,114,12)"/><text x="25.6561%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.19%)</title><rect x="25.4061%" y="645" width="0.1949%" height="15" fill="rgb(215,223,47)"/><text x="25.6561%" y="655.50"></text></g><g><title>decor::query_transformer::QueryTransformer::objname_to_mv_string (22 samples, 1.43%)</title><rect x="24.3665%" y="837" width="1.4295%" height="15" fill="rgb(248,225,23)"/><text x="24.6165%" y="847.50"></text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (13 samples, 0.84%)</title><rect x="24.9513%" y="821" width="0.8447%" height="15" fill="rgb(250,108,0)"/><text x="25.2013%" y="831.50"></text></g><g><title>decor::helpers::str_subset_of_idents (2 samples, 0.13%)</title><rect x="25.6660%" y="805" width="0.1300%" height="15" fill="rgb(228,208,7)"/><text x="25.9160%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="25.6660%" y="789" width="0.1300%" height="15" fill="rgb(244,45,10)"/><text x="25.9160%" y="799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="25.6660%" y="773" width="0.1300%" height="15" fill="rgb(207,125,25)"/><text x="25.9160%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.13%)</title><rect x="25.6660%" y="757" width="0.1300%" height="15" fill="rgb(210,195,18)"/><text x="25.9160%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="25.8609%" y="805" width="0.1300%" height="15" fill="rgb(249,80,12)"/><text x="26.1109%" y="815.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="25.9909%" y="805" width="0.1300%" height="15" fill="rgb(221,65,9)"/><text x="26.2409%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.13%)</title><rect x="26.3808%" y="757" width="0.1300%" height="15" fill="rgb(235,49,36)"/><text x="26.6308%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="26.3808%" y="741" width="0.1300%" height="15" fill="rgb(225,32,20)"/><text x="26.6308%" y="751.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="26.3808%" y="725" width="0.1300%" height="15" fill="rgb(215,141,46)"/><text x="26.6308%" y="735.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.19%)</title><rect x="27.4204%" y="469" width="0.1949%" height="15" fill="rgb(250,160,47)"/><text x="27.6704%" y="479.50"></text></g><g><title>dequeue_entity (2 samples, 0.13%)</title><rect x="27.4854%" y="453" width="0.1300%" height="15" fill="rgb(216,222,40)"/><text x="27.7354%" y="463.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.13%)</title><rect x="27.7453%" y="469" width="0.1300%" height="15" fill="rgb(234,217,39)"/><text x="27.9953%" y="479.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.13%)</title><rect x="27.9402%" y="453" width="0.1300%" height="15" fill="rgb(207,178,40)"/><text x="28.1902%" y="463.50"></text></g><g><title>sched_clock (2 samples, 0.13%)</title><rect x="27.9402%" y="437" width="0.1300%" height="15" fill="rgb(221,136,13)"/><text x="28.1902%" y="447.50"></text></g><g><title>sk_wait_data (18 samples, 1.17%)</title><rect x="26.9656%" y="549" width="1.1696%" height="15" fill="rgb(249,199,10)"/><text x="27.2156%" y="559.50"></text></g><g><title>wait_woken (15 samples, 0.97%)</title><rect x="27.1605%" y="533" width="0.9747%" height="15" fill="rgb(249,222,13)"/><text x="27.4105%" y="543.50"></text></g><g><title>schedule_timeout (15 samples, 0.97%)</title><rect x="27.1605%" y="517" width="0.9747%" height="15" fill="rgb(244,185,38)"/><text x="27.4105%" y="527.50"></text></g><g><title>schedule (15 samples, 0.97%)</title><rect x="27.1605%" y="501" width="0.9747%" height="15" fill="rgb(236,202,9)"/><text x="27.4105%" y="511.50"></text></g><g><title>__schedule (15 samples, 0.97%)</title><rect x="27.1605%" y="485" width="0.9747%" height="15" fill="rgb(250,229,37)"/><text x="27.4105%" y="495.50"></text></g><g><title>update_rq_clock (3 samples, 0.19%)</title><rect x="27.9402%" y="469" width="0.1949%" height="15" fill="rgb(206,174,23)"/><text x="28.1902%" y="479.50"></text></g><g><title>inet_recvmsg (27 samples, 1.75%)</title><rect x="26.7057%" y="581" width="1.7544%" height="15" fill="rgb(211,33,43)"/><text x="26.9557%" y="591.50"></text></g><g><title>tcp_recvmsg (27 samples, 1.75%)</title><rect x="26.7057%" y="565" width="1.7544%" height="15" fill="rgb(245,58,50)"/><text x="26.9557%" y="575.50"></text></g><g><title>tcp_recv_timestamp (2 samples, 0.13%)</title><rect x="28.3301%" y="549" width="0.1300%" height="15" fill="rgb(244,68,36)"/><text x="28.5801%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (30 samples, 1.95%)</title><rect x="26.6407%" y="613" width="1.9493%" height="15" fill="rgb(232,229,15)"/><text x="26.8907%" y="623.50">_..</text></g><g><title>__sys_recvfrom (29 samples, 1.88%)</title><rect x="26.7057%" y="597" width="1.8843%" height="15" fill="rgb(254,30,23)"/><text x="26.9557%" y="607.50">_..</text></g><g><title>sockfd_lookup_light (2 samples, 0.13%)</title><rect x="28.4600%" y="581" width="0.1300%" height="15" fill="rgb(235,160,14)"/><text x="28.7100%" y="591.50"></text></g><g><title>do_syscall_64 (31 samples, 2.01%)</title><rect x="26.6407%" y="629" width="2.0143%" height="15" fill="rgb(212,155,44)"/><text x="26.8907%" y="639.50">d..</text></g><g><title>entry_SYSCALL_64 (32 samples, 2.08%)</title><rect x="26.6407%" y="645" width="2.0793%" height="15" fill="rgb(226,2,50)"/><text x="26.8907%" y="655.50">e..</text></g><g><title>__libc_recv (35 samples, 2.27%)</title><rect x="26.5757%" y="661" width="2.2742%" height="15" fill="rgb(234,177,6)"/><text x="26.8257%" y="671.50">_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.13%)</title><rect x="28.7199%" y="645" width="0.1300%" height="15" fill="rgb(217,24,9)"/><text x="28.9699%" y="655.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 2.40%)</title><rect x="26.5107%" y="741" width="2.4042%" height="15" fill="rgb(220,13,46)"/><text x="26.7607%" y="751.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (36 samples, 2.34%)</title><rect x="26.5757%" y="725" width="2.3392%" height="15" fill="rgb(239,221,27)"/><text x="26.8257%" y="735.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (36 samples, 2.34%)</title><rect x="26.5757%" y="709" width="2.3392%" height="15" fill="rgb(222,198,25)"/><text x="26.8257%" y="719.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (36 samples, 2.34%)</title><rect x="26.5757%" y="693" width="2.3392%" height="15" fill="rgb(211,99,13)"/><text x="26.8257%" y="703.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (36 samples, 2.34%)</title><rect x="26.5757%" y="677" width="2.3392%" height="15" fill="rgb(232,111,31)"/><text x="26.8257%" y="687.50">s..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 2.47%)</title><rect x="26.5107%" y="757" width="2.4691%" height="15" fill="rgb(245,82,37)"/><text x="26.7607%" y="767.50">&lt;m..</text></g><g><title>mysql::conn::Conn::read_packet (42 samples, 2.73%)</title><rect x="26.3808%" y="773" width="2.7290%" height="15" fill="rgb(227,149,46)"/><text x="26.6308%" y="783.50">my..</text></g><g><title>std::io::error::Error::_new (2 samples, 0.13%)</title><rect x="28.9799%" y="757" width="0.1300%" height="15" fill="rgb(218,36,50)"/><text x="29.2299%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.13%)</title><rect x="28.9799%" y="741" width="0.1300%" height="15" fill="rgb(226,80,48)"/><text x="29.2299%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.13%)</title><rect x="28.9799%" y="725" width="0.1300%" height="15" fill="rgb(238,224,15)"/><text x="29.2299%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.13%)</title><rect x="28.9799%" y="709" width="0.1300%" height="15" fill="rgb(241,136,10)"/><text x="29.2299%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="28.9799%" y="693" width="0.1300%" height="15" fill="rgb(208,32,45)"/><text x="29.2299%" y="703.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="28.9799%" y="677" width="0.1300%" height="15" fill="rgb(207,135,9)"/><text x="29.2299%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="28.9799%" y="661" width="0.1300%" height="15" fill="rgb(206,86,44)"/><text x="29.2299%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (44 samples, 2.86%)</title><rect x="26.3158%" y="789" width="2.8590%" height="15" fill="rgb(245,177,15)"/><text x="26.5658%" y="799.50">my..</text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (3 samples, 0.19%)</title><rect x="29.2398%" y="773" width="0.1949%" height="15" fill="rgb(206,64,50)"/><text x="29.4898%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (2 samples, 0.13%)</title><rect x="29.3047%" y="757" width="0.1300%" height="15" fill="rgb(234,36,40)"/><text x="29.5547%" y="767.50"></text></g><g><title>__sk_dst_check (2 samples, 0.13%)</title><rect x="29.8895%" y="533" width="0.1300%" height="15" fill="rgb(213,64,8)"/><text x="30.1395%" y="543.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.13%)</title><rect x="29.8895%" y="517" width="0.1300%" height="15" fill="rgb(210,75,36)"/><text x="30.1395%" y="527.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.19%)</title><rect x="30.3444%" y="485" width="0.1949%" height="15" fill="rgb(229,88,21)"/><text x="30.5944%" y="495.50"></text></g><g><title>loopback_xmit (3 samples, 0.19%)</title><rect x="30.3444%" y="469" width="0.1949%" height="15" fill="rgb(252,204,47)"/><text x="30.5944%" y="479.50"></text></g><g><title>netif_rx (3 samples, 0.19%)</title><rect x="30.3444%" y="453" width="0.1949%" height="15" fill="rgb(208,77,27)"/><text x="30.5944%" y="463.50"></text></g><g><title>netif_rx_internal (3 samples, 0.19%)</title><rect x="30.3444%" y="437" width="0.1949%" height="15" fill="rgb(221,76,26)"/><text x="30.5944%" y="447.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.32%)</title><rect x="30.2794%" y="501" width="0.3249%" height="15" fill="rgb(225,139,18)"/><text x="30.5294%" y="511.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.13%)</title><rect x="30.6693%" y="437" width="0.1300%" height="15" fill="rgb(230,137,11)"/><text x="30.9193%" y="447.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.19%)</title><rect x="31.1891%" y="309" width="0.1949%" height="15" fill="rgb(212,28,1)"/><text x="31.4391%" y="319.50"></text></g><g><title>inet_ehashfn (2 samples, 0.13%)</title><rect x="31.2541%" y="293" width="0.1300%" height="15" fill="rgb(248,164,17)"/><text x="31.5041%" y="303.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="31.5140%" y="181" width="0.1300%" height="15" fill="rgb(222,171,42)"/><text x="31.7640%" y="191.50"></text></g><g><title>psi_group_change (2 samples, 0.13%)</title><rect x="31.5140%" y="165" width="0.1300%" height="15" fill="rgb(243,84,45)"/><text x="31.7640%" y="175.50"></text></g><g><title>enqueue_task (3 samples, 0.19%)</title><rect x="31.5140%" y="197" width="0.1949%" height="15" fill="rgb(252,49,23)"/><text x="31.7640%" y="207.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.26%)</title><rect x="31.7089%" y="197" width="0.2599%" height="15" fill="rgb(215,19,7)"/><text x="31.9589%" y="207.50"></text></g><g><title>enqueue_entity (3 samples, 0.19%)</title><rect x="31.7739%" y="181" width="0.1949%" height="15" fill="rgb(238,81,41)"/><text x="32.0239%" y="191.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.19%)</title><rect x="31.9688%" y="197" width="0.1949%" height="15" fill="rgb(210,199,37)"/><text x="32.2188%" y="207.50"></text></g><g><title>sock_def_readable (13 samples, 0.84%)</title><rect x="31.4490%" y="277" width="0.8447%" height="15" fill="rgb(244,192,49)"/><text x="31.6990%" y="287.50"></text></g><g><title>__wake_up_common_lock (13 samples, 0.84%)</title><rect x="31.4490%" y="261" width="0.8447%" height="15" fill="rgb(226,211,11)"/><text x="31.6990%" y="271.50"></text></g><g><title>__wake_up_common (13 samples, 0.84%)</title><rect x="31.4490%" y="245" width="0.8447%" height="15" fill="rgb(236,162,54)"/><text x="31.6990%" y="255.50"></text></g><g><title>pollwake (13 samples, 0.84%)</title><rect x="31.4490%" y="229" width="0.8447%" height="15" fill="rgb(220,229,9)"/><text x="31.6990%" y="239.50"></text></g><g><title>try_to_wake_up (13 samples, 0.84%)</title><rect x="31.4490%" y="213" width="0.8447%" height="15" fill="rgb(250,87,22)"/><text x="31.6990%" y="223.50"></text></g><g><title>__kfree_skb (3 samples, 0.19%)</title><rect x="32.4237%" y="261" width="0.1949%" height="15" fill="rgb(239,43,17)"/><text x="32.6737%" y="271.50"></text></g><g><title>kfree (3 samples, 0.19%)</title><rect x="32.4237%" y="245" width="0.1949%" height="15" fill="rgb(231,177,25)"/><text x="32.6737%" y="255.50"></text></g><g><title>__slab_free (2 samples, 0.13%)</title><rect x="32.4886%" y="229" width="0.1300%" height="15" fill="rgb(219,179,1)"/><text x="32.7386%" y="239.50"></text></g><g><title>tcp_ack (8 samples, 0.52%)</title><rect x="32.2937%" y="277" width="0.5198%" height="15" fill="rgb(238,219,53)"/><text x="32.5437%" y="287.50"></text></g><g><title>ip_local_deliver (30 samples, 1.95%)</title><rect x="31.0591%" y="373" width="1.9493%" height="15" fill="rgb(232,167,36)"/><text x="31.3091%" y="383.50">i..</text></g><g><title>ip_local_deliver_finish (30 samples, 1.95%)</title><rect x="31.0591%" y="357" width="1.9493%" height="15" fill="rgb(244,19,51)"/><text x="31.3091%" y="367.50">i..</text></g><g><title>ip_protocol_deliver_rcu (30 samples, 1.95%)</title><rect x="31.0591%" y="341" width="1.9493%" height="15" fill="rgb(224,6,22)"/><text x="31.3091%" y="351.50">i..</text></g><g><title>tcp_v4_rcv (28 samples, 1.82%)</title><rect x="31.1891%" y="325" width="1.8194%" height="15" fill="rgb(224,145,5)"/><text x="31.4391%" y="335.50">t..</text></g><g><title>tcp_v4_do_rcv (24 samples, 1.56%)</title><rect x="31.4490%" y="309" width="1.5595%" height="15" fill="rgb(234,130,49)"/><text x="31.6990%" y="319.50"></text></g><g><title>tcp_rcv_established (24 samples, 1.56%)</title><rect x="31.4490%" y="293" width="1.5595%" height="15" fill="rgb(254,6,2)"/><text x="31.6990%" y="303.50"></text></g><g><title>ip_finish_output2 (46 samples, 2.99%)</title><rect x="30.1494%" y="517" width="2.9890%" height="15" fill="rgb(208,96,46)"/><text x="30.3994%" y="527.50">ip_..</text></g><g><title>__local_bh_enable_ip (39 samples, 2.53%)</title><rect x="30.6043%" y="501" width="2.5341%" height="15" fill="rgb(239,3,39)"/><text x="30.8543%" y="511.50">__..</text></g><g><title>do_softirq (39 samples, 2.53%)</title><rect x="30.6043%" y="485" width="2.5341%" height="15" fill="rgb(233,210,1)"/><text x="30.8543%" y="495.50">do..</text></g><g><title>do_softirq_own_stack (38 samples, 2.47%)</title><rect x="30.6693%" y="469" width="2.4691%" height="15" fill="rgb(244,137,37)"/><text x="30.9193%" y="479.50">do..</text></g><g><title>__do_softirq (38 samples, 2.47%)</title><rect x="30.6693%" y="453" width="2.4691%" height="15" fill="rgb(240,136,2)"/><text x="30.9193%" y="463.50">__..</text></g><g><title>net_rx_action (36 samples, 2.34%)</title><rect x="30.7992%" y="437" width="2.3392%" height="15" fill="rgb(239,18,37)"/><text x="31.0492%" y="447.50">n..</text></g><g><title>process_backlog (34 samples, 2.21%)</title><rect x="30.9292%" y="421" width="2.2092%" height="15" fill="rgb(218,185,22)"/><text x="31.1792%" y="431.50">p..</text></g><g><title>__netif_receive_skb_one_core (33 samples, 2.14%)</title><rect x="30.9942%" y="405" width="2.1442%" height="15" fill="rgb(225,218,4)"/><text x="31.2442%" y="415.50">_..</text></g><g><title>ip_rcv (32 samples, 2.08%)</title><rect x="31.0591%" y="389" width="2.0793%" height="15" fill="rgb(230,182,32)"/><text x="31.3091%" y="399.50">i..</text></g><g><title>__ip_queue_xmit (51 samples, 3.31%)</title><rect x="29.8895%" y="549" width="3.3138%" height="15" fill="rgb(242,56,43)"/><text x="30.1395%" y="559.50">__i..</text></g><g><title>ip_output (49 samples, 3.18%)</title><rect x="30.0195%" y="533" width="3.1839%" height="15" fill="rgb(233,99,24)"/><text x="30.2695%" y="543.50">ip_..</text></g><g><title>__tcp_transmit_skb (54 samples, 3.51%)</title><rect x="29.8246%" y="565" width="3.5088%" height="15" fill="rgb(234,209,42)"/><text x="30.0746%" y="575.50">__t..</text></g><g><title>__tcp_push_pending_frames (57 samples, 3.70%)</title><rect x="29.6946%" y="597" width="3.7037%" height="15" fill="rgb(227,7,12)"/><text x="29.9446%" y="607.50">__tc..</text></g><g><title>tcp_write_xmit (57 samples, 3.70%)</title><rect x="29.6946%" y="581" width="3.7037%" height="15" fill="rgb(245,203,43)"/><text x="29.9446%" y="591.50">tcp_..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (121 samples, 7.86%)</title><rect x="25.7960%" y="821" width="7.8622%" height="15" fill="rgb(238,205,33)"/><text x="26.0460%" y="831.50">&lt;mysql::con..</text></g><g><title>mysql::conn::Conn::_query (116 samples, 7.54%)</title><rect x="26.1209%" y="805" width="7.5374%" height="15" fill="rgb(231,56,7)"/><text x="26.3709%" y="815.50">mysql::con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (69 samples, 4.48%)</title><rect x="29.1748%" y="789" width="4.4834%" height="15" fill="rgb(244,186,29)"/><text x="29.4248%" y="799.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (64 samples, 4.16%)</title><rect x="29.4997%" y="773" width="4.1585%" height="15" fill="rgb(234,111,31)"/><text x="29.7497%" y="783.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (64 samples, 4.16%)</title><rect x="29.4997%" y="757" width="4.1585%" height="15" fill="rgb(241,149,10)"/><text x="29.7497%" y="767.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (64 samples, 4.16%)</title><rect x="29.4997%" y="741" width="4.1585%" height="15" fill="rgb(249,206,44)"/><text x="29.7497%" y="751.50">std::..</text></g><g><title>__libc_send (64 samples, 4.16%)</title><rect x="29.4997%" y="725" width="4.1585%" height="15" fill="rgb(251,153,30)"/><text x="29.7497%" y="735.50">__lib..</text></g><g><title>entry_SYSCALL_64 (64 samples, 4.16%)</title><rect x="29.4997%" y="709" width="4.1585%" height="15" fill="rgb(239,152,38)"/><text x="29.7497%" y="719.50">entry..</text></g><g><title>do_syscall_64 (64 samples, 4.16%)</title><rect x="29.4997%" y="693" width="4.1585%" height="15" fill="rgb(249,139,47)"/><text x="29.7497%" y="703.50">do_sy..</text></g><g><title>__x64_sys_sendto (63 samples, 4.09%)</title><rect x="29.5647%" y="677" width="4.0936%" height="15" fill="rgb(244,64,35)"/><text x="29.8147%" y="687.50">__x6..</text></g><g><title>__sys_sendto (63 samples, 4.09%)</title><rect x="29.5647%" y="661" width="4.0936%" height="15" fill="rgb(216,46,15)"/><text x="29.8147%" y="671.50">__sy..</text></g><g><title>sock_sendmsg (62 samples, 4.03%)</title><rect x="29.6296%" y="645" width="4.0286%" height="15" fill="rgb(250,74,19)"/><text x="29.8796%" y="655.50">sock..</text></g><g><title>tcp_sendmsg (62 samples, 4.03%)</title><rect x="29.6296%" y="629" width="4.0286%" height="15" fill="rgb(249,42,33)"/><text x="29.8796%" y="639.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (61 samples, 3.96%)</title><rect x="29.6946%" y="613" width="3.9636%" height="15" fill="rgb(242,149,17)"/><text x="29.9446%" y="623.50">tcp_..</text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (380 samples, 24.69%)</title><rect x="9.0318%" y="853" width="24.6914%" height="15" fill="rgb(244,29,21)"/><text x="9.2818%" y="863.50">decor::query_transformer::QueryTransfor..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (122 samples, 7.93%)</title><rect x="25.7960%" y="837" width="7.9272%" height="15" fill="rgb(220,130,37)"/><text x="26.0460%" y="847.50">mysql::conn..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (385 samples, 25.02%)</title><rect x="9.0318%" y="869" width="25.0162%" height="15" fill="rgb(211,67,2)"/><text x="9.2818%" y="879.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;:..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (5 samples, 0.32%)</title><rect x="33.7232%" y="853" width="0.3249%" height="15" fill="rgb(235,68,52)"/><text x="33.9732%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.26%)</title><rect x="33.7882%" y="837" width="0.2599%" height="15" fill="rgb(246,142,3)"/><text x="34.0382%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.26%)</title><rect x="33.7882%" y="821" width="0.2599%" height="15" fill="rgb(241,25,7)"/><text x="34.0382%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.19%)</title><rect x="33.8532%" y="805" width="0.1949%" height="15" fill="rgb(242,119,39)"/><text x="34.1032%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (3 samples, 0.19%)</title><rect x="33.8532%" y="789" width="0.1949%" height="15" fill="rgb(241,98,45)"/><text x="34.1032%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.13%)</title><rect x="33.9181%" y="773" width="0.1300%" height="15" fill="rgb(254,28,30)"/><text x="34.1681%" y="783.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="33.9181%" y="757" width="0.1300%" height="15" fill="rgb(241,142,54)"/><text x="34.1681%" y="767.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="33.9181%" y="741" width="0.1300%" height="15" fill="rgb(222,85,15)"/><text x="34.1681%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="33.9181%" y="725" width="0.1300%" height="15" fill="rgb(210,85,47)"/><text x="34.1681%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.13%)</title><rect x="34.1780%" y="869" width="0.1300%" height="15" fill="rgb(224,206,25)"/><text x="34.4280%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.13%)</title><rect x="34.4379%" y="869" width="0.1300%" height="15" fill="rgb(243,201,19)"/><text x="34.6879%" y="879.50"></text></g><g><title>__GI___libc_free (4 samples, 0.26%)</title><rect x="34.6329%" y="869" width="0.2599%" height="15" fill="rgb(236,59,4)"/><text x="34.8829%" y="879.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.13%)</title><rect x="35.0877%" y="389" width="0.1300%" height="15" fill="rgb(254,179,45)"/><text x="35.3377%" y="399.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.13%)</title><rect x="35.0877%" y="373" width="0.1300%" height="15" fill="rgb(226,14,10)"/><text x="35.3377%" y="383.50"></text></g><g><title>loopback_xmit (2 samples, 0.13%)</title><rect x="35.0877%" y="357" width="0.1300%" height="15" fill="rgb(244,27,41)"/><text x="35.3377%" y="367.50"></text></g><g><title>netif_rx (2 samples, 0.13%)</title><rect x="35.0877%" y="341" width="0.1300%" height="15" fill="rgb(235,35,32)"/><text x="35.3377%" y="351.50"></text></g><g><title>netif_rx_internal (2 samples, 0.13%)</title><rect x="35.0877%" y="325" width="0.1300%" height="15" fill="rgb(218,68,31)"/><text x="35.3377%" y="335.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.13%)</title><rect x="35.0877%" y="309" width="0.1300%" height="15" fill="rgb(207,120,37)"/><text x="35.3377%" y="319.50"></text></g><g><title>sock_def_readable (8 samples, 0.52%)</title><rect x="35.5426%" y="165" width="0.5198%" height="15" fill="rgb(227,98,0)"/><text x="35.7926%" y="175.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.45%)</title><rect x="35.6075%" y="149" width="0.4548%" height="15" fill="rgb(207,7,3)"/><text x="35.8575%" y="159.50"></text></g><g><title>__wake_up_common (7 samples, 0.45%)</title><rect x="35.6075%" y="133" width="0.4548%" height="15" fill="rgb(206,98,19)"/><text x="35.8575%" y="143.50"></text></g><g><title>try_to_wake_up (7 samples, 0.45%)</title><rect x="35.6075%" y="117" width="0.4548%" height="15" fill="rgb(217,5,26)"/><text x="35.8575%" y="127.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.26%)</title><rect x="35.8025%" y="101" width="0.2599%" height="15" fill="rgb(235,190,38)"/><text x="36.0525%" y="111.50"></text></g><g><title>enqueue_entity (3 samples, 0.19%)</title><rect x="35.8674%" y="85" width="0.1949%" height="15" fill="rgb(247,86,24)"/><text x="36.1174%" y="95.50"></text></g><g><title>ip_local_deliver (16 samples, 1.04%)</title><rect x="35.3476%" y="261" width="1.0396%" height="15" fill="rgb(205,101,16)"/><text x="35.5976%" y="271.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 1.04%)</title><rect x="35.3476%" y="245" width="1.0396%" height="15" fill="rgb(246,168,33)"/><text x="35.5976%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 1.04%)</title><rect x="35.3476%" y="229" width="1.0396%" height="15" fill="rgb(231,114,1)"/><text x="35.5976%" y="239.50"></text></g><g><title>tcp_v4_rcv (15 samples, 0.97%)</title><rect x="35.4126%" y="213" width="0.9747%" height="15" fill="rgb(207,184,53)"/><text x="35.6626%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 0.84%)</title><rect x="35.5426%" y="197" width="0.8447%" height="15" fill="rgb(224,95,51)"/><text x="35.7926%" y="207.50"></text></g><g><title>tcp_rcv_established (13 samples, 0.84%)</title><rect x="35.5426%" y="181" width="0.8447%" height="15" fill="rgb(212,188,45)"/><text x="35.7926%" y="191.50"></text></g><g><title>tcp_ack (5 samples, 0.32%)</title><rect x="36.0624%" y="165" width="0.3249%" height="15" fill="rgb(223,154,38)"/><text x="36.3124%" y="175.50"></text></g><g><title>__netif_receive_skb_one_core (19 samples, 1.23%)</title><rect x="35.2827%" y="293" width="1.2346%" height="15" fill="rgb(251,22,52)"/><text x="35.5327%" y="303.50"></text></g><g><title>ip_rcv (18 samples, 1.17%)</title><rect x="35.3476%" y="277" width="1.1696%" height="15" fill="rgb(229,209,22)"/><text x="35.5976%" y="287.50"></text></g><g><title>__tcp_transmit_skb (24 samples, 1.56%)</title><rect x="35.0227%" y="453" width="1.5595%" height="15" fill="rgb(234,138,34)"/><text x="35.2727%" y="463.50"></text></g><g><title>__ip_queue_xmit (24 samples, 1.56%)</title><rect x="35.0227%" y="437" width="1.5595%" height="15" fill="rgb(212,95,11)"/><text x="35.2727%" y="447.50"></text></g><g><title>ip_output (23 samples, 1.49%)</title><rect x="35.0877%" y="421" width="1.4945%" height="15" fill="rgb(240,179,47)"/><text x="35.3377%" y="431.50"></text></g><g><title>ip_finish_output2 (23 samples, 1.49%)</title><rect x="35.0877%" y="405" width="1.4945%" height="15" fill="rgb(240,163,11)"/><text x="35.3377%" y="415.50"></text></g><g><title>__local_bh_enable_ip (21 samples, 1.36%)</title><rect x="35.2177%" y="389" width="1.3645%" height="15" fill="rgb(236,37,12)"/><text x="35.4677%" y="399.50"></text></g><g><title>do_softirq (21 samples, 1.36%)</title><rect x="35.2177%" y="373" width="1.3645%" height="15" fill="rgb(232,164,16)"/><text x="35.4677%" y="383.50"></text></g><g><title>do_softirq_own_stack (21 samples, 1.36%)</title><rect x="35.2177%" y="357" width="1.3645%" height="15" fill="rgb(244,205,15)"/><text x="35.4677%" y="367.50"></text></g><g><title>__do_softirq (21 samples, 1.36%)</title><rect x="35.2177%" y="341" width="1.3645%" height="15" fill="rgb(223,117,47)"/><text x="35.4677%" y="351.50"></text></g><g><title>net_rx_action (20 samples, 1.30%)</title><rect x="35.2827%" y="325" width="1.2995%" height="15" fill="rgb(244,107,35)"/><text x="35.5327%" y="335.50"></text></g><g><title>process_backlog (20 samples, 1.30%)</title><rect x="35.2827%" y="309" width="1.2995%" height="15" fill="rgb(205,140,8)"/><text x="35.5327%" y="319.50"></text></g><g><title>__tcp_push_pending_frames (25 samples, 1.62%)</title><rect x="35.0227%" y="485" width="1.6244%" height="15" fill="rgb(228,84,46)"/><text x="35.2727%" y="495.50"></text></g><g><title>tcp_write_xmit (25 samples, 1.62%)</title><rect x="35.0227%" y="469" width="1.6244%" height="15" fill="rgb(254,188,9)"/><text x="35.2727%" y="479.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.13%)</title><rect x="36.6472%" y="453" width="0.1300%" height="15" fill="rgb(206,112,54)"/><text x="36.8972%" y="463.50"></text></g><g><title>__x64_sys_sendto (28 samples, 1.82%)</title><rect x="35.0227%" y="565" width="1.8194%" height="15" fill="rgb(216,84,49)"/><text x="35.2727%" y="575.50">_..</text></g><g><title>__sys_sendto (28 samples, 1.82%)</title><rect x="35.0227%" y="549" width="1.8194%" height="15" fill="rgb(214,194,35)"/><text x="35.2727%" y="559.50">_..</text></g><g><title>sock_sendmsg (28 samples, 1.82%)</title><rect x="35.0227%" y="533" width="1.8194%" height="15" fill="rgb(249,28,3)"/><text x="35.2727%" y="543.50">s..</text></g><g><title>tcp_sendmsg (28 samples, 1.82%)</title><rect x="35.0227%" y="517" width="1.8194%" height="15" fill="rgb(222,56,52)"/><text x="35.2727%" y="527.50">t..</text></g><g><title>tcp_sendmsg_locked (28 samples, 1.82%)</title><rect x="35.0227%" y="501" width="1.8194%" height="15" fill="rgb(245,217,50)"/><text x="35.2727%" y="511.50">t..</text></g><g><title>sk_stream_alloc_skb (3 samples, 0.19%)</title><rect x="36.6472%" y="485" width="0.1949%" height="15" fill="rgb(213,201,24)"/><text x="36.8972%" y="495.50"></text></g><g><title>__alloc_skb (3 samples, 0.19%)</title><rect x="36.6472%" y="469" width="0.1949%" height="15" fill="rgb(248,116,28)"/><text x="36.8972%" y="479.50"></text></g><g><title>__libc_start_main (30 samples, 1.95%)</title><rect x="34.9578%" y="869" width="1.9493%" height="15" fill="rgb(219,72,43)"/><text x="35.2078%" y="879.50">_..</text></g><g><title>main (30 samples, 1.95%)</title><rect x="34.9578%" y="853" width="1.9493%" height="15" fill="rgb(209,138,14)"/><text x="35.2078%" y="863.50">m..</text></g><g><title>std::rt::lang_start_internal (30 samples, 1.95%)</title><rect x="34.9578%" y="837" width="1.9493%" height="15" fill="rgb(222,18,33)"/><text x="35.2078%" y="847.50">s..</text></g><g><title>std::panic::catch_unwind (30 samples, 1.95%)</title><rect x="34.9578%" y="821" width="1.9493%" height="15" fill="rgb(213,199,7)"/><text x="35.2078%" y="831.50">s..</text></g><g><title>std::panicking::try (30 samples, 1.95%)</title><rect x="34.9578%" y="805" width="1.9493%" height="15" fill="rgb(250,110,10)"/><text x="35.2078%" y="815.50">s..</text></g><g><title>std::panicking::try::do_call (30 samples, 1.95%)</title><rect x="34.9578%" y="789" width="1.9493%" height="15" fill="rgb(248,123,6)"/><text x="35.2078%" y="799.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (30 samples, 1.95%)</title><rect x="34.9578%" y="773" width="1.9493%" height="15" fill="rgb(206,91,31)"/><text x="35.2078%" y="783.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (30 samples, 1.95%)</title><rect x="34.9578%" y="757" width="1.9493%" height="15" fill="rgb(211,154,13)"/><text x="35.2078%" y="767.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 1.95%)</title><rect x="34.9578%" y="741" width="1.9493%" height="15" fill="rgb(225,148,7)"/><text x="35.2078%" y="751.50">s..</text></g><g><title>lobsters::main (30 samples, 1.95%)</title><rect x="34.9578%" y="725" width="1.9493%" height="15" fill="rgb(220,160,43)"/><text x="35.2078%" y="735.50">l..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (30 samples, 1.95%)</title><rect x="34.9578%" y="709" width="1.9493%" height="15" fill="rgb(213,52,39)"/><text x="35.2078%" y="719.50">m..</text></g><g><title>mysql::conn::Conn::_query (30 samples, 1.95%)</title><rect x="34.9578%" y="693" width="1.9493%" height="15" fill="rgb(243,137,7)"/><text x="35.2078%" y="703.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (30 samples, 1.95%)</title><rect x="34.9578%" y="677" width="1.9493%" height="15" fill="rgb(230,79,13)"/><text x="35.2078%" y="687.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (30 samples, 1.95%)</title><rect x="34.9578%" y="661" width="1.9493%" height="15" fill="rgb(247,105,23)"/><text x="35.2078%" y="671.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (30 samples, 1.95%)</title><rect x="34.9578%" y="645" width="1.9493%" height="15" fill="rgb(223,179,41)"/><text x="35.2078%" y="655.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (30 samples, 1.95%)</title><rect x="34.9578%" y="629" width="1.9493%" height="15" fill="rgb(218,9,34)"/><text x="35.2078%" y="639.50">s..</text></g><g><title>__libc_send (30 samples, 1.95%)</title><rect x="34.9578%" y="613" width="1.9493%" height="15" fill="rgb(222,106,8)"/><text x="35.2078%" y="623.50">_..</text></g><g><title>entry_SYSCALL_64 (30 samples, 1.95%)</title><rect x="34.9578%" y="597" width="1.9493%" height="15" fill="rgb(211,220,0)"/><text x="35.2078%" y="607.50">e..</text></g><g><title>do_syscall_64 (29 samples, 1.88%)</title><rect x="35.0227%" y="581" width="1.8843%" height="15" fill="rgb(229,52,16)"/><text x="35.2727%" y="591.50">d..</text></g><g><title>__rdl_alloc (2 samples, 0.13%)</title><rect x="36.9721%" y="869" width="0.1300%" height="15" fill="rgb(212,155,18)"/><text x="37.2221%" y="879.50"></text></g><g><title>_int_free (5 samples, 0.32%)</title><rect x="37.1670%" y="869" width="0.3249%" height="15" fill="rgb(242,21,14)"/><text x="37.4170%" y="879.50"></text></g><g><title>_int_realloc (2 samples, 0.13%)</title><rect x="37.4919%" y="869" width="0.1300%" height="15" fill="rgb(222,19,48)"/><text x="37.7419%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="37.6218%" y="869" width="0.1300%" height="15" fill="rgb(232,45,27)"/><text x="37.8718%" y="879.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.13%)</title><rect x="37.7518%" y="869" width="0.1300%" height="15" fill="rgb(249,103,42)"/><text x="38.0018%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.19%)</title><rect x="37.9467%" y="869" width="0.1949%" height="15" fill="rgb(246,81,33)"/><text x="38.1967%" y="879.50"></text></g><g><title>core::fmt::write (3 samples, 0.19%)</title><rect x="38.2066%" y="869" width="0.1949%" height="15" fill="rgb(252,33,42)"/><text x="38.4566%" y="879.50"></text></g><g><title>update_curr (2 samples, 0.13%)</title><rect x="38.8564%" y="405" width="0.1300%" height="15" fill="rgb(209,212,41)"/><text x="39.1064%" y="415.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.19%)</title><rect x="38.8564%" y="437" width="0.1949%" height="15" fill="rgb(207,154,6)"/><text x="39.1064%" y="447.50"></text></g><g><title>dequeue_entity (3 samples, 0.19%)</title><rect x="38.8564%" y="421" width="0.1949%" height="15" fill="rgb(223,64,47)"/><text x="39.1064%" y="431.50"></text></g><g><title>sk_wait_data (7 samples, 0.45%)</title><rect x="38.7914%" y="517" width="0.4548%" height="15" fill="rgb(211,161,38)"/><text x="39.0414%" y="527.50"></text></g><g><title>wait_woken (7 samples, 0.45%)</title><rect x="38.7914%" y="501" width="0.4548%" height="15" fill="rgb(219,138,40)"/><text x="39.0414%" y="511.50"></text></g><g><title>schedule_timeout (6 samples, 0.39%)</title><rect x="38.8564%" y="485" width="0.3899%" height="15" fill="rgb(241,228,46)"/><text x="39.1064%" y="495.50"></text></g><g><title>schedule (6 samples, 0.39%)</title><rect x="38.8564%" y="469" width="0.3899%" height="15" fill="rgb(223,209,38)"/><text x="39.1064%" y="479.50"></text></g><g><title>__schedule (6 samples, 0.39%)</title><rect x="38.8564%" y="453" width="0.3899%" height="15" fill="rgb(236,164,45)"/><text x="39.1064%" y="463.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.13%)</title><rect x="39.2463%" y="517" width="0.1300%" height="15" fill="rgb(231,15,5)"/><text x="39.4963%" y="527.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.13%)</title><rect x="39.2463%" y="501" width="0.1300%" height="15" fill="rgb(252,35,15)"/><text x="39.4963%" y="511.50"></text></g><g><title>inet_recvmsg (14 samples, 0.91%)</title><rect x="38.5315%" y="549" width="0.9097%" height="15" fill="rgb(248,181,18)"/><text x="38.7815%" y="559.50"></text></g><g><title>tcp_recvmsg (14 samples, 0.91%)</title><rect x="38.5315%" y="533" width="0.9097%" height="15" fill="rgb(233,39,42)"/><text x="38.7815%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (16 samples, 1.04%)</title><rect x="38.4665%" y="581" width="1.0396%" height="15" fill="rgb(238,110,33)"/><text x="38.7165%" y="591.50"></text></g><g><title>__sys_recvfrom (16 samples, 1.04%)</title><rect x="38.4665%" y="565" width="1.0396%" height="15" fill="rgb(233,195,10)"/><text x="38.7165%" y="575.50"></text></g><g><title>do_syscall_64 (18 samples, 1.17%)</title><rect x="38.4665%" y="597" width="1.1696%" height="15" fill="rgb(254,105,3)"/><text x="38.7165%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (21 samples, 1.36%)</title><rect x="38.4016%" y="869" width="1.3645%" height="15" fill="rgb(221,225,9)"/><text x="38.6516%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 1.36%)</title><rect x="38.4016%" y="853" width="1.3645%" height="15" fill="rgb(224,227,45)"/><text x="38.6516%" y="863.50"></text></g><g><title>decor::Shim::run_on_tcp (21 samples, 1.36%)</title><rect x="38.4016%" y="837" width="1.3645%" height="15" fill="rgb(229,198,43)"/><text x="38.6516%" y="847.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (21 samples, 1.36%)</title><rect x="38.4016%" y="821" width="1.3645%" height="15" fill="rgb(206,209,35)"/><text x="38.6516%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (21 samples, 1.36%)</title><rect x="38.4016%" y="805" width="1.3645%" height="15" fill="rgb(245,195,53)"/><text x="38.6516%" y="815.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (21 samples, 1.36%)</title><rect x="38.4016%" y="789" width="1.3645%" height="15" fill="rgb(240,92,26)"/><text x="38.6516%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (21 samples, 1.36%)</title><rect x="38.4016%" y="773" width="1.3645%" height="15" fill="rgb(207,40,23)"/><text x="38.6516%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (21 samples, 1.36%)</title><rect x="38.4016%" y="757" width="1.3645%" height="15" fill="rgb(223,111,35)"/><text x="38.6516%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (21 samples, 1.36%)</title><rect x="38.4016%" y="741" width="1.3645%" height="15" fill="rgb(229,147,28)"/><text x="38.6516%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 1.36%)</title><rect x="38.4016%" y="725" width="1.3645%" height="15" fill="rgb(211,29,28)"/><text x="38.6516%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (21 samples, 1.36%)</title><rect x="38.4016%" y="709" width="1.3645%" height="15" fill="rgb(228,72,33)"/><text x="38.6516%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (21 samples, 1.36%)</title><rect x="38.4016%" y="693" width="1.3645%" height="15" fill="rgb(205,214,31)"/><text x="38.6516%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (21 samples, 1.36%)</title><rect x="38.4016%" y="677" width="1.3645%" height="15" fill="rgb(224,111,15)"/><text x="38.6516%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (21 samples, 1.36%)</title><rect x="38.4016%" y="661" width="1.3645%" height="15" fill="rgb(253,21,26)"/><text x="38.6516%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (21 samples, 1.36%)</title><rect x="38.4016%" y="645" width="1.3645%" height="15" fill="rgb(245,139,43)"/><text x="38.6516%" y="655.50"></text></g><g><title>__libc_recv (21 samples, 1.36%)</title><rect x="38.4016%" y="629" width="1.3645%" height="15" fill="rgb(252,170,7)"/><text x="38.6516%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 1.36%)</title><rect x="38.4016%" y="613" width="1.3645%" height="15" fill="rgb(231,118,14)"/><text x="38.6516%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="39.6361%" y="597" width="0.1300%" height="15" fill="rgb(238,83,0)"/><text x="39.8861%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="39.7661%" y="869" width="0.1300%" height="15" fill="rgb(221,39,39)"/><text x="40.0161%" y="879.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.19%)</title><rect x="39.9610%" y="869" width="0.1949%" height="15" fill="rgb(222,119,46)"/><text x="40.2110%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (3 samples, 0.19%)</title><rect x="39.9610%" y="853" width="0.1949%" height="15" fill="rgb(222,165,49)"/><text x="40.2110%" y="863.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="40.3509%" y="517" width="0.1300%" height="15" fill="rgb(219,113,52)"/><text x="40.6009%" y="527.50"></text></g><g><title>skb_release_head_state (2 samples, 0.13%)</title><rect x="40.3509%" y="501" width="0.1300%" height="15" fill="rgb(214,7,15)"/><text x="40.6009%" y="511.50"></text></g><g><title>dst_release (2 samples, 0.13%)</title><rect x="40.3509%" y="485" width="0.1300%" height="15" fill="rgb(235,32,4)"/><text x="40.6009%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.13%)</title><rect x="40.8707%" y="437" width="0.1300%" height="15" fill="rgb(238,90,54)"/><text x="41.1207%" y="447.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.32%)</title><rect x="41.0006%" y="437" width="0.3249%" height="15" fill="rgb(213,208,19)"/><text x="41.2506%" y="447.50"></text></g><g><title>dequeue_entity (4 samples, 0.26%)</title><rect x="41.0656%" y="421" width="0.2599%" height="15" fill="rgb(233,156,4)"/><text x="41.3156%" y="431.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="41.1956%" y="405" width="0.1300%" height="15" fill="rgb(207,194,5)"/><text x="41.4456%" y="415.50"></text></g><g><title>finish_task_switch (2 samples, 0.13%)</title><rect x="41.3255%" y="437" width="0.1300%" height="15" fill="rgb(206,111,30)"/><text x="41.5755%" y="447.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.13%)</title><rect x="41.3255%" y="421" width="0.1300%" height="15" fill="rgb(243,70,54)"/><text x="41.5755%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.13%)</title><rect x="41.5854%" y="437" width="0.1300%" height="15" fill="rgb(242,28,8)"/><text x="41.8354%" y="447.50"></text></g><g><title>sk_wait_data (20 samples, 1.30%)</title><rect x="40.5458%" y="517" width="1.2995%" height="15" fill="rgb(219,106,18)"/><text x="40.7958%" y="527.50"></text></g><g><title>wait_woken (16 samples, 1.04%)</title><rect x="40.8057%" y="501" width="1.0396%" height="15" fill="rgb(244,222,10)"/><text x="41.0557%" y="511.50"></text></g><g><title>schedule_timeout (15 samples, 0.97%)</title><rect x="40.8707%" y="485" width="0.9747%" height="15" fill="rgb(236,179,52)"/><text x="41.1207%" y="495.50"></text></g><g><title>schedule (15 samples, 0.97%)</title><rect x="40.8707%" y="469" width="0.9747%" height="15" fill="rgb(213,23,39)"/><text x="41.1207%" y="479.50"></text></g><g><title>__schedule (15 samples, 0.97%)</title><rect x="40.8707%" y="453" width="0.9747%" height="15" fill="rgb(238,48,10)"/><text x="41.1207%" y="463.50"></text></g><g><title>update_rq_clock (2 samples, 0.13%)</title><rect x="41.7154%" y="437" width="0.1300%" height="15" fill="rgb(251,196,23)"/><text x="41.9654%" y="447.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.19%)</title><rect x="41.8454%" y="517" width="0.1949%" height="15" fill="rgb(250,152,24)"/><text x="42.0954%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.19%)</title><rect x="41.8454%" y="501" width="0.1949%" height="15" fill="rgb(209,150,17)"/><text x="42.0954%" y="511.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 1.82%)</title><rect x="40.2859%" y="613" width="1.8194%" height="15" fill="rgb(234,202,34)"/><text x="40.5359%" y="623.50">e..</text></g><g><title>do_syscall_64 (27 samples, 1.75%)</title><rect x="40.3509%" y="597" width="1.7544%" height="15" fill="rgb(253,148,53)"/><text x="40.6009%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (27 samples, 1.75%)</title><rect x="40.3509%" y="581" width="1.7544%" height="15" fill="rgb(218,129,16)"/><text x="40.6009%" y="591.50"></text></g><g><title>__sys_recvfrom (27 samples, 1.75%)</title><rect x="40.3509%" y="565" width="1.7544%" height="15" fill="rgb(216,85,19)"/><text x="40.6009%" y="575.50"></text></g><g><title>inet_recvmsg (27 samples, 1.75%)</title><rect x="40.3509%" y="549" width="1.7544%" height="15" fill="rgb(235,228,7)"/><text x="40.6009%" y="559.50"></text></g><g><title>tcp_recvmsg (27 samples, 1.75%)</title><rect x="40.3509%" y="533" width="1.7544%" height="15" fill="rgb(245,175,0)"/><text x="40.6009%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 2.01%)</title><rect x="40.2209%" y="709" width="2.0143%" height="15" fill="rgb(208,168,36)"/><text x="40.4709%" y="719.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (31 samples, 2.01%)</title><rect x="40.2209%" y="693" width="2.0143%" height="15" fill="rgb(246,171,24)"/><text x="40.4709%" y="703.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (31 samples, 2.01%)</title><rect x="40.2209%" y="677" width="2.0143%" height="15" fill="rgb(215,142,24)"/><text x="40.4709%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (31 samples, 2.01%)</title><rect x="40.2209%" y="661" width="2.0143%" height="15" fill="rgb(250,187,7)"/><text x="40.4709%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (31 samples, 2.01%)</title><rect x="40.2209%" y="645" width="2.0143%" height="15" fill="rgb(228,66,33)"/><text x="40.4709%" y="655.50">s..</text></g><g><title>__libc_recv (31 samples, 2.01%)</title><rect x="40.2209%" y="629" width="2.0143%" height="15" fill="rgb(234,215,21)"/><text x="40.4709%" y="639.50">_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.13%)</title><rect x="42.1053%" y="613" width="0.1300%" height="15" fill="rgb(222,191,20)"/><text x="42.3553%" y="623.50"></text></g><g><title>decor::Shim::run_on_tcp (35 samples, 2.27%)</title><rect x="40.1559%" y="869" width="2.2742%" height="15" fill="rgb(245,79,54)"/><text x="40.4059%" y="879.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (35 samples, 2.27%)</title><rect x="40.1559%" y="853" width="2.2742%" height="15" fill="rgb(240,10,37)"/><text x="40.4059%" y="863.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (34 samples, 2.21%)</title><rect x="40.2209%" y="837" width="2.2092%" height="15" fill="rgb(214,192,32)"/><text x="40.4709%" y="847.50">&lt;..</text></g><g><title>mysql::conn::Conn::start_transaction (34 samples, 2.21%)</title><rect x="40.2209%" y="821" width="2.2092%" height="15" fill="rgb(209,36,54)"/><text x="40.4709%" y="831.50">m..</text></g><g><title>mysql::conn::Conn::_start_transaction (34 samples, 2.21%)</title><rect x="40.2209%" y="805" width="2.2092%" height="15" fill="rgb(220,10,11)"/><text x="40.4709%" y="815.50">m..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (34 samples, 2.21%)</title><rect x="40.2209%" y="789" width="2.2092%" height="15" fill="rgb(221,106,17)"/><text x="40.4709%" y="799.50">m..</text></g><g><title>mysql::conn::Conn::_query (34 samples, 2.21%)</title><rect x="40.2209%" y="773" width="2.2092%" height="15" fill="rgb(251,142,44)"/><text x="40.4709%" y="783.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (34 samples, 2.21%)</title><rect x="40.2209%" y="757" width="2.2092%" height="15" fill="rgb(238,13,15)"/><text x="40.4709%" y="767.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (34 samples, 2.21%)</title><rect x="40.2209%" y="741" width="2.2092%" height="15" fill="rgb(208,107,27)"/><text x="40.4709%" y="751.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 2.21%)</title><rect x="40.2209%" y="725" width="2.2092%" height="15" fill="rgb(205,136,37)"/><text x="40.4709%" y="735.50">&lt;..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.19%)</title><rect x="42.2352%" y="709" width="0.1949%" height="15" fill="rgb(250,205,27)"/><text x="42.4852%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.19%)</title><rect x="42.2352%" y="693" width="0.1949%" height="15" fill="rgb(210,80,43)"/><text x="42.4852%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.13%)</title><rect x="42.3002%" y="677" width="0.1300%" height="15" fill="rgb(247,160,36)"/><text x="42.5502%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="42.4951%" y="805" width="0.1300%" height="15" fill="rgb(234,13,49)"/><text x="42.7451%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="42.4951%" y="789" width="0.1300%" height="15" fill="rgb(234,122,0)"/><text x="42.7451%" y="799.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="42.4951%" y="773" width="0.1300%" height="15" fill="rgb(207,146,38)"/><text x="42.7451%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (7 samples, 0.45%)</title><rect x="42.4301%" y="869" width="0.4548%" height="15" fill="rgb(207,177,25)"/><text x="42.6801%" y="879.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (7 samples, 0.45%)</title><rect x="42.4301%" y="853" width="0.4548%" height="15" fill="rgb(211,178,42)"/><text x="42.6801%" y="863.50"></text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (7 samples, 0.45%)</title><rect x="42.4301%" y="837" width="0.4548%" height="15" fill="rgb(230,69,54)"/><text x="42.6801%" y="847.50"></text></g><g><title>decor::qtcache::QueryCache::cache_uid2gids_for_uids (7 samples, 0.45%)</title><rect x="42.4301%" y="821" width="0.4548%" height="15" fill="rgb(214,135,41)"/><text x="42.6801%" y="831.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.65%)</title><rect x="43.5997%" y="757" width="0.6498%" height="15" fill="rgb(237,67,25)"/><text x="43.8497%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (7 samples, 0.45%)</title><rect x="43.7947%" y="741" width="0.4548%" height="15" fill="rgb(222,189,50)"/><text x="44.0447%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.30%)</title><rect x="43.0799%" y="773" width="1.2995%" height="15" fill="rgb(245,148,34)"/><text x="43.3299%" y="783.50"></text></g><g><title>_int_free (4 samples, 0.26%)</title><rect x="44.4444%" y="773" width="0.2599%" height="15" fill="rgb(222,29,6)"/><text x="44.6944%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (32 samples, 2.08%)</title><rect x="42.8850%" y="853" width="2.0793%" height="15" fill="rgb(221,189,43)"/><text x="43.1350%" y="863.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (32 samples, 2.08%)</title><rect x="42.8850%" y="837" width="2.0793%" height="15" fill="rgb(207,36,27)"/><text x="43.1350%" y="847.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::expr_to_mv_expr (32 samples, 2.08%)</title><rect x="42.8850%" y="821" width="2.0793%" height="15" fill="rgb(217,90,24)"/><text x="43.1350%" y="831.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::idents_to_mv_idents (32 samples, 2.08%)</title><rect x="42.8850%" y="805" width="2.0793%" height="15" fill="rgb(224,66,35)"/><text x="43.1350%" y="815.50">d..</text></g><g><title>decor::helpers::str_subset_of_idents (32 samples, 2.08%)</title><rect x="42.8850%" y="789" width="2.0793%" height="15" fill="rgb(221,13,50)"/><text x="43.1350%" y="799.50">d..</text></g><g><title>core::str::pattern::StrSearcher::new (4 samples, 0.26%)</title><rect x="44.7044%" y="773" width="0.2599%" height="15" fill="rgb(236,68,49)"/><text x="44.9544%" y="783.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (35 samples, 2.27%)</title><rect x="42.8850%" y="869" width="2.2742%" height="15" fill="rgb(229,146,28)"/><text x="43.1350%" y="879.50">d..</text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (2 samples, 0.13%)</title><rect x="45.0292%" y="853" width="0.1300%" height="15" fill="rgb(225,31,38)"/><text x="45.2792%" y="863.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (2 samples, 0.13%)</title><rect x="45.0292%" y="837" width="0.1300%" height="15" fill="rgb(250,208,3)"/><text x="45.2792%" y="847.50"></text></g><g><title>_int_realloc (4 samples, 0.26%)</title><rect x="46.9136%" y="805" width="0.2599%" height="15" fill="rgb(246,54,23)"/><text x="47.1636%" y="815.50"></text></g><g><title>__GI___libc_realloc (17 samples, 1.10%)</title><rect x="46.1339%" y="821" width="1.1046%" height="15" fill="rgb(243,76,11)"/><text x="46.3839%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.58%)</title><rect x="47.2385%" y="821" width="0.5848%" height="15" fill="rgb(245,21,50)"/><text x="47.4885%" y="831.50"></text></g><g><title>__rdl_realloc (2 samples, 0.13%)</title><rect x="47.8233%" y="821" width="0.1300%" height="15" fill="rgb(228,9,43)"/><text x="48.0733%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 1.43%)</title><rect x="47.9532%" y="821" width="1.4295%" height="15" fill="rgb(208,100,47)"/><text x="48.2032%" y="831.50"></text></g><g><title>__GI___libc_realloc (22 samples, 1.43%)</title><rect x="47.9532%" y="805" width="1.4295%" height="15" fill="rgb(232,26,8)"/><text x="48.2032%" y="815.50"></text></g><g><title>_int_realloc (20 samples, 1.30%)</title><rect x="48.0832%" y="789" width="1.2995%" height="15" fill="rgb(216,166,38)"/><text x="48.3332%" y="799.50"></text></g><g><title>_int_malloc (19 samples, 1.23%)</title><rect x="48.1481%" y="773" width="1.2346%" height="15" fill="rgb(251,202,51)"/><text x="48.3981%" y="783.50"></text></g><g><title>malloc_consolidate (14 samples, 0.91%)</title><rect x="48.4730%" y="757" width="0.9097%" height="15" fill="rgb(254,216,34)"/><text x="48.7230%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="49.7726%" y="805" width="0.1300%" height="15" fill="rgb(251,32,27)"/><text x="50.0226%" y="815.50"></text></g><g><title>__GI___libc_malloc (23 samples, 1.49%)</title><rect x="50.6173%" y="741" width="1.4945%" height="15" fill="rgb(208,127,28)"/><text x="50.8673%" y="751.50"></text></g><g><title>_int_malloc (18 samples, 1.17%)</title><rect x="50.9422%" y="725" width="1.1696%" height="15" fill="rgb(224,137,22)"/><text x="51.1922%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (28 samples, 1.82%)</title><rect x="50.3574%" y="773" width="1.8194%" height="15" fill="rgb(254,70,32)"/><text x="50.6074%" y="783.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 1.62%)</title><rect x="50.5523%" y="757" width="1.6244%" height="15" fill="rgb(229,75,37)"/><text x="50.8023%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.45%)</title><rect x="52.1767%" y="773" width="0.4548%" height="15" fill="rgb(252,64,23)"/><text x="52.4267%" y="783.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (45 samples, 2.92%)</title><rect x="49.9025%" y="805" width="2.9240%" height="15" fill="rgb(232,162,48)"/><text x="50.1525%" y="815.50">co..</text></g><g><title>core::fmt::num::imp::fmt_u64 (45 samples, 2.92%)</title><rect x="49.9025%" y="789" width="2.9240%" height="15" fill="rgb(246,160,12)"/><text x="50.1525%" y="799.50">co..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.13%)</title><rect x="52.6966%" y="773" width="0.1300%" height="15" fill="rgb(247,166,0)"/><text x="52.9466%" y="783.50"></text></g><g><title>core::fmt::write (55 samples, 3.57%)</title><rect x="49.3827%" y="821" width="3.5737%" height="15" fill="rgb(249,219,21)"/><text x="49.6327%" y="831.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.13%)</title><rect x="52.8265%" y="805" width="0.1300%" height="15" fill="rgb(205,209,3)"/><text x="53.0765%" y="815.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.13%)</title><rect x="52.8265%" y="789" width="0.1300%" height="15" fill="rgb(243,44,1)"/><text x="53.0765%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.13%)</title><rect x="52.8265%" y="773" width="0.1300%" height="15" fill="rgb(206,159,16)"/><text x="53.0765%" y="783.50"></text></g><g><title>core::cmp::min (2 samples, 0.13%)</title><rect x="52.8265%" y="757" width="0.1300%" height="15" fill="rgb(244,77,30)"/><text x="53.0765%" y="767.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.13%)</title><rect x="52.8265%" y="741" width="0.1300%" height="15" fill="rgb(218,69,12)"/><text x="53.0765%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="52.8265%" y="725" width="0.1300%" height="15" fill="rgb(212,87,7)"/><text x="53.0765%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="52.9565%" y="757" width="0.2599%" height="15" fill="rgb(245,114,25)"/><text x="53.2065%" y="767.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.26%)</title><rect x="52.9565%" y="741" width="0.2599%" height="15" fill="rgb(210,61,42)"/><text x="53.2065%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.26%)</title><rect x="52.9565%" y="725" width="0.2599%" height="15" fill="rgb(211,52,33)"/><text x="53.2065%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.26%)</title><rect x="52.9565%" y="709" width="0.2599%" height="15" fill="rgb(234,58,33)"/><text x="53.2065%" y="719.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.26%)</title><rect x="52.9565%" y="693" width="0.2599%" height="15" fill="rgb(220,115,36)"/><text x="53.2065%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.26%)</title><rect x="52.9565%" y="677" width="0.2599%" height="15" fill="rgb(243,153,54)"/><text x="53.2065%" y="687.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.19%)</title><rect x="53.0214%" y="661" width="0.1949%" height="15" fill="rgb(251,47,18)"/><text x="53.2714%" y="671.50"></text></g><g><title>decor::helpers::expr_is_ucol (6 samples, 0.39%)</title><rect x="52.9565%" y="821" width="0.3899%" height="15" fill="rgb(242,102,42)"/><text x="53.2065%" y="831.50"></text></g><g><title>core::fmt::write (6 samples, 0.39%)</title><rect x="52.9565%" y="805" width="0.3899%" height="15" fill="rgb(234,31,38)"/><text x="53.2065%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (6 samples, 0.39%)</title><rect x="52.9565%" y="789" width="0.3899%" height="15" fill="rgb(221,117,51)"/><text x="53.2065%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.39%)</title><rect x="52.9565%" y="773" width="0.3899%" height="15" fill="rgb(212,20,18)"/><text x="53.2065%" y="783.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="53.2164%" y="757" width="0.1300%" height="15" fill="rgb(245,133,36)"/><text x="53.4664%" y="767.50"></text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (128 samples, 8.32%)</title><rect x="45.1592%" y="869" width="8.3171%" height="15" fill="rgb(212,6,19)"/><text x="45.4092%" y="879.50">decor::query..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (128 samples, 8.32%)</title><rect x="45.1592%" y="853" width="8.3171%" height="15" fill="rgb(218,1,36)"/><text x="45.4092%" y="863.50">decor::query..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (128 samples, 8.32%)</title><rect x="45.1592%" y="837" width="8.3171%" height="15" fill="rgb(246,84,54)"/><text x="45.4092%" y="847.50">decor::query..</text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (2 samples, 0.13%)</title><rect x="53.3463%" y="821" width="0.1300%" height="15" fill="rgb(242,110,6)"/><text x="53.5963%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="53.3463%" y="805" width="0.1300%" height="15" fill="rgb(214,47,5)"/><text x="53.5963%" y="815.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.13%)</title><rect x="53.4763%" y="853" width="0.1300%" height="15" fill="rgb(218,159,25)"/><text x="53.7263%" y="863.50"></text></g><g><title>sk_wait_data (2 samples, 0.13%)</title><rect x="54.0611%" y="581" width="0.1300%" height="15" fill="rgb(215,211,28)"/><text x="54.3111%" y="591.50"></text></g><g><title>wait_woken (2 samples, 0.13%)</title><rect x="54.0611%" y="565" width="0.1300%" height="15" fill="rgb(238,59,32)"/><text x="54.3111%" y="575.50"></text></g><g><title>schedule_timeout (2 samples, 0.13%)</title><rect x="54.0611%" y="549" width="0.1300%" height="15" fill="rgb(226,82,3)"/><text x="54.3111%" y="559.50"></text></g><g><title>schedule (2 samples, 0.13%)</title><rect x="54.0611%" y="533" width="0.1300%" height="15" fill="rgb(240,164,32)"/><text x="54.3111%" y="543.50"></text></g><g><title>__schedule (2 samples, 0.13%)</title><rect x="54.0611%" y="517" width="0.1300%" height="15" fill="rgb(232,46,7)"/><text x="54.3111%" y="527.50"></text></g><g><title>__x64_sys_recvfrom (8 samples, 0.52%)</title><rect x="53.8012%" y="645" width="0.5198%" height="15" fill="rgb(229,129,53)"/><text x="54.0512%" y="655.50"></text></g><g><title>__sys_recvfrom (8 samples, 0.52%)</title><rect x="53.8012%" y="629" width="0.5198%" height="15" fill="rgb(234,188,29)"/><text x="54.0512%" y="639.50"></text></g><g><title>inet_recvmsg (8 samples, 0.52%)</title><rect x="53.8012%" y="613" width="0.5198%" height="15" fill="rgb(246,141,4)"/><text x="54.0512%" y="623.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.45%)</title><rect x="53.8661%" y="597" width="0.4548%" height="15" fill="rgb(229,23,39)"/><text x="54.1161%" y="607.50"></text></g><g><title>do_syscall_64 (9 samples, 0.58%)</title><rect x="53.8012%" y="661" width="0.5848%" height="15" fill="rgb(206,12,3)"/><text x="54.0512%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (11 samples, 0.71%)</title><rect x="53.8012%" y="773" width="0.7147%" height="15" fill="rgb(252,226,20)"/><text x="54.0512%" y="783.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.71%)</title><rect x="53.8012%" y="757" width="0.7147%" height="15" fill="rgb(216,123,35)"/><text x="54.0512%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::read (11 samples, 0.71%)</title><rect x="53.8012%" y="741" width="0.7147%" height="15" fill="rgb(212,68,40)"/><text x="54.0512%" y="751.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.71%)</title><rect x="53.8012%" y="725" width="0.7147%" height="15" fill="rgb(254,125,32)"/><text x="54.0512%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.71%)</title><rect x="53.8012%" y="709" width="0.7147%" height="15" fill="rgb(253,97,22)"/><text x="54.0512%" y="719.50"></text></g><g><title>__libc_recv (11 samples, 0.71%)</title><rect x="53.8012%" y="693" width="0.7147%" height="15" fill="rgb(241,101,14)"/><text x="54.0512%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.71%)</title><rect x="53.8012%" y="677" width="0.7147%" height="15" fill="rgb(238,103,29)"/><text x="54.0512%" y="687.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="54.3860%" y="661" width="0.1300%" height="15" fill="rgb(233,195,47)"/><text x="54.6360%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (14 samples, 0.91%)</title><rect x="53.6712%" y="805" width="0.9097%" height="15" fill="rgb(246,218,30)"/><text x="53.9212%" y="815.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.84%)</title><rect x="53.7362%" y="789" width="0.8447%" height="15" fill="rgb(219,145,47)"/><text x="53.9862%" y="799.50"></text></g><g><title>lobsters::main (18 samples, 1.17%)</title><rect x="53.4763%" y="869" width="1.1696%" height="15" fill="rgb(243,12,26)"/><text x="53.7263%" y="879.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (16 samples, 1.04%)</title><rect x="53.6062%" y="853" width="1.0396%" height="15" fill="rgb(214,87,16)"/><text x="53.8562%" y="863.50"></text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.04%)</title><rect x="53.6062%" y="837" width="1.0396%" height="15" fill="rgb(208,99,42)"/><text x="53.8562%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (16 samples, 1.04%)</title><rect x="53.6062%" y="821" width="1.0396%" height="15" fill="rgb(253,99,2)"/><text x="53.8562%" y="831.50"></text></g><g><title>__GI___libc_free (3 samples, 0.19%)</title><rect x="54.7758%" y="821" width="0.1949%" height="15" fill="rgb(220,168,23)"/><text x="55.0258%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.19%)</title><rect x="55.0357%" y="821" width="0.1949%" height="15" fill="rgb(242,38,24)"/><text x="55.2857%" y="831.50"></text></g><g><title>__GI___libc_free (3 samples, 0.19%)</title><rect x="55.2307%" y="805" width="0.1949%" height="15" fill="rgb(225,182,9)"/><text x="55.4807%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::get_mv_stmt (12 samples, 0.78%)</title><rect x="54.7109%" y="837" width="0.7797%" height="15" fill="rgb(243,178,37)"/><text x="54.9609%" y="847.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.26%)</title><rect x="55.2307%" y="821" width="0.2599%" height="15" fill="rgb(232,139,19)"/><text x="55.4807%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="55.6205%" y="757" width="0.1300%" height="15" fill="rgb(225,201,24)"/><text x="55.8705%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="55.6205%" y="741" width="0.1300%" height="15" fill="rgb(221,47,46)"/><text x="55.8705%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (5 samples, 0.32%)</title><rect x="55.4906%" y="821" width="0.3249%" height="15" fill="rgb(249,23,13)"/><text x="55.7406%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="55.5556%" y="805" width="0.2599%" height="15" fill="rgb(219,9,5)"/><text x="55.8056%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="55.5556%" y="789" width="0.2599%" height="15" fill="rgb(254,171,16)"/><text x="55.8056%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="55.5556%" y="773" width="0.2599%" height="15" fill="rgb(230,171,20)"/><text x="55.8056%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (20 samples, 1.30%)</title><rect x="54.6459%" y="869" width="1.2995%" height="15" fill="rgb(210,71,41)"/><text x="54.8959%" y="879.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (19 samples, 1.23%)</title><rect x="54.7109%" y="853" width="1.2346%" height="15" fill="rgb(206,173,20)"/><text x="54.9609%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (7 samples, 0.45%)</title><rect x="55.4906%" y="837" width="0.4548%" height="15" fill="rgb(233,88,34)"/><text x="55.7406%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.13%)</title><rect x="55.8155%" y="821" width="0.1300%" height="15" fill="rgb(223,209,46)"/><text x="56.0655%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.13%)</title><rect x="55.8155%" y="805" width="0.1300%" height="15" fill="rgb(250,43,18)"/><text x="56.0655%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.65%)</title><rect x="56.3353%" y="693" width="0.6498%" height="15" fill="rgb(208,13,10)"/><text x="56.5853%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.65%)</title><rect x="56.3353%" y="677" width="0.6498%" height="15" fill="rgb(212,200,36)"/><text x="56.5853%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (10 samples, 0.65%)</title><rect x="56.3353%" y="661" width="0.6498%" height="15" fill="rgb(225,90,30)"/><text x="56.5853%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.65%)</title><rect x="56.3353%" y="645" width="0.6498%" height="15" fill="rgb(236,182,39)"/><text x="56.5853%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.58%)</title><rect x="56.4003%" y="629" width="0.5848%" height="15" fill="rgb(212,144,35)"/><text x="56.6503%" y="639.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (11 samples, 0.71%)</title><rect x="56.3353%" y="789" width="0.7147%" height="15" fill="rgb(228,63,44)"/><text x="56.5853%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::expected (11 samples, 0.71%)</title><rect x="56.3353%" y="773" width="0.7147%" height="15" fill="rgb(228,109,6)"/><text x="56.5853%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.71%)</title><rect x="56.3353%" y="757" width="0.7147%" height="15" fill="rgb(238,117,24)"/><text x="56.5853%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.71%)</title><rect x="56.3353%" y="741" width="0.7147%" height="15" fill="rgb(242,26,26)"/><text x="56.5853%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.71%)</title><rect x="56.3353%" y="725" width="0.7147%" height="15" fill="rgb(221,92,48)"/><text x="56.5853%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.71%)</title><rect x="56.3353%" y="709" width="0.7147%" height="15" fill="rgb(209,209,32)"/><text x="56.5853%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (13 samples, 0.84%)</title><rect x="56.2703%" y="869" width="0.8447%" height="15" fill="rgb(221,70,22)"/><text x="56.5203%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (13 samples, 0.84%)</title><rect x="56.2703%" y="853" width="0.8447%" height="15" fill="rgb(248,145,5)"/><text x="56.5203%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (13 samples, 0.84%)</title><rect x="56.2703%" y="837" width="0.8447%" height="15" fill="rgb(226,116,26)"/><text x="56.5203%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (13 samples, 0.84%)</title><rect x="56.2703%" y="821" width="0.8447%" height="15" fill="rgb(244,5,17)"/><text x="56.5203%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (13 samples, 0.84%)</title><rect x="56.2703%" y="805" width="0.8447%" height="15" fill="rgb(252,159,33)"/><text x="56.5203%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (4 samples, 0.26%)</title><rect x="57.1150%" y="869" width="0.2599%" height="15" fill="rgb(206,71,0)"/><text x="57.3650%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.26%)</title><rect x="57.1150%" y="853" width="0.2599%" height="15" fill="rgb(233,118,54)"/><text x="57.3650%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.26%)</title><rect x="57.1150%" y="837" width="0.2599%" height="15" fill="rgb(234,83,48)"/><text x="57.3650%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.26%)</title><rect x="57.1150%" y="821" width="0.2599%" height="15" fill="rgb(228,3,54)"/><text x="57.3650%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.26%)</title><rect x="57.1150%" y="805" width="0.2599%" height="15" fill="rgb(226,155,13)"/><text x="57.3650%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.26%)</title><rect x="57.1150%" y="789" width="0.2599%" height="15" fill="rgb(241,28,37)"/><text x="57.3650%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="57.1150%" y="773" width="0.2599%" height="15" fill="rgb(233,93,10)"/><text x="57.3650%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="57.1150%" y="757" width="0.2599%" height="15" fill="rgb(225,113,19)"/><text x="57.3650%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.26%)</title><rect x="57.1150%" y="741" width="0.2599%" height="15" fill="rgb(241,2,18)"/><text x="57.3650%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.26%)</title><rect x="57.1150%" y="725" width="0.2599%" height="15" fill="rgb(228,207,21)"/><text x="57.3650%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.26%)</title><rect x="57.1150%" y="709" width="0.2599%" height="15" fill="rgb(213,211,35)"/><text x="57.3650%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.26%)</title><rect x="57.1150%" y="693" width="0.2599%" height="15" fill="rgb(209,83,10)"/><text x="57.3650%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.26%)</title><rect x="57.1150%" y="677" width="0.2599%" height="15" fill="rgb(209,164,1)"/><text x="57.3650%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.26%)</title><rect x="57.1150%" y="661" width="0.2599%" height="15" fill="rgb(213,184,43)"/><text x="57.3650%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.26%)</title><rect x="57.1150%" y="645" width="0.2599%" height="15" fill="rgb(231,61,34)"/><text x="57.3650%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.26%)</title><rect x="57.1150%" y="629" width="0.2599%" height="15" fill="rgb(235,75,3)"/><text x="57.3650%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.26%)</title><rect x="57.1150%" y="613" width="0.2599%" height="15" fill="rgb(220,106,47)"/><text x="57.3650%" y="623.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.26%)</title><rect x="57.1150%" y="597" width="0.2599%" height="15" fill="rgb(210,196,33)"/><text x="57.3650%" y="607.50"></text></g><g><title>_int_malloc (4 samples, 0.26%)</title><rect x="57.1150%" y="581" width="0.2599%" height="15" fill="rgb(229,154,42)"/><text x="57.3650%" y="591.50"></text></g><g><title>sysmalloc (3 samples, 0.19%)</title><rect x="57.1800%" y="565" width="0.1949%" height="15" fill="rgb(228,114,26)"/><text x="57.4300%" y="575.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.26%)</title><rect x="58.2196%" y="357" width="0.2599%" height="15" fill="rgb(208,144,1)"/><text x="58.4696%" y="367.50"></text></g><g><title>loopback_xmit (3 samples, 0.19%)</title><rect x="58.2846%" y="341" width="0.1949%" height="15" fill="rgb(239,112,37)"/><text x="58.5346%" y="351.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.32%)</title><rect x="58.2196%" y="373" width="0.3249%" height="15" fill="rgb(210,96,50)"/><text x="58.4696%" y="383.50"></text></g><g><title>enqueue_task (3 samples, 0.19%)</title><rect x="59.2593%" y="69" width="0.1949%" height="15" fill="rgb(222,178,2)"/><text x="59.5093%" y="79.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.32%)</title><rect x="59.4542%" y="69" width="0.3249%" height="15" fill="rgb(226,74,18)"/><text x="59.7042%" y="79.50"></text></g><g><title>enqueue_entity (4 samples, 0.26%)</title><rect x="59.5192%" y="53" width="0.2599%" height="15" fill="rgb(225,67,54)"/><text x="59.7692%" y="63.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="59.6491%" y="37" width="0.1300%" height="15" fill="rgb(251,92,32)"/><text x="59.8991%" y="47.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.13%)</title><rect x="59.7791%" y="69" width="0.1300%" height="15" fill="rgb(228,149,22)"/><text x="60.0291%" y="79.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.13%)</title><rect x="59.9090%" y="69" width="0.1300%" height="15" fill="rgb(243,54,13)"/><text x="60.1590%" y="79.50"></text></g><g><title>check_preempt_curr (2 samples, 0.13%)</title><rect x="59.9090%" y="53" width="0.1300%" height="15" fill="rgb(243,180,28)"/><text x="60.1590%" y="63.50"></text></g><g><title>resched_curr (2 samples, 0.13%)</title><rect x="59.9090%" y="37" width="0.1300%" height="15" fill="rgb(208,167,24)"/><text x="60.1590%" y="47.50"></text></g><g><title>sock_def_readable (15 samples, 0.97%)</title><rect x="59.1293%" y="149" width="0.9747%" height="15" fill="rgb(245,73,45)"/><text x="59.3793%" y="159.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.97%)</title><rect x="59.1293%" y="133" width="0.9747%" height="15" fill="rgb(237,203,48)"/><text x="59.3793%" y="143.50"></text></g><g><title>__wake_up_common (15 samples, 0.97%)</title><rect x="59.1293%" y="117" width="0.9747%" height="15" fill="rgb(211,197,16)"/><text x="59.3793%" y="127.50"></text></g><g><title>pollwake (15 samples, 0.97%)</title><rect x="59.1293%" y="101" width="0.9747%" height="15" fill="rgb(243,99,51)"/><text x="59.3793%" y="111.50"></text></g><g><title>try_to_wake_up (14 samples, 0.91%)</title><rect x="59.1943%" y="85" width="0.9097%" height="15" fill="rgb(215,123,29)"/><text x="59.4443%" y="95.50"></text></g><g><title>tcp_ack (6 samples, 0.39%)</title><rect x="60.1040%" y="149" width="0.3899%" height="15" fill="rgb(239,186,37)"/><text x="60.3540%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (27 samples, 1.75%)</title><rect x="58.8044%" y="277" width="1.7544%" height="15" fill="rgb(252,136,39)"/><text x="59.0544%" y="287.50"></text></g><g><title>ip_rcv (27 samples, 1.75%)</title><rect x="58.8044%" y="261" width="1.7544%" height="15" fill="rgb(223,213,32)"/><text x="59.0544%" y="271.50"></text></g><g><title>ip_local_deliver (27 samples, 1.75%)</title><rect x="58.8044%" y="245" width="1.7544%" height="15" fill="rgb(233,115,5)"/><text x="59.0544%" y="255.50"></text></g><g><title>ip_local_deliver_finish (27 samples, 1.75%)</title><rect x="58.8044%" y="229" width="1.7544%" height="15" fill="rgb(207,226,44)"/><text x="59.0544%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (26 samples, 1.69%)</title><rect x="58.8694%" y="213" width="1.6894%" height="15" fill="rgb(208,126,0)"/><text x="59.1194%" y="223.50"></text></g><g><title>tcp_v4_rcv (26 samples, 1.69%)</title><rect x="58.8694%" y="197" width="1.6894%" height="15" fill="rgb(244,66,21)"/><text x="59.1194%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (22 samples, 1.43%)</title><rect x="59.1293%" y="181" width="1.4295%" height="15" fill="rgb(222,97,12)"/><text x="59.3793%" y="191.50"></text></g><g><title>tcp_rcv_established (22 samples, 1.43%)</title><rect x="59.1293%" y="165" width="1.4295%" height="15" fill="rgb(219,213,19)"/><text x="59.3793%" y="175.50"></text></g><g><title>__ip_queue_xmit (40 samples, 2.60%)</title><rect x="58.0247%" y="421" width="2.5991%" height="15" fill="rgb(252,169,30)"/><text x="58.2747%" y="431.50">__..</text></g><g><title>ip_output (38 samples, 2.47%)</title><rect x="58.1546%" y="405" width="2.4691%" height="15" fill="rgb(206,32,51)"/><text x="58.4046%" y="415.50">ip..</text></g><g><title>ip_finish_output2 (38 samples, 2.47%)</title><rect x="58.1546%" y="389" width="2.4691%" height="15" fill="rgb(250,172,42)"/><text x="58.4046%" y="399.50">ip..</text></g><g><title>__local_bh_enable_ip (32 samples, 2.08%)</title><rect x="58.5445%" y="373" width="2.0793%" height="15" fill="rgb(209,34,43)"/><text x="58.7945%" y="383.50">_..</text></g><g><title>do_softirq (32 samples, 2.08%)</title><rect x="58.5445%" y="357" width="2.0793%" height="15" fill="rgb(223,11,35)"/><text x="58.7945%" y="367.50">d..</text></g><g><title>do_softirq_own_stack (32 samples, 2.08%)</title><rect x="58.5445%" y="341" width="2.0793%" height="15" fill="rgb(251,219,26)"/><text x="58.7945%" y="351.50">d..</text></g><g><title>__do_softirq (32 samples, 2.08%)</title><rect x="58.5445%" y="325" width="2.0793%" height="15" fill="rgb(231,119,3)"/><text x="58.7945%" y="335.50">_..</text></g><g><title>net_rx_action (30 samples, 1.95%)</title><rect x="58.6745%" y="309" width="1.9493%" height="15" fill="rgb(216,97,11)"/><text x="58.9245%" y="319.50">n..</text></g><g><title>process_backlog (29 samples, 1.88%)</title><rect x="58.7394%" y="293" width="1.8843%" height="15" fill="rgb(223,59,9)"/><text x="58.9894%" y="303.50">p..</text></g><g><title>__tcp_transmit_skb (42 samples, 2.73%)</title><rect x="57.9597%" y="437" width="2.7290%" height="15" fill="rgb(233,93,31)"/><text x="58.2097%" y="447.50">__..</text></g><g><title>__tcp_push_pending_frames (44 samples, 2.86%)</title><rect x="57.8947%" y="469" width="2.8590%" height="15" fill="rgb(239,81,33)"/><text x="58.1447%" y="479.50">__..</text></g><g><title>tcp_write_xmit (44 samples, 2.86%)</title><rect x="57.8947%" y="453" width="2.8590%" height="15" fill="rgb(213,120,34)"/><text x="58.1447%" y="463.50">tc..</text></g><g><title>__x64_sys_sendto (50 samples, 3.25%)</title><rect x="57.6348%" y="549" width="3.2489%" height="15" fill="rgb(243,49,53)"/><text x="57.8848%" y="559.50">__x..</text></g><g><title>__sys_sendto (50 samples, 3.25%)</title><rect x="57.6348%" y="533" width="3.2489%" height="15" fill="rgb(247,216,33)"/><text x="57.8848%" y="543.50">__s..</text></g><g><title>sock_sendmsg (49 samples, 3.18%)</title><rect x="57.6998%" y="517" width="3.1839%" height="15" fill="rgb(226,26,14)"/><text x="57.9498%" y="527.50">soc..</text></g><g><title>tcp_sendmsg (49 samples, 3.18%)</title><rect x="57.6998%" y="501" width="3.1839%" height="15" fill="rgb(215,49,53)"/><text x="57.9498%" y="511.50">tcp..</text></g><g><title>tcp_sendmsg_locked (47 samples, 3.05%)</title><rect x="57.8298%" y="485" width="3.0539%" height="15" fill="rgb(245,162,40)"/><text x="58.0798%" y="495.50">tcp..</text></g><g><title>do_syscall_64 (51 samples, 3.31%)</title><rect x="57.6348%" y="565" width="3.3138%" height="15" fill="rgb(229,68,17)"/><text x="57.8848%" y="575.50">do_..</text></g><g><title>mysql::conn::Conn::start_transaction (53 samples, 3.44%)</title><rect x="57.5699%" y="725" width="3.4438%" height="15" fill="rgb(213,182,10)"/><text x="57.8199%" y="735.50">mys..</text></g><g><title>mysql::conn::Conn::_start_transaction (53 samples, 3.44%)</title><rect x="57.5699%" y="709" width="3.4438%" height="15" fill="rgb(245,125,30)"/><text x="57.8199%" y="719.50">mys..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (53 samples, 3.44%)</title><rect x="57.5699%" y="693" width="3.4438%" height="15" fill="rgb(232,202,2)"/><text x="57.8199%" y="703.50">mys..</text></g><g><title>mysql::conn::Conn::_query (52 samples, 3.38%)</title><rect x="57.6348%" y="677" width="3.3788%" height="15" fill="rgb(237,140,51)"/><text x="57.8848%" y="687.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (52 samples, 3.38%)</title><rect x="57.6348%" y="661" width="3.3788%" height="15" fill="rgb(236,157,25)"/><text x="57.8848%" y="671.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 3.38%)</title><rect x="57.6348%" y="645" width="3.3788%" height="15" fill="rgb(219,209,0)"/><text x="57.8848%" y="655.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (52 samples, 3.38%)</title><rect x="57.6348%" y="629" width="3.3788%" height="15" fill="rgb(240,116,54)"/><text x="57.8848%" y="639.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (52 samples, 3.38%)</title><rect x="57.6348%" y="613" width="3.3788%" height="15" fill="rgb(216,10,36)"/><text x="57.8848%" y="623.50">std..</text></g><g><title>__libc_send (52 samples, 3.38%)</title><rect x="57.6348%" y="597" width="3.3788%" height="15" fill="rgb(222,72,44)"/><text x="57.8848%" y="607.50">__l..</text></g><g><title>entry_SYSCALL_64 (52 samples, 3.38%)</title><rect x="57.6348%" y="581" width="3.3788%" height="15" fill="rgb(232,159,9)"/><text x="57.8848%" y="591.50">ent..</text></g><g><title>start_thread (58 samples, 3.77%)</title><rect x="57.4399%" y="869" width="3.7687%" height="15" fill="rgb(210,39,32)"/><text x="57.6899%" y="879.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (58 samples, 3.77%)</title><rect x="57.4399%" y="853" width="3.7687%" height="15" fill="rgb(216,194,45)"/><text x="57.6899%" y="863.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (58 samples, 3.77%)</title><rect x="57.4399%" y="837" width="3.7687%" height="15" fill="rgb(218,18,35)"/><text x="57.6899%" y="847.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (58 samples, 3.77%)</title><rect x="57.4399%" y="821" width="3.7687%" height="15" fill="rgb(207,83,51)"/><text x="57.6899%" y="831.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (58 samples, 3.77%)</title><rect x="57.4399%" y="805" width="3.7687%" height="15" fill="rgb(225,63,43)"/><text x="57.6899%" y="815.50">core..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (58 samples, 3.77%)</title><rect x="57.4399%" y="789" width="3.7687%" height="15" fill="rgb(207,57,36)"/><text x="57.6899%" y="799.50">std:..</text></g><g><title>decor::Shim::run_on_tcp (58 samples, 3.77%)</title><rect x="57.4399%" y="773" width="3.7687%" height="15" fill="rgb(216,99,33)"/><text x="57.6899%" y="783.50">deco..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (58 samples, 3.77%)</title><rect x="57.4399%" y="757" width="3.7687%" height="15" fill="rgb(225,42,16)"/><text x="57.6899%" y="767.50">msql..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (58 samples, 3.77%)</title><rect x="57.4399%" y="741" width="3.7687%" height="15" fill="rgb(220,201,45)"/><text x="57.6899%" y="751.50">&lt;dec..</text></g><g><title>mysql::conn::transaction::Transaction::commit (3 samples, 0.19%)</title><rect x="61.0136%" y="725" width="0.1949%" height="15" fill="rgb(225,33,4)"/><text x="61.2636%" y="735.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (3 samples, 0.19%)</title><rect x="61.0136%" y="709" width="0.1949%" height="15" fill="rgb(224,33,50)"/><text x="61.2636%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.19%)</title><rect x="61.0136%" y="693" width="0.1949%" height="15" fill="rgb(246,198,51)"/><text x="61.2636%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.19%)</title><rect x="61.0136%" y="677" width="0.1949%" height="15" fill="rgb(205,22,4)"/><text x="61.2636%" y="687.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (2 samples, 0.13%)</title><rect x="61.0786%" y="661" width="0.1300%" height="15" fill="rgb(206,3,8)"/><text x="61.3286%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.19%)</title><rect x="61.2736%" y="869" width="0.1949%" height="15" fill="rgb(251,23,15)"/><text x="61.5236%" y="879.50"></text></g><g><title>lookup_fast.constprop.0 (2 samples, 0.13%)</title><rect x="61.4685%" y="517" width="0.1300%" height="15" fill="rgb(252,88,28)"/><text x="61.7185%" y="527.50"></text></g><g><title>__d_lookup (2 samples, 0.13%)</title><rect x="61.4685%" y="501" width="0.1300%" height="15" fill="rgb(212,127,14)"/><text x="61.7185%" y="511.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.19%)</title><rect x="61.4685%" y="869" width="0.1949%" height="15" fill="rgb(247,145,37)"/><text x="61.7185%" y="879.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.19%)</title><rect x="61.4685%" y="853" width="0.1949%" height="15" fill="rgb(209,117,53)"/><text x="61.7185%" y="863.50"></text></g><g><title>std::panicking::try (3 samples, 0.19%)</title><rect x="61.4685%" y="837" width="0.1949%" height="15" fill="rgb(212,90,42)"/><text x="61.7185%" y="847.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.19%)</title><rect x="61.4685%" y="821" width="0.1949%" height="15" fill="rgb(218,164,37)"/><text x="61.7185%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.19%)</title><rect x="61.4685%" y="805" width="0.1949%" height="15" fill="rgb(246,65,34)"/><text x="61.7185%" y="815.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.19%)</title><rect x="61.4685%" y="789" width="0.1949%" height="15" fill="rgb(231,100,33)"/><text x="61.7185%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.19%)</title><rect x="61.4685%" y="773" width="0.1949%" height="15" fill="rgb(228,126,14)"/><text x="61.7185%" y="783.50"></text></g><g><title>lobsters::main (3 samples, 0.19%)</title><rect x="61.4685%" y="757" width="0.1949%" height="15" fill="rgb(215,173,21)"/><text x="61.7185%" y="767.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.19%)</title><rect x="61.4685%" y="741" width="0.1949%" height="15" fill="rgb(210,6,40)"/><text x="61.7185%" y="751.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.19%)</title><rect x="61.4685%" y="725" width="0.1949%" height="15" fill="rgb(212,48,18)"/><text x="61.7185%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.19%)</title><rect x="61.4685%" y="709" width="0.1949%" height="15" fill="rgb(230,214,11)"/><text x="61.7185%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.19%)</title><rect x="61.4685%" y="693" width="0.1949%" height="15" fill="rgb(254,105,39)"/><text x="61.7185%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.19%)</title><rect x="61.4685%" y="677" width="0.1949%" height="15" fill="rgb(245,158,5)"/><text x="61.7185%" y="687.50"></text></g><g><title>__GI___openat (3 samples, 0.19%)</title><rect x="61.4685%" y="661" width="0.1949%" height="15" fill="rgb(249,208,11)"/><text x="61.7185%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.19%)</title><rect x="61.4685%" y="645" width="0.1949%" height="15" fill="rgb(210,39,28)"/><text x="61.7185%" y="655.50"></text></g><g><title>do_syscall_64 (3 samples, 0.19%)</title><rect x="61.4685%" y="629" width="0.1949%" height="15" fill="rgb(211,56,53)"/><text x="61.7185%" y="639.50"></text></g><g><title>__x64_sys_openat (3 samples, 0.19%)</title><rect x="61.4685%" y="613" width="0.1949%" height="15" fill="rgb(226,201,30)"/><text x="61.7185%" y="623.50"></text></g><g><title>do_sys_openat2 (3 samples, 0.19%)</title><rect x="61.4685%" y="597" width="0.1949%" height="15" fill="rgb(239,101,34)"/><text x="61.7185%" y="607.50"></text></g><g><title>do_filp_open (3 samples, 0.19%)</title><rect x="61.4685%" y="581" width="0.1949%" height="15" fill="rgb(226,209,5)"/><text x="61.7185%" y="591.50"></text></g><g><title>path_openat (3 samples, 0.19%)</title><rect x="61.4685%" y="565" width="0.1949%" height="15" fill="rgb(250,105,47)"/><text x="61.7185%" y="575.50"></text></g><g><title>link_path_walk (3 samples, 0.19%)</title><rect x="61.4685%" y="549" width="0.1949%" height="15" fill="rgb(230,72,3)"/><text x="61.7185%" y="559.50"></text></g><g><title>walk_component (3 samples, 0.19%)</title><rect x="61.4685%" y="533" width="0.1949%" height="15" fill="rgb(232,218,39)"/><text x="61.7185%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.13%)</title><rect x="61.6634%" y="869" width="0.1300%" height="15" fill="rgb(248,166,6)"/><text x="61.9134%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.13%)</title><rect x="61.6634%" y="853" width="0.1300%" height="15" fill="rgb(247,89,20)"/><text x="61.9134%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (2 samples, 0.13%)</title><rect x="61.6634%" y="837" width="0.1300%" height="15" fill="rgb(248,130,54)"/><text x="61.9134%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.13%)</title><rect x="61.6634%" y="821" width="0.1300%" height="15" fill="rgb(234,196,4)"/><text x="61.9134%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.13%)</title><rect x="61.6634%" y="805" width="0.1300%" height="15" fill="rgb(250,143,31)"/><text x="61.9134%" y="815.50"></text></g><g><title>decor::Shim::run_on_tcp (2 samples, 0.13%)</title><rect x="61.6634%" y="789" width="0.1300%" height="15" fill="rgb(211,110,34)"/><text x="61.9134%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (2 samples, 0.13%)</title><rect x="61.6634%" y="773" width="0.1300%" height="15" fill="rgb(215,124,48)"/><text x="61.9134%" y="783.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (2 samples, 0.13%)</title><rect x="61.6634%" y="757" width="0.1300%" height="15" fill="rgb(216,46,13)"/><text x="61.9134%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.13%)</title><rect x="61.7934%" y="821" width="0.1300%" height="15" fill="rgb(205,184,25)"/><text x="62.0434%" y="831.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.13%)</title><rect x="61.7934%" y="805" width="0.1300%" height="15" fill="rgb(228,1,10)"/><text x="62.0434%" y="815.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.13%)</title><rect x="61.7934%" y="789" width="0.1300%" height="15" fill="rgb(213,116,27)"/><text x="62.0434%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.13%)</title><rect x="61.7934%" y="773" width="0.1300%" height="15" fill="rgb(241,95,50)"/><text x="62.0434%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.13%)</title><rect x="61.7934%" y="757" width="0.1300%" height="15" fill="rgb(238,48,32)"/><text x="62.0434%" y="767.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.13%)</title><rect x="61.7934%" y="741" width="0.1300%" height="15" fill="rgb(235,113,49)"/><text x="62.0434%" y="751.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.13%)</title><rect x="61.7934%" y="725" width="0.1300%" height="15" fill="rgb(205,127,43)"/><text x="62.0434%" y="735.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.13%)</title><rect x="61.7934%" y="709" width="0.1300%" height="15" fill="rgb(250,162,2)"/><text x="62.0434%" y="719.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.13%)</title><rect x="61.7934%" y="693" width="0.1300%" height="15" fill="rgb(220,13,41)"/><text x="62.0434%" y="703.50"></text></g><g><title>__libc_send (2 samples, 0.13%)</title><rect x="61.7934%" y="677" width="0.1300%" height="15" fill="rgb(249,221,25)"/><text x="62.0434%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.13%)</title><rect x="61.7934%" y="661" width="0.1300%" height="15" fill="rgb(215,208,19)"/><text x="62.0434%" y="671.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.13%)</title><rect x="61.9233%" y="805" width="0.1300%" height="15" fill="rgb(236,175,2)"/><text x="62.1733%" y="815.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.13%)</title><rect x="61.9233%" y="789" width="0.1300%" height="15" fill="rgb(241,52,2)"/><text x="62.1733%" y="799.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.13%)</title><rect x="61.9233%" y="773" width="0.1300%" height="15" fill="rgb(248,140,14)"/><text x="62.1733%" y="783.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.13%)</title><rect x="61.9233%" y="757" width="0.1300%" height="15" fill="rgb(253,22,42)"/><text x="62.1733%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="61.9233%" y="741" width="0.1300%" height="15" fill="rgb(234,61,47)"/><text x="62.1733%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.13%)</title><rect x="61.9233%" y="725" width="0.1300%" height="15" fill="rgb(208,226,15)"/><text x="62.1733%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.13%)</title><rect x="61.9233%" y="709" width="0.1300%" height="15" fill="rgb(217,221,4)"/><text x="62.1733%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.13%)</title><rect x="61.9233%" y="693" width="0.1300%" height="15" fill="rgb(212,174,34)"/><text x="62.1733%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="61.9233%" y="677" width="0.1300%" height="15" fill="rgb(253,83,4)"/><text x="62.1733%" y="687.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (5 samples, 0.32%)</title><rect x="62.0533%" y="805" width="0.3249%" height="15" fill="rgb(250,195,49)"/><text x="62.3033%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.19%)</title><rect x="62.1832%" y="789" width="0.1949%" height="15" fill="rgb(241,192,25)"/><text x="62.4332%" y="799.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.13%)</title><rect x="62.3782%" y="805" width="0.1300%" height="15" fill="rgb(208,124,10)"/><text x="62.6282%" y="815.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.13%)</title><rect x="62.3782%" y="789" width="0.1300%" height="15" fill="rgb(222,33,0)"/><text x="62.6282%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.13%)</title><rect x="62.3782%" y="773" width="0.1300%" height="15" fill="rgb(234,209,28)"/><text x="62.6282%" y="783.50"></text></g><g><title>_raw_spin_lock_bh (3 samples, 0.19%)</title><rect x="62.8330%" y="501" width="0.1949%" height="15" fill="rgb(224,11,23)"/><text x="63.0830%" y="511.50"></text></g><g><title>remove_wait_queue (2 samples, 0.13%)</title><rect x="63.0279%" y="501" width="0.1300%" height="15" fill="rgb(232,99,1)"/><text x="63.2779%" y="511.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.13%)</title><rect x="63.0279%" y="485" width="0.1300%" height="15" fill="rgb(237,95,45)"/><text x="63.2779%" y="495.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.45%)</title><rect x="63.1579%" y="437" width="0.4548%" height="15" fill="rgb(208,109,11)"/><text x="63.4079%" y="447.50"></text></g><g><title>dequeue_entity (4 samples, 0.26%)</title><rect x="63.3528%" y="421" width="0.2599%" height="15" fill="rgb(216,190,48)"/><text x="63.6028%" y="431.50"></text></g><g><title>update_curr (4 samples, 0.26%)</title><rect x="63.3528%" y="405" width="0.2599%" height="15" fill="rgb(251,171,36)"/><text x="63.6028%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (3 samples, 0.19%)</title><rect x="63.7427%" y="437" width="0.1949%" height="15" fill="rgb(230,62,22)"/><text x="63.9927%" y="447.50"></text></g><g><title>sk_wait_data (18 samples, 1.17%)</title><rect x="62.8330%" y="517" width="1.1696%" height="15" fill="rgb(225,114,35)"/><text x="63.0830%" y="527.50"></text></g><g><title>wait_woken (13 samples, 0.84%)</title><rect x="63.1579%" y="501" width="0.8447%" height="15" fill="rgb(215,118,42)"/><text x="63.4079%" y="511.50"></text></g><g><title>schedule_timeout (13 samples, 0.84%)</title><rect x="63.1579%" y="485" width="0.8447%" height="15" fill="rgb(243,119,21)"/><text x="63.4079%" y="495.50"></text></g><g><title>schedule (13 samples, 0.84%)</title><rect x="63.1579%" y="469" width="0.8447%" height="15" fill="rgb(252,177,53)"/><text x="63.4079%" y="479.50"></text></g><g><title>__schedule (13 samples, 0.84%)</title><rect x="63.1579%" y="453" width="0.8447%" height="15" fill="rgb(237,209,29)"/><text x="63.4079%" y="463.50"></text></g><g><title>do_syscall_64 (25 samples, 1.62%)</title><rect x="62.5081%" y="597" width="1.6244%" height="15" fill="rgb(212,65,23)"/><text x="62.7581%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 1.49%)</title><rect x="62.6381%" y="581" width="1.4945%" height="15" fill="rgb(230,222,46)"/><text x="62.8881%" y="591.50"></text></g><g><title>__sys_recvfrom (23 samples, 1.49%)</title><rect x="62.6381%" y="565" width="1.4945%" height="15" fill="rgb(215,135,32)"/><text x="62.8881%" y="575.50"></text></g><g><title>inet_recvmsg (23 samples, 1.49%)</title><rect x="62.6381%" y="549" width="1.4945%" height="15" fill="rgb(246,101,22)"/><text x="62.8881%" y="559.50"></text></g><g><title>tcp_recvmsg (23 samples, 1.49%)</title><rect x="62.6381%" y="533" width="1.4945%" height="15" fill="rgb(206,107,13)"/><text x="62.8881%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 1.82%)</title><rect x="62.5081%" y="613" width="1.8194%" height="15" fill="rgb(250,100,44)"/><text x="62.7581%" y="623.50">e..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.19%)</title><rect x="64.1326%" y="597" width="0.1949%" height="15" fill="rgb(231,147,38)"/><text x="64.3826%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (29 samples, 1.88%)</title><rect x="62.5081%" y="709" width="1.8843%" height="15" fill="rgb(229,8,40)"/><text x="62.7581%" y="719.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (29 samples, 1.88%)</title><rect x="62.5081%" y="693" width="1.8843%" height="15" fill="rgb(221,135,30)"/><text x="62.7581%" y="703.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (29 samples, 1.88%)</title><rect x="62.5081%" y="677" width="1.8843%" height="15" fill="rgb(249,193,18)"/><text x="62.7581%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (29 samples, 1.88%)</title><rect x="62.5081%" y="661" width="1.8843%" height="15" fill="rgb(209,133,39)"/><text x="62.7581%" y="671.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (29 samples, 1.88%)</title><rect x="62.5081%" y="645" width="1.8843%" height="15" fill="rgb(232,100,14)"/><text x="62.7581%" y="655.50">s..</text></g><g><title>__libc_recv (29 samples, 1.88%)</title><rect x="62.5081%" y="629" width="1.8843%" height="15" fill="rgb(224,185,1)"/><text x="62.7581%" y="639.50">_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (41 samples, 2.66%)</title><rect x="61.7934%" y="869" width="2.6641%" height="15" fill="rgb(223,139,8)"/><text x="62.0434%" y="879.50">st..</text></g><g><title>decor::Shim::run_on_tcp (41 samples, 2.66%)</title><rect x="61.7934%" y="853" width="2.6641%" height="15" fill="rgb(232,213,38)"/><text x="62.0434%" y="863.50">de..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (41 samples, 2.66%)</title><rect x="61.7934%" y="837" width="2.6641%" height="15" fill="rgb(207,94,22)"/><text x="62.0434%" y="847.50">ms..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (39 samples, 2.53%)</title><rect x="61.9233%" y="821" width="2.5341%" height="15" fill="rgb(219,183,54)"/><text x="62.1733%" y="831.50">&lt;d..</text></g><g><title>mysql::conn::transaction::Transaction::commit (30 samples, 1.95%)</title><rect x="62.5081%" y="805" width="1.9493%" height="15" fill="rgb(216,185,54)"/><text x="62.7581%" y="815.50">m..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (30 samples, 1.95%)</title><rect x="62.5081%" y="789" width="1.9493%" height="15" fill="rgb(254,217,39)"/><text x="62.7581%" y="799.50">m..</text></g><g><title>mysql::conn::Conn::_query (30 samples, 1.95%)</title><rect x="62.5081%" y="773" width="1.9493%" height="15" fill="rgb(240,178,23)"/><text x="62.7581%" y="783.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (30 samples, 1.95%)</title><rect x="62.5081%" y="757" width="1.9493%" height="15" fill="rgb(218,11,47)"/><text x="62.7581%" y="767.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (30 samples, 1.95%)</title><rect x="62.5081%" y="741" width="1.9493%" height="15" fill="rgb(218,51,51)"/><text x="62.7581%" y="751.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 1.95%)</title><rect x="62.5081%" y="725" width="1.9493%" height="15" fill="rgb(238,126,27)"/><text x="62.7581%" y="735.50">&lt;..</text></g><g><title>[unknown] (856 samples, 55.62%)</title><rect x="8.9019%" y="885" width="55.6205%" height="15" fill="rgb(249,202,22)"/><text x="9.1519%" y="895.50">[unknown]</text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (2 samples, 0.13%)</title><rect x="64.9123%" y="677" width="0.1300%" height="15" fill="rgb(254,195,49)"/><text x="65.1623%" y="687.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.13%)</title><rect x="66.0819%" y="389" width="0.1300%" height="15" fill="rgb(208,123,14)"/><text x="66.3319%" y="399.50"></text></g><g><title>netif_skb_features (2 samples, 0.13%)</title><rect x="66.0819%" y="373" width="0.1300%" height="15" fill="rgb(224,200,8)"/><text x="66.3319%" y="383.50"></text></g><g><title>__dev_queue_xmit (5 samples, 0.32%)</title><rect x="65.9519%" y="405" width="0.3249%" height="15" fill="rgb(217,61,36)"/><text x="66.2019%" y="415.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.13%)</title><rect x="66.3418%" y="341" width="0.1300%" height="15" fill="rgb(206,35,45)"/><text x="66.5918%" y="351.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.13%)</title><rect x="66.3418%" y="325" width="0.1300%" height="15" fill="rgb(217,65,33)"/><text x="66.5918%" y="335.50"></text></g><g><title>sched_clock (2 samples, 0.13%)</title><rect x="66.3418%" y="309" width="0.1300%" height="15" fill="rgb(222,158,48)"/><text x="66.5918%" y="319.50"></text></g><g><title>native_sched_clock (2 samples, 0.13%)</title><rect x="66.3418%" y="293" width="0.1300%" height="15" fill="rgb(254,2,54)"/><text x="66.5918%" y="303.50"></text></g><g><title>enqueue_task (2 samples, 0.13%)</title><rect x="67.1215%" y="101" width="0.1300%" height="15" fill="rgb(250,143,38)"/><text x="67.3715%" y="111.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="67.1215%" y="85" width="0.1300%" height="15" fill="rgb(248,25,0)"/><text x="67.3715%" y="95.50"></text></g><g><title>sock_def_readable (7 samples, 0.45%)</title><rect x="66.9916%" y="181" width="0.4548%" height="15" fill="rgb(206,152,27)"/><text x="67.2416%" y="191.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.45%)</title><rect x="66.9916%" y="165" width="0.4548%" height="15" fill="rgb(240,77,30)"/><text x="67.2416%" y="175.50"></text></g><g><title>__wake_up_common (6 samples, 0.39%)</title><rect x="67.0565%" y="149" width="0.3899%" height="15" fill="rgb(231,5,3)"/><text x="67.3065%" y="159.50"></text></g><g><title>pollwake (6 samples, 0.39%)</title><rect x="67.0565%" y="133" width="0.3899%" height="15" fill="rgb(207,226,32)"/><text x="67.3065%" y="143.50"></text></g><g><title>try_to_wake_up (6 samples, 0.39%)</title><rect x="67.0565%" y="117" width="0.3899%" height="15" fill="rgb(222,207,47)"/><text x="67.3065%" y="127.50"></text></g><g><title>do_softirq (24 samples, 1.56%)</title><rect x="66.2768%" y="389" width="1.5595%" height="15" fill="rgb(229,115,45)"/><text x="66.5268%" y="399.50"></text></g><g><title>do_softirq_own_stack (24 samples, 1.56%)</title><rect x="66.2768%" y="373" width="1.5595%" height="15" fill="rgb(224,191,6)"/><text x="66.5268%" y="383.50"></text></g><g><title>__do_softirq (24 samples, 1.56%)</title><rect x="66.2768%" y="357" width="1.5595%" height="15" fill="rgb(230,227,24)"/><text x="66.5268%" y="367.50"></text></g><g><title>net_rx_action (21 samples, 1.36%)</title><rect x="66.4717%" y="341" width="1.3645%" height="15" fill="rgb(228,80,19)"/><text x="66.7217%" y="351.50"></text></g><g><title>process_backlog (20 samples, 1.30%)</title><rect x="66.5367%" y="325" width="1.2995%" height="15" fill="rgb(247,229,0)"/><text x="66.7867%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (19 samples, 1.23%)</title><rect x="66.6017%" y="309" width="1.2346%" height="15" fill="rgb(237,194,15)"/><text x="66.8517%" y="319.50"></text></g><g><title>ip_rcv (19 samples, 1.23%)</title><rect x="66.6017%" y="293" width="1.2346%" height="15" fill="rgb(219,203,20)"/><text x="66.8517%" y="303.50"></text></g><g><title>ip_local_deliver (18 samples, 1.17%)</title><rect x="66.6667%" y="277" width="1.1696%" height="15" fill="rgb(234,128,8)"/><text x="66.9167%" y="287.50"></text></g><g><title>ip_local_deliver_finish (17 samples, 1.10%)</title><rect x="66.7316%" y="261" width="1.1046%" height="15" fill="rgb(248,202,8)"/><text x="66.9816%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 1.04%)</title><rect x="66.7966%" y="245" width="1.0396%" height="15" fill="rgb(206,104,37)"/><text x="67.0466%" y="255.50"></text></g><g><title>tcp_v4_rcv (15 samples, 0.97%)</title><rect x="66.8616%" y="229" width="0.9747%" height="15" fill="rgb(223,8,27)"/><text x="67.1116%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (15 samples, 0.97%)</title><rect x="66.8616%" y="213" width="0.9747%" height="15" fill="rgb(216,217,28)"/><text x="67.1116%" y="223.50"></text></g><g><title>tcp_rcv_established (15 samples, 0.97%)</title><rect x="66.8616%" y="197" width="0.9747%" height="15" fill="rgb(249,199,1)"/><text x="67.1116%" y="207.50"></text></g><g><title>tcp_ack (6 samples, 0.39%)</title><rect x="67.4464%" y="181" width="0.3899%" height="15" fill="rgb(240,85,17)"/><text x="67.6964%" y="191.50"></text></g><g><title>ip_finish_output2 (31 samples, 2.01%)</title><rect x="65.8869%" y="421" width="2.0143%" height="15" fill="rgb(206,108,45)"/><text x="66.1369%" y="431.50">i..</text></g><g><title>__local_bh_enable_ip (25 samples, 1.62%)</title><rect x="66.2768%" y="405" width="1.6244%" height="15" fill="rgb(245,210,41)"/><text x="66.5268%" y="415.50"></text></g><g><title>__ip_queue_xmit (36 samples, 2.34%)</title><rect x="65.6270%" y="453" width="2.3392%" height="15" fill="rgb(206,13,37)"/><text x="65.8770%" y="463.50">_..</text></g><g><title>ip_output (35 samples, 2.27%)</title><rect x="65.6920%" y="437" width="2.2742%" height="15" fill="rgb(250,61,18)"/><text x="65.9420%" y="447.50">i..</text></g><g><title>__tcp_transmit_skb (41 samples, 2.66%)</title><rect x="65.4321%" y="469" width="2.6641%" height="15" fill="rgb(235,172,48)"/><text x="65.6821%" y="479.50">__..</text></g><g><title>__tcp_push_pending_frames (42 samples, 2.73%)</title><rect x="65.4321%" y="501" width="2.7290%" height="15" fill="rgb(249,201,17)"/><text x="65.6821%" y="511.50">__..</text></g><g><title>tcp_write_xmit (42 samples, 2.73%)</title><rect x="65.4321%" y="485" width="2.7290%" height="15" fill="rgb(219,208,6)"/><text x="65.6821%" y="495.50">tc..</text></g><g><title>sk_page_frag_refill (2 samples, 0.13%)</title><rect x="68.1611%" y="501" width="0.1300%" height="15" fill="rgb(248,31,23)"/><text x="68.4111%" y="511.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.13%)</title><rect x="68.1611%" y="485" width="0.1300%" height="15" fill="rgb(245,15,42)"/><text x="68.4111%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.32%)</title><rect x="68.2911%" y="501" width="0.3249%" height="15" fill="rgb(222,217,39)"/><text x="68.5411%" y="511.50"></text></g><g><title>__alloc_skb (5 samples, 0.32%)</title><rect x="68.2911%" y="485" width="0.3249%" height="15" fill="rgb(210,219,27)"/><text x="68.5411%" y="495.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.19%)</title><rect x="68.4211%" y="469" width="0.1949%" height="15" fill="rgb(252,166,36)"/><text x="68.6711%" y="479.50"></text></g><g><title>__x64_sys_sendto (55 samples, 3.57%)</title><rect x="65.1072%" y="581" width="3.5737%" height="15" fill="rgb(245,132,34)"/><text x="65.3572%" y="591.50">__x6..</text></g><g><title>__sys_sendto (55 samples, 3.57%)</title><rect x="65.1072%" y="565" width="3.5737%" height="15" fill="rgb(236,54,3)"/><text x="65.3572%" y="575.50">__sy..</text></g><g><title>sock_sendmsg (53 samples, 3.44%)</title><rect x="65.2372%" y="549" width="3.4438%" height="15" fill="rgb(241,173,43)"/><text x="65.4872%" y="559.50">soc..</text></g><g><title>tcp_sendmsg (52 samples, 3.38%)</title><rect x="65.3021%" y="533" width="3.3788%" height="15" fill="rgb(215,190,9)"/><text x="65.5521%" y="543.50">tcp..</text></g><g><title>tcp_sendmsg_locked (51 samples, 3.31%)</title><rect x="65.3671%" y="517" width="3.3138%" height="15" fill="rgb(242,101,16)"/><text x="65.6171%" y="527.50">tcp..</text></g><g><title>entry_SYSCALL_64 (56 samples, 3.64%)</title><rect x="65.1072%" y="613" width="3.6387%" height="15" fill="rgb(223,190,21)"/><text x="65.3572%" y="623.50">entr..</text></g><g><title>do_syscall_64 (56 samples, 3.64%)</title><rect x="65.1072%" y="597" width="3.6387%" height="15" fill="rgb(215,228,25)"/><text x="65.3572%" y="607.50">do_s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (58 samples, 3.77%)</title><rect x="65.0422%" y="661" width="3.7687%" height="15" fill="rgb(225,36,22)"/><text x="65.2922%" y="671.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (58 samples, 3.77%)</title><rect x="65.0422%" y="645" width="3.7687%" height="15" fill="rgb(251,106,46)"/><text x="65.2922%" y="655.50">std:..</text></g><g><title>__libc_send (58 samples, 3.77%)</title><rect x="65.0422%" y="629" width="3.7687%" height="15" fill="rgb(208,90,1)"/><text x="65.2922%" y="639.50">__li..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (64 samples, 4.16%)</title><rect x="64.7173%" y="725" width="4.1585%" height="15" fill="rgb(243,10,4)"/><text x="64.9673%" y="735.50">&lt;mysq..</text></g><g><title>mysql::conn::Conn::_query (63 samples, 4.09%)</title><rect x="64.7823%" y="709" width="4.0936%" height="15" fill="rgb(212,137,27)"/><text x="65.0323%" y="719.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (62 samples, 4.03%)</title><rect x="64.8473%" y="693" width="4.0286%" height="15" fill="rgb(231,220,49)"/><text x="65.0973%" y="703.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (59 samples, 3.83%)</title><rect x="65.0422%" y="677" width="3.8337%" height="15" fill="rgb(237,96,20)"/><text x="65.2922%" y="687.50">std:..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.39%)</title><rect x="69.0058%" y="661" width="0.3899%" height="15" fill="rgb(239,229,30)"/><text x="69.2558%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.39%)</title><rect x="69.0058%" y="645" width="0.3899%" height="15" fill="rgb(219,65,33)"/><text x="69.2558%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.39%)</title><rect x="69.0058%" y="629" width="0.3899%" height="15" fill="rgb(243,134,7)"/><text x="69.2558%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.39%)</title><rect x="69.0058%" y="613" width="0.3899%" height="15" fill="rgb(216,177,54)"/><text x="69.2558%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.32%)</title><rect x="69.0708%" y="597" width="0.3249%" height="15" fill="rgb(211,160,20)"/><text x="69.3208%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.26%)</title><rect x="69.1358%" y="581" width="0.2599%" height="15" fill="rgb(239,85,39)"/><text x="69.3858%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.26%)</title><rect x="69.1358%" y="565" width="0.2599%" height="15" fill="rgb(232,125,22)"/><text x="69.3858%" y="575.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="69.2658%" y="549" width="0.1300%" height="15" fill="rgb(244,57,34)"/><text x="69.5158%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.39%)</title><rect x="69.3957%" y="661" width="0.3899%" height="15" fill="rgb(214,203,32)"/><text x="69.6457%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.39%)</title><rect x="69.3957%" y="645" width="0.3899%" height="15" fill="rgb(207,58,43)"/><text x="69.6457%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.32%)</title><rect x="69.4607%" y="629" width="0.3249%" height="15" fill="rgb(215,193,15)"/><text x="69.7107%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.26%)</title><rect x="69.5257%" y="613" width="0.2599%" height="15" fill="rgb(232,15,44)"/><text x="69.7757%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.19%)</title><rect x="69.5906%" y="597" width="0.1949%" height="15" fill="rgb(212,3,48)"/><text x="69.8406%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.19%)</title><rect x="69.5906%" y="581" width="0.1949%" height="15" fill="rgb(218,128,7)"/><text x="69.8406%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.91%)</title><rect x="69.0058%" y="677" width="0.9097%" height="15" fill="rgb(226,216,39)"/><text x="69.2558%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="69.7856%" y="661" width="0.1300%" height="15" fill="rgb(243,47,51)"/><text x="70.0356%" y="671.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="69.9155%" y="661" width="0.1300%" height="15" fill="rgb(241,183,40)"/><text x="70.1655%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="70.0455%" y="661" width="0.1300%" height="15" fill="rgb(231,217,32)"/><text x="70.2955%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (19 samples, 1.23%)</title><rect x="69.0058%" y="693" width="1.2346%" height="15" fill="rgb(229,61,38)"/><text x="69.2558%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.32%)</title><rect x="69.9155%" y="677" width="0.3249%" height="15" fill="rgb(225,210,5)"/><text x="70.1655%" y="687.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.13%)</title><rect x="70.5653%" y="629" width="0.1300%" height="15" fill="rgb(231,79,45)"/><text x="70.8153%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.45%)</title><rect x="70.4353%" y="677" width="0.4548%" height="15" fill="rgb(224,100,7)"/><text x="70.6853%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.45%)</title><rect x="70.4353%" y="661" width="0.4548%" height="15" fill="rgb(241,198,18)"/><text x="70.6853%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.39%)</title><rect x="70.5003%" y="645" width="0.3899%" height="15" fill="rgb(252,97,53)"/><text x="70.7503%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.19%)</title><rect x="70.6953%" y="629" width="0.1949%" height="15" fill="rgb(220,88,7)"/><text x="70.9453%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="70.7602%" y="613" width="0.1300%" height="15" fill="rgb(213,176,14)"/><text x="71.0102%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="70.7602%" y="597" width="0.1300%" height="15" fill="rgb(246,73,7)"/><text x="71.0102%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="70.8902%" y="677" width="0.1949%" height="15" fill="rgb(245,64,36)"/><text x="71.1402%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.19%)</title><rect x="70.8902%" y="661" width="0.1949%" height="15" fill="rgb(245,80,10)"/><text x="71.1402%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.19%)</title><rect x="70.8902%" y="645" width="0.1949%" height="15" fill="rgb(232,107,50)"/><text x="71.1402%" y="655.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="71.1501%" y="661" width="0.1300%" height="15" fill="rgb(253,3,0)"/><text x="71.4001%" y="671.50"></text></g><g><title>core::fmt::write (38 samples, 2.47%)</title><rect x="69.0058%" y="725" width="2.4691%" height="15" fill="rgb(212,99,53)"/><text x="69.2558%" y="735.50">co..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (38 samples, 2.47%)</title><rect x="69.0058%" y="709" width="2.4691%" height="15" fill="rgb(249,111,54)"/><text x="69.2558%" y="719.50">&lt;s..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (17 samples, 1.10%)</title><rect x="70.3704%" y="693" width="1.1046%" height="15" fill="rgb(249,55,30)"/><text x="70.6204%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.39%)</title><rect x="71.0851%" y="677" width="0.3899%" height="15" fill="rgb(237,47,42)"/><text x="71.3351%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="71.3450%" y="661" width="0.1300%" height="15" fill="rgb(211,20,18)"/><text x="71.5950%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="71.3450%" y="645" width="0.1300%" height="15" fill="rgb(231,203,46)"/><text x="71.5950%" y="655.50"></text></g><g><title>_int_free (4 samples, 0.26%)</title><rect x="71.5400%" y="709" width="0.2599%" height="15" fill="rgb(237,142,3)"/><text x="71.7900%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.65%)</title><rect x="71.4750%" y="725" width="0.6498%" height="15" fill="rgb(241,107,1)"/><text x="71.7250%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.32%)</title><rect x="71.7999%" y="709" width="0.3249%" height="15" fill="rgb(229,83,13)"/><text x="72.0499%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.26%)</title><rect x="71.8648%" y="693" width="0.2599%" height="15" fill="rgb(241,91,40)"/><text x="72.1148%" y="703.50"></text></g><g><title>decor::answer_rows (4 samples, 0.26%)</title><rect x="72.1248%" y="725" width="0.2599%" height="15" fill="rgb(225,3,45)"/><text x="72.3748%" y="735.50"></text></g><g><title>mysql::conn::Conn::start_transaction (6 samples, 0.39%)</title><rect x="72.3847%" y="725" width="0.3899%" height="15" fill="rgb(244,223,14)"/><text x="72.6347%" y="735.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (6 samples, 0.39%)</title><rect x="72.3847%" y="709" width="0.3899%" height="15" fill="rgb(224,124,37)"/><text x="72.6347%" y="719.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (6 samples, 0.39%)</title><rect x="72.3847%" y="693" width="0.3899%" height="15" fill="rgb(251,171,30)"/><text x="72.6347%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (6 samples, 0.39%)</title><rect x="72.3847%" y="677" width="0.3899%" height="15" fill="rgb(236,46,54)"/><text x="72.6347%" y="687.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (4 samples, 0.26%)</title><rect x="72.5146%" y="661" width="0.2599%" height="15" fill="rgb(245,213,5)"/><text x="72.7646%" y="671.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.19%)</title><rect x="72.5796%" y="645" width="0.1949%" height="15" fill="rgb(230,144,27)"/><text x="72.8296%" y="655.50"></text></g><g><title>fput_many (2 samples, 0.13%)</title><rect x="73.0994%" y="533" width="0.1300%" height="15" fill="rgb(220,86,6)"/><text x="73.3494%" y="543.50"></text></g><g><title>release_sock (2 samples, 0.13%)</title><rect x="73.2943%" y="501" width="0.1300%" height="15" fill="rgb(240,20,13)"/><text x="73.5443%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.13%)</title><rect x="73.2943%" y="485" width="0.1300%" height="15" fill="rgb(217,89,34)"/><text x="73.5443%" y="495.50"></text></g><g><title>__ip_local_out (3 samples, 0.19%)</title><rect x="73.6842%" y="421" width="0.1949%" height="15" fill="rgb(229,13,5)"/><text x="73.9342%" y="431.50"></text></g><g><title>__sk_dst_check (2 samples, 0.13%)</title><rect x="73.8791%" y="421" width="0.1300%" height="15" fill="rgb(244,67,35)"/><text x="74.1291%" y="431.50"></text></g><g><title>netdev_core_pick_tx (2 samples, 0.13%)</title><rect x="74.0741%" y="373" width="0.1300%" height="15" fill="rgb(221,40,2)"/><text x="74.3241%" y="383.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.19%)</title><rect x="74.0741%" y="389" width="0.1949%" height="15" fill="rgb(237,157,21)"/><text x="74.3241%" y="399.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.13%)</title><rect x="74.4639%" y="325" width="0.1300%" height="15" fill="rgb(222,94,11)"/><text x="74.7139%" y="335.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.13%)</title><rect x="74.9188%" y="85" width="0.1300%" height="15" fill="rgb(249,113,6)"/><text x="75.1688%" y="95.50"></text></g><g><title>enqueue_entity (2 samples, 0.13%)</title><rect x="74.9188%" y="69" width="0.1300%" height="15" fill="rgb(238,137,36)"/><text x="75.1688%" y="79.50"></text></g><g><title>sock_def_readable (5 samples, 0.32%)</title><rect x="74.8538%" y="165" width="0.3249%" height="15" fill="rgb(210,102,26)"/><text x="75.1038%" y="175.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.32%)</title><rect x="74.8538%" y="149" width="0.3249%" height="15" fill="rgb(218,30,30)"/><text x="75.1038%" y="159.50"></text></g><g><title>__wake_up_common (5 samples, 0.32%)</title><rect x="74.8538%" y="133" width="0.3249%" height="15" fill="rgb(214,67,26)"/><text x="75.1038%" y="143.50"></text></g><g><title>pollwake (5 samples, 0.32%)</title><rect x="74.8538%" y="117" width="0.3249%" height="15" fill="rgb(251,9,53)"/><text x="75.1038%" y="127.50"></text></g><g><title>try_to_wake_up (5 samples, 0.32%)</title><rect x="74.8538%" y="101" width="0.3249%" height="15" fill="rgb(228,204,25)"/><text x="75.1038%" y="111.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.45%)</title><rect x="74.8538%" y="197" width="0.4548%" height="15" fill="rgb(207,153,8)"/><text x="75.1038%" y="207.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.45%)</title><rect x="74.8538%" y="181" width="0.4548%" height="15" fill="rgb(242,9,16)"/><text x="75.1038%" y="191.50"></text></g><g><title>tcp_ack (2 samples, 0.13%)</title><rect x="75.1787%" y="165" width="0.1300%" height="15" fill="rgb(217,211,10)"/><text x="75.4287%" y="175.50"></text></g><g><title>__ip_queue_xmit (27 samples, 1.75%)</title><rect x="73.6192%" y="437" width="1.7544%" height="15" fill="rgb(219,228,52)"/><text x="73.8692%" y="447.50"></text></g><g><title>ip_output (21 samples, 1.36%)</title><rect x="74.0091%" y="421" width="1.3645%" height="15" fill="rgb(231,92,29)"/><text x="74.2591%" y="431.50"></text></g><g><title>ip_finish_output2 (21 samples, 1.36%)</title><rect x="74.0091%" y="405" width="1.3645%" height="15" fill="rgb(232,8,23)"/><text x="74.2591%" y="415.50"></text></g><g><title>__local_bh_enable_ip (17 samples, 1.10%)</title><rect x="74.2690%" y="389" width="1.1046%" height="15" fill="rgb(216,211,34)"/><text x="74.5190%" y="399.50"></text></g><g><title>do_softirq (17 samples, 1.10%)</title><rect x="74.2690%" y="373" width="1.1046%" height="15" fill="rgb(236,151,0)"/><text x="74.5190%" y="383.50"></text></g><g><title>do_softirq_own_stack (17 samples, 1.10%)</title><rect x="74.2690%" y="357" width="1.1046%" height="15" fill="rgb(209,168,3)"/><text x="74.5190%" y="367.50"></text></g><g><title>__do_softirq (17 samples, 1.10%)</title><rect x="74.2690%" y="341" width="1.1046%" height="15" fill="rgb(208,129,28)"/><text x="74.5190%" y="351.50"></text></g><g><title>net_rx_action (12 samples, 0.78%)</title><rect x="74.5939%" y="325" width="0.7797%" height="15" fill="rgb(229,78,22)"/><text x="74.8439%" y="335.50"></text></g><g><title>process_backlog (11 samples, 0.71%)</title><rect x="74.6589%" y="309" width="0.7147%" height="15" fill="rgb(228,187,13)"/><text x="74.9089%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (11 samples, 0.71%)</title><rect x="74.6589%" y="293" width="0.7147%" height="15" fill="rgb(240,119,24)"/><text x="74.9089%" y="303.50"></text></g><g><title>ip_rcv (11 samples, 0.71%)</title><rect x="74.6589%" y="277" width="0.7147%" height="15" fill="rgb(209,194,42)"/><text x="74.9089%" y="287.50"></text></g><g><title>ip_local_deliver (11 samples, 0.71%)</title><rect x="74.6589%" y="261" width="0.7147%" height="15" fill="rgb(247,200,46)"/><text x="74.9089%" y="271.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 0.71%)</title><rect x="74.6589%" y="245" width="0.7147%" height="15" fill="rgb(218,76,16)"/><text x="74.9089%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 0.71%)</title><rect x="74.6589%" y="229" width="0.7147%" height="15" fill="rgb(225,21,48)"/><text x="74.9089%" y="239.50"></text></g><g><title>tcp_v4_rcv (11 samples, 0.71%)</title><rect x="74.6589%" y="213" width="0.7147%" height="15" fill="rgb(239,223,50)"/><text x="74.9089%" y="223.50"></text></g><g><title>__tcp_push_pending_frames (33 samples, 2.14%)</title><rect x="73.4893%" y="485" width="2.1442%" height="15" fill="rgb(244,45,21)"/><text x="73.7393%" y="495.50">_..</text></g><g><title>tcp_write_xmit (33 samples, 2.14%)</title><rect x="73.4893%" y="469" width="2.1442%" height="15" fill="rgb(232,33,43)"/><text x="73.7393%" y="479.50">t..</text></g><g><title>__tcp_transmit_skb (32 samples, 2.08%)</title><rect x="73.5543%" y="453" width="2.0793%" height="15" fill="rgb(209,8,3)"/><text x="73.8043%" y="463.50">_..</text></g><g><title>__ksize (2 samples, 0.13%)</title><rect x="75.6335%" y="453" width="0.1300%" height="15" fill="rgb(214,25,53)"/><text x="75.8835%" y="463.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.19%)</title><rect x="75.6335%" y="485" width="0.1949%" height="15" fill="rgb(254,186,54)"/><text x="75.8835%" y="495.50"></text></g><g><title>__alloc_skb (3 samples, 0.19%)</title><rect x="75.6335%" y="469" width="0.1949%" height="15" fill="rgb(208,174,49)"/><text x="75.8835%" y="479.50"></text></g><g><title>sock_sendmsg (41 samples, 2.66%)</title><rect x="73.2294%" y="533" width="2.6641%" height="15" fill="rgb(233,191,51)"/><text x="73.4794%" y="543.50">so..</text></g><g><title>tcp_sendmsg (41 samples, 2.66%)</title><rect x="73.2294%" y="517" width="2.6641%" height="15" fill="rgb(222,134,10)"/><text x="73.4794%" y="527.50">tc..</text></g><g><title>tcp_sendmsg_locked (38 samples, 2.47%)</title><rect x="73.4243%" y="501" width="2.4691%" height="15" fill="rgb(230,226,20)"/><text x="73.6743%" y="511.50">tc..</text></g><g><title>do_syscall_64 (45 samples, 2.92%)</title><rect x="73.0344%" y="581" width="2.9240%" height="15" fill="rgb(251,111,25)"/><text x="73.2844%" y="591.50">do..</text></g><g><title>__x64_sys_sendto (45 samples, 2.92%)</title><rect x="73.0344%" y="565" width="2.9240%" height="15" fill="rgb(224,40,46)"/><text x="73.2844%" y="575.50">__..</text></g><g><title>__sys_sendto (45 samples, 2.92%)</title><rect x="73.0344%" y="549" width="2.9240%" height="15" fill="rgb(236,108,47)"/><text x="73.2844%" y="559.50">__..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (175 samples, 11.37%)</title><rect x="64.7173%" y="741" width="11.3710%" height="15" fill="rgb(234,93,0)"/><text x="64.9673%" y="751.50">&lt;decor::Shim as m..</text></g><g><title>mysql::conn::transaction::Transaction::commit (51 samples, 3.31%)</title><rect x="72.7745%" y="725" width="3.3138%" height="15" fill="rgb(224,213,32)"/><text x="73.0245%" y="735.50">mys..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (51 samples, 3.31%)</title><rect x="72.7745%" y="709" width="3.3138%" height="15" fill="rgb(251,11,48)"/><text x="73.0245%" y="719.50">mys..</text></g><g><title>mysql::conn::Conn::_query (51 samples, 3.31%)</title><rect x="72.7745%" y="693" width="3.3138%" height="15" fill="rgb(236,173,5)"/><text x="73.0245%" y="703.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (50 samples, 3.25%)</title><rect x="72.8395%" y="677" width="3.2489%" height="15" fill="rgb(230,95,12)"/><text x="73.0895%" y="687.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (48 samples, 3.12%)</title><rect x="72.9695%" y="661" width="3.1189%" height="15" fill="rgb(232,209,1)"/><text x="73.2195%" y="671.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (48 samples, 3.12%)</title><rect x="72.9695%" y="645" width="3.1189%" height="15" fill="rgb(232,6,1)"/><text x="73.2195%" y="655.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (48 samples, 3.12%)</title><rect x="72.9695%" y="629" width="3.1189%" height="15" fill="rgb(210,224,50)"/><text x="73.2195%" y="639.50">std..</text></g><g><title>__libc_send (48 samples, 3.12%)</title><rect x="72.9695%" y="613" width="3.1189%" height="15" fill="rgb(228,127,35)"/><text x="73.2195%" y="623.50">__l..</text></g><g><title>entry_SYSCALL_64 (47 samples, 3.05%)</title><rect x="73.0344%" y="597" width="3.0539%" height="15" fill="rgb(245,102,45)"/><text x="73.2844%" y="607.50">ent..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="75.9584%" y="581" width="0.1300%" height="15" fill="rgb(214,1,49)"/><text x="76.2084%" y="591.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="76.7381%" y="533" width="0.1300%" height="15" fill="rgb(226,163,40)"/><text x="76.9881%" y="543.50"></text></g><g><title>skb_release_head_state (2 samples, 0.13%)</title><rect x="76.7381%" y="517" width="0.1300%" height="15" fill="rgb(239,212,28)"/><text x="76.9881%" y="527.50"></text></g><g><title>dst_release (2 samples, 0.13%)</title><rect x="76.7381%" y="501" width="0.1300%" height="15" fill="rgb(220,20,13)"/><text x="76.9881%" y="511.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.19%)</title><rect x="76.8681%" y="533" width="0.1949%" height="15" fill="rgb(210,164,35)"/><text x="77.1181%" y="543.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.19%)</title><rect x="76.8681%" y="517" width="0.1949%" height="15" fill="rgb(248,109,41)"/><text x="77.1181%" y="527.50"></text></g><g><title>ip_output (3 samples, 0.19%)</title><rect x="76.8681%" y="501" width="0.1949%" height="15" fill="rgb(238,23,50)"/><text x="77.1181%" y="511.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.19%)</title><rect x="76.8681%" y="485" width="0.1949%" height="15" fill="rgb(211,48,49)"/><text x="77.1181%" y="495.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.19%)</title><rect x="76.8681%" y="469" width="0.1949%" height="15" fill="rgb(223,36,21)"/><text x="77.1181%" y="479.50"></text></g><g><title>do_softirq (3 samples, 0.19%)</title><rect x="76.8681%" y="453" width="0.1949%" height="15" fill="rgb(207,123,46)"/><text x="77.1181%" y="463.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.19%)</title><rect x="76.8681%" y="437" width="0.1949%" height="15" fill="rgb(240,218,32)"/><text x="77.1181%" y="447.50"></text></g><g><title>__do_softirq (3 samples, 0.19%)</title><rect x="76.8681%" y="421" width="0.1949%" height="15" fill="rgb(252,5,43)"/><text x="77.1181%" y="431.50"></text></g><g><title>net_rx_action (3 samples, 0.19%)</title><rect x="76.8681%" y="405" width="0.1949%" height="15" fill="rgb(252,84,19)"/><text x="77.1181%" y="415.50"></text></g><g><title>process_backlog (3 samples, 0.19%)</title><rect x="76.8681%" y="389" width="0.1949%" height="15" fill="rgb(243,152,39)"/><text x="77.1181%" y="399.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.19%)</title><rect x="76.8681%" y="373" width="0.1949%" height="15" fill="rgb(234,160,15)"/><text x="77.1181%" y="383.50"></text></g><g><title>ip_rcv (3 samples, 0.19%)</title><rect x="76.8681%" y="357" width="0.1949%" height="15" fill="rgb(237,34,20)"/><text x="77.1181%" y="367.50"></text></g><g><title>ip_local_deliver (3 samples, 0.19%)</title><rect x="76.8681%" y="341" width="0.1949%" height="15" fill="rgb(229,97,13)"/><text x="77.1181%" y="351.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.19%)</title><rect x="76.8681%" y="325" width="0.1949%" height="15" fill="rgb(234,71,50)"/><text x="77.1181%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.19%)</title><rect x="76.8681%" y="309" width="0.1949%" height="15" fill="rgb(253,155,4)"/><text x="77.1181%" y="319.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.19%)</title><rect x="76.8681%" y="293" width="0.1949%" height="15" fill="rgb(222,185,37)"/><text x="77.1181%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.13%)</title><rect x="76.9331%" y="277" width="0.1300%" height="15" fill="rgb(251,177,13)"/><text x="77.1831%" y="287.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.13%)</title><rect x="76.9331%" y="261" width="0.1300%" height="15" fill="rgb(250,179,40)"/><text x="77.1831%" y="271.50"></text></g><g><title>tcp_ack (2 samples, 0.13%)</title><rect x="76.9331%" y="245" width="0.1300%" height="15" fill="rgb(242,44,2)"/><text x="77.1831%" y="255.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.26%)</title><rect x="77.4529%" y="453" width="0.2599%" height="15" fill="rgb(216,177,13)"/><text x="77.7029%" y="463.50"></text></g><g><title>dequeue_entity (4 samples, 0.26%)</title><rect x="77.4529%" y="437" width="0.2599%" height="15" fill="rgb(216,106,43)"/><text x="77.7029%" y="447.50"></text></g><g><title>update_curr (2 samples, 0.13%)</title><rect x="77.5828%" y="421" width="0.1300%" height="15" fill="rgb(216,183,2)"/><text x="77.8328%" y="431.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="77.7778%" y="453" width="0.1300%" height="15" fill="rgb(249,75,3)"/><text x="78.0278%" y="463.50"></text></g><g><title>psi_group_change (2 samples, 0.13%)</title><rect x="77.7778%" y="437" width="0.1300%" height="15" fill="rgb(219,67,39)"/><text x="78.0278%" y="447.50"></text></g><g><title>record_times (2 samples, 0.13%)</title><rect x="77.7778%" y="421" width="0.1300%" height="15" fill="rgb(253,228,2)"/><text x="78.0278%" y="431.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.13%)</title><rect x="77.7778%" y="405" width="0.1300%" height="15" fill="rgb(235,138,27)"/><text x="78.0278%" y="415.50"></text></g><g><title>sk_wait_data (14 samples, 0.91%)</title><rect x="77.1280%" y="533" width="0.9097%" height="15" fill="rgb(236,97,51)"/><text x="77.3780%" y="543.50"></text></g><g><title>wait_woken (12 samples, 0.78%)</title><rect x="77.2580%" y="517" width="0.7797%" height="15" fill="rgb(240,80,30)"/><text x="77.5080%" y="527.50"></text></g><g><title>schedule_timeout (10 samples, 0.65%)</title><rect x="77.3879%" y="501" width="0.6498%" height="15" fill="rgb(230,178,19)"/><text x="77.6379%" y="511.50"></text></g><g><title>schedule (10 samples, 0.65%)</title><rect x="77.3879%" y="485" width="0.6498%" height="15" fill="rgb(210,190,27)"/><text x="77.6379%" y="495.50"></text></g><g><title>__schedule (10 samples, 0.65%)</title><rect x="77.3879%" y="469" width="0.6498%" height="15" fill="rgb(222,107,31)"/><text x="77.6379%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (27 samples, 1.75%)</title><rect x="76.4782%" y="597" width="1.7544%" height="15" fill="rgb(216,127,34)"/><text x="76.7282%" y="607.50"></text></g><g><title>__sys_recvfrom (26 samples, 1.69%)</title><rect x="76.5432%" y="581" width="1.6894%" height="15" fill="rgb(234,116,52)"/><text x="76.7932%" y="591.50"></text></g><g><title>inet_recvmsg (25 samples, 1.62%)</title><rect x="76.6082%" y="565" width="1.6244%" height="15" fill="rgb(222,124,15)"/><text x="76.8582%" y="575.50"></text></g><g><title>tcp_recvmsg (25 samples, 1.62%)</title><rect x="76.6082%" y="549" width="1.6244%" height="15" fill="rgb(231,179,28)"/><text x="76.8582%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.19%)</title><rect x="78.0377%" y="533" width="0.1949%" height="15" fill="rgb(226,93,45)"/><text x="78.2877%" y="543.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.13%)</title><rect x="78.1027%" y="517" width="0.1300%" height="15" fill="rgb(215,8,51)"/><text x="78.3527%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (28 samples, 1.82%)</title><rect x="76.4782%" y="629" width="1.8194%" height="15" fill="rgb(223,106,5)"/><text x="76.7282%" y="639.50">e..</text></g><g><title>do_syscall_64 (28 samples, 1.82%)</title><rect x="76.4782%" y="613" width="1.8194%" height="15" fill="rgb(250,191,5)"/><text x="76.7282%" y="623.50">d..</text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (34 samples, 2.21%)</title><rect x="76.2183%" y="741" width="2.2092%" height="15" fill="rgb(242,132,44)"/><text x="76.4683%" y="751.50">m..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 2.21%)</title><rect x="76.2183%" y="725" width="2.2092%" height="15" fill="rgb(251,152,29)"/><text x="76.4683%" y="735.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (34 samples, 2.21%)</title><rect x="76.2183%" y="709" width="2.2092%" height="15" fill="rgb(218,179,5)"/><text x="76.4683%" y="719.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (34 samples, 2.21%)</title><rect x="76.2183%" y="693" width="2.2092%" height="15" fill="rgb(227,67,19)"/><text x="76.4683%" y="703.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (34 samples, 2.21%)</title><rect x="76.2183%" y="677" width="2.2092%" height="15" fill="rgb(233,119,31)"/><text x="76.4683%" y="687.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (34 samples, 2.21%)</title><rect x="76.2183%" y="661" width="2.2092%" height="15" fill="rgb(241,120,22)"/><text x="76.4683%" y="671.50">s..</text></g><g><title>__libc_recv (34 samples, 2.21%)</title><rect x="76.2183%" y="645" width="2.2092%" height="15" fill="rgb(224,102,30)"/><text x="76.4683%" y="655.50">_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.13%)</title><rect x="78.2976%" y="629" width="0.1300%" height="15" fill="rgb(210,164,37)"/><text x="78.5476%" y="639.50"></text></g><g><title>__ip_local_out (2 samples, 0.13%)</title><rect x="78.9474%" y="501" width="0.1300%" height="15" fill="rgb(226,191,16)"/><text x="79.1974%" y="511.50"></text></g><g><title>__ip_finish_output (2 samples, 0.13%)</title><rect x="79.0773%" y="485" width="0.1300%" height="15" fill="rgb(214,40,45)"/><text x="79.3273%" y="495.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.19%)</title><rect x="79.2073%" y="469" width="0.1949%" height="15" fill="rgb(244,29,26)"/><text x="79.4573%" y="479.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.13%)</title><rect x="79.5971%" y="277" width="0.1300%" height="15" fill="rgb(216,16,5)"/><text x="79.8471%" y="287.50"></text></g><g><title>sk_reset_timer (2 samples, 0.13%)</title><rect x="79.7921%" y="245" width="0.1300%" height="15" fill="rgb(249,76,35)"/><text x="80.0421%" y="255.50"></text></g><g><title>psi_task_change (3 samples, 0.19%)</title><rect x="80.1170%" y="165" width="0.1949%" height="15" fill="rgb(207,11,44)"/><text x="80.3670%" y="175.50"></text></g><g><title>psi_group_change (3 samples, 0.19%)</title><rect x="80.1170%" y="149" width="0.1949%" height="15" fill="rgb(228,190,49)"/><text x="80.3670%" y="159.50"></text></g><g><title>record_times (2 samples, 0.13%)</title><rect x="80.1819%" y="133" width="0.1300%" height="15" fill="rgb(214,173,12)"/><text x="80.4319%" y="143.50"></text></g><g><title>enqueue_task (5 samples, 0.32%)</title><rect x="80.0520%" y="181" width="0.3249%" height="15" fill="rgb(218,26,35)"/><text x="80.3020%" y="191.50"></text></g><g><title>sock_def_readable (12 samples, 0.78%)</title><rect x="79.9220%" y="245" width="0.7797%" height="15" fill="rgb(220,200,19)"/><text x="80.1720%" y="255.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.78%)</title><rect x="79.9220%" y="229" width="0.7797%" height="15" fill="rgb(239,95,49)"/><text x="80.1720%" y="239.50"></text></g><g><title>__wake_up_common (12 samples, 0.78%)</title><rect x="79.9220%" y="213" width="0.7797%" height="15" fill="rgb(235,85,53)"/><text x="80.1720%" y="223.50"></text></g><g><title>try_to_wake_up (12 samples, 0.78%)</title><rect x="79.9220%" y="197" width="0.7797%" height="15" fill="rgb(233,133,31)"/><text x="80.1720%" y="207.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.32%)</title><rect x="80.3769%" y="181" width="0.3249%" height="15" fill="rgb(218,25,20)"/><text x="80.6269%" y="191.50"></text></g><g><title>enqueue_entity (4 samples, 0.26%)</title><rect x="80.4418%" y="165" width="0.2599%" height="15" fill="rgb(252,210,38)"/><text x="80.6918%" y="175.50"></text></g><g><title>update_load_avg (4 samples, 0.26%)</title><rect x="80.4418%" y="149" width="0.2599%" height="15" fill="rgb(242,134,21)"/><text x="80.6918%" y="159.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.13%)</title><rect x="80.5718%" y="133" width="0.1300%" height="15" fill="rgb(213,28,48)"/><text x="80.8218%" y="143.50"></text></g><g><title>tcp_ack (7 samples, 0.45%)</title><rect x="80.7018%" y="245" width="0.4548%" height="15" fill="rgb(250,196,2)"/><text x="80.9518%" y="255.50"></text></g><g><title>ip_local_deliver (28 samples, 1.82%)</title><rect x="79.4672%" y="341" width="1.8194%" height="15" fill="rgb(227,5,17)"/><text x="79.7172%" y="351.50">i..</text></g><g><title>ip_local_deliver_finish (26 samples, 1.69%)</title><rect x="79.5971%" y="325" width="1.6894%" height="15" fill="rgb(221,226,24)"/><text x="79.8471%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (26 samples, 1.69%)</title><rect x="79.5971%" y="309" width="1.6894%" height="15" fill="rgb(211,5,48)"/><text x="79.8471%" y="319.50"></text></g><g><title>tcp_v4_rcv (26 samples, 1.69%)</title><rect x="79.5971%" y="293" width="1.6894%" height="15" fill="rgb(219,150,6)"/><text x="79.8471%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (24 samples, 1.56%)</title><rect x="79.7271%" y="277" width="1.5595%" height="15" fill="rgb(251,46,16)"/><text x="79.9771%" y="287.50"></text></g><g><title>tcp_rcv_established (23 samples, 1.49%)</title><rect x="79.7921%" y="261" width="1.4945%" height="15" fill="rgb(220,204,40)"/><text x="80.0421%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (30 samples, 1.95%)</title><rect x="79.4672%" y="373" width="1.9493%" height="15" fill="rgb(211,85,2)"/><text x="79.7172%" y="383.50">_..</text></g><g><title>ip_rcv (30 samples, 1.95%)</title><rect x="79.4672%" y="357" width="1.9493%" height="15" fill="rgb(229,17,7)"/><text x="79.7172%" y="367.50">i..</text></g><g><title>__tcp_transmit_skb (41 samples, 2.66%)</title><rect x="78.8174%" y="533" width="2.6641%" height="15" fill="rgb(239,72,28)"/><text x="79.0674%" y="543.50">__..</text></g><g><title>__ip_queue_xmit (41 samples, 2.66%)</title><rect x="78.8174%" y="517" width="2.6641%" height="15" fill="rgb(230,47,54)"/><text x="79.0674%" y="527.50">__..</text></g><g><title>ip_output (37 samples, 2.40%)</title><rect x="79.0773%" y="501" width="2.4042%" height="15" fill="rgb(214,50,8)"/><text x="79.3273%" y="511.50">ip..</text></g><g><title>ip_finish_output2 (35 samples, 2.27%)</title><rect x="79.2073%" y="485" width="2.2742%" height="15" fill="rgb(216,198,43)"/><text x="79.4573%" y="495.50">i..</text></g><g><title>__local_bh_enable_ip (32 samples, 2.08%)</title><rect x="79.4022%" y="469" width="2.0793%" height="15" fill="rgb(234,20,35)"/><text x="79.6522%" y="479.50">_..</text></g><g><title>do_softirq (32 samples, 2.08%)</title><rect x="79.4022%" y="453" width="2.0793%" height="15" fill="rgb(254,45,19)"/><text x="79.6522%" y="463.50">d..</text></g><g><title>do_softirq_own_stack (31 samples, 2.01%)</title><rect x="79.4672%" y="437" width="2.0143%" height="15" fill="rgb(219,14,44)"/><text x="79.7172%" y="447.50">d..</text></g><g><title>__do_softirq (31 samples, 2.01%)</title><rect x="79.4672%" y="421" width="2.0143%" height="15" fill="rgb(217,220,26)"/><text x="79.7172%" y="431.50">_..</text></g><g><title>net_rx_action (31 samples, 2.01%)</title><rect x="79.4672%" y="405" width="2.0143%" height="15" fill="rgb(213,158,28)"/><text x="79.7172%" y="415.50">n..</text></g><g><title>process_backlog (31 samples, 2.01%)</title><rect x="79.4672%" y="389" width="2.0143%" height="15" fill="rgb(252,51,52)"/><text x="79.7172%" y="399.50">p..</text></g><g><title>__tcp_push_pending_frames (43 samples, 2.79%)</title><rect x="78.7524%" y="565" width="2.7940%" height="15" fill="rgb(246,89,16)"/><text x="79.0024%" y="575.50">__..</text></g><g><title>tcp_write_xmit (43 samples, 2.79%)</title><rect x="78.7524%" y="549" width="2.7940%" height="15" fill="rgb(216,158,49)"/><text x="79.0024%" y="559.50">tc..</text></g><g><title>memcg_kmem_put_cache (2 samples, 0.13%)</title><rect x="81.6114%" y="517" width="0.1300%" height="15" fill="rgb(236,107,19)"/><text x="81.8614%" y="527.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.19%)</title><rect x="81.6114%" y="533" width="0.1949%" height="15" fill="rgb(228,185,30)"/><text x="81.8614%" y="543.50"></text></g><g><title>sk_stream_alloc_skb (4 samples, 0.26%)</title><rect x="81.6114%" y="565" width="0.2599%" height="15" fill="rgb(246,134,8)"/><text x="81.8614%" y="575.50"></text></g><g><title>__alloc_skb (4 samples, 0.26%)</title><rect x="81.6114%" y="549" width="0.2599%" height="15" fill="rgb(214,143,50)"/><text x="81.8614%" y="559.50"></text></g><g><title>sock_sendmsg (54 samples, 3.51%)</title><rect x="78.4925%" y="613" width="3.5088%" height="15" fill="rgb(228,75,8)"/><text x="78.7425%" y="623.50">soc..</text></g><g><title>tcp_sendmsg (54 samples, 3.51%)</title><rect x="78.4925%" y="597" width="3.5088%" height="15" fill="rgb(207,175,4)"/><text x="78.7425%" y="607.50">tcp..</text></g><g><title>tcp_sendmsg_locked (53 samples, 3.44%)</title><rect x="78.5575%" y="581" width="3.4438%" height="15" fill="rgb(205,108,24)"/><text x="78.8075%" y="591.50">tcp..</text></g><g><title>__x64_sys_sendto (56 samples, 3.64%)</title><rect x="78.4925%" y="645" width="3.6387%" height="15" fill="rgb(244,120,49)"/><text x="78.7425%" y="655.50">__x6..</text></g><g><title>__sys_sendto (56 samples, 3.64%)</title><rect x="78.4925%" y="629" width="3.6387%" height="15" fill="rgb(223,47,38)"/><text x="78.7425%" y="639.50">__sy..</text></g><g><title>sockfd_lookup_light (2 samples, 0.13%)</title><rect x="82.0013%" y="613" width="0.1300%" height="15" fill="rgb(229,179,11)"/><text x="82.2513%" y="623.50"></text></g><g><title>__fget_light (2 samples, 0.13%)</title><rect x="82.0013%" y="597" width="0.1300%" height="15" fill="rgb(231,122,1)"/><text x="82.2513%" y="607.50"></text></g><g><title>do_syscall_64 (59 samples, 3.83%)</title><rect x="78.4925%" y="661" width="3.8337%" height="15" fill="rgb(245,119,9)"/><text x="78.7425%" y="671.50">do_s..</text></g><g><title>syscall_slow_exit_work (3 samples, 0.19%)</title><rect x="82.1313%" y="645" width="0.1949%" height="15" fill="rgb(241,163,25)"/><text x="82.3813%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (62 samples, 4.03%)</title><rect x="78.4276%" y="677" width="4.0286%" height="15" fill="rgb(217,214,3)"/><text x="78.6776%" y="687.50">entr..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="82.3262%" y="661" width="0.1300%" height="15" fill="rgb(240,86,28)"/><text x="82.5762%" y="671.50"></text></g><g><title>__GI___clone (279 samples, 18.13%)</title><rect x="64.5224%" y="885" width="18.1287%" height="15" fill="rgb(215,47,9)"/><text x="64.7724%" y="895.50">__GI___clone</text></g><g><title>start_thread (279 samples, 18.13%)</title><rect x="64.5224%" y="869" width="18.1287%" height="15" fill="rgb(252,25,45)"/><text x="64.7724%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (279 samples, 18.13%)</title><rect x="64.5224%" y="853" width="18.1287%" height="15" fill="rgb(251,164,9)"/><text x="64.7724%" y="863.50">std::sys::unix::thread::Thre..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (279 samples, 18.13%)</title><rect x="64.5224%" y="837" width="18.1287%" height="15" fill="rgb(233,194,0)"/><text x="64.7724%" y="847.50">&lt;alloc::boxed::Box&lt;F&gt; as cor..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (279 samples, 18.13%)</title><rect x="64.5224%" y="821" width="18.1287%" height="15" fill="rgb(249,111,24)"/><text x="64.7724%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as cor..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (279 samples, 18.13%)</title><rect x="64.5224%" y="805" width="18.1287%" height="15" fill="rgb(250,223,3)"/><text x="64.7724%" y="815.50">core::ops::function::FnOnce:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (279 samples, 18.13%)</title><rect x="64.5224%" y="789" width="18.1287%" height="15" fill="rgb(236,178,37)"/><text x="64.7724%" y="799.50">std::sys_common::backtrace::..</text></g><g><title>decor::Shim::run_on_tcp (279 samples, 18.13%)</title><rect x="64.5224%" y="773" width="18.1287%" height="15" fill="rgb(241,158,50)"/><text x="64.7724%" y="783.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (278 samples, 18.06%)</title><rect x="64.5874%" y="757" width="18.0637%" height="15" fill="rgb(213,121,41)"/><text x="64.8374%" y="767.50">msql_srv::MysqlIntermediary&lt;..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (65 samples, 4.22%)</title><rect x="78.4276%" y="741" width="4.2235%" height="15" fill="rgb(240,92,3)"/><text x="78.6776%" y="751.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (65 samples, 4.22%)</title><rect x="78.4276%" y="725" width="4.2235%" height="15" fill="rgb(205,123,3)"/><text x="78.6776%" y="735.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (65 samples, 4.22%)</title><rect x="78.4276%" y="709" width="4.2235%" height="15" fill="rgb(205,97,47)"/><text x="78.6776%" y="719.50">std::..</text></g><g><title>__libc_send (65 samples, 4.22%)</title><rect x="78.4276%" y="693" width="4.2235%" height="15" fill="rgb(247,152,14)"/><text x="78.6776%" y="703.50">__lib..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.19%)</title><rect x="82.4561%" y="677" width="0.1949%" height="15" fill="rgb(248,195,53)"/><text x="82.7061%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.13%)</title><rect x="82.7160%" y="629" width="0.1300%" height="15" fill="rgb(226,201,16)"/><text x="82.9660%" y="639.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.13%)</title><rect x="82.7160%" y="613" width="0.1300%" height="15" fill="rgb(205,98,0)"/><text x="82.9660%" y="623.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 15.07%)</title><rect x="83.2359%" y="405" width="15.0747%" height="15" fill="rgb(214,191,48)"/><text x="83.4859%" y="415.50">__intel_pmu_enable_all...</text></g><g><title>native_write_msr (232 samples, 15.07%)</title><rect x="83.2359%" y="389" width="15.0747%" height="15" fill="rgb(237,112,39)"/><text x="83.4859%" y="399.50">native_write_msr</text></g><g><title>do_syscall_64 (235 samples, 15.27%)</title><rect x="83.1059%" y="581" width="15.2697%" height="15" fill="rgb(247,203,27)"/><text x="83.3559%" y="591.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (235 samples, 15.27%)</title><rect x="83.1059%" y="565" width="15.2697%" height="15" fill="rgb(235,124,28)"/><text x="83.3559%" y="575.50">__x64_sys_sched_setaffi..</text></g><g><title>sched_setaffinity (234 samples, 15.20%)</title><rect x="83.1709%" y="549" width="15.2047%" height="15" fill="rgb(208,207,46)"/><text x="83.4209%" y="559.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 15.20%)</title><rect x="83.1709%" y="533" width="15.2047%" height="15" fill="rgb(234,176,4)"/><text x="83.4209%" y="543.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 15.20%)</title><rect x="83.1709%" y="517" width="15.2047%" height="15" fill="rgb(230,133,28)"/><text x="83.4209%" y="527.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 15.20%)</title><rect x="83.1709%" y="501" width="15.2047%" height="15" fill="rgb(211,137,40)"/><text x="83.4209%" y="511.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 15.20%)</title><rect x="83.1709%" y="485" width="15.2047%" height="15" fill="rgb(254,35,13)"/><text x="83.4209%" y="495.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 15.20%)</title><rect x="83.1709%" y="469" width="15.2047%" height="15" fill="rgb(225,49,51)"/><text x="83.4209%" y="479.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 15.20%)</title><rect x="83.1709%" y="453" width="15.2047%" height="15" fill="rgb(251,10,15)"/><text x="83.4209%" y="463.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 15.20%)</title><rect x="83.1709%" y="437" width="15.2047%" height="15" fill="rgb(228,207,15)"/><text x="83.4209%" y="447.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 15.14%)</title><rect x="83.2359%" y="421" width="15.1397%" height="15" fill="rgb(241,99,19)"/><text x="83.4859%" y="431.50">__perf_event_task_sched..</text></g><g><title>__libc_start_main (243 samples, 15.79%)</title><rect x="82.6511%" y="869" width="15.7895%" height="15" fill="rgb(207,104,49)"/><text x="82.9011%" y="879.50">__libc_start_main</text></g><g><title>main (243 samples, 15.79%)</title><rect x="82.6511%" y="853" width="15.7895%" height="15" fill="rgb(234,99,18)"/><text x="82.9011%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (243 samples, 15.79%)</title><rect x="82.6511%" y="837" width="15.7895%" height="15" fill="rgb(213,191,49)"/><text x="82.9011%" y="847.50">std::rt::lang_start_inte..</text></g><g><title>std::panic::catch_unwind (243 samples, 15.79%)</title><rect x="82.6511%" y="821" width="15.7895%" height="15" fill="rgb(210,226,19)"/><text x="82.9011%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (243 samples, 15.79%)</title><rect x="82.6511%" y="805" width="15.7895%" height="15" fill="rgb(229,97,18)"/><text x="82.9011%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (243 samples, 15.79%)</title><rect x="82.6511%" y="789" width="15.7895%" height="15" fill="rgb(211,167,15)"/><text x="82.9011%" y="799.50">std::panicking::try::do_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (243 samples, 15.79%)</title><rect x="82.6511%" y="773" width="15.7895%" height="15" fill="rgb(210,169,34)"/><text x="82.9011%" y="783.50">core::ops::function::imp..</text></g><g><title>std::rt::lang_start::_{{closure}} (243 samples, 15.79%)</title><rect x="82.6511%" y="757" width="15.7895%" height="15" fill="rgb(241,121,31)"/><text x="82.9011%" y="767.50">std::rt::lang_start::_{{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (243 samples, 15.79%)</title><rect x="82.6511%" y="741" width="15.7895%" height="15" fill="rgb(232,40,11)"/><text x="82.9011%" y="751.50">std::sys_common::backtra..</text></g><g><title>lobsters::main (243 samples, 15.79%)</title><rect x="82.6511%" y="725" width="15.7895%" height="15" fill="rgb(205,86,26)"/><text x="82.9011%" y="735.50">lobsters::main</text></g><g><title>hwloc::Topology::new (242 samples, 15.72%)</title><rect x="82.7160%" y="709" width="15.7245%" height="15" fill="rgb(231,126,28)"/><text x="82.9660%" y="719.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 15.72%)</title><rect x="82.7160%" y="693" width="15.7245%" height="15" fill="rgb(219,221,18)"/><text x="82.9660%" y="703.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 15.72%)</title><rect x="82.7160%" y="677" width="15.7245%" height="15" fill="rgb(211,40,0)"/><text x="82.9660%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 15.72%)</title><rect x="82.7160%" y="661" width="15.7245%" height="15" fill="rgb(239,85,43)"/><text x="82.9660%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 15.72%)</title><rect x="82.7160%" y="645" width="15.7245%" height="15" fill="rgb(231,55,21)"/><text x="82.9660%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (239 samples, 15.53%)</title><rect x="82.9110%" y="629" width="15.5296%" height="15" fill="rgb(225,184,43)"/><text x="83.1610%" y="639.50">hwloc_linux_set_tid_cpub..</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 15.40%)</title><rect x="83.0409%" y="613" width="15.3996%" height="15" fill="rgb(251,158,41)"/><text x="83.2909%" y="623.50">__GI___sched_setaffinity..</text></g><g><title>entry_SYSCALL_64 (236 samples, 15.33%)</title><rect x="83.1059%" y="597" width="15.3346%" height="15" fill="rgb(234,159,37)"/><text x="83.3559%" y="607.50">entry_SYSCALL_64</text></g><g><title>_start (244 samples, 15.85%)</title><rect x="82.6511%" y="885" width="15.8545%" height="15" fill="rgb(216,204,22)"/><text x="82.9011%" y="895.50">_start</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="98.5055%" y="885" width="0.1300%" height="15" fill="rgb(214,17,3)"/><text x="98.7555%" y="895.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="98.6355%" y="885" width="0.1300%" height="15" fill="rgb(212,111,17)"/><text x="98.8855%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.52%)</title><rect x="98.8304%" y="885" width="0.5198%" height="15" fill="rgb(221,157,24)"/><text x="99.0804%" y="895.50"></text></g><g><title>do_syscall_64 (2 samples, 0.13%)</title><rect x="99.2203%" y="869" width="0.1300%" height="15" fill="rgb(252,16,13)"/><text x="99.4703%" y="879.50"></text></g><g><title>page_fault (2 samples, 0.13%)</title><rect x="99.4152%" y="885" width="0.1300%" height="15" fill="rgb(221,62,2)"/><text x="99.6652%" y="895.50"></text></g><g><title>lobsters (1,533 samples, 99.61%)</title><rect x="0.0000%" y="901" width="99.6101%" height="15" fill="rgb(247,87,22)"/><text x="0.2500%" y="911.50">lobsters</text></g><g><title>all (1,539 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(215,73,9)"/><text x="0.2500%" y="927.50"></text></g><g><title>perf (6 samples, 0.39%)</title><rect x="99.6101%" y="901" width="0.3899%" height="15" fill="rgb(207,175,33)"/><text x="99.8601%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.39%)</title><rect x="99.6101%" y="885" width="0.3899%" height="15" fill="rgb(243,129,54)"/><text x="99.8601%" y="895.50"></text></g><g><title>do_syscall_64 (6 samples, 0.39%)</title><rect x="99.6101%" y="869" width="0.3899%" height="15" fill="rgb(227,119,45)"/><text x="99.8601%" y="879.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.39%)</title><rect x="99.6101%" y="853" width="0.3899%" height="15" fill="rgb(205,109,36)"/><text x="99.8601%" y="863.50"></text></g><g><title>do_execve (6 samples, 0.39%)</title><rect x="99.6101%" y="837" width="0.3899%" height="15" fill="rgb(205,6,39)"/><text x="99.8601%" y="847.50"></text></g><g><title>__do_execve_file (6 samples, 0.39%)</title><rect x="99.6101%" y="821" width="0.3899%" height="15" fill="rgb(221,32,16)"/><text x="99.8601%" y="831.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.39%)</title><rect x="99.6101%" y="805" width="0.3899%" height="15" fill="rgb(228,144,50)"/><text x="99.8601%" y="815.50"></text></g><g><title>load_elf_binary (6 samples, 0.39%)</title><rect x="99.6101%" y="789" width="0.3899%" height="15" fill="rgb(229,201,53)"/><text x="99.8601%" y="799.50"></text></g><g><title>setup_new_exec (6 samples, 0.39%)</title><rect x="99.6101%" y="773" width="0.3899%" height="15" fill="rgb(249,153,27)"/><text x="99.8601%" y="783.50"></text></g><g><title>perf_event_exec (6 samples, 0.39%)</title><rect x="99.6101%" y="757" width="0.3899%" height="15" fill="rgb(227,106,25)"/><text x="99.8601%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (6 samples, 0.39%)</title><rect x="99.6101%" y="741" width="0.3899%" height="15" fill="rgb(230,65,29)"/><text x="99.8601%" y="751.50"></text></g><g><title>native_write_msr (6 samples, 0.39%)</title><rect x="99.6101%" y="725" width="0.3899%" height="15" fill="rgb(221,57,46)"/><text x="99.8601%" y="735.50"></text></g></svg></svg>