<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="869.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="869.00"> </text><svg id="frames" x="10" width="1180"><g><title>[[heap]] (2 samples, 0.13%)</title><rect x="0.0661%" y="805" width="0.1321%" height="15" fill="rgb(227,0,7)"/><text x="0.3161%" y="815.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.26%)</title><rect x="0.1982%" y="789" width="0.2642%" height="15" fill="rgb(217,0,24)"/><text x="0.4482%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="0.5945%" y="789" width="0.1321%" height="15" fill="rgb(221,193,54)"/><text x="0.8445%" y="799.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.53%)</title><rect x="0.7266%" y="789" width="0.5284%" height="15" fill="rgb(248,212,6)"/><text x="0.9766%" y="799.50"></text></g><g><title>__libc_send (3 samples, 0.20%)</title><rect x="1.3871%" y="789" width="0.1982%" height="15" fill="rgb(208,68,35)"/><text x="1.6371%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.20%)</title><rect x="1.3871%" y="773" width="0.1982%" height="15" fill="rgb(232,128,0)"/><text x="1.6371%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.26%)</title><rect x="1.5852%" y="789" width="0.2642%" height="15" fill="rgb(207,160,47)"/><text x="1.8352%" y="799.50"></text></g><g><title>__rdl_alloc (2 samples, 0.13%)</title><rect x="1.8494%" y="789" width="0.1321%" height="15" fill="rgb(228,23,34)"/><text x="2.0994%" y="799.50"></text></g><g><title>__rdl_realloc (4 samples, 0.26%)</title><rect x="1.9815%" y="789" width="0.2642%" height="15" fill="rgb(218,30,26)"/><text x="2.2315%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.20%)</title><rect x="2.0476%" y="773" width="0.1982%" height="15" fill="rgb(220,122,19)"/><text x="2.2976%" y="783.50"></text></g><g><title>_int_free (6 samples, 0.40%)</title><rect x="2.2457%" y="789" width="0.3963%" height="15" fill="rgb(250,228,42)"/><text x="2.4957%" y="799.50"></text></g><g><title>_int_realloc (3 samples, 0.20%)</title><rect x="2.7081%" y="789" width="0.1982%" height="15" fill="rgb(240,193,28)"/><text x="2.9581%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.66%)</title><rect x="2.9062%" y="789" width="0.6605%" height="15" fill="rgb(216,20,37)"/><text x="3.1562%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.20%)</title><rect x="3.5667%" y="789" width="0.1982%" height="15" fill="rgb(206,188,39)"/><text x="3.8167%" y="799.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.13%)</title><rect x="3.7649%" y="789" width="0.1321%" height="15" fill="rgb(217,207,13)"/><text x="4.0149%" y="799.50"></text></g><g><title>core::fmt::write (9 samples, 0.59%)</title><rect x="3.9630%" y="789" width="0.5945%" height="15" fill="rgb(231,73,38)"/><text x="4.2130%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.13%)</title><rect x="4.7556%" y="789" width="0.1321%" height="15" fill="rgb(225,20,46)"/><text x="5.0056%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (3 samples, 0.20%)</title><rect x="4.8877%" y="789" width="0.1982%" height="15" fill="rgb(210,31,41)"/><text x="5.1377%" y="799.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (10 samples, 0.66%)</title><rect x="5.4161%" y="789" width="0.6605%" height="15" fill="rgb(221,200,47)"/><text x="5.6661%" y="799.50"></text></g><g><title>[anon] (92 samples, 6.08%)</title><rect x="0.1982%" y="805" width="6.0766%" height="15" fill="rgb(226,26,5)"/><text x="0.4482%" y="815.50">[anon]</text></g><g><title>_int_free (4 samples, 0.26%)</title><rect x="6.4069%" y="789" width="0.2642%" height="15" fill="rgb(249,33,26)"/><text x="6.6569%" y="799.50"></text></g><g><title>_int_realloc (5 samples, 0.33%)</title><rect x="6.6711%" y="789" width="0.3303%" height="15" fill="rgb(235,183,28)"/><text x="6.9211%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="7.0013%" y="789" width="0.1982%" height="15" fill="rgb(221,5,38)"/><text x="7.2513%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.13%)</title><rect x="7.1995%" y="789" width="0.1321%" height="15" fill="rgb(247,18,42)"/><text x="7.4495%" y="799.50"></text></g><g><title>[lobsters] (17 samples, 1.12%)</title><rect x="6.3408%" y="805" width="1.1229%" height="15" fill="rgb(241,131,45)"/><text x="6.5908%" y="815.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="7.3316%" y="789" width="0.1321%" height="15" fill="rgb(249,31,29)"/><text x="7.5816%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.13%)</title><rect x="7.5297%" y="789" width="0.1321%" height="15" fill="rgb(225,111,53)"/><text x="7.7797%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (2 samples, 0.13%)</title><rect x="7.6618%" y="789" width="0.1321%" height="15" fill="rgb(238,160,17)"/><text x="7.9118%" y="799.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.13%)</title><rect x="7.6618%" y="773" width="0.1321%" height="15" fill="rgb(214,148,48)"/><text x="7.9118%" y="783.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.13%)</title><rect x="7.6618%" y="757" width="0.1321%" height="15" fill="rgb(232,36,49)"/><text x="7.9118%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.13%)</title><rect x="7.6618%" y="741" width="0.1321%" height="15" fill="rgb(209,103,24)"/><text x="7.9118%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.13%)</title><rect x="7.6618%" y="725" width="0.1321%" height="15" fill="rgb(229,88,8)"/><text x="7.9118%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.13%)</title><rect x="7.6618%" y="709" width="0.1321%" height="15" fill="rgb(213,181,19)"/><text x="7.9118%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="8.4544%" y="741" width="0.2642%" height="15" fill="rgb(254,191,54)"/><text x="8.7044%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="8.5865%" y="725" width="0.1321%" height="15" fill="rgb(241,83,37)"/><text x="8.8365%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.20%)</title><rect x="8.8507%" y="741" width="0.1982%" height="15" fill="rgb(233,36,39)"/><text x="9.1007%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="9.2470%" y="741" width="0.1321%" height="15" fill="rgb(226,3,54)"/><text x="9.4970%" y="751.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="9.2470%" y="725" width="0.1321%" height="15" fill="rgb(245,192,40)"/><text x="9.4970%" y="735.50"></text></g><g><title>_int_realloc (2 samples, 0.13%)</title><rect x="9.2470%" y="709" width="0.1321%" height="15" fill="rgb(238,167,29)"/><text x="9.4970%" y="719.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="9.2470%" y="693" width="0.1321%" height="15" fill="rgb(232,182,51)"/><text x="9.4970%" y="703.50"></text></g><g><title>sysmalloc (2 samples, 0.13%)</title><rect x="9.2470%" y="677" width="0.1321%" height="15" fill="rgb(231,60,39)"/><text x="9.4970%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.26%)</title><rect x="9.3791%" y="741" width="0.2642%" height="15" fill="rgb(208,69,12)"/><text x="9.6291%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="9.4452%" y="725" width="0.1982%" height="15" fill="rgb(235,93,37)"/><text x="9.6952%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="9.5112%" y="709" width="0.1321%" height="15" fill="rgb(213,116,39)"/><text x="9.7612%" y="719.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="9.5112%" y="693" width="0.1321%" height="15" fill="rgb(222,207,29)"/><text x="9.7612%" y="703.50"></text></g><g><title>sysmalloc (2 samples, 0.13%)</title><rect x="9.5112%" y="677" width="0.1321%" height="15" fill="rgb(206,96,30)"/><text x="9.7612%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.40%)</title><rect x="9.8415%" y="709" width="0.3963%" height="15" fill="rgb(218,138,4)"/><text x="10.0915%" y="719.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.40%)</title><rect x="9.8415%" y="693" width="0.3963%" height="15" fill="rgb(250,191,14)"/><text x="10.0915%" y="703.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.33%)</title><rect x="9.9075%" y="677" width="0.3303%" height="15" fill="rgb(239,60,40)"/><text x="10.1575%" y="687.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.20%)</title><rect x="10.0396%" y="661" width="0.1982%" height="15" fill="rgb(206,27,48)"/><text x="10.2896%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="10.1057%" y="645" width="0.1321%" height="15" fill="rgb(225,35,8)"/><text x="10.3557%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="10.1057%" y="629" width="0.1321%" height="15" fill="rgb(250,213,24)"/><text x="10.3557%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="10.1057%" y="613" width="0.1321%" height="15" fill="rgb(247,123,22)"/><text x="10.3557%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (12 samples, 0.79%)</title><rect x="9.8415%" y="725" width="0.7926%" height="15" fill="rgb(231,138,38)"/><text x="10.0915%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.40%)</title><rect x="10.2378%" y="709" width="0.3963%" height="15" fill="rgb(231,145,46)"/><text x="10.4878%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="10.5020%" y="693" width="0.1321%" height="15" fill="rgb(251,118,11)"/><text x="10.7520%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="10.6341%" y="709" width="0.1321%" height="15" fill="rgb(217,147,25)"/><text x="10.8841%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="10.8322%" y="693" width="0.1982%" height="15" fill="rgb(247,81,37)"/><text x="11.0822%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="10.8983%" y="677" width="0.1321%" height="15" fill="rgb(209,12,38)"/><text x="11.1483%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="11.0304%" y="693" width="0.1321%" height="15" fill="rgb(227,1,9)"/><text x="11.2804%" y="703.50"></text></g><g><title>__GI___libc_free (7 samples, 0.46%)</title><rect x="12.0872%" y="677" width="0.4624%" height="15" fill="rgb(248,47,43)"/><text x="12.3372%" y="687.50"></text></g><g><title>__GI___libc_realloc (25 samples, 1.65%)</title><rect x="12.5495%" y="677" width="1.6513%" height="15" fill="rgb(221,10,30)"/><text x="12.7995%" y="687.50"></text></g><g><title>_int_realloc (9 samples, 0.59%)</title><rect x="13.6063%" y="661" width="0.5945%" height="15" fill="rgb(210,229,1)"/><text x="13.8563%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.40%)</title><rect x="14.2008%" y="677" width="0.3963%" height="15" fill="rgb(222,148,37)"/><text x="14.4508%" y="687.50"></text></g><g><title>__rdl_realloc (4 samples, 0.26%)</title><rect x="14.5971%" y="677" width="0.2642%" height="15" fill="rgb(234,67,33)"/><text x="14.8471%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.20%)</title><rect x="14.6631%" y="661" width="0.1982%" height="15" fill="rgb(247,98,35)"/><text x="14.9131%" y="671.50"></text></g><g><title>_int_free (4 samples, 0.26%)</title><rect x="14.9934%" y="677" width="0.2642%" height="15" fill="rgb(247,138,52)"/><text x="15.2434%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="15.9841%" y="645" width="0.1321%" height="15" fill="rgb(213,79,30)"/><text x="16.2341%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.59%)</title><rect x="15.5878%" y="661" width="0.5945%" height="15" fill="rgb(246,177,23)"/><text x="15.8378%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="16.1823%" y="661" width="0.2642%" height="15" fill="rgb(230,62,27)"/><text x="16.4323%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.26%)</title><rect x="16.1823%" y="645" width="0.2642%" height="15" fill="rgb(216,154,8)"/><text x="16.4323%" y="655.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.13%)</title><rect x="16.4465%" y="661" width="0.1321%" height="15" fill="rgb(244,35,45)"/><text x="16.6965%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (90 samples, 5.94%)</title><rect x="10.7662%" y="709" width="5.9445%" height="15" fill="rgb(251,115,12)"/><text x="11.0162%" y="719.50">&lt;sql_par..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (84 samples, 5.55%)</title><rect x="11.1625%" y="693" width="5.5482%" height="15" fill="rgb(240,54,50)"/><text x="11.4125%" y="703.50">sql_par..</text></g><g><title>core::fmt::write (21 samples, 1.39%)</title><rect x="15.3236%" y="677" width="1.3871%" height="15" fill="rgb(233,84,52)"/><text x="15.5736%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="16.7107%" y="709" width="0.1321%" height="15" fill="rgb(207,117,47)"/><text x="16.9607%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="16.7107%" y="693" width="0.1321%" height="15" fill="rgb(249,43,39)"/><text x="16.9607%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="16.7107%" y="677" width="0.1321%" height="15" fill="rgb(209,38,44)"/><text x="16.9607%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="16.7107%" y="661" width="0.1321%" height="15" fill="rgb(236,212,23)"/><text x="16.9607%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="16.7107%" y="645" width="0.1321%" height="15" fill="rgb(242,79,21)"/><text x="16.9607%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="16.9089%" y="693" width="0.1321%" height="15" fill="rgb(211,96,35)"/><text x="17.1589%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.13%)</title><rect x="16.9089%" y="677" width="0.1321%" height="15" fill="rgb(253,215,40)"/><text x="17.1589%" y="687.50"></text></g><g><title>core::fmt::write (116 samples, 7.66%)</title><rect x="9.6433%" y="741" width="7.6618%" height="15" fill="rgb(211,81,21)"/><text x="9.8933%" y="751.50">core::fmt:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (101 samples, 6.67%)</title><rect x="10.6341%" y="725" width="6.6711%" height="15" fill="rgb(208,190,38)"/><text x="10.8841%" y="735.50">&lt;sql_pars..</text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.40%)</title><rect x="16.9089%" y="709" width="0.3963%" height="15" fill="rgb(235,213,38)"/><text x="17.1589%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.26%)</title><rect x="17.0410%" y="693" width="0.2642%" height="15" fill="rgb(237,122,38)"/><text x="17.2910%" y="703.50"></text></g><g><title>__GI___libc_free (3 samples, 0.20%)</title><rect x="17.6354%" y="709" width="0.1982%" height="15" fill="rgb(244,218,35)"/><text x="17.8854%" y="719.50"></text></g><g><title>__rust_dealloc (2 samples, 0.13%)</title><rect x="17.8336%" y="709" width="0.1321%" height="15" fill="rgb(240,68,47)"/><text x="18.0836%" y="719.50"></text></g><g><title>_int_free (6 samples, 0.40%)</title><rect x="17.9657%" y="709" width="0.3963%" height="15" fill="rgb(210,16,53)"/><text x="18.2157%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (24 samples, 1.59%)</title><rect x="17.3052%" y="741" width="1.5852%" height="15" fill="rgb(235,124,12)"/><text x="17.5552%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (23 samples, 1.52%)</title><rect x="17.3712%" y="725" width="1.5192%" height="15" fill="rgb(224,169,11)"/><text x="17.6212%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.53%)</title><rect x="18.3620%" y="709" width="0.5284%" height="15" fill="rgb(250,166,2)"/><text x="18.6120%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="18.7583%" y="693" width="0.1321%" height="15" fill="rgb(242,216,29)"/><text x="19.0083%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="18.9564%" y="693" width="0.2642%" height="15" fill="rgb(230,116,27)"/><text x="19.2064%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.26%)</title><rect x="18.9564%" y="677" width="0.2642%" height="15" fill="rgb(228,99,48)"/><text x="19.2064%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.20%)</title><rect x="19.0225%" y="661" width="0.1982%" height="15" fill="rgb(253,11,6)"/><text x="19.2725%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="19.0885%" y="645" width="0.1321%" height="15" fill="rgb(247,143,39)"/><text x="19.3385%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="19.0885%" y="629" width="0.1321%" height="15" fill="rgb(236,97,10)"/><text x="19.3385%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="19.0885%" y="613" width="0.1321%" height="15" fill="rgb(233,208,19)"/><text x="19.3385%" y="623.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (7 samples, 0.46%)</title><rect x="18.8904%" y="741" width="0.4624%" height="15" fill="rgb(216,164,2)"/><text x="19.1404%" y="751.50"></text></g><g><title>core::fmt::write (6 samples, 0.40%)</title><rect x="18.9564%" y="725" width="0.3963%" height="15" fill="rgb(220,129,5)"/><text x="19.2064%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (6 samples, 0.40%)</title><rect x="18.9564%" y="709" width="0.3963%" height="15" fill="rgb(242,17,10)"/><text x="19.2064%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="19.4188%" y="693" width="0.2642%" height="15" fill="rgb(242,107,0)"/><text x="19.6688%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.26%)</title><rect x="19.4188%" y="677" width="0.2642%" height="15" fill="rgb(251,28,31)"/><text x="19.6688%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.26%)</title><rect x="19.4188%" y="661" width="0.2642%" height="15" fill="rgb(233,223,10)"/><text x="19.6688%" y="671.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.26%)</title><rect x="19.4188%" y="645" width="0.2642%" height="15" fill="rgb(215,21,27)"/><text x="19.6688%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.26%)</title><rect x="19.4188%" y="629" width="0.2642%" height="15" fill="rgb(232,23,21)"/><text x="19.6688%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.26%)</title><rect x="19.4188%" y="613" width="0.2642%" height="15" fill="rgb(244,5,23)"/><text x="19.6688%" y="623.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.20%)</title><rect x="19.4848%" y="597" width="0.1982%" height="15" fill="rgb(226,81,46)"/><text x="19.7348%" y="607.50"></text></g><g><title>core::fmt::write (5 samples, 0.33%)</title><rect x="19.4188%" y="725" width="0.3303%" height="15" fill="rgb(247,70,30)"/><text x="19.6688%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (5 samples, 0.33%)</title><rect x="19.4188%" y="709" width="0.3303%" height="15" fill="rgb(212,68,19)"/><text x="19.6688%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="19.7490%" y="709" width="0.1321%" height="15" fill="rgb(240,187,13)"/><text x="19.9990%" y="719.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.13%)</title><rect x="19.9472%" y="709" width="0.1321%" height="15" fill="rgb(223,113,26)"/><text x="20.1972%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.13%)</title><rect x="19.9472%" y="693" width="0.1321%" height="15" fill="rgb(206,192,2)"/><text x="20.1972%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="19.9472%" y="677" width="0.1321%" height="15" fill="rgb(241,108,4)"/><text x="20.1972%" y="687.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (191 samples, 12.62%)</title><rect x="7.7939%" y="773" width="12.6156%" height="15" fill="rgb(247,173,49)"/><text x="8.0439%" y="783.50">decor::query_transf..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (191 samples, 12.62%)</title><rect x="7.7939%" y="757" width="12.6156%" height="15" fill="rgb(224,114,35)"/><text x="8.0439%" y="767.50">decor::query_transf..</text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (15 samples, 0.99%)</title><rect x="19.4188%" y="741" width="0.9908%" height="15" fill="rgb(245,159,27)"/><text x="19.6688%" y="751.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (10 samples, 0.66%)</title><rect x="19.7490%" y="725" width="0.6605%" height="15" fill="rgb(245,172,44)"/><text x="19.9990%" y="735.50"></text></g><g><title>decor::helpers::str_subset_of_idents (4 samples, 0.26%)</title><rect x="20.1453%" y="709" width="0.2642%" height="15" fill="rgb(236,23,11)"/><text x="20.3953%" y="719.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.13%)</title><rect x="20.2774%" y="693" width="0.1321%" height="15" fill="rgb(205,117,38)"/><text x="20.5274%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.13%)</title><rect x="20.2774%" y="677" width="0.1321%" height="15" fill="rgb(237,72,25)"/><text x="20.5274%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (192 samples, 12.68%)</title><rect x="7.7939%" y="789" width="12.6816%" height="15" fill="rgb(244,70,9)"/><text x="8.0439%" y="799.50">&lt;decor::Shim as msq..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="20.6077%" y="789" width="0.2642%" height="15" fill="rgb(217,125,39)"/><text x="20.8577%" y="799.50"></text></g><g><title>__GI___libc_free (2 samples, 0.13%)</title><rect x="21.0040%" y="789" width="0.1321%" height="15" fill="rgb(235,36,10)"/><text x="21.2540%" y="799.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.13%)</title><rect x="21.9287%" y="309" width="0.1321%" height="15" fill="rgb(251,123,47)"/><text x="22.1787%" y="319.50"></text></g><g><title>sock_def_readable (3 samples, 0.20%)</title><rect x="22.1929%" y="85" width="0.1982%" height="15" fill="rgb(221,13,13)"/><text x="22.4429%" y="95.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.20%)</title><rect x="22.1929%" y="69" width="0.1982%" height="15" fill="rgb(238,131,9)"/><text x="22.4429%" y="79.50"></text></g><g><title>__wake_up_common (3 samples, 0.20%)</title><rect x="22.1929%" y="53" width="0.1982%" height="15" fill="rgb(211,50,8)"/><text x="22.4429%" y="63.50"></text></g><g><title>try_to_wake_up (3 samples, 0.20%)</title><rect x="22.1929%" y="37" width="0.1982%" height="15" fill="rgb(245,182,24)"/><text x="22.4429%" y="47.50"></text></g><g><title>__ip_queue_xmit (11 samples, 0.73%)</title><rect x="21.7305%" y="357" width="0.7266%" height="15" fill="rgb(242,14,37)"/><text x="21.9805%" y="367.50"></text></g><g><title>ip_output (9 samples, 0.59%)</title><rect x="21.8626%" y="341" width="0.5945%" height="15" fill="rgb(246,228,12)"/><text x="22.1126%" y="351.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.59%)</title><rect x="21.8626%" y="325" width="0.5945%" height="15" fill="rgb(213,55,15)"/><text x="22.1126%" y="335.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.40%)</title><rect x="22.0608%" y="309" width="0.3963%" height="15" fill="rgb(209,9,3)"/><text x="22.3108%" y="319.50"></text></g><g><title>do_softirq (6 samples, 0.40%)</title><rect x="22.0608%" y="293" width="0.3963%" height="15" fill="rgb(230,59,30)"/><text x="22.3108%" y="303.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.33%)</title><rect x="22.1268%" y="277" width="0.3303%" height="15" fill="rgb(209,121,21)"/><text x="22.3768%" y="287.50"></text></g><g><title>__do_softirq (5 samples, 0.33%)</title><rect x="22.1268%" y="261" width="0.3303%" height="15" fill="rgb(220,109,13)"/><text x="22.3768%" y="271.50"></text></g><g><title>net_rx_action (5 samples, 0.33%)</title><rect x="22.1268%" y="245" width="0.3303%" height="15" fill="rgb(232,18,1)"/><text x="22.3768%" y="255.50"></text></g><g><title>process_backlog (5 samples, 0.33%)</title><rect x="22.1268%" y="229" width="0.3303%" height="15" fill="rgb(215,41,42)"/><text x="22.3768%" y="239.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.33%)</title><rect x="22.1268%" y="213" width="0.3303%" height="15" fill="rgb(224,123,36)"/><text x="22.3768%" y="223.50"></text></g><g><title>ip_rcv (5 samples, 0.33%)</title><rect x="22.1268%" y="197" width="0.3303%" height="15" fill="rgb(240,125,3)"/><text x="22.3768%" y="207.50"></text></g><g><title>ip_local_deliver (5 samples, 0.33%)</title><rect x="22.1268%" y="181" width="0.3303%" height="15" fill="rgb(205,98,50)"/><text x="22.3768%" y="191.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.33%)</title><rect x="22.1268%" y="165" width="0.3303%" height="15" fill="rgb(205,185,37)"/><text x="22.3768%" y="175.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.33%)</title><rect x="22.1268%" y="149" width="0.3303%" height="15" fill="rgb(238,207,15)"/><text x="22.3768%" y="159.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.33%)</title><rect x="22.1268%" y="133" width="0.3303%" height="15" fill="rgb(213,199,42)"/><text x="22.3768%" y="143.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.26%)</title><rect x="22.1929%" y="117" width="0.2642%" height="15" fill="rgb(235,201,11)"/><text x="22.4429%" y="127.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.26%)</title><rect x="22.1929%" y="101" width="0.2642%" height="15" fill="rgb(207,46,11)"/><text x="22.4429%" y="111.50"></text></g><g><title>__tcp_transmit_skb (12 samples, 0.79%)</title><rect x="21.7305%" y="373" width="0.7926%" height="15" fill="rgb(241,35,35)"/><text x="21.9805%" y="383.50"></text></g><g><title>__tcp_push_pending_frames (13 samples, 0.86%)</title><rect x="21.7305%" y="405" width="0.8587%" height="15" fill="rgb(243,32,47)"/><text x="21.9805%" y="415.50"></text></g><g><title>tcp_write_xmit (13 samples, 0.86%)</title><rect x="21.7305%" y="389" width="0.8587%" height="15" fill="rgb(247,202,23)"/><text x="21.9805%" y="399.50"></text></g><g><title>do_syscall_64 (19 samples, 1.25%)</title><rect x="21.4663%" y="501" width="1.2550%" height="15" fill="rgb(219,102,11)"/><text x="21.7163%" y="511.50"></text></g><g><title>__x64_sys_sendto (19 samples, 1.25%)</title><rect x="21.4663%" y="485" width="1.2550%" height="15" fill="rgb(243,110,44)"/><text x="21.7163%" y="495.50"></text></g><g><title>__sys_sendto (18 samples, 1.19%)</title><rect x="21.5324%" y="469" width="1.1889%" height="15" fill="rgb(222,74,54)"/><text x="21.7824%" y="479.50"></text></g><g><title>sock_sendmsg (16 samples, 1.06%)</title><rect x="21.6645%" y="453" width="1.0568%" height="15" fill="rgb(216,99,12)"/><text x="21.9145%" y="463.50"></text></g><g><title>tcp_sendmsg (16 samples, 1.06%)</title><rect x="21.6645%" y="437" width="1.0568%" height="15" fill="rgb(226,22,26)"/><text x="21.9145%" y="447.50"></text></g><g><title>tcp_sendmsg_locked (16 samples, 1.06%)</title><rect x="21.6645%" y="421" width="1.0568%" height="15" fill="rgb(217,163,10)"/><text x="21.9145%" y="431.50"></text></g><g><title>__libc_start_main (22 samples, 1.45%)</title><rect x="21.3342%" y="789" width="1.4531%" height="15" fill="rgb(213,25,53)"/><text x="21.5842%" y="799.50"></text></g><g><title>main (22 samples, 1.45%)</title><rect x="21.3342%" y="773" width="1.4531%" height="15" fill="rgb(252,105,26)"/><text x="21.5842%" y="783.50"></text></g><g><title>std::rt::lang_start_internal (22 samples, 1.45%)</title><rect x="21.3342%" y="757" width="1.4531%" height="15" fill="rgb(220,39,43)"/><text x="21.5842%" y="767.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 1.45%)</title><rect x="21.3342%" y="741" width="1.4531%" height="15" fill="rgb(229,68,48)"/><text x="21.5842%" y="751.50"></text></g><g><title>std::panicking::try (22 samples, 1.45%)</title><rect x="21.3342%" y="725" width="1.4531%" height="15" fill="rgb(252,8,32)"/><text x="21.5842%" y="735.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 1.45%)</title><rect x="21.3342%" y="709" width="1.4531%" height="15" fill="rgb(223,20,43)"/><text x="21.5842%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (22 samples, 1.45%)</title><rect x="21.3342%" y="693" width="1.4531%" height="15" fill="rgb(229,81,49)"/><text x="21.5842%" y="703.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (22 samples, 1.45%)</title><rect x="21.3342%" y="677" width="1.4531%" height="15" fill="rgb(236,28,36)"/><text x="21.5842%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 1.45%)</title><rect x="21.3342%" y="661" width="1.4531%" height="15" fill="rgb(249,185,26)"/><text x="21.5842%" y="671.50"></text></g><g><title>lobsters::main (22 samples, 1.45%)</title><rect x="21.3342%" y="645" width="1.4531%" height="15" fill="rgb(249,174,33)"/><text x="21.5842%" y="655.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (22 samples, 1.45%)</title><rect x="21.3342%" y="629" width="1.4531%" height="15" fill="rgb(233,201,37)"/><text x="21.5842%" y="639.50"></text></g><g><title>mysql::conn::Conn::_query (22 samples, 1.45%)</title><rect x="21.3342%" y="613" width="1.4531%" height="15" fill="rgb(221,78,26)"/><text x="21.5842%" y="623.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (22 samples, 1.45%)</title><rect x="21.3342%" y="597" width="1.4531%" height="15" fill="rgb(250,127,30)"/><text x="21.5842%" y="607.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (21 samples, 1.39%)</title><rect x="21.4003%" y="581" width="1.3871%" height="15" fill="rgb(230,49,44)"/><text x="21.6503%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (21 samples, 1.39%)</title><rect x="21.4003%" y="565" width="1.3871%" height="15" fill="rgb(229,67,23)"/><text x="21.6503%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::write (21 samples, 1.39%)</title><rect x="21.4003%" y="549" width="1.3871%" height="15" fill="rgb(249,83,47)"/><text x="21.6503%" y="559.50"></text></g><g><title>__libc_send (21 samples, 1.39%)</title><rect x="21.4003%" y="533" width="1.3871%" height="15" fill="rgb(215,43,3)"/><text x="21.6503%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 1.32%)</title><rect x="21.4663%" y="517" width="1.3210%" height="15" fill="rgb(238,154,13)"/><text x="21.7163%" y="527.50"></text></g><g><title>__rdl_alloc (2 samples, 0.13%)</title><rect x="22.7873%" y="789" width="0.1321%" height="15" fill="rgb(219,56,2)"/><text x="23.0373%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.13%)</title><rect x="22.7873%" y="773" width="0.1321%" height="15" fill="rgb(233,0,4)"/><text x="23.0373%" y="783.50"></text></g><g><title>_int_free (7 samples, 0.46%)</title><rect x="22.9194%" y="789" width="0.4624%" height="15" fill="rgb(235,30,7)"/><text x="23.1694%" y="799.50"></text></g><g><title>_int_realloc (2 samples, 0.13%)</title><rect x="23.3818%" y="789" width="0.1321%" height="15" fill="rgb(250,79,13)"/><text x="23.6318%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="23.5139%" y="789" width="0.1321%" height="15" fill="rgb(211,146,34)"/><text x="23.7639%" y="799.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.20%)</title><rect x="23.6460%" y="789" width="0.1982%" height="15" fill="rgb(228,22,38)"/><text x="23.8960%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.26%)</title><rect x="23.8441%" y="789" width="0.2642%" height="15" fill="rgb(235,168,5)"/><text x="24.0941%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.33%)</title><rect x="24.3065%" y="789" width="0.3303%" height="15" fill="rgb(221,155,16)"/><text x="24.5565%" y="799.50"></text></g><g><title>__sk_dst_check (2 samples, 0.13%)</title><rect x="25.2312%" y="437" width="0.1321%" height="15" fill="rgb(215,215,53)"/><text x="25.4812%" y="447.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.13%)</title><rect x="25.4293%" y="405" width="0.1321%" height="15" fill="rgb(223,4,10)"/><text x="25.6793%" y="415.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.13%)</title><rect x="25.4293%" y="389" width="0.1321%" height="15" fill="rgb(234,103,6)"/><text x="25.6793%" y="399.50"></text></g><g><title>loopback_xmit (2 samples, 0.13%)</title><rect x="25.4293%" y="373" width="0.1321%" height="15" fill="rgb(227,97,0)"/><text x="25.6793%" y="383.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.20%)</title><rect x="26.0898%" y="213" width="0.1982%" height="15" fill="rgb(234,150,53)"/><text x="26.3398%" y="223.50"></text></g><g><title>enqueue_task (2 samples, 0.13%)</title><rect x="26.9485%" y="101" width="0.1321%" height="15" fill="rgb(228,201,54)"/><text x="27.1985%" y="111.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="26.9485%" y="85" width="0.1321%" height="15" fill="rgb(222,22,37)"/><text x="27.1985%" y="95.50"></text></g><g><title>psi_group_change (2 samples, 0.13%)</title><rect x="26.9485%" y="69" width="0.1321%" height="15" fill="rgb(237,53,32)"/><text x="27.1985%" y="79.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.26%)</title><rect x="27.0806%" y="101" width="0.2642%" height="15" fill="rgb(233,25,53)"/><text x="27.3306%" y="111.50"></text></g><g><title>sock_def_readable (13 samples, 0.86%)</title><rect x="26.5522%" y="181" width="0.8587%" height="15" fill="rgb(210,40,34)"/><text x="26.8022%" y="191.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.73%)</title><rect x="26.6843%" y="165" width="0.7266%" height="15" fill="rgb(241,220,44)"/><text x="26.9343%" y="175.50"></text></g><g><title>__wake_up_common (11 samples, 0.73%)</title><rect x="26.6843%" y="149" width="0.7266%" height="15" fill="rgb(235,28,35)"/><text x="26.9343%" y="159.50"></text></g><g><title>pollwake (10 samples, 0.66%)</title><rect x="26.7503%" y="133" width="0.6605%" height="15" fill="rgb(210,56,17)"/><text x="27.0003%" y="143.50"></text></g><g><title>try_to_wake_up (9 samples, 0.59%)</title><rect x="26.8164%" y="117" width="0.5945%" height="15" fill="rgb(224,130,29)"/><text x="27.0664%" y="127.50"></text></g><g><title>tcp_ack (3 samples, 0.20%)</title><rect x="27.4108%" y="181" width="0.1982%" height="15" fill="rgb(235,212,8)"/><text x="27.6608%" y="191.50"></text></g><g><title>tcp_check_space (2 samples, 0.13%)</title><rect x="27.6090%" y="181" width="0.1321%" height="15" fill="rgb(223,33,50)"/><text x="27.8590%" y="191.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.13%)</title><rect x="27.7411%" y="181" width="0.1321%" height="15" fill="rgb(219,149,13)"/><text x="27.9911%" y="191.50"></text></g><g><title>ktime_get (2 samples, 0.13%)</title><rect x="27.7411%" y="165" width="0.1321%" height="15" fill="rgb(250,156,29)"/><text x="27.9911%" y="175.50"></text></g><g><title>read_tsc (2 samples, 0.13%)</title><rect x="27.7411%" y="149" width="0.1321%" height="15" fill="rgb(216,193,19)"/><text x="27.9911%" y="159.50"></text></g><g><title>ip_local_deliver (31 samples, 2.05%)</title><rect x="25.9577%" y="277" width="2.0476%" height="15" fill="rgb(216,135,14)"/><text x="26.2077%" y="287.50">i..</text></g><g><title>ip_local_deliver_finish (31 samples, 2.05%)</title><rect x="25.9577%" y="261" width="2.0476%" height="15" fill="rgb(241,47,5)"/><text x="26.2077%" y="271.50">i..</text></g><g><title>ip_protocol_deliver_rcu (31 samples, 2.05%)</title><rect x="25.9577%" y="245" width="2.0476%" height="15" fill="rgb(233,42,35)"/><text x="26.2077%" y="255.50">i..</text></g><g><title>tcp_v4_rcv (30 samples, 1.98%)</title><rect x="26.0238%" y="229" width="1.9815%" height="15" fill="rgb(231,13,6)"/><text x="26.2738%" y="239.50">t..</text></g><g><title>tcp_v4_do_rcv (25 samples, 1.65%)</title><rect x="26.3540%" y="213" width="1.6513%" height="15" fill="rgb(207,181,40)"/><text x="26.6040%" y="223.50"></text></g><g><title>tcp_rcv_established (25 samples, 1.65%)</title><rect x="26.3540%" y="197" width="1.6513%" height="15" fill="rgb(254,173,49)"/><text x="26.6040%" y="207.50"></text></g><g><title>tcp_send_delayed_ack (2 samples, 0.13%)</title><rect x="27.8732%" y="181" width="0.1321%" height="15" fill="rgb(221,1,38)"/><text x="28.1232%" y="191.50"></text></g><g><title>__local_bh_enable_ip (39 samples, 2.58%)</title><rect x="25.5614%" y="405" width="2.5760%" height="15" fill="rgb(206,124,46)"/><text x="25.8114%" y="415.50">__..</text></g><g><title>do_softirq (39 samples, 2.58%)</title><rect x="25.5614%" y="389" width="2.5760%" height="15" fill="rgb(249,21,11)"/><text x="25.8114%" y="399.50">do..</text></g><g><title>do_softirq_own_stack (36 samples, 2.38%)</title><rect x="25.7596%" y="373" width="2.3778%" height="15" fill="rgb(222,201,40)"/><text x="26.0096%" y="383.50">do..</text></g><g><title>__do_softirq (36 samples, 2.38%)</title><rect x="25.7596%" y="357" width="2.3778%" height="15" fill="rgb(235,61,29)"/><text x="26.0096%" y="367.50">__..</text></g><g><title>net_rx_action (35 samples, 2.31%)</title><rect x="25.8256%" y="341" width="2.3118%" height="15" fill="rgb(219,207,3)"/><text x="26.0756%" y="351.50">n..</text></g><g><title>process_backlog (35 samples, 2.31%)</title><rect x="25.8256%" y="325" width="2.3118%" height="15" fill="rgb(222,56,46)"/><text x="26.0756%" y="335.50">p..</text></g><g><title>__netif_receive_skb_one_core (34 samples, 2.25%)</title><rect x="25.8917%" y="309" width="2.2457%" height="15" fill="rgb(239,76,54)"/><text x="26.1417%" y="319.50">_..</text></g><g><title>ip_rcv (33 samples, 2.18%)</title><rect x="25.9577%" y="293" width="2.1797%" height="15" fill="rgb(231,124,27)"/><text x="26.2077%" y="303.50">i..</text></g><g><title>ip_rcv_finish (2 samples, 0.13%)</title><rect x="28.0053%" y="277" width="0.1321%" height="15" fill="rgb(249,195,6)"/><text x="28.2553%" y="287.50"></text></g><g><title>__ip_queue_xmit (45 samples, 2.97%)</title><rect x="25.2312%" y="453" width="2.9723%" height="15" fill="rgb(237,174,47)"/><text x="25.4812%" y="463.50">__i..</text></g><g><title>ip_output (43 samples, 2.84%)</title><rect x="25.3633%" y="437" width="2.8402%" height="15" fill="rgb(206,201,31)"/><text x="25.6133%" y="447.50">ip..</text></g><g><title>ip_finish_output2 (42 samples, 2.77%)</title><rect x="25.4293%" y="421" width="2.7741%" height="15" fill="rgb(231,57,52)"/><text x="25.6793%" y="431.50">ip..</text></g><g><title>__tcp_transmit_skb (49 samples, 3.24%)</title><rect x="25.2312%" y="469" width="3.2365%" height="15" fill="rgb(248,177,22)"/><text x="25.4812%" y="479.50">__t..</text></g><g><title>__tcp_push_pending_frames (51 samples, 3.37%)</title><rect x="25.1651%" y="501" width="3.3686%" height="15" fill="rgb(215,211,37)"/><text x="25.4151%" y="511.50">__t..</text></g><g><title>tcp_write_xmit (51 samples, 3.37%)</title><rect x="25.1651%" y="485" width="3.3686%" height="15" fill="rgb(241,128,51)"/><text x="25.4151%" y="495.50">tcp..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.13%)</title><rect x="28.5337%" y="501" width="0.1321%" height="15" fill="rgb(227,165,31)"/><text x="28.7837%" y="511.50"></text></g><g><title>__alloc_skb (2 samples, 0.13%)</title><rect x="28.5337%" y="485" width="0.1321%" height="15" fill="rgb(228,167,24)"/><text x="28.7837%" y="495.50"></text></g><g><title>__x64_sys_sendto (61 samples, 4.03%)</title><rect x="24.7688%" y="581" width="4.0291%" height="15" fill="rgb(228,143,12)"/><text x="25.0188%" y="591.50">__x6..</text></g><g><title>__sys_sendto (61 samples, 4.03%)</title><rect x="24.7688%" y="565" width="4.0291%" height="15" fill="rgb(249,149,8)"/><text x="25.0188%" y="575.50">__sy..</text></g><g><title>sock_sendmsg (59 samples, 3.90%)</title><rect x="24.9009%" y="549" width="3.8970%" height="15" fill="rgb(243,35,44)"/><text x="25.1509%" y="559.50">sock..</text></g><g><title>tcp_sendmsg (59 samples, 3.90%)</title><rect x="24.9009%" y="533" width="3.8970%" height="15" fill="rgb(246,89,9)"/><text x="25.1509%" y="543.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (56 samples, 3.70%)</title><rect x="25.0991%" y="517" width="3.6988%" height="15" fill="rgb(233,213,13)"/><text x="25.3491%" y="527.50">tcp_..</text></g><g><title>do_syscall_64 (64 samples, 4.23%)</title><rect x="24.7688%" y="597" width="4.2272%" height="15" fill="rgb(233,141,41)"/><text x="25.0188%" y="607.50">do_sy..</text></g><g><title>syscall_trace_enter (3 samples, 0.20%)</title><rect x="28.7979%" y="581" width="0.1982%" height="15" fill="rgb(239,167,4)"/><text x="29.0479%" y="591.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.13%)</title><rect x="28.8639%" y="565" width="0.1321%" height="15" fill="rgb(209,217,16)"/><text x="29.1139%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (67 samples, 4.43%)</title><rect x="24.7028%" y="613" width="4.4254%" height="15" fill="rgb(219,88,35)"/><text x="24.9528%" y="623.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="28.9960%" y="597" width="0.1321%" height="15" fill="rgb(220,193,23)"/><text x="29.2460%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (68 samples, 4.49%)</title><rect x="24.7028%" y="725" width="4.4914%" height="15" fill="rgb(230,90,52)"/><text x="24.9528%" y="735.50">&lt;mysq..</text></g><g><title>mysql::conn::Conn::_query (68 samples, 4.49%)</title><rect x="24.7028%" y="709" width="4.4914%" height="15" fill="rgb(252,106,19)"/><text x="24.9528%" y="719.50">mysql..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (68 samples, 4.49%)</title><rect x="24.7028%" y="693" width="4.4914%" height="15" fill="rgb(206,74,20)"/><text x="24.9528%" y="703.50">mysql..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (68 samples, 4.49%)</title><rect x="24.7028%" y="677" width="4.4914%" height="15" fill="rgb(230,138,44)"/><text x="24.9528%" y="687.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (68 samples, 4.49%)</title><rect x="24.7028%" y="661" width="4.4914%" height="15" fill="rgb(235,182,43)"/><text x="24.9528%" y="671.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::write (68 samples, 4.49%)</title><rect x="24.7028%" y="645" width="4.4914%" height="15" fill="rgb(242,16,51)"/><text x="24.9528%" y="655.50">std::..</text></g><g><title>__libc_send (68 samples, 4.49%)</title><rect x="24.7028%" y="629" width="4.4914%" height="15" fill="rgb(248,9,4)"/><text x="24.9528%" y="639.50">__lib..</text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="29.1942%" y="661" width="0.1982%" height="15" fill="rgb(210,31,22)"/><text x="29.4442%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="29.1942%" y="645" width="0.1982%" height="15" fill="rgb(239,54,39)"/><text x="29.4442%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.20%)</title><rect x="29.1942%" y="629" width="0.1982%" height="15" fill="rgb(230,99,41)"/><text x="29.4442%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.13%)</title><rect x="29.2602%" y="613" width="0.1321%" height="15" fill="rgb(253,106,12)"/><text x="29.5102%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="29.2602%" y="597" width="0.1321%" height="15" fill="rgb(213,46,41)"/><text x="29.5102%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="29.2602%" y="581" width="0.1321%" height="15" fill="rgb(215,133,35)"/><text x="29.5102%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="29.2602%" y="565" width="0.1321%" height="15" fill="rgb(213,28,5)"/><text x="29.5102%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="29.3923%" y="661" width="0.1321%" height="15" fill="rgb(215,77,49)"/><text x="29.6423%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.13%)</title><rect x="29.3923%" y="645" width="0.1321%" height="15" fill="rgb(248,100,22)"/><text x="29.6423%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.13%)</title><rect x="29.3923%" y="629" width="0.1321%" height="15" fill="rgb(208,67,9)"/><text x="29.6423%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="29.3923%" y="613" width="0.1321%" height="15" fill="rgb(219,133,21)"/><text x="29.6423%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="29.3923%" y="597" width="0.1321%" height="15" fill="rgb(246,46,29)"/><text x="29.6423%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="29.3923%" y="581" width="0.1321%" height="15" fill="rgb(246,185,52)"/><text x="29.6423%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.66%)</title><rect x="29.1942%" y="677" width="0.6605%" height="15" fill="rgb(252,136,11)"/><text x="29.4442%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.33%)</title><rect x="29.5244%" y="661" width="0.3303%" height="15" fill="rgb(219,138,53)"/><text x="29.7744%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 0.92%)</title><rect x="29.1942%" y="693" width="0.9247%" height="15" fill="rgb(211,51,23)"/><text x="29.4442%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.26%)</title><rect x="29.8547%" y="677" width="0.2642%" height="15" fill="rgb(247,221,28)"/><text x="30.1047%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="29.9868%" y="661" width="0.1321%" height="15" fill="rgb(251,222,45)"/><text x="30.2368%" y="671.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.13%)</title><rect x="29.9868%" y="645" width="0.1321%" height="15" fill="rgb(217,162,53)"/><text x="30.2368%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="30.1189%" y="661" width="0.1321%" height="15" fill="rgb(229,93,14)"/><text x="30.3689%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="30.1189%" y="693" width="0.1982%" height="15" fill="rgb(209,67,49)"/><text x="30.3689%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="30.1189%" y="677" width="0.1982%" height="15" fill="rgb(213,87,29)"/><text x="30.3689%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="30.3831%" y="661" width="0.1321%" height="15" fill="rgb(205,151,52)"/><text x="30.6331%" y="671.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="30.3831%" y="645" width="0.1321%" height="15" fill="rgb(253,215,39)"/><text x="30.6331%" y="655.50"></text></g><g><title>core::fmt::write (23 samples, 1.52%)</title><rect x="29.1942%" y="725" width="1.5192%" height="15" fill="rgb(221,220,41)"/><text x="29.4442%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (23 samples, 1.52%)</title><rect x="29.1942%" y="709" width="1.5192%" height="15" fill="rgb(218,133,21)"/><text x="29.4442%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.40%)</title><rect x="30.3170%" y="693" width="0.3963%" height="15" fill="rgb(221,193,43)"/><text x="30.5670%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.33%)</title><rect x="30.3831%" y="677" width="0.3303%" height="15" fill="rgb(240,128,52)"/><text x="30.6331%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.20%)</title><rect x="30.5152%" y="661" width="0.1982%" height="15" fill="rgb(253,114,12)"/><text x="30.7652%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.13%)</title><rect x="30.5812%" y="645" width="0.1321%" height="15" fill="rgb(215,223,47)"/><text x="30.8312%" y="655.50"></text></g><g><title>decor::helpers::answer_rows (3 samples, 0.20%)</title><rect x="30.7133%" y="725" width="0.1982%" height="15" fill="rgb(248,225,23)"/><text x="30.9633%" y="735.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.13%)</title><rect x="30.9115%" y="725" width="0.1321%" height="15" fill="rgb(250,108,0)"/><text x="31.1615%" y="735.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.13%)</title><rect x="30.9115%" y="709" width="0.1321%" height="15" fill="rgb(228,208,7)"/><text x="31.1615%" y="719.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.13%)</title><rect x="30.9115%" y="693" width="0.1321%" height="15" fill="rgb(244,45,10)"/><text x="31.1615%" y="703.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.13%)</title><rect x="31.6380%" y="389" width="0.1321%" height="15" fill="rgb(207,125,25)"/><text x="31.8880%" y="399.50"></text></g><g><title>enqueue_task (5 samples, 0.33%)</title><rect x="32.4306%" y="85" width="0.3303%" height="15" fill="rgb(210,195,18)"/><text x="32.6806%" y="95.50"></text></g><g><title>psi_task_change (4 samples, 0.26%)</title><rect x="32.4967%" y="69" width="0.2642%" height="15" fill="rgb(249,80,12)"/><text x="32.7467%" y="79.50"></text></g><g><title>account_entity_enqueue (2 samples, 0.13%)</title><rect x="32.7609%" y="53" width="0.1321%" height="15" fill="rgb(221,65,9)"/><text x="33.0109%" y="63.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.40%)</title><rect x="32.7609%" y="85" width="0.3963%" height="15" fill="rgb(235,49,36)"/><text x="33.0109%" y="95.50"></text></g><g><title>enqueue_entity (6 samples, 0.40%)</title><rect x="32.7609%" y="69" width="0.3963%" height="15" fill="rgb(225,32,20)"/><text x="33.0109%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="33.0251%" y="53" width="0.1321%" height="15" fill="rgb(215,141,46)"/><text x="33.2751%" y="63.50"></text></g><g><title>sock_def_readable (15 samples, 0.99%)</title><rect x="32.2325%" y="165" width="0.9908%" height="15" fill="rgb(250,160,47)"/><text x="32.4825%" y="175.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.99%)</title><rect x="32.2325%" y="149" width="0.9908%" height="15" fill="rgb(216,222,40)"/><text x="32.4825%" y="159.50"></text></g><g><title>__wake_up_common (15 samples, 0.99%)</title><rect x="32.2325%" y="133" width="0.9908%" height="15" fill="rgb(234,217,39)"/><text x="32.4825%" y="143.50"></text></g><g><title>pollwake (15 samples, 0.99%)</title><rect x="32.2325%" y="117" width="0.9908%" height="15" fill="rgb(207,178,40)"/><text x="32.4825%" y="127.50"></text></g><g><title>try_to_wake_up (15 samples, 0.99%)</title><rect x="32.2325%" y="101" width="0.9908%" height="15" fill="rgb(221,136,13)"/><text x="32.4825%" y="111.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="33.2893%" y="149" width="0.1321%" height="15" fill="rgb(249,199,10)"/><text x="33.5393%" y="159.50"></text></g><g><title>kfree (2 samples, 0.13%)</title><rect x="33.2893%" y="133" width="0.1321%" height="15" fill="rgb(249,222,13)"/><text x="33.5393%" y="143.50"></text></g><g><title>tcp_ack (5 samples, 0.33%)</title><rect x="33.2232%" y="165" width="0.3303%" height="15" fill="rgb(244,185,38)"/><text x="33.4732%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 1.52%)</title><rect x="32.2325%" y="197" width="1.5192%" height="15" fill="rgb(236,202,9)"/><text x="32.4825%" y="207.50"></text></g><g><title>tcp_rcv_established (23 samples, 1.52%)</title><rect x="32.2325%" y="181" width="1.5192%" height="15" fill="rgb(250,229,37)"/><text x="32.4825%" y="191.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.13%)</title><rect x="33.6196%" y="165" width="0.1321%" height="15" fill="rgb(206,174,23)"/><text x="33.8696%" y="175.50"></text></g><g><title>__tcp_transmit_skb (37 samples, 2.44%)</title><rect x="31.3738%" y="453" width="2.4439%" height="15" fill="rgb(211,33,43)"/><text x="31.6238%" y="463.50">__..</text></g><g><title>__ip_queue_xmit (36 samples, 2.38%)</title><rect x="31.4399%" y="437" width="2.3778%" height="15" fill="rgb(245,58,50)"/><text x="31.6899%" y="447.50">__..</text></g><g><title>ip_output (34 samples, 2.25%)</title><rect x="31.5720%" y="421" width="2.2457%" height="15" fill="rgb(244,68,36)"/><text x="31.8220%" y="431.50">i..</text></g><g><title>ip_finish_output2 (34 samples, 2.25%)</title><rect x="31.5720%" y="405" width="2.2457%" height="15" fill="rgb(232,229,15)"/><text x="31.8220%" y="415.50">i..</text></g><g><title>__local_bh_enable_ip (31 samples, 2.05%)</title><rect x="31.7701%" y="389" width="2.0476%" height="15" fill="rgb(254,30,23)"/><text x="32.0201%" y="399.50">_..</text></g><g><title>do_softirq (30 samples, 1.98%)</title><rect x="31.8362%" y="373" width="1.9815%" height="15" fill="rgb(235,160,14)"/><text x="32.0862%" y="383.50">d..</text></g><g><title>do_softirq_own_stack (30 samples, 1.98%)</title><rect x="31.8362%" y="357" width="1.9815%" height="15" fill="rgb(212,155,44)"/><text x="32.0862%" y="367.50">d..</text></g><g><title>__do_softirq (29 samples, 1.92%)</title><rect x="31.9022%" y="341" width="1.9155%" height="15" fill="rgb(226,2,50)"/><text x="32.1522%" y="351.50">_..</text></g><g><title>net_rx_action (29 samples, 1.92%)</title><rect x="31.9022%" y="325" width="1.9155%" height="15" fill="rgb(234,177,6)"/><text x="32.1522%" y="335.50">n..</text></g><g><title>process_backlog (29 samples, 1.92%)</title><rect x="31.9022%" y="309" width="1.9155%" height="15" fill="rgb(217,24,9)"/><text x="32.1522%" y="319.50">p..</text></g><g><title>__netif_receive_skb_one_core (29 samples, 1.92%)</title><rect x="31.9022%" y="293" width="1.9155%" height="15" fill="rgb(220,13,46)"/><text x="32.1522%" y="303.50">_..</text></g><g><title>ip_rcv (28 samples, 1.85%)</title><rect x="31.9683%" y="277" width="1.8494%" height="15" fill="rgb(239,221,27)"/><text x="32.2183%" y="287.50">i..</text></g><g><title>ip_local_deliver (28 samples, 1.85%)</title><rect x="31.9683%" y="261" width="1.8494%" height="15" fill="rgb(222,198,25)"/><text x="32.2183%" y="271.50">i..</text></g><g><title>ip_local_deliver_finish (28 samples, 1.85%)</title><rect x="31.9683%" y="245" width="1.8494%" height="15" fill="rgb(211,99,13)"/><text x="32.2183%" y="255.50">i..</text></g><g><title>ip_protocol_deliver_rcu (27 samples, 1.78%)</title><rect x="32.0343%" y="229" width="1.7834%" height="15" fill="rgb(232,111,31)"/><text x="32.2843%" y="239.50">i..</text></g><g><title>tcp_v4_rcv (27 samples, 1.78%)</title><rect x="32.0343%" y="213" width="1.7834%" height="15" fill="rgb(245,82,37)"/><text x="32.2843%" y="223.50">t..</text></g><g><title>__tcp_push_pending_frames (38 samples, 2.51%)</title><rect x="31.3738%" y="485" width="2.5099%" height="15" fill="rgb(227,149,46)"/><text x="31.6238%" y="495.50">__..</text></g><g><title>tcp_write_xmit (38 samples, 2.51%)</title><rect x="31.3738%" y="469" width="2.5099%" height="15" fill="rgb(218,36,50)"/><text x="31.6238%" y="479.50">tc..</text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.13%)</title><rect x="33.9498%" y="453" width="0.1321%" height="15" fill="rgb(226,80,48)"/><text x="34.1998%" y="463.50"></text></g><g><title>sk_stream_alloc_skb (3 samples, 0.20%)</title><rect x="33.9498%" y="485" width="0.1982%" height="15" fill="rgb(238,224,15)"/><text x="34.1998%" y="495.50"></text></g><g><title>__alloc_skb (3 samples, 0.20%)</title><rect x="33.9498%" y="469" width="0.1982%" height="15" fill="rgb(241,136,10)"/><text x="34.1998%" y="479.50"></text></g><g><title>sock_sendmsg (44 samples, 2.91%)</title><rect x="31.3078%" y="533" width="2.9062%" height="15" fill="rgb(208,32,45)"/><text x="31.5578%" y="543.50">so..</text></g><g><title>tcp_sendmsg (44 samples, 2.91%)</title><rect x="31.3078%" y="517" width="2.9062%" height="15" fill="rgb(207,135,9)"/><text x="31.5578%" y="527.50">tc..</text></g><g><title>tcp_sendmsg_locked (43 samples, 2.84%)</title><rect x="31.3738%" y="501" width="2.8402%" height="15" fill="rgb(206,86,44)"/><text x="31.6238%" y="511.50">tc..</text></g><g><title>__x64_sys_sendto (46 samples, 3.04%)</title><rect x="31.2417%" y="565" width="3.0383%" height="15" fill="rgb(245,177,15)"/><text x="31.4917%" y="575.50">__x..</text></g><g><title>__sys_sendto (45 samples, 2.97%)</title><rect x="31.3078%" y="549" width="2.9723%" height="15" fill="rgb(206,64,50)"/><text x="31.5578%" y="559.50">__s..</text></g><g><title>do_syscall_64 (47 samples, 3.10%)</title><rect x="31.2417%" y="581" width="3.1044%" height="15" fill="rgb(234,36,40)"/><text x="31.4917%" y="591.50">do_..</text></g><g><title>entry_SYSCALL_64 (50 samples, 3.30%)</title><rect x="31.1757%" y="597" width="3.3025%" height="15" fill="rgb(213,64,8)"/><text x="31.4257%" y="607.50">ent..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="34.3461%" y="581" width="0.1321%" height="15" fill="rgb(210,75,36)"/><text x="34.5961%" y="591.50"></text></g><g><title>decor::Shim::run_on_tcp (149 samples, 9.84%)</title><rect x="24.7028%" y="789" width="9.8415%" height="15" fill="rgb(229,88,21)"/><text x="24.9528%" y="799.50">decor::Shim::r..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (149 samples, 9.84%)</title><rect x="24.7028%" y="773" width="9.8415%" height="15" fill="rgb(252,204,47)"/><text x="24.9528%" y="783.50">msql_srv::Mysq..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (149 samples, 9.84%)</title><rect x="24.7028%" y="757" width="9.8415%" height="15" fill="rgb(208,77,27)"/><text x="24.9528%" y="767.50">&lt;decor::Shim a..</text></g><g><title>decor::query_transformer::QueryTransformer::query (149 samples, 9.84%)</title><rect x="24.7028%" y="741" width="9.8415%" height="15" fill="rgb(221,76,26)"/><text x="24.9528%" y="751.50">decor::query_t..</text></g><g><title>mysql::conn::transaction::Transaction::commit (53 samples, 3.50%)</title><rect x="31.0436%" y="725" width="3.5007%" height="15" fill="rgb(225,139,18)"/><text x="31.2936%" y="735.50">mys..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (53 samples, 3.50%)</title><rect x="31.0436%" y="709" width="3.5007%" height="15" fill="rgb(230,137,11)"/><text x="31.2936%" y="719.50">mys..</text></g><g><title>mysql::conn::Conn::_query (53 samples, 3.50%)</title><rect x="31.0436%" y="693" width="3.5007%" height="15" fill="rgb(212,28,1)"/><text x="31.2936%" y="703.50">mys..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (53 samples, 3.50%)</title><rect x="31.0436%" y="677" width="3.5007%" height="15" fill="rgb(248,164,17)"/><text x="31.2936%" y="687.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (52 samples, 3.43%)</title><rect x="31.1096%" y="661" width="3.4346%" height="15" fill="rgb(222,171,42)"/><text x="31.3596%" y="671.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (52 samples, 3.43%)</title><rect x="31.1096%" y="645" width="3.4346%" height="15" fill="rgb(243,84,45)"/><text x="31.3596%" y="655.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (52 samples, 3.43%)</title><rect x="31.1096%" y="629" width="3.4346%" height="15" fill="rgb(252,49,23)"/><text x="31.3596%" y="639.50">std..</text></g><g><title>__libc_send (52 samples, 3.43%)</title><rect x="31.1096%" y="613" width="3.4346%" height="15" fill="rgb(215,19,7)"/><text x="31.3596%" y="623.50">__l..</text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="34.7424%" y="725" width="0.1321%" height="15" fill="rgb(238,81,41)"/><text x="34.9924%" y="735.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (5 samples, 0.33%)</title><rect x="34.6103%" y="789" width="0.3303%" height="15" fill="rgb(210,199,37)"/><text x="34.8603%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (5 samples, 0.33%)</title><rect x="34.6103%" y="773" width="0.3303%" height="15" fill="rgb(244,192,49)"/><text x="34.8603%" y="783.50"></text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (5 samples, 0.33%)</title><rect x="34.6103%" y="757" width="0.3303%" height="15" fill="rgb(226,211,11)"/><text x="34.8603%" y="767.50"></text></g><g><title>decor::qtcache::QueryCache::cache_uid2gids_for_uids (5 samples, 0.33%)</title><rect x="34.6103%" y="741" width="0.3303%" height="15" fill="rgb(236,162,54)"/><text x="34.8603%" y="751.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.53%)</title><rect x="35.2048%" y="677" width="0.5284%" height="15" fill="rgb(220,229,9)"/><text x="35.4548%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (7 samples, 0.46%)</title><rect x="35.2708%" y="661" width="0.4624%" height="15" fill="rgb(250,87,22)"/><text x="35.5208%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="35.7332%" y="677" width="0.1982%" height="15" fill="rgb(239,43,17)"/><text x="35.9832%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.79%)</title><rect x="35.2048%" y="693" width="0.7926%" height="15" fill="rgb(231,177,25)"/><text x="35.4548%" y="703.50"></text></g><g><title>_int_free (3 samples, 0.20%)</title><rect x="35.9974%" y="693" width="0.1982%" height="15" fill="rgb(219,179,1)"/><text x="36.2474%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.13%)</title><rect x="36.1955%" y="661" width="0.1321%" height="15" fill="rgb(238,219,53)"/><text x="36.4455%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.13%)</title><rect x="36.1955%" y="645" width="0.1321%" height="15" fill="rgb(232,167,36)"/><text x="36.4455%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.13%)</title><rect x="36.1955%" y="629" width="0.1321%" height="15" fill="rgb(244,19,51)"/><text x="36.4455%" y="639.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (21 samples, 1.39%)</title><rect x="35.0066%" y="773" width="1.3871%" height="15" fill="rgb(224,6,22)"/><text x="35.2566%" y="783.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (21 samples, 1.39%)</title><rect x="35.0066%" y="757" width="1.3871%" height="15" fill="rgb(224,145,5)"/><text x="35.2566%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (21 samples, 1.39%)</title><rect x="35.0066%" y="741" width="1.3871%" height="15" fill="rgb(234,130,49)"/><text x="35.2566%" y="751.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (20 samples, 1.32%)</title><rect x="35.0727%" y="725" width="1.3210%" height="15" fill="rgb(254,6,2)"/><text x="35.3227%" y="735.50"></text></g><g><title>decor::helpers::str_subset_of_idents (20 samples, 1.32%)</title><rect x="35.0727%" y="709" width="1.3210%" height="15" fill="rgb(208,96,46)"/><text x="35.3227%" y="719.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.20%)</title><rect x="36.1955%" y="693" width="0.1982%" height="15" fill="rgb(239,3,39)"/><text x="36.4455%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (3 samples, 0.20%)</title><rect x="36.1955%" y="677" width="0.1982%" height="15" fill="rgb(233,210,1)"/><text x="36.4455%" y="687.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (24 samples, 1.59%)</title><rect x="34.9406%" y="789" width="1.5852%" height="15" fill="rgb(244,137,37)"/><text x="35.1906%" y="799.50"></text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (2 samples, 0.13%)</title><rect x="36.3937%" y="773" width="0.1321%" height="15" fill="rgb(240,136,2)"/><text x="36.6437%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="36.3937%" y="757" width="0.1321%" height="15" fill="rgb(239,18,37)"/><text x="36.6437%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.33%)</title><rect x="36.5258%" y="757" width="0.3303%" height="15" fill="rgb(218,185,22)"/><text x="36.7758%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.33%)</title><rect x="36.5258%" y="741" width="0.3303%" height="15" fill="rgb(225,218,4)"/><text x="36.7758%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.33%)</title><rect x="36.5258%" y="725" width="0.3303%" height="15" fill="rgb(230,182,32)"/><text x="36.7758%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.33%)</title><rect x="36.5258%" y="709" width="0.3303%" height="15" fill="rgb(242,56,43)"/><text x="36.7758%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.33%)</title><rect x="36.5258%" y="693" width="0.3303%" height="15" fill="rgb(233,99,24)"/><text x="36.7758%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.33%)</title><rect x="36.5258%" y="677" width="0.3303%" height="15" fill="rgb(234,209,42)"/><text x="36.7758%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.33%)</title><rect x="36.5258%" y="661" width="0.3303%" height="15" fill="rgb(227,7,12)"/><text x="36.7758%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.33%)</title><rect x="36.5258%" y="645" width="0.3303%" height="15" fill="rgb(245,203,43)"/><text x="36.7758%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.33%)</title><rect x="36.5258%" y="629" width="0.3303%" height="15" fill="rgb(238,205,33)"/><text x="36.7758%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.33%)</title><rect x="36.5258%" y="613" width="0.3303%" height="15" fill="rgb(231,56,7)"/><text x="36.7758%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.33%)</title><rect x="36.5258%" y="597" width="0.3303%" height="15" fill="rgb(244,186,29)"/><text x="36.7758%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.33%)</title><rect x="36.5258%" y="581" width="0.3303%" height="15" fill="rgb(234,111,31)"/><text x="36.7758%" y="591.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.33%)</title><rect x="36.5258%" y="565" width="0.3303%" height="15" fill="rgb(241,149,10)"/><text x="36.7758%" y="575.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.33%)</title><rect x="36.5258%" y="549" width="0.3303%" height="15" fill="rgb(249,206,44)"/><text x="36.7758%" y="559.50"></text></g><g><title>_int_malloc (4 samples, 0.26%)</title><rect x="36.5918%" y="533" width="0.2642%" height="15" fill="rgb(251,153,30)"/><text x="36.8418%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="36.8560%" y="757" width="0.1321%" height="15" fill="rgb(239,152,38)"/><text x="37.1060%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="36.8560%" y="741" width="0.1321%" height="15" fill="rgb(249,139,47)"/><text x="37.1060%" y="751.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.13%)</title><rect x="37.1863%" y="581" width="0.1321%" height="15" fill="rgb(244,64,35)"/><text x="37.4363%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.13%)</title><rect x="37.1863%" y="565" width="0.1321%" height="15" fill="rgb(216,46,15)"/><text x="37.4363%" y="575.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.13%)</title><rect x="37.1863%" y="549" width="0.1321%" height="15" fill="rgb(250,74,19)"/><text x="37.4363%" y="559.50"></text></g><g><title>prep_new_page (2 samples, 0.13%)</title><rect x="37.1863%" y="533" width="0.1321%" height="15" fill="rgb(249,42,33)"/><text x="37.4363%" y="543.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.13%)</title><rect x="37.1863%" y="517" width="0.1321%" height="15" fill="rgb(242,149,17)"/><text x="37.4363%" y="527.50"></text></g><g><title>clear_page_erms (2 samples, 0.13%)</title><rect x="37.1863%" y="501" width="0.1321%" height="15" fill="rgb(244,29,21)"/><text x="37.4363%" y="511.50"></text></g><g><title>page_fault (3 samples, 0.20%)</title><rect x="37.1863%" y="645" width="0.1982%" height="15" fill="rgb(220,130,37)"/><text x="37.4363%" y="655.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.20%)</title><rect x="37.1863%" y="629" width="0.1982%" height="15" fill="rgb(211,67,2)"/><text x="37.4363%" y="639.50"></text></g><g><title>handle_mm_fault (3 samples, 0.20%)</title><rect x="37.1863%" y="613" width="0.1982%" height="15" fill="rgb(235,68,52)"/><text x="37.4363%" y="623.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.20%)</title><rect x="37.1863%" y="597" width="0.1982%" height="15" fill="rgb(246,142,3)"/><text x="37.4363%" y="607.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.40%)</title><rect x="37.0542%" y="693" width="0.3963%" height="15" fill="rgb(241,25,7)"/><text x="37.3042%" y="703.50"></text></g><g><title>_int_malloc (6 samples, 0.40%)</title><rect x="37.0542%" y="677" width="0.3963%" height="15" fill="rgb(242,119,39)"/><text x="37.3042%" y="687.50"></text></g><g><title>sysmalloc (6 samples, 0.40%)</title><rect x="37.0542%" y="661" width="0.3963%" height="15" fill="rgb(241,98,45)"/><text x="37.3042%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (8 samples, 0.53%)</title><rect x="36.9881%" y="757" width="0.5284%" height="15" fill="rgb(254,28,30)"/><text x="37.2381%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (8 samples, 0.53%)</title><rect x="36.9881%" y="741" width="0.5284%" height="15" fill="rgb(241,142,54)"/><text x="37.2381%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.53%)</title><rect x="36.9881%" y="725" width="0.5284%" height="15" fill="rgb(222,85,15)"/><text x="37.2381%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.53%)</title><rect x="36.9881%" y="709" width="0.5284%" height="15" fill="rgb(210,85,47)"/><text x="37.2381%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.33%)</title><rect x="37.5165%" y="677" width="0.3303%" height="15" fill="rgb(224,206,25)"/><text x="37.7665%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.33%)</title><rect x="37.5165%" y="661" width="0.3303%" height="15" fill="rgb(243,201,19)"/><text x="37.7665%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.33%)</title><rect x="37.5165%" y="645" width="0.3303%" height="15" fill="rgb(236,59,4)"/><text x="37.7665%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="37.7147%" y="629" width="0.1321%" height="15" fill="rgb(254,179,45)"/><text x="37.9647%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.40%)</title><rect x="37.5165%" y="693" width="0.3963%" height="15" fill="rgb(226,14,10)"/><text x="37.7665%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="37.9128%" y="693" width="0.1321%" height="15" fill="rgb(244,27,41)"/><text x="38.1628%" y="703.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.13%)</title><rect x="37.9128%" y="677" width="0.1321%" height="15" fill="rgb(235,35,32)"/><text x="38.1628%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.13%)</title><rect x="37.9128%" y="661" width="0.1321%" height="15" fill="rgb(218,68,31)"/><text x="38.1628%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 0.66%)</title><rect x="37.5165%" y="709" width="0.6605%" height="15" fill="rgb(207,120,37)"/><text x="37.7665%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="38.0449%" y="693" width="0.1321%" height="15" fill="rgb(227,98,0)"/><text x="38.2949%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="38.0449%" y="677" width="0.1321%" height="15" fill="rgb(207,7,3)"/><text x="38.2949%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="38.1770%" y="693" width="0.1982%" height="15" fill="rgb(206,98,19)"/><text x="38.4270%" y="703.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.20%)</title><rect x="38.1770%" y="677" width="0.1982%" height="15" fill="rgb(217,5,26)"/><text x="38.4270%" y="687.50"></text></g><g><title>_int_realloc (3 samples, 0.20%)</title><rect x="38.1770%" y="661" width="0.1982%" height="15" fill="rgb(235,190,38)"/><text x="38.4270%" y="671.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="38.2431%" y="645" width="0.1321%" height="15" fill="rgb(247,86,24)"/><text x="38.4931%" y="655.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.40%)</title><rect x="38.4412%" y="645" width="0.3963%" height="15" fill="rgb(205,101,16)"/><text x="38.6912%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.66%)</title><rect x="38.3752%" y="677" width="0.6605%" height="15" fill="rgb(246,168,33)"/><text x="38.6252%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.66%)</title><rect x="38.3752%" y="661" width="0.6605%" height="15" fill="rgb(231,114,1)"/><text x="38.6252%" y="671.50"></text></g><g><title>__rust_alloc (2 samples, 0.13%)</title><rect x="38.9036%" y="645" width="0.1321%" height="15" fill="rgb(207,184,53)"/><text x="39.1536%" y="655.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (25 samples, 1.65%)</title><rect x="37.5165%" y="725" width="1.6513%" height="15" fill="rgb(224,95,51)"/><text x="37.7665%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (15 samples, 0.99%)</title><rect x="38.1770%" y="709" width="0.9908%" height="15" fill="rgb(212,188,45)"/><text x="38.4270%" y="719.50"></text></g><g><title>core::fmt::write (12 samples, 0.79%)</title><rect x="38.3752%" y="693" width="0.7926%" height="15" fill="rgb(223,154,38)"/><text x="38.6252%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.13%)</title><rect x="39.0357%" y="677" width="0.1321%" height="15" fill="rgb(251,22,52)"/><text x="39.2857%" y="687.50"></text></g><g><title>core::fmt::write (26 samples, 1.72%)</title><rect x="37.5165%" y="757" width="1.7173%" height="15" fill="rgb(229,209,22)"/><text x="37.7665%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (26 samples, 1.72%)</title><rect x="37.5165%" y="741" width="1.7173%" height="15" fill="rgb(234,138,34)"/><text x="37.7665%" y="751.50"></text></g><g><title>decor::helpers::get_user_cols_of_datatable (3 samples, 0.20%)</title><rect x="39.2338%" y="757" width="0.1982%" height="15" fill="rgb(212,95,11)"/><text x="39.4838%" y="767.50"></text></g><g><title>core::fmt::write (3 samples, 0.20%)</title><rect x="39.2338%" y="741" width="0.1982%" height="15" fill="rgb(240,179,47)"/><text x="39.4838%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::ObjectName as core::fmt::Display&gt;::fmt (3 samples, 0.20%)</title><rect x="39.2338%" y="725" width="0.1982%" height="15" fill="rgb(240,163,11)"/><text x="39.4838%" y="735.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.20%)</title><rect x="39.2338%" y="709" width="0.1982%" height="15" fill="rgb(236,37,12)"/><text x="39.4838%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="39.2338%" y="693" width="0.1982%" height="15" fill="rgb(232,164,16)"/><text x="39.4838%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.20%)</title><rect x="39.2338%" y="677" width="0.1982%" height="15" fill="rgb(244,205,15)"/><text x="39.4838%" y="687.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="39.2338%" y="661" width="0.1982%" height="15" fill="rgb(223,117,47)"/><text x="39.4838%" y="671.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="39.4320%" y="725" width="0.1321%" height="15" fill="rgb(244,107,35)"/><text x="39.6820%" y="735.50"></text></g><g><title>decor::helpers::str_ident_match (3 samples, 0.20%)</title><rect x="39.4320%" y="757" width="0.1982%" height="15" fill="rgb(205,140,8)"/><text x="39.6820%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.20%)</title><rect x="39.4320%" y="741" width="0.1982%" height="15" fill="rgb(228,84,46)"/><text x="39.6820%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="39.6301%" y="741" width="0.2642%" height="15" fill="rgb(254,188,9)"/><text x="39.8801%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="39.6301%" y="725" width="0.2642%" height="15" fill="rgb(206,112,54)"/><text x="39.8801%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.26%)</title><rect x="39.6301%" y="709" width="0.2642%" height="15" fill="rgb(216,84,49)"/><text x="39.8801%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.26%)</title><rect x="39.6301%" y="693" width="0.2642%" height="15" fill="rgb(214,194,35)"/><text x="39.8801%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.26%)</title><rect x="39.6301%" y="677" width="0.2642%" height="15" fill="rgb(249,28,3)"/><text x="39.8801%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.26%)</title><rect x="39.6301%" y="661" width="0.2642%" height="15" fill="rgb(222,56,52)"/><text x="39.8801%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.26%)</title><rect x="39.6301%" y="645" width="0.2642%" height="15" fill="rgb(245,217,50)"/><text x="39.8801%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.26%)</title><rect x="39.6301%" y="629" width="0.2642%" height="15" fill="rgb(213,201,24)"/><text x="39.8801%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.26%)</title><rect x="39.6301%" y="613" width="0.2642%" height="15" fill="rgb(248,116,28)"/><text x="39.8801%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.26%)</title><rect x="39.6301%" y="597" width="0.2642%" height="15" fill="rgb(219,72,43)"/><text x="39.8801%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.26%)</title><rect x="39.6301%" y="581" width="0.2642%" height="15" fill="rgb(209,138,14)"/><text x="39.8801%" y="591.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.26%)</title><rect x="39.6301%" y="565" width="0.2642%" height="15" fill="rgb(222,18,33)"/><text x="39.8801%" y="575.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.26%)</title><rect x="39.6301%" y="549" width="0.2642%" height="15" fill="rgb(213,199,7)"/><text x="39.8801%" y="559.50"></text></g><g><title>_int_malloc (3 samples, 0.20%)</title><rect x="39.6962%" y="533" width="0.1982%" height="15" fill="rgb(250,110,10)"/><text x="39.9462%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="39.9604%" y="725" width="0.1321%" height="15" fill="rgb(248,123,6)"/><text x="40.2104%" y="735.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (8 samples, 0.53%)</title><rect x="39.6301%" y="757" width="0.5284%" height="15" fill="rgb(206,91,31)"/><text x="39.8801%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::expr_to_mv_expr (3 samples, 0.20%)</title><rect x="39.9604%" y="741" width="0.1982%" height="15" fill="rgb(211,154,13)"/><text x="40.2104%" y="751.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.13%)</title><rect x="40.1585%" y="725" width="0.1321%" height="15" fill="rgb(225,148,7)"/><text x="40.4085%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.13%)</title><rect x="40.1585%" y="709" width="0.1321%" height="15" fill="rgb(220,160,43)"/><text x="40.4085%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.13%)</title><rect x="40.1585%" y="693" width="0.1321%" height="15" fill="rgb(213,52,39)"/><text x="40.4085%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as core::fmt::Display&gt;::fmt (2 samples, 0.13%)</title><rect x="40.1585%" y="677" width="0.1321%" height="15" fill="rgb(243,137,7)"/><text x="40.4085%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.13%)</title><rect x="40.1585%" y="661" width="0.1321%" height="15" fill="rgb(230,79,13)"/><text x="40.4085%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.13%)</title><rect x="40.1585%" y="645" width="0.1321%" height="15" fill="rgb(247,105,23)"/><text x="40.4085%" y="655.50"></text></g><g><title>decor::mv_transformer::MVTransformer::objname_to_mv_string (6 samples, 0.40%)</title><rect x="40.1585%" y="757" width="0.3963%" height="15" fill="rgb(223,179,41)"/><text x="40.4085%" y="767.50"></text></g><g><title>decor::mv_transformer::MVTransformer::idents_to_mv_idents (6 samples, 0.40%)</title><rect x="40.1585%" y="741" width="0.3963%" height="15" fill="rgb(218,9,34)"/><text x="40.4085%" y="751.50"></text></g><g><title>decor::helpers::str_subset_of_idents (4 samples, 0.26%)</title><rect x="40.2906%" y="725" width="0.2642%" height="15" fill="rgb(222,106,8)"/><text x="40.5406%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.26%)</title><rect x="40.2906%" y="709" width="0.2642%" height="15" fill="rgb(211,220,0)"/><text x="40.5406%" y="719.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="40.4227%" y="693" width="0.1321%" height="15" fill="rgb(229,52,16)"/><text x="40.6727%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.13%)</title><rect x="40.4227%" y="677" width="0.1321%" height="15" fill="rgb(212,155,18)"/><text x="40.6727%" y="687.50"></text></g><g><title>sk_wait_data (3 samples, 0.20%)</title><rect x="40.8190%" y="485" width="0.1982%" height="15" fill="rgb(242,21,14)"/><text x="41.0690%" y="495.50"></text></g><g><title>wait_woken (3 samples, 0.20%)</title><rect x="40.8190%" y="469" width="0.1982%" height="15" fill="rgb(222,19,48)"/><text x="41.0690%" y="479.50"></text></g><g><title>schedule_timeout (2 samples, 0.13%)</title><rect x="40.8851%" y="453" width="0.1321%" height="15" fill="rgb(232,45,27)"/><text x="41.1351%" y="463.50"></text></g><g><title>schedule (2 samples, 0.13%)</title><rect x="40.8851%" y="437" width="0.1321%" height="15" fill="rgb(249,103,42)"/><text x="41.1351%" y="447.50"></text></g><g><title>__schedule (2 samples, 0.13%)</title><rect x="40.8851%" y="421" width="0.1321%" height="15" fill="rgb(246,81,33)"/><text x="41.1351%" y="431.50"></text></g><g><title>do_syscall_64 (7 samples, 0.46%)</title><rect x="40.6869%" y="565" width="0.4624%" height="15" fill="rgb(252,33,42)"/><text x="40.9369%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.46%)</title><rect x="40.6869%" y="549" width="0.4624%" height="15" fill="rgb(209,212,41)"/><text x="40.9369%" y="559.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.46%)</title><rect x="40.6869%" y="533" width="0.4624%" height="15" fill="rgb(207,154,6)"/><text x="40.9369%" y="543.50"></text></g><g><title>inet_recvmsg (7 samples, 0.46%)</title><rect x="40.6869%" y="517" width="0.4624%" height="15" fill="rgb(223,64,47)"/><text x="40.9369%" y="527.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.46%)</title><rect x="40.6869%" y="501" width="0.4624%" height="15" fill="rgb(211,161,38)"/><text x="40.9369%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.13%)</title><rect x="41.0172%" y="485" width="0.1321%" height="15" fill="rgb(219,138,40)"/><text x="41.2672%" y="495.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.13%)</title><rect x="41.0172%" y="469" width="0.1321%" height="15" fill="rgb(241,228,46)"/><text x="41.2672%" y="479.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.13%)</title><rect x="41.0172%" y="453" width="0.1321%" height="15" fill="rgb(223,209,38)"/><text x="41.2672%" y="463.50"></text></g><g><title>__check_object_size (2 samples, 0.13%)</title><rect x="41.0172%" y="437" width="0.1321%" height="15" fill="rgb(236,164,45)"/><text x="41.2672%" y="447.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (8 samples, 0.53%)</title><rect x="40.6869%" y="725" width="0.5284%" height="15" fill="rgb(231,15,5)"/><text x="40.9369%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (8 samples, 0.53%)</title><rect x="40.6869%" y="709" width="0.5284%" height="15" fill="rgb(252,35,15)"/><text x="40.9369%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.53%)</title><rect x="40.6869%" y="693" width="0.5284%" height="15" fill="rgb(248,181,18)"/><text x="40.9369%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.53%)</title><rect x="40.6869%" y="677" width="0.5284%" height="15" fill="rgb(233,39,42)"/><text x="40.9369%" y="687.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.53%)</title><rect x="40.6869%" y="661" width="0.5284%" height="15" fill="rgb(238,110,33)"/><text x="40.9369%" y="671.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 0.53%)</title><rect x="40.6869%" y="645" width="0.5284%" height="15" fill="rgb(233,195,10)"/><text x="40.9369%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 0.53%)</title><rect x="40.6869%" y="629" width="0.5284%" height="15" fill="rgb(254,105,3)"/><text x="40.9369%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 0.53%)</title><rect x="40.6869%" y="613" width="0.5284%" height="15" fill="rgb(221,225,9)"/><text x="40.9369%" y="623.50"></text></g><g><title>__libc_recv (8 samples, 0.53%)</title><rect x="40.6869%" y="597" width="0.5284%" height="15" fill="rgb(224,227,45)"/><text x="40.9369%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (8 samples, 0.53%)</title><rect x="40.6869%" y="581" width="0.5284%" height="15" fill="rgb(229,198,43)"/><text x="40.9369%" y="591.50"></text></g><g><title>sock_def_readable (2 samples, 0.13%)</title><rect x="41.5456%" y="213" width="0.1321%" height="15" fill="rgb(206,209,35)"/><text x="41.7956%" y="223.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.13%)</title><rect x="41.5456%" y="197" width="0.1321%" height="15" fill="rgb(245,195,53)"/><text x="41.7956%" y="207.50"></text></g><g><title>__wake_up_common (2 samples, 0.13%)</title><rect x="41.5456%" y="181" width="0.1321%" height="15" fill="rgb(240,92,26)"/><text x="41.7956%" y="191.50"></text></g><g><title>pollwake (2 samples, 0.13%)</title><rect x="41.5456%" y="165" width="0.1321%" height="15" fill="rgb(207,40,23)"/><text x="41.7956%" y="175.50"></text></g><g><title>try_to_wake_up (2 samples, 0.13%)</title><rect x="41.5456%" y="149" width="0.1321%" height="15" fill="rgb(223,111,35)"/><text x="41.7956%" y="159.50"></text></g><g><title>__ip_queue_xmit (7 samples, 0.46%)</title><rect x="41.2814%" y="485" width="0.4624%" height="15" fill="rgb(229,147,28)"/><text x="41.5314%" y="495.50"></text></g><g><title>ip_output (7 samples, 0.46%)</title><rect x="41.2814%" y="469" width="0.4624%" height="15" fill="rgb(211,29,28)"/><text x="41.5314%" y="479.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.46%)</title><rect x="41.2814%" y="453" width="0.4624%" height="15" fill="rgb(228,72,33)"/><text x="41.5314%" y="463.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.40%)</title><rect x="41.3474%" y="437" width="0.3963%" height="15" fill="rgb(205,214,31)"/><text x="41.5974%" y="447.50"></text></g><g><title>do_softirq (6 samples, 0.40%)</title><rect x="41.3474%" y="421" width="0.3963%" height="15" fill="rgb(224,111,15)"/><text x="41.5974%" y="431.50"></text></g><g><title>do_softirq_own_stack (6 samples, 0.40%)</title><rect x="41.3474%" y="405" width="0.3963%" height="15" fill="rgb(253,21,26)"/><text x="41.5974%" y="415.50"></text></g><g><title>__do_softirq (6 samples, 0.40%)</title><rect x="41.3474%" y="389" width="0.3963%" height="15" fill="rgb(245,139,43)"/><text x="41.5974%" y="399.50"></text></g><g><title>net_rx_action (6 samples, 0.40%)</title><rect x="41.3474%" y="373" width="0.3963%" height="15" fill="rgb(252,170,7)"/><text x="41.5974%" y="383.50"></text></g><g><title>process_backlog (5 samples, 0.33%)</title><rect x="41.4135%" y="357" width="0.3303%" height="15" fill="rgb(231,118,14)"/><text x="41.6635%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.33%)</title><rect x="41.4135%" y="341" width="0.3303%" height="15" fill="rgb(238,83,0)"/><text x="41.6635%" y="351.50"></text></g><g><title>ip_rcv (4 samples, 0.26%)</title><rect x="41.4795%" y="325" width="0.2642%" height="15" fill="rgb(221,39,39)"/><text x="41.7295%" y="335.50"></text></g><g><title>ip_local_deliver (4 samples, 0.26%)</title><rect x="41.4795%" y="309" width="0.2642%" height="15" fill="rgb(222,119,46)"/><text x="41.7295%" y="319.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.26%)</title><rect x="41.4795%" y="293" width="0.2642%" height="15" fill="rgb(222,165,49)"/><text x="41.7295%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.26%)</title><rect x="41.4795%" y="277" width="0.2642%" height="15" fill="rgb(219,113,52)"/><text x="41.7295%" y="287.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.20%)</title><rect x="41.5456%" y="261" width="0.1982%" height="15" fill="rgb(214,7,15)"/><text x="41.7956%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.20%)</title><rect x="41.5456%" y="245" width="0.1982%" height="15" fill="rgb(235,32,4)"/><text x="41.7956%" y="255.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.20%)</title><rect x="41.5456%" y="229" width="0.1982%" height="15" fill="rgb(238,90,54)"/><text x="41.7956%" y="239.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 0.53%)</title><rect x="41.2814%" y="501" width="0.5284%" height="15" fill="rgb(213,208,19)"/><text x="41.5314%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (9 samples, 0.59%)</title><rect x="41.2814%" y="533" width="0.5945%" height="15" fill="rgb(233,156,4)"/><text x="41.5314%" y="543.50"></text></g><g><title>tcp_write_xmit (9 samples, 0.59%)</title><rect x="41.2814%" y="517" width="0.5945%" height="15" fill="rgb(207,194,5)"/><text x="41.5314%" y="527.50"></text></g><g><title>decor::qtcache::QueryCache::insert_uid2gids_for_values (23 samples, 1.52%)</title><rect x="40.5548%" y="757" width="1.5192%" height="15" fill="rgb(206,111,30)"/><text x="40.8048%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (21 samples, 1.39%)</title><rect x="40.6869%" y="741" width="1.3871%" height="15" fill="rgb(243,70,54)"/><text x="40.9369%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (13 samples, 0.86%)</title><rect x="41.2153%" y="725" width="0.8587%" height="15" fill="rgb(242,28,8)"/><text x="41.4653%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (13 samples, 0.86%)</title><rect x="41.2153%" y="709" width="0.8587%" height="15" fill="rgb(219,106,18)"/><text x="41.4653%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (13 samples, 0.86%)</title><rect x="41.2153%" y="693" width="0.8587%" height="15" fill="rgb(244,222,10)"/><text x="41.4653%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (13 samples, 0.86%)</title><rect x="41.2153%" y="677" width="0.8587%" height="15" fill="rgb(236,179,52)"/><text x="41.4653%" y="687.50"></text></g><g><title>__libc_send (12 samples, 0.79%)</title><rect x="41.2814%" y="661" width="0.7926%" height="15" fill="rgb(213,23,39)"/><text x="41.5314%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.79%)</title><rect x="41.2814%" y="645" width="0.7926%" height="15" fill="rgb(238,48,10)"/><text x="41.5314%" y="655.50"></text></g><g><title>do_syscall_64 (12 samples, 0.79%)</title><rect x="41.2814%" y="629" width="0.7926%" height="15" fill="rgb(251,196,23)"/><text x="41.5314%" y="639.50"></text></g><g><title>__x64_sys_sendto (12 samples, 0.79%)</title><rect x="41.2814%" y="613" width="0.7926%" height="15" fill="rgb(250,152,24)"/><text x="41.5314%" y="623.50"></text></g><g><title>__sys_sendto (12 samples, 0.79%)</title><rect x="41.2814%" y="597" width="0.7926%" height="15" fill="rgb(209,150,17)"/><text x="41.5314%" y="607.50"></text></g><g><title>sock_sendmsg (12 samples, 0.79%)</title><rect x="41.2814%" y="581" width="0.7926%" height="15" fill="rgb(234,202,34)"/><text x="41.5314%" y="591.50"></text></g><g><title>tcp_sendmsg (12 samples, 0.79%)</title><rect x="41.2814%" y="565" width="0.7926%" height="15" fill="rgb(253,148,53)"/><text x="41.5314%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 0.79%)</title><rect x="41.2814%" y="549" width="0.7926%" height="15" fill="rgb(218,129,16)"/><text x="41.5314%" y="559.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.13%)</title><rect x="41.9419%" y="533" width="0.1321%" height="15" fill="rgb(216,85,19)"/><text x="42.1919%" y="543.50"></text></g><g><title>__alloc_skb (2 samples, 0.13%)</title><rect x="41.9419%" y="517" width="0.1321%" height="15" fill="rgb(235,228,7)"/><text x="42.1919%" y="527.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.13%)</title><rect x="41.9419%" y="501" width="0.1321%" height="15" fill="rgb(245,175,0)"/><text x="42.1919%" y="511.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.13%)</title><rect x="42.3382%" y="693" width="0.1321%" height="15" fill="rgb(208,168,36)"/><text x="42.5882%" y="703.50"></text></g><g><title>update_curr (2 samples, 0.13%)</title><rect x="43.1968%" y="357" width="0.1321%" height="15" fill="rgb(246,171,24)"/><text x="43.4468%" y="367.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.26%)</title><rect x="43.1968%" y="389" width="0.2642%" height="15" fill="rgb(215,142,24)"/><text x="43.4468%" y="399.50"></text></g><g><title>dequeue_entity (4 samples, 0.26%)</title><rect x="43.1968%" y="373" width="0.2642%" height="15" fill="rgb(250,187,7)"/><text x="43.4468%" y="383.50"></text></g><g><title>update_load_avg (2 samples, 0.13%)</title><rect x="43.3289%" y="357" width="0.1321%" height="15" fill="rgb(228,66,33)"/><text x="43.5789%" y="367.50"></text></g><g><title>psi_task_change (3 samples, 0.20%)</title><rect x="43.5271%" y="389" width="0.1982%" height="15" fill="rgb(234,215,21)"/><text x="43.7771%" y="399.50"></text></g><g><title>psi_group_change (3 samples, 0.20%)</title><rect x="43.5271%" y="373" width="0.1982%" height="15" fill="rgb(222,191,20)"/><text x="43.7771%" y="383.50"></text></g><g><title>sk_wait_data (16 samples, 1.06%)</title><rect x="42.8666%" y="469" width="1.0568%" height="15" fill="rgb(245,79,54)"/><text x="43.1166%" y="479.50"></text></g><g><title>wait_woken (15 samples, 0.99%)</title><rect x="42.9326%" y="453" width="0.9908%" height="15" fill="rgb(240,10,37)"/><text x="43.1826%" y="463.50"></text></g><g><title>schedule_timeout (14 samples, 0.92%)</title><rect x="42.9987%" y="437" width="0.9247%" height="15" fill="rgb(214,192,32)"/><text x="43.2487%" y="447.50"></text></g><g><title>schedule (14 samples, 0.92%)</title><rect x="42.9987%" y="421" width="0.9247%" height="15" fill="rgb(209,36,54)"/><text x="43.2487%" y="431.50"></text></g><g><title>__schedule (14 samples, 0.92%)</title><rect x="42.9987%" y="405" width="0.9247%" height="15" fill="rgb(220,10,11)"/><text x="43.2487%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.13%)</title><rect x="43.7913%" y="389" width="0.1321%" height="15" fill="rgb(221,106,17)"/><text x="44.0413%" y="399.50"></text></g><g><title>do_syscall_64 (20 samples, 1.32%)</title><rect x="42.7345%" y="549" width="1.3210%" height="15" fill="rgb(251,142,44)"/><text x="42.9845%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 1.32%)</title><rect x="42.7345%" y="533" width="1.3210%" height="15" fill="rgb(238,13,15)"/><text x="42.9845%" y="543.50"></text></g><g><title>__sys_recvfrom (20 samples, 1.32%)</title><rect x="42.7345%" y="517" width="1.3210%" height="15" fill="rgb(208,107,27)"/><text x="42.9845%" y="527.50"></text></g><g><title>inet_recvmsg (19 samples, 1.25%)</title><rect x="42.8005%" y="501" width="1.2550%" height="15" fill="rgb(205,136,37)"/><text x="43.0505%" y="511.50"></text></g><g><title>tcp_recvmsg (19 samples, 1.25%)</title><rect x="42.8005%" y="485" width="1.2550%" height="15" fill="rgb(250,205,27)"/><text x="43.0505%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.13%)</title><rect x="43.9234%" y="469" width="0.1321%" height="15" fill="rgb(210,80,43)"/><text x="44.1734%" y="479.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.13%)</title><rect x="43.9234%" y="453" width="0.1321%" height="15" fill="rgb(247,160,36)"/><text x="44.1734%" y="463.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (27 samples, 1.78%)</title><rect x="42.5363%" y="661" width="1.7834%" height="15" fill="rgb(234,13,49)"/><text x="42.7863%" y="671.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (26 samples, 1.72%)</title><rect x="42.6024%" y="645" width="1.7173%" height="15" fill="rgb(234,122,0)"/><text x="42.8524%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (26 samples, 1.72%)</title><rect x="42.6024%" y="629" width="1.7173%" height="15" fill="rgb(207,146,38)"/><text x="42.8524%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (26 samples, 1.72%)</title><rect x="42.6024%" y="613" width="1.7173%" height="15" fill="rgb(207,177,25)"/><text x="42.8524%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (26 samples, 1.72%)</title><rect x="42.6024%" y="597" width="1.7173%" height="15" fill="rgb(211,178,42)"/><text x="42.8524%" y="607.50"></text></g><g><title>__libc_recv (26 samples, 1.72%)</title><rect x="42.6024%" y="581" width="1.7173%" height="15" fill="rgb(230,69,54)"/><text x="42.8524%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 1.65%)</title><rect x="42.6684%" y="565" width="1.6513%" height="15" fill="rgb(214,135,41)"/><text x="42.9184%" y="575.50"></text></g><g><title>prepare_exit_to_usermode (4 samples, 0.26%)</title><rect x="44.0555%" y="549" width="0.2642%" height="15" fill="rgb(237,67,25)"/><text x="44.3055%" y="559.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 1.85%)</title><rect x="42.5363%" y="677" width="1.8494%" height="15" fill="rgb(222,189,50)"/><text x="42.7863%" y="687.50">&lt;..</text></g><g><title>mysql::conn::Conn::handle_result_set (33 samples, 2.18%)</title><rect x="42.3382%" y="709" width="2.1797%" height="15" fill="rgb(245,148,34)"/><text x="42.5882%" y="719.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (31 samples, 2.05%)</title><rect x="42.4703%" y="693" width="2.0476%" height="15" fill="rgb(222,29,6)"/><text x="42.7203%" y="703.50">m..</text></g><g><title>__pthread_enable_asynccancel (2 samples, 0.13%)</title><rect x="44.8481%" y="629" width="0.1321%" height="15" fill="rgb(221,189,43)"/><text x="45.0981%" y="639.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.26%)</title><rect x="45.9049%" y="405" width="0.2642%" height="15" fill="rgb(207,36,27)"/><text x="46.1549%" y="415.50"></text></g><g><title>loopback_xmit (3 samples, 0.20%)</title><rect x="45.9709%" y="389" width="0.1982%" height="15" fill="rgb(217,90,24)"/><text x="46.2209%" y="399.50"></text></g><g><title>__dev_queue_xmit (10 samples, 0.66%)</title><rect x="45.6407%" y="421" width="0.6605%" height="15" fill="rgb(224,66,35)"/><text x="45.8907%" y="431.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.13%)</title><rect x="46.1691%" y="405" width="0.1321%" height="15" fill="rgb(221,13,50)"/><text x="46.4191%" y="415.50"></text></g><g><title>netif_skb_features (2 samples, 0.13%)</title><rect x="46.1691%" y="389" width="0.1321%" height="15" fill="rgb(236,68,49)"/><text x="46.4191%" y="399.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.20%)</title><rect x="46.6314%" y="229" width="0.1982%" height="15" fill="rgb(229,146,28)"/><text x="46.8814%" y="239.50"></text></g><g><title>inet_ehashfn (2 samples, 0.13%)</title><rect x="46.6975%" y="213" width="0.1321%" height="15" fill="rgb(225,31,38)"/><text x="46.9475%" y="223.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="46.9617%" y="101" width="0.1321%" height="15" fill="rgb(250,208,3)"/><text x="47.2117%" y="111.50"></text></g><g><title>psi_group_change (2 samples, 0.13%)</title><rect x="46.9617%" y="85" width="0.1321%" height="15" fill="rgb(246,54,23)"/><text x="47.2117%" y="95.50"></text></g><g><title>record_times (2 samples, 0.13%)</title><rect x="46.9617%" y="69" width="0.1321%" height="15" fill="rgb(243,76,11)"/><text x="47.2117%" y="79.50"></text></g><g><title>enqueue_task (5 samples, 0.33%)</title><rect x="46.8956%" y="117" width="0.3303%" height="15" fill="rgb(245,21,50)"/><text x="47.1456%" y="127.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.13%)</title><rect x="47.0938%" y="101" width="0.1321%" height="15" fill="rgb(228,9,43)"/><text x="47.3438%" y="111.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.20%)</title><rect x="47.2259%" y="117" width="0.1982%" height="15" fill="rgb(208,100,47)"/><text x="47.4759%" y="127.50"></text></g><g><title>enqueue_entity (3 samples, 0.20%)</title><rect x="47.2259%" y="101" width="0.1982%" height="15" fill="rgb(232,26,8)"/><text x="47.4759%" y="111.50"></text></g><g><title>sock_def_readable (9 samples, 0.59%)</title><rect x="46.8956%" y="197" width="0.5945%" height="15" fill="rgb(216,166,38)"/><text x="47.1456%" y="207.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.59%)</title><rect x="46.8956%" y="181" width="0.5945%" height="15" fill="rgb(251,202,51)"/><text x="47.1456%" y="191.50"></text></g><g><title>__wake_up_common (9 samples, 0.59%)</title><rect x="46.8956%" y="165" width="0.5945%" height="15" fill="rgb(254,216,34)"/><text x="47.1456%" y="175.50"></text></g><g><title>pollwake (9 samples, 0.59%)</title><rect x="46.8956%" y="149" width="0.5945%" height="15" fill="rgb(251,32,27)"/><text x="47.1456%" y="159.50"></text></g><g><title>try_to_wake_up (9 samples, 0.59%)</title><rect x="46.8956%" y="133" width="0.5945%" height="15" fill="rgb(208,127,28)"/><text x="47.1456%" y="143.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="47.6222%" y="181" width="0.1321%" height="15" fill="rgb(224,137,22)"/><text x="47.8722%" y="191.50"></text></g><g><title>skb_release_data (2 samples, 0.13%)</title><rect x="47.6222%" y="165" width="0.1321%" height="15" fill="rgb(254,70,32)"/><text x="47.8722%" y="175.50"></text></g><g><title>tcp_ack (10 samples, 0.66%)</title><rect x="47.4901%" y="197" width="0.6605%" height="15" fill="rgb(229,75,37)"/><text x="47.7401%" y="207.50"></text></g><g><title>ip_local_deliver (27 samples, 1.78%)</title><rect x="46.5654%" y="293" width="1.7834%" height="15" fill="rgb(252,64,23)"/><text x="46.8154%" y="303.50">i..</text></g><g><title>ip_local_deliver_finish (27 samples, 1.78%)</title><rect x="46.5654%" y="277" width="1.7834%" height="15" fill="rgb(232,162,48)"/><text x="46.8154%" y="287.50">i..</text></g><g><title>ip_protocol_deliver_rcu (27 samples, 1.78%)</title><rect x="46.5654%" y="261" width="1.7834%" height="15" fill="rgb(246,160,12)"/><text x="46.8154%" y="271.50">i..</text></g><g><title>tcp_v4_rcv (26 samples, 1.72%)</title><rect x="46.6314%" y="245" width="1.7173%" height="15" fill="rgb(247,166,0)"/><text x="46.8814%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 1.52%)</title><rect x="46.8296%" y="229" width="1.5192%" height="15" fill="rgb(249,219,21)"/><text x="47.0796%" y="239.50"></text></g><g><title>tcp_rcv_established (23 samples, 1.52%)</title><rect x="46.8296%" y="213" width="1.5192%" height="15" fill="rgb(205,209,3)"/><text x="47.0796%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (29 samples, 1.92%)</title><rect x="46.5654%" y="325" width="1.9155%" height="15" fill="rgb(243,44,1)"/><text x="46.8154%" y="335.50">_..</text></g><g><title>ip_rcv (29 samples, 1.92%)</title><rect x="46.5654%" y="309" width="1.9155%" height="15" fill="rgb(206,159,16)"/><text x="46.8154%" y="319.50">i..</text></g><g><title>__ip_queue_xmit (45 samples, 2.97%)</title><rect x="45.5746%" y="469" width="2.9723%" height="15" fill="rgb(244,77,30)"/><text x="45.8246%" y="479.50">__i..</text></g><g><title>ip_output (45 samples, 2.97%)</title><rect x="45.5746%" y="453" width="2.9723%" height="15" fill="rgb(218,69,12)"/><text x="45.8246%" y="463.50">ip_..</text></g><g><title>ip_finish_output2 (45 samples, 2.97%)</title><rect x="45.5746%" y="437" width="2.9723%" height="15" fill="rgb(212,87,7)"/><text x="45.8246%" y="447.50">ip_..</text></g><g><title>__local_bh_enable_ip (34 samples, 2.25%)</title><rect x="46.3012%" y="421" width="2.2457%" height="15" fill="rgb(245,114,25)"/><text x="46.5512%" y="431.50">_..</text></g><g><title>do_softirq (33 samples, 2.18%)</title><rect x="46.3672%" y="405" width="2.1797%" height="15" fill="rgb(210,61,42)"/><text x="46.6172%" y="415.50">d..</text></g><g><title>do_softirq_own_stack (33 samples, 2.18%)</title><rect x="46.3672%" y="389" width="2.1797%" height="15" fill="rgb(211,52,33)"/><text x="46.6172%" y="399.50">d..</text></g><g><title>__do_softirq (33 samples, 2.18%)</title><rect x="46.3672%" y="373" width="2.1797%" height="15" fill="rgb(234,58,33)"/><text x="46.6172%" y="383.50">_..</text></g><g><title>net_rx_action (32 samples, 2.11%)</title><rect x="46.4333%" y="357" width="2.1136%" height="15" fill="rgb(220,115,36)"/><text x="46.6833%" y="367.50">n..</text></g><g><title>process_backlog (31 samples, 2.05%)</title><rect x="46.4993%" y="341" width="2.0476%" height="15" fill="rgb(243,153,54)"/><text x="46.7493%" y="351.50">p..</text></g><g><title>__tcp_transmit_skb (48 samples, 3.17%)</title><rect x="45.5086%" y="485" width="3.1704%" height="15" fill="rgb(251,47,18)"/><text x="45.7586%" y="495.50">__t..</text></g><g><title>ktime_get (2 samples, 0.13%)</title><rect x="48.6790%" y="485" width="0.1321%" height="15" fill="rgb(242,102,42)"/><text x="48.9290%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (54 samples, 3.57%)</title><rect x="45.3765%" y="517" width="3.5667%" height="15" fill="rgb(234,31,38)"/><text x="45.6265%" y="527.50">__tc..</text></g><g><title>tcp_write_xmit (53 samples, 3.50%)</title><rect x="45.4425%" y="501" width="3.5007%" height="15" fill="rgb(221,117,51)"/><text x="45.6925%" y="511.50">tcp..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.13%)</title><rect x="48.9432%" y="517" width="0.1321%" height="15" fill="rgb(212,20,18)"/><text x="49.1932%" y="527.50"></text></g><g><title>__alloc_skb (2 samples, 0.13%)</title><rect x="48.9432%" y="501" width="0.1321%" height="15" fill="rgb(245,133,36)"/><text x="49.1932%" y="511.50"></text></g><g><title>sock_sendmsg (61 samples, 4.03%)</title><rect x="45.2444%" y="565" width="4.0291%" height="15" fill="rgb(212,6,19)"/><text x="45.4944%" y="575.50">sock..</text></g><g><title>tcp_sendmsg (61 samples, 4.03%)</title><rect x="45.2444%" y="549" width="4.0291%" height="15" fill="rgb(218,1,36)"/><text x="45.4944%" y="559.50">tcp_..</text></g><g><title>tcp_sendmsg_locked (61 samples, 4.03%)</title><rect x="45.2444%" y="533" width="4.0291%" height="15" fill="rgb(246,84,54)"/><text x="45.4944%" y="543.50">tcp_..</text></g><g><title>__x64_sys_sendto (64 samples, 4.23%)</title><rect x="45.1123%" y="597" width="4.2272%" height="15" fill="rgb(242,110,6)"/><text x="45.3623%" y="607.50">__x64..</text></g><g><title>__sys_sendto (64 samples, 4.23%)</title><rect x="45.1123%" y="581" width="4.2272%" height="15" fill="rgb(214,47,5)"/><text x="45.3623%" y="591.50">__sys..</text></g><g><title>do_syscall_64 (68 samples, 4.49%)</title><rect x="45.0462%" y="613" width="4.4914%" height="15" fill="rgb(218,159,25)"/><text x="45.2962%" y="623.50">do_sy..</text></g><g><title>syscall_trace_enter (3 samples, 0.20%)</title><rect x="49.3395%" y="597" width="0.1982%" height="15" fill="rgb(215,211,28)"/><text x="49.5895%" y="607.50"></text></g><g><title>ktime_get_coarse_real_ts64 (2 samples, 0.13%)</title><rect x="49.4055%" y="581" width="0.1321%" height="15" fill="rgb(238,59,32)"/><text x="49.6555%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (71 samples, 4.69%)</title><rect x="44.9802%" y="629" width="4.6896%" height="15" fill="rgb(226,82,3)"/><text x="45.2302%" y="639.50">entry..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="49.5376%" y="613" width="0.1321%" height="15" fill="rgb(240,164,32)"/><text x="49.7876%" y="623.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (200 samples, 13.21%)</title><rect x="36.5258%" y="789" width="13.2100%" height="15" fill="rgb(232,46,7)"/><text x="36.7758%" y="799.50">decor::query_transfo..</text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (200 samples, 13.21%)</title><rect x="36.5258%" y="773" width="13.2100%" height="15" fill="rgb(229,129,53)"/><text x="36.7758%" y="783.50">decor::query_transfo..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (115 samples, 7.60%)</title><rect x="42.1400%" y="757" width="7.5958%" height="15" fill="rgb(234,188,29)"/><text x="42.3900%" y="767.50">mysql::con..</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (115 samples, 7.60%)</title><rect x="42.1400%" y="741" width="7.5958%" height="15" fill="rgb(246,141,4)"/><text x="42.3900%" y="751.50">&lt;mysql::co..</text></g><g><title>mysql::conn::Conn::_query (115 samples, 7.60%)</title><rect x="42.1400%" y="725" width="7.5958%" height="15" fill="rgb(229,23,39)"/><text x="42.3900%" y="735.50">mysql::con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (79 samples, 5.22%)</title><rect x="44.5178%" y="709" width="5.2180%" height="15" fill="rgb(206,12,3)"/><text x="44.7678%" y="719.50">mysql_..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (76 samples, 5.02%)</title><rect x="44.7160%" y="693" width="5.0198%" height="15" fill="rgb(252,226,20)"/><text x="44.9660%" y="703.50">std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (76 samples, 5.02%)</title><rect x="44.7160%" y="677" width="5.0198%" height="15" fill="rgb(216,123,35)"/><text x="44.9660%" y="687.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::write (76 samples, 5.02%)</title><rect x="44.7160%" y="661" width="5.0198%" height="15" fill="rgb(212,68,40)"/><text x="44.9660%" y="671.50">std::s..</text></g><g><title>__libc_send (76 samples, 5.02%)</title><rect x="44.7160%" y="645" width="5.0198%" height="15" fill="rgb(254,125,32)"/><text x="44.9660%" y="655.50">__libc..</text></g><g><title>__GI___libc_realloc (17 samples, 1.12%)</title><rect x="51.1229%" y="741" width="1.1229%" height="15" fill="rgb(253,97,22)"/><text x="51.3729%" y="751.50"></text></g><g><title>_int_realloc (6 samples, 0.40%)</title><rect x="51.8494%" y="725" width="0.3963%" height="15" fill="rgb(241,101,14)"/><text x="52.0994%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.79%)</title><rect x="52.2457%" y="741" width="0.7926%" height="15" fill="rgb(238,103,29)"/><text x="52.4957%" y="751.50"></text></g><g><title>__rdl_realloc (2 samples, 0.13%)</title><rect x="53.0383%" y="741" width="0.1321%" height="15" fill="rgb(233,195,47)"/><text x="53.2883%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.13%)</title><rect x="53.0383%" y="725" width="0.1321%" height="15" fill="rgb(246,218,30)"/><text x="53.2883%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.26%)</title><rect x="53.3025%" y="693" width="0.2642%" height="15" fill="rgb(219,145,47)"/><text x="53.5525%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 1.39%)</title><rect x="53.1704%" y="741" width="1.3871%" height="15" fill="rgb(243,12,26)"/><text x="53.4204%" y="751.50"></text></g><g><title>__GI___libc_realloc (21 samples, 1.39%)</title><rect x="53.1704%" y="725" width="1.3871%" height="15" fill="rgb(214,87,16)"/><text x="53.4204%" y="735.50"></text></g><g><title>_int_realloc (19 samples, 1.25%)</title><rect x="53.3025%" y="709" width="1.2550%" height="15" fill="rgb(208,99,42)"/><text x="53.5525%" y="719.50"></text></g><g><title>_int_malloc (15 samples, 0.99%)</title><rect x="53.5667%" y="693" width="0.9908%" height="15" fill="rgb(253,99,2)"/><text x="53.8167%" y="703.50"></text></g><g><title>malloc_consolidate (7 samples, 0.46%)</title><rect x="54.0951%" y="677" width="0.4624%" height="15" fill="rgb(220,168,23)"/><text x="54.3451%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.20%)</title><rect x="54.8217%" y="725" width="0.1982%" height="15" fill="rgb(242,38,24)"/><text x="55.0717%" y="735.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (2 samples, 0.13%)</title><rect x="55.0859%" y="709" width="0.1321%" height="15" fill="rgb(225,182,9)"/><text x="55.3359%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="55.5482%" y="677" width="0.1321%" height="15" fill="rgb(243,178,37)"/><text x="55.7982%" y="687.50"></text></g><g><title>__GI___libc_malloc (22 samples, 1.45%)</title><rect x="55.8785%" y="661" width="1.4531%" height="15" fill="rgb(232,139,19)"/><text x="56.1285%" y="671.50"></text></g><g><title>_int_malloc (18 samples, 1.19%)</title><rect x="56.1427%" y="645" width="1.1889%" height="15" fill="rgb(225,201,24)"/><text x="56.3927%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.13%)</title><rect x="57.1995%" y="629" width="0.1321%" height="15" fill="rgb(221,47,46)"/><text x="57.4495%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (28 samples, 1.85%)</title><rect x="55.5482%" y="693" width="1.8494%" height="15" fill="rgb(249,23,13)"/><text x="55.7982%" y="703.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 1.72%)</title><rect x="55.6803%" y="677" width="1.7173%" height="15" fill="rgb(219,9,5)"/><text x="55.9303%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad_integral (10 samples, 0.66%)</title><rect x="57.3976%" y="693" width="0.6605%" height="15" fill="rgb(254,171,16)"/><text x="57.6476%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (46 samples, 3.04%)</title><rect x="55.0859%" y="725" width="3.0383%" height="15" fill="rgb(230,171,20)"/><text x="55.3359%" y="735.50">cor..</text></g><g><title>core::fmt::num::imp::fmt_u64 (43 samples, 2.84%)</title><rect x="55.2840%" y="709" width="2.8402%" height="15" fill="rgb(210,71,41)"/><text x="55.5340%" y="719.50">co..</text></g><g><title>core::fmt::write (55 samples, 3.63%)</title><rect x="54.5575%" y="741" width="3.6328%" height="15" fill="rgb(206,173,20)"/><text x="54.8075%" y="751.50">core..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="58.3223%" y="629" width="0.1321%" height="15" fill="rgb(233,88,34)"/><text x="58.5723%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.40%)</title><rect x="58.2563%" y="677" width="0.3963%" height="15" fill="rgb(223,209,46)"/><text x="58.5063%" y="687.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.40%)</title><rect x="58.2563%" y="661" width="0.3963%" height="15" fill="rgb(250,43,18)"/><text x="58.5063%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.33%)</title><rect x="58.3223%" y="645" width="0.3303%" height="15" fill="rgb(208,13,10)"/><text x="58.5723%" y="655.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.13%)</title><rect x="58.5205%" y="629" width="0.1321%" height="15" fill="rgb(212,200,36)"/><text x="58.7705%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.13%)</title><rect x="58.5205%" y="613" width="0.1321%" height="15" fill="rgb(225,90,30)"/><text x="58.7705%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.13%)</title><rect x="58.5205%" y="597" width="0.1321%" height="15" fill="rgb(236,182,39)"/><text x="58.7705%" y="607.50"></text></g><g><title>decor::helpers::expr_is_ucol (9 samples, 0.59%)</title><rect x="58.1902%" y="741" width="0.5945%" height="15" fill="rgb(212,144,35)"/><text x="58.4402%" y="751.50"></text></g><g><title>core::fmt::write (8 samples, 0.53%)</title><rect x="58.2563%" y="725" width="0.5284%" height="15" fill="rgb(228,63,44)"/><text x="58.5063%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::fmt::Display&gt;::fmt (8 samples, 0.53%)</title><rect x="58.2563%" y="709" width="0.5284%" height="15" fill="rgb(228,109,6)"/><text x="58.5063%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.53%)</title><rect x="58.2563%" y="693" width="0.5284%" height="15" fill="rgb(238,117,24)"/><text x="58.5063%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.13%)</title><rect x="58.6526%" y="677" width="0.1321%" height="15" fill="rgb(242,26,26)"/><text x="58.9026%" y="687.50"></text></g><g><title>decor::query_transformer::QueryTransformer::selection_to_datatable_selection (140 samples, 9.25%)</title><rect x="49.7358%" y="789" width="9.2470%" height="15" fill="rgb(221,92,48)"/><text x="49.9858%" y="799.50">decor::query_..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (140 samples, 9.25%)</title><rect x="49.7358%" y="773" width="9.2470%" height="15" fill="rgb(209,209,32)"/><text x="49.9858%" y="783.50">decor::query_..</text></g><g><title>decor::query_transformer::QueryTransformer::fastpath_expr_to_gid_expr (140 samples, 9.25%)</title><rect x="49.7358%" y="757" width="9.2470%" height="15" fill="rgb(221,70,22)"/><text x="49.9858%" y="767.50">decor::query_..</text></g><g><title>decor::qtcache::QueryCache::get_gids_for_uids (3 samples, 0.20%)</title><rect x="58.7847%" y="741" width="0.1982%" height="15" fill="rgb(248,145,5)"/><text x="59.0347%" y="751.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.13%)</title><rect x="58.9828%" y="789" width="0.1321%" height="15" fill="rgb(226,116,26)"/><text x="59.2328%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.13%)</title><rect x="58.9828%" y="773" width="0.1321%" height="15" fill="rgb(244,5,17)"/><text x="59.2328%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.13%)</title><rect x="58.9828%" y="757" width="0.1321%" height="15" fill="rgb(252,159,33)"/><text x="59.2328%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.13%)</title><rect x="59.1810%" y="709" width="0.1321%" height="15" fill="rgb(206,71,0)"/><text x="59.4310%" y="719.50"></text></g><g><title>hwloc::Topology::new (4 samples, 0.26%)</title><rect x="59.1149%" y="773" width="0.2642%" height="15" fill="rgb(233,118,54)"/><text x="59.3649%" y="783.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.20%)</title><rect x="59.1810%" y="757" width="0.1982%" height="15" fill="rgb(234,83,48)"/><text x="59.4310%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.20%)</title><rect x="59.1810%" y="741" width="0.1982%" height="15" fill="rgb(228,3,54)"/><text x="59.4310%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.20%)</title><rect x="59.1810%" y="725" width="0.1982%" height="15" fill="rgb(226,155,13)"/><text x="59.4310%" y="735.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.13%)</title><rect x="59.9075%" y="421" width="0.1321%" height="15" fill="rgb(241,28,37)"/><text x="60.1575%" y="431.50"></text></g><g><title>dequeue_entity (2 samples, 0.13%)</title><rect x="59.9075%" y="405" width="0.1321%" height="15" fill="rgb(233,93,10)"/><text x="60.1575%" y="415.50"></text></g><g><title>update_curr (2 samples, 0.13%)</title><rect x="59.9075%" y="389" width="0.1321%" height="15" fill="rgb(225,113,19)"/><text x="60.1575%" y="399.50"></text></g><g><title>finish_task_switch (2 samples, 0.13%)</title><rect x="60.0396%" y="421" width="0.1321%" height="15" fill="rgb(241,2,18)"/><text x="60.2896%" y="431.50"></text></g><g><title>inet_recvmsg (13 samples, 0.86%)</title><rect x="59.5112%" y="533" width="0.8587%" height="15" fill="rgb(228,207,21)"/><text x="59.7612%" y="543.50"></text></g><g><title>tcp_recvmsg (13 samples, 0.86%)</title><rect x="59.5112%" y="517" width="0.8587%" height="15" fill="rgb(213,211,35)"/><text x="59.7612%" y="527.50"></text></g><g><title>sk_wait_data (12 samples, 0.79%)</title><rect x="59.5773%" y="501" width="0.7926%" height="15" fill="rgb(209,83,10)"/><text x="59.8273%" y="511.50"></text></g><g><title>wait_woken (11 samples, 0.73%)</title><rect x="59.6433%" y="485" width="0.7266%" height="15" fill="rgb(209,164,1)"/><text x="59.8933%" y="495.50"></text></g><g><title>schedule_timeout (9 samples, 0.59%)</title><rect x="59.7754%" y="469" width="0.5945%" height="15" fill="rgb(213,184,43)"/><text x="60.0254%" y="479.50"></text></g><g><title>schedule (8 samples, 0.53%)</title><rect x="59.8415%" y="453" width="0.5284%" height="15" fill="rgb(231,61,34)"/><text x="60.0915%" y="463.50"></text></g><g><title>__schedule (8 samples, 0.53%)</title><rect x="59.8415%" y="437" width="0.5284%" height="15" fill="rgb(235,75,3)"/><text x="60.0915%" y="447.50"></text></g><g><title>psi_task_change (3 samples, 0.20%)</title><rect x="60.1717%" y="421" width="0.1982%" height="15" fill="rgb(220,106,47)"/><text x="60.4217%" y="431.50"></text></g><g><title>psi_group_change (3 samples, 0.20%)</title><rect x="60.1717%" y="405" width="0.1982%" height="15" fill="rgb(210,196,33)"/><text x="60.4217%" y="415.50"></text></g><g><title>lobsters::main (20 samples, 1.32%)</title><rect x="59.1149%" y="789" width="1.3210%" height="15" fill="rgb(229,154,42)"/><text x="59.3649%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (16 samples, 1.06%)</title><rect x="59.3791%" y="773" width="1.0568%" height="15" fill="rgb(228,114,26)"/><text x="59.6291%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.06%)</title><rect x="59.3791%" y="757" width="1.0568%" height="15" fill="rgb(208,144,1)"/><text x="59.6291%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (16 samples, 1.06%)</title><rect x="59.3791%" y="741" width="1.0568%" height="15" fill="rgb(239,112,37)"/><text x="59.6291%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (16 samples, 1.06%)</title><rect x="59.3791%" y="725" width="1.0568%" height="15" fill="rgb(210,96,50)"/><text x="59.6291%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.06%)</title><rect x="59.3791%" y="709" width="1.0568%" height="15" fill="rgb(222,178,2)"/><text x="59.6291%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (16 samples, 1.06%)</title><rect x="59.3791%" y="693" width="1.0568%" height="15" fill="rgb(226,74,18)"/><text x="59.6291%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (16 samples, 1.06%)</title><rect x="59.3791%" y="677" width="1.0568%" height="15" fill="rgb(225,67,54)"/><text x="59.6291%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::read (16 samples, 1.06%)</title><rect x="59.3791%" y="661" width="1.0568%" height="15" fill="rgb(251,92,32)"/><text x="59.6291%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::read (16 samples, 1.06%)</title><rect x="59.3791%" y="645" width="1.0568%" height="15" fill="rgb(228,149,22)"/><text x="59.6291%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (16 samples, 1.06%)</title><rect x="59.3791%" y="629" width="1.0568%" height="15" fill="rgb(243,54,13)"/><text x="59.6291%" y="639.50"></text></g><g><title>__libc_recv (16 samples, 1.06%)</title><rect x="59.3791%" y="613" width="1.0568%" height="15" fill="rgb(243,180,28)"/><text x="59.6291%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (15 samples, 0.99%)</title><rect x="59.4452%" y="597" width="0.9908%" height="15" fill="rgb(208,167,24)"/><text x="59.6952%" y="607.50"></text></g><g><title>do_syscall_64 (15 samples, 0.99%)</title><rect x="59.4452%" y="581" width="0.9908%" height="15" fill="rgb(245,73,45)"/><text x="59.6952%" y="591.50"></text></g><g><title>__x64_sys_recvfrom (14 samples, 0.92%)</title><rect x="59.5112%" y="565" width="0.9247%" height="15" fill="rgb(237,203,48)"/><text x="59.7612%" y="575.50"></text></g><g><title>__sys_recvfrom (14 samples, 0.92%)</title><rect x="59.5112%" y="549" width="0.9247%" height="15" fill="rgb(211,197,16)"/><text x="59.7612%" y="559.50"></text></g><g><title>add_wait_queue (2 samples, 0.13%)</title><rect x="60.6341%" y="453" width="0.1321%" height="15" fill="rgb(243,99,51)"/><text x="60.8841%" y="463.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.13%)</title><rect x="60.6341%" y="437" width="0.1321%" height="15" fill="rgb(215,123,29)"/><text x="60.8841%" y="447.50"></text></g><g><title>preempt_count_add (2 samples, 0.13%)</title><rect x="60.6341%" y="421" width="0.1321%" height="15" fill="rgb(239,186,37)"/><text x="60.8841%" y="431.50"></text></g><g><title>in_lock_functions (2 samples, 0.13%)</title><rect x="60.6341%" y="405" width="0.1321%" height="15" fill="rgb(252,136,39)"/><text x="60.8841%" y="415.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.20%)</title><rect x="61.0304%" y="389" width="0.1982%" height="15" fill="rgb(223,213,32)"/><text x="61.2804%" y="399.50"></text></g><g><title>dequeue_entity (3 samples, 0.20%)</title><rect x="61.0304%" y="373" width="0.1982%" height="15" fill="rgb(233,115,5)"/><text x="61.2804%" y="383.50"></text></g><g><title>psi_task_change (3 samples, 0.20%)</title><rect x="61.2946%" y="389" width="0.1982%" height="15" fill="rgb(207,226,44)"/><text x="61.5446%" y="399.50"></text></g><g><title>psi_group_change (3 samples, 0.20%)</title><rect x="61.2946%" y="373" width="0.1982%" height="15" fill="rgb(208,126,0)"/><text x="61.5446%" y="383.50"></text></g><g><title>record_times (2 samples, 0.13%)</title><rect x="61.3606%" y="357" width="0.1321%" height="15" fill="rgb(244,66,21)"/><text x="61.6106%" y="367.50"></text></g><g><title>sk_wait_data (15 samples, 0.99%)</title><rect x="60.6341%" y="469" width="0.9908%" height="15" fill="rgb(222,97,12)"/><text x="60.8841%" y="479.50"></text></g><g><title>wait_woken (13 samples, 0.86%)</title><rect x="60.7662%" y="453" width="0.8587%" height="15" fill="rgb(219,213,19)"/><text x="61.0162%" y="463.50"></text></g><g><title>schedule_timeout (11 samples, 0.73%)</title><rect x="60.8983%" y="437" width="0.7266%" height="15" fill="rgb(252,169,30)"/><text x="61.1483%" y="447.50"></text></g><g><title>schedule (10 samples, 0.66%)</title><rect x="60.9643%" y="421" width="0.6605%" height="15" fill="rgb(206,32,51)"/><text x="61.2143%" y="431.50"></text></g><g><title>__schedule (9 samples, 0.59%)</title><rect x="61.0304%" y="405" width="0.5945%" height="15" fill="rgb(250,172,42)"/><text x="61.2804%" y="415.50"></text></g><g><title>do_syscall_64 (20 samples, 1.32%)</title><rect x="60.5020%" y="549" width="1.3210%" height="15" fill="rgb(209,34,43)"/><text x="60.7520%" y="559.50"></text></g><g><title>__x64_sys_recvfrom (20 samples, 1.32%)</title><rect x="60.5020%" y="533" width="1.3210%" height="15" fill="rgb(223,11,35)"/><text x="60.7520%" y="543.50"></text></g><g><title>__sys_recvfrom (20 samples, 1.32%)</title><rect x="60.5020%" y="517" width="1.3210%" height="15" fill="rgb(251,219,26)"/><text x="60.7520%" y="527.50"></text></g><g><title>inet_recvmsg (20 samples, 1.32%)</title><rect x="60.5020%" y="501" width="1.3210%" height="15" fill="rgb(231,119,3)"/><text x="60.7520%" y="511.50"></text></g><g><title>tcp_recvmsg (20 samples, 1.32%)</title><rect x="60.5020%" y="485" width="1.3210%" height="15" fill="rgb(216,97,11)"/><text x="60.7520%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.20%)</title><rect x="61.6248%" y="469" width="0.1982%" height="15" fill="rgb(223,59,9)"/><text x="61.8748%" y="479.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.20%)</title><rect x="61.6248%" y="453" width="0.1982%" height="15" fill="rgb(233,93,31)"/><text x="61.8748%" y="463.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.13%)</title><rect x="61.6909%" y="437" width="0.1321%" height="15" fill="rgb(239,81,33)"/><text x="61.9409%" y="447.50"></text></g><g><title>__check_object_size (2 samples, 0.13%)</title><rect x="61.6909%" y="421" width="0.1321%" height="15" fill="rgb(213,120,34)"/><text x="61.9409%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 1.39%)</title><rect x="60.5020%" y="565" width="1.3871%" height="15" fill="rgb(243,49,53)"/><text x="60.7520%" y="575.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (22 samples, 1.45%)</title><rect x="60.5020%" y="661" width="1.4531%" height="15" fill="rgb(247,216,33)"/><text x="60.7520%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (22 samples, 1.45%)</title><rect x="60.5020%" y="645" width="1.4531%" height="15" fill="rgb(226,26,14)"/><text x="60.7520%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (22 samples, 1.45%)</title><rect x="60.5020%" y="629" width="1.4531%" height="15" fill="rgb(215,49,53)"/><text x="60.7520%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (22 samples, 1.45%)</title><rect x="60.5020%" y="613" width="1.4531%" height="15" fill="rgb(245,162,40)"/><text x="60.7520%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (22 samples, 1.45%)</title><rect x="60.5020%" y="597" width="1.4531%" height="15" fill="rgb(229,68,17)"/><text x="60.7520%" y="607.50"></text></g><g><title>__libc_recv (22 samples, 1.45%)</title><rect x="60.5020%" y="581" width="1.4531%" height="15" fill="rgb(213,182,10)"/><text x="60.7520%" y="591.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.52%)</title><rect x="60.5020%" y="677" width="1.5192%" height="15" fill="rgb(245,125,30)"/><text x="60.7520%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (26 samples, 1.72%)</title><rect x="60.4359%" y="741" width="1.7173%" height="15" fill="rgb(232,202,2)"/><text x="60.6859%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (26 samples, 1.72%)</title><rect x="60.4359%" y="725" width="1.7173%" height="15" fill="rgb(237,140,51)"/><text x="60.6859%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (26 samples, 1.72%)</title><rect x="60.4359%" y="709" width="1.7173%" height="15" fill="rgb(236,157,25)"/><text x="60.6859%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (26 samples, 1.72%)</title><rect x="60.4359%" y="693" width="1.7173%" height="15" fill="rgb(219,209,0)"/><text x="60.6859%" y="703.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.33%)</title><rect x="63.0119%" y="357" width="0.3303%" height="15" fill="rgb(240,116,54)"/><text x="63.2619%" y="367.50"></text></g><g><title>dequeue_entity (4 samples, 0.26%)</title><rect x="63.0779%" y="341" width="0.2642%" height="15" fill="rgb(216,10,36)"/><text x="63.3279%" y="351.50"></text></g><g><title>update_curr (3 samples, 0.20%)</title><rect x="63.1440%" y="325" width="0.1982%" height="15" fill="rgb(222,72,44)"/><text x="63.3940%" y="335.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.13%)</title><rect x="63.4082%" y="357" width="0.1321%" height="15" fill="rgb(232,159,9)"/><text x="63.6582%" y="367.50"></text></g><g><title>newidle_balance (2 samples, 0.13%)</title><rect x="63.4082%" y="341" width="0.1321%" height="15" fill="rgb(210,39,32)"/><text x="63.6582%" y="351.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.13%)</title><rect x="63.6063%" y="357" width="0.1321%" height="15" fill="rgb(216,194,45)"/><text x="63.8563%" y="367.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.13%)</title><rect x="63.7384%" y="357" width="0.1321%" height="15" fill="rgb(218,18,35)"/><text x="63.9884%" y="367.50"></text></g><g><title>__schedule (15 samples, 0.99%)</title><rect x="63.0119%" y="373" width="0.9908%" height="15" fill="rgb(207,83,51)"/><text x="63.2619%" y="383.50"></text></g><g><title>update_rq_clock (2 samples, 0.13%)</title><rect x="63.8705%" y="357" width="0.1321%" height="15" fill="rgb(225,63,43)"/><text x="64.1205%" y="367.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.13%)</title><rect x="63.8705%" y="341" width="0.1321%" height="15" fill="rgb(207,57,36)"/><text x="64.1205%" y="351.50"></text></g><g><title>sk_wait_data (21 samples, 1.39%)</title><rect x="62.6816%" y="437" width="1.3871%" height="15" fill="rgb(216,99,33)"/><text x="62.9316%" y="447.50"></text></g><g><title>wait_woken (17 samples, 1.12%)</title><rect x="62.9458%" y="421" width="1.1229%" height="15" fill="rgb(225,42,16)"/><text x="63.1958%" y="431.50"></text></g><g><title>schedule_timeout (16 samples, 1.06%)</title><rect x="63.0119%" y="405" width="1.0568%" height="15" fill="rgb(220,201,45)"/><text x="63.2619%" y="415.50"></text></g><g><title>schedule (16 samples, 1.06%)</title><rect x="63.0119%" y="389" width="1.0568%" height="15" fill="rgb(225,33,4)"/><text x="63.2619%" y="399.50"></text></g><g><title>inet_recvmsg (27 samples, 1.78%)</title><rect x="62.4174%" y="469" width="1.7834%" height="15" fill="rgb(224,33,50)"/><text x="62.6674%" y="479.50">i..</text></g><g><title>tcp_recvmsg (26 samples, 1.72%)</title><rect x="62.4835%" y="453" width="1.7173%" height="15" fill="rgb(246,198,51)"/><text x="62.7335%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (28 samples, 1.85%)</title><rect x="62.4174%" y="501" width="1.8494%" height="15" fill="rgb(205,22,4)"/><text x="62.6674%" y="511.50">_..</text></g><g><title>__sys_recvfrom (28 samples, 1.85%)</title><rect x="62.4174%" y="485" width="1.8494%" height="15" fill="rgb(206,3,8)"/><text x="62.6674%" y="495.50">_..</text></g><g><title>syscall_slow_exit_work (2 samples, 0.13%)</title><rect x="64.2668%" y="501" width="0.1321%" height="15" fill="rgb(251,23,15)"/><text x="64.5168%" y="511.50"></text></g><g><title>do_syscall_64 (31 samples, 2.05%)</title><rect x="62.4174%" y="517" width="2.0476%" height="15" fill="rgb(252,88,28)"/><text x="62.6674%" y="527.50">d..</text></g><g><title>entry_SYSCALL_64 (32 samples, 2.11%)</title><rect x="62.4174%" y="533" width="2.1136%" height="15" fill="rgb(212,127,14)"/><text x="62.6674%" y="543.50">e..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 2.31%)</title><rect x="62.3514%" y="629" width="2.3118%" height="15" fill="rgb(247,145,37)"/><text x="62.6014%" y="639.50">&lt;..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (35 samples, 2.31%)</title><rect x="62.3514%" y="613" width="2.3118%" height="15" fill="rgb(209,117,53)"/><text x="62.6014%" y="623.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (35 samples, 2.31%)</title><rect x="62.3514%" y="597" width="2.3118%" height="15" fill="rgb(212,90,42)"/><text x="62.6014%" y="607.50">s..</text></g><g><title>std::sys::unix::net::Socket::read (35 samples, 2.31%)</title><rect x="62.3514%" y="581" width="2.3118%" height="15" fill="rgb(218,164,37)"/><text x="62.6014%" y="591.50">s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (35 samples, 2.31%)</title><rect x="62.3514%" y="565" width="2.3118%" height="15" fill="rgb(246,65,34)"/><text x="62.6014%" y="575.50">s..</text></g><g><title>__libc_recv (35 samples, 2.31%)</title><rect x="62.3514%" y="549" width="2.3118%" height="15" fill="rgb(231,100,33)"/><text x="62.6014%" y="559.50">_..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.13%)</title><rect x="64.5310%" y="533" width="0.1321%" height="15" fill="rgb(228,126,14)"/><text x="64.7810%" y="543.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (36 samples, 2.38%)</title><rect x="62.3514%" y="677" width="2.3778%" height="15" fill="rgb(215,173,21)"/><text x="62.6014%" y="687.50">my..</text></g><g><title>mysql::conn::Conn::read_packet (36 samples, 2.38%)</title><rect x="62.3514%" y="661" width="2.3778%" height="15" fill="rgb(210,6,40)"/><text x="62.6014%" y="671.50">my..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 2.38%)</title><rect x="62.3514%" y="645" width="2.3778%" height="15" fill="rgb(212,48,18)"/><text x="62.6014%" y="655.50">&lt;m..</text></g><g><title>enqueue_task (3 samples, 0.20%)</title><rect x="66.1823%" y="85" width="0.1982%" height="15" fill="rgb(230,214,11)"/><text x="66.4323%" y="95.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.13%)</title><rect x="66.2483%" y="69" width="0.1321%" height="15" fill="rgb(254,105,39)"/><text x="66.4983%" y="79.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.13%)</title><rect x="66.3804%" y="85" width="0.1321%" height="15" fill="rgb(245,158,5)"/><text x="66.6304%" y="95.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.13%)</title><rect x="66.5125%" y="85" width="0.1321%" height="15" fill="rgb(249,208,11)"/><text x="66.7625%" y="95.50"></text></g><g><title>sock_def_readable (8 samples, 0.53%)</title><rect x="66.1823%" y="165" width="0.5284%" height="15" fill="rgb(210,39,28)"/><text x="66.4323%" y="175.50"></text></g><g><title>__wake_up_common_lock (8 samples, 0.53%)</title><rect x="66.1823%" y="149" width="0.5284%" height="15" fill="rgb(211,56,53)"/><text x="66.4323%" y="159.50"></text></g><g><title>__wake_up_common (8 samples, 0.53%)</title><rect x="66.1823%" y="133" width="0.5284%" height="15" fill="rgb(226,201,30)"/><text x="66.4323%" y="143.50"></text></g><g><title>pollwake (8 samples, 0.53%)</title><rect x="66.1823%" y="117" width="0.5284%" height="15" fill="rgb(239,101,34)"/><text x="66.4323%" y="127.50"></text></g><g><title>try_to_wake_up (8 samples, 0.53%)</title><rect x="66.1823%" y="101" width="0.5284%" height="15" fill="rgb(226,209,5)"/><text x="66.4323%" y="111.50"></text></g><g><title>tcp_ack (3 samples, 0.20%)</title><rect x="66.7107%" y="165" width="0.1982%" height="15" fill="rgb(250,105,47)"/><text x="66.9607%" y="175.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 1.19%)</title><rect x="65.8520%" y="293" width="1.1889%" height="15" fill="rgb(230,72,3)"/><text x="66.1020%" y="303.50"></text></g><g><title>ip_rcv (18 samples, 1.19%)</title><rect x="65.8520%" y="277" width="1.1889%" height="15" fill="rgb(232,218,39)"/><text x="66.1020%" y="287.50"></text></g><g><title>ip_local_deliver (18 samples, 1.19%)</title><rect x="65.8520%" y="261" width="1.1889%" height="15" fill="rgb(248,166,6)"/><text x="66.1020%" y="271.50"></text></g><g><title>ip_local_deliver_finish (18 samples, 1.19%)</title><rect x="65.8520%" y="245" width="1.1889%" height="15" fill="rgb(247,89,20)"/><text x="66.1020%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (18 samples, 1.19%)</title><rect x="65.8520%" y="229" width="1.1889%" height="15" fill="rgb(248,130,54)"/><text x="66.1020%" y="239.50"></text></g><g><title>tcp_v4_rcv (17 samples, 1.12%)</title><rect x="65.9181%" y="213" width="1.1229%" height="15" fill="rgb(234,196,4)"/><text x="66.1681%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 0.92%)</title><rect x="66.1162%" y="197" width="0.9247%" height="15" fill="rgb(250,143,31)"/><text x="66.3662%" y="207.50"></text></g><g><title>tcp_rcv_established (14 samples, 0.92%)</title><rect x="66.1162%" y="181" width="0.9247%" height="15" fill="rgb(211,110,34)"/><text x="66.3662%" y="191.50"></text></g><g><title>__ip_queue_xmit (28 samples, 1.85%)</title><rect x="65.2576%" y="437" width="1.8494%" height="15" fill="rgb(215,124,48)"/><text x="65.5076%" y="447.50">_..</text></g><g><title>ip_output (26 samples, 1.72%)</title><rect x="65.3897%" y="421" width="1.7173%" height="15" fill="rgb(216,46,13)"/><text x="65.6397%" y="431.50"></text></g><g><title>ip_finish_output2 (25 samples, 1.65%)</title><rect x="65.4557%" y="405" width="1.6513%" height="15" fill="rgb(205,184,25)"/><text x="65.7057%" y="415.50"></text></g><g><title>__local_bh_enable_ip (22 samples, 1.45%)</title><rect x="65.6539%" y="389" width="1.4531%" height="15" fill="rgb(228,1,10)"/><text x="65.9039%" y="399.50"></text></g><g><title>do_softirq (22 samples, 1.45%)</title><rect x="65.6539%" y="373" width="1.4531%" height="15" fill="rgb(213,116,27)"/><text x="65.9039%" y="383.50"></text></g><g><title>do_softirq_own_stack (21 samples, 1.39%)</title><rect x="65.7199%" y="357" width="1.3871%" height="15" fill="rgb(241,95,50)"/><text x="65.9699%" y="367.50"></text></g><g><title>__do_softirq (21 samples, 1.39%)</title><rect x="65.7199%" y="341" width="1.3871%" height="15" fill="rgb(238,48,32)"/><text x="65.9699%" y="351.50"></text></g><g><title>net_rx_action (20 samples, 1.32%)</title><rect x="65.7860%" y="325" width="1.3210%" height="15" fill="rgb(235,113,49)"/><text x="66.0360%" y="335.50"></text></g><g><title>process_backlog (20 samples, 1.32%)</title><rect x="65.7860%" y="309" width="1.3210%" height="15" fill="rgb(205,127,43)"/><text x="66.0360%" y="319.50"></text></g><g><title>__tcp_transmit_skb (30 samples, 1.98%)</title><rect x="65.2576%" y="453" width="1.9815%" height="15" fill="rgb(250,162,2)"/><text x="65.5076%" y="463.50">_..</text></g><g><title>__tcp_push_pending_frames (31 samples, 2.05%)</title><rect x="65.2576%" y="485" width="2.0476%" height="15" fill="rgb(220,13,41)"/><text x="65.5076%" y="495.50">_..</text></g><g><title>tcp_write_xmit (31 samples, 2.05%)</title><rect x="65.2576%" y="469" width="2.0476%" height="15" fill="rgb(249,221,25)"/><text x="65.5076%" y="479.50">t..</text></g><g><title>tcp_send_mss (2 samples, 0.13%)</title><rect x="67.3712%" y="485" width="0.1321%" height="15" fill="rgb(215,208,19)"/><text x="67.6212%" y="495.50"></text></g><g><title>tcp_current_mss (2 samples, 0.13%)</title><rect x="67.3712%" y="469" width="0.1321%" height="15" fill="rgb(236,175,2)"/><text x="67.6212%" y="479.50"></text></g><g><title>__x64_sys_sendto (40 samples, 2.64%)</title><rect x="64.9273%" y="565" width="2.6420%" height="15" fill="rgb(241,52,2)"/><text x="65.1773%" y="575.50">__..</text></g><g><title>__sys_sendto (40 samples, 2.64%)</title><rect x="64.9273%" y="549" width="2.6420%" height="15" fill="rgb(248,140,14)"/><text x="65.1773%" y="559.50">__..</text></g><g><title>sock_sendmsg (38 samples, 2.51%)</title><rect x="65.0594%" y="533" width="2.5099%" height="15" fill="rgb(253,22,42)"/><text x="65.3094%" y="543.50">so..</text></g><g><title>tcp_sendmsg (38 samples, 2.51%)</title><rect x="65.0594%" y="517" width="2.5099%" height="15" fill="rgb(234,61,47)"/><text x="65.3094%" y="527.50">tc..</text></g><g><title>tcp_sendmsg_locked (37 samples, 2.44%)</title><rect x="65.1255%" y="501" width="2.4439%" height="15" fill="rgb(208,226,15)"/><text x="65.3755%" y="511.50">tc..</text></g><g><title>do_syscall_64 (41 samples, 2.71%)</title><rect x="64.9273%" y="581" width="2.7081%" height="15" fill="rgb(217,221,4)"/><text x="65.1773%" y="591.50">do..</text></g><g><title>entry_SYSCALL_64 (43 samples, 2.84%)</title><rect x="64.9273%" y="597" width="2.8402%" height="15" fill="rgb(212,174,34)"/><text x="65.1773%" y="607.50">en..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="67.6354%" y="581" width="0.1321%" height="15" fill="rgb(253,83,4)"/><text x="67.8854%" y="591.50"></text></g><g><title>mysql::conn::Conn::start_transaction (85 samples, 5.61%)</title><rect x="62.2193%" y="741" width="5.6143%" height="15" fill="rgb(250,195,49)"/><text x="62.4693%" y="751.50">mysql::..</text></g><g><title>mysql::conn::Conn::_start_transaction (85 samples, 5.61%)</title><rect x="62.2193%" y="725" width="5.6143%" height="15" fill="rgb(241,192,25)"/><text x="62.4693%" y="735.50">mysql::..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (85 samples, 5.61%)</title><rect x="62.2193%" y="709" width="5.6143%" height="15" fill="rgb(208,124,10)"/><text x="62.4693%" y="719.50">mysql::..</text></g><g><title>mysql::conn::Conn::_query (85 samples, 5.61%)</title><rect x="62.2193%" y="693" width="5.6143%" height="15" fill="rgb(222,33,0)"/><text x="62.4693%" y="703.50">mysql::..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (47 samples, 3.10%)</title><rect x="64.7292%" y="677" width="3.1044%" height="15" fill="rgb(234,209,28)"/><text x="64.9792%" y="687.50">mys..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (47 samples, 3.10%)</title><rect x="64.7292%" y="661" width="3.1044%" height="15" fill="rgb(224,11,23)"/><text x="64.9792%" y="671.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (46 samples, 3.04%)</title><rect x="64.7952%" y="645" width="3.0383%" height="15" fill="rgb(232,99,1)"/><text x="65.0452%" y="655.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (46 samples, 3.04%)</title><rect x="64.7952%" y="629" width="3.0383%" height="15" fill="rgb(237,95,45)"/><text x="65.0452%" y="639.50">std..</text></g><g><title>__libc_send (46 samples, 3.04%)</title><rect x="64.7952%" y="613" width="3.0383%" height="15" fill="rgb(208,109,11)"/><text x="65.0452%" y="623.50">__l..</text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="68.4280%" y="453" width="0.1321%" height="15" fill="rgb(216,190,48)"/><text x="68.6780%" y="463.50"></text></g><g><title>skb_release_head_state (2 samples, 0.13%)</title><rect x="68.4280%" y="437" width="0.1321%" height="15" fill="rgb(251,171,36)"/><text x="68.6780%" y="447.50"></text></g><g><title>dst_release (2 samples, 0.13%)</title><rect x="68.4280%" y="421" width="0.1321%" height="15" fill="rgb(230,62,22)"/><text x="68.6780%" y="431.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.26%)</title><rect x="68.6922%" y="373" width="0.2642%" height="15" fill="rgb(225,114,35)"/><text x="68.9422%" y="383.50"></text></g><g><title>dequeue_entity (4 samples, 0.26%)</title><rect x="68.6922%" y="357" width="0.2642%" height="15" fill="rgb(215,118,42)"/><text x="68.9422%" y="367.50"></text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="69.0225%" y="373" width="0.1321%" height="15" fill="rgb(243,119,21)"/><text x="69.2725%" y="383.50"></text></g><g><title>psi_group_change (2 samples, 0.13%)</title><rect x="69.0225%" y="357" width="0.1321%" height="15" fill="rgb(252,177,53)"/><text x="69.2725%" y="367.50"></text></g><g><title>sk_wait_data (13 samples, 0.86%)</title><rect x="68.5601%" y="453" width="0.8587%" height="15" fill="rgb(237,209,29)"/><text x="68.8101%" y="463.50"></text></g><g><title>wait_woken (12 samples, 0.79%)</title><rect x="68.6262%" y="437" width="0.7926%" height="15" fill="rgb(212,65,23)"/><text x="68.8762%" y="447.50"></text></g><g><title>schedule_timeout (11 samples, 0.73%)</title><rect x="68.6922%" y="421" width="0.7266%" height="15" fill="rgb(230,222,46)"/><text x="68.9422%" y="431.50"></text></g><g><title>schedule (11 samples, 0.73%)</title><rect x="68.6922%" y="405" width="0.7266%" height="15" fill="rgb(215,135,32)"/><text x="68.9422%" y="415.50"></text></g><g><title>__schedule (11 samples, 0.73%)</title><rect x="68.6922%" y="389" width="0.7266%" height="15" fill="rgb(246,101,22)"/><text x="68.9422%" y="399.50"></text></g><g><title>update_rq_clock (3 samples, 0.20%)</title><rect x="69.2206%" y="373" width="0.1982%" height="15" fill="rgb(206,107,13)"/><text x="69.4706%" y="383.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.13%)</title><rect x="69.2867%" y="357" width="0.1321%" height="15" fill="rgb(250,100,44)"/><text x="69.5367%" y="367.50"></text></g><g><title>inet_recvmsg (20 samples, 1.32%)</title><rect x="68.1638%" y="485" width="1.3210%" height="15" fill="rgb(231,147,38)"/><text x="68.4138%" y="495.50"></text></g><g><title>tcp_recvmsg (19 samples, 1.25%)</title><rect x="68.2299%" y="469" width="1.2550%" height="15" fill="rgb(229,8,40)"/><text x="68.4799%" y="479.50"></text></g><g><title>do_syscall_64 (22 samples, 1.45%)</title><rect x="68.0978%" y="533" width="1.4531%" height="15" fill="rgb(221,135,30)"/><text x="68.3478%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (22 samples, 1.45%)</title><rect x="68.0978%" y="517" width="1.4531%" height="15" fill="rgb(249,193,18)"/><text x="68.3478%" y="527.50"></text></g><g><title>__sys_recvfrom (22 samples, 1.45%)</title><rect x="68.0978%" y="501" width="1.4531%" height="15" fill="rgb(209,133,39)"/><text x="68.3478%" y="511.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (141 samples, 9.31%)</title><rect x="60.4359%" y="757" width="9.3131%" height="15" fill="rgb(232,100,14)"/><text x="60.6859%" y="767.50">decor::query_..</text></g><g><title>mysql::conn::transaction::Transaction::commit (29 samples, 1.92%)</title><rect x="67.8336%" y="741" width="1.9155%" height="15" fill="rgb(224,185,1)"/><text x="68.0836%" y="751.50">m..</text></g><g><title>mysql::conn::queryable::Queryable::query_drop (29 samples, 1.92%)</title><rect x="67.8336%" y="725" width="1.9155%" height="15" fill="rgb(223,139,8)"/><text x="68.0836%" y="735.50">m..</text></g><g><title>mysql::conn::Conn::_query (29 samples, 1.92%)</title><rect x="67.8336%" y="709" width="1.9155%" height="15" fill="rgb(232,213,38)"/><text x="68.0836%" y="719.50">m..</text></g><g><title>mysql::conn::Conn::handle_result_set (29 samples, 1.92%)</title><rect x="67.8336%" y="693" width="1.9155%" height="15" fill="rgb(207,94,22)"/><text x="68.0836%" y="703.50">m..</text></g><g><title>mysql::conn::Conn::read_packet (28 samples, 1.85%)</title><rect x="67.8996%" y="677" width="1.8494%" height="15" fill="rgb(219,183,54)"/><text x="68.1496%" y="687.50">m..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 1.65%)</title><rect x="68.0978%" y="661" width="1.6513%" height="15" fill="rgb(216,185,54)"/><text x="68.3478%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (25 samples, 1.65%)</title><rect x="68.0978%" y="645" width="1.6513%" height="15" fill="rgb(254,217,39)"/><text x="68.3478%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 1.65%)</title><rect x="68.0978%" y="629" width="1.6513%" height="15" fill="rgb(240,178,23)"/><text x="68.3478%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 1.65%)</title><rect x="68.0978%" y="613" width="1.6513%" height="15" fill="rgb(218,11,47)"/><text x="68.3478%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 1.65%)</title><rect x="68.0978%" y="597" width="1.6513%" height="15" fill="rgb(218,51,51)"/><text x="68.3478%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 1.65%)</title><rect x="68.0978%" y="581" width="1.6513%" height="15" fill="rgb(238,126,27)"/><text x="68.3478%" y="591.50"></text></g><g><title>__libc_recv (25 samples, 1.65%)</title><rect x="68.0978%" y="565" width="1.6513%" height="15" fill="rgb(249,202,22)"/><text x="68.3478%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (25 samples, 1.65%)</title><rect x="68.0978%" y="549" width="1.6513%" height="15" fill="rgb(254,195,49)"/><text x="68.3478%" y="559.50"></text></g><g><title>prepare_exit_to_usermode (3 samples, 0.20%)</title><rect x="69.5509%" y="533" width="0.1982%" height="15" fill="rgb(208,123,14)"/><text x="69.8009%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="69.7490%" y="725" width="0.1321%" height="15" fill="rgb(224,200,8)"/><text x="69.9990%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="69.7490%" y="709" width="0.1321%" height="15" fill="rgb(217,61,36)"/><text x="69.9990%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="69.7490%" y="693" width="0.1321%" height="15" fill="rgb(206,35,45)"/><text x="69.9990%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="69.7490%" y="677" width="0.1321%" height="15" fill="rgb(217,65,33)"/><text x="69.9990%" y="687.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="69.7490%" y="661" width="0.1321%" height="15" fill="rgb(222,158,48)"/><text x="69.9990%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="69.7490%" y="741" width="0.1982%" height="15" fill="rgb(254,2,54)"/><text x="69.9990%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (3 samples, 0.20%)</title><rect x="70.1453%" y="709" width="0.1982%" height="15" fill="rgb(250,143,38)"/><text x="70.3953%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (2 samples, 0.13%)</title><rect x="70.2114%" y="693" width="0.1321%" height="15" fill="rgb(248,25,0)"/><text x="70.4614%" y="703.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (151 samples, 9.97%)</title><rect x="60.4359%" y="789" width="9.9736%" height="15" fill="rgb(206,152,27)"/><text x="60.6859%" y="799.50">msql_srv::Mysq..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (151 samples, 9.97%)</title><rect x="60.4359%" y="773" width="9.9736%" height="15" fill="rgb(240,77,30)"/><text x="60.6859%" y="783.50">&lt;decor::Shim a..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (10 samples, 0.66%)</title><rect x="69.7490%" y="757" width="0.6605%" height="15" fill="rgb(231,5,3)"/><text x="69.9990%" y="767.50"></text></g><g><title>sql_parser::parser::parse_statements (7 samples, 0.46%)</title><rect x="69.9472%" y="741" width="0.4624%" height="15" fill="rgb(207,226,32)"/><text x="70.1972%" y="751.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (6 samples, 0.40%)</title><rect x="70.0132%" y="725" width="0.3963%" height="15" fill="rgb(222,207,47)"/><text x="70.2632%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.20%)</title><rect x="70.6077%" y="789" width="0.1982%" height="15" fill="rgb(229,115,45)"/><text x="70.8577%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (16 samples, 1.06%)</title><rect x="71.0040%" y="709" width="1.0568%" height="15" fill="rgb(224,191,6)"/><text x="71.2540%" y="719.50"></text></g><g><title>sql_parser::parser::Parser::expected (16 samples, 1.06%)</title><rect x="71.0040%" y="693" width="1.0568%" height="15" fill="rgb(230,227,24)"/><text x="71.2540%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 1.06%)</title><rect x="71.0040%" y="677" width="1.0568%" height="15" fill="rgb(228,80,19)"/><text x="71.2540%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 1.06%)</title><rect x="71.0040%" y="661" width="1.0568%" height="15" fill="rgb(247,229,0)"/><text x="71.2540%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 1.06%)</title><rect x="71.0040%" y="645" width="1.0568%" height="15" fill="rgb(237,194,15)"/><text x="71.2540%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 1.06%)</title><rect x="71.0040%" y="629" width="1.0568%" height="15" fill="rgb(219,203,20)"/><text x="71.2540%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 1.06%)</title><rect x="71.0040%" y="613" width="1.0568%" height="15" fill="rgb(234,128,8)"/><text x="71.2540%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 1.06%)</title><rect x="71.0040%" y="597" width="1.0568%" height="15" fill="rgb(248,202,8)"/><text x="71.2540%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (16 samples, 1.06%)</title><rect x="71.0040%" y="581" width="1.0568%" height="15" fill="rgb(206,104,37)"/><text x="71.2540%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 1.06%)</title><rect x="71.0040%" y="565" width="1.0568%" height="15" fill="rgb(223,8,27)"/><text x="71.2540%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 1.06%)</title><rect x="71.0040%" y="549" width="1.0568%" height="15" fill="rgb(216,217,28)"/><text x="71.2540%" y="559.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (19 samples, 1.25%)</title><rect x="70.9379%" y="789" width="1.2550%" height="15" fill="rgb(249,199,1)"/><text x="71.1879%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (18 samples, 1.19%)</title><rect x="71.0040%" y="773" width="1.1889%" height="15" fill="rgb(240,85,17)"/><text x="71.2540%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (18 samples, 1.19%)</title><rect x="71.0040%" y="757" width="1.1889%" height="15" fill="rgb(206,108,45)"/><text x="71.2540%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 1.19%)</title><rect x="71.0040%" y="741" width="1.1889%" height="15" fill="rgb(245,210,41)"/><text x="71.2540%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (18 samples, 1.19%)</title><rect x="71.0040%" y="725" width="1.1889%" height="15" fill="rgb(206,13,37)"/><text x="71.2540%" y="735.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.13%)</title><rect x="72.0608%" y="709" width="0.1321%" height="15" fill="rgb(250,61,18)"/><text x="72.3108%" y="719.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.13%)</title><rect x="72.3250%" y="789" width="0.1321%" height="15" fill="rgb(235,172,48)"/><text x="72.5750%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.13%)</title><rect x="72.3250%" y="773" width="0.1321%" height="15" fill="rgb(249,201,17)"/><text x="72.5750%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (2 samples, 0.13%)</title><rect x="72.3250%" y="757" width="0.1321%" height="15" fill="rgb(219,208,6)"/><text x="72.5750%" y="767.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.13%)</title><rect x="72.4571%" y="789" width="0.1321%" height="15" fill="rgb(248,31,23)"/><text x="72.7071%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.13%)</title><rect x="72.7213%" y="709" width="0.1321%" height="15" fill="rgb(245,15,42)"/><text x="72.9713%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.33%)</title><rect x="72.9855%" y="661" width="0.3303%" height="15" fill="rgb(222,217,39)"/><text x="73.2355%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.33%)</title><rect x="72.9855%" y="645" width="0.3303%" height="15" fill="rgb(210,219,27)"/><text x="73.2355%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.26%)</title><rect x="73.0515%" y="629" width="0.2642%" height="15" fill="rgb(252,166,36)"/><text x="73.3015%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.20%)</title><rect x="73.1176%" y="613" width="0.1982%" height="15" fill="rgb(245,132,34)"/><text x="73.3676%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::display::EscapeSingleQuoteString as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.20%)</title><rect x="73.3157%" y="645" width="0.1982%" height="15" fill="rgb(236,54,3)"/><text x="73.5657%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.20%)</title><rect x="73.3157%" y="629" width="0.1982%" height="15" fill="rgb(241,173,43)"/><text x="73.5657%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.26%)</title><rect x="73.3157%" y="661" width="0.2642%" height="15" fill="rgb(215,190,9)"/><text x="73.5657%" y="671.50"></text></g><g><title>core::fmt::write (12 samples, 0.79%)</title><rect x="72.8534%" y="709" width="0.7926%" height="15" fill="rgb(242,101,16)"/><text x="73.1034%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (12 samples, 0.79%)</title><rect x="72.8534%" y="693" width="0.7926%" height="15" fill="rgb(223,190,21)"/><text x="73.1034%" y="703.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::UpdateStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (11 samples, 0.73%)</title><rect x="72.9194%" y="677" width="0.7266%" height="15" fill="rgb(215,228,25)"/><text x="73.1694%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.33%)</title><rect x="73.6460%" y="709" width="0.3303%" height="15" fill="rgb(225,36,22)"/><text x="73.8960%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.20%)</title><rect x="73.7781%" y="693" width="0.1982%" height="15" fill="rgb(251,106,46)"/><text x="74.0281%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="73.8441%" y="677" width="0.1321%" height="15" fill="rgb(208,90,1)"/><text x="74.0941%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="73.8441%" y="661" width="0.1321%" height="15" fill="rgb(243,10,4)"/><text x="74.0941%" y="671.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query (21 samples, 1.39%)</title><rect x="72.6552%" y="725" width="1.3871%" height="15" fill="rgb(212,137,27)"/><text x="72.9052%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 1.85%)</title><rect x="72.6552%" y="789" width="1.8494%" height="15" fill="rgb(231,220,49)"/><text x="72.9052%" y="799.50">s..</text></g><g><title>decor::Shim::run_on_tcp (28 samples, 1.85%)</title><rect x="72.6552%" y="773" width="1.8494%" height="15" fill="rgb(237,96,20)"/><text x="72.9052%" y="783.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (28 samples, 1.85%)</title><rect x="72.6552%" y="757" width="1.8494%" height="15" fill="rgb(239,229,30)"/><text x="72.9052%" y="767.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (28 samples, 1.85%)</title><rect x="72.6552%" y="741" width="1.8494%" height="15" fill="rgb(219,65,33)"/><text x="72.9052%" y="751.50">&lt;..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (7 samples, 0.46%)</title><rect x="74.0423%" y="725" width="0.4624%" height="15" fill="rgb(243,134,7)"/><text x="74.2923%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.20%)</title><rect x="74.3065%" y="709" width="0.1982%" height="15" fill="rgb(216,177,54)"/><text x="74.5565%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.20%)</title><rect x="74.3065%" y="693" width="0.1982%" height="15" fill="rgb(211,160,20)"/><text x="74.5565%" y="703.50"></text></g><g><title>[unknown] (1,017 samples, 67.17%)</title><rect x="7.4637%" y="805" width="67.1731%" height="15" fill="rgb(239,85,39)"/><text x="7.7137%" y="815.50">[unknown]</text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.13%)</title><rect x="74.5046%" y="789" width="0.1321%" height="15" fill="rgb(232,125,22)"/><text x="74.7546%" y="799.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="74.9009%" y="629" width="0.1321%" height="15" fill="rgb(244,57,34)"/><text x="75.1509%" y="639.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.53%)</title><rect x="74.7688%" y="661" width="0.5284%" height="15" fill="rgb(214,203,32)"/><text x="75.0188%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.46%)</title><rect x="74.8349%" y="645" width="0.4624%" height="15" fill="rgb(207,58,43)"/><text x="75.0849%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.26%)</title><rect x="75.0330%" y="629" width="0.2642%" height="15" fill="rgb(215,193,15)"/><text x="75.2830%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.20%)</title><rect x="75.0991%" y="613" width="0.1982%" height="15" fill="rgb(232,15,44)"/><text x="75.3491%" y="623.50"></text></g><g><title>__kfree_skb (2 samples, 0.13%)</title><rect x="75.5614%" y="453" width="0.1321%" height="15" fill="rgb(212,3,48)"/><text x="75.8114%" y="463.50"></text></g><g><title>skb_release_head_state (2 samples, 0.13%)</title><rect x="75.5614%" y="437" width="0.1321%" height="15" fill="rgb(218,128,7)"/><text x="75.8114%" y="447.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.20%)</title><rect x="75.8917%" y="389" width="0.1982%" height="15" fill="rgb(226,216,39)"/><text x="76.1417%" y="399.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.20%)</title><rect x="75.8917%" y="373" width="0.1982%" height="15" fill="rgb(243,47,51)"/><text x="76.1417%" y="383.50"></text></g><g><title>loopback_xmit (2 samples, 0.13%)</title><rect x="75.9577%" y="357" width="0.1321%" height="15" fill="rgb(241,183,40)"/><text x="76.2077%" y="367.50"></text></g><g><title>ip_local_deliver (3 samples, 0.20%)</title><rect x="76.2219%" y="261" width="0.1982%" height="15" fill="rgb(231,217,32)"/><text x="76.4719%" y="271.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.13%)</title><rect x="76.2880%" y="245" width="0.1321%" height="15" fill="rgb(229,61,38)"/><text x="76.5380%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.13%)</title><rect x="76.2880%" y="229" width="0.1321%" height="15" fill="rgb(225,210,5)"/><text x="76.5380%" y="239.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.13%)</title><rect x="76.2880%" y="213" width="0.1321%" height="15" fill="rgb(231,79,45)"/><text x="76.5380%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.13%)</title><rect x="76.2880%" y="197" width="0.1321%" height="15" fill="rgb(224,100,7)"/><text x="76.5380%" y="207.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.13%)</title><rect x="76.2880%" y="181" width="0.1321%" height="15" fill="rgb(241,198,18)"/><text x="76.5380%" y="191.50"></text></g><g><title>__tcp_transmit_skb (13 samples, 0.86%)</title><rect x="75.6935%" y="453" width="0.8587%" height="15" fill="rgb(252,97,53)"/><text x="75.9435%" y="463.50"></text></g><g><title>__ip_queue_xmit (12 samples, 0.79%)</title><rect x="75.7596%" y="437" width="0.7926%" height="15" fill="rgb(220,88,7)"/><text x="76.0096%" y="447.50"></text></g><g><title>ip_output (11 samples, 0.73%)</title><rect x="75.8256%" y="421" width="0.7266%" height="15" fill="rgb(213,176,14)"/><text x="76.0756%" y="431.50"></text></g><g><title>ip_finish_output2 (11 samples, 0.73%)</title><rect x="75.8256%" y="405" width="0.7266%" height="15" fill="rgb(246,73,7)"/><text x="76.0756%" y="415.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.46%)</title><rect x="76.0898%" y="389" width="0.4624%" height="15" fill="rgb(245,64,36)"/><text x="76.3398%" y="399.50"></text></g><g><title>do_softirq (7 samples, 0.46%)</title><rect x="76.0898%" y="373" width="0.4624%" height="15" fill="rgb(245,80,10)"/><text x="76.3398%" y="383.50"></text></g><g><title>do_softirq_own_stack (7 samples, 0.46%)</title><rect x="76.0898%" y="357" width="0.4624%" height="15" fill="rgb(232,107,50)"/><text x="76.3398%" y="367.50"></text></g><g><title>__do_softirq (7 samples, 0.46%)</title><rect x="76.0898%" y="341" width="0.4624%" height="15" fill="rgb(253,3,0)"/><text x="76.3398%" y="351.50"></text></g><g><title>net_rx_action (7 samples, 0.46%)</title><rect x="76.0898%" y="325" width="0.4624%" height="15" fill="rgb(212,99,53)"/><text x="76.3398%" y="335.50"></text></g><g><title>process_backlog (5 samples, 0.33%)</title><rect x="76.2219%" y="309" width="0.3303%" height="15" fill="rgb(249,111,54)"/><text x="76.4719%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.33%)</title><rect x="76.2219%" y="293" width="0.3303%" height="15" fill="rgb(249,55,30)"/><text x="76.4719%" y="303.50"></text></g><g><title>ip_rcv (5 samples, 0.33%)</title><rect x="76.2219%" y="277" width="0.3303%" height="15" fill="rgb(237,47,42)"/><text x="76.4719%" y="287.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.13%)</title><rect x="76.6843%" y="437" width="0.1321%" height="15" fill="rgb(211,20,18)"/><text x="76.9343%" y="447.50"></text></g><g><title>preempt_count_sub (2 samples, 0.13%)</title><rect x="76.6843%" y="421" width="0.1321%" height="15" fill="rgb(231,203,46)"/><text x="76.9343%" y="431.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.26%)</title><rect x="77.0145%" y="373" width="0.2642%" height="15" fill="rgb(237,142,3)"/><text x="77.2645%" y="383.50"></text></g><g><title>ctx_sched_out (2 samples, 0.13%)</title><rect x="77.1466%" y="357" width="0.1321%" height="15" fill="rgb(241,107,1)"/><text x="77.3966%" y="367.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.13%)</title><rect x="77.2787%" y="373" width="0.1321%" height="15" fill="rgb(229,83,13)"/><text x="77.5287%" y="383.50"></text></g><g><title>sk_wait_data (13 samples, 0.86%)</title><rect x="76.6182%" y="453" width="0.8587%" height="15" fill="rgb(241,91,40)"/><text x="76.8682%" y="463.50"></text></g><g><title>wait_woken (9 samples, 0.59%)</title><rect x="76.8824%" y="437" width="0.5945%" height="15" fill="rgb(225,3,45)"/><text x="77.1324%" y="447.50"></text></g><g><title>schedule_timeout (9 samples, 0.59%)</title><rect x="76.8824%" y="421" width="0.5945%" height="15" fill="rgb(244,223,14)"/><text x="77.1324%" y="431.50"></text></g><g><title>schedule (9 samples, 0.59%)</title><rect x="76.8824%" y="405" width="0.5945%" height="15" fill="rgb(224,124,37)"/><text x="77.1324%" y="415.50"></text></g><g><title>__schedule (8 samples, 0.53%)</title><rect x="76.9485%" y="389" width="0.5284%" height="15" fill="rgb(251,171,30)"/><text x="77.1985%" y="399.50"></text></g><g><title>do_syscall_64 (33 samples, 2.18%)</title><rect x="75.3633%" y="533" width="2.1797%" height="15" fill="rgb(236,46,54)"/><text x="75.6133%" y="543.50">d..</text></g><g><title>__x64_sys_recvfrom (33 samples, 2.18%)</title><rect x="75.3633%" y="517" width="2.1797%" height="15" fill="rgb(245,213,5)"/><text x="75.6133%" y="527.50">_..</text></g><g><title>__sys_recvfrom (33 samples, 2.18%)</title><rect x="75.3633%" y="501" width="2.1797%" height="15" fill="rgb(230,144,27)"/><text x="75.6133%" y="511.50">_..</text></g><g><title>inet_recvmsg (33 samples, 2.18%)</title><rect x="75.3633%" y="485" width="2.1797%" height="15" fill="rgb(220,86,6)"/><text x="75.6133%" y="495.50">i..</text></g><g><title>tcp_recvmsg (32 samples, 2.11%)</title><rect x="75.4293%" y="469" width="2.1136%" height="15" fill="rgb(240,20,13)"/><text x="75.6793%" y="479.50">t..</text></g><g><title>entry_SYSCALL_64 (38 samples, 2.51%)</title><rect x="75.3633%" y="549" width="2.5099%" height="15" fill="rgb(217,89,34)"/><text x="75.6133%" y="559.50">en..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.33%)</title><rect x="77.5429%" y="533" width="0.3303%" height="15" fill="rgb(229,13,5)"/><text x="77.7929%" y="543.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (40 samples, 2.64%)</title><rect x="75.3633%" y="645" width="2.6420%" height="15" fill="rgb(244,67,35)"/><text x="75.6133%" y="655.50">&lt;s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (40 samples, 2.64%)</title><rect x="75.3633%" y="629" width="2.6420%" height="15" fill="rgb(221,40,2)"/><text x="75.6133%" y="639.50">&lt;s..</text></g><g><title>std::sys_common::net::TcpStream::read (40 samples, 2.64%)</title><rect x="75.3633%" y="613" width="2.6420%" height="15" fill="rgb(237,157,21)"/><text x="75.6133%" y="623.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (40 samples, 2.64%)</title><rect x="75.3633%" y="597" width="2.6420%" height="15" fill="rgb(222,94,11)"/><text x="75.6133%" y="607.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (40 samples, 2.64%)</title><rect x="75.3633%" y="581" width="2.6420%" height="15" fill="rgb(249,113,6)"/><text x="75.6133%" y="591.50">st..</text></g><g><title>__libc_recv (40 samples, 2.64%)</title><rect x="75.3633%" y="565" width="2.6420%" height="15" fill="rgb(238,137,36)"/><text x="75.6133%" y="575.50">__..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.13%)</title><rect x="77.8732%" y="549" width="0.1321%" height="15" fill="rgb(210,102,26)"/><text x="78.1232%" y="559.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (43 samples, 2.84%)</title><rect x="75.3633%" y="661" width="2.8402%" height="15" fill="rgb(218,30,30)"/><text x="75.6133%" y="671.50">ms..</text></g><g><title>psi_task_change (2 samples, 0.13%)</title><rect x="79.4584%" y="85" width="0.1321%" height="15" fill="rgb(214,67,26)"/><text x="79.7084%" y="95.50"></text></g><g><title>psi_group_change (2 samples, 0.13%)</title><rect x="79.4584%" y="69" width="0.1321%" height="15" fill="rgb(251,9,53)"/><text x="79.7084%" y="79.50"></text></g><g><title>enqueue_task (3 samples, 0.20%)</title><rect x="79.4584%" y="101" width="0.1982%" height="15" fill="rgb(228,204,25)"/><text x="79.7084%" y="111.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.40%)</title><rect x="79.6565%" y="101" width="0.3963%" height="15" fill="rgb(207,153,8)"/><text x="79.9065%" y="111.50"></text></g><g><title>enqueue_entity (5 samples, 0.33%)</title><rect x="79.7226%" y="85" width="0.3303%" height="15" fill="rgb(242,9,16)"/><text x="79.9726%" y="95.50"></text></g><g><title>update_cfs_group (3 samples, 0.20%)</title><rect x="79.8547%" y="69" width="0.1982%" height="15" fill="rgb(217,211,10)"/><text x="80.1047%" y="79.50"></text></g><g><title>try_to_wake_up (13 samples, 0.86%)</title><rect x="79.3923%" y="117" width="0.8587%" height="15" fill="rgb(219,228,52)"/><text x="79.6423%" y="127.50"></text></g><g><title>update_rq_clock (2 samples, 0.13%)</title><rect x="80.1189%" y="101" width="0.1321%" height="15" fill="rgb(231,92,29)"/><text x="80.3689%" y="111.50"></text></g><g><title>sock_def_readable (14 samples, 0.92%)</title><rect x="79.3923%" y="165" width="0.9247%" height="15" fill="rgb(232,8,23)"/><text x="79.6423%" y="175.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.92%)</title><rect x="79.3923%" y="149" width="0.9247%" height="15" fill="rgb(216,211,34)"/><text x="79.6423%" y="159.50"></text></g><g><title>__wake_up_common (14 samples, 0.92%)</title><rect x="79.3923%" y="133" width="0.9247%" height="15" fill="rgb(236,151,0)"/><text x="79.6423%" y="143.50"></text></g><g><title>ip_local_deliver (20 samples, 1.32%)</title><rect x="79.1942%" y="261" width="1.3210%" height="15" fill="rgb(209,168,3)"/><text x="79.4442%" y="271.50"></text></g><g><title>ip_local_deliver_finish (20 samples, 1.32%)</title><rect x="79.1942%" y="245" width="1.3210%" height="15" fill="rgb(208,129,28)"/><text x="79.4442%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (19 samples, 1.25%)</title><rect x="79.2602%" y="229" width="1.2550%" height="15" fill="rgb(229,78,22)"/><text x="79.5102%" y="239.50"></text></g><g><title>tcp_v4_rcv (19 samples, 1.25%)</title><rect x="79.2602%" y="213" width="1.2550%" height="15" fill="rgb(228,187,13)"/><text x="79.5102%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 1.25%)</title><rect x="79.2602%" y="197" width="1.2550%" height="15" fill="rgb(240,119,24)"/><text x="79.5102%" y="207.50"></text></g><g><title>tcp_rcv_established (19 samples, 1.25%)</title><rect x="79.2602%" y="181" width="1.2550%" height="15" fill="rgb(209,194,42)"/><text x="79.5102%" y="191.50"></text></g><g><title>__ip_queue_xmit (27 samples, 1.78%)</title><rect x="78.7979%" y="437" width="1.7834%" height="15" fill="rgb(247,200,46)"/><text x="79.0479%" y="447.50">_..</text></g><g><title>ip_output (26 samples, 1.72%)</title><rect x="78.8639%" y="421" width="1.7173%" height="15" fill="rgb(218,76,16)"/><text x="79.1139%" y="431.50"></text></g><g><title>ip_finish_output2 (26 samples, 1.72%)</title><rect x="78.8639%" y="405" width="1.7173%" height="15" fill="rgb(225,21,48)"/><text x="79.1139%" y="415.50"></text></g><g><title>__local_bh_enable_ip (24 samples, 1.59%)</title><rect x="78.9960%" y="389" width="1.5852%" height="15" fill="rgb(239,223,50)"/><text x="79.2460%" y="399.50"></text></g><g><title>do_softirq (24 samples, 1.59%)</title><rect x="78.9960%" y="373" width="1.5852%" height="15" fill="rgb(244,45,21)"/><text x="79.2460%" y="383.50"></text></g><g><title>do_softirq_own_stack (24 samples, 1.59%)</title><rect x="78.9960%" y="357" width="1.5852%" height="15" fill="rgb(232,33,43)"/><text x="79.2460%" y="367.50"></text></g><g><title>__do_softirq (24 samples, 1.59%)</title><rect x="78.9960%" y="341" width="1.5852%" height="15" fill="rgb(209,8,3)"/><text x="79.2460%" y="351.50"></text></g><g><title>net_rx_action (23 samples, 1.52%)</title><rect x="79.0621%" y="325" width="1.5192%" height="15" fill="rgb(214,25,53)"/><text x="79.3121%" y="335.50"></text></g><g><title>process_backlog (22 samples, 1.45%)</title><rect x="79.1281%" y="309" width="1.4531%" height="15" fill="rgb(254,186,54)"/><text x="79.3781%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (22 samples, 1.45%)</title><rect x="79.1281%" y="293" width="1.4531%" height="15" fill="rgb(208,174,49)"/><text x="79.3781%" y="303.50"></text></g><g><title>ip_rcv (21 samples, 1.39%)</title><rect x="79.1942%" y="277" width="1.3871%" height="15" fill="rgb(233,191,51)"/><text x="79.4442%" y="287.50"></text></g><g><title>__tcp_transmit_skb (31 samples, 2.05%)</title><rect x="78.6658%" y="453" width="2.0476%" height="15" fill="rgb(222,134,10)"/><text x="78.9158%" y="463.50">_..</text></g><g><title>skb_clone (2 samples, 0.13%)</title><rect x="80.5812%" y="437" width="0.1321%" height="15" fill="rgb(230,226,20)"/><text x="80.8312%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (34 samples, 2.25%)</title><rect x="78.5337%" y="485" width="2.2457%" height="15" fill="rgb(251,111,25)"/><text x="78.7837%" y="495.50">_..</text></g><g><title>tcp_write_xmit (33 samples, 2.18%)</title><rect x="78.5997%" y="469" width="2.1797%" height="15" fill="rgb(224,40,46)"/><text x="78.8497%" y="479.50">t..</text></g><g><title>sk_stream_alloc_skb (2 samples, 0.13%)</title><rect x="80.7794%" y="485" width="0.1321%" height="15" fill="rgb(236,108,47)"/><text x="81.0294%" y="495.50"></text></g><g><title>__alloc_skb (2 samples, 0.13%)</title><rect x="80.7794%" y="469" width="0.1321%" height="15" fill="rgb(234,93,0)"/><text x="81.0294%" y="479.50"></text></g><g><title>sock_sendmsg (44 samples, 2.91%)</title><rect x="78.2695%" y="533" width="2.9062%" height="15" fill="rgb(224,213,32)"/><text x="78.5195%" y="543.50">so..</text></g><g><title>tcp_sendmsg (44 samples, 2.91%)</title><rect x="78.2695%" y="517" width="2.9062%" height="15" fill="rgb(251,11,48)"/><text x="78.5195%" y="527.50">tc..</text></g><g><title>tcp_sendmsg_locked (42 samples, 2.77%)</title><rect x="78.4016%" y="501" width="2.7741%" height="15" fill="rgb(236,173,5)"/><text x="78.6516%" y="511.50">tc..</text></g><g><title>tcp_send_mss (4 samples, 0.26%)</title><rect x="80.9115%" y="485" width="0.2642%" height="15" fill="rgb(230,95,12)"/><text x="81.1615%" y="495.50"></text></g><g><title>tcp_current_mss (4 samples, 0.26%)</title><rect x="80.9115%" y="469" width="0.2642%" height="15" fill="rgb(232,209,1)"/><text x="81.1615%" y="479.50"></text></g><g><title>ipv4_mtu (2 samples, 0.13%)</title><rect x="81.0436%" y="453" width="0.1321%" height="15" fill="rgb(232,6,1)"/><text x="81.2936%" y="463.50"></text></g><g><title>__x64_sys_sendto (45 samples, 2.97%)</title><rect x="78.2695%" y="565" width="2.9723%" height="15" fill="rgb(210,224,50)"/><text x="78.5195%" y="575.50">__x..</text></g><g><title>__sys_sendto (45 samples, 2.97%)</title><rect x="78.2695%" y="549" width="2.9723%" height="15" fill="rgb(228,127,35)"/><text x="78.5195%" y="559.50">__s..</text></g><g><title>do_syscall_64 (47 samples, 3.10%)</title><rect x="78.2695%" y="581" width="3.1044%" height="15" fill="rgb(245,102,45)"/><text x="78.5195%" y="591.50">do_..</text></g><g><title>entry_SYSCALL_64 (48 samples, 3.17%)</title><rect x="78.2695%" y="597" width="3.1704%" height="15" fill="rgb(214,1,49)"/><text x="78.5195%" y="607.50">ent..</text></g><g><title>__GI___clone (105 samples, 6.94%)</title><rect x="74.6367%" y="805" width="6.9353%" height="15" fill="rgb(226,163,40)"/><text x="74.8867%" y="815.50">__GI___cl..</text></g><g><title>start_thread (105 samples, 6.94%)</title><rect x="74.6367%" y="789" width="6.9353%" height="15" fill="rgb(239,212,28)"/><text x="74.8867%" y="799.50">start_thr..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (105 samples, 6.94%)</title><rect x="74.6367%" y="773" width="6.9353%" height="15" fill="rgb(220,20,13)"/><text x="74.8867%" y="783.50">std::sys:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (105 samples, 6.94%)</title><rect x="74.6367%" y="757" width="6.9353%" height="15" fill="rgb(210,164,35)"/><text x="74.8867%" y="767.50">&lt;alloc::b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (105 samples, 6.94%)</title><rect x="74.6367%" y="741" width="6.9353%" height="15" fill="rgb(248,109,41)"/><text x="74.8867%" y="751.50">&lt;alloc::b..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (105 samples, 6.94%)</title><rect x="74.6367%" y="725" width="6.9353%" height="15" fill="rgb(238,23,50)"/><text x="74.8867%" y="735.50">core::ops..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (105 samples, 6.94%)</title><rect x="74.6367%" y="709" width="6.9353%" height="15" fill="rgb(211,48,49)"/><text x="74.8867%" y="719.50">std::sys_..</text></g><g><title>decor::Shim::run_on_tcp (105 samples, 6.94%)</title><rect x="74.6367%" y="693" width="6.9353%" height="15" fill="rgb(223,36,21)"/><text x="74.8867%" y="703.50">decor::Sh..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (105 samples, 6.94%)</title><rect x="74.6367%" y="677" width="6.9353%" height="15" fill="rgb(207,123,46)"/><text x="74.8867%" y="687.50">msql_srv:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (51 samples, 3.37%)</title><rect x="78.2034%" y="661" width="3.3686%" height="15" fill="rgb(240,218,32)"/><text x="78.4534%" y="671.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (51 samples, 3.37%)</title><rect x="78.2034%" y="645" width="3.3686%" height="15" fill="rgb(252,5,43)"/><text x="78.4534%" y="655.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::write (51 samples, 3.37%)</title><rect x="78.2034%" y="629" width="3.3686%" height="15" fill="rgb(252,84,19)"/><text x="78.4534%" y="639.50">std..</text></g><g><title>__libc_send (51 samples, 3.37%)</title><rect x="78.2034%" y="613" width="3.3686%" height="15" fill="rgb(243,152,39)"/><text x="78.4534%" y="623.50">__l..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.13%)</title><rect x="81.4399%" y="597" width="0.1321%" height="15" fill="rgb(234,160,15)"/><text x="81.6899%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (9 samples, 0.59%)</title><rect x="81.9022%" y="549" width="0.5945%" height="15" fill="rgb(237,34,20)"/><text x="82.1522%" y="559.50"></text></g><g><title>[libhwloc.so.15.2.0] (7 samples, 0.46%)</title><rect x="82.0343%" y="533" width="0.4624%" height="15" fill="rgb(229,97,13)"/><text x="82.2843%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (234 samples, 15.46%)</title><rect x="82.8269%" y="341" width="15.4557%" height="15" fill="rgb(234,71,50)"/><text x="83.0769%" y="351.50">__perf_event_task_sched_..</text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 15.32%)</title><rect x="82.9590%" y="325" width="15.3236%" height="15" fill="rgb(253,155,4)"/><text x="83.2090%" y="335.50">__intel_pmu_enable_all...</text></g><g><title>native_write_msr (232 samples, 15.32%)</title><rect x="82.9590%" y="309" width="15.3236%" height="15" fill="rgb(222,185,37)"/><text x="83.2090%" y="319.50">native_write_msr</text></g><g><title>__set_cpus_allowed_ptr (235 samples, 15.52%)</title><rect x="82.8269%" y="453" width="15.5218%" height="15" fill="rgb(251,177,13)"/><text x="83.0769%" y="463.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (235 samples, 15.52%)</title><rect x="82.8269%" y="437" width="15.5218%" height="15" fill="rgb(250,179,40)"/><text x="83.0769%" y="447.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (235 samples, 15.52%)</title><rect x="82.8269%" y="421" width="15.5218%" height="15" fill="rgb(242,44,2)"/><text x="83.0769%" y="431.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (235 samples, 15.52%)</title><rect x="82.8269%" y="405" width="15.5218%" height="15" fill="rgb(216,177,13)"/><text x="83.0769%" y="415.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (235 samples, 15.52%)</title><rect x="82.8269%" y="389" width="15.5218%" height="15" fill="rgb(216,106,43)"/><text x="83.0769%" y="399.50">preempt_schedule_common</text></g><g><title>__schedule (235 samples, 15.52%)</title><rect x="82.8269%" y="373" width="15.5218%" height="15" fill="rgb(216,183,2)"/><text x="83.0769%" y="383.50">__schedule</text></g><g><title>finish_task_switch (235 samples, 15.52%)</title><rect x="82.8269%" y="357" width="15.5218%" height="15" fill="rgb(249,75,3)"/><text x="83.0769%" y="367.50">finish_task_switch</text></g><g><title>do_syscall_64 (238 samples, 15.72%)</title><rect x="82.6948%" y="501" width="15.7199%" height="15" fill="rgb(219,67,39)"/><text x="82.9448%" y="511.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (237 samples, 15.65%)</title><rect x="82.7609%" y="485" width="15.6539%" height="15" fill="rgb(253,228,2)"/><text x="83.0109%" y="495.50">__x64_sys_sched_setaffin..</text></g><g><title>sched_setaffinity (237 samples, 15.65%)</title><rect x="82.7609%" y="469" width="15.6539%" height="15" fill="rgb(235,138,27)"/><text x="83.0109%" y="479.50">sched_setaffinity</text></g><g><title>entry_SYSCALL_64 (240 samples, 15.85%)</title><rect x="82.6948%" y="517" width="15.8520%" height="15" fill="rgb(236,97,51)"/><text x="82.9448%" y="527.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.13%)</title><rect x="98.4148%" y="501" width="0.1321%" height="15" fill="rgb(240,80,30)"/><text x="98.6648%" y="511.50"></text></g><g><title>hwloc::Topology::new (253 samples, 16.71%)</title><rect x="81.9022%" y="629" width="16.7107%" height="15" fill="rgb(230,178,19)"/><text x="82.1522%" y="639.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (253 samples, 16.71%)</title><rect x="81.9022%" y="613" width="16.7107%" height="15" fill="rgb(210,190,27)"/><text x="82.1522%" y="623.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (253 samples, 16.71%)</title><rect x="81.9022%" y="597" width="16.7107%" height="15" fill="rgb(222,107,31)"/><text x="82.1522%" y="607.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (253 samples, 16.71%)</title><rect x="81.9022%" y="581" width="16.7107%" height="15" fill="rgb(216,127,34)"/><text x="82.1522%" y="591.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (253 samples, 16.71%)</title><rect x="81.9022%" y="565" width="16.7107%" height="15" fill="rgb(234,116,52)"/><text x="82.1522%" y="575.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (244 samples, 16.12%)</title><rect x="82.4967%" y="549" width="16.1162%" height="15" fill="rgb(222,124,15)"/><text x="82.7467%" y="559.50">hwloc_linux_set_tid_cpubi..</text></g><g><title>__GI___sched_setaffinity_new (242 samples, 15.98%)</title><rect x="82.6288%" y="533" width="15.9841%" height="15" fill="rgb(231,179,28)"/><text x="82.8788%" y="543.50">__GI___sched_setaffinity_..</text></g><g><title>__libc_start_main (256 samples, 16.91%)</title><rect x="81.8362%" y="789" width="16.9089%" height="15" fill="rgb(226,93,45)"/><text x="82.0862%" y="799.50">__libc_start_main</text></g><g><title>main (256 samples, 16.91%)</title><rect x="81.8362%" y="773" width="16.9089%" height="15" fill="rgb(215,8,51)"/><text x="82.0862%" y="783.50">main</text></g><g><title>std::rt::lang_start_internal (256 samples, 16.91%)</title><rect x="81.8362%" y="757" width="16.9089%" height="15" fill="rgb(223,106,5)"/><text x="82.0862%" y="767.50">std::rt::lang_start_intern..</text></g><g><title>std::panic::catch_unwind (256 samples, 16.91%)</title><rect x="81.8362%" y="741" width="16.9089%" height="15" fill="rgb(250,191,5)"/><text x="82.0862%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (256 samples, 16.91%)</title><rect x="81.8362%" y="725" width="16.9089%" height="15" fill="rgb(242,132,44)"/><text x="82.0862%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (256 samples, 16.91%)</title><rect x="81.8362%" y="709" width="16.9089%" height="15" fill="rgb(251,152,29)"/><text x="82.0862%" y="719.50">std::panicking::try::do_ca..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (256 samples, 16.91%)</title><rect x="81.8362%" y="693" width="16.9089%" height="15" fill="rgb(218,179,5)"/><text x="82.0862%" y="703.50">core::ops::function::impls..</text></g><g><title>std::rt::lang_start::_{{closure}} (256 samples, 16.91%)</title><rect x="81.8362%" y="677" width="16.9089%" height="15" fill="rgb(227,67,19)"/><text x="82.0862%" y="687.50">std::rt::lang_start::_{{cl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (256 samples, 16.91%)</title><rect x="81.8362%" y="661" width="16.9089%" height="15" fill="rgb(233,119,31)"/><text x="82.0862%" y="671.50">std::sys_common::backtrace..</text></g><g><title>lobsters::main (256 samples, 16.91%)</title><rect x="81.8362%" y="645" width="16.9089%" height="15" fill="rgb(241,120,22)"/><text x="82.0862%" y="655.50">lobsters::main</text></g><g><title>_start (257 samples, 16.97%)</title><rect x="81.8362%" y="805" width="16.9749%" height="15" fill="rgb(224,102,30)"/><text x="82.0862%" y="815.50">_start</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="98.8111%" y="805" width="0.1321%" height="15" fill="rgb(210,164,37)"/><text x="99.0611%" y="815.50"></text></g><g><title>anon.5d78f01d0c76bb6b8aa47fe516d3530c.58.llvm.16501999531583085355 (3 samples, 0.20%)</title><rect x="98.9432%" y="805" width="0.1982%" height="15" fill="rgb(226,191,16)"/><text x="99.1932%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.20%)</title><rect x="98.9432%" y="789" width="0.1982%" height="15" fill="rgb(214,40,45)"/><text x="99.1932%" y="799.50"></text></g><g><title>[vmlinux] (2 samples, 0.13%)</title><rect x="99.3395%" y="773" width="0.1321%" height="15" fill="rgb(244,29,26)"/><text x="99.5895%" y="783.50"></text></g><g><title>do_group_exit (2 samples, 0.13%)</title><rect x="99.3395%" y="757" width="0.1321%" height="15" fill="rgb(216,16,5)"/><text x="99.5895%" y="767.50"></text></g><g><title>do_exit (2 samples, 0.13%)</title><rect x="99.3395%" y="741" width="0.1321%" height="15" fill="rgb(249,76,35)"/><text x="99.5895%" y="751.50"></text></g><g><title>mmput (2 samples, 0.13%)</title><rect x="99.3395%" y="725" width="0.1321%" height="15" fill="rgb(207,11,44)"/><text x="99.5895%" y="735.50"></text></g><g><title>exit_mmap (2 samples, 0.13%)</title><rect x="99.3395%" y="709" width="0.1321%" height="15" fill="rgb(228,190,49)"/><text x="99.5895%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.40%)</title><rect x="99.1413%" y="805" width="0.3963%" height="15" fill="rgb(214,173,12)"/><text x="99.3913%" y="815.50"></text></g><g><title>do_syscall_64 (3 samples, 0.20%)</title><rect x="99.3395%" y="789" width="0.1982%" height="15" fill="rgb(218,26,35)"/><text x="99.5895%" y="799.50"></text></g><g><title>lobsters (1,508 samples, 99.60%)</title><rect x="0.0000%" y="821" width="99.6037%" height="15" fill="rgb(220,200,19)"/><text x="0.2500%" y="831.50">lobsters</text></g><g><title>all (1,514 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(239,95,49)"/><text x="0.2500%" y="847.50"></text></g><g><title>perf (6 samples, 0.40%)</title><rect x="99.6037%" y="821" width="0.3963%" height="15" fill="rgb(235,85,53)"/><text x="99.8537%" y="831.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.40%)</title><rect x="99.6037%" y="805" width="0.3963%" height="15" fill="rgb(233,133,31)"/><text x="99.8537%" y="815.50"></text></g><g><title>do_syscall_64 (6 samples, 0.40%)</title><rect x="99.6037%" y="789" width="0.3963%" height="15" fill="rgb(218,25,20)"/><text x="99.8537%" y="799.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.40%)</title><rect x="99.6037%" y="773" width="0.3963%" height="15" fill="rgb(252,210,38)"/><text x="99.8537%" y="783.50"></text></g><g><title>do_execve (6 samples, 0.40%)</title><rect x="99.6037%" y="757" width="0.3963%" height="15" fill="rgb(242,134,21)"/><text x="99.8537%" y="767.50"></text></g><g><title>__do_execve_file (6 samples, 0.40%)</title><rect x="99.6037%" y="741" width="0.3963%" height="15" fill="rgb(213,28,48)"/><text x="99.8537%" y="751.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.40%)</title><rect x="99.6037%" y="725" width="0.3963%" height="15" fill="rgb(250,196,2)"/><text x="99.8537%" y="735.50"></text></g><g><title>load_elf_binary (6 samples, 0.40%)</title><rect x="99.6037%" y="709" width="0.3963%" height="15" fill="rgb(227,5,17)"/><text x="99.8537%" y="719.50"></text></g><g><title>setup_new_exec (6 samples, 0.40%)</title><rect x="99.6037%" y="693" width="0.3963%" height="15" fill="rgb(221,226,24)"/><text x="99.8537%" y="703.50"></text></g><g><title>perf_event_exec (6 samples, 0.40%)</title><rect x="99.6037%" y="677" width="0.3963%" height="15" fill="rgb(211,5,48)"/><text x="99.8537%" y="687.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.33%)</title><rect x="99.6697%" y="661" width="0.3303%" height="15" fill="rgb(219,150,6)"/><text x="99.9197%" y="671.50"></text></g><g><title>native_write_msr (5 samples, 0.33%)</title><rect x="99.6697%" y="645" width="0.3303%" height="15" fill="rgb(251,46,16)"/><text x="99.9197%" y="655.50"></text></g></svg></svg>