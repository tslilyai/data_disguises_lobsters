<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180"><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="0.0000%" y="837" width="0.1121%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="847.50"></text></g><g><title>[[stack]] (2 samples, 0.22%)</title><rect x="0.0000%" y="853" width="0.2242%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="863.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="0.1121%" y="837" width="0.1121%" height="15" fill="rgb(221,193,54)"/><text x="0.3621%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.34%)</title><rect x="0.2242%" y="837" width="0.3363%" height="15" fill="rgb(248,212,6)"/><text x="0.4742%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="0.5605%" y="837" width="0.1121%" height="15" fill="rgb(208,68,35)"/><text x="0.8105%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="0.6726%" y="837" width="0.1121%" height="15" fill="rgb(232,128,0)"/><text x="0.9226%" y="847.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="0.7848%" y="837" width="0.2242%" height="15" fill="rgb(207,160,47)"/><text x="1.0348%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="1.0090%" y="837" width="0.1121%" height="15" fill="rgb(228,23,34)"/><text x="1.2590%" y="847.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="1.1211%" y="837" width="0.1121%" height="15" fill="rgb(218,30,26)"/><text x="1.3711%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.22%)</title><rect x="1.2332%" y="837" width="0.2242%" height="15" fill="rgb(220,122,19)"/><text x="1.4832%" y="847.50"></text></g><g><title>__libc_send (2 samples, 0.22%)</title><rect x="1.4574%" y="837" width="0.2242%" height="15" fill="rgb(250,228,42)"/><text x="1.7074%" y="847.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.22%)</title><rect x="1.4574%" y="821" width="0.2242%" height="15" fill="rgb(240,193,28)"/><text x="1.7074%" y="831.50"></text></g><g><title>_int_free (5 samples, 0.56%)</title><rect x="1.6816%" y="837" width="0.5605%" height="15" fill="rgb(216,20,37)"/><text x="1.9316%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.45%)</title><rect x="2.2422%" y="837" width="0.4484%" height="15" fill="rgb(206,188,39)"/><text x="2.4922%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.34%)</title><rect x="2.6906%" y="837" width="0.3363%" height="15" fill="rgb(217,207,13)"/><text x="2.9406%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="3.0269%" y="837" width="0.1121%" height="15" fill="rgb(231,73,38)"/><text x="3.2769%" y="847.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="3.1390%" y="837" width="0.1121%" height="15" fill="rgb(225,20,46)"/><text x="3.3890%" y="847.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (4 samples, 0.45%)</title><rect x="3.2511%" y="837" width="0.4484%" height="15" fill="rgb(210,31,41)"/><text x="3.5011%" y="847.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="3.6996%" y="837" width="0.2242%" height="15" fill="rgb(221,200,47)"/><text x="3.9496%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="3.9238%" y="837" width="0.1121%" height="15" fill="rgb(226,26,5)"/><text x="4.1738%" y="847.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="4.0359%" y="837" width="0.1121%" height="15" fill="rgb(249,33,26)"/><text x="4.2859%" y="847.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="4.1480%" y="837" width="0.1121%" height="15" fill="rgb(235,183,28)"/><text x="4.3980%" y="847.50"></text></g><g><title>[anon] (37 samples, 4.15%)</title><rect x="0.2242%" y="853" width="4.1480%" height="15" fill="rgb(221,5,38)"/><text x="0.4742%" y="863.50">[anon]</text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="4.2601%" y="837" width="0.1121%" height="15" fill="rgb(247,18,42)"/><text x="4.5101%" y="847.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="4.3722%" y="853" width="0.1121%" height="15" fill="rgb(241,131,45)"/><text x="4.6222%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="4.3722%" y="837" width="0.1121%" height="15" fill="rgb(249,31,29)"/><text x="4.6222%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="4.4843%" y="837" width="0.1121%" height="15" fill="rgb(225,111,53)"/><text x="4.7343%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="4.5964%" y="837" width="0.1121%" height="15" fill="rgb(238,160,17)"/><text x="4.8464%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="4.7085%" y="837" width="0.1121%" height="15" fill="rgb(214,148,48)"/><text x="4.9585%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="4.8206%" y="837" width="0.1121%" height="15" fill="rgb(232,36,49)"/><text x="5.0706%" y="847.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="4.8206%" y="821" width="0.1121%" height="15" fill="rgb(209,103,24)"/><text x="5.0706%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="4.8206%" y="805" width="0.1121%" height="15" fill="rgb(229,88,8)"/><text x="5.0706%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="4.8206%" y="789" width="0.1121%" height="15" fill="rgb(213,181,19)"/><text x="5.0706%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.11%)</title><rect x="4.8206%" y="773" width="0.1121%" height="15" fill="rgb(254,191,54)"/><text x="5.0706%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="4.8206%" y="757" width="0.1121%" height="15" fill="rgb(241,83,37)"/><text x="5.0706%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="4.8206%" y="741" width="0.1121%" height="15" fill="rgb(233,36,39)"/><text x="5.0706%" y="751.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="4.8206%" y="725" width="0.1121%" height="15" fill="rgb(226,3,54)"/><text x="5.0706%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0448%" y="741" width="0.1121%" height="15" fill="rgb(245,192,40)"/><text x="5.2948%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="5.0448%" y="725" width="0.1121%" height="15" fill="rgb(238,167,29)"/><text x="5.2948%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0448%" y="709" width="0.1121%" height="15" fill="rgb(232,182,51)"/><text x="5.2948%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0448%" y="693" width="0.1121%" height="15" fill="rgb(231,60,39)"/><text x="5.2948%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="5.0448%" y="677" width="0.1121%" height="15" fill="rgb(208,69,12)"/><text x="5.2948%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0448%" y="661" width="0.1121%" height="15" fill="rgb(235,93,37)"/><text x="5.2948%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0448%" y="645" width="0.1121%" height="15" fill="rgb(213,116,39)"/><text x="5.2948%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="5.0448%" y="629" width="0.1121%" height="15" fill="rgb(222,207,29)"/><text x="5.2948%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (1 samples, 0.11%)</title><rect x="5.0448%" y="613" width="0.1121%" height="15" fill="rgb(206,96,30)"/><text x="5.2948%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="5.1570%" y="709" width="0.1121%" height="15" fill="rgb(218,138,4)"/><text x="5.4070%" y="719.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.34%)</title><rect x="5.1570%" y="725" width="0.3363%" height="15" fill="rgb(250,191,14)"/><text x="5.4070%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.22%)</title><rect x="5.2691%" y="709" width="0.2242%" height="15" fill="rgb(239,60,40)"/><text x="5.5191%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.3812%" y="693" width="0.1121%" height="15" fill="rgb(206,27,48)"/><text x="5.6312%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.3812%" y="677" width="0.1121%" height="15" fill="rgb(225,35,8)"/><text x="5.6312%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="5.3812%" y="661" width="0.1121%" height="15" fill="rgb(250,213,24)"/><text x="5.6312%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="5.3812%" y="645" width="0.1121%" height="15" fill="rgb(247,123,22)"/><text x="5.6312%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="5.3812%" y="629" width="0.1121%" height="15" fill="rgb(231,138,38)"/><text x="5.6312%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="5.3812%" y="613" width="0.1121%" height="15" fill="rgb(231,145,46)"/><text x="5.6312%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="5.3812%" y="597" width="0.1121%" height="15" fill="rgb(251,118,11)"/><text x="5.6312%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="5.3812%" y="581" width="0.1121%" height="15" fill="rgb(217,147,25)"/><text x="5.6312%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="5.3812%" y="565" width="0.1121%" height="15" fill="rgb(247,81,37)"/><text x="5.6312%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.45%)</title><rect x="5.1570%" y="741" width="0.4484%" height="15" fill="rgb(209,12,38)"/><text x="5.4070%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="5.4933%" y="725" width="0.1121%" height="15" fill="rgb(227,1,9)"/><text x="5.7433%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.67%)</title><rect x="5.0448%" y="757" width="0.6726%" height="15" fill="rgb(248,47,43)"/><text x="5.2948%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.6054%" y="741" width="0.1121%" height="15" fill="rgb(221,10,30)"/><text x="5.8554%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.7175%" y="725" width="0.1121%" height="15" fill="rgb(210,229,1)"/><text x="5.9675%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.7175%" y="709" width="0.1121%" height="15" fill="rgb(222,148,37)"/><text x="5.9675%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.7175%" y="693" width="0.1121%" height="15" fill="rgb(234,67,33)"/><text x="5.9675%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="5.7175%" y="677" width="0.1121%" height="15" fill="rgb(247,98,35)"/><text x="5.9675%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="5.7175%" y="661" width="0.1121%" height="15" fill="rgb(247,138,52)"/><text x="5.9675%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="5.7175%" y="645" width="0.1121%" height="15" fill="rgb(213,79,30)"/><text x="5.9675%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="5.7175%" y="629" width="0.1121%" height="15" fill="rgb(246,177,23)"/><text x="5.9675%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="5.7175%" y="613" width="0.1121%" height="15" fill="rgb(230,62,27)"/><text x="5.9675%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="5.7175%" y="597" width="0.1121%" height="15" fill="rgb(216,154,8)"/><text x="5.9675%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="5.7175%" y="581" width="0.1121%" height="15" fill="rgb(244,35,45)"/><text x="5.9675%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="5.7175%" y="565" width="0.1121%" height="15" fill="rgb(251,115,12)"/><text x="5.9675%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="5.7175%" y="549" width="0.1121%" height="15" fill="rgb(240,54,50)"/><text x="5.9675%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="5.7175%" y="533" width="0.1121%" height="15" fill="rgb(233,84,52)"/><text x="5.9675%" y="543.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 1.01%)</title><rect x="4.9327%" y="837" width="1.0090%" height="15" fill="rgb(207,117,47)"/><text x="5.1827%" y="847.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (8 samples, 0.90%)</title><rect x="5.0448%" y="821" width="0.8969%" height="15" fill="rgb(249,43,39)"/><text x="5.2948%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (8 samples, 0.90%)</title><rect x="5.0448%" y="805" width="0.8969%" height="15" fill="rgb(209,38,44)"/><text x="5.2948%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (8 samples, 0.90%)</title><rect x="5.0448%" y="789" width="0.8969%" height="15" fill="rgb(236,212,23)"/><text x="5.2948%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (8 samples, 0.90%)</title><rect x="5.0448%" y="773" width="0.8969%" height="15" fill="rgb(242,79,21)"/><text x="5.2948%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.22%)</title><rect x="5.7175%" y="757" width="0.2242%" height="15" fill="rgb(211,96,35)"/><text x="5.9675%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.22%)</title><rect x="5.7175%" y="741" width="0.2242%" height="15" fill="rgb(253,215,40)"/><text x="5.9675%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="5.8296%" y="725" width="0.1121%" height="15" fill="rgb(211,81,21)"/><text x="6.0796%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="5.8296%" y="709" width="0.1121%" height="15" fill="rgb(208,190,38)"/><text x="6.0796%" y="719.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="5.8296%" y="693" width="0.1121%" height="15" fill="rgb(235,213,38)"/><text x="6.0796%" y="703.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="5.8296%" y="677" width="0.1121%" height="15" fill="rgb(237,122,38)"/><text x="6.0796%" y="687.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="5.8296%" y="661" width="0.1121%" height="15" fill="rgb(244,218,35)"/><text x="6.0796%" y="671.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="5.8296%" y="645" width="0.1121%" height="15" fill="rgb(240,68,47)"/><text x="6.0796%" y="655.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="5.8296%" y="629" width="0.1121%" height="15" fill="rgb(210,16,53)"/><text x="6.0796%" y="639.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="5.8296%" y="613" width="0.1121%" height="15" fill="rgb(235,124,12)"/><text x="6.0796%" y="623.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="5.8296%" y="597" width="0.1121%" height="15" fill="rgb(224,169,11)"/><text x="6.0796%" y="607.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="5.8296%" y="581" width="0.1121%" height="15" fill="rgb(250,166,2)"/><text x="6.0796%" y="591.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="5.8296%" y="565" width="0.1121%" height="15" fill="rgb(242,216,29)"/><text x="6.0796%" y="575.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="5.8296%" y="549" width="0.1121%" height="15" fill="rgb(230,116,27)"/><text x="6.0796%" y="559.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="5.8296%" y="533" width="0.1121%" height="15" fill="rgb(228,99,48)"/><text x="6.0796%" y="543.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="5.9417%" y="837" width="0.1121%" height="15" fill="rgb(253,11,6)"/><text x="6.1917%" y="847.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.11%)</title><rect x="6.0538%" y="837" width="0.1121%" height="15" fill="rgb(247,143,39)"/><text x="6.3038%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.1659%" y="837" width="0.1121%" height="15" fill="rgb(236,97,10)"/><text x="6.4159%" y="847.50"></text></g><g><title>__GI___libc_free (2 samples, 0.22%)</title><rect x="6.2780%" y="837" width="0.2242%" height="15" fill="rgb(233,208,19)"/><text x="6.5280%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="6.5022%" y="837" width="0.1121%" height="15" fill="rgb(216,164,2)"/><text x="6.7522%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="6.6143%" y="837" width="0.1121%" height="15" fill="rgb(220,129,5)"/><text x="6.8643%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="6.6143%" y="821" width="0.1121%" height="15" fill="rgb(242,17,10)"/><text x="6.8643%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.34%)</title><rect x="6.7265%" y="837" width="0.3363%" height="15" fill="rgb(242,107,0)"/><text x="6.9765%" y="847.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.22%)</title><rect x="7.0628%" y="837" width="0.2242%" height="15" fill="rgb(251,28,31)"/><text x="7.3128%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="7.2870%" y="837" width="0.1121%" height="15" fill="rgb(233,223,10)"/><text x="7.5370%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="7.3991%" y="837" width="0.1121%" height="15" fill="rgb(215,21,27)"/><text x="7.6491%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="7.5112%" y="837" width="0.1121%" height="15" fill="rgb(232,23,21)"/><text x="7.7612%" y="847.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.22%)</title><rect x="7.6233%" y="757" width="0.2242%" height="15" fill="rgb(244,5,23)"/><text x="7.8733%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.22%)</title><rect x="7.6233%" y="741" width="0.2242%" height="15" fill="rgb(226,81,46)"/><text x="7.8733%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.22%)</title><rect x="7.6233%" y="725" width="0.2242%" height="15" fill="rgb(247,70,30)"/><text x="7.8733%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.22%)</title><rect x="7.6233%" y="709" width="0.2242%" height="15" fill="rgb(212,68,19)"/><text x="7.8733%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="7.6233%" y="693" width="0.2242%" height="15" fill="rgb(240,187,13)"/><text x="7.8733%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.22%)</title><rect x="7.6233%" y="677" width="0.2242%" height="15" fill="rgb(223,113,26)"/><text x="7.8733%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.22%)</title><rect x="7.6233%" y="661" width="0.2242%" height="15" fill="rgb(206,192,2)"/><text x="7.8733%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="7.6233%" y="645" width="0.2242%" height="15" fill="rgb(241,108,4)"/><text x="7.8733%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="7.6233%" y="629" width="0.2242%" height="15" fill="rgb(247,173,49)"/><text x="7.8733%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.22%)</title><rect x="7.6233%" y="613" width="0.2242%" height="15" fill="rgb(224,114,35)"/><text x="7.8733%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.34%)</title><rect x="7.6233%" y="837" width="0.3363%" height="15" fill="rgb(245,159,27)"/><text x="7.8733%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.34%)</title><rect x="7.6233%" y="821" width="0.3363%" height="15" fill="rgb(245,172,44)"/><text x="7.8733%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.34%)</title><rect x="7.6233%" y="805" width="0.3363%" height="15" fill="rgb(236,23,11)"/><text x="7.8733%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.34%)</title><rect x="7.6233%" y="789" width="0.3363%" height="15" fill="rgb(205,117,38)"/><text x="7.8733%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.34%)</title><rect x="7.6233%" y="773" width="0.3363%" height="15" fill="rgb(237,72,25)"/><text x="7.8733%" y="783.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.11%)</title><rect x="7.8475%" y="757" width="0.1121%" height="15" fill="rgb(244,70,9)"/><text x="8.0975%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.8475%" y="741" width="0.1121%" height="15" fill="rgb(217,125,39)"/><text x="8.0975%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="7.8475%" y="725" width="0.1121%" height="15" fill="rgb(235,36,10)"/><text x="8.0975%" y="735.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="7.8475%" y="709" width="0.1121%" height="15" fill="rgb(251,123,47)"/><text x="8.0975%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="7.8475%" y="693" width="0.1121%" height="15" fill="rgb(221,13,13)"/><text x="8.0975%" y="703.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.8475%" y="677" width="0.1121%" height="15" fill="rgb(238,131,9)"/><text x="8.0975%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.34%)</title><rect x="7.9596%" y="837" width="0.3363%" height="15" fill="rgb(211,50,8)"/><text x="8.2096%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="8.2960%" y="821" width="0.2242%" height="15" fill="rgb(245,182,24)"/><text x="8.5460%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.22%)</title><rect x="8.2960%" y="805" width="0.2242%" height="15" fill="rgb(242,14,37)"/><text x="8.5460%" y="815.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.22%)</title><rect x="8.2960%" y="789" width="0.2242%" height="15" fill="rgb(246,228,12)"/><text x="8.5460%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.22%)</title><rect x="8.2960%" y="773" width="0.2242%" height="15" fill="rgb(213,55,15)"/><text x="8.5460%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="8.2960%" y="757" width="0.2242%" height="15" fill="rgb(209,9,3)"/><text x="8.5460%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.22%)</title><rect x="8.2960%" y="741" width="0.2242%" height="15" fill="rgb(230,59,30)"/><text x="8.5460%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.22%)</title><rect x="8.2960%" y="725" width="0.2242%" height="15" fill="rgb(209,121,21)"/><text x="8.5460%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="8.2960%" y="709" width="0.2242%" height="15" fill="rgb(220,109,13)"/><text x="8.5460%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.22%)</title><rect x="8.2960%" y="693" width="0.2242%" height="15" fill="rgb(232,18,1)"/><text x="8.5460%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="8.4081%" y="677" width="0.1121%" height="15" fill="rgb(215,41,42)"/><text x="8.6581%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.5202%" y="805" width="0.1121%" height="15" fill="rgb(224,123,36)"/><text x="8.7702%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.5202%" y="789" width="0.1121%" height="15" fill="rgb(240,125,3)"/><text x="8.7702%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.5202%" y="773" width="0.1121%" height="15" fill="rgb(205,98,50)"/><text x="8.7702%" y="783.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="8.5202%" y="757" width="0.1121%" height="15" fill="rgb(205,185,37)"/><text x="8.7702%" y="767.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="8.5202%" y="741" width="0.1121%" height="15" fill="rgb(238,207,15)"/><text x="8.7702%" y="751.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="8.5202%" y="725" width="0.1121%" height="15" fill="rgb(213,199,42)"/><text x="8.7702%" y="735.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="8.5202%" y="709" width="0.1121%" height="15" fill="rgb(235,201,11)"/><text x="8.7702%" y="719.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="8.5202%" y="693" width="0.1121%" height="15" fill="rgb(207,46,11)"/><text x="8.7702%" y="703.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="8.5202%" y="677" width="0.1121%" height="15" fill="rgb(241,35,35)"/><text x="8.7702%" y="687.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="8.5202%" y="661" width="0.1121%" height="15" fill="rgb(243,32,47)"/><text x="8.7702%" y="671.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="8.5202%" y="645" width="0.1121%" height="15" fill="rgb(247,202,23)"/><text x="8.7702%" y="655.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="8.5202%" y="629" width="0.1121%" height="15" fill="rgb(219,102,11)"/><text x="8.7702%" y="639.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.11%)</title><rect x="8.5202%" y="613" width="0.1121%" height="15" fill="rgb(243,110,44)"/><text x="8.7702%" y="623.50"></text></g><g><title>do_lookup_x (1 samples, 0.11%)</title><rect x="8.5202%" y="597" width="0.1121%" height="15" fill="rgb(222,74,54)"/><text x="8.7702%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.6323%" y="725" width="0.1121%" height="15" fill="rgb(216,99,12)"/><text x="8.8823%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="8.6323%" y="709" width="0.1121%" height="15" fill="rgb(226,22,26)"/><text x="8.8823%" y="719.50"></text></g><g><title>__GI___openat (1 samples, 0.11%)</title><rect x="8.6323%" y="693" width="0.1121%" height="15" fill="rgb(217,163,10)"/><text x="8.8823%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="8.6323%" y="677" width="0.1121%" height="15" fill="rgb(213,25,53)"/><text x="8.8823%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="8.6323%" y="661" width="0.1121%" height="15" fill="rgb(252,105,26)"/><text x="8.8823%" y="671.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.11%)</title><rect x="8.6323%" y="645" width="0.1121%" height="15" fill="rgb(220,39,43)"/><text x="8.8823%" y="655.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.11%)</title><rect x="8.6323%" y="629" width="0.1121%" height="15" fill="rgb(229,68,48)"/><text x="8.8823%" y="639.50"></text></g><g><title>do_filp_open (1 samples, 0.11%)</title><rect x="8.6323%" y="613" width="0.1121%" height="15" fill="rgb(252,8,32)"/><text x="8.8823%" y="623.50"></text></g><g><title>path_openat (1 samples, 0.11%)</title><rect x="8.6323%" y="597" width="0.1121%" height="15" fill="rgb(223,20,43)"/><text x="8.8823%" y="607.50"></text></g><g><title>link_path_walk (1 samples, 0.11%)</title><rect x="8.6323%" y="581" width="0.1121%" height="15" fill="rgb(229,81,49)"/><text x="8.8823%" y="591.50"></text></g><g><title>walk_component (1 samples, 0.11%)</title><rect x="8.6323%" y="565" width="0.1121%" height="15" fill="rgb(236,28,36)"/><text x="8.8823%" y="575.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.11%)</title><rect x="8.6323%" y="549" width="0.1121%" height="15" fill="rgb(249,185,26)"/><text x="8.8823%" y="559.50"></text></g><g><title>__d_lookup (1 samples, 0.11%)</title><rect x="8.6323%" y="533" width="0.1121%" height="15" fill="rgb(249,174,33)"/><text x="8.8823%" y="543.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.22%)</title><rect x="8.6323%" y="741" width="0.2242%" height="15" fill="rgb(233,201,37)"/><text x="8.8823%" y="751.50"></text></g><g><title>__GI___openat (1 samples, 0.11%)</title><rect x="8.7444%" y="725" width="0.1121%" height="15" fill="rgb(221,78,26)"/><text x="8.9944%" y="735.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="8.7444%" y="709" width="0.1121%" height="15" fill="rgb(250,127,30)"/><text x="8.9944%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="8.7444%" y="693" width="0.1121%" height="15" fill="rgb(230,49,44)"/><text x="8.9944%" y="703.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.11%)</title><rect x="8.7444%" y="677" width="0.1121%" height="15" fill="rgb(229,67,23)"/><text x="8.9944%" y="687.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.11%)</title><rect x="8.7444%" y="661" width="0.1121%" height="15" fill="rgb(249,83,47)"/><text x="8.9944%" y="671.50"></text></g><g><title>do_filp_open (1 samples, 0.11%)</title><rect x="8.7444%" y="645" width="0.1121%" height="15" fill="rgb(215,43,3)"/><text x="8.9944%" y="655.50"></text></g><g><title>path_openat (1 samples, 0.11%)</title><rect x="8.7444%" y="629" width="0.1121%" height="15" fill="rgb(238,154,13)"/><text x="8.9944%" y="639.50"></text></g><g><title>alloc_empty_file (1 samples, 0.11%)</title><rect x="8.7444%" y="613" width="0.1121%" height="15" fill="rgb(219,56,2)"/><text x="8.9944%" y="623.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.11%)</title><rect x="8.7444%" y="597" width="0.1121%" height="15" fill="rgb(233,0,4)"/><text x="8.9944%" y="607.50"></text></g><g><title>hwloc::Topology::new (4 samples, 0.45%)</title><rect x="8.5202%" y="821" width="0.4484%" height="15" fill="rgb(235,30,7)"/><text x="8.7702%" y="831.50"></text></g><g><title>hwloc_topology_load (3 samples, 0.34%)</title><rect x="8.6323%" y="805" width="0.3363%" height="15" fill="rgb(250,79,13)"/><text x="8.8823%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.34%)</title><rect x="8.6323%" y="789" width="0.3363%" height="15" fill="rgb(211,146,34)"/><text x="8.8823%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.34%)</title><rect x="8.6323%" y="773" width="0.3363%" height="15" fill="rgb(228,22,38)"/><text x="8.8823%" y="783.50"></text></g><g><title>[libhwloc.so.15.2.0] (3 samples, 0.34%)</title><rect x="8.6323%" y="757" width="0.3363%" height="15" fill="rgb(235,168,5)"/><text x="8.8823%" y="767.50"></text></g><g><title>___sprintf_chk (1 samples, 0.11%)</title><rect x="8.8565%" y="741" width="0.1121%" height="15" fill="rgb(221,155,16)"/><text x="9.1065%" y="751.50"></text></g><g><title>__vsprintf_internal (1 samples, 0.11%)</title><rect x="8.8565%" y="725" width="0.1121%" height="15" fill="rgb(215,215,53)"/><text x="9.1065%" y="735.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.11%)</title><rect x="8.8565%" y="709" width="0.1121%" height="15" fill="rgb(223,4,10)"/><text x="9.1065%" y="719.50"></text></g><g><title>lobsters::main (7 samples, 0.78%)</title><rect x="8.2960%" y="837" width="0.7848%" height="15" fill="rgb(234,103,6)"/><text x="8.5460%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="8.9686%" y="821" width="0.1121%" height="15" fill="rgb(227,97,0)"/><text x="9.2186%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="8.9686%" y="805" width="0.1121%" height="15" fill="rgb(234,150,53)"/><text x="9.2186%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="8.9686%" y="789" width="0.1121%" height="15" fill="rgb(228,201,54)"/><text x="9.2186%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="8.9686%" y="773" width="0.1121%" height="15" fill="rgb(222,22,37)"/><text x="9.2186%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="8.9686%" y="757" width="0.1121%" height="15" fill="rgb(237,53,32)"/><text x="9.2186%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (1 samples, 0.11%)</title><rect x="8.9686%" y="741" width="0.1121%" height="15" fill="rgb(233,25,53)"/><text x="9.2186%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="8.9686%" y="725" width="0.1121%" height="15" fill="rgb(210,40,34)"/><text x="9.2186%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="8.9686%" y="709" width="0.1121%" height="15" fill="rgb(241,220,44)"/><text x="9.2186%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="9.3049%" y="773" width="0.1121%" height="15" fill="rgb(235,28,35)"/><text x="9.5549%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="9.3049%" y="757" width="0.1121%" height="15" fill="rgb(210,56,17)"/><text x="9.5549%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="9.3049%" y="741" width="0.1121%" height="15" fill="rgb(224,130,29)"/><text x="9.5549%" y="751.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="9.3049%" y="725" width="0.1121%" height="15" fill="rgb(235,212,8)"/><text x="9.5549%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="9.3049%" y="709" width="0.1121%" height="15" fill="rgb(223,33,50)"/><text x="9.5549%" y="719.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="9.3049%" y="693" width="0.1121%" height="15" fill="rgb(219,149,13)"/><text x="9.5549%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="9.3049%" y="677" width="0.1121%" height="15" fill="rgb(250,156,29)"/><text x="9.5549%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="9.3049%" y="661" width="0.1121%" height="15" fill="rgb(216,193,19)"/><text x="9.5549%" y="671.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="9.3049%" y="645" width="0.1121%" height="15" fill="rgb(216,135,14)"/><text x="9.5549%" y="655.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="9.4170%" y="533" width="0.1121%" height="15" fill="rgb(241,47,5)"/><text x="9.6670%" y="543.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="9.4170%" y="517" width="0.1121%" height="15" fill="rgb(233,42,35)"/><text x="9.6670%" y="527.50"></text></g><g><title>mysql::conn::Conn::start_transaction (2 samples, 0.22%)</title><rect x="9.4170%" y="773" width="0.2242%" height="15" fill="rgb(231,13,6)"/><text x="9.6670%" y="783.50"></text></g><g><title>mysql::conn::Conn::_start_transaction (2 samples, 0.22%)</title><rect x="9.4170%" y="757" width="0.2242%" height="15" fill="rgb(207,181,40)"/><text x="9.6670%" y="767.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 0.22%)</title><rect x="9.4170%" y="741" width="0.2242%" height="15" fill="rgb(254,173,49)"/><text x="9.6670%" y="751.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.22%)</title><rect x="9.4170%" y="725" width="0.2242%" height="15" fill="rgb(221,1,38)"/><text x="9.6670%" y="735.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (2 samples, 0.22%)</title><rect x="9.4170%" y="709" width="0.2242%" height="15" fill="rgb(206,124,46)"/><text x="9.6670%" y="719.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.22%)</title><rect x="9.4170%" y="693" width="0.2242%" height="15" fill="rgb(249,21,11)"/><text x="9.6670%" y="703.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.22%)</title><rect x="9.4170%" y="677" width="0.2242%" height="15" fill="rgb(222,201,40)"/><text x="9.6670%" y="687.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.22%)</title><rect x="9.4170%" y="661" width="0.2242%" height="15" fill="rgb(235,61,29)"/><text x="9.6670%" y="671.50"></text></g><g><title>__libc_send (2 samples, 0.22%)</title><rect x="9.4170%" y="645" width="0.2242%" height="15" fill="rgb(219,207,3)"/><text x="9.6670%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.22%)</title><rect x="9.4170%" y="629" width="0.2242%" height="15" fill="rgb(222,56,46)"/><text x="9.6670%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.22%)</title><rect x="9.4170%" y="613" width="0.2242%" height="15" fill="rgb(239,76,54)"/><text x="9.6670%" y="623.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.22%)</title><rect x="9.4170%" y="597" width="0.2242%" height="15" fill="rgb(231,124,27)"/><text x="9.6670%" y="607.50"></text></g><g><title>__sys_sendto (2 samples, 0.22%)</title><rect x="9.4170%" y="581" width="0.2242%" height="15" fill="rgb(249,195,6)"/><text x="9.6670%" y="591.50"></text></g><g><title>sock_sendmsg (2 samples, 0.22%)</title><rect x="9.4170%" y="565" width="0.2242%" height="15" fill="rgb(237,174,47)"/><text x="9.6670%" y="575.50"></text></g><g><title>tcp_sendmsg (2 samples, 0.22%)</title><rect x="9.4170%" y="549" width="0.2242%" height="15" fill="rgb(206,201,31)"/><text x="9.6670%" y="559.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="9.5291%" y="533" width="0.1121%" height="15" fill="rgb(231,57,52)"/><text x="9.7791%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="9.5291%" y="517" width="0.1121%" height="15" fill="rgb(248,177,22)"/><text x="9.7791%" y="527.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="9.5291%" y="501" width="0.1121%" height="15" fill="rgb(215,211,37)"/><text x="9.7791%" y="511.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="9.5291%" y="485" width="0.1121%" height="15" fill="rgb(241,128,51)"/><text x="9.7791%" y="495.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="9.5291%" y="469" width="0.1121%" height="15" fill="rgb(227,165,31)"/><text x="9.7791%" y="479.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (4 samples, 0.45%)</title><rect x="9.3049%" y="821" width="0.4484%" height="15" fill="rgb(228,167,24)"/><text x="9.5549%" y="831.50"></text></g><g><title>decor::Shim::create_schema (4 samples, 0.45%)</title><rect x="9.3049%" y="805" width="0.4484%" height="15" fill="rgb(228,143,12)"/><text x="9.5549%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (4 samples, 0.45%)</title><rect x="9.3049%" y="789" width="0.4484%" height="15" fill="rgb(249,149,8)"/><text x="9.5549%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="9.6413%" y="773" width="0.1121%" height="15" fill="rgb(243,35,44)"/><text x="9.8913%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="9.6413%" y="757" width="0.1121%" height="15" fill="rgb(246,89,9)"/><text x="9.8913%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="9.6413%" y="741" width="0.1121%" height="15" fill="rgb(233,213,13)"/><text x="9.8913%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="9.6413%" y="725" width="0.1121%" height="15" fill="rgb(233,141,41)"/><text x="9.8913%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="9.6413%" y="709" width="0.1121%" height="15" fill="rgb(239,167,4)"/><text x="9.8913%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="9.6413%" y="693" width="0.1121%" height="15" fill="rgb(209,217,16)"/><text x="9.8913%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="9.6413%" y="677" width="0.1121%" height="15" fill="rgb(219,88,35)"/><text x="9.8913%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="9.6413%" y="661" width="0.1121%" height="15" fill="rgb(220,193,23)"/><text x="9.8913%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="9.6413%" y="645" width="0.1121%" height="15" fill="rgb(230,90,52)"/><text x="9.8913%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="9.6413%" y="629" width="0.1121%" height="15" fill="rgb(252,106,19)"/><text x="9.8913%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="9.6413%" y="613" width="0.1121%" height="15" fill="rgb(206,74,20)"/><text x="9.8913%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="9.6413%" y="597" width="0.1121%" height="15" fill="rgb(230,138,44)"/><text x="9.8913%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="9.6413%" y="581" width="0.1121%" height="15" fill="rgb(235,182,43)"/><text x="9.8913%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="9.6413%" y="565" width="0.1121%" height="15" fill="rgb(242,16,51)"/><text x="9.8913%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="9.6413%" y="549" width="0.1121%" height="15" fill="rgb(248,9,4)"/><text x="9.8913%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="9.6413%" y="533" width="0.1121%" height="15" fill="rgb(210,31,22)"/><text x="9.8913%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="9.6413%" y="517" width="0.1121%" height="15" fill="rgb(239,54,39)"/><text x="9.8913%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="9.6413%" y="501" width="0.1121%" height="15" fill="rgb(230,99,41)"/><text x="9.8913%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="9.6413%" y="485" width="0.1121%" height="15" fill="rgb(253,106,12)"/><text x="9.8913%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="9.6413%" y="469" width="0.1121%" height="15" fill="rgb(213,46,41)"/><text x="9.8913%" y="479.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.11%)</title><rect x="9.6413%" y="453" width="0.1121%" height="15" fill="rgb(215,133,35)"/><text x="9.8913%" y="463.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="9.8655%" y="741" width="0.1121%" height="15" fill="rgb(213,28,5)"/><text x="10.1155%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="9.8655%" y="725" width="0.1121%" height="15" fill="rgb(215,77,49)"/><text x="10.1155%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.22%)</title><rect x="9.8655%" y="757" width="0.2242%" height="15" fill="rgb(248,100,22)"/><text x="10.1155%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="9.9776%" y="741" width="0.1121%" height="15" fill="rgb(208,67,9)"/><text x="10.2276%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (4 samples, 0.45%)</title><rect x="9.7534%" y="773" width="0.4484%" height="15" fill="rgb(219,133,21)"/><text x="10.0034%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="10.0897%" y="757" width="0.1121%" height="15" fill="rgb(246,46,29)"/><text x="10.3397%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="10.2018%" y="773" width="0.1121%" height="15" fill="rgb(246,185,52)"/><text x="10.4518%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (8 samples, 0.90%)</title><rect x="9.7534%" y="789" width="0.8969%" height="15" fill="rgb(252,136,11)"/><text x="10.0034%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.34%)</title><rect x="10.3139%" y="773" width="0.3363%" height="15" fill="rgb(219,138,53)"/><text x="10.5639%" y="783.50"></text></g><g><title>error_entry (1 samples, 0.11%)</title><rect x="10.7623%" y="757" width="0.1121%" height="15" fill="rgb(211,51,23)"/><text x="11.0123%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="11.0987%" y="725" width="0.1121%" height="15" fill="rgb(247,221,28)"/><text x="11.3487%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="11.2108%" y="725" width="0.1121%" height="15" fill="rgb(251,222,45)"/><text x="11.4608%" y="735.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (4 samples, 0.45%)</title><rect x="10.9865%" y="741" width="0.4484%" height="15" fill="rgb(217,162,53)"/><text x="11.2365%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="11.3229%" y="725" width="0.1121%" height="15" fill="rgb(229,93,14)"/><text x="11.5729%" y="735.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="11.3229%" y="709" width="0.1121%" height="15" fill="rgb(209,67,49)"/><text x="11.5729%" y="719.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (6 samples, 0.67%)</title><rect x="10.8744%" y="757" width="0.6726%" height="15" fill="rgb(213,87,29)"/><text x="11.1244%" y="767.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.11%)</title><rect x="11.4350%" y="741" width="0.1121%" height="15" fill="rgb(205,151,52)"/><text x="11.6850%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="11.4350%" y="725" width="0.1121%" height="15" fill="rgb(253,215,39)"/><text x="11.6850%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (23 samples, 2.58%)</title><rect x="9.0807%" y="837" width="2.5785%" height="15" fill="rgb(221,220,41)"/><text x="9.3307%" y="847.50">ms..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (17 samples, 1.91%)</title><rect x="9.7534%" y="821" width="1.9058%" height="15" fill="rgb(218,133,21)"/><text x="10.0034%" y="831.50">&lt;..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (17 samples, 1.91%)</title><rect x="9.7534%" y="805" width="1.9058%" height="15" fill="rgb(221,193,43)"/><text x="10.0034%" y="815.50">d..</text></g><g><title>sql_parser::parser::parse_statements (9 samples, 1.01%)</title><rect x="10.6502%" y="789" width="1.0090%" height="15" fill="rgb(240,128,52)"/><text x="10.9002%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (9 samples, 1.01%)</title><rect x="10.6502%" y="773" width="1.0090%" height="15" fill="rgb(253,114,12)"/><text x="10.9002%" y="783.50"></text></g><g><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="11.5471%" y="757" width="0.1121%" height="15" fill="rgb(215,223,47)"/><text x="11.7971%" y="767.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="11.5471%" y="741" width="0.1121%" height="15" fill="rgb(248,225,23)"/><text x="11.7971%" y="751.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (1 samples, 0.11%)</title><rect x="11.6592%" y="837" width="0.1121%" height="15" fill="rgb(250,108,0)"/><text x="11.9092%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="11.7713%" y="837" width="0.1121%" height="15" fill="rgb(228,208,7)"/><text x="12.0213%" y="847.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.11%)</title><rect x="11.8834%" y="837" width="0.1121%" height="15" fill="rgb(244,45,10)"/><text x="12.1334%" y="847.50"></text></g><g><title>mysql_common::packets::OkPacket::into_owned (1 samples, 0.11%)</title><rect x="11.9955%" y="837" width="0.1121%" height="15" fill="rgb(207,125,25)"/><text x="12.2455%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.11%)</title><rect x="12.1076%" y="837" width="0.1121%" height="15" fill="rgb(210,195,18)"/><text x="12.3576%" y="847.50"></text></g><g><title>mysql_common::proto::codec::transmute_buf (1 samples, 0.11%)</title><rect x="12.2197%" y="837" width="0.1121%" height="15" fill="rgb(249,80,12)"/><text x="12.4697%" y="847.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="12.3318%" y="837" width="0.1121%" height="15" fill="rgb(221,65,9)"/><text x="12.5818%" y="847.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="12.3318%" y="821" width="0.1121%" height="15" fill="rgb(235,49,36)"/><text x="12.5818%" y="831.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.11%)</title><rect x="12.3318%" y="805" width="0.1121%" height="15" fill="rgb(225,32,20)"/><text x="12.5818%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="12.3318%" y="789" width="0.1121%" height="15" fill="rgb(215,141,46)"/><text x="12.5818%" y="799.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="12.4439%" y="757" width="0.1121%" height="15" fill="rgb(250,160,47)"/><text x="12.6939%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="12.4439%" y="741" width="0.1121%" height="15" fill="rgb(216,222,40)"/><text x="12.6939%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="12.5561%" y="757" width="0.1121%" height="15" fill="rgb(234,217,39)"/><text x="12.8061%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (12 samples, 1.35%)</title><rect x="12.6682%" y="757" width="1.3453%" height="15" fill="rgb(207,178,40)"/><text x="12.9182%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (12 samples, 1.35%)</title><rect x="12.6682%" y="741" width="1.3453%" height="15" fill="rgb(221,136,13)"/><text x="12.9182%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 1.35%)</title><rect x="12.6682%" y="725" width="1.3453%" height="15" fill="rgb(249,199,10)"/><text x="12.9182%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 1.35%)</title><rect x="12.6682%" y="709" width="1.3453%" height="15" fill="rgb(249,222,13)"/><text x="12.9182%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 1.35%)</title><rect x="12.6682%" y="693" width="1.3453%" height="15" fill="rgb(244,185,38)"/><text x="12.9182%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 1.35%)</title><rect x="12.6682%" y="677" width="1.3453%" height="15" fill="rgb(236,202,9)"/><text x="12.9182%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (12 samples, 1.35%)</title><rect x="12.6682%" y="661" width="1.3453%" height="15" fill="rgb(250,229,37)"/><text x="12.9182%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 1.35%)</title><rect x="12.6682%" y="645" width="1.3453%" height="15" fill="rgb(206,174,23)"/><text x="12.9182%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (12 samples, 1.35%)</title><rect x="12.6682%" y="629" width="1.3453%" height="15" fill="rgb(211,33,43)"/><text x="12.9182%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 1.35%)</title><rect x="12.6682%" y="613" width="1.3453%" height="15" fill="rgb(245,58,50)"/><text x="12.9182%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 1.35%)</title><rect x="12.6682%" y="597" width="1.3453%" height="15" fill="rgb(244,68,36)"/><text x="12.9182%" y="607.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="14.0135%" y="757" width="0.1121%" height="15" fill="rgb(232,229,15)"/><text x="14.2635%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.79%)</title><rect x="12.4439%" y="837" width="1.7937%" height="15" fill="rgb(254,30,23)"/><text x="12.6939%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (16 samples, 1.79%)</title><rect x="12.4439%" y="821" width="1.7937%" height="15" fill="rgb(235,160,14)"/><text x="12.6939%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (16 samples, 1.79%)</title><rect x="12.4439%" y="805" width="1.7937%" height="15" fill="rgb(212,155,44)"/><text x="12.6939%" y="815.50">s..</text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.79%)</title><rect x="12.4439%" y="789" width="1.7937%" height="15" fill="rgb(226,2,50)"/><text x="12.6939%" y="799.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_prefix (16 samples, 1.79%)</title><rect x="12.4439%" y="773" width="1.7937%" height="15" fill="rgb(234,177,6)"/><text x="12.6939%" y="783.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_value (1 samples, 0.11%)</title><rect x="14.1256%" y="757" width="0.1121%" height="15" fill="rgb(217,24,9)"/><text x="14.3756%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="14.1256%" y="741" width="0.1121%" height="15" fill="rgb(220,13,46)"/><text x="14.3756%" y="751.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.11%)</title><rect x="14.2377%" y="821" width="0.1121%" height="15" fill="rgb(239,221,27)"/><text x="14.4877%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.11%)</title><rect x="14.2377%" y="805" width="0.1121%" height="15" fill="rgb(222,198,25)"/><text x="14.4877%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (1 samples, 0.11%)</title><rect x="14.2377%" y="789" width="0.1121%" height="15" fill="rgb(211,99,13)"/><text x="14.4877%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.11%)</title><rect x="14.2377%" y="773" width="0.1121%" height="15" fill="rgb(232,111,31)"/><text x="14.4877%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::expected (1 samples, 0.11%)</title><rect x="14.2377%" y="757" width="0.1121%" height="15" fill="rgb(245,82,37)"/><text x="14.4877%" y="767.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.11%)</title><rect x="14.2377%" y="741" width="0.1121%" height="15" fill="rgb(227,149,46)"/><text x="14.4877%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.11%)</title><rect x="14.2377%" y="725" width="0.1121%" height="15" fill="rgb(218,36,50)"/><text x="14.4877%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="14.2377%" y="709" width="0.1121%" height="15" fill="rgb(226,80,48)"/><text x="14.4877%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="14.2377%" y="693" width="0.1121%" height="15" fill="rgb(238,224,15)"/><text x="14.4877%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="14.2377%" y="677" width="0.1121%" height="15" fill="rgb(241,136,10)"/><text x="14.4877%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="14.2377%" y="661" width="0.1121%" height="15" fill="rgb(208,32,45)"/><text x="14.4877%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="14.2377%" y="645" width="0.1121%" height="15" fill="rgb(207,135,9)"/><text x="14.4877%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="14.2377%" y="629" width="0.1121%" height="15" fill="rgb(206,86,44)"/><text x="14.4877%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="14.2377%" y="613" width="0.1121%" height="15" fill="rgb(245,177,15)"/><text x="14.4877%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.11%)</title><rect x="14.2377%" y="597" width="0.1121%" height="15" fill="rgb(206,64,50)"/><text x="14.4877%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="14.2377%" y="581" width="0.1121%" height="15" fill="rgb(234,36,40)"/><text x="14.4877%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.11%)</title><rect x="14.2377%" y="565" width="0.1121%" height="15" fill="rgb(213,64,8)"/><text x="14.4877%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="14.2377%" y="549" width="0.1121%" height="15" fill="rgb(210,75,36)"/><text x="14.4877%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="14.2377%" y="533" width="0.1121%" height="15" fill="rgb(229,88,21)"/><text x="14.4877%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.11%)</title><rect x="14.2377%" y="517" width="0.1121%" height="15" fill="rgb(252,204,47)"/><text x="14.4877%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="14.2377%" y="501" width="0.1121%" height="15" fill="rgb(208,77,27)"/><text x="14.4877%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="14.2377%" y="485" width="0.1121%" height="15" fill="rgb(221,76,26)"/><text x="14.4877%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="14.2377%" y="469" width="0.1121%" height="15" fill="rgb(225,139,18)"/><text x="14.4877%" y="479.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="14.2377%" y="453" width="0.1121%" height="15" fill="rgb(230,137,11)"/><text x="14.4877%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="14.2377%" y="437" width="0.1121%" height="15" fill="rgb(212,28,1)"/><text x="14.4877%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="14.3498%" y="757" width="0.1121%" height="15" fill="rgb(248,164,17)"/><text x="14.5998%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.34%)</title><rect x="14.2377%" y="837" width="0.3363%" height="15" fill="rgb(222,171,42)"/><text x="14.4877%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (2 samples, 0.22%)</title><rect x="14.3498%" y="821" width="0.2242%" height="15" fill="rgb(243,84,45)"/><text x="14.5998%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (2 samples, 0.22%)</title><rect x="14.3498%" y="805" width="0.2242%" height="15" fill="rgb(252,49,23)"/><text x="14.5998%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.22%)</title><rect x="14.3498%" y="789" width="0.2242%" height="15" fill="rgb(215,19,7)"/><text x="14.5998%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (2 samples, 0.22%)</title><rect x="14.3498%" y="773" width="0.2242%" height="15" fill="rgb(238,81,41)"/><text x="14.5998%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.11%)</title><rect x="14.4619%" y="757" width="0.1121%" height="15" fill="rgb(210,199,37)"/><text x="14.7119%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.11%)</title><rect x="14.5740%" y="789" width="0.1121%" height="15" fill="rgb(244,192,49)"/><text x="14.8240%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="14.5740%" y="773" width="0.1121%" height="15" fill="rgb(226,211,11)"/><text x="14.8240%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="14.5740%" y="757" width="0.1121%" height="15" fill="rgb(236,162,54)"/><text x="14.8240%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.22%)</title><rect x="14.6861%" y="773" width="0.2242%" height="15" fill="rgb(220,229,9)"/><text x="14.9361%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="14.7982%" y="757" width="0.1121%" height="15" fill="rgb(250,87,22)"/><text x="15.0482%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (5 samples, 0.56%)</title><rect x="14.5740%" y="837" width="0.5605%" height="15" fill="rgb(239,43,17)"/><text x="14.8240%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (5 samples, 0.56%)</title><rect x="14.5740%" y="821" width="0.5605%" height="15" fill="rgb(231,177,25)"/><text x="14.8240%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (5 samples, 0.56%)</title><rect x="14.5740%" y="805" width="0.5605%" height="15" fill="rgb(219,179,1)"/><text x="14.8240%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (4 samples, 0.45%)</title><rect x="14.6861%" y="789" width="0.4484%" height="15" fill="rgb(238,219,53)"/><text x="14.9361%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (2 samples, 0.22%)</title><rect x="14.9103%" y="773" width="0.2242%" height="15" fill="rgb(232,167,36)"/><text x="15.1603%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.22%)</title><rect x="14.9103%" y="757" width="0.2242%" height="15" fill="rgb(244,19,51)"/><text x="15.1603%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.22%)</title><rect x="15.1345%" y="805" width="0.2242%" height="15" fill="rgb(224,6,22)"/><text x="15.3845%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.22%)</title><rect x="15.1345%" y="789" width="0.2242%" height="15" fill="rgb(224,145,5)"/><text x="15.3845%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="15.2466%" y="773" width="0.1121%" height="15" fill="rgb(234,130,49)"/><text x="15.4966%" y="783.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.34%)</title><rect x="15.1345%" y="837" width="0.3363%" height="15" fill="rgb(254,6,2)"/><text x="15.3845%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.34%)</title><rect x="15.1345%" y="821" width="0.3363%" height="15" fill="rgb(208,96,46)"/><text x="15.3845%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.11%)</title><rect x="15.3587%" y="805" width="0.1121%" height="15" fill="rgb(239,3,39)"/><text x="15.6087%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="15.3587%" y="789" width="0.1121%" height="15" fill="rgb(233,210,1)"/><text x="15.6087%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.3587%" y="773" width="0.1121%" height="15" fill="rgb(244,137,37)"/><text x="15.6087%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="15.3587%" y="757" width="0.1121%" height="15" fill="rgb(240,136,2)"/><text x="15.6087%" y="767.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="15.4709%" y="517" width="0.1121%" height="15" fill="rgb(239,18,37)"/><text x="15.7209%" y="527.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="16.3677%" y="405" width="0.1121%" height="15" fill="rgb(218,185,22)"/><text x="16.6177%" y="415.50"></text></g><g><title>__kfree_skb (2 samples, 0.22%)</title><rect x="16.3677%" y="421" width="0.2242%" height="15" fill="rgb(225,218,4)"/><text x="16.6177%" y="431.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="16.4798%" y="405" width="0.1121%" height="15" fill="rgb(230,182,32)"/><text x="16.7298%" y="415.50"></text></g><g><title>dst_release (1 samples, 0.11%)</title><rect x="16.4798%" y="389" width="0.1121%" height="15" fill="rgb(242,56,43)"/><text x="16.7298%" y="399.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="16.5919%" y="421" width="0.1121%" height="15" fill="rgb(233,99,24)"/><text x="16.8419%" y="431.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="16.5919%" y="405" width="0.1121%" height="15" fill="rgb(234,209,42)"/><text x="16.8419%" y="415.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="16.8161%" y="405" width="0.1121%" height="15" fill="rgb(227,7,12)"/><text x="17.0661%" y="415.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="16.9283%" y="405" width="0.1121%" height="15" fill="rgb(245,203,43)"/><text x="17.1783%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.22%)</title><rect x="17.6009%" y="341" width="0.2242%" height="15" fill="rgb(238,205,33)"/><text x="17.8509%" y="351.50"></text></g><g><title>ctx_sched_out (2 samples, 0.22%)</title><rect x="17.6009%" y="325" width="0.2242%" height="15" fill="rgb(231,56,7)"/><text x="17.8509%" y="335.50"></text></g><g><title>x86_pmu_disable (2 samples, 0.22%)</title><rect x="17.6009%" y="309" width="0.2242%" height="15" fill="rgb(244,186,29)"/><text x="17.8509%" y="319.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="17.7130%" y="293" width="0.1121%" height="15" fill="rgb(234,111,31)"/><text x="17.9630%" y="303.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="17.8251%" y="341" width="0.1121%" height="15" fill="rgb(241,149,10)"/><text x="18.0751%" y="351.50"></text></g><g><title>dequeue_task_fair (4 samples, 0.45%)</title><rect x="17.9372%" y="341" width="0.4484%" height="15" fill="rgb(249,206,44)"/><text x="18.1872%" y="351.50"></text></g><g><title>dequeue_entity (3 samples, 0.34%)</title><rect x="18.0493%" y="325" width="0.3363%" height="15" fill="rgb(251,153,30)"/><text x="18.2993%" y="335.50"></text></g><g><title>update_curr (2 samples, 0.22%)</title><rect x="18.1614%" y="309" width="0.2242%" height="15" fill="rgb(239,152,38)"/><text x="18.4114%" y="319.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="18.2735%" y="293" width="0.1121%" height="15" fill="rgb(249,139,47)"/><text x="18.5235%" y="303.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="18.3857%" y="341" width="0.1121%" height="15" fill="rgb(244,64,35)"/><text x="18.6357%" y="351.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="18.3857%" y="325" width="0.1121%" height="15" fill="rgb(216,46,15)"/><text x="18.6357%" y="335.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.11%)</title><rect x="18.3857%" y="309" width="0.1121%" height="15" fill="rgb(250,74,19)"/><text x="18.6357%" y="319.50"></text></g><g><title>native_write_msr (1 samples, 0.11%)</title><rect x="18.3857%" y="293" width="0.1121%" height="15" fill="rgb(249,42,33)"/><text x="18.6357%" y="303.50"></text></g><g><title>psi_flags_change (1 samples, 0.11%)</title><rect x="18.4978%" y="325" width="0.1121%" height="15" fill="rgb(242,149,17)"/><text x="18.7478%" y="335.50"></text></g><g><title>psi_task_change (2 samples, 0.22%)</title><rect x="18.4978%" y="341" width="0.2242%" height="15" fill="rgb(244,29,21)"/><text x="18.7478%" y="351.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="18.6099%" y="325" width="0.1121%" height="15" fill="rgb(220,130,37)"/><text x="18.8599%" y="335.50"></text></g><g><title>psi_task_switch (1 samples, 0.11%)</title><rect x="18.7220%" y="341" width="0.1121%" height="15" fill="rgb(211,67,2)"/><text x="18.9720%" y="351.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.22%)</title><rect x="18.8341%" y="341" width="0.2242%" height="15" fill="rgb(235,68,52)"/><text x="19.0841%" y="351.50"></text></g><g><title>put_prev_entity (2 samples, 0.22%)</title><rect x="18.8341%" y="325" width="0.2242%" height="15" fill="rgb(246,142,3)"/><text x="19.0841%" y="335.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.11%)</title><rect x="18.9462%" y="309" width="0.1121%" height="15" fill="rgb(241,25,7)"/><text x="19.1962%" y="319.50"></text></g><g><title>sk_wait_data (22 samples, 2.47%)</title><rect x="16.7040%" y="421" width="2.4664%" height="15" fill="rgb(242,119,39)"/><text x="16.9540%" y="431.50">sk..</text></g><g><title>wait_woken (19 samples, 2.13%)</title><rect x="17.0404%" y="405" width="2.1300%" height="15" fill="rgb(241,98,45)"/><text x="17.2904%" y="415.50">w..</text></g><g><title>schedule_timeout (17 samples, 1.91%)</title><rect x="17.2646%" y="389" width="1.9058%" height="15" fill="rgb(254,28,30)"/><text x="17.5146%" y="399.50">s..</text></g><g><title>schedule (15 samples, 1.68%)</title><rect x="17.4888%" y="373" width="1.6816%" height="15" fill="rgb(241,142,54)"/><text x="17.7388%" y="383.50"></text></g><g><title>__schedule (15 samples, 1.68%)</title><rect x="17.4888%" y="357" width="1.6816%" height="15" fill="rgb(222,85,15)"/><text x="17.7388%" y="367.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="19.0583%" y="341" width="0.1121%" height="15" fill="rgb(210,85,47)"/><text x="19.3083%" y="351.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="19.0583%" y="325" width="0.1121%" height="15" fill="rgb(224,206,25)"/><text x="19.3083%" y="335.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.34%)</title><rect x="19.1704%" y="421" width="0.3363%" height="15" fill="rgb(243,201,19)"/><text x="19.4204%" y="431.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.34%)</title><rect x="19.1704%" y="405" width="0.3363%" height="15" fill="rgb(236,59,4)"/><text x="19.4204%" y="415.50"></text></g><g><title>_copy_to_iter (3 samples, 0.34%)</title><rect x="19.1704%" y="389" width="0.3363%" height="15" fill="rgb(254,179,45)"/><text x="19.4204%" y="399.50"></text></g><g><title>copy_user_enhanced_fast_string (3 samples, 0.34%)</title><rect x="19.1704%" y="373" width="0.3363%" height="15" fill="rgb(226,14,10)"/><text x="19.4204%" y="383.50"></text></g><g><title>page_fault (2 samples, 0.22%)</title><rect x="19.2825%" y="357" width="0.2242%" height="15" fill="rgb(244,27,41)"/><text x="19.5325%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="19.3946%" y="341" width="0.1121%" height="15" fill="rgb(235,35,32)"/><text x="19.6446%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="19.3946%" y="325" width="0.1121%" height="15" fill="rgb(218,68,31)"/><text x="19.6446%" y="335.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="19.3946%" y="309" width="0.1121%" height="15" fill="rgb(207,120,37)"/><text x="19.6446%" y="319.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="19.3946%" y="293" width="0.1121%" height="15" fill="rgb(227,98,0)"/><text x="19.6446%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="19.3946%" y="277" width="0.1121%" height="15" fill="rgb(207,7,3)"/><text x="19.6446%" y="287.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="19.3946%" y="261" width="0.1121%" height="15" fill="rgb(206,98,19)"/><text x="19.6446%" y="271.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="19.3946%" y="245" width="0.1121%" height="15" fill="rgb(217,5,26)"/><text x="19.6446%" y="255.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="19.3946%" y="229" width="0.1121%" height="15" fill="rgb(235,190,38)"/><text x="19.6446%" y="239.50"></text></g><g><title>__x64_sys_recvfrom (36 samples, 4.04%)</title><rect x="15.5830%" y="485" width="4.0359%" height="15" fill="rgb(247,86,24)"/><text x="15.8330%" y="495.50">__x6..</text></g><g><title>__sys_recvfrom (36 samples, 4.04%)</title><rect x="15.5830%" y="469" width="4.0359%" height="15" fill="rgb(205,101,16)"/><text x="15.8330%" y="479.50">__sy..</text></g><g><title>inet_recvmsg (35 samples, 3.92%)</title><rect x="15.6951%" y="453" width="3.9238%" height="15" fill="rgb(246,168,33)"/><text x="15.9451%" y="463.50">inet..</text></g><g><title>tcp_recvmsg (34 samples, 3.81%)</title><rect x="15.8072%" y="437" width="3.8117%" height="15" fill="rgb(231,114,1)"/><text x="16.0572%" y="447.50">tcp_..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="19.5067%" y="421" width="0.1121%" height="15" fill="rgb(207,184,53)"/><text x="19.7567%" y="431.50"></text></g><g><title>do_syscall_64 (37 samples, 4.15%)</title><rect x="15.5830%" y="501" width="4.1480%" height="15" fill="rgb(224,95,51)"/><text x="15.8330%" y="511.50">do_sy..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="19.6188%" y="485" width="0.1121%" height="15" fill="rgb(212,188,45)"/><text x="19.8688%" y="495.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 4.37%)</title><rect x="15.4709%" y="613" width="4.3722%" height="15" fill="rgb(223,154,38)"/><text x="15.7209%" y="623.50">&lt;std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (39 samples, 4.37%)</title><rect x="15.4709%" y="597" width="4.3722%" height="15" fill="rgb(251,22,52)"/><text x="15.7209%" y="607.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read (39 samples, 4.37%)</title><rect x="15.4709%" y="581" width="4.3722%" height="15" fill="rgb(229,209,22)"/><text x="15.7209%" y="591.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read (39 samples, 4.37%)</title><rect x="15.4709%" y="565" width="4.3722%" height="15" fill="rgb(234,138,34)"/><text x="15.7209%" y="575.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (39 samples, 4.37%)</title><rect x="15.4709%" y="549" width="4.3722%" height="15" fill="rgb(212,95,11)"/><text x="15.7209%" y="559.50">std::..</text></g><g><title>__libc_recv (39 samples, 4.37%)</title><rect x="15.4709%" y="533" width="4.3722%" height="15" fill="rgb(240,179,47)"/><text x="15.7209%" y="543.50">__lib..</text></g><g><title>entry_SYSCALL_64 (38 samples, 4.26%)</title><rect x="15.5830%" y="517" width="4.2601%" height="15" fill="rgb(240,163,11)"/><text x="15.8330%" y="527.50">entry..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="19.7309%" y="501" width="0.1121%" height="15" fill="rgb(236,37,12)"/><text x="19.9809%" y="511.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (40 samples, 4.48%)</title><rect x="15.4709%" y="693" width="4.4843%" height="15" fill="rgb(232,164,16)"/><text x="15.7209%" y="703.50">&lt;mysq..</text></g><g><title>mysql::conn::Conn::_query (40 samples, 4.48%)</title><rect x="15.4709%" y="677" width="4.4843%" height="15" fill="rgb(244,205,15)"/><text x="15.7209%" y="687.50">mysql..</text></g><g><title>mysql::conn::Conn::handle_result_set (40 samples, 4.48%)</title><rect x="15.4709%" y="661" width="4.4843%" height="15" fill="rgb(223,117,47)"/><text x="15.7209%" y="671.50">mysql..</text></g><g><title>mysql::conn::Conn::read_packet (40 samples, 4.48%)</title><rect x="15.4709%" y="645" width="4.4843%" height="15" fill="rgb(244,107,35)"/><text x="15.7209%" y="655.50">mysql..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 4.48%)</title><rect x="15.4709%" y="629" width="4.4843%" height="15" fill="rgb(205,140,8)"/><text x="15.7209%" y="639.50">&lt;mysq..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="19.8430%" y="613" width="0.1121%" height="15" fill="rgb(228,84,46)"/><text x="20.0930%" y="623.50"></text></g><g><title>mysql::conn::Conn::handle_ok (1 samples, 0.11%)</title><rect x="19.9552%" y="629" width="0.1121%" height="15" fill="rgb(254,188,9)"/><text x="20.2052%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.22%)</title><rect x="20.0673%" y="629" width="0.2242%" height="15" fill="rgb(206,112,54)"/><text x="20.3173%" y="639.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="20.1794%" y="613" width="0.1121%" height="15" fill="rgb(216,84,49)"/><text x="20.4294%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="20.1794%" y="597" width="0.1121%" height="15" fill="rgb(214,194,35)"/><text x="20.4294%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="20.1794%" y="581" width="0.1121%" height="15" fill="rgb(249,28,3)"/><text x="20.4294%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="20.1794%" y="565" width="0.1121%" height="15" fill="rgb(222,56,52)"/><text x="20.4294%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="20.1794%" y="549" width="0.1121%" height="15" fill="rgb(245,217,50)"/><text x="20.4294%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="20.1794%" y="533" width="0.1121%" height="15" fill="rgb(213,201,24)"/><text x="20.4294%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="20.1794%" y="517" width="0.1121%" height="15" fill="rgb(248,116,28)"/><text x="20.4294%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="20.1794%" y="501" width="0.1121%" height="15" fill="rgb(219,72,43)"/><text x="20.4294%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="20.4036%" y="613" width="0.1121%" height="15" fill="rgb(209,138,14)"/><text x="20.6536%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="20.5157%" y="597" width="0.1121%" height="15" fill="rgb(222,18,33)"/><text x="20.7657%" y="607.50"></text></g><g><title>start_thread (47 samples, 5.27%)</title><rect x="15.4709%" y="837" width="5.2691%" height="15" fill="rgb(213,199,7)"/><text x="15.7209%" y="847.50">start_..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (47 samples, 5.27%)</title><rect x="15.4709%" y="821" width="5.2691%" height="15" fill="rgb(250,110,10)"/><text x="15.7209%" y="831.50">std::s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (47 samples, 5.27%)</title><rect x="15.4709%" y="805" width="5.2691%" height="15" fill="rgb(248,123,6)"/><text x="15.7209%" y="815.50">&lt;alloc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (47 samples, 5.27%)</title><rect x="15.4709%" y="789" width="5.2691%" height="15" fill="rgb(206,91,31)"/><text x="15.7209%" y="799.50">&lt;alloc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (47 samples, 5.27%)</title><rect x="15.4709%" y="773" width="5.2691%" height="15" fill="rgb(211,154,13)"/><text x="15.7209%" y="783.50">core::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47 samples, 5.27%)</title><rect x="15.4709%" y="757" width="5.2691%" height="15" fill="rgb(225,148,7)"/><text x="15.7209%" y="767.50">std::s..</text></g><g><title>decor::Shim::run_on_tcp (47 samples, 5.27%)</title><rect x="15.4709%" y="741" width="5.2691%" height="15" fill="rgb(220,160,43)"/><text x="15.7209%" y="751.50">decor:..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (47 samples, 5.27%)</title><rect x="15.4709%" y="725" width="5.2691%" height="15" fill="rgb(213,52,39)"/><text x="15.7209%" y="735.50">msql_s..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (47 samples, 5.27%)</title><rect x="15.4709%" y="709" width="5.2691%" height="15" fill="rgb(243,137,7)"/><text x="15.7209%" y="719.50">&lt;decor..</text></g><g><title>decor::helpers::answer_rows (7 samples, 0.78%)</title><rect x="19.9552%" y="693" width="0.7848%" height="15" fill="rgb(230,79,13)"/><text x="20.2052%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.78%)</title><rect x="19.9552%" y="677" width="0.7848%" height="15" fill="rgb(247,105,23)"/><text x="20.2052%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (7 samples, 0.78%)</title><rect x="19.9552%" y="661" width="0.7848%" height="15" fill="rgb(223,179,41)"/><text x="20.2052%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (7 samples, 0.78%)</title><rect x="19.9552%" y="645" width="0.7848%" height="15" fill="rgb(218,9,34)"/><text x="20.2052%" y="655.50"></text></g><g><title>mysql_common::value::read_text_values (4 samples, 0.45%)</title><rect x="20.2915%" y="629" width="0.4484%" height="15" fill="rgb(222,106,8)"/><text x="20.5415%" y="639.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.22%)</title><rect x="20.5157%" y="613" width="0.2242%" height="15" fill="rgb(211,220,0)"/><text x="20.7657%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="20.6278%" y="597" width="0.1121%" height="15" fill="rgb(229,52,16)"/><text x="20.8778%" y="607.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="20.7399%" y="837" width="0.1121%" height="15" fill="rgb(212,155,18)"/><text x="20.9899%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="20.8520%" y="709" width="0.2242%" height="15" fill="rgb(242,21,14)"/><text x="21.1020%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.22%)</title><rect x="20.8520%" y="693" width="0.2242%" height="15" fill="rgb(222,19,48)"/><text x="21.1020%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.22%)</title><rect x="20.8520%" y="677" width="0.2242%" height="15" fill="rgb(232,45,27)"/><text x="21.1020%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.22%)</title><rect x="20.8520%" y="661" width="0.2242%" height="15" fill="rgb(249,103,42)"/><text x="21.1020%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.22%)</title><rect x="20.8520%" y="645" width="0.2242%" height="15" fill="rgb(246,81,33)"/><text x="21.1020%" y="655.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="21.0762%" y="709" width="0.1121%" height="15" fill="rgb(252,33,42)"/><text x="21.3262%" y="719.50"></text></g><g><title>hwloc_topology_load (1 samples, 0.11%)</title><rect x="21.0762%" y="693" width="0.1121%" height="15" fill="rgb(209,212,41)"/><text x="21.3262%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="21.0762%" y="677" width="0.1121%" height="15" fill="rgb(207,154,6)"/><text x="21.3262%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="21.0762%" y="661" width="0.1121%" height="15" fill="rgb(223,64,47)"/><text x="21.3262%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="21.0762%" y="645" width="0.1121%" height="15" fill="rgb(211,161,38)"/><text x="21.3262%" y="655.50"></text></g><g><title>__GI___openat (1 samples, 0.11%)</title><rect x="21.0762%" y="629" width="0.1121%" height="15" fill="rgb(219,138,40)"/><text x="21.3262%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="21.0762%" y="613" width="0.1121%" height="15" fill="rgb(241,228,46)"/><text x="21.3262%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="21.0762%" y="597" width="0.1121%" height="15" fill="rgb(223,209,38)"/><text x="21.3262%" y="607.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.11%)</title><rect x="21.0762%" y="581" width="0.1121%" height="15" fill="rgb(236,164,45)"/><text x="21.3262%" y="591.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.11%)</title><rect x="21.0762%" y="565" width="0.1121%" height="15" fill="rgb(231,15,5)"/><text x="21.3262%" y="575.50"></text></g><g><title>do_filp_open (1 samples, 0.11%)</title><rect x="21.0762%" y="549" width="0.1121%" height="15" fill="rgb(252,35,15)"/><text x="21.3262%" y="559.50"></text></g><g><title>path_openat (1 samples, 0.11%)</title><rect x="21.0762%" y="533" width="0.1121%" height="15" fill="rgb(248,181,18)"/><text x="21.3262%" y="543.50"></text></g><g><title>link_path_walk (1 samples, 0.11%)</title><rect x="21.0762%" y="517" width="0.1121%" height="15" fill="rgb(233,39,42)"/><text x="21.3262%" y="527.50"></text></g><g><title>walk_component (1 samples, 0.11%)</title><rect x="21.0762%" y="501" width="0.1121%" height="15" fill="rgb(238,110,33)"/><text x="21.3262%" y="511.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.11%)</title><rect x="21.0762%" y="485" width="0.1121%" height="15" fill="rgb(233,195,10)"/><text x="21.3262%" y="495.50"></text></g><g><title>__d_lookup (1 samples, 0.11%)</title><rect x="21.0762%" y="469" width="0.1121%" height="15" fill="rgb(254,105,3)"/><text x="21.3262%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.11%)</title><rect x="21.6368%" y="373" width="0.1121%" height="15" fill="rgb(221,225,9)"/><text x="21.8868%" y="383.50"></text></g><g><title>ctx_sched_out (1 samples, 0.11%)</title><rect x="21.6368%" y="357" width="0.1121%" height="15" fill="rgb(224,227,45)"/><text x="21.8868%" y="367.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.11%)</title><rect x="21.6368%" y="341" width="0.1121%" height="15" fill="rgb(229,198,43)"/><text x="21.8868%" y="351.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="21.6368%" y="325" width="0.1121%" height="15" fill="rgb(206,209,35)"/><text x="21.8868%" y="335.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="21.7489%" y="325" width="0.1121%" height="15" fill="rgb(245,195,53)"/><text x="21.9989%" y="335.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.22%)</title><rect x="21.7489%" y="373" width="0.2242%" height="15" fill="rgb(240,92,26)"/><text x="21.9989%" y="383.50"></text></g><g><title>dequeue_entity (2 samples, 0.22%)</title><rect x="21.7489%" y="357" width="0.2242%" height="15" fill="rgb(207,40,23)"/><text x="21.9989%" y="367.50"></text></g><g><title>update_load_avg (2 samples, 0.22%)</title><rect x="21.7489%" y="341" width="0.2242%" height="15" fill="rgb(223,111,35)"/><text x="21.9989%" y="351.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="21.8610%" y="325" width="0.1121%" height="15" fill="rgb(229,147,28)"/><text x="22.1110%" y="335.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="21.9731%" y="373" width="0.1121%" height="15" fill="rgb(211,29,28)"/><text x="22.2231%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="21.9731%" y="357" width="0.1121%" height="15" fill="rgb(228,72,33)"/><text x="22.2231%" y="367.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="21.9731%" y="341" width="0.1121%" height="15" fill="rgb(205,214,31)"/><text x="22.2231%" y="351.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="22.0852%" y="373" width="0.1121%" height="15" fill="rgb(224,111,15)"/><text x="22.3352%" y="383.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="22.0852%" y="357" width="0.1121%" height="15" fill="rgb(253,21,26)"/><text x="22.3352%" y="367.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="22.1973%" y="373" width="0.1121%" height="15" fill="rgb(245,139,43)"/><text x="22.4473%" y="383.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="22.1973%" y="357" width="0.1121%" height="15" fill="rgb(252,170,7)"/><text x="22.4473%" y="367.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="22.3094%" y="373" width="0.1121%" height="15" fill="rgb(231,118,14)"/><text x="22.5594%" y="383.50"></text></g><g><title>sk_wait_data (9 samples, 1.01%)</title><rect x="21.5247%" y="453" width="1.0090%" height="15" fill="rgb(238,83,0)"/><text x="21.7747%" y="463.50"></text></g><g><title>wait_woken (9 samples, 1.01%)</title><rect x="21.5247%" y="437" width="1.0090%" height="15" fill="rgb(221,39,39)"/><text x="21.7747%" y="447.50"></text></g><g><title>schedule_timeout (8 samples, 0.90%)</title><rect x="21.6368%" y="421" width="0.8969%" height="15" fill="rgb(222,119,46)"/><text x="21.8868%" y="431.50"></text></g><g><title>schedule (8 samples, 0.90%)</title><rect x="21.6368%" y="405" width="0.8969%" height="15" fill="rgb(222,165,49)"/><text x="21.8868%" y="415.50"></text></g><g><title>__schedule (8 samples, 0.90%)</title><rect x="21.6368%" y="389" width="0.8969%" height="15" fill="rgb(219,113,52)"/><text x="21.8868%" y="399.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="22.4215%" y="373" width="0.1121%" height="15" fill="rgb(214,7,15)"/><text x="22.6715%" y="383.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="22.4215%" y="357" width="0.1121%" height="15" fill="rgb(235,32,4)"/><text x="22.6715%" y="367.50"></text></g><g><title>do_syscall_64 (13 samples, 1.46%)</title><rect x="21.1883%" y="533" width="1.4574%" height="15" fill="rgb(238,90,54)"/><text x="21.4383%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (12 samples, 1.35%)</title><rect x="21.3004%" y="517" width="1.3453%" height="15" fill="rgb(213,208,19)"/><text x="21.5504%" y="527.50"></text></g><g><title>__sys_recvfrom (12 samples, 1.35%)</title><rect x="21.3004%" y="501" width="1.3453%" height="15" fill="rgb(233,156,4)"/><text x="21.5504%" y="511.50"></text></g><g><title>inet_recvmsg (11 samples, 1.23%)</title><rect x="21.4126%" y="485" width="1.2332%" height="15" fill="rgb(207,194,5)"/><text x="21.6626%" y="495.50"></text></g><g><title>tcp_recvmsg (10 samples, 1.12%)</title><rect x="21.5247%" y="469" width="1.1211%" height="15" fill="rgb(206,111,30)"/><text x="21.7747%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (1 samples, 0.11%)</title><rect x="22.5336%" y="453" width="0.1121%" height="15" fill="rgb(243,70,54)"/><text x="22.7836%" y="463.50"></text></g><g><title>__skb_datagram_iter (1 samples, 0.11%)</title><rect x="22.5336%" y="437" width="0.1121%" height="15" fill="rgb(242,28,8)"/><text x="22.7836%" y="447.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="22.5336%" y="421" width="0.1121%" height="15" fill="rgb(219,106,18)"/><text x="22.7836%" y="431.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="22.5336%" y="405" width="0.1121%" height="15" fill="rgb(244,222,10)"/><text x="22.7836%" y="415.50"></text></g><g><title>check_stack_object (1 samples, 0.11%)</title><rect x="22.5336%" y="389" width="0.1121%" height="15" fill="rgb(236,179,52)"/><text x="22.7836%" y="399.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.57%)</title><rect x="21.1883%" y="661" width="1.5695%" height="15" fill="rgb(213,23,39)"/><text x="21.4383%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (14 samples, 1.57%)</title><rect x="21.1883%" y="645" width="1.5695%" height="15" fill="rgb(238,48,10)"/><text x="21.4383%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (14 samples, 1.57%)</title><rect x="21.1883%" y="629" width="1.5695%" height="15" fill="rgb(251,196,23)"/><text x="21.4383%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (14 samples, 1.57%)</title><rect x="21.1883%" y="613" width="1.5695%" height="15" fill="rgb(250,152,24)"/><text x="21.4383%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (14 samples, 1.57%)</title><rect x="21.1883%" y="597" width="1.5695%" height="15" fill="rgb(209,150,17)"/><text x="21.4383%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (14 samples, 1.57%)</title><rect x="21.1883%" y="581" width="1.5695%" height="15" fill="rgb(234,202,34)"/><text x="21.4383%" y="591.50"></text></g><g><title>__libc_recv (14 samples, 1.57%)</title><rect x="21.1883%" y="565" width="1.5695%" height="15" fill="rgb(253,148,53)"/><text x="21.4383%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 1.57%)</title><rect x="21.1883%" y="549" width="1.5695%" height="15" fill="rgb(218,129,16)"/><text x="21.4383%" y="559.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="22.6457%" y="533" width="0.1121%" height="15" fill="rgb(216,85,19)"/><text x="22.8957%" y="543.50"></text></g><g><title>std::rt::lang_start_internal (18 samples, 2.02%)</title><rect x="20.8520%" y="837" width="2.0179%" height="15" fill="rgb(235,228,7)"/><text x="21.1020%" y="847.50">s..</text></g><g><title>std::panic::catch_unwind (18 samples, 2.02%)</title><rect x="20.8520%" y="821" width="2.0179%" height="15" fill="rgb(245,175,0)"/><text x="21.1020%" y="831.50">s..</text></g><g><title>std::panicking::try (18 samples, 2.02%)</title><rect x="20.8520%" y="805" width="2.0179%" height="15" fill="rgb(208,168,36)"/><text x="21.1020%" y="815.50">s..</text></g><g><title>std::panicking::try::do_call (18 samples, 2.02%)</title><rect x="20.8520%" y="789" width="2.0179%" height="15" fill="rgb(246,171,24)"/><text x="21.1020%" y="799.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 2.02%)</title><rect x="20.8520%" y="773" width="2.0179%" height="15" fill="rgb(215,142,24)"/><text x="21.1020%" y="783.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (18 samples, 2.02%)</title><rect x="20.8520%" y="757" width="2.0179%" height="15" fill="rgb(250,187,7)"/><text x="21.1020%" y="767.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 2.02%)</title><rect x="20.8520%" y="741" width="2.0179%" height="15" fill="rgb(228,66,33)"/><text x="21.1020%" y="751.50">s..</text></g><g><title>lobsters::main (18 samples, 2.02%)</title><rect x="20.8520%" y="725" width="2.0179%" height="15" fill="rgb(234,215,21)"/><text x="21.1020%" y="735.50">l..</text></g><g><title>mysql::conn::Conn::_query (15 samples, 1.68%)</title><rect x="21.1883%" y="709" width="1.6816%" height="15" fill="rgb(222,191,20)"/><text x="21.4383%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (15 samples, 1.68%)</title><rect x="21.1883%" y="693" width="1.6816%" height="15" fill="rgb(245,79,54)"/><text x="21.4383%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.68%)</title><rect x="21.1883%" y="677" width="1.6816%" height="15" fill="rgb(240,10,37)"/><text x="21.4383%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="22.7578%" y="661" width="0.1121%" height="15" fill="rgb(214,192,32)"/><text x="23.0078%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.56%)</title><rect x="22.8700%" y="629" width="0.5605%" height="15" fill="rgb(209,36,54)"/><text x="23.1200%" y="639.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.56%)</title><rect x="22.8700%" y="613" width="0.5605%" height="15" fill="rgb(220,10,11)"/><text x="23.1200%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6 samples, 0.67%)</title><rect x="22.8700%" y="837" width="0.6726%" height="15" fill="rgb(221,106,17)"/><text x="23.1200%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (6 samples, 0.67%)</title><rect x="22.8700%" y="821" width="0.6726%" height="15" fill="rgb(251,142,44)"/><text x="23.1200%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (6 samples, 0.67%)</title><rect x="22.8700%" y="805" width="0.6726%" height="15" fill="rgb(238,13,15)"/><text x="23.1200%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (6 samples, 0.67%)</title><rect x="22.8700%" y="789" width="0.6726%" height="15" fill="rgb(208,107,27)"/><text x="23.1200%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.67%)</title><rect x="22.8700%" y="773" width="0.6726%" height="15" fill="rgb(205,136,37)"/><text x="23.1200%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (6 samples, 0.67%)</title><rect x="22.8700%" y="757" width="0.6726%" height="15" fill="rgb(250,205,27)"/><text x="23.1200%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (6 samples, 0.67%)</title><rect x="22.8700%" y="741" width="0.6726%" height="15" fill="rgb(210,80,43)"/><text x="23.1200%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (6 samples, 0.67%)</title><rect x="22.8700%" y="725" width="0.6726%" height="15" fill="rgb(247,160,36)"/><text x="23.1200%" y="735.50"></text></g><g><title>decor::helpers::answer_rows (6 samples, 0.67%)</title><rect x="22.8700%" y="709" width="0.6726%" height="15" fill="rgb(234,13,49)"/><text x="23.1200%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.67%)</title><rect x="22.8700%" y="693" width="0.6726%" height="15" fill="rgb(234,122,0)"/><text x="23.1200%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (6 samples, 0.67%)</title><rect x="22.8700%" y="677" width="0.6726%" height="15" fill="rgb(207,146,38)"/><text x="23.1200%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (6 samples, 0.67%)</title><rect x="22.8700%" y="661" width="0.6726%" height="15" fill="rgb(207,177,25)"/><text x="23.1200%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (6 samples, 0.67%)</title><rect x="22.8700%" y="645" width="0.6726%" height="15" fill="rgb(211,178,42)"/><text x="23.1200%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="23.4305%" y="629" width="0.1121%" height="15" fill="rgb(230,69,54)"/><text x="23.6805%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.34%)</title><rect x="23.5426%" y="773" width="0.3363%" height="15" fill="rgb(214,135,41)"/><text x="23.7926%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.34%)</title><rect x="23.5426%" y="757" width="0.3363%" height="15" fill="rgb(237,67,25)"/><text x="23.7926%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.34%)</title><rect x="23.5426%" y="741" width="0.3363%" height="15" fill="rgb(222,189,50)"/><text x="23.7926%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.34%)</title><rect x="23.5426%" y="725" width="0.3363%" height="15" fill="rgb(245,148,34)"/><text x="23.7926%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="23.5426%" y="709" width="0.3363%" height="15" fill="rgb(222,29,6)"/><text x="23.7926%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.34%)</title><rect x="23.5426%" y="693" width="0.3363%" height="15" fill="rgb(221,189,43)"/><text x="23.7926%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.34%)</title><rect x="23.5426%" y="677" width="0.3363%" height="15" fill="rgb(207,36,27)"/><text x="23.7926%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="23.5426%" y="661" width="0.3363%" height="15" fill="rgb(217,90,24)"/><text x="23.7926%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.34%)</title><rect x="23.5426%" y="645" width="0.3363%" height="15" fill="rgb(224,66,35)"/><text x="23.7926%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.22%)</title><rect x="23.6547%" y="629" width="0.2242%" height="15" fill="rgb(221,13,50)"/><text x="23.9047%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="24.1031%" y="613" width="0.1121%" height="15" fill="rgb(236,68,49)"/><text x="24.3531%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.11%)</title><rect x="24.2152%" y="613" width="0.1121%" height="15" fill="rgb(229,146,28)"/><text x="24.4652%" y="623.50"></text></g><g><title>[unknown] (179 samples, 20.07%)</title><rect x="4.4843%" y="853" width="20.0673%" height="15" fill="rgb(225,31,38)"/><text x="4.7343%" y="863.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 1.01%)</title><rect x="23.5426%" y="837" width="1.0090%" height="15" fill="rgb(250,208,3)"/><text x="23.7926%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (9 samples, 1.01%)</title><rect x="23.5426%" y="821" width="1.0090%" height="15" fill="rgb(246,54,23)"/><text x="23.7926%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (9 samples, 1.01%)</title><rect x="23.5426%" y="805" width="1.0090%" height="15" fill="rgb(243,76,11)"/><text x="23.7926%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 1.01%)</title><rect x="23.5426%" y="789" width="1.0090%" height="15" fill="rgb(245,21,50)"/><text x="23.7926%" y="799.50"></text></g><g><title>decor::helpers::answer_rows (6 samples, 0.67%)</title><rect x="23.8789%" y="773" width="0.6726%" height="15" fill="rgb(228,9,43)"/><text x="24.1289%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.67%)</title><rect x="23.8789%" y="757" width="0.6726%" height="15" fill="rgb(208,100,47)"/><text x="24.1289%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (6 samples, 0.67%)</title><rect x="23.8789%" y="741" width="0.6726%" height="15" fill="rgb(232,26,8)"/><text x="24.1289%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (6 samples, 0.67%)</title><rect x="23.8789%" y="725" width="0.6726%" height="15" fill="rgb(216,166,38)"/><text x="24.1289%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (6 samples, 0.67%)</title><rect x="23.8789%" y="709" width="0.6726%" height="15" fill="rgb(251,202,51)"/><text x="24.1289%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.67%)</title><rect x="23.8789%" y="693" width="0.6726%" height="15" fill="rgb(254,216,34)"/><text x="24.1289%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (6 samples, 0.67%)</title><rect x="23.8789%" y="677" width="0.6726%" height="15" fill="rgb(251,32,27)"/><text x="24.1289%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (5 samples, 0.56%)</title><rect x="23.9910%" y="661" width="0.5605%" height="15" fill="rgb(208,127,28)"/><text x="24.2410%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.56%)</title><rect x="23.9910%" y="645" width="0.5605%" height="15" fill="rgb(224,137,22)"/><text x="24.2410%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.45%)</title><rect x="24.1031%" y="629" width="0.4484%" height="15" fill="rgb(254,70,32)"/><text x="24.3531%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.22%)</title><rect x="24.3274%" y="613" width="0.2242%" height="15" fill="rgb(229,75,37)"/><text x="24.5774%" y="623.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="25.1121%" y="709" width="0.1121%" height="15" fill="rgb(252,64,23)"/><text x="25.3621%" y="719.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="25.1121%" y="693" width="0.1121%" height="15" fill="rgb(232,162,48)"/><text x="25.3621%" y="703.50"></text></g><g><title>decor::helpers::process_schema_stmt (1 samples, 0.11%)</title><rect x="25.1121%" y="677" width="0.1121%" height="15" fill="rgb(246,160,12)"/><text x="25.3621%" y="687.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (1 samples, 0.11%)</title><rect x="25.1121%" y="661" width="0.1121%" height="15" fill="rgb(247,166,0)"/><text x="25.3621%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="25.3363%" y="677" width="0.1121%" height="15" fill="rgb(249,219,21)"/><text x="25.5863%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="25.6726%" y="629" width="0.1121%" height="15" fill="rgb(205,209,3)"/><text x="25.9226%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="25.6726%" y="613" width="0.1121%" height="15" fill="rgb(243,44,1)"/><text x="25.9226%" y="623.50"></text></g><g><title>__GI___libc_free (2 samples, 0.22%)</title><rect x="25.7848%" y="629" width="0.2242%" height="15" fill="rgb(206,159,16)"/><text x="26.0348%" y="639.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.56%)</title><rect x="25.5605%" y="645" width="0.5605%" height="15" fill="rgb(244,77,30)"/><text x="25.8105%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="26.0090%" y="629" width="0.1121%" height="15" fill="rgb(218,69,12)"/><text x="26.2590%" y="639.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (7 samples, 0.78%)</title><rect x="25.4484%" y="661" width="0.7848%" height="15" fill="rgb(212,87,7)"/><text x="25.6984%" y="671.50"></text></g><g><title>mysql_common::packets::column_from_payload (1 samples, 0.11%)</title><rect x="26.1211%" y="645" width="0.1121%" height="15" fill="rgb(245,114,25)"/><text x="26.3711%" y="655.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="26.1211%" y="629" width="0.1121%" height="15" fill="rgb(210,61,42)"/><text x="26.3711%" y="639.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::encode (1 samples, 0.11%)</title><rect x="26.2332%" y="645" width="0.1121%" height="15" fill="rgb(211,52,33)"/><text x="26.4832%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.11%)</title><rect x="26.2332%" y="629" width="0.1121%" height="15" fill="rgb(234,58,33)"/><text x="26.4832%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="26.2332%" y="613" width="0.1121%" height="15" fill="rgb(220,115,36)"/><text x="26.4832%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="26.3453%" y="629" width="0.1121%" height="15" fill="rgb(243,153,54)"/><text x="26.5953%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::drain (1 samples, 0.11%)</title><rect x="26.3453%" y="613" width="0.1121%" height="15" fill="rgb(251,47,18)"/><text x="26.5953%" y="623.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="26.5695%" y="581" width="0.1121%" height="15" fill="rgb(242,102,42)"/><text x="26.8195%" y="591.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="26.9058%" y="485" width="0.1121%" height="15" fill="rgb(234,31,38)"/><text x="27.1558%" y="495.50"></text></g><g><title>release_sock (1 samples, 0.11%)</title><rect x="27.0179%" y="485" width="0.1121%" height="15" fill="rgb(221,117,51)"/><text x="27.2679%" y="495.50"></text></g><g><title>tcp_release_cb (1 samples, 0.11%)</title><rect x="27.0179%" y="469" width="0.1121%" height="15" fill="rgb(212,20,18)"/><text x="27.2679%" y="479.50"></text></g><g><title>__ip_local_out (1 samples, 0.11%)</title><rect x="27.6906%" y="405" width="0.1121%" height="15" fill="rgb(245,133,36)"/><text x="27.9406%" y="415.50"></text></g><g><title>ip_send_check (1 samples, 0.11%)</title><rect x="27.6906%" y="389" width="0.1121%" height="15" fill="rgb(212,6,19)"/><text x="27.9406%" y="399.50"></text></g><g><title>ip_finish_output (2 samples, 0.22%)</title><rect x="27.8027%" y="389" width="0.2242%" height="15" fill="rgb(218,1,36)"/><text x="28.0527%" y="399.50"></text></g><g><title>eth_type_trans (2 samples, 0.22%)</title><rect x="28.2511%" y="325" width="0.2242%" height="15" fill="rgb(246,84,54)"/><text x="28.5011%" y="335.50"></text></g><g><title>netif_rx (1 samples, 0.11%)</title><rect x="28.4753%" y="325" width="0.1121%" height="15" fill="rgb(242,110,6)"/><text x="28.7253%" y="335.50"></text></g><g><title>netif_rx_internal (1 samples, 0.11%)</title><rect x="28.4753%" y="309" width="0.1121%" height="15" fill="rgb(214,47,5)"/><text x="28.7253%" y="319.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="28.4753%" y="293" width="0.1121%" height="15" fill="rgb(218,159,25)"/><text x="28.7253%" y="303.50"></text></g><g><title>__raise_softirq_irqoff (1 samples, 0.11%)</title><rect x="28.4753%" y="277" width="0.1121%" height="15" fill="rgb(215,211,28)"/><text x="28.7253%" y="287.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="28.4753%" y="261" width="0.1121%" height="15" fill="rgb(238,59,32)"/><text x="28.7253%" y="271.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.67%)</title><rect x="28.0269%" y="373" width="0.6726%" height="15" fill="rgb(226,82,3)"/><text x="28.2769%" y="383.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.67%)</title><rect x="28.0269%" y="357" width="0.6726%" height="15" fill="rgb(240,164,32)"/><text x="28.2769%" y="367.50"></text></g><g><title>loopback_xmit (5 samples, 0.56%)</title><rect x="28.1390%" y="341" width="0.5605%" height="15" fill="rgb(232,46,7)"/><text x="28.3890%" y="351.50"></text></g><g><title>tcp_wfree (1 samples, 0.11%)</title><rect x="28.5874%" y="325" width="0.1121%" height="15" fill="rgb(229,129,53)"/><text x="28.8374%" y="335.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.22%)</title><rect x="28.6996%" y="309" width="0.2242%" height="15" fill="rgb(234,188,29)"/><text x="28.9496%" y="319.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="28.8117%" y="293" width="0.1121%" height="15" fill="rgb(246,141,4)"/><text x="29.0617%" y="303.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="28.8117%" y="277" width="0.1121%" height="15" fill="rgb(229,23,39)"/><text x="29.0617%" y="287.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="28.8117%" y="261" width="0.1121%" height="15" fill="rgb(206,12,3)"/><text x="29.0617%" y="271.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="28.9238%" y="261" width="0.1121%" height="15" fill="rgb(252,226,20)"/><text x="29.1738%" y="271.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.22%)</title><rect x="29.4843%" y="181" width="0.2242%" height="15" fill="rgb(216,123,35)"/><text x="29.7343%" y="191.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="29.5964%" y="165" width="0.1121%" height="15" fill="rgb(212,68,40)"/><text x="29.8464%" y="175.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="29.5964%" y="149" width="0.1121%" height="15" fill="rgb(254,125,32)"/><text x="29.8464%" y="159.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="29.8206%" y="149" width="0.1121%" height="15" fill="rgb(253,97,22)"/><text x="30.0706%" y="159.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="29.9327%" y="69" width="0.1121%" height="15" fill="rgb(241,101,14)"/><text x="30.1827%" y="79.50"></text></g><g><title>enqueue_task (3 samples, 0.34%)</title><rect x="30.0448%" y="69" width="0.3363%" height="15" fill="rgb(238,103,29)"/><text x="30.2948%" y="79.50"></text></g><g><title>psi_task_change (3 samples, 0.34%)</title><rect x="30.0448%" y="53" width="0.3363%" height="15" fill="rgb(233,195,47)"/><text x="30.2948%" y="63.50"></text></g><g><title>psi_group_change (3 samples, 0.34%)</title><rect x="30.0448%" y="37" width="0.3363%" height="15" fill="rgb(246,218,30)"/><text x="30.2948%" y="47.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.22%)</title><rect x="30.3812%" y="69" width="0.2242%" height="15" fill="rgb(219,145,47)"/><text x="30.6312%" y="79.50"></text></g><g><title>enqueue_entity (2 samples, 0.22%)</title><rect x="30.3812%" y="53" width="0.2242%" height="15" fill="rgb(243,12,26)"/><text x="30.6312%" y="63.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.11%)</title><rect x="30.4933%" y="37" width="0.1121%" height="15" fill="rgb(214,87,16)"/><text x="30.7433%" y="47.50"></text></g><g><title>select_task_rq_fair (4 samples, 0.45%)</title><rect x="30.6054%" y="69" width="0.4484%" height="15" fill="rgb(208,99,42)"/><text x="30.8554%" y="79.50"></text></g><g><title>available_idle_cpu (1 samples, 0.11%)</title><rect x="30.9417%" y="53" width="0.1121%" height="15" fill="rgb(253,99,2)"/><text x="31.1917%" y="63.50"></text></g><g><title>__wake_up_common (12 samples, 1.35%)</title><rect x="29.9327%" y="117" width="1.3453%" height="15" fill="rgb(220,168,23)"/><text x="30.1827%" y="127.50"></text></g><g><title>pollwake (12 samples, 1.35%)</title><rect x="29.9327%" y="101" width="1.3453%" height="15" fill="rgb(242,38,24)"/><text x="30.1827%" y="111.50"></text></g><g><title>try_to_wake_up (12 samples, 1.35%)</title><rect x="29.9327%" y="85" width="1.3453%" height="15" fill="rgb(225,182,9)"/><text x="30.1827%" y="95.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.22%)</title><rect x="31.0538%" y="69" width="0.2242%" height="15" fill="rgb(243,178,37)"/><text x="31.3038%" y="79.50"></text></g><g><title>check_preempt_curr (2 samples, 0.22%)</title><rect x="31.0538%" y="53" width="0.2242%" height="15" fill="rgb(232,139,19)"/><text x="31.3038%" y="63.50"></text></g><g><title>resched_curr (2 samples, 0.22%)</title><rect x="31.0538%" y="37" width="0.2242%" height="15" fill="rgb(225,201,24)"/><text x="31.3038%" y="47.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="31.2780%" y="117" width="0.1121%" height="15" fill="rgb(221,47,46)"/><text x="31.5280%" y="127.50"></text></g><g><title>sock_def_readable (14 samples, 1.57%)</title><rect x="29.9327%" y="149" width="1.5695%" height="15" fill="rgb(249,23,13)"/><text x="30.1827%" y="159.50"></text></g><g><title>__wake_up_common_lock (14 samples, 1.57%)</title><rect x="29.9327%" y="133" width="1.5695%" height="15" fill="rgb(219,9,5)"/><text x="30.1827%" y="143.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="31.3901%" y="117" width="0.1121%" height="15" fill="rgb(254,171,16)"/><text x="31.6401%" y="127.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="31.7265%" y="117" width="0.1121%" height="15" fill="rgb(230,171,20)"/><text x="31.9765%" y="127.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="31.7265%" y="101" width="0.1121%" height="15" fill="rgb(210,71,41)"/><text x="31.9765%" y="111.50"></text></g><g><title>__kfree_skb (3 samples, 0.34%)</title><rect x="31.7265%" y="133" width="0.3363%" height="15" fill="rgb(206,173,20)"/><text x="31.9765%" y="143.50"></text></g><g><title>skb_release_data (2 samples, 0.22%)</title><rect x="31.8386%" y="117" width="0.2242%" height="15" fill="rgb(233,88,34)"/><text x="32.0886%" y="127.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="32.0628%" y="133" width="0.1121%" height="15" fill="rgb(223,209,46)"/><text x="32.3128%" y="143.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="32.0628%" y="117" width="0.1121%" height="15" fill="rgb(250,43,18)"/><text x="32.3128%" y="127.50"></text></g><g><title>tcp_ack_update_rtt (3 samples, 0.34%)</title><rect x="32.1749%" y="133" width="0.3363%" height="15" fill="rgb(208,13,10)"/><text x="32.4249%" y="143.50"></text></g><g><title>__usecs_to_jiffies (1 samples, 0.11%)</title><rect x="32.3991%" y="117" width="0.1121%" height="15" fill="rgb(212,200,36)"/><text x="32.6491%" y="127.50"></text></g><g><title>tcp_ack (10 samples, 1.12%)</title><rect x="31.5022%" y="149" width="1.1211%" height="15" fill="rgb(225,90,30)"/><text x="31.7522%" y="159.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="32.5112%" y="133" width="0.1121%" height="15" fill="rgb(236,182,39)"/><text x="32.7612%" y="143.50"></text></g><g><title>tcp_check_space (2 samples, 0.22%)</title><rect x="32.6233%" y="149" width="0.2242%" height="15" fill="rgb(212,144,35)"/><text x="32.8733%" y="159.50"></text></g><g><title>tcp_data_queue (1 samples, 0.11%)</title><rect x="32.8475%" y="149" width="0.1121%" height="15" fill="rgb(228,63,44)"/><text x="33.0975%" y="159.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="32.8475%" y="133" width="0.1121%" height="15" fill="rgb(228,109,6)"/><text x="33.0975%" y="143.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="32.8475%" y="117" width="0.1121%" height="15" fill="rgb(238,117,24)"/><text x="33.0975%" y="127.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="32.8475%" y="101" width="0.1121%" height="15" fill="rgb(242,26,26)"/><text x="33.0975%" y="111.50"></text></g><g><title>pollwake (1 samples, 0.11%)</title><rect x="32.8475%" y="85" width="0.1121%" height="15" fill="rgb(221,92,48)"/><text x="33.0975%" y="95.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="32.8475%" y="69" width="0.1121%" height="15" fill="rgb(209,209,32)"/><text x="33.0975%" y="79.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="32.8475%" y="53" width="0.1121%" height="15" fill="rgb(221,70,22)"/><text x="33.0975%" y="63.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="32.8475%" y="37" width="0.1121%" height="15" fill="rgb(248,145,5)"/><text x="33.0975%" y="47.50"></text></g><g><title>tcp_data_ready (1 samples, 0.11%)</title><rect x="32.9596%" y="149" width="0.1121%" height="15" fill="rgb(226,116,26)"/><text x="33.2096%" y="159.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.11%)</title><rect x="33.0717%" y="149" width="0.1121%" height="15" fill="rgb(244,5,17)"/><text x="33.3217%" y="159.50"></text></g><g><title>ip_local_deliver (38 samples, 4.26%)</title><rect x="29.1480%" y="245" width="4.2601%" height="15" fill="rgb(252,159,33)"/><text x="29.3980%" y="255.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (38 samples, 4.26%)</title><rect x="29.1480%" y="229" width="4.2601%" height="15" fill="rgb(206,71,0)"/><text x="29.3980%" y="239.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (37 samples, 4.15%)</title><rect x="29.2601%" y="213" width="4.1480%" height="15" fill="rgb(233,118,54)"/><text x="29.5101%" y="223.50">ip_pr..</text></g><g><title>tcp_v4_rcv (37 samples, 4.15%)</title><rect x="29.2601%" y="197" width="4.1480%" height="15" fill="rgb(234,83,48)"/><text x="29.5101%" y="207.50">tcp_v..</text></g><g><title>tcp_v4_do_rcv (33 samples, 3.70%)</title><rect x="29.7085%" y="181" width="3.6996%" height="15" fill="rgb(228,3,54)"/><text x="29.9585%" y="191.50">tcp_..</text></g><g><title>tcp_rcv_established (33 samples, 3.70%)</title><rect x="29.7085%" y="165" width="3.6996%" height="15" fill="rgb(226,155,13)"/><text x="29.9585%" y="175.50">tcp_..</text></g><g><title>tcp_queue_rcv (2 samples, 0.22%)</title><rect x="33.1839%" y="149" width="0.2242%" height="15" fill="rgb(241,28,37)"/><text x="33.4339%" y="159.50"></text></g><g><title>ip_rcv_core (1 samples, 0.11%)</title><rect x="33.4081%" y="245" width="0.1121%" height="15" fill="rgb(233,93,10)"/><text x="33.6581%" y="255.50"></text></g><g><title>net_rx_action (43 samples, 4.82%)</title><rect x="28.9238%" y="309" width="4.8206%" height="15" fill="rgb(225,113,19)"/><text x="29.1738%" y="319.50">net_rx..</text></g><g><title>process_backlog (43 samples, 4.82%)</title><rect x="28.9238%" y="293" width="4.8206%" height="15" fill="rgb(241,2,18)"/><text x="29.1738%" y="303.50">proces..</text></g><g><title>__netif_receive_skb_one_core (43 samples, 4.82%)</title><rect x="28.9238%" y="277" width="4.8206%" height="15" fill="rgb(228,207,21)"/><text x="29.1738%" y="287.50">__neti..</text></g><g><title>ip_rcv (42 samples, 4.71%)</title><rect x="29.0359%" y="261" width="4.7085%" height="15" fill="rgb(213,211,35)"/><text x="29.2859%" y="271.50">ip_rcv</text></g><g><title>ip_rcv_finish (2 samples, 0.22%)</title><rect x="33.5202%" y="245" width="0.2242%" height="15" fill="rgb(209,83,10)"/><text x="33.7702%" y="255.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.22%)</title><rect x="33.5202%" y="229" width="0.2242%" height="15" fill="rgb(209,164,1)"/><text x="33.7702%" y="239.50"></text></g><g><title>__ip_queue_xmit (57 samples, 6.39%)</title><rect x="27.4664%" y="421" width="6.3901%" height="15" fill="rgb(213,184,43)"/><text x="27.7164%" y="431.50">__ip_que..</text></g><g><title>ip_output (54 samples, 6.05%)</title><rect x="27.8027%" y="405" width="6.0538%" height="15" fill="rgb(231,61,34)"/><text x="28.0527%" y="415.50">ip_output</text></g><g><title>ip_finish_output2 (52 samples, 5.83%)</title><rect x="28.0269%" y="389" width="5.8296%" height="15" fill="rgb(235,75,3)"/><text x="28.2769%" y="399.50">ip_fini..</text></g><g><title>__local_bh_enable_ip (46 samples, 5.16%)</title><rect x="28.6996%" y="373" width="5.1570%" height="15" fill="rgb(220,106,47)"/><text x="28.9496%" y="383.50">__loca..</text></g><g><title>do_softirq (46 samples, 5.16%)</title><rect x="28.6996%" y="357" width="5.1570%" height="15" fill="rgb(210,196,33)"/><text x="28.9496%" y="367.50">do_sof..</text></g><g><title>do_softirq_own_stack (46 samples, 5.16%)</title><rect x="28.6996%" y="341" width="5.1570%" height="15" fill="rgb(229,154,42)"/><text x="28.9496%" y="351.50">do_sof..</text></g><g><title>__do_softirq (46 samples, 5.16%)</title><rect x="28.6996%" y="325" width="5.1570%" height="15" fill="rgb(228,114,26)"/><text x="28.9496%" y="335.50">__do_s..</text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="33.7444%" y="309" width="0.1121%" height="15" fill="rgb(208,144,1)"/><text x="33.9944%" y="319.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.11%)</title><rect x="33.8565%" y="421" width="0.1121%" height="15" fill="rgb(239,112,37)"/><text x="34.1065%" y="431.50"></text></g><g><title>skb_clone (1 samples, 0.11%)</title><rect x="33.9686%" y="421" width="0.1121%" height="15" fill="rgb(210,96,50)"/><text x="34.2186%" y="431.50"></text></g><g><title>__tcp_transmit_skb (61 samples, 6.84%)</title><rect x="27.3543%" y="437" width="6.8386%" height="15" fill="rgb(222,178,2)"/><text x="27.6043%" y="447.50">__tcp_tra..</text></g><g><title>tcp_options_write (1 samples, 0.11%)</title><rect x="34.0807%" y="421" width="0.1121%" height="15" fill="rgb(226,74,18)"/><text x="34.3307%" y="431.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="34.1928%" y="437" width="0.1121%" height="15" fill="rgb(225,67,54)"/><text x="34.4428%" y="447.50"></text></g><g><title>read_tsc (1 samples, 0.11%)</title><rect x="34.1928%" y="421" width="0.1121%" height="15" fill="rgb(251,92,32)"/><text x="34.4428%" y="431.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.22%)</title><rect x="34.3049%" y="437" width="0.2242%" height="15" fill="rgb(228,149,22)"/><text x="34.5549%" y="447.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="34.4170%" y="421" width="0.1121%" height="15" fill="rgb(243,54,13)"/><text x="34.6670%" y="431.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="34.4170%" y="405" width="0.1121%" height="15" fill="rgb(243,180,28)"/><text x="34.6670%" y="415.50"></text></g><g><title>__tcp_push_pending_frames (66 samples, 7.40%)</title><rect x="27.2422%" y="469" width="7.3991%" height="15" fill="rgb(208,167,24)"/><text x="27.4922%" y="479.50">__tcp_push..</text></g><g><title>tcp_write_xmit (66 samples, 7.40%)</title><rect x="27.2422%" y="453" width="7.3991%" height="15" fill="rgb(245,73,45)"/><text x="27.4922%" y="463.50">tcp_write_..</text></g><g><title>tcp_small_queue_check.isra.0 (1 samples, 0.11%)</title><rect x="34.5291%" y="437" width="0.1121%" height="15" fill="rgb(237,203,48)"/><text x="34.7791%" y="447.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="34.6413%" y="469" width="0.1121%" height="15" fill="rgb(211,197,16)"/><text x="34.8913%" y="479.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.11%)</title><rect x="34.6413%" y="453" width="0.1121%" height="15" fill="rgb(243,99,51)"/><text x="34.8913%" y="463.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="34.9776%" y="437" width="0.1121%" height="15" fill="rgb(215,123,29)"/><text x="35.2276%" y="447.50"></text></g><g><title>__ksize (2 samples, 0.22%)</title><rect x="35.0897%" y="437" width="0.2242%" height="15" fill="rgb(239,186,37)"/><text x="35.3397%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.67%)</title><rect x="34.7534%" y="469" width="0.6726%" height="15" fill="rgb(252,136,39)"/><text x="35.0034%" y="479.50"></text></g><g><title>__alloc_skb (6 samples, 0.67%)</title><rect x="34.7534%" y="453" width="0.6726%" height="15" fill="rgb(223,213,32)"/><text x="35.0034%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="35.3139%" y="437" width="0.1121%" height="15" fill="rgb(233,115,5)"/><text x="35.5639%" y="447.50"></text></g><g><title>__x64_sys_sendto (78 samples, 8.74%)</title><rect x="26.7937%" y="549" width="8.7444%" height="15" fill="rgb(207,226,44)"/><text x="27.0437%" y="559.50">__x64_sys_se..</text></g><g><title>__sys_sendto (78 samples, 8.74%)</title><rect x="26.7937%" y="533" width="8.7444%" height="15" fill="rgb(208,126,0)"/><text x="27.0437%" y="543.50">__sys_sendto</text></g><g><title>sock_sendmsg (77 samples, 8.63%)</title><rect x="26.9058%" y="517" width="8.6323%" height="15" fill="rgb(244,66,21)"/><text x="27.1558%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (77 samples, 8.63%)</title><rect x="26.9058%" y="501" width="8.6323%" height="15" fill="rgb(222,97,12)"/><text x="27.1558%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (75 samples, 8.41%)</title><rect x="27.1300%" y="485" width="8.4081%" height="15" fill="rgb(219,213,19)"/><text x="27.3800%" y="495.50">tcp_sendmsg_..</text></g><g><title>tcp_send_mss (1 samples, 0.11%)</title><rect x="35.4260%" y="469" width="0.1121%" height="15" fill="rgb(252,169,30)"/><text x="35.6760%" y="479.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="35.4260%" y="453" width="0.1121%" height="15" fill="rgb(206,32,51)"/><text x="35.6760%" y="463.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="35.4260%" y="437" width="0.1121%" height="15" fill="rgb(250,172,42)"/><text x="35.6760%" y="447.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="35.5381%" y="549" width="0.1121%" height="15" fill="rgb(209,34,43)"/><text x="35.7881%" y="559.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="35.5381%" y="533" width="0.1121%" height="15" fill="rgb(223,11,35)"/><text x="35.7881%" y="543.50"></text></g><g><title>do_syscall_64 (82 samples, 9.19%)</title><rect x="26.6816%" y="565" width="9.1928%" height="15" fill="rgb(251,219,26)"/><text x="26.9316%" y="575.50">do_syscall_64</text></g><g><title>syscall_trace_enter (2 samples, 0.22%)</title><rect x="35.6502%" y="549" width="0.2242%" height="15" fill="rgb(231,119,3)"/><text x="35.9002%" y="559.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="35.7623%" y="533" width="0.1121%" height="15" fill="rgb(216,97,11)"/><text x="36.0123%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (84 samples, 9.42%)</title><rect x="26.6816%" y="581" width="9.4170%" height="15" fill="rgb(223,59,9)"/><text x="26.9316%" y="591.50">entry_SYSCALL..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.22%)</title><rect x="35.8744%" y="565" width="0.2242%" height="15" fill="rgb(233,93,31)"/><text x="36.1244%" y="575.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (98 samples, 10.99%)</title><rect x="25.3363%" y="693" width="10.9865%" height="15" fill="rgb(239,81,33)"/><text x="25.5863%" y="703.50">&lt;mysql::conn::Co..</text></g><g><title>mysql::conn::Conn::_query (97 samples, 10.87%)</title><rect x="25.4484%" y="677" width="10.8744%" height="15" fill="rgb(213,120,34)"/><text x="25.6984%" y="687.50">mysql::conn::Con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (90 samples, 10.09%)</title><rect x="26.2332%" y="661" width="10.0897%" height="15" fill="rgb(243,49,53)"/><text x="26.4832%" y="671.50">mysql_common::p..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (89 samples, 9.98%)</title><rect x="26.3453%" y="645" width="9.9776%" height="15" fill="rgb(247,216,33)"/><text x="26.5953%" y="655.50">std::io::buffe..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (88 samples, 9.87%)</title><rect x="26.4574%" y="629" width="9.8655%" height="15" fill="rgb(226,26,14)"/><text x="26.7074%" y="639.50">&lt;std::net::tcp..</text></g><g><title>std::sys_common::net::TcpStream::write (88 samples, 9.87%)</title><rect x="26.4574%" y="613" width="9.8655%" height="15" fill="rgb(215,49,53)"/><text x="26.7074%" y="623.50">std::sys_commo..</text></g><g><title>__libc_send (87 samples, 9.75%)</title><rect x="26.5695%" y="597" width="9.7534%" height="15" fill="rgb(245,162,40)"/><text x="26.8195%" y="607.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.22%)</title><rect x="36.0987%" y="581" width="0.2242%" height="15" fill="rgb(229,68,17)"/><text x="36.3487%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="36.3229%" y="693" width="0.1121%" height="15" fill="rgb(213,182,10)"/><text x="36.5729%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="36.4350%" y="661" width="0.1121%" height="15" fill="rgb(245,125,30)"/><text x="36.6850%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="36.4350%" y="645" width="0.1121%" height="15" fill="rgb(232,202,2)"/><text x="36.6850%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="36.4350%" y="629" width="0.1121%" height="15" fill="rgb(237,140,51)"/><text x="36.6850%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="36.5471%" y="661" width="0.1121%" height="15" fill="rgb(236,157,25)"/><text x="36.7971%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="36.5471%" y="645" width="0.1121%" height="15" fill="rgb(219,209,0)"/><text x="36.7971%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="36.5471%" y="629" width="0.1121%" height="15" fill="rgb(240,116,54)"/><text x="36.7971%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="36.5471%" y="613" width="0.1121%" height="15" fill="rgb(216,10,36)"/><text x="36.7971%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="36.5471%" y="597" width="0.1121%" height="15" fill="rgb(222,72,44)"/><text x="36.7971%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="36.5471%" y="581" width="0.1121%" height="15" fill="rgb(232,159,9)"/><text x="36.7971%" y="591.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="36.7713%" y="533" width="0.1121%" height="15" fill="rgb(210,39,32)"/><text x="37.0213%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="36.7713%" y="517" width="0.1121%" height="15" fill="rgb(216,194,45)"/><text x="37.0213%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="36.8834%" y="533" width="0.1121%" height="15" fill="rgb(218,18,35)"/><text x="37.1334%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.67%)</title><rect x="36.7713%" y="581" width="0.6726%" height="15" fill="rgb(207,83,51)"/><text x="37.0213%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.67%)</title><rect x="36.7713%" y="565" width="0.6726%" height="15" fill="rgb(225,63,43)"/><text x="37.0213%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.67%)</title><rect x="36.7713%" y="549" width="0.6726%" height="15" fill="rgb(207,57,36)"/><text x="37.0213%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.45%)</title><rect x="36.9955%" y="533" width="0.4484%" height="15" fill="rgb(216,99,33)"/><text x="37.2455%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.34%)</title><rect x="37.1076%" y="517" width="0.3363%" height="15" fill="rgb(225,42,16)"/><text x="37.3576%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.34%)</title><rect x="37.1076%" y="501" width="0.3363%" height="15" fill="rgb(220,201,45)"/><text x="37.3576%" y="511.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.22%)</title><rect x="37.2197%" y="485" width="0.2242%" height="15" fill="rgb(225,33,4)"/><text x="37.4697%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="37.4439%" y="565" width="0.1121%" height="15" fill="rgb(224,33,50)"/><text x="37.6939%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="37.5561%" y="565" width="0.1121%" height="15" fill="rgb(246,198,51)"/><text x="37.8061%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 1.12%)</title><rect x="36.7713%" y="597" width="1.1211%" height="15" fill="rgb(205,22,4)"/><text x="37.0213%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.45%)</title><rect x="37.4439%" y="581" width="0.4484%" height="15" fill="rgb(206,3,8)"/><text x="37.6939%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.22%)</title><rect x="37.6682%" y="565" width="0.2242%" height="15" fill="rgb(251,23,15)"/><text x="37.9182%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="37.7803%" y="549" width="0.1121%" height="15" fill="rgb(252,88,28)"/><text x="38.0303%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="37.7803%" y="533" width="0.1121%" height="15" fill="rgb(212,127,14)"/><text x="38.0303%" y="543.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="38.2287%" y="549" width="0.1121%" height="15" fill="rgb(247,145,37)"/><text x="38.4787%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="38.3408%" y="549" width="0.1121%" height="15" fill="rgb(209,117,53)"/><text x="38.5908%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="38.3408%" y="533" width="0.1121%" height="15" fill="rgb(212,90,42)"/><text x="38.5908%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="38.3408%" y="517" width="0.1121%" height="15" fill="rgb(218,164,37)"/><text x="38.5908%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="38.3408%" y="501" width="0.1121%" height="15" fill="rgb(246,65,34)"/><text x="38.5908%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="38.3408%" y="485" width="0.1121%" height="15" fill="rgb(231,100,33)"/><text x="38.5908%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="38.3408%" y="469" width="0.1121%" height="15" fill="rgb(228,126,14)"/><text x="38.5908%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="38.3408%" y="453" width="0.1121%" height="15" fill="rgb(215,173,21)"/><text x="38.5908%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="38.3408%" y="437" width="0.1121%" height="15" fill="rgb(210,6,40)"/><text x="38.5908%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="38.3408%" y="421" width="0.1121%" height="15" fill="rgb(212,48,18)"/><text x="38.5908%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.78%)</title><rect x="38.1166%" y="565" width="0.7848%" height="15" fill="rgb(230,214,11)"/><text x="38.3666%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.45%)</title><rect x="38.4529%" y="549" width="0.4484%" height="15" fill="rgb(254,105,39)"/><text x="38.7029%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.45%)</title><rect x="38.4529%" y="533" width="0.4484%" height="15" fill="rgb(245,158,5)"/><text x="38.7029%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.45%)</title><rect x="38.4529%" y="517" width="0.4484%" height="15" fill="rgb(249,208,11)"/><text x="38.7029%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="38.7892%" y="501" width="0.1121%" height="15" fill="rgb(210,39,28)"/><text x="39.0392%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 1.12%)</title><rect x="37.8924%" y="597" width="1.1211%" height="15" fill="rgb(211,56,53)"/><text x="38.1424%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (10 samples, 1.12%)</title><rect x="37.8924%" y="581" width="1.1211%" height="15" fill="rgb(226,201,30)"/><text x="38.1424%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.11%)</title><rect x="38.9013%" y="565" width="0.1121%" height="15" fill="rgb(239,101,34)"/><text x="39.1513%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="38.9013%" y="549" width="0.1121%" height="15" fill="rgb(226,209,5)"/><text x="39.1513%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="39.1256%" y="581" width="0.1121%" height="15" fill="rgb(250,105,47)"/><text x="39.3756%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (23 samples, 2.58%)</title><rect x="36.7713%" y="613" width="2.5785%" height="15" fill="rgb(230,72,3)"/><text x="37.0213%" y="623.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.34%)</title><rect x="39.0135%" y="597" width="0.3363%" height="15" fill="rgb(232,218,39)"/><text x="39.2635%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="39.2377%" y="581" width="0.1121%" height="15" fill="rgb(248,166,6)"/><text x="39.4877%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.56%)</title><rect x="39.4619%" y="533" width="0.5605%" height="15" fill="rgb(247,89,20)"/><text x="39.7119%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.56%)</title><rect x="39.4619%" y="517" width="0.5605%" height="15" fill="rgb(248,130,54)"/><text x="39.7119%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.22%)</title><rect x="39.7982%" y="501" width="0.2242%" height="15" fill="rgb(234,196,4)"/><text x="40.0482%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.22%)</title><rect x="39.7982%" y="485" width="0.2242%" height="15" fill="rgb(250,143,31)"/><text x="40.0482%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.78%)</title><rect x="39.3498%" y="565" width="0.7848%" height="15" fill="rgb(211,110,34)"/><text x="39.5998%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.78%)</title><rect x="39.3498%" y="549" width="0.7848%" height="15" fill="rgb(215,124,48)"/><text x="39.5998%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.11%)</title><rect x="40.0224%" y="533" width="0.1121%" height="15" fill="rgb(216,46,13)"/><text x="40.2724%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="40.0224%" y="517" width="0.1121%" height="15" fill="rgb(205,184,25)"/><text x="40.2724%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="40.1345%" y="549" width="0.1121%" height="15" fill="rgb(228,1,10)"/><text x="40.3845%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 1.01%)</title><rect x="39.3498%" y="581" width="1.0090%" height="15" fill="rgb(213,116,27)"/><text x="39.5998%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.22%)</title><rect x="40.1345%" y="565" width="0.2242%" height="15" fill="rgb(241,95,50)"/><text x="40.3845%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="40.2466%" y="549" width="0.1121%" height="15" fill="rgb(238,48,32)"/><text x="40.4966%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="40.2466%" y="533" width="0.1121%" height="15" fill="rgb(235,113,49)"/><text x="40.4966%" y="543.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="40.2466%" y="517" width="0.1121%" height="15" fill="rgb(205,127,43)"/><text x="40.4966%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="40.2466%" y="501" width="0.1121%" height="15" fill="rgb(250,162,2)"/><text x="40.4966%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="40.3587%" y="549" width="0.1121%" height="15" fill="rgb(220,13,41)"/><text x="40.6087%" y="559.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="40.4709%" y="533" width="0.1121%" height="15" fill="rgb(249,221,25)"/><text x="40.7209%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="40.4709%" y="517" width="0.1121%" height="15" fill="rgb(215,208,19)"/><text x="40.7209%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.34%)</title><rect x="40.3587%" y="581" width="0.3363%" height="15" fill="rgb(236,175,2)"/><text x="40.6087%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.34%)</title><rect x="40.3587%" y="565" width="0.3363%" height="15" fill="rgb(241,52,2)"/><text x="40.6087%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.22%)</title><rect x="40.4709%" y="549" width="0.2242%" height="15" fill="rgb(248,140,14)"/><text x="40.7209%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="40.5830%" y="533" width="0.1121%" height="15" fill="rgb(253,22,42)"/><text x="40.8330%" y="543.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="40.6951%" y="565" width="0.1121%" height="15" fill="rgb(234,61,47)"/><text x="40.9451%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="40.9193%" y="549" width="0.1121%" height="15" fill="rgb(208,226,15)"/><text x="41.1693%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.79%)</title><rect x="39.3498%" y="597" width="1.7937%" height="15" fill="rgb(217,221,4)"/><text x="39.5998%" y="607.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.45%)</title><rect x="40.6951%" y="581" width="0.4484%" height="15" fill="rgb(212,174,34)"/><text x="40.9451%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.34%)</title><rect x="40.8072%" y="565" width="0.3363%" height="15" fill="rgb(253,83,4)"/><text x="41.0572%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="41.0314%" y="549" width="0.1121%" height="15" fill="rgb(250,195,49)"/><text x="41.2814%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 1.01%)</title><rect x="41.1435%" y="581" width="1.0090%" height="15" fill="rgb(241,192,25)"/><text x="41.3935%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (9 samples, 1.01%)</title><rect x="41.1435%" y="565" width="1.0090%" height="15" fill="rgb(208,124,10)"/><text x="41.3935%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 1.01%)</title><rect x="41.1435%" y="549" width="1.0090%" height="15" fill="rgb(222,33,0)"/><text x="41.3935%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.67%)</title><rect x="41.4798%" y="533" width="0.6726%" height="15" fill="rgb(234,209,28)"/><text x="41.7298%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (6 samples, 0.67%)</title><rect x="41.4798%" y="517" width="0.6726%" height="15" fill="rgb(224,11,23)"/><text x="41.7298%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6 samples, 0.67%)</title><rect x="41.4798%" y="501" width="0.6726%" height="15" fill="rgb(232,99,1)"/><text x="41.7298%" y="511.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.45%)</title><rect x="41.7040%" y="485" width="0.4484%" height="15" fill="rgb(237,95,45)"/><text x="41.9540%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (10 samples, 1.12%)</title><rect x="41.1435%" y="597" width="1.1211%" height="15" fill="rgb(208,109,11)"/><text x="41.3935%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="42.1525%" y="581" width="0.1121%" height="15" fill="rgb(216,190,48)"/><text x="42.4025%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="42.3767%" y="581" width="0.1121%" height="15" fill="rgb(251,171,36)"/><text x="42.6267%" y="591.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="42.3767%" y="565" width="0.1121%" height="15" fill="rgb(230,62,22)"/><text x="42.6267%" y="575.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="42.3767%" y="549" width="0.1121%" height="15" fill="rgb(225,114,35)"/><text x="42.6267%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="42.3767%" y="533" width="0.1121%" height="15" fill="rgb(215,118,42)"/><text x="42.6267%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (29 samples, 3.25%)</title><rect x="39.3498%" y="613" width="3.2511%" height="15" fill="rgb(243,119,21)"/><text x="39.5998%" y="623.50">&lt;sq..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.34%)</title><rect x="42.2646%" y="597" width="0.3363%" height="15" fill="rgb(252,177,53)"/><text x="42.5146%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="42.4888%" y="581" width="0.1121%" height="15" fill="rgb(237,209,29)"/><text x="42.7388%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="42.4888%" y="565" width="0.1121%" height="15" fill="rgb(212,65,23)"/><text x="42.7388%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="42.6009%" y="565" width="0.1121%" height="15" fill="rgb(230,222,46)"/><text x="42.8509%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="42.7130%" y="565" width="0.1121%" height="15" fill="rgb(215,135,32)"/><text x="42.9630%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.45%)</title><rect x="42.6009%" y="597" width="0.4484%" height="15" fill="rgb(246,101,22)"/><text x="42.8509%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.45%)</title><rect x="42.6009%" y="581" width="0.4484%" height="15" fill="rgb(206,107,13)"/><text x="42.8509%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.22%)</title><rect x="42.8251%" y="565" width="0.2242%" height="15" fill="rgb(250,100,44)"/><text x="43.0751%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.22%)</title><rect x="42.8251%" y="549" width="0.2242%" height="15" fill="rgb(231,147,38)"/><text x="43.0751%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.22%)</title><rect x="42.8251%" y="533" width="0.2242%" height="15" fill="rgb(229,8,40)"/><text x="43.0751%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.22%)</title><rect x="42.8251%" y="517" width="0.2242%" height="15" fill="rgb(221,135,30)"/><text x="43.0751%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.22%)</title><rect x="42.8251%" y="501" width="0.2242%" height="15" fill="rgb(249,193,18)"/><text x="43.0751%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="43.0493%" y="581" width="0.1121%" height="15" fill="rgb(209,133,39)"/><text x="43.2993%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.67%)</title><rect x="42.6009%" y="613" width="0.6726%" height="15" fill="rgb(232,100,14)"/><text x="42.8509%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.22%)</title><rect x="43.0493%" y="597" width="0.2242%" height="15" fill="rgb(224,185,1)"/><text x="43.2993%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="43.1614%" y="581" width="0.1121%" height="15" fill="rgb(223,139,8)"/><text x="43.4114%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="43.1614%" y="565" width="0.1121%" height="15" fill="rgb(232,213,38)"/><text x="43.4114%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="43.1614%" y="549" width="0.1121%" height="15" fill="rgb(207,94,22)"/><text x="43.4114%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="43.1614%" y="533" width="0.1121%" height="15" fill="rgb(219,183,54)"/><text x="43.4114%" y="543.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="43.2735%" y="597" width="0.1121%" height="15" fill="rgb(216,185,54)"/><text x="43.5235%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="43.3857%" y="597" width="0.1121%" height="15" fill="rgb(254,217,39)"/><text x="43.6357%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="43.4978%" y="597" width="0.2242%" height="15" fill="rgb(240,178,23)"/><text x="43.7478%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="43.6099%" y="581" width="0.1121%" height="15" fill="rgb(218,11,47)"/><text x="43.8599%" y="591.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="43.6099%" y="565" width="0.1121%" height="15" fill="rgb(218,51,51)"/><text x="43.8599%" y="575.50"></text></g><g><title>core::fmt::write (67 samples, 7.51%)</title><rect x="36.4350%" y="693" width="7.5112%" height="15" fill="rgb(238,126,27)"/><text x="36.6850%" y="703.50">core::fmt:..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (67 samples, 7.51%)</title><rect x="36.4350%" y="677" width="7.5112%" height="15" fill="rgb(249,202,22)"/><text x="36.6850%" y="687.50">&lt;sql_parse..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (65 samples, 7.29%)</title><rect x="36.6592%" y="661" width="7.2870%" height="15" fill="rgb(254,195,49)"/><text x="36.9092%" y="671.50">&lt;sql_parse..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (64 samples, 7.17%)</title><rect x="36.7713%" y="645" width="7.1749%" height="15" fill="rgb(208,123,14)"/><text x="37.0213%" y="655.50">&lt;sql_parse..</text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (64 samples, 7.17%)</title><rect x="36.7713%" y="629" width="7.1749%" height="15" fill="rgb(224,200,8)"/><text x="37.0213%" y="639.50">&lt;sql_parse..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.67%)</title><rect x="43.2735%" y="613" width="0.6726%" height="15" fill="rgb(217,61,36)"/><text x="43.5235%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.22%)</title><rect x="43.7220%" y="597" width="0.2242%" height="15" fill="rgb(206,35,45)"/><text x="43.9720%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.22%)</title><rect x="43.7220%" y="581" width="0.2242%" height="15" fill="rgb(217,65,33)"/><text x="43.9720%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="43.8341%" y="565" width="0.1121%" height="15" fill="rgb(222,158,48)"/><text x="44.0841%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="44.0583%" y="629" width="0.1121%" height="15" fill="rgb(254,2,54)"/><text x="44.3083%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="44.1704%" y="597" width="0.1121%" height="15" fill="rgb(250,143,38)"/><text x="44.4204%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.45%)</title><rect x="44.0583%" y="645" width="0.4484%" height="15" fill="rgb(248,25,0)"/><text x="44.3083%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.34%)</title><rect x="44.1704%" y="629" width="0.3363%" height="15" fill="rgb(206,152,27)"/><text x="44.4204%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.34%)</title><rect x="44.1704%" y="613" width="0.3363%" height="15" fill="rgb(240,77,30)"/><text x="44.4204%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.22%)</title><rect x="44.2825%" y="597" width="0.2242%" height="15" fill="rgb(231,5,3)"/><text x="44.5325%" y="607.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 1.01%)</title><rect x="43.9462%" y="693" width="1.0090%" height="15" fill="rgb(207,226,32)"/><text x="44.1962%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.90%)</title><rect x="44.0583%" y="677" width="0.8969%" height="15" fill="rgb(222,207,47)"/><text x="44.3083%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.90%)</title><rect x="44.0583%" y="661" width="0.8969%" height="15" fill="rgb(229,115,45)"/><text x="44.3083%" y="671.50"></text></g><g><title>_int_free (4 samples, 0.45%)</title><rect x="44.5067%" y="645" width="0.4484%" height="15" fill="rgb(224,191,6)"/><text x="44.7567%" y="655.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="44.8430%" y="629" width="0.1121%" height="15" fill="rgb(230,227,24)"/><text x="45.0930%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="45.4036%" y="677" width="0.2242%" height="15" fill="rgb(228,80,19)"/><text x="45.6536%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.22%)</title><rect x="45.4036%" y="661" width="0.2242%" height="15" fill="rgb(247,229,0)"/><text x="45.6536%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="46.0762%" y="661" width="0.1121%" height="15" fill="rgb(237,194,15)"/><text x="46.3262%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="46.0762%" y="645" width="0.1121%" height="15" fill="rgb(219,203,20)"/><text x="46.3262%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.11%)</title><rect x="46.1883%" y="661" width="0.1121%" height="15" fill="rgb(234,128,8)"/><text x="46.4383%" y="671.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="46.1883%" y="645" width="0.1121%" height="15" fill="rgb(248,202,8)"/><text x="46.4383%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="46.1883%" y="629" width="0.1121%" height="15" fill="rgb(206,104,37)"/><text x="46.4383%" y="639.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.12%)</title><rect x="45.6278%" y="677" width="1.1211%" height="15" fill="rgb(223,8,27)"/><text x="45.8778%" y="687.50"></text></g><g><title>mysql_common::row::new_row (4 samples, 0.45%)</title><rect x="46.3004%" y="661" width="0.4484%" height="15" fill="rgb(216,217,28)"/><text x="46.5504%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="46.4126%" y="645" width="0.3363%" height="15" fill="rgb(249,199,1)"/><text x="46.6626%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="46.7489%" y="677" width="0.1121%" height="15" fill="rgb(240,85,17)"/><text x="46.9989%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.22%)</title><rect x="46.8610%" y="677" width="0.2242%" height="15" fill="rgb(206,108,45)"/><text x="47.1110%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.22%)</title><rect x="47.0852%" y="677" width="0.2242%" height="15" fill="rgb(245,210,41)"/><text x="47.3352%" y="687.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="47.3094%" y="677" width="0.1121%" height="15" fill="rgb(206,13,37)"/><text x="47.5594%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="47.3094%" y="661" width="0.1121%" height="15" fill="rgb(250,61,18)"/><text x="47.5594%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.34%)</title><rect x="47.4215%" y="677" width="0.3363%" height="15" fill="rgb(235,172,48)"/><text x="47.6715%" y="687.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="47.9821%" y="645" width="0.1121%" height="15" fill="rgb(249,201,17)"/><text x="48.2321%" y="655.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (4 samples, 0.45%)</title><rect x="47.7578%" y="677" width="0.4484%" height="15" fill="rgb(219,208,6)"/><text x="48.0078%" y="687.50"></text></g><g><title>msql_srv::writers::column_definitions (4 samples, 0.45%)</title><rect x="47.7578%" y="661" width="0.4484%" height="15" fill="rgb(248,31,23)"/><text x="48.0078%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="48.0942%" y="645" width="0.1121%" height="15" fill="rgb(245,15,42)"/><text x="48.3442%" y="655.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::end_row (2 samples, 0.22%)</title><rect x="48.2063%" y="677" width="0.2242%" height="15" fill="rgb(222,217,39)"/><text x="48.4563%" y="687.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="48.3184%" y="661" width="0.1121%" height="15" fill="rgb(210,219,27)"/><text x="48.5684%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.11%)</title><rect x="48.4305%" y="677" width="0.1121%" height="15" fill="rgb(252,166,36)"/><text x="48.6805%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="48.4305%" y="661" width="0.1121%" height="15" fill="rgb(245,132,34)"/><text x="48.6805%" y="671.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (2 samples, 0.22%)</title><rect x="48.5426%" y="661" width="0.2242%" height="15" fill="rgb(236,54,3)"/><text x="48.7926%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="48.6547%" y="645" width="0.1121%" height="15" fill="rgb(241,173,43)"/><text x="48.9047%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="48.7668%" y="661" width="0.1121%" height="15" fill="rgb(215,190,9)"/><text x="49.0168%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (4 samples, 0.45%)</title><rect x="48.5426%" y="677" width="0.4484%" height="15" fill="rgb(242,101,16)"/><text x="48.7926%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="48.8789%" y="661" width="0.1121%" height="15" fill="rgb(223,190,21)"/><text x="49.1289%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (213 samples, 23.88%)</title><rect x="25.2242%" y="709" width="23.8789%" height="15" fill="rgb(215,228,25)"/><text x="25.4742%" y="719.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;..</text></g><g><title>decor::helpers::answer_rows (37 samples, 4.15%)</title><rect x="44.9552%" y="693" width="4.1480%" height="15" fill="rgb(225,36,22)"/><text x="45.2052%" y="703.50">decor..</text></g><g><title>mysql_common::row::Row::unwrap (1 samples, 0.11%)</title><rect x="48.9910%" y="677" width="0.1121%" height="15" fill="rgb(251,106,46)"/><text x="49.2410%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.1031%" y="709" width="0.1121%" height="15" fill="rgb(208,90,1)"/><text x="49.3531%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.1031%" y="693" width="0.1121%" height="15" fill="rgb(243,10,4)"/><text x="49.3531%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="49.1031%" y="677" width="0.1121%" height="15" fill="rgb(212,137,27)"/><text x="49.3531%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.1031%" y="661" width="0.1121%" height="15" fill="rgb(231,220,49)"/><text x="49.3531%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.1031%" y="645" width="0.1121%" height="15" fill="rgb(237,96,20)"/><text x="49.3531%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.1031%" y="629" width="0.1121%" height="15" fill="rgb(239,229,30)"/><text x="49.3531%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="49.1031%" y="613" width="0.1121%" height="15" fill="rgb(219,65,33)"/><text x="49.3531%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="49.1031%" y="597" width="0.1121%" height="15" fill="rgb(243,134,7)"/><text x="49.3531%" y="607.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.34%)</title><rect x="49.2152%" y="709" width="0.3363%" height="15" fill="rgb(216,177,54)"/><text x="49.4652%" y="719.50"></text></g><g><title>core::str::validations::run_utf8_validation (3 samples, 0.34%)</title><rect x="49.2152%" y="693" width="0.3363%" height="15" fill="rgb(211,160,20)"/><text x="49.4652%" y="703.50"></text></g><g><title>__pthread_enable_asynccancel (2 samples, 0.22%)</title><rect x="49.7758%" y="597" width="0.2242%" height="15" fill="rgb(239,85,39)"/><text x="50.0258%" y="607.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="50.4484%" y="501" width="0.1121%" height="15" fill="rgb(232,125,22)"/><text x="50.6984%" y="511.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="50.4484%" y="485" width="0.1121%" height="15" fill="rgb(244,57,34)"/><text x="50.6984%" y="495.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="50.5605%" y="469" width="0.1121%" height="15" fill="rgb(214,203,32)"/><text x="50.8105%" y="479.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="50.6726%" y="373" width="0.1121%" height="15" fill="rgb(207,58,43)"/><text x="50.9226%" y="383.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="50.6726%" y="357" width="0.1121%" height="15" fill="rgb(215,193,15)"/><text x="50.9226%" y="367.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.45%)</title><rect x="50.6726%" y="437" width="0.4484%" height="15" fill="rgb(232,15,44)"/><text x="50.9226%" y="447.50"></text></g><g><title>do_softirq (4 samples, 0.45%)</title><rect x="50.6726%" y="421" width="0.4484%" height="15" fill="rgb(212,3,48)"/><text x="50.9226%" y="431.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.45%)</title><rect x="50.6726%" y="405" width="0.4484%" height="15" fill="rgb(218,128,7)"/><text x="50.9226%" y="415.50"></text></g><g><title>__do_softirq (4 samples, 0.45%)</title><rect x="50.6726%" y="389" width="0.4484%" height="15" fill="rgb(226,216,39)"/><text x="50.9226%" y="399.50"></text></g><g><title>net_rx_action (3 samples, 0.34%)</title><rect x="50.7848%" y="373" width="0.3363%" height="15" fill="rgb(243,47,51)"/><text x="51.0348%" y="383.50"></text></g><g><title>process_backlog (3 samples, 0.34%)</title><rect x="50.7848%" y="357" width="0.3363%" height="15" fill="rgb(241,183,40)"/><text x="51.0348%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.34%)</title><rect x="50.7848%" y="341" width="0.3363%" height="15" fill="rgb(231,217,32)"/><text x="51.0348%" y="351.50"></text></g><g><title>ip_rcv (3 samples, 0.34%)</title><rect x="50.7848%" y="325" width="0.3363%" height="15" fill="rgb(229,61,38)"/><text x="51.0348%" y="335.50"></text></g><g><title>ip_local_deliver (3 samples, 0.34%)</title><rect x="50.7848%" y="309" width="0.3363%" height="15" fill="rgb(225,210,5)"/><text x="51.0348%" y="319.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.34%)</title><rect x="50.7848%" y="293" width="0.3363%" height="15" fill="rgb(231,79,45)"/><text x="51.0348%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.34%)</title><rect x="50.7848%" y="277" width="0.3363%" height="15" fill="rgb(224,100,7)"/><text x="51.0348%" y="287.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.34%)</title><rect x="50.7848%" y="261" width="0.3363%" height="15" fill="rgb(241,198,18)"/><text x="51.0348%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.22%)</title><rect x="50.8969%" y="245" width="0.2242%" height="15" fill="rgb(252,97,53)"/><text x="51.1469%" y="255.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.22%)</title><rect x="50.8969%" y="229" width="0.2242%" height="15" fill="rgb(220,88,7)"/><text x="51.1469%" y="239.50"></text></g><g><title>tcp_ack (2 samples, 0.22%)</title><rect x="50.8969%" y="213" width="0.2242%" height="15" fill="rgb(213,176,14)"/><text x="51.1469%" y="223.50"></text></g><g><title>bictcp_acked (1 samples, 0.11%)</title><rect x="51.0090%" y="197" width="0.1121%" height="15" fill="rgb(246,73,7)"/><text x="51.2590%" y="207.50"></text></g><g><title>__tcp_transmit_skb (6 samples, 0.67%)</title><rect x="50.5605%" y="501" width="0.6726%" height="15" fill="rgb(245,64,36)"/><text x="50.8105%" y="511.50"></text></g><g><title>__ip_queue_xmit (6 samples, 0.67%)</title><rect x="50.5605%" y="485" width="0.6726%" height="15" fill="rgb(245,80,10)"/><text x="50.8105%" y="495.50"></text></g><g><title>ip_output (5 samples, 0.56%)</title><rect x="50.6726%" y="469" width="0.5605%" height="15" fill="rgb(232,107,50)"/><text x="50.9226%" y="479.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.56%)</title><rect x="50.6726%" y="453" width="0.5605%" height="15" fill="rgb(253,3,0)"/><text x="50.9226%" y="463.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="51.1211%" y="437" width="0.1121%" height="15" fill="rgb(212,99,53)"/><text x="51.3711%" y="447.50"></text></g><g><title>kfree_skbmem (2 samples, 0.22%)</title><rect x="51.2332%" y="501" width="0.2242%" height="15" fill="rgb(249,111,54)"/><text x="51.4832%" y="511.50"></text></g><g><title>release_sock (2 samples, 0.22%)</title><rect x="51.4574%" y="501" width="0.2242%" height="15" fill="rgb(249,55,30)"/><text x="51.7074%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.22%)</title><rect x="51.4574%" y="485" width="0.2242%" height="15" fill="rgb(237,47,42)"/><text x="51.7074%" y="495.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="51.9058%" y="485" width="0.1121%" height="15" fill="rgb(211,20,18)"/><text x="52.1558%" y="495.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="51.9058%" y="469" width="0.1121%" height="15" fill="rgb(231,203,46)"/><text x="52.1558%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.11%)</title><rect x="52.1300%" y="421" width="0.1121%" height="15" fill="rgb(237,142,3)"/><text x="52.3800%" y="431.50"></text></g><g><title>__calc_delta (1 samples, 0.11%)</title><rect x="52.3543%" y="373" width="0.1121%" height="15" fill="rgb(241,107,1)"/><text x="52.6043%" y="383.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="52.4664%" y="373" width="0.1121%" height="15" fill="rgb(229,83,13)"/><text x="52.7164%" y="383.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.56%)</title><rect x="52.2422%" y="421" width="0.5605%" height="15" fill="rgb(241,91,40)"/><text x="52.4922%" y="431.50"></text></g><g><title>dequeue_entity (5 samples, 0.56%)</title><rect x="52.2422%" y="405" width="0.5605%" height="15" fill="rgb(225,3,45)"/><text x="52.4922%" y="415.50"></text></g><g><title>update_curr (4 samples, 0.45%)</title><rect x="52.3543%" y="389" width="0.4484%" height="15" fill="rgb(244,223,14)"/><text x="52.6043%" y="399.50"></text></g><g><title>update_min_vruntime (2 samples, 0.22%)</title><rect x="52.5785%" y="373" width="0.2242%" height="15" fill="rgb(224,124,37)"/><text x="52.8285%" y="383.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.22%)</title><rect x="52.8027%" y="421" width="0.2242%" height="15" fill="rgb(251,171,30)"/><text x="53.0527%" y="431.50"></text></g><g><title>newidle_balance (2 samples, 0.22%)</title><rect x="52.8027%" y="405" width="0.2242%" height="15" fill="rgb(236,46,54)"/><text x="53.0527%" y="415.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="52.9148%" y="389" width="0.1121%" height="15" fill="rgb(245,213,5)"/><text x="53.1648%" y="399.50"></text></g><g><title>psi_task_change (5 samples, 0.56%)</title><rect x="53.0269%" y="421" width="0.5605%" height="15" fill="rgb(230,144,27)"/><text x="53.2769%" y="431.50"></text></g><g><title>psi_group_change (4 samples, 0.45%)</title><rect x="53.1390%" y="405" width="0.4484%" height="15" fill="rgb(220,86,6)"/><text x="53.3890%" y="415.50"></text></g><g><title>record_times (3 samples, 0.34%)</title><rect x="53.2511%" y="389" width="0.3363%" height="15" fill="rgb(240,20,13)"/><text x="53.5011%" y="399.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.22%)</title><rect x="53.3632%" y="373" width="0.2242%" height="15" fill="rgb(217,89,34)"/><text x="53.6132%" y="383.50"></text></g><g><title>sched_clock (2 samples, 0.22%)</title><rect x="53.3632%" y="357" width="0.2242%" height="15" fill="rgb(229,13,5)"/><text x="53.6132%" y="367.50"></text></g><g><title>native_sched_clock (2 samples, 0.22%)</title><rect x="53.3632%" y="341" width="0.2242%" height="15" fill="rgb(244,67,35)"/><text x="53.6132%" y="351.50"></text></g><g><title>psi_task_switch (1 samples, 0.11%)</title><rect x="53.5874%" y="421" width="0.1121%" height="15" fill="rgb(221,40,2)"/><text x="53.8374%" y="431.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.22%)</title><rect x="53.6996%" y="421" width="0.2242%" height="15" fill="rgb(237,157,21)"/><text x="53.9496%" y="431.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="53.8117%" y="405" width="0.1121%" height="15" fill="rgb(222,94,11)"/><text x="54.0617%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.22%)</title><rect x="53.9238%" y="421" width="0.2242%" height="15" fill="rgb(249,113,6)"/><text x="54.1738%" y="431.50"></text></g><g><title>sk_wait_data (25 samples, 2.80%)</title><rect x="51.6816%" y="501" width="2.8027%" height="15" fill="rgb(238,137,36)"/><text x="51.9316%" y="511.50">sk..</text></g><g><title>wait_woken (22 samples, 2.47%)</title><rect x="52.0179%" y="485" width="2.4664%" height="15" fill="rgb(210,102,26)"/><text x="52.2679%" y="495.50">wa..</text></g><g><title>schedule_timeout (22 samples, 2.47%)</title><rect x="52.0179%" y="469" width="2.4664%" height="15" fill="rgb(218,30,30)"/><text x="52.2679%" y="479.50">sc..</text></g><g><title>schedule (22 samples, 2.47%)</title><rect x="52.0179%" y="453" width="2.4664%" height="15" fill="rgb(214,67,26)"/><text x="52.2679%" y="463.50">sc..</text></g><g><title>__schedule (22 samples, 2.47%)</title><rect x="52.0179%" y="437" width="2.4664%" height="15" fill="rgb(251,9,53)"/><text x="52.2679%" y="447.50">__..</text></g><g><title>update_rq_clock (3 samples, 0.34%)</title><rect x="54.1480%" y="421" width="0.3363%" height="15" fill="rgb(228,204,25)"/><text x="54.3980%" y="431.50"></text></g><g><title>update_irq_load_avg (2 samples, 0.22%)</title><rect x="54.2601%" y="405" width="0.2242%" height="15" fill="rgb(207,153,8)"/><text x="54.5101%" y="415.50"></text></g><g><title>_copy_to_iter (2 samples, 0.22%)</title><rect x="54.7085%" y="469" width="0.2242%" height="15" fill="rgb(242,9,16)"/><text x="54.9585%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (6 samples, 0.67%)</title><rect x="54.4843%" y="501" width="0.6726%" height="15" fill="rgb(217,211,10)"/><text x="54.7343%" y="511.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.56%)</title><rect x="54.5964%" y="485" width="0.5605%" height="15" fill="rgb(219,228,52)"/><text x="54.8464%" y="495.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.22%)</title><rect x="54.9327%" y="469" width="0.2242%" height="15" fill="rgb(231,92,29)"/><text x="55.1827%" y="479.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="55.0448%" y="453" width="0.1121%" height="15" fill="rgb(232,8,23)"/><text x="55.2948%" y="463.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="55.1570%" y="501" width="0.1121%" height="15" fill="rgb(216,211,34)"/><text x="55.4070%" y="511.50"></text></g><g><title>inet_recvmsg (49 samples, 5.49%)</title><rect x="50.0000%" y="533" width="5.4933%" height="15" fill="rgb(236,151,0)"/><text x="50.2500%" y="543.50">inet_re..</text></g><g><title>tcp_recvmsg (49 samples, 5.49%)</title><rect x="50.0000%" y="517" width="5.4933%" height="15" fill="rgb(209,168,3)"/><text x="50.2500%" y="527.50">tcp_rec..</text></g><g><title>tcp_recv_timestamp (2 samples, 0.22%)</title><rect x="55.2691%" y="501" width="0.2242%" height="15" fill="rgb(208,129,28)"/><text x="55.5191%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (50 samples, 5.61%)</title><rect x="50.0000%" y="565" width="5.6054%" height="15" fill="rgb(229,78,22)"/><text x="50.2500%" y="575.50">__x64_s..</text></g><g><title>__sys_recvfrom (50 samples, 5.61%)</title><rect x="50.0000%" y="549" width="5.6054%" height="15" fill="rgb(228,187,13)"/><text x="50.2500%" y="559.50">__sys_r..</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="55.4933%" y="533" width="0.1121%" height="15" fill="rgb(240,119,24)"/><text x="55.7433%" y="543.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="55.4933%" y="517" width="0.1121%" height="15" fill="rgb(209,194,42)"/><text x="55.7433%" y="527.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="55.4933%" y="501" width="0.1121%" height="15" fill="rgb(247,200,46)"/><text x="55.7433%" y="511.50"></text></g><g><title>do_syscall_64 (52 samples, 5.83%)</title><rect x="50.0000%" y="581" width="5.8296%" height="15" fill="rgb(218,76,16)"/><text x="50.2500%" y="591.50">do_sysc..</text></g><g><title>syscall_trace_enter (2 samples, 0.22%)</title><rect x="55.6054%" y="565" width="0.2242%" height="15" fill="rgb(225,21,48)"/><text x="55.8554%" y="575.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="55.7175%" y="549" width="0.1121%" height="15" fill="rgb(239,223,50)"/><text x="55.9675%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (55 samples, 6.17%)</title><rect x="50.0000%" y="597" width="6.1659%" height="15" fill="rgb(244,45,21)"/><text x="50.2500%" y="607.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.34%)</title><rect x="55.8296%" y="581" width="0.3363%" height="15" fill="rgb(232,33,43)"/><text x="56.0796%" y="591.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (60 samples, 6.73%)</title><rect x="49.7758%" y="677" width="6.7265%" height="15" fill="rgb(209,8,3)"/><text x="50.0258%" y="687.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (60 samples, 6.73%)</title><rect x="49.7758%" y="661" width="6.7265%" height="15" fill="rgb(214,25,53)"/><text x="50.0258%" y="671.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (60 samples, 6.73%)</title><rect x="49.7758%" y="645" width="6.7265%" height="15" fill="rgb(254,186,54)"/><text x="50.0258%" y="655.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (60 samples, 6.73%)</title><rect x="49.7758%" y="629" width="6.7265%" height="15" fill="rgb(208,174,49)"/><text x="50.0258%" y="639.50">std::sys:..</text></g><g><title>__libc_recv (60 samples, 6.73%)</title><rect x="49.7758%" y="613" width="6.7265%" height="15" fill="rgb(233,191,51)"/><text x="50.0258%" y="623.50">__libc_re..</text></g><g><title>syscall_return_via_sysret (3 samples, 0.34%)</title><rect x="56.1659%" y="597" width="0.3363%" height="15" fill="rgb(222,134,10)"/><text x="56.4159%" y="607.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (64 samples, 7.17%)</title><rect x="49.6637%" y="693" width="7.1749%" height="15" fill="rgb(230,226,20)"/><text x="49.9137%" y="703.50">&lt;std::io::..</text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.34%)</title><rect x="56.5022%" y="677" width="0.3363%" height="15" fill="rgb(251,111,25)"/><text x="56.7522%" y="687.50"></text></g><g><title>__memset_avx2_erms (3 samples, 0.34%)</title><rect x="56.8386%" y="693" width="0.3363%" height="15" fill="rgb(224,40,46)"/><text x="57.0886%" y="703.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (70 samples, 7.85%)</title><rect x="49.5516%" y="709" width="7.8475%" height="15" fill="rgb(236,108,47)"/><text x="49.8016%" y="719.50">msql_srv::p..</text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.22%)</title><rect x="57.1749%" y="693" width="0.2242%" height="15" fill="rgb(234,93,0)"/><text x="57.4249%" y="703.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="57.3991%" y="549" width="0.1121%" height="15" fill="rgb(224,213,32)"/><text x="57.6491%" y="559.50"></text></g><g><title>release_sock (2 samples, 0.22%)</title><rect x="57.5112%" y="549" width="0.2242%" height="15" fill="rgb(251,11,48)"/><text x="57.7612%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="57.6233%" y="533" width="0.1121%" height="15" fill="rgb(236,173,5)"/><text x="57.8733%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="57.6233%" y="517" width="0.1121%" height="15" fill="rgb(230,95,12)"/><text x="57.8733%" y="527.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="57.6233%" y="501" width="0.1121%" height="15" fill="rgb(232,209,1)"/><text x="57.8733%" y="511.50"></text></g><g><title>__ip_local_out (3 samples, 0.34%)</title><rect x="58.6323%" y="469" width="0.3363%" height="15" fill="rgb(232,6,1)"/><text x="58.8823%" y="479.50"></text></g><g><title>ip_send_check (1 samples, 0.11%)</title><rect x="58.8565%" y="453" width="0.1121%" height="15" fill="rgb(210,224,50)"/><text x="59.1065%" y="463.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="58.9686%" y="469" width="0.1121%" height="15" fill="rgb(228,127,35)"/><text x="59.2186%" y="479.50"></text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="59.1928%" y="453" width="0.1121%" height="15" fill="rgb(245,102,45)"/><text x="59.4428%" y="463.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="59.5291%" y="405" width="0.1121%" height="15" fill="rgb(214,1,49)"/><text x="59.7791%" y="415.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="59.6413%" y="357" width="0.1121%" height="15" fill="rgb(226,163,40)"/><text x="59.8913%" y="367.50"></text></g><g><title>netif_rx (2 samples, 0.22%)</title><rect x="59.6413%" y="389" width="0.2242%" height="15" fill="rgb(239,212,28)"/><text x="59.8913%" y="399.50"></text></g><g><title>netif_rx_internal (2 samples, 0.22%)</title><rect x="59.6413%" y="373" width="0.2242%" height="15" fill="rgb(220,20,13)"/><text x="59.8913%" y="383.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="59.7534%" y="357" width="0.1121%" height="15" fill="rgb(210,164,35)"/><text x="60.0034%" y="367.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.56%)</title><rect x="59.4170%" y="421" width="0.5605%" height="15" fill="rgb(248,109,41)"/><text x="59.6670%" y="431.50"></text></g><g><title>loopback_xmit (3 samples, 0.34%)</title><rect x="59.6413%" y="405" width="0.3363%" height="15" fill="rgb(238,23,50)"/><text x="59.8913%" y="415.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.11%)</title><rect x="59.8655%" y="389" width="0.1121%" height="15" fill="rgb(211,48,49)"/><text x="60.1155%" y="399.50"></text></g><g><title>netif_skb_features (1 samples, 0.11%)</title><rect x="59.9776%" y="405" width="0.1121%" height="15" fill="rgb(223,36,21)"/><text x="60.2276%" y="415.50"></text></g><g><title>skb_network_protocol (1 samples, 0.11%)</title><rect x="59.9776%" y="389" width="0.1121%" height="15" fill="rgb(207,123,46)"/><text x="60.2276%" y="399.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.90%)</title><rect x="59.3049%" y="437" width="0.8969%" height="15" fill="rgb(240,218,32)"/><text x="59.5549%" y="447.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.22%)</title><rect x="59.9776%" y="421" width="0.2242%" height="15" fill="rgb(252,5,43)"/><text x="60.2276%" y="431.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.11%)</title><rect x="60.0897%" y="405" width="0.1121%" height="15" fill="rgb(252,84,19)"/><text x="60.3397%" y="415.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="60.4260%" y="373" width="0.1121%" height="15" fill="rgb(243,152,39)"/><text x="60.6760%" y="383.50"></text></g><g><title>irqtime_account_irq (2 samples, 0.22%)</title><rect x="60.5381%" y="373" width="0.2242%" height="15" fill="rgb(234,160,15)"/><text x="60.7881%" y="383.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.22%)</title><rect x="60.8744%" y="325" width="0.2242%" height="15" fill="rgb(237,34,20)"/><text x="61.1244%" y="335.50"></text></g><g><title>raw_local_deliver (1 samples, 0.11%)</title><rect x="61.4350%" y="261" width="0.1121%" height="15" fill="rgb(229,97,13)"/><text x="61.6850%" y="271.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.34%)</title><rect x="61.6592%" y="245" width="0.3363%" height="15" fill="rgb(234,71,50)"/><text x="61.9092%" y="255.50"></text></g><g><title>sock_put (1 samples, 0.11%)</title><rect x="61.9955%" y="245" width="0.1121%" height="15" fill="rgb(253,155,4)"/><text x="62.2455%" y="255.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="62.1076%" y="213" width="0.1121%" height="15" fill="rgb(222,185,37)"/><text x="62.3576%" y="223.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="62.1076%" y="197" width="0.1121%" height="15" fill="rgb(251,177,13)"/><text x="62.3576%" y="207.50"></text></g><g><title>lock_timer_base.constprop.0 (1 samples, 0.11%)</title><rect x="62.1076%" y="181" width="0.1121%" height="15" fill="rgb(250,179,40)"/><text x="62.3576%" y="191.50"></text></g><g><title>psi_task_change (4 samples, 0.45%)</title><rect x="62.3318%" y="133" width="0.4484%" height="15" fill="rgb(242,44,2)"/><text x="62.5818%" y="143.50"></text></g><g><title>psi_group_change (4 samples, 0.45%)</title><rect x="62.3318%" y="117" width="0.4484%" height="15" fill="rgb(216,177,13)"/><text x="62.5818%" y="127.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="62.6682%" y="101" width="0.1121%" height="15" fill="rgb(216,106,43)"/><text x="62.9182%" y="111.50"></text></g><g><title>enqueue_task (6 samples, 0.67%)</title><rect x="62.3318%" y="149" width="0.6726%" height="15" fill="rgb(216,183,2)"/><text x="62.5818%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.22%)</title><rect x="62.7803%" y="133" width="0.2242%" height="15" fill="rgb(249,75,3)"/><text x="63.0303%" y="143.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.56%)</title><rect x="63.0045%" y="149" width="0.5605%" height="15" fill="rgb(219,67,39)"/><text x="63.2545%" y="159.50"></text></g><g><title>enqueue_entity (5 samples, 0.56%)</title><rect x="63.0045%" y="133" width="0.5605%" height="15" fill="rgb(253,228,2)"/><text x="63.2545%" y="143.50"></text></g><g><title>update_load_avg (4 samples, 0.45%)</title><rect x="63.1166%" y="117" width="0.4484%" height="15" fill="rgb(235,138,27)"/><text x="63.3666%" y="127.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="63.4529%" y="101" width="0.1121%" height="15" fill="rgb(236,97,51)"/><text x="63.7029%" y="111.50"></text></g><g><title>find_first_bit (1 samples, 0.11%)</title><rect x="63.5650%" y="149" width="0.1121%" height="15" fill="rgb(240,80,30)"/><text x="63.8150%" y="159.50"></text></g><g><title>sock_def_readable (14 samples, 1.57%)</title><rect x="62.2197%" y="213" width="1.5695%" height="15" fill="rgb(230,178,19)"/><text x="62.4697%" y="223.50"></text></g><g><title>__wake_up_common_lock (13 samples, 1.46%)</title><rect x="62.3318%" y="197" width="1.4574%" height="15" fill="rgb(210,190,27)"/><text x="62.5818%" y="207.50"></text></g><g><title>__wake_up_common (13 samples, 1.46%)</title><rect x="62.3318%" y="181" width="1.4574%" height="15" fill="rgb(222,107,31)"/><text x="62.5818%" y="191.50"></text></g><g><title>try_to_wake_up (13 samples, 1.46%)</title><rect x="62.3318%" y="165" width="1.4574%" height="15" fill="rgb(216,127,34)"/><text x="62.5818%" y="175.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="63.6771%" y="149" width="0.1121%" height="15" fill="rgb(234,116,52)"/><text x="63.9271%" y="159.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="63.6771%" y="133" width="0.1121%" height="15" fill="rgb(222,124,15)"/><text x="63.9271%" y="143.50"></text></g><g><title>resched_curr (1 samples, 0.11%)</title><rect x="63.6771%" y="117" width="0.1121%" height="15" fill="rgb(231,179,28)"/><text x="63.9271%" y="127.50"></text></g><g><title>__slab_free (2 samples, 0.22%)</title><rect x="64.2377%" y="165" width="0.2242%" height="15" fill="rgb(226,93,45)"/><text x="64.4877%" y="175.50"></text></g><g><title>kfree (4 samples, 0.45%)</title><rect x="64.1256%" y="181" width="0.4484%" height="15" fill="rgb(215,8,51)"/><text x="64.3756%" y="191.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.11%)</title><rect x="64.4619%" y="165" width="0.1121%" height="15" fill="rgb(223,106,5)"/><text x="64.7119%" y="175.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="64.5740%" y="181" width="0.1121%" height="15" fill="rgb(250,191,5)"/><text x="64.8240%" y="191.50"></text></g><g><title>__kfree_skb (6 samples, 0.67%)</title><rect x="64.1256%" y="197" width="0.6726%" height="15" fill="rgb(242,132,44)"/><text x="64.3756%" y="207.50"></text></g><g><title>skb_release_head_state (1 samples, 0.11%)</title><rect x="64.6861%" y="181" width="0.1121%" height="15" fill="rgb(251,152,29)"/><text x="64.9361%" y="191.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.11%)</title><rect x="64.7982%" y="197" width="0.1121%" height="15" fill="rgb(218,179,5)"/><text x="65.0482%" y="207.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.11%)</title><rect x="64.9103%" y="197" width="0.1121%" height="15" fill="rgb(227,67,19)"/><text x="65.1603%" y="207.50"></text></g><g><title>tcp_ack (12 samples, 1.35%)</title><rect x="63.7892%" y="213" width="1.3453%" height="15" fill="rgb(233,119,31)"/><text x="64.0392%" y="223.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="65.0224%" y="197" width="0.1121%" height="15" fill="rgb(241,120,22)"/><text x="65.2724%" y="207.50"></text></g><g><title>tcp_grow_window (3 samples, 0.34%)</title><rect x="65.1345%" y="213" width="0.3363%" height="15" fill="rgb(224,102,30)"/><text x="65.3845%" y="223.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.22%)</title><rect x="65.4709%" y="213" width="0.2242%" height="15" fill="rgb(210,164,37)"/><text x="65.7209%" y="223.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="65.5830%" y="197" width="0.1121%" height="15" fill="rgb(226,191,16)"/><text x="65.8330%" y="207.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.22%)</title><rect x="65.6951%" y="213" width="0.2242%" height="15" fill="rgb(214,40,45)"/><text x="65.9451%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (35 samples, 3.92%)</title><rect x="62.1076%" y="245" width="3.9238%" height="15" fill="rgb(244,29,26)"/><text x="62.3576%" y="255.50">tcp_..</text></g><g><title>tcp_rcv_established (35 samples, 3.92%)</title><rect x="62.1076%" y="229" width="3.9238%" height="15" fill="rgb(216,16,5)"/><text x="62.3576%" y="239.50">tcp_..</text></g><g><title>tcp_send_delayed_ack (1 samples, 0.11%)</title><rect x="65.9193%" y="213" width="0.1121%" height="15" fill="rgb(249,76,35)"/><text x="66.1693%" y="223.50"></text></g><g><title>ip_local_deliver (45 samples, 5.04%)</title><rect x="61.0987%" y="309" width="5.0448%" height="15" fill="rgb(207,11,44)"/><text x="61.3487%" y="319.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (44 samples, 4.93%)</title><rect x="61.2108%" y="293" width="4.9327%" height="15" fill="rgb(228,190,49)"/><text x="61.4608%" y="303.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (43 samples, 4.82%)</title><rect x="61.3229%" y="277" width="4.8206%" height="15" fill="rgb(214,173,12)"/><text x="61.5729%" y="287.50">ip_pro..</text></g><g><title>tcp_v4_rcv (41 samples, 4.60%)</title><rect x="61.5471%" y="261" width="4.5964%" height="15" fill="rgb(218,26,35)"/><text x="61.7971%" y="271.50">tcp_v..</text></g><g><title>tcp_v4_inbound_md5_hash (1 samples, 0.11%)</title><rect x="66.0314%" y="245" width="0.1121%" height="15" fill="rgb(220,200,19)"/><text x="66.2814%" y="255.50"></text></g><g><title>ip_rcv_core (4 samples, 0.45%)</title><rect x="66.1435%" y="309" width="0.4484%" height="15" fill="rgb(239,95,49)"/><text x="66.3935%" y="319.50"></text></g><g><title>ip_finish_output2 (66 samples, 7.40%)</title><rect x="59.3049%" y="453" width="7.3991%" height="15" fill="rgb(235,85,53)"/><text x="59.5549%" y="463.50">ip_finish_..</text></g><g><title>__local_bh_enable_ip (58 samples, 6.50%)</title><rect x="60.2018%" y="437" width="6.5022%" height="15" fill="rgb(233,133,31)"/><text x="60.4518%" y="447.50">__local_b..</text></g><g><title>do_softirq (57 samples, 6.39%)</title><rect x="60.3139%" y="421" width="6.3901%" height="15" fill="rgb(218,25,20)"/><text x="60.5639%" y="431.50">do_softi..</text></g><g><title>do_softirq_own_stack (56 samples, 6.28%)</title><rect x="60.4260%" y="405" width="6.2780%" height="15" fill="rgb(252,210,38)"/><text x="60.6760%" y="415.50">do_softi..</text></g><g><title>__do_softirq (56 samples, 6.28%)</title><rect x="60.4260%" y="389" width="6.2780%" height="15" fill="rgb(242,134,21)"/><text x="60.6760%" y="399.50">__do_sof..</text></g><g><title>net_rx_action (53 samples, 5.94%)</title><rect x="60.7623%" y="373" width="5.9417%" height="15" fill="rgb(213,28,48)"/><text x="61.0123%" y="383.50">net_rx_a..</text></g><g><title>process_backlog (53 samples, 5.94%)</title><rect x="60.7623%" y="357" width="5.9417%" height="15" fill="rgb(250,196,2)"/><text x="61.0123%" y="367.50">process_..</text></g><g><title>__netif_receive_skb_one_core (53 samples, 5.94%)</title><rect x="60.7623%" y="341" width="5.9417%" height="15" fill="rgb(227,5,17)"/><text x="61.0123%" y="351.50">__netif_..</text></g><g><title>ip_rcv (50 samples, 5.61%)</title><rect x="61.0987%" y="325" width="5.6054%" height="15" fill="rgb(221,226,24)"/><text x="61.3487%" y="335.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.11%)</title><rect x="66.5919%" y="309" width="0.1121%" height="15" fill="rgb(211,5,48)"/><text x="66.8419%" y="319.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.11%)</title><rect x="66.5919%" y="293" width="0.1121%" height="15" fill="rgb(219,150,6)"/><text x="66.8419%" y="303.50"></text></g><g><title>__ip_queue_xmit (75 samples, 8.41%)</title><rect x="58.6323%" y="485" width="8.4081%" height="15" fill="rgb(251,46,16)"/><text x="58.8823%" y="495.50">__ip_queue_x..</text></g><g><title>ip_output (71 samples, 7.96%)</title><rect x="59.0807%" y="469" width="7.9596%" height="15" fill="rgb(220,204,40)"/><text x="59.3307%" y="479.50">ip_output</text></g><g><title>ip_finish_output (3 samples, 0.34%)</title><rect x="66.7040%" y="453" width="0.3363%" height="15" fill="rgb(211,85,2)"/><text x="66.9540%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (3 samples, 0.34%)</title><rect x="66.7040%" y="437" width="0.3363%" height="15" fill="rgb(229,17,7)"/><text x="66.9540%" y="447.50"></text></g><g><title>__tcp_transmit_skb (78 samples, 8.74%)</title><rect x="58.4081%" y="501" width="8.7444%" height="15" fill="rgb(239,72,28)"/><text x="58.6581%" y="511.50">__tcp_transm..</text></g><g><title>ip_queue_xmit (1 samples, 0.11%)</title><rect x="67.0404%" y="485" width="0.1121%" height="15" fill="rgb(230,47,54)"/><text x="67.2904%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (84 samples, 9.42%)</title><rect x="57.9596%" y="533" width="9.4170%" height="15" fill="rgb(214,50,8)"/><text x="58.2096%" y="543.50">__tcp_push_pe..</text></g><g><title>tcp_write_xmit (83 samples, 9.30%)</title><rect x="58.0717%" y="517" width="9.3049%" height="15" fill="rgb(216,198,43)"/><text x="58.3217%" y="527.50">tcp_write_xmit</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.22%)</title><rect x="67.1525%" y="501" width="0.2242%" height="15" fill="rgb(234,20,35)"/><text x="67.4025%" y="511.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="67.2646%" y="485" width="0.1121%" height="15" fill="rgb(254,45,19)"/><text x="67.5146%" y="495.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="67.2646%" y="469" width="0.1121%" height="15" fill="rgb(219,14,44)"/><text x="67.5146%" y="479.50"></text></g><g><title>__ksize (1 samples, 0.11%)</title><rect x="67.4888%" y="501" width="0.1121%" height="15" fill="rgb(217,220,26)"/><text x="67.7388%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.56%)</title><rect x="67.3767%" y="533" width="0.5605%" height="15" fill="rgb(213,158,28)"/><text x="67.6267%" y="543.50"></text></g><g><title>__alloc_skb (5 samples, 0.56%)</title><rect x="67.3767%" y="517" width="0.5605%" height="15" fill="rgb(252,51,52)"/><text x="67.6267%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.34%)</title><rect x="67.6009%" y="501" width="0.3363%" height="15" fill="rgb(246,89,16)"/><text x="67.8509%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="67.9372%" y="533" width="0.1121%" height="15" fill="rgb(216,158,49)"/><text x="68.1872%" y="543.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="67.9372%" y="517" width="0.1121%" height="15" fill="rgb(236,107,19)"/><text x="68.1872%" y="527.50"></text></g><g><title>__x64_sys_sendto (96 samples, 10.76%)</title><rect x="57.3991%" y="613" width="10.7623%" height="15" fill="rgb(228,185,30)"/><text x="57.6491%" y="623.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (96 samples, 10.76%)</title><rect x="57.3991%" y="597" width="10.7623%" height="15" fill="rgb(246,134,8)"/><text x="57.6491%" y="607.50">__sys_sendto</text></g><g><title>sock_sendmsg (96 samples, 10.76%)</title><rect x="57.3991%" y="581" width="10.7623%" height="15" fill="rgb(214,143,50)"/><text x="57.6491%" y="591.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (96 samples, 10.76%)</title><rect x="57.3991%" y="565" width="10.7623%" height="15" fill="rgb(228,75,8)"/><text x="57.6491%" y="575.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (93 samples, 10.43%)</title><rect x="57.7354%" y="549" width="10.4260%" height="15" fill="rgb(207,175,4)"/><text x="57.9854%" y="559.50">tcp_sendmsg_loc..</text></g><g><title>skb_entail (1 samples, 0.11%)</title><rect x="68.0493%" y="533" width="0.1121%" height="15" fill="rgb(205,108,24)"/><text x="68.2993%" y="543.50"></text></g><g><title>do_syscall_64 (97 samples, 10.87%)</title><rect x="57.3991%" y="629" width="10.8744%" height="15" fill="rgb(244,120,49)"/><text x="57.6491%" y="639.50">do_syscall_64</text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="68.1614%" y="613" width="0.1121%" height="15" fill="rgb(223,47,38)"/><text x="68.4114%" y="623.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="68.1614%" y="597" width="0.1121%" height="15" fill="rgb(229,179,11)"/><text x="68.4114%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (99 samples, 11.10%)</title><rect x="57.3991%" y="693" width="11.0987%" height="15" fill="rgb(231,122,1)"/><text x="57.6491%" y="703.50">&lt;std::net::tcp::..</text></g><g><title>std::sys_common::net::TcpStream::write (99 samples, 11.10%)</title><rect x="57.3991%" y="677" width="11.0987%" height="15" fill="rgb(245,119,9)"/><text x="57.6491%" y="687.50">std::sys_common:..</text></g><g><title>__libc_send (99 samples, 11.10%)</title><rect x="57.3991%" y="661" width="11.0987%" height="15" fill="rgb(241,163,25)"/><text x="57.6491%" y="671.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (99 samples, 11.10%)</title><rect x="57.3991%" y="645" width="11.0987%" height="15" fill="rgb(217,214,3)"/><text x="57.6491%" y="655.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.22%)</title><rect x="68.2735%" y="629" width="0.2242%" height="15" fill="rgb(240,86,28)"/><text x="68.5235%" y="639.50"></text></g><g><title>decor::Shim::run_on_tcp (394 samples, 44.17%)</title><rect x="24.5516%" y="741" width="44.1704%" height="15" fill="rgb(215,47,9)"/><text x="24.8016%" y="751.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (394 samples, 44.17%)</title><rect x="24.5516%" y="725" width="44.1704%" height="15" fill="rgb(252,25,45)"/><text x="24.8016%" y="735.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (101 samples, 11.32%)</title><rect x="57.3991%" y="709" width="11.3229%" height="15" fill="rgb(251,164,9)"/><text x="57.6491%" y="719.50">std::io::buffered..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard::done (2 samples, 0.22%)</title><rect x="68.4978%" y="693" width="0.2242%" height="15" fill="rgb(233,194,0)"/><text x="68.7478%" y="703.50"></text></g><g><title>__GI___clone (395 samples, 44.28%)</title><rect x="24.5516%" y="853" width="44.2825%" height="15" fill="rgb(249,111,24)"/><text x="24.8016%" y="863.50">__GI___clone</text></g><g><title>start_thread (395 samples, 44.28%)</title><rect x="24.5516%" y="837" width="44.2825%" height="15" fill="rgb(250,223,3)"/><text x="24.8016%" y="847.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (395 samples, 44.28%)</title><rect x="24.5516%" y="821" width="44.2825%" height="15" fill="rgb(236,178,37)"/><text x="24.8016%" y="831.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (395 samples, 44.28%)</title><rect x="24.5516%" y="805" width="44.2825%" height="15" fill="rgb(241,158,50)"/><text x="24.8016%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (395 samples, 44.28%)</title><rect x="24.5516%" y="789" width="44.2825%" height="15" fill="rgb(213,121,41)"/><text x="24.8016%" y="799.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (395 samples, 44.28%)</title><rect x="24.5516%" y="773" width="44.2825%" height="15" fill="rgb(240,92,3)"/><text x="24.8016%" y="783.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (395 samples, 44.28%)</title><rect x="24.5516%" y="757" width="44.2825%" height="15" fill="rgb(205,123,3)"/><text x="24.8016%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.11%)</title><rect x="68.7220%" y="741" width="0.1121%" height="15" fill="rgb(205,97,47)"/><text x="68.9720%" y="751.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.11%)</title><rect x="68.7220%" y="725" width="0.1121%" height="15" fill="rgb(247,152,14)"/><text x="68.9720%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="68.7220%" y="709" width="0.1121%" height="15" fill="rgb(248,195,53)"/><text x="68.9720%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="68.8341%" y="853" width="0.1121%" height="15" fill="rgb(226,201,16)"/><text x="69.0841%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.45%)</title><rect x="68.9462%" y="597" width="0.4484%" height="15" fill="rgb(205,98,0)"/><text x="69.1962%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.45%)</title><rect x="68.9462%" y="581" width="0.4484%" height="15" fill="rgb(214,191,48)"/><text x="69.1962%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="69.2825%" y="565" width="0.1121%" height="15" fill="rgb(237,112,39)"/><text x="69.5325%" y="575.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="69.2825%" y="549" width="0.1121%" height="15" fill="rgb(247,203,27)"/><text x="69.5325%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="69.2825%" y="533" width="0.1121%" height="15" fill="rgb(235,124,28)"/><text x="69.5325%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="69.2825%" y="517" width="0.1121%" height="15" fill="rgb(208,207,46)"/><text x="69.5325%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="69.3946%" y="581" width="0.1121%" height="15" fill="rgb(234,176,4)"/><text x="69.6446%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 26.01%)</title><rect x="69.8430%" y="373" width="26.0090%" height="15" fill="rgb(230,133,28)"/><text x="70.0930%" y="383.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (230 samples, 25.78%)</title><rect x="70.0673%" y="357" width="25.7848%" height="15" fill="rgb(211,137,40)"/><text x="70.3173%" y="367.50">native_write_msr</text></g><g><title>hwloc::Topology::new (242 samples, 27.13%)</title><rect x="68.9462%" y="677" width="27.1300%" height="15" fill="rgb(254,35,13)"/><text x="69.1962%" y="687.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 27.13%)</title><rect x="68.9462%" y="661" width="27.1300%" height="15" fill="rgb(225,49,51)"/><text x="69.1962%" y="671.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.13%)</title><rect x="68.9462%" y="645" width="27.1300%" height="15" fill="rgb(251,10,15)"/><text x="69.1962%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.13%)</title><rect x="68.9462%" y="629" width="27.1300%" height="15" fill="rgb(228,207,15)"/><text x="69.1962%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 27.13%)</title><rect x="68.9462%" y="613" width="27.1300%" height="15" fill="rgb(241,99,19)"/><text x="69.1962%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (238 samples, 26.68%)</title><rect x="69.3946%" y="597" width="26.6816%" height="15" fill="rgb(207,104,49)"/><text x="69.6446%" y="607.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 26.57%)</title><rect x="69.5067%" y="581" width="26.5695%" height="15" fill="rgb(234,99,18)"/><text x="69.7567%" y="591.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (234 samples, 26.23%)</title><rect x="69.8430%" y="565" width="26.2332%" height="15" fill="rgb(213,191,49)"/><text x="70.0930%" y="575.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (234 samples, 26.23%)</title><rect x="69.8430%" y="549" width="26.2332%" height="15" fill="rgb(210,226,19)"/><text x="70.0930%" y="559.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 26.23%)</title><rect x="69.8430%" y="533" width="26.2332%" height="15" fill="rgb(229,97,18)"/><text x="70.0930%" y="543.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 26.23%)</title><rect x="69.8430%" y="517" width="26.2332%" height="15" fill="rgb(211,167,15)"/><text x="70.0930%" y="527.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 26.23%)</title><rect x="69.8430%" y="501" width="26.2332%" height="15" fill="rgb(210,169,34)"/><text x="70.0930%" y="511.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 26.23%)</title><rect x="69.8430%" y="485" width="26.2332%" height="15" fill="rgb(241,121,31)"/><text x="70.0930%" y="495.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 26.23%)</title><rect x="69.8430%" y="469" width="26.2332%" height="15" fill="rgb(232,40,11)"/><text x="70.0930%" y="479.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 26.23%)</title><rect x="69.8430%" y="453" width="26.2332%" height="15" fill="rgb(205,86,26)"/><text x="70.0930%" y="463.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 26.23%)</title><rect x="69.8430%" y="437" width="26.2332%" height="15" fill="rgb(231,126,28)"/><text x="70.0930%" y="447.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 26.23%)</title><rect x="69.8430%" y="421" width="26.2332%" height="15" fill="rgb(219,221,18)"/><text x="70.0930%" y="431.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 26.23%)</title><rect x="69.8430%" y="405" width="26.2332%" height="15" fill="rgb(211,40,0)"/><text x="70.0930%" y="415.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 26.23%)</title><rect x="69.8430%" y="389" width="26.2332%" height="15" fill="rgb(239,85,43)"/><text x="70.0930%" y="399.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (2 samples, 0.22%)</title><rect x="95.8520%" y="373" width="0.2242%" height="15" fill="rgb(231,55,21)"/><text x="96.1020%" y="383.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="95.9641%" y="357" width="0.1121%" height="15" fill="rgb(225,184,43)"/><text x="96.2141%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="96.0762%" y="661" width="0.1121%" height="15" fill="rgb(251,158,41)"/><text x="96.3262%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="96.1883%" y="661" width="0.1121%" height="15" fill="rgb(234,159,37)"/><text x="96.4383%" y="671.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="96.3004%" y="485" width="0.1121%" height="15" fill="rgb(216,204,22)"/><text x="96.5504%" y="495.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="96.3004%" y="469" width="0.1121%" height="15" fill="rgb(214,17,3)"/><text x="96.5504%" y="479.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="96.3004%" y="453" width="0.1121%" height="15" fill="rgb(212,111,17)"/><text x="96.5504%" y="463.50"></text></g><g><title>__ip_local_out (1 samples, 0.11%)</title><rect x="96.7489%" y="405" width="0.1121%" height="15" fill="rgb(221,157,24)"/><text x="96.9989%" y="415.50"></text></g><g><title>ip_send_check (1 samples, 0.11%)</title><rect x="96.7489%" y="389" width="0.1121%" height="15" fill="rgb(252,16,13)"/><text x="96.9989%" y="399.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="96.8610%" y="373" width="0.1121%" height="15" fill="rgb(221,62,2)"/><text x="97.1110%" y="383.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="96.8610%" y="357" width="0.1121%" height="15" fill="rgb(247,87,22)"/><text x="97.1110%" y="367.50"></text></g><g><title>loopback_xmit (1 samples, 0.11%)</title><rect x="96.8610%" y="341" width="0.1121%" height="15" fill="rgb(215,73,9)"/><text x="97.1110%" y="351.50"></text></g><g><title>sk_free (1 samples, 0.11%)</title><rect x="96.8610%" y="325" width="0.1121%" height="15" fill="rgb(207,175,33)"/><text x="97.1110%" y="335.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="97.0852%" y="181" width="0.1121%" height="15" fill="rgb(243,129,54)"/><text x="97.3352%" y="191.50"></text></g><g><title>sock_def_readable (2 samples, 0.22%)</title><rect x="97.1973%" y="149" width="0.2242%" height="15" fill="rgb(227,119,45)"/><text x="97.4473%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="97.3094%" y="133" width="0.1121%" height="15" fill="rgb(205,109,36)"/><text x="97.5594%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="97.3094%" y="117" width="0.1121%" height="15" fill="rgb(205,6,39)"/><text x="97.5594%" y="127.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="97.3094%" y="101" width="0.1121%" height="15" fill="rgb(221,32,16)"/><text x="97.5594%" y="111.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="97.3094%" y="85" width="0.1121%" height="15" fill="rgb(228,144,50)"/><text x="97.5594%" y="95.50"></text></g><g><title>tcp_ack (3 samples, 0.34%)</title><rect x="97.4215%" y="149" width="0.3363%" height="15" fill="rgb(229,201,53)"/><text x="97.6715%" y="159.50"></text></g><g><title>tcp_update_pacing_rate (2 samples, 0.22%)</title><rect x="97.5336%" y="133" width="0.2242%" height="15" fill="rgb(249,153,27)"/><text x="97.7836%" y="143.50"></text></g><g><title>tcp_data_queue (1 samples, 0.11%)</title><rect x="97.7578%" y="149" width="0.1121%" height="15" fill="rgb(227,106,25)"/><text x="98.0078%" y="159.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="97.7578%" y="133" width="0.1121%" height="15" fill="rgb(230,65,29)"/><text x="98.0078%" y="143.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="97.7578%" y="117" width="0.1121%" height="15" fill="rgb(221,57,46)"/><text x="98.0078%" y="127.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="97.7578%" y="101" width="0.1121%" height="15" fill="rgb(229,161,17)"/><text x="98.0078%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.11%)</title><rect x="97.7578%" y="85" width="0.1121%" height="15" fill="rgb(222,213,11)"/><text x="98.0078%" y="95.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="97.7578%" y="69" width="0.1121%" height="15" fill="rgb(235,35,13)"/><text x="98.0078%" y="79.50"></text></g><g><title>tcp_event_data_recv (2 samples, 0.22%)</title><rect x="97.8700%" y="149" width="0.2242%" height="15" fill="rgb(233,158,34)"/><text x="98.1200%" y="159.50"></text></g><g><title>ip_local_deliver (11 samples, 1.23%)</title><rect x="96.9731%" y="245" width="1.2332%" height="15" fill="rgb(215,151,48)"/><text x="97.2231%" y="255.50"></text></g><g><title>ip_local_deliver_finish (11 samples, 1.23%)</title><rect x="96.9731%" y="229" width="1.2332%" height="15" fill="rgb(229,84,14)"/><text x="97.2231%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (11 samples, 1.23%)</title><rect x="96.9731%" y="213" width="1.2332%" height="15" fill="rgb(229,68,14)"/><text x="97.2231%" y="223.50"></text></g><g><title>tcp_v4_rcv (11 samples, 1.23%)</title><rect x="96.9731%" y="197" width="1.2332%" height="15" fill="rgb(243,106,26)"/><text x="97.2231%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (9 samples, 1.01%)</title><rect x="97.1973%" y="181" width="1.0090%" height="15" fill="rgb(206,45,38)"/><text x="97.4473%" y="191.50"></text></g><g><title>tcp_rcv_established (9 samples, 1.01%)</title><rect x="97.1973%" y="165" width="1.0090%" height="15" fill="rgb(226,6,15)"/><text x="97.4473%" y="175.50"></text></g><g><title>tcp_send_delayed_ack (1 samples, 0.11%)</title><rect x="98.0942%" y="149" width="0.1121%" height="15" fill="rgb(232,22,54)"/><text x="98.3442%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 1.35%)</title><rect x="96.9731%" y="277" width="1.3453%" height="15" fill="rgb(229,222,32)"/><text x="97.2231%" y="287.50"></text></g><g><title>ip_rcv (12 samples, 1.35%)</title><rect x="96.9731%" y="261" width="1.3453%" height="15" fill="rgb(228,62,29)"/><text x="97.2231%" y="271.50"></text></g><g><title>ip_rcv_core (1 samples, 0.11%)</title><rect x="98.2063%" y="245" width="0.1121%" height="15" fill="rgb(251,103,34)"/><text x="98.4563%" y="255.50"></text></g><g><title>__tcp_push_pending_frames (18 samples, 2.02%)</title><rect x="96.4126%" y="469" width="2.0179%" height="15" fill="rgb(233,12,30)"/><text x="96.6626%" y="479.50">_..</text></g><g><title>tcp_write_xmit (18 samples, 2.02%)</title><rect x="96.4126%" y="453" width="2.0179%" height="15" fill="rgb(238,52,0)"/><text x="96.6626%" y="463.50">t..</text></g><g><title>__tcp_transmit_skb (18 samples, 2.02%)</title><rect x="96.4126%" y="437" width="2.0179%" height="15" fill="rgb(223,98,5)"/><text x="96.6626%" y="447.50">_..</text></g><g><title>__ip_queue_xmit (16 samples, 1.79%)</title><rect x="96.6368%" y="421" width="1.7937%" height="15" fill="rgb(228,75,37)"/><text x="96.8868%" y="431.50">_..</text></g><g><title>ip_output (14 samples, 1.57%)</title><rect x="96.8610%" y="405" width="1.5695%" height="15" fill="rgb(205,115,49)"/><text x="97.1110%" y="415.50"></text></g><g><title>ip_finish_output2 (14 samples, 1.57%)</title><rect x="96.8610%" y="389" width="1.5695%" height="15" fill="rgb(250,154,43)"/><text x="97.1110%" y="399.50"></text></g><g><title>__local_bh_enable_ip (13 samples, 1.46%)</title><rect x="96.9731%" y="373" width="1.4574%" height="15" fill="rgb(226,43,29)"/><text x="97.2231%" y="383.50"></text></g><g><title>do_softirq (13 samples, 1.46%)</title><rect x="96.9731%" y="357" width="1.4574%" height="15" fill="rgb(249,228,39)"/><text x="97.2231%" y="367.50"></text></g><g><title>do_softirq_own_stack (13 samples, 1.46%)</title><rect x="96.9731%" y="341" width="1.4574%" height="15" fill="rgb(216,79,43)"/><text x="97.2231%" y="351.50"></text></g><g><title>__do_softirq (13 samples, 1.46%)</title><rect x="96.9731%" y="325" width="1.4574%" height="15" fill="rgb(228,95,12)"/><text x="97.2231%" y="335.50"></text></g><g><title>net_rx_action (13 samples, 1.46%)</title><rect x="96.9731%" y="309" width="1.4574%" height="15" fill="rgb(249,221,15)"/><text x="97.2231%" y="319.50"></text></g><g><title>process_backlog (13 samples, 1.46%)</title><rect x="96.9731%" y="293" width="1.4574%" height="15" fill="rgb(233,34,13)"/><text x="97.2231%" y="303.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="98.3184%" y="277" width="0.1121%" height="15" fill="rgb(214,103,39)"/><text x="98.5684%" y="287.50"></text></g><g><title>mysql::conn::Conn::_query (22 samples, 2.47%)</title><rect x="96.0762%" y="677" width="2.4664%" height="15" fill="rgb(251,126,39)"/><text x="96.3262%" y="687.50">my..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (20 samples, 2.24%)</title><rect x="96.3004%" y="661" width="2.2422%" height="15" fill="rgb(214,216,36)"/><text x="96.5504%" y="671.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (20 samples, 2.24%)</title><rect x="96.3004%" y="645" width="2.2422%" height="15" fill="rgb(220,221,8)"/><text x="96.5504%" y="655.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (20 samples, 2.24%)</title><rect x="96.3004%" y="629" width="2.2422%" height="15" fill="rgb(240,216,3)"/><text x="96.5504%" y="639.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (20 samples, 2.24%)</title><rect x="96.3004%" y="613" width="2.2422%" height="15" fill="rgb(232,218,17)"/><text x="96.5504%" y="623.50">s..</text></g><g><title>__libc_send (20 samples, 2.24%)</title><rect x="96.3004%" y="597" width="2.2422%" height="15" fill="rgb(229,163,45)"/><text x="96.5504%" y="607.50">_..</text></g><g><title>entry_SYSCALL_64 (20 samples, 2.24%)</title><rect x="96.3004%" y="581" width="2.2422%" height="15" fill="rgb(231,110,42)"/><text x="96.5504%" y="591.50">e..</text></g><g><title>do_syscall_64 (20 samples, 2.24%)</title><rect x="96.3004%" y="565" width="2.2422%" height="15" fill="rgb(208,170,48)"/><text x="96.5504%" y="575.50">d..</text></g><g><title>__x64_sys_sendto (20 samples, 2.24%)</title><rect x="96.3004%" y="549" width="2.2422%" height="15" fill="rgb(239,116,25)"/><text x="96.5504%" y="559.50">_..</text></g><g><title>__sys_sendto (20 samples, 2.24%)</title><rect x="96.3004%" y="533" width="2.2422%" height="15" fill="rgb(219,200,50)"/><text x="96.5504%" y="543.50">_..</text></g><g><title>sock_sendmsg (20 samples, 2.24%)</title><rect x="96.3004%" y="517" width="2.2422%" height="15" fill="rgb(245,200,0)"/><text x="96.5504%" y="527.50">s..</text></g><g><title>tcp_sendmsg (20 samples, 2.24%)</title><rect x="96.3004%" y="501" width="2.2422%" height="15" fill="rgb(245,119,33)"/><text x="96.5504%" y="511.50">t..</text></g><g><title>tcp_sendmsg_locked (19 samples, 2.13%)</title><rect x="96.4126%" y="485" width="2.1300%" height="15" fill="rgb(231,125,12)"/><text x="96.6626%" y="495.50">t..</text></g><g><title>tcp_send_mss (1 samples, 0.11%)</title><rect x="98.4305%" y="469" width="0.1121%" height="15" fill="rgb(216,96,41)"/><text x="98.6805%" y="479.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="98.4305%" y="453" width="0.1121%" height="15" fill="rgb(248,43,45)"/><text x="98.6805%" y="463.50"></text></g><g><title>__libc_start_main (265 samples, 29.71%)</title><rect x="68.9462%" y="837" width="29.7085%" height="15" fill="rgb(217,222,7)"/><text x="69.1962%" y="847.50">__libc_start_main</text></g><g><title>main (265 samples, 29.71%)</title><rect x="68.9462%" y="821" width="29.7085%" height="15" fill="rgb(233,28,6)"/><text x="69.1962%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (265 samples, 29.71%)</title><rect x="68.9462%" y="805" width="29.7085%" height="15" fill="rgb(231,218,15)"/><text x="69.1962%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (265 samples, 29.71%)</title><rect x="68.9462%" y="789" width="29.7085%" height="15" fill="rgb(226,171,48)"/><text x="69.1962%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (265 samples, 29.71%)</title><rect x="68.9462%" y="773" width="29.7085%" height="15" fill="rgb(235,201,9)"/><text x="69.1962%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (265 samples, 29.71%)</title><rect x="68.9462%" y="757" width="29.7085%" height="15" fill="rgb(217,80,15)"/><text x="69.1962%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (265 samples, 29.71%)</title><rect x="68.9462%" y="741" width="29.7085%" height="15" fill="rgb(219,152,8)"/><text x="69.1962%" y="751.50">core::ops::function::impls::&lt;impl core::ops::fun..</text></g><g><title>std::rt::lang_start::_{{closure}} (265 samples, 29.71%)</title><rect x="68.9462%" y="725" width="29.7085%" height="15" fill="rgb(243,107,38)"/><text x="69.1962%" y="735.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (265 samples, 29.71%)</title><rect x="68.9462%" y="709" width="29.7085%" height="15" fill="rgb(231,17,5)"/><text x="69.1962%" y="719.50">std::sys_common::backtrace::__rust_begin_short_b..</text></g><g><title>lobsters::main (265 samples, 29.71%)</title><rect x="68.9462%" y="693" width="29.7085%" height="15" fill="rgb(209,25,54)"/><text x="69.1962%" y="703.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="98.5426%" y="677" width="0.1121%" height="15" fill="rgb(219,0,2)"/><text x="98.7926%" y="687.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="98.5426%" y="661" width="0.1121%" height="15" fill="rgb(246,9,5)"/><text x="98.7926%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.11%)</title><rect x="98.5426%" y="645" width="0.1121%" height="15" fill="rgb(226,159,4)"/><text x="98.7926%" y="655.50"></text></g><g><title>__GI___socket (1 samples, 0.11%)</title><rect x="98.5426%" y="629" width="0.1121%" height="15" fill="rgb(219,175,34)"/><text x="98.7926%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.5426%" y="613" width="0.1121%" height="15" fill="rgb(236,10,46)"/><text x="98.7926%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.5426%" y="597" width="0.1121%" height="15" fill="rgb(240,211,16)"/><text x="98.7926%" y="607.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.11%)</title><rect x="98.5426%" y="581" width="0.1121%" height="15" fill="rgb(205,3,43)"/><text x="98.7926%" y="591.50"></text></g><g><title>__sys_socket (1 samples, 0.11%)</title><rect x="98.5426%" y="565" width="0.1121%" height="15" fill="rgb(245,7,22)"/><text x="98.7926%" y="575.50"></text></g><g><title>__sock_create (1 samples, 0.11%)</title><rect x="98.5426%" y="549" width="0.1121%" height="15" fill="rgb(239,132,32)"/><text x="98.7926%" y="559.50"></text></g><g><title>sock_alloc (1 samples, 0.11%)</title><rect x="98.5426%" y="533" width="0.1121%" height="15" fill="rgb(228,202,34)"/><text x="98.7926%" y="543.50"></text></g><g><title>new_inode_pseudo (1 samples, 0.11%)</title><rect x="98.5426%" y="517" width="0.1121%" height="15" fill="rgb(254,200,22)"/><text x="98.7926%" y="527.50"></text></g><g><title>alloc_inode (1 samples, 0.11%)</title><rect x="98.5426%" y="501" width="0.1121%" height="15" fill="rgb(219,10,39)"/><text x="98.7926%" y="511.50"></text></g><g><title>sock_alloc_inode (1 samples, 0.11%)</title><rect x="98.5426%" y="485" width="0.1121%" height="15" fill="rgb(226,210,39)"/><text x="98.7926%" y="495.50"></text></g><g><title>_start (266 samples, 29.82%)</title><rect x="68.9462%" y="853" width="29.8206%" height="15" fill="rgb(208,219,16)"/><text x="69.1962%" y="863.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.6547%" y="837" width="0.1121%" height="15" fill="rgb(216,158,51)"/><text x="98.9047%" y="847.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.6547%" y="821" width="0.1121%" height="15" fill="rgb(233,14,44)"/><text x="98.9047%" y="831.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="98.6547%" y="805" width="0.1121%" height="15" fill="rgb(237,97,39)"/><text x="98.9047%" y="815.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="98.6547%" y="789" width="0.1121%" height="15" fill="rgb(218,198,43)"/><text x="98.9047%" y="799.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="98.6547%" y="773" width="0.1121%" height="15" fill="rgb(231,104,20)"/><text x="98.9047%" y="783.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="98.6547%" y="757" width="0.1121%" height="15" fill="rgb(254,36,13)"/><text x="98.9047%" y="767.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="98.6547%" y="741" width="0.1121%" height="15" fill="rgb(248,14,50)"/><text x="98.9047%" y="751.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="98.6547%" y="725" width="0.1121%" height="15" fill="rgb(217,107,29)"/><text x="98.9047%" y="735.50"></text></g><g><title>__mmap (1 samples, 0.11%)</title><rect x="98.6547%" y="709" width="0.1121%" height="15" fill="rgb(251,169,33)"/><text x="98.9047%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.6547%" y="693" width="0.1121%" height="15" fill="rgb(217,108,32)"/><text x="98.9047%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.6547%" y="677" width="0.1121%" height="15" fill="rgb(219,66,42)"/><text x="98.9047%" y="687.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.6547%" y="661" width="0.1121%" height="15" fill="rgb(206,180,7)"/><text x="98.9047%" y="671.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.6547%" y="645" width="0.1121%" height="15" fill="rgb(208,226,31)"/><text x="98.9047%" y="655.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="98.6547%" y="629" width="0.1121%" height="15" fill="rgb(218,26,49)"/><text x="98.9047%" y="639.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="98.6547%" y="613" width="0.1121%" height="15" fill="rgb(233,197,48)"/><text x="98.9047%" y="623.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="98.6547%" y="597" width="0.1121%" height="15" fill="rgb(252,181,51)"/><text x="98.9047%" y="607.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="98.6547%" y="581" width="0.1121%" height="15" fill="rgb(253,90,19)"/><text x="98.9047%" y="591.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="98.6547%" y="565" width="0.1121%" height="15" fill="rgb(215,171,30)"/><text x="98.9047%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.22%)</title><rect x="98.7668%" y="853" width="0.2242%" height="15" fill="rgb(214,222,9)"/><text x="99.0168%" y="863.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.8789%" y="837" width="0.1121%" height="15" fill="rgb(223,3,22)"/><text x="99.1289%" y="847.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="98.8789%" y="821" width="0.1121%" height="15" fill="rgb(225,196,46)"/><text x="99.1289%" y="831.50"></text></g><g><title>do_execve (1 samples, 0.11%)</title><rect x="98.8789%" y="805" width="0.1121%" height="15" fill="rgb(209,110,37)"/><text x="99.1289%" y="815.50"></text></g><g><title>__do_execve_file (1 samples, 0.11%)</title><rect x="98.8789%" y="789" width="0.1121%" height="15" fill="rgb(249,89,12)"/><text x="99.1289%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.11%)</title><rect x="98.8789%" y="773" width="0.1121%" height="15" fill="rgb(226,27,33)"/><text x="99.1289%" y="783.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="98.8789%" y="757" width="0.1121%" height="15" fill="rgb(213,82,22)"/><text x="99.1289%" y="767.50"></text></g><g><title>__clear_user (1 samples, 0.11%)</title><rect x="98.8789%" y="741" width="0.1121%" height="15" fill="rgb(248,140,0)"/><text x="99.1289%" y="751.50"></text></g><g><title>error_exit (1 samples, 0.11%)</title><rect x="98.8789%" y="725" width="0.1121%" height="15" fill="rgb(228,106,3)"/><text x="99.1289%" y="735.50"></text></g><g><title>msql_srv::writers::column_definitions (1 samples, 0.11%)</title><rect x="98.9910%" y="853" width="0.1121%" height="15" fill="rgb(209,23,37)"/><text x="99.2410%" y="863.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="99.1031%" y="853" width="0.1121%" height="15" fill="rgb(241,93,50)"/><text x="99.3531%" y="863.50"></text></g><g><title>lobsters (886 samples, 99.33%)</title><rect x="0.0000%" y="869" width="99.3274%" height="15" fill="rgb(253,46,43)"/><text x="0.2500%" y="879.50">lobsters</text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="99.2152%" y="853" width="0.1121%" height="15" fill="rgb(226,206,43)"/><text x="99.4652%" y="863.50"></text></g><g><title>all (892 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(217,54,7)"/><text x="0.2500%" y="895.50"></text></g><g><title>perf (6 samples, 0.67%)</title><rect x="99.3274%" y="869" width="0.6726%" height="15" fill="rgb(223,5,52)"/><text x="99.5774%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.67%)</title><rect x="99.3274%" y="853" width="0.6726%" height="15" fill="rgb(206,52,46)"/><text x="99.5774%" y="863.50"></text></g><g><title>do_syscall_64 (6 samples, 0.67%)</title><rect x="99.3274%" y="837" width="0.6726%" height="15" fill="rgb(253,136,11)"/><text x="99.5774%" y="847.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.67%)</title><rect x="99.3274%" y="821" width="0.6726%" height="15" fill="rgb(208,106,33)"/><text x="99.5774%" y="831.50"></text></g><g><title>do_execve (6 samples, 0.67%)</title><rect x="99.3274%" y="805" width="0.6726%" height="15" fill="rgb(206,54,4)"/><text x="99.5774%" y="815.50"></text></g><g><title>__do_execve_file (6 samples, 0.67%)</title><rect x="99.3274%" y="789" width="0.6726%" height="15" fill="rgb(213,3,15)"/><text x="99.5774%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.67%)</title><rect x="99.3274%" y="773" width="0.6726%" height="15" fill="rgb(252,211,39)"/><text x="99.5774%" y="783.50"></text></g><g><title>load_elf_binary (6 samples, 0.67%)</title><rect x="99.3274%" y="757" width="0.6726%" height="15" fill="rgb(223,6,36)"/><text x="99.5774%" y="767.50"></text></g><g><title>setup_new_exec (6 samples, 0.67%)</title><rect x="99.3274%" y="741" width="0.6726%" height="15" fill="rgb(252,169,45)"/><text x="99.5774%" y="751.50"></text></g><g><title>perf_event_exec (6 samples, 0.67%)</title><rect x="99.3274%" y="725" width="0.6726%" height="15" fill="rgb(212,48,26)"/><text x="99.5774%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.56%)</title><rect x="99.4395%" y="709" width="0.5605%" height="15" fill="rgb(251,102,48)"/><text x="99.6895%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.56%)</title><rect x="99.4395%" y="693" width="0.5605%" height="15" fill="rgb(243,208,16)"/><text x="99.6895%" y="703.50"></text></g></svg></svg>