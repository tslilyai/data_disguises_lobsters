<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="933.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="933.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="0.0000%" y="869" width="0.1050%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="0.1050%" y="869" width="0.1050%" height="15" fill="rgb(217,0,24)"/><text x="0.3550%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="0.2101%" y="853" width="0.1050%" height="15" fill="rgb(221,193,54)"/><text x="0.4601%" y="863.50"></text></g><g><title>[[stack]] (2 samples, 0.21%)</title><rect x="0.2101%" y="869" width="0.2101%" height="15" fill="rgb(248,212,6)"/><text x="0.4601%" y="879.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="0.3151%" y="853" width="0.1050%" height="15" fill="rgb(208,68,35)"/><text x="0.5651%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="0.4202%" y="853" width="0.1050%" height="15" fill="rgb(232,128,0)"/><text x="0.6702%" y="863.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="0.5252%" y="853" width="0.1050%" height="15" fill="rgb(207,160,47)"/><text x="0.7752%" y="863.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (1 samples, 0.11%)</title><rect x="0.6303%" y="853" width="0.1050%" height="15" fill="rgb(228,23,34)"/><text x="0.8803%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="0.7353%" y="853" width="0.1050%" height="15" fill="rgb(218,30,26)"/><text x="0.9853%" y="863.50"></text></g><g><title>&lt;thread_local::thread_id::ThreadId as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="0.8403%" y="853" width="0.1050%" height="15" fill="rgb(220,122,19)"/><text x="1.0903%" y="863.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="0.9454%" y="853" width="0.3151%" height="15" fill="rgb(250,228,42)"/><text x="1.1954%" y="863.50"></text></g><g><title>__libc_send (4 samples, 0.42%)</title><rect x="1.2605%" y="853" width="0.4202%" height="15" fill="rgb(240,193,28)"/><text x="1.5105%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.42%)</title><rect x="1.2605%" y="837" width="0.4202%" height="15" fill="rgb(216,20,37)"/><text x="1.5105%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="1.6807%" y="853" width="0.2101%" height="15" fill="rgb(206,188,39)"/><text x="1.9307%" y="863.50"></text></g><g><title>__rdl_realloc (1 samples, 0.11%)</title><rect x="1.8908%" y="853" width="0.1050%" height="15" fill="rgb(217,207,13)"/><text x="2.1408%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.11%)</title><rect x="1.8908%" y="837" width="0.1050%" height="15" fill="rgb(231,73,38)"/><text x="2.1408%" y="847.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="1.9958%" y="853" width="0.2101%" height="15" fill="rgb(225,20,46)"/><text x="2.2458%" y="863.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="2.2059%" y="853" width="0.1050%" height="15" fill="rgb(210,31,41)"/><text x="2.4559%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="2.3109%" y="853" width="0.2101%" height="15" fill="rgb(221,200,47)"/><text x="2.5609%" y="863.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.21%)</title><rect x="2.5210%" y="853" width="0.2101%" height="15" fill="rgb(226,26,5)"/><text x="2.7710%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="2.7311%" y="853" width="0.1050%" height="15" fill="rgb(249,33,26)"/><text x="2.9811%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.11%)</title><rect x="2.8361%" y="853" width="0.1050%" height="15" fill="rgb(235,183,28)"/><text x="3.0861%" y="863.50"></text></g><g><title>core::fmt::write (3 samples, 0.32%)</title><rect x="2.9412%" y="853" width="0.3151%" height="15" fill="rgb(221,5,38)"/><text x="3.1912%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="3.2563%" y="853" width="0.3151%" height="15" fill="rgb(247,18,42)"/><text x="3.5063%" y="863.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.21%)</title><rect x="3.5714%" y="853" width="0.2101%" height="15" fill="rgb(241,131,45)"/><text x="3.8214%" y="863.50"></text></g><g><title>decor::answer_rows (1 samples, 0.11%)</title><rect x="3.7815%" y="853" width="0.1050%" height="15" fill="rgb(249,31,29)"/><text x="4.0315%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="3.8866%" y="853" width="0.1050%" height="15" fill="rgb(225,111,53)"/><text x="4.1366%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="3.9916%" y="853" width="0.1050%" height="15" fill="rgb(238,160,17)"/><text x="4.2416%" y="863.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="4.0966%" y="853" width="0.1050%" height="15" fill="rgb(214,148,48)"/><text x="4.3466%" y="863.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.21%)</title><rect x="4.2017%" y="853" width="0.2101%" height="15" fill="rgb(232,36,49)"/><text x="4.4517%" y="863.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="4.4118%" y="853" width="0.1050%" height="15" fill="rgb(209,103,24)"/><text x="4.6618%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="4.5168%" y="853" width="0.1050%" height="15" fill="rgb(229,88,8)"/><text x="4.7668%" y="863.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="4.6218%" y="853" width="0.1050%" height="15" fill="rgb(213,181,19)"/><text x="4.8718%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="4.7269%" y="853" width="0.1050%" height="15" fill="rgb(254,191,54)"/><text x="4.9769%" y="863.50"></text></g><g><title>[anon] (44 samples, 4.62%)</title><rect x="0.4202%" y="869" width="4.6218%" height="15" fill="rgb(241,83,37)"/><text x="0.6702%" y="879.50">[anon]</text></g><g><title>std::io::Write::write_all (2 samples, 0.21%)</title><rect x="4.8319%" y="853" width="0.2101%" height="15" fill="rgb(233,36,39)"/><text x="5.0819%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0420%" y="853" width="0.1050%" height="15" fill="rgb(226,3,54)"/><text x="5.2920%" y="863.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.32%)</title><rect x="5.0420%" y="869" width="0.3151%" height="15" fill="rgb(245,192,40)"/><text x="5.2920%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="5.1471%" y="853" width="0.2101%" height="15" fill="rgb(238,167,29)"/><text x="5.3971%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.3571%" y="853" width="0.1050%" height="15" fill="rgb(232,182,51)"/><text x="5.6071%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.3571%" y="837" width="0.1050%" height="15" fill="rgb(231,60,39)"/><text x="5.6071%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="5.3571%" y="821" width="0.1050%" height="15" fill="rgb(208,69,12)"/><text x="5.6071%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="5.3571%" y="805" width="0.1050%" height="15" fill="rgb(235,93,37)"/><text x="5.6071%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="5.3571%" y="789" width="0.1050%" height="15" fill="rgb(213,116,39)"/><text x="5.6071%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="5.3571%" y="773" width="0.1050%" height="15" fill="rgb(222,207,29)"/><text x="5.6071%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="5.3571%" y="757" width="0.1050%" height="15" fill="rgb(206,96,30)"/><text x="5.6071%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="5.3571%" y="741" width="0.1050%" height="15" fill="rgb(218,138,4)"/><text x="5.6071%" y="751.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="5.4622%" y="853" width="0.1050%" height="15" fill="rgb(250,191,14)"/><text x="5.7122%" y="863.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="5.5672%" y="853" width="0.1050%" height="15" fill="rgb(239,60,40)"/><text x="5.8172%" y="863.50"></text></g><g><title>[lobsters] (4 samples, 0.42%)</title><rect x="5.3571%" y="869" width="0.4202%" height="15" fill="rgb(206,27,48)"/><text x="5.6071%" y="879.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="5.6723%" y="853" width="0.1050%" height="15" fill="rgb(225,35,8)"/><text x="5.9223%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="5.7773%" y="853" width="0.1050%" height="15" fill="rgb(250,213,24)"/><text x="6.0273%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="5.8824%" y="853" width="0.1050%" height="15" fill="rgb(247,123,22)"/><text x="6.1324%" y="863.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="5.8824%" y="837" width="0.1050%" height="15" fill="rgb(231,138,38)"/><text x="6.1324%" y="847.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="5.8824%" y="821" width="0.1050%" height="15" fill="rgb(231,145,46)"/><text x="6.1324%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="5.8824%" y="805" width="0.1050%" height="15" fill="rgb(251,118,11)"/><text x="6.1324%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="5.8824%" y="789" width="0.1050%" height="15" fill="rgb(217,147,25)"/><text x="6.1324%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="5.8824%" y="773" width="0.1050%" height="15" fill="rgb(247,81,37)"/><text x="6.1324%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="5.8824%" y="757" width="0.1050%" height="15" fill="rgb(209,12,38)"/><text x="6.1324%" y="767.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="5.8824%" y="741" width="0.1050%" height="15" fill="rgb(227,1,9)"/><text x="6.1324%" y="751.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="5.8824%" y="725" width="0.1050%" height="15" fill="rgb(248,47,43)"/><text x="6.1324%" y="735.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="5.8824%" y="709" width="0.1050%" height="15" fill="rgb(221,10,30)"/><text x="6.1324%" y="719.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="5.8824%" y="693" width="0.1050%" height="15" fill="rgb(210,229,1)"/><text x="6.1324%" y="703.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="5.8824%" y="677" width="0.1050%" height="15" fill="rgb(222,148,37)"/><text x="6.1324%" y="687.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="5.8824%" y="661" width="0.1050%" height="15" fill="rgb(234,67,33)"/><text x="6.1324%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="5.8824%" y="645" width="0.1050%" height="15" fill="rgb(247,98,35)"/><text x="6.1324%" y="655.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="5.8824%" y="629" width="0.1050%" height="15" fill="rgb(247,138,52)"/><text x="6.1324%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="5.9874%" y="501" width="0.2101%" height="15" fill="rgb(213,79,30)"/><text x="6.2374%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="6.0924%" y="485" width="0.1050%" height="15" fill="rgb(246,177,23)"/><text x="6.3424%" y="495.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="5.9874%" y="725" width="0.4202%" height="15" fill="rgb(230,62,27)"/><text x="6.2374%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="5.9874%" y="709" width="0.4202%" height="15" fill="rgb(216,154,8)"/><text x="6.2374%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.42%)</title><rect x="5.9874%" y="693" width="0.4202%" height="15" fill="rgb(244,35,45)"/><text x="6.2374%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="5.9874%" y="677" width="0.4202%" height="15" fill="rgb(251,115,12)"/><text x="6.2374%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.42%)</title><rect x="5.9874%" y="661" width="0.4202%" height="15" fill="rgb(240,54,50)"/><text x="6.2374%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.42%)</title><rect x="5.9874%" y="645" width="0.4202%" height="15" fill="rgb(233,84,52)"/><text x="6.2374%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.42%)</title><rect x="5.9874%" y="629" width="0.4202%" height="15" fill="rgb(207,117,47)"/><text x="6.2374%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.42%)</title><rect x="5.9874%" y="613" width="0.4202%" height="15" fill="rgb(249,43,39)"/><text x="6.2374%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.42%)</title><rect x="5.9874%" y="597" width="0.4202%" height="15" fill="rgb(209,38,44)"/><text x="6.2374%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.42%)</title><rect x="5.9874%" y="581" width="0.4202%" height="15" fill="rgb(236,212,23)"/><text x="6.2374%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.42%)</title><rect x="5.9874%" y="565" width="0.4202%" height="15" fill="rgb(242,79,21)"/><text x="6.2374%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.42%)</title><rect x="5.9874%" y="549" width="0.4202%" height="15" fill="rgb(211,96,35)"/><text x="6.2374%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="5.9874%" y="533" width="0.4202%" height="15" fill="rgb(253,215,40)"/><text x="6.2374%" y="543.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="5.9874%" y="517" width="0.4202%" height="15" fill="rgb(211,81,21)"/><text x="6.2374%" y="527.50"></text></g><g><title>__rdl_alloc (2 samples, 0.21%)</title><rect x="6.1975%" y="501" width="0.2101%" height="15" fill="rgb(208,190,38)"/><text x="6.4475%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.21%)</title><rect x="6.1975%" y="485" width="0.2101%" height="15" fill="rgb(235,213,38)"/><text x="6.4475%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.53%)</title><rect x="5.9874%" y="757" width="0.5252%" height="15" fill="rgb(237,122,38)"/><text x="6.2374%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.53%)</title><rect x="5.9874%" y="741" width="0.5252%" height="15" fill="rgb(244,218,35)"/><text x="6.2374%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.4076%" y="725" width="0.1050%" height="15" fill="rgb(240,68,47)"/><text x="6.6576%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="6.5126%" y="757" width="0.1050%" height="15" fill="rgb(210,16,53)"/><text x="6.7626%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.5126%" y="741" width="0.1050%" height="15" fill="rgb(235,124,12)"/><text x="6.7626%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.6176%" y="757" width="0.1050%" height="15" fill="rgb(224,169,11)"/><text x="6.8676%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="6.6176%" y="741" width="0.1050%" height="15" fill="rgb(250,166,2)"/><text x="6.8676%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.6176%" y="725" width="0.1050%" height="15" fill="rgb(242,216,29)"/><text x="6.8676%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.6176%" y="709" width="0.1050%" height="15" fill="rgb(230,116,27)"/><text x="6.8676%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="6.6176%" y="693" width="0.1050%" height="15" fill="rgb(228,99,48)"/><text x="6.8676%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="6.6176%" y="677" width="0.1050%" height="15" fill="rgb(253,11,6)"/><text x="6.8676%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="6.6176%" y="661" width="0.1050%" height="15" fill="rgb(247,143,39)"/><text x="6.8676%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="6.6176%" y="645" width="0.1050%" height="15" fill="rgb(236,97,10)"/><text x="6.8676%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="6.6176%" y="629" width="0.1050%" height="15" fill="rgb(233,208,19)"/><text x="6.8676%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="6.6176%" y="613" width="0.1050%" height="15" fill="rgb(216,164,2)"/><text x="6.8676%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.84%)</title><rect x="5.9874%" y="773" width="0.8403%" height="15" fill="rgb(220,129,5)"/><text x="6.2374%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="6.7227%" y="757" width="0.1050%" height="15" fill="rgb(242,17,10)"/><text x="6.9727%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.8277%" y="773" width="0.1050%" height="15" fill="rgb(242,107,0)"/><text x="7.0777%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.8277%" y="757" width="0.1050%" height="15" fill="rgb(251,28,31)"/><text x="7.0777%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="6.8277%" y="741" width="0.1050%" height="15" fill="rgb(233,223,10)"/><text x="7.0777%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.8277%" y="725" width="0.1050%" height="15" fill="rgb(215,21,27)"/><text x="7.0777%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.8277%" y="709" width="0.1050%" height="15" fill="rgb(232,23,21)"/><text x="7.0777%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="6.8277%" y="693" width="0.1050%" height="15" fill="rgb(244,5,23)"/><text x="7.0777%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="6.8277%" y="677" width="0.1050%" height="15" fill="rgb(226,81,46)"/><text x="7.0777%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="6.8277%" y="661" width="0.1050%" height="15" fill="rgb(247,70,30)"/><text x="7.0777%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="6.8277%" y="645" width="0.1050%" height="15" fill="rgb(212,68,19)"/><text x="7.0777%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="6.8277%" y="629" width="0.1050%" height="15" fill="rgb(240,187,13)"/><text x="7.0777%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="6.8277%" y="613" width="0.1050%" height="15" fill="rgb(223,113,26)"/><text x="7.0777%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="6.8277%" y="597" width="0.1050%" height="15" fill="rgb(206,192,2)"/><text x="7.0777%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="6.8277%" y="581" width="0.1050%" height="15" fill="rgb(241,108,4)"/><text x="7.0777%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="6.8277%" y="565" width="0.1050%" height="15" fill="rgb(247,173,49)"/><text x="7.0777%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="6.8277%" y="549" width="0.1050%" height="15" fill="rgb(224,114,35)"/><text x="7.0777%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="6.8277%" y="533" width="0.1050%" height="15" fill="rgb(245,159,27)"/><text x="7.0777%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (10 samples, 1.05%)</title><rect x="5.9874%" y="821" width="1.0504%" height="15" fill="rgb(245,172,44)"/><text x="6.2374%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (10 samples, 1.05%)</title><rect x="5.9874%" y="805" width="1.0504%" height="15" fill="rgb(236,23,11)"/><text x="6.2374%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (10 samples, 1.05%)</title><rect x="5.9874%" y="789" width="1.0504%" height="15" fill="rgb(205,117,38)"/><text x="6.2374%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="6.9328%" y="773" width="0.1050%" height="15" fill="rgb(237,72,25)"/><text x="7.1828%" y="783.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="7.0378%" y="773" width="0.1050%" height="15" fill="rgb(244,70,9)"/><text x="7.2878%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="7.0378%" y="757" width="0.1050%" height="15" fill="rgb(217,125,39)"/><text x="7.2878%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (12 samples, 1.26%)</title><rect x="5.9874%" y="853" width="1.2605%" height="15" fill="rgb(235,36,10)"/><text x="6.2374%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (12 samples, 1.26%)</title><rect x="5.9874%" y="837" width="1.2605%" height="15" fill="rgb(251,123,47)"/><text x="6.2374%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.21%)</title><rect x="7.0378%" y="821" width="0.2101%" height="15" fill="rgb(221,13,13)"/><text x="7.2878%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.21%)</title><rect x="7.0378%" y="805" width="0.2101%" height="15" fill="rgb(238,131,9)"/><text x="7.2878%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (2 samples, 0.21%)</title><rect x="7.0378%" y="789" width="0.2101%" height="15" fill="rgb(211,50,8)"/><text x="7.2878%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_string (1 samples, 0.11%)</title><rect x="7.1429%" y="773" width="0.1050%" height="15" fill="rgb(245,182,24)"/><text x="7.3929%" y="783.50"></text></g><g><title>sql_parser::tokenizer::PeekableChars::next (1 samples, 0.11%)</title><rect x="7.1429%" y="757" width="0.1050%" height="15" fill="rgb(242,14,37)"/><text x="7.3929%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="7.2479%" y="853" width="0.1050%" height="15" fill="rgb(246,228,12)"/><text x="7.4979%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="7.3529%" y="853" width="0.1050%" height="15" fill="rgb(213,55,15)"/><text x="7.6029%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="7.4580%" y="853" width="0.1050%" height="15" fill="rgb(209,9,3)"/><text x="7.7080%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="7.5630%" y="853" width="0.1050%" height="15" fill="rgb(230,59,30)"/><text x="7.8130%" y="863.50"></text></g><g><title>[lobsters] (2 samples, 0.21%)</title><rect x="7.6681%" y="853" width="0.2101%" height="15" fill="rgb(209,121,21)"/><text x="7.9181%" y="863.50"></text></g><g><title>mysql_common::value::read_text_value (2 samples, 0.21%)</title><rect x="7.6681%" y="837" width="0.2101%" height="15" fill="rgb(220,109,13)"/><text x="7.9181%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="7.8782%" y="853" width="0.1050%" height="15" fill="rgb(232,18,1)"/><text x="8.1282%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="7.9832%" y="853" width="0.1050%" height="15" fill="rgb(215,41,42)"/><text x="8.2332%" y="863.50"></text></g><g><title>__libc_recv (4 samples, 0.42%)</title><rect x="8.0882%" y="853" width="0.4202%" height="15" fill="rgb(224,123,36)"/><text x="8.3382%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (4 samples, 0.42%)</title><rect x="8.0882%" y="837" width="0.4202%" height="15" fill="rgb(240,125,3)"/><text x="8.3382%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="8.5084%" y="693" width="0.2101%" height="15" fill="rgb(205,98,50)"/><text x="8.7584%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.21%)</title><rect x="8.5084%" y="677" width="0.2101%" height="15" fill="rgb(205,185,37)"/><text x="8.7584%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.21%)</title><rect x="8.5084%" y="661" width="0.2101%" height="15" fill="rgb(238,207,15)"/><text x="8.7584%" y="671.50"></text></g><g><title>mysql_common::value::read_text_values (2 samples, 0.21%)</title><rect x="8.5084%" y="645" width="0.2101%" height="15" fill="rgb(213,199,42)"/><text x="8.7584%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="8.6134%" y="629" width="0.1050%" height="15" fill="rgb(235,201,11)"/><text x="8.8634%" y="639.50"></text></g><g><title>__libc_start_main (4 samples, 0.42%)</title><rect x="8.5084%" y="853" width="0.4202%" height="15" fill="rgb(207,46,11)"/><text x="8.7584%" y="863.50"></text></g><g><title>main (4 samples, 0.42%)</title><rect x="8.5084%" y="837" width="0.4202%" height="15" fill="rgb(241,35,35)"/><text x="8.7584%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.42%)</title><rect x="8.5084%" y="821" width="0.4202%" height="15" fill="rgb(243,32,47)"/><text x="8.7584%" y="831.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.42%)</title><rect x="8.5084%" y="805" width="0.4202%" height="15" fill="rgb(247,202,23)"/><text x="8.7584%" y="815.50"></text></g><g><title>std::panicking::try (4 samples, 0.42%)</title><rect x="8.5084%" y="789" width="0.4202%" height="15" fill="rgb(219,102,11)"/><text x="8.7584%" y="799.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.42%)</title><rect x="8.5084%" y="773" width="0.4202%" height="15" fill="rgb(243,110,44)"/><text x="8.7584%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.42%)</title><rect x="8.5084%" y="757" width="0.4202%" height="15" fill="rgb(222,74,54)"/><text x="8.7584%" y="767.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.42%)</title><rect x="8.5084%" y="741" width="0.4202%" height="15" fill="rgb(216,99,12)"/><text x="8.7584%" y="751.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.42%)</title><rect x="8.5084%" y="725" width="0.4202%" height="15" fill="rgb(226,22,26)"/><text x="8.7584%" y="735.50"></text></g><g><title>lobsters::main (4 samples, 0.42%)</title><rect x="8.5084%" y="709" width="0.4202%" height="15" fill="rgb(217,163,10)"/><text x="8.7584%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="8.7185%" y="693" width="0.2101%" height="15" fill="rgb(213,25,53)"/><text x="8.9685%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="8.7185%" y="677" width="0.2101%" height="15" fill="rgb(252,105,26)"/><text x="8.9685%" y="687.50"></text></g><g><title>mysql_common::packets::column_from_payload (2 samples, 0.21%)</title><rect x="8.7185%" y="661" width="0.2101%" height="15" fill="rgb(220,39,43)"/><text x="8.9685%" y="671.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="8.8235%" y="645" width="0.1050%" height="15" fill="rgb(229,68,48)"/><text x="9.0735%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="8.9286%" y="853" width="0.1050%" height="15" fill="rgb(252,8,32)"/><text x="9.1786%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="8.9286%" y="837" width="0.1050%" height="15" fill="rgb(223,20,43)"/><text x="9.1786%" y="847.50"></text></g><g><title>__rdl_realloc (1 samples, 0.11%)</title><rect x="9.0336%" y="853" width="0.1050%" height="15" fill="rgb(229,81,49)"/><text x="9.2836%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.11%)</title><rect x="9.0336%" y="837" width="0.1050%" height="15" fill="rgb(236,28,36)"/><text x="9.2836%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.42%)</title><rect x="9.1387%" y="853" width="0.4202%" height="15" fill="rgb(249,185,26)"/><text x="9.3887%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="9.5588%" y="853" width="0.2101%" height="15" fill="rgb(249,174,33)"/><text x="9.8088%" y="863.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="9.7689%" y="853" width="0.1050%" height="15" fill="rgb(233,201,37)"/><text x="10.0189%" y="863.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="10.1891%" y="501" width="0.1050%" height="15" fill="rgb(221,78,26)"/><text x="10.4391%" y="511.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="10.2941%" y="501" width="0.1050%" height="15" fill="rgb(250,127,30)"/><text x="10.5441%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="10.2941%" y="485" width="0.1050%" height="15" fill="rgb(230,49,44)"/><text x="10.5441%" y="495.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="10.3992%" y="485" width="0.1050%" height="15" fill="rgb(229,67,23)"/><text x="10.6492%" y="495.50"></text></g><g><title>remove_wait_queue (2 samples, 0.21%)</title><rect x="10.5042%" y="485" width="0.2101%" height="15" fill="rgb(249,83,47)"/><text x="10.7542%" y="495.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.21%)</title><rect x="10.5042%" y="469" width="0.2101%" height="15" fill="rgb(215,43,3)"/><text x="10.7542%" y="479.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="10.6092%" y="453" width="0.1050%" height="15" fill="rgb(238,154,13)"/><text x="10.8592%" y="463.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="10.6092%" y="437" width="0.1050%" height="15" fill="rgb(219,56,2)"/><text x="10.8592%" y="447.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="10.8193%" y="405" width="0.1050%" height="15" fill="rgb(233,0,4)"/><text x="11.0693%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.32%)</title><rect x="10.8193%" y="421" width="0.3151%" height="15" fill="rgb(235,30,7)"/><text x="11.0693%" y="431.50"></text></g><g><title>ctx_sched_out (2 samples, 0.21%)</title><rect x="10.9244%" y="405" width="0.2101%" height="15" fill="rgb(250,79,13)"/><text x="11.1744%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="11.0294%" y="389" width="0.1050%" height="15" fill="rgb(211,146,34)"/><text x="11.2794%" y="399.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="11.2395%" y="389" width="0.1050%" height="15" fill="rgb(228,22,38)"/><text x="11.4895%" y="399.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="11.5546%" y="373" width="0.1050%" height="15" fill="rgb(235,168,5)"/><text x="11.8046%" y="383.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.11%)</title><rect x="11.5546%" y="357" width="0.1050%" height="15" fill="rgb(221,155,16)"/><text x="11.8046%" y="367.50"></text></g><g><title>update_curr (4 samples, 0.42%)</title><rect x="11.3445%" y="389" width="0.4202%" height="15" fill="rgb(215,215,53)"/><text x="11.5945%" y="399.50"></text></g><g><title>update_min_vruntime (1 samples, 0.11%)</title><rect x="11.6597%" y="373" width="0.1050%" height="15" fill="rgb(223,4,10)"/><text x="11.9097%" y="383.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.74%)</title><rect x="11.1345%" y="421" width="0.7353%" height="15" fill="rgb(234,103,6)"/><text x="11.3845%" y="431.50"></text></g><g><title>dequeue_entity (7 samples, 0.74%)</title><rect x="11.1345%" y="405" width="0.7353%" height="15" fill="rgb(227,97,0)"/><text x="11.3845%" y="415.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="11.7647%" y="389" width="0.1050%" height="15" fill="rgb(234,150,53)"/><text x="12.0147%" y="399.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="11.7647%" y="373" width="0.1050%" height="15" fill="rgb(228,201,54)"/><text x="12.0147%" y="383.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="11.8697%" y="421" width="0.1050%" height="15" fill="rgb(222,22,37)"/><text x="12.1197%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="11.8697%" y="405" width="0.1050%" height="15" fill="rgb(237,53,32)"/><text x="12.1197%" y="415.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.11%)</title><rect x="11.8697%" y="389" width="0.1050%" height="15" fill="rgb(233,25,53)"/><text x="12.1197%" y="399.50"></text></g><g><title>native_write_msr (1 samples, 0.11%)</title><rect x="11.8697%" y="373" width="0.1050%" height="15" fill="rgb(210,40,34)"/><text x="12.1197%" y="383.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.11%)</title><rect x="11.9748%" y="421" width="0.1050%" height="15" fill="rgb(241,220,44)"/><text x="12.2248%" y="431.50"></text></g><g><title>psi_flags_change (1 samples, 0.11%)</title><rect x="12.0798%" y="405" width="0.1050%" height="15" fill="rgb(235,28,35)"/><text x="12.3298%" y="415.50"></text></g><g><title>psi_task_change (3 samples, 0.32%)</title><rect x="12.0798%" y="421" width="0.3151%" height="15" fill="rgb(210,56,17)"/><text x="12.3298%" y="431.50"></text></g><g><title>psi_group_change (2 samples, 0.21%)</title><rect x="12.1849%" y="405" width="0.2101%" height="15" fill="rgb(224,130,29)"/><text x="12.4349%" y="415.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="12.3950%" y="421" width="0.1050%" height="15" fill="rgb(235,212,8)"/><text x="12.6450%" y="431.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="12.3950%" y="405" width="0.1050%" height="15" fill="rgb(223,33,50)"/><text x="12.6450%" y="415.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="12.5000%" y="421" width="0.1050%" height="15" fill="rgb(219,149,13)"/><text x="12.7500%" y="431.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="12.6050%" y="405" width="0.1050%" height="15" fill="rgb(250,156,29)"/><text x="12.8550%" y="415.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="12.6050%" y="389" width="0.1050%" height="15" fill="rgb(216,193,19)"/><text x="12.8550%" y="399.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="12.6050%" y="373" width="0.1050%" height="15" fill="rgb(216,135,14)"/><text x="12.8550%" y="383.50"></text></g><g><title>sk_wait_data (23 samples, 2.42%)</title><rect x="10.3992%" y="501" width="2.4160%" height="15" fill="rgb(241,47,5)"/><text x="10.6492%" y="511.50">sk..</text></g><g><title>wait_woken (20 samples, 2.10%)</title><rect x="10.7143%" y="485" width="2.1008%" height="15" fill="rgb(233,42,35)"/><text x="10.9643%" y="495.50">w..</text></g><g><title>schedule_timeout (19 samples, 2.00%)</title><rect x="10.8193%" y="469" width="1.9958%" height="15" fill="rgb(231,13,6)"/><text x="11.0693%" y="479.50">s..</text></g><g><title>schedule (19 samples, 2.00%)</title><rect x="10.8193%" y="453" width="1.9958%" height="15" fill="rgb(207,181,40)"/><text x="11.0693%" y="463.50">s..</text></g><g><title>__schedule (19 samples, 2.00%)</title><rect x="10.8193%" y="437" width="1.9958%" height="15" fill="rgb(254,173,49)"/><text x="11.0693%" y="447.50">_..</text></g><g><title>update_rq_clock (2 samples, 0.21%)</title><rect x="12.6050%" y="421" width="0.2101%" height="15" fill="rgb(221,1,38)"/><text x="12.8550%" y="431.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.11%)</title><rect x="12.7101%" y="405" width="0.1050%" height="15" fill="rgb(206,124,46)"/><text x="12.9601%" y="415.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.32%)</title><rect x="12.8151%" y="501" width="0.3151%" height="15" fill="rgb(249,21,11)"/><text x="13.0651%" y="511.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.32%)</title><rect x="12.8151%" y="485" width="0.3151%" height="15" fill="rgb(222,201,40)"/><text x="13.0651%" y="495.50"></text></g><g><title>_copy_to_iter (2 samples, 0.21%)</title><rect x="12.9202%" y="469" width="0.2101%" height="15" fill="rgb(235,61,29)"/><text x="13.1702%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="13.0252%" y="453" width="0.1050%" height="15" fill="rgb(219,207,3)"/><text x="13.2752%" y="463.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="13.0252%" y="437" width="0.1050%" height="15" fill="rgb(222,56,46)"/><text x="13.2752%" y="447.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="13.0252%" y="421" width="0.1050%" height="15" fill="rgb(239,76,54)"/><text x="13.2752%" y="431.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="13.0252%" y="405" width="0.1050%" height="15" fill="rgb(231,124,27)"/><text x="13.2752%" y="415.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="13.0252%" y="389" width="0.1050%" height="15" fill="rgb(249,195,6)"/><text x="13.2752%" y="399.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="13.0252%" y="373" width="0.1050%" height="15" fill="rgb(237,174,47)"/><text x="13.2752%" y="383.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="13.0252%" y="357" width="0.1050%" height="15" fill="rgb(206,201,31)"/><text x="13.2752%" y="367.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="13.0252%" y="341" width="0.1050%" height="15" fill="rgb(231,57,52)"/><text x="13.2752%" y="351.50"></text></g><g><title>__inc_numa_state (1 samples, 0.11%)</title><rect x="13.0252%" y="325" width="0.1050%" height="15" fill="rgb(248,177,22)"/><text x="13.2752%" y="335.50"></text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="13.1303%" y="501" width="0.1050%" height="15" fill="rgb(215,211,37)"/><text x="13.3803%" y="511.50"></text></g><g><title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="13.2353%" y="501" width="0.1050%" height="15" fill="rgb(241,128,51)"/><text x="13.4853%" y="511.50"></text></g><g><title>inet_recvmsg (31 samples, 3.26%)</title><rect x="10.1891%" y="533" width="3.2563%" height="15" fill="rgb(227,165,31)"/><text x="10.4391%" y="543.50">ine..</text></g><g><title>tcp_recvmsg (31 samples, 3.26%)</title><rect x="10.1891%" y="517" width="3.2563%" height="15" fill="rgb(228,167,24)"/><text x="10.4391%" y="527.50">tcp..</text></g><g><title>tcp_recv_timestamp (1 samples, 0.11%)</title><rect x="13.3403%" y="501" width="0.1050%" height="15" fill="rgb(228,143,12)"/><text x="13.5903%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (33 samples, 3.47%)</title><rect x="10.0840%" y="565" width="3.4664%" height="15" fill="rgb(249,149,8)"/><text x="10.3340%" y="575.50">__x..</text></g><g><title>__sys_recvfrom (32 samples, 3.36%)</title><rect x="10.1891%" y="549" width="3.3613%" height="15" fill="rgb(243,35,44)"/><text x="10.4391%" y="559.50">__s..</text></g><g><title>sock_recvmsg (1 samples, 0.11%)</title><rect x="13.4454%" y="533" width="0.1050%" height="15" fill="rgb(246,89,9)"/><text x="13.6954%" y="543.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.11%)</title><rect x="13.4454%" y="517" width="0.1050%" height="15" fill="rgb(233,213,13)"/><text x="13.6954%" y="527.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="13.7605%" y="533" width="0.1050%" height="15" fill="rgb(233,141,41)"/><text x="14.0105%" y="543.50"></text></g><g><title>do_syscall_64 (38 samples, 3.99%)</title><rect x="9.9790%" y="581" width="3.9916%" height="15" fill="rgb(239,167,4)"/><text x="10.2290%" y="591.50">do_s..</text></g><g><title>syscall_slow_exit_work (4 samples, 0.42%)</title><rect x="13.5504%" y="565" width="0.4202%" height="15" fill="rgb(209,217,16)"/><text x="13.8004%" y="575.50"></text></g><g><title>__audit_syscall_exit (3 samples, 0.32%)</title><rect x="13.6555%" y="549" width="0.3151%" height="15" fill="rgb(219,88,35)"/><text x="13.9055%" y="559.50"></text></g><g><title>mntput (1 samples, 0.11%)</title><rect x="13.8655%" y="533" width="0.1050%" height="15" fill="rgb(220,193,23)"/><text x="14.1155%" y="543.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (46 samples, 4.83%)</title><rect x="9.8739%" y="773" width="4.8319%" height="15" fill="rgb(230,90,52)"/><text x="10.1239%" y="783.50">&lt;mysql..</text></g><g><title>mysql::conn::Conn::_query (46 samples, 4.83%)</title><rect x="9.8739%" y="757" width="4.8319%" height="15" fill="rgb(252,106,19)"/><text x="10.1239%" y="767.50">mysql:..</text></g><g><title>mysql::conn::Conn::handle_result_set (46 samples, 4.83%)</title><rect x="9.8739%" y="741" width="4.8319%" height="15" fill="rgb(206,74,20)"/><text x="10.1239%" y="751.50">mysql:..</text></g><g><title>mysql::conn::Conn::read_packet (46 samples, 4.83%)</title><rect x="9.8739%" y="725" width="4.8319%" height="15" fill="rgb(230,138,44)"/><text x="10.1239%" y="735.50">mysql:..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 4.83%)</title><rect x="9.8739%" y="709" width="4.8319%" height="15" fill="rgb(235,182,43)"/><text x="10.1239%" y="719.50">&lt;mysql..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (46 samples, 4.83%)</title><rect x="9.8739%" y="693" width="4.8319%" height="15" fill="rgb(242,16,51)"/><text x="10.1239%" y="703.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (46 samples, 4.83%)</title><rect x="9.8739%" y="677" width="4.8319%" height="15" fill="rgb(248,9,4)"/><text x="10.1239%" y="687.50">&lt;std::..</text></g><g><title>std::sys_common::net::TcpStream::read (46 samples, 4.83%)</title><rect x="9.8739%" y="661" width="4.8319%" height="15" fill="rgb(210,31,22)"/><text x="10.1239%" y="671.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::read (46 samples, 4.83%)</title><rect x="9.8739%" y="645" width="4.8319%" height="15" fill="rgb(239,54,39)"/><text x="10.1239%" y="655.50">std::s..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (46 samples, 4.83%)</title><rect x="9.8739%" y="629" width="4.8319%" height="15" fill="rgb(230,99,41)"/><text x="10.1239%" y="639.50">std::s..</text></g><g><title>__libc_recv (46 samples, 4.83%)</title><rect x="9.8739%" y="613" width="4.8319%" height="15" fill="rgb(253,106,12)"/><text x="10.1239%" y="623.50">__libc..</text></g><g><title>entry_SYSCALL_64 (45 samples, 4.73%)</title><rect x="9.9790%" y="597" width="4.7269%" height="15" fill="rgb(213,46,41)"/><text x="10.2290%" y="607.50">entry_..</text></g><g><title>prepare_exit_to_usermode (7 samples, 0.74%)</title><rect x="13.9706%" y="581" width="0.7353%" height="15" fill="rgb(215,133,35)"/><text x="14.2206%" y="591.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="14.6008%" y="565" width="0.1050%" height="15" fill="rgb(213,28,5)"/><text x="14.8508%" y="575.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.21%)</title><rect x="14.7059%" y="709" width="0.2101%" height="15" fill="rgb(215,77,49)"/><text x="14.9559%" y="719.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="14.8109%" y="693" width="0.1050%" height="15" fill="rgb(248,100,22)"/><text x="15.0609%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (49 samples, 5.15%)</title><rect x="9.8739%" y="853" width="5.1471%" height="15" fill="rgb(208,67,9)"/><text x="10.1239%" y="863.50">core::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (49 samples, 5.15%)</title><rect x="9.8739%" y="837" width="5.1471%" height="15" fill="rgb(219,133,21)"/><text x="10.1239%" y="847.50">std::s..</text></g><g><title>decor::Shim::run_on_tcp (49 samples, 5.15%)</title><rect x="9.8739%" y="821" width="5.1471%" height="15" fill="rgb(246,46,29)"/><text x="10.1239%" y="831.50">decor:..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (49 samples, 5.15%)</title><rect x="9.8739%" y="805" width="5.1471%" height="15" fill="rgb(246,185,52)"/><text x="10.1239%" y="815.50">msql_s..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (49 samples, 5.15%)</title><rect x="9.8739%" y="789" width="5.1471%" height="15" fill="rgb(252,136,11)"/><text x="10.1239%" y="799.50">&lt;decor..</text></g><g><title>decor::answer_rows (3 samples, 0.32%)</title><rect x="14.7059%" y="773" width="0.3151%" height="15" fill="rgb(219,138,53)"/><text x="14.9559%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.32%)</title><rect x="14.7059%" y="757" width="0.3151%" height="15" fill="rgb(211,51,23)"/><text x="14.9559%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.32%)</title><rect x="14.7059%" y="741" width="0.3151%" height="15" fill="rgb(247,221,28)"/><text x="14.9559%" y="751.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.32%)</title><rect x="14.7059%" y="725" width="0.3151%" height="15" fill="rgb(251,222,45)"/><text x="14.9559%" y="735.50"></text></g><g><title>mysql_common::packets::parse_ok_packet (1 samples, 0.11%)</title><rect x="14.9160%" y="709" width="0.1050%" height="15" fill="rgb(217,162,53)"/><text x="15.1660%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.0210%" y="853" width="0.1050%" height="15" fill="rgb(229,93,14)"/><text x="15.2710%" y="863.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="15.1261%" y="853" width="0.1050%" height="15" fill="rgb(209,67,49)"/><text x="15.3761%" y="863.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="15.1261%" y="837" width="0.1050%" height="15" fill="rgb(213,87,29)"/><text x="15.3761%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="15.1261%" y="821" width="0.1050%" height="15" fill="rgb(205,151,52)"/><text x="15.3761%" y="831.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.11%)</title><rect x="15.1261%" y="805" width="0.1050%" height="15" fill="rgb(253,215,39)"/><text x="15.3761%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="15.1261%" y="789" width="0.1050%" height="15" fill="rgb(221,220,41)"/><text x="15.3761%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize_word (1 samples, 0.11%)</title><rect x="15.1261%" y="773" width="0.1050%" height="15" fill="rgb(218,133,21)"/><text x="15.3761%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="15.1261%" y="757" width="0.1050%" height="15" fill="rgb(221,193,43)"/><text x="15.3761%" y="767.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="15.1261%" y="741" width="0.1050%" height="15" fill="rgb(240,128,52)"/><text x="15.3761%" y="751.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="15.1261%" y="725" width="0.1050%" height="15" fill="rgb(253,114,12)"/><text x="15.3761%" y="735.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.11%)</title><rect x="15.2311%" y="645" width="0.1050%" height="15" fill="rgb(215,223,47)"/><text x="15.4811%" y="655.50"></text></g><g><title>decor::answer_rows (2 samples, 0.21%)</title><rect x="15.2311%" y="805" width="0.2101%" height="15" fill="rgb(248,225,23)"/><text x="15.4811%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="15.2311%" y="789" width="0.2101%" height="15" fill="rgb(250,108,0)"/><text x="15.4811%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.21%)</title><rect x="15.2311%" y="773" width="0.2101%" height="15" fill="rgb(228,208,7)"/><text x="15.4811%" y="783.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.21%)</title><rect x="15.2311%" y="757" width="0.2101%" height="15" fill="rgb(244,45,10)"/><text x="15.4811%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.21%)</title><rect x="15.2311%" y="741" width="0.2101%" height="15" fill="rgb(207,125,25)"/><text x="15.4811%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="15.2311%" y="725" width="0.2101%" height="15" fill="rgb(210,195,18)"/><text x="15.4811%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.21%)</title><rect x="15.2311%" y="709" width="0.2101%" height="15" fill="rgb(249,80,12)"/><text x="15.4811%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.21%)</title><rect x="15.2311%" y="693" width="0.2101%" height="15" fill="rgb(221,65,9)"/><text x="15.4811%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="15.2311%" y="677" width="0.2101%" height="15" fill="rgb(235,49,36)"/><text x="15.4811%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="15.2311%" y="661" width="0.2101%" height="15" fill="rgb(225,32,20)"/><text x="15.4811%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="15.3361%" y="645" width="0.1050%" height="15" fill="rgb(215,141,46)"/><text x="15.5861%" y="655.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.32%)</title><rect x="15.2311%" y="853" width="0.3151%" height="15" fill="rgb(250,160,47)"/><text x="15.4811%" y="863.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.32%)</title><rect x="15.2311%" y="837" width="0.3151%" height="15" fill="rgb(216,222,40)"/><text x="15.4811%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.32%)</title><rect x="15.2311%" y="821" width="0.3151%" height="15" fill="rgb(234,217,39)"/><text x="15.4811%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="15.4412%" y="805" width="0.1050%" height="15" fill="rgb(207,178,40)"/><text x="15.6912%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.4412%" y="789" width="0.1050%" height="15" fill="rgb(221,136,13)"/><text x="15.6912%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.4412%" y="773" width="0.1050%" height="15" fill="rgb(249,199,10)"/><text x="15.6912%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.4412%" y="757" width="0.1050%" height="15" fill="rgb(249,222,13)"/><text x="15.6912%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="15.4412%" y="741" width="0.1050%" height="15" fill="rgb(244,185,38)"/><text x="15.6912%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.4412%" y="725" width="0.1050%" height="15" fill="rgb(236,202,9)"/><text x="15.6912%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.4412%" y="709" width="0.1050%" height="15" fill="rgb(250,229,37)"/><text x="15.6912%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="15.6513%" y="805" width="0.1050%" height="15" fill="rgb(206,174,23)"/><text x="15.9013%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="15.7563%" y="805" width="0.1050%" height="15" fill="rgb(211,33,43)"/><text x="16.0063%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="15.7563%" y="789" width="0.1050%" height="15" fill="rgb(245,58,50)"/><text x="16.0063%" y="799.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.42%)</title><rect x="15.5462%" y="853" width="0.4202%" height="15" fill="rgb(244,68,36)"/><text x="15.7962%" y="863.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.42%)</title><rect x="15.5462%" y="837" width="0.4202%" height="15" fill="rgb(232,229,15)"/><text x="15.7962%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.42%)</title><rect x="15.5462%" y="821" width="0.4202%" height="15" fill="rgb(254,30,23)"/><text x="15.7962%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.11%)</title><rect x="15.8613%" y="805" width="0.1050%" height="15" fill="rgb(235,160,14)"/><text x="16.1113%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.32%)</title><rect x="15.9664%" y="837" width="0.3151%" height="15" fill="rgb(212,155,44)"/><text x="16.2164%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.32%)</title><rect x="15.9664%" y="821" width="0.3151%" height="15" fill="rgb(226,2,50)"/><text x="16.2164%" y="831.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.32%)</title><rect x="15.9664%" y="805" width="0.3151%" height="15" fill="rgb(234,177,6)"/><text x="16.2164%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.32%)</title><rect x="15.9664%" y="789" width="0.3151%" height="15" fill="rgb(217,24,9)"/><text x="16.2164%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.32%)</title><rect x="15.9664%" y="773" width="0.3151%" height="15" fill="rgb(220,13,46)"/><text x="16.2164%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.32%)</title><rect x="15.9664%" y="757" width="0.3151%" height="15" fill="rgb(239,221,27)"/><text x="16.2164%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.32%)</title><rect x="15.9664%" y="741" width="0.3151%" height="15" fill="rgb(222,198,25)"/><text x="16.2164%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.32%)</title><rect x="15.9664%" y="725" width="0.3151%" height="15" fill="rgb(211,99,13)"/><text x="16.2164%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.32%)</title><rect x="15.9664%" y="709" width="0.3151%" height="15" fill="rgb(232,111,31)"/><text x="16.2164%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="16.1765%" y="693" width="0.1050%" height="15" fill="rgb(245,82,37)"/><text x="16.4265%" y="703.50"></text></g><g><title>lobsters::main (4 samples, 0.42%)</title><rect x="15.9664%" y="853" width="0.4202%" height="15" fill="rgb(227,149,46)"/><text x="16.2164%" y="863.50"></text></g><g><title>hwloc::Topology::new (1 samples, 0.11%)</title><rect x="16.2815%" y="837" width="0.1050%" height="15" fill="rgb(218,36,50)"/><text x="16.5315%" y="847.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="16.2815%" y="821" width="0.1050%" height="15" fill="rgb(226,80,48)"/><text x="16.5315%" y="831.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="16.2815%" y="805" width="0.1050%" height="15" fill="rgb(238,224,15)"/><text x="16.5315%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="16.2815%" y="789" width="0.1050%" height="15" fill="rgb(241,136,10)"/><text x="16.5315%" y="799.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="16.2815%" y="773" width="0.1050%" height="15" fill="rgb(208,32,45)"/><text x="16.5315%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="16.2815%" y="757" width="0.1050%" height="15" fill="rgb(207,135,9)"/><text x="16.5315%" y="767.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="16.2815%" y="741" width="0.1050%" height="15" fill="rgb(206,86,44)"/><text x="16.5315%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="16.2815%" y="725" width="0.1050%" height="15" fill="rgb(245,177,15)"/><text x="16.5315%" y="735.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="16.2815%" y="709" width="0.1050%" height="15" fill="rgb(206,64,50)"/><text x="16.5315%" y="719.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="16.2815%" y="693" width="0.1050%" height="15" fill="rgb(234,36,40)"/><text x="16.5315%" y="703.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="16.2815%" y="677" width="0.1050%" height="15" fill="rgb(213,64,8)"/><text x="16.5315%" y="687.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="16.2815%" y="661" width="0.1050%" height="15" fill="rgb(210,75,36)"/><text x="16.5315%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="16.2815%" y="645" width="0.1050%" height="15" fill="rgb(229,88,21)"/><text x="16.5315%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.11%)</title><rect x="16.2815%" y="629" width="0.1050%" height="15" fill="rgb(252,204,47)"/><text x="16.5315%" y="639.50"></text></g><g><title>do_lookup_x (1 samples, 0.11%)</title><rect x="16.2815%" y="613" width="0.1050%" height="15" fill="rgb(208,77,27)"/><text x="16.5315%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="16.3866%" y="789" width="0.2101%" height="15" fill="rgb(221,76,26)"/><text x="16.6366%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="16.4916%" y="773" width="0.1050%" height="15" fill="rgb(225,139,18)"/><text x="16.7416%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="16.3866%" y="805" width="0.3151%" height="15" fill="rgb(230,137,11)"/><text x="16.6366%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="16.5966%" y="789" width="0.1050%" height="15" fill="rgb(212,28,1)"/><text x="16.8466%" y="799.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.42%)</title><rect x="16.3866%" y="853" width="0.4202%" height="15" fill="rgb(248,164,17)"/><text x="16.6366%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.42%)</title><rect x="16.3866%" y="837" width="0.4202%" height="15" fill="rgb(222,171,42)"/><text x="16.6366%" y="847.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (4 samples, 0.42%)</title><rect x="16.3866%" y="821" width="0.4202%" height="15" fill="rgb(243,84,45)"/><text x="16.6366%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="16.7017%" y="805" width="0.1050%" height="15" fill="rgb(252,49,23)"/><text x="16.9517%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.11%)</title><rect x="16.7017%" y="789" width="0.1050%" height="15" fill="rgb(215,19,7)"/><text x="16.9517%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="16.7017%" y="773" width="0.1050%" height="15" fill="rgb(238,81,41)"/><text x="16.9517%" y="783.50"></text></g><g><title>mysql_common::packets::Column::table_str (1 samples, 0.11%)</title><rect x="16.8067%" y="853" width="0.1050%" height="15" fill="rgb(210,199,37)"/><text x="17.0567%" y="863.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="16.9118%" y="853" width="0.1050%" height="15" fill="rgb(244,192,49)"/><text x="17.1618%" y="863.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="17.0168%" y="853" width="0.1050%" height="15" fill="rgb(226,211,11)"/><text x="17.2668%" y="863.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="17.1218%" y="853" width="0.1050%" height="15" fill="rgb(236,162,54)"/><text x="17.3718%" y="863.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="17.1218%" y="837" width="0.1050%" height="15" fill="rgb(220,229,9)"/><text x="17.3718%" y="847.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.11%)</title><rect x="17.1218%" y="821" width="0.1050%" height="15" fill="rgb(250,87,22)"/><text x="17.3718%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.11%)</title><rect x="17.1218%" y="805" width="0.1050%" height="15" fill="rgb(239,43,17)"/><text x="17.3718%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.11%)</title><rect x="17.1218%" y="789" width="0.1050%" height="15" fill="rgb(231,177,25)"/><text x="17.3718%" y="799.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.11%)</title><rect x="17.1218%" y="773" width="0.1050%" height="15" fill="rgb(219,179,1)"/><text x="17.3718%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="17.2269%" y="773" width="0.1050%" height="15" fill="rgb(238,219,53)"/><text x="17.4769%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (16 samples, 1.68%)</title><rect x="17.2269%" y="821" width="1.6807%" height="15" fill="rgb(232,167,36)"/><text x="17.4769%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.68%)</title><rect x="17.2269%" y="805" width="1.6807%" height="15" fill="rgb(244,19,51)"/><text x="17.4769%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (16 samples, 1.68%)</title><rect x="17.2269%" y="789" width="1.6807%" height="15" fill="rgb(224,6,22)"/><text x="17.4769%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (15 samples, 1.58%)</title><rect x="17.3319%" y="773" width="1.5756%" height="15" fill="rgb(224,145,5)"/><text x="17.5819%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::expected (15 samples, 1.58%)</title><rect x="17.3319%" y="757" width="1.5756%" height="15" fill="rgb(234,130,49)"/><text x="17.5819%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 1.58%)</title><rect x="17.3319%" y="741" width="1.5756%" height="15" fill="rgb(254,6,2)"/><text x="17.5819%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 1.58%)</title><rect x="17.3319%" y="725" width="1.5756%" height="15" fill="rgb(208,96,46)"/><text x="17.5819%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 1.58%)</title><rect x="17.3319%" y="709" width="1.5756%" height="15" fill="rgb(239,3,39)"/><text x="17.5819%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 1.58%)</title><rect x="17.3319%" y="693" width="1.5756%" height="15" fill="rgb(233,210,1)"/><text x="17.5819%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (15 samples, 1.58%)</title><rect x="17.3319%" y="677" width="1.5756%" height="15" fill="rgb(244,137,37)"/><text x="17.5819%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 1.58%)</title><rect x="17.3319%" y="661" width="1.5756%" height="15" fill="rgb(240,136,2)"/><text x="17.5819%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (15 samples, 1.58%)</title><rect x="17.3319%" y="645" width="1.5756%" height="15" fill="rgb(239,18,37)"/><text x="17.5819%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 1.58%)</title><rect x="17.3319%" y="629" width="1.5756%" height="15" fill="rgb(218,185,22)"/><text x="17.5819%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 1.58%)</title><rect x="17.3319%" y="613" width="1.5756%" height="15" fill="rgb(225,218,4)"/><text x="17.5819%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.79%)</title><rect x="17.2269%" y="853" width="1.7857%" height="15" fill="rgb(230,182,32)"/><text x="17.4769%" y="863.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (17 samples, 1.79%)</title><rect x="17.2269%" y="837" width="1.7857%" height="15" fill="rgb(242,56,43)"/><text x="17.4769%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_select (1 samples, 0.11%)</title><rect x="18.9076%" y="821" width="0.1050%" height="15" fill="rgb(233,99,24)"/><text x="19.1576%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (1 samples, 0.11%)</title><rect x="18.9076%" y="805" width="0.1050%" height="15" fill="rgb(234,209,42)"/><text x="19.1576%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_factor (1 samples, 0.11%)</title><rect x="18.9076%" y="789" width="0.1050%" height="15" fill="rgb(227,7,12)"/><text x="19.1576%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.11%)</title><rect x="18.9076%" y="773" width="0.1050%" height="15" fill="rgb(245,203,43)"/><text x="19.1576%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.11%)</title><rect x="18.9076%" y="757" width="0.1050%" height="15" fill="rgb(238,205,33)"/><text x="19.1576%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.11%)</title><rect x="18.9076%" y="741" width="0.1050%" height="15" fill="rgb(231,56,7)"/><text x="19.1576%" y="751.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="18.9076%" y="725" width="0.1050%" height="15" fill="rgb(244,186,29)"/><text x="19.1576%" y="735.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="18.9076%" y="709" width="0.1050%" height="15" fill="rgb(234,111,31)"/><text x="19.1576%" y="719.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="18.9076%" y="693" width="0.1050%" height="15" fill="rgb(241,149,10)"/><text x="19.1576%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="18.9076%" y="677" width="0.1050%" height="15" fill="rgb(249,206,44)"/><text x="19.1576%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.11%)</title><rect x="18.9076%" y="661" width="0.1050%" height="15" fill="rgb(251,153,30)"/><text x="19.1576%" y="671.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="19.0126%" y="437" width="0.1050%" height="15" fill="rgb(239,152,38)"/><text x="19.2626%" y="447.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="19.0126%" y="421" width="0.1050%" height="15" fill="rgb(249,139,47)"/><text x="19.2626%" y="431.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="19.0126%" y="405" width="0.1050%" height="15" fill="rgb(244,64,35)"/><text x="19.2626%" y="415.50"></text></g><g><title>__GI___mprotect (2 samples, 0.21%)</title><rect x="19.0126%" y="533" width="0.2101%" height="15" fill="rgb(216,46,15)"/><text x="19.2626%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="19.0126%" y="517" width="0.2101%" height="15" fill="rgb(250,74,19)"/><text x="19.2626%" y="527.50"></text></g><g><title>do_syscall_64 (2 samples, 0.21%)</title><rect x="19.0126%" y="501" width="0.2101%" height="15" fill="rgb(249,42,33)"/><text x="19.2626%" y="511.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.21%)</title><rect x="19.0126%" y="485" width="0.2101%" height="15" fill="rgb(242,149,17)"/><text x="19.2626%" y="495.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.21%)</title><rect x="19.0126%" y="469" width="0.2101%" height="15" fill="rgb(244,29,21)"/><text x="19.2626%" y="479.50"></text></g><g><title>mprotect_fixup (2 samples, 0.21%)</title><rect x="19.0126%" y="453" width="0.2101%" height="15" fill="rgb(220,130,37)"/><text x="19.2626%" y="463.50"></text></g><g><title>vma_merge (1 samples, 0.11%)</title><rect x="19.1176%" y="437" width="0.1050%" height="15" fill="rgb(211,67,2)"/><text x="19.3676%" y="447.50"></text></g><g><title>__vma_adjust (1 samples, 0.11%)</title><rect x="19.1176%" y="421" width="0.1050%" height="15" fill="rgb(235,68,52)"/><text x="19.3676%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="19.0126%" y="757" width="0.3151%" height="15" fill="rgb(246,142,3)"/><text x="19.2626%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="19.0126%" y="741" width="0.3151%" height="15" fill="rgb(241,25,7)"/><text x="19.2626%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.32%)</title><rect x="19.0126%" y="725" width="0.3151%" height="15" fill="rgb(242,119,39)"/><text x="19.2626%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.32%)</title><rect x="19.0126%" y="709" width="0.3151%" height="15" fill="rgb(241,98,45)"/><text x="19.2626%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.32%)</title><rect x="19.0126%" y="693" width="0.3151%" height="15" fill="rgb(254,28,30)"/><text x="19.2626%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.32%)</title><rect x="19.0126%" y="677" width="0.3151%" height="15" fill="rgb(241,142,54)"/><text x="19.2626%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.32%)</title><rect x="19.0126%" y="661" width="0.3151%" height="15" fill="rgb(222,85,15)"/><text x="19.2626%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.32%)</title><rect x="19.0126%" y="645" width="0.3151%" height="15" fill="rgb(210,85,47)"/><text x="19.2626%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.32%)</title><rect x="19.0126%" y="629" width="0.3151%" height="15" fill="rgb(224,206,25)"/><text x="19.2626%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.32%)</title><rect x="19.0126%" y="613" width="0.3151%" height="15" fill="rgb(243,201,19)"/><text x="19.2626%" y="623.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.32%)</title><rect x="19.0126%" y="597" width="0.3151%" height="15" fill="rgb(236,59,4)"/><text x="19.2626%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="19.0126%" y="581" width="0.3151%" height="15" fill="rgb(254,179,45)"/><text x="19.2626%" y="591.50"></text></g><g><title>_int_malloc (3 samples, 0.32%)</title><rect x="19.0126%" y="565" width="0.3151%" height="15" fill="rgb(226,14,10)"/><text x="19.2626%" y="575.50"></text></g><g><title>sysmalloc (3 samples, 0.32%)</title><rect x="19.0126%" y="549" width="0.3151%" height="15" fill="rgb(244,27,41)"/><text x="19.2626%" y="559.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="19.2227%" y="533" width="0.1050%" height="15" fill="rgb(235,35,32)"/><text x="19.4727%" y="543.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="19.2227%" y="517" width="0.1050%" height="15" fill="rgb(218,68,31)"/><text x="19.4727%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="19.2227%" y="501" width="0.1050%" height="15" fill="rgb(207,120,37)"/><text x="19.4727%" y="511.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.11%)</title><rect x="19.2227%" y="485" width="0.1050%" height="15" fill="rgb(227,98,0)"/><text x="19.4727%" y="495.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (4 samples, 0.42%)</title><rect x="19.0126%" y="837" width="0.4202%" height="15" fill="rgb(207,7,3)"/><text x="19.2626%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.42%)</title><rect x="19.0126%" y="821" width="0.4202%" height="15" fill="rgb(206,98,19)"/><text x="19.2626%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (4 samples, 0.42%)</title><rect x="19.0126%" y="805" width="0.4202%" height="15" fill="rgb(217,5,26)"/><text x="19.2626%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (4 samples, 0.42%)</title><rect x="19.0126%" y="789" width="0.4202%" height="15" fill="rgb(235,190,38)"/><text x="19.2626%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::expected (4 samples, 0.42%)</title><rect x="19.0126%" y="773" width="0.4202%" height="15" fill="rgb(247,86,24)"/><text x="19.2626%" y="783.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.11%)</title><rect x="19.3277%" y="757" width="0.1050%" height="15" fill="rgb(205,101,16)"/><text x="19.5777%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.11%)</title><rect x="19.3277%" y="741" width="0.1050%" height="15" fill="rgb(246,168,33)"/><text x="19.5777%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="19.3277%" y="725" width="0.1050%" height="15" fill="rgb(231,114,1)"/><text x="19.5777%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="19.3277%" y="709" width="0.1050%" height="15" fill="rgb(207,184,53)"/><text x="19.5777%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="19.3277%" y="693" width="0.1050%" height="15" fill="rgb(224,95,51)"/><text x="19.5777%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="19.3277%" y="677" width="0.1050%" height="15" fill="rgb(212,188,45)"/><text x="19.5777%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="19.3277%" y="661" width="0.1050%" height="15" fill="rgb(223,154,38)"/><text x="19.5777%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="19.3277%" y="645" width="0.1050%" height="15" fill="rgb(251,22,52)"/><text x="19.5777%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="19.3277%" y="629" width="0.1050%" height="15" fill="rgb(229,209,22)"/><text x="19.5777%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.11%)</title><rect x="19.3277%" y="613" width="0.1050%" height="15" fill="rgb(234,138,34)"/><text x="19.5777%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="19.3277%" y="597" width="0.1050%" height="15" fill="rgb(212,95,11)"/><text x="19.5777%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.11%)</title><rect x="19.3277%" y="581" width="0.1050%" height="15" fill="rgb(240,179,47)"/><text x="19.5777%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="19.3277%" y="565" width="0.1050%" height="15" fill="rgb(240,163,11)"/><text x="19.5777%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="19.3277%" y="549" width="0.1050%" height="15" fill="rgb(236,37,12)"/><text x="19.5777%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (1 samples, 0.11%)</title><rect x="19.3277%" y="533" width="0.1050%" height="15" fill="rgb(232,164,16)"/><text x="19.5777%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="19.3277%" y="517" width="0.1050%" height="15" fill="rgb(244,205,15)"/><text x="19.5777%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="19.3277%" y="501" width="0.1050%" height="15" fill="rgb(223,117,47)"/><text x="19.5777%" y="511.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="19.3277%" y="485" width="0.1050%" height="15" fill="rgb(244,107,35)"/><text x="19.5777%" y="495.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="19.3277%" y="469" width="0.1050%" height="15" fill="rgb(205,140,8)"/><text x="19.5777%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="19.3277%" y="453" width="0.1050%" height="15" fill="rgb(228,84,46)"/><text x="19.5777%" y="463.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (5 samples, 0.53%)</title><rect x="19.0126%" y="853" width="0.5252%" height="15" fill="rgb(254,188,9)"/><text x="19.2626%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (1 samples, 0.11%)</title><rect x="19.4328%" y="837" width="0.1050%" height="15" fill="rgb(206,112,54)"/><text x="19.6828%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (1 samples, 0.11%)</title><rect x="19.4328%" y="821" width="0.1050%" height="15" fill="rgb(216,84,49)"/><text x="19.6828%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (1 samples, 0.11%)</title><rect x="19.4328%" y="805" width="0.1050%" height="15" fill="rgb(214,194,35)"/><text x="19.6828%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_infix (1 samples, 0.11%)</title><rect x="19.4328%" y="789" width="0.1050%" height="15" fill="rgb(249,28,3)"/><text x="19.6828%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_one_of_keywords (1 samples, 0.11%)</title><rect x="19.4328%" y="773" width="0.1050%" height="15" fill="rgb(222,56,52)"/><text x="19.6828%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.11%)</title><rect x="19.5378%" y="805" width="0.1050%" height="15" fill="rgb(245,217,50)"/><text x="19.7878%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="19.5378%" y="789" width="0.1050%" height="15" fill="rgb(213,201,24)"/><text x="19.7878%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="19.6429%" y="789" width="0.1050%" height="15" fill="rgb(248,116,28)"/><text x="19.8929%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.32%)</title><rect x="19.5378%" y="853" width="0.3151%" height="15" fill="rgb(219,72,43)"/><text x="19.7878%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.32%)</title><rect x="19.5378%" y="837" width="0.3151%" height="15" fill="rgb(209,138,14)"/><text x="19.7878%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.32%)</title><rect x="19.5378%" y="821" width="0.3151%" height="15" fill="rgb(222,18,33)"/><text x="19.7878%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (2 samples, 0.21%)</title><rect x="19.6429%" y="805" width="0.2101%" height="15" fill="rgb(213,199,7)"/><text x="19.8929%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (1 samples, 0.11%)</title><rect x="19.7479%" y="789" width="0.1050%" height="15" fill="rgb(250,110,10)"/><text x="19.9979%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="19.7479%" y="773" width="0.1050%" height="15" fill="rgb(248,123,6)"/><text x="19.9979%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="19.8529%" y="805" width="0.1050%" height="15" fill="rgb(206,91,31)"/><text x="20.1029%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="19.8529%" y="789" width="0.1050%" height="15" fill="rgb(211,154,13)"/><text x="20.1029%" y="799.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.21%)</title><rect x="19.8529%" y="853" width="0.2101%" height="15" fill="rgb(225,148,7)"/><text x="20.1029%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (2 samples, 0.21%)</title><rect x="19.8529%" y="837" width="0.2101%" height="15" fill="rgb(220,160,43)"/><text x="20.1029%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (2 samples, 0.21%)</title><rect x="19.8529%" y="821" width="0.2101%" height="15" fill="rgb(213,52,39)"/><text x="20.1029%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_object_name (1 samples, 0.11%)</title><rect x="19.9580%" y="805" width="0.1050%" height="15" fill="rgb(243,137,7)"/><text x="20.2080%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_identifier (1 samples, 0.11%)</title><rect x="19.9580%" y="789" width="0.1050%" height="15" fill="rgb(230,79,13)"/><text x="20.2080%" y="799.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="19.9580%" y="773" width="0.1050%" height="15" fill="rgb(247,105,23)"/><text x="20.2080%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="19.9580%" y="757" width="0.1050%" height="15" fill="rgb(223,179,41)"/><text x="20.2080%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="19.9580%" y="741" width="0.1050%" height="15" fill="rgb(218,9,34)"/><text x="20.2080%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="19.9580%" y="725" width="0.1050%" height="15" fill="rgb(222,106,8)"/><text x="20.2080%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="19.9580%" y="709" width="0.1050%" height="15" fill="rgb(211,220,0)"/><text x="20.2080%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="19.9580%" y="693" width="0.1050%" height="15" fill="rgb(229,52,16)"/><text x="20.2080%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="19.9580%" y="677" width="0.1050%" height="15" fill="rgb(212,155,18)"/><text x="20.2080%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.11%)</title><rect x="19.9580%" y="661" width="0.1050%" height="15" fill="rgb(242,21,14)"/><text x="20.2080%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="19.9580%" y="645" width="0.1050%" height="15" fill="rgb(222,19,48)"/><text x="20.2080%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="20.0630%" y="629" width="0.1050%" height="15" fill="rgb(232,45,27)"/><text x="20.3130%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.21%)</title><rect x="20.0630%" y="645" width="0.2101%" height="15" fill="rgb(249,103,42)"/><text x="20.3130%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="20.1681%" y="629" width="0.1050%" height="15" fill="rgb(246,81,33)"/><text x="20.4181%" y="639.50"></text></g><g><title>start_thread (4 samples, 0.42%)</title><rect x="20.0630%" y="853" width="0.4202%" height="15" fill="rgb(252,33,42)"/><text x="20.3130%" y="863.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.42%)</title><rect x="20.0630%" y="837" width="0.4202%" height="15" fill="rgb(209,212,41)"/><text x="20.3130%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.42%)</title><rect x="20.0630%" y="821" width="0.4202%" height="15" fill="rgb(207,154,6)"/><text x="20.3130%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (4 samples, 0.42%)</title><rect x="20.0630%" y="805" width="0.4202%" height="15" fill="rgb(223,64,47)"/><text x="20.3130%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (4 samples, 0.42%)</title><rect x="20.0630%" y="789" width="0.4202%" height="15" fill="rgb(211,161,38)"/><text x="20.3130%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.42%)</title><rect x="20.0630%" y="773" width="0.4202%" height="15" fill="rgb(219,138,40)"/><text x="20.3130%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (4 samples, 0.42%)</title><rect x="20.0630%" y="757" width="0.4202%" height="15" fill="rgb(241,228,46)"/><text x="20.3130%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.42%)</title><rect x="20.0630%" y="741" width="0.4202%" height="15" fill="rgb(223,209,38)"/><text x="20.3130%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.42%)</title><rect x="20.0630%" y="725" width="0.4202%" height="15" fill="rgb(236,164,45)"/><text x="20.3130%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (4 samples, 0.42%)</title><rect x="20.0630%" y="709" width="0.4202%" height="15" fill="rgb(231,15,5)"/><text x="20.3130%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.42%)</title><rect x="20.0630%" y="693" width="0.4202%" height="15" fill="rgb(252,35,15)"/><text x="20.3130%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.42%)</title><rect x="20.0630%" y="677" width="0.4202%" height="15" fill="rgb(248,181,18)"/><text x="20.3130%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.42%)</title><rect x="20.0630%" y="661" width="0.4202%" height="15" fill="rgb(233,39,42)"/><text x="20.3130%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="20.2731%" y="645" width="0.2101%" height="15" fill="rgb(238,110,33)"/><text x="20.5231%" y="655.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (1 samples, 0.11%)</title><rect x="20.3782%" y="629" width="0.1050%" height="15" fill="rgb(233,195,10)"/><text x="20.6282%" y="639.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="20.4832%" y="853" width="0.1050%" height="15" fill="rgb(254,105,3)"/><text x="20.7332%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="20.5882%" y="677" width="0.1050%" height="15" fill="rgb(221,225,9)"/><text x="20.8382%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="20.5882%" y="661" width="0.1050%" height="15" fill="rgb(224,227,45)"/><text x="20.8382%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="20.5882%" y="645" width="0.1050%" height="15" fill="rgb(229,198,43)"/><text x="20.8382%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="20.5882%" y="725" width="0.2101%" height="15" fill="rgb(206,209,35)"/><text x="20.8382%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.21%)</title><rect x="20.5882%" y="709" width="0.2101%" height="15" fill="rgb(245,195,53)"/><text x="20.8382%" y="719.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.21%)</title><rect x="20.5882%" y="693" width="0.2101%" height="15" fill="rgb(240,92,26)"/><text x="20.8382%" y="703.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="20.6933%" y="677" width="0.1050%" height="15" fill="rgb(207,40,23)"/><text x="20.9433%" y="687.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="20.6933%" y="661" width="0.1050%" height="15" fill="rgb(223,111,35)"/><text x="20.9433%" y="671.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="20.6933%" y="645" width="0.1050%" height="15" fill="rgb(229,147,28)"/><text x="20.9433%" y="655.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.11%)</title><rect x="20.7983%" y="597" width="0.1050%" height="15" fill="rgb(211,29,28)"/><text x="21.0483%" y="607.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.11%)</title><rect x="20.7983%" y="581" width="0.1050%" height="15" fill="rgb(228,72,33)"/><text x="21.0483%" y="591.50"></text></g><g><title>do_filp_open (1 samples, 0.11%)</title><rect x="20.7983%" y="565" width="0.1050%" height="15" fill="rgb(205,214,31)"/><text x="21.0483%" y="575.50"></text></g><g><title>path_openat (1 samples, 0.11%)</title><rect x="20.7983%" y="549" width="0.1050%" height="15" fill="rgb(224,111,15)"/><text x="21.0483%" y="559.50"></text></g><g><title>link_path_walk (1 samples, 0.11%)</title><rect x="20.7983%" y="533" width="0.1050%" height="15" fill="rgb(253,21,26)"/><text x="21.0483%" y="543.50"></text></g><g><title>walk_component (1 samples, 0.11%)</title><rect x="20.7983%" y="517" width="0.1050%" height="15" fill="rgb(245,139,43)"/><text x="21.0483%" y="527.50"></text></g><g><title>lookup_fast.constprop.0 (1 samples, 0.11%)</title><rect x="20.7983%" y="501" width="0.1050%" height="15" fill="rgb(252,170,7)"/><text x="21.0483%" y="511.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.21%)</title><rect x="20.7983%" y="725" width="0.2101%" height="15" fill="rgb(231,118,14)"/><text x="21.0483%" y="735.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.21%)</title><rect x="20.7983%" y="709" width="0.2101%" height="15" fill="rgb(238,83,0)"/><text x="21.0483%" y="719.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="20.7983%" y="693" width="0.2101%" height="15" fill="rgb(221,39,39)"/><text x="21.0483%" y="703.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="20.7983%" y="677" width="0.2101%" height="15" fill="rgb(222,119,46)"/><text x="21.0483%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="20.7983%" y="661" width="0.2101%" height="15" fill="rgb(222,165,49)"/><text x="21.0483%" y="671.50"></text></g><g><title>__GI___openat (2 samples, 0.21%)</title><rect x="20.7983%" y="645" width="0.2101%" height="15" fill="rgb(219,113,52)"/><text x="21.0483%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="20.7983%" y="629" width="0.2101%" height="15" fill="rgb(214,7,15)"/><text x="21.0483%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.21%)</title><rect x="20.7983%" y="613" width="0.2101%" height="15" fill="rgb(235,32,4)"/><text x="21.0483%" y="623.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="20.9034%" y="597" width="0.1050%" height="15" fill="rgb(238,90,54)"/><text x="21.1534%" y="607.50"></text></g><g><title>__kfree_skb (2 samples, 0.21%)</title><rect x="21.3235%" y="469" width="0.2101%" height="15" fill="rgb(213,208,19)"/><text x="21.5735%" y="479.50"></text></g><g><title>skb_release_data (2 samples, 0.21%)</title><rect x="21.3235%" y="453" width="0.2101%" height="15" fill="rgb(233,156,4)"/><text x="21.5735%" y="463.50"></text></g><g><title>add_wait_queue (1 samples, 0.11%)</title><rect x="21.5336%" y="453" width="0.1050%" height="15" fill="rgb(207,194,5)"/><text x="21.7836%" y="463.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="21.5336%" y="437" width="0.1050%" height="15" fill="rgb(206,111,30)"/><text x="21.7836%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="21.7437%" y="389" width="0.1050%" height="15" fill="rgb(243,70,54)"/><text x="21.9937%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="21.7437%" y="373" width="0.1050%" height="15" fill="rgb(242,28,8)"/><text x="21.9937%" y="383.50"></text></g><g><title>sk_wait_data (4 samples, 0.42%)</title><rect x="21.5336%" y="469" width="0.4202%" height="15" fill="rgb(219,106,18)"/><text x="21.7836%" y="479.50"></text></g><g><title>wait_woken (3 samples, 0.32%)</title><rect x="21.6387%" y="453" width="0.3151%" height="15" fill="rgb(244,222,10)"/><text x="21.8887%" y="463.50"></text></g><g><title>schedule_timeout (3 samples, 0.32%)</title><rect x="21.6387%" y="437" width="0.3151%" height="15" fill="rgb(236,179,52)"/><text x="21.8887%" y="447.50"></text></g><g><title>schedule (3 samples, 0.32%)</title><rect x="21.6387%" y="421" width="0.3151%" height="15" fill="rgb(213,23,39)"/><text x="21.8887%" y="431.50"></text></g><g><title>__schedule (3 samples, 0.32%)</title><rect x="21.6387%" y="405" width="0.3151%" height="15" fill="rgb(238,48,10)"/><text x="21.8887%" y="415.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="21.8487%" y="389" width="0.1050%" height="15" fill="rgb(251,196,23)"/><text x="22.0987%" y="399.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="21.8487%" y="373" width="0.1050%" height="15" fill="rgb(250,152,24)"/><text x="22.0987%" y="383.50"></text></g><g><title>__x64_sys_recvfrom (8 samples, 0.84%)</title><rect x="21.3235%" y="533" width="0.8403%" height="15" fill="rgb(209,150,17)"/><text x="21.5735%" y="543.50"></text></g><g><title>__sys_recvfrom (8 samples, 0.84%)</title><rect x="21.3235%" y="517" width="0.8403%" height="15" fill="rgb(234,202,34)"/><text x="21.5735%" y="527.50"></text></g><g><title>inet_recvmsg (8 samples, 0.84%)</title><rect x="21.3235%" y="501" width="0.8403%" height="15" fill="rgb(253,148,53)"/><text x="21.5735%" y="511.50"></text></g><g><title>tcp_recvmsg (8 samples, 0.84%)</title><rect x="21.3235%" y="485" width="0.8403%" height="15" fill="rgb(218,129,16)"/><text x="21.5735%" y="495.50"></text></g><g><title>skb_copy_datagram_iter (2 samples, 0.21%)</title><rect x="21.9538%" y="469" width="0.2101%" height="15" fill="rgb(216,85,19)"/><text x="22.2038%" y="479.50"></text></g><g><title>__skb_datagram_iter (2 samples, 0.21%)</title><rect x="21.9538%" y="453" width="0.2101%" height="15" fill="rgb(235,228,7)"/><text x="22.2038%" y="463.50"></text></g><g><title>_copy_to_iter (1 samples, 0.11%)</title><rect x="22.0588%" y="437" width="0.1050%" height="15" fill="rgb(245,175,0)"/><text x="22.3088%" y="447.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="22.0588%" y="421" width="0.1050%" height="15" fill="rgb(208,168,36)"/><text x="22.3088%" y="431.50"></text></g><g><title>do_syscall_64 (9 samples, 0.95%)</title><rect x="21.3235%" y="549" width="0.9454%" height="15" fill="rgb(246,171,24)"/><text x="21.5735%" y="559.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="22.1639%" y="533" width="0.1050%" height="15" fill="rgb(215,142,24)"/><text x="22.4139%" y="543.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="22.1639%" y="517" width="0.1050%" height="15" fill="rgb(250,187,7)"/><text x="22.4139%" y="527.50"></text></g><g><title>path_put (1 samples, 0.11%)</title><rect x="22.1639%" y="501" width="0.1050%" height="15" fill="rgb(228,66,33)"/><text x="22.4139%" y="511.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.47%)</title><rect x="21.0084%" y="677" width="1.4706%" height="15" fill="rgb(234,215,21)"/><text x="21.2584%" y="687.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (14 samples, 1.47%)</title><rect x="21.0084%" y="661" width="1.4706%" height="15" fill="rgb(222,191,20)"/><text x="21.2584%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (14 samples, 1.47%)</title><rect x="21.0084%" y="645" width="1.4706%" height="15" fill="rgb(245,79,54)"/><text x="21.2584%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::read (14 samples, 1.47%)</title><rect x="21.0084%" y="629" width="1.4706%" height="15" fill="rgb(240,10,37)"/><text x="21.2584%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::read (14 samples, 1.47%)</title><rect x="21.0084%" y="613" width="1.4706%" height="15" fill="rgb(214,192,32)"/><text x="21.2584%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (14 samples, 1.47%)</title><rect x="21.0084%" y="597" width="1.4706%" height="15" fill="rgb(209,36,54)"/><text x="21.2584%" y="607.50"></text></g><g><title>__libc_recv (14 samples, 1.47%)</title><rect x="21.0084%" y="581" width="1.4706%" height="15" fill="rgb(220,10,11)"/><text x="21.2584%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.37%)</title><rect x="21.1134%" y="565" width="1.3655%" height="15" fill="rgb(221,106,17)"/><text x="21.3634%" y="575.50"></text></g><g><title>prepare_exit_to_usermode (2 samples, 0.21%)</title><rect x="22.2689%" y="549" width="0.2101%" height="15" fill="rgb(251,142,44)"/><text x="22.5189%" y="559.50"></text></g><g><title>std::rt::lang_start_internal (19 samples, 2.00%)</title><rect x="20.5882%" y="853" width="1.9958%" height="15" fill="rgb(238,13,15)"/><text x="20.8382%" y="863.50">s..</text></g><g><title>std::panic::catch_unwind (19 samples, 2.00%)</title><rect x="20.5882%" y="837" width="1.9958%" height="15" fill="rgb(208,107,27)"/><text x="20.8382%" y="847.50">s..</text></g><g><title>std::panicking::try (19 samples, 2.00%)</title><rect x="20.5882%" y="821" width="1.9958%" height="15" fill="rgb(205,136,37)"/><text x="20.8382%" y="831.50">s..</text></g><g><title>std::panicking::try::do_call (19 samples, 2.00%)</title><rect x="20.5882%" y="805" width="1.9958%" height="15" fill="rgb(250,205,27)"/><text x="20.8382%" y="815.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19 samples, 2.00%)</title><rect x="20.5882%" y="789" width="1.9958%" height="15" fill="rgb(210,80,43)"/><text x="20.8382%" y="799.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (19 samples, 2.00%)</title><rect x="20.5882%" y="773" width="1.9958%" height="15" fill="rgb(247,160,36)"/><text x="20.8382%" y="783.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 2.00%)</title><rect x="20.5882%" y="757" width="1.9958%" height="15" fill="rgb(234,13,49)"/><text x="20.8382%" y="767.50">s..</text></g><g><title>lobsters::main (19 samples, 2.00%)</title><rect x="20.5882%" y="741" width="1.9958%" height="15" fill="rgb(234,122,0)"/><text x="20.8382%" y="751.50">l..</text></g><g><title>mysql::conn::Conn::_query (15 samples, 1.58%)</title><rect x="21.0084%" y="725" width="1.5756%" height="15" fill="rgb(207,146,38)"/><text x="21.2584%" y="735.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (15 samples, 1.58%)</title><rect x="21.0084%" y="709" width="1.5756%" height="15" fill="rgb(207,177,25)"/><text x="21.2584%" y="719.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.58%)</title><rect x="21.0084%" y="693" width="1.5756%" height="15" fill="rgb(211,178,42)"/><text x="21.2584%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="22.4790%" y="677" width="0.1050%" height="15" fill="rgb(230,69,54)"/><text x="22.7290%" y="687.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="22.5840%" y="725" width="0.1050%" height="15" fill="rgb(214,135,41)"/><text x="22.8340%" y="735.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="22.5840%" y="709" width="0.1050%" height="15" fill="rgb(237,67,25)"/><text x="22.8340%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.11%)</title><rect x="22.5840%" y="693" width="0.1050%" height="15" fill="rgb(222,189,50)"/><text x="22.8340%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="22.5840%" y="677" width="0.1050%" height="15" fill="rgb(245,148,34)"/><text x="22.8340%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="22.5840%" y="661" width="0.1050%" height="15" fill="rgb(222,29,6)"/><text x="22.8340%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="22.5840%" y="645" width="0.1050%" height="15" fill="rgb(221,189,43)"/><text x="22.8340%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="22.5840%" y="629" width="0.1050%" height="15" fill="rgb(207,36,27)"/><text x="22.8340%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="23.0042%" y="629" width="0.1050%" height="15" fill="rgb(217,90,24)"/><text x="23.2542%" y="639.50"></text></g><g><title>[lobsters] (2 samples, 0.21%)</title><rect x="23.0042%" y="645" width="0.2101%" height="15" fill="rgb(224,66,35)"/><text x="23.2542%" y="655.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="23.1092%" y="629" width="0.1050%" height="15" fill="rgb(221,13,50)"/><text x="23.3592%" y="639.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 1.05%)</title><rect x="22.5840%" y="853" width="1.0504%" height="15" fill="rgb(236,68,49)"/><text x="22.8340%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 1.05%)</title><rect x="22.5840%" y="837" width="1.0504%" height="15" fill="rgb(229,146,28)"/><text x="22.8340%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (10 samples, 1.05%)</title><rect x="22.5840%" y="821" width="1.0504%" height="15" fill="rgb(225,31,38)"/><text x="22.8340%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10 samples, 1.05%)</title><rect x="22.5840%" y="805" width="1.0504%" height="15" fill="rgb(250,208,3)"/><text x="22.8340%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 1.05%)</title><rect x="22.5840%" y="789" width="1.0504%" height="15" fill="rgb(246,54,23)"/><text x="22.8340%" y="799.50"></text></g><g><title>decor::Shim::run_on_tcp (10 samples, 1.05%)</title><rect x="22.5840%" y="773" width="1.0504%" height="15" fill="rgb(243,76,11)"/><text x="22.8340%" y="783.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (10 samples, 1.05%)</title><rect x="22.5840%" y="757" width="1.0504%" height="15" fill="rgb(245,21,50)"/><text x="22.8340%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (10 samples, 1.05%)</title><rect x="22.5840%" y="741" width="1.0504%" height="15" fill="rgb(228,9,43)"/><text x="22.8340%" y="751.50"></text></g><g><title>decor::answer_rows (9 samples, 0.95%)</title><rect x="22.6891%" y="725" width="0.9454%" height="15" fill="rgb(208,100,47)"/><text x="22.9391%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.95%)</title><rect x="22.6891%" y="709" width="0.9454%" height="15" fill="rgb(232,26,8)"/><text x="22.9391%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (9 samples, 0.95%)</title><rect x="22.6891%" y="693" width="0.9454%" height="15" fill="rgb(216,166,38)"/><text x="22.9391%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (9 samples, 0.95%)</title><rect x="22.6891%" y="677" width="0.9454%" height="15" fill="rgb(251,202,51)"/><text x="22.9391%" y="687.50"></text></g><g><title>mysql_common::value::read_text_values (9 samples, 0.95%)</title><rect x="22.6891%" y="661" width="0.9454%" height="15" fill="rgb(254,216,34)"/><text x="22.9391%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="23.2143%" y="645" width="0.4202%" height="15" fill="rgb(251,32,27)"/><text x="23.4643%" y="655.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="23.3193%" y="629" width="0.3151%" height="15" fill="rgb(208,127,28)"/><text x="23.5693%" y="639.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (1 samples, 0.11%)</title><rect x="23.6345%" y="805" width="0.1050%" height="15" fill="rgb(224,137,22)"/><text x="23.8845%" y="815.50"></text></g><g><title>decor::Shim::create_schema (1 samples, 0.11%)</title><rect x="23.6345%" y="789" width="0.1050%" height="15" fill="rgb(254,70,32)"/><text x="23.8845%" y="799.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (1 samples, 0.11%)</title><rect x="23.6345%" y="773" width="0.1050%" height="15" fill="rgb(229,75,37)"/><text x="23.8845%" y="783.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="23.6345%" y="757" width="0.1050%" height="15" fill="rgb(252,64,23)"/><text x="23.8845%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="23.6345%" y="741" width="0.1050%" height="15" fill="rgb(232,162,48)"/><text x="23.8845%" y="751.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="23.6345%" y="725" width="0.1050%" height="15" fill="rgb(246,160,12)"/><text x="23.8845%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="23.6345%" y="709" width="0.1050%" height="15" fill="rgb(247,166,0)"/><text x="23.8845%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="23.6345%" y="693" width="0.1050%" height="15" fill="rgb(249,219,21)"/><text x="23.8845%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="23.6345%" y="677" width="0.1050%" height="15" fill="rgb(205,209,3)"/><text x="23.8845%" y="687.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="23.6345%" y="661" width="0.1050%" height="15" fill="rgb(243,44,1)"/><text x="23.8845%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="23.6345%" y="645" width="0.1050%" height="15" fill="rgb(206,159,16)"/><text x="23.8845%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="23.6345%" y="629" width="0.1050%" height="15" fill="rgb(244,77,30)"/><text x="23.8845%" y="639.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="23.6345%" y="613" width="0.1050%" height="15" fill="rgb(218,69,12)"/><text x="23.8845%" y="623.50"></text></g><g><title>__sys_sendto (1 samples, 0.11%)</title><rect x="23.6345%" y="597" width="0.1050%" height="15" fill="rgb(212,87,7)"/><text x="23.8845%" y="607.50"></text></g><g><title>sock_sendmsg (1 samples, 0.11%)</title><rect x="23.6345%" y="581" width="0.1050%" height="15" fill="rgb(245,114,25)"/><text x="23.8845%" y="591.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.11%)</title><rect x="23.6345%" y="565" width="0.1050%" height="15" fill="rgb(210,61,42)"/><text x="23.8845%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.11%)</title><rect x="23.6345%" y="549" width="0.1050%" height="15" fill="rgb(211,52,33)"/><text x="23.8845%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.11%)</title><rect x="23.6345%" y="533" width="0.1050%" height="15" fill="rgb(234,58,33)"/><text x="23.8845%" y="543.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.11%)</title><rect x="23.6345%" y="517" width="0.1050%" height="15" fill="rgb(220,115,36)"/><text x="23.8845%" y="527.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.11%)</title><rect x="23.6345%" y="501" width="0.1050%" height="15" fill="rgb(243,153,54)"/><text x="23.8845%" y="511.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.11%)</title><rect x="23.6345%" y="485" width="0.1050%" height="15" fill="rgb(251,47,18)"/><text x="23.8845%" y="495.50"></text></g><g><title>ip_output (1 samples, 0.11%)</title><rect x="23.6345%" y="469" width="0.1050%" height="15" fill="rgb(242,102,42)"/><text x="23.8845%" y="479.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.21%)</title><rect x="23.7395%" y="789" width="0.2101%" height="15" fill="rgb(234,31,38)"/><text x="23.9895%" y="799.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="23.7395%" y="773" width="0.2101%" height="15" fill="rgb(221,117,51)"/><text x="23.9895%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="23.7395%" y="757" width="0.2101%" height="15" fill="rgb(212,20,18)"/><text x="23.9895%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.21%)</title><rect x="23.7395%" y="741" width="0.2101%" height="15" fill="rgb(245,133,36)"/><text x="23.9895%" y="751.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="23.7395%" y="725" width="0.2101%" height="15" fill="rgb(212,6,19)"/><text x="23.9895%" y="735.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.21%)</title><rect x="23.7395%" y="709" width="0.2101%" height="15" fill="rgb(218,1,36)"/><text x="23.9895%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.21%)</title><rect x="23.7395%" y="693" width="0.2101%" height="15" fill="rgb(246,84,54)"/><text x="23.9895%" y="703.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="23.7395%" y="677" width="0.2101%" height="15" fill="rgb(242,110,6)"/><text x="23.9895%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="23.7395%" y="661" width="0.2101%" height="15" fill="rgb(214,47,5)"/><text x="23.9895%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="23.8445%" y="645" width="0.1050%" height="15" fill="rgb(218,159,25)"/><text x="24.0945%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="23.9496%" y="693" width="0.1050%" height="15" fill="rgb(215,211,28)"/><text x="24.1996%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.21%)</title><rect x="23.9496%" y="709" width="0.2101%" height="15" fill="rgb(238,59,32)"/><text x="24.1996%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="24.0546%" y="693" width="0.1050%" height="15" fill="rgb(226,82,3)"/><text x="24.3046%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="24.7899%" y="645" width="0.1050%" height="15" fill="rgb(240,164,32)"/><text x="25.0399%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="24.7899%" y="629" width="0.1050%" height="15" fill="rgb(232,46,7)"/><text x="25.0399%" y="639.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.95%)</title><rect x="24.1597%" y="709" width="0.9454%" height="15" fill="rgb(229,129,53)"/><text x="24.4097%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (8 samples, 0.84%)</title><rect x="24.2647%" y="693" width="0.8403%" height="15" fill="rgb(234,188,29)"/><text x="24.5147%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (6 samples, 0.63%)</title><rect x="24.4748%" y="677" width="0.6303%" height="15" fill="rgb(246,141,4)"/><text x="24.7248%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.53%)</title><rect x="24.5798%" y="661" width="0.5252%" height="15" fill="rgb(229,23,39)"/><text x="24.8298%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="24.8950%" y="645" width="0.2101%" height="15" fill="rgb(206,12,3)"/><text x="25.1450%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="25.0000%" y="629" width="0.1050%" height="15" fill="rgb(252,226,20)"/><text x="25.2500%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="25.1050%" y="709" width="0.2101%" height="15" fill="rgb(216,123,35)"/><text x="25.3550%" y="719.50"></text></g><g><title>decor::answer_rows (14 samples, 1.47%)</title><rect x="23.9496%" y="789" width="1.4706%" height="15" fill="rgb(212,68,40)"/><text x="24.1996%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.47%)</title><rect x="23.9496%" y="773" width="1.4706%" height="15" fill="rgb(254,125,32)"/><text x="24.1996%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (14 samples, 1.47%)</title><rect x="23.9496%" y="757" width="1.4706%" height="15" fill="rgb(253,97,22)"/><text x="24.1996%" y="767.50"></text></g><g><title>mysql::conn::Conn::next_text (14 samples, 1.47%)</title><rect x="23.9496%" y="741" width="1.4706%" height="15" fill="rgb(241,101,14)"/><text x="24.1996%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (14 samples, 1.47%)</title><rect x="23.9496%" y="725" width="1.4706%" height="15" fill="rgb(238,103,29)"/><text x="24.1996%" y="735.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="25.3151%" y="709" width="0.1050%" height="15" fill="rgb(233,195,47)"/><text x="25.5651%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="25.3151%" y="693" width="0.1050%" height="15" fill="rgb(246,218,30)"/><text x="25.5651%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="25.3151%" y="677" width="0.1050%" height="15" fill="rgb(219,145,47)"/><text x="25.5651%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="25.3151%" y="661" width="0.1050%" height="15" fill="rgb(243,12,26)"/><text x="25.5651%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="25.3151%" y="645" width="0.1050%" height="15" fill="rgb(214,87,16)"/><text x="25.5651%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="25.3151%" y="629" width="0.1050%" height="15" fill="rgb(208,99,42)"/><text x="25.5651%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="25.3151%" y="613" width="0.1050%" height="15" fill="rgb(253,99,2)"/><text x="25.5651%" y="623.50"></text></g><g><title>[unknown] (189 samples, 19.85%)</title><rect x="5.7773%" y="869" width="19.8529%" height="15" fill="rgb(220,168,23)"/><text x="6.0273%" y="879.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 2.00%)</title><rect x="23.6345%" y="853" width="1.9958%" height="15" fill="rgb(242,38,24)"/><text x="23.8845%" y="863.50">s..</text></g><g><title>decor::Shim::run_on_tcp (19 samples, 2.00%)</title><rect x="23.6345%" y="837" width="1.9958%" height="15" fill="rgb(225,182,9)"/><text x="23.8845%" y="847.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (19 samples, 2.00%)</title><rect x="23.6345%" y="821" width="1.9958%" height="15" fill="rgb(243,178,37)"/><text x="23.8845%" y="831.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (18 samples, 1.89%)</title><rect x="23.7395%" y="805" width="1.8908%" height="15" fill="rgb(232,139,19)"/><text x="23.9895%" y="815.50">&lt;..</text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.21%)</title><rect x="25.4202%" y="789" width="0.2101%" height="15" fill="rgb(225,201,24)"/><text x="25.6702%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="25.5252%" y="773" width="0.1050%" height="15" fill="rgb(221,47,46)"/><text x="25.7752%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="25.5252%" y="757" width="0.1050%" height="15" fill="rgb(249,23,13)"/><text x="25.7752%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="26.5756%" y="693" width="0.1050%" height="15" fill="rgb(219,9,5)"/><text x="26.8256%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="26.8908%" y="677" width="0.1050%" height="15" fill="rgb(254,171,16)"/><text x="27.1408%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.32%)</title><rect x="26.9958%" y="677" width="0.3151%" height="15" fill="rgb(230,171,20)"/><text x="27.2458%" y="687.50"></text></g><g><title>mysql_common::packets::column_from_payload (2 samples, 0.21%)</title><rect x="27.1008%" y="661" width="0.2101%" height="15" fill="rgb(210,71,41)"/><text x="27.3508%" y="671.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="27.2059%" y="645" width="0.1050%" height="15" fill="rgb(206,173,20)"/><text x="27.4559%" y="655.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="27.7311%" y="533" width="0.1050%" height="15" fill="rgb(233,88,34)"/><text x="27.9811%" y="543.50"></text></g><g><title>inet_sendmsg (1 samples, 0.11%)</title><rect x="27.8361%" y="517" width="0.1050%" height="15" fill="rgb(223,209,46)"/><text x="28.0861%" y="527.50"></text></g><g><title>security_socket_sendmsg (2 samples, 0.21%)</title><rect x="27.9412%" y="517" width="0.2101%" height="15" fill="rgb(250,43,18)"/><text x="28.1912%" y="527.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="28.7815%" y="389" width="0.1050%" height="15" fill="rgb(208,13,10)"/><text x="29.0315%" y="399.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="28.9916%" y="325" width="0.1050%" height="15" fill="rgb(212,200,36)"/><text x="29.2416%" y="335.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="28.9916%" y="309" width="0.1050%" height="15" fill="rgb(225,90,30)"/><text x="29.2416%" y="319.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="28.9916%" y="293" width="0.1050%" height="15" fill="rgb(236,182,39)"/><text x="29.2416%" y="303.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="28.9916%" y="277" width="0.1050%" height="15" fill="rgb(212,144,35)"/><text x="29.2416%" y="287.50"></text></g><g><title>__netif_receive_skb_core (2 samples, 0.21%)</title><rect x="29.2017%" y="277" width="0.2101%" height="15" fill="rgb(228,63,44)"/><text x="29.4517%" y="287.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="29.4118%" y="213" width="0.1050%" height="15" fill="rgb(228,109,6)"/><text x="29.6618%" y="223.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.21%)</title><rect x="29.7269%" y="197" width="0.2101%" height="15" fill="rgb(238,117,24)"/><text x="29.9769%" y="207.50"></text></g><g><title>inet_ehashfn (2 samples, 0.21%)</title><rect x="29.7269%" y="181" width="0.2101%" height="15" fill="rgb(242,26,26)"/><text x="29.9769%" y="191.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="30.5672%" y="85" width="0.1050%" height="15" fill="rgb(221,92,48)"/><text x="30.8172%" y="95.50"></text></g><g><title>psi_task_change (5 samples, 0.53%)</title><rect x="30.6723%" y="69" width="0.5252%" height="15" fill="rgb(209,209,32)"/><text x="30.9223%" y="79.50"></text></g><g><title>psi_group_change (4 samples, 0.42%)</title><rect x="30.7773%" y="53" width="0.4202%" height="15" fill="rgb(221,70,22)"/><text x="31.0273%" y="63.50"></text></g><g><title>enqueue_task (7 samples, 0.74%)</title><rect x="30.6723%" y="85" width="0.7353%" height="15" fill="rgb(248,145,5)"/><text x="30.9223%" y="95.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.21%)</title><rect x="31.1975%" y="69" width="0.2101%" height="15" fill="rgb(226,116,26)"/><text x="31.4475%" y="79.50"></text></g><g><title>rb_insert_color (1 samples, 0.11%)</title><rect x="31.4076%" y="53" width="0.1050%" height="15" fill="rgb(244,5,17)"/><text x="31.6576%" y="63.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.32%)</title><rect x="31.4076%" y="85" width="0.3151%" height="15" fill="rgb(252,159,33)"/><text x="31.6576%" y="95.50"></text></g><g><title>enqueue_entity (3 samples, 0.32%)</title><rect x="31.4076%" y="69" width="0.3151%" height="15" fill="rgb(206,71,0)"/><text x="31.6576%" y="79.50"></text></g><g><title>update_load_avg (2 samples, 0.21%)</title><rect x="31.5126%" y="53" width="0.2101%" height="15" fill="rgb(233,118,54)"/><text x="31.7626%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="31.6176%" y="37" width="0.1050%" height="15" fill="rgb(234,83,48)"/><text x="31.8676%" y="47.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.21%)</title><rect x="31.7227%" y="85" width="0.2101%" height="15" fill="rgb(228,3,54)"/><text x="31.9727%" y="95.50"></text></g><g><title>cpus_share_cache (1 samples, 0.11%)</title><rect x="31.8277%" y="69" width="0.1050%" height="15" fill="rgb(226,155,13)"/><text x="32.0777%" y="79.50"></text></g><g><title>__wake_up_common (17 samples, 1.79%)</title><rect x="30.2521%" y="133" width="1.7857%" height="15" fill="rgb(241,28,37)"/><text x="30.5021%" y="143.50">_..</text></g><g><title>pollwake (17 samples, 1.79%)</title><rect x="30.2521%" y="117" width="1.7857%" height="15" fill="rgb(233,93,10)"/><text x="30.5021%" y="127.50">p..</text></g><g><title>try_to_wake_up (16 samples, 1.68%)</title><rect x="30.3571%" y="101" width="1.6807%" height="15" fill="rgb(225,113,19)"/><text x="30.6071%" y="111.50"></text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="31.9328%" y="85" width="0.1050%" height="15" fill="rgb(241,2,18)"/><text x="32.1828%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="31.9328%" y="69" width="0.1050%" height="15" fill="rgb(228,207,21)"/><text x="32.1828%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="31.9328%" y="53" width="0.1050%" height="15" fill="rgb(213,211,35)"/><text x="32.1828%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="31.9328%" y="37" width="0.1050%" height="15" fill="rgb(209,83,10)"/><text x="32.1828%" y="47.50"></text></g><g><title>sock_def_readable (19 samples, 2.00%)</title><rect x="30.1471%" y="165" width="1.9958%" height="15" fill="rgb(209,164,1)"/><text x="30.3971%" y="175.50">s..</text></g><g><title>__wake_up_common_lock (18 samples, 1.89%)</title><rect x="30.2521%" y="149" width="1.8908%" height="15" fill="rgb(213,184,43)"/><text x="30.5021%" y="159.50">_..</text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="32.0378%" y="133" width="0.1050%" height="15" fill="rgb(231,61,34)"/><text x="32.2878%" y="143.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="32.0378%" y="117" width="0.1050%" height="15" fill="rgb(235,75,3)"/><text x="32.2878%" y="127.50"></text></g><g><title>kfree (2 samples, 0.21%)</title><rect x="32.3529%" y="133" width="0.2101%" height="15" fill="rgb(220,106,47)"/><text x="32.6029%" y="143.50"></text></g><g><title>slab_free_freelist_hook (2 samples, 0.21%)</title><rect x="32.3529%" y="117" width="0.2101%" height="15" fill="rgb(210,196,33)"/><text x="32.6029%" y="127.50"></text></g><g><title>__kfree_skb (3 samples, 0.32%)</title><rect x="32.3529%" y="149" width="0.3151%" height="15" fill="rgb(229,154,42)"/><text x="32.6029%" y="159.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="32.5630%" y="133" width="0.1050%" height="15" fill="rgb(228,114,26)"/><text x="32.8130%" y="143.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="32.6681%" y="149" width="0.1050%" height="15" fill="rgb(208,144,1)"/><text x="32.9181%" y="159.50"></text></g><g><title>slab_free_freelist_hook (1 samples, 0.11%)</title><rect x="32.6681%" y="133" width="0.1050%" height="15" fill="rgb(239,112,37)"/><text x="32.9181%" y="143.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.11%)</title><rect x="32.7731%" y="149" width="0.1050%" height="15" fill="rgb(210,96,50)"/><text x="33.0231%" y="159.50"></text></g><g><title>tcp_rate_gen (1 samples, 0.11%)</title><rect x="32.8782%" y="149" width="0.1050%" height="15" fill="rgb(222,178,2)"/><text x="33.1282%" y="159.50"></text></g><g><title>tcp_rate_skb_delivered (1 samples, 0.11%)</title><rect x="32.9832%" y="149" width="0.1050%" height="15" fill="rgb(226,74,18)"/><text x="33.2332%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.11%)</title><rect x="33.0882%" y="149" width="0.1050%" height="15" fill="rgb(225,67,54)"/><text x="33.3382%" y="159.50"></text></g><g><title>tcp_ack (11 samples, 1.16%)</title><rect x="32.1429%" y="165" width="1.1555%" height="15" fill="rgb(251,92,32)"/><text x="32.3929%" y="175.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="33.1933%" y="149" width="0.1050%" height="15" fill="rgb(228,149,22)"/><text x="33.4433%" y="159.50"></text></g><g><title>tcp_check_space (3 samples, 0.32%)</title><rect x="33.2983%" y="165" width="0.3151%" height="15" fill="rgb(243,54,13)"/><text x="33.5483%" y="175.50"></text></g><g><title>ip_local_deliver (41 samples, 4.31%)</title><rect x="29.4118%" y="261" width="4.3067%" height="15" fill="rgb(243,180,28)"/><text x="29.6618%" y="271.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (41 samples, 4.31%)</title><rect x="29.4118%" y="245" width="4.3067%" height="15" fill="rgb(208,167,24)"/><text x="29.6618%" y="255.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (41 samples, 4.31%)</title><rect x="29.4118%" y="229" width="4.3067%" height="15" fill="rgb(245,73,45)"/><text x="29.6618%" y="239.50">ip_pr..</text></g><g><title>tcp_v4_rcv (40 samples, 4.20%)</title><rect x="29.5168%" y="213" width="4.2017%" height="15" fill="rgb(237,203,48)"/><text x="29.7668%" y="223.50">tcp_v..</text></g><g><title>tcp_v4_do_rcv (36 samples, 3.78%)</title><rect x="29.9370%" y="197" width="3.7815%" height="15" fill="rgb(211,197,16)"/><text x="30.1870%" y="207.50">tcp_..</text></g><g><title>tcp_rcv_established (36 samples, 3.78%)</title><rect x="29.9370%" y="181" width="3.7815%" height="15" fill="rgb(243,99,51)"/><text x="30.1870%" y="191.50">tcp_..</text></g><g><title>tcp_queue_rcv (1 samples, 0.11%)</title><rect x="33.6134%" y="165" width="0.1050%" height="15" fill="rgb(215,123,29)"/><text x="33.8634%" y="175.50"></text></g><g><title>ip_rcv_core (2 samples, 0.21%)</title><rect x="33.7185%" y="261" width="0.2101%" height="15" fill="rgb(239,186,37)"/><text x="33.9685%" y="271.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="33.8235%" y="245" width="0.1050%" height="15" fill="rgb(252,136,39)"/><text x="34.0735%" y="255.50"></text></g><g><title>__netif_receive_skb_one_core (46 samples, 4.83%)</title><rect x="29.2017%" y="293" width="4.8319%" height="15" fill="rgb(223,213,32)"/><text x="29.4517%" y="303.50">__neti..</text></g><g><title>ip_rcv (44 samples, 4.62%)</title><rect x="29.4118%" y="277" width="4.6218%" height="15" fill="rgb(233,115,5)"/><text x="29.6618%" y="287.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.11%)</title><rect x="33.9286%" y="261" width="0.1050%" height="15" fill="rgb(207,226,44)"/><text x="34.1786%" y="271.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.11%)</title><rect x="33.9286%" y="245" width="0.1050%" height="15" fill="rgb(208,126,0)"/><text x="34.1786%" y="255.50"></text></g><g><title>__ip_queue_xmit (53 samples, 5.57%)</title><rect x="28.5714%" y="437" width="5.5672%" height="15" fill="rgb(244,66,21)"/><text x="28.8214%" y="447.50">__ip_qu..</text></g><g><title>ip_output (51 samples, 5.36%)</title><rect x="28.7815%" y="421" width="5.3571%" height="15" fill="rgb(222,97,12)"/><text x="29.0315%" y="431.50">ip_outp..</text></g><g><title>ip_finish_output2 (51 samples, 5.36%)</title><rect x="28.7815%" y="405" width="5.3571%" height="15" fill="rgb(219,213,19)"/><text x="29.0315%" y="415.50">ip_fini..</text></g><g><title>__local_bh_enable_ip (50 samples, 5.25%)</title><rect x="28.8866%" y="389" width="5.2521%" height="15" fill="rgb(252,169,30)"/><text x="29.1366%" y="399.50">__loca..</text></g><g><title>do_softirq (49 samples, 5.15%)</title><rect x="28.9916%" y="373" width="5.1471%" height="15" fill="rgb(206,32,51)"/><text x="29.2416%" y="383.50">do_sof..</text></g><g><title>do_softirq_own_stack (49 samples, 5.15%)</title><rect x="28.9916%" y="357" width="5.1471%" height="15" fill="rgb(250,172,42)"/><text x="29.2416%" y="367.50">do_sof..</text></g><g><title>__do_softirq (49 samples, 5.15%)</title><rect x="28.9916%" y="341" width="5.1471%" height="15" fill="rgb(209,34,43)"/><text x="29.2416%" y="351.50">__do_s..</text></g><g><title>net_rx_action (48 samples, 5.04%)</title><rect x="29.0966%" y="325" width="5.0420%" height="15" fill="rgb(223,11,35)"/><text x="29.3466%" y="335.50">net_rx..</text></g><g><title>process_backlog (48 samples, 5.04%)</title><rect x="29.0966%" y="309" width="5.0420%" height="15" fill="rgb(251,219,26)"/><text x="29.3466%" y="319.50">proces..</text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="34.0336%" y="293" width="0.1050%" height="15" fill="rgb(231,119,3)"/><text x="34.2836%" y="303.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="34.0336%" y="277" width="0.1050%" height="15" fill="rgb(216,97,11)"/><text x="34.2836%" y="287.50"></text></g><g><title>tcp_options_write (1 samples, 0.11%)</title><rect x="34.1387%" y="437" width="0.1050%" height="15" fill="rgb(223,59,9)"/><text x="34.3887%" y="447.50"></text></g><g><title>__tcp_transmit_skb (58 samples, 6.09%)</title><rect x="28.2563%" y="453" width="6.0924%" height="15" fill="rgb(233,93,31)"/><text x="28.5063%" y="463.50">__tcp_tr..</text></g><g><title>tcp_rate_skb_sent (1 samples, 0.11%)</title><rect x="34.2437%" y="437" width="0.1050%" height="15" fill="rgb(239,81,33)"/><text x="34.4937%" y="447.50"></text></g><g><title>__tcp_push_pending_frames (62 samples, 6.51%)</title><rect x="28.1513%" y="485" width="6.5126%" height="15" fill="rgb(213,120,34)"/><text x="28.4013%" y="495.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (62 samples, 6.51%)</title><rect x="28.1513%" y="469" width="6.5126%" height="15" fill="rgb(243,49,53)"/><text x="28.4013%" y="479.50">tcp_write..</text></g><g><title>tcp_event_new_data_sent (3 samples, 0.32%)</title><rect x="34.3487%" y="453" width="0.3151%" height="15" fill="rgb(247,216,33)"/><text x="34.5987%" y="463.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="34.5588%" y="437" width="0.1050%" height="15" fill="rgb(226,26,14)"/><text x="34.8088%" y="447.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="34.5588%" y="421" width="0.1050%" height="15" fill="rgb(215,49,53)"/><text x="34.8088%" y="431.50"></text></g><g><title>lock_timer_base.constprop.0 (1 samples, 0.11%)</title><rect x="34.5588%" y="405" width="0.1050%" height="15" fill="rgb(245,162,40)"/><text x="34.8088%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="34.5588%" y="389" width="0.1050%" height="15" fill="rgb(229,68,17)"/><text x="34.8088%" y="399.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="34.6639%" y="485" width="0.1050%" height="15" fill="rgb(213,182,10)"/><text x="34.9139%" y="495.50"></text></g><g><title>__kmalloc_node_track_caller (3 samples, 0.32%)</title><rect x="34.8739%" y="453" width="0.3151%" height="15" fill="rgb(245,125,30)"/><text x="35.1239%" y="463.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.63%)</title><rect x="34.7689%" y="485" width="0.6303%" height="15" fill="rgb(232,202,2)"/><text x="35.0189%" y="495.50"></text></g><g><title>__alloc_skb (6 samples, 0.63%)</title><rect x="34.7689%" y="469" width="0.6303%" height="15" fill="rgb(237,140,51)"/><text x="35.0189%" y="479.50"></text></g><g><title>__ksize (2 samples, 0.21%)</title><rect x="35.1891%" y="453" width="0.2101%" height="15" fill="rgb(236,157,25)"/><text x="35.4391%" y="463.50"></text></g><g><title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="35.3992%" y="485" width="0.1050%" height="15" fill="rgb(219,209,0)"/><text x="35.6492%" y="495.50"></text></g><g><title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="35.3992%" y="469" width="0.1050%" height="15" fill="rgb(240,116,54)"/><text x="35.6492%" y="479.50"></text></g><g><title>iov_iter_advance (1 samples, 0.11%)</title><rect x="35.3992%" y="453" width="0.1050%" height="15" fill="rgb(216,10,36)"/><text x="35.6492%" y="463.50"></text></g><g><title>tcp_push (1 samples, 0.11%)</title><rect x="35.5042%" y="485" width="0.1050%" height="15" fill="rgb(222,72,44)"/><text x="35.7542%" y="495.50"></text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.11%)</title><rect x="35.6092%" y="485" width="0.1050%" height="15" fill="rgb(232,159,9)"/><text x="35.8592%" y="495.50"></text></g><g><title>__x64_sys_sendto (79 samples, 8.30%)</title><rect x="27.5210%" y="565" width="8.2983%" height="15" fill="rgb(210,39,32)"/><text x="27.7710%" y="575.50">__x64_sys_se..</text></g><g><title>__sys_sendto (78 samples, 8.19%)</title><rect x="27.6261%" y="549" width="8.1933%" height="15" fill="rgb(216,194,45)"/><text x="27.8761%" y="559.50">__sys_sendto</text></g><g><title>sock_sendmsg (76 samples, 7.98%)</title><rect x="27.8361%" y="533" width="7.9832%" height="15" fill="rgb(218,18,35)"/><text x="28.0861%" y="543.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (73 samples, 7.67%)</title><rect x="28.1513%" y="517" width="7.6681%" height="15" fill="rgb(207,83,51)"/><text x="28.4013%" y="527.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (73 samples, 7.67%)</title><rect x="28.1513%" y="501" width="7.6681%" height="15" fill="rgb(225,63,43)"/><text x="28.4013%" y="511.50">tcp_sendms..</text></g><g><title>tcp_stream_memory_free (1 samples, 0.11%)</title><rect x="35.7143%" y="485" width="0.1050%" height="15" fill="rgb(207,57,36)"/><text x="35.9643%" y="495.50"></text></g><g><title>do_syscall_64 (80 samples, 8.40%)</title><rect x="27.5210%" y="581" width="8.4034%" height="15" fill="rgb(216,99,33)"/><text x="27.7710%" y="591.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="35.8193%" y="565" width="0.1050%" height="15" fill="rgb(225,42,16)"/><text x="36.0693%" y="575.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="35.8193%" y="549" width="0.1050%" height="15" fill="rgb(220,201,45)"/><text x="36.0693%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (95 samples, 9.98%)</title><rect x="26.4706%" y="709" width="9.9790%" height="15" fill="rgb(225,33,4)"/><text x="26.7206%" y="719.50">&lt;mysql::conn::..</text></g><g><title>mysql::conn::Conn::_query (93 samples, 9.77%)</title><rect x="26.6807%" y="693" width="9.7689%" height="15" fill="rgb(224,33,50)"/><text x="26.9307%" y="703.50">mysql::conn::C..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (87 samples, 9.14%)</title><rect x="27.3109%" y="677" width="9.1387%" height="15" fill="rgb(246,198,51)"/><text x="27.5609%" y="687.50">mysql_common:..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (86 samples, 9.03%)</title><rect x="27.4160%" y="661" width="9.0336%" height="15" fill="rgb(205,22,4)"/><text x="27.6660%" y="671.50">std::io::buff..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (86 samples, 9.03%)</title><rect x="27.4160%" y="645" width="9.0336%" height="15" fill="rgb(206,3,8)"/><text x="27.6660%" y="655.50">&lt;std::net::tc..</text></g><g><title>std::sys_common::net::TcpStream::write (86 samples, 9.03%)</title><rect x="27.4160%" y="629" width="9.0336%" height="15" fill="rgb(251,23,15)"/><text x="27.6660%" y="639.50">std::sys_comm..</text></g><g><title>__libc_send (86 samples, 9.03%)</title><rect x="27.4160%" y="613" width="9.0336%" height="15" fill="rgb(252,88,28)"/><text x="27.6660%" y="623.50">__libc_send</text></g><g><title>entry_SYSCALL_64 (86 samples, 9.03%)</title><rect x="27.4160%" y="597" width="9.0336%" height="15" fill="rgb(212,127,14)"/><text x="27.6660%" y="607.50">entry_SYSCALL..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.53%)</title><rect x="35.9244%" y="581" width="0.5252%" height="15" fill="rgb(247,145,37)"/><text x="36.1744%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="36.4496%" y="709" width="0.2101%" height="15" fill="rgb(209,117,53)"/><text x="36.6996%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="36.6597%" y="709" width="0.1050%" height="15" fill="rgb(212,90,42)"/><text x="36.9097%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="36.8697%" y="677" width="0.1050%" height="15" fill="rgb(218,164,37)"/><text x="37.1197%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="36.8697%" y="661" width="0.1050%" height="15" fill="rgb(246,65,34)"/><text x="37.1197%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="36.8697%" y="645" width="0.1050%" height="15" fill="rgb(231,100,33)"/><text x="37.1197%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="36.8697%" y="629" width="0.1050%" height="15" fill="rgb(228,126,14)"/><text x="37.1197%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="36.9748%" y="645" width="0.1050%" height="15" fill="rgb(215,173,21)"/><text x="37.2248%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="36.9748%" y="629" width="0.1050%" height="15" fill="rgb(210,6,40)"/><text x="37.2248%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="36.9748%" y="613" width="0.1050%" height="15" fill="rgb(212,48,18)"/><text x="37.2248%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.32%)</title><rect x="36.9748%" y="677" width="0.3151%" height="15" fill="rgb(230,214,11)"/><text x="37.2248%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.32%)</title><rect x="36.9748%" y="661" width="0.3151%" height="15" fill="rgb(254,105,39)"/><text x="37.2248%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.21%)</title><rect x="37.0798%" y="645" width="0.2101%" height="15" fill="rgb(245,158,5)"/><text x="37.3298%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="37.0798%" y="629" width="0.2101%" height="15" fill="rgb(249,208,11)"/><text x="37.3298%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="37.1849%" y="613" width="0.1050%" height="15" fill="rgb(210,39,28)"/><text x="37.4349%" y="623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="37.5000%" y="549" width="0.1050%" height="15" fill="rgb(211,56,53)"/><text x="37.7500%" y="559.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="37.5000%" y="533" width="0.1050%" height="15" fill="rgb(226,201,30)"/><text x="37.7500%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.32%)</title><rect x="37.3950%" y="597" width="0.3151%" height="15" fill="rgb(239,101,34)"/><text x="37.6450%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.32%)</title><rect x="37.3950%" y="581" width="0.3151%" height="15" fill="rgb(226,209,5)"/><text x="37.6450%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.21%)</title><rect x="37.5000%" y="565" width="0.2101%" height="15" fill="rgb(250,105,47)"/><text x="37.7500%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="37.6050%" y="549" width="0.1050%" height="15" fill="rgb(230,72,3)"/><text x="37.8550%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="37.6050%" y="533" width="0.1050%" height="15" fill="rgb(232,218,39)"/><text x="37.8550%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="37.6050%" y="517" width="0.1050%" height="15" fill="rgb(248,166,6)"/><text x="37.8550%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.42%)</title><rect x="37.3950%" y="613" width="0.4202%" height="15" fill="rgb(247,89,20)"/><text x="37.6450%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="37.7101%" y="597" width="0.1050%" height="15" fill="rgb(248,130,54)"/><text x="37.9601%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="37.7101%" y="581" width="0.1050%" height="15" fill="rgb(234,196,4)"/><text x="37.9601%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="37.7101%" y="565" width="0.1050%" height="15" fill="rgb(250,143,31)"/><text x="37.9601%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="37.8151%" y="581" width="0.1050%" height="15" fill="rgb(211,110,34)"/><text x="38.0651%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.42%)</title><rect x="37.8151%" y="613" width="0.4202%" height="15" fill="rgb(215,124,48)"/><text x="38.0651%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.42%)</title><rect x="37.8151%" y="597" width="0.4202%" height="15" fill="rgb(216,46,13)"/><text x="38.0651%" y="607.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.32%)</title><rect x="37.9202%" y="581" width="0.3151%" height="15" fill="rgb(205,184,25)"/><text x="38.1702%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.32%)</title><rect x="37.9202%" y="565" width="0.3151%" height="15" fill="rgb(228,1,10)"/><text x="38.1702%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.32%)</title><rect x="37.9202%" y="549" width="0.3151%" height="15" fill="rgb(213,116,27)"/><text x="38.1702%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.32%)</title><rect x="37.9202%" y="533" width="0.3151%" height="15" fill="rgb(241,95,50)"/><text x="38.1702%" y="543.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.32%)</title><rect x="37.9202%" y="517" width="0.3151%" height="15" fill="rgb(238,48,32)"/><text x="38.1702%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="38.5504%" y="597" width="0.1050%" height="15" fill="rgb(235,113,49)"/><text x="38.8004%" y="607.50"></text></g><g><title>__rdl_realloc (1 samples, 0.11%)</title><rect x="38.6555%" y="597" width="0.1050%" height="15" fill="rgb(205,127,43)"/><text x="38.9055%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="38.7605%" y="597" width="0.1050%" height="15" fill="rgb(250,162,2)"/><text x="39.0105%" y="607.50"></text></g><g><title>__rust_realloc (1 samples, 0.11%)</title><rect x="38.7605%" y="581" width="0.1050%" height="15" fill="rgb(220,13,41)"/><text x="39.0105%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 1.58%)</title><rect x="37.3950%" y="629" width="1.5756%" height="15" fill="rgb(249,221,25)"/><text x="37.6450%" y="639.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (7 samples, 0.74%)</title><rect x="38.2353%" y="613" width="0.7353%" height="15" fill="rgb(215,208,19)"/><text x="38.4853%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="38.8655%" y="597" width="0.1050%" height="15" fill="rgb(236,175,2)"/><text x="39.1155%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="38.8655%" y="581" width="0.1050%" height="15" fill="rgb(241,52,2)"/><text x="39.1155%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.11%)</title><rect x="38.8655%" y="565" width="0.1050%" height="15" fill="rgb(248,140,14)"/><text x="39.1155%" y="575.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="38.9706%" y="533" width="0.1050%" height="15" fill="rgb(253,22,42)"/><text x="39.2206%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="38.9706%" y="517" width="0.1050%" height="15" fill="rgb(234,61,47)"/><text x="39.2206%" y="527.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.53%)</title><rect x="38.9706%" y="581" width="0.5252%" height="15" fill="rgb(208,226,15)"/><text x="39.2206%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.53%)</title><rect x="38.9706%" y="565" width="0.5252%" height="15" fill="rgb(217,221,4)"/><text x="39.2206%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.53%)</title><rect x="38.9706%" y="549" width="0.5252%" height="15" fill="rgb(212,174,34)"/><text x="39.2206%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.42%)</title><rect x="39.0756%" y="533" width="0.4202%" height="15" fill="rgb(253,83,4)"/><text x="39.3256%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.32%)</title><rect x="39.1807%" y="517" width="0.3151%" height="15" fill="rgb(250,195,49)"/><text x="39.4307%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.32%)</title><rect x="39.1807%" y="501" width="0.3151%" height="15" fill="rgb(241,192,25)"/><text x="39.4307%" y="511.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="39.3908%" y="485" width="0.1050%" height="15" fill="rgb(208,124,10)"/><text x="39.6408%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="39.4958%" y="565" width="0.2101%" height="15" fill="rgb(222,33,0)"/><text x="39.7458%" y="575.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="39.4958%" y="549" width="0.2101%" height="15" fill="rgb(234,209,28)"/><text x="39.7458%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="39.6008%" y="533" width="0.1050%" height="15" fill="rgb(224,11,23)"/><text x="39.8508%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="39.6008%" y="517" width="0.1050%" height="15" fill="rgb(232,99,1)"/><text x="39.8508%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="39.7059%" y="549" width="0.1050%" height="15" fill="rgb(237,95,45)"/><text x="39.9559%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.95%)</title><rect x="38.9706%" y="597" width="0.9454%" height="15" fill="rgb(208,109,11)"/><text x="39.2206%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.42%)</title><rect x="39.4958%" y="581" width="0.4202%" height="15" fill="rgb(216,190,48)"/><text x="39.7458%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="39.7059%" y="565" width="0.2101%" height="15" fill="rgb(251,171,36)"/><text x="39.9559%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="39.8109%" y="549" width="0.1050%" height="15" fill="rgb(230,62,22)"/><text x="40.0609%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="39.9160%" y="565" width="0.1050%" height="15" fill="rgb(225,114,35)"/><text x="40.1660%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.21%)</title><rect x="39.9160%" y="597" width="0.2101%" height="15" fill="rgb(215,118,42)"/><text x="40.1660%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.21%)</title><rect x="39.9160%" y="581" width="0.2101%" height="15" fill="rgb(243,119,21)"/><text x="40.1660%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.11%)</title><rect x="40.0210%" y="565" width="0.1050%" height="15" fill="rgb(252,177,53)"/><text x="40.2710%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="40.0210%" y="549" width="0.1050%" height="15" fill="rgb(237,209,29)"/><text x="40.2710%" y="559.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="40.3361%" y="581" width="0.1050%" height="15" fill="rgb(212,65,23)"/><text x="40.5861%" y="591.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="40.4412%" y="581" width="0.1050%" height="15" fill="rgb(230,222,46)"/><text x="40.6912%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (16 samples, 1.68%)</title><rect x="38.9706%" y="613" width="1.6807%" height="15" fill="rgb(215,135,32)"/><text x="39.2206%" y="623.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.53%)</title><rect x="40.1261%" y="597" width="0.5252%" height="15" fill="rgb(246,101,22)"/><text x="40.3761%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="40.5462%" y="581" width="0.1050%" height="15" fill="rgb(206,107,13)"/><text x="40.7962%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="40.5462%" y="565" width="0.1050%" height="15" fill="rgb(250,100,44)"/><text x="40.7962%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.21%)</title><rect x="40.6513%" y="613" width="0.2101%" height="15" fill="rgb(231,147,38)"/><text x="40.9013%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.21%)</title><rect x="40.6513%" y="597" width="0.2101%" height="15" fill="rgb(229,8,40)"/><text x="40.9013%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (2 samples, 0.21%)</title><rect x="40.6513%" y="581" width="0.2101%" height="15" fill="rgb(221,135,30)"/><text x="40.9013%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.21%)</title><rect x="40.6513%" y="565" width="0.2101%" height="15" fill="rgb(249,193,18)"/><text x="40.9013%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.21%)</title><rect x="40.6513%" y="549" width="0.2101%" height="15" fill="rgb(209,133,39)"/><text x="40.9013%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="40.7563%" y="533" width="0.1050%" height="15" fill="rgb(232,100,14)"/><text x="41.0063%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="40.7563%" y="517" width="0.1050%" height="15" fill="rgb(224,185,1)"/><text x="41.0063%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="40.8613%" y="597" width="0.1050%" height="15" fill="rgb(223,139,8)"/><text x="41.1113%" y="607.50"></text></g><g><title>__rdl_realloc (1 samples, 0.11%)</title><rect x="40.8613%" y="581" width="0.1050%" height="15" fill="rgb(232,213,38)"/><text x="41.1113%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="41.0714%" y="581" width="0.1050%" height="15" fill="rgb(207,94,22)"/><text x="41.3214%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (22 samples, 2.31%)</title><rect x="38.9706%" y="629" width="2.3109%" height="15" fill="rgb(219,183,54)"/><text x="39.2206%" y="639.50">&lt;..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.42%)</title><rect x="40.8613%" y="613" width="0.4202%" height="15" fill="rgb(216,185,54)"/><text x="41.1113%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.32%)</title><rect x="40.9664%" y="597" width="0.3151%" height="15" fill="rgb(254,217,39)"/><text x="41.2164%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="41.1765%" y="581" width="0.1050%" height="15" fill="rgb(240,178,23)"/><text x="41.4265%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="41.1765%" y="565" width="0.1050%" height="15" fill="rgb(218,11,47)"/><text x="41.4265%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="41.1765%" y="549" width="0.1050%" height="15" fill="rgb(218,51,51)"/><text x="41.4265%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="41.2815%" y="581" width="0.1050%" height="15" fill="rgb(238,126,27)"/><text x="41.5315%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.32%)</title><rect x="41.2815%" y="629" width="0.3151%" height="15" fill="rgb(249,202,22)"/><text x="41.5315%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.32%)</title><rect x="41.2815%" y="613" width="0.3151%" height="15" fill="rgb(254,195,49)"/><text x="41.5315%" y="623.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.32%)</title><rect x="41.2815%" y="597" width="0.3151%" height="15" fill="rgb(208,123,14)"/><text x="41.5315%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.21%)</title><rect x="41.3866%" y="581" width="0.2101%" height="15" fill="rgb(224,200,8)"/><text x="41.6366%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.21%)</title><rect x="41.3866%" y="565" width="0.2101%" height="15" fill="rgb(217,61,36)"/><text x="41.6366%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.21%)</title><rect x="41.3866%" y="549" width="0.2101%" height="15" fill="rgb(206,35,45)"/><text x="41.6366%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="41.5966%" y="629" width="0.1050%" height="15" fill="rgb(217,65,33)"/><text x="41.8466%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="41.7017%" y="613" width="0.1050%" height="15" fill="rgb(222,158,48)"/><text x="41.9517%" y="623.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.21%)</title><rect x="41.8067%" y="597" width="0.2101%" height="15" fill="rgb(254,2,54)"/><text x="42.0567%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (46 samples, 4.83%)</title><rect x="37.2899%" y="645" width="4.8319%" height="15" fill="rgb(250,143,38)"/><text x="37.5399%" y="655.50">&lt;sql_p..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.42%)</title><rect x="41.7017%" y="629" width="0.4202%" height="15" fill="rgb(248,25,0)"/><text x="41.9517%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.32%)</title><rect x="41.8067%" y="613" width="0.3151%" height="15" fill="rgb(206,152,27)"/><text x="42.0567%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="42.0168%" y="597" width="0.1050%" height="15" fill="rgb(240,77,30)"/><text x="42.2668%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="42.0168%" y="581" width="0.1050%" height="15" fill="rgb(231,5,3)"/><text x="42.2668%" y="591.50"></text></g><g><title>core::fmt::write (53 samples, 5.57%)</title><rect x="36.7647%" y="709" width="5.5672%" height="15" fill="rgb(207,226,32)"/><text x="37.0147%" y="719.50">core::f..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (52 samples, 5.46%)</title><rect x="36.8697%" y="693" width="5.4622%" height="15" fill="rgb(222,207,47)"/><text x="37.1197%" y="703.50">&lt;sql_pa..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (48 samples, 5.04%)</title><rect x="37.2899%" y="677" width="5.0420%" height="15" fill="rgb(229,115,45)"/><text x="37.5399%" y="687.50">&lt;sql_p..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (48 samples, 5.04%)</title><rect x="37.2899%" y="661" width="5.0420%" height="15" fill="rgb(224,191,6)"/><text x="37.5399%" y="671.50">&lt;sql_p..</text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.21%)</title><rect x="42.1218%" y="645" width="0.2101%" height="15" fill="rgb(230,227,24)"/><text x="42.3718%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="42.3319%" y="677" width="0.1050%" height="15" fill="rgb(228,80,19)"/><text x="42.5819%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="42.4370%" y="677" width="0.1050%" height="15" fill="rgb(247,229,0)"/><text x="42.6870%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="42.6471%" y="629" width="0.1050%" height="15" fill="rgb(237,194,15)"/><text x="42.8971%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="42.6471%" y="661" width="0.2101%" height="15" fill="rgb(219,203,20)"/><text x="42.8971%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="42.6471%" y="645" width="0.2101%" height="15" fill="rgb(234,128,8)"/><text x="42.8971%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="42.7521%" y="629" width="0.1050%" height="15" fill="rgb(248,202,8)"/><text x="43.0021%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="42.8571%" y="661" width="0.1050%" height="15" fill="rgb(206,104,37)"/><text x="43.1071%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="42.9622%" y="661" width="0.1050%" height="15" fill="rgb(223,8,27)"/><text x="43.2122%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="43.1723%" y="645" width="0.1050%" height="15" fill="rgb(216,217,28)"/><text x="43.4223%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="43.2773%" y="645" width="0.1050%" height="15" fill="rgb(249,199,1)"/><text x="43.5273%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 1.37%)</title><rect x="42.3319%" y="709" width="1.3655%" height="15" fill="rgb(240,85,17)"/><text x="42.5819%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 1.37%)</title><rect x="42.3319%" y="693" width="1.3655%" height="15" fill="rgb(206,108,45)"/><text x="42.5819%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.16%)</title><rect x="42.5420%" y="677" width="1.1555%" height="15" fill="rgb(245,210,41)"/><text x="42.7920%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.63%)</title><rect x="43.0672%" y="661" width="0.6303%" height="15" fill="rgb(206,13,37)"/><text x="43.3172%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="43.3824%" y="645" width="0.3151%" height="15" fill="rgb(250,61,18)"/><text x="43.6324%" y="655.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="43.5924%" y="629" width="0.1050%" height="15" fill="rgb(235,172,48)"/><text x="43.8424%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="43.5924%" y="613" width="0.1050%" height="15" fill="rgb(249,201,17)"/><text x="43.8424%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.21%)</title><rect x="44.3277%" y="693" width="0.2101%" height="15" fill="rgb(219,208,6)"/><text x="44.5777%" y="703.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.21%)</title><rect x="44.8529%" y="677" width="0.2101%" height="15" fill="rgb(248,31,23)"/><text x="45.1029%" y="687.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.21%)</title><rect x="45.0630%" y="677" width="0.2101%" height="15" fill="rgb(245,15,42)"/><text x="45.3130%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.21%)</title><rect x="45.0630%" y="661" width="0.2101%" height="15" fill="rgb(222,217,39)"/><text x="45.3130%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.26%)</title><rect x="44.5378%" y="693" width="1.2605%" height="15" fill="rgb(210,219,27)"/><text x="44.7878%" y="703.50"></text></g><g><title>mysql_common::row::new_row (5 samples, 0.53%)</title><rect x="45.2731%" y="677" width="0.5252%" height="15" fill="rgb(252,166,36)"/><text x="45.5231%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.53%)</title><rect x="45.2731%" y="661" width="0.5252%" height="15" fill="rgb(245,132,34)"/><text x="45.5231%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="45.7983%" y="693" width="0.1050%" height="15" fill="rgb(236,54,3)"/><text x="46.0483%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="45.9034%" y="693" width="0.3151%" height="15" fill="rgb(241,173,43)"/><text x="46.1534%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="46.2185%" y="693" width="0.1050%" height="15" fill="rgb(215,190,9)"/><text x="46.4685%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="46.2185%" y="677" width="0.1050%" height="15" fill="rgb(242,101,16)"/><text x="46.4685%" y="687.50"></text></g><g><title>_int_free (5 samples, 0.53%)</title><rect x="46.3235%" y="693" width="0.5252%" height="15" fill="rgb(223,190,21)"/><text x="46.5735%" y="703.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (3 samples, 0.32%)</title><rect x="46.9538%" y="661" width="0.3151%" height="15" fill="rgb(215,228,25)"/><text x="47.2038%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.32%)</title><rect x="46.9538%" y="645" width="0.3151%" height="15" fill="rgb(225,36,22)"/><text x="47.2038%" y="655.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (5 samples, 0.53%)</title><rect x="46.8487%" y="693" width="0.5252%" height="15" fill="rgb(251,106,46)"/><text x="47.0987%" y="703.50"></text></g><g><title>msql_srv::writers::column_definitions (5 samples, 0.53%)</title><rect x="46.8487%" y="677" width="0.5252%" height="15" fill="rgb(208,90,1)"/><text x="47.0987%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="47.2689%" y="661" width="0.1050%" height="15" fill="rgb(243,10,4)"/><text x="47.5189%" y="671.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::end_row (3 samples, 0.32%)</title><rect x="47.3739%" y="693" width="0.3151%" height="15" fill="rgb(212,137,27)"/><text x="47.6239%" y="703.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="47.5840%" y="677" width="0.1050%" height="15" fill="rgb(231,220,49)"/><text x="47.8340%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="47.5840%" y="661" width="0.1050%" height="15" fill="rgb(237,96,20)"/><text x="47.8340%" y="671.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="47.8992%" y="677" width="0.1050%" height="15" fill="rgb(239,229,30)"/><text x="48.1492%" y="687.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (5 samples, 0.53%)</title><rect x="47.6891%" y="693" width="0.5252%" height="15" fill="rgb(219,65,33)"/><text x="47.9391%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.21%)</title><rect x="48.0042%" y="677" width="0.2101%" height="15" fill="rgb(243,134,7)"/><text x="48.2542%" y="687.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (3 samples, 0.32%)</title><rect x="48.2143%" y="677" width="0.3151%" height="15" fill="rgb(216,177,54)"/><text x="48.4643%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="48.4244%" y="661" width="0.1050%" height="15" fill="rgb(211,160,20)"/><text x="48.6744%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.21%)</title><rect x="48.5294%" y="677" width="0.2101%" height="15" fill="rgb(239,85,39)"/><text x="48.7794%" y="687.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (7 samples, 0.74%)</title><rect x="48.2143%" y="693" width="0.7353%" height="15" fill="rgb(232,125,22)"/><text x="48.4643%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="48.7395%" y="677" width="0.2101%" height="15" fill="rgb(244,57,34)"/><text x="48.9895%" y="687.50"></text></g><g><title>mysql::conn::query_result::SetColumns::as_ref (1 samples, 0.11%)</title><rect x="48.9496%" y="693" width="0.1050%" height="15" fill="rgb(214,203,32)"/><text x="49.1996%" y="703.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (219 samples, 23.00%)</title><rect x="26.3655%" y="725" width="23.0042%" height="15" fill="rgb(207,58,43)"/><text x="26.6155%" y="735.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;..</text></g><g><title>decor::answer_rows (54 samples, 5.67%)</title><rect x="43.6975%" y="709" width="5.6723%" height="15" fill="rgb(215,193,15)"/><text x="43.9475%" y="719.50">decor::..</text></g><g><title>mysql_common::row::Row::unwrap (3 samples, 0.32%)</title><rect x="49.0546%" y="693" width="0.3151%" height="15" fill="rgb(232,15,44)"/><text x="49.3046%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.32%)</title><rect x="49.0546%" y="677" width="0.3151%" height="15" fill="rgb(212,3,48)"/><text x="49.3046%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.3697%" y="725" width="0.1050%" height="15" fill="rgb(218,128,7)"/><text x="49.6197%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.3697%" y="709" width="0.1050%" height="15" fill="rgb(226,216,39)"/><text x="49.6197%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="49.3697%" y="693" width="0.1050%" height="15" fill="rgb(243,47,51)"/><text x="49.6197%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.3697%" y="677" width="0.1050%" height="15" fill="rgb(241,183,40)"/><text x="49.6197%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.3697%" y="661" width="0.1050%" height="15" fill="rgb(231,217,32)"/><text x="49.6197%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.3697%" y="645" width="0.1050%" height="15" fill="rgb(229,61,38)"/><text x="49.6197%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="49.3697%" y="629" width="0.1050%" height="15" fill="rgb(225,210,5)"/><text x="49.6197%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.3697%" y="613" width="0.1050%" height="15" fill="rgb(231,79,45)"/><text x="49.6197%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="49.3697%" y="597" width="0.1050%" height="15" fill="rgb(224,100,7)"/><text x="49.6197%" y="607.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="49.7899%" y="613" width="0.1050%" height="15" fill="rgb(241,198,18)"/><text x="50.0399%" y="623.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="50.1050%" y="549" width="0.1050%" height="15" fill="rgb(252,97,53)"/><text x="50.3550%" y="559.50"></text></g><g><title>dst_release (2 samples, 0.21%)</title><rect x="50.5252%" y="485" width="0.2101%" height="15" fill="rgb(220,88,7)"/><text x="50.7752%" y="495.50"></text></g><g><title>__kfree_skb (3 samples, 0.32%)</title><rect x="50.5252%" y="517" width="0.3151%" height="15" fill="rgb(213,176,14)"/><text x="50.7752%" y="527.50"></text></g><g><title>skb_release_head_state (3 samples, 0.32%)</title><rect x="50.5252%" y="501" width="0.3151%" height="15" fill="rgb(246,73,7)"/><text x="50.7752%" y="511.50"></text></g><g><title>sock_rfree (1 samples, 0.11%)</title><rect x="50.7353%" y="485" width="0.1050%" height="15" fill="rgb(245,64,36)"/><text x="50.9853%" y="495.50"></text></g><g><title>__ksize (1 samples, 0.11%)</title><rect x="51.1555%" y="485" width="0.1050%" height="15" fill="rgb(245,80,10)"/><text x="51.4055%" y="495.50"></text></g><g><title>memset_erms (1 samples, 0.11%)</title><rect x="51.2605%" y="469" width="0.1050%" height="15" fill="rgb(232,107,50)"/><text x="51.5105%" y="479.50"></text></g><g><title>__tcp_send_ack.part.0 (6 samples, 0.63%)</title><rect x="50.8403%" y="517" width="0.6303%" height="15" fill="rgb(253,3,0)"/><text x="51.0903%" y="527.50"></text></g><g><title>__alloc_skb (5 samples, 0.53%)</title><rect x="50.9454%" y="501" width="0.5252%" height="15" fill="rgb(212,99,53)"/><text x="51.1954%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.21%)</title><rect x="51.2605%" y="485" width="0.2101%" height="15" fill="rgb(249,111,54)"/><text x="51.5105%" y="495.50"></text></g><g><title>should_failslab (1 samples, 0.11%)</title><rect x="51.3655%" y="469" width="0.1050%" height="15" fill="rgb(249,55,30)"/><text x="51.6155%" y="479.50"></text></g><g><title>__sk_dst_check (2 samples, 0.21%)</title><rect x="51.7857%" y="485" width="0.2101%" height="15" fill="rgb(237,47,42)"/><text x="52.0357%" y="495.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.11%)</title><rect x="51.8908%" y="469" width="0.1050%" height="15" fill="rgb(211,20,18)"/><text x="52.1408%" y="479.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="51.9958%" y="437" width="0.1050%" height="15" fill="rgb(231,203,46)"/><text x="52.2458%" y="447.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="52.1008%" y="437" width="0.1050%" height="15" fill="rgb(237,142,3)"/><text x="52.3508%" y="447.50"></text></g><g><title>loopback_xmit (1 samples, 0.11%)</title><rect x="52.1008%" y="421" width="0.1050%" height="15" fill="rgb(241,107,1)"/><text x="52.3508%" y="431.50"></text></g><g><title>netif_rx (1 samples, 0.11%)</title><rect x="52.1008%" y="405" width="0.1050%" height="15" fill="rgb(229,83,13)"/><text x="52.3508%" y="415.50"></text></g><g><title>netif_rx_internal (1 samples, 0.11%)</title><rect x="52.1008%" y="389" width="0.1050%" height="15" fill="rgb(241,91,40)"/><text x="52.3508%" y="399.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="52.1008%" y="373" width="0.1050%" height="15" fill="rgb(225,3,45)"/><text x="52.3508%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="52.1008%" y="357" width="0.1050%" height="15" fill="rgb(244,223,14)"/><text x="52.3508%" y="367.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.32%)</title><rect x="51.9958%" y="453" width="0.3151%" height="15" fill="rgb(224,124,37)"/><text x="52.2458%" y="463.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.11%)</title><rect x="52.2059%" y="437" width="0.1050%" height="15" fill="rgb(251,171,30)"/><text x="52.4559%" y="447.50"></text></g><g><title>netif_skb_features (1 samples, 0.11%)</title><rect x="52.2059%" y="421" width="0.1050%" height="15" fill="rgb(236,46,54)"/><text x="52.4559%" y="431.50"></text></g><g><title>raw_local_deliver (2 samples, 0.21%)</title><rect x="52.4160%" y="277" width="0.2101%" height="15" fill="rgb(245,213,5)"/><text x="52.6660%" y="287.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.32%)</title><rect x="52.7311%" y="261" width="0.3151%" height="15" fill="rgb(230,144,27)"/><text x="52.9811%" y="271.50"></text></g><g><title>inet_ehashfn (1 samples, 0.11%)</title><rect x="52.9412%" y="245" width="0.1050%" height="15" fill="rgb(220,86,6)"/><text x="53.1912%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="53.0462%" y="261" width="0.1050%" height="15" fill="rgb(240,20,13)"/><text x="53.2962%" y="271.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="53.2563%" y="213" width="0.1050%" height="15" fill="rgb(217,89,34)"/><text x="53.5063%" y="223.50"></text></g><g><title>__kfree_skb (2 samples, 0.21%)</title><rect x="53.2563%" y="229" width="0.2101%" height="15" fill="rgb(229,13,5)"/><text x="53.5063%" y="239.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="53.3613%" y="213" width="0.1050%" height="15" fill="rgb(244,67,35)"/><text x="53.6113%" y="223.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="53.5714%" y="197" width="0.1050%" height="15" fill="rgb(221,40,2)"/><text x="53.8214%" y="207.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="53.5714%" y="181" width="0.1050%" height="15" fill="rgb(237,157,21)"/><text x="53.8214%" y="191.50"></text></g><g><title>__kfree_skb (3 samples, 0.32%)</title><rect x="53.5714%" y="213" width="0.3151%" height="15" fill="rgb(222,94,11)"/><text x="53.8214%" y="223.50"></text></g><g><title>skb_release_data (2 samples, 0.21%)</title><rect x="53.6765%" y="197" width="0.2101%" height="15" fill="rgb(249,113,6)"/><text x="53.9265%" y="207.50"></text></g><g><title>bictcp_cong_avoid (1 samples, 0.11%)</title><rect x="53.8866%" y="213" width="0.1050%" height="15" fill="rgb(238,137,36)"/><text x="54.1366%" y="223.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="53.9916%" y="213" width="0.1050%" height="15" fill="rgb(210,102,26)"/><text x="54.2416%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (17 samples, 1.79%)</title><rect x="52.4160%" y="357" width="1.7857%" height="15" fill="rgb(218,30,30)"/><text x="52.6660%" y="367.50">_..</text></g><g><title>ip_rcv (17 samples, 1.79%)</title><rect x="52.4160%" y="341" width="1.7857%" height="15" fill="rgb(214,67,26)"/><text x="52.6660%" y="351.50">i..</text></g><g><title>ip_local_deliver (17 samples, 1.79%)</title><rect x="52.4160%" y="325" width="1.7857%" height="15" fill="rgb(251,9,53)"/><text x="52.6660%" y="335.50">i..</text></g><g><title>ip_local_deliver_finish (17 samples, 1.79%)</title><rect x="52.4160%" y="309" width="1.7857%" height="15" fill="rgb(228,204,25)"/><text x="52.6660%" y="319.50">i..</text></g><g><title>ip_protocol_deliver_rcu (17 samples, 1.79%)</title><rect x="52.4160%" y="293" width="1.7857%" height="15" fill="rgb(207,153,8)"/><text x="52.6660%" y="303.50">i..</text></g><g><title>tcp_v4_rcv (15 samples, 1.58%)</title><rect x="52.6261%" y="277" width="1.5756%" height="15" fill="rgb(242,9,16)"/><text x="52.8761%" y="287.50"></text></g><g><title>tcp_v4_do_rcv (10 samples, 1.05%)</title><rect x="53.1513%" y="261" width="1.0504%" height="15" fill="rgb(217,211,10)"/><text x="53.4013%" y="271.50"></text></g><g><title>tcp_rcv_established (10 samples, 1.05%)</title><rect x="53.1513%" y="245" width="1.0504%" height="15" fill="rgb(219,228,52)"/><text x="53.4013%" y="255.50"></text></g><g><title>tcp_ack (7 samples, 0.74%)</title><rect x="53.4664%" y="229" width="0.7353%" height="15" fill="rgb(231,92,29)"/><text x="53.7164%" y="239.50"></text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.11%)</title><rect x="54.0966%" y="213" width="0.1050%" height="15" fill="rgb(232,8,23)"/><text x="54.3466%" y="223.50"></text></g><g><title>__tcp_transmit_skb (27 samples, 2.84%)</title><rect x="51.4706%" y="517" width="2.8361%" height="15" fill="rgb(216,211,34)"/><text x="51.7206%" y="527.50">__..</text></g><g><title>__ip_queue_xmit (25 samples, 2.63%)</title><rect x="51.6807%" y="501" width="2.6261%" height="15" fill="rgb(236,151,0)"/><text x="51.9307%" y="511.50">__..</text></g><g><title>ip_output (22 samples, 2.31%)</title><rect x="51.9958%" y="485" width="2.3109%" height="15" fill="rgb(209,168,3)"/><text x="52.2458%" y="495.50">i..</text></g><g><title>ip_finish_output2 (22 samples, 2.31%)</title><rect x="51.9958%" y="469" width="2.3109%" height="15" fill="rgb(208,129,28)"/><text x="52.2458%" y="479.50">i..</text></g><g><title>__local_bh_enable_ip (19 samples, 2.00%)</title><rect x="52.3109%" y="453" width="1.9958%" height="15" fill="rgb(229,78,22)"/><text x="52.5609%" y="463.50">_..</text></g><g><title>do_softirq (19 samples, 2.00%)</title><rect x="52.3109%" y="437" width="1.9958%" height="15" fill="rgb(228,187,13)"/><text x="52.5609%" y="447.50">d..</text></g><g><title>do_softirq_own_stack (18 samples, 1.89%)</title><rect x="52.4160%" y="421" width="1.8908%" height="15" fill="rgb(240,119,24)"/><text x="52.6660%" y="431.50">d..</text></g><g><title>__do_softirq (18 samples, 1.89%)</title><rect x="52.4160%" y="405" width="1.8908%" height="15" fill="rgb(209,194,42)"/><text x="52.6660%" y="415.50">_..</text></g><g><title>net_rx_action (18 samples, 1.89%)</title><rect x="52.4160%" y="389" width="1.8908%" height="15" fill="rgb(247,200,46)"/><text x="52.6660%" y="399.50">n..</text></g><g><title>process_backlog (18 samples, 1.89%)</title><rect x="52.4160%" y="373" width="1.8908%" height="15" fill="rgb(218,76,16)"/><text x="52.6660%" y="383.50">p..</text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="54.2017%" y="357" width="0.1050%" height="15" fill="rgb(225,21,48)"/><text x="54.4517%" y="367.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="54.2017%" y="341" width="0.1050%" height="15" fill="rgb(239,223,50)"/><text x="54.4517%" y="351.50"></text></g><g><title>kfree_skbmem (1 samples, 0.11%)</title><rect x="54.3067%" y="517" width="0.1050%" height="15" fill="rgb(244,45,21)"/><text x="54.5567%" y="527.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.21%)</title><rect x="54.4118%" y="501" width="0.2101%" height="15" fill="rgb(232,33,43)"/><text x="54.6618%" y="511.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="54.5168%" y="485" width="0.1050%" height="15" fill="rgb(209,8,3)"/><text x="54.7668%" y="495.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="54.8319%" y="421" width="0.1050%" height="15" fill="rgb(214,25,53)"/><text x="55.0819%" y="431.50"></text></g><g><title>intel_pmu_disable_all (1 samples, 0.11%)</title><rect x="54.9370%" y="405" width="0.1050%" height="15" fill="rgb(254,186,54)"/><text x="55.1870%" y="415.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.32%)</title><rect x="54.8319%" y="437" width="0.3151%" height="15" fill="rgb(208,174,49)"/><text x="55.0819%" y="447.50"></text></g><g><title>ctx_sched_out (2 samples, 0.21%)</title><rect x="54.9370%" y="421" width="0.2101%" height="15" fill="rgb(233,191,51)"/><text x="55.1870%" y="431.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="55.0420%" y="405" width="0.1050%" height="15" fill="rgb(222,134,10)"/><text x="55.2920%" y="415.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="55.0420%" y="389" width="0.1050%" height="15" fill="rgb(230,226,20)"/><text x="55.2920%" y="399.50"></text></g><g><title>account_entity_dequeue (1 samples, 0.11%)</title><rect x="55.3571%" y="405" width="0.1050%" height="15" fill="rgb(251,111,25)"/><text x="55.6071%" y="415.50"></text></g><g><title>update_curr (3 samples, 0.32%)</title><rect x="55.4622%" y="405" width="0.3151%" height="15" fill="rgb(224,40,46)"/><text x="55.7122%" y="415.50"></text></g><g><title>cpuacct_charge (2 samples, 0.21%)</title><rect x="55.5672%" y="389" width="0.2101%" height="15" fill="rgb(236,108,47)"/><text x="55.8172%" y="399.50"></text></g><g><title>dequeue_task_fair (9 samples, 0.95%)</title><rect x="55.1471%" y="437" width="0.9454%" height="15" fill="rgb(234,93,0)"/><text x="55.3971%" y="447.50"></text></g><g><title>dequeue_entity (8 samples, 0.84%)</title><rect x="55.2521%" y="421" width="0.8403%" height="15" fill="rgb(224,213,32)"/><text x="55.5021%" y="431.50"></text></g><g><title>update_load_avg (3 samples, 0.32%)</title><rect x="55.7773%" y="405" width="0.3151%" height="15" fill="rgb(251,11,48)"/><text x="56.0273%" y="415.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="55.9874%" y="389" width="0.1050%" height="15" fill="rgb(236,173,5)"/><text x="56.2374%" y="399.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.21%)</title><rect x="56.0924%" y="437" width="0.2101%" height="15" fill="rgb(230,95,12)"/><text x="56.3424%" y="447.50"></text></g><g><title>newidle_balance (2 samples, 0.21%)</title><rect x="56.0924%" y="421" width="0.2101%" height="15" fill="rgb(232,209,1)"/><text x="56.3424%" y="431.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="56.1975%" y="405" width="0.1050%" height="15" fill="rgb(232,6,1)"/><text x="56.4475%" y="415.50"></text></g><g><title>psi_task_change (4 samples, 0.42%)</title><rect x="56.3025%" y="437" width="0.4202%" height="15" fill="rgb(210,224,50)"/><text x="56.5525%" y="447.50"></text></g><g><title>psi_group_change (4 samples, 0.42%)</title><rect x="56.3025%" y="421" width="0.4202%" height="15" fill="rgb(228,127,35)"/><text x="56.5525%" y="431.50"></text></g><g><title>record_times (3 samples, 0.32%)</title><rect x="56.4076%" y="405" width="0.3151%" height="15" fill="rgb(245,102,45)"/><text x="56.6576%" y="415.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.32%)</title><rect x="56.4076%" y="389" width="0.3151%" height="15" fill="rgb(214,1,49)"/><text x="56.6576%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="56.6176%" y="373" width="0.1050%" height="15" fill="rgb(226,163,40)"/><text x="56.8676%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="56.6176%" y="357" width="0.1050%" height="15" fill="rgb(239,212,28)"/><text x="56.8676%" y="367.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.21%)</title><rect x="56.7227%" y="437" width="0.2101%" height="15" fill="rgb(220,20,13)"/><text x="56.9727%" y="447.50"></text></g><g><title>put_prev_entity (2 samples, 0.21%)</title><rect x="56.7227%" y="421" width="0.2101%" height="15" fill="rgb(210,164,35)"/><text x="56.9727%" y="431.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.11%)</title><rect x="56.9328%" y="437" width="0.1050%" height="15" fill="rgb(248,109,41)"/><text x="57.1828%" y="447.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.11%)</title><rect x="56.9328%" y="421" width="0.1050%" height="15" fill="rgb(238,23,50)"/><text x="57.1828%" y="431.50"></text></g><g><title>uclamp_rq_dec_id (1 samples, 0.11%)</title><rect x="57.0378%" y="437" width="0.1050%" height="15" fill="rgb(211,48,49)"/><text x="57.2878%" y="447.50"></text></g><g><title>sk_wait_data (29 samples, 3.05%)</title><rect x="54.4118%" y="517" width="3.0462%" height="15" fill="rgb(223,36,21)"/><text x="54.6618%" y="527.50">sk_..</text></g><g><title>wait_woken (27 samples, 2.84%)</title><rect x="54.6218%" y="501" width="2.8361%" height="15" fill="rgb(207,123,46)"/><text x="54.8718%" y="511.50">wa..</text></g><g><title>schedule_timeout (25 samples, 2.63%)</title><rect x="54.8319%" y="485" width="2.6261%" height="15" fill="rgb(240,218,32)"/><text x="55.0819%" y="495.50">sc..</text></g><g><title>schedule (25 samples, 2.63%)</title><rect x="54.8319%" y="469" width="2.6261%" height="15" fill="rgb(252,5,43)"/><text x="55.0819%" y="479.50">sc..</text></g><g><title>__schedule (25 samples, 2.63%)</title><rect x="54.8319%" y="453" width="2.6261%" height="15" fill="rgb(252,84,19)"/><text x="55.0819%" y="463.50">__..</text></g><g><title>update_rq_clock (3 samples, 0.32%)</title><rect x="57.1429%" y="437" width="0.3151%" height="15" fill="rgb(243,152,39)"/><text x="57.3929%" y="447.50"></text></g><g><title>update_irq_load_avg (3 samples, 0.32%)</title><rect x="57.1429%" y="421" width="0.3151%" height="15" fill="rgb(234,160,15)"/><text x="57.3929%" y="431.50"></text></g><g><title>inet_recvmsg (72 samples, 7.56%)</title><rect x="50.2101%" y="549" width="7.5630%" height="15" fill="rgb(237,34,20)"/><text x="50.4601%" y="559.50">inet_recvm..</text></g><g><title>tcp_recvmsg (72 samples, 7.56%)</title><rect x="50.2101%" y="533" width="7.5630%" height="15" fill="rgb(229,97,13)"/><text x="50.4601%" y="543.50">tcp_recvmsg</text></g><g><title>skb_copy_datagram_iter (3 samples, 0.32%)</title><rect x="57.4580%" y="517" width="0.3151%" height="15" fill="rgb(234,71,50)"/><text x="57.7080%" y="527.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.32%)</title><rect x="57.4580%" y="501" width="0.3151%" height="15" fill="rgb(253,155,4)"/><text x="57.7080%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (78 samples, 8.19%)</title><rect x="49.8950%" y="581" width="8.1933%" height="15" fill="rgb(222,185,37)"/><text x="50.1450%" y="591.50">__x64_sys_r..</text></g><g><title>__sys_recvfrom (77 samples, 8.09%)</title><rect x="50.0000%" y="565" width="8.0882%" height="15" fill="rgb(251,177,13)"/><text x="50.2500%" y="575.50">__sys_recvf..</text></g><g><title>sockfd_lookup_light (3 samples, 0.32%)</title><rect x="57.7731%" y="549" width="0.3151%" height="15" fill="rgb(250,179,40)"/><text x="58.0231%" y="559.50"></text></g><g><title>__fget_light (2 samples, 0.21%)</title><rect x="57.8782%" y="533" width="0.2101%" height="15" fill="rgb(242,44,2)"/><text x="58.1282%" y="543.50"></text></g><g><title>__fget_files (2 samples, 0.21%)</title><rect x="57.8782%" y="517" width="0.2101%" height="15" fill="rgb(216,177,13)"/><text x="58.1282%" y="527.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="57.9832%" y="501" width="0.1050%" height="15" fill="rgb(216,106,43)"/><text x="58.2332%" y="511.50"></text></g><g><title>do_syscall_64 (80 samples, 8.40%)</title><rect x="49.8950%" y="597" width="8.4034%" height="15" fill="rgb(216,183,2)"/><text x="50.1450%" y="607.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (2 samples, 0.21%)</title><rect x="58.0882%" y="581" width="0.2101%" height="15" fill="rgb(249,75,3)"/><text x="58.3382%" y="591.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="58.1933%" y="565" width="0.1050%" height="15" fill="rgb(219,67,39)"/><text x="58.4433%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (85 samples, 8.93%)</title><rect x="49.8950%" y="613" width="8.9286%" height="15" fill="rgb(253,228,2)"/><text x="50.1450%" y="623.50">entry_SYSCALL..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.53%)</title><rect x="58.2983%" y="597" width="0.5252%" height="15" fill="rgb(235,138,27)"/><text x="58.5483%" y="607.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (89 samples, 9.35%)</title><rect x="49.5798%" y="693" width="9.3487%" height="15" fill="rgb(236,97,51)"/><text x="49.8298%" y="703.50">&lt;std::net::tc..</text></g><g><title>std::sys_common::net::TcpStream::read (89 samples, 9.35%)</title><rect x="49.5798%" y="677" width="9.3487%" height="15" fill="rgb(240,80,30)"/><text x="49.8298%" y="687.50">std::sys_comm..</text></g><g><title>std::sys::unix::net::Socket::read (89 samples, 9.35%)</title><rect x="49.5798%" y="661" width="9.3487%" height="15" fill="rgb(230,178,19)"/><text x="49.8298%" y="671.50">std::sys::uni..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (89 samples, 9.35%)</title><rect x="49.5798%" y="645" width="9.3487%" height="15" fill="rgb(210,190,27)"/><text x="49.8298%" y="655.50">std::sys::uni..</text></g><g><title>__libc_recv (89 samples, 9.35%)</title><rect x="49.5798%" y="629" width="9.3487%" height="15" fill="rgb(222,107,31)"/><text x="49.8298%" y="639.50">__libc_recv</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="58.8235%" y="613" width="0.1050%" height="15" fill="rgb(216,127,34)"/><text x="59.0735%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (90 samples, 9.45%)</title><rect x="49.5798%" y="709" width="9.4538%" height="15" fill="rgb(234,116,52)"/><text x="49.8298%" y="719.50">&lt;std::io::buff..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="58.9286%" y="693" width="0.1050%" height="15" fill="rgb(222,124,15)"/><text x="59.1786%" y="703.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (92 samples, 9.66%)</title><rect x="49.4748%" y="725" width="9.6639%" height="15" fill="rgb(231,179,28)"/><text x="49.7248%" y="735.50">msql_srv::pack..</text></g><g><title>__memset_avx2_erms (1 samples, 0.11%)</title><rect x="59.0336%" y="709" width="0.1050%" height="15" fill="rgb(226,93,45)"/><text x="59.2836%" y="719.50"></text></g><g><title>&lt;std::io::buffered::BufWriter&lt;W&gt;::flush_buf::BufGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="59.1387%" y="709" width="0.1050%" height="15" fill="rgb(215,8,51)"/><text x="59.3887%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::drain (1 samples, 0.11%)</title><rect x="59.1387%" y="693" width="0.1050%" height="15" fill="rgb(223,106,5)"/><text x="59.3887%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1 samples, 0.11%)</title><rect x="59.1387%" y="677" width="0.1050%" height="15" fill="rgb(250,191,5)"/><text x="59.3887%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="59.2437%" y="661" width="0.1050%" height="15" fill="rgb(242,132,44)"/><text x="59.4937%" y="671.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="59.3487%" y="661" width="0.1050%" height="15" fill="rgb(251,152,29)"/><text x="59.5987%" y="671.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="59.4538%" y="661" width="0.1050%" height="15" fill="rgb(218,179,5)"/><text x="59.7038%" y="671.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="59.8739%" y="565" width="0.1050%" height="15" fill="rgb(227,67,19)"/><text x="60.1239%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="59.8739%" y="549" width="0.1050%" height="15" fill="rgb(233,119,31)"/><text x="60.1239%" y="559.50"></text></g><g><title>__sk_dst_check (2 samples, 0.21%)</title><rect x="61.2395%" y="485" width="0.2101%" height="15" fill="rgb(241,120,22)"/><text x="61.4895%" y="495.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.21%)</title><rect x="61.2395%" y="469" width="0.2101%" height="15" fill="rgb(224,102,30)"/><text x="61.4895%" y="479.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="62.0798%" y="373" width="0.1050%" height="15" fill="rgb(210,164,37)"/><text x="62.3298%" y="383.50"></text></g><g><title>__raise_softirq_irqoff (1 samples, 0.11%)</title><rect x="62.0798%" y="357" width="0.1050%" height="15" fill="rgb(226,191,16)"/><text x="62.3298%" y="367.50"></text></g><g><title>netif_rx (2 samples, 0.21%)</title><rect x="62.0798%" y="405" width="0.2101%" height="15" fill="rgb(214,40,45)"/><text x="62.3298%" y="415.50"></text></g><g><title>netif_rx_internal (2 samples, 0.21%)</title><rect x="62.0798%" y="389" width="0.2101%" height="15" fill="rgb(244,29,26)"/><text x="62.3298%" y="399.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.11%)</title><rect x="62.1849%" y="373" width="0.1050%" height="15" fill="rgb(216,16,5)"/><text x="62.4349%" y="383.50"></text></g><g><title>read_tsc (1 samples, 0.11%)</title><rect x="62.1849%" y="357" width="0.1050%" height="15" fill="rgb(249,76,35)"/><text x="62.4349%" y="367.50"></text></g><g><title>sk_free (1 samples, 0.11%)</title><rect x="62.2899%" y="405" width="0.1050%" height="15" fill="rgb(207,11,44)"/><text x="62.5399%" y="415.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.84%)</title><rect x="61.6597%" y="453" width="0.8403%" height="15" fill="rgb(228,190,49)"/><text x="61.9097%" y="463.50"></text></g><g><title>dev_hard_start_xmit (4 samples, 0.42%)</title><rect x="62.0798%" y="437" width="0.4202%" height="15" fill="rgb(214,173,12)"/><text x="62.3298%" y="447.50"></text></g><g><title>loopback_xmit (4 samples, 0.42%)</title><rect x="62.0798%" y="421" width="0.4202%" height="15" fill="rgb(218,26,35)"/><text x="62.3298%" y="431.50"></text></g><g><title>tcp_wfree (1 samples, 0.11%)</title><rect x="62.3950%" y="405" width="0.1050%" height="15" fill="rgb(220,200,19)"/><text x="62.6450%" y="415.50"></text></g><g><title>irqtime_account_irq (3 samples, 0.32%)</title><rect x="62.7101%" y="389" width="0.3151%" height="15" fill="rgb(239,95,49)"/><text x="62.9601%" y="399.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.32%)</title><rect x="62.7101%" y="373" width="0.3151%" height="15" fill="rgb(235,85,53)"/><text x="62.9601%" y="383.50"></text></g><g><title>sched_clock (3 samples, 0.32%)</title><rect x="62.7101%" y="357" width="0.3151%" height="15" fill="rgb(233,133,31)"/><text x="62.9601%" y="367.50"></text></g><g><title>native_sched_clock (3 samples, 0.32%)</title><rect x="62.7101%" y="341" width="0.3151%" height="15" fill="rgb(218,25,20)"/><text x="62.9601%" y="351.50"></text></g><g><title>__netif_receive_skb (1 samples, 0.11%)</title><rect x="63.3403%" y="357" width="0.1050%" height="15" fill="rgb(252,210,38)"/><text x="63.5903%" y="367.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="63.4454%" y="341" width="0.1050%" height="15" fill="rgb(242,134,21)"/><text x="63.6954%" y="351.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.21%)</title><rect x="64.2857%" y="261" width="0.2101%" height="15" fill="rgb(213,28,48)"/><text x="64.5357%" y="271.50"></text></g><g><title>inet_ehashfn (1 samples, 0.11%)</title><rect x="64.3908%" y="245" width="0.1050%" height="15" fill="rgb(250,196,2)"/><text x="64.6408%" y="255.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.11%)</title><rect x="64.4958%" y="261" width="0.1050%" height="15" fill="rgb(227,5,17)"/><text x="64.7458%" y="271.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="64.4958%" y="245" width="0.1050%" height="15" fill="rgb(221,226,24)"/><text x="64.7458%" y="255.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.11%)</title><rect x="64.7059%" y="229" width="0.1050%" height="15" fill="rgb(211,5,48)"/><text x="64.9559%" y="239.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="65.0210%" y="165" width="0.1050%" height="15" fill="rgb(219,150,6)"/><text x="65.2710%" y="175.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="65.0210%" y="149" width="0.1050%" height="15" fill="rgb(251,46,16)"/><text x="65.2710%" y="159.50"></text></g><g><title>psi_task_change (6 samples, 0.63%)</title><rect x="65.1261%" y="149" width="0.6303%" height="15" fill="rgb(220,204,40)"/><text x="65.3761%" y="159.50"></text></g><g><title>psi_group_change (4 samples, 0.42%)</title><rect x="65.3361%" y="133" width="0.4202%" height="15" fill="rgb(211,85,2)"/><text x="65.5861%" y="143.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="65.6513%" y="117" width="0.1050%" height="15" fill="rgb(229,17,7)"/><text x="65.9013%" y="127.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="65.6513%" y="101" width="0.1050%" height="15" fill="rgb(239,72,28)"/><text x="65.9013%" y="111.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="65.6513%" y="85" width="0.1050%" height="15" fill="rgb(230,47,54)"/><text x="65.9013%" y="95.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="65.6513%" y="69" width="0.1050%" height="15" fill="rgb(214,50,8)"/><text x="65.9013%" y="79.50"></text></g><g><title>enqueue_task (9 samples, 0.95%)</title><rect x="65.1261%" y="165" width="0.9454%" height="15" fill="rgb(216,198,43)"/><text x="65.3761%" y="175.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.32%)</title><rect x="65.7563%" y="149" width="0.3151%" height="15" fill="rgb(234,20,35)"/><text x="66.0063%" y="159.50"></text></g><g><title>reweight_entity (1 samples, 0.11%)</title><rect x="66.3866%" y="133" width="0.1050%" height="15" fill="rgb(254,45,19)"/><text x="66.6366%" y="143.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.63%)</title><rect x="66.0714%" y="165" width="0.6303%" height="15" fill="rgb(219,14,44)"/><text x="66.3214%" y="175.50"></text></g><g><title>enqueue_entity (4 samples, 0.42%)</title><rect x="66.2815%" y="149" width="0.4202%" height="15" fill="rgb(217,220,26)"/><text x="66.5315%" y="159.50"></text></g><g><title>update_load_avg (2 samples, 0.21%)</title><rect x="66.4916%" y="133" width="0.2101%" height="15" fill="rgb(213,158,28)"/><text x="66.7416%" y="143.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.32%)</title><rect x="66.7017%" y="165" width="0.3151%" height="15" fill="rgb(252,51,52)"/><text x="66.9517%" y="175.50"></text></g><g><title>check_preempt_curr (2 samples, 0.21%)</title><rect x="66.8067%" y="149" width="0.2101%" height="15" fill="rgb(246,89,16)"/><text x="67.0567%" y="159.50"></text></g><g><title>resched_curr (2 samples, 0.21%)</title><rect x="66.8067%" y="133" width="0.2101%" height="15" fill="rgb(216,158,49)"/><text x="67.0567%" y="143.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="66.9118%" y="117" width="0.1050%" height="15" fill="rgb(236,107,19)"/><text x="67.1618%" y="127.50"></text></g><g><title>__wake_up_common (23 samples, 2.42%)</title><rect x="64.9160%" y="197" width="2.4160%" height="15" fill="rgb(228,185,30)"/><text x="65.1660%" y="207.50">__..</text></g><g><title>try_to_wake_up (23 samples, 2.42%)</title><rect x="64.9160%" y="181" width="2.4160%" height="15" fill="rgb(246,134,8)"/><text x="65.1660%" y="191.50">tr..</text></g><g><title>update_rq_clock (3 samples, 0.32%)</title><rect x="67.0168%" y="165" width="0.3151%" height="15" fill="rgb(214,143,50)"/><text x="67.2668%" y="175.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="67.3319%" y="197" width="0.1050%" height="15" fill="rgb(228,75,8)"/><text x="67.5819%" y="207.50"></text></g><g><title>sock_def_readable (26 samples, 2.73%)</title><rect x="64.8109%" y="229" width="2.7311%" height="15" fill="rgb(207,175,4)"/><text x="65.0609%" y="239.50">so..</text></g><g><title>__wake_up_common_lock (25 samples, 2.63%)</title><rect x="64.9160%" y="213" width="2.6261%" height="15" fill="rgb(205,108,24)"/><text x="65.1660%" y="223.50">__..</text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="67.4370%" y="197" width="0.1050%" height="15" fill="rgb(244,120,49)"/><text x="67.6870%" y="207.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="67.4370%" y="181" width="0.1050%" height="15" fill="rgb(223,47,38)"/><text x="67.6870%" y="191.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="67.4370%" y="165" width="0.1050%" height="15" fill="rgb(229,179,11)"/><text x="67.6870%" y="175.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.11%)</title><rect x="67.4370%" y="149" width="0.1050%" height="15" fill="rgb(231,122,1)"/><text x="67.6870%" y="159.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="67.5420%" y="229" width="0.1050%" height="15" fill="rgb(245,119,9)"/><text x="67.7920%" y="239.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="67.5420%" y="213" width="0.1050%" height="15" fill="rgb(241,163,25)"/><text x="67.7920%" y="223.50"></text></g><g><title>skb_release_data (1 samples, 0.11%)</title><rect x="67.5420%" y="197" width="0.1050%" height="15" fill="rgb(217,214,3)"/><text x="67.7920%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (31 samples, 3.26%)</title><rect x="64.6008%" y="261" width="3.2563%" height="15" fill="rgb(240,86,28)"/><text x="64.8508%" y="271.50">tcp..</text></g><g><title>tcp_rcv_established (31 samples, 3.26%)</title><rect x="64.6008%" y="245" width="3.2563%" height="15" fill="rgb(215,47,9)"/><text x="64.8508%" y="255.50">tcp..</text></g><g><title>tcp_grow_window (2 samples, 0.21%)</title><rect x="67.6471%" y="229" width="0.2101%" height="15" fill="rgb(252,25,45)"/><text x="67.8971%" y="239.50"></text></g><g><title>ip_local_deliver (41 samples, 4.31%)</title><rect x="63.6555%" y="325" width="4.3067%" height="15" fill="rgb(251,164,9)"/><text x="63.9055%" y="335.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (40 samples, 4.20%)</title><rect x="63.7605%" y="309" width="4.2017%" height="15" fill="rgb(233,194,0)"/><text x="64.0105%" y="319.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (37 samples, 3.89%)</title><rect x="64.0756%" y="293" width="3.8866%" height="15" fill="rgb(249,111,24)"/><text x="64.3256%" y="303.50">ip_p..</text></g><g><title>tcp_v4_rcv (37 samples, 3.89%)</title><rect x="64.0756%" y="277" width="3.8866%" height="15" fill="rgb(250,223,3)"/><text x="64.3256%" y="287.50">tcp_..</text></g><g><title>tcp_v4_fill_cb (1 samples, 0.11%)</title><rect x="67.8571%" y="261" width="0.1050%" height="15" fill="rgb(236,178,37)"/><text x="68.1071%" y="271.50"></text></g><g><title>__ip_queue_xmit (67 samples, 7.04%)</title><rect x="61.0294%" y="501" width="7.0378%" height="15" fill="rgb(241,158,50)"/><text x="61.2794%" y="511.50">__ip_queu..</text></g><g><title>ip_output (63 samples, 6.62%)</title><rect x="61.4496%" y="485" width="6.6176%" height="15" fill="rgb(213,121,41)"/><text x="61.6996%" y="495.50">ip_output</text></g><g><title>ip_finish_output2 (62 samples, 6.51%)</title><rect x="61.5546%" y="469" width="6.5126%" height="15" fill="rgb(240,92,3)"/><text x="61.8046%" y="479.50">ip_finish..</text></g><g><title>__local_bh_enable_ip (53 samples, 5.57%)</title><rect x="62.5000%" y="453" width="5.5672%" height="15" fill="rgb(205,123,3)"/><text x="62.7500%" y="463.50">__local..</text></g><g><title>do_softirq (52 samples, 5.46%)</title><rect x="62.6050%" y="437" width="5.4622%" height="15" fill="rgb(205,97,47)"/><text x="62.8550%" y="447.50">do_soft..</text></g><g><title>do_softirq_own_stack (51 samples, 5.36%)</title><rect x="62.7101%" y="421" width="5.3571%" height="15" fill="rgb(247,152,14)"/><text x="62.9601%" y="431.50">do_soft..</text></g><g><title>__do_softirq (51 samples, 5.36%)</title><rect x="62.7101%" y="405" width="5.3571%" height="15" fill="rgb(248,195,53)"/><text x="62.9601%" y="415.50">__do_so..</text></g><g><title>net_rx_action (48 samples, 5.04%)</title><rect x="63.0252%" y="389" width="5.0420%" height="15" fill="rgb(226,201,16)"/><text x="63.2752%" y="399.50">net_rx..</text></g><g><title>process_backlog (47 samples, 4.94%)</title><rect x="63.1303%" y="373" width="4.9370%" height="15" fill="rgb(205,98,0)"/><text x="63.3803%" y="383.50">proces..</text></g><g><title>__netif_receive_skb_one_core (44 samples, 4.62%)</title><rect x="63.4454%" y="357" width="4.6218%" height="15" fill="rgb(214,191,48)"/><text x="63.6954%" y="367.50">__net..</text></g><g><title>ip_rcv (43 samples, 4.52%)</title><rect x="63.5504%" y="341" width="4.5168%" height="15" fill="rgb(237,112,39)"/><text x="63.8004%" y="351.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.11%)</title><rect x="67.9622%" y="325" width="0.1050%" height="15" fill="rgb(247,203,27)"/><text x="68.2122%" y="335.50"></text></g><g><title>bictcp_cwnd_event (1 samples, 0.11%)</title><rect x="68.0672%" y="501" width="0.1050%" height="15" fill="rgb(235,124,28)"/><text x="68.3172%" y="511.50"></text></g><g><title>__tcp_transmit_skb (72 samples, 7.56%)</title><rect x="60.7143%" y="517" width="7.5630%" height="15" fill="rgb(208,207,46)"/><text x="60.9643%" y="527.50">__tcp_tran..</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.11%)</title><rect x="68.1723%" y="501" width="0.1050%" height="15" fill="rgb(234,176,4)"/><text x="68.4223%" y="511.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="68.3824%" y="501" width="0.1050%" height="15" fill="rgb(230,133,28)"/><text x="68.6324%" y="511.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="68.3824%" y="485" width="0.1050%" height="15" fill="rgb(211,137,40)"/><text x="68.6324%" y="495.50"></text></g><g><title>lock_timer_base.constprop.0 (1 samples, 0.11%)</title><rect x="68.3824%" y="469" width="0.1050%" height="15" fill="rgb(254,35,13)"/><text x="68.6324%" y="479.50"></text></g><g><title>tcp_event_new_data_sent (3 samples, 0.32%)</title><rect x="68.2773%" y="517" width="0.3151%" height="15" fill="rgb(225,49,51)"/><text x="68.5273%" y="527.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="68.4874%" y="501" width="0.1050%" height="15" fill="rgb(251,10,15)"/><text x="68.7374%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (77 samples, 8.09%)</title><rect x="60.6092%" y="549" width="8.0882%" height="15" fill="rgb(228,207,15)"/><text x="60.8592%" y="559.50">__tcp_push_..</text></g><g><title>tcp_write_xmit (77 samples, 8.09%)</title><rect x="60.6092%" y="533" width="8.0882%" height="15" fill="rgb(241,99,19)"/><text x="60.8592%" y="543.50">tcp_write_x..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="68.5924%" y="517" width="0.1050%" height="15" fill="rgb(207,104,49)"/><text x="68.8424%" y="527.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.21%)</title><rect x="68.8025%" y="517" width="0.2101%" height="15" fill="rgb(234,99,18)"/><text x="69.0525%" y="527.50"></text></g><g><title>memset_erms (1 samples, 0.11%)</title><rect x="68.9076%" y="501" width="0.1050%" height="15" fill="rgb(213,191,49)"/><text x="69.1576%" y="511.50"></text></g><g><title>__ksize (2 samples, 0.21%)</title><rect x="69.0126%" y="517" width="0.2101%" height="15" fill="rgb(210,226,19)"/><text x="69.2626%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.63%)</title><rect x="68.6975%" y="549" width="0.6303%" height="15" fill="rgb(229,97,18)"/><text x="68.9475%" y="559.50"></text></g><g><title>__alloc_skb (5 samples, 0.53%)</title><rect x="68.8025%" y="533" width="0.5252%" height="15" fill="rgb(211,167,15)"/><text x="69.0525%" y="543.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="69.2227%" y="517" width="0.1050%" height="15" fill="rgb(210,169,34)"/><text x="69.4727%" y="527.50"></text></g><g><title>memset_erms (1 samples, 0.11%)</title><rect x="69.2227%" y="501" width="0.1050%" height="15" fill="rgb(241,121,31)"/><text x="69.4727%" y="511.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="69.3277%" y="533" width="0.1050%" height="15" fill="rgb(232,40,11)"/><text x="69.5777%" y="543.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="69.5378%" y="517" width="0.1050%" height="15" fill="rgb(205,86,26)"/><text x="69.7878%" y="527.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.42%)</title><rect x="69.3277%" y="549" width="0.4202%" height="15" fill="rgb(231,126,28)"/><text x="69.5777%" y="559.50"></text></g><g><title>_copy_from_iter_full (3 samples, 0.32%)</title><rect x="69.4328%" y="533" width="0.3151%" height="15" fill="rgb(219,221,18)"/><text x="69.6828%" y="543.50"></text></g><g><title>iov_iter_advance (1 samples, 0.11%)</title><rect x="69.6429%" y="517" width="0.1050%" height="15" fill="rgb(211,40,0)"/><text x="69.8929%" y="527.50"></text></g><g><title>sock_sendmsg (97 samples, 10.19%)</title><rect x="59.8739%" y="597" width="10.1891%" height="15" fill="rgb(239,85,43)"/><text x="60.1239%" y="607.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (97 samples, 10.19%)</title><rect x="59.8739%" y="581" width="10.1891%" height="15" fill="rgb(231,55,21)"/><text x="60.1239%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (96 samples, 10.08%)</title><rect x="59.9790%" y="565" width="10.0840%" height="15" fill="rgb(225,184,43)"/><text x="60.2290%" y="575.50">tcp_sendmsg_loc..</text></g><g><title>tcp_send_mss (3 samples, 0.32%)</title><rect x="69.7479%" y="549" width="0.3151%" height="15" fill="rgb(251,158,41)"/><text x="69.9979%" y="559.50"></text></g><g><title>tcp_current_mss (3 samples, 0.32%)</title><rect x="69.7479%" y="533" width="0.3151%" height="15" fill="rgb(234,159,37)"/><text x="69.9979%" y="543.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="69.9580%" y="517" width="0.1050%" height="15" fill="rgb(216,204,22)"/><text x="70.2080%" y="527.50"></text></g><g><title>__x64_sys_sendto (101 samples, 10.61%)</title><rect x="59.5588%" y="629" width="10.6092%" height="15" fill="rgb(214,17,3)"/><text x="59.8088%" y="639.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (100 samples, 10.50%)</title><rect x="59.6639%" y="613" width="10.5042%" height="15" fill="rgb(212,111,17)"/><text x="59.9139%" y="623.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="70.0630%" y="597" width="0.1050%" height="15" fill="rgb(221,157,24)"/><text x="70.3130%" y="607.50"></text></g><g><title>__fget_light (1 samples, 0.11%)</title><rect x="70.0630%" y="581" width="0.1050%" height="15" fill="rgb(252,16,13)"/><text x="70.3130%" y="591.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="70.0630%" y="565" width="0.1050%" height="15" fill="rgb(221,62,2)"/><text x="70.3130%" y="575.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="70.0630%" y="549" width="0.1050%" height="15" fill="rgb(247,87,22)"/><text x="70.3130%" y="559.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="70.1681%" y="597" width="0.1050%" height="15" fill="rgb(215,73,9)"/><text x="70.4181%" y="607.50"></text></g><g><title>mntput (1 samples, 0.11%)</title><rect x="70.2731%" y="597" width="0.1050%" height="15" fill="rgb(207,175,33)"/><text x="70.5231%" y="607.50"></text></g><g><title>path_put (1 samples, 0.11%)</title><rect x="70.3782%" y="597" width="0.1050%" height="15" fill="rgb(243,129,54)"/><text x="70.6282%" y="607.50"></text></g><g><title>do_syscall_64 (105 samples, 11.03%)</title><rect x="59.5588%" y="645" width="11.0294%" height="15" fill="rgb(227,119,45)"/><text x="59.8088%" y="655.50">do_syscall_64</text></g><g><title>syscall_slow_exit_work (4 samples, 0.42%)</title><rect x="70.1681%" y="629" width="0.4202%" height="15" fill="rgb(205,109,36)"/><text x="70.4181%" y="639.50"></text></g><g><title>__audit_syscall_exit (4 samples, 0.42%)</title><rect x="70.1681%" y="613" width="0.4202%" height="15" fill="rgb(205,6,39)"/><text x="70.4181%" y="623.50"></text></g><g><title>unroll_tree_refs (1 samples, 0.11%)</title><rect x="70.4832%" y="597" width="0.1050%" height="15" fill="rgb(221,32,16)"/><text x="70.7332%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (108 samples, 11.34%)</title><rect x="59.5588%" y="661" width="11.3445%" height="15" fill="rgb(228,144,50)"/><text x="59.8088%" y="671.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.32%)</title><rect x="70.5882%" y="645" width="0.3151%" height="15" fill="rgb(229,201,53)"/><text x="70.8382%" y="655.50"></text></g><g><title>decor::Shim::run_on_tcp (433 samples, 45.48%)</title><rect x="25.6303%" y="757" width="45.4832%" height="15" fill="rgb(249,153,27)"/><text x="25.8803%" y="767.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (433 samples, 45.48%)</title><rect x="25.6303%" y="741" width="45.4832%" height="15" fill="rgb(227,106,25)"/><text x="25.8803%" y="751.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (114 samples, 11.97%)</title><rect x="59.1387%" y="725" width="11.9748%" height="15" fill="rgb(230,65,29)"/><text x="59.3887%" y="735.50">std::io::buffered:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (113 samples, 11.87%)</title><rect x="59.2437%" y="709" width="11.8697%" height="15" fill="rgb(221,57,46)"/><text x="59.4937%" y="719.50">&lt;std::net::tcp::Tc..</text></g><g><title>std::sys_common::net::TcpStream::write (113 samples, 11.87%)</title><rect x="59.2437%" y="693" width="11.8697%" height="15" fill="rgb(229,161,17)"/><text x="59.4937%" y="703.50">std::sys_common::n..</text></g><g><title>__libc_send (113 samples, 11.87%)</title><rect x="59.2437%" y="677" width="11.8697%" height="15" fill="rgb(222,213,11)"/><text x="59.4937%" y="687.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.21%)</title><rect x="70.9034%" y="661" width="0.2101%" height="15" fill="rgb(235,35,13)"/><text x="71.1534%" y="671.50"></text></g><g><title>__GI___clone (434 samples, 45.59%)</title><rect x="25.6303%" y="869" width="45.5882%" height="15" fill="rgb(233,158,34)"/><text x="25.8803%" y="879.50">__GI___clone</text></g><g><title>start_thread (434 samples, 45.59%)</title><rect x="25.6303%" y="853" width="45.5882%" height="15" fill="rgb(215,151,48)"/><text x="25.8803%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (434 samples, 45.59%)</title><rect x="25.6303%" y="837" width="45.5882%" height="15" fill="rgb(229,84,14)"/><text x="25.8803%" y="847.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (434 samples, 45.59%)</title><rect x="25.6303%" y="821" width="45.5882%" height="15" fill="rgb(229,68,14)"/><text x="25.8803%" y="831.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (434 samples, 45.59%)</title><rect x="25.6303%" y="805" width="45.5882%" height="15" fill="rgb(243,106,26)"/><text x="25.8803%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (434 samples, 45.59%)</title><rect x="25.6303%" y="789" width="45.5882%" height="15" fill="rgb(206,45,38)"/><text x="25.8803%" y="799.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (434 samples, 45.59%)</title><rect x="25.6303%" y="773" width="45.5882%" height="15" fill="rgb(226,6,15)"/><text x="25.8803%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.11%)</title><rect x="71.1134%" y="757" width="0.1050%" height="15" fill="rgb(232,22,54)"/><text x="71.3634%" y="767.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.11%)</title><rect x="71.1134%" y="741" width="0.1050%" height="15" fill="rgb(229,222,32)"/><text x="71.3634%" y="751.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.11%)</title><rect x="71.1134%" y="725" width="0.1050%" height="15" fill="rgb(228,62,29)"/><text x="71.3634%" y="735.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.11%)</title><rect x="71.1134%" y="709" width="0.1050%" height="15" fill="rgb(251,103,34)"/><text x="71.3634%" y="719.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.11%)</title><rect x="71.1134%" y="693" width="0.1050%" height="15" fill="rgb(233,12,30)"/><text x="71.3634%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="71.2185%" y="869" width="0.1050%" height="15" fill="rgb(238,52,0)"/><text x="71.4685%" y="879.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="71.4286%" y="677" width="0.1050%" height="15" fill="rgb(223,98,5)"/><text x="71.6786%" y="687.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="71.4286%" y="661" width="0.1050%" height="15" fill="rgb(228,75,37)"/><text x="71.6786%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.32%)</title><rect x="71.3235%" y="693" width="0.3151%" height="15" fill="rgb(205,115,49)"/><text x="71.5735%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="71.5336%" y="677" width="0.1050%" height="15" fill="rgb(250,154,43)"/><text x="71.7836%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="71.6387%" y="613" width="0.1050%" height="15" fill="rgb(226,43,29)"/><text x="71.8887%" y="623.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="71.6387%" y="597" width="0.1050%" height="15" fill="rgb(249,228,39)"/><text x="71.8887%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="71.6387%" y="581" width="0.1050%" height="15" fill="rgb(216,79,43)"/><text x="71.8887%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="71.6387%" y="565" width="0.1050%" height="15" fill="rgb(228,95,12)"/><text x="71.8887%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="71.6387%" y="549" width="0.1050%" height="15" fill="rgb(249,221,15)"/><text x="71.8887%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="71.6387%" y="533" width="0.1050%" height="15" fill="rgb(233,34,13)"/><text x="71.8887%" y="543.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="71.6387%" y="517" width="0.1050%" height="15" fill="rgb(214,103,39)"/><text x="71.8887%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="71.6387%" y="501" width="0.1050%" height="15" fill="rgb(251,126,39)"/><text x="71.8887%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="71.6387%" y="485" width="0.1050%" height="15" fill="rgb(214,216,36)"/><text x="71.8887%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="71.6387%" y="469" width="0.1050%" height="15" fill="rgb(220,221,8)"/><text x="71.8887%" y="479.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="71.6387%" y="453" width="0.1050%" height="15" fill="rgb(240,216,3)"/><text x="71.8887%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="71.6387%" y="437" width="0.1050%" height="15" fill="rgb(232,218,17)"/><text x="71.8887%" y="447.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="71.6387%" y="421" width="0.1050%" height="15" fill="rgb(229,163,45)"/><text x="71.8887%" y="431.50"></text></g><g><title>__GI___openat (1 samples, 0.11%)</title><rect x="71.7437%" y="613" width="0.1050%" height="15" fill="rgb(231,110,42)"/><text x="71.9937%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="71.7437%" y="597" width="0.1050%" height="15" fill="rgb(208,170,48)"/><text x="71.9937%" y="607.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="71.7437%" y="581" width="0.1050%" height="15" fill="rgb(239,116,25)"/><text x="71.9937%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (232 samples, 24.37%)</title><rect x="72.1639%" y="389" width="24.3697%" height="15" fill="rgb(219,200,50)"/><text x="72.4139%" y="399.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (231 samples, 24.26%)</title><rect x="72.2689%" y="373" width="24.2647%" height="15" fill="rgb(245,200,0)"/><text x="72.5189%" y="383.50">native_write_msr</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 24.58%)</title><rect x="72.0588%" y="517" width="24.5798%" height="15" fill="rgb(245,119,33)"/><text x="72.3088%" y="527.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 24.58%)</title><rect x="72.0588%" y="501" width="24.5798%" height="15" fill="rgb(231,125,12)"/><text x="72.3088%" y="511.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 24.58%)</title><rect x="72.0588%" y="485" width="24.5798%" height="15" fill="rgb(216,96,41)"/><text x="72.3088%" y="495.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 24.58%)</title><rect x="72.0588%" y="469" width="24.5798%" height="15" fill="rgb(248,43,45)"/><text x="72.3088%" y="479.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 24.58%)</title><rect x="72.0588%" y="453" width="24.5798%" height="15" fill="rgb(217,222,7)"/><text x="72.3088%" y="463.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 24.58%)</title><rect x="72.0588%" y="437" width="24.5798%" height="15" fill="rgb(233,28,6)"/><text x="72.3088%" y="447.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 24.58%)</title><rect x="72.0588%" y="421" width="24.5798%" height="15" fill="rgb(231,218,15)"/><text x="72.3088%" y="431.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (233 samples, 24.47%)</title><rect x="72.1639%" y="405" width="24.4748%" height="15" fill="rgb(226,171,48)"/><text x="72.4139%" y="415.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (1 samples, 0.11%)</title><rect x="96.5336%" y="389" width="0.1050%" height="15" fill="rgb(235,201,9)"/><text x="96.7836%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (236 samples, 24.79%)</title><rect x="71.9538%" y="581" width="24.7899%" height="15" fill="rgb(217,80,15)"/><text x="72.2038%" y="591.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (236 samples, 24.79%)</title><rect x="71.9538%" y="565" width="24.7899%" height="15" fill="rgb(219,152,8)"/><text x="72.2038%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (236 samples, 24.79%)</title><rect x="71.9538%" y="549" width="24.7899%" height="15" fill="rgb(243,107,38)"/><text x="72.2038%" y="559.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (235 samples, 24.68%)</title><rect x="72.0588%" y="533" width="24.6849%" height="15" fill="rgb(231,17,5)"/><text x="72.3088%" y="543.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (1 samples, 0.11%)</title><rect x="96.6387%" y="517" width="0.1050%" height="15" fill="rgb(209,25,54)"/><text x="96.8887%" y="527.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="96.6387%" y="501" width="0.1050%" height="15" fill="rgb(219,0,2)"/><text x="96.8887%" y="511.50"></text></g><g><title>__GI___sched_setaffinity_new (238 samples, 25.00%)</title><rect x="71.8487%" y="597" width="25.0000%" height="15" fill="rgb(246,9,5)"/><text x="72.0987%" y="607.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="96.7437%" y="581" width="0.1050%" height="15" fill="rgb(226,159,4)"/><text x="96.9937%" y="591.50"></text></g><g><title>[libhwloc.so.15.2.0] (241 samples, 25.32%)</title><rect x="71.6387%" y="629" width="25.3151%" height="15" fill="rgb(219,175,34)"/><text x="71.8887%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (239 samples, 25.11%)</title><rect x="71.8487%" y="613" width="25.1050%" height="15" fill="rgb(236,10,46)"/><text x="72.0987%" y="623.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__sched_cpufree (1 samples, 0.11%)</title><rect x="96.8487%" y="597" width="0.1050%" height="15" fill="rgb(240,211,16)"/><text x="97.0987%" y="607.50"></text></g><g><title>hwloc::Topology::new (242 samples, 25.42%)</title><rect x="71.6387%" y="693" width="25.4202%" height="15" fill="rgb(205,3,43)"/><text x="71.8887%" y="703.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (242 samples, 25.42%)</title><rect x="71.6387%" y="677" width="25.4202%" height="15" fill="rgb(245,7,22)"/><text x="71.8887%" y="687.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 25.42%)</title><rect x="71.6387%" y="661" width="25.4202%" height="15" fill="rgb(239,132,32)"/><text x="71.8887%" y="671.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (242 samples, 25.42%)</title><rect x="71.6387%" y="645" width="25.4202%" height="15" fill="rgb(228,202,34)"/><text x="71.8887%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>fgets (1 samples, 0.11%)</title><rect x="96.9538%" y="629" width="0.1050%" height="15" fill="rgb(254,200,22)"/><text x="97.2038%" y="639.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.11%)</title><rect x="96.9538%" y="613" width="0.1050%" height="15" fill="rgb(219,10,39)"/><text x="97.2038%" y="623.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.11%)</title><rect x="96.9538%" y="597" width="0.1050%" height="15" fill="rgb(226,210,39)"/><text x="97.2038%" y="607.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.11%)</title><rect x="96.9538%" y="581" width="0.1050%" height="15" fill="rgb(208,219,16)"/><text x="97.2038%" y="591.50"></text></g><g><title>__GI___read (1 samples, 0.11%)</title><rect x="96.9538%" y="565" width="0.1050%" height="15" fill="rgb(216,158,51)"/><text x="97.2038%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="96.9538%" y="549" width="0.1050%" height="15" fill="rgb(233,14,44)"/><text x="97.2038%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="96.9538%" y="533" width="0.1050%" height="15" fill="rgb(237,97,39)"/><text x="97.2038%" y="543.50"></text></g><g><title>ksys_read (1 samples, 0.11%)</title><rect x="96.9538%" y="517" width="0.1050%" height="15" fill="rgb(218,198,43)"/><text x="97.2038%" y="527.50"></text></g><g><title>vfs_read (1 samples, 0.11%)</title><rect x="96.9538%" y="501" width="0.1050%" height="15" fill="rgb(231,104,20)"/><text x="97.2038%" y="511.50"></text></g><g><title>seq_read (1 samples, 0.11%)</title><rect x="96.9538%" y="485" width="0.1050%" height="15" fill="rgb(254,36,13)"/><text x="97.2038%" y="495.50"></text></g><g><title>show_cpuinfo (1 samples, 0.11%)</title><rect x="96.9538%" y="469" width="0.1050%" height="15" fill="rgb(248,14,50)"/><text x="97.2038%" y="479.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="97.1639%" y="533" width="0.1050%" height="15" fill="rgb(217,107,29)"/><text x="97.4139%" y="543.50"></text></g><g><title>__sk_dst_check (1 samples, 0.11%)</title><rect x="97.3739%" y="421" width="0.1050%" height="15" fill="rgb(251,169,33)"/><text x="97.6239%" y="431.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.11%)</title><rect x="97.3739%" y="405" width="0.1050%" height="15" fill="rgb(217,108,32)"/><text x="97.6239%" y="415.50"></text></g><g><title>__ip_finish_output (1 samples, 0.11%)</title><rect x="97.4790%" y="405" width="0.1050%" height="15" fill="rgb(219,66,42)"/><text x="97.7290%" y="415.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="97.4790%" y="389" width="0.1050%" height="15" fill="rgb(206,180,7)"/><text x="97.7290%" y="399.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="97.6891%" y="389" width="0.1050%" height="15" fill="rgb(208,226,31)"/><text x="97.9391%" y="399.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="97.6891%" y="373" width="0.1050%" height="15" fill="rgb(218,26,49)"/><text x="97.9391%" y="383.50"></text></g><g><title>__wake_up_common (2 samples, 0.21%)</title><rect x="97.8992%" y="133" width="0.2101%" height="15" fill="rgb(233,197,48)"/><text x="98.1492%" y="143.50"></text></g><g><title>try_to_wake_up (2 samples, 0.21%)</title><rect x="97.8992%" y="117" width="0.2101%" height="15" fill="rgb(252,181,51)"/><text x="98.1492%" y="127.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.11%)</title><rect x="98.0042%" y="101" width="0.1050%" height="15" fill="rgb(253,90,19)"/><text x="98.2542%" y="111.50"></text></g><g><title>enqueue_entity (1 samples, 0.11%)</title><rect x="98.0042%" y="85" width="0.1050%" height="15" fill="rgb(215,171,30)"/><text x="98.2542%" y="95.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="98.0042%" y="69" width="0.1050%" height="15" fill="rgb(214,222,9)"/><text x="98.2542%" y="79.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="98.0042%" y="53" width="0.1050%" height="15" fill="rgb(223,3,22)"/><text x="98.2542%" y="63.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.84%)</title><rect x="97.3739%" y="437" width="0.8403%" height="15" fill="rgb(225,196,46)"/><text x="97.6239%" y="447.50"></text></g><g><title>ip_output (7 samples, 0.74%)</title><rect x="97.4790%" y="421" width="0.7353%" height="15" fill="rgb(209,110,37)"/><text x="97.7290%" y="431.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.63%)</title><rect x="97.5840%" y="405" width="0.6303%" height="15" fill="rgb(249,89,12)"/><text x="97.8340%" y="415.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.42%)</title><rect x="97.7941%" y="389" width="0.4202%" height="15" fill="rgb(226,27,33)"/><text x="98.0441%" y="399.50"></text></g><g><title>do_softirq (4 samples, 0.42%)</title><rect x="97.7941%" y="373" width="0.4202%" height="15" fill="rgb(213,82,22)"/><text x="98.0441%" y="383.50"></text></g><g><title>do_softirq_own_stack (4 samples, 0.42%)</title><rect x="97.7941%" y="357" width="0.4202%" height="15" fill="rgb(248,140,0)"/><text x="98.0441%" y="367.50"></text></g><g><title>__do_softirq (4 samples, 0.42%)</title><rect x="97.7941%" y="341" width="0.4202%" height="15" fill="rgb(228,106,3)"/><text x="98.0441%" y="351.50"></text></g><g><title>net_rx_action (4 samples, 0.42%)</title><rect x="97.7941%" y="325" width="0.4202%" height="15" fill="rgb(209,23,37)"/><text x="98.0441%" y="335.50"></text></g><g><title>process_backlog (4 samples, 0.42%)</title><rect x="97.7941%" y="309" width="0.4202%" height="15" fill="rgb(241,93,50)"/><text x="98.0441%" y="319.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.42%)</title><rect x="97.7941%" y="293" width="0.4202%" height="15" fill="rgb(253,46,43)"/><text x="98.0441%" y="303.50"></text></g><g><title>ip_rcv (4 samples, 0.42%)</title><rect x="97.7941%" y="277" width="0.4202%" height="15" fill="rgb(226,206,43)"/><text x="98.0441%" y="287.50"></text></g><g><title>ip_local_deliver (4 samples, 0.42%)</title><rect x="97.7941%" y="261" width="0.4202%" height="15" fill="rgb(217,54,7)"/><text x="98.0441%" y="271.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.42%)</title><rect x="97.7941%" y="245" width="0.4202%" height="15" fill="rgb(223,5,52)"/><text x="98.0441%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.42%)</title><rect x="97.7941%" y="229" width="0.4202%" height="15" fill="rgb(206,52,46)"/><text x="98.0441%" y="239.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.42%)</title><rect x="97.7941%" y="213" width="0.4202%" height="15" fill="rgb(253,136,11)"/><text x="98.0441%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.42%)</title><rect x="97.7941%" y="197" width="0.4202%" height="15" fill="rgb(208,106,33)"/><text x="98.0441%" y="207.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.42%)</title><rect x="97.7941%" y="181" width="0.4202%" height="15" fill="rgb(206,54,4)"/><text x="98.0441%" y="191.50"></text></g><g><title>sock_def_readable (3 samples, 0.32%)</title><rect x="97.8992%" y="165" width="0.3151%" height="15" fill="rgb(213,3,15)"/><text x="98.1492%" y="175.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.32%)</title><rect x="97.8992%" y="149" width="0.3151%" height="15" fill="rgb(252,211,39)"/><text x="98.1492%" y="159.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="98.1092%" y="133" width="0.1050%" height="15" fill="rgb(223,6,36)"/><text x="98.3592%" y="143.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.95%)</title><rect x="97.3739%" y="453" width="0.9454%" height="15" fill="rgb(252,169,45)"/><text x="97.6239%" y="463.50"></text></g><g><title>skb_clone (1 samples, 0.11%)</title><rect x="98.2143%" y="437" width="0.1050%" height="15" fill="rgb(212,48,26)"/><text x="98.4643%" y="447.50"></text></g><g><title>__copy_skb_header (1 samples, 0.11%)</title><rect x="98.2143%" y="421" width="0.1050%" height="15" fill="rgb(251,102,48)"/><text x="98.4643%" y="431.50"></text></g><g><title>__x64_sys_sendto (12 samples, 1.26%)</title><rect x="97.1639%" y="565" width="1.2605%" height="15" fill="rgb(243,208,16)"/><text x="97.4139%" y="575.50"></text></g><g><title>__sys_sendto (12 samples, 1.26%)</title><rect x="97.1639%" y="549" width="1.2605%" height="15" fill="rgb(219,96,24)"/><text x="97.4139%" y="559.50"></text></g><g><title>sock_sendmsg (11 samples, 1.16%)</title><rect x="97.2689%" y="533" width="1.1555%" height="15" fill="rgb(219,33,29)"/><text x="97.5189%" y="543.50"></text></g><g><title>tcp_sendmsg (11 samples, 1.16%)</title><rect x="97.2689%" y="517" width="1.1555%" height="15" fill="rgb(223,176,5)"/><text x="97.5189%" y="527.50"></text></g><g><title>tcp_sendmsg_locked (11 samples, 1.16%)</title><rect x="97.2689%" y="501" width="1.1555%" height="15" fill="rgb(228,140,14)"/><text x="97.5189%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (10 samples, 1.05%)</title><rect x="97.3739%" y="485" width="1.0504%" height="15" fill="rgb(217,179,31)"/><text x="97.6239%" y="495.50"></text></g><g><title>tcp_write_xmit (10 samples, 1.05%)</title><rect x="97.3739%" y="469" width="1.0504%" height="15" fill="rgb(230,9,30)"/><text x="97.6239%" y="479.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="98.3193%" y="453" width="0.1050%" height="15" fill="rgb(230,136,20)"/><text x="98.5693%" y="463.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="98.3193%" y="437" width="0.1050%" height="15" fill="rgb(215,210,22)"/><text x="98.5693%" y="447.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="98.3193%" y="421" width="0.1050%" height="15" fill="rgb(218,43,5)"/><text x="98.5693%" y="431.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="98.4244%" y="565" width="0.1050%" height="15" fill="rgb(216,11,5)"/><text x="98.6744%" y="575.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="98.4244%" y="549" width="0.1050%" height="15" fill="rgb(209,82,29)"/><text x="98.6744%" y="559.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="98.4244%" y="533" width="0.1050%" height="15" fill="rgb(244,115,12)"/><text x="98.6744%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 1.47%)</title><rect x="97.1639%" y="597" width="1.4706%" height="15" fill="rgb(222,82,18)"/><text x="97.4139%" y="607.50"></text></g><g><title>do_syscall_64 (14 samples, 1.47%)</title><rect x="97.1639%" y="581" width="1.4706%" height="15" fill="rgb(249,227,8)"/><text x="97.4139%" y="591.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="98.5294%" y="565" width="0.1050%" height="15" fill="rgb(253,141,45)"/><text x="98.7794%" y="575.50"></text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.68%)</title><rect x="97.0588%" y="693" width="1.6807%" height="15" fill="rgb(234,184,4)"/><text x="97.3088%" y="703.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (16 samples, 1.68%)</title><rect x="97.0588%" y="677" width="1.6807%" height="15" fill="rgb(218,194,23)"/><text x="97.3088%" y="687.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (16 samples, 1.68%)</title><rect x="97.0588%" y="661" width="1.6807%" height="15" fill="rgb(235,66,41)"/><text x="97.3088%" y="671.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (15 samples, 1.58%)</title><rect x="97.1639%" y="645" width="1.5756%" height="15" fill="rgb(245,217,1)"/><text x="97.4139%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (15 samples, 1.58%)</title><rect x="97.1639%" y="629" width="1.5756%" height="15" fill="rgb(229,91,1)"/><text x="97.4139%" y="639.50"></text></g><g><title>__libc_send (15 samples, 1.58%)</title><rect x="97.1639%" y="613" width="1.5756%" height="15" fill="rgb(207,101,30)"/><text x="97.4139%" y="623.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="98.6345%" y="597" width="0.1050%" height="15" fill="rgb(223,82,49)"/><text x="98.8845%" y="607.50"></text></g><g><title>__libc_start_main (262 samples, 27.52%)</title><rect x="71.3235%" y="853" width="27.5210%" height="15" fill="rgb(218,167,17)"/><text x="71.5735%" y="863.50">__libc_start_main</text></g><g><title>main (262 samples, 27.52%)</title><rect x="71.3235%" y="837" width="27.5210%" height="15" fill="rgb(208,103,14)"/><text x="71.5735%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (262 samples, 27.52%)</title><rect x="71.3235%" y="821" width="27.5210%" height="15" fill="rgb(238,20,8)"/><text x="71.5735%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (262 samples, 27.52%)</title><rect x="71.3235%" y="805" width="27.5210%" height="15" fill="rgb(218,80,54)"/><text x="71.5735%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (262 samples, 27.52%)</title><rect x="71.3235%" y="789" width="27.5210%" height="15" fill="rgb(240,144,17)"/><text x="71.5735%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (262 samples, 27.52%)</title><rect x="71.3235%" y="773" width="27.5210%" height="15" fill="rgb(245,27,50)"/><text x="71.5735%" y="783.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (262 samples, 27.52%)</title><rect x="71.3235%" y="757" width="27.5210%" height="15" fill="rgb(251,51,7)"/><text x="71.5735%" y="767.50">core::ops::function::impls::&lt;impl core::ops:..</text></g><g><title>std::rt::lang_start::_{{closure}} (262 samples, 27.52%)</title><rect x="71.3235%" y="741" width="27.5210%" height="15" fill="rgb(245,217,29)"/><text x="71.5735%" y="751.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (262 samples, 27.52%)</title><rect x="71.3235%" y="725" width="27.5210%" height="15" fill="rgb(221,176,29)"/><text x="71.5735%" y="735.50">std::sys_common::backtrace::__rust_begin_sho..</text></g><g><title>lobsters::main (262 samples, 27.52%)</title><rect x="71.3235%" y="709" width="27.5210%" height="15" fill="rgb(212,180,24)"/><text x="71.5735%" y="719.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="98.7395%" y="693" width="0.1050%" height="15" fill="rgb(254,24,2)"/><text x="98.9895%" y="703.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="98.7395%" y="677" width="0.1050%" height="15" fill="rgb(230,100,2)"/><text x="98.9895%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::new (1 samples, 0.11%)</title><rect x="98.7395%" y="661" width="0.1050%" height="15" fill="rgb(219,142,25)"/><text x="98.9895%" y="671.50"></text></g><g><title>__GI___socket (1 samples, 0.11%)</title><rect x="98.7395%" y="645" width="0.1050%" height="15" fill="rgb(240,73,43)"/><text x="98.9895%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.7395%" y="629" width="0.1050%" height="15" fill="rgb(214,114,15)"/><text x="98.9895%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.7395%" y="613" width="0.1050%" height="15" fill="rgb(207,130,4)"/><text x="98.9895%" y="623.50"></text></g><g><title>__x64_sys_socket (1 samples, 0.11%)</title><rect x="98.7395%" y="597" width="0.1050%" height="15" fill="rgb(221,25,40)"/><text x="98.9895%" y="607.50"></text></g><g><title>__sys_socket (1 samples, 0.11%)</title><rect x="98.7395%" y="581" width="0.1050%" height="15" fill="rgb(241,184,7)"/><text x="98.9895%" y="591.50"></text></g><g><title>sock_alloc_file (1 samples, 0.11%)</title><rect x="98.7395%" y="565" width="0.1050%" height="15" fill="rgb(235,159,4)"/><text x="98.9895%" y="575.50"></text></g><g><title>alloc_file_pseudo (1 samples, 0.11%)</title><rect x="98.7395%" y="549" width="0.1050%" height="15" fill="rgb(214,87,48)"/><text x="98.9895%" y="559.50"></text></g><g><title>mntget (1 samples, 0.11%)</title><rect x="98.7395%" y="533" width="0.1050%" height="15" fill="rgb(246,198,24)"/><text x="98.9895%" y="543.50"></text></g><g><title>_start (263 samples, 27.63%)</title><rect x="71.3235%" y="869" width="27.6261%" height="15" fill="rgb(209,66,40)"/><text x="71.5735%" y="879.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.8445%" y="853" width="0.1050%" height="15" fill="rgb(233,147,39)"/><text x="99.0945%" y="863.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.8445%" y="837" width="0.1050%" height="15" fill="rgb(231,145,52)"/><text x="99.0945%" y="847.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="98.8445%" y="821" width="0.1050%" height="15" fill="rgb(206,20,26)"/><text x="99.0945%" y="831.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="98.8445%" y="805" width="0.1050%" height="15" fill="rgb(238,220,4)"/><text x="99.0945%" y="815.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="98.8445%" y="789" width="0.1050%" height="15" fill="rgb(252,195,42)"/><text x="99.0945%" y="799.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="98.8445%" y="773" width="0.1050%" height="15" fill="rgb(209,10,6)"/><text x="99.0945%" y="783.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="98.8445%" y="757" width="0.1050%" height="15" fill="rgb(229,3,52)"/><text x="99.0945%" y="767.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="98.8445%" y="741" width="0.1050%" height="15" fill="rgb(253,49,37)"/><text x="99.0945%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.8445%" y="725" width="0.1050%" height="15" fill="rgb(240,103,49)"/><text x="99.0945%" y="735.50"></text></g><g><title>[vmlinux] (1 samples, 0.11%)</title><rect x="98.9496%" y="837" width="0.1050%" height="15" fill="rgb(250,182,30)"/><text x="99.1996%" y="847.50"></text></g><g><title>do_group_exit (1 samples, 0.11%)</title><rect x="98.9496%" y="821" width="0.1050%" height="15" fill="rgb(248,8,30)"/><text x="99.1996%" y="831.50"></text></g><g><title>do_exit (1 samples, 0.11%)</title><rect x="98.9496%" y="805" width="0.1050%" height="15" fill="rgb(237,120,30)"/><text x="99.1996%" y="815.50"></text></g><g><title>mmput (1 samples, 0.11%)</title><rect x="98.9496%" y="789" width="0.1050%" height="15" fill="rgb(221,146,34)"/><text x="99.1996%" y="799.50"></text></g><g><title>exit_mmap (1 samples, 0.11%)</title><rect x="98.9496%" y="773" width="0.1050%" height="15" fill="rgb(242,55,13)"/><text x="99.1996%" y="783.50"></text></g><g><title>unmap_vmas (1 samples, 0.11%)</title><rect x="98.9496%" y="757" width="0.1050%" height="15" fill="rgb(242,112,31)"/><text x="99.1996%" y="767.50"></text></g><g><title>unmap_page_range (1 samples, 0.11%)</title><rect x="98.9496%" y="741" width="0.1050%" height="15" fill="rgb(249,192,27)"/><text x="99.1996%" y="751.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="98.9496%" y="869" width="0.2101%" height="15" fill="rgb(208,204,44)"/><text x="99.1996%" y="879.50"></text></g><g><title>do_syscall_64 (2 samples, 0.21%)</title><rect x="98.9496%" y="853" width="0.2101%" height="15" fill="rgb(208,93,54)"/><text x="99.1996%" y="863.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="99.0546%" y="837" width="0.1050%" height="15" fill="rgb(242,1,31)"/><text x="99.3046%" y="847.50"></text></g><g><title>do_execve (1 samples, 0.11%)</title><rect x="99.0546%" y="821" width="0.1050%" height="15" fill="rgb(241,83,25)"/><text x="99.3046%" y="831.50"></text></g><g><title>__do_execve_file (1 samples, 0.11%)</title><rect x="99.0546%" y="805" width="0.1050%" height="15" fill="rgb(205,169,50)"/><text x="99.3046%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.11%)</title><rect x="99.0546%" y="789" width="0.1050%" height="15" fill="rgb(239,186,37)"/><text x="99.3046%" y="799.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="99.0546%" y="773" width="0.1050%" height="15" fill="rgb(205,221,10)"/><text x="99.3046%" y="783.50"></text></g><g><title>elf_map (1 samples, 0.11%)</title><rect x="99.0546%" y="757" width="0.1050%" height="15" fill="rgb(218,196,15)"/><text x="99.3046%" y="767.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="99.0546%" y="741" width="0.1050%" height="15" fill="rgb(218,196,35)"/><text x="99.3046%" y="751.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="99.0546%" y="725" width="0.1050%" height="15" fill="rgb(233,63,24)"/><text x="99.3046%" y="735.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="99.0546%" y="709" width="0.1050%" height="15" fill="rgb(225,8,4)"/><text x="99.3046%" y="719.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="99.0546%" y="693" width="0.1050%" height="15" fill="rgb(234,105,35)"/><text x="99.3046%" y="703.50"></text></g><g><title>d_path (1 samples, 0.11%)</title><rect x="99.0546%" y="677" width="0.1050%" height="15" fill="rgb(236,21,32)"/><text x="99.3046%" y="687.50"></text></g><g><title>prepend_path (1 samples, 0.11%)</title><rect x="99.0546%" y="661" width="0.1050%" height="15" fill="rgb(228,109,6)"/><text x="99.3046%" y="671.50"></text></g><g><title>prepend_name (1 samples, 0.11%)</title><rect x="99.0546%" y="645" width="0.1050%" height="15" fill="rgb(229,215,31)"/><text x="99.3046%" y="655.50"></text></g><g><title>lobsters (946 samples, 99.37%)</title><rect x="0.0000%" y="885" width="99.3697%" height="15" fill="rgb(221,52,54)"/><text x="0.2500%" y="895.50">lobsters</text></g><g><title>page_fault (2 samples, 0.21%)</title><rect x="99.1597%" y="869" width="0.2101%" height="15" fill="rgb(252,129,43)"/><text x="99.4097%" y="879.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="99.2647%" y="853" width="0.1050%" height="15" fill="rgb(248,183,27)"/><text x="99.5147%" y="863.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="99.2647%" y="837" width="0.1050%" height="15" fill="rgb(250,0,22)"/><text x="99.5147%" y="847.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="99.2647%" y="821" width="0.1050%" height="15" fill="rgb(213,166,10)"/><text x="99.5147%" y="831.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="99.2647%" y="805" width="0.1050%" height="15" fill="rgb(207,163,36)"/><text x="99.5147%" y="815.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="99.2647%" y="789" width="0.1050%" height="15" fill="rgb(208,122,22)"/><text x="99.5147%" y="799.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="99.2647%" y="773" width="0.1050%" height="15" fill="rgb(207,104,49)"/><text x="99.5147%" y="783.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="99.2647%" y="757" width="0.1050%" height="15" fill="rgb(248,211,50)"/><text x="99.5147%" y="767.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="99.2647%" y="741" width="0.1050%" height="15" fill="rgb(217,13,45)"/><text x="99.5147%" y="751.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="99.2647%" y="725" width="0.1050%" height="15" fill="rgb(211,216,49)"/><text x="99.5147%" y="735.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="99.2647%" y="709" width="0.1050%" height="15" fill="rgb(221,58,53)"/><text x="99.5147%" y="719.50"></text></g><g><title>all (952 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(220,112,41)"/><text x="0.2500%" y="911.50"></text></g><g><title>perf (6 samples, 0.63%)</title><rect x="99.3697%" y="885" width="0.6303%" height="15" fill="rgb(236,38,28)"/><text x="99.6197%" y="895.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.63%)</title><rect x="99.3697%" y="869" width="0.6303%" height="15" fill="rgb(227,195,22)"/><text x="99.6197%" y="879.50"></text></g><g><title>do_syscall_64 (6 samples, 0.63%)</title><rect x="99.3697%" y="853" width="0.6303%" height="15" fill="rgb(214,55,33)"/><text x="99.6197%" y="863.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.63%)</title><rect x="99.3697%" y="837" width="0.6303%" height="15" fill="rgb(248,80,13)"/><text x="99.6197%" y="847.50"></text></g><g><title>do_execve (6 samples, 0.63%)</title><rect x="99.3697%" y="821" width="0.6303%" height="15" fill="rgb(238,52,6)"/><text x="99.6197%" y="831.50"></text></g><g><title>__do_execve_file (6 samples, 0.63%)</title><rect x="99.3697%" y="805" width="0.6303%" height="15" fill="rgb(224,198,47)"/><text x="99.6197%" y="815.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.63%)</title><rect x="99.3697%" y="789" width="0.6303%" height="15" fill="rgb(233,171,20)"/><text x="99.6197%" y="799.50"></text></g><g><title>load_elf_binary (6 samples, 0.63%)</title><rect x="99.3697%" y="773" width="0.6303%" height="15" fill="rgb(241,30,25)"/><text x="99.6197%" y="783.50"></text></g><g><title>setup_new_exec (6 samples, 0.63%)</title><rect x="99.3697%" y="757" width="0.6303%" height="15" fill="rgb(207,171,38)"/><text x="99.6197%" y="767.50"></text></g><g><title>perf_event_exec (6 samples, 0.63%)</title><rect x="99.3697%" y="741" width="0.6303%" height="15" fill="rgb(234,70,1)"/><text x="99.6197%" y="751.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.53%)</title><rect x="99.4748%" y="725" width="0.5252%" height="15" fill="rgb(232,178,18)"/><text x="99.7248%" y="735.50"></text></g><g><title>native_write_msr (5 samples, 0.53%)</title><rect x="99.4748%" y="709" width="0.5252%" height="15" fill="rgb(241,78,40)"/><text x="99.7248%" y="719.50"></text></g></svg></svg>