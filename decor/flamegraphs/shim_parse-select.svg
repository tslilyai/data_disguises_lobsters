<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="0.0000%" y="853" width="0.1982%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="863.50"></text></g><g><title>[[stack]] (3 samples, 0.30%)</title><rect x="0.2973%" y="853" width="0.2973%" height="15" fill="rgb(217,0,24)"/><text x="0.5473%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.30%)</title><rect x="0.5946%" y="837" width="0.2973%" height="15" fill="rgb(221,193,54)"/><text x="0.8446%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="0.8920%" y="837" width="0.1982%" height="15" fill="rgb(248,212,6)"/><text x="1.1420%" y="847.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.20%)</title><rect x="1.4866%" y="837" width="0.1982%" height="15" fill="rgb(208,68,35)"/><text x="1.7366%" y="847.50"></text></g><g><title>__rdl_alloc (2 samples, 0.20%)</title><rect x="2.0813%" y="837" width="0.1982%" height="15" fill="rgb(232,128,0)"/><text x="2.3313%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.20%)</title><rect x="2.0813%" y="821" width="0.1982%" height="15" fill="rgb(207,160,47)"/><text x="2.3313%" y="831.50"></text></g><g><title>_int_free (3 samples, 0.30%)</title><rect x="2.2795%" y="837" width="0.2973%" height="15" fill="rgb(228,23,34)"/><text x="2.5295%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.69%)</title><rect x="2.5768%" y="837" width="0.6938%" height="15" fill="rgb(218,30,26)"/><text x="2.8268%" y="847.50"></text></g><g><title>mysql::conn::Conn::handle_ok (3 samples, 0.30%)</title><rect x="3.4688%" y="837" width="0.2973%" height="15" fill="rgb(220,122,19)"/><text x="3.7188%" y="847.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.20%)</title><rect x="3.7661%" y="837" width="0.1982%" height="15" fill="rgb(250,228,42)"/><text x="4.0161%" y="847.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.20%)</title><rect x="4.0634%" y="837" width="0.1982%" height="15" fill="rgb(240,193,28)"/><text x="4.3134%" y="847.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.20%)</title><rect x="4.2616%" y="837" width="0.1982%" height="15" fill="rgb(216,20,37)"/><text x="4.5116%" y="847.50"></text></g><g><title>[anon] (43 samples, 4.26%)</title><rect x="0.5946%" y="853" width="4.2616%" height="15" fill="rgb(206,188,39)"/><text x="0.8446%" y="863.50">[anon]</text></g><g><title>[lobsters] (3 samples, 0.30%)</title><rect x="4.9554%" y="853" width="0.2973%" height="15" fill="rgb(217,207,13)"/><text x="5.2054%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="5.5500%" y="741" width="0.3964%" height="15" fill="rgb(231,73,38)"/><text x="5.8000%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="5.7483%" y="725" width="0.1982%" height="15" fill="rgb(225,20,46)"/><text x="5.9983%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.30%)</title><rect x="5.9465%" y="741" width="0.2973%" height="15" fill="rgb(210,31,41)"/><text x="6.1965%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.20%)</title><rect x="6.0456%" y="725" width="0.1982%" height="15" fill="rgb(221,200,47)"/><text x="6.2956%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.89%)</title><rect x="5.5500%" y="757" width="0.8920%" height="15" fill="rgb(226,26,5)"/><text x="5.8000%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (11 samples, 1.09%)</title><rect x="5.5500%" y="805" width="1.0902%" height="15" fill="rgb(249,33,26)"/><text x="5.8000%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (11 samples, 1.09%)</title><rect x="5.5500%" y="789" width="1.0902%" height="15" fill="rgb(235,183,28)"/><text x="5.8000%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (11 samples, 1.09%)</title><rect x="5.5500%" y="773" width="1.0902%" height="15" fill="rgb(221,5,38)"/><text x="5.8000%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="6.4420%" y="757" width="0.1982%" height="15" fill="rgb(247,18,42)"/><text x="6.6920%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="6.4420%" y="741" width="0.1982%" height="15" fill="rgb(241,131,45)"/><text x="6.6920%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (13 samples, 1.29%)</title><rect x="5.5500%" y="837" width="1.2884%" height="15" fill="rgb(249,31,29)"/><text x="5.8000%" y="847.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (13 samples, 1.29%)</title><rect x="5.5500%" y="821" width="1.2884%" height="15" fill="rgb(225,111,53)"/><text x="5.8000%" y="831.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.20%)</title><rect x="6.6402%" y="805" width="0.1982%" height="15" fill="rgb(238,160,17)"/><text x="6.8902%" y="815.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.20%)</title><rect x="6.6402%" y="789" width="0.1982%" height="15" fill="rgb(214,148,48)"/><text x="6.8902%" y="799.50"></text></g><g><title>__libc_start_main (2 samples, 0.20%)</title><rect x="7.3340%" y="837" width="0.1982%" height="15" fill="rgb(232,36,49)"/><text x="7.5840%" y="847.50"></text></g><g><title>main (2 samples, 0.20%)</title><rect x="7.3340%" y="821" width="0.1982%" height="15" fill="rgb(209,103,24)"/><text x="7.5840%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.20%)</title><rect x="7.3340%" y="805" width="0.1982%" height="15" fill="rgb(229,88,8)"/><text x="7.5840%" y="815.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.20%)</title><rect x="7.3340%" y="789" width="0.1982%" height="15" fill="rgb(213,181,19)"/><text x="7.5840%" y="799.50"></text></g><g><title>std::panicking::try (2 samples, 0.20%)</title><rect x="7.3340%" y="773" width="0.1982%" height="15" fill="rgb(254,191,54)"/><text x="7.5840%" y="783.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.20%)</title><rect x="7.3340%" y="757" width="0.1982%" height="15" fill="rgb(241,83,37)"/><text x="7.5840%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.20%)</title><rect x="7.3340%" y="741" width="0.1982%" height="15" fill="rgb(233,36,39)"/><text x="7.5840%" y="751.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.20%)</title><rect x="7.3340%" y="725" width="0.1982%" height="15" fill="rgb(226,3,54)"/><text x="7.5840%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.20%)</title><rect x="7.3340%" y="709" width="0.1982%" height="15" fill="rgb(245,192,40)"/><text x="7.5840%" y="719.50"></text></g><g><title>lobsters::main (2 samples, 0.20%)</title><rect x="7.3340%" y="693" width="0.1982%" height="15" fill="rgb(238,167,29)"/><text x="7.5840%" y="703.50"></text></g><g><title>__rdl_alloc (3 samples, 0.30%)</title><rect x="7.5322%" y="837" width="0.2973%" height="15" fill="rgb(232,182,51)"/><text x="7.7822%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.20%)</title><rect x="7.6313%" y="821" width="0.1982%" height="15" fill="rgb(231,60,39)"/><text x="7.8813%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.20%)</title><rect x="8.3251%" y="693" width="0.1982%" height="15" fill="rgb(208,69,12)"/><text x="8.5751%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="8.3251%" y="677" width="0.1982%" height="15" fill="rgb(235,93,37)"/><text x="8.5751%" y="687.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="8.3251%" y="661" width="0.1982%" height="15" fill="rgb(213,116,39)"/><text x="8.5751%" y="671.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (5 samples, 0.50%)</title><rect x="8.3251%" y="757" width="0.4955%" height="15" fill="rgb(222,207,29)"/><text x="8.5751%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (5 samples, 0.50%)</title><rect x="8.3251%" y="741" width="0.4955%" height="15" fill="rgb(206,96,30)"/><text x="8.5751%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (5 samples, 0.50%)</title><rect x="8.3251%" y="725" width="0.4955%" height="15" fill="rgb(218,138,4)"/><text x="8.5751%" y="735.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.50%)</title><rect x="8.3251%" y="709" width="0.4955%" height="15" fill="rgb(250,191,14)"/><text x="8.5751%" y="719.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.30%)</title><rect x="8.5233%" y="693" width="0.2973%" height="15" fill="rgb(239,60,40)"/><text x="8.7733%" y="703.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.30%)</title><rect x="8.5233%" y="677" width="0.2973%" height="15" fill="rgb(206,27,48)"/><text x="8.7733%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9 samples, 0.89%)</title><rect x="8.3251%" y="837" width="0.8920%" height="15" fill="rgb(225,35,8)"/><text x="8.5751%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.89%)</title><rect x="8.3251%" y="821" width="0.8920%" height="15" fill="rgb(250,213,24)"/><text x="8.5751%" y="831.50"></text></g><g><title>decor::Shim::run_on_tcp (9 samples, 0.89%)</title><rect x="8.3251%" y="805" width="0.8920%" height="15" fill="rgb(247,123,22)"/><text x="8.5751%" y="815.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (9 samples, 0.89%)</title><rect x="8.3251%" y="789" width="0.8920%" height="15" fill="rgb(231,138,38)"/><text x="8.5751%" y="799.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.89%)</title><rect x="8.3251%" y="773" width="0.8920%" height="15" fill="rgb(231,145,46)"/><text x="8.5751%" y="783.50"></text></g><g><title>decor::helpers::answer_rows (4 samples, 0.40%)</title><rect x="8.8206%" y="757" width="0.3964%" height="15" fill="rgb(251,118,11)"/><text x="9.0706%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.40%)</title><rect x="8.8206%" y="741" width="0.3964%" height="15" fill="rgb(217,147,25)"/><text x="9.0706%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.40%)</title><rect x="8.8206%" y="725" width="0.3964%" height="15" fill="rgb(247,81,37)"/><text x="9.0706%" y="735.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.40%)</title><rect x="8.8206%" y="709" width="0.3964%" height="15" fill="rgb(209,12,38)"/><text x="9.0706%" y="719.50"></text></g><g><title>mysql_common::value::read_text_values (4 samples, 0.40%)</title><rect x="8.8206%" y="693" width="0.3964%" height="15" fill="rgb(227,1,9)"/><text x="9.0706%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="9.0188%" y="677" width="0.1982%" height="15" fill="rgb(248,47,43)"/><text x="9.2688%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="9.2170%" y="837" width="0.1982%" height="15" fill="rgb(221,10,30)"/><text x="9.4670%" y="847.50"></text></g><g><title>decor::helpers::answer_rows (2 samples, 0.20%)</title><rect x="9.5144%" y="789" width="0.1982%" height="15" fill="rgb(210,229,1)"/><text x="9.7644%" y="799.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="9.5144%" y="773" width="0.1982%" height="15" fill="rgb(222,148,37)"/><text x="9.7644%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.20%)</title><rect x="9.5144%" y="757" width="0.1982%" height="15" fill="rgb(234,67,33)"/><text x="9.7644%" y="767.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.20%)</title><rect x="9.5144%" y="741" width="0.1982%" height="15" fill="rgb(247,98,35)"/><text x="9.7644%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.20%)</title><rect x="9.5144%" y="725" width="0.1982%" height="15" fill="rgb(247,138,52)"/><text x="9.7644%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="9.5144%" y="709" width="0.1982%" height="15" fill="rgb(213,79,30)"/><text x="9.7644%" y="719.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.20%)</title><rect x="9.5144%" y="693" width="0.1982%" height="15" fill="rgb(246,177,23)"/><text x="9.7644%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.20%)</title><rect x="9.5144%" y="677" width="0.1982%" height="15" fill="rgb(230,62,27)"/><text x="9.7644%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.20%)</title><rect x="9.5144%" y="661" width="0.1982%" height="15" fill="rgb(216,154,8)"/><text x="9.7644%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.20%)</title><rect x="9.5144%" y="645" width="0.1982%" height="15" fill="rgb(244,35,45)"/><text x="9.7644%" y="655.50"></text></g><g><title>decor::Shim::run_on_tcp (4 samples, 0.40%)</title><rect x="9.5144%" y="837" width="0.3964%" height="15" fill="rgb(251,115,12)"/><text x="9.7644%" y="847.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (4 samples, 0.40%)</title><rect x="9.5144%" y="821" width="0.3964%" height="15" fill="rgb(240,54,50)"/><text x="9.7644%" y="831.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (4 samples, 0.40%)</title><rect x="9.5144%" y="805" width="0.3964%" height="15" fill="rgb(233,84,52)"/><text x="9.7644%" y="815.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (2 samples, 0.20%)</title><rect x="9.7126%" y="789" width="0.1982%" height="15" fill="rgb(207,117,47)"/><text x="9.9626%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="821" width="0.1982%" height="15" fill="rgb(249,43,39)"/><text x="10.2599%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="805" width="0.1982%" height="15" fill="rgb(209,38,44)"/><text x="10.2599%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="789" width="0.1982%" height="15" fill="rgb(236,212,23)"/><text x="10.2599%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="773" width="0.1982%" height="15" fill="rgb(242,79,21)"/><text x="10.2599%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="757" width="0.1982%" height="15" fill="rgb(211,96,35)"/><text x="10.2599%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="10.0099%" y="741" width="0.1982%" height="15" fill="rgb(253,215,40)"/><text x="10.2599%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="725" width="0.1982%" height="15" fill="rgb(211,81,21)"/><text x="10.2599%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="709" width="0.1982%" height="15" fill="rgb(208,190,38)"/><text x="10.2599%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.20%)</title><rect x="10.0099%" y="693" width="0.1982%" height="15" fill="rgb(235,213,38)"/><text x="10.2599%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="677" width="0.1982%" height="15" fill="rgb(237,122,38)"/><text x="10.2599%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="10.0099%" y="661" width="0.1982%" height="15" fill="rgb(244,218,35)"/><text x="10.2599%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="10.0099%" y="645" width="0.1982%" height="15" fill="rgb(240,68,47)"/><text x="10.2599%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="10.0099%" y="629" width="0.1982%" height="15" fill="rgb(210,16,53)"/><text x="10.2599%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="10.0099%" y="613" width="0.1982%" height="15" fill="rgb(235,124,12)"/><text x="10.2599%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="10.0099%" y="597" width="0.1982%" height="15" fill="rgb(224,169,11)"/><text x="10.2599%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="10.0099%" y="581" width="0.1982%" height="15" fill="rgb(250,166,2)"/><text x="10.2599%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="10.0099%" y="565" width="0.1982%" height="15" fill="rgb(242,216,29)"/><text x="10.2599%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="10.0099%" y="549" width="0.1982%" height="15" fill="rgb(230,116,27)"/><text x="10.2599%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.20%)</title><rect x="10.0099%" y="533" width="0.1982%" height="15" fill="rgb(228,99,48)"/><text x="10.2599%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="10.0099%" y="517" width="0.1982%" height="15" fill="rgb(253,11,6)"/><text x="10.2599%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="10.0099%" y="501" width="0.1982%" height="15" fill="rgb(247,143,39)"/><text x="10.2599%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="10.0099%" y="485" width="0.1982%" height="15" fill="rgb(236,97,10)"/><text x="10.2599%" y="495.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.30%)</title><rect x="10.0099%" y="837" width="0.2973%" height="15" fill="rgb(233,208,19)"/><text x="10.2599%" y="847.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.30%)</title><rect x="10.4063%" y="821" width="0.2973%" height="15" fill="rgb(216,164,2)"/><text x="10.6563%" y="831.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.20%)</title><rect x="10.5055%" y="805" width="0.1982%" height="15" fill="rgb(220,129,5)"/><text x="10.7555%" y="815.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.20%)</title><rect x="10.5055%" y="789" width="0.1982%" height="15" fill="rgb(242,17,10)"/><text x="10.7555%" y="799.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.20%)</title><rect x="10.5055%" y="773" width="0.1982%" height="15" fill="rgb(242,107,0)"/><text x="10.7555%" y="783.50"></text></g><g><title>lobsters::main (6 samples, 0.59%)</title><rect x="10.3072%" y="837" width="0.5946%" height="15" fill="rgb(251,28,31)"/><text x="10.5572%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.20%)</title><rect x="10.7037%" y="821" width="0.1982%" height="15" fill="rgb(233,223,10)"/><text x="10.9537%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.20%)</title><rect x="10.7037%" y="805" width="0.1982%" height="15" fill="rgb(215,21,27)"/><text x="10.9537%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.20%)</title><rect x="10.7037%" y="789" width="0.1982%" height="15" fill="rgb(232,23,21)"/><text x="10.9537%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="10.7037%" y="773" width="0.1982%" height="15" fill="rgb(244,5,23)"/><text x="10.9537%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.20%)</title><rect x="10.7037%" y="757" width="0.1982%" height="15" fill="rgb(226,81,46)"/><text x="10.9537%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.20%)</title><rect x="10.7037%" y="741" width="0.1982%" height="15" fill="rgb(247,70,30)"/><text x="10.9537%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.20%)</title><rect x="10.7037%" y="725" width="0.1982%" height="15" fill="rgb(212,68,19)"/><text x="10.9537%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="10.9019%" y="773" width="0.1982%" height="15" fill="rgb(240,187,13)"/><text x="11.1519%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (2 samples, 0.20%)</title><rect x="10.9019%" y="757" width="0.1982%" height="15" fill="rgb(223,113,26)"/><text x="11.1519%" y="767.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.30%)</title><rect x="10.9019%" y="821" width="0.2973%" height="15" fill="rgb(206,192,2)"/><text x="11.1519%" y="831.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.30%)</title><rect x="10.9019%" y="805" width="0.2973%" height="15" fill="rgb(241,108,4)"/><text x="11.1519%" y="815.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (3 samples, 0.30%)</title><rect x="10.9019%" y="789" width="0.2973%" height="15" fill="rgb(247,173,49)"/><text x="11.1519%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (3 samples, 0.30%)</title><rect x="11.3974%" y="773" width="0.2973%" height="15" fill="rgb(224,114,35)"/><text x="11.6474%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (6 samples, 0.59%)</title><rect x="11.1992%" y="789" width="0.5946%" height="15" fill="rgb(245,159,27)"/><text x="11.4492%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.30%)</title><rect x="11.7939%" y="757" width="0.2973%" height="15" fill="rgb(245,172,44)"/><text x="12.0439%" y="767.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.30%)</title><rect x="11.7939%" y="741" width="0.2973%" height="15" fill="rgb(236,23,11)"/><text x="12.0439%" y="751.50"></text></g><g><title>_int_realloc (3 samples, 0.30%)</title><rect x="11.7939%" y="725" width="0.2973%" height="15" fill="rgb(205,117,38)"/><text x="12.0439%" y="735.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (14 samples, 1.39%)</title><rect x="10.9019%" y="837" width="1.3875%" height="15" fill="rgb(237,72,25)"/><text x="11.1519%" y="847.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (11 samples, 1.09%)</title><rect x="11.1992%" y="821" width="1.0902%" height="15" fill="rgb(244,70,9)"/><text x="11.4492%" y="831.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (11 samples, 1.09%)</title><rect x="11.1992%" y="805" width="1.0902%" height="15" fill="rgb(217,125,39)"/><text x="11.4492%" y="815.50"></text></g><g><title>sql_parser::parser::parse_statements (5 samples, 0.50%)</title><rect x="11.7939%" y="789" width="0.4955%" height="15" fill="rgb(235,36,10)"/><text x="12.0439%" y="799.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (5 samples, 0.50%)</title><rect x="11.7939%" y="773" width="0.4955%" height="15" fill="rgb(251,123,47)"/><text x="12.0439%" y="783.50"></text></g><g><title>page_fault (2 samples, 0.20%)</title><rect x="12.0912%" y="757" width="0.1982%" height="15" fill="rgb(221,13,13)"/><text x="12.3412%" y="767.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.20%)</title><rect x="12.0912%" y="741" width="0.1982%" height="15" fill="rgb(238,131,9)"/><text x="12.3412%" y="751.50"></text></g><g><title>handle_mm_fault (2 samples, 0.20%)</title><rect x="12.0912%" y="725" width="0.1982%" height="15" fill="rgb(211,50,8)"/><text x="12.3412%" y="735.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.20%)</title><rect x="12.0912%" y="709" width="0.1982%" height="15" fill="rgb(245,182,24)"/><text x="12.3412%" y="719.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.30%)</title><rect x="12.2894%" y="837" width="0.2973%" height="15" fill="rgb(242,14,37)"/><text x="12.5394%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (17 samples, 1.68%)</title><rect x="12.6858%" y="805" width="1.6848%" height="15" fill="rgb(246,228,12)"/><text x="12.9358%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.68%)</title><rect x="12.6858%" y="789" width="1.6848%" height="15" fill="rgb(213,55,15)"/><text x="12.9358%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (17 samples, 1.68%)</title><rect x="12.6858%" y="773" width="1.6848%" height="15" fill="rgb(209,9,3)"/><text x="12.9358%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (16 samples, 1.59%)</title><rect x="12.7849%" y="757" width="1.5857%" height="15" fill="rgb(230,59,30)"/><text x="13.0349%" y="767.50"></text></g><g><title>sql_parser::parser::Parser::expected (16 samples, 1.59%)</title><rect x="12.7849%" y="741" width="1.5857%" height="15" fill="rgb(209,121,21)"/><text x="13.0349%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16 samples, 1.59%)</title><rect x="12.7849%" y="725" width="1.5857%" height="15" fill="rgb(220,109,13)"/><text x="13.0349%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 1.59%)</title><rect x="12.7849%" y="709" width="1.5857%" height="15" fill="rgb(232,18,1)"/><text x="13.0349%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 1.59%)</title><rect x="12.7849%" y="693" width="1.5857%" height="15" fill="rgb(215,41,42)"/><text x="13.0349%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 1.59%)</title><rect x="12.7849%" y="677" width="1.5857%" height="15" fill="rgb(224,123,36)"/><text x="13.0349%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (16 samples, 1.59%)</title><rect x="12.7849%" y="661" width="1.5857%" height="15" fill="rgb(240,125,3)"/><text x="13.0349%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 1.59%)</title><rect x="12.7849%" y="645" width="1.5857%" height="15" fill="rgb(205,98,50)"/><text x="13.0349%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (16 samples, 1.59%)</title><rect x="12.7849%" y="629" width="1.5857%" height="15" fill="rgb(205,185,37)"/><text x="13.0349%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 1.59%)</title><rect x="12.7849%" y="613" width="1.5857%" height="15" fill="rgb(238,207,15)"/><text x="13.0349%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 1.59%)</title><rect x="12.7849%" y="597" width="1.5857%" height="15" fill="rgb(213,199,42)"/><text x="13.0349%" y="607.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (18 samples, 1.78%)</title><rect x="12.6858%" y="837" width="1.7839%" height="15" fill="rgb(235,201,11)"/><text x="12.9358%" y="847.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (18 samples, 1.78%)</title><rect x="12.6858%" y="821" width="1.7839%" height="15" fill="rgb(207,46,11)"/><text x="12.9358%" y="831.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (2 samples, 0.20%)</title><rect x="14.4698%" y="821" width="0.1982%" height="15" fill="rgb(241,35,35)"/><text x="14.7198%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.20%)</title><rect x="14.4698%" y="805" width="0.1982%" height="15" fill="rgb(243,32,47)"/><text x="14.7198%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (2 samples, 0.20%)</title><rect x="14.4698%" y="789" width="0.1982%" height="15" fill="rgb(247,202,23)"/><text x="14.7198%" y="799.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (2 samples, 0.20%)</title><rect x="14.4698%" y="773" width="0.1982%" height="15" fill="rgb(219,102,11)"/><text x="14.7198%" y="783.50"></text></g><g><title>sql_parser::parser::Parser::expected (2 samples, 0.20%)</title><rect x="14.4698%" y="757" width="0.1982%" height="15" fill="rgb(243,110,44)"/><text x="14.7198%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="14.4698%" y="741" width="0.1982%" height="15" fill="rgb(222,74,54)"/><text x="14.7198%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="14.4698%" y="725" width="0.1982%" height="15" fill="rgb(216,99,12)"/><text x="14.7198%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="14.4698%" y="709" width="0.1982%" height="15" fill="rgb(226,22,26)"/><text x="14.7198%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="14.4698%" y="693" width="0.1982%" height="15" fill="rgb(217,163,10)"/><text x="14.7198%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="14.4698%" y="677" width="0.1982%" height="15" fill="rgb(213,25,53)"/><text x="14.7198%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.20%)</title><rect x="14.4698%" y="661" width="0.1982%" height="15" fill="rgb(252,105,26)"/><text x="14.7198%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="14.4698%" y="645" width="0.1982%" height="15" fill="rgb(220,39,43)"/><text x="14.7198%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="14.4698%" y="629" width="0.1982%" height="15" fill="rgb(229,68,48)"/><text x="14.7198%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.20%)</title><rect x="14.4698%" y="613" width="0.1982%" height="15" fill="rgb(252,8,32)"/><text x="14.7198%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.20%)</title><rect x="14.4698%" y="597" width="0.1982%" height="15" fill="rgb(223,20,43)"/><text x="14.7198%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="14.4698%" y="581" width="0.1982%" height="15" fill="rgb(229,81,49)"/><text x="14.7198%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="14.4698%" y="565" width="0.1982%" height="15" fill="rgb(236,28,36)"/><text x="14.7198%" y="575.50"></text></g><g><title>_int_malloc (2 samples, 0.20%)</title><rect x="14.4698%" y="549" width="0.1982%" height="15" fill="rgb(249,185,26)"/><text x="14.7198%" y="559.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.30%)</title><rect x="14.4698%" y="837" width="0.2973%" height="15" fill="rgb(249,174,33)"/><text x="14.7198%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.40%)</title><rect x="14.7671%" y="837" width="0.3964%" height="15" fill="rgb(233,201,37)"/><text x="15.0171%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.40%)</title><rect x="14.7671%" y="821" width="0.3964%" height="15" fill="rgb(221,78,26)"/><text x="15.0171%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (4 samples, 0.40%)</title><rect x="14.7671%" y="805" width="0.3964%" height="15" fill="rgb(250,127,30)"/><text x="15.0171%" y="815.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (3 samples, 0.30%)</title><rect x="14.8662%" y="789" width="0.2973%" height="15" fill="rgb(230,49,44)"/><text x="15.1162%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.30%)</title><rect x="15.4609%" y="693" width="0.2973%" height="15" fill="rgb(229,67,23)"/><text x="15.7109%" y="703.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.30%)</title><rect x="15.4609%" y="677" width="0.2973%" height="15" fill="rgb(249,83,47)"/><text x="15.7109%" y="687.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.30%)</title><rect x="15.4609%" y="661" width="0.2973%" height="15" fill="rgb(215,43,3)"/><text x="15.7109%" y="671.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.30%)</title><rect x="15.4609%" y="645" width="0.2973%" height="15" fill="rgb(238,154,13)"/><text x="15.7109%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.20%)</title><rect x="15.7582%" y="661" width="0.1982%" height="15" fill="rgb(219,56,2)"/><text x="16.0082%" y="671.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.20%)</title><rect x="15.7582%" y="645" width="0.1982%" height="15" fill="rgb(233,0,4)"/><text x="16.0082%" y="655.50"></text></g><g><title>start_thread (8 samples, 0.79%)</title><rect x="15.3617%" y="837" width="0.7929%" height="15" fill="rgb(235,30,7)"/><text x="15.6117%" y="847.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.79%)</title><rect x="15.3617%" y="821" width="0.7929%" height="15" fill="rgb(250,79,13)"/><text x="15.6117%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (8 samples, 0.79%)</title><rect x="15.3617%" y="805" width="0.7929%" height="15" fill="rgb(211,146,34)"/><text x="15.6117%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (8 samples, 0.79%)</title><rect x="15.3617%" y="789" width="0.7929%" height="15" fill="rgb(228,22,38)"/><text x="15.6117%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (8 samples, 0.79%)</title><rect x="15.3617%" y="773" width="0.7929%" height="15" fill="rgb(235,168,5)"/><text x="15.6117%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.79%)</title><rect x="15.3617%" y="757" width="0.7929%" height="15" fill="rgb(221,155,16)"/><text x="15.6117%" y="767.50"></text></g><g><title>decor::Shim::run_on_tcp (8 samples, 0.79%)</title><rect x="15.3617%" y="741" width="0.7929%" height="15" fill="rgb(215,215,53)"/><text x="15.6117%" y="751.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (8 samples, 0.79%)</title><rect x="15.3617%" y="725" width="0.7929%" height="15" fill="rgb(223,4,10)"/><text x="15.6117%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (7 samples, 0.69%)</title><rect x="15.4609%" y="709" width="0.6938%" height="15" fill="rgb(234,103,6)"/><text x="15.7109%" y="719.50"></text></g><g><title>decor::helpers::answer_rows (4 samples, 0.40%)</title><rect x="15.7582%" y="693" width="0.3964%" height="15" fill="rgb(227,97,0)"/><text x="16.0082%" y="703.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.40%)</title><rect x="15.7582%" y="677" width="0.3964%" height="15" fill="rgb(234,150,53)"/><text x="16.0082%" y="687.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (2 samples, 0.20%)</title><rect x="15.9564%" y="661" width="0.1982%" height="15" fill="rgb(228,201,54)"/><text x="16.2064%" y="671.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.40%)</title><rect x="16.1546%" y="709" width="0.3964%" height="15" fill="rgb(222,22,37)"/><text x="16.4046%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.40%)</title><rect x="16.1546%" y="693" width="0.3964%" height="15" fill="rgb(237,53,32)"/><text x="16.4046%" y="703.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.40%)</title><rect x="16.1546%" y="677" width="0.3964%" height="15" fill="rgb(233,25,53)"/><text x="16.4046%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.40%)</title><rect x="16.1546%" y="661" width="0.3964%" height="15" fill="rgb(210,40,34)"/><text x="16.4046%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="16.3528%" y="645" width="0.1982%" height="15" fill="rgb(241,220,44)"/><text x="16.6028%" y="655.50"></text></g><g><title>finish_task_switch (2 samples, 0.20%)</title><rect x="17.5421%" y="373" width="0.1982%" height="15" fill="rgb(235,28,35)"/><text x="17.7921%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.20%)</title><rect x="17.5421%" y="357" width="0.1982%" height="15" fill="rgb(210,56,17)"/><text x="17.7921%" y="367.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (2 samples, 0.20%)</title><rect x="17.5421%" y="341" width="0.1982%" height="15" fill="rgb(224,130,29)"/><text x="17.7921%" y="351.50"></text></g><g><title>native_write_msr (2 samples, 0.20%)</title><rect x="17.5421%" y="325" width="0.1982%" height="15" fill="rgb(235,212,8)"/><text x="17.7921%" y="335.50"></text></g><g><title>inet_recvmsg (7 samples, 0.69%)</title><rect x="17.1457%" y="485" width="0.6938%" height="15" fill="rgb(223,33,50)"/><text x="17.3957%" y="495.50"></text></g><g><title>tcp_recvmsg (7 samples, 0.69%)</title><rect x="17.1457%" y="469" width="0.6938%" height="15" fill="rgb(219,149,13)"/><text x="17.3957%" y="479.50"></text></g><g><title>sk_wait_data (7 samples, 0.69%)</title><rect x="17.1457%" y="453" width="0.6938%" height="15" fill="rgb(250,156,29)"/><text x="17.3957%" y="463.50"></text></g><g><title>wait_woken (5 samples, 0.50%)</title><rect x="17.3439%" y="437" width="0.4955%" height="15" fill="rgb(216,193,19)"/><text x="17.5939%" y="447.50"></text></g><g><title>schedule_timeout (5 samples, 0.50%)</title><rect x="17.3439%" y="421" width="0.4955%" height="15" fill="rgb(216,135,14)"/><text x="17.5939%" y="431.50"></text></g><g><title>schedule (4 samples, 0.40%)</title><rect x="17.4430%" y="405" width="0.3964%" height="15" fill="rgb(241,47,5)"/><text x="17.6930%" y="415.50"></text></g><g><title>__schedule (4 samples, 0.40%)</title><rect x="17.4430%" y="389" width="0.3964%" height="15" fill="rgb(233,42,35)"/><text x="17.6930%" y="399.50"></text></g><g><title>do_syscall_64 (12 samples, 1.19%)</title><rect x="16.7493%" y="533" width="1.1893%" height="15" fill="rgb(231,13,6)"/><text x="16.9993%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (11 samples, 1.09%)</title><rect x="16.8484%" y="517" width="1.0902%" height="15" fill="rgb(207,181,40)"/><text x="17.0984%" y="527.50"></text></g><g><title>__sys_recvfrom (11 samples, 1.09%)</title><rect x="16.8484%" y="501" width="1.0902%" height="15" fill="rgb(254,173,49)"/><text x="17.0984%" y="511.50"></text></g><g><title>std::rt::lang_start_internal (19 samples, 1.88%)</title><rect x="16.1546%" y="837" width="1.8831%" height="15" fill="rgb(221,1,38)"/><text x="16.4046%" y="847.50">s..</text></g><g><title>std::panic::catch_unwind (19 samples, 1.88%)</title><rect x="16.1546%" y="821" width="1.8831%" height="15" fill="rgb(206,124,46)"/><text x="16.4046%" y="831.50">s..</text></g><g><title>std::panicking::try (19 samples, 1.88%)</title><rect x="16.1546%" y="805" width="1.8831%" height="15" fill="rgb(249,21,11)"/><text x="16.4046%" y="815.50">s..</text></g><g><title>std::panicking::try::do_call (19 samples, 1.88%)</title><rect x="16.1546%" y="789" width="1.8831%" height="15" fill="rgb(222,201,40)"/><text x="16.4046%" y="799.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19 samples, 1.88%)</title><rect x="16.1546%" y="773" width="1.8831%" height="15" fill="rgb(235,61,29)"/><text x="16.4046%" y="783.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (19 samples, 1.88%)</title><rect x="16.1546%" y="757" width="1.8831%" height="15" fill="rgb(219,207,3)"/><text x="16.4046%" y="767.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 1.88%)</title><rect x="16.1546%" y="741" width="1.8831%" height="15" fill="rgb(222,56,46)"/><text x="16.4046%" y="751.50">s..</text></g><g><title>lobsters::main (19 samples, 1.88%)</title><rect x="16.1546%" y="725" width="1.8831%" height="15" fill="rgb(239,76,54)"/><text x="16.4046%" y="735.50">l..</text></g><g><title>mysql::conn::Conn::_query (15 samples, 1.49%)</title><rect x="16.5510%" y="709" width="1.4866%" height="15" fill="rgb(231,124,27)"/><text x="16.8010%" y="719.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (15 samples, 1.49%)</title><rect x="16.5510%" y="693" width="1.4866%" height="15" fill="rgb(249,195,6)"/><text x="16.8010%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (15 samples, 1.49%)</title><rect x="16.5510%" y="677" width="1.4866%" height="15" fill="rgb(237,174,47)"/><text x="16.8010%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.49%)</title><rect x="16.5510%" y="661" width="1.4866%" height="15" fill="rgb(206,201,31)"/><text x="16.8010%" y="671.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (14 samples, 1.39%)</title><rect x="16.6501%" y="645" width="1.3875%" height="15" fill="rgb(231,57,52)"/><text x="16.9001%" y="655.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (14 samples, 1.39%)</title><rect x="16.6501%" y="629" width="1.3875%" height="15" fill="rgb(248,177,22)"/><text x="16.9001%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::read (14 samples, 1.39%)</title><rect x="16.6501%" y="613" width="1.3875%" height="15" fill="rgb(215,211,37)"/><text x="16.9001%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::read (14 samples, 1.39%)</title><rect x="16.6501%" y="597" width="1.3875%" height="15" fill="rgb(241,128,51)"/><text x="16.9001%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (14 samples, 1.39%)</title><rect x="16.6501%" y="581" width="1.3875%" height="15" fill="rgb(227,165,31)"/><text x="16.9001%" y="591.50"></text></g><g><title>__libc_recv (14 samples, 1.39%)</title><rect x="16.6501%" y="565" width="1.3875%" height="15" fill="rgb(228,167,24)"/><text x="16.9001%" y="575.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 1.29%)</title><rect x="16.7493%" y="549" width="1.2884%" height="15" fill="rgb(228,143,12)"/><text x="16.9993%" y="559.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (4 samples, 0.40%)</title><rect x="18.0377%" y="709" width="0.3964%" height="15" fill="rgb(249,149,8)"/><text x="18.2877%" y="719.50"></text></g><g><title>mysql::conn::Conn::_query (4 samples, 0.40%)</title><rect x="18.0377%" y="693" width="0.3964%" height="15" fill="rgb(243,35,44)"/><text x="18.2877%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.40%)</title><rect x="18.0377%" y="677" width="0.3964%" height="15" fill="rgb(246,89,9)"/><text x="18.2877%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (4 samples, 0.40%)</title><rect x="18.0377%" y="661" width="0.3964%" height="15" fill="rgb(233,213,13)"/><text x="18.2877%" y="671.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.40%)</title><rect x="18.0377%" y="645" width="0.3964%" height="15" fill="rgb(233,141,41)"/><text x="18.2877%" y="655.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.50%)</title><rect x="18.0377%" y="837" width="0.4955%" height="15" fill="rgb(239,167,4)"/><text x="18.2877%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.50%)</title><rect x="18.0377%" y="821" width="0.4955%" height="15" fill="rgb(209,217,16)"/><text x="18.2877%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (5 samples, 0.50%)</title><rect x="18.0377%" y="805" width="0.4955%" height="15" fill="rgb(219,88,35)"/><text x="18.2877%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5 samples, 0.50%)</title><rect x="18.0377%" y="789" width="0.4955%" height="15" fill="rgb(220,193,23)"/><text x="18.2877%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.50%)</title><rect x="18.0377%" y="773" width="0.4955%" height="15" fill="rgb(230,90,52)"/><text x="18.2877%" y="783.50"></text></g><g><title>decor::Shim::run_on_tcp (5 samples, 0.50%)</title><rect x="18.0377%" y="757" width="0.4955%" height="15" fill="rgb(252,106,19)"/><text x="18.2877%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (5 samples, 0.50%)</title><rect x="18.0377%" y="741" width="0.4955%" height="15" fill="rgb(206,74,20)"/><text x="18.2877%" y="751.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (5 samples, 0.50%)</title><rect x="18.0377%" y="725" width="0.4955%" height="15" fill="rgb(230,138,44)"/><text x="18.2877%" y="735.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.20%)</title><rect x="18.5332%" y="597" width="0.1982%" height="15" fill="rgb(235,182,43)"/><text x="18.7832%" y="607.50"></text></g><g><title>__kfree_skb (2 samples, 0.20%)</title><rect x="19.3261%" y="501" width="0.1982%" height="15" fill="rgb(242,16,51)"/><text x="19.5761%" y="511.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.20%)</title><rect x="19.5243%" y="501" width="0.1982%" height="15" fill="rgb(248,9,4)"/><text x="19.7743%" y="511.50"></text></g><g><title>_raw_spin_unlock_irqrestore (2 samples, 0.20%)</title><rect x="20.1189%" y="485" width="0.1982%" height="15" fill="rgb(210,31,22)"/><text x="20.3689%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.20%)</title><rect x="20.9118%" y="421" width="0.1982%" height="15" fill="rgb(239,54,39)"/><text x="21.1618%" y="431.50"></text></g><g><title>update_curr (4 samples, 0.40%)</title><rect x="21.3082%" y="389" width="0.3964%" height="15" fill="rgb(230,99,41)"/><text x="21.5582%" y="399.50"></text></g><g><title>dequeue_task_fair (9 samples, 0.89%)</title><rect x="21.2091%" y="421" width="0.8920%" height="15" fill="rgb(253,106,12)"/><text x="21.4591%" y="431.50"></text></g><g><title>dequeue_entity (9 samples, 0.89%)</title><rect x="21.2091%" y="405" width="0.8920%" height="15" fill="rgb(213,46,41)"/><text x="21.4591%" y="415.50"></text></g><g><title>update_load_avg (4 samples, 0.40%)</title><rect x="21.7047%" y="389" width="0.3964%" height="15" fill="rgb(215,133,35)"/><text x="21.9547%" y="399.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.30%)</title><rect x="21.8038%" y="373" width="0.2973%" height="15" fill="rgb(213,28,5)"/><text x="22.0538%" y="383.50"></text></g><g><title>psi_task_change (7 samples, 0.69%)</title><rect x="22.2993%" y="421" width="0.6938%" height="15" fill="rgb(215,77,49)"/><text x="22.5493%" y="431.50"></text></g><g><title>psi_group_change (6 samples, 0.59%)</title><rect x="22.3984%" y="405" width="0.5946%" height="15" fill="rgb(248,100,22)"/><text x="22.6484%" y="415.50"></text></g><g><title>record_times (4 samples, 0.40%)</title><rect x="22.5966%" y="389" width="0.3964%" height="15" fill="rgb(208,67,9)"/><text x="22.8466%" y="399.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.20%)</title><rect x="22.7948%" y="373" width="0.1982%" height="15" fill="rgb(219,133,21)"/><text x="23.0448%" y="383.50"></text></g><g><title>sched_clock (2 samples, 0.20%)</title><rect x="22.7948%" y="357" width="0.1982%" height="15" fill="rgb(246,46,29)"/><text x="23.0448%" y="367.50"></text></g><g><title>native_sched_clock (2 samples, 0.20%)</title><rect x="22.7948%" y="341" width="0.1982%" height="15" fill="rgb(246,185,52)"/><text x="23.0448%" y="351.50"></text></g><g><title>sk_wait_data (36 samples, 3.57%)</title><rect x="19.7225%" y="501" width="3.5679%" height="15" fill="rgb(252,136,11)"/><text x="19.9725%" y="511.50">sk_w..</text></g><g><title>wait_woken (29 samples, 2.87%)</title><rect x="20.4163%" y="485" width="2.8741%" height="15" fill="rgb(219,138,53)"/><text x="20.6663%" y="495.50">wa..</text></g><g><title>schedule_timeout (26 samples, 2.58%)</title><rect x="20.7136%" y="469" width="2.5768%" height="15" fill="rgb(211,51,23)"/><text x="20.9636%" y="479.50">sc..</text></g><g><title>schedule (25 samples, 2.48%)</title><rect x="20.8127%" y="453" width="2.4777%" height="15" fill="rgb(247,221,28)"/><text x="21.0627%" y="463.50">sc..</text></g><g><title>__schedule (24 samples, 2.38%)</title><rect x="20.9118%" y="437" width="2.3786%" height="15" fill="rgb(251,222,45)"/><text x="21.1618%" y="447.50">__..</text></g><g><title>uclamp_rq_dec_id (2 samples, 0.20%)</title><rect x="23.0922%" y="421" width="0.1982%" height="15" fill="rgb(217,162,53)"/><text x="23.3422%" y="431.50"></text></g><g><title>_copy_to_iter (2 samples, 0.20%)</title><rect x="23.2904%" y="469" width="0.1982%" height="15" fill="rgb(229,93,14)"/><text x="23.5404%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.40%)</title><rect x="23.2904%" y="501" width="0.3964%" height="15" fill="rgb(209,67,49)"/><text x="23.5404%" y="511.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.40%)</title><rect x="23.2904%" y="485" width="0.3964%" height="15" fill="rgb(213,87,29)"/><text x="23.5404%" y="495.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.20%)</title><rect x="23.4886%" y="469" width="0.1982%" height="15" fill="rgb(205,151,52)"/><text x="23.7386%" y="479.50"></text></g><g><title>__check_object_size (2 samples, 0.20%)</title><rect x="23.4886%" y="453" width="0.1982%" height="15" fill="rgb(253,215,39)"/><text x="23.7386%" y="463.50"></text></g><g><title>inet_recvmsg (50 samples, 4.96%)</title><rect x="18.8305%" y="533" width="4.9554%" height="15" fill="rgb(221,220,41)"/><text x="19.0805%" y="543.50">inet_r..</text></g><g><title>tcp_recvmsg (49 samples, 4.86%)</title><rect x="18.9296%" y="517" width="4.8563%" height="15" fill="rgb(218,133,21)"/><text x="19.1796%" y="527.50">tcp_re..</text></g><g><title>__x64_sys_recvfrom (53 samples, 5.25%)</title><rect x="18.7314%" y="565" width="5.2527%" height="15" fill="rgb(221,193,43)"/><text x="18.9814%" y="575.50">__x64_..</text></g><g><title>__sys_recvfrom (53 samples, 5.25%)</title><rect x="18.7314%" y="549" width="5.2527%" height="15" fill="rgb(240,128,52)"/><text x="18.9814%" y="559.50">__sys_..</text></g><g><title>do_syscall_64 (54 samples, 5.35%)</title><rect x="18.7314%" y="581" width="5.3518%" height="15" fill="rgb(253,114,12)"/><text x="18.9814%" y="591.50">do_sysc..</text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (58 samples, 5.75%)</title><rect x="18.5332%" y="693" width="5.7483%" height="15" fill="rgb(215,223,47)"/><text x="18.7832%" y="703.50">&lt;std::i..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (58 samples, 5.75%)</title><rect x="18.5332%" y="677" width="5.7483%" height="15" fill="rgb(248,225,23)"/><text x="18.7832%" y="687.50">&lt;std::n..</text></g><g><title>std::sys_common::net::TcpStream::read (58 samples, 5.75%)</title><rect x="18.5332%" y="661" width="5.7483%" height="15" fill="rgb(250,108,0)"/><text x="18.7832%" y="671.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::read (58 samples, 5.75%)</title><rect x="18.5332%" y="645" width="5.7483%" height="15" fill="rgb(228,208,7)"/><text x="18.7832%" y="655.50">std::sy..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (58 samples, 5.75%)</title><rect x="18.5332%" y="629" width="5.7483%" height="15" fill="rgb(244,45,10)"/><text x="18.7832%" y="639.50">std::sy..</text></g><g><title>__libc_recv (58 samples, 5.75%)</title><rect x="18.5332%" y="613" width="5.7483%" height="15" fill="rgb(207,125,25)"/><text x="18.7832%" y="623.50">__libc_..</text></g><g><title>entry_SYSCALL_64 (56 samples, 5.55%)</title><rect x="18.7314%" y="597" width="5.5500%" height="15" fill="rgb(210,195,18)"/><text x="18.9814%" y="607.50">entry_S..</text></g><g><title>prepare_exit_to_usermode (2 samples, 0.20%)</title><rect x="24.0833%" y="581" width="0.1982%" height="15" fill="rgb(249,80,12)"/><text x="24.3333%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.40%)</title><rect x="24.2815%" y="645" width="0.3964%" height="15" fill="rgb(221,65,9)"/><text x="24.5315%" y="655.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.30%)</title><rect x="24.3806%" y="629" width="0.2973%" height="15" fill="rgb(235,49,36)"/><text x="24.6306%" y="639.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (63 samples, 6.24%)</title><rect x="18.5332%" y="773" width="6.2438%" height="15" fill="rgb(225,32,20)"/><text x="18.7832%" y="783.50">&lt;mysql::..</text></g><g><title>mysql::conn::Conn::_query (63 samples, 6.24%)</title><rect x="18.5332%" y="757" width="6.2438%" height="15" fill="rgb(215,141,46)"/><text x="18.7832%" y="767.50">mysql::c..</text></g><g><title>mysql::conn::Conn::handle_result_set (63 samples, 6.24%)</title><rect x="18.5332%" y="741" width="6.2438%" height="15" fill="rgb(250,160,47)"/><text x="18.7832%" y="751.50">mysql::c..</text></g><g><title>mysql::conn::Conn::read_packet (63 samples, 6.24%)</title><rect x="18.5332%" y="725" width="6.2438%" height="15" fill="rgb(216,222,40)"/><text x="18.7832%" y="735.50">mysql::c..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 6.24%)</title><rect x="18.5332%" y="709" width="6.2438%" height="15" fill="rgb(234,217,39)"/><text x="18.7832%" y="719.50">&lt;mysql_c..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.50%)</title><rect x="24.2815%" y="693" width="0.4955%" height="15" fill="rgb(207,178,40)"/><text x="24.5315%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (5 samples, 0.50%)</title><rect x="24.2815%" y="677" width="0.4955%" height="15" fill="rgb(221,136,13)"/><text x="24.5315%" y="687.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.50%)</title><rect x="24.2815%" y="661" width="0.4955%" height="15" fill="rgb(249,199,10)"/><text x="24.5315%" y="671.50"></text></g><g><title>mysql::conn::Conn::handle_ok (2 samples, 0.20%)</title><rect x="24.7770%" y="709" width="0.1982%" height="15" fill="rgb(249,222,13)"/><text x="25.0270%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.30%)</title><rect x="25.2725%" y="693" width="0.2973%" height="15" fill="rgb(244,185,38)"/><text x="25.5225%" y="703.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.20%)</title><rect x="25.3717%" y="677" width="0.1982%" height="15" fill="rgb(236,202,9)"/><text x="25.6217%" y="687.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.30%)</title><rect x="25.5699%" y="693" width="0.2973%" height="15" fill="rgb(250,229,37)"/><text x="25.8199%" y="703.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.30%)</title><rect x="25.5699%" y="677" width="0.2973%" height="15" fill="rgb(206,174,23)"/><text x="25.8199%" y="687.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.20%)</title><rect x="25.6690%" y="661" width="0.1982%" height="15" fill="rgb(211,33,43)"/><text x="25.9190%" y="671.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.20%)</title><rect x="25.6690%" y="645" width="0.1982%" height="15" fill="rgb(245,58,50)"/><text x="25.9190%" y="655.50"></text></g><g><title>mysql::conn::Conn::read_packet (13 samples, 1.29%)</title><rect x="24.9752%" y="709" width="1.2884%" height="15" fill="rgb(244,68,36)"/><text x="25.2252%" y="719.50"></text></g><g><title>_int_free (4 samples, 0.40%)</title><rect x="25.8672%" y="693" width="0.3964%" height="15" fill="rgb(232,229,15)"/><text x="26.1172%" y="703.50"></text></g><g><title>[unknown] (216 samples, 21.41%)</title><rect x="5.2527%" y="853" width="21.4073%" height="15" fill="rgb(254,30,23)"/><text x="5.5027%" y="863.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (82 samples, 8.13%)</title><rect x="18.5332%" y="837" width="8.1269%" height="15" fill="rgb(235,160,14)"/><text x="18.7832%" y="847.50">std::sys_co..</text></g><g><title>decor::Shim::run_on_tcp (82 samples, 8.13%)</title><rect x="18.5332%" y="821" width="8.1269%" height="15" fill="rgb(212,155,44)"/><text x="18.7832%" y="831.50">decor::Shim..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (82 samples, 8.13%)</title><rect x="18.5332%" y="805" width="8.1269%" height="15" fill="rgb(226,2,50)"/><text x="18.7832%" y="815.50">msql_srv::M..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (82 samples, 8.13%)</title><rect x="18.5332%" y="789" width="8.1269%" height="15" fill="rgb(234,177,6)"/><text x="18.7832%" y="799.50">&lt;decor::Shi..</text></g><g><title>decor::helpers::answer_rows (19 samples, 1.88%)</title><rect x="24.7770%" y="773" width="1.8831%" height="15" fill="rgb(217,24,9)"/><text x="25.0270%" y="783.50">d..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.88%)</title><rect x="24.7770%" y="757" width="1.8831%" height="15" fill="rgb(220,13,46)"/><text x="25.0270%" y="767.50">&lt;..</text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (19 samples, 1.88%)</title><rect x="24.7770%" y="741" width="1.8831%" height="15" fill="rgb(239,221,27)"/><text x="25.0270%" y="751.50">&lt;..</text></g><g><title>mysql::conn::Conn::next_text (19 samples, 1.88%)</title><rect x="24.7770%" y="725" width="1.8831%" height="15" fill="rgb(222,198,25)"/><text x="25.0270%" y="735.50">m..</text></g><g><title>mysql_common::value::read_text_values (3 samples, 0.30%)</title><rect x="26.3627%" y="709" width="0.2973%" height="15" fill="rgb(211,99,13)"/><text x="26.6127%" y="719.50"></text></g><g><title>mysql_common::value::read_text_value (3 samples, 0.30%)</title><rect x="26.3627%" y="693" width="0.2973%" height="15" fill="rgb(232,111,31)"/><text x="26.6127%" y="703.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.20%)</title><rect x="27.0565%" y="661" width="0.1982%" height="15" fill="rgb(245,82,37)"/><text x="27.3065%" y="671.50"></text></g><g><title>__ip_local_out (2 samples, 0.20%)</title><rect x="28.3449%" y="405" width="0.1982%" height="15" fill="rgb(227,149,46)"/><text x="28.5949%" y="415.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.20%)</title><rect x="29.0387%" y="357" width="0.1982%" height="15" fill="rgb(218,36,50)"/><text x="29.2887%" y="367.50"></text></g><g><title>netif_rx (2 samples, 0.20%)</title><rect x="29.2369%" y="325" width="0.1982%" height="15" fill="rgb(226,80,48)"/><text x="29.4869%" y="335.50"></text></g><g><title>netif_rx_internal (2 samples, 0.20%)</title><rect x="29.2369%" y="309" width="0.1982%" height="15" fill="rgb(238,224,15)"/><text x="29.4869%" y="319.50"></text></g><g><title>dev_hard_start_xmit (3 samples, 0.30%)</title><rect x="29.2369%" y="357" width="0.2973%" height="15" fill="rgb(241,136,10)"/><text x="29.4869%" y="367.50"></text></g><g><title>loopback_xmit (3 samples, 0.30%)</title><rect x="29.2369%" y="341" width="0.2973%" height="15" fill="rgb(208,32,45)"/><text x="29.4869%" y="351.50"></text></g><g><title>__dev_queue_xmit (11 samples, 1.09%)</title><rect x="28.6422%" y="373" width="1.0902%" height="15" fill="rgb(207,135,9)"/><text x="28.8922%" y="383.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.20%)</title><rect x="29.5342%" y="357" width="0.1982%" height="15" fill="rgb(206,86,44)"/><text x="29.7842%" y="367.50"></text></g><g><title>netif_skb_features (2 samples, 0.20%)</title><rect x="29.5342%" y="341" width="0.1982%" height="15" fill="rgb(245,177,15)"/><text x="29.7842%" y="351.50"></text></g><g><title>skb_network_protocol (2 samples, 0.20%)</title><rect x="29.5342%" y="325" width="0.1982%" height="15" fill="rgb(206,64,50)"/><text x="29.7842%" y="335.50"></text></g><g><title>__inet_lookup_established (4 samples, 0.40%)</title><rect x="30.8226%" y="181" width="0.3964%" height="15" fill="rgb(234,36,40)"/><text x="31.0726%" y="191.50"></text></g><g><title>psi_task_change (4 samples, 0.40%)</title><rect x="32.3092%" y="53" width="0.3964%" height="15" fill="rgb(213,64,8)"/><text x="32.5592%" y="63.50"></text></g><g><title>psi_group_change (3 samples, 0.30%)</title><rect x="32.4083%" y="37" width="0.2973%" height="15" fill="rgb(210,75,36)"/><text x="32.6583%" y="47.50"></text></g><g><title>enqueue_task (6 samples, 0.59%)</title><rect x="32.3092%" y="69" width="0.5946%" height="15" fill="rgb(229,88,21)"/><text x="32.5592%" y="79.50"></text></g><g><title>uclamp_rq_inc_id (2 samples, 0.20%)</title><rect x="32.7056%" y="53" width="0.1982%" height="15" fill="rgb(252,204,47)"/><text x="32.9556%" y="63.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.59%)</title><rect x="32.9039%" y="69" width="0.5946%" height="15" fill="rgb(208,77,27)"/><text x="33.1539%" y="79.50"></text></g><g><title>enqueue_entity (3 samples, 0.30%)</title><rect x="33.2012%" y="53" width="0.2973%" height="15" fill="rgb(221,76,26)"/><text x="33.4512%" y="63.50"></text></g><g><title>__wake_up_common (17 samples, 1.68%)</title><rect x="31.9128%" y="117" width="1.6848%" height="15" fill="rgb(225,139,18)"/><text x="32.1628%" y="127.50"></text></g><g><title>pollwake (17 samples, 1.68%)</title><rect x="31.9128%" y="101" width="1.6848%" height="15" fill="rgb(230,137,11)"/><text x="32.1628%" y="111.50"></text></g><g><title>try_to_wake_up (15 samples, 1.49%)</title><rect x="32.1110%" y="85" width="1.4866%" height="15" fill="rgb(212,28,1)"/><text x="32.3610%" y="95.50"></text></g><g><title>sock_def_readable (23 samples, 2.28%)</title><rect x="31.7146%" y="149" width="2.2795%" height="15" fill="rgb(248,164,17)"/><text x="31.9646%" y="159.50">s..</text></g><g><title>__wake_up_common_lock (21 samples, 2.08%)</title><rect x="31.9128%" y="133" width="2.0813%" height="15" fill="rgb(222,171,42)"/><text x="32.1628%" y="143.50">_..</text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.40%)</title><rect x="33.5976%" y="117" width="0.3964%" height="15" fill="rgb(243,84,45)"/><text x="33.8476%" y="127.50"></text></g><g><title>__kfree_skb (4 samples, 0.40%)</title><rect x="34.1923%" y="133" width="0.3964%" height="15" fill="rgb(252,49,23)"/><text x="34.4423%" y="143.50"></text></g><g><title>skb_release_data (4 samples, 0.40%)</title><rect x="34.1923%" y="117" width="0.3964%" height="15" fill="rgb(215,19,7)"/><text x="34.4423%" y="127.50"></text></g><g><title>tcp_ack (11 samples, 1.09%)</title><rect x="33.9941%" y="149" width="1.0902%" height="15" fill="rgb(238,81,41)"/><text x="34.2441%" y="159.50"></text></g><g><title>ip_local_deliver (52 samples, 5.15%)</title><rect x="30.4262%" y="245" width="5.1536%" height="15" fill="rgb(210,199,37)"/><text x="30.6762%" y="255.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (52 samples, 5.15%)</title><rect x="30.4262%" y="229" width="5.1536%" height="15" fill="rgb(244,192,49)"/><text x="30.6762%" y="239.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (52 samples, 5.15%)</title><rect x="30.4262%" y="213" width="5.1536%" height="15" fill="rgb(226,211,11)"/><text x="30.6762%" y="223.50">ip_pro..</text></g><g><title>tcp_v4_rcv (51 samples, 5.05%)</title><rect x="30.5253%" y="197" width="5.0545%" height="15" fill="rgb(236,162,54)"/><text x="30.7753%" y="207.50">tcp_v4..</text></g><g><title>tcp_v4_do_rcv (42 samples, 4.16%)</title><rect x="31.4172%" y="181" width="4.1625%" height="15" fill="rgb(220,229,9)"/><text x="31.6672%" y="191.50">tcp_v..</text></g><g><title>tcp_rcv_established (42 samples, 4.16%)</title><rect x="31.4172%" y="165" width="4.1625%" height="15" fill="rgb(250,87,22)"/><text x="31.6672%" y="175.50">tcp_r..</text></g><g><title>tcp_queue_rcv (3 samples, 0.30%)</title><rect x="35.2825%" y="149" width="0.2973%" height="15" fill="rgb(239,43,17)"/><text x="35.5325%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (53 samples, 5.25%)</title><rect x="30.4262%" y="277" width="5.2527%" height="15" fill="rgb(231,177,25)"/><text x="30.6762%" y="287.50">__neti..</text></g><g><title>ip_rcv (53 samples, 5.25%)</title><rect x="30.4262%" y="261" width="5.2527%" height="15" fill="rgb(219,179,1)"/><text x="30.6762%" y="271.50">ip_rcv</text></g><g><title>__ip_queue_xmit (75 samples, 7.43%)</title><rect x="28.3449%" y="421" width="7.4331%" height="15" fill="rgb(238,219,53)"/><text x="28.5949%" y="431.50">__ip_queue..</text></g><g><title>ip_output (73 samples, 7.23%)</title><rect x="28.5431%" y="405" width="7.2349%" height="15" fill="rgb(232,167,36)"/><text x="28.7931%" y="415.50">ip_output</text></g><g><title>ip_finish_output2 (72 samples, 7.14%)</title><rect x="28.6422%" y="389" width="7.1358%" height="15" fill="rgb(244,19,51)"/><text x="28.8922%" y="399.50">ip_finish_..</text></g><g><title>__local_bh_enable_ip (61 samples, 6.05%)</title><rect x="29.7324%" y="373" width="6.0456%" height="15" fill="rgb(224,6,22)"/><text x="29.9824%" y="383.50">__local_..</text></g><g><title>do_softirq (61 samples, 6.05%)</title><rect x="29.7324%" y="357" width="6.0456%" height="15" fill="rgb(224,145,5)"/><text x="29.9824%" y="367.50">do_softi..</text></g><g><title>do_softirq_own_stack (60 samples, 5.95%)</title><rect x="29.8315%" y="341" width="5.9465%" height="15" fill="rgb(234,130,49)"/><text x="30.0815%" y="351.50">do_softi..</text></g><g><title>__do_softirq (60 samples, 5.95%)</title><rect x="29.8315%" y="325" width="5.9465%" height="15" fill="rgb(254,6,2)"/><text x="30.0815%" y="335.50">__do_sof..</text></g><g><title>net_rx_action (59 samples, 5.85%)</title><rect x="29.9306%" y="309" width="5.8474%" height="15" fill="rgb(208,96,46)"/><text x="30.1806%" y="319.50">net_rx_..</text></g><g><title>process_backlog (57 samples, 5.65%)</title><rect x="30.1288%" y="293" width="5.6492%" height="15" fill="rgb(239,3,39)"/><text x="30.3788%" y="303.50">process..</text></g><g><title>__tcp_push_pending_frames (84 samples, 8.33%)</title><rect x="28.0476%" y="469" width="8.3251%" height="15" fill="rgb(233,210,1)"/><text x="28.2976%" y="479.50">__tcp_push_p..</text></g><g><title>tcp_write_xmit (84 samples, 8.33%)</title><rect x="28.0476%" y="453" width="8.3251%" height="15" fill="rgb(244,137,37)"/><text x="28.2976%" y="463.50">tcp_write_xm..</text></g><g><title>__tcp_transmit_skb (81 samples, 8.03%)</title><rect x="28.3449%" y="437" width="8.0278%" height="15" fill="rgb(240,136,2)"/><text x="28.5949%" y="447.50">__tcp_trans..</text></g><g><title>skb_clone (3 samples, 0.30%)</title><rect x="36.0753%" y="421" width="0.2973%" height="15" fill="rgb(239,18,37)"/><text x="36.3253%" y="431.50"></text></g><g><title>__kmalloc_node_track_caller (4 samples, 0.40%)</title><rect x="36.3726%" y="437" width="0.3964%" height="15" fill="rgb(218,185,22)"/><text x="36.6226%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (8 samples, 0.79%)</title><rect x="36.3726%" y="469" width="0.7929%" height="15" fill="rgb(225,218,4)"/><text x="36.6226%" y="479.50"></text></g><g><title>__alloc_skb (8 samples, 0.79%)</title><rect x="36.3726%" y="453" width="0.7929%" height="15" fill="rgb(230,182,32)"/><text x="36.6226%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.40%)</title><rect x="36.7691%" y="437" width="0.3964%" height="15" fill="rgb(242,56,43)"/><text x="37.0191%" y="447.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.20%)</title><rect x="37.1655%" y="469" width="0.1982%" height="15" fill="rgb(233,99,24)"/><text x="37.4155%" y="479.50"></text></g><g><title>sock_sendmsg (104 samples, 10.31%)</title><rect x="27.6511%" y="517" width="10.3072%" height="15" fill="rgb(234,209,42)"/><text x="27.9011%" y="527.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (104 samples, 10.31%)</title><rect x="27.6511%" y="501" width="10.3072%" height="15" fill="rgb(227,7,12)"/><text x="27.9011%" y="511.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (103 samples, 10.21%)</title><rect x="27.7502%" y="485" width="10.2081%" height="15" fill="rgb(245,203,43)"/><text x="28.0002%" y="495.50">tcp_sendmsg_loc..</text></g><g><title>tcp_send_mss (5 samples, 0.50%)</title><rect x="37.4628%" y="469" width="0.4955%" height="15" fill="rgb(238,205,33)"/><text x="37.7128%" y="479.50"></text></g><g><title>tcp_current_mss (5 samples, 0.50%)</title><rect x="37.4628%" y="453" width="0.4955%" height="15" fill="rgb(231,56,7)"/><text x="37.7128%" y="463.50"></text></g><g><title>ipv4_mtu (2 samples, 0.20%)</title><rect x="37.7602%" y="437" width="0.1982%" height="15" fill="rgb(244,186,29)"/><text x="38.0102%" y="447.50"></text></g><g><title>__x64_sys_sendto (106 samples, 10.51%)</title><rect x="27.6511%" y="549" width="10.5055%" height="15" fill="rgb(234,111,31)"/><text x="27.9011%" y="559.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (106 samples, 10.51%)</title><rect x="27.6511%" y="533" width="10.5055%" height="15" fill="rgb(241,149,10)"/><text x="27.9011%" y="543.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.20%)</title><rect x="37.9584%" y="517" width="0.1982%" height="15" fill="rgb(249,206,44)"/><text x="38.2084%" y="527.50"></text></g><g><title>syscall_slow_exit_work (4 samples, 0.40%)</title><rect x="38.1566%" y="549" width="0.3964%" height="15" fill="rgb(251,153,30)"/><text x="38.4066%" y="559.50"></text></g><g><title>__audit_syscall_exit (3 samples, 0.30%)</title><rect x="38.2557%" y="533" width="0.2973%" height="15" fill="rgb(239,152,38)"/><text x="38.5057%" y="543.50"></text></g><g><title>do_syscall_64 (111 samples, 11.00%)</title><rect x="27.6511%" y="565" width="11.0010%" height="15" fill="rgb(249,139,47)"/><text x="27.9011%" y="575.50">do_syscall_64</text></g><g><title>entry_SYSCALL_64 (116 samples, 11.50%)</title><rect x="27.6511%" y="581" width="11.4965%" height="15" fill="rgb(244,64,35)"/><text x="27.9011%" y="591.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.50%)</title><rect x="38.6521%" y="565" width="0.4955%" height="15" fill="rgb(216,46,15)"/><text x="38.9021%" y="575.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (121 samples, 11.99%)</title><rect x="27.2547%" y="629" width="11.9921%" height="15" fill="rgb(250,74,19)"/><text x="27.5047%" y="639.50">&lt;std::net::tcp::Tc..</text></g><g><title>std::sys_common::net::TcpStream::write (121 samples, 11.99%)</title><rect x="27.2547%" y="613" width="11.9921%" height="15" fill="rgb(249,42,33)"/><text x="27.5047%" y="623.50">std::sys_common::n..</text></g><g><title>__libc_send (120 samples, 11.89%)</title><rect x="27.3538%" y="597" width="11.8930%" height="15" fill="rgb(242,149,17)"/><text x="27.6038%" y="607.50">__libc_send</text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (126 samples, 12.49%)</title><rect x="26.8583%" y="693" width="12.4876%" height="15" fill="rgb(244,29,21)"/><text x="27.1083%" y="703.50">&lt;mysql::conn::Conn ..</text></g><g><title>mysql::conn::Conn::_query (124 samples, 12.29%)</title><rect x="27.0565%" y="677" width="12.2894%" height="15" fill="rgb(220,130,37)"/><text x="27.3065%" y="687.50">mysql::conn::Conn:..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (122 samples, 12.09%)</title><rect x="27.2547%" y="661" width="12.0912%" height="15" fill="rgb(211,67,2)"/><text x="27.5047%" y="671.50">mysql_common::prot..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (122 samples, 12.09%)</title><rect x="27.2547%" y="645" width="12.0912%" height="15" fill="rgb(235,68,52)"/><text x="27.5047%" y="655.50">std::io::buffered:..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.30%)</title><rect x="39.7423%" y="661" width="0.2973%" height="15" fill="rgb(246,142,3)"/><text x="39.9923%" y="671.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.30%)</title><rect x="39.7423%" y="645" width="0.2973%" height="15" fill="rgb(241,25,7)"/><text x="39.9923%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.20%)</title><rect x="39.8414%" y="629" width="0.1982%" height="15" fill="rgb(242,119,39)"/><text x="40.0914%" y="639.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.20%)</title><rect x="39.8414%" y="613" width="0.1982%" height="15" fill="rgb(241,98,45)"/><text x="40.0914%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.30%)</title><rect x="40.0396%" y="581" width="0.2973%" height="15" fill="rgb(254,28,30)"/><text x="40.2896%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.30%)</title><rect x="40.0396%" y="565" width="0.2973%" height="15" fill="rgb(241,142,54)"/><text x="40.2896%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.30%)</title><rect x="40.0396%" y="549" width="0.2973%" height="15" fill="rgb(222,85,15)"/><text x="40.2896%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.20%)</title><rect x="40.1388%" y="533" width="0.1982%" height="15" fill="rgb(210,85,47)"/><text x="40.3888%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (9 samples, 0.89%)</title><rect x="40.0396%" y="597" width="0.8920%" height="15" fill="rgb(224,206,25)"/><text x="40.2896%" y="607.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.59%)</title><rect x="40.3370%" y="581" width="0.5946%" height="15" fill="rgb(243,201,19)"/><text x="40.5870%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.30%)</title><rect x="40.6343%" y="565" width="0.2973%" height="15" fill="rgb(236,59,4)"/><text x="40.8843%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="40.7334%" y="549" width="0.1982%" height="15" fill="rgb(254,179,45)"/><text x="40.9834%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="40.7334%" y="533" width="0.1982%" height="15" fill="rgb(226,14,10)"/><text x="40.9834%" y="543.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.69%)</title><rect x="40.9316%" y="565" width="0.6938%" height="15" fill="rgb(244,27,41)"/><text x="41.1816%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (6 samples, 0.59%)</title><rect x="41.0307%" y="549" width="0.5946%" height="15" fill="rgb(235,35,32)"/><text x="41.2807%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.50%)</title><rect x="41.1298%" y="533" width="0.4955%" height="15" fill="rgb(218,68,31)"/><text x="41.3798%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.50%)</title><rect x="41.1298%" y="517" width="0.4955%" height="15" fill="rgb(207,120,37)"/><text x="41.3798%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (5 samples, 0.50%)</title><rect x="41.1298%" y="501" width="0.4955%" height="15" fill="rgb(227,98,0)"/><text x="41.3798%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.79%)</title><rect x="40.9316%" y="597" width="0.7929%" height="15" fill="rgb(207,7,3)"/><text x="41.1816%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.79%)</title><rect x="40.9316%" y="581" width="0.7929%" height="15" fill="rgb(206,98,19)"/><text x="41.1816%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (18 samples, 1.78%)</title><rect x="40.0396%" y="613" width="1.7839%" height="15" fill="rgb(217,5,26)"/><text x="40.2896%" y="623.50">&lt;..</text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.69%)</title><rect x="41.9227%" y="565" width="0.6938%" height="15" fill="rgb(235,190,38)"/><text x="42.1727%" y="575.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.69%)</title><rect x="41.9227%" y="549" width="0.6938%" height="15" fill="rgb(247,86,24)"/><text x="42.1727%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.50%)</title><rect x="42.1209%" y="533" width="0.4955%" height="15" fill="rgb(205,101,16)"/><text x="42.3709%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.50%)</title><rect x="42.1209%" y="517" width="0.4955%" height="15" fill="rgb(246,168,33)"/><text x="42.3709%" y="527.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (5 samples, 0.50%)</title><rect x="42.1209%" y="501" width="0.4955%" height="15" fill="rgb(231,114,1)"/><text x="42.3709%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5 samples, 0.50%)</title><rect x="42.1209%" y="485" width="0.4955%" height="15" fill="rgb(207,184,53)"/><text x="42.3709%" y="495.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.20%)</title><rect x="42.4182%" y="469" width="0.1982%" height="15" fill="rgb(224,95,51)"/><text x="42.6682%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.40%)</title><rect x="42.6165%" y="549" width="0.3964%" height="15" fill="rgb(212,188,45)"/><text x="42.8665%" y="559.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.40%)</title><rect x="42.6165%" y="533" width="0.3964%" height="15" fill="rgb(223,154,38)"/><text x="42.8665%" y="543.50"></text></g><g><title>_int_realloc (4 samples, 0.40%)</title><rect x="42.6165%" y="517" width="0.3964%" height="15" fill="rgb(251,22,52)"/><text x="42.8665%" y="527.50"></text></g><g><title>_int_malloc (3 samples, 0.30%)</title><rect x="42.7156%" y="501" width="0.2973%" height="15" fill="rgb(229,209,22)"/><text x="42.9656%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (13 samples, 1.29%)</title><rect x="41.8236%" y="581" width="1.2884%" height="15" fill="rgb(234,138,34)"/><text x="42.0736%" y="591.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (5 samples, 0.50%)</title><rect x="42.6165%" y="565" width="0.4955%" height="15" fill="rgb(212,95,11)"/><text x="42.8665%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.40%)</title><rect x="43.1120%" y="549" width="0.3964%" height="15" fill="rgb(240,179,47)"/><text x="43.3620%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.40%)</title><rect x="43.1120%" y="533" width="0.3964%" height="15" fill="rgb(240,163,11)"/><text x="43.3620%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.20%)</title><rect x="43.3102%" y="517" width="0.1982%" height="15" fill="rgb(236,37,12)"/><text x="43.5602%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.20%)</title><rect x="43.3102%" y="501" width="0.1982%" height="15" fill="rgb(232,164,16)"/><text x="43.5602%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.50%)</title><rect x="43.1120%" y="581" width="0.4955%" height="15" fill="rgb(244,205,15)"/><text x="43.3620%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.50%)</title><rect x="43.1120%" y="565" width="0.4955%" height="15" fill="rgb(223,117,47)"/><text x="43.3620%" y="575.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.30%)</title><rect x="43.7066%" y="565" width="0.2973%" height="15" fill="rgb(244,107,35)"/><text x="43.9566%" y="575.50"></text></g><g><title>_int_realloc (2 samples, 0.20%)</title><rect x="43.8057%" y="549" width="0.1982%" height="15" fill="rgb(205,140,8)"/><text x="44.0557%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.20%)</title><rect x="44.1031%" y="549" width="0.1982%" height="15" fill="rgb(228,84,46)"/><text x="44.3531%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="44.1031%" y="533" width="0.1982%" height="15" fill="rgb(254,188,9)"/><text x="44.3531%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (27 samples, 2.68%)</title><rect x="41.8236%" y="597" width="2.6759%" height="15" fill="rgb(206,112,54)"/><text x="42.0736%" y="607.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (9 samples, 0.89%)</title><rect x="43.6075%" y="581" width="0.8920%" height="15" fill="rgb(216,84,49)"/><text x="43.8575%" y="591.50"></text></g><g><title>core::fmt::write (4 samples, 0.40%)</title><rect x="44.1031%" y="565" width="0.3964%" height="15" fill="rgb(214,194,35)"/><text x="44.3531%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.30%)</title><rect x="44.4995%" y="597" width="0.2973%" height="15" fill="rgb(249,28,3)"/><text x="44.7495%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (3 samples, 0.30%)</title><rect x="44.4995%" y="581" width="0.2973%" height="15" fill="rgb(222,56,52)"/><text x="44.7495%" y="591.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (3 samples, 0.30%)</title><rect x="44.4995%" y="565" width="0.2973%" height="15" fill="rgb(245,217,50)"/><text x="44.7495%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.30%)</title><rect x="44.4995%" y="549" width="0.2973%" height="15" fill="rgb(213,201,24)"/><text x="44.7495%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.30%)</title><rect x="44.4995%" y="533" width="0.2973%" height="15" fill="rgb(248,116,28)"/><text x="44.7495%" y="543.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.20%)</title><rect x="44.5986%" y="517" width="0.1982%" height="15" fill="rgb(219,72,43)"/><text x="44.8486%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.20%)</title><rect x="44.5986%" y="501" width="0.1982%" height="15" fill="rgb(209,138,14)"/><text x="44.8486%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (33 samples, 3.27%)</title><rect x="41.8236%" y="613" width="3.2706%" height="15" fill="rgb(222,18,33)"/><text x="42.0736%" y="623.50">&lt;sq..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.30%)</title><rect x="44.7968%" y="597" width="0.2973%" height="15" fill="rgb(213,199,7)"/><text x="45.0468%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="44.8959%" y="581" width="0.1982%" height="15" fill="rgb(250,110,10)"/><text x="45.1459%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.50%)</title><rect x="45.0942%" y="565" width="0.4955%" height="15" fill="rgb(248,123,6)"/><text x="45.3442%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.40%)</title><rect x="45.1933%" y="549" width="0.3964%" height="15" fill="rgb(206,91,31)"/><text x="45.4433%" y="559.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.40%)</title><rect x="45.1933%" y="533" width="0.3964%" height="15" fill="rgb(211,154,13)"/><text x="45.4433%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.40%)</title><rect x="45.1933%" y="517" width="0.3964%" height="15" fill="rgb(225,148,7)"/><text x="45.4433%" y="527.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.40%)</title><rect x="45.1933%" y="501" width="0.3964%" height="15" fill="rgb(220,160,43)"/><text x="45.4433%" y="511.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (6 samples, 0.59%)</title><rect x="45.0942%" y="597" width="0.5946%" height="15" fill="rgb(213,52,39)"/><text x="45.3442%" y="607.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (6 samples, 0.59%)</title><rect x="45.0942%" y="581" width="0.5946%" height="15" fill="rgb(243,137,7)"/><text x="45.3442%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.69%)</title><rect x="45.0942%" y="613" width="0.6938%" height="15" fill="rgb(230,79,13)"/><text x="45.3442%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="45.9861%" y="597" width="0.1982%" height="15" fill="rgb(247,105,23)"/><text x="46.2361%" y="607.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.20%)</title><rect x="45.9861%" y="581" width="0.1982%" height="15" fill="rgb(223,179,41)"/><text x="46.2361%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (64 samples, 6.34%)</title><rect x="40.0396%" y="629" width="6.3429%" height="15" fill="rgb(218,9,34)"/><text x="40.2896%" y="639.50">&lt;sql_par..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.59%)</title><rect x="45.7879%" y="613" width="0.5946%" height="15" fill="rgb(222,106,8)"/><text x="46.0379%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.20%)</title><rect x="46.1843%" y="597" width="0.1982%" height="15" fill="rgb(211,220,0)"/><text x="46.4343%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (68 samples, 6.74%)</title><rect x="39.7423%" y="677" width="6.7393%" height="15" fill="rgb(229,52,16)"/><text x="39.9923%" y="687.50">&lt;sql_pars..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (65 samples, 6.44%)</title><rect x="40.0396%" y="661" width="6.4420%" height="15" fill="rgb(212,155,18)"/><text x="40.2896%" y="671.50">&lt;sql_par..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (65 samples, 6.44%)</title><rect x="40.0396%" y="645" width="6.4420%" height="15" fill="rgb(242,21,14)"/><text x="40.2896%" y="655.50">&lt;sql_par..</text></g><g><title>core::fmt::write (69 samples, 6.84%)</title><rect x="39.7423%" y="693" width="6.8385%" height="15" fill="rgb(222,19,48)"/><text x="39.9923%" y="703.50">core::fmt..</text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="47.0763%" y="613" width="0.1982%" height="15" fill="rgb(232,45,27)"/><text x="47.3263%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.50%)</title><rect x="46.8781%" y="645" width="0.4955%" height="15" fill="rgb(249,103,42)"/><text x="47.1281%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="46.9772%" y="629" width="0.3964%" height="15" fill="rgb(246,81,33)"/><text x="47.2272%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="47.3736%" y="645" width="0.1982%" height="15" fill="rgb(252,33,42)"/><text x="47.6236%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="47.6710%" y="629" width="0.1982%" height="15" fill="rgb(209,212,41)"/><text x="47.9210%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (14 samples, 1.39%)</title><rect x="46.5808%" y="693" width="1.3875%" height="15" fill="rgb(207,154,6)"/><text x="46.8308%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 1.29%)</title><rect x="46.6799%" y="677" width="1.2884%" height="15" fill="rgb(223,64,47)"/><text x="46.9299%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (13 samples, 1.29%)</title><rect x="46.6799%" y="661" width="1.2884%" height="15" fill="rgb(211,161,38)"/><text x="46.9299%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.40%)</title><rect x="47.5719%" y="645" width="0.3964%" height="15" fill="rgb(219,138,40)"/><text x="47.8219%" y="655.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.69%)</title><rect x="48.2656%" y="677" width="0.6938%" height="15" fill="rgb(241,228,46)"/><text x="48.5156%" y="687.50"></text></g><g><title>mysql_common::row::new_row (2 samples, 0.20%)</title><rect x="48.7611%" y="661" width="0.1982%" height="15" fill="rgb(223,209,38)"/><text x="49.0111%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.30%)</title><rect x="49.1576%" y="677" width="0.2973%" height="15" fill="rgb(236,164,45)"/><text x="49.4076%" y="687.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (2 samples, 0.20%)</title><rect x="49.5540%" y="645" width="0.1982%" height="15" fill="rgb(231,15,5)"/><text x="49.8040%" y="655.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (6 samples, 0.59%)</title><rect x="49.4549%" y="677" width="0.5946%" height="15" fill="rgb(252,35,15)"/><text x="49.7049%" y="687.50"></text></g><g><title>msql_srv::writers::column_definitions (6 samples, 0.59%)</title><rect x="49.4549%" y="661" width="0.5946%" height="15" fill="rgb(248,181,18)"/><text x="49.7049%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.20%)</title><rect x="49.8513%" y="645" width="0.1982%" height="15" fill="rgb(233,39,42)"/><text x="50.1013%" y="655.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (5 samples, 0.50%)</title><rect x="50.1487%" y="677" width="0.4955%" height="15" fill="rgb(238,110,33)"/><text x="50.3987%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="50.4460%" y="661" width="0.1982%" height="15" fill="rgb(233,195,10)"/><text x="50.6960%" y="671.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (3 samples, 0.30%)</title><rect x="50.6442%" y="645" width="0.2973%" height="15" fill="rgb(254,105,3)"/><text x="50.8942%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.30%)</title><rect x="50.6442%" y="629" width="0.2973%" height="15" fill="rgb(221,225,9)"/><text x="50.8942%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.30%)</title><rect x="50.6442%" y="613" width="0.2973%" height="15" fill="rgb(224,227,45)"/><text x="50.8942%" y="623.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (4 samples, 0.40%)</title><rect x="50.6442%" y="677" width="0.3964%" height="15" fill="rgb(229,198,43)"/><text x="50.8942%" y="687.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (4 samples, 0.40%)</title><rect x="50.6442%" y="661" width="0.3964%" height="15" fill="rgb(206,209,35)"/><text x="50.8942%" y="671.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (247 samples, 24.48%)</title><rect x="26.8583%" y="709" width="24.4797%" height="15" fill="rgb(245,195,53)"/><text x="27.1083%" y="719.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;..</text></g><g><title>decor::helpers::answer_rows (34 samples, 3.37%)</title><rect x="47.9683%" y="693" width="3.3697%" height="15" fill="rgb(240,92,26)"/><text x="48.2183%" y="703.50">dec..</text></g><g><title>mysql_common::row::Row::unwrap (3 samples, 0.30%)</title><rect x="51.0406%" y="677" width="0.2973%" height="15" fill="rgb(207,40,23)"/><text x="51.2906%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="51.1397%" y="661" width="0.1982%" height="15" fill="rgb(223,111,35)"/><text x="51.3897%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="51.3380%" y="677" width="0.1982%" height="15" fill="rgb(229,147,28)"/><text x="51.5880%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="51.3380%" y="661" width="0.1982%" height="15" fill="rgb(211,29,28)"/><text x="51.5880%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="51.3380%" y="645" width="0.1982%" height="15" fill="rgb(228,72,33)"/><text x="51.5880%" y="655.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.20%)</title><rect x="51.3380%" y="629" width="0.1982%" height="15" fill="rgb(205,214,31)"/><text x="51.5880%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="51.3380%" y="613" width="0.1982%" height="15" fill="rgb(224,111,15)"/><text x="51.5880%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="51.3380%" y="709" width="0.2973%" height="15" fill="rgb(253,21,26)"/><text x="51.5880%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.30%)</title><rect x="51.3380%" y="693" width="0.2973%" height="15" fill="rgb(245,139,43)"/><text x="51.5880%" y="703.50"></text></g><g><title>__kfree_skb (2 samples, 0.20%)</title><rect x="52.6264%" y="501" width="0.1982%" height="15" fill="rgb(252,170,7)"/><text x="52.8764%" y="511.50"></text></g><g><title>add_wait_queue (2 samples, 0.20%)</title><rect x="53.3201%" y="485" width="0.1982%" height="15" fill="rgb(231,118,14)"/><text x="53.5701%" y="495.50"></text></g><g><title>update_curr (4 samples, 0.40%)</title><rect x="54.2121%" y="389" width="0.3964%" height="15" fill="rgb(238,83,0)"/><text x="54.4621%" y="399.50"></text></g><g><title>cpuacct_charge (2 samples, 0.20%)</title><rect x="54.4103%" y="373" width="0.1982%" height="15" fill="rgb(221,39,39)"/><text x="54.6603%" y="383.50"></text></g><g><title>dequeue_task_fair (8 samples, 0.79%)</title><rect x="54.1130%" y="421" width="0.7929%" height="15" fill="rgb(222,119,46)"/><text x="54.3630%" y="431.50"></text></g><g><title>dequeue_entity (8 samples, 0.79%)</title><rect x="54.1130%" y="405" width="0.7929%" height="15" fill="rgb(222,165,49)"/><text x="54.3630%" y="415.50"></text></g><g><title>update_load_avg (3 samples, 0.30%)</title><rect x="54.6085%" y="389" width="0.2973%" height="15" fill="rgb(219,113,52)"/><text x="54.8585%" y="399.50"></text></g><g><title>finish_task_switch (2 samples, 0.20%)</title><rect x="54.9058%" y="421" width="0.1982%" height="15" fill="rgb(214,7,15)"/><text x="55.1558%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.20%)</title><rect x="54.9058%" y="405" width="0.1982%" height="15" fill="rgb(235,32,4)"/><text x="55.1558%" y="415.50"></text></g><g><title>sk_wait_data (22 samples, 2.18%)</title><rect x="53.1219%" y="501" width="2.1804%" height="15" fill="rgb(238,90,54)"/><text x="53.3719%" y="511.50">s..</text></g><g><title>wait_woken (18 samples, 1.78%)</title><rect x="53.5183%" y="485" width="1.7839%" height="15" fill="rgb(213,208,19)"/><text x="53.7683%" y="495.50">w..</text></g><g><title>schedule_timeout (17 samples, 1.68%)</title><rect x="53.6174%" y="469" width="1.6848%" height="15" fill="rgb(233,156,4)"/><text x="53.8674%" y="479.50"></text></g><g><title>schedule (15 samples, 1.49%)</title><rect x="53.8157%" y="453" width="1.4866%" height="15" fill="rgb(207,194,5)"/><text x="54.0657%" y="463.50"></text></g><g><title>__schedule (15 samples, 1.49%)</title><rect x="53.8157%" y="437" width="1.4866%" height="15" fill="rgb(206,111,30)"/><text x="54.0657%" y="447.50"></text></g><g><title>inet_recvmsg (34 samples, 3.37%)</title><rect x="52.4281%" y="533" width="3.3697%" height="15" fill="rgb(243,70,54)"/><text x="52.6781%" y="543.50">ine..</text></g><g><title>tcp_recvmsg (34 samples, 3.37%)</title><rect x="52.4281%" y="517" width="3.3697%" height="15" fill="rgb(242,28,8)"/><text x="52.6781%" y="527.50">tcp..</text></g><g><title>skb_copy_datagram_iter (5 samples, 0.50%)</title><rect x="55.3023%" y="501" width="0.4955%" height="15" fill="rgb(219,106,18)"/><text x="55.5523%" y="511.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.50%)</title><rect x="55.3023%" y="485" width="0.4955%" height="15" fill="rgb(244,222,10)"/><text x="55.5523%" y="495.50"></text></g><g><title>simple_copy_to_iter (2 samples, 0.20%)</title><rect x="55.5996%" y="469" width="0.1982%" height="15" fill="rgb(236,179,52)"/><text x="55.8496%" y="479.50"></text></g><g><title>__check_object_size (2 samples, 0.20%)</title><rect x="55.5996%" y="453" width="0.1982%" height="15" fill="rgb(213,23,39)"/><text x="55.8496%" y="463.50"></text></g><g><title>__x64_sys_recvfrom (37 samples, 3.67%)</title><rect x="52.2299%" y="565" width="3.6670%" height="15" fill="rgb(238,48,10)"/><text x="52.4799%" y="575.50">__x6..</text></g><g><title>__sys_recvfrom (37 samples, 3.67%)</title><rect x="52.2299%" y="549" width="3.6670%" height="15" fill="rgb(251,196,23)"/><text x="52.4799%" y="559.50">__sy..</text></g><g><title>do_syscall_64 (38 samples, 3.77%)</title><rect x="52.2299%" y="581" width="3.7661%" height="15" fill="rgb(250,152,24)"/><text x="52.4799%" y="591.50">do_s..</text></g><g><title>entry_SYSCALL_64 (42 samples, 4.16%)</title><rect x="52.1308%" y="597" width="4.1625%" height="15" fill="rgb(209,150,17)"/><text x="52.3808%" y="607.50">entry..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.30%)</title><rect x="55.9960%" y="581" width="0.2973%" height="15" fill="rgb(234,202,34)"/><text x="56.2460%" y="591.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (46 samples, 4.56%)</title><rect x="51.8335%" y="693" width="4.5590%" height="15" fill="rgb(253,148,53)"/><text x="52.0835%" y="703.50">&lt;std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (46 samples, 4.56%)</title><rect x="51.8335%" y="677" width="4.5590%" height="15" fill="rgb(218,129,16)"/><text x="52.0835%" y="687.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read (46 samples, 4.56%)</title><rect x="51.8335%" y="661" width="4.5590%" height="15" fill="rgb(216,85,19)"/><text x="52.0835%" y="671.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read (46 samples, 4.56%)</title><rect x="51.8335%" y="645" width="4.5590%" height="15" fill="rgb(235,228,7)"/><text x="52.0835%" y="655.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (46 samples, 4.56%)</title><rect x="51.8335%" y="629" width="4.5590%" height="15" fill="rgb(245,175,0)"/><text x="52.0835%" y="639.50">std::..</text></g><g><title>__libc_recv (46 samples, 4.56%)</title><rect x="51.8335%" y="613" width="4.5590%" height="15" fill="rgb(208,168,36)"/><text x="52.0835%" y="623.50">__lib..</text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (49 samples, 4.86%)</title><rect x="51.8335%" y="709" width="4.8563%" height="15" fill="rgb(246,171,24)"/><text x="52.0835%" y="719.50">msql_s..</text></g><g><title>__memset_avx2_erms (3 samples, 0.30%)</title><rect x="56.3925%" y="693" width="0.2973%" height="15" fill="rgb(215,142,24)"/><text x="56.6425%" y="703.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.20%)</title><rect x="57.1853%" y="549" width="0.1982%" height="15" fill="rgb(250,187,7)"/><text x="57.4353%" y="559.50"></text></g><g><title>__sk_dst_check (3 samples, 0.30%)</title><rect x="58.3746%" y="469" width="0.2973%" height="15" fill="rgb(228,66,33)"/><text x="58.6246%" y="479.50"></text></g><g><title>ipv4_dst_check (3 samples, 0.30%)</title><rect x="58.3746%" y="453" width="0.2973%" height="15" fill="rgb(234,215,21)"/><text x="58.6246%" y="463.50"></text></g><g><title>validate_xmit_skb (3 samples, 0.30%)</title><rect x="59.0684%" y="421" width="0.2973%" height="15" fill="rgb(222,191,20)"/><text x="59.3184%" y="431.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.69%)</title><rect x="58.8702%" y="437" width="0.6938%" height="15" fill="rgb(245,79,54)"/><text x="59.1202%" y="447.50"></text></g><g><title>validate_xmit_xfrm (2 samples, 0.20%)</title><rect x="59.3657%" y="421" width="0.1982%" height="15" fill="rgb(240,10,37)"/><text x="59.6157%" y="431.50"></text></g><g><title>irqtime_account_irq (4 samples, 0.40%)</title><rect x="59.6630%" y="373" width="0.3964%" height="15" fill="rgb(214,192,32)"/><text x="59.9130%" y="383.50"></text></g><g><title>sched_clock_cpu (3 samples, 0.30%)</title><rect x="59.7621%" y="357" width="0.2973%" height="15" fill="rgb(209,36,54)"/><text x="60.0121%" y="367.50"></text></g><g><title>sched_clock (2 samples, 0.20%)</title><rect x="59.8612%" y="341" width="0.1982%" height="15" fill="rgb(220,10,11)"/><text x="60.1112%" y="351.50"></text></g><g><title>native_sched_clock (2 samples, 0.20%)</title><rect x="59.8612%" y="325" width="0.1982%" height="15" fill="rgb(221,106,17)"/><text x="60.1112%" y="335.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.30%)</title><rect x="60.8523%" y="245" width="0.2973%" height="15" fill="rgb(251,142,44)"/><text x="61.1023%" y="255.50"></text></g><g><title>psi_task_change (6 samples, 0.59%)</title><rect x="62.0416%" y="133" width="0.5946%" height="15" fill="rgb(238,13,15)"/><text x="62.2916%" y="143.50"></text></g><g><title>psi_group_change (5 samples, 0.50%)</title><rect x="62.1407%" y="117" width="0.4955%" height="15" fill="rgb(208,107,27)"/><text x="62.3907%" y="127.50"></text></g><g><title>enqueue_task (10 samples, 0.99%)</title><rect x="62.0416%" y="149" width="0.9911%" height="15" fill="rgb(205,136,37)"/><text x="62.2916%" y="159.50"></text></g><g><title>uclamp_rq_inc_id (4 samples, 0.40%)</title><rect x="62.6363%" y="133" width="0.3964%" height="15" fill="rgb(250,205,27)"/><text x="62.8863%" y="143.50"></text></g><g><title>account_entity_enqueue (3 samples, 0.30%)</title><rect x="63.1318%" y="117" width="0.2973%" height="15" fill="rgb(210,80,43)"/><text x="63.3818%" y="127.50"></text></g><g><title>enqueue_task_fair (6 samples, 0.59%)</title><rect x="63.0327%" y="149" width="0.5946%" height="15" fill="rgb(247,160,36)"/><text x="63.2827%" y="159.50"></text></g><g><title>enqueue_entity (5 samples, 0.50%)</title><rect x="63.1318%" y="133" width="0.4955%" height="15" fill="rgb(234,13,49)"/><text x="63.3818%" y="143.50"></text></g><g><title>update_load_avg (2 samples, 0.20%)</title><rect x="63.4291%" y="117" width="0.1982%" height="15" fill="rgb(234,122,0)"/><text x="63.6791%" y="127.50"></text></g><g><title>ttwu_do_wakeup (3 samples, 0.30%)</title><rect x="63.7265%" y="149" width="0.2973%" height="15" fill="rgb(207,146,38)"/><text x="63.9765%" y="159.50"></text></g><g><title>check_preempt_curr (3 samples, 0.30%)</title><rect x="63.7265%" y="133" width="0.2973%" height="15" fill="rgb(207,177,25)"/><text x="63.9765%" y="143.50"></text></g><g><title>resched_curr (3 samples, 0.30%)</title><rect x="63.7265%" y="117" width="0.2973%" height="15" fill="rgb(211,178,42)"/><text x="63.9765%" y="127.50"></text></g><g><title>__wake_up_common (23 samples, 2.28%)</title><rect x="61.8434%" y="181" width="2.2795%" height="15" fill="rgb(230,69,54)"/><text x="62.0934%" y="191.50">_..</text></g><g><title>try_to_wake_up (22 samples, 2.18%)</title><rect x="61.9425%" y="165" width="2.1804%" height="15" fill="rgb(214,135,41)"/><text x="62.1925%" y="175.50">t..</text></g><g><title>sock_def_readable (25 samples, 2.48%)</title><rect x="61.8434%" y="213" width="2.4777%" height="15" fill="rgb(237,67,25)"/><text x="62.0934%" y="223.50">so..</text></g><g><title>__wake_up_common_lock (25 samples, 2.48%)</title><rect x="61.8434%" y="197" width="2.4777%" height="15" fill="rgb(222,189,50)"/><text x="62.0934%" y="207.50">__..</text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.20%)</title><rect x="64.1229%" y="181" width="0.1982%" height="15" fill="rgb(245,148,34)"/><text x="64.3729%" y="191.50"></text></g><g><title>__kfree_skb (4 samples, 0.40%)</title><rect x="64.5193%" y="197" width="0.3964%" height="15" fill="rgb(222,29,6)"/><text x="64.7693%" y="207.50"></text></g><g><title>skb_release_data (3 samples, 0.30%)</title><rect x="64.6184%" y="181" width="0.2973%" height="15" fill="rgb(221,189,43)"/><text x="64.8684%" y="191.50"></text></g><g><title>tcp_ack (9 samples, 0.89%)</title><rect x="64.3211%" y="213" width="0.8920%" height="15" fill="rgb(207,36,27)"/><text x="64.5711%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (41 samples, 4.06%)</title><rect x="61.3479%" y="245" width="4.0634%" height="15" fill="rgb(217,90,24)"/><text x="61.5979%" y="255.50">tcp_..</text></g><g><title>tcp_rcv_established (41 samples, 4.06%)</title><rect x="61.3479%" y="229" width="4.0634%" height="15" fill="rgb(224,66,35)"/><text x="61.5979%" y="239.50">tcp_..</text></g><g><title>__ip_queue_xmit (76 samples, 7.53%)</title><rect x="57.9782%" y="485" width="7.5322%" height="15" fill="rgb(221,13,50)"/><text x="58.2282%" y="495.50">__ip_queue..</text></g><g><title>ip_output (69 samples, 6.84%)</title><rect x="58.6720%" y="469" width="6.8385%" height="15" fill="rgb(236,68,49)"/><text x="58.9220%" y="479.50">ip_output</text></g><g><title>ip_finish_output2 (68 samples, 6.74%)</title><rect x="58.7711%" y="453" width="6.7393%" height="15" fill="rgb(229,146,28)"/><text x="59.0211%" y="463.50">ip_finish..</text></g><g><title>__local_bh_enable_ip (60 samples, 5.95%)</title><rect x="59.5639%" y="437" width="5.9465%" height="15" fill="rgb(225,31,38)"/><text x="59.8139%" y="447.50">__local_..</text></g><g><title>do_softirq (60 samples, 5.95%)</title><rect x="59.5639%" y="421" width="5.9465%" height="15" fill="rgb(250,208,3)"/><text x="59.8139%" y="431.50">do_softi..</text></g><g><title>do_softirq_own_stack (60 samples, 5.95%)</title><rect x="59.5639%" y="405" width="5.9465%" height="15" fill="rgb(246,54,23)"/><text x="59.8139%" y="415.50">do_softi..</text></g><g><title>__do_softirq (60 samples, 5.95%)</title><rect x="59.5639%" y="389" width="5.9465%" height="15" fill="rgb(243,76,11)"/><text x="59.8139%" y="399.50">__do_sof..</text></g><g><title>net_rx_action (55 samples, 5.45%)</title><rect x="60.0595%" y="373" width="5.4509%" height="15" fill="rgb(245,21,50)"/><text x="60.3095%" y="383.50">net_rx_..</text></g><g><title>process_backlog (52 samples, 5.15%)</title><rect x="60.3568%" y="357" width="5.1536%" height="15" fill="rgb(228,9,43)"/><text x="60.6068%" y="367.50">proces..</text></g><g><title>__netif_receive_skb_one_core (52 samples, 5.15%)</title><rect x="60.3568%" y="341" width="5.1536%" height="15" fill="rgb(208,100,47)"/><text x="60.6068%" y="351.50">__neti..</text></g><g><title>ip_rcv (51 samples, 5.05%)</title><rect x="60.4559%" y="325" width="5.0545%" height="15" fill="rgb(232,26,8)"/><text x="60.7059%" y="335.50">ip_rcv</text></g><g><title>ip_local_deliver (50 samples, 4.96%)</title><rect x="60.5550%" y="309" width="4.9554%" height="15" fill="rgb(216,166,38)"/><text x="60.8050%" y="319.50">ip_loc..</text></g><g><title>ip_local_deliver_finish (50 samples, 4.96%)</title><rect x="60.5550%" y="293" width="4.9554%" height="15" fill="rgb(251,202,51)"/><text x="60.8050%" y="303.50">ip_loc..</text></g><g><title>ip_protocol_deliver_rcu (50 samples, 4.96%)</title><rect x="60.5550%" y="277" width="4.9554%" height="15" fill="rgb(254,216,34)"/><text x="60.8050%" y="287.50">ip_pro..</text></g><g><title>tcp_v4_rcv (50 samples, 4.96%)</title><rect x="60.5550%" y="261" width="4.9554%" height="15" fill="rgb(251,32,27)"/><text x="60.8050%" y="271.50">tcp_v4..</text></g><g><title>skb_clone (2 samples, 0.20%)</title><rect x="65.7086%" y="485" width="0.1982%" height="15" fill="rgb(208,127,28)"/><text x="65.9586%" y="495.50"></text></g><g><title>__tcp_transmit_skb (83 samples, 8.23%)</title><rect x="57.7800%" y="501" width="8.2260%" height="15" fill="rgb(224,137,22)"/><text x="58.0300%" y="511.50">__tcp_trans..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.20%)</title><rect x="66.1051%" y="501" width="0.1982%" height="15" fill="rgb(254,70,32)"/><text x="66.3551%" y="511.50"></text></g><g><title>__tcp_push_pending_frames (87 samples, 8.62%)</title><rect x="57.7800%" y="533" width="8.6224%" height="15" fill="rgb(229,75,37)"/><text x="58.0300%" y="543.50">__tcp_push_p..</text></g><g><title>tcp_write_xmit (87 samples, 8.62%)</title><rect x="57.7800%" y="517" width="8.6224%" height="15" fill="rgb(252,64,23)"/><text x="58.0300%" y="527.50">tcp_write_xm..</text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.20%)</title><rect x="66.6006%" y="501" width="0.1982%" height="15" fill="rgb(232,162,48)"/><text x="66.8506%" y="511.50"></text></g><g><title>sk_stream_alloc_skb (9 samples, 0.89%)</title><rect x="66.5015%" y="533" width="0.8920%" height="15" fill="rgb(246,160,12)"/><text x="66.7515%" y="543.50"></text></g><g><title>__alloc_skb (9 samples, 0.89%)</title><rect x="66.5015%" y="517" width="0.8920%" height="15" fill="rgb(247,166,0)"/><text x="66.7515%" y="527.50"></text></g><g><title>kmem_cache_alloc_node (5 samples, 0.50%)</title><rect x="66.8979%" y="501" width="0.4955%" height="15" fill="rgb(249,219,21)"/><text x="67.1479%" y="511.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.20%)</title><rect x="67.3935%" y="533" width="0.1982%" height="15" fill="rgb(205,209,3)"/><text x="67.6435%" y="543.50"></text></g><g><title>sock_sendmsg (113 samples, 11.20%)</title><rect x="56.9871%" y="581" width="11.1992%" height="15" fill="rgb(243,44,1)"/><text x="57.2371%" y="591.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (112 samples, 11.10%)</title><rect x="57.0862%" y="565" width="11.1001%" height="15" fill="rgb(206,159,16)"/><text x="57.3362%" y="575.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (109 samples, 10.80%)</title><rect x="57.3835%" y="549" width="10.8028%" height="15" fill="rgb(244,77,30)"/><text x="57.6335%" y="559.50">tcp_sendmsg_lock..</text></g><g><title>tcp_send_mss (4 samples, 0.40%)</title><rect x="67.7899%" y="533" width="0.3964%" height="15" fill="rgb(218,69,12)"/><text x="68.0399%" y="543.50"></text></g><g><title>tcp_current_mss (4 samples, 0.40%)</title><rect x="67.7899%" y="517" width="0.3964%" height="15" fill="rgb(212,87,7)"/><text x="68.0399%" y="527.50"></text></g><g><title>ipv4_mtu (2 samples, 0.20%)</title><rect x="67.9881%" y="501" width="0.1982%" height="15" fill="rgb(245,114,25)"/><text x="68.2381%" y="511.50"></text></g><g><title>__x64_sys_sendto (116 samples, 11.50%)</title><rect x="56.8880%" y="613" width="11.4965%" height="15" fill="rgb(210,61,42)"/><text x="57.1380%" y="623.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (116 samples, 11.50%)</title><rect x="56.8880%" y="597" width="11.4965%" height="15" fill="rgb(211,52,33)"/><text x="57.1380%" y="607.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.20%)</title><rect x="68.1863%" y="581" width="0.1982%" height="15" fill="rgb(234,58,33)"/><text x="68.4363%" y="591.50"></text></g><g><title>__fget_light (2 samples, 0.20%)</title><rect x="68.1863%" y="565" width="0.1982%" height="15" fill="rgb(220,115,36)"/><text x="68.4363%" y="575.50"></text></g><g><title>__fget_files (2 samples, 0.20%)</title><rect x="68.1863%" y="549" width="0.1982%" height="15" fill="rgb(243,153,54)"/><text x="68.4363%" y="559.50"></text></g><g><title>syscall_slow_exit_work (2 samples, 0.20%)</title><rect x="68.3845%" y="613" width="0.1982%" height="15" fill="rgb(251,47,18)"/><text x="68.6345%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (122 samples, 12.09%)</title><rect x="56.7889%" y="645" width="12.0912%" height="15" fill="rgb(242,102,42)"/><text x="57.0389%" y="655.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (121 samples, 11.99%)</title><rect x="56.8880%" y="629" width="11.9921%" height="15" fill="rgb(234,31,38)"/><text x="57.1380%" y="639.50">do_syscall_64</text></g><g><title>syscall_trace_enter (3 samples, 0.30%)</title><rect x="68.5828%" y="613" width="0.2973%" height="15" fill="rgb(221,117,51)"/><text x="68.8328%" y="623.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.20%)</title><rect x="68.6819%" y="597" width="0.1982%" height="15" fill="rgb(212,20,18)"/><text x="68.9319%" y="607.50"></text></g><g><title>decor::Shim::run_on_tcp (430 samples, 42.62%)</title><rect x="26.6601%" y="741" width="42.6165%" height="15" fill="rgb(245,133,36)"/><text x="26.9101%" y="751.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (429 samples, 42.52%)</title><rect x="26.7592%" y="725" width="42.5173%" height="15" fill="rgb(212,6,19)"/><text x="27.0092%" y="735.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (127 samples, 12.59%)</title><rect x="56.6898%" y="709" width="12.5867%" height="15" fill="rgb(218,1,36)"/><text x="56.9398%" y="719.50">std::io::buffered::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (127 samples, 12.59%)</title><rect x="56.6898%" y="693" width="12.5867%" height="15" fill="rgb(246,84,54)"/><text x="56.9398%" y="703.50">&lt;std::net::tcp::Tcp..</text></g><g><title>std::sys_common::net::TcpStream::write (127 samples, 12.59%)</title><rect x="56.6898%" y="677" width="12.5867%" height="15" fill="rgb(242,110,6)"/><text x="56.9398%" y="687.50">std::sys_common::ne..</text></g><g><title>__libc_send (127 samples, 12.59%)</title><rect x="56.6898%" y="661" width="12.5867%" height="15" fill="rgb(214,47,5)"/><text x="56.9398%" y="671.50">__libc_send</text></g><g><title>syscall_return_via_sysret (4 samples, 0.40%)</title><rect x="68.8801%" y="645" width="0.3964%" height="15" fill="rgb(218,159,25)"/><text x="69.1301%" y="655.50"></text></g><g><title>__GI___clone (431 samples, 42.72%)</title><rect x="26.6601%" y="853" width="42.7156%" height="15" fill="rgb(215,211,28)"/><text x="26.9101%" y="863.50">__GI___clone</text></g><g><title>start_thread (431 samples, 42.72%)</title><rect x="26.6601%" y="837" width="42.7156%" height="15" fill="rgb(238,59,32)"/><text x="26.9101%" y="847.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (431 samples, 42.72%)</title><rect x="26.6601%" y="821" width="42.7156%" height="15" fill="rgb(226,82,3)"/><text x="26.9101%" y="831.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (431 samples, 42.72%)</title><rect x="26.6601%" y="805" width="42.7156%" height="15" fill="rgb(240,164,32)"/><text x="26.9101%" y="815.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (431 samples, 42.72%)</title><rect x="26.6601%" y="789" width="42.7156%" height="15" fill="rgb(232,46,7)"/><text x="26.9101%" y="799.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (431 samples, 42.72%)</title><rect x="26.6601%" y="773" width="42.7156%" height="15" fill="rgb(229,129,53)"/><text x="26.9101%" y="783.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (431 samples, 42.72%)</title><rect x="26.6601%" y="757" width="42.7156%" height="15" fill="rgb(234,188,29)"/><text x="26.9101%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="69.4747%" y="677" width="0.1982%" height="15" fill="rgb(246,141,4)"/><text x="69.7247%" y="687.50"></text></g><g><title>[libhwloc.so.15.2.0] (11 samples, 1.09%)</title><rect x="69.7721%" y="597" width="1.0902%" height="15" fill="rgb(229,23,39)"/><text x="70.0221%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (11 samples, 1.09%)</title><rect x="69.7721%" y="581" width="1.0902%" height="15" fill="rgb(206,12,3)"/><text x="70.0221%" y="591.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (233 samples, 23.09%)</title><rect x="71.0605%" y="373" width="23.0922%" height="15" fill="rgb(252,226,20)"/><text x="71.3105%" y="383.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (233 samples, 23.09%)</title><rect x="71.0605%" y="357" width="23.0922%" height="15" fill="rgb(216,123,35)"/><text x="71.3105%" y="367.50">native_write_msr</text></g><g><title>do_syscall_64 (234 samples, 23.19%)</title><rect x="71.0605%" y="549" width="23.1913%" height="15" fill="rgb(212,68,40)"/><text x="71.3105%" y="559.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (234 samples, 23.19%)</title><rect x="71.0605%" y="533" width="23.1913%" height="15" fill="rgb(254,125,32)"/><text x="71.3105%" y="543.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (234 samples, 23.19%)</title><rect x="71.0605%" y="517" width="23.1913%" height="15" fill="rgb(253,97,22)"/><text x="71.3105%" y="527.50">sched_setaffinity</text></g><g><title>__set_cpus_allowed_ptr (234 samples, 23.19%)</title><rect x="71.0605%" y="501" width="23.1913%" height="15" fill="rgb(241,101,14)"/><text x="71.3105%" y="511.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (234 samples, 23.19%)</title><rect x="71.0605%" y="485" width="23.1913%" height="15" fill="rgb(238,103,29)"/><text x="71.3105%" y="495.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (234 samples, 23.19%)</title><rect x="71.0605%" y="469" width="23.1913%" height="15" fill="rgb(233,195,47)"/><text x="71.3105%" y="479.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (234 samples, 23.19%)</title><rect x="71.0605%" y="453" width="23.1913%" height="15" fill="rgb(246,218,30)"/><text x="71.3105%" y="463.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (234 samples, 23.19%)</title><rect x="71.0605%" y="437" width="23.1913%" height="15" fill="rgb(219,145,47)"/><text x="71.3105%" y="447.50">preempt_schedule_common</text></g><g><title>__schedule (234 samples, 23.19%)</title><rect x="71.0605%" y="421" width="23.1913%" height="15" fill="rgb(243,12,26)"/><text x="71.3105%" y="431.50">__schedule</text></g><g><title>finish_task_switch (234 samples, 23.19%)</title><rect x="71.0605%" y="405" width="23.1913%" height="15" fill="rgb(214,87,16)"/><text x="71.3105%" y="415.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (234 samples, 23.19%)</title><rect x="71.0605%" y="389" width="23.1913%" height="15" fill="rgb(208,99,42)"/><text x="71.3105%" y="399.50">__perf_event_task_sched_in</text></g><g><title>entry_SYSCALL_64 (235 samples, 23.29%)</title><rect x="71.0605%" y="565" width="23.2904%" height="15" fill="rgb(253,99,2)"/><text x="71.3105%" y="575.50">entry_SYSCALL_64</text></g><g><title>__GI___sched_setaffinity_new (237 samples, 23.49%)</title><rect x="71.0605%" y="581" width="23.4886%" height="15" fill="rgb(220,168,23)"/><text x="71.3105%" y="591.50">__GI___sched_setaffinity_new</text></g><g><title>syscall_return_via_sysret (2 samples, 0.20%)</title><rect x="94.3508%" y="565" width="0.1982%" height="15" fill="rgb(242,38,24)"/><text x="94.6008%" y="575.50"></text></g><g><title>hwloc::Topology::new (253 samples, 25.07%)</title><rect x="69.6729%" y="677" width="25.0743%" height="15" fill="rgb(225,182,9)"/><text x="69.9229%" y="687.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (253 samples, 25.07%)</title><rect x="69.6729%" y="661" width="25.0743%" height="15" fill="rgb(243,178,37)"/><text x="69.9229%" y="671.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (253 samples, 25.07%)</title><rect x="69.6729%" y="645" width="25.0743%" height="15" fill="rgb(232,139,19)"/><text x="69.9229%" y="655.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (253 samples, 25.07%)</title><rect x="69.6729%" y="629" width="25.0743%" height="15" fill="rgb(225,201,24)"/><text x="69.9229%" y="639.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (253 samples, 25.07%)</title><rect x="69.6729%" y="613" width="25.0743%" height="15" fill="rgb(221,47,46)"/><text x="69.9229%" y="623.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (240 samples, 23.79%)</title><rect x="70.9613%" y="597" width="23.7859%" height="15" fill="rgb(249,23,13)"/><text x="71.2113%" y="607.50">hwloc_linux_set_tid_cpubind</text></g><g><title>_int_free (2 samples, 0.20%)</title><rect x="94.5491%" y="581" width="0.1982%" height="15" fill="rgb(219,9,5)"/><text x="94.7991%" y="591.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.20%)</title><rect x="95.5401%" y="357" width="0.1982%" height="15" fill="rgb(254,171,16)"/><text x="95.7901%" y="367.50"></text></g><g><title>loopback_xmit (2 samples, 0.20%)</title><rect x="95.5401%" y="341" width="0.1982%" height="15" fill="rgb(230,171,20)"/><text x="95.7901%" y="351.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.30%)</title><rect x="95.5401%" y="373" width="0.2973%" height="15" fill="rgb(210,71,41)"/><text x="95.7901%" y="383.50"></text></g><g><title>enqueue_task (2 samples, 0.20%)</title><rect x="96.5312%" y="85" width="0.1982%" height="15" fill="rgb(206,173,20)"/><text x="96.7812%" y="95.50"></text></g><g><title>sock_def_readable (5 samples, 0.50%)</title><rect x="96.3330%" y="149" width="0.4955%" height="15" fill="rgb(233,88,34)"/><text x="96.5830%" y="159.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.50%)</title><rect x="96.3330%" y="133" width="0.4955%" height="15" fill="rgb(223,209,46)"/><text x="96.5830%" y="143.50"></text></g><g><title>__wake_up_common (5 samples, 0.50%)</title><rect x="96.3330%" y="117" width="0.4955%" height="15" fill="rgb(250,43,18)"/><text x="96.5830%" y="127.50"></text></g><g><title>try_to_wake_up (5 samples, 0.50%)</title><rect x="96.3330%" y="101" width="0.4955%" height="15" fill="rgb(208,13,10)"/><text x="96.5830%" y="111.50"></text></g><g><title>__kfree_skb (2 samples, 0.20%)</title><rect x="96.9277%" y="133" width="0.1982%" height="15" fill="rgb(212,200,36)"/><text x="97.1777%" y="143.50"></text></g><g><title>kfree (2 samples, 0.20%)</title><rect x="96.9277%" y="117" width="0.1982%" height="15" fill="rgb(225,90,30)"/><text x="97.1777%" y="127.50"></text></g><g><title>bictcp_cong_avoid (2 samples, 0.20%)</title><rect x="97.1259%" y="133" width="0.1982%" height="15" fill="rgb(236,182,39)"/><text x="97.3759%" y="143.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 1.19%)</title><rect x="96.2339%" y="181" width="1.1893%" height="15" fill="rgb(212,144,35)"/><text x="96.4839%" y="191.50"></text></g><g><title>tcp_rcv_established (12 samples, 1.19%)</title><rect x="96.2339%" y="165" width="1.1893%" height="15" fill="rgb(228,63,44)"/><text x="96.4839%" y="175.50"></text></g><g><title>tcp_ack (6 samples, 0.59%)</title><rect x="96.8285%" y="149" width="0.5946%" height="15" fill="rgb(228,109,6)"/><text x="97.0785%" y="159.50"></text></g><g><title>ip_local_deliver (13 samples, 1.29%)</title><rect x="96.2339%" y="245" width="1.2884%" height="15" fill="rgb(238,117,24)"/><text x="96.4839%" y="255.50"></text></g><g><title>ip_local_deliver_finish (13 samples, 1.29%)</title><rect x="96.2339%" y="229" width="1.2884%" height="15" fill="rgb(242,26,26)"/><text x="96.4839%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (13 samples, 1.29%)</title><rect x="96.2339%" y="213" width="1.2884%" height="15" fill="rgb(221,92,48)"/><text x="96.4839%" y="223.50"></text></g><g><title>tcp_v4_rcv (13 samples, 1.29%)</title><rect x="96.2339%" y="197" width="1.2884%" height="15" fill="rgb(209,209,32)"/><text x="96.4839%" y="207.50"></text></g><g><title>__tcp_transmit_skb (24 samples, 2.38%)</title><rect x="95.2428%" y="437" width="2.3786%" height="15" fill="rgb(221,70,22)"/><text x="95.4928%" y="447.50">__..</text></g><g><title>__ip_queue_xmit (23 samples, 2.28%)</title><rect x="95.3419%" y="421" width="2.2795%" height="15" fill="rgb(248,145,5)"/><text x="95.5919%" y="431.50">_..</text></g><g><title>ip_output (22 samples, 2.18%)</title><rect x="95.4410%" y="405" width="2.1804%" height="15" fill="rgb(226,116,26)"/><text x="95.6910%" y="415.50">i..</text></g><g><title>ip_finish_output2 (21 samples, 2.08%)</title><rect x="95.5401%" y="389" width="2.0813%" height="15" fill="rgb(244,5,17)"/><text x="95.7901%" y="399.50">i..</text></g><g><title>__local_bh_enable_ip (18 samples, 1.78%)</title><rect x="95.8375%" y="373" width="1.7839%" height="15" fill="rgb(252,159,33)"/><text x="96.0875%" y="383.50">_..</text></g><g><title>do_softirq (18 samples, 1.78%)</title><rect x="95.8375%" y="357" width="1.7839%" height="15" fill="rgb(206,71,0)"/><text x="96.0875%" y="367.50">d..</text></g><g><title>do_softirq_own_stack (17 samples, 1.68%)</title><rect x="95.9366%" y="341" width="1.6848%" height="15" fill="rgb(233,118,54)"/><text x="96.1866%" y="351.50"></text></g><g><title>__do_softirq (16 samples, 1.59%)</title><rect x="96.0357%" y="325" width="1.5857%" height="15" fill="rgb(234,83,48)"/><text x="96.2857%" y="335.50"></text></g><g><title>net_rx_action (16 samples, 1.59%)</title><rect x="96.0357%" y="309" width="1.5857%" height="15" fill="rgb(228,3,54)"/><text x="96.2857%" y="319.50"></text></g><g><title>process_backlog (16 samples, 1.59%)</title><rect x="96.0357%" y="293" width="1.5857%" height="15" fill="rgb(226,155,13)"/><text x="96.2857%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (15 samples, 1.49%)</title><rect x="96.1348%" y="277" width="1.4866%" height="15" fill="rgb(241,28,37)"/><text x="96.3848%" y="287.50"></text></g><g><title>ip_rcv (14 samples, 1.39%)</title><rect x="96.2339%" y="261" width="1.3875%" height="15" fill="rgb(233,93,10)"/><text x="96.4839%" y="271.50"></text></g><g><title>__tcp_push_pending_frames (27 samples, 2.68%)</title><rect x="95.1437%" y="469" width="2.6759%" height="15" fill="rgb(225,113,19)"/><text x="95.3937%" y="479.50">__..</text></g><g><title>tcp_write_xmit (27 samples, 2.68%)</title><rect x="95.1437%" y="453" width="2.6759%" height="15" fill="rgb(241,2,18)"/><text x="95.3937%" y="463.50">tc..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.20%)</title><rect x="97.6214%" y="437" width="0.1982%" height="15" fill="rgb(228,207,21)"/><text x="97.8714%" y="447.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.20%)</title><rect x="97.9187%" y="469" width="0.1982%" height="15" fill="rgb(213,211,35)"/><text x="98.1687%" y="479.50"></text></g><g><title>__alloc_skb (2 samples, 0.20%)</title><rect x="97.9187%" y="453" width="0.1982%" height="15" fill="rgb(209,83,10)"/><text x="98.1687%" y="463.50"></text></g><g><title>do_syscall_64 (35 samples, 3.47%)</title><rect x="94.9455%" y="565" width="3.4688%" height="15" fill="rgb(209,164,1)"/><text x="95.1955%" y="575.50">do_..</text></g><g><title>__x64_sys_sendto (34 samples, 3.37%)</title><rect x="95.0446%" y="549" width="3.3697%" height="15" fill="rgb(213,184,43)"/><text x="95.2946%" y="559.50">__x..</text></g><g><title>__sys_sendto (34 samples, 3.37%)</title><rect x="95.0446%" y="533" width="3.3697%" height="15" fill="rgb(231,61,34)"/><text x="95.2946%" y="543.50">__s..</text></g><g><title>sock_sendmsg (33 samples, 3.27%)</title><rect x="95.1437%" y="517" width="3.2706%" height="15" fill="rgb(235,75,3)"/><text x="95.3937%" y="527.50">soc..</text></g><g><title>tcp_sendmsg (33 samples, 3.27%)</title><rect x="95.1437%" y="501" width="3.2706%" height="15" fill="rgb(220,106,47)"/><text x="95.3937%" y="511.50">tcp..</text></g><g><title>tcp_sendmsg_locked (33 samples, 3.27%)</title><rect x="95.1437%" y="485" width="3.2706%" height="15" fill="rgb(210,196,33)"/><text x="95.3937%" y="495.50">tcp..</text></g><g><title>tcp_send_mss (2 samples, 0.20%)</title><rect x="98.2161%" y="469" width="0.1982%" height="15" fill="rgb(229,154,42)"/><text x="98.4661%" y="479.50"></text></g><g><title>tcp_current_mss (2 samples, 0.20%)</title><rect x="98.2161%" y="453" width="0.1982%" height="15" fill="rgb(228,114,26)"/><text x="98.4661%" y="463.50"></text></g><g><title>ipv4_mtu (2 samples, 0.20%)</title><rect x="98.2161%" y="437" width="0.1982%" height="15" fill="rgb(208,144,1)"/><text x="98.4661%" y="447.50"></text></g><g><title>mysql::conn::Conn::_query (38 samples, 3.77%)</title><rect x="94.7473%" y="677" width="3.7661%" height="15" fill="rgb(239,112,37)"/><text x="94.9973%" y="687.50">mysq..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (37 samples, 3.67%)</title><rect x="94.8464%" y="661" width="3.6670%" height="15" fill="rgb(210,96,50)"/><text x="95.0964%" y="671.50">mysq..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (37 samples, 3.67%)</title><rect x="94.8464%" y="645" width="3.6670%" height="15" fill="rgb(222,178,2)"/><text x="95.0964%" y="655.50">std:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (37 samples, 3.67%)</title><rect x="94.8464%" y="629" width="3.6670%" height="15" fill="rgb(226,74,18)"/><text x="95.0964%" y="639.50">&lt;std..</text></g><g><title>std::sys_common::net::TcpStream::write (37 samples, 3.67%)</title><rect x="94.8464%" y="613" width="3.6670%" height="15" fill="rgb(225,67,54)"/><text x="95.0964%" y="623.50">std:..</text></g><g><title>__libc_send (37 samples, 3.67%)</title><rect x="94.8464%" y="597" width="3.6670%" height="15" fill="rgb(251,92,32)"/><text x="95.0964%" y="607.50">__li..</text></g><g><title>entry_SYSCALL_64 (37 samples, 3.67%)</title><rect x="94.8464%" y="581" width="3.6670%" height="15" fill="rgb(228,149,22)"/><text x="95.0964%" y="591.50">entr..</text></g><g><title>__libc_start_main (294 samples, 29.14%)</title><rect x="69.4747%" y="837" width="29.1378%" height="15" fill="rgb(243,54,13)"/><text x="69.7247%" y="847.50">__libc_start_main</text></g><g><title>main (294 samples, 29.14%)</title><rect x="69.4747%" y="821" width="29.1378%" height="15" fill="rgb(243,180,28)"/><text x="69.7247%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (294 samples, 29.14%)</title><rect x="69.4747%" y="805" width="29.1378%" height="15" fill="rgb(208,167,24)"/><text x="69.7247%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (294 samples, 29.14%)</title><rect x="69.4747%" y="789" width="29.1378%" height="15" fill="rgb(245,73,45)"/><text x="69.7247%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (294 samples, 29.14%)</title><rect x="69.4747%" y="773" width="29.1378%" height="15" fill="rgb(237,203,48)"/><text x="69.7247%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (294 samples, 29.14%)</title><rect x="69.4747%" y="757" width="29.1378%" height="15" fill="rgb(211,197,16)"/><text x="69.7247%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (294 samples, 29.14%)</title><rect x="69.4747%" y="741" width="29.1378%" height="15" fill="rgb(243,99,51)"/><text x="69.7247%" y="751.50">core::ops::function::impls::&lt;impl core::ops::fu..</text></g><g><title>std::rt::lang_start::_{{closure}} (294 samples, 29.14%)</title><rect x="69.4747%" y="725" width="29.1378%" height="15" fill="rgb(215,123,29)"/><text x="69.7247%" y="735.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (294 samples, 29.14%)</title><rect x="69.4747%" y="709" width="29.1378%" height="15" fill="rgb(239,186,37)"/><text x="69.7247%" y="719.50">std::sys_common::backtrace::__rust_begin_short_..</text></g><g><title>lobsters::main (294 samples, 29.14%)</title><rect x="69.4747%" y="693" width="29.1378%" height="15" fill="rgb(252,136,39)"/><text x="69.7247%" y="703.50">lobsters::main</text></g><g><title>_start (295 samples, 29.24%)</title><rect x="69.4747%" y="853" width="29.2369%" height="15" fill="rgb(223,213,32)"/><text x="69.7247%" y="863.50">_start</text></g><g><title>entry_SYSCALL_64 (3 samples, 0.30%)</title><rect x="98.8107%" y="853" width="0.2973%" height="15" fill="rgb(233,115,5)"/><text x="99.0607%" y="863.50"></text></g><g><title>do_syscall_64 (2 samples, 0.20%)</title><rect x="98.9098%" y="837" width="0.1982%" height="15" fill="rgb(207,226,44)"/><text x="99.1598%" y="847.50"></text></g><g><title>lobsters (1,003 samples, 99.41%)</title><rect x="0.0000%" y="869" width="99.4054%" height="15" fill="rgb(208,126,0)"/><text x="0.2500%" y="879.50">lobsters</text></g><g><title>all (1,009 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(244,66,21)"/><text x="0.2500%" y="895.50"></text></g><g><title>perf (6 samples, 0.59%)</title><rect x="99.4054%" y="869" width="0.5946%" height="15" fill="rgb(222,97,12)"/><text x="99.6554%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.59%)</title><rect x="99.4054%" y="853" width="0.5946%" height="15" fill="rgb(219,213,19)"/><text x="99.6554%" y="863.50"></text></g><g><title>do_syscall_64 (6 samples, 0.59%)</title><rect x="99.4054%" y="837" width="0.5946%" height="15" fill="rgb(252,169,30)"/><text x="99.6554%" y="847.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.59%)</title><rect x="99.4054%" y="821" width="0.5946%" height="15" fill="rgb(206,32,51)"/><text x="99.6554%" y="831.50"></text></g><g><title>do_execve (6 samples, 0.59%)</title><rect x="99.4054%" y="805" width="0.5946%" height="15" fill="rgb(250,172,42)"/><text x="99.6554%" y="815.50"></text></g><g><title>__do_execve_file (6 samples, 0.59%)</title><rect x="99.4054%" y="789" width="0.5946%" height="15" fill="rgb(209,34,43)"/><text x="99.6554%" y="799.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.59%)</title><rect x="99.4054%" y="773" width="0.5946%" height="15" fill="rgb(223,11,35)"/><text x="99.6554%" y="783.50"></text></g><g><title>load_elf_binary (6 samples, 0.59%)</title><rect x="99.4054%" y="757" width="0.5946%" height="15" fill="rgb(251,219,26)"/><text x="99.6554%" y="767.50"></text></g><g><title>setup_new_exec (6 samples, 0.59%)</title><rect x="99.4054%" y="741" width="0.5946%" height="15" fill="rgb(231,119,3)"/><text x="99.6554%" y="751.50"></text></g><g><title>perf_event_exec (6 samples, 0.59%)</title><rect x="99.4054%" y="725" width="0.5946%" height="15" fill="rgb(216,97,11)"/><text x="99.6554%" y="735.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.50%)</title><rect x="99.5045%" y="709" width="0.4955%" height="15" fill="rgb(223,59,9)"/><text x="99.7545%" y="719.50"></text></g><g><title>native_write_msr (5 samples, 0.50%)</title><rect x="99.5045%" y="693" width="0.4955%" height="15" fill="rgb(233,93,31)"/><text x="99.7545%" y="703.50"></text></g></svg></svg>