<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180"><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="0.0000%" y="901" width="0.1066%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="911.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="0.1066%" y="901" width="0.1066%" height="15" fill="rgb(217,0,24)"/><text x="0.3566%" y="911.50"></text></g><g><title>[[heap]] (3 samples, 0.32%)</title><rect x="0.0000%" y="917" width="0.3198%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="927.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="0.2132%" y="901" width="0.1066%" height="15" fill="rgb(248,212,6)"/><text x="0.4632%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="0.3198%" y="901" width="0.1066%" height="15" fill="rgb(208,68,35)"/><text x="0.5698%" y="911.50"></text></g><g><title>[[stack]] (2 samples, 0.21%)</title><rect x="0.3198%" y="917" width="0.2132%" height="15" fill="rgb(232,128,0)"/><text x="0.5698%" y="927.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="0.4264%" y="901" width="0.1066%" height="15" fill="rgb(207,160,47)"/><text x="0.6764%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="0.5330%" y="901" width="0.1066%" height="15" fill="rgb(228,23,34)"/><text x="0.7830%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="0.6397%" y="901" width="0.1066%" height="15" fill="rgb(218,30,26)"/><text x="0.8897%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="0.7463%" y="901" width="0.1066%" height="15" fill="rgb(220,122,19)"/><text x="0.9963%" y="911.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1 samples, 0.11%)</title><rect x="0.8529%" y="901" width="0.1066%" height="15" fill="rgb(250,228,42)"/><text x="1.1029%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (1 samples, 0.11%)</title><rect x="0.9595%" y="901" width="0.1066%" height="15" fill="rgb(240,193,28)"/><text x="1.2095%" y="911.50"></text></g><g><title>&lt;mysql::conn::query_result::SetIteratorState as core::convert::From&lt;mysql::conn::query_result::Or&lt;alloc::vec::Vec&lt;mysql_common::packets::Column&gt;,mysql_common::packets::OkPacket&gt;&gt;&gt;::from (1 samples, 0.11%)</title><rect x="1.0661%" y="901" width="0.1066%" height="15" fill="rgb(216,20,37)"/><text x="1.3161%" y="911.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="1.1727%" y="901" width="0.1066%" height="15" fill="rgb(206,188,39)"/><text x="1.4227%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="1.2793%" y="901" width="0.1066%" height="15" fill="rgb(217,207,13)"/><text x="1.5293%" y="911.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="1.3859%" y="901" width="0.2132%" height="15" fill="rgb(231,73,38)"/><text x="1.6359%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="1.5991%" y="901" width="0.2132%" height="15" fill="rgb(225,20,46)"/><text x="1.8491%" y="911.50"></text></g><g><title>_int_free (3 samples, 0.32%)</title><rect x="1.8124%" y="901" width="0.3198%" height="15" fill="rgb(210,31,41)"/><text x="2.0624%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="2.1322%" y="901" width="0.1066%" height="15" fill="rgb(221,200,47)"/><text x="2.3822%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.53%)</title><rect x="2.2388%" y="901" width="0.5330%" height="15" fill="rgb(226,26,5)"/><text x="2.4888%" y="911.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="2.7719%" y="901" width="0.1066%" height="15" fill="rgb(249,33,26)"/><text x="3.0219%" y="911.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.21%)</title><rect x="2.8785%" y="901" width="0.2132%" height="15" fill="rgb(235,183,28)"/><text x="3.1285%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.11%)</title><rect x="3.0917%" y="901" width="0.1066%" height="15" fill="rgb(221,5,38)"/><text x="3.3417%" y="911.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="3.1983%" y="901" width="0.1066%" height="15" fill="rgb(247,18,42)"/><text x="3.4483%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="3.3049%" y="901" width="0.1066%" height="15" fill="rgb(241,131,45)"/><text x="3.5549%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="3.4115%" y="901" width="0.2132%" height="15" fill="rgb(249,31,29)"/><text x="3.6615%" y="911.50"></text></g><g><title>decor::helpers::answer_rows (1 samples, 0.11%)</title><rect x="3.6247%" y="901" width="0.1066%" height="15" fill="rgb(225,111,53)"/><text x="3.8747%" y="911.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (1 samples, 0.11%)</title><rect x="3.7313%" y="901" width="0.1066%" height="15" fill="rgb(238,160,17)"/><text x="3.9813%" y="911.50"></text></g><g><title>mysql_common::io::ReadMysqlExt::read_lenenc_int (1 samples, 0.11%)</title><rect x="3.8380%" y="901" width="0.1066%" height="15" fill="rgb(214,148,48)"/><text x="4.0880%" y="911.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.11%)</title><rect x="3.9446%" y="901" width="0.1066%" height="15" fill="rgb(232,36,49)"/><text x="4.1946%" y="911.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::encode (1 samples, 0.11%)</title><rect x="4.0512%" y="901" width="0.1066%" height="15" fill="rgb(209,103,24)"/><text x="4.3012%" y="911.50"></text></g><g><title>mysql_common::row::Row::unwrap (1 samples, 0.11%)</title><rect x="4.1578%" y="901" width="0.1066%" height="15" fill="rgb(229,88,8)"/><text x="4.4078%" y="911.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="4.2644%" y="901" width="0.1066%" height="15" fill="rgb(213,181,19)"/><text x="4.5144%" y="911.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="4.3710%" y="901" width="0.1066%" height="15" fill="rgb(254,191,54)"/><text x="4.6210%" y="911.50"></text></g><g><title>[anon] (38 samples, 4.05%)</title><rect x="0.5330%" y="917" width="4.0512%" height="15" fill="rgb(241,83,37)"/><text x="0.7830%" y="927.50">[ano..</text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="4.4776%" y="901" width="0.1066%" height="15" fill="rgb(233,36,39)"/><text x="4.7276%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="4.4776%" y="885" width="0.1066%" height="15" fill="rgb(226,3,54)"/><text x="4.7276%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="4.4776%" y="869" width="0.1066%" height="15" fill="rgb(245,192,40)"/><text x="4.7276%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="4.4776%" y="853" width="0.1066%" height="15" fill="rgb(238,167,29)"/><text x="4.7276%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="4.4776%" y="837" width="0.1066%" height="15" fill="rgb(232,182,51)"/><text x="4.7276%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="4.4776%" y="821" width="0.1066%" height="15" fill="rgb(231,60,39)"/><text x="4.7276%" y="831.50"></text></g><g><title>[lobsters] (2 samples, 0.21%)</title><rect x="4.5842%" y="917" width="0.2132%" height="15" fill="rgb(208,69,12)"/><text x="4.8342%" y="927.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="4.5842%" y="901" width="0.2132%" height="15" fill="rgb(235,93,37)"/><text x="4.8342%" y="911.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.11%)</title><rect x="4.7974%" y="901" width="0.1066%" height="15" fill="rgb(213,116,39)"/><text x="5.0474%" y="911.50"></text></g><g><title>&lt;&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt::suffix::Suffix as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="4.9041%" y="901" width="0.1066%" height="15" fill="rgb(222,207,29)"/><text x="5.1541%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.0107%" y="901" width="0.1066%" height="15" fill="rgb(206,96,30)"/><text x="5.2607%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.4371%" y="773" width="0.1066%" height="15" fill="rgb(218,138,4)"/><text x="5.6871%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="5.3305%" y="805" width="0.3198%" height="15" fill="rgb(250,191,14)"/><text x="5.5805%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.21%)</title><rect x="5.4371%" y="789" width="0.2132%" height="15" fill="rgb(239,60,40)"/><text x="5.6871%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.5437%" y="773" width="0.1066%" height="15" fill="rgb(206,27,48)"/><text x="5.7937%" y="783.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.6503%" y="805" width="0.1066%" height="15" fill="rgb(225,35,8)"/><text x="5.9003%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.75%)</title><rect x="5.1173%" y="821" width="0.7463%" height="15" fill="rgb(250,213,24)"/><text x="5.3673%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="5.7569%" y="805" width="0.1066%" height="15" fill="rgb(247,123,22)"/><text x="6.0069%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.9701%" y="789" width="0.1066%" height="15" fill="rgb(231,138,38)"/><text x="6.2201%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.9701%" y="773" width="0.1066%" height="15" fill="rgb(231,145,46)"/><text x="6.2201%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="5.9701%" y="757" width="0.1066%" height="15" fill="rgb(251,118,11)"/><text x="6.2201%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="5.9701%" y="741" width="0.1066%" height="15" fill="rgb(217,147,25)"/><text x="6.2201%" y="751.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="5.8635%" y="821" width="0.3198%" height="15" fill="rgb(247,81,37)"/><text x="6.1135%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.21%)</title><rect x="5.9701%" y="805" width="0.2132%" height="15" fill="rgb(209,12,38)"/><text x="6.2201%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="6.0768%" y="789" width="0.1066%" height="15" fill="rgb(227,1,9)"/><text x="6.3268%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.0768%" y="773" width="0.1066%" height="15" fill="rgb(248,47,43)"/><text x="6.3268%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.0768%" y="757" width="0.1066%" height="15" fill="rgb(221,10,30)"/><text x="6.3268%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="6.0768%" y="741" width="0.1066%" height="15" fill="rgb(210,229,1)"/><text x="6.3268%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="6.0768%" y="725" width="0.1066%" height="15" fill="rgb(222,148,37)"/><text x="6.3268%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="6.0768%" y="709" width="0.1066%" height="15" fill="rgb(234,67,33)"/><text x="6.3268%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="6.0768%" y="693" width="0.1066%" height="15" fill="rgb(247,98,35)"/><text x="6.3268%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="6.0768%" y="677" width="0.1066%" height="15" fill="rgb(247,138,52)"/><text x="6.3268%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="6.0768%" y="661" width="0.1066%" height="15" fill="rgb(213,79,30)"/><text x="6.3268%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="6.0768%" y="645" width="0.1066%" height="15" fill="rgb(246,177,23)"/><text x="6.3268%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="6.0768%" y="629" width="0.1066%" height="15" fill="rgb(230,62,27)"/><text x="6.3268%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="6.0768%" y="613" width="0.1066%" height="15" fill="rgb(216,154,8)"/><text x="6.3268%" y="623.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="6.0768%" y="597" width="0.1066%" height="15" fill="rgb(244,35,45)"/><text x="6.3268%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="6.1834%" y="821" width="0.1066%" height="15" fill="rgb(251,115,12)"/><text x="6.4334%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (12 samples, 1.28%)</title><rect x="5.1173%" y="869" width="1.2793%" height="15" fill="rgb(240,54,50)"/><text x="5.3673%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (12 samples, 1.28%)</title><rect x="5.1173%" y="853" width="1.2793%" height="15" fill="rgb(233,84,52)"/><text x="5.3673%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (12 samples, 1.28%)</title><rect x="5.1173%" y="837" width="1.2793%" height="15" fill="rgb(207,117,47)"/><text x="5.3673%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="6.2900%" y="821" width="0.1066%" height="15" fill="rgb(249,43,39)"/><text x="6.5400%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.2900%" y="805" width="0.1066%" height="15" fill="rgb(209,38,44)"/><text x="6.5400%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.2900%" y="789" width="0.1066%" height="15" fill="rgb(236,212,23)"/><text x="6.5400%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.2900%" y="773" width="0.1066%" height="15" fill="rgb(242,79,21)"/><text x="6.5400%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.2900%" y="757" width="0.1066%" height="15" fill="rgb(211,96,35)"/><text x="6.5400%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="6.2900%" y="741" width="0.1066%" height="15" fill="rgb(253,215,40)"/><text x="6.5400%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="6.2900%" y="725" width="0.1066%" height="15" fill="rgb(211,81,21)"/><text x="6.5400%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="6.2900%" y="709" width="0.1066%" height="15" fill="rgb(208,190,38)"/><text x="6.5400%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="6.2900%" y="693" width="0.1066%" height="15" fill="rgb(235,213,38)"/><text x="6.5400%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="6.2900%" y="677" width="0.1066%" height="15" fill="rgb(237,122,38)"/><text x="6.5400%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="6.2900%" y="661" width="0.1066%" height="15" fill="rgb(244,218,35)"/><text x="6.5400%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="6.2900%" y="645" width="0.1066%" height="15" fill="rgb(240,68,47)"/><text x="6.5400%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="6.2900%" y="629" width="0.1066%" height="15" fill="rgb(210,16,53)"/><text x="6.5400%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="6.2900%" y="613" width="0.1066%" height="15" fill="rgb(235,124,12)"/><text x="6.5400%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="6.2900%" y="597" width="0.1066%" height="15" fill="rgb(224,169,11)"/><text x="6.5400%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="6.2900%" y="581" width="0.1066%" height="15" fill="rgb(250,166,2)"/><text x="6.5400%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="6.3966%" y="837" width="0.1066%" height="15" fill="rgb(242,216,29)"/><text x="6.6466%" y="847.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="6.3966%" y="821" width="0.1066%" height="15" fill="rgb(230,116,27)"/><text x="6.6466%" y="831.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="6.3966%" y="805" width="0.1066%" height="15" fill="rgb(228,99,48)"/><text x="6.6466%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="6.3966%" y="789" width="0.1066%" height="15" fill="rgb(253,11,6)"/><text x="6.6466%" y="799.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="6.3966%" y="773" width="0.1066%" height="15" fill="rgb(247,143,39)"/><text x="6.6466%" y="783.50"></text></g><g><title>__GI___mprotect (1 samples, 0.11%)</title><rect x="6.3966%" y="757" width="0.1066%" height="15" fill="rgb(236,97,10)"/><text x="6.6466%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="6.3966%" y="741" width="0.1066%" height="15" fill="rgb(233,208,19)"/><text x="6.6466%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="6.3966%" y="725" width="0.1066%" height="15" fill="rgb(216,164,2)"/><text x="6.6466%" y="735.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.11%)</title><rect x="6.3966%" y="709" width="0.1066%" height="15" fill="rgb(220,129,5)"/><text x="6.6466%" y="719.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.11%)</title><rect x="6.3966%" y="693" width="0.1066%" height="15" fill="rgb(242,17,10)"/><text x="6.6466%" y="703.50"></text></g><g><title>mprotect_fixup (1 samples, 0.11%)</title><rect x="6.3966%" y="677" width="0.1066%" height="15" fill="rgb(242,107,0)"/><text x="6.6466%" y="687.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="6.3966%" y="661" width="0.1066%" height="15" fill="rgb(251,28,31)"/><text x="6.6466%" y="671.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="6.3966%" y="645" width="0.1066%" height="15" fill="rgb(233,223,10)"/><text x="6.6466%" y="655.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="6.3966%" y="629" width="0.1066%" height="15" fill="rgb(215,21,27)"/><text x="6.6466%" y="639.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.11%)</title><rect x="6.3966%" y="613" width="0.1066%" height="15" fill="rgb(232,23,21)"/><text x="6.6466%" y="623.50"></text></g><g><title>__perf_event__output_id_sample (1 samples, 0.11%)</title><rect x="6.3966%" y="597" width="0.1066%" height="15" fill="rgb(244,5,23)"/><text x="6.6466%" y="607.50"></text></g><g><title>perf_output_copy (1 samples, 0.11%)</title><rect x="6.3966%" y="581" width="0.1066%" height="15" fill="rgb(226,81,46)"/><text x="6.6466%" y="591.50"></text></g><g><title>memcpy_erms (1 samples, 0.11%)</title><rect x="6.3966%" y="565" width="0.1066%" height="15" fill="rgb(247,70,30)"/><text x="6.6466%" y="575.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (14 samples, 1.49%)</title><rect x="5.1173%" y="901" width="1.4925%" height="15" fill="rgb(212,68,19)"/><text x="5.3673%" y="911.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (14 samples, 1.49%)</title><rect x="5.1173%" y="885" width="1.4925%" height="15" fill="rgb(240,187,13)"/><text x="5.3673%" y="895.50"></text></g><g><title>sql_parser::parser::parse_statements (2 samples, 0.21%)</title><rect x="6.3966%" y="869" width="0.2132%" height="15" fill="rgb(223,113,26)"/><text x="6.6466%" y="879.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (2 samples, 0.21%)</title><rect x="6.3966%" y="853" width="0.2132%" height="15" fill="rgb(206,192,2)"/><text x="6.6466%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="6.5032%" y="837" width="0.1066%" height="15" fill="rgb(241,108,4)"/><text x="6.7532%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="6.5032%" y="821" width="0.1066%" height="15" fill="rgb(247,173,49)"/><text x="6.7532%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="6.5032%" y="805" width="0.1066%" height="15" fill="rgb(224,114,35)"/><text x="6.7532%" y="815.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (1 samples, 0.11%)</title><rect x="6.5032%" y="789" width="0.1066%" height="15" fill="rgb(245,159,27)"/><text x="6.7532%" y="799.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="6.5032%" y="773" width="0.1066%" height="15" fill="rgb(245,172,44)"/><text x="6.7532%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="6.5032%" y="757" width="0.1066%" height="15" fill="rgb(236,23,11)"/><text x="6.7532%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.6098%" y="901" width="0.1066%" height="15" fill="rgb(205,117,38)"/><text x="6.8598%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="6.7164%" y="901" width="0.1066%" height="15" fill="rgb(237,72,25)"/><text x="6.9664%" y="911.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="6.8230%" y="901" width="0.1066%" height="15" fill="rgb(244,70,9)"/><text x="7.0730%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="6.9296%" y="885" width="0.1066%" height="15" fill="rgb(217,125,39)"/><text x="7.1796%" y="895.50"></text></g><g><title>[lobsters] (2 samples, 0.21%)</title><rect x="6.9296%" y="901" width="0.2132%" height="15" fill="rgb(235,36,10)"/><text x="7.1796%" y="911.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="7.0362%" y="885" width="0.1066%" height="15" fill="rgb(251,123,47)"/><text x="7.2862%" y="895.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="7.1429%" y="901" width="0.1066%" height="15" fill="rgb(221,13,13)"/><text x="7.3929%" y="911.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="7.2495%" y="901" width="0.1066%" height="15" fill="rgb(238,131,9)"/><text x="7.4995%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="7.2495%" y="885" width="0.1066%" height="15" fill="rgb(211,50,8)"/><text x="7.4995%" y="895.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="7.3561%" y="741" width="0.1066%" height="15" fill="rgb(245,182,24)"/><text x="7.6061%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="7.3561%" y="725" width="0.1066%" height="15" fill="rgb(242,14,37)"/><text x="7.6061%" y="735.50"></text></g><g><title>mysql::conn::Conn::next_text (1 samples, 0.11%)</title><rect x="7.3561%" y="709" width="0.1066%" height="15" fill="rgb(246,228,12)"/><text x="7.6061%" y="719.50"></text></g><g><title>mysql_common::value::read_text_values (1 samples, 0.11%)</title><rect x="7.3561%" y="693" width="0.1066%" height="15" fill="rgb(213,55,15)"/><text x="7.6061%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="7.3561%" y="677" width="0.1066%" height="15" fill="rgb(209,9,3)"/><text x="7.6061%" y="687.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="7.4627%" y="709" width="0.1066%" height="15" fill="rgb(230,59,30)"/><text x="7.7127%" y="719.50"></text></g><g><title>__libc_start_main (3 samples, 0.32%)</title><rect x="7.3561%" y="901" width="0.3198%" height="15" fill="rgb(209,121,21)"/><text x="7.6061%" y="911.50"></text></g><g><title>main (3 samples, 0.32%)</title><rect x="7.3561%" y="885" width="0.3198%" height="15" fill="rgb(220,109,13)"/><text x="7.6061%" y="895.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.32%)</title><rect x="7.3561%" y="869" width="0.3198%" height="15" fill="rgb(232,18,1)"/><text x="7.6061%" y="879.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.32%)</title><rect x="7.3561%" y="853" width="0.3198%" height="15" fill="rgb(215,41,42)"/><text x="7.6061%" y="863.50"></text></g><g><title>std::panicking::try (3 samples, 0.32%)</title><rect x="7.3561%" y="837" width="0.3198%" height="15" fill="rgb(224,123,36)"/><text x="7.6061%" y="847.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.32%)</title><rect x="7.3561%" y="821" width="0.3198%" height="15" fill="rgb(240,125,3)"/><text x="7.6061%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.32%)</title><rect x="7.3561%" y="805" width="0.3198%" height="15" fill="rgb(205,98,50)"/><text x="7.6061%" y="815.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.32%)</title><rect x="7.3561%" y="789" width="0.3198%" height="15" fill="rgb(205,185,37)"/><text x="7.6061%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.32%)</title><rect x="7.3561%" y="773" width="0.3198%" height="15" fill="rgb(238,207,15)"/><text x="7.6061%" y="783.50"></text></g><g><title>lobsters::main (3 samples, 0.32%)</title><rect x="7.3561%" y="757" width="0.3198%" height="15" fill="rgb(213,199,42)"/><text x="7.6061%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="7.4627%" y="741" width="0.2132%" height="15" fill="rgb(235,201,11)"/><text x="7.7127%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="7.4627%" y="725" width="0.2132%" height="15" fill="rgb(207,46,11)"/><text x="7.7127%" y="735.50"></text></g><g><title>mysql_common::packets::column_from_payload (1 samples, 0.11%)</title><rect x="7.5693%" y="709" width="0.1066%" height="15" fill="rgb(241,35,35)"/><text x="7.8193%" y="719.50"></text></g><g><title>__rdl_alloc (3 samples, 0.32%)</title><rect x="7.6759%" y="901" width="0.3198%" height="15" fill="rgb(243,32,47)"/><text x="7.9259%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.32%)</title><rect x="7.6759%" y="885" width="0.3198%" height="15" fill="rgb(247,202,23)"/><text x="7.9259%" y="895.50"></text></g><g><title>__rdl_realloc (1 samples, 0.11%)</title><rect x="7.9957%" y="901" width="0.1066%" height="15" fill="rgb(219,102,11)"/><text x="8.2457%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.11%)</title><rect x="7.9957%" y="885" width="0.1066%" height="15" fill="rgb(243,110,44)"/><text x="8.2457%" y="895.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.11%)</title><rect x="8.1023%" y="901" width="0.1066%" height="15" fill="rgb(222,74,54)"/><text x="8.3523%" y="911.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="8.2090%" y="901" width="0.1066%" height="15" fill="rgb(216,99,12)"/><text x="8.4590%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.32%)</title><rect x="8.3156%" y="757" width="0.3198%" height="15" fill="rgb(226,22,26)"/><text x="8.5656%" y="767.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="8.3156%" y="741" width="0.3198%" height="15" fill="rgb(217,163,10)"/><text x="8.5656%" y="751.50"></text></g><g><title>_int_malloc (3 samples, 0.32%)</title><rect x="8.3156%" y="725" width="0.3198%" height="15" fill="rgb(213,25,53)"/><text x="8.5656%" y="735.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (5 samples, 0.53%)</title><rect x="8.3156%" y="821" width="0.5330%" height="15" fill="rgb(252,105,26)"/><text x="8.5656%" y="831.50"></text></g><g><title>mysql::conn::Conn::_query (5 samples, 0.53%)</title><rect x="8.3156%" y="805" width="0.5330%" height="15" fill="rgb(220,39,43)"/><text x="8.5656%" y="815.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (5 samples, 0.53%)</title><rect x="8.3156%" y="789" width="0.5330%" height="15" fill="rgb(229,68,48)"/><text x="8.5656%" y="799.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.53%)</title><rect x="8.3156%" y="773" width="0.5330%" height="15" fill="rgb(252,8,32)"/><text x="8.5656%" y="783.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="8.6354%" y="757" width="0.2132%" height="15" fill="rgb(223,20,43)"/><text x="8.8854%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.21%)</title><rect x="8.6354%" y="741" width="0.2132%" height="15" fill="rgb(229,81,49)"/><text x="8.8854%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9 samples, 0.96%)</title><rect x="8.3156%" y="901" width="0.9595%" height="15" fill="rgb(236,28,36)"/><text x="8.5656%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.96%)</title><rect x="8.3156%" y="885" width="0.9595%" height="15" fill="rgb(249,185,26)"/><text x="8.5656%" y="895.50"></text></g><g><title>decor::Shim::run_on_tcp (9 samples, 0.96%)</title><rect x="8.3156%" y="869" width="0.9595%" height="15" fill="rgb(249,174,33)"/><text x="8.5656%" y="879.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (9 samples, 0.96%)</title><rect x="8.3156%" y="853" width="0.9595%" height="15" fill="rgb(233,201,37)"/><text x="8.5656%" y="863.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (9 samples, 0.96%)</title><rect x="8.3156%" y="837" width="0.9595%" height="15" fill="rgb(221,78,26)"/><text x="8.5656%" y="847.50"></text></g><g><title>decor::helpers::answer_rows (4 samples, 0.43%)</title><rect x="8.8486%" y="821" width="0.4264%" height="15" fill="rgb(250,127,30)"/><text x="9.0986%" y="831.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.43%)</title><rect x="8.8486%" y="805" width="0.4264%" height="15" fill="rgb(230,49,44)"/><text x="9.0986%" y="815.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (4 samples, 0.43%)</title><rect x="8.8486%" y="789" width="0.4264%" height="15" fill="rgb(229,67,23)"/><text x="9.0986%" y="799.50"></text></g><g><title>mysql::conn::Conn::next_text (4 samples, 0.43%)</title><rect x="8.8486%" y="773" width="0.4264%" height="15" fill="rgb(249,83,47)"/><text x="9.0986%" y="783.50"></text></g><g><title>mysql_common::value::read_text_values (4 samples, 0.43%)</title><rect x="8.8486%" y="757" width="0.4264%" height="15" fill="rgb(215,43,3)"/><text x="9.0986%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="9.0618%" y="741" width="0.2132%" height="15" fill="rgb(238,154,13)"/><text x="9.3118%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="9.2751%" y="901" width="0.2132%" height="15" fill="rgb(219,56,2)"/><text x="9.5251%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.11%)</title><rect x="9.4883%" y="885" width="0.1066%" height="15" fill="rgb(233,0,4)"/><text x="9.7383%" y="895.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.11%)</title><rect x="9.4883%" y="869" width="0.1066%" height="15" fill="rgb(235,30,7)"/><text x="9.7383%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="9.4883%" y="853" width="0.1066%" height="15" fill="rgb(250,79,13)"/><text x="9.7383%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="9.4883%" y="837" width="0.1066%" height="15" fill="rgb(211,146,34)"/><text x="9.7383%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::CreateTableStatement as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="9.4883%" y="821" width="0.1066%" height="15" fill="rgb(228,22,38)"/><text x="9.7383%" y="831.50"></text></g><g><title>&lt;sql_parser::ast::defs::ddl::ColumnDef as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="9.4883%" y="805" width="0.1066%" height="15" fill="rgb(235,168,5)"/><text x="9.7383%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="9.4883%" y="789" width="0.1066%" height="15" fill="rgb(221,155,16)"/><text x="9.7383%" y="799.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (1 samples, 0.11%)</title><rect x="9.4883%" y="773" width="0.1066%" height="15" fill="rgb(215,215,53)"/><text x="9.7383%" y="783.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="9.4883%" y="757" width="0.1066%" height="15" fill="rgb(223,4,10)"/><text x="9.7383%" y="767.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="9.4883%" y="741" width="0.1066%" height="15" fill="rgb(234,103,6)"/><text x="9.7383%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="9.4883%" y="725" width="0.1066%" height="15" fill="rgb(227,97,0)"/><text x="9.7383%" y="735.50"></text></g><g><title>decor::Shim::create_schema (2 samples, 0.21%)</title><rect x="9.4883%" y="901" width="0.2132%" height="15" fill="rgb(234,150,53)"/><text x="9.7383%" y="911.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="9.5949%" y="885" width="0.1066%" height="15" fill="rgb(228,201,54)"/><text x="9.8449%" y="895.50"></text></g><g><title>sql_parser::parser::parse_statements (1 samples, 0.11%)</title><rect x="9.5949%" y="869" width="0.1066%" height="15" fill="rgb(222,22,37)"/><text x="9.8449%" y="879.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (1 samples, 0.11%)</title><rect x="9.5949%" y="853" width="0.1066%" height="15" fill="rgb(237,53,32)"/><text x="9.8449%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="9.5949%" y="837" width="0.1066%" height="15" fill="rgb(233,25,53)"/><text x="9.8449%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Token::make_word (1 samples, 0.11%)</title><rect x="9.5949%" y="821" width="0.1066%" height="15" fill="rgb(210,40,34)"/><text x="9.8449%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="9.5949%" y="805" width="0.1066%" height="15" fill="rgb(241,220,44)"/><text x="9.8449%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.5949%" y="789" width="0.1066%" height="15" fill="rgb(235,28,35)"/><text x="9.8449%" y="799.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="9.5949%" y="773" width="0.1066%" height="15" fill="rgb(210,56,17)"/><text x="9.8449%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="9.7015%" y="693" width="0.1066%" height="15" fill="rgb(224,130,29)"/><text x="9.9515%" y="703.50"></text></g><g><title>decor::helpers::answer_rows (5 samples, 0.53%)</title><rect x="9.7015%" y="853" width="0.5330%" height="15" fill="rgb(235,212,8)"/><text x="9.9515%" y="863.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.53%)</title><rect x="9.7015%" y="837" width="0.5330%" height="15" fill="rgb(223,33,50)"/><text x="9.9515%" y="847.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (5 samples, 0.53%)</title><rect x="9.7015%" y="821" width="0.5330%" height="15" fill="rgb(219,149,13)"/><text x="9.9515%" y="831.50"></text></g><g><title>mysql::conn::Conn::next_text (5 samples, 0.53%)</title><rect x="9.7015%" y="805" width="0.5330%" height="15" fill="rgb(250,156,29)"/><text x="9.9515%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (5 samples, 0.53%)</title><rect x="9.7015%" y="789" width="0.5330%" height="15" fill="rgb(216,193,19)"/><text x="9.9515%" y="799.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.53%)</title><rect x="9.7015%" y="773" width="0.5330%" height="15" fill="rgb(216,135,14)"/><text x="9.9515%" y="783.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (5 samples, 0.53%)</title><rect x="9.7015%" y="757" width="0.5330%" height="15" fill="rgb(241,47,5)"/><text x="9.9515%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (5 samples, 0.53%)</title><rect x="9.7015%" y="741" width="0.5330%" height="15" fill="rgb(233,42,35)"/><text x="9.9515%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.53%)</title><rect x="9.7015%" y="725" width="0.5330%" height="15" fill="rgb(231,13,6)"/><text x="9.9515%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (5 samples, 0.53%)</title><rect x="9.7015%" y="709" width="0.5330%" height="15" fill="rgb(207,181,40)"/><text x="9.9515%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (4 samples, 0.43%)</title><rect x="9.8081%" y="693" width="0.4264%" height="15" fill="rgb(254,173,49)"/><text x="10.0581%" y="703.50"></text></g><g><title>decor::Shim::run_on_tcp (8 samples, 0.85%)</title><rect x="9.7015%" y="901" width="0.8529%" height="15" fill="rgb(221,1,38)"/><text x="9.9515%" y="911.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (8 samples, 0.85%)</title><rect x="9.7015%" y="885" width="0.8529%" height="15" fill="rgb(206,124,46)"/><text x="9.9515%" y="895.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.85%)</title><rect x="9.7015%" y="869" width="0.8529%" height="15" fill="rgb(249,21,11)"/><text x="9.9515%" y="879.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (3 samples, 0.32%)</title><rect x="10.2345%" y="853" width="0.3198%" height="15" fill="rgb(222,201,40)"/><text x="10.4845%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.21%)</title><rect x="10.3412%" y="837" width="0.2132%" height="15" fill="rgb(235,61,29)"/><text x="10.5912%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="10.4478%" y="821" width="0.1066%" height="15" fill="rgb(219,207,3)"/><text x="10.6978%" y="831.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (1 samples, 0.11%)</title><rect x="10.5544%" y="901" width="0.1066%" height="15" fill="rgb(222,56,46)"/><text x="10.8044%" y="911.50"></text></g><g><title>decor::query_transformer::QueryTransformer::issue_to_dt_and_get_mv_stmt (1 samples, 0.11%)</title><rect x="10.5544%" y="885" width="0.1066%" height="15" fill="rgb(239,76,54)"/><text x="10.8044%" y="895.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.11%)</title><rect x="10.5544%" y="869" width="0.1066%" height="15" fill="rgb(231,124,27)"/><text x="10.8044%" y="879.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="10.5544%" y="853" width="0.1066%" height="15" fill="rgb(249,195,6)"/><text x="10.8044%" y="863.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.11%)</title><rect x="10.5544%" y="837" width="0.1066%" height="15" fill="rgb(237,174,47)"/><text x="10.8044%" y="847.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="10.5544%" y="821" width="0.1066%" height="15" fill="rgb(206,201,31)"/><text x="10.8044%" y="831.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="10.5544%" y="805" width="0.1066%" height="15" fill="rgb(231,57,52)"/><text x="10.8044%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.11%)</title><rect x="10.5544%" y="789" width="0.1066%" height="15" fill="rgb(248,177,22)"/><text x="10.8044%" y="799.50"></text></g><g><title>__libc_send (1 samples, 0.11%)</title><rect x="10.5544%" y="773" width="0.1066%" height="15" fill="rgb(215,211,37)"/><text x="10.8044%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="10.5544%" y="757" width="0.1066%" height="15" fill="rgb(241,128,51)"/><text x="10.8044%" y="767.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="10.5544%" y="741" width="0.1066%" height="15" fill="rgb(227,165,31)"/><text x="10.8044%" y="751.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="10.6610%" y="901" width="0.1066%" height="15" fill="rgb(228,167,24)"/><text x="10.9110%" y="911.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="885" width="0.1066%" height="15" fill="rgb(228,143,12)"/><text x="10.9110%" y="895.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="869" width="0.1066%" height="15" fill="rgb(249,149,8)"/><text x="10.9110%" y="879.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::SetExpr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="853" width="0.1066%" height="15" fill="rgb(243,35,44)"/><text x="10.9110%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="837" width="0.1066%" height="15" fill="rgb(246,89,9)"/><text x="10.9110%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="821" width="0.1066%" height="15" fill="rgb(233,213,13)"/><text x="10.9110%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="10.6610%" y="805" width="0.1066%" height="15" fill="rgb(233,141,41)"/><text x="10.9110%" y="815.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="789" width="0.1066%" height="15" fill="rgb(239,167,4)"/><text x="10.9110%" y="799.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="773" width="0.1066%" height="15" fill="rgb(209,217,16)"/><text x="10.9110%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="10.6610%" y="757" width="0.1066%" height="15" fill="rgb(219,88,35)"/><text x="10.9110%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="741" width="0.1066%" height="15" fill="rgb(220,193,23)"/><text x="10.9110%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="10.6610%" y="725" width="0.1066%" height="15" fill="rgb(230,90,52)"/><text x="10.9110%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="10.6610%" y="709" width="0.1066%" height="15" fill="rgb(252,106,19)"/><text x="10.9110%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="10.6610%" y="693" width="0.1066%" height="15" fill="rgb(206,74,20)"/><text x="10.9110%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="10.6610%" y="677" width="0.1066%" height="15" fill="rgb(230,138,44)"/><text x="10.9110%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="10.6610%" y="661" width="0.1066%" height="15" fill="rgb(235,182,43)"/><text x="10.9110%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="10.6610%" y="645" width="0.1066%" height="15" fill="rgb(242,16,51)"/><text x="10.9110%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="10.6610%" y="629" width="0.1066%" height="15" fill="rgb(248,9,4)"/><text x="10.9110%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="10.6610%" y="613" width="0.1066%" height="15" fill="rgb(210,31,22)"/><text x="10.9110%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="10.6610%" y="597" width="0.1066%" height="15" fill="rgb(239,54,39)"/><text x="10.9110%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="10.6610%" y="581" width="0.1066%" height="15" fill="rgb(230,99,41)"/><text x="10.9110%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="10.6610%" y="565" width="0.1066%" height="15" fill="rgb(253,106,12)"/><text x="10.9110%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="10.6610%" y="549" width="0.1066%" height="15" fill="rgb(213,46,41)"/><text x="10.9110%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="10.7676%" y="741" width="0.1066%" height="15" fill="rgb(215,133,35)"/><text x="11.0176%" y="751.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="10.7676%" y="885" width="0.2132%" height="15" fill="rgb(213,28,5)"/><text x="11.0176%" y="895.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.21%)</title><rect x="10.7676%" y="869" width="0.2132%" height="15" fill="rgb(215,77,49)"/><text x="11.0176%" y="879.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.21%)</title><rect x="10.7676%" y="853" width="0.2132%" height="15" fill="rgb(248,100,22)"/><text x="11.0176%" y="863.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.21%)</title><rect x="10.7676%" y="837" width="0.2132%" height="15" fill="rgb(208,67,9)"/><text x="11.0176%" y="847.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="10.7676%" y="821" width="0.2132%" height="15" fill="rgb(219,133,21)"/><text x="11.0176%" y="831.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.21%)</title><rect x="10.7676%" y="805" width="0.2132%" height="15" fill="rgb(246,46,29)"/><text x="11.0176%" y="815.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.21%)</title><rect x="10.7676%" y="789" width="0.2132%" height="15" fill="rgb(246,185,52)"/><text x="11.0176%" y="799.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="10.7676%" y="773" width="0.2132%" height="15" fill="rgb(252,136,11)"/><text x="11.0176%" y="783.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="10.7676%" y="757" width="0.2132%" height="15" fill="rgb(219,138,53)"/><text x="11.0176%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.11%)</title><rect x="10.8742%" y="741" width="0.1066%" height="15" fill="rgb(211,51,23)"/><text x="11.1242%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="10.9808%" y="869" width="0.1066%" height="15" fill="rgb(247,221,28)"/><text x="11.2308%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="10.9808%" y="853" width="0.1066%" height="15" fill="rgb(251,222,45)"/><text x="11.2308%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="10.9808%" y="837" width="0.1066%" height="15" fill="rgb(217,162,53)"/><text x="11.2308%" y="847.50"></text></g><g><title>dlopen (1 samples, 0.11%)</title><rect x="10.9808%" y="821" width="0.1066%" height="15" fill="rgb(229,93,14)"/><text x="11.2308%" y="831.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="10.9808%" y="805" width="0.1066%" height="15" fill="rgb(209,67,49)"/><text x="11.2308%" y="815.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.11%)</title><rect x="10.9808%" y="789" width="0.1066%" height="15" fill="rgb(213,87,29)"/><text x="11.2308%" y="799.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="10.9808%" y="773" width="0.1066%" height="15" fill="rgb(205,151,52)"/><text x="11.2308%" y="783.50"></text></g><g><title>[libdl-2.31.so] (1 samples, 0.11%)</title><rect x="10.9808%" y="757" width="0.1066%" height="15" fill="rgb(253,215,39)"/><text x="11.2308%" y="767.50"></text></g><g><title>_dl_open (1 samples, 0.11%)</title><rect x="10.9808%" y="741" width="0.1066%" height="15" fill="rgb(221,220,41)"/><text x="11.2308%" y="751.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.11%)</title><rect x="10.9808%" y="725" width="0.1066%" height="15" fill="rgb(218,133,21)"/><text x="11.2308%" y="735.50"></text></g><g><title>dl_open_worker (1 samples, 0.11%)</title><rect x="10.9808%" y="709" width="0.1066%" height="15" fill="rgb(221,193,43)"/><text x="11.2308%" y="719.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.11%)</title><rect x="10.9808%" y="693" width="0.1066%" height="15" fill="rgb(240,128,52)"/><text x="11.2308%" y="703.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.11%)</title><rect x="10.9808%" y="677" width="0.1066%" height="15" fill="rgb(253,114,12)"/><text x="11.2308%" y="687.50"></text></g><g><title>do_lookup_x (1 samples, 0.11%)</title><rect x="10.9808%" y="661" width="0.1066%" height="15" fill="rgb(215,223,47)"/><text x="11.2308%" y="671.50"></text></g><g><title>[libhwloc.so.15.2.0] (1 samples, 0.11%)</title><rect x="11.0874%" y="821" width="0.1066%" height="15" fill="rgb(248,225,23)"/><text x="11.3374%" y="831.50"></text></g><g><title>___sprintf_chk (1 samples, 0.11%)</title><rect x="11.0874%" y="805" width="0.1066%" height="15" fill="rgb(250,108,0)"/><text x="11.3374%" y="815.50"></text></g><g><title>__vsprintf_internal (1 samples, 0.11%)</title><rect x="11.0874%" y="789" width="0.1066%" height="15" fill="rgb(228,208,7)"/><text x="11.3374%" y="799.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.11%)</title><rect x="11.0874%" y="773" width="0.1066%" height="15" fill="rgb(244,45,10)"/><text x="11.3374%" y="783.50"></text></g><g><title>__strchrnul_avx2 (1 samples, 0.11%)</title><rect x="11.0874%" y="757" width="0.1066%" height="15" fill="rgb(207,125,25)"/><text x="11.3374%" y="767.50"></text></g><g><title>hwloc::Topology::new (3 samples, 0.32%)</title><rect x="10.9808%" y="885" width="0.3198%" height="15" fill="rgb(210,195,18)"/><text x="11.2308%" y="895.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.21%)</title><rect x="11.0874%" y="869" width="0.2132%" height="15" fill="rgb(249,80,12)"/><text x="11.3374%" y="879.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="11.0874%" y="853" width="0.2132%" height="15" fill="rgb(221,65,9)"/><text x="11.3374%" y="863.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="11.0874%" y="837" width="0.2132%" height="15" fill="rgb(235,49,36)"/><text x="11.3374%" y="847.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.11%)</title><rect x="11.1940%" y="821" width="0.1066%" height="15" fill="rgb(225,32,20)"/><text x="11.4440%" y="831.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.11%)</title><rect x="11.1940%" y="805" width="0.1066%" height="15" fill="rgb(215,141,46)"/><text x="11.4440%" y="815.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.11%)</title><rect x="11.1940%" y="789" width="0.1066%" height="15" fill="rgb(250,160,47)"/><text x="11.4440%" y="799.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.11%)</title><rect x="11.1940%" y="773" width="0.1066%" height="15" fill="rgb(216,222,40)"/><text x="11.4440%" y="783.50"></text></g><g><title>__GI___read (1 samples, 0.11%)</title><rect x="11.1940%" y="757" width="0.1066%" height="15" fill="rgb(234,217,39)"/><text x="11.4440%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="11.1940%" y="741" width="0.1066%" height="15" fill="rgb(207,178,40)"/><text x="11.4440%" y="751.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="11.1940%" y="725" width="0.1066%" height="15" fill="rgb(221,136,13)"/><text x="11.4440%" y="735.50"></text></g><g><title>ksys_read (1 samples, 0.11%)</title><rect x="11.1940%" y="709" width="0.1066%" height="15" fill="rgb(249,199,10)"/><text x="11.4440%" y="719.50"></text></g><g><title>vfs_read (1 samples, 0.11%)</title><rect x="11.1940%" y="693" width="0.1066%" height="15" fill="rgb(249,222,13)"/><text x="11.4440%" y="703.50"></text></g><g><title>seq_read (1 samples, 0.11%)</title><rect x="11.1940%" y="677" width="0.1066%" height="15" fill="rgb(244,185,38)"/><text x="11.4440%" y="687.50"></text></g><g><title>show_cpuinfo (1 samples, 0.11%)</title><rect x="11.1940%" y="661" width="0.1066%" height="15" fill="rgb(236,202,9)"/><text x="11.4440%" y="671.50"></text></g><g><title>seq_puts (1 samples, 0.11%)</title><rect x="11.1940%" y="645" width="0.1066%" height="15" fill="rgb(250,229,37)"/><text x="11.4440%" y="655.50"></text></g><g><title>lobsters::main (8 samples, 0.85%)</title><rect x="10.7676%" y="901" width="0.8529%" height="15" fill="rgb(206,174,23)"/><text x="11.0176%" y="911.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.32%)</title><rect x="11.3006%" y="885" width="0.3198%" height="15" fill="rgb(211,33,43)"/><text x="11.5506%" y="895.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.32%)</title><rect x="11.3006%" y="869" width="0.3198%" height="15" fill="rgb(245,58,50)"/><text x="11.5506%" y="879.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.32%)</title><rect x="11.3006%" y="853" width="0.3198%" height="15" fill="rgb(244,68,36)"/><text x="11.5506%" y="863.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.32%)</title><rect x="11.3006%" y="837" width="0.3198%" height="15" fill="rgb(232,229,15)"/><text x="11.5506%" y="847.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (3 samples, 0.32%)</title><rect x="11.3006%" y="821" width="0.3198%" height="15" fill="rgb(254,30,23)"/><text x="11.5506%" y="831.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (3 samples, 0.32%)</title><rect x="11.3006%" y="805" width="0.3198%" height="15" fill="rgb(235,160,14)"/><text x="11.5506%" y="815.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (3 samples, 0.32%)</title><rect x="11.3006%" y="789" width="0.3198%" height="15" fill="rgb(212,155,44)"/><text x="11.5506%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.32%)</title><rect x="11.3006%" y="773" width="0.3198%" height="15" fill="rgb(226,2,50)"/><text x="11.5506%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="11.5139%" y="757" width="0.1066%" height="15" fill="rgb(234,177,6)"/><text x="11.7639%" y="767.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="11.6205%" y="773" width="0.1066%" height="15" fill="rgb(217,24,9)"/><text x="11.8705%" y="783.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="11.6205%" y="757" width="0.1066%" height="15" fill="rgb(220,13,46)"/><text x="11.8705%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="11.6205%" y="741" width="0.1066%" height="15" fill="rgb(239,221,27)"/><text x="11.8705%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.11%)</title><rect x="11.6205%" y="725" width="0.1066%" height="15" fill="rgb(222,198,25)"/><text x="11.8705%" y="735.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.11%)</title><rect x="11.6205%" y="709" width="0.1066%" height="15" fill="rgb(211,99,13)"/><text x="11.8705%" y="719.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.11%)</title><rect x="11.6205%" y="693" width="0.1066%" height="15" fill="rgb(232,111,31)"/><text x="11.8705%" y="703.50"></text></g><g><title>__libc_recv (1 samples, 0.11%)</title><rect x="11.6205%" y="677" width="0.1066%" height="15" fill="rgb(245,82,37)"/><text x="11.8705%" y="687.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="11.6205%" y="661" width="0.1066%" height="15" fill="rgb(227,149,46)"/><text x="11.8705%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="11.6205%" y="645" width="0.1066%" height="15" fill="rgb(218,36,50)"/><text x="11.8705%" y="655.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.11%)</title><rect x="11.6205%" y="629" width="0.1066%" height="15" fill="rgb(226,80,48)"/><text x="11.8705%" y="639.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.11%)</title><rect x="11.6205%" y="613" width="0.1066%" height="15" fill="rgb(238,224,15)"/><text x="11.8705%" y="623.50"></text></g><g><title>inet_recvmsg (1 samples, 0.11%)</title><rect x="11.6205%" y="597" width="0.1066%" height="15" fill="rgb(241,136,10)"/><text x="11.8705%" y="607.50"></text></g><g><title>tcp_recvmsg (1 samples, 0.11%)</title><rect x="11.6205%" y="581" width="0.1066%" height="15" fill="rgb(208,32,45)"/><text x="11.8705%" y="591.50"></text></g><g><title>sk_wait_data (1 samples, 0.11%)</title><rect x="11.6205%" y="565" width="0.1066%" height="15" fill="rgb(207,135,9)"/><text x="11.8705%" y="575.50"></text></g><g><title>wait_woken (1 samples, 0.11%)</title><rect x="11.6205%" y="549" width="0.1066%" height="15" fill="rgb(206,86,44)"/><text x="11.8705%" y="559.50"></text></g><g><title>schedule_timeout (1 samples, 0.11%)</title><rect x="11.6205%" y="533" width="0.1066%" height="15" fill="rgb(245,177,15)"/><text x="11.8705%" y="543.50"></text></g><g><title>schedule (1 samples, 0.11%)</title><rect x="11.6205%" y="517" width="0.1066%" height="15" fill="rgb(206,64,50)"/><text x="11.8705%" y="527.50"></text></g><g><title>__schedule (1 samples, 0.11%)</title><rect x="11.6205%" y="501" width="0.1066%" height="15" fill="rgb(234,36,40)"/><text x="11.8705%" y="511.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="11.6205%" y="485" width="0.1066%" height="15" fill="rgb(213,64,8)"/><text x="11.8705%" y="495.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="11.6205%" y="469" width="0.1066%" height="15" fill="rgb(210,75,36)"/><text x="11.8705%" y="479.50"></text></g><g><title>decor::query_transformer::QueryTransformer::query_drop (2 samples, 0.21%)</title><rect x="11.6205%" y="853" width="0.2132%" height="15" fill="rgb(229,88,21)"/><text x="11.8705%" y="863.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (2 samples, 0.21%)</title><rect x="11.6205%" y="837" width="0.2132%" height="15" fill="rgb(252,204,47)"/><text x="11.8705%" y="847.50"></text></g><g><title>mysql::conn::Conn::_query (2 samples, 0.21%)</title><rect x="11.6205%" y="821" width="0.2132%" height="15" fill="rgb(208,77,27)"/><text x="11.8705%" y="831.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 0.21%)</title><rect x="11.6205%" y="805" width="0.2132%" height="15" fill="rgb(221,76,26)"/><text x="11.8705%" y="815.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 0.21%)</title><rect x="11.6205%" y="789" width="0.2132%" height="15" fill="rgb(225,139,18)"/><text x="11.8705%" y="799.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="11.7271%" y="773" width="0.1066%" height="15" fill="rgb(230,137,11)"/><text x="11.9771%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="11.7271%" y="757" width="0.1066%" height="15" fill="rgb(212,28,1)"/><text x="11.9771%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="11.7271%" y="741" width="0.1066%" height="15" fill="rgb(248,164,17)"/><text x="11.9771%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="11.7271%" y="725" width="0.1066%" height="15" fill="rgb(222,171,42)"/><text x="11.9771%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="11.7271%" y="709" width="0.1066%" height="15" fill="rgb(243,84,45)"/><text x="11.9771%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="11.7271%" y="693" width="0.1066%" height="15" fill="rgb(252,49,23)"/><text x="11.9771%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="11.7271%" y="677" width="0.1066%" height="15" fill="rgb(215,19,7)"/><text x="11.9771%" y="687.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_init (3 samples, 0.32%)</title><rect x="11.6205%" y="885" width="0.3198%" height="15" fill="rgb(238,81,41)"/><text x="11.8705%" y="895.50"></text></g><g><title>decor::Shim::create_schema (3 samples, 0.32%)</title><rect x="11.6205%" y="869" width="0.3198%" height="15" fill="rgb(210,199,37)"/><text x="11.8705%" y="879.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (1 samples, 0.11%)</title><rect x="11.8337%" y="853" width="0.1066%" height="15" fill="rgb(244,192,49)"/><text x="12.0837%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="11.8337%" y="837" width="0.1066%" height="15" fill="rgb(226,211,11)"/><text x="12.0837%" y="847.50"></text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::clone::Clone&gt;::clone (4 samples, 0.43%)</title><rect x="11.9403%" y="853" width="0.4264%" height="15" fill="rgb(236,162,54)"/><text x="12.1903%" y="863.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as core::clone::Clone&gt;::clone (4 samples, 0.43%)</title><rect x="11.9403%" y="837" width="0.4264%" height="15" fill="rgb(220,229,9)"/><text x="12.1903%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="12.0469%" y="821" width="0.3198%" height="15" fill="rgb(250,87,22)"/><text x="12.2969%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="12.3667%" y="773" width="0.1066%" height="15" fill="rgb(239,43,17)"/><text x="12.6167%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="12.3667%" y="757" width="0.1066%" height="15" fill="rgb(231,177,25)"/><text x="12.6167%" y="767.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="12.3667%" y="741" width="0.1066%" height="15" fill="rgb(219,179,1)"/><text x="12.6167%" y="751.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="12.3667%" y="725" width="0.1066%" height="15" fill="rgb(238,219,53)"/><text x="12.6167%" y="735.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="12.3667%" y="709" width="0.1066%" height="15" fill="rgb(232,167,36)"/><text x="12.6167%" y="719.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="12.3667%" y="693" width="0.1066%" height="15" fill="rgb(244,19,51)"/><text x="12.6167%" y="703.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="12.3667%" y="677" width="0.1066%" height="15" fill="rgb(224,6,22)"/><text x="12.6167%" y="687.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="12.3667%" y="661" width="0.1066%" height="15" fill="rgb(224,145,5)"/><text x="12.6167%" y="671.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="12.3667%" y="645" width="0.1066%" height="15" fill="rgb(234,130,49)"/><text x="12.6167%" y="655.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="12.3667%" y="629" width="0.1066%" height="15" fill="rgb(254,6,2)"/><text x="12.6167%" y="639.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="12.3667%" y="613" width="0.1066%" height="15" fill="rgb(208,96,46)"/><text x="12.6167%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="12.3667%" y="821" width="0.2132%" height="15" fill="rgb(239,3,39)"/><text x="12.6167%" y="831.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="12.3667%" y="805" width="0.2132%" height="15" fill="rgb(233,210,1)"/><text x="12.6167%" y="815.50"></text></g><g><title>_int_realloc (2 samples, 0.21%)</title><rect x="12.3667%" y="789" width="0.2132%" height="15" fill="rgb(244,137,37)"/><text x="12.6167%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="12.4733%" y="773" width="0.1066%" height="15" fill="rgb(240,136,2)"/><text x="12.7233%" y="783.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="12.5800%" y="821" width="0.1066%" height="15" fill="rgb(239,18,37)"/><text x="12.8300%" y="831.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="12.5800%" y="805" width="0.1066%" height="15" fill="rgb(218,185,22)"/><text x="12.8300%" y="815.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="12.5800%" y="789" width="0.1066%" height="15" fill="rgb(225,218,4)"/><text x="12.8300%" y="799.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="12.5800%" y="773" width="0.1066%" height="15" fill="rgb(230,182,32)"/><text x="12.8300%" y="783.50"></text></g><g><title>__page_set_anon_rmap (1 samples, 0.11%)</title><rect x="12.5800%" y="757" width="0.1066%" height="15" fill="rgb(242,56,43)"/><text x="12.8300%" y="767.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (11 samples, 1.17%)</title><rect x="11.6205%" y="901" width="1.1727%" height="15" fill="rgb(233,99,24)"/><text x="11.8705%" y="911.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (8 samples, 0.85%)</title><rect x="11.9403%" y="885" width="0.8529%" height="15" fill="rgb(234,209,42)"/><text x="12.1903%" y="895.50"></text></g><g><title>decor::sqlparser_cache::ParserCache::get_single_parsed_stmt (8 samples, 0.85%)</title><rect x="11.9403%" y="869" width="0.8529%" height="15" fill="rgb(227,7,12)"/><text x="12.1903%" y="879.50"></text></g><g><title>sql_parser::parser::parse_statements (4 samples, 0.43%)</title><rect x="12.3667%" y="853" width="0.4264%" height="15" fill="rgb(245,203,43)"/><text x="12.6167%" y="863.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::tokenize (4 samples, 0.43%)</title><rect x="12.3667%" y="837" width="0.4264%" height="15" fill="rgb(238,205,33)"/><text x="12.6167%" y="847.50"></text></g><g><title>sql_parser::tokenizer::Tokenizer::next_token (1 samples, 0.11%)</title><rect x="12.6866%" y="821" width="0.1066%" height="15" fill="rgb(231,56,7)"/><text x="12.9366%" y="831.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (1 samples, 0.11%)</title><rect x="12.7932%" y="901" width="0.1066%" height="15" fill="rgb(244,186,29)"/><text x="13.0432%" y="911.50"></text></g><g><title>mysql::conn::Conn::_query (1 samples, 0.11%)</title><rect x="12.8998%" y="901" width="0.1066%" height="15" fill="rgb(234,111,31)"/><text x="13.1498%" y="911.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.11%)</title><rect x="13.0064%" y="901" width="0.1066%" height="15" fill="rgb(241,149,10)"/><text x="13.2564%" y="911.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.11%)</title><rect x="13.1130%" y="901" width="0.1066%" height="15" fill="rgb(249,206,44)"/><text x="13.3630%" y="911.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.11%)</title><rect x="13.1130%" y="885" width="0.1066%" height="15" fill="rgb(251,153,30)"/><text x="13.3630%" y="895.50"></text></g><g><title>regex::compile::Compiler::compile_finish (1 samples, 0.11%)</title><rect x="13.1130%" y="869" width="0.1066%" height="15" fill="rgb(239,152,38)"/><text x="13.3630%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="13.1130%" y="853" width="0.1066%" height="15" fill="rgb(249,139,47)"/><text x="13.3630%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="13.1130%" y="837" width="0.1066%" height="15" fill="rgb(244,64,35)"/><text x="13.3630%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="13.1130%" y="821" width="0.1066%" height="15" fill="rgb(216,46,15)"/><text x="13.3630%" y="831.50"></text></g><g><title>sysmalloc (1 samples, 0.11%)</title><rect x="13.1130%" y="805" width="0.1066%" height="15" fill="rgb(250,74,19)"/><text x="13.3630%" y="815.50"></text></g><g><title>__GI___mprotect (1 samples, 0.11%)</title><rect x="13.1130%" y="789" width="0.1066%" height="15" fill="rgb(249,42,33)"/><text x="13.3630%" y="799.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="13.1130%" y="773" width="0.1066%" height="15" fill="rgb(242,149,17)"/><text x="13.3630%" y="783.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="13.1130%" y="757" width="0.1066%" height="15" fill="rgb(244,29,21)"/><text x="13.3630%" y="767.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.11%)</title><rect x="13.1130%" y="741" width="0.1066%" height="15" fill="rgb(220,130,37)"/><text x="13.3630%" y="751.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.11%)</title><rect x="13.1130%" y="725" width="0.1066%" height="15" fill="rgb(211,67,2)"/><text x="13.3630%" y="735.50"></text></g><g><title>mprotect_fixup (1 samples, 0.11%)</title><rect x="13.1130%" y="709" width="0.1066%" height="15" fill="rgb(235,68,52)"/><text x="13.3630%" y="719.50"></text></g><g><title>perf_event_mmap (1 samples, 0.11%)</title><rect x="13.1130%" y="693" width="0.1066%" height="15" fill="rgb(246,142,3)"/><text x="13.3630%" y="703.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.11%)</title><rect x="13.1130%" y="677" width="0.1066%" height="15" fill="rgb(241,25,7)"/><text x="13.3630%" y="687.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.11%)</title><rect x="13.1130%" y="661" width="0.1066%" height="15" fill="rgb(242,119,39)"/><text x="13.3630%" y="671.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="13.1130%" y="645" width="0.1066%" height="15" fill="rgb(241,98,45)"/><text x="13.3630%" y="655.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (16 samples, 1.71%)</title><rect x="13.2196%" y="869" width="1.7058%" height="15" fill="rgb(254,28,30)"/><text x="13.4696%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (16 samples, 1.71%)</title><rect x="13.2196%" y="853" width="1.7058%" height="15" fill="rgb(241,142,54)"/><text x="13.4696%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (16 samples, 1.71%)</title><rect x="13.2196%" y="837" width="1.7058%" height="15" fill="rgb(222,85,15)"/><text x="13.4696%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (15 samples, 1.60%)</title><rect x="13.3262%" y="821" width="1.5991%" height="15" fill="rgb(210,85,47)"/><text x="13.5762%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::expected (15 samples, 1.60%)</title><rect x="13.3262%" y="805" width="1.5991%" height="15" fill="rgb(224,206,25)"/><text x="13.5762%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 1.49%)</title><rect x="13.4328%" y="789" width="1.4925%" height="15" fill="rgb(243,201,19)"/><text x="13.6828%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 1.49%)</title><rect x="13.4328%" y="773" width="1.4925%" height="15" fill="rgb(236,59,4)"/><text x="13.6828%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 1.49%)</title><rect x="13.4328%" y="757" width="1.4925%" height="15" fill="rgb(254,179,45)"/><text x="13.6828%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 1.49%)</title><rect x="13.4328%" y="741" width="1.4925%" height="15" fill="rgb(226,14,10)"/><text x="13.6828%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (14 samples, 1.49%)</title><rect x="13.4328%" y="725" width="1.4925%" height="15" fill="rgb(244,27,41)"/><text x="13.6828%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 1.49%)</title><rect x="13.4328%" y="709" width="1.4925%" height="15" fill="rgb(235,35,32)"/><text x="13.6828%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (14 samples, 1.49%)</title><rect x="13.4328%" y="693" width="1.4925%" height="15" fill="rgb(218,68,31)"/><text x="13.6828%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 1.49%)</title><rect x="13.4328%" y="677" width="1.4925%" height="15" fill="rgb(207,120,37)"/><text x="13.6828%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 1.49%)</title><rect x="13.4328%" y="661" width="1.4925%" height="15" fill="rgb(227,98,0)"/><text x="13.6828%" y="671.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (17 samples, 1.81%)</title><rect x="13.2196%" y="901" width="1.8124%" height="15" fill="rgb(207,7,3)"/><text x="13.4696%" y="911.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_query_body (17 samples, 1.81%)</title><rect x="13.2196%" y="885" width="1.8124%" height="15" fill="rgb(206,98,19)"/><text x="13.4696%" y="895.50">s..</text></g><g><title>sql_parser::parser::Parser::parse_select (1 samples, 0.11%)</title><rect x="14.9254%" y="869" width="0.1066%" height="15" fill="rgb(217,5,26)"/><text x="15.1754%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (1 samples, 0.11%)</title><rect x="14.9254%" y="853" width="0.1066%" height="15" fill="rgb(235,190,38)"/><text x="15.1754%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="14.9254%" y="837" width="0.1066%" height="15" fill="rgb(247,86,24)"/><text x="15.1754%" y="847.50"></text></g><g><title>&lt;sql_parser::tokenizer::Token as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="14.9254%" y="821" width="0.1066%" height="15" fill="rgb(205,101,16)"/><text x="15.1754%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="14.9254%" y="805" width="0.1066%" height="15" fill="rgb(246,168,33)"/><text x="15.1754%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="14.9254%" y="789" width="0.1066%" height="15" fill="rgb(231,114,1)"/><text x="15.1754%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="14.9254%" y="773" width="0.1066%" height="15" fill="rgb(207,184,53)"/><text x="15.1754%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="14.9254%" y="757" width="0.1066%" height="15" fill="rgb(224,95,51)"/><text x="15.1754%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="14.9254%" y="741" width="0.1066%" height="15" fill="rgb(212,188,45)"/><text x="15.1754%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="14.9254%" y="725" width="0.1066%" height="15" fill="rgb(223,154,38)"/><text x="15.1754%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="14.9254%" y="709" width="0.1066%" height="15" fill="rgb(251,22,52)"/><text x="15.1754%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="14.9254%" y="693" width="0.1066%" height="15" fill="rgb(229,209,22)"/><text x="15.1754%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="14.9254%" y="677" width="0.1066%" height="15" fill="rgb(234,138,34)"/><text x="15.1754%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="14.9254%" y="661" width="0.1066%" height="15" fill="rgb(212,95,11)"/><text x="15.1754%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="14.9254%" y="645" width="0.1066%" height="15" fill="rgb(240,179,47)"/><text x="15.1754%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="14.9254%" y="629" width="0.1066%" height="15" fill="rgb(240,163,11)"/><text x="15.1754%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="14.9254%" y="613" width="0.1066%" height="15" fill="rgb(236,37,12)"/><text x="15.1754%" y="623.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (1 samples, 0.11%)</title><rect x="15.0320%" y="901" width="0.1066%" height="15" fill="rgb(232,164,16)"/><text x="15.2820%" y="911.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="15.1386%" y="549" width="0.1066%" height="15" fill="rgb(244,205,15)"/><text x="15.3886%" y="559.50"></text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="15.1386%" y="533" width="0.1066%" height="15" fill="rgb(223,117,47)"/><text x="15.3886%" y="543.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="15.1386%" y="517" width="0.1066%" height="15" fill="rgb(244,107,35)"/><text x="15.3886%" y="527.50"></text></g><g><title>__GI___mprotect (2 samples, 0.21%)</title><rect x="15.1386%" y="581" width="0.2132%" height="15" fill="rgb(205,140,8)"/><text x="15.3886%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.21%)</title><rect x="15.1386%" y="565" width="0.2132%" height="15" fill="rgb(228,84,46)"/><text x="15.3886%" y="575.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="15.2452%" y="549" width="0.1066%" height="15" fill="rgb(254,188,9)"/><text x="15.4952%" y="559.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (3 samples, 0.32%)</title><rect x="15.1386%" y="901" width="0.3198%" height="15" fill="rgb(206,112,54)"/><text x="15.3886%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (3 samples, 0.32%)</title><rect x="15.1386%" y="885" width="0.3198%" height="15" fill="rgb(216,84,49)"/><text x="15.3886%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (3 samples, 0.32%)</title><rect x="15.1386%" y="869" width="0.3198%" height="15" fill="rgb(214,194,35)"/><text x="15.3886%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_prefix (3 samples, 0.32%)</title><rect x="15.1386%" y="853" width="0.3198%" height="15" fill="rgb(249,28,3)"/><text x="15.3886%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_data_type (3 samples, 0.32%)</title><rect x="15.1386%" y="837" width="0.3198%" height="15" fill="rgb(222,56,52)"/><text x="15.3886%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::expected (3 samples, 0.32%)</title><rect x="15.1386%" y="821" width="0.3198%" height="15" fill="rgb(245,217,50)"/><text x="15.3886%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="15.1386%" y="805" width="0.3198%" height="15" fill="rgb(213,201,24)"/><text x="15.3886%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.32%)</title><rect x="15.1386%" y="789" width="0.3198%" height="15" fill="rgb(248,116,28)"/><text x="15.3886%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.32%)</title><rect x="15.1386%" y="773" width="0.3198%" height="15" fill="rgb(219,72,43)"/><text x="15.3886%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.32%)</title><rect x="15.1386%" y="757" width="0.3198%" height="15" fill="rgb(209,138,14)"/><text x="15.3886%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.32%)</title><rect x="15.1386%" y="741" width="0.3198%" height="15" fill="rgb(222,18,33)"/><text x="15.3886%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.32%)</title><rect x="15.1386%" y="725" width="0.3198%" height="15" fill="rgb(213,199,7)"/><text x="15.3886%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.32%)</title><rect x="15.1386%" y="709" width="0.3198%" height="15" fill="rgb(250,110,10)"/><text x="15.3886%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.32%)</title><rect x="15.1386%" y="693" width="0.3198%" height="15" fill="rgb(248,123,6)"/><text x="15.3886%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.32%)</title><rect x="15.1386%" y="677" width="0.3198%" height="15" fill="rgb(206,91,31)"/><text x="15.3886%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.32%)</title><rect x="15.1386%" y="661" width="0.3198%" height="15" fill="rgb(211,154,13)"/><text x="15.3886%" y="671.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.32%)</title><rect x="15.1386%" y="645" width="0.3198%" height="15" fill="rgb(225,148,7)"/><text x="15.3886%" y="655.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="15.1386%" y="629" width="0.3198%" height="15" fill="rgb(220,160,43)"/><text x="15.3886%" y="639.50"></text></g><g><title>_int_malloc (3 samples, 0.32%)</title><rect x="15.1386%" y="613" width="0.3198%" height="15" fill="rgb(213,52,39)"/><text x="15.3886%" y="623.50"></text></g><g><title>sysmalloc (3 samples, 0.32%)</title><rect x="15.1386%" y="597" width="0.3198%" height="15" fill="rgb(243,137,7)"/><text x="15.3886%" y="607.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="15.3518%" y="581" width="0.1066%" height="15" fill="rgb(230,79,13)"/><text x="15.6018%" y="591.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="15.3518%" y="565" width="0.1066%" height="15" fill="rgb(247,105,23)"/><text x="15.6018%" y="575.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="15.3518%" y="549" width="0.1066%" height="15" fill="rgb(223,179,41)"/><text x="15.6018%" y="559.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="15.3518%" y="533" width="0.1066%" height="15" fill="rgb(218,9,34)"/><text x="15.6018%" y="543.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="15.3518%" y="517" width="0.1066%" height="15" fill="rgb(222,106,8)"/><text x="15.6018%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="15.3518%" y="501" width="0.1066%" height="15" fill="rgb(211,220,0)"/><text x="15.6018%" y="511.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="15.3518%" y="485" width="0.1066%" height="15" fill="rgb(229,52,16)"/><text x="15.6018%" y="495.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="15.3518%" y="469" width="0.1066%" height="15" fill="rgb(212,155,18)"/><text x="15.6018%" y="479.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="15.3518%" y="453" width="0.1066%" height="15" fill="rgb(242,21,14)"/><text x="15.6018%" y="463.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="15.3518%" y="437" width="0.1066%" height="15" fill="rgb(222,19,48)"/><text x="15.6018%" y="447.50"></text></g><g><title>sql_parser::parser::Parser::parse_comma_separated (1 samples, 0.11%)</title><rect x="15.4584%" y="853" width="0.1066%" height="15" fill="rgb(232,45,27)"/><text x="15.7084%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="15.4584%" y="837" width="0.1066%" height="15" fill="rgb(249,103,42)"/><text x="15.7084%" y="847.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.21%)</title><rect x="15.5650%" y="853" width="0.2132%" height="15" fill="rgb(246,81,33)"/><text x="15.8150%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (4 samples, 0.43%)</title><rect x="15.4584%" y="901" width="0.4264%" height="15" fill="rgb(252,33,42)"/><text x="15.7084%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (4 samples, 0.43%)</title><rect x="15.4584%" y="885" width="0.4264%" height="15" fill="rgb(209,212,41)"/><text x="15.7084%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_query_body (4 samples, 0.43%)</title><rect x="15.4584%" y="869" width="0.4264%" height="15" fill="rgb(207,154,6)"/><text x="15.7084%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_select (1 samples, 0.11%)</title><rect x="15.7783%" y="853" width="0.1066%" height="15" fill="rgb(223,64,47)"/><text x="16.0283%" y="863.50"></text></g><g><title>sql_parser::parser::Parser::parse_table_and_joins (1 samples, 0.11%)</title><rect x="15.7783%" y="837" width="0.1066%" height="15" fill="rgb(211,161,38)"/><text x="16.0283%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="15.7783%" y="821" width="0.1066%" height="15" fill="rgb(219,138,40)"/><text x="16.0283%" y="831.50"></text></g><g><title>sql_parser::parser::Parser::check_descent (2 samples, 0.21%)</title><rect x="15.8849%" y="869" width="0.2132%" height="15" fill="rgb(241,228,46)"/><text x="16.1349%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (2 samples, 0.21%)</title><rect x="15.8849%" y="853" width="0.2132%" height="15" fill="rgb(223,209,38)"/><text x="16.1349%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.21%)</title><rect x="15.8849%" y="837" width="0.2132%" height="15" fill="rgb(236,164,45)"/><text x="16.1349%" y="847.50"></text></g><g><title>sql_parser::parser::parse_statements (3 samples, 0.32%)</title><rect x="15.8849%" y="901" width="0.3198%" height="15" fill="rgb(231,15,5)"/><text x="16.1349%" y="911.50"></text></g><g><title>sql_parser::parser::Parser::parse_statement (3 samples, 0.32%)</title><rect x="15.8849%" y="885" width="0.3198%" height="15" fill="rgb(252,35,15)"/><text x="16.1349%" y="895.50"></text></g><g><title>sql_parser::parser::Parser::parse_columns (1 samples, 0.11%)</title><rect x="16.0981%" y="869" width="0.1066%" height="15" fill="rgb(248,181,18)"/><text x="16.3481%" y="879.50"></text></g><g><title>sql_parser::parser::Parser::parse_keyword (1 samples, 0.11%)</title><rect x="16.0981%" y="853" width="0.1066%" height="15" fill="rgb(233,39,42)"/><text x="16.3481%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.32%)</title><rect x="16.5245%" y="693" width="0.3198%" height="15" fill="rgb(238,110,33)"/><text x="16.7745%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="16.5245%" y="677" width="0.3198%" height="15" fill="rgb(233,195,10)"/><text x="16.7745%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="16.8443%" y="693" width="0.1066%" height="15" fill="rgb(254,105,3)"/><text x="17.0943%" y="703.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="16.9510%" y="693" width="0.1066%" height="15" fill="rgb(221,225,9)"/><text x="17.2010%" y="703.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="17.0576%" y="693" width="0.2132%" height="15" fill="rgb(224,227,45)"/><text x="17.3076%" y="703.50"></text></g><g><title>mysql::conn::Conn::read_packet (11 samples, 1.17%)</title><rect x="16.2047%" y="709" width="1.1727%" height="15" fill="rgb(229,198,43)"/><text x="16.4547%" y="719.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="17.2708%" y="693" width="0.1066%" height="15" fill="rgb(206,209,35)"/><text x="17.5208%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="17.2708%" y="677" width="0.1066%" height="15" fill="rgb(245,195,53)"/><text x="17.5208%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.11%)</title><rect x="17.2708%" y="661" width="0.1066%" height="15" fill="rgb(240,92,26)"/><text x="17.5208%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="17.2708%" y="645" width="0.1066%" height="15" fill="rgb(207,40,23)"/><text x="17.5208%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="17.2708%" y="629" width="0.1066%" height="15" fill="rgb(223,111,35)"/><text x="17.5208%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="17.2708%" y="613" width="0.1066%" height="15" fill="rgb(229,147,28)"/><text x="17.5208%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="17.2708%" y="597" width="0.1066%" height="15" fill="rgb(211,29,28)"/><text x="17.5208%" y="607.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (15 samples, 1.60%)</title><rect x="16.2047%" y="757" width="1.5991%" height="15" fill="rgb(228,72,33)"/><text x="16.4547%" y="767.50"></text></g><g><title>mysql::conn::Conn::_query (15 samples, 1.60%)</title><rect x="16.2047%" y="741" width="1.5991%" height="15" fill="rgb(205,214,31)"/><text x="16.4547%" y="751.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (15 samples, 1.60%)</title><rect x="16.2047%" y="725" width="1.5991%" height="15" fill="rgb(224,111,15)"/><text x="16.4547%" y="735.50"></text></g><g><title>mysql_common::packets::column_from_payload (4 samples, 0.43%)</title><rect x="17.3774%" y="709" width="0.4264%" height="15" fill="rgb(253,21,26)"/><text x="17.6274%" y="719.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (2 samples, 0.21%)</title><rect x="17.8038%" y="725" width="0.2132%" height="15" fill="rgb(245,139,43)"/><text x="18.0538%" y="735.50"></text></g><g><title>mysql::conn::Conn::next_text (2 samples, 0.21%)</title><rect x="17.8038%" y="709" width="0.2132%" height="15" fill="rgb(252,170,7)"/><text x="18.0538%" y="719.50"></text></g><g><title>start_thread (18 samples, 1.92%)</title><rect x="16.2047%" y="901" width="1.9190%" height="15" fill="rgb(231,118,14)"/><text x="16.4547%" y="911.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 1.92%)</title><rect x="16.2047%" y="885" width="1.9190%" height="15" fill="rgb(238,83,0)"/><text x="16.4547%" y="895.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (18 samples, 1.92%)</title><rect x="16.2047%" y="869" width="1.9190%" height="15" fill="rgb(221,39,39)"/><text x="16.4547%" y="879.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (18 samples, 1.92%)</title><rect x="16.2047%" y="853" width="1.9190%" height="15" fill="rgb(222,119,46)"/><text x="16.4547%" y="863.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (18 samples, 1.92%)</title><rect x="16.2047%" y="837" width="1.9190%" height="15" fill="rgb(222,165,49)"/><text x="16.4547%" y="847.50">c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 1.92%)</title><rect x="16.2047%" y="821" width="1.9190%" height="15" fill="rgb(219,113,52)"/><text x="16.4547%" y="831.50">s..</text></g><g><title>decor::Shim::run_on_tcp (18 samples, 1.92%)</title><rect x="16.2047%" y="805" width="1.9190%" height="15" fill="rgb(214,7,15)"/><text x="16.4547%" y="815.50">d..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (18 samples, 1.92%)</title><rect x="16.2047%" y="789" width="1.9190%" height="15" fill="rgb(235,32,4)"/><text x="16.4547%" y="799.50">m..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (18 samples, 1.92%)</title><rect x="16.2047%" y="773" width="1.9190%" height="15" fill="rgb(238,90,54)"/><text x="16.4547%" y="783.50">&lt;..</text></g><g><title>decor::helpers::answer_rows (3 samples, 0.32%)</title><rect x="17.8038%" y="757" width="0.3198%" height="15" fill="rgb(213,208,19)"/><text x="18.0538%" y="767.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.32%)</title><rect x="17.8038%" y="741" width="0.3198%" height="15" fill="rgb(233,156,4)"/><text x="18.0538%" y="751.50"></text></g><g><title>mysql::conn::query_result::QueryResult&lt;T&gt;::handle_next (1 samples, 0.11%)</title><rect x="18.0171%" y="725" width="0.1066%" height="15" fill="rgb(207,194,5)"/><text x="18.2671%" y="735.50"></text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="18.1237%" y="901" width="0.1066%" height="15" fill="rgb(206,111,30)"/><text x="18.3737%" y="911.50"></text></g><g><title>std::io::error::Error::_new (1 samples, 0.11%)</title><rect x="18.2303%" y="901" width="0.1066%" height="15" fill="rgb(243,70,54)"/><text x="18.4803%" y="911.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.32%)</title><rect x="18.3369%" y="773" width="0.3198%" height="15" fill="rgb(242,28,8)"/><text x="18.5869%" y="783.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (3 samples, 0.32%)</title><rect x="18.3369%" y="757" width="0.3198%" height="15" fill="rgb(219,106,18)"/><text x="18.5869%" y="767.50"></text></g><g><title>mysql::conn::Conn::next_text (3 samples, 0.32%)</title><rect x="18.3369%" y="741" width="0.3198%" height="15" fill="rgb(244,222,10)"/><text x="18.5869%" y="751.50"></text></g><g><title>mysql_common::value::read_text_values (3 samples, 0.32%)</title><rect x="18.3369%" y="725" width="0.3198%" height="15" fill="rgb(236,179,52)"/><text x="18.5869%" y="735.50"></text></g><g><title>mysql_common::value::read_text_value (3 samples, 0.32%)</title><rect x="18.3369%" y="709" width="0.3198%" height="15" fill="rgb(213,23,39)"/><text x="18.5869%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="18.5501%" y="693" width="0.1066%" height="15" fill="rgb(238,48,10)"/><text x="18.8001%" y="703.50"></text></g><g><title>hwloc::Topology::new (2 samples, 0.21%)</title><rect x="18.6567%" y="773" width="0.2132%" height="15" fill="rgb(251,196,23)"/><text x="18.9067%" y="783.50"></text></g><g><title>hwloc_topology_load (2 samples, 0.21%)</title><rect x="18.6567%" y="757" width="0.2132%" height="15" fill="rgb(250,152,24)"/><text x="18.9067%" y="767.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="18.6567%" y="741" width="0.2132%" height="15" fill="rgb(209,150,17)"/><text x="18.9067%" y="751.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="18.6567%" y="725" width="0.2132%" height="15" fill="rgb(234,202,34)"/><text x="18.9067%" y="735.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="18.6567%" y="709" width="0.2132%" height="15" fill="rgb(253,148,53)"/><text x="18.9067%" y="719.50"></text></g><g><title>__GI___openat (2 samples, 0.21%)</title><rect x="18.6567%" y="693" width="0.2132%" height="15" fill="rgb(218,129,16)"/><text x="18.9067%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="18.7633%" y="677" width="0.1066%" height="15" fill="rgb(216,85,19)"/><text x="19.0133%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="18.7633%" y="661" width="0.1066%" height="15" fill="rgb(235,228,7)"/><text x="19.0133%" y="671.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.11%)</title><rect x="18.7633%" y="645" width="0.1066%" height="15" fill="rgb(245,175,0)"/><text x="19.0133%" y="655.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.11%)</title><rect x="18.7633%" y="629" width="0.1066%" height="15" fill="rgb(208,168,36)"/><text x="19.0133%" y="639.50"></text></g><g><title>do_filp_open (1 samples, 0.11%)</title><rect x="18.7633%" y="613" width="0.1066%" height="15" fill="rgb(246,171,24)"/><text x="19.0133%" y="623.50"></text></g><g><title>path_openat (1 samples, 0.11%)</title><rect x="18.7633%" y="597" width="0.1066%" height="15" fill="rgb(215,142,24)"/><text x="19.0133%" y="607.50"></text></g><g><title>link_path_walk (1 samples, 0.11%)</title><rect x="18.7633%" y="581" width="0.1066%" height="15" fill="rgb(250,187,7)"/><text x="19.0133%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="18.8699%" y="725" width="0.1066%" height="15" fill="rgb(228,66,33)"/><text x="19.1199%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="18.8699%" y="709" width="0.1066%" height="15" fill="rgb(234,215,21)"/><text x="19.1199%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="18.8699%" y="693" width="0.1066%" height="15" fill="rgb(222,191,20)"/><text x="19.1199%" y="703.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="19.0832%" y="613" width="0.1066%" height="15" fill="rgb(245,79,54)"/><text x="19.3332%" y="623.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="19.4030%" y="501" width="0.1066%" height="15" fill="rgb(240,10,37)"/><text x="19.6530%" y="511.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="19.4030%" y="485" width="0.1066%" height="15" fill="rgb(214,192,32)"/><text x="19.6530%" y="495.50"></text></g><g><title>reweight_entity (1 samples, 0.11%)</title><rect x="19.7228%" y="405" width="0.1066%" height="15" fill="rgb(209,36,54)"/><text x="19.9728%" y="415.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.21%)</title><rect x="19.7228%" y="437" width="0.2132%" height="15" fill="rgb(220,10,11)"/><text x="19.9728%" y="447.50"></text></g><g><title>dequeue_entity (2 samples, 0.21%)</title><rect x="19.7228%" y="421" width="0.2132%" height="15" fill="rgb(221,106,17)"/><text x="19.9728%" y="431.50"></text></g><g><title>update_curr (1 samples, 0.11%)</title><rect x="19.8294%" y="405" width="0.1066%" height="15" fill="rgb(251,142,44)"/><text x="20.0794%" y="415.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="19.8294%" y="389" width="0.1066%" height="15" fill="rgb(238,13,15)"/><text x="20.0794%" y="399.50"></text></g><g><title>psi_task_change (1 samples, 0.11%)</title><rect x="19.9360%" y="437" width="0.1066%" height="15" fill="rgb(208,107,27)"/><text x="20.1860%" y="447.50"></text></g><g><title>psi_group_change (1 samples, 0.11%)</title><rect x="19.9360%" y="421" width="0.1066%" height="15" fill="rgb(205,136,37)"/><text x="20.1860%" y="431.50"></text></g><g><title>record_times (1 samples, 0.11%)</title><rect x="19.9360%" y="405" width="0.1066%" height="15" fill="rgb(250,205,27)"/><text x="20.1860%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="19.9360%" y="389" width="0.1066%" height="15" fill="rgb(210,80,43)"/><text x="20.1860%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="19.9360%" y="373" width="0.1066%" height="15" fill="rgb(247,160,36)"/><text x="20.1860%" y="383.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="20.0426%" y="437" width="0.1066%" height="15" fill="rgb(234,13,49)"/><text x="20.2926%" y="447.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="20.0426%" y="421" width="0.1066%" height="15" fill="rgb(234,122,0)"/><text x="20.2926%" y="431.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.11%)</title><rect x="20.0426%" y="405" width="0.1066%" height="15" fill="rgb(207,146,38)"/><text x="20.2926%" y="415.50"></text></g><g><title>do_syscall_64 (10 samples, 1.07%)</title><rect x="19.2964%" y="597" width="1.0661%" height="15" fill="rgb(207,177,25)"/><text x="19.5464%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (10 samples, 1.07%)</title><rect x="19.2964%" y="581" width="1.0661%" height="15" fill="rgb(211,178,42)"/><text x="19.5464%" y="591.50"></text></g><g><title>__sys_recvfrom (10 samples, 1.07%)</title><rect x="19.2964%" y="565" width="1.0661%" height="15" fill="rgb(230,69,54)"/><text x="19.5464%" y="575.50"></text></g><g><title>inet_recvmsg (10 samples, 1.07%)</title><rect x="19.2964%" y="549" width="1.0661%" height="15" fill="rgb(214,135,41)"/><text x="19.5464%" y="559.50"></text></g><g><title>tcp_recvmsg (10 samples, 1.07%)</title><rect x="19.2964%" y="533" width="1.0661%" height="15" fill="rgb(237,67,25)"/><text x="19.5464%" y="543.50"></text></g><g><title>sk_wait_data (9 samples, 0.96%)</title><rect x="19.4030%" y="517" width="0.9595%" height="15" fill="rgb(222,189,50)"/><text x="19.6530%" y="527.50"></text></g><g><title>wait_woken (8 samples, 0.85%)</title><rect x="19.5096%" y="501" width="0.8529%" height="15" fill="rgb(245,148,34)"/><text x="19.7596%" y="511.50"></text></g><g><title>schedule_timeout (8 samples, 0.85%)</title><rect x="19.5096%" y="485" width="0.8529%" height="15" fill="rgb(222,29,6)"/><text x="19.7596%" y="495.50"></text></g><g><title>schedule (8 samples, 0.85%)</title><rect x="19.5096%" y="469" width="0.8529%" height="15" fill="rgb(221,189,43)"/><text x="19.7596%" y="479.50"></text></g><g><title>__schedule (7 samples, 0.75%)</title><rect x="19.6162%" y="453" width="0.7463%" height="15" fill="rgb(207,36,27)"/><text x="19.8662%" y="463.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.21%)</title><rect x="20.1493%" y="437" width="0.2132%" height="15" fill="rgb(217,90,24)"/><text x="20.3993%" y="447.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.49%)</title><rect x="18.9765%" y="725" width="1.4925%" height="15" fill="rgb(224,66,35)"/><text x="19.2265%" y="735.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (14 samples, 1.49%)</title><rect x="18.9765%" y="709" width="1.4925%" height="15" fill="rgb(221,13,50)"/><text x="19.2265%" y="719.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 1.39%)</title><rect x="19.0832%" y="693" width="1.3859%" height="15" fill="rgb(236,68,49)"/><text x="19.3332%" y="703.50"></text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 1.39%)</title><rect x="19.0832%" y="677" width="1.3859%" height="15" fill="rgb(229,146,28)"/><text x="19.3332%" y="687.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 1.39%)</title><rect x="19.0832%" y="661" width="1.3859%" height="15" fill="rgb(225,31,38)"/><text x="19.3332%" y="671.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 1.39%)</title><rect x="19.0832%" y="645" width="1.3859%" height="15" fill="rgb(250,208,3)"/><text x="19.3332%" y="655.50"></text></g><g><title>__libc_recv (13 samples, 1.39%)</title><rect x="19.0832%" y="629" width="1.3859%" height="15" fill="rgb(246,54,23)"/><text x="19.3332%" y="639.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 1.28%)</title><rect x="19.1898%" y="613" width="1.2793%" height="15" fill="rgb(243,76,11)"/><text x="19.4398%" y="623.50"></text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="20.3625%" y="597" width="0.1066%" height="15" fill="rgb(245,21,50)"/><text x="20.6125%" y="607.50"></text></g><g><title>std::rt::lang_start_internal (21 samples, 2.24%)</title><rect x="18.3369%" y="901" width="2.2388%" height="15" fill="rgb(228,9,43)"/><text x="18.5869%" y="911.50">s..</text></g><g><title>std::panic::catch_unwind (21 samples, 2.24%)</title><rect x="18.3369%" y="885" width="2.2388%" height="15" fill="rgb(208,100,47)"/><text x="18.5869%" y="895.50">s..</text></g><g><title>std::panicking::try (21 samples, 2.24%)</title><rect x="18.3369%" y="869" width="2.2388%" height="15" fill="rgb(232,26,8)"/><text x="18.5869%" y="879.50">s..</text></g><g><title>std::panicking::try::do_call (21 samples, 2.24%)</title><rect x="18.3369%" y="853" width="2.2388%" height="15" fill="rgb(216,166,38)"/><text x="18.5869%" y="863.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (21 samples, 2.24%)</title><rect x="18.3369%" y="837" width="2.2388%" height="15" fill="rgb(251,202,51)"/><text x="18.5869%" y="847.50">c..</text></g><g><title>std::rt::lang_start::_{{closure}} (21 samples, 2.24%)</title><rect x="18.3369%" y="821" width="2.2388%" height="15" fill="rgb(254,216,34)"/><text x="18.5869%" y="831.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 2.24%)</title><rect x="18.3369%" y="805" width="2.2388%" height="15" fill="rgb(251,32,27)"/><text x="18.5869%" y="815.50">s..</text></g><g><title>lobsters::main (21 samples, 2.24%)</title><rect x="18.3369%" y="789" width="2.2388%" height="15" fill="rgb(208,127,28)"/><text x="18.5869%" y="799.50">l..</text></g><g><title>mysql::conn::Conn::_query (16 samples, 1.71%)</title><rect x="18.8699%" y="773" width="1.7058%" height="15" fill="rgb(224,137,22)"/><text x="19.1199%" y="783.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (16 samples, 1.71%)</title><rect x="18.8699%" y="757" width="1.7058%" height="15" fill="rgb(254,70,32)"/><text x="19.1199%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (16 samples, 1.71%)</title><rect x="18.8699%" y="741" width="1.7058%" height="15" fill="rgb(229,75,37)"/><text x="19.1199%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="20.4691%" y="725" width="0.1066%" height="15" fill="rgb(252,64,23)"/><text x="20.7191%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.32%)</title><rect x="20.5757%" y="901" width="0.3198%" height="15" fill="rgb(232,162,48)"/><text x="20.8257%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.32%)</title><rect x="20.5757%" y="885" width="0.3198%" height="15" fill="rgb(246,160,12)"/><text x="20.8257%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (3 samples, 0.32%)</title><rect x="20.5757%" y="869" width="0.3198%" height="15" fill="rgb(247,166,0)"/><text x="20.8257%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3 samples, 0.32%)</title><rect x="20.5757%" y="853" width="0.3198%" height="15" fill="rgb(249,219,21)"/><text x="20.8257%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.32%)</title><rect x="20.5757%" y="837" width="0.3198%" height="15" fill="rgb(205,209,3)"/><text x="20.8257%" y="847.50"></text></g><g><title>decor::Shim::run_on_tcp (3 samples, 0.32%)</title><rect x="20.5757%" y="821" width="0.3198%" height="15" fill="rgb(243,44,1)"/><text x="20.8257%" y="831.50"></text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (3 samples, 0.32%)</title><rect x="20.5757%" y="805" width="0.3198%" height="15" fill="rgb(206,159,16)"/><text x="20.8257%" y="815.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (3 samples, 0.32%)</title><rect x="20.5757%" y="789" width="0.3198%" height="15" fill="rgb(244,77,30)"/><text x="20.8257%" y="799.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (3 samples, 0.32%)</title><rect x="20.5757%" y="773" width="0.3198%" height="15" fill="rgb(218,69,12)"/><text x="20.8257%" y="783.50"></text></g><g><title>mysql::conn::Conn::_query (3 samples, 0.32%)</title><rect x="20.5757%" y="757" width="0.3198%" height="15" fill="rgb(212,87,7)"/><text x="20.8257%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (3 samples, 0.32%)</title><rect x="20.5757%" y="741" width="0.3198%" height="15" fill="rgb(245,114,25)"/><text x="20.8257%" y="751.50"></text></g><g><title>mysql::conn::Conn::read_packet (3 samples, 0.32%)</title><rect x="20.5757%" y="725" width="0.3198%" height="15" fill="rgb(210,61,42)"/><text x="20.8257%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.32%)</title><rect x="20.5757%" y="709" width="0.3198%" height="15" fill="rgb(211,52,33)"/><text x="20.8257%" y="719.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="20.8955%" y="661" width="0.1066%" height="15" fill="rgb(234,58,33)"/><text x="21.1455%" y="671.50"></text></g><g><title>import_single_range (1 samples, 0.11%)</title><rect x="21.4286%" y="597" width="0.1066%" height="15" fill="rgb(220,115,36)"/><text x="21.6786%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="21.7484%" y="549" width="0.1066%" height="15" fill="rgb(243,153,54)"/><text x="21.9984%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="21.7484%" y="533" width="0.1066%" height="15" fill="rgb(251,47,18)"/><text x="21.9984%" y="543.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="21.7484%" y="517" width="0.1066%" height="15" fill="rgb(242,102,42)"/><text x="21.9984%" y="527.50"></text></g><g><title>lock_sock_nested (3 samples, 0.32%)</title><rect x="21.7484%" y="565" width="0.3198%" height="15" fill="rgb(234,31,38)"/><text x="21.9984%" y="575.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.21%)</title><rect x="21.8550%" y="549" width="0.2132%" height="15" fill="rgb(221,117,51)"/><text x="22.1050%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="21.9616%" y="533" width="0.1066%" height="15" fill="rgb(212,20,18)"/><text x="22.2116%" y="543.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="22.1748%" y="549" width="0.1066%" height="15" fill="rgb(245,133,36)"/><text x="22.4248%" y="559.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="22.2814%" y="549" width="0.1066%" height="15" fill="rgb(212,6,19)"/><text x="22.5314%" y="559.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="22.2814%" y="533" width="0.1066%" height="15" fill="rgb(218,1,36)"/><text x="22.5314%" y="543.50"></text></g><g><title>release_sock (1 samples, 0.11%)</title><rect x="22.3881%" y="549" width="0.1066%" height="15" fill="rgb(246,84,54)"/><text x="22.6381%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="22.3881%" y="533" width="0.1066%" height="15" fill="rgb(242,110,6)"/><text x="22.6381%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="22.3881%" y="517" width="0.1066%" height="15" fill="rgb(214,47,5)"/><text x="22.6381%" y="527.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="22.3881%" y="501" width="0.1066%" height="15" fill="rgb(218,159,25)"/><text x="22.6381%" y="511.50"></text></g><g><title>remove_wait_queue (2 samples, 0.21%)</title><rect x="22.4947%" y="549" width="0.2132%" height="15" fill="rgb(215,211,28)"/><text x="22.7447%" y="559.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.21%)</title><rect x="22.4947%" y="533" width="0.2132%" height="15" fill="rgb(238,59,32)"/><text x="22.7447%" y="543.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="23.3475%" y="469" width="0.1066%" height="15" fill="rgb(226,82,3)"/><text x="23.5975%" y="479.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.43%)</title><rect x="23.2409%" y="485" width="0.4264%" height="15" fill="rgb(240,164,32)"/><text x="23.4909%" y="495.50"></text></g><g><title>ctx_sched_out (2 samples, 0.21%)</title><rect x="23.4542%" y="469" width="0.2132%" height="15" fill="rgb(232,46,7)"/><text x="23.7042%" y="479.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="23.5608%" y="453" width="0.1066%" height="15" fill="rgb(229,129,53)"/><text x="23.8108%" y="463.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.11%)</title><rect x="23.7740%" y="437" width="0.1066%" height="15" fill="rgb(234,188,29)"/><text x="24.0240%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="23.7740%" y="421" width="0.1066%" height="15" fill="rgb(246,141,4)"/><text x="24.0240%" y="431.50"></text></g><g><title>cpuacct_charge (2 samples, 0.21%)</title><rect x="23.8806%" y="437" width="0.2132%" height="15" fill="rgb(229,23,39)"/><text x="24.1306%" y="447.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="23.9872%" y="421" width="0.1066%" height="15" fill="rgb(206,12,3)"/><text x="24.2372%" y="431.50"></text></g><g><title>update_curr (5 samples, 0.53%)</title><rect x="23.6674%" y="453" width="0.5330%" height="15" fill="rgb(252,226,20)"/><text x="23.9174%" y="463.50"></text></g><g><title>update_min_vruntime (1 samples, 0.11%)</title><rect x="24.0938%" y="437" width="0.1066%" height="15" fill="rgb(216,123,35)"/><text x="24.3438%" y="447.50"></text></g><g><title>dequeue_task_fair (6 samples, 0.64%)</title><rect x="23.6674%" y="485" width="0.6397%" height="15" fill="rgb(212,68,40)"/><text x="23.9174%" y="495.50"></text></g><g><title>dequeue_entity (6 samples, 0.64%)</title><rect x="23.6674%" y="469" width="0.6397%" height="15" fill="rgb(254,125,32)"/><text x="23.9174%" y="479.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="24.2004%" y="453" width="0.1066%" height="15" fill="rgb(253,97,22)"/><text x="24.4504%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="24.2004%" y="437" width="0.1066%" height="15" fill="rgb(241,101,14)"/><text x="24.4504%" y="447.50"></text></g><g><title>finish_task_switch (1 samples, 0.11%)</title><rect x="24.3070%" y="485" width="0.1066%" height="15" fill="rgb(238,103,29)"/><text x="24.5570%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.11%)</title><rect x="24.3070%" y="469" width="0.1066%" height="15" fill="rgb(233,195,47)"/><text x="24.5570%" y="479.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.11%)</title><rect x="24.4136%" y="485" width="0.1066%" height="15" fill="rgb(246,218,30)"/><text x="24.6636%" y="495.50"></text></g><g><title>newidle_balance (1 samples, 0.11%)</title><rect x="24.4136%" y="469" width="0.1066%" height="15" fill="rgb(219,145,47)"/><text x="24.6636%" y="479.50"></text></g><g><title>psi_task_change (3 samples, 0.32%)</title><rect x="24.5203%" y="485" width="0.3198%" height="15" fill="rgb(243,12,26)"/><text x="24.7703%" y="495.50"></text></g><g><title>psi_group_change (3 samples, 0.32%)</title><rect x="24.5203%" y="469" width="0.3198%" height="15" fill="rgb(214,87,16)"/><text x="24.7703%" y="479.50"></text></g><g><title>record_times (2 samples, 0.21%)</title><rect x="24.6269%" y="453" width="0.2132%" height="15" fill="rgb(208,99,42)"/><text x="24.8769%" y="463.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.11%)</title><rect x="24.8401%" y="485" width="0.1066%" height="15" fill="rgb(253,99,2)"/><text x="25.0901%" y="495.50"></text></g><g><title>rcu_preempt_deferred_qs (1 samples, 0.11%)</title><rect x="24.8401%" y="469" width="0.1066%" height="15" fill="rgb(220,168,23)"/><text x="25.0901%" y="479.50"></text></g><g><title>uclamp_rq_dec_id (2 samples, 0.21%)</title><rect x="24.9467%" y="485" width="0.2132%" height="15" fill="rgb(242,38,24)"/><text x="25.1967%" y="495.50"></text></g><g><title>sk_wait_data (33 samples, 3.52%)</title><rect x="22.0682%" y="565" width="3.5181%" height="15" fill="rgb(225,182,9)"/><text x="22.3182%" y="575.50">sk_..</text></g><g><title>wait_woken (27 samples, 2.88%)</title><rect x="22.7079%" y="549" width="2.8785%" height="15" fill="rgb(243,178,37)"/><text x="22.9579%" y="559.50">wa..</text></g><g><title>schedule_timeout (24 samples, 2.56%)</title><rect x="23.0277%" y="533" width="2.5586%" height="15" fill="rgb(232,139,19)"/><text x="23.2777%" y="543.50">sc..</text></g><g><title>schedule (24 samples, 2.56%)</title><rect x="23.0277%" y="517" width="2.5586%" height="15" fill="rgb(225,201,24)"/><text x="23.2777%" y="527.50">sc..</text></g><g><title>__schedule (24 samples, 2.56%)</title><rect x="23.0277%" y="501" width="2.5586%" height="15" fill="rgb(221,47,46)"/><text x="23.2777%" y="511.50">__..</text></g><g><title>update_rq_clock (4 samples, 0.43%)</title><rect x="25.1599%" y="485" width="0.4264%" height="15" fill="rgb(249,23,13)"/><text x="25.4099%" y="495.50"></text></g><g><title>_copy_to_iter (1 samples, 0.11%)</title><rect x="25.9062%" y="533" width="0.1066%" height="15" fill="rgb(219,9,5)"/><text x="26.1562%" y="543.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="25.9062%" y="517" width="0.1066%" height="15" fill="rgb(254,171,16)"/><text x="26.1562%" y="527.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="25.9062%" y="501" width="0.1066%" height="15" fill="rgb(230,171,20)"/><text x="26.1562%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (5 samples, 0.53%)</title><rect x="25.5864%" y="565" width="0.5330%" height="15" fill="rgb(210,71,41)"/><text x="25.8364%" y="575.50"></text></g><g><title>__skb_datagram_iter (5 samples, 0.53%)</title><rect x="25.5864%" y="549" width="0.5330%" height="15" fill="rgb(206,173,20)"/><text x="25.8364%" y="559.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="26.0128%" y="533" width="0.1066%" height="15" fill="rgb(233,88,34)"/><text x="26.2628%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="26.0128%" y="517" width="0.1066%" height="15" fill="rgb(223,209,46)"/><text x="26.2628%" y="527.50"></text></g><g><title>inet_recvmsg (46 samples, 4.90%)</title><rect x="21.5352%" y="597" width="4.9041%" height="15" fill="rgb(250,43,18)"/><text x="21.7852%" y="607.50">inet_r..</text></g><g><title>tcp_recvmsg (46 samples, 4.90%)</title><rect x="21.5352%" y="581" width="4.9041%" height="15" fill="rgb(208,13,10)"/><text x="21.7852%" y="591.50">tcp_re..</text></g><g><title>tcp_rcv_space_adjust (3 samples, 0.32%)</title><rect x="26.1194%" y="565" width="0.3198%" height="15" fill="rgb(212,200,36)"/><text x="26.3694%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (50 samples, 5.33%)</title><rect x="21.2154%" y="629" width="5.3305%" height="15" fill="rgb(225,90,30)"/><text x="21.4654%" y="639.50">__x64_s..</text></g><g><title>__sys_recvfrom (50 samples, 5.33%)</title><rect x="21.2154%" y="613" width="5.3305%" height="15" fill="rgb(236,182,39)"/><text x="21.4654%" y="623.50">__sys_r..</text></g><g><title>sock_recvmsg (1 samples, 0.11%)</title><rect x="26.4392%" y="597" width="0.1066%" height="15" fill="rgb(212,144,35)"/><text x="26.6892%" y="607.50"></text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="26.5458%" y="629" width="0.1066%" height="15" fill="rgb(228,63,44)"/><text x="26.7958%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="26.5458%" y="613" width="0.1066%" height="15" fill="rgb(228,109,6)"/><text x="26.7958%" y="623.50"></text></g><g><title>do_syscall_64 (53 samples, 5.65%)</title><rect x="21.1087%" y="645" width="5.6503%" height="15" fill="rgb(238,117,24)"/><text x="21.3587%" y="655.50">do_sysc..</text></g><g><title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="26.6525%" y="629" width="0.1066%" height="15" fill="rgb(242,26,26)"/><text x="26.9025%" y="639.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (61 samples, 6.50%)</title><rect x="20.8955%" y="757" width="6.5032%" height="15" fill="rgb(221,92,48)"/><text x="21.1455%" y="767.50">&lt;std::io:..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (61 samples, 6.50%)</title><rect x="20.8955%" y="741" width="6.5032%" height="15" fill="rgb(209,209,32)"/><text x="21.1455%" y="751.50">&lt;std::net..</text></g><g><title>std::sys_common::net::TcpStream::read (61 samples, 6.50%)</title><rect x="20.8955%" y="725" width="6.5032%" height="15" fill="rgb(221,70,22)"/><text x="21.1455%" y="735.50">std::sys_..</text></g><g><title>std::sys::unix::net::Socket::read (61 samples, 6.50%)</title><rect x="20.8955%" y="709" width="6.5032%" height="15" fill="rgb(248,145,5)"/><text x="21.1455%" y="719.50">std::sys:..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (61 samples, 6.50%)</title><rect x="20.8955%" y="693" width="6.5032%" height="15" fill="rgb(226,116,26)"/><text x="21.1455%" y="703.50">std::sys:..</text></g><g><title>__libc_recv (61 samples, 6.50%)</title><rect x="20.8955%" y="677" width="6.5032%" height="15" fill="rgb(244,5,17)"/><text x="21.1455%" y="687.50">__libc_re..</text></g><g><title>entry_SYSCALL_64 (60 samples, 6.40%)</title><rect x="21.0021%" y="661" width="6.3966%" height="15" fill="rgb(252,159,33)"/><text x="21.2521%" y="671.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.64%)</title><rect x="26.7591%" y="645" width="0.6397%" height="15" fill="rgb(206,71,0)"/><text x="27.0091%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="27.5053%" y="709" width="0.2132%" height="15" fill="rgb(233,118,54)"/><text x="27.7553%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="27.5053%" y="693" width="0.2132%" height="15" fill="rgb(234,83,48)"/><text x="27.7553%" y="703.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (65 samples, 6.93%)</title><rect x="20.8955%" y="837" width="6.9296%" height="15" fill="rgb(228,3,54)"/><text x="21.1455%" y="847.50">&lt;mysql::c..</text></g><g><title>mysql::conn::Conn::_query (65 samples, 6.93%)</title><rect x="20.8955%" y="821" width="6.9296%" height="15" fill="rgb(226,155,13)"/><text x="21.1455%" y="831.50">mysql::co..</text></g><g><title>mysql::conn::Conn::handle_result_set (65 samples, 6.93%)</title><rect x="20.8955%" y="805" width="6.9296%" height="15" fill="rgb(241,28,37)"/><text x="21.1455%" y="815.50">mysql::co..</text></g><g><title>mysql::conn::Conn::read_packet (65 samples, 6.93%)</title><rect x="20.8955%" y="789" width="6.9296%" height="15" fill="rgb(233,93,10)"/><text x="21.1455%" y="799.50">mysql::co..</text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 6.93%)</title><rect x="20.8955%" y="773" width="6.9296%" height="15" fill="rgb(225,113,19)"/><text x="21.1455%" y="783.50">&lt;mysql_co..</text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (4 samples, 0.43%)</title><rect x="27.3987%" y="757" width="0.4264%" height="15" fill="rgb(241,2,18)"/><text x="27.6487%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (4 samples, 0.43%)</title><rect x="27.3987%" y="741" width="0.4264%" height="15" fill="rgb(228,207,21)"/><text x="27.6487%" y="751.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (4 samples, 0.43%)</title><rect x="27.3987%" y="725" width="0.4264%" height="15" fill="rgb(213,211,35)"/><text x="27.6487%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="27.7186%" y="709" width="0.1066%" height="15" fill="rgb(209,83,10)"/><text x="27.9686%" y="719.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.43%)</title><rect x="28.2516%" y="741" width="0.4264%" height="15" fill="rgb(209,164,1)"/><text x="28.5016%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="28.6780%" y="741" width="0.1066%" height="15" fill="rgb(213,184,43)"/><text x="28.9280%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.75%)</title><rect x="28.1450%" y="757" width="0.7463%" height="15" fill="rgb(231,61,34)"/><text x="28.3950%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="28.7846%" y="741" width="0.1066%" height="15" fill="rgb(235,75,3)"/><text x="29.0346%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="28.7846%" y="725" width="0.1066%" height="15" fill="rgb(220,106,47)"/><text x="29.0346%" y="735.50"></text></g><g><title>&lt;mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.32%)</title><rect x="28.8913%" y="757" width="0.3198%" height="15" fill="rgb(210,196,33)"/><text x="29.1413%" y="767.50"></text></g><g><title>mysql_common::proto::codec::PacketCodec::decode (2 samples, 0.21%)</title><rect x="28.9979%" y="741" width="0.2132%" height="15" fill="rgb(229,154,42)"/><text x="29.2479%" y="751.50"></text></g><g><title>mysql_common::proto::codec::PlainPacketCodec::decode (2 samples, 0.21%)</title><rect x="28.9979%" y="725" width="0.2132%" height="15" fill="rgb(228,114,26)"/><text x="29.2479%" y="735.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (2 samples, 0.21%)</title><rect x="28.9979%" y="709" width="0.2132%" height="15" fill="rgb(208,144,1)"/><text x="29.2479%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="29.2111%" y="757" width="0.1066%" height="15" fill="rgb(239,112,37)"/><text x="29.4611%" y="767.50"></text></g><g><title>mysql::conn::Conn::read_packet (17 samples, 1.81%)</title><rect x="27.8252%" y="773" width="1.8124%" height="15" fill="rgb(210,96,50)"/><text x="28.0752%" y="783.50">m..</text></g><g><title>_int_free (3 samples, 0.32%)</title><rect x="29.3177%" y="757" width="0.3198%" height="15" fill="rgb(222,178,2)"/><text x="29.5677%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.32%)</title><rect x="29.6375%" y="757" width="0.3198%" height="15" fill="rgb(226,74,18)"/><text x="29.8875%" y="767.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.32%)</title><rect x="29.6375%" y="741" width="0.3198%" height="15" fill="rgb(225,67,54)"/><text x="29.8875%" y="751.50"></text></g><g><title>[unknown] (237 samples, 25.27%)</title><rect x="4.7974%" y="917" width="25.2665%" height="15" fill="rgb(251,92,32)"/><text x="5.0474%" y="927.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (86 samples, 9.17%)</title><rect x="20.8955%" y="901" width="9.1684%" height="15" fill="rgb(228,149,22)"/><text x="21.1455%" y="911.50">std::sys_comm..</text></g><g><title>decor::Shim::run_on_tcp (86 samples, 9.17%)</title><rect x="20.8955%" y="885" width="9.1684%" height="15" fill="rgb(243,54,13)"/><text x="21.1455%" y="895.50">decor::Shim::..</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (86 samples, 9.17%)</title><rect x="20.8955%" y="869" width="9.1684%" height="15" fill="rgb(243,180,28)"/><text x="21.1455%" y="879.50">msql_srv::Mys..</text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (86 samples, 9.17%)</title><rect x="20.8955%" y="853" width="9.1684%" height="15" fill="rgb(208,167,24)"/><text x="21.1455%" y="863.50">&lt;decor::Shim ..</text></g><g><title>decor::helpers::answer_rows (21 samples, 2.24%)</title><rect x="27.8252%" y="837" width="2.2388%" height="15" fill="rgb(245,73,45)"/><text x="28.0752%" y="847.50">d..</text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 2.24%)</title><rect x="27.8252%" y="821" width="2.2388%" height="15" fill="rgb(237,203,48)"/><text x="28.0752%" y="831.50">&lt;..</text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (21 samples, 2.24%)</title><rect x="27.8252%" y="805" width="2.2388%" height="15" fill="rgb(211,197,16)"/><text x="28.0752%" y="815.50">&lt;..</text></g><g><title>mysql::conn::Conn::next_text (21 samples, 2.24%)</title><rect x="27.8252%" y="789" width="2.2388%" height="15" fill="rgb(243,99,51)"/><text x="28.0752%" y="799.50">m..</text></g><g><title>mysql_common::value::read_text_values (4 samples, 0.43%)</title><rect x="29.6375%" y="773" width="0.4264%" height="15" fill="rgb(215,123,29)"/><text x="29.8875%" y="783.50"></text></g><g><title>mysql_common::value::read_text_value (1 samples, 0.11%)</title><rect x="29.9574%" y="757" width="0.1066%" height="15" fill="rgb(239,186,37)"/><text x="30.2074%" y="767.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (4 samples, 0.43%)</title><rect x="30.4904%" y="725" width="0.4264%" height="15" fill="rgb(252,136,39)"/><text x="30.7404%" y="735.50"></text></g><g><title>_int_free (3 samples, 0.32%)</title><rect x="30.5970%" y="709" width="0.3198%" height="15" fill="rgb(223,213,32)"/><text x="30.8470%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="31.0235%" y="709" width="0.1066%" height="15" fill="rgb(233,115,5)"/><text x="31.2735%" y="719.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="31.1301%" y="645" width="0.1066%" height="15" fill="rgb(207,226,44)"/><text x="31.3801%" y="655.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="32.0896%" y="469" width="0.1066%" height="15" fill="rgb(208,126,0)"/><text x="32.3396%" y="479.50"></text></g><g><title>__sk_dst_check (1 samples, 0.11%)</title><rect x="32.1962%" y="469" width="0.1066%" height="15" fill="rgb(244,66,21)"/><text x="32.4462%" y="479.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.11%)</title><rect x="32.1962%" y="453" width="0.1066%" height="15" fill="rgb(222,97,12)"/><text x="32.4462%" y="463.50"></text></g><g><title>__ip_finish_output (2 samples, 0.21%)</title><rect x="32.3028%" y="453" width="0.2132%" height="15" fill="rgb(219,213,19)"/><text x="32.5528%" y="463.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="33.0490%" y="421" width="0.1066%" height="15" fill="rgb(252,169,30)"/><text x="33.2990%" y="431.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="33.0490%" y="405" width="0.1066%" height="15" fill="rgb(206,32,51)"/><text x="33.2990%" y="415.50"></text></g><g><title>eth_type_trans (1 samples, 0.11%)</title><rect x="33.1557%" y="389" width="0.1066%" height="15" fill="rgb(250,172,42)"/><text x="33.4057%" y="399.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.64%)</title><rect x="32.7292%" y="437" width="0.6397%" height="15" fill="rgb(209,34,43)"/><text x="32.9792%" y="447.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.21%)</title><rect x="33.1557%" y="421" width="0.2132%" height="15" fill="rgb(223,11,35)"/><text x="33.4057%" y="431.50"></text></g><g><title>loopback_xmit (2 samples, 0.21%)</title><rect x="33.1557%" y="405" width="0.2132%" height="15" fill="rgb(251,219,26)"/><text x="33.4057%" y="415.50"></text></g><g><title>sk_free (1 samples, 0.11%)</title><rect x="33.2623%" y="389" width="0.1066%" height="15" fill="rgb(231,119,3)"/><text x="33.5123%" y="399.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="33.4755%" y="325" width="0.1066%" height="15" fill="rgb(216,97,11)"/><text x="33.7255%" y="335.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.21%)</title><rect x="34.1151%" y="245" width="0.2132%" height="15" fill="rgb(223,59,9)"/><text x="34.3651%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="34.5416%" y="133" width="0.1066%" height="15" fill="rgb(233,93,31)"/><text x="34.7916%" y="143.50"></text></g><g><title>psi_task_change (3 samples, 0.32%)</title><rect x="34.6482%" y="117" width="0.3198%" height="15" fill="rgb(239,81,33)"/><text x="34.8982%" y="127.50"></text></g><g><title>psi_group_change (3 samples, 0.32%)</title><rect x="34.6482%" y="101" width="0.3198%" height="15" fill="rgb(213,120,34)"/><text x="34.8982%" y="111.50"></text></g><g><title>record_times (2 samples, 0.21%)</title><rect x="34.7548%" y="85" width="0.2132%" height="15" fill="rgb(243,49,53)"/><text x="35.0048%" y="95.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="34.8614%" y="69" width="0.1066%" height="15" fill="rgb(247,216,33)"/><text x="35.1114%" y="79.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="34.8614%" y="53" width="0.1066%" height="15" fill="rgb(226,26,14)"/><text x="35.1114%" y="63.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="34.8614%" y="37" width="0.1066%" height="15" fill="rgb(215,49,53)"/><text x="35.1114%" y="47.50"></text></g><g><title>enqueue_task (6 samples, 0.64%)</title><rect x="34.6482%" y="133" width="0.6397%" height="15" fill="rgb(245,162,40)"/><text x="34.8982%" y="143.50"></text></g><g><title>uclamp_rq_inc_id (3 samples, 0.32%)</title><rect x="34.9680%" y="117" width="0.3198%" height="15" fill="rgb(229,68,17)"/><text x="35.2180%" y="127.50"></text></g><g><title>account_entity_enqueue (1 samples, 0.11%)</title><rect x="35.3945%" y="101" width="0.1066%" height="15" fill="rgb(213,182,10)"/><text x="35.6445%" y="111.50"></text></g><g><title>reweight_entity (1 samples, 0.11%)</title><rect x="35.5011%" y="101" width="0.1066%" height="15" fill="rgb(245,125,30)"/><text x="35.7511%" y="111.50"></text></g><g><title>update_cfs_group (2 samples, 0.21%)</title><rect x="35.6077%" y="101" width="0.2132%" height="15" fill="rgb(232,202,2)"/><text x="35.8577%" y="111.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="36.0341%" y="85" width="0.1066%" height="15" fill="rgb(237,140,51)"/><text x="36.2841%" y="95.50"></text></g><g><title>enqueue_task_fair (9 samples, 0.96%)</title><rect x="35.2878%" y="133" width="0.9595%" height="15" fill="rgb(236,157,25)"/><text x="35.5378%" y="143.50"></text></g><g><title>enqueue_entity (9 samples, 0.96%)</title><rect x="35.2878%" y="117" width="0.9595%" height="15" fill="rgb(219,209,0)"/><text x="35.5378%" y="127.50"></text></g><g><title>update_load_avg (4 samples, 0.43%)</title><rect x="35.8209%" y="101" width="0.4264%" height="15" fill="rgb(240,116,54)"/><text x="36.0709%" y="111.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.11%)</title><rect x="36.1407%" y="85" width="0.1066%" height="15" fill="rgb(216,10,36)"/><text x="36.3907%" y="95.50"></text></g><g><title>sock_def_readable (18 samples, 1.92%)</title><rect x="34.4350%" y="213" width="1.9190%" height="15" fill="rgb(222,72,44)"/><text x="34.6850%" y="223.50">s..</text></g><g><title>__wake_up_common_lock (17 samples, 1.81%)</title><rect x="34.5416%" y="197" width="1.8124%" height="15" fill="rgb(232,159,9)"/><text x="34.7916%" y="207.50">_..</text></g><g><title>__wake_up_common (17 samples, 1.81%)</title><rect x="34.5416%" y="181" width="1.8124%" height="15" fill="rgb(210,39,32)"/><text x="34.7916%" y="191.50">_..</text></g><g><title>pollwake (17 samples, 1.81%)</title><rect x="34.5416%" y="165" width="1.8124%" height="15" fill="rgb(216,194,45)"/><text x="34.7916%" y="175.50">p..</text></g><g><title>try_to_wake_up (17 samples, 1.81%)</title><rect x="34.5416%" y="149" width="1.8124%" height="15" fill="rgb(218,18,35)"/><text x="34.7916%" y="159.50">t..</text></g><g><title>update_rq_clock (1 samples, 0.11%)</title><rect x="36.2473%" y="133" width="0.1066%" height="15" fill="rgb(207,83,51)"/><text x="36.4973%" y="143.50"></text></g><g><title>kfree (3 samples, 0.32%)</title><rect x="36.7804%" y="181" width="0.3198%" height="15" fill="rgb(225,63,43)"/><text x="37.0304%" y="191.50"></text></g><g><title>__slab_free (3 samples, 0.32%)</title><rect x="36.7804%" y="165" width="0.3198%" height="15" fill="rgb(207,57,36)"/><text x="37.0304%" y="175.50"></text></g><g><title>__kfree_skb (5 samples, 0.53%)</title><rect x="36.7804%" y="197" width="0.5330%" height="15" fill="rgb(216,99,33)"/><text x="37.0304%" y="207.50"></text></g><g><title>skb_release_data (2 samples, 0.21%)</title><rect x="37.1002%" y="181" width="0.2132%" height="15" fill="rgb(225,42,16)"/><text x="37.3502%" y="191.50"></text></g><g><title>rb_erase (3 samples, 0.32%)</title><rect x="37.3134%" y="197" width="0.3198%" height="15" fill="rgb(220,201,45)"/><text x="37.5634%" y="207.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.11%)</title><rect x="37.6333%" y="197" width="0.1066%" height="15" fill="rgb(225,33,4)"/><text x="37.8833%" y="207.50"></text></g><g><title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="37.7399%" y="197" width="0.1066%" height="15" fill="rgb(224,33,50)"/><text x="37.9899%" y="207.50"></text></g><g><title>tcp_ack (15 samples, 1.60%)</title><rect x="36.3539%" y="213" width="1.5991%" height="15" fill="rgb(246,198,51)"/><text x="36.6039%" y="223.50"></text></g><g><title>tcp_xmit_recovery (1 samples, 0.11%)</title><rect x="37.8465%" y="197" width="0.1066%" height="15" fill="rgb(205,22,4)"/><text x="38.0965%" y="207.50"></text></g><g><title>ip_local_deliver (42 samples, 4.48%)</title><rect x="33.5821%" y="309" width="4.4776%" height="15" fill="rgb(206,3,8)"/><text x="33.8321%" y="319.50">ip_lo..</text></g><g><title>ip_local_deliver_finish (42 samples, 4.48%)</title><rect x="33.5821%" y="293" width="4.4776%" height="15" fill="rgb(251,23,15)"/><text x="33.8321%" y="303.50">ip_lo..</text></g><g><title>ip_protocol_deliver_rcu (40 samples, 4.26%)</title><rect x="33.7953%" y="277" width="4.2644%" height="15" fill="rgb(252,88,28)"/><text x="34.0453%" y="287.50">ip_pr..</text></g><g><title>tcp_v4_rcv (38 samples, 4.05%)</title><rect x="34.0085%" y="261" width="4.0512%" height="15" fill="rgb(212,127,14)"/><text x="34.2585%" y="271.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (35 samples, 3.73%)</title><rect x="34.3284%" y="245" width="3.7313%" height="15" fill="rgb(247,145,37)"/><text x="34.5784%" y="255.50">tcp_..</text></g><g><title>tcp_rcv_established (35 samples, 3.73%)</title><rect x="34.3284%" y="229" width="3.7313%" height="15" fill="rgb(209,117,53)"/><text x="34.5784%" y="239.50">tcp_..</text></g><g><title>tcp_event_data_recv (1 samples, 0.11%)</title><rect x="37.9531%" y="213" width="0.1066%" height="15" fill="rgb(212,90,42)"/><text x="38.2031%" y="223.50"></text></g><g><title>__local_bh_enable_ip (45 samples, 4.80%)</title><rect x="33.3689%" y="437" width="4.7974%" height="15" fill="rgb(218,164,37)"/><text x="33.6189%" y="447.50">__loca..</text></g><g><title>do_softirq (45 samples, 4.80%)</title><rect x="33.3689%" y="421" width="4.7974%" height="15" fill="rgb(246,65,34)"/><text x="33.6189%" y="431.50">do_sof..</text></g><g><title>do_softirq_own_stack (45 samples, 4.80%)</title><rect x="33.3689%" y="405" width="4.7974%" height="15" fill="rgb(231,100,33)"/><text x="33.6189%" y="415.50">do_sof..</text></g><g><title>__do_softirq (45 samples, 4.80%)</title><rect x="33.3689%" y="389" width="4.7974%" height="15" fill="rgb(228,126,14)"/><text x="33.6189%" y="399.50">__do_s..</text></g><g><title>net_rx_action (45 samples, 4.80%)</title><rect x="33.3689%" y="373" width="4.7974%" height="15" fill="rgb(215,173,21)"/><text x="33.6189%" y="383.50">net_rx..</text></g><g><title>process_backlog (45 samples, 4.80%)</title><rect x="33.3689%" y="357" width="4.7974%" height="15" fill="rgb(210,6,40)"/><text x="33.6189%" y="367.50">proces..</text></g><g><title>__netif_receive_skb_one_core (45 samples, 4.80%)</title><rect x="33.3689%" y="341" width="4.7974%" height="15" fill="rgb(212,48,18)"/><text x="33.6189%" y="351.50">__neti..</text></g><g><title>ip_rcv (43 samples, 4.58%)</title><rect x="33.5821%" y="325" width="4.5842%" height="15" fill="rgb(230,214,11)"/><text x="33.8321%" y="335.50">ip_rcv</text></g><g><title>ip_rcv_core (1 samples, 0.11%)</title><rect x="38.0597%" y="309" width="0.1066%" height="15" fill="rgb(254,105,39)"/><text x="38.3097%" y="319.50"></text></g><g><title>ip_finish_output2 (54 samples, 5.76%)</title><rect x="32.5160%" y="453" width="5.7569%" height="15" fill="rgb(245,158,5)"/><text x="32.7660%" y="463.50">ip_fini..</text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="38.1663%" y="437" width="0.1066%" height="15" fill="rgb(249,208,11)"/><text x="38.4163%" y="447.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="38.1663%" y="421" width="0.1066%" height="15" fill="rgb(210,39,28)"/><text x="38.4163%" y="431.50"></text></g><g><title>__ip_queue_xmit (60 samples, 6.40%)</title><rect x="32.0896%" y="485" width="6.3966%" height="15" fill="rgb(211,56,53)"/><text x="32.3396%" y="495.50">__ip_que..</text></g><g><title>ip_output (58 samples, 6.18%)</title><rect x="32.3028%" y="469" width="6.1834%" height="15" fill="rgb(226,201,30)"/><text x="32.5528%" y="479.50">ip_output</text></g><g><title>ip_finish_output (2 samples, 0.21%)</title><rect x="38.2729%" y="453" width="0.2132%" height="15" fill="rgb(239,101,34)"/><text x="38.5229%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.21%)</title><rect x="38.2729%" y="437" width="0.2132%" height="15" fill="rgb(226,209,5)"/><text x="38.5229%" y="447.50"></text></g><g><title>tcp_rate_skb_sent (1 samples, 0.11%)</title><rect x="38.4861%" y="485" width="0.1066%" height="15" fill="rgb(250,105,47)"/><text x="38.7361%" y="495.50"></text></g><g><title>tcp_update_skb_after_send (1 samples, 0.11%)</title><rect x="38.5928%" y="485" width="0.1066%" height="15" fill="rgb(230,72,3)"/><text x="38.8428%" y="495.50"></text></g><g><title>__tcp_transmit_skb (64 samples, 6.82%)</title><rect x="31.9829%" y="501" width="6.8230%" height="15" fill="rgb(232,218,39)"/><text x="32.2329%" y="511.50">__tcp_tra..</text></g><g><title>tcp_v4_send_check (1 samples, 0.11%)</title><rect x="38.6994%" y="485" width="0.1066%" height="15" fill="rgb(248,166,6)"/><text x="38.9494%" y="495.50"></text></g><g><title>__tcp_push_pending_frames (68 samples, 7.25%)</title><rect x="31.7697%" y="533" width="7.2495%" height="15" fill="rgb(247,89,20)"/><text x="32.0197%" y="543.50">__tcp_push..</text></g><g><title>tcp_write_xmit (68 samples, 7.25%)</title><rect x="31.7697%" y="517" width="7.2495%" height="15" fill="rgb(248,130,54)"/><text x="32.0197%" y="527.50">tcp_write_..</text></g><g><title>tcp_event_new_data_sent (2 samples, 0.21%)</title><rect x="38.8060%" y="501" width="0.2132%" height="15" fill="rgb(234,196,4)"/><text x="39.0560%" y="511.50"></text></g><g><title>tcp_rearm_rto (2 samples, 0.21%)</title><rect x="38.8060%" y="485" width="0.2132%" height="15" fill="rgb(250,143,31)"/><text x="39.0560%" y="495.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="39.2324%" y="501" width="0.1066%" height="15" fill="rgb(211,110,34)"/><text x="39.4824%" y="511.50"></text></g><g><title>kmalloc_slab (1 samples, 0.11%)</title><rect x="39.2324%" y="485" width="0.1066%" height="15" fill="rgb(215,124,48)"/><text x="39.4824%" y="495.50"></text></g><g><title>sk_stream_alloc_skb (6 samples, 0.64%)</title><rect x="39.0192%" y="533" width="0.6397%" height="15" fill="rgb(216,46,13)"/><text x="39.2692%" y="543.50"></text></g><g><title>__alloc_skb (6 samples, 0.64%)</title><rect x="39.0192%" y="517" width="0.6397%" height="15" fill="rgb(205,184,25)"/><text x="39.2692%" y="527.50"></text></g><g><title>__ksize (3 samples, 0.32%)</title><rect x="39.3390%" y="501" width="0.3198%" height="15" fill="rgb(228,1,10)"/><text x="39.5890%" y="511.50"></text></g><g><title>tcp_rate_check_app_limited (1 samples, 0.11%)</title><rect x="39.6588%" y="533" width="0.1066%" height="15" fill="rgb(213,116,27)"/><text x="39.9088%" y="543.50"></text></g><g><title>sock_sendmsg (81 samples, 8.64%)</title><rect x="31.2367%" y="581" width="8.6354%" height="15" fill="rgb(241,95,50)"/><text x="31.4867%" y="591.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (81 samples, 8.64%)</title><rect x="31.2367%" y="565" width="8.6354%" height="15" fill="rgb(238,48,32)"/><text x="31.4867%" y="575.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (81 samples, 8.64%)</title><rect x="31.2367%" y="549" width="8.6354%" height="15" fill="rgb(235,113,49)"/><text x="31.4867%" y="559.50">tcp_sendmsg_..</text></g><g><title>tcp_send_mss (1 samples, 0.11%)</title><rect x="39.7655%" y="533" width="0.1066%" height="15" fill="rgb(205,127,43)"/><text x="40.0155%" y="543.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="39.7655%" y="517" width="0.1066%" height="15" fill="rgb(250,162,2)"/><text x="40.0155%" y="527.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="39.7655%" y="501" width="0.1066%" height="15" fill="rgb(220,13,41)"/><text x="40.0155%" y="511.50"></text></g><g><title>__x64_sys_sendto (83 samples, 8.85%)</title><rect x="31.2367%" y="613" width="8.8486%" height="15" fill="rgb(249,221,25)"/><text x="31.4867%" y="623.50">__x64_sys_se..</text></g><g><title>__sys_sendto (83 samples, 8.85%)</title><rect x="31.2367%" y="597" width="8.8486%" height="15" fill="rgb(215,208,19)"/><text x="31.4867%" y="607.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.21%)</title><rect x="39.8721%" y="581" width="0.2132%" height="15" fill="rgb(236,175,2)"/><text x="40.1221%" y="591.50"></text></g><g><title>__fget_light (2 samples, 0.21%)</title><rect x="39.8721%" y="565" width="0.2132%" height="15" fill="rgb(241,52,2)"/><text x="40.1221%" y="575.50"></text></g><g><title>__fget_files (2 samples, 0.21%)</title><rect x="39.8721%" y="549" width="0.2132%" height="15" fill="rgb(248,140,14)"/><text x="40.1221%" y="559.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="39.9787%" y="533" width="0.1066%" height="15" fill="rgb(253,22,42)"/><text x="40.2287%" y="543.50"></text></g><g><title>syscall_slow_exit_work (4 samples, 0.43%)</title><rect x="40.0853%" y="613" width="0.4264%" height="15" fill="rgb(234,61,47)"/><text x="40.3353%" y="623.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.21%)</title><rect x="40.2985%" y="597" width="0.2132%" height="15" fill="rgb(208,226,15)"/><text x="40.5485%" y="607.50"></text></g><g><title>do_syscall_64 (89 samples, 9.49%)</title><rect x="31.2367%" y="629" width="9.4883%" height="15" fill="rgb(217,221,4)"/><text x="31.4867%" y="639.50">do_syscall_64</text></g><g><title>syscall_trace_enter (2 samples, 0.21%)</title><rect x="40.5117%" y="613" width="0.2132%" height="15" fill="rgb(212,174,34)"/><text x="40.7617%" y="623.50"></text></g><g><title>__audit_syscall_entry (2 samples, 0.21%)</title><rect x="40.5117%" y="597" width="0.2132%" height="15" fill="rgb(253,83,4)"/><text x="40.7617%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (92 samples, 9.81%)</title><rect x="31.2367%" y="645" width="9.8081%" height="15" fill="rgb(250,195,49)"/><text x="31.4867%" y="655.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (3 samples, 0.32%)</title><rect x="40.7249%" y="629" width="0.3198%" height="15" fill="rgb(241,192,25)"/><text x="40.9749%" y="639.50"></text></g><g><title>__libc_send (95 samples, 10.13%)</title><rect x="31.1301%" y="661" width="10.1279%" height="15" fill="rgb(208,124,10)"/><text x="31.3801%" y="671.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.21%)</title><rect x="41.0448%" y="645" width="0.2132%" height="15" fill="rgb(222,33,0)"/><text x="41.2948%" y="655.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (104 samples, 11.09%)</title><rect x="30.2772%" y="757" width="11.0874%" height="15" fill="rgb(234,209,28)"/><text x="30.5272%" y="767.50">&lt;mysql::conn::Co..</text></g><g><title>mysql::conn::Conn::_query (102 samples, 10.87%)</title><rect x="30.4904%" y="741" width="10.8742%" height="15" fill="rgb(224,11,23)"/><text x="30.7404%" y="751.50">mysql::conn::Con..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (98 samples, 10.45%)</title><rect x="30.9168%" y="725" width="10.4478%" height="15" fill="rgb(232,99,1)"/><text x="31.1668%" y="735.50">mysql_common::p..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (96 samples, 10.23%)</title><rect x="31.1301%" y="709" width="10.2345%" height="15" fill="rgb(237,95,45)"/><text x="31.3801%" y="719.50">std::io::buffer..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (96 samples, 10.23%)</title><rect x="31.1301%" y="693" width="10.2345%" height="15" fill="rgb(208,109,11)"/><text x="31.3801%" y="703.50">&lt;std::net::tcp:..</text></g><g><title>std::sys_common::net::TcpStream::write (96 samples, 10.23%)</title><rect x="31.1301%" y="677" width="10.2345%" height="15" fill="rgb(216,190,48)"/><text x="31.3801%" y="687.50">std::sys_common..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.11%)</title><rect x="41.2580%" y="661" width="0.1066%" height="15" fill="rgb(251,171,36)"/><text x="41.5080%" y="671.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.11%)</title><rect x="41.2580%" y="645" width="0.1066%" height="15" fill="rgb(230,62,22)"/><text x="41.5080%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="41.3646%" y="757" width="0.1066%" height="15" fill="rgb(225,114,35)"/><text x="41.6146%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="41.4712%" y="757" width="0.1066%" height="15" fill="rgb(215,118,42)"/><text x="41.7212%" y="767.50"></text></g><g><title>&lt;sql_parser::ast::defs::value::Value as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="41.7910%" y="693" width="0.1066%" height="15" fill="rgb(243,119,21)"/><text x="42.0410%" y="703.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="41.7910%" y="677" width="0.1066%" height="15" fill="rgb(252,177,53)"/><text x="42.0410%" y="687.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.21%)</title><rect x="41.7910%" y="725" width="0.2132%" height="15" fill="rgb(237,209,29)"/><text x="42.0410%" y="735.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Values as sql_parser::ast::display::AstDisplay&gt;::fmt (2 samples, 0.21%)</title><rect x="41.7910%" y="709" width="0.2132%" height="15" fill="rgb(212,65,23)"/><text x="42.0410%" y="719.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="41.8977%" y="693" width="0.1066%" height="15" fill="rgb(230,222,46)"/><text x="42.1477%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="41.8977%" y="677" width="0.1066%" height="15" fill="rgb(215,135,32)"/><text x="42.1477%" y="687.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="42.1109%" y="597" width="0.1066%" height="15" fill="rgb(246,101,22)"/><text x="42.3609%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="42.1109%" y="581" width="0.1066%" height="15" fill="rgb(206,107,13)"/><text x="42.3609%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="42.1109%" y="565" width="0.1066%" height="15" fill="rgb(250,100,44)"/><text x="42.3609%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="42.1109%" y="549" width="0.1066%" height="15" fill="rgb(231,147,38)"/><text x="42.3609%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="42.1109%" y="533" width="0.1066%" height="15" fill="rgb(229,8,40)"/><text x="42.3609%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="42.1109%" y="517" width="0.1066%" height="15" fill="rgb(221,135,30)"/><text x="42.3609%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="42.1109%" y="501" width="0.1066%" height="15" fill="rgb(249,193,18)"/><text x="42.3609%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="42.1109%" y="485" width="0.1066%" height="15" fill="rgb(209,133,39)"/><text x="42.3609%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="42.1109%" y="469" width="0.1066%" height="15" fill="rgb(232,100,14)"/><text x="42.3609%" y="479.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (5 samples, 0.53%)</title><rect x="42.1109%" y="645" width="0.5330%" height="15" fill="rgb(224,185,1)"/><text x="42.3609%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (5 samples, 0.53%)</title><rect x="42.1109%" y="629" width="0.5330%" height="15" fill="rgb(223,139,8)"/><text x="42.3609%" y="639.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.53%)</title><rect x="42.1109%" y="613" width="0.5330%" height="15" fill="rgb(232,213,38)"/><text x="42.3609%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.43%)</title><rect x="42.2175%" y="597" width="0.4264%" height="15" fill="rgb(207,94,22)"/><text x="42.4675%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.32%)</title><rect x="42.3241%" y="581" width="0.3198%" height="15" fill="rgb(219,183,54)"/><text x="42.5741%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.32%)</title><rect x="42.3241%" y="565" width="0.3198%" height="15" fill="rgb(216,185,54)"/><text x="42.5741%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="42.6439%" y="629" width="0.1066%" height="15" fill="rgb(254,217,39)"/><text x="42.8939%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="42.7505%" y="629" width="0.1066%" height="15" fill="rgb(240,178,23)"/><text x="43.0005%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.85%)</title><rect x="42.1109%" y="661" width="0.8529%" height="15" fill="rgb(218,11,47)"/><text x="42.3609%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (3 samples, 0.32%)</title><rect x="42.6439%" y="645" width="0.3198%" height="15" fill="rgb(218,51,51)"/><text x="42.8939%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="42.8571%" y="629" width="0.1066%" height="15" fill="rgb(238,126,27)"/><text x="43.1071%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.11%)</title><rect x="42.8571%" y="613" width="0.1066%" height="15" fill="rgb(249,202,22)"/><text x="43.1071%" y="623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="43.0704%" y="613" width="0.1066%" height="15" fill="rgb(254,195,49)"/><text x="43.3204%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="43.0704%" y="597" width="0.1066%" height="15" fill="rgb(208,123,14)"/><text x="43.3204%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (4 samples, 0.43%)</title><rect x="42.9638%" y="661" width="0.4264%" height="15" fill="rgb(224,200,8)"/><text x="43.2138%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (4 samples, 0.43%)</title><rect x="42.9638%" y="645" width="0.4264%" height="15" fill="rgb(217,61,36)"/><text x="43.2138%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.32%)</title><rect x="43.0704%" y="629" width="0.3198%" height="15" fill="rgb(206,35,45)"/><text x="43.3204%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (2 samples, 0.21%)</title><rect x="43.1770%" y="613" width="0.2132%" height="15" fill="rgb(217,65,33)"/><text x="43.4270%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (2 samples, 0.21%)</title><rect x="43.1770%" y="597" width="0.2132%" height="15" fill="rgb(222,158,48)"/><text x="43.4270%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.21%)</title><rect x="43.1770%" y="581" width="0.2132%" height="15" fill="rgb(254,2,54)"/><text x="43.4270%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="43.3902%" y="645" width="0.1066%" height="15" fill="rgb(250,143,38)"/><text x="43.6402%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="43.3902%" y="629" width="0.1066%" height="15" fill="rgb(248,25,0)"/><text x="43.6402%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="43.3902%" y="613" width="0.1066%" height="15" fill="rgb(206,152,27)"/><text x="43.6402%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (15 samples, 1.60%)</title><rect x="42.0043%" y="677" width="1.5991%" height="15" fill="rgb(240,77,30)"/><text x="42.2543%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (2 samples, 0.21%)</title><rect x="43.3902%" y="661" width="0.2132%" height="15" fill="rgb(231,5,3)"/><text x="43.6402%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="43.4968%" y="645" width="0.1066%" height="15" fill="rgb(207,226,32)"/><text x="43.7468%" y="655.50"></text></g><g><title>&lt;&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt::suffix::Suffix as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="43.6034%" y="661" width="0.1066%" height="15" fill="rgb(222,207,47)"/><text x="43.8534%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="43.6034%" y="645" width="0.1066%" height="15" fill="rgb(229,115,45)"/><text x="43.8534%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="43.8166%" y="565" width="0.1066%" height="15" fill="rgb(224,191,6)"/><text x="44.0666%" y="575.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="43.8166%" y="581" width="0.2132%" height="15" fill="rgb(230,227,24)"/><text x="44.0666%" y="591.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="43.9232%" y="565" width="0.1066%" height="15" fill="rgb(228,80,19)"/><text x="44.1732%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="43.9232%" y="549" width="0.1066%" height="15" fill="rgb(247,229,0)"/><text x="44.1732%" y="559.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="44.0299%" y="581" width="0.1066%" height="15" fill="rgb(237,194,15)"/><text x="44.2799%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="44.0299%" y="565" width="0.1066%" height="15" fill="rgb(219,203,20)"/><text x="44.2799%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.75%)</title><rect x="43.7100%" y="597" width="0.7463%" height="15" fill="rgb(234,128,8)"/><text x="43.9600%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (3 samples, 0.32%)</title><rect x="44.1365%" y="581" width="0.3198%" height="15" fill="rgb(248,202,8)"/><text x="44.3865%" y="591.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="44.3497%" y="565" width="0.1066%" height="15" fill="rgb(206,104,37)"/><text x="44.5997%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="44.3497%" y="549" width="0.1066%" height="15" fill="rgb(223,8,27)"/><text x="44.5997%" y="559.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.85%)</title><rect x="43.7100%" y="629" width="0.8529%" height="15" fill="rgb(216,217,28)"/><text x="43.9600%" y="639.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (8 samples, 0.85%)</title><rect x="43.7100%" y="613" width="0.8529%" height="15" fill="rgb(249,199,1)"/><text x="43.9600%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.11%)</title><rect x="44.4563%" y="597" width="0.1066%" height="15" fill="rgb(240,85,17)"/><text x="44.7063%" y="607.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="44.5629%" y="613" width="0.1066%" height="15" fill="rgb(206,108,45)"/><text x="44.8129%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="44.6695%" y="613" width="0.1066%" height="15" fill="rgb(245,210,41)"/><text x="44.9195%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="44.7761%" y="613" width="0.2132%" height="15" fill="rgb(206,13,37)"/><text x="45.0261%" y="623.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.21%)</title><rect x="44.7761%" y="597" width="0.2132%" height="15" fill="rgb(250,61,18)"/><text x="45.0261%" y="607.50"></text></g><g><title>_int_realloc (2 samples, 0.21%)</title><rect x="44.7761%" y="581" width="0.2132%" height="15" fill="rgb(235,172,48)"/><text x="45.0261%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="44.7761%" y="565" width="0.2132%" height="15" fill="rgb(249,201,17)"/><text x="45.0261%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="44.9893%" y="581" width="0.1066%" height="15" fill="rgb(219,208,6)"/><text x="45.2393%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (14 samples, 1.49%)</title><rect x="43.7100%" y="645" width="1.4925%" height="15" fill="rgb(248,31,23)"/><text x="43.9600%" y="655.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.64%)</title><rect x="44.5629%" y="629" width="0.6397%" height="15" fill="rgb(245,15,42)"/><text x="44.8129%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="44.9893%" y="613" width="0.2132%" height="15" fill="rgb(222,217,39)"/><text x="45.2393%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.21%)</title><rect x="44.9893%" y="597" width="0.2132%" height="15" fill="rgb(210,219,27)"/><text x="45.2393%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="45.0959%" y="581" width="0.1066%" height="15" fill="rgb(252,166,36)"/><text x="45.3459%" y="591.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="45.3092%" y="597" width="0.1066%" height="15" fill="rgb(245,132,34)"/><text x="45.5592%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="45.5224%" y="549" width="0.2132%" height="15" fill="rgb(236,54,3)"/><text x="45.7724%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.53%)</title><rect x="45.3092%" y="613" width="0.5330%" height="15" fill="rgb(241,173,43)"/><text x="45.5592%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.43%)</title><rect x="45.4158%" y="597" width="0.4264%" height="15" fill="rgb(215,190,9)"/><text x="45.6658%" y="607.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (4 samples, 0.43%)</title><rect x="45.4158%" y="581" width="0.4264%" height="15" fill="rgb(242,101,16)"/><text x="45.6658%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.43%)</title><rect x="45.4158%" y="565" width="0.4264%" height="15" fill="rgb(223,190,21)"/><text x="45.6658%" y="575.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table::{{closure}} (1 samples, 0.11%)</title><rect x="45.7356%" y="549" width="0.1066%" height="15" fill="rgb(215,228,25)"/><text x="45.9856%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for char&gt;::cmp (1 samples, 0.11%)</title><rect x="45.7356%" y="533" width="0.1066%" height="15" fill="rgb(225,36,22)"/><text x="45.9856%" y="543.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.75%)</title><rect x="45.2026%" y="645" width="0.7463%" height="15" fill="rgb(251,106,46)"/><text x="45.4526%" y="655.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.75%)</title><rect x="45.2026%" y="629" width="0.7463%" height="15" fill="rgb(208,90,1)"/><text x="45.4526%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.11%)</title><rect x="45.8422%" y="613" width="0.1066%" height="15" fill="rgb(243,10,4)"/><text x="46.0922%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="45.8422%" y="597" width="0.1066%" height="15" fill="rgb(212,137,27)"/><text x="46.0922%" y="607.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.32%)</title><rect x="46.0554%" y="629" width="0.3198%" height="15" fill="rgb(231,220,49)"/><text x="46.3054%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="46.2687%" y="613" width="0.1066%" height="15" fill="rgb(237,96,20)"/><text x="46.5187%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="46.3753%" y="613" width="0.1066%" height="15" fill="rgb(239,229,30)"/><text x="46.6253%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="46.3753%" y="597" width="0.1066%" height="15" fill="rgb(219,65,33)"/><text x="46.6253%" y="607.50"></text></g><g><title>&lt;sql_parser::ast::defs::expr::Expr as sql_parser::ast::display::AstDisplay&gt;::fmt (27 samples, 2.88%)</title><rect x="43.7100%" y="661" width="2.8785%" height="15" fill="rgb(243,134,7)"/><text x="43.9600%" y="671.50">&lt;s..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.64%)</title><rect x="45.9488%" y="645" width="0.6397%" height="15" fill="rgb(216,177,54)"/><text x="46.1988%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.21%)</title><rect x="46.3753%" y="629" width="0.2132%" height="15" fill="rgb(211,160,20)"/><text x="46.6253%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.11%)</title><rect x="46.4819%" y="613" width="0.1066%" height="15" fill="rgb(239,85,39)"/><text x="46.7319%" y="623.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (1 samples, 0.11%)</title><rect x="46.5885%" y="661" width="0.1066%" height="15" fill="rgb(232,125,22)"/><text x="46.8385%" y="671.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="46.5885%" y="645" width="0.1066%" height="15" fill="rgb(244,57,34)"/><text x="46.8385%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="46.5885%" y="629" width="0.1066%" height="15" fill="rgb(214,203,32)"/><text x="46.8385%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="46.5885%" y="613" width="0.1066%" height="15" fill="rgb(207,58,43)"/><text x="46.8385%" y="623.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="46.9083%" y="645" width="0.1066%" height="15" fill="rgb(215,193,15)"/><text x="47.1583%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="46.9083%" y="629" width="0.1066%" height="15" fill="rgb(232,15,44)"/><text x="47.1583%" y="639.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::Join as sql_parser::ast::display::AstDisplay&gt;::fmt (33 samples, 3.52%)</title><rect x="43.6034%" y="677" width="3.5181%" height="15" fill="rgb(212,3,48)"/><text x="43.8534%" y="687.50">&lt;sq..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (4 samples, 0.43%)</title><rect x="46.6951%" y="661" width="0.4264%" height="15" fill="rgb(218,128,7)"/><text x="46.9451%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="47.0149%" y="645" width="0.1066%" height="15" fill="rgb(226,216,39)"/><text x="47.2649%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (1 samples, 0.11%)</title><rect x="47.1215%" y="597" width="0.1066%" height="15" fill="rgb(243,47,51)"/><text x="47.3715%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="47.1215%" y="613" width="0.2132%" height="15" fill="rgb(241,183,40)"/><text x="47.3715%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="47.2281%" y="597" width="0.1066%" height="15" fill="rgb(231,217,32)"/><text x="47.4781%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="47.2281%" y="581" width="0.1066%" height="15" fill="rgb(229,61,38)"/><text x="47.4781%" y="591.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.11%)</title><rect x="47.3348%" y="613" width="0.1066%" height="15" fill="rgb(225,210,5)"/><text x="47.5848%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.11%)</title><rect x="47.3348%" y="597" width="0.1066%" height="15" fill="rgb(231,79,45)"/><text x="47.5848%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="47.3348%" y="581" width="0.1066%" height="15" fill="rgb(224,100,7)"/><text x="47.5848%" y="591.50"></text></g><g><title>&lt;sql_parser::ast::defs::name::Ident as sql_parser::ast::display::AstDisplay&gt;::fmt (7 samples, 0.75%)</title><rect x="47.1215%" y="661" width="0.7463%" height="15" fill="rgb(241,198,18)"/><text x="47.3715%" y="671.50"></text></g><g><title>sql_parser::ast::defs::name::Ident::can_be_printed_bare (7 samples, 0.75%)</title><rect x="47.1215%" y="645" width="0.7463%" height="15" fill="rgb(252,97,53)"/><text x="47.3715%" y="655.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (7 samples, 0.75%)</title><rect x="47.1215%" y="629" width="0.7463%" height="15" fill="rgb(220,88,7)"/><text x="47.3715%" y="639.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (4 samples, 0.43%)</title><rect x="47.4414%" y="613" width="0.4264%" height="15" fill="rgb(213,176,14)"/><text x="47.6914%" y="623.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (3 samples, 0.32%)</title><rect x="47.5480%" y="597" width="0.3198%" height="15" fill="rgb(246,73,7)"/><text x="47.7980%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.32%)</title><rect x="47.5480%" y="581" width="0.3198%" height="15" fill="rgb(245,64,36)"/><text x="47.7980%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="47.6546%" y="565" width="0.2132%" height="15" fill="rgb(245,80,10)"/><text x="47.9046%" y="575.50"></text></g><g><title>&lt;sql_parser::ast::defs::query::TableFactor as sql_parser::ast::display::AstDisplay&gt;::fmt (8 samples, 0.85%)</title><rect x="47.1215%" y="677" width="0.8529%" height="15" fill="rgb(232,107,50)"/><text x="47.3715%" y="687.50"></text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (1 samples, 0.11%)</title><rect x="47.8678%" y="661" width="0.1066%" height="15" fill="rgb(253,3,0)"/><text x="48.1178%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="47.8678%" y="645" width="0.1066%" height="15" fill="rgb(212,99,53)"/><text x="48.1178%" y="655.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="47.8678%" y="629" width="0.1066%" height="15" fill="rgb(249,111,54)"/><text x="48.1178%" y="639.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.32%)</title><rect x="48.0810%" y="661" width="0.3198%" height="15" fill="rgb(249,55,30)"/><text x="48.3310%" y="671.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="48.2942%" y="645" width="0.1066%" height="15" fill="rgb(237,47,42)"/><text x="48.5442%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="48.4009%" y="661" width="0.1066%" height="15" fill="rgb(211,20,18)"/><text x="48.6509%" y="671.50"></text></g><g><title>core::fmt::write (66 samples, 7.04%)</title><rect x="41.5778%" y="757" width="7.0362%" height="15" fill="rgb(231,203,46)"/><text x="41.8278%" y="767.50">core::fmt..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as core::fmt::Display&gt;::fmt (65 samples, 6.93%)</title><rect x="41.6844%" y="741" width="6.9296%" height="15" fill="rgb(237,142,3)"/><text x="41.9344%" y="751.50">&lt;sql_pars..</text></g><g><title>&lt;sql_parser::ast::defs::statement::Statement as sql_parser::ast::display::AstDisplay&gt;::fmt (62 samples, 6.61%)</title><rect x="42.0043%" y="725" width="6.6098%" height="15" fill="rgb(241,107,1)"/><text x="42.2543%" y="735.50">&lt;sql_pars..</text></g><g><title>&lt;sql_parser::ast::defs::query::Query as sql_parser::ast::display::AstDisplay&gt;::fmt (62 samples, 6.61%)</title><rect x="42.0043%" y="709" width="6.6098%" height="15" fill="rgb(229,83,13)"/><text x="42.2543%" y="719.50">&lt;sql_pars..</text></g><g><title>&lt;sql_parser::ast::defs::query::Select as sql_parser::ast::display::AstDisplay&gt;::fmt (62 samples, 6.61%)</title><rect x="42.0043%" y="693" width="6.6098%" height="15" fill="rgb(241,91,40)"/><text x="42.2543%" y="703.50">&lt;sql_pars..</text></g><g><title>sql_parser::ast::display::AstFormatter::write_str (6 samples, 0.64%)</title><rect x="47.9744%" y="677" width="0.6397%" height="15" fill="rgb(225,3,45)"/><text x="48.2244%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="48.5075%" y="661" width="0.1066%" height="15" fill="rgb(244,223,14)"/><text x="48.7575%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.11%)</title><rect x="48.5075%" y="645" width="0.1066%" height="15" fill="rgb(224,124,37)"/><text x="48.7575%" y="655.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.11%)</title><rect x="48.5075%" y="629" width="0.1066%" height="15" fill="rgb(251,171,30)"/><text x="48.7575%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.11%)</title><rect x="48.5075%" y="613" width="0.1066%" height="15" fill="rgb(236,46,54)"/><text x="48.7575%" y="623.50"></text></g><g><title>core::cmp::min (1 samples, 0.11%)</title><rect x="48.5075%" y="597" width="0.1066%" height="15" fill="rgb(245,213,5)"/><text x="48.7575%" y="607.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.11%)</title><rect x="48.5075%" y="581" width="0.1066%" height="15" fill="rgb(230,144,27)"/><text x="48.7575%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="48.5075%" y="565" width="0.1066%" height="15" fill="rgb(220,86,6)"/><text x="48.7575%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="48.8273%" y="677" width="0.1066%" height="15" fill="rgb(240,20,13)"/><text x="49.0773%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="48.9339%" y="661" width="0.1066%" height="15" fill="rgb(217,89,34)"/><text x="49.1839%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.32%)</title><rect x="48.8273%" y="709" width="0.3198%" height="15" fill="rgb(229,13,5)"/><text x="49.0773%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="48.8273%" y="693" width="0.3198%" height="15" fill="rgb(244,67,35)"/><text x="49.0773%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="48.9339%" y="677" width="0.2132%" height="15" fill="rgb(221,40,2)"/><text x="49.1839%" y="687.50"></text></g><g><title>__rust_dealloc (1 samples, 0.11%)</title><rect x="49.0405%" y="661" width="0.1066%" height="15" fill="rgb(237,157,21)"/><text x="49.2905%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.32%)</title><rect x="49.1471%" y="709" width="0.3198%" height="15" fill="rgb(222,94,11)"/><text x="49.3971%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="49.5736%" y="693" width="0.1066%" height="15" fill="rgb(249,113,6)"/><text x="49.8236%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 1.17%)</title><rect x="48.6141%" y="757" width="1.1727%" height="15" fill="rgb(238,137,36)"/><text x="48.8641%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.96%)</title><rect x="48.8273%" y="741" width="0.9595%" height="15" fill="rgb(210,102,26)"/><text x="49.0773%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.96%)</title><rect x="48.8273%" y="725" width="0.9595%" height="15" fill="rgb(218,30,30)"/><text x="49.0773%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.32%)</title><rect x="49.4670%" y="709" width="0.3198%" height="15" fill="rgb(214,67,26)"/><text x="49.7170%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.11%)</title><rect x="49.6802%" y="693" width="0.1066%" height="15" fill="rgb(251,9,53)"/><text x="49.9302%" y="703.50"></text></g><g><title>&lt;mysql::conn::ConnMut as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="50.8529%" y="725" width="0.1066%" height="15" fill="rgb(228,204,25)"/><text x="51.1029%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.53%)</title><rect x="50.6397%" y="741" width="0.5330%" height="15" fill="rgb(207,153,8)"/><text x="50.8897%" y="751.50"></text></g><g><title>mysql_common::row::new_row (2 samples, 0.21%)</title><rect x="50.9595%" y="725" width="0.2132%" height="15" fill="rgb(242,9,16)"/><text x="51.2095%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="51.0661%" y="709" width="0.1066%" height="15" fill="rgb(217,211,10)"/><text x="51.3161%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="51.1727%" y="741" width="0.2132%" height="15" fill="rgb(219,228,52)"/><text x="51.4227%" y="751.50"></text></g><g><title>_int_free (4 samples, 0.43%)</title><rect x="51.3859%" y="741" width="0.4264%" height="15" fill="rgb(231,92,29)"/><text x="51.6359%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="51.8124%" y="741" width="0.1066%" height="15" fill="rgb(232,8,23)"/><text x="52.0624%" y="751.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="51.9190%" y="709" width="0.1066%" height="15" fill="rgb(216,211,34)"/><text x="52.1690%" y="719.50"></text></g><g><title>msql_srv::resultset::QueryResultWriter&lt;W&gt;::start (2 samples, 0.21%)</title><rect x="51.9190%" y="741" width="0.2132%" height="15" fill="rgb(236,151,0)"/><text x="52.1690%" y="751.50"></text></g><g><title>msql_srv::writers::column_definitions (2 samples, 0.21%)</title><rect x="51.9190%" y="725" width="0.2132%" height="15" fill="rgb(209,168,3)"/><text x="52.1690%" y="735.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (1 samples, 0.11%)</title><rect x="52.0256%" y="709" width="0.1066%" height="15" fill="rgb(208,129,28)"/><text x="52.2756%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="52.0256%" y="693" width="0.1066%" height="15" fill="rgb(229,78,22)"/><text x="52.2756%" y="703.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::end_row (1 samples, 0.11%)</title><rect x="52.1322%" y="741" width="0.1066%" height="15" fill="rgb(228,187,13)"/><text x="52.3822%" y="751.50"></text></g><g><title>msql_srv::packet::PacketWriter&lt;W&gt;::maybe_end_packet (1 samples, 0.11%)</title><rect x="52.1322%" y="725" width="0.1066%" height="15" fill="rgb(240,119,24)"/><text x="52.3822%" y="735.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::finish (1 samples, 0.11%)</title><rect x="52.2388%" y="741" width="0.1066%" height="15" fill="rgb(209,194,42)"/><text x="52.4888%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="52.2388%" y="725" width="0.1066%" height="15" fill="rgb(247,200,46)"/><text x="52.4888%" y="735.50"></text></g><g><title>mysql_common::io::WriteMysqlExt::write_lenenc_int (2 samples, 0.21%)</title><rect x="52.3454%" y="709" width="0.2132%" height="15" fill="rgb(218,76,16)"/><text x="52.5954%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.11%)</title><rect x="52.4520%" y="693" width="0.1066%" height="15" fill="rgb(225,21,48)"/><text x="52.7020%" y="703.50"></text></g><g><title>&lt;mysql_common::value::Value as msql_srv::value::encode::ToMysqlValue&gt;::to_mysql_text (4 samples, 0.43%)</title><rect x="52.3454%" y="725" width="0.4264%" height="15" fill="rgb(239,223,50)"/><text x="52.5954%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.21%)</title><rect x="52.5586%" y="709" width="0.2132%" height="15" fill="rgb(244,45,21)"/><text x="52.8086%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="52.7719%" y="725" width="0.1066%" height="15" fill="rgb(232,33,43)"/><text x="53.0219%" y="735.50"></text></g><g><title>msql_srv::resultset::RowWriter&lt;W&gt;::write_col (6 samples, 0.64%)</title><rect x="52.3454%" y="741" width="0.6397%" height="15" fill="rgb(209,8,3)"/><text x="52.5954%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="52.8785%" y="725" width="0.1066%" height="15" fill="rgb(214,25,53)"/><text x="53.1285%" y="735.50"></text></g><g><title>&lt;decor::Shim as msql_srv::MysqlShim&lt;W&gt;&gt;::on_query (215 samples, 22.92%)</title><rect x="30.1706%" y="773" width="22.9211%" height="15" fill="rgb(254,186,54)"/><text x="30.4206%" y="783.50">&lt;decor::Shim as msql_srv::MysqlShim&lt;..</text></g><g><title>decor::helpers::answer_rows (31 samples, 3.30%)</title><rect x="49.7868%" y="757" width="3.3049%" height="15" fill="rgb(208,174,49)"/><text x="50.0368%" y="767.50">dec..</text></g><g><title>mysql_common::row::Row::unwrap (1 samples, 0.11%)</title><rect x="52.9851%" y="741" width="0.1066%" height="15" fill="rgb(233,191,51)"/><text x="53.2351%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="52.9851%" y="725" width="0.1066%" height="15" fill="rgb(222,134,10)"/><text x="53.2351%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="53.0917%" y="773" width="0.2132%" height="15" fill="rgb(230,226,20)"/><text x="53.3417%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="53.0917%" y="757" width="0.2132%" height="15" fill="rgb(251,111,25)"/><text x="53.3417%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="53.0917%" y="741" width="0.2132%" height="15" fill="rgb(224,40,46)"/><text x="53.3417%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="53.0917%" y="725" width="0.2132%" height="15" fill="rgb(236,108,47)"/><text x="53.3417%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="53.0917%" y="709" width="0.2132%" height="15" fill="rgb(234,93,0)"/><text x="53.3417%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.21%)</title><rect x="53.0917%" y="693" width="0.2132%" height="15" fill="rgb(224,213,32)"/><text x="53.3417%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="53.0917%" y="677" width="0.2132%" height="15" fill="rgb(251,11,48)"/><text x="53.3417%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="53.1983%" y="661" width="0.1066%" height="15" fill="rgb(236,173,5)"/><text x="53.4483%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="53.1983%" y="645" width="0.1066%" height="15" fill="rgb(230,95,12)"/><text x="53.4483%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.11%)</title><rect x="53.1983%" y="629" width="0.1066%" height="15" fill="rgb(232,209,1)"/><text x="53.4483%" y="639.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.11%)</title><rect x="53.3049%" y="773" width="0.1066%" height="15" fill="rgb(232,6,1)"/><text x="53.5549%" y="783.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.11%)</title><rect x="53.3049%" y="757" width="0.1066%" height="15" fill="rgb(210,224,50)"/><text x="53.5549%" y="767.50"></text></g><g><title>fput_many (1 samples, 0.11%)</title><rect x="53.6247%" y="597" width="0.1066%" height="15" fill="rgb(228,127,35)"/><text x="53.8747%" y="607.50"></text></g><g><title>dst_release (2 samples, 0.21%)</title><rect x="53.9446%" y="533" width="0.2132%" height="15" fill="rgb(245,102,45)"/><text x="54.1946%" y="543.50"></text></g><g><title>__kfree_skb (3 samples, 0.32%)</title><rect x="53.9446%" y="565" width="0.3198%" height="15" fill="rgb(214,1,49)"/><text x="54.1946%" y="575.50"></text></g><g><title>skb_release_head_state (3 samples, 0.32%)</title><rect x="53.9446%" y="549" width="0.3198%" height="15" fill="rgb(226,163,40)"/><text x="54.1946%" y="559.50"></text></g><g><title>sock_rfree (1 samples, 0.11%)</title><rect x="54.1578%" y="533" width="0.1066%" height="15" fill="rgb(239,212,28)"/><text x="54.4078%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="54.2644%" y="565" width="0.1066%" height="15" fill="rgb(220,20,13)"/><text x="54.5144%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="54.2644%" y="549" width="0.1066%" height="15" fill="rgb(210,164,35)"/><text x="54.5144%" y="559.50"></text></g><g><title>__tcp_send_ack.part.0 (1 samples, 0.11%)</title><rect x="54.3710%" y="565" width="0.1066%" height="15" fill="rgb(248,109,41)"/><text x="54.6210%" y="575.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="54.3710%" y="549" width="0.1066%" height="15" fill="rgb(238,23,50)"/><text x="54.6210%" y="559.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="54.3710%" y="533" width="0.1066%" height="15" fill="rgb(211,48,49)"/><text x="54.6210%" y="543.50"></text></g><g><title>__ip_finish_output (1 samples, 0.11%)</title><rect x="54.5842%" y="517" width="0.1066%" height="15" fill="rgb(223,36,21)"/><text x="54.8342%" y="527.50"></text></g><g><title>ipv4_mtu (1 samples, 0.11%)</title><rect x="54.5842%" y="501" width="0.1066%" height="15" fill="rgb(207,123,46)"/><text x="54.8342%" y="511.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="54.7974%" y="501" width="0.1066%" height="15" fill="rgb(240,218,32)"/><text x="55.0474%" y="511.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="54.7974%" y="485" width="0.1066%" height="15" fill="rgb(252,5,43)"/><text x="55.0474%" y="495.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="55.0107%" y="405" width="0.1066%" height="15" fill="rgb(252,84,19)"/><text x="55.2607%" y="415.50"></text></g><g><title>ip_rcv (1 samples, 0.11%)</title><rect x="55.0107%" y="389" width="0.1066%" height="15" fill="rgb(243,152,39)"/><text x="55.2607%" y="399.50"></text></g><g><title>ip_local_deliver (1 samples, 0.11%)</title><rect x="55.0107%" y="373" width="0.1066%" height="15" fill="rgb(234,160,15)"/><text x="55.2607%" y="383.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="55.0107%" y="357" width="0.1066%" height="15" fill="rgb(237,34,20)"/><text x="55.2607%" y="367.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="55.0107%" y="341" width="0.1066%" height="15" fill="rgb(229,97,13)"/><text x="55.2607%" y="351.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.11%)</title><rect x="55.0107%" y="325" width="0.1066%" height="15" fill="rgb(234,71,50)"/><text x="55.2607%" y="335.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="55.0107%" y="309" width="0.1066%" height="15" fill="rgb(253,155,4)"/><text x="55.2607%" y="319.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.11%)</title><rect x="55.0107%" y="293" width="0.1066%" height="15" fill="rgb(222,185,37)"/><text x="55.2607%" y="303.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="55.0107%" y="277" width="0.1066%" height="15" fill="rgb(251,177,13)"/><text x="55.2607%" y="287.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.53%)</title><rect x="54.6908%" y="517" width="0.5330%" height="15" fill="rgb(250,179,40)"/><text x="54.9408%" y="527.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.32%)</title><rect x="54.9041%" y="501" width="0.3198%" height="15" fill="rgb(242,44,2)"/><text x="55.1541%" y="511.50"></text></g><g><title>do_softirq (3 samples, 0.32%)</title><rect x="54.9041%" y="485" width="0.3198%" height="15" fill="rgb(216,177,13)"/><text x="55.1541%" y="495.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.32%)</title><rect x="54.9041%" y="469" width="0.3198%" height="15" fill="rgb(216,106,43)"/><text x="55.1541%" y="479.50"></text></g><g><title>__do_softirq (3 samples, 0.32%)</title><rect x="54.9041%" y="453" width="0.3198%" height="15" fill="rgb(216,183,2)"/><text x="55.1541%" y="463.50"></text></g><g><title>net_rx_action (2 samples, 0.21%)</title><rect x="55.0107%" y="437" width="0.2132%" height="15" fill="rgb(249,75,3)"/><text x="55.2607%" y="447.50"></text></g><g><title>process_backlog (2 samples, 0.21%)</title><rect x="55.0107%" y="421" width="0.2132%" height="15" fill="rgb(219,67,39)"/><text x="55.2607%" y="431.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="55.1173%" y="405" width="0.1066%" height="15" fill="rgb(253,228,2)"/><text x="55.3673%" y="415.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="55.1173%" y="389" width="0.1066%" height="15" fill="rgb(235,138,27)"/><text x="55.3673%" y="399.50"></text></g><g><title>__tcp_transmit_skb (8 samples, 0.85%)</title><rect x="54.4776%" y="565" width="0.8529%" height="15" fill="rgb(236,97,51)"/><text x="54.7276%" y="575.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.85%)</title><rect x="54.4776%" y="549" width="0.8529%" height="15" fill="rgb(240,80,30)"/><text x="54.7276%" y="559.50"></text></g><g><title>ip_output (8 samples, 0.85%)</title><rect x="54.4776%" y="533" width="0.8529%" height="15" fill="rgb(230,178,19)"/><text x="54.7276%" y="543.50"></text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="55.2239%" y="517" width="0.1066%" height="15" fill="rgb(210,190,27)"/><text x="55.4739%" y="527.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="55.2239%" y="501" width="0.1066%" height="15" fill="rgb(222,107,31)"/><text x="55.4739%" y="511.50"></text></g><g><title>kfree_skbmem (1 samples, 0.11%)</title><rect x="55.3305%" y="565" width="0.1066%" height="15" fill="rgb(216,127,34)"/><text x="55.5805%" y="575.50"></text></g><g><title>lock_sock_nested (1 samples, 0.11%)</title><rect x="55.4371%" y="565" width="0.1066%" height="15" fill="rgb(234,116,52)"/><text x="55.6871%" y="575.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="55.5437%" y="549" width="0.1066%" height="15" fill="rgb(222,124,15)"/><text x="55.7937%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="55.5437%" y="533" width="0.1066%" height="15" fill="rgb(231,179,28)"/><text x="55.7937%" y="543.50"></text></g><g><title>release_sock (1 samples, 0.11%)</title><rect x="55.6503%" y="549" width="0.1066%" height="15" fill="rgb(226,93,45)"/><text x="55.9003%" y="559.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="55.6503%" y="533" width="0.1066%" height="15" fill="rgb(215,8,51)"/><text x="55.9003%" y="543.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="55.6503%" y="517" width="0.1066%" height="15" fill="rgb(223,106,5)"/><text x="55.9003%" y="527.50"></text></g><g><title>in_lock_functions (1 samples, 0.11%)</title><rect x="55.6503%" y="501" width="0.1066%" height="15" fill="rgb(250,191,5)"/><text x="55.9003%" y="511.50"></text></g><g><title>ctx_sched_out (1 samples, 0.11%)</title><rect x="56.5032%" y="469" width="0.1066%" height="15" fill="rgb(242,132,44)"/><text x="56.7532%" y="479.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.11%)</title><rect x="56.5032%" y="453" width="0.1066%" height="15" fill="rgb(251,152,29)"/><text x="56.7532%" y="463.50"></text></g><g><title>__perf_event_task_sched_out (3 samples, 0.32%)</title><rect x="56.3966%" y="485" width="0.3198%" height="15" fill="rgb(218,179,5)"/><text x="56.6466%" y="495.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.11%)</title><rect x="56.6098%" y="469" width="0.1066%" height="15" fill="rgb(227,67,19)"/><text x="56.8598%" y="479.50"></text></g><g><title>update_curr (2 samples, 0.21%)</title><rect x="56.8230%" y="453" width="0.2132%" height="15" fill="rgb(233,119,31)"/><text x="57.0730%" y="463.50"></text></g><g><title>__calc_delta (1 samples, 0.11%)</title><rect x="56.9296%" y="437" width="0.1066%" height="15" fill="rgb(241,120,22)"/><text x="57.1796%" y="447.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.53%)</title><rect x="56.7164%" y="485" width="0.5330%" height="15" fill="rgb(224,102,30)"/><text x="56.9664%" y="495.50"></text></g><g><title>dequeue_entity (4 samples, 0.43%)</title><rect x="56.8230%" y="469" width="0.4264%" height="15" fill="rgb(210,164,37)"/><text x="57.0730%" y="479.50"></text></g><g><title>update_load_avg (2 samples, 0.21%)</title><rect x="57.0362%" y="453" width="0.2132%" height="15" fill="rgb(226,191,16)"/><text x="57.2862%" y="463.50"></text></g><g><title>apic_timer_interrupt (1 samples, 0.11%)</title><rect x="57.2495%" y="453" width="0.1066%" height="15" fill="rgb(214,40,45)"/><text x="57.4995%" y="463.50"></text></g><g><title>smp_apic_timer_interrupt (1 samples, 0.11%)</title><rect x="57.2495%" y="437" width="0.1066%" height="15" fill="rgb(244,29,26)"/><text x="57.4995%" y="447.50"></text></g><g><title>irq_exit (1 samples, 0.11%)</title><rect x="57.2495%" y="421" width="0.1066%" height="15" fill="rgb(216,16,5)"/><text x="57.4995%" y="431.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.11%)</title><rect x="57.2495%" y="405" width="0.1066%" height="15" fill="rgb(249,76,35)"/><text x="57.4995%" y="415.50"></text></g><g><title>finish_task_switch (2 samples, 0.21%)</title><rect x="57.2495%" y="485" width="0.2132%" height="15" fill="rgb(207,11,44)"/><text x="57.4995%" y="495.50"></text></g><g><title>_raw_spin_unlock_irq (2 samples, 0.21%)</title><rect x="57.2495%" y="469" width="0.2132%" height="15" fill="rgb(228,190,49)"/><text x="57.4995%" y="479.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="57.3561%" y="453" width="0.1066%" height="15" fill="rgb(214,173,12)"/><text x="57.6061%" y="463.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.21%)</title><rect x="57.4627%" y="485" width="0.2132%" height="15" fill="rgb(218,26,35)"/><text x="57.7127%" y="495.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.21%)</title><rect x="57.4627%" y="469" width="0.2132%" height="15" fill="rgb(220,200,19)"/><text x="57.7127%" y="479.50"></text></g><g><title>psi_task_change (3 samples, 0.32%)</title><rect x="57.6759%" y="485" width="0.3198%" height="15" fill="rgb(239,95,49)"/><text x="57.9259%" y="495.50"></text></g><g><title>psi_group_change (2 samples, 0.21%)</title><rect x="57.7825%" y="469" width="0.2132%" height="15" fill="rgb(235,85,53)"/><text x="58.0325%" y="479.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.11%)</title><rect x="57.9957%" y="485" width="0.1066%" height="15" fill="rgb(233,133,31)"/><text x="58.2457%" y="495.50"></text></g><g><title>put_prev_entity (1 samples, 0.11%)</title><rect x="57.9957%" y="469" width="0.1066%" height="15" fill="rgb(218,25,20)"/><text x="58.2457%" y="479.50"></text></g><g><title>sk_wait_data (26 samples, 2.77%)</title><rect x="55.5437%" y="565" width="2.7719%" height="15" fill="rgb(252,210,38)"/><text x="55.7937%" y="575.50">sk..</text></g><g><title>wait_woken (24 samples, 2.56%)</title><rect x="55.7569%" y="549" width="2.5586%" height="15" fill="rgb(242,134,21)"/><text x="56.0069%" y="559.50">wa..</text></g><g><title>schedule_timeout (22 samples, 2.35%)</title><rect x="55.9701%" y="533" width="2.3454%" height="15" fill="rgb(213,28,48)"/><text x="56.2201%" y="543.50">s..</text></g><g><title>schedule (21 samples, 2.24%)</title><rect x="56.0768%" y="517" width="2.2388%" height="15" fill="rgb(250,196,2)"/><text x="56.3268%" y="527.50">s..</text></g><g><title>__schedule (19 samples, 2.03%)</title><rect x="56.2900%" y="501" width="2.0256%" height="15" fill="rgb(227,5,17)"/><text x="56.5400%" y="511.50">_..</text></g><g><title>uclamp_rq_dec_id (2 samples, 0.21%)</title><rect x="58.1023%" y="485" width="0.2132%" height="15" fill="rgb(221,226,24)"/><text x="58.3523%" y="495.50"></text></g><g><title>_copy_to_iter (1 samples, 0.11%)</title><rect x="58.5288%" y="533" width="0.1066%" height="15" fill="rgb(211,5,48)"/><text x="58.7788%" y="543.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.11%)</title><rect x="58.5288%" y="517" width="0.1066%" height="15" fill="rgb(219,150,6)"/><text x="58.7788%" y="527.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.43%)</title><rect x="58.3156%" y="565" width="0.4264%" height="15" fill="rgb(251,46,16)"/><text x="58.5656%" y="575.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.43%)</title><rect x="58.3156%" y="549" width="0.4264%" height="15" fill="rgb(220,204,40)"/><text x="58.5656%" y="559.50"></text></g><g><title>simple_copy_to_iter (1 samples, 0.11%)</title><rect x="58.6354%" y="533" width="0.1066%" height="15" fill="rgb(211,85,2)"/><text x="58.8854%" y="543.50"></text></g><g><title>__check_object_size (1 samples, 0.11%)</title><rect x="58.6354%" y="517" width="0.1066%" height="15" fill="rgb(229,17,7)"/><text x="58.8854%" y="527.50"></text></g><g><title>inet_recvmsg (48 samples, 5.12%)</title><rect x="53.7313%" y="597" width="5.1173%" height="15" fill="rgb(239,72,28)"/><text x="53.9813%" y="607.50">inet_r..</text></g><g><title>tcp_recvmsg (48 samples, 5.12%)</title><rect x="53.7313%" y="581" width="5.1173%" height="15" fill="rgb(230,47,54)"/><text x="53.9813%" y="591.50">tcp_re..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="58.7420%" y="565" width="0.1066%" height="15" fill="rgb(214,50,8)"/><text x="58.9920%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (50 samples, 5.33%)</title><rect x="53.6247%" y="629" width="5.3305%" height="15" fill="rgb(216,198,43)"/><text x="53.8747%" y="639.50">__x64_s..</text></g><g><title>__sys_recvfrom (50 samples, 5.33%)</title><rect x="53.6247%" y="613" width="5.3305%" height="15" fill="rgb(234,20,35)"/><text x="53.8747%" y="623.50">__sys_r..</text></g><g><title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="58.8486%" y="597" width="0.1066%" height="15" fill="rgb(254,45,19)"/><text x="59.0986%" y="607.50"></text></g><g><title>do_syscall_64 (51 samples, 5.44%)</title><rect x="53.6247%" y="645" width="5.4371%" height="15" fill="rgb(219,14,44)"/><text x="53.8747%" y="655.50">do_sysc..</text></g><g><title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="58.9552%" y="629" width="0.1066%" height="15" fill="rgb(217,220,26)"/><text x="59.2052%" y="639.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="58.9552%" y="613" width="0.1066%" height="15" fill="rgb(213,158,28)"/><text x="59.2052%" y="623.50"></text></g><g><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (58 samples, 6.18%)</title><rect x="53.5181%" y="757" width="6.1834%" height="15" fill="rgb(252,51,52)"/><text x="53.7681%" y="767.50">&lt;std::io..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (58 samples, 6.18%)</title><rect x="53.5181%" y="741" width="6.1834%" height="15" fill="rgb(246,89,16)"/><text x="53.7681%" y="751.50">&lt;std::ne..</text></g><g><title>std::sys_common::net::TcpStream::read (58 samples, 6.18%)</title><rect x="53.5181%" y="725" width="6.1834%" height="15" fill="rgb(216,158,49)"/><text x="53.7681%" y="735.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::read (58 samples, 6.18%)</title><rect x="53.5181%" y="709" width="6.1834%" height="15" fill="rgb(236,107,19)"/><text x="53.7681%" y="719.50">std::sys..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (58 samples, 6.18%)</title><rect x="53.5181%" y="693" width="6.1834%" height="15" fill="rgb(228,185,30)"/><text x="53.7681%" y="703.50">std::sys..</text></g><g><title>__libc_recv (58 samples, 6.18%)</title><rect x="53.5181%" y="677" width="6.1834%" height="15" fill="rgb(246,134,8)"/><text x="53.7681%" y="687.50">__libc_r..</text></g><g><title>entry_SYSCALL_64 (57 samples, 6.08%)</title><rect x="53.6247%" y="661" width="6.0768%" height="15" fill="rgb(214,143,50)"/><text x="53.8747%" y="671.50">entry_SY..</text></g><g><title>prepare_exit_to_usermode (6 samples, 0.64%)</title><rect x="59.0618%" y="645" width="0.6397%" height="15" fill="rgb(228,75,8)"/><text x="59.3118%" y="655.50"></text></g><g><title>msql_srv::packet::PacketReader&lt;R&gt;::next (60 samples, 6.40%)</title><rect x="53.4115%" y="773" width="6.3966%" height="15" fill="rgb(207,175,4)"/><text x="53.6615%" y="783.50">msql_srv..</text></g><g><title>msql_srv::packet::packet (1 samples, 0.11%)</title><rect x="59.7015%" y="757" width="0.1066%" height="15" fill="rgb(205,108,24)"/><text x="59.9515%" y="767.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="60.2345%" y="613" width="0.1066%" height="15" fill="rgb(244,120,49)"/><text x="60.4845%" y="623.50"></text></g><g><title>lock_sock_nested (2 samples, 0.21%)</title><rect x="60.3412%" y="613" width="0.2132%" height="15" fill="rgb(223,47,38)"/><text x="60.5912%" y="623.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.21%)</title><rect x="60.3412%" y="597" width="0.2132%" height="15" fill="rgb(229,179,11)"/><text x="60.5912%" y="607.50"></text></g><g><title>preempt_count_add (2 samples, 0.21%)</title><rect x="60.3412%" y="581" width="0.2132%" height="15" fill="rgb(231,122,1)"/><text x="60.5912%" y="591.50"></text></g><g><title>release_sock (2 samples, 0.21%)</title><rect x="60.5544%" y="613" width="0.2132%" height="15" fill="rgb(245,119,9)"/><text x="60.8044%" y="623.50"></text></g><g><title>__release_sock (1 samples, 0.11%)</title><rect x="60.6610%" y="597" width="0.1066%" height="15" fill="rgb(241,163,25)"/><text x="60.9110%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="60.6610%" y="581" width="0.1066%" height="15" fill="rgb(217,214,3)"/><text x="60.9110%" y="591.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.11%)</title><rect x="60.6610%" y="565" width="0.1066%" height="15" fill="rgb(240,86,28)"/><text x="60.9110%" y="575.50"></text></g><g><title>tcp_ack (1 samples, 0.11%)</title><rect x="60.6610%" y="549" width="0.1066%" height="15" fill="rgb(215,47,9)"/><text x="60.9110%" y="559.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="61.6205%" y="421" width="0.1066%" height="15" fill="rgb(252,25,45)"/><text x="61.8705%" y="431.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="61.6205%" y="405" width="0.1066%" height="15" fill="rgb(251,164,9)"/><text x="61.8705%" y="415.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.21%)</title><rect x="61.6205%" y="485" width="0.2132%" height="15" fill="rgb(233,194,0)"/><text x="61.8705%" y="495.50"></text></g><g><title>loopback_xmit (2 samples, 0.21%)</title><rect x="61.6205%" y="469" width="0.2132%" height="15" fill="rgb(249,111,24)"/><text x="61.8705%" y="479.50"></text></g><g><title>netif_rx (2 samples, 0.21%)</title><rect x="61.6205%" y="453" width="0.2132%" height="15" fill="rgb(250,223,3)"/><text x="61.8705%" y="463.50"></text></g><g><title>netif_rx_internal (2 samples, 0.21%)</title><rect x="61.6205%" y="437" width="0.2132%" height="15" fill="rgb(236,178,37)"/><text x="61.8705%" y="447.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.11%)</title><rect x="61.7271%" y="421" width="0.1066%" height="15" fill="rgb(241,158,50)"/><text x="61.9771%" y="431.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.43%)</title><rect x="61.6205%" y="501" width="0.4264%" height="15" fill="rgb(213,121,41)"/><text x="61.8705%" y="511.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.21%)</title><rect x="61.8337%" y="485" width="0.2132%" height="15" fill="rgb(240,92,3)"/><text x="62.0837%" y="495.50"></text></g><g><title>netif_skb_features (2 samples, 0.21%)</title><rect x="61.8337%" y="469" width="0.2132%" height="15" fill="rgb(205,123,3)"/><text x="62.0837%" y="479.50"></text></g><g><title>skb_network_protocol (1 samples, 0.11%)</title><rect x="61.9403%" y="453" width="0.1066%" height="15" fill="rgb(205,97,47)"/><text x="62.1903%" y="463.50"></text></g><g><title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="62.4733%" y="389" width="0.1066%" height="15" fill="rgb(247,152,14)"/><text x="62.7233%" y="399.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="63.4328%" y="309" width="0.1066%" height="15" fill="rgb(248,195,53)"/><text x="63.6828%" y="319.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.11%)</title><rect x="63.5394%" y="309" width="0.1066%" height="15" fill="rgb(226,201,16)"/><text x="63.7894%" y="319.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="63.5394%" y="293" width="0.1066%" height="15" fill="rgb(205,98,0)"/><text x="63.7894%" y="303.50"></text></g><g><title>tcp_add_backlog (1 samples, 0.11%)</title><rect x="63.6461%" y="309" width="0.1066%" height="15" fill="rgb(214,191,48)"/><text x="63.8961%" y="319.50"></text></g><g><title>sk_reset_timer (1 samples, 0.11%)</title><rect x="63.7527%" y="277" width="0.1066%" height="15" fill="rgb(237,112,39)"/><text x="64.0027%" y="287.50"></text></g><g><title>__mod_timer (1 samples, 0.11%)</title><rect x="63.7527%" y="261" width="0.1066%" height="15" fill="rgb(247,203,27)"/><text x="64.0027%" y="271.50"></text></g><g><title>lock_timer_base.constprop.0 (1 samples, 0.11%)</title><rect x="63.7527%" y="245" width="0.1066%" height="15" fill="rgb(235,124,28)"/><text x="64.0027%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.11%)</title><rect x="63.9659%" y="213" width="0.1066%" height="15" fill="rgb(208,207,46)"/><text x="64.2159%" y="223.50"></text></g><g><title>psi_task_change (5 samples, 0.53%)</title><rect x="64.0725%" y="197" width="0.5330%" height="15" fill="rgb(234,176,4)"/><text x="64.3225%" y="207.50"></text></g><g><title>psi_group_change (5 samples, 0.53%)</title><rect x="64.0725%" y="181" width="0.5330%" height="15" fill="rgb(230,133,28)"/><text x="64.3225%" y="191.50"></text></g><g><title>record_times (2 samples, 0.21%)</title><rect x="64.3923%" y="165" width="0.2132%" height="15" fill="rgb(211,137,40)"/><text x="64.6423%" y="175.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="64.4989%" y="149" width="0.1066%" height="15" fill="rgb(254,35,13)"/><text x="64.7489%" y="159.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="64.4989%" y="133" width="0.1066%" height="15" fill="rgb(225,49,51)"/><text x="64.7489%" y="143.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="64.4989%" y="117" width="0.1066%" height="15" fill="rgb(251,10,15)"/><text x="64.7489%" y="127.50"></text></g><g><title>enqueue_task (6 samples, 0.64%)</title><rect x="64.0725%" y="213" width="0.6397%" height="15" fill="rgb(228,207,15)"/><text x="64.3225%" y="223.50"></text></g><g><title>uclamp_rq_inc_id (1 samples, 0.11%)</title><rect x="64.6055%" y="197" width="0.1066%" height="15" fill="rgb(241,99,19)"/><text x="64.8555%" y="207.50"></text></g><g><title>rb_insert_color (1 samples, 0.11%)</title><rect x="64.9254%" y="181" width="0.1066%" height="15" fill="rgb(207,104,49)"/><text x="65.1754%" y="191.50"></text></g><g><title>reweight_entity (2 samples, 0.21%)</title><rect x="65.0320%" y="181" width="0.2132%" height="15" fill="rgb(234,99,18)"/><text x="65.2820%" y="191.50"></text></g><g><title>update_cfs_group (1 samples, 0.11%)</title><rect x="65.2452%" y="181" width="0.1066%" height="15" fill="rgb(213,191,49)"/><text x="65.4952%" y="191.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.75%)</title><rect x="64.7122%" y="213" width="0.7463%" height="15" fill="rgb(210,226,19)"/><text x="64.9622%" y="223.50"></text></g><g><title>enqueue_entity (5 samples, 0.53%)</title><rect x="64.9254%" y="197" width="0.5330%" height="15" fill="rgb(229,97,18)"/><text x="65.1754%" y="207.50"></text></g><g><title>update_load_avg (1 samples, 0.11%)</title><rect x="65.3518%" y="181" width="0.1066%" height="15" fill="rgb(211,167,15)"/><text x="65.6018%" y="191.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.11%)</title><rect x="65.3518%" y="165" width="0.1066%" height="15" fill="rgb(210,169,34)"/><text x="65.6018%" y="175.50"></text></g><g><title>try_to_wake_up (18 samples, 1.92%)</title><rect x="63.9659%" y="229" width="1.9190%" height="15" fill="rgb(241,121,31)"/><text x="64.2159%" y="239.50">t..</text></g><g><title>update_rq_clock (4 samples, 0.43%)</title><rect x="65.4584%" y="213" width="0.4264%" height="15" fill="rgb(232,40,11)"/><text x="65.7084%" y="223.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.11%)</title><rect x="65.7783%" y="197" width="0.1066%" height="15" fill="rgb(205,86,26)"/><text x="66.0283%" y="207.50"></text></g><g><title>sched_clock (1 samples, 0.11%)</title><rect x="65.7783%" y="181" width="0.1066%" height="15" fill="rgb(231,126,28)"/><text x="66.0283%" y="191.50"></text></g><g><title>native_sched_clock (1 samples, 0.11%)</title><rect x="65.7783%" y="165" width="0.1066%" height="15" fill="rgb(219,221,18)"/><text x="66.0283%" y="175.50"></text></g><g><title>sock_def_readable (20 samples, 2.13%)</title><rect x="63.8593%" y="277" width="2.1322%" height="15" fill="rgb(211,40,0)"/><text x="64.1093%" y="287.50">s..</text></g><g><title>__wake_up_common_lock (20 samples, 2.13%)</title><rect x="63.8593%" y="261" width="2.1322%" height="15" fill="rgb(239,85,43)"/><text x="64.1093%" y="271.50">_..</text></g><g><title>__wake_up_common (20 samples, 2.13%)</title><rect x="63.8593%" y="245" width="2.1322%" height="15" fill="rgb(231,55,21)"/><text x="64.1093%" y="255.50">_..</text></g><g><title>woken_wake_function (1 samples, 0.11%)</title><rect x="65.8849%" y="229" width="0.1066%" height="15" fill="rgb(225,184,43)"/><text x="66.1349%" y="239.50"></text></g><g><title>__kfree_skb (1 samples, 0.11%)</title><rect x="66.0981%" y="261" width="0.1066%" height="15" fill="rgb(251,158,41)"/><text x="66.3481%" y="271.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="66.0981%" y="245" width="0.1066%" height="15" fill="rgb(234,159,37)"/><text x="66.3481%" y="255.50"></text></g><g><title>bictcp_acked (1 samples, 0.11%)</title><rect x="66.2047%" y="261" width="0.1066%" height="15" fill="rgb(216,204,22)"/><text x="66.4547%" y="271.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.11%)</title><rect x="66.3113%" y="261" width="0.1066%" height="15" fill="rgb(214,17,3)"/><text x="66.5613%" y="271.50"></text></g><g><title>jiffies_to_usecs (1 samples, 0.11%)</title><rect x="66.3113%" y="245" width="0.1066%" height="15" fill="rgb(212,111,17)"/><text x="66.5613%" y="255.50"></text></g><g><title>tcp_ack (5 samples, 0.53%)</title><rect x="65.9915%" y="277" width="0.5330%" height="15" fill="rgb(221,157,24)"/><text x="66.2415%" y="287.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="66.4179%" y="261" width="0.1066%" height="15" fill="rgb(252,16,13)"/><text x="66.6679%" y="271.50"></text></g><g><title>tcp_grow_window (1 samples, 0.11%)</title><rect x="66.5245%" y="277" width="0.1066%" height="15" fill="rgb(221,62,2)"/><text x="66.7745%" y="287.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="66.6311%" y="277" width="0.1066%" height="15" fill="rgb(247,87,22)"/><text x="66.8811%" y="287.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="66.6311%" y="261" width="0.1066%" height="15" fill="rgb(215,73,9)"/><text x="66.8811%" y="271.50"></text></g><g><title>ip_local_deliver (38 samples, 4.05%)</title><rect x="62.7932%" y="373" width="4.0512%" height="15" fill="rgb(207,175,33)"/><text x="63.0432%" y="383.50">ip_l..</text></g><g><title>ip_local_deliver_finish (36 samples, 3.84%)</title><rect x="63.0064%" y="357" width="3.8380%" height="15" fill="rgb(243,129,54)"/><text x="63.2564%" y="367.50">ip_l..</text></g><g><title>ip_protocol_deliver_rcu (36 samples, 3.84%)</title><rect x="63.0064%" y="341" width="3.8380%" height="15" fill="rgb(227,119,45)"/><text x="63.2564%" y="351.50">ip_p..</text></g><g><title>tcp_v4_rcv (35 samples, 3.73%)</title><rect x="63.1130%" y="325" width="3.7313%" height="15" fill="rgb(205,109,36)"/><text x="63.3630%" y="335.50">tcp_..</text></g><g><title>tcp_v4_do_rcv (29 samples, 3.09%)</title><rect x="63.7527%" y="309" width="3.0917%" height="15" fill="rgb(205,6,39)"/><text x="64.0027%" y="319.50">tcp..</text></g><g><title>tcp_rcv_established (29 samples, 3.09%)</title><rect x="63.7527%" y="293" width="3.0917%" height="15" fill="rgb(221,32,16)"/><text x="64.0027%" y="303.50">tcp..</text></g><g><title>tcp_queue_rcv (1 samples, 0.11%)</title><rect x="66.7377%" y="277" width="0.1066%" height="15" fill="rgb(228,144,50)"/><text x="66.9877%" y="287.50"></text></g><g><title>ip_rcv_core (2 samples, 0.21%)</title><rect x="66.8443%" y="373" width="0.2132%" height="15" fill="rgb(229,201,53)"/><text x="67.0943%" y="383.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.11%)</title><rect x="66.9510%" y="357" width="0.1066%" height="15" fill="rgb(249,153,27)"/><text x="67.2010%" y="367.50"></text></g><g><title>ip_finish_output2 (53 samples, 5.65%)</title><rect x="61.5139%" y="517" width="5.6503%" height="15" fill="rgb(227,106,25)"/><text x="61.7639%" y="527.50">ip_fini..</text></g><g><title>__local_bh_enable_ip (48 samples, 5.12%)</title><rect x="62.0469%" y="501" width="5.1173%" height="15" fill="rgb(230,65,29)"/><text x="62.2969%" y="511.50">__loca..</text></g><g><title>do_softirq (48 samples, 5.12%)</title><rect x="62.0469%" y="485" width="5.1173%" height="15" fill="rgb(221,57,46)"/><text x="62.2969%" y="495.50">do_sof..</text></g><g><title>do_softirq_own_stack (47 samples, 5.01%)</title><rect x="62.1535%" y="469" width="5.0107%" height="15" fill="rgb(229,161,17)"/><text x="62.4035%" y="479.50">do_sof..</text></g><g><title>__do_softirq (47 samples, 5.01%)</title><rect x="62.1535%" y="453" width="5.0107%" height="15" fill="rgb(222,213,11)"/><text x="62.4035%" y="463.50">__do_s..</text></g><g><title>net_rx_action (46 samples, 4.90%)</title><rect x="62.2601%" y="437" width="4.9041%" height="15" fill="rgb(235,35,13)"/><text x="62.5101%" y="447.50">net_rx..</text></g><g><title>process_backlog (46 samples, 4.90%)</title><rect x="62.2601%" y="421" width="4.9041%" height="15" fill="rgb(233,158,34)"/><text x="62.5101%" y="431.50">proces..</text></g><g><title>__netif_receive_skb_one_core (44 samples, 4.69%)</title><rect x="62.4733%" y="405" width="4.6908%" height="15" fill="rgb(215,151,48)"/><text x="62.7233%" y="415.50">__net..</text></g><g><title>ip_rcv (43 samples, 4.58%)</title><rect x="62.5800%" y="389" width="4.5842%" height="15" fill="rgb(229,84,14)"/><text x="62.8300%" y="399.50">ip_rcv</text></g><g><title>ip_rcv_finish (1 samples, 0.11%)</title><rect x="67.0576%" y="373" width="0.1066%" height="15" fill="rgb(229,68,14)"/><text x="67.3076%" y="383.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.11%)</title><rect x="67.0576%" y="357" width="0.1066%" height="15" fill="rgb(243,106,26)"/><text x="67.3076%" y="367.50"></text></g><g><title>__ip_queue_xmit (55 samples, 5.86%)</title><rect x="61.4072%" y="549" width="5.8635%" height="15" fill="rgb(206,45,38)"/><text x="61.6572%" y="559.50">__ip_qu..</text></g><g><title>ip_output (54 samples, 5.76%)</title><rect x="61.5139%" y="533" width="5.7569%" height="15" fill="rgb(226,6,15)"/><text x="61.7639%" y="543.50">ip_outp..</text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="67.1642%" y="517" width="0.1066%" height="15" fill="rgb(232,22,54)"/><text x="67.4142%" y="527.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="67.1642%" y="501" width="0.1066%" height="15" fill="rgb(229,222,32)"/><text x="67.4142%" y="511.50"></text></g><g><title>ip_queue_xmit (1 samples, 0.11%)</title><rect x="67.2708%" y="549" width="0.1066%" height="15" fill="rgb(228,62,29)"/><text x="67.5208%" y="559.50"></text></g><g><title>skb_clone (1 samples, 0.11%)</title><rect x="67.3774%" y="549" width="0.1066%" height="15" fill="rgb(251,103,34)"/><text x="67.6274%" y="559.50"></text></g><g><title>__copy_skb_header (1 samples, 0.11%)</title><rect x="67.3774%" y="533" width="0.1066%" height="15" fill="rgb(233,12,30)"/><text x="67.6274%" y="543.50"></text></g><g><title>skb_push (1 samples, 0.11%)</title><rect x="67.4840%" y="549" width="0.1066%" height="15" fill="rgb(238,52,0)"/><text x="67.7340%" y="559.50"></text></g><g><title>__tcp_transmit_skb (59 samples, 6.29%)</title><rect x="61.4072%" y="565" width="6.2900%" height="15" fill="rgb(223,98,5)"/><text x="61.6572%" y="575.50">__tcp_tr..</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.11%)</title><rect x="67.5906%" y="549" width="0.1066%" height="15" fill="rgb(228,75,37)"/><text x="67.8406%" y="559.50"></text></g><g><title>ktime_get (1 samples, 0.11%)</title><rect x="67.6972%" y="565" width="0.1066%" height="15" fill="rgb(205,115,49)"/><text x="67.9472%" y="575.50"></text></g><g><title>read_tsc (1 samples, 0.11%)</title><rect x="67.6972%" y="549" width="0.1066%" height="15" fill="rgb(250,154,43)"/><text x="67.9472%" y="559.50"></text></g><g><title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="67.8038%" y="565" width="0.1066%" height="15" fill="rgb(226,43,29)"/><text x="68.0538%" y="575.50"></text></g><g><title>tcp_rbtree_insert (1 samples, 0.11%)</title><rect x="67.8038%" y="549" width="0.1066%" height="15" fill="rgb(249,228,39)"/><text x="68.0538%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (64 samples, 6.82%)</title><rect x="61.1940%" y="597" width="6.8230%" height="15" fill="rgb(216,79,43)"/><text x="61.4440%" y="607.50">__tcp_pus..</text></g><g><title>tcp_write_xmit (64 samples, 6.82%)</title><rect x="61.1940%" y="581" width="6.8230%" height="15" fill="rgb(228,95,12)"/><text x="61.4440%" y="591.50">tcp_write..</text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.11%)</title><rect x="67.9104%" y="565" width="0.1066%" height="15" fill="rgb(249,221,15)"/><text x="68.1604%" y="575.50"></text></g><g><title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="68.0171%" y="597" width="0.1066%" height="15" fill="rgb(233,34,13)"/><text x="68.2671%" y="607.50"></text></g><g><title>skb_page_frag_refill (1 samples, 0.11%)</title><rect x="68.0171%" y="581" width="0.1066%" height="15" fill="rgb(214,103,39)"/><text x="68.2671%" y="591.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.21%)</title><rect x="68.1237%" y="597" width="0.2132%" height="15" fill="rgb(251,126,39)"/><text x="68.3737%" y="607.50"></text></g><g><title>__alloc_skb (1 samples, 0.11%)</title><rect x="68.2303%" y="581" width="0.1066%" height="15" fill="rgb(214,216,36)"/><text x="68.4803%" y="591.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="68.2303%" y="565" width="0.1066%" height="15" fill="rgb(220,221,8)"/><text x="68.4803%" y="575.50"></text></g><g><title>__memset (1 samples, 0.11%)</title><rect x="68.2303%" y="549" width="0.1066%" height="15" fill="rgb(240,216,3)"/><text x="68.4803%" y="559.50"></text></g><g><title>skb_do_copy_data_nocache (3 samples, 0.32%)</title><rect x="68.3369%" y="597" width="0.3198%" height="15" fill="rgb(232,218,17)"/><text x="68.5869%" y="607.50"></text></g><g><title>_copy_from_iter_full (2 samples, 0.21%)</title><rect x="68.4435%" y="581" width="0.2132%" height="15" fill="rgb(229,163,45)"/><text x="68.6935%" y="591.50"></text></g><g><title>iov_iter_advance (1 samples, 0.11%)</title><rect x="68.5501%" y="565" width="0.1066%" height="15" fill="rgb(231,110,42)"/><text x="68.8001%" y="575.50"></text></g><g><title>skb_entail (1 samples, 0.11%)</title><rect x="68.6567%" y="597" width="0.1066%" height="15" fill="rgb(208,170,48)"/><text x="68.9067%" y="607.50"></text></g><g><title>sock_sendmsg (82 samples, 8.74%)</title><rect x="60.2345%" y="645" width="8.7420%" height="15" fill="rgb(239,116,25)"/><text x="60.4845%" y="655.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (82 samples, 8.74%)</title><rect x="60.2345%" y="629" width="8.7420%" height="15" fill="rgb(219,200,50)"/><text x="60.4845%" y="639.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (77 samples, 8.21%)</title><rect x="60.7676%" y="613" width="8.2090%" height="15" fill="rgb(245,200,0)"/><text x="61.0176%" y="623.50">tcp_sendmsg..</text></g><g><title>tcp_send_mss (2 samples, 0.21%)</title><rect x="68.7633%" y="597" width="0.2132%" height="15" fill="rgb(245,119,33)"/><text x="69.0133%" y="607.50"></text></g><g><title>tcp_current_mss (1 samples, 0.11%)</title><rect x="68.8699%" y="581" width="0.1066%" height="15" fill="rgb(231,125,12)"/><text x="69.1199%" y="591.50"></text></g><g><title>do_syscall_64 (86 samples, 9.17%)</title><rect x="60.0213%" y="693" width="9.1684%" height="15" fill="rgb(216,96,41)"/><text x="60.2713%" y="703.50">do_syscall_64</text></g><g><title>__x64_sys_sendto (86 samples, 9.17%)</title><rect x="60.0213%" y="677" width="9.1684%" height="15" fill="rgb(248,43,45)"/><text x="60.2713%" y="687.50">__x64_sys_sen..</text></g><g><title>__sys_sendto (86 samples, 9.17%)</title><rect x="60.0213%" y="661" width="9.1684%" height="15" fill="rgb(217,222,7)"/><text x="60.2713%" y="671.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (2 samples, 0.21%)</title><rect x="68.9765%" y="645" width="0.2132%" height="15" fill="rgb(233,28,6)"/><text x="69.2265%" y="655.50"></text></g><g><title>__fget_light (2 samples, 0.21%)</title><rect x="68.9765%" y="629" width="0.2132%" height="15" fill="rgb(231,218,15)"/><text x="69.2265%" y="639.50"></text></g><g><title>__fget_files (1 samples, 0.11%)</title><rect x="69.0832%" y="613" width="0.1066%" height="15" fill="rgb(226,171,48)"/><text x="69.3332%" y="623.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="69.0832%" y="597" width="0.1066%" height="15" fill="rgb(235,201,9)"/><text x="69.3332%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (92 samples, 9.81%)</title><rect x="59.9147%" y="709" width="9.8081%" height="15" fill="rgb(217,80,15)"/><text x="60.1647%" y="719.50">entry_SYSCALL_..</text></g><g><title>prepare_exit_to_usermode (5 samples, 0.53%)</title><rect x="69.1898%" y="693" width="0.5330%" height="15" fill="rgb(219,152,8)"/><text x="69.4398%" y="703.50"></text></g><g><title>decor::Shim::run_on_tcp (374 samples, 39.87%)</title><rect x="30.0640%" y="805" width="39.8721%" height="15" fill="rgb(243,107,38)"/><text x="30.3140%" y="815.50">decor::Shim::run_on_tcp</text></g><g><title>msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on (374 samples, 39.87%)</title><rect x="30.0640%" y="789" width="39.8721%" height="15" fill="rgb(231,17,5)"/><text x="30.3140%" y="799.50">msql_srv::MysqlIntermediary&lt;B,R,W&gt;::run_on</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (95 samples, 10.13%)</title><rect x="59.8081%" y="773" width="10.1279%" height="15" fill="rgb(209,25,54)"/><text x="60.0581%" y="783.50">std::io::buffer..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (94 samples, 10.02%)</title><rect x="59.9147%" y="757" width="10.0213%" height="15" fill="rgb(219,0,2)"/><text x="60.1647%" y="767.50">&lt;std::net::tcp..</text></g><g><title>std::sys_common::net::TcpStream::write (94 samples, 10.02%)</title><rect x="59.9147%" y="741" width="10.0213%" height="15" fill="rgb(246,9,5)"/><text x="60.1647%" y="751.50">std::sys_commo..</text></g><g><title>__libc_send (94 samples, 10.02%)</title><rect x="59.9147%" y="725" width="10.0213%" height="15" fill="rgb(226,159,4)"/><text x="60.1647%" y="735.50">__libc_send</text></g><g><title>syscall_return_via_sysret (2 samples, 0.21%)</title><rect x="69.7228%" y="709" width="0.2132%" height="15" fill="rgb(219,175,34)"/><text x="69.9728%" y="719.50"></text></g><g><title>__GI___clone (375 samples, 39.98%)</title><rect x="30.0640%" y="917" width="39.9787%" height="15" fill="rgb(236,10,46)"/><text x="30.3140%" y="927.50">__GI___clone</text></g><g><title>start_thread (375 samples, 39.98%)</title><rect x="30.0640%" y="901" width="39.9787%" height="15" fill="rgb(240,211,16)"/><text x="30.3140%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (375 samples, 39.98%)</title><rect x="30.0640%" y="885" width="39.9787%" height="15" fill="rgb(205,3,43)"/><text x="30.3140%" y="895.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (375 samples, 39.98%)</title><rect x="30.0640%" y="869" width="39.9787%" height="15" fill="rgb(245,7,22)"/><text x="30.3140%" y="879.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_on..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (375 samples, 39.98%)</title><rect x="30.0640%" y="853" width="39.9787%" height="15" fill="rgb(239,132,32)"/><text x="30.3140%" y="863.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_on..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (375 samples, 39.98%)</title><rect x="30.0640%" y="837" width="39.9787%" height="15" fill="rgb(228,202,34)"/><text x="30.3140%" y="847.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (375 samples, 39.98%)</title><rect x="30.0640%" y="821" width="39.9787%" height="15" fill="rgb(254,200,22)"/><text x="30.3140%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mysql::conn::Conn::new (1 samples, 0.11%)</title><rect x="69.9360%" y="805" width="0.1066%" height="15" fill="rgb(219,10,39)"/><text x="70.1860%" y="815.50"></text></g><g><title>mysql::conn::opts::from_url (1 samples, 0.11%)</title><rect x="69.9360%" y="789" width="0.1066%" height="15" fill="rgb(226,210,39)"/><text x="70.1860%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="69.9360%" y="773" width="0.1066%" height="15" fill="rgb(208,219,16)"/><text x="70.1860%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="69.9360%" y="757" width="0.1066%" height="15" fill="rgb(216,158,51)"/><text x="70.1860%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="69.9360%" y="741" width="0.1066%" height="15" fill="rgb(233,14,44)"/><text x="70.1860%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="69.9360%" y="725" width="0.1066%" height="15" fill="rgb(237,97,39)"/><text x="70.1860%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="70.0426%" y="917" width="0.1066%" height="15" fill="rgb(218,198,43)"/><text x="70.2926%" y="927.50"></text></g><g><title>&lt;mysql::conn::query_result::Text as mysql::conn::query_result::Protocol&gt;::next (1 samples, 0.11%)</title><rect x="70.1493%" y="725" width="0.1066%" height="15" fill="rgb(231,104,20)"/><text x="70.3993%" y="735.50"></text></g><g><title>&lt;mysql::conn::query_result::QueryResult&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="70.1493%" y="741" width="0.2132%" height="15" fill="rgb(254,36,13)"/><text x="70.3993%" y="751.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="70.2559%" y="725" width="0.1066%" height="15" fill="rgb(248,14,50)"/><text x="70.5059%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="70.2559%" y="709" width="0.1066%" height="15" fill="rgb(217,107,29)"/><text x="70.5059%" y="719.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.11%)</title><rect x="70.3625%" y="741" width="0.1066%" height="15" fill="rgb(251,169,33)"/><text x="70.6125%" y="751.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.11%)</title><rect x="70.3625%" y="725" width="0.1066%" height="15" fill="rgb(217,108,32)"/><text x="70.6125%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="70.3625%" y="709" width="0.1066%" height="15" fill="rgb(219,66,42)"/><text x="70.6125%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="70.3625%" y="693" width="0.1066%" height="15" fill="rgb(206,180,7)"/><text x="70.6125%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="70.3625%" y="677" width="0.1066%" height="15" fill="rgb(208,226,31)"/><text x="70.6125%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="70.3625%" y="661" width="0.1066%" height="15" fill="rgb(218,26,49)"/><text x="70.6125%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.11%)</title><rect x="70.3625%" y="645" width="0.1066%" height="15" fill="rgb(233,197,48)"/><text x="70.6125%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="70.3625%" y="629" width="0.1066%" height="15" fill="rgb(252,181,51)"/><text x="70.6125%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="70.3625%" y="613" width="0.1066%" height="15" fill="rgb(253,90,19)"/><text x="70.6125%" y="623.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="70.3625%" y="597" width="0.1066%" height="15" fill="rgb(215,171,30)"/><text x="70.6125%" y="607.50"></text></g><g><title>[libhwloc.so.15.2.0] (2 samples, 0.21%)</title><rect x="70.5757%" y="645" width="0.2132%" height="15" fill="rgb(214,222,9)"/><text x="70.8257%" y="655.50"></text></g><g><title>[libhwloc.so.15.2.0] (4 samples, 0.43%)</title><rect x="70.4691%" y="661" width="0.4264%" height="15" fill="rgb(223,3,22)"/><text x="70.7191%" y="671.50"></text></g><g><title>hwloc_bitmap_intersects (1 samples, 0.11%)</title><rect x="70.7889%" y="645" width="0.1066%" height="15" fill="rgb(225,196,46)"/><text x="71.0389%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (229 samples, 24.41%)</title><rect x="71.0021%" y="437" width="24.4136%" height="15" fill="rgb(209,110,37)"/><text x="71.2521%" y="447.50">__intel_pmu_enable_all.constprop.0</text></g><g><title>native_write_msr (229 samples, 24.41%)</title><rect x="71.0021%" y="421" width="24.4136%" height="15" fill="rgb(249,89,12)"/><text x="71.2521%" y="431.50">native_write_msr</text></g><g><title>__set_cpus_allowed_ptr (232 samples, 24.73%)</title><rect x="70.8955%" y="565" width="24.7335%" height="15" fill="rgb(226,27,33)"/><text x="71.1455%" y="575.50">__set_cpus_allowed_ptr</text></g><g><title>stop_one_cpu (232 samples, 24.73%)</title><rect x="70.8955%" y="549" width="24.7335%" height="15" fill="rgb(213,82,22)"/><text x="71.1455%" y="559.50">stop_one_cpu</text></g><g><title>cpu_stop_queue_work (232 samples, 24.73%)</title><rect x="70.8955%" y="533" width="24.7335%" height="15" fill="rgb(248,140,0)"/><text x="71.1455%" y="543.50">cpu_stop_queue_work</text></g><g><title>preempt_schedule_thunk (232 samples, 24.73%)</title><rect x="70.8955%" y="517" width="24.7335%" height="15" fill="rgb(228,106,3)"/><text x="71.1455%" y="527.50">preempt_schedule_thunk</text></g><g><title>preempt_schedule_common (232 samples, 24.73%)</title><rect x="70.8955%" y="501" width="24.7335%" height="15" fill="rgb(209,23,37)"/><text x="71.1455%" y="511.50">preempt_schedule_common</text></g><g><title>__schedule (232 samples, 24.73%)</title><rect x="70.8955%" y="485" width="24.7335%" height="15" fill="rgb(241,93,50)"/><text x="71.1455%" y="495.50">__schedule</text></g><g><title>finish_task_switch (232 samples, 24.73%)</title><rect x="70.8955%" y="469" width="24.7335%" height="15" fill="rgb(253,46,43)"/><text x="71.1455%" y="479.50">finish_task_switch</text></g><g><title>__perf_event_task_sched_in (231 samples, 24.63%)</title><rect x="71.0021%" y="453" width="24.6269%" height="15" fill="rgb(226,206,43)"/><text x="71.2521%" y="463.50">__perf_event_task_sched_in</text></g><g><title>_raw_spin_unlock (2 samples, 0.21%)</title><rect x="95.4158%" y="437" width="0.2132%" height="15" fill="rgb(217,54,7)"/><text x="95.6658%" y="447.50"></text></g><g><title>preempt_count_sub (1 samples, 0.11%)</title><rect x="95.5224%" y="421" width="0.1066%" height="15" fill="rgb(223,5,52)"/><text x="95.7724%" y="431.50"></text></g><g><title>do_syscall_64 (233 samples, 24.84%)</title><rect x="70.8955%" y="613" width="24.8401%" height="15" fill="rgb(206,52,46)"/><text x="71.1455%" y="623.50">do_syscall_64</text></g><g><title>__x64_sys_sched_setaffinity (233 samples, 24.84%)</title><rect x="70.8955%" y="597" width="24.8401%" height="15" fill="rgb(253,136,11)"/><text x="71.1455%" y="607.50">__x64_sys_sched_setaffinity</text></g><g><title>sched_setaffinity (233 samples, 24.84%)</title><rect x="70.8955%" y="581" width="24.8401%" height="15" fill="rgb(208,106,33)"/><text x="71.1455%" y="591.50">sched_setaffinity</text></g><g><title>cpuset_cpus_allowed (1 samples, 0.11%)</title><rect x="95.6290%" y="565" width="0.1066%" height="15" fill="rgb(206,54,4)"/><text x="95.8790%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="95.6290%" y="549" width="0.1066%" height="15" fill="rgb(213,3,15)"/><text x="95.8790%" y="559.50"></text></g><g><title>preempt_count_add (1 samples, 0.11%)</title><rect x="95.6290%" y="533" width="0.1066%" height="15" fill="rgb(252,211,39)"/><text x="95.8790%" y="543.50"></text></g><g><title>hwloc::Topology::new (238 samples, 25.37%)</title><rect x="70.4691%" y="741" width="25.3731%" height="15" fill="rgb(223,6,36)"/><text x="70.7191%" y="751.50">hwloc::Topology::new</text></g><g><title>hwloc_topology_load (238 samples, 25.37%)</title><rect x="70.4691%" y="725" width="25.3731%" height="15" fill="rgb(252,169,45)"/><text x="70.7191%" y="735.50">hwloc_topology_load</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 25.37%)</title><rect x="70.4691%" y="709" width="25.3731%" height="15" fill="rgb(212,48,26)"/><text x="70.7191%" y="719.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 25.37%)</title><rect x="70.4691%" y="693" width="25.3731%" height="15" fill="rgb(251,102,48)"/><text x="70.7191%" y="703.50">[libhwloc.so.15.2.0]</text></g><g><title>[libhwloc.so.15.2.0] (238 samples, 25.37%)</title><rect x="70.4691%" y="677" width="25.3731%" height="15" fill="rgb(243,208,16)"/><text x="70.7191%" y="687.50">[libhwloc.so.15.2.0]</text></g><g><title>hwloc_linux_set_tid_cpubind (234 samples, 24.95%)</title><rect x="70.8955%" y="661" width="24.9467%" height="15" fill="rgb(219,96,24)"/><text x="71.1455%" y="671.50">hwloc_linux_set_tid_cpubind</text></g><g><title>__GI___sched_setaffinity_new (234 samples, 24.95%)</title><rect x="70.8955%" y="645" width="24.9467%" height="15" fill="rgb(219,33,29)"/><text x="71.1455%" y="655.50">__GI___sched_setaffinity_new</text></g><g><title>entry_SYSCALL_64 (234 samples, 24.95%)</title><rect x="70.8955%" y="629" width="24.9467%" height="15" fill="rgb(223,176,5)"/><text x="71.1455%" y="639.50">entry_SYSCALL_64</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="95.7356%" y="613" width="0.1066%" height="15" fill="rgb(228,140,14)"/><text x="95.9856%" y="623.50"></text></g><g><title>switch_fpu_return (1 samples, 0.11%)</title><rect x="95.7356%" y="597" width="0.1066%" height="15" fill="rgb(217,179,31)"/><text x="95.9856%" y="607.50"></text></g><g><title>copy_kernel_to_fpregs (1 samples, 0.11%)</title><rect x="95.7356%" y="581" width="0.1066%" height="15" fill="rgb(230,9,30)"/><text x="95.9856%" y="591.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="95.8422%" y="645" width="0.1066%" height="15" fill="rgb(230,136,20)"/><text x="96.0922%" y="655.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.32%)</title><rect x="96.3753%" y="149" width="0.3198%" height="15" fill="rgb(215,210,22)"/><text x="96.6253%" y="159.50"></text></g><g><title>enqueue_entity (3 samples, 0.32%)</title><rect x="96.3753%" y="133" width="0.3198%" height="15" fill="rgb(218,43,5)"/><text x="96.6253%" y="143.50"></text></g><g><title>sock_def_readable (4 samples, 0.43%)</title><rect x="96.3753%" y="213" width="0.4264%" height="15" fill="rgb(216,11,5)"/><text x="96.6253%" y="223.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.43%)</title><rect x="96.3753%" y="197" width="0.4264%" height="15" fill="rgb(209,82,29)"/><text x="96.6253%" y="207.50"></text></g><g><title>__wake_up_common (4 samples, 0.43%)</title><rect x="96.3753%" y="181" width="0.4264%" height="15" fill="rgb(244,115,12)"/><text x="96.6253%" y="191.50"></text></g><g><title>try_to_wake_up (4 samples, 0.43%)</title><rect x="96.3753%" y="165" width="0.4264%" height="15" fill="rgb(222,82,18)"/><text x="96.6253%" y="175.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.11%)</title><rect x="96.6951%" y="149" width="0.1066%" height="15" fill="rgb(249,227,8)"/><text x="96.9451%" y="159.50"></text></g><g><title>check_preempt_curr (1 samples, 0.11%)</title><rect x="96.6951%" y="133" width="0.1066%" height="15" fill="rgb(253,141,45)"/><text x="96.9451%" y="143.50"></text></g><g><title>kfree (1 samples, 0.11%)</title><rect x="96.9083%" y="181" width="0.1066%" height="15" fill="rgb(234,184,4)"/><text x="97.1583%" y="191.50"></text></g><g><title>__kfree_skb (3 samples, 0.32%)</title><rect x="96.9083%" y="197" width="0.3198%" height="15" fill="rgb(218,194,23)"/><text x="97.1583%" y="207.50"></text></g><g><title>skb_release_data (2 samples, 0.21%)</title><rect x="97.0149%" y="181" width="0.2132%" height="15" fill="rgb(235,66,41)"/><text x="97.2649%" y="191.50"></text></g><g><title>kmem_cache_free (1 samples, 0.11%)</title><rect x="97.2281%" y="197" width="0.1066%" height="15" fill="rgb(245,217,1)"/><text x="97.4781%" y="207.50"></text></g><g><title>__slab_free (1 samples, 0.11%)</title><rect x="97.2281%" y="181" width="0.1066%" height="15" fill="rgb(229,91,1)"/><text x="97.4781%" y="191.50"></text></g><g><title>tcp_ack (6 samples, 0.64%)</title><rect x="96.8017%" y="213" width="0.6397%" height="15" fill="rgb(207,101,30)"/><text x="97.0517%" y="223.50"></text></g><g><title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="97.3348%" y="197" width="0.1066%" height="15" fill="rgb(223,82,49)"/><text x="97.5848%" y="207.50"></text></g><g><title>tcp_data_queue (1 samples, 0.11%)</title><rect x="97.4414%" y="213" width="0.1066%" height="15" fill="rgb(218,167,17)"/><text x="97.6914%" y="223.50"></text></g><g><title>sock_def_readable (1 samples, 0.11%)</title><rect x="97.4414%" y="197" width="0.1066%" height="15" fill="rgb(208,103,14)"/><text x="97.6914%" y="207.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.11%)</title><rect x="97.4414%" y="181" width="0.1066%" height="15" fill="rgb(238,20,8)"/><text x="97.6914%" y="191.50"></text></g><g><title>__wake_up_common (1 samples, 0.11%)</title><rect x="97.4414%" y="165" width="0.1066%" height="15" fill="rgb(218,80,54)"/><text x="97.6914%" y="175.50"></text></g><g><title>ip_finish_output2 (13 samples, 1.39%)</title><rect x="96.2687%" y="453" width="1.3859%" height="15" fill="rgb(240,144,17)"/><text x="96.5187%" y="463.50"></text></g><g><title>__local_bh_enable_ip (13 samples, 1.39%)</title><rect x="96.2687%" y="437" width="1.3859%" height="15" fill="rgb(245,27,50)"/><text x="96.5187%" y="447.50"></text></g><g><title>do_softirq (13 samples, 1.39%)</title><rect x="96.2687%" y="421" width="1.3859%" height="15" fill="rgb(251,51,7)"/><text x="96.5187%" y="431.50"></text></g><g><title>do_softirq_own_stack (13 samples, 1.39%)</title><rect x="96.2687%" y="405" width="1.3859%" height="15" fill="rgb(245,217,29)"/><text x="96.5187%" y="415.50"></text></g><g><title>__do_softirq (13 samples, 1.39%)</title><rect x="96.2687%" y="389" width="1.3859%" height="15" fill="rgb(221,176,29)"/><text x="96.5187%" y="399.50"></text></g><g><title>net_rx_action (13 samples, 1.39%)</title><rect x="96.2687%" y="373" width="1.3859%" height="15" fill="rgb(212,180,24)"/><text x="96.5187%" y="383.50"></text></g><g><title>process_backlog (13 samples, 1.39%)</title><rect x="96.2687%" y="357" width="1.3859%" height="15" fill="rgb(254,24,2)"/><text x="96.5187%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (12 samples, 1.28%)</title><rect x="96.3753%" y="341" width="1.2793%" height="15" fill="rgb(230,100,2)"/><text x="96.6253%" y="351.50"></text></g><g><title>ip_rcv (12 samples, 1.28%)</title><rect x="96.3753%" y="325" width="1.2793%" height="15" fill="rgb(219,142,25)"/><text x="96.6253%" y="335.50"></text></g><g><title>ip_local_deliver (12 samples, 1.28%)</title><rect x="96.3753%" y="309" width="1.2793%" height="15" fill="rgb(240,73,43)"/><text x="96.6253%" y="319.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 1.28%)</title><rect x="96.3753%" y="293" width="1.2793%" height="15" fill="rgb(214,114,15)"/><text x="96.6253%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (12 samples, 1.28%)</title><rect x="96.3753%" y="277" width="1.2793%" height="15" fill="rgb(207,130,4)"/><text x="96.6253%" y="287.50"></text></g><g><title>tcp_v4_rcv (12 samples, 1.28%)</title><rect x="96.3753%" y="261" width="1.2793%" height="15" fill="rgb(221,25,40)"/><text x="96.6253%" y="271.50"></text></g><g><title>tcp_v4_do_rcv (12 samples, 1.28%)</title><rect x="96.3753%" y="245" width="1.2793%" height="15" fill="rgb(241,184,7)"/><text x="96.6253%" y="255.50"></text></g><g><title>tcp_rcv_established (12 samples, 1.28%)</title><rect x="96.3753%" y="229" width="1.2793%" height="15" fill="rgb(235,159,4)"/><text x="96.6253%" y="239.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.11%)</title><rect x="97.5480%" y="213" width="0.1066%" height="15" fill="rgb(214,87,48)"/><text x="97.7980%" y="223.50"></text></g><g><title>__ip_queue_xmit (15 samples, 1.60%)</title><rect x="96.1620%" y="485" width="1.5991%" height="15" fill="rgb(246,198,24)"/><text x="96.4120%" y="495.50"></text></g><g><title>ip_output (14 samples, 1.49%)</title><rect x="96.2687%" y="469" width="1.4925%" height="15" fill="rgb(209,66,40)"/><text x="96.5187%" y="479.50"></text></g><g><title>ip_finish_output (1 samples, 0.11%)</title><rect x="97.6546%" y="453" width="0.1066%" height="15" fill="rgb(233,147,39)"/><text x="97.9046%" y="463.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="97.6546%" y="437" width="0.1066%" height="15" fill="rgb(231,145,52)"/><text x="97.9046%" y="447.50"></text></g><g><title>do_syscall_64 (18 samples, 1.92%)</title><rect x="95.9488%" y="629" width="1.9190%" height="15" fill="rgb(206,20,26)"/><text x="96.1988%" y="639.50">d..</text></g><g><title>__x64_sys_sendto (18 samples, 1.92%)</title><rect x="95.9488%" y="613" width="1.9190%" height="15" fill="rgb(238,220,4)"/><text x="96.1988%" y="623.50">_..</text></g><g><title>__sys_sendto (18 samples, 1.92%)</title><rect x="95.9488%" y="597" width="1.9190%" height="15" fill="rgb(252,195,42)"/><text x="96.1988%" y="607.50">_..</text></g><g><title>sock_sendmsg (18 samples, 1.92%)</title><rect x="95.9488%" y="581" width="1.9190%" height="15" fill="rgb(209,10,6)"/><text x="96.1988%" y="591.50">s..</text></g><g><title>tcp_sendmsg (18 samples, 1.92%)</title><rect x="95.9488%" y="565" width="1.9190%" height="15" fill="rgb(229,3,52)"/><text x="96.1988%" y="575.50">t..</text></g><g><title>tcp_sendmsg_locked (18 samples, 1.92%)</title><rect x="95.9488%" y="549" width="1.9190%" height="15" fill="rgb(253,49,37)"/><text x="96.1988%" y="559.50">t..</text></g><g><title>__tcp_push_pending_frames (17 samples, 1.81%)</title><rect x="96.0554%" y="533" width="1.8124%" height="15" fill="rgb(240,103,49)"/><text x="96.3054%" y="543.50">_..</text></g><g><title>tcp_write_xmit (17 samples, 1.81%)</title><rect x="96.0554%" y="517" width="1.8124%" height="15" fill="rgb(250,182,30)"/><text x="96.3054%" y="527.50">t..</text></g><g><title>__tcp_transmit_skb (17 samples, 1.81%)</title><rect x="96.0554%" y="501" width="1.8124%" height="15" fill="rgb(248,8,30)"/><text x="96.3054%" y="511.50">_..</text></g><g><title>tcp_v4_send_check (1 samples, 0.11%)</title><rect x="97.7612%" y="485" width="0.1066%" height="15" fill="rgb(237,120,30)"/><text x="98.0112%" y="495.50"></text></g><g><title>mysql::conn::Conn::_query (20 samples, 2.13%)</title><rect x="95.8422%" y="741" width="2.1322%" height="15" fill="rgb(221,146,34)"/><text x="96.0922%" y="751.50">m..</text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (20 samples, 2.13%)</title><rect x="95.8422%" y="725" width="2.1322%" height="15" fill="rgb(242,55,13)"/><text x="96.0922%" y="735.50">m..</text></g><g><title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (20 samples, 2.13%)</title><rect x="95.8422%" y="709" width="2.1322%" height="15" fill="rgb(242,112,31)"/><text x="96.0922%" y="719.50">s..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Write&gt;::write (20 samples, 2.13%)</title><rect x="95.8422%" y="693" width="2.1322%" height="15" fill="rgb(249,192,27)"/><text x="96.0922%" y="703.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (20 samples, 2.13%)</title><rect x="95.8422%" y="677" width="2.1322%" height="15" fill="rgb(208,204,44)"/><text x="96.0922%" y="687.50">s..</text></g><g><title>__libc_send (20 samples, 2.13%)</title><rect x="95.8422%" y="661" width="2.1322%" height="15" fill="rgb(208,93,54)"/><text x="96.0922%" y="671.50">_..</text></g><g><title>entry_SYSCALL_64 (19 samples, 2.03%)</title><rect x="95.9488%" y="645" width="2.0256%" height="15" fill="rgb(242,1,31)"/><text x="96.1988%" y="655.50">e..</text></g><g><title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="97.8678%" y="629" width="0.1066%" height="15" fill="rgb(241,83,25)"/><text x="98.1178%" y="639.50"></text></g><g><title>__libc_start_main (262 samples, 27.93%)</title><rect x="70.1493%" y="901" width="27.9318%" height="15" fill="rgb(205,169,50)"/><text x="70.3993%" y="911.50">__libc_start_main</text></g><g><title>main (262 samples, 27.93%)</title><rect x="70.1493%" y="885" width="27.9318%" height="15" fill="rgb(239,186,37)"/><text x="70.3993%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (262 samples, 27.93%)</title><rect x="70.1493%" y="869" width="27.9318%" height="15" fill="rgb(205,221,10)"/><text x="70.3993%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (262 samples, 27.93%)</title><rect x="70.1493%" y="853" width="27.9318%" height="15" fill="rgb(218,196,15)"/><text x="70.3993%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (262 samples, 27.93%)</title><rect x="70.1493%" y="837" width="27.9318%" height="15" fill="rgb(218,196,35)"/><text x="70.3993%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (262 samples, 27.93%)</title><rect x="70.1493%" y="821" width="27.9318%" height="15" fill="rgb(233,63,24)"/><text x="70.3993%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (262 samples, 27.93%)</title><rect x="70.1493%" y="805" width="27.9318%" height="15" fill="rgb(225,8,4)"/><text x="70.3993%" y="815.50">core::ops::function::impls::&lt;impl core::ops::..</text></g><g><title>std::rt::lang_start::_{{closure}} (262 samples, 27.93%)</title><rect x="70.1493%" y="789" width="27.9318%" height="15" fill="rgb(234,105,35)"/><text x="70.3993%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (262 samples, 27.93%)</title><rect x="70.1493%" y="773" width="27.9318%" height="15" fill="rgb(236,21,32)"/><text x="70.3993%" y="783.50">std::sys_common::backtrace::__rust_begin_shor..</text></g><g><title>lobsters::main (262 samples, 27.93%)</title><rect x="70.1493%" y="757" width="27.9318%" height="15" fill="rgb(228,109,6)"/><text x="70.3993%" y="767.50">lobsters::main</text></g><g><title>std::net::each_addr (1 samples, 0.11%)</title><rect x="97.9744%" y="741" width="0.1066%" height="15" fill="rgb(229,215,31)"/><text x="98.2244%" y="751.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (1 samples, 0.11%)</title><rect x="97.9744%" y="725" width="0.1066%" height="15" fill="rgb(221,52,54)"/><text x="98.2244%" y="735.50"></text></g><g><title>__bind (1 samples, 0.11%)</title><rect x="97.9744%" y="709" width="0.1066%" height="15" fill="rgb(252,129,43)"/><text x="98.2244%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="97.9744%" y="693" width="0.1066%" height="15" fill="rgb(248,183,27)"/><text x="98.2244%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="97.9744%" y="677" width="0.1066%" height="15" fill="rgb(250,0,22)"/><text x="98.2244%" y="687.50"></text></g><g><title>__x64_sys_bind (1 samples, 0.11%)</title><rect x="97.9744%" y="661" width="0.1066%" height="15" fill="rgb(213,166,10)"/><text x="98.2244%" y="671.50"></text></g><g><title>_start (263 samples, 28.04%)</title><rect x="70.1493%" y="917" width="28.0384%" height="15" fill="rgb(207,163,36)"/><text x="70.3993%" y="927.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="98.0810%" y="901" width="0.1066%" height="15" fill="rgb(208,122,22)"/><text x="98.3310%" y="911.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="98.0810%" y="885" width="0.1066%" height="15" fill="rgb(207,104,49)"/><text x="98.3310%" y="895.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="98.0810%" y="869" width="0.1066%" height="15" fill="rgb(248,211,50)"/><text x="98.3310%" y="879.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="98.0810%" y="853" width="0.1066%" height="15" fill="rgb(217,13,45)"/><text x="98.3310%" y="863.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="98.0810%" y="837" width="0.1066%" height="15" fill="rgb(211,216,49)"/><text x="98.3310%" y="847.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="98.0810%" y="821" width="0.1066%" height="15" fill="rgb(221,58,53)"/><text x="98.3310%" y="831.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="98.0810%" y="805" width="0.1066%" height="15" fill="rgb(220,112,41)"/><text x="98.3310%" y="815.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="98.0810%" y="789" width="0.1066%" height="15" fill="rgb(236,38,28)"/><text x="98.3310%" y="799.50"></text></g><g><title>__mmap (1 samples, 0.11%)</title><rect x="98.0810%" y="773" width="0.1066%" height="15" fill="rgb(227,195,22)"/><text x="98.3310%" y="783.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.11%)</title><rect x="98.0810%" y="757" width="0.1066%" height="15" fill="rgb(214,55,33)"/><text x="98.3310%" y="767.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.0810%" y="741" width="0.1066%" height="15" fill="rgb(248,80,13)"/><text x="98.3310%" y="751.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.0810%" y="725" width="0.1066%" height="15" fill="rgb(238,52,6)"/><text x="98.3310%" y="735.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.11%)</title><rect x="98.0810%" y="709" width="0.1066%" height="15" fill="rgb(224,198,47)"/><text x="98.3310%" y="719.50"></text></g><g><title>do_mmap (1 samples, 0.11%)</title><rect x="98.0810%" y="693" width="0.1066%" height="15" fill="rgb(233,171,20)"/><text x="98.3310%" y="703.50"></text></g><g><title>mmap_region (1 samples, 0.11%)</title><rect x="98.0810%" y="677" width="0.1066%" height="15" fill="rgb(241,30,25)"/><text x="98.3310%" y="687.50"></text></g><g><title>__do_munmap (1 samples, 0.11%)</title><rect x="98.0810%" y="661" width="0.1066%" height="15" fill="rgb(207,171,38)"/><text x="98.3310%" y="671.50"></text></g><g><title>__split_vma (1 samples, 0.11%)</title><rect x="98.0810%" y="645" width="0.1066%" height="15" fill="rgb(234,70,1)"/><text x="98.3310%" y="655.50"></text></g><g><title>__vma_adjust (1 samples, 0.11%)</title><rect x="98.0810%" y="629" width="0.1066%" height="15" fill="rgb(232,178,18)"/><text x="98.3310%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="98.1876%" y="917" width="0.2132%" height="15" fill="rgb(241,78,40)"/><text x="98.4376%" y="927.50"></text></g><g><title>anon.53b8a2712578808cb07820b0397807e6.0.llvm.12175399877529257542 (1 samples, 0.11%)</title><rect x="98.4009%" y="917" width="0.1066%" height="15" fill="rgb(222,35,25)"/><text x="98.6509%" y="927.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="98.4009%" y="901" width="0.1066%" height="15" fill="rgb(207,92,16)"/><text x="98.6509%" y="911.50"></text></g><g><title>anon.5d78f01d0c76bb6b8aa47fe516d3530c.58.llvm.16501999531583085355 (2 samples, 0.21%)</title><rect x="98.5075%" y="917" width="0.2132%" height="15" fill="rgb(216,59,51)"/><text x="98.7575%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="98.5075%" y="901" width="0.2132%" height="15" fill="rgb(213,80,28)"/><text x="98.7575%" y="911.50"></text></g><g><title>entry_SYSCALL_64 (3 samples, 0.32%)</title><rect x="98.7207%" y="917" width="0.3198%" height="15" fill="rgb(220,93,7)"/><text x="98.9707%" y="927.50"></text></g><g><title>do_syscall_64 (1 samples, 0.11%)</title><rect x="98.9339%" y="901" width="0.1066%" height="15" fill="rgb(225,24,44)"/><text x="99.1839%" y="911.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.11%)</title><rect x="98.9339%" y="885" width="0.1066%" height="15" fill="rgb(243,74,40)"/><text x="99.1839%" y="895.50"></text></g><g><title>do_execve (1 samples, 0.11%)</title><rect x="98.9339%" y="869" width="0.1066%" height="15" fill="rgb(228,39,7)"/><text x="99.1839%" y="879.50"></text></g><g><title>__do_execve_file (1 samples, 0.11%)</title><rect x="98.9339%" y="853" width="0.1066%" height="15" fill="rgb(227,79,8)"/><text x="99.1839%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (1 samples, 0.11%)</title><rect x="98.9339%" y="837" width="0.1066%" height="15" fill="rgb(236,58,11)"/><text x="99.1839%" y="847.50"></text></g><g><title>load_elf_binary (1 samples, 0.11%)</title><rect x="98.9339%" y="821" width="0.1066%" height="15" fill="rgb(249,63,35)"/><text x="99.1839%" y="831.50"></text></g><g><title>__clear_user (1 samples, 0.11%)</title><rect x="98.9339%" y="805" width="0.1066%" height="15" fill="rgb(252,114,16)"/><text x="99.1839%" y="815.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="98.9339%" y="789" width="0.1066%" height="15" fill="rgb(254,151,24)"/><text x="99.1839%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.11%)</title><rect x="98.9339%" y="773" width="0.1066%" height="15" fill="rgb(253,54,39)"/><text x="99.1839%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.11%)</title><rect x="98.9339%" y="757" width="0.1066%" height="15" fill="rgb(243,25,45)"/><text x="99.1839%" y="767.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.11%)</title><rect x="98.9339%" y="741" width="0.1066%" height="15" fill="rgb(234,134,9)"/><text x="99.1839%" y="751.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.11%)</title><rect x="98.9339%" y="725" width="0.1066%" height="15" fill="rgb(227,166,31)"/><text x="99.1839%" y="735.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.11%)</title><rect x="98.9339%" y="709" width="0.1066%" height="15" fill="rgb(245,143,41)"/><text x="99.1839%" y="719.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.11%)</title><rect x="98.9339%" y="693" width="0.1066%" height="15" fill="rgb(238,181,32)"/><text x="99.1839%" y="703.50"></text></g><g><title>prep_new_page (1 samples, 0.11%)</title><rect x="98.9339%" y="677" width="0.1066%" height="15" fill="rgb(224,113,18)"/><text x="99.1839%" y="687.50"></text></g><g><title>kernel_init_free_pages (1 samples, 0.11%)</title><rect x="98.9339%" y="661" width="0.1066%" height="15" fill="rgb(240,229,28)"/><text x="99.1839%" y="671.50"></text></g><g><title>clear_page_erms (1 samples, 0.11%)</title><rect x="98.9339%" y="645" width="0.1066%" height="15" fill="rgb(250,185,3)"/><text x="99.1839%" y="655.50"></text></g><g><title>mysql_common::proto::codec::ChunkDecoder::decode (1 samples, 0.11%)</title><rect x="99.0405%" y="917" width="0.1066%" height="15" fill="rgb(212,59,25)"/><text x="99.2905%" y="927.50"></text></g><g><title>page_fault (1 samples, 0.11%)</title><rect x="99.1471%" y="917" width="0.1066%" height="15" fill="rgb(221,87,20)"/><text x="99.3971%" y="927.50"></text></g><g><title>lobsters (932 samples, 99.36%)</title><rect x="0.0000%" y="933" width="99.3603%" height="15" fill="rgb(213,74,28)"/><text x="0.2500%" y="943.50">lobsters</text></g><g><title>syscall_return_via_sysret (1 samples, 0.11%)</title><rect x="99.2537%" y="917" width="0.1066%" height="15" fill="rgb(224,132,34)"/><text x="99.5037%" y="927.50"></text></g><g><title>all (938 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(222,101,24)"/><text x="0.2500%" y="959.50"></text></g><g><title>perf (6 samples, 0.64%)</title><rect x="99.3603%" y="933" width="0.6397%" height="15" fill="rgb(254,142,4)"/><text x="99.6103%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.64%)</title><rect x="99.3603%" y="917" width="0.6397%" height="15" fill="rgb(230,229,49)"/><text x="99.6103%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.64%)</title><rect x="99.3603%" y="901" width="0.6397%" height="15" fill="rgb(238,70,47)"/><text x="99.6103%" y="911.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.64%)</title><rect x="99.3603%" y="885" width="0.6397%" height="15" fill="rgb(231,160,17)"/><text x="99.6103%" y="895.50"></text></g><g><title>do_execve (6 samples, 0.64%)</title><rect x="99.3603%" y="869" width="0.6397%" height="15" fill="rgb(218,68,53)"/><text x="99.6103%" y="879.50"></text></g><g><title>__do_execve_file (6 samples, 0.64%)</title><rect x="99.3603%" y="853" width="0.6397%" height="15" fill="rgb(236,111,10)"/><text x="99.6103%" y="863.50"></text></g><g><title>search_binary_handler.part.0 (6 samples, 0.64%)</title><rect x="99.3603%" y="837" width="0.6397%" height="15" fill="rgb(224,34,41)"/><text x="99.6103%" y="847.50"></text></g><g><title>load_elf_binary (6 samples, 0.64%)</title><rect x="99.3603%" y="821" width="0.6397%" height="15" fill="rgb(241,118,19)"/><text x="99.6103%" y="831.50"></text></g><g><title>setup_new_exec (6 samples, 0.64%)</title><rect x="99.3603%" y="805" width="0.6397%" height="15" fill="rgb(238,129,25)"/><text x="99.6103%" y="815.50"></text></g><g><title>perf_event_exec (6 samples, 0.64%)</title><rect x="99.3603%" y="789" width="0.6397%" height="15" fill="rgb(238,22,31)"/><text x="99.6103%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (5 samples, 0.53%)</title><rect x="99.4670%" y="773" width="0.5330%" height="15" fill="rgb(222,174,48)"/><text x="99.7170%" y="783.50"></text></g><g><title>native_write_msr (5 samples, 0.53%)</title><rect x="99.4670%" y="757" width="0.5330%" height="15" fill="rgb(206,152,40)"/><text x="99.7170%" y="767.50"></text></g></svg></svg>